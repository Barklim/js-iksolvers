// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB;
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (typeof _sbrk !== 'undefined' && !_sbrk.called) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the a given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);

HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;

// === Body ===

var ASM_CONSTS = [];





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 14496;
  /* global initializers */ __ATINIT__.push();
  

/* memory initializer */ allocate([10,75,65,75,65,75,65,75,32,85,115,97,103,101,58,32,46,47,105,107,32,114,48,48,32,114,48,49,32,114,48,50,32,116,48,32,114,49,48,32,114,49,49,32,114,49,50,32,116,49,32,114,50,48,32,114,50,49,32,114,50,50,32,116,50,32,102,114,101,101,48,32,46,46,46,10,10,82,101,116,117,114,110,115,32,116,104,101,32,105,107,32,115,111,108,117,116,105,111,110,115,32,103,105,118,101,110,32,116,104,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,32,111,102,32,116,104,101,32,101,110,100,32,101,102,102,101,99,116,111,114,32,115,112,101,99,105,102,105,101,100,32,98,121,10,97,32,51,120,51,32,114,111,116,97,116,105,111,110,32,82,32,40,114,88,88,41,44,32,97,110,100,32,97,32,51,120,49,32,116,114,97,110,115,108,97,116,105,111,110,32,40,116,88,41,46,10,84,104,101,114,101,32,97,114,101,32,37,100,32,102,114,101,101,32,112,97,114,97,109,101,116,101,114,115,32,116,104,97,116,32,104,97,118,101,32,116,111,32,98,101,32,115,112,101,99,105,102,105,101,100,46,10,10,0,0,0,70,97,105,108,101,100,32,116,111,32,103,101,116,32,105,107,32,115,111,108,117,116,105,111,110,10,0,0,0,0,0,0,70,111,117,110,100,32,37,100,32,105,107,32,115,111,108,117,116,105,111,110,115,58,10,0,115,111,108,37,100,32,40,102,114,101,101,61,37,100,41,58,32,0,0,0,0,0,0,0,37,46,49,53,102,44,32,0,0,0,0,0,144,1,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,216,8,0,0,208,2,0,0,240,2,0,0,0,0,0,0,0,0,0,0,200,1,0,0,4,0,0,0,5,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,6,0,0,0,1,0,0,0,216,8,0,0,104,2,0,0,136,2,0,0,0,0,0,0,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,0,0,0,0,50,110,100,32,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,102,111,102,102,115,101,116,32,119,97,115,32,110,111,116,32,102,105,110,105,116,101,0,0,78,54,105,107,102,97,115,116,49,48,73,107,83,111,108,117,116,105,111,110,73,100,69,69,0,0,0,0,0,0,0,0,176,8,0,0,144,2,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,136,2,0,0,7,0,0,0,8,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,76,105,115,116,73,100,69,69,0,0,0,0,176,8,0,0,248,2,0,0,78,54,105,107,102,97,115,116,49,56,73,107,83,111,108,117,116,105,111,110,76,105,115,116,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,71,101,116,83,111,108,117,116,105,111,110,32,105,110,100,101,120,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,0,240,2,0,0,9,0,0,0,10,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,64,0,0,0,0,0,0,0,136,5,0,0,11,0,0,0,12,0,0,0,56,0,0,0,248,255,255,255,136,5,0,0,13,0,0,0,14,0,0,0,192,255,255,255,192,255,255,255,136,5,0,0,15,0,0,0,16,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,208,18,0,0,17,0,0,0,18,0,0,0,192,255,255,255,192,255,255,255,208,18,0,0,19,0,0,0,20,0,0,0,0,0,0,0,48,5,0,0,21,0,0,0,22,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,6,0,0,0,7,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,108,3,0,0,212,4,0,0,172,3,0,0,192,3,0,0,20,5,0,0,40,5,0,0,252,4,0,0,232,4,0,0,148,3,0,0,128,3,0,0,105,107,102,97,115,116,32,101,120,99,101,112,116,105,111,110,58,32,0,0,0,0,0,0,46,47,115,111,108,118,101,114,115,47,115,99,104,117,110,107,45,108,119,97,51,45,100,117,97,108,45,108,95,97,114,109,95,110,111,103,114,105,112,112,101,114,46,116,109,112,46,99,112,112,0,0,0,0,0,0,58,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,73,75,97,116,97,110,50,0,58,32,65,115,115,101,114,116,105,111,110,32,39,0,0,0,33,105,115,110,97,110,40,102,120,41,0,0,0,0,0,0,39,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,96,19,0,0,23,0,0,0,24,0,0,0,56,0,0,0,248,255,255,255,96,19,0,0,25,0,0,0,26,0,0,0,192,255,255,255,192,255,255,255,96,19,0,0,27,0,0,0,28,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,24,19,0,0,29,0,0,0,30,0,0,0,200,255,255,255,200,255,255,255,24,19,0,0,31,0,0,0,32,0,0,0,216,8,0,0,64,5,0,0,152,18,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,216,8,0,0,152,5,0,0,96,19,0,0,0,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,73,75,97,115,105,110,0,0,102,32,62,32,45,49,45,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,32,38,38,32,102,32,60,32,49,43,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,0,0,0,0,0,0,0,73,75,97,99,111,115,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,64,7,0,0,33,0,0,0,34,0,0,0,8,0,0,0,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,216,8,0,0,48,7,0,0,104,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,176,8,0,0,88,7,0,0,0,0,0,0,160,7,0,0,35,0,0,0,36,0,0,0,9,0,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,216,8,0,0,136,7,0,0,104,7,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,176,8,0,0,176,7,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,216,8,0,0,200,7,0,0,192,7,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,216,8,0,0,0,8,0,0,240,7,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,216,8,0,0,96,8,0,0,240,7,0,0,0,0,0,0,216,8,0,0,56,8,0,0,136,8,0,0,0,0,0,0,0,0,0,0,40,8,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,32,9,0,0,37,0,0,0,41,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,216,8,0,0,248,8,0,0,40,8,0,0,0,0,0,0,0,0,0,0,128,9,0,0,37,0,0,0,42,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,216,8,0,0,88,9,0,0,40,8,0,0,0,0,0,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,0,0,47,104,111,109,101,47,108,100,47,106,115,45,105,107,115,111,108,118,101,114,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,109,97,115,116,101,114,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,115,116,114,105,110,103,0,0,0,0,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,152,18,0,0,43,0,0,0,44,0,0,0,2,0,0,0,2,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,24,18,0,0,45,0,0,0,46,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,176,8,0,0,0,18,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,216,8,0,0,32,18,0,0,24,18,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,176,8,0,0,96,18,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,56,9,0,0,160,18,0,0,0,0,0,0,1,0,0,0,80,18,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,56,9,0,0,232,18,0,0,0,0,0,0,1,0,0,0,80,18,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,56,9,0,0,48,19,0,0,3,0,0,0,2,0,0,0,208,18,0,0,2,0,0,0,24,19,0,0,2,8,0,0,0,0,0,0,144,28,0,0,47,0,0,0,48,0,0,0,49,0,0,0,1,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,28,0,0,50,0,0,0,51,0,0,0,49,0,0,0,2,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,29,0,0,52,0,0,0,53,0,0,0,49,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,54,0,0,0,55,0,0,0,49,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,30,0,0,56,0,0,0,57,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,23,0,0,0,5,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,30,0,0,58,0,0,0,59,0,0,0,49,0,0,0,7,0,0,0,8,0,0,0,25,0,0,0,9,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,31,0,0,60,0,0,0,61,0,0,0,49,0,0,0,11,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,56,31,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,31,0,0,62,0,0,0,63,0,0,0,49,0,0,0,19,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,168,31,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,32,0,0,64,0,0,0,65,0,0,0,49,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,32,0,0,66,0,0,0,67,0,0,0,49,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,32,0,0,68,0,0,0,69,0,0,0,49,0,0,0,27,0,0,0,28,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,29,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,70,0,0,0,71,0,0,0,49,0,0,0,30,0,0,0,31,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,32,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,33,0,0,72,0,0,0,73,0,0,0,49,0,0,0,33,0,0,0,34,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,35,0,0,0,19,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,33,0,0,74,0,0,0,75,0,0,0,49,0,0,0,36,0,0,0,37,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,38,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,33,0,0,76,0,0,0,77,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,34,0,0,78,0,0,0,79,0,0,0,49,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,34,0,0,80,0,0,0,81,0,0,0,49,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,35,0,0,82,0,0,0,83,0,0,0,49,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,35,0,0,84,0,0,0,85,0,0,0,49,0,0,0,9,0,0,0,6,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,35,0,0,86,0,0,0,87,0,0,0,49,0,0,0,10,0,0,0,7,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,28,0,0,88,0,0,0,89,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,28,0,0,90,0,0,0,91,0,0,0,49,0,0,0,6,0,0,0,11,0,0,0,7,0,0,0,12,0,0,0,8,0,0,0,1,0,0,0,13,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,28,0,0,92,0,0,0,93,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,12,0,0,0,39,0,0,0,40,0,0,0,13,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,29,0,0,94,0,0,0,95,0,0,0,49,0,0,0,42,0,0,0,43,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,64,29,0,0,96,0,0,0,97,0,0,0,49,0,0,0,44,0,0,0,45,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,0,0,0,0,64,25,0,0,98,0,0,0,99,0,0,0,49,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,216,8,0,0,40,25,0,0,72,56,0,0,0,0,0,0,0,0,0,0,176,25,0,0,98,0,0,0,100,0,0,0,49,0,0,0,14,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,9,0,0,0,15,0,0,0,10,0,0,0,16,0,0,0,11,0,0,0,5,0,0,0,17,0,0,0,14,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,56,9,0,0,152,25,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,88,53,0,0,2,0,0,0,0,0,0,0,40,26,0,0,98,0,0,0,101,0,0,0,49,0,0,0,5,0,0,0,6,0,0,0,15,0,0,0,46,0,0,0,47,0,0,0,16,0,0,0,48,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,56,9,0,0,0,26,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,96,53,0,0,2,0,0,0,0,0,0,0,160,26,0,0,98,0,0,0,102,0,0,0,49,0,0,0,7,0,0,0,8,0,0,0,17,0,0,0,49,0,0,0,50,0,0,0,18,0,0,0,51,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,56,9,0,0,120,26,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,96,53,0,0,2,0,0,0,0,0,0,0,24,27,0,0,98,0,0,0,103,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,56,9,0,0,240,26,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,96,53,0,0,2,0,0,0,0,0,0,0,144,27,0,0,98,0,0,0,104,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,216,8,0,0,104,27,0,0,24,27,0,0,0,0,0,0,0,0,0,0,248,27,0,0,98,0,0,0,105,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,216,8,0,0,208,27,0,0,24,27,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,56,9,0,0,8,28,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,96,53,0,0,2,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,216,8,0,0,80,28,0,0,64,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,216,8,0,0,120,28,0,0,64,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,216,8,0,0,160,28,0,0,64,25,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,56,9,0,0,200,28,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,88,53,0,0,2,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,216,8,0,0,0,29,0,0,64,25,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,216,8,0,0,40,29,0,0,64,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,56,9,0,0,80,29,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,104,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,56,9,0,0,184,29,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,128,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,56,9,0,0,32,30,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,152,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,56,9,0,0,136,30,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,176,53,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,56,9,0,0,240,30,0,0,0,0,0,0,3,0,0,0,64,25,0,0,2,0,0,0,200,53,0,0,2,0,0,0,208,53,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,56,9,0,0,96,31,0,0,0,0,0,0,3,0,0,0,64,25,0,0,2,0,0,0,200,53,0,0,2,0,0,0,216,53,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,56,9,0,0,208,31,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,224,53,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,56,9,0,0,56,32,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,224,53,0,0,0,8,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,56,9,0,0,160,32,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,232,53,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,56,9,0,0,224,32,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,232,53,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,56,9,0,0,32,33,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,232,53,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,56,9,0,0,96,33,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,232,53,0,0,2,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,56,9,0,0,160,33,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,240,53,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,56,9,0,0,8,34,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,248,53,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,56,9,0,0,112,34,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,0,54,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,56,9,0,0,216,34,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,8,54,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,56,9,0,0,64,35,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,16,54,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,56,9,0,0,120,35,0,0,0,0,0,0,2,0,0,0,64,25,0,0,2,0,0,0,16,54,0,0,2,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,46,48,76,102,0,0,0,33,34,118,101,99,116,111,114,32,111,117,116,95,111,102,95,114,97,110,103,101,34,0,0,47,104,111,109,101,47,108,100,47,106,115,45,105,107,115,111,108,118,101,114,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,109,97,115,116,101,114,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,0,0,0,0,95,95,116,104,114,111,119,95,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,8,0,0,16,56,0,0,176,8,0,0,248,55,0,0,56,9,0,0,224,55,0,0,0,0,0,0,1,0,0,0,184,55,0,0,0,0,0,0,56,9,0,0,160,55,0,0,0,0,0,0,1,0,0,0,184,55,0,0,0,0,0,0,56,9,0,0,136,55,0,0,0,0,0,0,1,0,0,0,96,55,0,0,0,0,0,0,56,9,0,0,72,55,0,0,0,0,0,0,1,0,0,0,96,55,0,0,0,0,0,0,176,8,0,0,48,55,0,0,176,8,0,0,8,55,0,0,176,8,0,0,224,54,0,0,176,8,0,0,200,54,0,0,176,8,0,0,176,54,0,0,176,8,0,0,144,54,0,0,176,8,0,0,112,54,0,0,176,8,0,0,80,54,0,0,176,8,0,0,48,54,0,0,176,8,0,0,24,54,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,176,8,0,0,104,55,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,176,8,0,0,192,55,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,176,8,0,0,40,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10416);




/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_mutex_lock() {}

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }

  
  
  
  var FS=undefined;
  
  
  
  var SOCKFS=undefined;function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 7) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      // extra effort to support printf, even without a filesystem. very partial, very hackish
      var result = __formatString(format, varargs);
      var string = intArrayToString(result);
      if (string[string.length-1] === '\n') string = string.substr(0, string.length-1); // remove a final \n, as Module.print will do that
      Module.print(string);
      return result.length;
    }

  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  var _tan=Math_tan;


  var _asin=Math_asin;

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  var _fabs=Math_abs;


  var _sqrt=Math_sqrt;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _free() {
  }
  Module["_free"] = _free;function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

   
  Module["_i64Add"] = _i64Add;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  var _BDtoIHigh=true;

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _pthread_cond_broadcast() {
      return 0;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_guard_release() {}

  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;


  var _cos=Math_cos;

  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);function _putchar(c) {
      // int putchar(int c);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/putchar.html
      return _fputc(c, HEAP32[((_stdout)>>2)]);
    }

  var _llvm_pow_f64=Math_pow;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  function ___errno_location() {
      return ___errno_state;
    }

  var _BItoD=true;

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  var _atan2=Math_atan2;

  function _pthread_mutex_unlock() {}

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiii": invoke_viiiii, "invoke_iiiiiid": invoke_iiiiiid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_iiiiid": invoke_iiiiid, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "___ctype_tolower_loc": ___ctype_tolower_loc, "_llvm_pow_f64": _llvm_pow_f64, "_uselocale": _uselocale, "___ctype_b_loc": ___ctype_b_loc, "___cxa_guard_acquire": ___cxa_guard_acquire, "_atan2": _atan2, "___setErrNo": ___setErrNo, "_vfprintf": _vfprintf, "___assert_fail": ___assert_fail, "___cxa_allocate_exception": ___cxa_allocate_exception, "_asin": _asin, "___ctype_toupper_loc": ___ctype_toupper_loc, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_sbrk": _sbrk, "_acos": _acos, "_catgets": _catgets, "_newlocale": _newlocale, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_fileno": _fileno, "___resumeException": ___resumeException, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_freelocale": _freelocale, "_pthread_getspecific": _pthread_getspecific, "__arraySum": __arraySum, "_putchar": _putchar, "_cos": _cos, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_printf": _printf, "_pthread_key_create": _pthread_key_create, "_calloc": _calloc, "_tan": _tan, "_write": _write, "__isLeapYear": __isLeapYear, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_sysconf": _sysconf, "_send": _send, "_abort": _abort, "_catclose": _catclose, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_strerror": _strerror, "__formatString": __formatString, "_sqrt": _sqrt, "_catopen": _catopen, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "_stderr": _stderr };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var _stderr=env._stderr|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _uselocale=env._uselocale;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _atan2=env._atan2;
  var ___setErrNo=env.___setErrNo;
  var _vfprintf=env._vfprintf;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _asin=env._asin;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _sbrk=env._sbrk;
  var _acos=env._acos;
  var _catgets=env._catgets;
  var _newlocale=env._newlocale;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _fileno=env._fileno;
  var ___resumeException=env.___resumeException;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _freelocale=env._freelocale;
  var _pthread_getspecific=env._pthread_getspecific;
  var __arraySum=env.__arraySum;
  var _putchar=env._putchar;
  var _cos=env._cos;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _printf=env._printf;
  var _pthread_key_create=env._pthread_key_create;
  var _calloc=env._calloc;
  var _tan=env._tan;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _sysconf=env._sysconf;
  var _send=env._send;
  var _abort=env._abort;
  var _catclose=env._catclose;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _sqrt=env._sqrt;
  var _catopen=env._catopen;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$pfree,$solutions) {
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $solver = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0;
 $solver = sp;
 $0 = (__ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($solver,$eetrans,$eerot,$pfree,$solutions)|0);
 STACKTOP = sp;return ($0|0);
}
function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $$0 = 0, $$1 = 0, $$6 = 0, $$lcssa = 0, $$lcssa26 = 0, $$lcssa8 = 0, $0 = 0, $1 = 0, $10 = 0.0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0.0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0.0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $eerot = 0, $eetrans = 0, $i$013 = 0, $i1$010 = 0, $j$09 = 0, $phitmp = 0, $phitmp24 = 0, $solutions = 0, $solvalues = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, $vararg_ptr7 = 0, $vfree = 0;
 var $vsolfree = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $vararg_buffer8 = sp + 120|0;
 $vararg_buffer4 = sp + 112|0;
 $vararg_buffer1 = sp + 104|0;
 $vararg_buffer = sp + 96|0;
 $solutions = sp + 168|0;
 $vfree = sp + 152|0;
 $eerot = sp + 24|0;
 $eetrans = sp;
 $solvalues = sp + 140|0;
 $vsolfree = sp + 128|0;
 $0 = ($argc|0)==(14);
 if (!($0)) {
  HEAP32[$vararg_buffer>>2] = 1;
  (_printf((8|0),($vararg_buffer|0))|0);
  $$1 = 1;
  STACKTOP = sp;return ($$1|0);
 }
 __ZN6ikfast14IkSolutionListIdEC2Ev($solutions);
 __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($vfree,1);
 $1 = ((($argv)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (+_atof($2));
 HEAPF64[$eerot>>3] = $3;
 $4 = ((($argv)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (+_atof($5));
 $7 = ((($eerot)) + 8|0);
 HEAPF64[$7>>3] = $6;
 $8 = ((($argv)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (+_atof($9));
 $11 = ((($eerot)) + 16|0);
 HEAPF64[$11>>3] = $10;
 $12 = ((($argv)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (+_atof($13));
 HEAPF64[$eetrans>>3] = $14;
 $15 = ((($argv)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (+_atof($16));
 $18 = ((($eerot)) + 24|0);
 HEAPF64[$18>>3] = $17;
 $19 = ((($argv)) + 24|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (+_atof($20));
 $22 = ((($eerot)) + 32|0);
 HEAPF64[$22>>3] = $21;
 $23 = ((($argv)) + 28|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (+_atof($24));
 $26 = ((($eerot)) + 40|0);
 HEAPF64[$26>>3] = $25;
 $27 = ((($argv)) + 32|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (+_atof($28));
 $30 = ((($eetrans)) + 8|0);
 HEAPF64[$30>>3] = $29;
 $31 = ((($argv)) + 36|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (+_atof($32));
 $34 = ((($eerot)) + 48|0);
 HEAPF64[$34>>3] = $33;
 $35 = ((($argv)) + 40|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (+_atof($36));
 $38 = ((($eerot)) + 56|0);
 HEAPF64[$38>>3] = $37;
 $39 = ((($argv)) + 44|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (+_atof($40));
 $42 = ((($eerot)) + 64|0);
 HEAPF64[$42>>3] = $41;
 $43 = ((($argv)) + 48|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (+_atof($44));
 $46 = ((($eetrans)) + 16|0);
 HEAPF64[$46>>3] = $45;
 $47 = ((($vfree)) + 4|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = HEAP32[$vfree>>2]|0;
 $50 = ($48|0)==($49|0);
 if ($50) {
  $$lcssa8 = 0;
 } else {
  $56 = $49;$i$013 = 0;
  while(1) {
   $51 = (($i$013) + 13)|0;
   $52 = (($argv) + ($51<<2)|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (+_atof($53));
   $55 = (($56) + ($i$013<<3)|0);
   HEAPF64[$55>>3] = $54;
   $57 = (($i$013) + 1)|0;
   $58 = HEAP32[$47>>2]|0;
   $59 = HEAP32[$vfree>>2]|0;
   $60 = $58;
   $61 = $59;
   $62 = (($60) - ($61))|0;
   $63 = $62 >> 3;
   $64 = ($57>>>0)<($63>>>0);
   if ($64) {
    $56 = $59;$i$013 = $57;
   } else {
    $$lcssa = $59;$$lcssa26 = $63;
    break;
   }
  }
  $phitmp = ($$lcssa26|0)==(0);
  $phitmp24 = $phitmp ? 0 : $$lcssa;
  $$lcssa8 = $phitmp24;
 }
 $65 = (__Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$$lcssa8,$solutions)|0);
 if ($65) {
  $67 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
  HEAP32[$vararg_buffer1>>2] = $67;
  (_printf((312|0),($vararg_buffer1|0))|0);
  __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($solvalues,7);
  $68 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
  $69 = ($68|0)==(0);
  if (!($69)) {
   $70 = ((($vsolfree)) + 4|0);
   $71 = ((($solvalues)) + 4|0);
   $i1$010 = 0;
   while(1) {
    $72 = (__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($solutions,$i1$010)|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = ((($73)) + 16|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = (FUNCTION_TABLE_ii[$75 & 63]($72)|0);
    $77 = ((($76)) + 4|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = HEAP32[$76>>2]|0;
    $80 = $78;
    $81 = $79;
    $82 = (($80) - ($81))|0;
    $83 = $82 >> 2;
    HEAP32[$vararg_buffer4>>2] = $i1$010;
    $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
    HEAP32[$vararg_ptr7>>2] = $83;
    (_printf((336|0),($vararg_buffer4|0))|0);
    $84 = HEAP32[$72>>2]|0;
    $85 = ((($84)) + 16|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = (FUNCTION_TABLE_ii[$86 & 63]($72)|0);
    $88 = ((($87)) + 4|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = HEAP32[$87>>2]|0;
    $91 = $89;
    $92 = $90;
    $93 = (($91) - ($92))|0;
    $94 = $93 >> 2;
    __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($vsolfree,$94);
    $95 = HEAP32[$72>>2]|0;
    $96 = ((($95)) + 8|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = HEAP32[$solvalues>>2]|0;
    $99 = HEAP32[$70>>2]|0;
    $100 = HEAP32[$vsolfree>>2]|0;
    $101 = ($99|0)==($100|0);
    $$6 = $101 ? 0 : $100;
    FUNCTION_TABLE_viii[$97 & 3]($72,$98,$$6);
    $102 = HEAP32[$71>>2]|0;
    $103 = HEAP32[$solvalues>>2]|0;
    $104 = ($102|0)==($103|0);
    if (!($104)) {
     $106 = $103;$j$09 = 0;
     while(1) {
      $105 = (($106) + ($j$09<<3)|0);
      $107 = +HEAPF64[$105>>3];
      HEAPF64[$vararg_buffer8>>3] = $107;
      (_printf((360|0),($vararg_buffer8|0))|0);
      $108 = (($j$09) + 1)|0;
      $109 = HEAP32[$71>>2]|0;
      $110 = HEAP32[$solvalues>>2]|0;
      $111 = $109;
      $112 = $110;
      $113 = (($111) - ($112))|0;
      $114 = $113 >> 3;
      $115 = ($108>>>0)<($114>>>0);
      if ($115) {
       $106 = $110;$j$09 = $108;
      } else {
       break;
      }
     }
    }
    (_putchar(10)|0);
    __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($vsolfree);
    $116 = (($i1$010) + 1)|0;
    $117 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
    $118 = ($116>>>0)<($117>>>0);
    if ($118) {
     $i1$010 = $116;
    } else {
     break;
    }
   }
  }
  __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($solvalues);
  $$0 = 0;
 } else {
  $66 = HEAP32[_stderr>>2]|0;
  (_fwrite((280|0),26,1,($66|0))|0);
  $$0 = -1;
 }
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($vfree);
 __ZN6ikfast14IkSolutionListIdED2Ev($solutions);
 $$1 = $$0;
 STACKTOP = sp;return ($$1|0);
}
function __Z5IKcosd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_cos((+$f)));
 return (+$0);
}
function __Z5IKsind($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_sin((+$f)));
 return (+$0);
}
function __ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($this,$eetrans,$eerot,$pfree,$solutions) {
 $this = $this|0;
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $$not = 0, $$not405 = 0, $$not406 = 0, $$not407 = 0, $$v = 0.0, $$v16 = 0.0, $$v18 = 0.0, $$v20 = 0.0, $$v22 = 0.0, $$v24 = 0.0, $$v26 = 0.0, $$v28 = 0.0, $$v30 = 0.0, $$v32 = 0.0, $$v34 = 0.0, $$v36 = 0.0, $$v38 = 0.0, $$v40 = 0.0, $$v72 = 0.0, $$v74 = 0.0;
 var $$v76 = 0.0, $$v78 = 0.0, $$v80 = 0.0, $$v82 = 0.0, $$v84 = 0.0, $$v86 = 0.0, $$v88 = 0.0, $$v90 = 0.0, $$v92 = 0.0, $$v94 = 0.0, $$v96 = 0.0, $$v98 = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0.0, $10000 = 0.0, $10001 = 0.0, $10002 = 0.0;
 var $10003 = 0.0, $10004 = 0.0, $10005 = 0.0, $10006 = 0.0, $10007 = 0.0, $10008 = 0.0, $10009 = 0.0, $1001 = 0.0, $10010 = 0.0, $10011 = 0.0, $10012 = 0.0, $10013 = 0.0, $10014 = 0.0, $10015 = 0, $10016 = 0.0, $10017 = 0.0, $10018 = 0.0, $10019 = 0.0, $1002 = 0.0, $10020 = 0.0;
 var $10021 = 0.0, $10022 = 0.0, $10023 = 0.0, $10024 = 0, $10025 = 0.0, $10026 = 0, $10027 = 0.0, $10028 = 0, $10029 = 0, $1003 = 0.0, $10030 = 0.0, $10031 = 0.0, $10032 = 0.0, $10033 = 0, $10034 = 0, $10035 = 0.0, $10036 = 0.0, $10037 = 0.0, $10038 = 0.0, $10039 = 0.0;
 var $1004 = 0.0, $10040 = 0.0, $10041 = 0.0, $10042 = 0.0, $10043 = 0.0, $10044 = 0.0, $10045 = 0, $10046 = 0, $10047 = 0.0, $10048 = 0.0, $10049 = 0.0, $1005 = 0.0, $10050 = 0.0, $10051 = 0.0, $10052 = 0, $10053 = 0.0, $10054 = 0.0, $10055 = 0.0, $10056 = 0, $10057 = 0;
 var $10058 = 0, $10059 = 0, $1006 = 0.0, $10060 = 0, $10061 = 0, $10062 = 0, $10063 = 0, $10064 = 0, $10065 = 0, $10066 = 0, $10067 = 0, $10068 = 0, $10069 = 0, $1007 = 0.0, $10070 = 0, $10071 = 0, $10072 = 0, $10073 = 0, $10074 = 0.0, $10075 = 0;
 var $10076 = 0.0, $10077 = 0.0, $10078 = 0.0, $10079 = 0, $1008 = 0, $10080 = 0.0, $10081 = 0, $10082 = 0.0, $10083 = 0.0, $10084 = 0.0, $10085 = 0, $10086 = 0, $10087 = 0, $10088 = 0.0, $10089 = 0, $1009 = 0.0, $10090 = 0.0, $10091 = 0, $10092 = 0.0, $10093 = 0.0;
 var $10094 = 0.0, $10095 = 0.0, $10096 = 0.0, $10097 = 0.0, $10098 = 0.0, $10099 = 0.0, $101 = 0, $1010 = 0.0, $10100 = 0.0, $10101 = 0.0, $10102 = 0.0, $10103 = 0.0, $10104 = 0.0, $10105 = 0.0, $10106 = 0.0, $10107 = 0.0, $10108 = 0.0, $10109 = 0.0, $1011 = 0.0, $10110 = 0.0;
 var $10111 = 0.0, $10112 = 0.0, $10113 = 0.0, $10114 = 0.0, $10115 = 0.0, $10116 = 0.0, $10117 = 0.0, $10118 = 0.0, $10119 = 0.0, $1012 = 0.0, $10120 = 0.0, $10121 = 0.0, $10122 = 0.0, $10123 = 0, $10124 = 0.0, $10125 = 0.0, $10126 = 0.0, $10127 = 0.0, $10128 = 0.0, $10129 = 0.0;
 var $1013 = 0.0, $10130 = 0.0, $10131 = 0.0, $10132 = 0, $10133 = 0.0, $10134 = 0, $10135 = 0.0, $10136 = 0, $10137 = 0, $10138 = 0.0, $10139 = 0.0, $1014 = 0.0, $10140 = 0.0, $10141 = 0.0, $10142 = 0.0, $10143 = 0.0, $10144 = 0.0, $10145 = 0.0, $10146 = 0.0, $10147 = 0.0;
 var $10148 = 0.0, $10149 = 0.0, $1015 = 0.0, $10150 = 0.0, $10151 = 0.0, $10152 = 0.0, $10153 = 0.0, $10154 = 0.0, $10155 = 0.0, $10156 = 0.0, $10157 = 0, $10158 = 0.0, $10159 = 0.0, $1016 = 0.0, $10160 = 0.0, $10161 = 0.0, $10162 = 0.0, $10163 = 0.0, $10164 = 0, $10165 = 0.0;
 var $10166 = 0, $10167 = 0.0, $10168 = 0.0, $10169 = 0.0, $1017 = 0.0, $10170 = 0.0, $10171 = 0.0, $10172 = 0.0, $10173 = 0.0, $10174 = 0.0, $10175 = 0.0, $10176 = 0.0, $10177 = 0.0, $10178 = 0.0, $10179 = 0.0, $1018 = 0.0, $10180 = 0.0, $10181 = 0.0, $10182 = 0.0, $10183 = 0.0;
 var $10184 = 0.0, $10185 = 0.0, $10186 = 0.0, $10187 = 0.0, $10188 = 0.0, $10189 = 0.0, $1019 = 0.0, $10190 = 0.0, $10191 = 0.0, $10192 = 0.0, $10193 = 0.0, $10194 = 0.0, $10195 = 0.0, $10196 = 0.0, $10197 = 0.0, $10198 = 0.0, $10199 = 0.0, $102 = 0, $1020 = 0.0, $10200 = 0.0;
 var $10201 = 0.0, $10202 = 0.0, $10203 = 0.0, $10204 = 0.0, $10205 = 0.0, $10206 = 0.0, $10207 = 0.0, $10208 = 0.0, $10209 = 0.0, $1021 = 0.0, $10210 = 0.0, $10211 = 0.0, $10212 = 0, $10213 = 0.0, $10214 = 0.0, $10215 = 0.0, $10216 = 0.0, $10217 = 0.0, $10218 = 0.0, $10219 = 0.0;
 var $1022 = 0.0, $10220 = 0.0, $10221 = 0.0, $10222 = 0.0, $10223 = 0.0, $10224 = 0.0, $10225 = 0.0, $10226 = 0.0, $10227 = 0.0, $10228 = 0.0, $10229 = 0.0, $1023 = 0.0, $10230 = 0.0, $10231 = 0.0, $10232 = 0.0, $10233 = 0.0, $10234 = 0.0, $10235 = 0.0, $10236 = 0.0, $10237 = 0.0;
 var $10238 = 0.0, $10239 = 0.0, $1024 = 0, $10240 = 0.0, $10241 = 0.0, $10242 = 0.0, $10243 = 0.0, $10244 = 0.0, $10245 = 0.0, $10246 = 0.0, $10247 = 0.0, $10248 = 0.0, $10249 = 0.0, $1025 = 0, $10250 = 0.0, $10251 = 0.0, $10252 = 0.0, $10253 = 0.0, $10254 = 0.0, $10255 = 0.0;
 var $10256 = 0.0, $10257 = 0.0, $10258 = 0.0, $10259 = 0.0, $1026 = 0.0, $10260 = 0.0, $10261 = 0.0, $10262 = 0.0, $10263 = 0.0, $10264 = 0, $10265 = 0.0, $10266 = 0.0, $10267 = 0.0, $10268 = 0.0, $10269 = 0, $1027 = 0.0, $10270 = 0.0, $10271 = 0, $10272 = 0, $10273 = 0.0;
 var $10274 = 0.0, $10275 = 0.0, $10276 = 0.0, $10277 = 0.0, $10278 = 0.0, $10279 = 0.0, $1028 = 0.0, $10280 = 0.0, $10281 = 0.0, $10282 = 0.0, $10283 = 0.0, $10284 = 0, $10285 = 0, $10286 = 0.0, $10287 = 0.0, $10288 = 0.0, $10289 = 0.0, $1029 = 0.0, $10290 = 0.0, $10291 = 0.0;
 var $10292 = 0.0, $10293 = 0.0, $10294 = 0.0, $10295 = 0.0, $10296 = 0, $10297 = 0.0, $10298 = 0.0, $10299 = 0.0, $103 = 0, $1030 = 0, $10300 = 0.0, $10301 = 0.0, $10302 = 0.0, $10303 = 0.0, $10304 = 0.0, $10305 = 0, $10306 = 0.0, $10307 = 0, $10308 = 0.0, $10309 = 0;
 var $1031 = 0.0, $10310 = 0, $10311 = 0.0, $10312 = 0.0, $10313 = 0.0, $10314 = 0.0, $10315 = 0.0, $10316 = 0.0, $10317 = 0.0, $10318 = 0.0, $10319 = 0.0, $1032 = 0.0, $10320 = 0.0, $10321 = 0.0, $10322 = 0.0, $10323 = 0.0, $10324 = 0.0, $10325 = 0.0, $10326 = 0.0, $10327 = 0.0;
 var $10328 = 0.0, $10329 = 0.0, $1033 = 0, $10330 = 0.0, $10331 = 0.0, $10332 = 0.0, $10333 = 0.0, $10334 = 0.0, $10335 = 0.0, $10336 = 0.0, $10337 = 0.0, $10338 = 0.0, $10339 = 0.0, $1034 = 0, $10340 = 0.0, $10341 = 0.0, $10342 = 0.0, $10343 = 0.0, $10344 = 0.0, $10345 = 0.0;
 var $10346 = 0.0, $10347 = 0.0, $10348 = 0.0, $10349 = 0.0, $1035 = 0.0, $10350 = 0.0, $10351 = 0.0, $10352 = 0.0, $10353 = 0.0, $10354 = 0.0, $10355 = 0.0, $10356 = 0.0, $10357 = 0.0, $10358 = 0.0, $10359 = 0.0, $1036 = 0.0, $10360 = 0.0, $10361 = 0.0, $10362 = 0, $10363 = 0.0;
 var $10364 = 0, $10365 = 0, $10366 = 0.0, $10367 = 0.0, $10368 = 0.0, $10369 = 0.0, $1037 = 0.0, $10370 = 0.0, $10371 = 0.0, $10372 = 0.0, $10373 = 0.0, $10374 = 0.0, $10375 = 0.0, $10376 = 0.0, $10377 = 0.0, $10378 = 0.0, $10379 = 0.0, $1038 = 0.0, $10380 = 0.0, $10381 = 0.0;
 var $10382 = 0.0, $10383 = 0.0, $10384 = 0.0, $10385 = 0.0, $10386 = 0.0, $10387 = 0.0, $10388 = 0.0, $10389 = 0.0, $1039 = 0.0, $10390 = 0.0, $10391 = 0.0, $10392 = 0.0, $10393 = 0.0, $10394 = 0.0, $10395 = 0.0, $10396 = 0.0, $10397 = 0.0, $10398 = 0.0, $10399 = 0.0, $104 = 0;
 var $1040 = 0.0, $10400 = 0.0, $10401 = 0.0, $10402 = 0.0, $10403 = 0.0, $10404 = 0.0, $10405 = 0.0, $10406 = 0.0, $10407 = 0.0, $10408 = 0.0, $10409 = 0.0, $1041 = 0.0, $10410 = 0.0, $10411 = 0.0, $10412 = 0.0, $10413 = 0.0, $10414 = 0.0, $10415 = 0, $10416 = 0.0, $10417 = 0.0;
 var $10418 = 0.0, $10419 = 0.0, $1042 = 0.0, $10420 = 0.0, $10421 = 0, $10422 = 0, $10423 = 0.0, $10424 = 0.0, $10425 = 0.0, $10426 = 0.0, $10427 = 0.0, $10428 = 0.0, $10429 = 0, $1043 = 0, $10430 = 0, $10431 = 0.0, $10432 = 0.0, $10433 = 0.0, $10434 = 0.0, $10435 = 0.0;
 var $10436 = 0, $10437 = 0.0, $10438 = 0.0, $10439 = 0.0, $1044 = 0, $10440 = 0, $10441 = 0, $10442 = 0, $10443 = 0, $10444 = 0, $10445 = 0, $10446 = 0, $10447 = 0, $10448 = 0, $10449 = 0, $1045 = 0.0, $10450 = 0, $10451 = 0, $10452 = 0, $10453 = 0;
 var $10454 = 0, $10455 = 0, $10456 = 0, $10457 = 0, $10458 = 0.0, $10459 = 0, $1046 = 0.0, $10460 = 0.0, $10461 = 0.0, $10462 = 0.0, $10463 = 0, $10464 = 0.0, $10465 = 0, $10466 = 0.0, $10467 = 0.0, $10468 = 0.0, $10469 = 0, $1047 = 0.0, $10470 = 0, $10471 = 0;
 var $10472 = 0.0, $10473 = 0, $10474 = 0.0, $10475 = 0, $10476 = 0.0, $10477 = 0.0, $10478 = 0.0, $10479 = 0.0, $1048 = 0.0, $10480 = 0.0, $10481 = 0.0, $10482 = 0.0, $10483 = 0.0, $10484 = 0.0, $10485 = 0.0, $10486 = 0.0, $10487 = 0.0, $10488 = 0.0, $10489 = 0.0, $1049 = 0.0;
 var $10490 = 0.0, $10491 = 0.0, $10492 = 0.0, $10493 = 0.0, $10494 = 0.0, $10495 = 0.0, $10496 = 0.0, $10497 = 0.0, $10498 = 0.0, $10499 = 0.0, $105 = 0, $1050 = 0.0, $10500 = 0.0, $10501 = 0.0, $10502 = 0.0, $10503 = 0, $10504 = 0.0, $10505 = 0.0, $10506 = 0.0, $10507 = 0.0;
 var $10508 = 0.0, $10509 = 0.0, $1051 = 0.0, $10510 = 0.0, $10511 = 0.0, $10512 = 0, $10513 = 0.0, $10514 = 0, $10515 = 0.0, $10516 = 0, $10517 = 0, $10518 = 0.0, $10519 = 0.0, $1052 = 0.0, $10520 = 0.0, $10521 = 0, $10522 = 0, $10523 = 0.0, $10524 = 0.0, $10525 = 0.0;
 var $10526 = 0.0, $10527 = 0.0, $10528 = 0.0, $10529 = 0.0, $1053 = 0.0, $10530 = 0.0, $10531 = 0, $10532 = 0, $10533 = 0.0, $10534 = 0.0, $10535 = 0.0, $10536 = 0.0, $10537 = 0.0, $10538 = 0, $10539 = 0.0, $1054 = 0.0, $10540 = 0.0, $10541 = 0.0, $10542 = 0, $10543 = 0;
 var $10544 = 0, $10545 = 0, $10546 = 0, $10547 = 0, $10548 = 0, $10549 = 0, $1055 = 0, $10550 = 0, $10551 = 0, $10552 = 0, $10553 = 0, $10554 = 0, $10555 = 0, $10556 = 0, $10557 = 0, $10558 = 0, $10559 = 0, $1056 = 0.0, $10560 = 0.0, $10561 = 0;
 var $10562 = 0.0, $10563 = 0.0, $10564 = 0.0, $10565 = 0, $10566 = 0.0, $10567 = 0, $10568 = 0.0, $10569 = 0.0, $1057 = 0, $10570 = 0.0, $10571 = 0, $10572 = 0, $10573 = 0, $10574 = 0.0, $10575 = 0, $10576 = 0.0, $10577 = 0, $10578 = 0.0, $10579 = 0.0, $1058 = 0.0;
 var $10580 = 0.0, $10581 = 0.0, $10582 = 0.0, $10583 = 0.0, $10584 = 0.0, $10585 = 0.0, $10586 = 0.0, $10587 = 0.0, $10588 = 0.0, $10589 = 0.0, $1059 = 0.0, $10590 = 0.0, $10591 = 0.0, $10592 = 0.0, $10593 = 0.0, $10594 = 0.0, $10595 = 0.0, $10596 = 0.0, $10597 = 0.0, $10598 = 0.0;
 var $10599 = 0.0, $106 = 0, $1060 = 0, $10600 = 0.0, $10601 = 0.0, $10602 = 0.0, $10603 = 0.0, $10604 = 0.0, $10605 = 0.0, $10606 = 0, $10607 = 0.0, $10608 = 0.0, $10609 = 0.0, $1061 = 0.0, $10610 = 0.0, $10611 = 0.0, $10612 = 0.0, $10613 = 0.0, $10614 = 0, $10615 = 0.0;
 var $10616 = 0, $10617 = 0.0, $10618 = 0, $10619 = 0, $1062 = 0, $10620 = 0.0, $10621 = 0.0, $10622 = 0.0, $10623 = 0.0, $10624 = 0.0, $10625 = 0.0, $10626 = 0, $10627 = 0.0, $10628 = 0, $10629 = 0, $1063 = 0.0, $10630 = 0.0, $10631 = 0.0, $10632 = 0.0, $10633 = 0.0;
 var $10634 = 0.0, $10635 = 0.0, $10636 = 0.0, $10637 = 0.0, $10638 = 0.0, $10639 = 0.0, $1064 = 0, $10640 = 0.0, $10641 = 0, $10642 = 0, $10643 = 0.0, $10644 = 0.0, $10645 = 0.0, $10646 = 0.0, $10647 = 0.0, $10648 = 0.0, $10649 = 0.0, $1065 = 0, $10650 = 0.0, $10651 = 0.0;
 var $10652 = 0.0, $10653 = 0.0, $10654 = 0, $10655 = 0.0, $10656 = 0.0, $10657 = 0.0, $10658 = 0.0, $10659 = 0.0, $1066 = 0, $10660 = 0.0, $10661 = 0.0, $10662 = 0.0, $10663 = 0, $10664 = 0.0, $10665 = 0, $10666 = 0, $10667 = 0, $10668 = 0.0, $10669 = 0.0, $1067 = 0;
 var $10670 = 0.0, $10671 = 0.0, $10672 = 0.0, $10673 = 0.0, $10674 = 0.0, $10675 = 0.0, $10676 = 0.0, $10677 = 0.0, $10678 = 0.0, $10679 = 0.0, $1068 = 0, $10680 = 0.0, $10681 = 0.0, $10682 = 0.0, $10683 = 0.0, $10684 = 0.0, $10685 = 0.0, $10686 = 0.0, $10687 = 0.0, $10688 = 0.0;
 var $10689 = 0.0, $1069 = 0, $10690 = 0.0, $10691 = 0.0, $10692 = 0.0, $10693 = 0.0, $10694 = 0.0, $10695 = 0.0, $10696 = 0.0, $10697 = 0.0, $10698 = 0.0, $10699 = 0.0, $107 = 0, $1070 = 0, $10700 = 0.0, $10701 = 0.0, $10702 = 0.0, $10703 = 0.0, $10704 = 0.0, $10705 = 0.0;
 var $10706 = 0.0, $10707 = 0.0, $10708 = 0.0, $10709 = 0.0, $1071 = 0, $10710 = 0.0, $10711 = 0.0, $10712 = 0.0, $10713 = 0.0, $10714 = 0.0, $10715 = 0.0, $10716 = 0.0, $10717 = 0.0, $10718 = 0, $10719 = 0.0, $1072 = 0, $10720 = 0, $10721 = 0, $10722 = 0.0, $10723 = 0.0;
 var $10724 = 0.0, $10725 = 0.0, $10726 = 0.0, $10727 = 0.0, $10728 = 0.0, $10729 = 0.0, $1073 = 0, $10730 = 0.0, $10731 = 0.0, $10732 = 0.0, $10733 = 0.0, $10734 = 0.0, $10735 = 0.0, $10736 = 0.0, $10737 = 0.0, $10738 = 0.0, $10739 = 0.0, $1074 = 0.0, $10740 = 0.0, $10741 = 0.0;
 var $10742 = 0.0, $10743 = 0.0, $10744 = 0.0, $10745 = 0.0, $10746 = 0.0, $10747 = 0.0, $10748 = 0.0, $10749 = 0.0, $1075 = 0, $10750 = 0.0, $10751 = 0.0, $10752 = 0.0, $10753 = 0.0, $10754 = 0.0, $10755 = 0.0, $10756 = 0.0, $10757 = 0.0, $10758 = 0.0, $10759 = 0.0, $1076 = 0.0;
 var $10760 = 0.0, $10761 = 0.0, $10762 = 0.0, $10763 = 0.0, $10764 = 0.0, $10765 = 0.0, $10766 = 0.0, $10767 = 0.0, $10768 = 0.0, $10769 = 0.0, $1077 = 0.0, $10770 = 0, $10771 = 0.0, $10772 = 0.0, $10773 = 0.0, $10774 = 0.0, $10775 = 0.0, $10776 = 0, $10777 = 0, $10778 = 0.0;
 var $10779 = 0.0, $1078 = 0.0, $10780 = 0.0, $10781 = 0.0, $10782 = 0.0, $10783 = 0.0, $10784 = 0, $10785 = 0, $10786 = 0.0, $10787 = 0.0, $10788 = 0.0, $10789 = 0.0, $1079 = 0, $10790 = 0.0, $10791 = 0, $10792 = 0.0, $10793 = 0.0, $10794 = 0.0, $10795 = 0, $10796 = 0;
 var $10797 = 0, $10798 = 0, $10799 = 0, $108 = 0, $1080 = 0.0, $10800 = 0, $10801 = 0, $10802 = 0, $10803 = 0, $10804 = 0, $10805 = 0, $10806 = 0, $10807 = 0, $10808 = 0, $10809 = 0, $1081 = 0, $10810 = 0, $10811 = 0, $10812 = 0, $10813 = 0.0;
 var $10814 = 0, $10815 = 0.0, $10816 = 0.0, $10817 = 0.0, $10818 = 0, $10819 = 0.0, $1082 = 0.0, $10820 = 0, $10821 = 0.0, $10822 = 0.0, $10823 = 0.0, $10824 = 0, $10825 = 0, $10826 = 0, $10827 = 0.0, $10828 = 0, $10829 = 0.0, $1083 = 0.0, $10830 = 0, $10831 = 0.0;
 var $10832 = 0.0, $10833 = 0.0, $10834 = 0.0, $10835 = 0.0, $10836 = 0.0, $10837 = 0.0, $10838 = 0.0, $10839 = 0.0, $1084 = 0.0, $10840 = 0.0, $10841 = 0.0, $10842 = 0.0, $10843 = 0.0, $10844 = 0.0, $10845 = 0.0, $10846 = 0.0, $10847 = 0.0, $10848 = 0.0, $10849 = 0.0, $1085 = 0;
 var $10850 = 0.0, $10851 = 0.0, $10852 = 0.0, $10853 = 0.0, $10854 = 0.0, $10855 = 0.0, $10856 = 0.0, $10857 = 0.0, $10858 = 0.0, $10859 = 0, $1086 = 0, $10860 = 0.0, $10861 = 0.0, $10862 = 0.0, $10863 = 0.0, $10864 = 0.0, $10865 = 0.0, $10866 = 0.0, $10867 = 0.0, $10868 = 0;
 var $10869 = 0.0, $1087 = 0, $10870 = 0, $10871 = 0.0, $10872 = 0, $10873 = 0, $10874 = 0.0, $10875 = 0.0, $10876 = 0.0, $10877 = 0, $10878 = 0, $10879 = 0.0, $1088 = 0.0, $10880 = 0.0, $10881 = 0.0, $10882 = 0.0, $10883 = 0.0, $10884 = 0.0, $10885 = 0.0, $10886 = 0.0;
 var $10887 = 0, $10888 = 0, $10889 = 0.0, $1089 = 0, $10890 = 0.0, $10891 = 0.0, $10892 = 0.0, $10893 = 0.0, $10894 = 0, $10895 = 0.0, $10896 = 0.0, $10897 = 0.0, $10898 = 0, $10899 = 0, $109 = 0, $1090 = 0.0, $10900 = 0, $10901 = 0, $10902 = 0, $10903 = 0;
 var $10904 = 0, $10905 = 0, $10906 = 0, $10907 = 0, $10908 = 0, $10909 = 0, $1091 = 0, $10910 = 0, $10911 = 0, $10912 = 0, $10913 = 0, $10914 = 0, $10915 = 0, $10916 = 0.0, $10917 = 0, $10918 = 0.0, $10919 = 0.0, $1092 = 0.0, $10920 = 0.0, $10921 = 0;
 var $10922 = 0.0, $10923 = 0, $10924 = 0.0, $10925 = 0.0, $10926 = 0.0, $10927 = 0, $10928 = 0, $10929 = 0, $1093 = 0.0, $10930 = 0.0, $10931 = 0, $10932 = 0.0, $10933 = 0, $10934 = 0.0, $10935 = 0.0, $10936 = 0.0, $10937 = 0.0, $10938 = 0.0, $10939 = 0.0, $1094 = 0.0;
 var $10940 = 0.0, $10941 = 0.0, $10942 = 0.0, $10943 = 0.0, $10944 = 0.0, $10945 = 0.0, $10946 = 0.0, $10947 = 0.0, $10948 = 0.0, $10949 = 0.0, $1095 = 0.0, $10950 = 0.0, $10951 = 0.0, $10952 = 0.0, $10953 = 0.0, $10954 = 0.0, $10955 = 0.0, $10956 = 0.0, $10957 = 0.0, $10958 = 0.0;
 var $10959 = 0.0, $1096 = 0.0, $10960 = 0.0, $10961 = 0, $10962 = 0.0, $10963 = 0.0, $10964 = 0.0, $10965 = 0.0, $10966 = 0.0, $10967 = 0.0, $10968 = 0.0, $10969 = 0.0, $1097 = 0.0, $10970 = 0, $10971 = 0.0, $10972 = 0, $10973 = 0.0, $10974 = 0, $10975 = 0, $10976 = 0.0;
 var $10977 = 0.0, $10978 = 0.0, $10979 = 0.0, $1098 = 0.0, $10980 = 0.0, $10981 = 0.0, $10982 = 0.0, $10983 = 0, $10984 = 0, $10985 = 0.0, $10986 = 0.0, $10987 = 0.0, $10988 = 0.0, $10989 = 0.0, $1099 = 0.0, $10990 = 0.0, $10991 = 0, $10992 = 0, $10993 = 0.0, $10994 = 0.0;
 var $10995 = 0.0, $10996 = 0.0, $10997 = 0.0, $10998 = 0, $10999 = 0.0, $11 = 0, $110 = 0, $1100 = 0.0, $11000 = 0.0, $11001 = 0.0, $11002 = 0, $11003 = 0, $11004 = 0, $11005 = 0, $11006 = 0, $11007 = 0, $11008 = 0, $11009 = 0, $1101 = 0.0, $11010 = 0;
 var $11011 = 0, $11012 = 0, $11013 = 0, $11014 = 0, $11015 = 0, $11016 = 0, $11017 = 0, $11018 = 0, $11019 = 0, $1102 = 0.0, $11020 = 0.0, $11021 = 0, $11022 = 0.0, $11023 = 0.0, $11024 = 0.0, $11025 = 0, $11026 = 0.0, $11027 = 0, $11028 = 0.0, $11029 = 0.0;
 var $1103 = 0.0, $11030 = 0.0, $11031 = 0, $11032 = 0, $11033 = 0, $11034 = 0.0, $11035 = 0, $11036 = 0.0, $11037 = 0, $11038 = 0.0, $11039 = 0.0, $1104 = 0.0, $11040 = 0.0, $11041 = 0.0, $11042 = 0.0, $11043 = 0.0, $11044 = 0.0, $11045 = 0.0, $11046 = 0.0, $11047 = 0.0;
 var $11048 = 0.0, $11049 = 0.0, $1105 = 0.0, $11050 = 0.0, $11051 = 0.0, $11052 = 0.0, $11053 = 0.0, $11054 = 0.0, $11055 = 0.0, $11056 = 0.0, $11057 = 0.0, $11058 = 0.0, $11059 = 0.0, $1106 = 0.0, $11060 = 0.0, $11061 = 0.0, $11062 = 0.0, $11063 = 0.0, $11064 = 0.0, $11065 = 0.0;
 var $11066 = 0.0, $11067 = 0, $11068 = 0.0, $11069 = 0.0, $1107 = 0.0, $11070 = 0.0, $11071 = 0.0, $11072 = 0.0, $11073 = 0.0, $11074 = 0.0, $11075 = 0.0, $11076 = 0, $11077 = 0.0, $11078 = 0, $11079 = 0.0, $1108 = 0.0, $11080 = 0, $11081 = 0, $11082 = 0.0, $11083 = 0.0;
 var $11084 = 0.0, $11085 = 0, $11086 = 0, $11087 = 0.0, $11088 = 0.0, $11089 = 0.0, $1109 = 0.0, $11090 = 0.0, $11091 = 0.0, $11092 = 0.0, $11093 = 0.0, $11094 = 0.0, $11095 = 0.0, $11096 = 0.0, $11097 = 0, $11098 = 0, $11099 = 0.0, $111 = 0, $1110 = 0.0, $11100 = 0.0;
 var $11101 = 0.0, $11102 = 0.0, $11103 = 0.0, $11104 = 0, $11105 = 0.0, $11106 = 0.0, $11107 = 0.0, $11108 = 0, $11109 = 0, $1111 = 0.0, $11110 = 0, $11111 = 0, $11112 = 0, $11113 = 0, $11114 = 0, $11115 = 0, $11116 = 0, $11117 = 0, $11118 = 0, $11119 = 0;
 var $1112 = 0, $11120 = 0, $11121 = 0, $11122 = 0, $11123 = 0, $11124 = 0, $11125 = 0, $11126 = 0.0, $11127 = 0, $11128 = 0.0, $11129 = 0.0, $1113 = 0.0, $11130 = 0.0, $11131 = 0, $11132 = 0.0, $11133 = 0, $11134 = 0.0, $11135 = 0.0, $11136 = 0.0, $11137 = 0;
 var $11138 = 0, $11139 = 0, $1114 = 0.0, $11140 = 0.0, $11141 = 0, $11142 = 0.0, $11143 = 0, $11144 = 0.0, $11145 = 0.0, $11146 = 0.0, $11147 = 0.0, $11148 = 0.0, $11149 = 0.0, $1115 = 0.0, $11150 = 0.0, $11151 = 0.0, $11152 = 0.0, $11153 = 0.0, $11154 = 0.0, $11155 = 0.0;
 var $11156 = 0.0, $11157 = 0.0, $11158 = 0.0, $11159 = 0.0, $1116 = 0.0, $11160 = 0.0, $11161 = 0.0, $11162 = 0.0, $11163 = 0.0, $11164 = 0.0, $11165 = 0.0, $11166 = 0.0, $11167 = 0.0, $11168 = 0.0, $11169 = 0.0, $1117 = 0.0, $11170 = 0.0, $11171 = 0.0, $11172 = 0.0, $11173 = 0.0;
 var $11174 = 0, $11175 = 0.0, $11176 = 0.0, $11177 = 0.0, $11178 = 0.0, $11179 = 0.0, $1118 = 0.0, $11180 = 0.0, $11181 = 0, $11182 = 0.0, $11183 = 0, $11184 = 0.0, $11185 = 0, $11186 = 0, $11187 = 0.0, $11188 = 0.0, $11189 = 0.0, $1119 = 0.0, $11190 = 0.0, $11191 = 0.0;
 var $11192 = 0.0, $11193 = 0.0, $11194 = 0.0, $11195 = 0.0, $11196 = 0.0, $11197 = 0.0, $11198 = 0.0, $11199 = 0.0, $112 = 0, $1120 = 0.0, $11200 = 0.0, $11201 = 0.0, $11202 = 0.0, $11203 = 0, $11204 = 0.0, $11205 = 0.0, $11206 = 0.0, $11207 = 0, $11208 = 0.0, $11209 = 0;
 var $1121 = 0.0, $11210 = 0.0, $11211 = 0.0, $11212 = 0.0, $11213 = 0.0, $11214 = 0.0, $11215 = 0.0, $11216 = 0.0, $11217 = 0.0, $11218 = 0.0, $11219 = 0, $1122 = 0.0, $11220 = 0, $11221 = 0.0, $11222 = 0.0, $11223 = 0.0, $11224 = 0.0, $11225 = 0.0, $11226 = 0, $11227 = 0.0;
 var $11228 = 0.0, $11229 = 0.0, $1123 = 0.0, $11230 = 0, $11231 = 0, $11232 = 0, $11233 = 0, $11234 = 0, $11235 = 0, $11236 = 0, $11237 = 0, $11238 = 0, $11239 = 0, $1124 = 0.0, $11240 = 0, $11241 = 0, $11242 = 0, $11243 = 0, $11244 = 0, $11245 = 0;
 var $11246 = 0, $11247 = 0, $11248 = 0.0, $11249 = 0, $1125 = 0.0, $11250 = 0.0, $11251 = 0.0, $11252 = 0.0, $11253 = 0, $11254 = 0.0, $11255 = 0, $11256 = 0.0, $11257 = 0.0, $11258 = 0.0, $11259 = 0, $1126 = 0.0, $11260 = 0, $11261 = 0, $11262 = 0.0, $11263 = 0;
 var $11264 = 0.0, $11265 = 0, $11266 = 0.0, $11267 = 0.0, $11268 = 0.0, $11269 = 0.0, $1127 = 0, $11270 = 0.0, $11271 = 0, $11272 = 0, $11273 = 0.0, $11274 = 0.0, $11275 = 0.0, $11276 = 0.0, $11277 = 0.0, $11278 = 0.0, $11279 = 0.0, $1128 = 0.0, $11280 = 0.0, $11281 = 0.0;
 var $11282 = 0.0, $11283 = 0.0, $11284 = 0.0, $11285 = 0.0, $11286 = 0.0, $11287 = 0.0, $11288 = 0.0, $11289 = 0.0, $1129 = 0.0, $11290 = 0.0, $11291 = 0.0, $11292 = 0.0, $11293 = 0.0, $11294 = 0.0, $11295 = 0.0, $11296 = 0.0, $11297 = 0.0, $11298 = 0.0, $11299 = 0.0, $113 = 0;
 var $1130 = 0.0, $11300 = 0.0, $11301 = 0.0, $11302 = 0.0, $11303 = 0.0, $11304 = 0, $11305 = 0.0, $11306 = 0.0, $11307 = 0.0, $11308 = 0, $11309 = 0.0, $1131 = 0.0, $11310 = 0, $11311 = 0.0, $11312 = 0, $11313 = 0.0, $11314 = 0, $11315 = 0, $11316 = 0.0, $11317 = 0.0;
 var $11318 = 0.0, $11319 = 0.0, $1132 = 0.0, $11320 = 0.0, $11321 = 0.0, $11322 = 0.0, $11323 = 0.0, $11324 = 0.0, $11325 = 0.0, $11326 = 0.0, $11327 = 0.0, $11328 = 0.0, $11329 = 0.0, $1133 = 0.0, $11330 = 0.0, $11331 = 0, $11332 = 0.0, $11333 = 0.0, $11334 = 0.0, $11335 = 0;
 var $11336 = 0.0, $11337 = 0, $11338 = 0.0, $11339 = 0.0, $1134 = 0.0, $11340 = 0.0, $11341 = 0.0, $11342 = 0.0, $11343 = 0.0, $11344 = 0.0, $11345 = 0.0, $11346 = 0.0, $11347 = 0, $11348 = 0, $11349 = 0.0, $1135 = 0.0, $11350 = 0.0, $11351 = 0.0, $11352 = 0.0, $11353 = 0.0;
 var $11354 = 0, $11355 = 0.0, $11356 = 0.0, $11357 = 0.0, $11358 = 0, $11359 = 0, $1136 = 0.0, $11360 = 0, $11361 = 0, $11362 = 0, $11363 = 0, $11364 = 0, $11365 = 0, $11366 = 0, $11367 = 0, $11368 = 0, $11369 = 0, $1137 = 0.0, $11370 = 0, $11371 = 0;
 var $11372 = 0, $11373 = 0, $11374 = 0, $11375 = 0, $11376 = 0.0, $11377 = 0, $11378 = 0.0, $11379 = 0.0, $1138 = 0.0, $11380 = 0.0, $11381 = 0, $11382 = 0.0, $11383 = 0, $11384 = 0.0, $11385 = 0.0, $11386 = 0.0, $11387 = 0, $11388 = 0, $11389 = 0, $1139 = 0.0;
 var $11390 = 0.0, $11391 = 0, $11392 = 0.0, $11393 = 0, $11394 = 0.0, $11395 = 0.0, $11396 = 0.0, $11397 = 0.0, $11398 = 0.0, $11399 = 0, $114 = 0, $1140 = 0.0, $11400 = 0, $11401 = 0.0, $11402 = 0.0, $11403 = 0.0, $11404 = 0.0, $11405 = 0.0, $11406 = 0.0, $11407 = 0.0;
 var $11408 = 0.0, $11409 = 0.0, $1141 = 0.0, $11410 = 0.0, $11411 = 0.0, $11412 = 0.0, $11413 = 0.0, $11414 = 0.0, $11415 = 0.0, $11416 = 0.0, $11417 = 0.0, $11418 = 0.0, $11419 = 0.0, $1142 = 0.0, $11420 = 0.0, $11421 = 0.0, $11422 = 0.0, $11423 = 0.0, $11424 = 0.0, $11425 = 0.0;
 var $11426 = 0.0, $11427 = 0.0, $11428 = 0.0, $11429 = 0.0, $1143 = 0.0, $11430 = 0.0, $11431 = 0.0, $11432 = 0, $11433 = 0.0, $11434 = 0.0, $11435 = 0.0, $11436 = 0.0, $11437 = 0, $11438 = 0.0, $11439 = 0, $1144 = 0.0, $11440 = 0.0, $11441 = 0, $11442 = 0.0, $11443 = 0;
 var $11444 = 0, $11445 = 0.0, $11446 = 0.0, $11447 = 0.0, $11448 = 0.0, $11449 = 0.0, $1145 = 0.0, $11450 = 0.0, $11451 = 0.0, $11452 = 0.0, $11453 = 0.0, $11454 = 0.0, $11455 = 0.0, $11456 = 0.0, $11457 = 0.0, $11458 = 0.0, $11459 = 0.0, $1146 = 0.0, $11460 = 0.0, $11461 = 0.0;
 var $11462 = 0.0, $11463 = 0.0, $11464 = 0.0, $11465 = 0.0, $11466 = 0.0, $11467 = 0.0, $11468 = 0.0, $11469 = 0.0, $1147 = 0.0, $11470 = 0.0, $11471 = 0, $11472 = 0, $11473 = 0.0, $11474 = 0.0, $11475 = 0.0, $11476 = 0.0, $11477 = 0.0, $11478 = 0.0, $11479 = 0.0, $1148 = 0.0;
 var $11480 = 0.0, $11481 = 0.0, $11482 = 0.0, $11483 = 0.0, $11484 = 0.0, $11485 = 0.0, $11486 = 0.0, $11487 = 0.0, $11488 = 0.0, $11489 = 0.0, $1149 = 0.0, $11490 = 0.0, $11491 = 0.0, $11492 = 0.0, $11493 = 0.0, $11494 = 0.0, $11495 = 0.0, $11496 = 0.0, $11497 = 0.0, $11498 = 0.0;
 var $11499 = 0, $115 = 0, $1150 = 0.0, $11500 = 0, $11501 = 0.0, $11502 = 0.0, $11503 = 0.0, $11504 = 0.0, $11505 = 0.0, $11506 = 0.0, $11507 = 0.0, $11508 = 0, $11509 = 0.0, $1151 = 0.0, $11510 = 0, $11511 = 0.0, $11512 = 0.0, $11513 = 0.0, $11514 = 0.0, $11515 = 0.0;
 var $11516 = 0.0, $11517 = 0.0, $11518 = 0.0, $11519 = 0.0, $1152 = 0.0, $11520 = 0.0, $11521 = 0.0, $11522 = 0.0, $11523 = 0.0, $11524 = 0.0, $11525 = 0.0, $11526 = 0.0, $11527 = 0.0, $11528 = 0.0, $11529 = 0.0, $1153 = 0.0, $11530 = 0.0, $11531 = 0.0, $11532 = 0.0, $11533 = 0.0;
 var $11534 = 0.0, $11535 = 0.0, $11536 = 0.0, $11537 = 0.0, $11538 = 0.0, $11539 = 0.0, $1154 = 0.0, $11540 = 0.0, $11541 = 0.0, $11542 = 0.0, $11543 = 0.0, $11544 = 0.0, $11545 = 0.0, $11546 = 0.0, $11547 = 0.0, $11548 = 0.0, $11549 = 0.0, $1155 = 0.0, $11550 = 0.0, $11551 = 0.0;
 var $11552 = 0.0, $11553 = 0.0, $11554 = 0.0, $11555 = 0.0, $11556 = 0.0, $11557 = 0.0, $11558 = 0.0, $11559 = 0.0, $1156 = 0.0, $11560 = 0.0, $11561 = 0.0, $11562 = 0.0, $11563 = 0.0, $11564 = 0.0, $11565 = 0.0, $11566 = 0.0, $11567 = 0.0, $11568 = 0.0, $11569 = 0.0, $1157 = 0.0;
 var $11570 = 0.0, $11571 = 0.0, $11572 = 0.0, $11573 = 0.0, $11574 = 0.0, $11575 = 0.0, $11576 = 0.0, $11577 = 0.0, $11578 = 0.0, $11579 = 0.0, $1158 = 0.0, $11580 = 0.0, $11581 = 0.0, $11582 = 0.0, $11583 = 0.0, $11584 = 0.0, $11585 = 0.0, $11586 = 0.0, $11587 = 0, $11588 = 0.0;
 var $11589 = 0.0, $1159 = 0.0, $11590 = 0.0, $11591 = 0.0, $11592 = 0.0, $11593 = 0.0, $11594 = 0.0, $11595 = 0.0, $11596 = 0, $11597 = 0.0, $11598 = 0, $11599 = 0.0, $116 = 0, $1160 = 0.0, $11600 = 0, $11601 = 0.0, $11602 = 0, $11603 = 0.0, $11604 = 0, $11605 = 0.0;
 var $11606 = 0.0, $11607 = 0.0, $11608 = 0.0, $11609 = 0.0, $1161 = 0.0, $11610 = 0.0, $11611 = 0.0, $11612 = 0.0, $11613 = 0.0, $11614 = 0.0, $11615 = 0.0, $11616 = 0.0, $11617 = 0.0, $11618 = 0.0, $11619 = 0.0, $1162 = 0.0, $11620 = 0.0, $11621 = 0.0, $11622 = 0.0, $11623 = 0.0;
 var $11624 = 0.0, $11625 = 0.0, $11626 = 0.0, $11627 = 0.0, $11628 = 0, $11629 = 0, $1163 = 0.0, $11630 = 0.0, $11631 = 0.0, $11632 = 0.0, $11633 = 0.0, $11634 = 0.0, $11635 = 0.0, $11636 = 0.0, $11637 = 0.0, $11638 = 0.0, $11639 = 0.0, $1164 = 0.0, $11640 = 0.0, $11641 = 0.0;
 var $11642 = 0.0, $11643 = 0.0, $11644 = 0.0, $11645 = 0.0, $11646 = 0.0, $11647 = 0.0, $11648 = 0, $11649 = 0, $1165 = 0.0, $11650 = 0.0, $11651 = 0.0, $11652 = 0.0, $11653 = 0.0, $11654 = 0.0, $11655 = 0.0, $11656 = 0.0, $11657 = 0, $11658 = 0.0, $11659 = 0, $1166 = 0;
 var $11660 = 0.0, $11661 = 0.0, $11662 = 0.0, $11663 = 0.0, $11664 = 0.0, $11665 = 0.0, $11666 = 0.0, $11667 = 0.0, $11668 = 0.0, $11669 = 0.0, $1167 = 0.0, $11670 = 0.0, $11671 = 0.0, $11672 = 0.0, $11673 = 0.0, $11674 = 0.0, $11675 = 0.0, $11676 = 0.0, $11677 = 0.0, $11678 = 0.0;
 var $11679 = 0.0, $1168 = 0.0, $11680 = 0.0, $11681 = 0.0, $11682 = 0.0, $11683 = 0.0, $11684 = 0.0, $11685 = 0.0, $11686 = 0.0, $11687 = 0.0, $11688 = 0.0, $11689 = 0.0, $1169 = 0.0, $11690 = 0.0, $11691 = 0.0, $11692 = 0.0, $11693 = 0.0, $11694 = 0.0, $11695 = 0.0, $11696 = 0.0;
 var $11697 = 0.0, $11698 = 0.0, $11699 = 0.0, $117 = 0, $1170 = 0.0, $11700 = 0.0, $11701 = 0.0, $11702 = 0.0, $11703 = 0.0, $11704 = 0.0, $11705 = 0.0, $11706 = 0.0, $11707 = 0.0, $11708 = 0.0, $11709 = 0.0, $1171 = 0.0, $11710 = 0.0, $11711 = 0.0, $11712 = 0.0, $11713 = 0.0;
 var $11714 = 0.0, $11715 = 0.0, $11716 = 0.0, $11717 = 0.0, $11718 = 0.0, $11719 = 0.0, $1172 = 0.0, $11720 = 0.0, $11721 = 0.0, $11722 = 0.0, $11723 = 0.0, $11724 = 0.0, $11725 = 0.0, $11726 = 0.0, $11727 = 0.0, $11728 = 0.0, $11729 = 0.0, $1173 = 0.0, $11730 = 0.0, $11731 = 0.0;
 var $11732 = 0.0, $11733 = 0.0, $11734 = 0.0, $11735 = 0.0, $11736 = 0, $11737 = 0.0, $11738 = 0.0, $11739 = 0.0, $1174 = 0.0, $11740 = 0.0, $11741 = 0.0, $11742 = 0.0, $11743 = 0.0, $11744 = 0.0, $11745 = 0, $11746 = 0.0, $11747 = 0, $11748 = 0.0, $11749 = 0, $1175 = 0.0;
 var $11750 = 0.0, $11751 = 0, $11752 = 0.0, $11753 = 0, $11754 = 0.0, $11755 = 0.0, $11756 = 0.0, $11757 = 0.0, $11758 = 0.0, $11759 = 0.0, $1176 = 0.0, $11760 = 0.0, $11761 = 0.0, $11762 = 0.0, $11763 = 0.0, $11764 = 0.0, $11765 = 0.0, $11766 = 0.0, $11767 = 0.0, $11768 = 0.0;
 var $11769 = 0.0, $1177 = 0.0, $11770 = 0.0, $11771 = 0.0, $11772 = 0.0, $11773 = 0.0, $11774 = 0.0, $11775 = 0.0, $11776 = 0.0, $11777 = 0.0, $11778 = 0.0, $11779 = 0.0, $1178 = 0.0, $11780 = 0.0, $11781 = 0.0, $11782 = 0.0, $11783 = 0, $11784 = 0, $11785 = 0.0, $11786 = 0.0;
 var $11787 = 0.0, $11788 = 0.0, $11789 = 0.0, $1179 = 0, $11790 = 0.0, $11791 = 0.0, $11792 = 0.0, $11793 = 0.0, $11794 = 0.0, $11795 = 0.0, $11796 = 0.0, $11797 = 0, $11798 = 0, $11799 = 0.0, $118 = 0, $1180 = 0.0, $11800 = 0.0, $11801 = 0.0, $11802 = 0.0, $11803 = 0.0;
 var $11804 = 0.0, $11805 = 0.0, $11806 = 0, $11807 = 0.0, $11808 = 0, $11809 = 0.0, $1181 = 0, $11810 = 0.0, $11811 = 0.0, $11812 = 0.0, $11813 = 0.0, $11814 = 0.0, $11815 = 0.0, $11816 = 0.0, $11817 = 0.0, $11818 = 0.0, $11819 = 0.0, $1182 = 0.0, $11820 = 0.0, $11821 = 0.0;
 var $11822 = 0.0, $11823 = 0.0, $11824 = 0.0, $11825 = 0.0, $11826 = 0.0, $11827 = 0.0, $11828 = 0.0, $11829 = 0.0, $1183 = 0.0, $11830 = 0.0, $11831 = 0.0, $11832 = 0.0, $11833 = 0.0, $11834 = 0.0, $11835 = 0.0, $11836 = 0.0, $11837 = 0.0, $11838 = 0.0, $11839 = 0.0, $1184 = 0.0;
 var $11840 = 0.0, $11841 = 0.0, $11842 = 0.0, $11843 = 0.0, $11844 = 0.0, $11845 = 0.0, $11846 = 0.0, $11847 = 0.0, $11848 = 0.0, $11849 = 0.0, $1185 = 0.0, $11850 = 0.0, $11851 = 0.0, $11852 = 0.0, $11853 = 0.0, $11854 = 0.0, $11855 = 0.0, $11856 = 0.0, $11857 = 0.0, $11858 = 0.0;
 var $11859 = 0.0, $1186 = 0.0, $11860 = 0.0, $11861 = 0.0, $11862 = 0.0, $11863 = 0.0, $11864 = 0.0, $11865 = 0.0, $11866 = 0.0, $11867 = 0.0, $11868 = 0.0, $11869 = 0.0, $1187 = 0.0, $11870 = 0.0, $11871 = 0.0, $11872 = 0.0, $11873 = 0.0, $11874 = 0.0, $11875 = 0.0, $11876 = 0.0;
 var $11877 = 0.0, $11878 = 0.0, $11879 = 0.0, $1188 = 0.0, $11880 = 0.0, $11881 = 0.0, $11882 = 0.0, $11883 = 0, $11884 = 0.0, $11885 = 0.0, $11886 = 0.0, $11887 = 0.0, $11888 = 0.0, $11889 = 0.0, $1189 = 0.0, $11890 = 0.0, $11891 = 0.0, $11892 = 0, $11893 = 0.0, $11894 = 0;
 var $11895 = 0.0, $11896 = 0, $11897 = 0.0, $11898 = 0, $11899 = 0.0, $119 = 0, $1190 = 0.0, $11900 = 0, $11901 = 0, $11902 = 0, $11903 = 0, $11904 = 0, $11905 = 0, $11906 = 0, $11907 = 0, $11908 = 0.0, $11909 = 0.0, $1191 = 0.0, $11910 = 0.0, $11911 = 0.0;
 var $11912 = 0.0, $11913 = 0.0, $11914 = 0.0, $11915 = 0.0, $11916 = 0.0, $11917 = 0.0, $11918 = 0.0, $11919 = 0.0, $1192 = 0.0, $11920 = 0.0, $11921 = 0, $11922 = 0.0, $11923 = 0.0, $11924 = 0.0, $11925 = 0.0, $11926 = 0.0, $11927 = 0.0, $11928 = 0.0, $11929 = 0.0, $1193 = 0.0;
 var $11930 = 0.0, $11931 = 0.0, $11932 = 0.0, $11933 = 0.0, $11934 = 0.0, $11935 = 0, $11936 = 0.0, $11937 = 0.0, $11938 = 0.0, $11939 = 0.0, $1194 = 0.0, $11940 = 0.0, $11941 = 0.0, $11942 = 0.0, $11943 = 0.0, $11944 = 0.0, $11945 = 0.0, $11946 = 0.0, $11947 = 0.0, $11948 = 0.0;
 var $11949 = 0, $1195 = 0.0, $11950 = 0.0, $11951 = 0.0, $11952 = 0.0, $11953 = 0.0, $11954 = 0.0, $11955 = 0.0, $11956 = 0.0, $11957 = 0.0, $11958 = 0.0, $11959 = 0.0, $1196 = 0.0, $11960 = 0.0, $11961 = 0.0, $11962 = 0.0, $11963 = 0, $11964 = 0.0, $11965 = 0.0, $11966 = 0.0;
 var $11967 = 0.0, $11968 = 0.0, $11969 = 0.0, $1197 = 0.0, $11970 = 0.0, $11971 = 0.0, $11972 = 0.0, $11973 = 0.0, $11974 = 0.0, $11975 = 0.0, $11976 = 0.0, $11977 = 0, $11978 = 0.0, $11979 = 0.0, $1198 = 0.0, $11980 = 0.0, $11981 = 0.0, $11982 = 0.0, $11983 = 0.0, $11984 = 0.0;
 var $11985 = 0.0, $11986 = 0.0, $11987 = 0.0, $11988 = 0.0, $11989 = 0.0, $1199 = 0.0, $11990 = 0.0, $11991 = 0, $11992 = 0.0, $11993 = 0.0, $11994 = 0.0, $11995 = 0.0, $11996 = 0.0, $11997 = 0.0, $11998 = 0.0, $11999 = 0.0, $12 = 0, $120 = 0, $1200 = 0.0, $12000 = 0.0;
 var $12001 = 0.0, $12002 = 0.0, $12003 = 0.0, $12004 = 0.0, $12005 = 0, $12006 = 0.0, $12007 = 0.0, $12008 = 0.0, $12009 = 0.0, $1201 = 0.0, $12010 = 0.0, $12011 = 0.0, $12012 = 0.0, $12013 = 0.0, $12014 = 0.0, $12015 = 0.0, $12016 = 0.0, $12017 = 0.0, $12018 = 0.0, $12019 = 0;
 var $1202 = 0.0, $12020 = 0.0, $12021 = 0.0, $12022 = 0.0, $12023 = 0.0, $12024 = 0.0, $12025 = 0.0, $12026 = 0.0, $12027 = 0.0, $12028 = 0.0, $12029 = 0.0, $1203 = 0.0, $12030 = 0.0, $12031 = 0.0, $12032 = 0.0, $12033 = 0, $12034 = 0.0, $12035 = 0.0, $12036 = 0.0, $12037 = 0.0;
 var $12038 = 0.0, $12039 = 0.0, $1204 = 0.0, $12040 = 0.0, $12041 = 0.0, $12042 = 0.0, $12043 = 0.0, $12044 = 0.0, $12045 = 0.0, $12046 = 0.0, $12047 = 0, $12048 = 0.0, $12049 = 0.0, $1205 = 0.0, $12050 = 0.0, $12051 = 0.0, $12052 = 0.0, $12053 = 0.0, $12054 = 0.0, $12055 = 0.0;
 var $12056 = 0.0, $12057 = 0.0, $12058 = 0.0, $12059 = 0.0, $1206 = 0.0, $12060 = 0.0, $12061 = 0, $12062 = 0.0, $12063 = 0.0, $12064 = 0.0, $12065 = 0.0, $12066 = 0.0, $12067 = 0.0, $12068 = 0.0, $12069 = 0.0, $1207 = 0.0, $12070 = 0.0, $12071 = 0.0, $12072 = 0.0, $12073 = 0.0;
 var $12074 = 0.0, $12075 = 0, $12076 = 0.0, $12077 = 0.0, $12078 = 0.0, $12079 = 0.0, $1208 = 0.0, $12080 = 0.0, $12081 = 0.0, $12082 = 0.0, $12083 = 0.0, $12084 = 0.0, $12085 = 0.0, $12086 = 0.0, $12087 = 0.0, $12088 = 0.0, $12089 = 0, $1209 = 0.0, $12090 = 0.0, $12091 = 0.0;
 var $12092 = 0.0, $12093 = 0.0, $12094 = 0.0, $12095 = 0.0, $12096 = 0.0, $12097 = 0.0, $12098 = 0.0, $12099 = 0.0, $121 = 0, $1210 = 0.0, $12100 = 0.0, $12101 = 0.0, $12102 = 0.0, $12103 = 0, $12104 = 0.0, $12105 = 0.0, $12106 = 0.0, $12107 = 0.0, $12108 = 0.0, $12109 = 0.0;
 var $1211 = 0.0, $12110 = 0.0, $12111 = 0.0, $12112 = 0.0, $12113 = 0.0, $12114 = 0.0, $12115 = 0.0, $12116 = 0.0, $12117 = 0, $12118 = 0.0, $12119 = 0.0, $1212 = 0.0, $12120 = 0.0, $12121 = 0.0, $12122 = 0.0, $12123 = 0.0, $12124 = 0.0, $12125 = 0.0, $12126 = 0.0, $12127 = 0.0;
 var $12128 = 0.0, $12129 = 0.0, $1213 = 0.0, $12130 = 0.0, $12131 = 0, $1214 = 0.0, $1215 = 0.0, $1216 = 0.0, $1217 = 0.0, $1218 = 0.0, $1219 = 0.0, $122 = 0, $1220 = 0.0, $1221 = 0.0, $1222 = 0.0, $1223 = 0.0, $1224 = 0.0, $1225 = 0.0, $1226 = 0, $1227 = 0.0;
 var $1228 = 0.0, $1229 = 0.0, $123 = 0, $1230 = 0.0, $1231 = 0.0, $1232 = 0.0, $1233 = 0.0, $1234 = 0.0, $1235 = 0.0, $1236 = 0, $1237 = 0.0, $1238 = 0, $1239 = 0.0, $124 = 0, $1240 = 0.0, $1241 = 0.0, $1242 = 0.0, $1243 = 0.0, $1244 = 0.0, $1245 = 0.0;
 var $1246 = 0.0, $1247 = 0.0, $1248 = 0.0, $1249 = 0.0, $125 = 0, $1250 = 0.0, $1251 = 0.0, $1252 = 0.0, $1253 = 0.0, $1254 = 0.0, $1255 = 0.0, $1256 = 0.0, $1257 = 0.0, $1258 = 0.0, $1259 = 0, $126 = 0, $1260 = 0.0, $1261 = 0.0, $1262 = 0.0, $1263 = 0.0;
 var $1264 = 0.0, $1265 = 0.0, $1266 = 0.0, $1267 = 0.0, $1268 = 0.0, $1269 = 0, $127 = 0, $1270 = 0.0, $1271 = 0.0, $1272 = 0.0, $1273 = 0.0, $1274 = 0.0, $1275 = 0.0, $1276 = 0.0, $1277 = 0.0, $1278 = 0.0, $1279 = 0.0, $128 = 0, $1280 = 0.0, $1281 = 0.0;
 var $1282 = 0.0, $1283 = 0.0, $1284 = 0.0, $1285 = 0.0, $1286 = 0.0, $1287 = 0.0, $1288 = 0.0, $1289 = 0.0, $129 = 0, $1290 = 0.0, $1291 = 0, $1292 = 0.0, $1293 = 0.0, $1294 = 0.0, $1295 = 0.0, $1296 = 0.0, $1297 = 0.0, $1298 = 0, $1299 = 0.0, $13 = 0;
 var $130 = 0, $1300 = 0, $1301 = 0.0, $1302 = 0, $1303 = 0.0, $1304 = 0.0, $1305 = 0.0, $1306 = 0.0, $1307 = 0.0, $1308 = 0.0, $1309 = 0.0, $131 = 0, $1310 = 0.0, $1311 = 0.0, $1312 = 0.0, $1313 = 0.0, $1314 = 0.0, $1315 = 0.0, $1316 = 0.0, $1317 = 0.0;
 var $1318 = 0.0, $1319 = 0.0, $132 = 0, $1320 = 0.0, $1321 = 0.0, $1322 = 0.0, $1323 = 0.0, $1324 = 0.0, $1325 = 0.0, $1326 = 0.0, $1327 = 0.0, $1328 = 0.0, $1329 = 0.0, $133 = 0, $1330 = 0.0, $1331 = 0.0, $1332 = 0.0, $1333 = 0.0, $1334 = 0.0, $1335 = 0.0;
 var $1336 = 0.0, $1337 = 0.0, $1338 = 0.0, $1339 = 0.0, $134 = 0, $1340 = 0.0, $1341 = 0.0, $1342 = 0.0, $1343 = 0.0, $1344 = 0.0, $1345 = 0.0, $1346 = 0.0, $1347 = 0.0, $1348 = 0, $1349 = 0.0, $135 = 0, $1350 = 0.0, $1351 = 0.0, $1352 = 0.0, $1353 = 0.0;
 var $1354 = 0.0, $1355 = 0.0, $1356 = 0.0, $1357 = 0.0, $1358 = 0.0, $1359 = 0.0, $136 = 0, $1360 = 0.0, $1361 = 0.0, $1362 = 0.0, $1363 = 0.0, $1364 = 0.0, $1365 = 0.0, $1366 = 0.0, $1367 = 0.0, $1368 = 0.0, $1369 = 0.0, $137 = 0, $1370 = 0.0, $1371 = 0.0;
 var $1372 = 0.0, $1373 = 0.0, $1374 = 0.0, $1375 = 0.0, $1376 = 0.0, $1377 = 0.0, $1378 = 0.0, $1379 = 0.0, $138 = 0, $1380 = 0.0, $1381 = 0.0, $1382 = 0.0, $1383 = 0.0, $1384 = 0.0, $1385 = 0.0, $1386 = 0.0, $1387 = 0.0, $1388 = 0.0, $1389 = 0.0, $139 = 0;
 var $1390 = 0.0, $1391 = 0.0, $1392 = 0.0, $1393 = 0.0, $1394 = 0.0, $1395 = 0.0, $1396 = 0.0, $1397 = 0.0, $1398 = 0.0, $1399 = 0.0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0.0, $1402 = 0.0, $1403 = 0.0, $1404 = 0.0, $1405 = 0, $1406 = 0.0, $1407 = 0;
 var $1408 = 0, $1409 = 0.0, $141 = 0, $1410 = 0.0, $1411 = 0.0, $1412 = 0.0, $1413 = 0.0, $1414 = 0.0, $1415 = 0.0, $1416 = 0.0, $1417 = 0.0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0.0, $1421 = 0.0, $1422 = 0.0, $1423 = 0.0, $1424 = 0.0, $1425 = 0.0;
 var $1426 = 0.0, $1427 = 0.0, $1428 = 0.0, $1429 = 0.0, $143 = 0, $1430 = 0.0, $1431 = 0.0, $1432 = 0.0, $1433 = 0.0, $1434 = 0, $1435 = 0.0, $1436 = 0.0, $1437 = 0.0, $1438 = 0.0, $1439 = 0.0, $144 = 0, $1440 = 0.0, $1441 = 0.0, $1442 = 0.0, $1443 = 0;
 var $1444 = 0.0, $1445 = 0, $1446 = 0.0, $1447 = 0, $1448 = 0.0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0.0, $1452 = 0.0, $1453 = 0.0, $1454 = 0.0, $1455 = 0.0, $1456 = 0.0, $1457 = 0.0, $1458 = 0.0, $1459 = 0.0, $146 = 0, $1460 = 0.0, $1461 = 0.0;
 var $1462 = 0.0, $1463 = 0.0, $1464 = 0.0, $1465 = 0.0, $1466 = 0.0, $1467 = 0.0, $1468 = 0.0, $1469 = 0.0, $147 = 0, $1470 = 0.0, $1471 = 0.0, $1472 = 0.0, $1473 = 0.0, $1474 = 0.0, $1475 = 0.0, $1476 = 0.0, $1477 = 0.0, $1478 = 0.0, $1479 = 0.0, $148 = 0;
 var $1480 = 0.0, $1481 = 0.0, $1482 = 0.0, $1483 = 0.0, $1484 = 0.0, $1485 = 0.0, $1486 = 0.0, $1487 = 0.0, $1488 = 0.0, $1489 = 0.0, $149 = 0, $1490 = 0.0, $1491 = 0.0, $1492 = 0.0, $1493 = 0.0, $1494 = 0.0, $1495 = 0.0, $1496 = 0.0, $1497 = 0.0, $1498 = 0.0;
 var $1499 = 0.0, $15 = 0, $150 = 0, $1500 = 0.0, $1501 = 0.0, $1502 = 0, $1503 = 0.0, $1504 = 0, $1505 = 0, $1506 = 0.0, $1507 = 0.0, $1508 = 0.0, $1509 = 0.0, $151 = 0, $1510 = 0.0, $1511 = 0.0, $1512 = 0.0, $1513 = 0.0, $1514 = 0.0, $1515 = 0.0;
 var $1516 = 0.0, $1517 = 0.0, $1518 = 0.0, $1519 = 0.0, $152 = 0, $1520 = 0.0, $1521 = 0.0, $1522 = 0.0, $1523 = 0.0, $1524 = 0.0, $1525 = 0.0, $1526 = 0.0, $1527 = 0.0, $1528 = 0.0, $1529 = 0.0, $153 = 0, $1530 = 0.0, $1531 = 0.0, $1532 = 0.0, $1533 = 0.0;
 var $1534 = 0.0, $1535 = 0.0, $1536 = 0.0, $1537 = 0.0, $1538 = 0.0, $1539 = 0.0, $154 = 0, $1540 = 0.0, $1541 = 0.0, $1542 = 0.0, $1543 = 0.0, $1544 = 0.0, $1545 = 0.0, $1546 = 0.0, $1547 = 0.0, $1548 = 0.0, $1549 = 0.0, $155 = 0, $1550 = 0.0, $1551 = 0.0;
 var $1552 = 0.0, $1553 = 0.0, $1554 = 0.0, $1555 = 0, $1556 = 0.0, $1557 = 0.0, $1558 = 0.0, $1559 = 0.0, $156 = 0, $1560 = 0.0, $1561 = 0, $1562 = 0, $1563 = 0.0, $1564 = 0.0, $1565 = 0.0, $1566 = 0.0, $1567 = 0.0, $1568 = 0.0, $1569 = 0, $157 = 0;
 var $1570 = 0, $1571 = 0.0, $1572 = 0.0, $1573 = 0.0, $1574 = 0.0, $1575 = 0.0, $1576 = 0, $1577 = 0.0, $1578 = 0.0, $1579 = 0.0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0;
 var $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0.0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0.0, $1601 = 0.0, $1602 = 0.0, $1603 = 0, $1604 = 0.0, $1605 = 0;
 var $1606 = 0.0, $1607 = 0.0, $1608 = 0.0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0.0, $1613 = 0, $1614 = 0.0, $1615 = 0, $1616 = 0.0, $1617 = 0.0, $1618 = 0.0, $1619 = 0.0, $162 = 0, $1620 = 0.0, $1621 = 0.0, $1622 = 0.0, $1623 = 0.0;
 var $1624 = 0.0, $1625 = 0.0, $1626 = 0.0, $1627 = 0.0, $1628 = 0.0, $1629 = 0.0, $163 = 0, $1630 = 0.0, $1631 = 0.0, $1632 = 0.0, $1633 = 0.0, $1634 = 0.0, $1635 = 0.0, $1636 = 0.0, $1637 = 0.0, $1638 = 0.0, $1639 = 0.0, $164 = 0, $1640 = 0.0, $1641 = 0.0;
 var $1642 = 0.0, $1643 = 0.0, $1644 = 0, $1645 = 0.0, $1646 = 0.0, $1647 = 0.0, $1648 = 0.0, $1649 = 0.0, $165 = 0, $1650 = 0.0, $1651 = 0.0, $1652 = 0.0, $1653 = 0, $1654 = 0.0, $1655 = 0, $1656 = 0.0, $1657 = 0, $1658 = 0, $1659 = 0.0, $166 = 0;
 var $1660 = 0.0, $1661 = 0.0, $1662 = 0, $1663 = 0, $1664 = 0.0, $1665 = 0.0, $1666 = 0.0, $1667 = 0.0, $1668 = 0.0, $1669 = 0.0, $167 = 0, $1670 = 0.0, $1671 = 0.0, $1672 = 0, $1673 = 0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0, $1677 = 0.0, $1678 = 0.0;
 var $1679 = 0, $168 = 0, $1680 = 0.0, $1681 = 0.0, $1682 = 0.0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0;
 var $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0.0, $1702 = 0, $1703 = 0.0, $1704 = 0.0, $1705 = 0.0, $1706 = 0, $1707 = 0.0, $1708 = 0, $1709 = 0.0, $171 = 0, $1710 = 0.0, $1711 = 0.0, $1712 = 0, $1713 = 0;
 var $1714 = 0, $1715 = 0.0, $1716 = 0, $1717 = 0.0, $1718 = 0, $1719 = 0.0, $172 = 0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0.0, $1724 = 0.0, $1725 = 0.0, $1726 = 0.0, $1727 = 0.0, $1728 = 0.0, $1729 = 0.0, $173 = 0, $1730 = 0.0, $1731 = 0.0;
 var $1732 = 0.0, $1733 = 0.0, $1734 = 0.0, $1735 = 0.0, $1736 = 0.0, $1737 = 0.0, $1738 = 0.0, $1739 = 0.0, $174 = 0, $1740 = 0.0, $1741 = 0.0, $1742 = 0.0, $1743 = 0.0, $1744 = 0.0, $1745 = 0.0, $1746 = 0.0, $1747 = 0.0, $1748 = 0, $1749 = 0.0, $175 = 0;
 var $1750 = 0.0, $1751 = 0.0, $1752 = 0.0, $1753 = 0.0, $1754 = 0.0, $1755 = 0.0, $1756 = 0, $1757 = 0.0, $1758 = 0, $1759 = 0.0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0.0, $1763 = 0.0, $1764 = 0.0, $1765 = 0.0, $1766 = 0.0, $1767 = 0.0, $1768 = 0;
 var $1769 = 0.0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0.0, $1773 = 0.0, $1774 = 0.0, $1775 = 0.0, $1776 = 0.0, $1777 = 0.0, $1778 = 0.0, $1779 = 0.0, $178 = 0, $1780 = 0.0, $1781 = 0, $1782 = 0, $1783 = 0.0, $1784 = 0.0, $1785 = 0.0, $1786 = 0.0;
 var $1787 = 0.0, $1788 = 0.0, $1789 = 0.0, $179 = 0, $1790 = 0.0, $1791 = 0.0, $1792 = 0.0, $1793 = 0.0, $1794 = 0.0, $1795 = 0.0, $1796 = 0.0, $1797 = 0.0, $1798 = 0.0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0.0, $1801 = 0.0, $1802 = 0.0, $1803 = 0.0;
 var $1804 = 0.0, $1805 = 0.0, $1806 = 0.0, $1807 = 0.0, $1808 = 0, $1809 = 0.0, $181 = 0, $1810 = 0, $1811 = 0.0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0.0, $1816 = 0.0, $1817 = 0.0, $1818 = 0.0, $1819 = 0.0, $182 = 0, $1820 = 0.0, $1821 = 0.0;
 var $1822 = 0.0, $1823 = 0.0, $1824 = 0.0, $1825 = 0.0, $1826 = 0.0, $1827 = 0.0, $1828 = 0.0, $1829 = 0.0, $183 = 0, $1830 = 0.0, $1831 = 0.0, $1832 = 0.0, $1833 = 0.0, $1834 = 0.0, $1835 = 0.0, $1836 = 0.0, $1837 = 0.0, $1838 = 0.0, $1839 = 0.0, $184 = 0;
 var $1840 = 0.0, $1841 = 0.0, $1842 = 0.0, $1843 = 0.0, $1844 = 0.0, $1845 = 0.0, $1846 = 0.0, $1847 = 0.0, $1848 = 0.0, $1849 = 0.0, $185 = 0, $1850 = 0.0, $1851 = 0.0, $1852 = 0.0, $1853 = 0.0, $1854 = 0.0, $1855 = 0.0, $1856 = 0.0, $1857 = 0.0, $1858 = 0.0;
 var $1859 = 0.0, $186 = 0, $1860 = 0.0, $1861 = 0.0, $1862 = 0.0, $1863 = 0.0, $1864 = 0.0, $1865 = 0, $1866 = 0.0, $1867 = 0, $1868 = 0, $1869 = 0.0, $187 = 0, $1870 = 0.0, $1871 = 0.0, $1872 = 0.0, $1873 = 0.0, $1874 = 0.0, $1875 = 0.0, $1876 = 0.0;
 var $1877 = 0.0, $1878 = 0.0, $1879 = 0.0, $188 = 0, $1880 = 0.0, $1881 = 0.0, $1882 = 0.0, $1883 = 0.0, $1884 = 0.0, $1885 = 0.0, $1886 = 0.0, $1887 = 0.0, $1888 = 0.0, $1889 = 0.0, $189 = 0, $1890 = 0.0, $1891 = 0.0, $1892 = 0.0, $1893 = 0.0, $1894 = 0.0;
 var $1895 = 0.0, $1896 = 0.0, $1897 = 0.0, $1898 = 0.0, $1899 = 0.0, $19 = 0, $190 = 0, $1900 = 0.0, $1901 = 0.0, $1902 = 0.0, $1903 = 0.0, $1904 = 0.0, $1905 = 0.0, $1906 = 0.0, $1907 = 0.0, $1908 = 0.0, $1909 = 0.0, $191 = 0, $1910 = 0.0, $1911 = 0.0;
 var $1912 = 0.0, $1913 = 0.0, $1914 = 0.0, $1915 = 0.0, $1916 = 0.0, $1917 = 0, $1918 = 0.0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $1921 = 0.0, $1922 = 0.0, $1923 = 0, $1924 = 0, $1925 = 0.0, $1926 = 0.0, $1927 = 0.0, $1928 = 0.0, $1929 = 0.0, $193 = 0;
 var $1930 = 0.0, $1931 = 0, $1932 = 0, $1933 = 0.0, $1934 = 0.0, $1935 = 0.0, $1936 = 0.0, $1937 = 0.0, $1938 = 0, $1939 = 0.0, $194 = 0, $1940 = 0.0, $1941 = 0.0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0;
 var $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0, $1960 = 0.0, $1961 = 0, $1962 = 0.0, $1963 = 0.0, $1964 = 0.0, $1965 = 0, $1966 = 0.0;
 var $1967 = 0, $1968 = 0.0, $1969 = 0.0, $197 = 0, $1970 = 0.0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0.0, $1975 = 0, $1976 = 0.0, $1977 = 0, $1978 = 0.0, $1979 = 0.0, $198 = 0, $1980 = 0.0, $1981 = 0.0, $1982 = 0.0, $1983 = 0.0, $1984 = 0.0;
 var $1985 = 0.0, $1986 = 0.0, $1987 = 0.0, $1988 = 0.0, $1989 = 0.0, $199 = 0, $1990 = 0.0, $1991 = 0.0, $1992 = 0.0, $1993 = 0.0, $1994 = 0.0, $1995 = 0.0, $1996 = 0.0, $1997 = 0.0, $1998 = 0.0, $1999 = 0.0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0.0;
 var $2001 = 0.0, $2002 = 0.0, $2003 = 0.0, $2004 = 0.0, $2005 = 0.0, $2006 = 0.0, $2007 = 0, $2008 = 0.0, $2009 = 0.0, $201 = 0, $2010 = 0.0, $2011 = 0.0, $2012 = 0.0, $2013 = 0.0, $2014 = 0.0, $2015 = 0.0, $2016 = 0, $2017 = 0.0, $2018 = 0, $2019 = 0.0;
 var $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0.0, $2023 = 0.0, $2024 = 0.0, $2025 = 0, $2026 = 0, $2027 = 0.0, $2028 = 0.0, $2029 = 0.0, $203 = 0, $2030 = 0.0, $2031 = 0.0, $2032 = 0.0, $2033 = 0.0, $2034 = 0.0, $2035 = 0, $2036 = 0, $2037 = 0.0;
 var $2038 = 0.0, $2039 = 0.0, $204 = 0, $2040 = 0.0, $2041 = 0.0, $2042 = 0, $2043 = 0.0, $2044 = 0.0, $2045 = 0.0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0;
 var $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0.0, $2065 = 0, $2066 = 0.0, $2067 = 0.0, $2068 = 0.0, $2069 = 0, $207 = 0, $2070 = 0.0, $2071 = 0, $2072 = 0.0, $2073 = 0.0;
 var $2074 = 0.0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0.0, $2079 = 0, $208 = 0, $2080 = 0.0, $2081 = 0, $2082 = 0.0, $2083 = 0.0, $2084 = 0.0, $2085 = 0.0, $2086 = 0.0, $2087 = 0.0, $2088 = 0.0, $2089 = 0.0, $209 = 0, $2090 = 0.0, $2091 = 0.0;
 var $2092 = 0.0, $2093 = 0.0, $2094 = 0.0, $2095 = 0.0, $2096 = 0.0, $2097 = 0.0, $2098 = 0.0, $2099 = 0.0, $21 = 0, $210 = 0, $2100 = 0.0, $2101 = 0.0, $2102 = 0.0, $2103 = 0.0, $2104 = 0.0, $2105 = 0.0, $2106 = 0.0, $2107 = 0.0, $2108 = 0.0, $2109 = 0.0;
 var $211 = 0, $2110 = 0.0, $2111 = 0, $2112 = 0.0, $2113 = 0.0, $2114 = 0.0, $2115 = 0.0, $2116 = 0.0, $2117 = 0.0, $2118 = 0.0, $2119 = 0, $212 = 0, $2120 = 0.0, $2121 = 0, $2122 = 0.0, $2123 = 0, $2124 = 0, $2125 = 0.0, $2126 = 0.0, $2127 = 0.0;
 var $2128 = 0.0, $2129 = 0.0, $213 = 0, $2130 = 0.0, $2131 = 0.0, $2132 = 0, $2133 = 0, $2134 = 0.0, $2135 = 0.0, $2136 = 0.0, $2137 = 0.0, $2138 = 0.0, $2139 = 0.0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0.0, $2143 = 0.0, $2144 = 0.0, $2145 = 0.0;
 var $2146 = 0.0, $2147 = 0, $2148 = 0.0, $2149 = 0.0, $215 = 0, $2150 = 0.0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0;
 var $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0.0, $217 = 0, $2170 = 0, $2171 = 0.0, $2172 = 0.0, $2173 = 0.0, $2174 = 0, $2175 = 0.0, $2176 = 0, $2177 = 0.0, $2178 = 0.0, $2179 = 0.0, $218 = 0, $2180 = 0, $2181 = 0;
 var $2182 = 0, $2183 = 0.0, $2184 = 0, $2185 = 0.0, $2186 = 0, $2187 = 0.0, $2188 = 0.0, $2189 = 0.0, $219 = 0, $2190 = 0.0, $2191 = 0.0, $2192 = 0.0, $2193 = 0.0, $2194 = 0.0, $2195 = 0.0, $2196 = 0.0, $2197 = 0.0, $2198 = 0.0, $2199 = 0.0, $22 = 0;
 var $220 = 0, $2200 = 0.0, $2201 = 0.0, $2202 = 0.0, $2203 = 0.0, $2204 = 0.0, $2205 = 0.0, $2206 = 0.0, $2207 = 0.0, $2208 = 0.0, $2209 = 0.0, $221 = 0, $2210 = 0.0, $2211 = 0.0, $2212 = 0.0, $2213 = 0.0, $2214 = 0.0, $2215 = 0.0, $2216 = 0.0, $2217 = 0.0;
 var $2218 = 0, $2219 = 0.0, $222 = 0, $2220 = 0.0, $2221 = 0.0, $2222 = 0.0, $2223 = 0.0, $2224 = 0.0, $2225 = 0.0, $2226 = 0.0, $2227 = 0, $2228 = 0.0, $2229 = 0, $223 = 0, $2230 = 0.0, $2231 = 0, $2232 = 0, $2233 = 0.0, $2234 = 0.0, $2235 = 0.0;
 var $2236 = 0, $2237 = 0, $2238 = 0.0, $2239 = 0.0, $224 = 0, $2240 = 0.0, $2241 = 0.0, $2242 = 0.0, $2243 = 0.0, $2244 = 0.0, $2245 = 0.0, $2246 = 0.0, $2247 = 0.0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0.0, $2251 = 0.0, $2252 = 0.0, $2253 = 0.0;
 var $2254 = 0.0, $2255 = 0, $2256 = 0.0, $2257 = 0.0, $2258 = 0.0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0;
 var $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0.0, $2278 = 0, $2279 = 0.0, $228 = 0, $2280 = 0.0, $2281 = 0.0, $2282 = 0, $2283 = 0.0, $2284 = 0, $2285 = 0.0, $2286 = 0.0, $2287 = 0.0, $2288 = 0, $2289 = 0, $229 = 0;
 var $2290 = 0, $2291 = 0.0, $2292 = 0, $2293 = 0.0, $2294 = 0, $2295 = 0.0, $2296 = 0.0, $2297 = 0.0, $2298 = 0.0, $2299 = 0.0, $23 = 0, $230 = 0, $2300 = 0.0, $2301 = 0.0, $2302 = 0.0, $2303 = 0.0, $2304 = 0.0, $2305 = 0.0, $2306 = 0.0, $2307 = 0.0;
 var $2308 = 0.0, $2309 = 0.0, $231 = 0, $2310 = 0.0, $2311 = 0.0, $2312 = 0.0, $2313 = 0.0, $2314 = 0.0, $2315 = 0.0, $2316 = 0.0, $2317 = 0.0, $2318 = 0.0, $2319 = 0.0, $232 = 0, $2320 = 0.0, $2321 = 0.0, $2322 = 0.0, $2323 = 0.0, $2324 = 0.0, $2325 = 0.0;
 var $2326 = 0, $2327 = 0.0, $2328 = 0.0, $2329 = 0.0, $233 = 0, $2330 = 0.0, $2331 = 0.0, $2332 = 0.0, $2333 = 0.0, $2334 = 0.0, $2335 = 0, $2336 = 0.0, $2337 = 0, $2338 = 0.0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0.0, $2342 = 0.0, $2343 = 0.0;
 var $2344 = 0.0, $2345 = 0.0, $2346 = 0.0, $2347 = 0.0, $2348 = 0.0, $2349 = 0.0, $235 = 0, $2350 = 0.0, $2351 = 0.0, $2352 = 0.0, $2353 = 0.0, $2354 = 0.0, $2355 = 0.0, $2356 = 0.0, $2357 = 0.0, $2358 = 0.0, $2359 = 0.0, $236 = 0, $2360 = 0, $2361 = 0.0;
 var $2362 = 0.0, $2363 = 0.0, $2364 = 0.0, $2365 = 0.0, $2366 = 0.0, $2367 = 0, $2368 = 0.0, $2369 = 0, $237 = 0, $2370 = 0.0, $2371 = 0.0, $2372 = 0.0, $2373 = 0.0, $2374 = 0.0, $2375 = 0.0, $2376 = 0.0, $2377 = 0.0, $2378 = 0.0, $2379 = 0.0, $238 = 0;
 var $2380 = 0.0, $2381 = 0.0, $2382 = 0.0, $2383 = 0.0, $2384 = 0.0, $2385 = 0.0, $2386 = 0.0, $2387 = 0.0, $2388 = 0.0, $2389 = 0.0, $239 = 0, $2390 = 0.0, $2391 = 0.0, $2392 = 0.0, $2393 = 0.0, $2394 = 0.0, $2395 = 0.0, $2396 = 0.0, $2397 = 0.0, $2398 = 0.0;
 var $2399 = 0.0, $24 = 0, $240 = 0, $2400 = 0.0, $2401 = 0.0, $2402 = 0.0, $2403 = 0.0, $2404 = 0.0, $2405 = 0.0, $2406 = 0.0, $2407 = 0.0, $2408 = 0.0, $2409 = 0.0, $241 = 0, $2410 = 0.0, $2411 = 0.0, $2412 = 0.0, $2413 = 0.0, $2414 = 0.0, $2415 = 0;
 var $2416 = 0.0, $2417 = 0.0, $2418 = 0.0, $2419 = 0.0, $242 = 0, $2420 = 0.0, $2421 = 0.0, $2422 = 0.0, $2423 = 0.0, $2424 = 0.0, $2425 = 0.0, $2426 = 0.0, $2427 = 0.0, $2428 = 0.0, $2429 = 0.0, $243 = 0, $2430 = 0.0, $2431 = 0.0, $2432 = 0.0, $2433 = 0.0;
 var $2434 = 0.0, $2435 = 0.0, $2436 = 0.0, $2437 = 0.0, $2438 = 0.0, $2439 = 0.0, $244 = 0, $2440 = 0.0, $2441 = 0.0, $2442 = 0.0, $2443 = 0.0, $2444 = 0.0, $2445 = 0.0, $2446 = 0.0, $2447 = 0.0, $2448 = 0.0, $2449 = 0.0, $245 = 0, $2450 = 0.0, $2451 = 0.0;
 var $2452 = 0.0, $2453 = 0.0, $2454 = 0.0, $2455 = 0.0, $2456 = 0.0, $2457 = 0.0, $2458 = 0.0, $2459 = 0.0, $246 = 0, $2460 = 0.0, $2461 = 0.0, $2462 = 0.0, $2463 = 0.0, $2464 = 0.0, $2465 = 0.0, $2466 = 0.0, $2467 = 0, $2468 = 0.0, $2469 = 0.0, $247 = 0;
 var $2470 = 0.0, $2471 = 0.0, $2472 = 0, $2473 = 0.0, $2474 = 0, $2475 = 0, $2476 = 0.0, $2477 = 0.0, $2478 = 0.0, $2479 = 0.0, $248 = 0, $2480 = 0.0, $2481 = 0.0, $2482 = 0.0, $2483 = 0.0, $2484 = 0.0, $2485 = 0.0, $2486 = 0.0, $2487 = 0, $2488 = 0;
 var $2489 = 0.0, $249 = 0, $2490 = 0.0, $2491 = 0.0, $2492 = 0.0, $2493 = 0.0, $2494 = 0.0, $2495 = 0.0, $2496 = 0.0, $2497 = 0.0, $2498 = 0.0, $2499 = 0, $25 = 0, $250 = 0, $2500 = 0.0, $2501 = 0.0, $2502 = 0.0, $2503 = 0.0, $2504 = 0.0, $2505 = 0.0;
 var $2506 = 0.0, $2507 = 0.0, $2508 = 0, $2509 = 0.0, $251 = 0, $2510 = 0, $2511 = 0.0, $2512 = 0, $2513 = 0, $2514 = 0.0, $2515 = 0.0, $2516 = 0.0, $2517 = 0.0, $2518 = 0.0, $2519 = 0.0, $252 = 0, $2520 = 0.0, $2521 = 0.0, $2522 = 0.0, $2523 = 0.0;
 var $2524 = 0.0, $2525 = 0.0, $2526 = 0.0, $2527 = 0.0, $2528 = 0.0, $2529 = 0.0, $253 = 0, $2530 = 0.0, $2531 = 0.0, $2532 = 0.0, $2533 = 0.0, $2534 = 0.0, $2535 = 0.0, $2536 = 0.0, $2537 = 0.0, $2538 = 0.0, $2539 = 0.0, $254 = 0, $2540 = 0.0, $2541 = 0.0;
 var $2542 = 0.0, $2543 = 0.0, $2544 = 0.0, $2545 = 0.0, $2546 = 0.0, $2547 = 0.0, $2548 = 0.0, $2549 = 0.0, $255 = 0, $2550 = 0.0, $2551 = 0.0, $2552 = 0.0, $2553 = 0.0, $2554 = 0.0, $2555 = 0.0, $2556 = 0.0, $2557 = 0.0, $2558 = 0.0, $2559 = 0.0, $256 = 0;
 var $2560 = 0.0, $2561 = 0.0, $2562 = 0.0, $2563 = 0.0, $2564 = 0.0, $2565 = 0, $2566 = 0.0, $2567 = 0, $2568 = 0, $2569 = 0.0, $257 = 0, $2570 = 0.0, $2571 = 0.0, $2572 = 0.0, $2573 = 0.0, $2574 = 0.0, $2575 = 0.0, $2576 = 0.0, $2577 = 0.0, $2578 = 0.0;
 var $2579 = 0.0, $258 = 0, $2580 = 0.0, $2581 = 0.0, $2582 = 0.0, $2583 = 0.0, $2584 = 0.0, $2585 = 0.0, $2586 = 0.0, $2587 = 0.0, $2588 = 0.0, $2589 = 0.0, $259 = 0, $2590 = 0.0, $2591 = 0.0, $2592 = 0.0, $2593 = 0.0, $2594 = 0.0, $2595 = 0.0, $2596 = 0.0;
 var $2597 = 0.0, $2598 = 0.0, $2599 = 0.0, $26 = 0, $260 = 0, $2600 = 0.0, $2601 = 0.0, $2602 = 0.0, $2603 = 0.0, $2604 = 0.0, $2605 = 0.0, $2606 = 0.0, $2607 = 0.0, $2608 = 0.0, $2609 = 0.0, $261 = 0, $2610 = 0.0, $2611 = 0.0, $2612 = 0.0, $2613 = 0.0;
 var $2614 = 0.0, $2615 = 0.0, $2616 = 0.0, $2617 = 0.0, $2618 = 0, $2619 = 0.0, $262 = 0, $2620 = 0.0, $2621 = 0.0, $2622 = 0.0, $2623 = 0.0, $2624 = 0, $2625 = 0, $2626 = 0.0, $2627 = 0.0, $2628 = 0.0, $2629 = 0.0, $263 = 0, $2630 = 0.0, $2631 = 0.0;
 var $2632 = 0, $2633 = 0, $2634 = 0.0, $2635 = 0.0, $2636 = 0.0, $2637 = 0.0, $2638 = 0.0, $2639 = 0, $264 = 0, $2640 = 0.0, $2641 = 0.0, $2642 = 0.0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0;
 var $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0, $2654 = 0, $2655 = 0, $2656 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0, $2661 = 0.0, $2662 = 0, $2663 = 0.0, $2664 = 0.0, $2665 = 0.0, $2666 = 0, $2667 = 0.0, $2668 = 0;
 var $2669 = 0.0, $267 = 0, $2670 = 0.0, $2671 = 0.0, $2672 = 0, $2673 = 0, $2674 = 0, $2675 = 0.0, $2676 = 0, $2677 = 0.0, $2678 = 0, $2679 = 0.0, $268 = 0, $2680 = 0.0, $2681 = 0.0, $2682 = 0.0, $2683 = 0.0, $2684 = 0.0, $2685 = 0.0, $2686 = 0.0;
 var $2687 = 0.0, $2688 = 0.0, $2689 = 0.0, $269 = 0, $2690 = 0.0, $2691 = 0.0, $2692 = 0.0, $2693 = 0.0, $2694 = 0.0, $2695 = 0.0, $2696 = 0.0, $2697 = 0.0, $2698 = 0.0, $2699 = 0.0, $27 = 0, $270 = 0, $2700 = 0.0, $2701 = 0.0, $2702 = 0.0, $2703 = 0.0;
 var $2704 = 0.0, $2705 = 0.0, $2706 = 0.0, $2707 = 0, $2708 = 0.0, $2709 = 0.0, $271 = 0, $2710 = 0.0, $2711 = 0.0, $2712 = 0.0, $2713 = 0.0, $2714 = 0.0, $2715 = 0.0, $2716 = 0, $2717 = 0.0, $2718 = 0, $2719 = 0.0, $272 = 0, $2720 = 0, $2721 = 0;
 var $2722 = 0.0, $2723 = 0.0, $2724 = 0.0, $2725 = 0, $2726 = 0, $2727 = 0.0, $2728 = 0.0, $2729 = 0.0, $273 = 0, $2730 = 0.0, $2731 = 0.0, $2732 = 0.0, $2733 = 0.0, $2734 = 0.0, $2735 = 0, $2736 = 0, $2737 = 0.0, $2738 = 0.0, $2739 = 0.0, $274 = 0;
 var $2740 = 0.0, $2741 = 0.0, $2742 = 0, $2743 = 0.0, $2744 = 0.0, $2745 = 0.0, $2746 = 0, $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0;
 var $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0, $2762 = 0, $2763 = 0, $2764 = 0.0, $2765 = 0, $2766 = 0.0, $2767 = 0.0, $2768 = 0.0, $2769 = 0, $277 = 0, $2770 = 0.0, $2771 = 0, $2772 = 0.0, $2773 = 0.0, $2774 = 0.0, $2775 = 0, $2776 = 0;
 var $2777 = 0, $2778 = 0.0, $2779 = 0, $278 = 0, $2780 = 0.0, $2781 = 0, $2782 = 0.0, $2783 = 0.0, $2784 = 0.0, $2785 = 0.0, $2786 = 0.0, $2787 = 0.0, $2788 = 0.0, $2789 = 0.0, $279 = 0, $2790 = 0.0, $2791 = 0.0, $2792 = 0.0, $2793 = 0.0, $2794 = 0.0;
 var $2795 = 0.0, $2796 = 0.0, $2797 = 0.0, $2798 = 0.0, $2799 = 0.0, $28 = 0, $280 = 0, $2800 = 0.0, $2801 = 0.0, $2802 = 0.0, $2803 = 0.0, $2804 = 0.0, $2805 = 0.0, $2806 = 0.0, $2807 = 0.0, $2808 = 0.0, $2809 = 0.0, $281 = 0, $2810 = 0, $2811 = 0.0;
 var $2812 = 0.0, $2813 = 0.0, $2814 = 0.0, $2815 = 0.0, $2816 = 0.0, $2817 = 0.0, $2818 = 0, $2819 = 0.0, $282 = 0, $2820 = 0, $2821 = 0.0, $2822 = 0, $2823 = 0, $2824 = 0.0, $2825 = 0.0, $2826 = 0.0, $2827 = 0.0, $2828 = 0.0, $2829 = 0.0, $283 = 0;
 var $2830 = 0, $2831 = 0.0, $2832 = 0, $2833 = 0, $2834 = 0.0, $2835 = 0.0, $2836 = 0.0, $2837 = 0.0, $2838 = 0.0, $2839 = 0.0, $284 = 0, $2840 = 0.0, $2841 = 0.0, $2842 = 0.0, $2843 = 0.0, $2844 = 0.0, $2845 = 0, $2846 = 0, $2847 = 0.0, $2848 = 0.0;
 var $2849 = 0.0, $285 = 0, $2850 = 0.0, $2851 = 0.0, $2852 = 0.0, $2853 = 0.0, $2854 = 0.0, $2855 = 0.0, $2856 = 0.0, $2857 = 0.0, $2858 = 0, $2859 = 0.0, $286 = 0, $2860 = 0.0, $2861 = 0.0, $2862 = 0.0, $2863 = 0.0, $2864 = 0.0, $2865 = 0.0, $2866 = 0.0;
 var $2867 = 0, $2868 = 0.0, $2869 = 0, $287 = 0, $2870 = 0, $2871 = 0, $2872 = 0.0, $2873 = 0.0, $2874 = 0.0, $2875 = 0.0, $2876 = 0.0, $2877 = 0.0, $2878 = 0.0, $2879 = 0.0, $288 = 0, $2880 = 0.0, $2881 = 0.0, $2882 = 0.0, $2883 = 0.0, $2884 = 0.0;
 var $2885 = 0.0, $2886 = 0.0, $2887 = 0.0, $2888 = 0.0, $2889 = 0.0, $289 = 0, $2890 = 0.0, $2891 = 0.0, $2892 = 0.0, $2893 = 0.0, $2894 = 0.0, $2895 = 0.0, $2896 = 0.0, $2897 = 0.0, $2898 = 0.0, $2899 = 0.0, $29 = 0, $290 = 0, $2900 = 0.0, $2901 = 0.0;
 var $2902 = 0.0, $2903 = 0.0, $2904 = 0.0, $2905 = 0.0, $2906 = 0.0, $2907 = 0.0, $2908 = 0.0, $2909 = 0.0, $291 = 0, $2910 = 0.0, $2911 = 0.0, $2912 = 0.0, $2913 = 0.0, $2914 = 0.0, $2915 = 0.0, $2916 = 0.0, $2917 = 0.0, $2918 = 0.0, $2919 = 0.0, $292 = 0;
 var $2920 = 0.0, $2921 = 0.0, $2922 = 0, $2923 = 0.0, $2924 = 0, $2925 = 0, $2926 = 0.0, $2927 = 0.0, $2928 = 0.0, $2929 = 0.0, $293 = 0, $2930 = 0.0, $2931 = 0.0, $2932 = 0.0, $2933 = 0.0, $2934 = 0.0, $2935 = 0.0, $2936 = 0.0, $2937 = 0.0, $2938 = 0.0;
 var $2939 = 0.0, $294 = 0, $2940 = 0.0, $2941 = 0.0, $2942 = 0.0, $2943 = 0.0, $2944 = 0.0, $2945 = 0.0, $2946 = 0.0, $2947 = 0.0, $2948 = 0.0, $2949 = 0.0, $295 = 0, $2950 = 0.0, $2951 = 0.0, $2952 = 0.0, $2953 = 0.0, $2954 = 0.0, $2955 = 0.0, $2956 = 0.0;
 var $2957 = 0.0, $2958 = 0.0, $2959 = 0.0, $296 = 0, $2960 = 0.0, $2961 = 0.0, $2962 = 0.0, $2963 = 0.0, $2964 = 0.0, $2965 = 0.0, $2966 = 0.0, $2967 = 0.0, $2968 = 0.0, $2969 = 0.0, $297 = 0, $2970 = 0.0, $2971 = 0.0, $2972 = 0.0, $2973 = 0.0, $2974 = 0;
 var $2975 = 0.0, $2976 = 0.0, $2977 = 0.0, $2978 = 0.0, $2979 = 0.0, $298 = 0, $2980 = 0, $2981 = 0, $2982 = 0.0, $2983 = 0.0, $2984 = 0.0, $2985 = 0.0, $2986 = 0.0, $2987 = 0.0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0.0, $2991 = 0.0, $2992 = 0.0;
 var $2993 = 0.0, $2994 = 0.0, $2995 = 0, $2996 = 0.0, $2997 = 0.0, $2998 = 0.0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $3001 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0;
 var $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0, $3013 = 0, $3014 = 0, $3015 = 0, $3016 = 0, $3017 = 0.0, $3018 = 0, $3019 = 0.0, $302 = 0, $3020 = 0.0, $3021 = 0.0, $3022 = 0, $3023 = 0.0, $3024 = 0, $3025 = 0.0, $3026 = 0.0, $3027 = 0.0;
 var $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0, $3031 = 0.0, $3032 = 0, $3033 = 0.0, $3034 = 0, $3035 = 0.0, $3036 = 0.0, $3037 = 0.0, $3038 = 0.0, $3039 = 0.0, $304 = 0, $3040 = 0.0, $3041 = 0.0, $3042 = 0.0, $3043 = 0.0, $3044 = 0.0, $3045 = 0.0;
 var $3046 = 0.0, $3047 = 0.0, $3048 = 0.0, $3049 = 0.0, $305 = 0, $3050 = 0.0, $3051 = 0.0, $3052 = 0.0, $3053 = 0.0, $3054 = 0.0, $3055 = 0.0, $3056 = 0.0, $3057 = 0.0, $3058 = 0.0, $3059 = 0.0, $306 = 0, $3060 = 0.0, $3061 = 0.0, $3062 = 0, $3063 = 0.0;
 var $3064 = 0.0, $3065 = 0.0, $3066 = 0.0, $3067 = 0.0, $3068 = 0.0, $3069 = 0.0, $307 = 0, $3070 = 0.0, $3071 = 0, $3072 = 0.0, $3073 = 0, $3074 = 0.0, $3075 = 0, $3076 = 0, $3077 = 0.0, $3078 = 0.0, $3079 = 0.0, $308 = 0, $3080 = 0, $3081 = 0;
 var $3082 = 0.0, $3083 = 0.0, $3084 = 0.0, $3085 = 0.0, $3086 = 0.0, $3087 = 0.0, $3088 = 0.0, $3089 = 0.0, $309 = 0, $3090 = 0, $3091 = 0, $3092 = 0.0, $3093 = 0.0, $3094 = 0.0, $3095 = 0.0, $3096 = 0.0, $3097 = 0, $3098 = 0.0, $3099 = 0.0, $31 = 0;
 var $310 = 0, $3100 = 0.0, $3101 = 0, $3102 = 0, $3103 = 0, $3104 = 0, $3105 = 0, $3106 = 0, $3107 = 0, $3108 = 0, $3109 = 0, $311 = 0, $3110 = 0, $3111 = 0, $3112 = 0, $3113 = 0, $3114 = 0, $3115 = 0, $3116 = 0, $3117 = 0;
 var $3118 = 0, $3119 = 0.0, $312 = 0, $3120 = 0, $3121 = 0.0, $3122 = 0.0, $3123 = 0.0, $3124 = 0, $3125 = 0.0, $3126 = 0, $3127 = 0.0, $3128 = 0.0, $3129 = 0.0, $313 = 0, $3130 = 0, $3131 = 0, $3132 = 0, $3133 = 0.0, $3134 = 0, $3135 = 0.0;
 var $3136 = 0, $3137 = 0.0, $3138 = 0.0, $3139 = 0.0, $314 = 0, $3140 = 0.0, $3141 = 0.0, $3142 = 0.0, $3143 = 0.0, $3144 = 0.0, $3145 = 0.0, $3146 = 0.0, $3147 = 0.0, $3148 = 0.0, $3149 = 0.0, $315 = 0, $3150 = 0.0, $3151 = 0.0, $3152 = 0.0, $3153 = 0.0;
 var $3154 = 0.0, $3155 = 0.0, $3156 = 0.0, $3157 = 0.0, $3158 = 0.0, $3159 = 0.0, $316 = 0, $3160 = 0.0, $3161 = 0.0, $3162 = 0.0, $3163 = 0.0, $3164 = 0, $3165 = 0.0, $3166 = 0.0, $3167 = 0.0, $3168 = 0.0, $3169 = 0.0, $317 = 0, $3170 = 0.0, $3171 = 0.0;
 var $3172 = 0.0, $3173 = 0, $3174 = 0.0, $3175 = 0, $3176 = 0.0, $3177 = 0, $3178 = 0, $3179 = 0.0, $318 = 0, $3180 = 0.0, $3181 = 0.0, $3182 = 0.0, $3183 = 0.0, $3184 = 0.0, $3185 = 0.0, $3186 = 0, $3187 = 0, $3188 = 0.0, $3189 = 0.0, $319 = 0;
 var $3190 = 0.0, $3191 = 0.0, $3192 = 0.0, $3193 = 0.0, $3194 = 0, $3195 = 0, $3196 = 0.0, $3197 = 0.0, $3198 = 0.0, $3199 = 0.0, $32 = 0, $320 = 0, $3200 = 0.0, $3201 = 0, $3202 = 0.0, $3203 = 0.0, $3204 = 0.0, $3205 = 0, $3206 = 0, $3207 = 0;
 var $3208 = 0, $3209 = 0, $321 = 0, $3210 = 0, $3211 = 0, $3212 = 0, $3213 = 0, $3214 = 0, $3215 = 0, $3216 = 0, $3217 = 0, $3218 = 0, $3219 = 0, $322 = 0, $3220 = 0, $3221 = 0, $3222 = 0, $3223 = 0.0, $3224 = 0, $3225 = 0.0;
 var $3226 = 0.0, $3227 = 0.0, $3228 = 0, $3229 = 0.0, $323 = 0, $3230 = 0, $3231 = 0.0, $3232 = 0.0, $3233 = 0.0, $3234 = 0, $3235 = 0, $3236 = 0, $3237 = 0.0, $3238 = 0, $3239 = 0.0, $324 = 0, $3240 = 0, $3241 = 0.0, $3242 = 0.0, $3243 = 0.0;
 var $3244 = 0.0, $3245 = 0.0, $3246 = 0.0, $3247 = 0.0, $3248 = 0.0, $3249 = 0.0, $325 = 0, $3250 = 0.0, $3251 = 0.0, $3252 = 0.0, $3253 = 0.0, $3254 = 0.0, $3255 = 0.0, $3256 = 0.0, $3257 = 0.0, $3258 = 0.0, $3259 = 0.0, $326 = 0, $3260 = 0.0, $3261 = 0.0;
 var $3262 = 0.0, $3263 = 0.0, $3264 = 0.0, $3265 = 0.0, $3266 = 0.0, $3267 = 0.0, $3268 = 0.0, $3269 = 0.0, $327 = 0, $3270 = 0.0, $3271 = 0, $3272 = 0.0, $3273 = 0.0, $3274 = 0.0, $3275 = 0.0, $3276 = 0.0, $3277 = 0.0, $3278 = 0.0, $3279 = 0.0, $328 = 0;
 var $3280 = 0, $3281 = 0.0, $3282 = 0, $3283 = 0.0, $3284 = 0, $3285 = 0, $3286 = 0.0, $3287 = 0.0, $3288 = 0.0, $3289 = 0, $329 = 0, $3290 = 0, $3291 = 0.0, $3292 = 0.0, $3293 = 0.0, $3294 = 0.0, $3295 = 0.0, $3296 = 0.0, $3297 = 0.0, $3298 = 0.0;
 var $3299 = 0.0, $33 = 0, $330 = 0, $3300 = 0.0, $3301 = 0, $3302 = 0, $3303 = 0.0, $3304 = 0.0, $3305 = 0.0, $3306 = 0.0, $3307 = 0.0, $3308 = 0, $3309 = 0.0, $331 = 0, $3310 = 0.0, $3311 = 0.0, $3312 = 0, $3313 = 0, $3314 = 0, $3315 = 0;
 var $3316 = 0, $3317 = 0, $3318 = 0, $3319 = 0, $332 = 0, $3320 = 0, $3321 = 0, $3322 = 0, $3323 = 0, $3324 = 0, $3325 = 0, $3326 = 0, $3327 = 0, $3328 = 0, $3329 = 0, $333 = 0, $3330 = 0.0, $3331 = 0, $3332 = 0.0, $3333 = 0.0;
 var $3334 = 0.0, $3335 = 0, $3336 = 0.0, $3337 = 0, $3338 = 0.0, $3339 = 0.0, $334 = 0, $3340 = 0.0, $3341 = 0, $3342 = 0, $3343 = 0, $3344 = 0.0, $3345 = 0, $3346 = 0.0, $3347 = 0, $3348 = 0.0, $3349 = 0.0, $335 = 0, $3350 = 0.0, $3351 = 0.0;
 var $3352 = 0.0, $3353 = 0.0, $3354 = 0.0, $3355 = 0.0, $3356 = 0.0, $3357 = 0.0, $3358 = 0.0, $3359 = 0.0, $336 = 0, $3360 = 0.0, $3361 = 0.0, $3362 = 0.0, $3363 = 0.0, $3364 = 0.0, $3365 = 0.0, $3366 = 0.0, $3367 = 0.0, $3368 = 0.0, $3369 = 0.0, $337 = 0;
 var $3370 = 0.0, $3371 = 0.0, $3372 = 0.0, $3373 = 0.0, $3374 = 0.0, $3375 = 0.0, $3376 = 0.0, $3377 = 0.0, $3378 = 0, $3379 = 0.0, $338 = 0, $3380 = 0.0, $3381 = 0.0, $3382 = 0.0, $3383 = 0.0, $3384 = 0.0, $3385 = 0, $3386 = 0.0, $3387 = 0, $3388 = 0.0;
 var $3389 = 0, $339 = 0, $3390 = 0, $3391 = 0.0, $3392 = 0.0, $3393 = 0.0, $3394 = 0.0, $3395 = 0.0, $3396 = 0.0, $3397 = 0.0, $3398 = 0.0, $3399 = 0.0, $34 = 0, $340 = 0, $3400 = 0.0, $3401 = 0.0, $3402 = 0.0, $3403 = 0.0, $3404 = 0.0, $3405 = 0.0;
 var $3406 = 0.0, $3407 = 0, $3408 = 0.0, $3409 = 0.0, $341 = 0, $3410 = 0.0, $3411 = 0, $3412 = 0.0, $3413 = 0, $3414 = 0.0, $3415 = 0.0, $3416 = 0.0, $3417 = 0.0, $3418 = 0.0, $3419 = 0.0, $342 = 0, $3420 = 0.0, $3421 = 0.0, $3422 = 0.0, $3423 = 0;
 var $3424 = 0, $3425 = 0.0, $3426 = 0.0, $3427 = 0.0, $3428 = 0.0, $3429 = 0.0, $343 = 0, $3430 = 0, $3431 = 0.0, $3432 = 0.0, $3433 = 0.0, $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0, $3441 = 0;
 var $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0, $3446 = 0, $3447 = 0, $3448 = 0, $3449 = 0, $345 = 0, $3450 = 0, $3451 = 0, $3452 = 0.0, $3453 = 0, $3454 = 0.0, $3455 = 0.0, $3456 = 0.0, $3457 = 0, $3458 = 0.0, $3459 = 0, $346 = 0;
 var $3460 = 0.0, $3461 = 0.0, $3462 = 0.0, $3463 = 0, $3464 = 0, $3465 = 0, $3466 = 0.0, $3467 = 0, $3468 = 0.0, $3469 = 0, $347 = 0, $3470 = 0.0, $3471 = 0.0, $3472 = 0.0, $3473 = 0.0, $3474 = 0.0, $3475 = 0, $3476 = 0, $3477 = 0.0, $3478 = 0.0;
 var $3479 = 0.0, $348 = 0, $3480 = 0.0, $3481 = 0.0, $3482 = 0.0, $3483 = 0.0, $3484 = 0.0, $3485 = 0.0, $3486 = 0.0, $3487 = 0.0, $3488 = 0.0, $3489 = 0.0, $349 = 0, $3490 = 0.0, $3491 = 0.0, $3492 = 0.0, $3493 = 0.0, $3494 = 0.0, $3495 = 0.0, $3496 = 0.0;
 var $3497 = 0.0, $3498 = 0.0, $3499 = 0.0, $35 = 0, $350 = 0, $3500 = 0.0, $3501 = 0.0, $3502 = 0.0, $3503 = 0.0, $3504 = 0.0, $3505 = 0.0, $3506 = 0.0, $3507 = 0.0, $3508 = 0, $3509 = 0.0, $351 = 0, $3510 = 0.0, $3511 = 0.0, $3512 = 0, $3513 = 0.0;
 var $3514 = 0, $3515 = 0.0, $3516 = 0, $3517 = 0.0, $3518 = 0, $3519 = 0, $352 = 0, $3520 = 0.0, $3521 = 0.0, $3522 = 0.0, $3523 = 0.0, $3524 = 0.0, $3525 = 0.0, $3526 = 0.0, $3527 = 0.0, $3528 = 0.0, $3529 = 0.0, $353 = 0, $3530 = 0.0, $3531 = 0.0;
 var $3532 = 0.0, $3533 = 0.0, $3534 = 0.0, $3535 = 0, $3536 = 0.0, $3537 = 0.0, $3538 = 0.0, $3539 = 0, $354 = 0, $3540 = 0.0, $3541 = 0, $3542 = 0.0, $3543 = 0.0, $3544 = 0.0, $3545 = 0.0, $3546 = 0.0, $3547 = 0.0, $3548 = 0.0, $3549 = 0.0, $355 = 0;
 var $3550 = 0.0, $3551 = 0, $3552 = 0, $3553 = 0.0, $3554 = 0.0, $3555 = 0.0, $3556 = 0.0, $3557 = 0.0, $3558 = 0, $3559 = 0.0, $356 = 0, $3560 = 0.0, $3561 = 0.0, $3562 = 0, $3563 = 0, $3564 = 0, $3565 = 0, $3566 = 0, $3567 = 0, $3568 = 0;
 var $3569 = 0, $357 = 0, $3570 = 0, $3571 = 0, $3572 = 0, $3573 = 0, $3574 = 0, $3575 = 0, $3576 = 0, $3577 = 0, $3578 = 0, $3579 = 0, $358 = 0, $3580 = 0.0, $3581 = 0, $3582 = 0.0, $3583 = 0.0, $3584 = 0.0, $3585 = 0, $3586 = 0.0;
 var $3587 = 0, $3588 = 0.0, $3589 = 0.0, $359 = 0, $3590 = 0.0, $3591 = 0, $3592 = 0, $3593 = 0, $3594 = 0.0, $3595 = 0, $3596 = 0.0, $3597 = 0, $3598 = 0.0, $3599 = 0.0, $36 = 0, $360 = 0, $3600 = 0.0, $3601 = 0.0, $3602 = 0.0, $3603 = 0;
 var $3604 = 0, $3605 = 0.0, $3606 = 0.0, $3607 = 0.0, $3608 = 0.0, $3609 = 0.0, $361 = 0, $3610 = 0.0, $3611 = 0.0, $3612 = 0.0, $3613 = 0.0, $3614 = 0.0, $3615 = 0.0, $3616 = 0.0, $3617 = 0.0, $3618 = 0.0, $3619 = 0.0, $362 = 0, $3620 = 0.0, $3621 = 0.0;
 var $3622 = 0.0, $3623 = 0.0, $3624 = 0.0, $3625 = 0.0, $3626 = 0.0, $3627 = 0.0, $3628 = 0.0, $3629 = 0.0, $363 = 0, $3630 = 0.0, $3631 = 0.0, $3632 = 0.0, $3633 = 0.0, $3634 = 0.0, $3635 = 0.0, $3636 = 0, $3637 = 0.0, $3638 = 0.0, $3639 = 0.0, $364 = 0;
 var $3640 = 0.0, $3641 = 0, $3642 = 0.0, $3643 = 0, $3644 = 0.0, $3645 = 0, $3646 = 0.0, $3647 = 0, $3648 = 0, $3649 = 0.0, $365 = 0, $3650 = 0.0, $3651 = 0.0, $3652 = 0.0, $3653 = 0.0, $3654 = 0.0, $3655 = 0.0, $3656 = 0.0, $3657 = 0.0, $3658 = 0.0;
 var $3659 = 0.0, $366 = 0, $3660 = 0.0, $3661 = 0.0, $3662 = 0.0, $3663 = 0.0, $3664 = 0.0, $3665 = 0.0, $3666 = 0.0, $3667 = 0.0, $3668 = 0.0, $3669 = 0.0, $367 = 0, $3670 = 0.0, $3671 = 0.0, $3672 = 0.0, $3673 = 0.0, $3674 = 0.0, $3675 = 0, $3676 = 0;
 var $3677 = 0.0, $3678 = 0.0, $3679 = 0.0, $368 = 0, $3680 = 0.0, $3681 = 0.0, $3682 = 0.0, $3683 = 0.0, $3684 = 0.0, $3685 = 0.0, $3686 = 0.0, $3687 = 0.0, $3688 = 0.0, $3689 = 0.0, $369 = 0, $3690 = 0.0, $3691 = 0.0, $3692 = 0.0, $3693 = 0.0, $3694 = 0.0;
 var $3695 = 0.0, $3696 = 0.0, $3697 = 0.0, $3698 = 0.0, $3699 = 0.0, $37 = 0, $370 = 0, $3700 = 0.0, $3701 = 0.0, $3702 = 0.0, $3703 = 0, $3704 = 0, $3705 = 0.0, $3706 = 0.0, $3707 = 0.0, $3708 = 0.0, $3709 = 0.0, $371 = 0, $3710 = 0.0, $3711 = 0.0;
 var $3712 = 0, $3713 = 0.0, $3714 = 0, $3715 = 0.0, $3716 = 0.0, $3717 = 0.0, $3718 = 0.0, $3719 = 0.0, $372 = 0, $3720 = 0.0, $3721 = 0.0, $3722 = 0.0, $3723 = 0.0, $3724 = 0.0, $3725 = 0.0, $3726 = 0.0, $3727 = 0.0, $3728 = 0.0, $3729 = 0.0, $373 = 0;
 var $3730 = 0.0, $3731 = 0.0, $3732 = 0.0, $3733 = 0.0, $3734 = 0.0, $3735 = 0.0, $3736 = 0.0, $3737 = 0.0, $3738 = 0.0, $3739 = 0.0, $374 = 0, $3740 = 0.0, $3741 = 0.0, $3742 = 0.0, $3743 = 0.0, $3744 = 0.0, $3745 = 0.0, $3746 = 0.0, $3747 = 0.0, $3748 = 0.0;
 var $3749 = 0.0, $375 = 0, $3750 = 0.0, $3751 = 0.0, $3752 = 0.0, $3753 = 0.0, $3754 = 0.0, $3755 = 0.0, $3756 = 0.0, $3757 = 0.0, $3758 = 0.0, $3759 = 0.0, $376 = 0, $3760 = 0.0, $3761 = 0.0, $3762 = 0.0, $3763 = 0.0, $3764 = 0.0, $3765 = 0.0, $3766 = 0.0;
 var $3767 = 0.0, $3768 = 0.0, $3769 = 0.0, $377 = 0, $3770 = 0.0, $3771 = 0.0, $3772 = 0.0, $3773 = 0.0, $3774 = 0.0, $3775 = 0.0, $3776 = 0.0, $3777 = 0.0, $3778 = 0.0, $3779 = 0.0, $378 = 0, $3780 = 0.0, $3781 = 0.0, $3782 = 0.0, $3783 = 0.0, $3784 = 0.0;
 var $3785 = 0.0, $3786 = 0.0, $3787 = 0.0, $3788 = 0.0, $3789 = 0, $379 = 0, $3790 = 0.0, $3791 = 0.0, $3792 = 0.0, $3793 = 0.0, $3794 = 0.0, $3795 = 0.0, $3796 = 0.0, $3797 = 0.0, $3798 = 0, $3799 = 0.0, $38 = 0, $380 = 0, $3800 = 0, $3801 = 0.0;
 var $3802 = 0, $3803 = 0.0, $3804 = 0, $3805 = 0.0, $3806 = 0, $3807 = 0.0, $3808 = 0.0, $3809 = 0.0, $381 = 0, $3810 = 0.0, $3811 = 0.0, $3812 = 0.0, $3813 = 0.0, $3814 = 0.0, $3815 = 0.0, $3816 = 0.0, $3817 = 0.0, $3818 = 0.0, $3819 = 0.0, $382 = 0;
 var $3820 = 0.0, $3821 = 0.0, $3822 = 0.0, $3823 = 0.0, $3824 = 0.0, $3825 = 0.0, $3826 = 0.0, $3827 = 0.0, $3828 = 0.0, $3829 = 0.0, $383 = 0, $3830 = 0.0, $3831 = 0.0, $3832 = 0.0, $3833 = 0.0, $3834 = 0.0, $3835 = 0.0, $3836 = 0.0, $3837 = 0.0, $3838 = 0.0;
 var $3839 = 0.0, $384 = 0, $3840 = 0, $3841 = 0, $3842 = 0.0, $3843 = 0.0, $3844 = 0.0, $3845 = 0.0, $3846 = 0.0, $3847 = 0.0, $3848 = 0.0, $3849 = 0.0, $385 = 0, $3850 = 0.0, $3851 = 0, $3852 = 0, $3853 = 0.0, $3854 = 0.0, $3855 = 0.0, $3856 = 0.0;
 var $3857 = 0.0, $3858 = 0.0, $3859 = 0.0, $386 = 0, $3860 = 0, $3861 = 0.0, $3862 = 0, $3863 = 0.0, $3864 = 0.0, $3865 = 0.0, $3866 = 0.0, $3867 = 0.0, $3868 = 0.0, $3869 = 0.0, $387 = 0, $3870 = 0.0, $3871 = 0.0, $3872 = 0.0, $3873 = 0.0, $3874 = 0.0;
 var $3875 = 0.0, $3876 = 0.0, $3877 = 0.0, $3878 = 0.0, $3879 = 0.0, $388 = 0, $3880 = 0.0, $3881 = 0.0, $3882 = 0.0, $3883 = 0.0, $3884 = 0.0, $3885 = 0.0, $3886 = 0.0, $3887 = 0.0, $3888 = 0.0, $3889 = 0.0, $389 = 0, $3890 = 0.0, $3891 = 0.0, $3892 = 0.0;
 var $3893 = 0.0, $3894 = 0.0, $3895 = 0.0, $3896 = 0.0, $3897 = 0.0, $3898 = 0.0, $3899 = 0.0, $39 = 0, $390 = 0, $3900 = 0.0, $3901 = 0.0, $3902 = 0.0, $3903 = 0.0, $3904 = 0.0, $3905 = 0.0, $3906 = 0.0, $3907 = 0.0, $3908 = 0.0, $3909 = 0.0, $391 = 0;
 var $3910 = 0.0, $3911 = 0.0, $3912 = 0.0, $3913 = 0.0, $3914 = 0.0, $3915 = 0.0, $3916 = 0.0, $3917 = 0.0, $3918 = 0.0, $3919 = 0.0, $392 = 0, $3920 = 0.0, $3921 = 0.0, $3922 = 0.0, $3923 = 0.0, $3924 = 0.0, $3925 = 0.0, $3926 = 0.0, $3927 = 0.0, $3928 = 0.0;
 var $3929 = 0.0, $393 = 0, $3930 = 0.0, $3931 = 0.0, $3932 = 0.0, $3933 = 0.0, $3934 = 0.0, $3935 = 0.0, $3936 = 0.0, $3937 = 0, $3938 = 0.0, $3939 = 0.0, $394 = 0, $3940 = 0.0, $3941 = 0.0, $3942 = 0.0, $3943 = 0.0, $3944 = 0.0, $3945 = 0.0, $3946 = 0;
 var $3947 = 0.0, $3948 = 0, $3949 = 0.0, $395 = 0, $3950 = 0, $3951 = 0.0, $3952 = 0, $3953 = 0.0, $3954 = 0, $3955 = 0.0, $3956 = 0.0, $3957 = 0.0, $3958 = 0.0, $3959 = 0.0, $396 = 0, $3960 = 0.0, $3961 = 0.0, $3962 = 0.0, $3963 = 0.0, $3964 = 0.0;
 var $3965 = 0.0, $3966 = 0.0, $3967 = 0.0, $3968 = 0.0, $3969 = 0.0, $397 = 0, $3970 = 0.0, $3971 = 0.0, $3972 = 0.0, $3973 = 0.0, $3974 = 0.0, $3975 = 0.0, $3976 = 0.0, $3977 = 0.0, $3978 = 0.0, $3979 = 0.0, $398 = 0, $3980 = 0.0, $3981 = 0.0, $3982 = 0.0;
 var $3983 = 0.0, $3984 = 0, $3985 = 0, $3986 = 0.0, $3987 = 0.0, $3988 = 0.0, $3989 = 0.0, $399 = 0, $3990 = 0.0, $3991 = 0.0, $3992 = 0.0, $3993 = 0.0, $3994 = 0.0, $3995 = 0.0, $3996 = 0.0, $3997 = 0.0, $3998 = 0, $3999 = 0, $4 = 0, $40 = 0;
 var $400 = 0, $4000 = 0.0, $4001 = 0.0, $4002 = 0.0, $4003 = 0.0, $4004 = 0.0, $4005 = 0.0, $4006 = 0.0, $4007 = 0, $4008 = 0.0, $4009 = 0, $401 = 0, $4010 = 0.0, $4011 = 0.0, $4012 = 0.0, $4013 = 0.0, $4014 = 0.0, $4015 = 0.0, $4016 = 0.0, $4017 = 0.0;
 var $4018 = 0.0, $4019 = 0.0, $402 = 0, $4020 = 0.0, $4021 = 0.0, $4022 = 0.0, $4023 = 0.0, $4024 = 0.0, $4025 = 0.0, $4026 = 0.0, $4027 = 0.0, $4028 = 0.0, $4029 = 0.0, $403 = 0, $4030 = 0.0, $4031 = 0.0, $4032 = 0.0, $4033 = 0.0, $4034 = 0.0, $4035 = 0.0;
 var $4036 = 0.0, $4037 = 0.0, $4038 = 0.0, $4039 = 0.0, $404 = 0, $4040 = 0.0, $4041 = 0.0, $4042 = 0.0, $4043 = 0.0, $4044 = 0.0, $4045 = 0.0, $4046 = 0.0, $4047 = 0.0, $4048 = 0.0, $4049 = 0.0, $405 = 0, $4050 = 0.0, $4051 = 0.0, $4052 = 0.0, $4053 = 0.0;
 var $4054 = 0.0, $4055 = 0.0, $4056 = 0.0, $4057 = 0.0, $4058 = 0.0, $4059 = 0.0, $406 = 0, $4060 = 0.0, $4061 = 0.0, $4062 = 0.0, $4063 = 0.0, $4064 = 0.0, $4065 = 0.0, $4066 = 0.0, $4067 = 0.0, $4068 = 0.0, $4069 = 0.0, $407 = 0, $4070 = 0.0, $4071 = 0.0;
 var $4072 = 0.0, $4073 = 0.0, $4074 = 0.0, $4075 = 0.0, $4076 = 0.0, $4077 = 0.0, $4078 = 0.0, $4079 = 0.0, $408 = 0, $4080 = 0.0, $4081 = 0.0, $4082 = 0.0, $4083 = 0.0, $4084 = 0.0, $4085 = 0, $4086 = 0.0, $4087 = 0.0, $4088 = 0.0, $4089 = 0.0, $409 = 0;
 var $4090 = 0.0, $4091 = 0.0, $4092 = 0.0, $4093 = 0.0, $4094 = 0, $4095 = 0.0, $4096 = 0, $4097 = 0.0, $4098 = 0, $4099 = 0.0, $41 = 0, $410 = 0, $4100 = 0, $4101 = 0.0, $4102 = 0, $4103 = 0, $4104 = 0.0, $4105 = 0.0, $4106 = 0.0, $4107 = 0.0;
 var $4108 = 0.0, $4109 = 0.0, $411 = 0, $4110 = 0.0, $4111 = 0, $4112 = 0, $4113 = 0.0, $4114 = 0.0, $4115 = 0.0, $4116 = 0.0, $4117 = 0.0, $4118 = 0.0, $4119 = 0.0, $412 = 0, $4120 = 0.0, $4121 = 0.0, $4122 = 0, $4123 = 0.0, $4124 = 0.0, $4125 = 0;
 var $4126 = 0, $4127 = 0.0, $4128 = 0.0, $4129 = 0.0, $413 = 0, $4130 = 0, $4131 = 0, $4132 = 0.0, $4133 = 0.0, $4134 = 0.0, $4135 = 0.0, $4136 = 0.0, $4137 = 0.0, $4138 = 0.0, $4139 = 0.0, $414 = 0, $4140 = 0.0, $4141 = 0.0, $4142 = 0, $4143 = 0.0;
 var $4144 = 0, $4145 = 0.0, $4146 = 0.0, $4147 = 0, $4148 = 0.0, $4149 = 0, $415 = 0, $4150 = 0.0, $4151 = 0, $4152 = 0, $4153 = 0, $4154 = 0, $4155 = 0, $4156 = 0, $4157 = 0, $4158 = 0, $4159 = 0, $416 = 0, $4160 = 0, $4161 = 0.0;
 var $4162 = 0, $4163 = 0.0, $4164 = 0.0, $4165 = 0.0, $4166 = 0, $4167 = 0.0, $4168 = 0, $4169 = 0.0, $417 = 0, $4170 = 0.0, $4171 = 0.0, $4172 = 0, $4173 = 0, $4174 = 0, $4175 = 0.0, $4176 = 0, $4177 = 0.0, $4178 = 0, $4179 = 0.0, $418 = 0;
 var $4180 = 0.0, $4181 = 0.0, $4182 = 0.0, $4183 = 0.0, $4184 = 0.0, $4185 = 0.0, $4186 = 0.0, $4187 = 0.0, $4188 = 0.0, $4189 = 0.0, $419 = 0, $4190 = 0.0, $4191 = 0.0, $4192 = 0.0, $4193 = 0.0, $4194 = 0.0, $4195 = 0.0, $4196 = 0.0, $4197 = 0.0, $4198 = 0.0;
 var $4199 = 0.0, $42 = 0, $420 = 0, $4200 = 0.0, $4201 = 0.0, $4202 = 0.0, $4203 = 0, $4204 = 0.0, $4205 = 0.0, $4206 = 0.0, $4207 = 0.0, $4208 = 0.0, $4209 = 0.0, $421 = 0, $4210 = 0.0, $4211 = 0.0, $4212 = 0.0, $4213 = 0.0, $4214 = 0.0, $4215 = 0.0;
 var $4216 = 0.0, $4217 = 0.0, $4218 = 0.0, $4219 = 0.0, $422 = 0, $4220 = 0.0, $4221 = 0.0, $4222 = 0.0, $4223 = 0, $4224 = 0.0, $4225 = 0, $4226 = 0.0, $4227 = 0.0, $4228 = 0.0, $4229 = 0.0, $423 = 0, $4230 = 0.0, $4231 = 0.0, $4232 = 0.0, $4233 = 0.0;
 var $4234 = 0.0, $4235 = 0.0, $4236 = 0.0, $4237 = 0.0, $4238 = 0.0, $4239 = 0.0, $424 = 0, $4240 = 0.0, $4241 = 0.0, $4242 = 0.0, $4243 = 0.0, $4244 = 0.0, $4245 = 0.0, $4246 = 0.0, $4247 = 0.0, $4248 = 0.0, $4249 = 0.0, $425 = 0, $4250 = 0.0, $4251 = 0.0;
 var $4252 = 0.0, $4253 = 0.0, $4254 = 0.0, $4255 = 0.0, $4256 = 0.0, $4257 = 0.0, $4258 = 0.0, $4259 = 0.0, $426 = 0, $4260 = 0.0, $4261 = 0.0, $4262 = 0, $4263 = 0.0, $4264 = 0.0, $4265 = 0.0, $4266 = 0.0, $4267 = 0.0, $4268 = 0, $4269 = 0.0, $427 = 0;
 var $4270 = 0, $4271 = 0.0, $4272 = 0.0, $4273 = 0.0, $4274 = 0.0, $4275 = 0.0, $4276 = 0.0, $4277 = 0.0, $4278 = 0.0, $4279 = 0.0, $428 = 0, $4280 = 0.0, $4281 = 0.0, $4282 = 0.0, $4283 = 0.0, $4284 = 0.0, $4285 = 0.0, $4286 = 0.0, $4287 = 0.0, $4288 = 0.0;
 var $4289 = 0.0, $429 = 0, $4290 = 0.0, $4291 = 0.0, $4292 = 0.0, $4293 = 0.0, $4294 = 0.0, $4295 = 0.0, $4296 = 0.0, $4297 = 0.0, $4298 = 0.0, $4299 = 0.0, $43 = 0, $430 = 0, $4300 = 0.0, $4301 = 0.0, $4302 = 0.0, $4303 = 0.0, $4304 = 0.0, $4305 = 0.0;
 var $4306 = 0.0, $4307 = 0.0, $4308 = 0.0, $4309 = 0.0, $431 = 0, $4310 = 0.0, $4311 = 0.0, $4312 = 0, $4313 = 0.0, $4314 = 0.0, $4315 = 0.0, $4316 = 0.0, $4317 = 0.0, $4318 = 0, $4319 = 0.0, $432 = 0, $4320 = 0, $4321 = 0.0, $4322 = 0.0, $4323 = 0.0;
 var $4324 = 0.0, $4325 = 0.0, $4326 = 0.0, $4327 = 0.0, $4328 = 0.0, $4329 = 0.0, $433 = 0, $4330 = 0.0, $4331 = 0.0, $4332 = 0.0, $4333 = 0.0, $4334 = 0.0, $4335 = 0.0, $4336 = 0, $4337 = 0.0, $4338 = 0.0, $4339 = 0.0, $434 = 0, $4340 = 0.0, $4341 = 0;
 var $4342 = 0.0, $4343 = 0, $4344 = 0.0, $4345 = 0, $4346 = 0.0, $4347 = 0.0, $4348 = 0.0, $4349 = 0.0, $435 = 0, $4350 = 0.0, $4351 = 0.0, $4352 = 0.0, $4353 = 0.0, $4354 = 0.0, $4355 = 0.0, $4356 = 0.0, $4357 = 0.0, $4358 = 0.0, $4359 = 0.0, $436 = 0;
 var $4360 = 0.0, $4361 = 0.0, $4362 = 0.0, $4363 = 0.0, $4364 = 0.0, $4365 = 0.0, $4366 = 0.0, $4367 = 0.0, $4368 = 0, $4369 = 0.0, $437 = 0, $4370 = 0.0, $4371 = 0.0, $4372 = 0.0, $4373 = 0.0, $4374 = 0, $4375 = 0.0, $4376 = 0, $4377 = 0.0, $4378 = 0.0;
 var $4379 = 0.0, $438 = 0, $4380 = 0.0, $4381 = 0.0, $4382 = 0.0, $4383 = 0.0, $4384 = 0.0, $4385 = 0.0, $4386 = 0.0, $4387 = 0.0, $4388 = 0.0, $4389 = 0.0, $439 = 0, $4390 = 0.0, $4391 = 0.0, $4392 = 0.0, $4393 = 0.0, $4394 = 0.0, $4395 = 0.0, $4396 = 0.0;
 var $4397 = 0.0, $4398 = 0, $4399 = 0.0, $44 = 0, $440 = 0, $4400 = 0.0, $4401 = 0.0, $4402 = 0.0, $4403 = 0.0, $4404 = 0.0, $4405 = 0.0, $4406 = 0.0, $4407 = 0.0, $4408 = 0.0, $4409 = 0, $441 = 0, $4410 = 0.0, $4411 = 0, $4412 = 0.0, $4413 = 0.0;
 var $4414 = 0.0, $4415 = 0.0, $4416 = 0.0, $4417 = 0.0, $4418 = 0.0, $4419 = 0.0, $442 = 0, $4420 = 0.0, $4421 = 0.0, $4422 = 0.0, $4423 = 0.0, $4424 = 0.0, $4425 = 0.0, $4426 = 0.0, $4427 = 0.0, $4428 = 0.0, $4429 = 0.0, $443 = 0, $4430 = 0.0, $4431 = 0.0;
 var $4432 = 0.0, $4433 = 0.0, $4434 = 0.0, $4435 = 0.0, $4436 = 0.0, $4437 = 0.0, $4438 = 0.0, $4439 = 0.0, $444 = 0, $4440 = 0.0, $4441 = 0, $4442 = 0.0, $4443 = 0.0, $4444 = 0.0, $4445 = 0.0, $4446 = 0.0, $4447 = 0, $4448 = 0.0, $4449 = 0, $445 = 0;
 var $4450 = 0.0, $4451 = 0.0, $4452 = 0.0, $4453 = 0.0, $4454 = 0.0, $4455 = 0.0, $4456 = 0.0, $4457 = 0.0, $4458 = 0.0, $4459 = 0.0, $446 = 0, $4460 = 0.0, $4461 = 0, $4462 = 0.0, $4463 = 0.0, $4464 = 0.0, $4465 = 0.0, $4466 = 0.0, $4467 = 0, $4468 = 0.0;
 var $4469 = 0, $447 = 0, $4470 = 0.0, $4471 = 0.0, $4472 = 0.0, $4473 = 0.0, $4474 = 0.0, $4475 = 0.0, $4476 = 0, $4477 = 0.0, $4478 = 0.0, $4479 = 0.0, $448 = 0, $4480 = 0.0, $4481 = 0.0, $4482 = 0, $4483 = 0.0, $4484 = 0, $4485 = 0.0, $4486 = 0;
 var $4487 = 0.0, $4488 = 0.0, $4489 = 0.0, $449 = 0, $4490 = 0.0, $4491 = 0.0, $4492 = 0.0, $4493 = 0.0, $4494 = 0.0, $4495 = 0.0, $4496 = 0.0, $4497 = 0.0, $4498 = 0.0, $4499 = 0, $45 = 0, $450 = 0, $4500 = 0.0, $4501 = 0.0, $4502 = 0, $4503 = 0.0;
 var $4504 = 0, $4505 = 0.0, $4506 = 0, $4507 = 0.0, $4508 = 0.0, $4509 = 0.0, $451 = 0, $4510 = 0.0, $4511 = 0.0, $4512 = 0.0, $4513 = 0, $4514 = 0.0, $4515 = 0.0, $4516 = 0.0, $4517 = 0, $4518 = 0, $4519 = 0.0, $452 = 0, $4520 = 0.0, $4521 = 0.0;
 var $4522 = 0.0, $4523 = 0.0, $4524 = 0.0, $4525 = 0.0, $4526 = 0.0, $4527 = 0.0, $4528 = 0, $4529 = 0.0, $453 = 0, $4530 = 0, $4531 = 0.0, $4532 = 0.0, $4533 = 0, $4534 = 0.0, $4535 = 0, $4536 = 0.0, $4537 = 0, $4538 = 0, $4539 = 0, $454 = 0;
 var $4540 = 0, $4541 = 0.0, $4542 = 0.0, $4543 = 0.0, $4544 = 0.0, $4545 = 0, $4546 = 0.0, $4547 = 0.0, $4548 = 0.0, $4549 = 0.0, $455 = 0, $4550 = 0, $4551 = 0.0, $4552 = 0.0, $4553 = 0.0, $4554 = 0.0, $4555 = 0.0, $4556 = 0.0, $4557 = 0.0, $4558 = 0.0;
 var $4559 = 0.0, $456 = 0, $4560 = 0.0, $4561 = 0.0, $4562 = 0.0, $4563 = 0.0, $4564 = 0, $4565 = 0, $4566 = 0, $4567 = 0.0, $4568 = 0.0, $4569 = 0.0, $457 = 0, $4570 = 0.0, $4571 = 0.0, $4572 = 0.0, $4573 = 0.0, $4574 = 0.0, $4575 = 0.0, $4576 = 0.0;
 var $4577 = 0.0, $4578 = 0.0, $4579 = 0.0, $458 = 0, $4580 = 0, $4581 = 0.0, $4582 = 0.0, $4583 = 0, $4584 = 0.0, $4585 = 0, $4586 = 0.0, $4587 = 0, $4588 = 0.0, $4589 = 0.0, $459 = 0, $4590 = 0.0, $4591 = 0.0, $4592 = 0.0, $4593 = 0.0, $4594 = 0;
 var $4595 = 0.0, $4596 = 0.0, $4597 = 0.0, $4598 = 0, $4599 = 0, $46 = 0, $460 = 0, $4600 = 0.0, $4601 = 0.0, $4602 = 0.0, $4603 = 0.0, $4604 = 0.0, $4605 = 0.0, $4606 = 0.0, $4607 = 0.0, $4608 = 0.0, $4609 = 0, $461 = 0, $4610 = 0.0, $4611 = 0;
 var $4612 = 0.0, $4613 = 0.0, $4614 = 0, $4615 = 0.0, $4616 = 0, $4617 = 0.0, $4618 = 0, $4619 = 0, $462 = 0, $4620 = 0, $4621 = 0, $4622 = 0.0, $4623 = 0.0, $4624 = 0.0, $4625 = 0.0, $4626 = 0, $4627 = 0.0, $4628 = 0.0, $4629 = 0.0, $463 = 0;
 var $4630 = 0.0, $4631 = 0, $4632 = 0.0, $4633 = 0.0, $4634 = 0.0, $4635 = 0.0, $4636 = 0.0, $4637 = 0.0, $4638 = 0.0, $4639 = 0.0, $464 = 0, $4640 = 0.0, $4641 = 0.0, $4642 = 0.0, $4643 = 0.0, $4644 = 0.0, $4645 = 0, $4646 = 0, $4647 = 0, $4648 = 0.0;
 var $4649 = 0.0, $465 = 0, $4650 = 0.0, $4651 = 0.0, $4652 = 0.0, $4653 = 0.0, $4654 = 0, $4655 = 0, $4656 = 0.0, $4657 = 0.0, $4658 = 0.0, $4659 = 0.0, $466 = 0, $4660 = 0.0, $4661 = 0.0, $4662 = 0.0, $4663 = 0, $4664 = 0, $4665 = 0.0, $4666 = 0.0;
 var $4667 = 0.0, $4668 = 0.0, $4669 = 0.0, $467 = 0, $4670 = 0.0, $4671 = 0.0, $4672 = 0, $4673 = 0.0, $4674 = 0, $4675 = 0.0, $4676 = 0.0, $4677 = 0.0, $4678 = 0.0, $4679 = 0.0, $468 = 0, $4680 = 0.0, $4681 = 0.0, $4682 = 0.0, $4683 = 0.0, $4684 = 0.0;
 var $4685 = 0.0, $4686 = 0.0, $4687 = 0, $4688 = 0.0, $4689 = 0.0, $469 = 0, $4690 = 0.0, $4691 = 0.0, $4692 = 0.0, $4693 = 0.0, $4694 = 0.0, $4695 = 0, $4696 = 0.0, $4697 = 0.0, $4698 = 0.0, $4699 = 0.0, $47 = 0, $470 = 0, $4700 = 0.0, $4701 = 0.0;
 var $4702 = 0.0, $4703 = 0.0, $4704 = 0.0, $4705 = 0.0, $4706 = 0.0, $4707 = 0.0, $4708 = 0, $4709 = 0.0, $471 = 0, $4710 = 0.0, $4711 = 0.0, $4712 = 0.0, $4713 = 0.0, $4714 = 0, $4715 = 0.0, $4716 = 0, $4717 = 0.0, $4718 = 0.0, $4719 = 0.0, $472 = 0;
 var $4720 = 0.0, $4721 = 0.0, $4722 = 0.0, $4723 = 0, $4724 = 0.0, $4725 = 0.0, $4726 = 0.0, $4727 = 0.0, $4728 = 0.0, $4729 = 0, $473 = 0, $4730 = 0.0, $4731 = 0, $4732 = 0.0, $4733 = 0, $4734 = 0.0, $4735 = 0.0, $4736 = 0.0, $4737 = 0.0, $4738 = 0.0;
 var $4739 = 0.0, $474 = 0, $4740 = 0.0, $4741 = 0.0, $4742 = 0.0, $4743 = 0.0, $4744 = 0.0, $4745 = 0.0, $4746 = 0, $4747 = 0.0, $4748 = 0.0, $4749 = 0, $475 = 0, $4750 = 0.0, $4751 = 0, $4752 = 0.0, $4753 = 0, $4754 = 0.0, $4755 = 0.0, $4756 = 0.0;
 var $4757 = 0.0, $4758 = 0.0, $4759 = 0.0, $476 = 0, $4760 = 0, $4761 = 0.0, $4762 = 0.0, $4763 = 0.0, $4764 = 0, $4765 = 0, $4766 = 0.0, $4767 = 0.0, $4768 = 0.0, $4769 = 0.0, $477 = 0, $4770 = 0.0, $4771 = 0.0, $4772 = 0.0, $4773 = 0.0, $4774 = 0.0;
 var $4775 = 0, $4776 = 0.0, $4777 = 0, $4778 = 0.0, $4779 = 0.0, $478 = 0, $4780 = 0, $4781 = 0.0, $4782 = 0, $4783 = 0.0, $4784 = 0, $4785 = 0, $4786 = 0, $4787 = 0, $4788 = 0.0, $4789 = 0.0, $479 = 0, $4790 = 0.0, $4791 = 0.0, $4792 = 0;
 var $4793 = 0.0, $4794 = 0.0, $4795 = 0.0, $4796 = 0.0, $4797 = 0, $4798 = 0.0, $4799 = 0.0, $48 = 0, $480 = 0, $4800 = 0.0, $4801 = 0.0, $4802 = 0.0, $4803 = 0.0, $4804 = 0.0, $4805 = 0.0, $4806 = 0.0, $4807 = 0.0, $4808 = 0.0, $4809 = 0.0, $481 = 0;
 var $4810 = 0.0, $4811 = 0, $4812 = 0, $4813 = 0, $4814 = 0.0, $4815 = 0.0, $4816 = 0.0, $4817 = 0.0, $4818 = 0.0, $4819 = 0.0, $482 = 0, $4820 = 0.0, $4821 = 0.0, $4822 = 0.0, $4823 = 0.0, $4824 = 0.0, $4825 = 0.0, $4826 = 0.0, $4827 = 0, $4828 = 0.0;
 var $4829 = 0.0, $483 = 0, $4830 = 0, $4831 = 0.0, $4832 = 0, $4833 = 0.0, $4834 = 0, $4835 = 0.0, $4836 = 0.0, $4837 = 0.0, $4838 = 0.0, $4839 = 0.0, $484 = 0, $4840 = 0.0, $4841 = 0, $4842 = 0.0, $4843 = 0.0, $4844 = 0.0, $4845 = 0, $4846 = 0;
 var $4847 = 0.0, $4848 = 0.0, $4849 = 0.0, $485 = 0, $4850 = 0.0, $4851 = 0.0, $4852 = 0.0, $4853 = 0.0, $4854 = 0.0, $4855 = 0.0, $4856 = 0, $4857 = 0.0, $4858 = 0, $4859 = 0.0, $486 = 0, $4860 = 0.0, $4861 = 0, $4862 = 0.0, $4863 = 0, $4864 = 0.0;
 var $4865 = 0, $4866 = 0, $4867 = 0, $4868 = 0, $4869 = 0.0, $487 = 0, $4870 = 0.0, $4871 = 0.0, $4872 = 0.0, $4873 = 0, $4874 = 0.0, $4875 = 0.0, $4876 = 0.0, $4877 = 0.0, $4878 = 0, $4879 = 0.0, $488 = 0, $4880 = 0.0, $4881 = 0.0, $4882 = 0.0;
 var $4883 = 0.0, $4884 = 0.0, $4885 = 0.0, $4886 = 0.0, $4887 = 0.0, $4888 = 0.0, $4889 = 0.0, $489 = 0, $4890 = 0.0, $4891 = 0.0, $4892 = 0, $4893 = 0, $4894 = 0, $4895 = 0.0, $4896 = 0.0, $4897 = 0.0, $4898 = 0.0, $4899 = 0.0, $49 = 0, $490 = 0;
 var $4900 = 0.0, $4901 = 0.0, $4902 = 0.0, $4903 = 0.0, $4904 = 0, $4905 = 0, $4906 = 0.0, $4907 = 0.0, $4908 = 0.0, $4909 = 0.0, $491 = 0, $4910 = 0, $4911 = 0, $4912 = 0.0, $4913 = 0.0, $4914 = 0.0, $4915 = 0.0, $4916 = 0.0, $4917 = 0.0, $4918 = 0.0;
 var $4919 = 0, $492 = 0, $4920 = 0.0, $4921 = 0, $4922 = 0.0, $4923 = 0.0, $4924 = 0.0, $4925 = 0.0, $4926 = 0.0, $4927 = 0.0, $4928 = 0.0, $4929 = 0.0, $493 = 0, $4930 = 0.0, $4931 = 0.0, $4932 = 0.0, $4933 = 0.0, $4934 = 0, $4935 = 0.0, $4936 = 0.0;
 var $4937 = 0.0, $4938 = 0.0, $4939 = 0.0, $494 = 0, $4940 = 0.0, $4941 = 0.0, $4942 = 0, $4943 = 0.0, $4944 = 0.0, $4945 = 0.0, $4946 = 0.0, $4947 = 0.0, $4948 = 0.0, $4949 = 0.0, $495 = 0, $4950 = 0.0, $4951 = 0.0, $4952 = 0.0, $4953 = 0.0, $4954 = 0.0;
 var $4955 = 0, $4956 = 0.0, $4957 = 0.0, $4958 = 0, $4959 = 0.0, $496 = 0, $4960 = 0, $4961 = 0.0, $4962 = 0, $4963 = 0.0, $4964 = 0.0, $4965 = 0.0, $4966 = 0.0, $4967 = 0.0, $4968 = 0.0, $4969 = 0, $497 = 0, $4970 = 0.0, $4971 = 0.0, $4972 = 0.0;
 var $4973 = 0.0, $4974 = 0.0, $4975 = 0.0, $4976 = 0.0, $4977 = 0.0, $4978 = 0.0, $4979 = 0.0, $498 = 0, $4980 = 0.0, $4981 = 0.0, $4982 = 0.0, $4983 = 0.0, $4984 = 0.0, $4985 = 0, $4986 = 0.0, $4987 = 0.0, $4988 = 0.0, $4989 = 0.0, $499 = 0, $4990 = 0.0;
 var $4991 = 0.0, $4992 = 0.0, $4993 = 0.0, $4994 = 0.0, $4995 = 0.0, $4996 = 0.0, $4997 = 0.0, $4998 = 0.0, $4999 = 0.0, $5 = 0, $50 = 0, $500 = 0, $5000 = 0.0, $5001 = 0, $5002 = 0.0, $5003 = 0.0, $5004 = 0.0, $5005 = 0.0, $5006 = 0.0, $5007 = 0.0;
 var $5008 = 0.0, $5009 = 0.0, $501 = 0, $5010 = 0.0, $5011 = 0.0, $5012 = 0.0, $5013 = 0, $5014 = 0, $5015 = 0.0, $5016 = 0.0, $5017 = 0.0, $5018 = 0.0, $5019 = 0.0, $502 = 0, $5020 = 0.0, $5021 = 0.0, $5022 = 0.0, $5023 = 0.0, $5024 = 0, $5025 = 0.0;
 var $5026 = 0, $5027 = 0.0, $5028 = 0.0, $5029 = 0, $503 = 0, $5030 = 0.0, $5031 = 0, $5032 = 0.0, $5033 = 0, $5034 = 0, $5035 = 0, $5036 = 0, $5037 = 0, $5038 = 0, $5039 = 0, $504 = 0, $5040 = 0, $5041 = 0, $5042 = 0, $5043 = 0.0;
 var $5044 = 0, $5045 = 0.0, $5046 = 0.0, $5047 = 0.0, $5048 = 0, $5049 = 0.0, $505 = 0, $5050 = 0, $5051 = 0.0, $5052 = 0.0, $5053 = 0.0, $5054 = 0, $5055 = 0, $5056 = 0, $5057 = 0.0, $5058 = 0, $5059 = 0.0, $506 = 0, $5060 = 0, $5061 = 0.0;
 var $5062 = 0.0, $5063 = 0.0, $5064 = 0.0, $5065 = 0.0, $5066 = 0.0, $5067 = 0.0, $5068 = 0.0, $5069 = 0.0, $507 = 0, $5070 = 0.0, $5071 = 0.0, $5072 = 0.0, $5073 = 0.0, $5074 = 0.0, $5075 = 0.0, $5076 = 0.0, $5077 = 0.0, $5078 = 0.0, $5079 = 0.0, $508 = 0;
 var $5080 = 0.0, $5081 = 0.0, $5082 = 0.0, $5083 = 0.0, $5084 = 0, $5085 = 0.0, $5086 = 0.0, $5087 = 0.0, $5088 = 0.0, $5089 = 0, $509 = 0, $5090 = 0.0, $5091 = 0, $5092 = 0, $5093 = 0.0, $5094 = 0.0, $5095 = 0.0, $5096 = 0.0, $5097 = 0.0, $5098 = 0.0;
 var $5099 = 0.0, $51 = 0, $510 = 0, $5100 = 0.0, $5101 = 0.0, $5102 = 0.0, $5103 = 0.0, $5104 = 0, $5105 = 0, $5106 = 0.0, $5107 = 0.0, $5108 = 0.0, $5109 = 0.0, $511 = 0, $5110 = 0.0, $5111 = 0.0, $5112 = 0.0, $5113 = 0.0, $5114 = 0.0, $5115 = 0;
 var $5116 = 0.0, $5117 = 0, $5118 = 0.0, $5119 = 0.0, $512 = 0, $5120 = 0, $5121 = 0.0, $5122 = 0, $5123 = 0.0, $5124 = 0, $5125 = 0, $5126 = 0, $5127 = 0, $5128 = 0, $5129 = 0, $513 = 0, $5130 = 0, $5131 = 0, $5132 = 0, $5133 = 0;
 var $5134 = 0.0, $5135 = 0, $5136 = 0.0, $5137 = 0.0, $5138 = 0.0, $5139 = 0, $514 = 0, $5140 = 0.0, $5141 = 0, $5142 = 0.0, $5143 = 0.0, $5144 = 0.0, $5145 = 0, $5146 = 0, $5147 = 0, $5148 = 0.0, $5149 = 0, $515 = 0, $5150 = 0.0, $5151 = 0;
 var $5152 = 0.0, $5153 = 0.0, $5154 = 0.0, $5155 = 0.0, $5156 = 0.0, $5157 = 0.0, $5158 = 0.0, $5159 = 0.0, $516 = 0, $5160 = 0.0, $5161 = 0.0, $5162 = 0.0, $5163 = 0.0, $5164 = 0.0, $5165 = 0.0, $5166 = 0.0, $5167 = 0.0, $5168 = 0.0, $5169 = 0.0, $517 = 0;
 var $5170 = 0.0, $5171 = 0.0, $5172 = 0.0, $5173 = 0.0, $5174 = 0.0, $5175 = 0, $5176 = 0.0, $5177 = 0.0, $5178 = 0.0, $5179 = 0.0, $518 = 0, $5180 = 0, $5181 = 0.0, $5182 = 0, $5183 = 0, $5184 = 0.0, $5185 = 0.0, $5186 = 0.0, $5187 = 0, $5188 = 0;
 var $5189 = 0.0, $519 = 0, $5190 = 0.0, $5191 = 0.0, $5192 = 0.0, $5193 = 0.0, $5194 = 0.0, $5195 = 0.0, $5196 = 0.0, $5197 = 0.0, $5198 = 0, $5199 = 0.0, $52 = 0, $520 = 0, $5200 = 0, $5201 = 0.0, $5202 = 0.0, $5203 = 0, $5204 = 0.0, $5205 = 0;
 var $5206 = 0.0, $5207 = 0, $5208 = 0, $5209 = 0, $521 = 0, $5210 = 0, $5211 = 0, $5212 = 0, $5213 = 0, $5214 = 0, $5215 = 0, $5216 = 0, $5217 = 0.0, $5218 = 0, $5219 = 0.0, $522 = 0, $5220 = 0.0, $5221 = 0.0, $5222 = 0, $5223 = 0.0;
 var $5224 = 0, $5225 = 0.0, $5226 = 0.0, $5227 = 0.0, $5228 = 0, $5229 = 0, $523 = 0, $5230 = 0, $5231 = 0.0, $5232 = 0, $5233 = 0.0, $5234 = 0, $5235 = 0.0, $5236 = 0.0, $5237 = 0.0, $5238 = 0.0, $5239 = 0.0, $524 = 0, $5240 = 0.0, $5241 = 0.0;
 var $5242 = 0.0, $5243 = 0.0, $5244 = 0.0, $5245 = 0.0, $5246 = 0.0, $5247 = 0.0, $5248 = 0.0, $5249 = 0.0, $525 = 0, $5250 = 0.0, $5251 = 0.0, $5252 = 0.0, $5253 = 0.0, $5254 = 0.0, $5255 = 0.0, $5256 = 0.0, $5257 = 0.0, $5258 = 0.0, $5259 = 0.0, $526 = 0;
 var $5260 = 0, $5261 = 0.0, $5262 = 0.0, $5263 = 0.0, $5264 = 0.0, $5265 = 0.0, $5266 = 0.0, $5267 = 0.0, $5268 = 0.0, $5269 = 0.0, $527 = 0, $5270 = 0, $5271 = 0.0, $5272 = 0, $5273 = 0, $5274 = 0.0, $5275 = 0.0, $5276 = 0.0, $5277 = 0.0, $5278 = 0.0;
 var $5279 = 0.0, $528 = 0, $5280 = 0.0, $5281 = 0.0, $5282 = 0.0, $5283 = 0.0, $5284 = 0.0, $5285 = 0.0, $5286 = 0.0, $5287 = 0, $5288 = 0.0, $5289 = 0.0, $529 = 0, $5290 = 0, $5291 = 0.0, $5292 = 0, $5293 = 0.0, $5294 = 0, $5295 = 0.0, $5296 = 0.0;
 var $5297 = 0.0, $5298 = 0.0, $5299 = 0.0, $53 = 0, $530 = 0, $5300 = 0.0, $5301 = 0, $5302 = 0.0, $5303 = 0.0, $5304 = 0.0, $5305 = 0.0, $5306 = 0.0, $5307 = 0.0, $5308 = 0.0, $5309 = 0.0, $531 = 0, $5310 = 0.0, $5311 = 0.0, $5312 = 0.0, $5313 = 0.0;
 var $5314 = 0.0, $5315 = 0.0, $5316 = 0.0, $5317 = 0, $5318 = 0.0, $5319 = 0.0, $532 = 0, $5320 = 0.0, $5321 = 0.0, $5322 = 0.0, $5323 = 0.0, $5324 = 0.0, $5325 = 0.0, $5326 = 0.0, $5327 = 0.0, $5328 = 0.0, $5329 = 0.0, $533 = 0, $5330 = 0.0, $5331 = 0.0;
 var $5332 = 0.0, $5333 = 0, $5334 = 0.0, $5335 = 0.0, $5336 = 0.0, $5337 = 0.0, $5338 = 0.0, $5339 = 0.0, $534 = 0, $5340 = 0.0, $5341 = 0.0, $5342 = 0.0, $5343 = 0.0, $5344 = 0.0, $5345 = 0, $5346 = 0, $5347 = 0.0, $5348 = 0.0, $5349 = 0.0, $535 = 0;
 var $5350 = 0.0, $5351 = 0.0, $5352 = 0.0, $5353 = 0.0, $5354 = 0.0, $5355 = 0.0, $5356 = 0, $5357 = 0.0, $5358 = 0, $5359 = 0.0, $536 = 0, $5360 = 0.0, $5361 = 0, $5362 = 0.0, $5363 = 0, $5364 = 0.0, $5365 = 0, $5366 = 0, $5367 = 0, $5368 = 0;
 var $5369 = 0, $537 = 0, $5370 = 0, $5371 = 0, $5372 = 0, $5373 = 0, $5374 = 0, $5375 = 0.0, $5376 = 0, $5377 = 0.0, $5378 = 0.0, $5379 = 0.0, $538 = 0, $5380 = 0, $5381 = 0.0, $5382 = 0, $5383 = 0.0, $5384 = 0.0, $5385 = 0.0, $5386 = 0;
 var $5387 = 0, $5388 = 0, $5389 = 0.0, $539 = 0, $5390 = 0, $5391 = 0.0, $5392 = 0, $5393 = 0.0, $5394 = 0.0, $5395 = 0.0, $5396 = 0.0, $5397 = 0.0, $5398 = 0.0, $5399 = 0.0, $54 = 0, $540 = 0, $5400 = 0.0, $5401 = 0.0, $5402 = 0.0, $5403 = 0.0;
 var $5404 = 0.0, $5405 = 0.0, $5406 = 0.0, $5407 = 0.0, $5408 = 0.0, $5409 = 0.0, $541 = 0, $5410 = 0.0, $5411 = 0.0, $5412 = 0.0, $5413 = 0.0, $5414 = 0.0, $5415 = 0.0, $5416 = 0, $5417 = 0.0, $5418 = 0.0, $5419 = 0.0, $542 = 0, $5420 = 0.0, $5421 = 0;
 var $5422 = 0.0, $5423 = 0, $5424 = 0, $5425 = 0.0, $5426 = 0.0, $5427 = 0.0, $5428 = 0.0, $5429 = 0.0, $543 = 0, $5430 = 0.0, $5431 = 0.0, $5432 = 0.0, $5433 = 0.0, $5434 = 0.0, $5435 = 0.0, $5436 = 0, $5437 = 0, $5438 = 0.0, $5439 = 0.0, $544 = 0;
 var $5440 = 0.0, $5441 = 0.0, $5442 = 0.0, $5443 = 0.0, $5444 = 0.0, $5445 = 0.0, $5446 = 0.0, $5447 = 0, $5448 = 0.0, $5449 = 0, $545 = 0, $5450 = 0.0, $5451 = 0.0, $5452 = 0, $5453 = 0.0, $5454 = 0, $5455 = 0.0, $5456 = 0, $5457 = 0, $5458 = 0;
 var $5459 = 0, $546 = 0, $5460 = 0, $5461 = 0, $5462 = 0, $5463 = 0, $5464 = 0, $5465 = 0, $5466 = 0.0, $5467 = 0, $5468 = 0.0, $5469 = 0.0, $547 = 0, $5470 = 0.0, $5471 = 0, $5472 = 0.0, $5473 = 0, $5474 = 0.0, $5475 = 0.0, $5476 = 0.0;
 var $5477 = 0, $5478 = 0, $5479 = 0, $548 = 0, $5480 = 0.0, $5481 = 0, $5482 = 0.0, $5483 = 0, $5484 = 0.0, $5485 = 0.0, $5486 = 0.0, $5487 = 0.0, $5488 = 0.0, $5489 = 0.0, $549 = 0, $5490 = 0.0, $5491 = 0.0, $5492 = 0.0, $5493 = 0.0, $5494 = 0.0;
 var $5495 = 0.0, $5496 = 0.0, $5497 = 0.0, $5498 = 0.0, $5499 = 0.0, $55 = 0, $550 = 0, $5500 = 0.0, $5501 = 0.0, $5502 = 0.0, $5503 = 0.0, $5504 = 0.0, $5505 = 0.0, $5506 = 0.0, $5507 = 0, $5508 = 0.0, $5509 = 0.0, $551 = 0, $5510 = 0.0, $5511 = 0.0;
 var $5512 = 0, $5513 = 0.0, $5514 = 0, $5515 = 0, $5516 = 0.0, $5517 = 0.0, $5518 = 0.0, $5519 = 0, $552 = 0, $5520 = 0, $5521 = 0.0, $5522 = 0.0, $5523 = 0.0, $5524 = 0.0, $5525 = 0.0, $5526 = 0.0, $5527 = 0.0, $5528 = 0.0, $5529 = 0.0, $553 = 0;
 var $5530 = 0, $5531 = 0.0, $5532 = 0, $5533 = 0.0, $5534 = 0.0, $5535 = 0, $5536 = 0.0, $5537 = 0, $5538 = 0.0, $5539 = 0, $554 = 0, $5540 = 0, $5541 = 0, $5542 = 0, $5543 = 0, $5544 = 0, $5545 = 0, $5546 = 0, $5547 = 0, $5548 = 0;
 var $5549 = 0.0, $555 = 0, $5550 = 0, $5551 = 0.0, $5552 = 0.0, $5553 = 0.0, $5554 = 0, $5555 = 0.0, $5556 = 0, $5557 = 0.0, $5558 = 0.0, $5559 = 0.0, $556 = 0, $5560 = 0, $5561 = 0, $5562 = 0, $5563 = 0.0, $5564 = 0, $5565 = 0.0, $5566 = 0;
 var $5567 = 0.0, $5568 = 0.0, $5569 = 0.0, $557 = 0, $5570 = 0.0, $5571 = 0.0, $5572 = 0.0, $5573 = 0.0, $5574 = 0.0, $5575 = 0.0, $5576 = 0.0, $5577 = 0.0, $5578 = 0.0, $5579 = 0.0, $558 = 0, $5580 = 0.0, $5581 = 0.0, $5582 = 0.0, $5583 = 0.0, $5584 = 0.0;
 var $5585 = 0.0, $5586 = 0.0, $5587 = 0.0, $5588 = 0.0, $5589 = 0.0, $559 = 0, $5590 = 0.0, $5591 = 0.0, $5592 = 0, $5593 = 0.0, $5594 = 0.0, $5595 = 0.0, $5596 = 0.0, $5597 = 0.0, $5598 = 0.0, $5599 = 0.0, $56 = 0, $560 = 0, $5600 = 0.0, $5601 = 0.0;
 var $5602 = 0, $5603 = 0.0, $5604 = 0, $5605 = 0, $5606 = 0.0, $5607 = 0.0, $5608 = 0.0, $5609 = 0.0, $561 = 0, $5610 = 0.0, $5611 = 0.0, $5612 = 0.0, $5613 = 0.0, $5614 = 0.0, $5615 = 0.0, $5616 = 0.0, $5617 = 0.0, $5618 = 0, $5619 = 0.0, $562 = 0;
 var $5620 = 0.0, $5621 = 0.0, $5622 = 0.0, $5623 = 0.0, $5624 = 0.0, $5625 = 0, $5626 = 0.0, $5627 = 0.0, $5628 = 0.0, $5629 = 0.0, $563 = 0, $5630 = 0.0, $5631 = 0.0, $5632 = 0, $5633 = 0.0, $5634 = 0.0, $5635 = 0.0, $5636 = 0.0, $5637 = 0.0, $5638 = 0;
 var $5639 = 0.0, $564 = 0, $5640 = 0, $5641 = 0.0, $5642 = 0, $5643 = 0.0, $5644 = 0.0, $5645 = 0.0, $5646 = 0.0, $5647 = 0.0, $5648 = 0.0, $5649 = 0.0, $565 = 0, $5650 = 0.0, $5651 = 0.0, $5652 = 0.0, $5653 = 0.0, $5654 = 0.0, $5655 = 0, $5656 = 0.0;
 var $5657 = 0.0, $5658 = 0, $5659 = 0.0, $566 = 0, $5660 = 0, $5661 = 0.0, $5662 = 0, $5663 = 0.0, $5664 = 0.0, $5665 = 0.0, $5666 = 0.0, $5667 = 0.0, $5668 = 0.0, $5669 = 0, $567 = 0, $5670 = 0.0, $5671 = 0.0, $5672 = 0.0, $5673 = 0, $5674 = 0;
 var $5675 = 0.0, $5676 = 0.0, $5677 = 0.0, $5678 = 0.0, $5679 = 0.0, $568 = 0, $5680 = 0.0, $5681 = 0.0, $5682 = 0.0, $5683 = 0.0, $5684 = 0, $5685 = 0.0, $5686 = 0, $5687 = 0.0, $5688 = 0.0, $5689 = 0, $569 = 0, $5690 = 0.0, $5691 = 0, $5692 = 0.0;
 var $5693 = 0, $5694 = 0, $5695 = 0, $5696 = 0, $5697 = 0.0, $5698 = 0.0, $5699 = 0.0, $57 = 0, $570 = 0, $5700 = 0.0, $5701 = 0, $5702 = 0.0, $5703 = 0.0, $5704 = 0.0, $5705 = 0.0, $5706 = 0, $5707 = 0.0, $5708 = 0.0, $5709 = 0.0, $571 = 0;
 var $5710 = 0.0, $5711 = 0.0, $5712 = 0.0, $5713 = 0.0, $5714 = 0.0, $5715 = 0.0, $5716 = 0.0, $5717 = 0.0, $5718 = 0.0, $5719 = 0.0, $572 = 0, $5720 = 0, $5721 = 0, $5722 = 0, $5723 = 0.0, $5724 = 0.0, $5725 = 0.0, $5726 = 0.0, $5727 = 0.0, $5728 = 0.0;
 var $5729 = 0.0, $573 = 0, $5730 = 0.0, $5731 = 0.0, $5732 = 0.0, $5733 = 0.0, $5734 = 0.0, $5735 = 0.0, $5736 = 0, $5737 = 0.0, $5738 = 0.0, $5739 = 0, $574 = 0, $5740 = 0.0, $5741 = 0, $5742 = 0.0, $5743 = 0, $5744 = 0.0, $5745 = 0.0, $5746 = 0.0;
 var $5747 = 0.0, $5748 = 0.0, $5749 = 0.0, $575 = 0, $5750 = 0, $5751 = 0.0, $5752 = 0.0, $5753 = 0.0, $5754 = 0, $5755 = 0, $5756 = 0.0, $5757 = 0.0, $5758 = 0.0, $5759 = 0.0, $576 = 0, $5760 = 0.0, $5761 = 0.0, $5762 = 0.0, $5763 = 0.0, $5764 = 0.0;
 var $5765 = 0, $5766 = 0.0, $5767 = 0, $5768 = 0.0, $5769 = 0.0, $577 = 0, $5770 = 0, $5771 = 0.0, $5772 = 0, $5773 = 0.0, $5774 = 0, $5775 = 0, $5776 = 0, $5777 = 0, $5778 = 0.0, $5779 = 0.0, $578 = 0, $5780 = 0.0, $5781 = 0.0, $5782 = 0;
 var $5783 = 0.0, $5784 = 0.0, $5785 = 0.0, $5786 = 0.0, $5787 = 0, $5788 = 0.0, $5789 = 0.0, $579 = 0, $5790 = 0.0, $5791 = 0.0, $5792 = 0.0, $5793 = 0.0, $5794 = 0.0, $5795 = 0.0, $5796 = 0.0, $5797 = 0.0, $5798 = 0.0, $5799 = 0.0, $58 = 0, $580 = 0;
 var $5800 = 0.0, $5801 = 0, $5802 = 0, $5803 = 0, $5804 = 0.0, $5805 = 0.0, $5806 = 0.0, $5807 = 0.0, $5808 = 0.0, $5809 = 0.0, $581 = 0, $5810 = 0.0, $5811 = 0, $5812 = 0, $5813 = 0.0, $5814 = 0.0, $5815 = 0.0, $5816 = 0.0, $5817 = 0.0, $5818 = 0.0;
 var $5819 = 0.0, $582 = 0, $5820 = 0, $5821 = 0, $5822 = 0.0, $5823 = 0.0, $5824 = 0.0, $5825 = 0.0, $5826 = 0.0, $5827 = 0.0, $5828 = 0.0, $5829 = 0, $583 = 0, $5830 = 0.0, $5831 = 0, $5832 = 0.0, $5833 = 0.0, $5834 = 0.0, $5835 = 0.0, $5836 = 0.0;
 var $5837 = 0.0, $5838 = 0.0, $5839 = 0.0, $584 = 0, $5840 = 0.0, $5841 = 0.0, $5842 = 0.0, $5843 = 0.0, $5844 = 0, $5845 = 0.0, $5846 = 0.0, $5847 = 0.0, $5848 = 0.0, $5849 = 0.0, $585 = 0, $5850 = 0.0, $5851 = 0.0, $5852 = 0, $5853 = 0.0, $5854 = 0.0;
 var $5855 = 0.0, $5856 = 0.0, $5857 = 0.0, $5858 = 0.0, $5859 = 0.0, $586 = 0, $5860 = 0.0, $5861 = 0.0, $5862 = 0.0, $5863 = 0.0, $5864 = 0.0, $5865 = 0, $5866 = 0.0, $5867 = 0.0, $5868 = 0.0, $5869 = 0.0, $587 = 0, $5870 = 0.0, $5871 = 0.0, $5872 = 0;
 var $5873 = 0.0, $5874 = 0.0, $5875 = 0.0, $5876 = 0.0, $5877 = 0.0, $5878 = 0.0, $5879 = 0, $588 = 0, $5880 = 0.0, $5881 = 0.0, $5882 = 0.0, $5883 = 0.0, $5884 = 0.0, $5885 = 0, $5886 = 0.0, $5887 = 0, $5888 = 0.0, $5889 = 0, $589 = 0, $5890 = 0.0;
 var $5891 = 0.0, $5892 = 0.0, $5893 = 0.0, $5894 = 0.0, $5895 = 0.0, $5896 = 0.0, $5897 = 0.0, $5898 = 0.0, $5899 = 0.0, $59 = 0, $590 = 0, $5900 = 0.0, $5901 = 0.0, $5902 = 0, $5903 = 0.0, $5904 = 0.0, $5905 = 0, $5906 = 0.0, $5907 = 0, $5908 = 0.0;
 var $5909 = 0, $591 = 0, $5910 = 0.0, $5911 = 0.0, $5912 = 0.0, $5913 = 0.0, $5914 = 0.0, $5915 = 0.0, $5916 = 0, $5917 = 0.0, $5918 = 0.0, $5919 = 0.0, $592 = 0, $5920 = 0, $5921 = 0, $5922 = 0.0, $5923 = 0.0, $5924 = 0.0, $5925 = 0.0, $5926 = 0.0;
 var $5927 = 0.0, $5928 = 0.0, $5929 = 0.0, $593 = 0, $5930 = 0.0, $5931 = 0, $5932 = 0.0, $5933 = 0, $5934 = 0.0, $5935 = 0.0, $5936 = 0, $5937 = 0.0, $5938 = 0, $5939 = 0.0, $594 = 0, $5940 = 0, $5941 = 0, $5942 = 0, $5943 = 0, $5944 = 0.0;
 var $5945 = 0.0, $5946 = 0.0, $5947 = 0.0, $5948 = 0, $5949 = 0.0, $595 = 0, $5950 = 0.0, $5951 = 0.0, $5952 = 0.0, $5953 = 0, $5954 = 0.0, $5955 = 0.0, $5956 = 0.0, $5957 = 0.0, $5958 = 0.0, $5959 = 0.0, $596 = 0, $5960 = 0.0, $5961 = 0.0, $5962 = 0.0;
 var $5963 = 0.0, $5964 = 0.0, $5965 = 0.0, $5966 = 0.0, $5967 = 0, $5968 = 0, $5969 = 0, $597 = 0, $5970 = 0.0, $5971 = 0.0, $5972 = 0.0, $5973 = 0.0, $5974 = 0.0, $5975 = 0.0, $5976 = 0.0, $5977 = 0.0, $5978 = 0.0, $5979 = 0.0, $598 = 0, $5980 = 0.0;
 var $5981 = 0.0, $5982 = 0.0, $5983 = 0, $5984 = 0.0, $5985 = 0.0, $5986 = 0, $5987 = 0.0, $5988 = 0, $5989 = 0.0, $599 = 0, $5990 = 0, $5991 = 0.0, $5992 = 0.0, $5993 = 0.0, $5994 = 0.0, $5995 = 0.0, $5996 = 0.0, $5997 = 0, $5998 = 0.0, $5999 = 0.0;
 var $6 = 0, $60 = 0, $600 = 0, $6000 = 0.0, $6001 = 0, $6002 = 0, $6003 = 0.0, $6004 = 0.0, $6005 = 0.0, $6006 = 0.0, $6007 = 0.0, $6008 = 0.0, $6009 = 0.0, $601 = 0, $6010 = 0.0, $6011 = 0.0, $6012 = 0, $6013 = 0.0, $6014 = 0, $6015 = 0.0;
 var $6016 = 0.0, $6017 = 0, $6018 = 0.0, $6019 = 0, $602 = 0, $6020 = 0.0, $6021 = 0, $6022 = 0, $6023 = 0, $6024 = 0, $6025 = 0.0, $6026 = 0.0, $6027 = 0.0, $6028 = 0.0, $6029 = 0, $603 = 0, $6030 = 0.0, $6031 = 0.0, $6032 = 0.0, $6033 = 0.0;
 var $6034 = 0, $6035 = 0.0, $6036 = 0.0, $6037 = 0.0, $6038 = 0.0, $6039 = 0.0, $604 = 0, $6040 = 0.0, $6041 = 0.0, $6042 = 0.0, $6043 = 0.0, $6044 = 0.0, $6045 = 0.0, $6046 = 0.0, $6047 = 0.0, $6048 = 0, $6049 = 0, $605 = 0, $6050 = 0, $6051 = 0.0;
 var $6052 = 0.0, $6053 = 0.0, $6054 = 0.0, $6055 = 0.0, $6056 = 0.0, $6057 = 0.0, $6058 = 0, $6059 = 0, $606 = 0, $6060 = 0.0, $6061 = 0.0, $6062 = 0.0, $6063 = 0.0, $6064 = 0.0, $6065 = 0.0, $6066 = 0.0, $6067 = 0, $6068 = 0, $6069 = 0.0, $607 = 0;
 var $6070 = 0.0, $6071 = 0.0, $6072 = 0.0, $6073 = 0.0, $6074 = 0.0, $6075 = 0.0, $6076 = 0, $6077 = 0.0, $6078 = 0, $6079 = 0.0, $608 = 0, $6080 = 0.0, $6081 = 0.0, $6082 = 0.0, $6083 = 0.0, $6084 = 0.0, $6085 = 0.0, $6086 = 0.0, $6087 = 0.0, $6088 = 0.0;
 var $6089 = 0.0, $609 = 0, $6090 = 0.0, $6091 = 0, $6092 = 0.0, $6093 = 0.0, $6094 = 0.0, $6095 = 0.0, $6096 = 0.0, $6097 = 0.0, $6098 = 0.0, $6099 = 0, $61 = 0, $610 = 0, $6100 = 0.0, $6101 = 0.0, $6102 = 0.0, $6103 = 0.0, $6104 = 0.0, $6105 = 0.0;
 var $6106 = 0.0, $6107 = 0.0, $6108 = 0.0, $6109 = 0.0, $611 = 0, $6110 = 0.0, $6111 = 0.0, $6112 = 0.0, $6113 = 0.0, $6114 = 0.0, $6115 = 0.0, $6116 = 0.0, $6117 = 0.0, $6118 = 0.0, $6119 = 0.0, $612 = 0, $6120 = 0.0, $6121 = 0, $6122 = 0, $6123 = 0.0;
 var $6124 = 0.0, $6125 = 0.0, $6126 = 0.0, $6127 = 0.0, $6128 = 0.0, $6129 = 0.0, $613 = 0, $6130 = 0, $6131 = 0, $6132 = 0.0, $6133 = 0.0, $6134 = 0.0, $6135 = 0.0, $6136 = 0.0, $6137 = 0.0, $6138 = 0.0, $6139 = 0, $614 = 0, $6140 = 0.0, $6141 = 0;
 var $6142 = 0.0, $6143 = 0.0, $6144 = 0.0, $6145 = 0.0, $6146 = 0.0, $6147 = 0.0, $6148 = 0.0, $6149 = 0.0, $615 = 0, $6150 = 0.0, $6151 = 0.0, $6152 = 0.0, $6153 = 0.0, $6154 = 0.0, $6155 = 0.0, $6156 = 0.0, $6157 = 0.0, $6158 = 0.0, $6159 = 0.0, $616 = 0;
 var $6160 = 0.0, $6161 = 0.0, $6162 = 0.0, $6163 = 0.0, $6164 = 0.0, $6165 = 0.0, $6166 = 0.0, $6167 = 0.0, $6168 = 0.0, $6169 = 0.0, $617 = 0, $6170 = 0.0, $6171 = 0.0, $6172 = 0.0, $6173 = 0.0, $6174 = 0.0, $6175 = 0.0, $6176 = 0.0, $6177 = 0.0, $6178 = 0.0;
 var $6179 = 0.0, $618 = 0.0, $6180 = 0.0, $6181 = 0, $6182 = 0.0, $6183 = 0.0, $6184 = 0.0, $6185 = 0.0, $6186 = 0.0, $6187 = 0.0, $6188 = 0, $6189 = 0.0, $619 = 0.0, $6190 = 0, $6191 = 0.0, $6192 = 0, $6193 = 0.0, $6194 = 0.0, $6195 = 0.0, $6196 = 0.0;
 var $6197 = 0.0, $6198 = 0.0, $6199 = 0.0, $62 = 0, $620 = 0.0, $6200 = 0.0, $6201 = 0.0, $6202 = 0.0, $6203 = 0.0, $6204 = 0.0, $6205 = 0.0, $6206 = 0.0, $6207 = 0.0, $6208 = 0.0, $6209 = 0.0, $621 = 0.0, $6210 = 0.0, $6211 = 0.0, $6212 = 0, $6213 = 0;
 var $6214 = 0.0, $6215 = 0.0, $6216 = 0.0, $6217 = 0.0, $6218 = 0.0, $6219 = 0.0, $622 = 0.0, $6220 = 0.0, $6221 = 0, $6222 = 0, $6223 = 0.0, $6224 = 0.0, $6225 = 0.0, $6226 = 0.0, $6227 = 0.0, $6228 = 0.0, $6229 = 0.0, $623 = 0.0, $6230 = 0, $6231 = 0.0;
 var $6232 = 0, $6233 = 0.0, $6234 = 0.0, $6235 = 0.0, $6236 = 0.0, $6237 = 0.0, $6238 = 0.0, $6239 = 0.0, $624 = 0.0, $6240 = 0.0, $6241 = 0.0, $6242 = 0.0, $6243 = 0.0, $6244 = 0.0, $6245 = 0.0, $6246 = 0.0, $6247 = 0.0, $6248 = 0.0, $6249 = 0.0, $625 = 0.0;
 var $6250 = 0.0, $6251 = 0.0, $6252 = 0.0, $6253 = 0.0, $6254 = 0.0, $6255 = 0.0, $6256 = 0.0, $6257 = 0.0, $6258 = 0.0, $6259 = 0.0, $626 = 0.0, $6260 = 0.0, $6261 = 0.0, $6262 = 0.0, $6263 = 0.0, $6264 = 0.0, $6265 = 0.0, $6266 = 0.0, $6267 = 0.0, $6268 = 0.0;
 var $6269 = 0.0, $627 = 0.0, $6270 = 0.0, $6271 = 0.0, $6272 = 0, $6273 = 0.0, $6274 = 0.0, $6275 = 0.0, $6276 = 0.0, $6277 = 0.0, $6278 = 0, $6279 = 0.0, $628 = 0.0, $6280 = 0, $6281 = 0.0, $6282 = 0, $6283 = 0.0, $6284 = 0.0, $6285 = 0.0, $6286 = 0.0;
 var $6287 = 0.0, $6288 = 0.0, $6289 = 0.0, $629 = 0.0, $6290 = 0.0, $6291 = 0.0, $6292 = 0, $6293 = 0, $6294 = 0.0, $6295 = 0.0, $6296 = 0.0, $6297 = 0.0, $6298 = 0.0, $6299 = 0.0, $63 = 0, $630 = 0.0, $6300 = 0.0, $6301 = 0.0, $6302 = 0.0, $6303 = 0.0;
 var $6304 = 0.0, $6305 = 0.0, $6306 = 0.0, $6307 = 0.0, $6308 = 0.0, $6309 = 0, $631 = 0.0, $6310 = 0, $6311 = 0.0, $6312 = 0.0, $6313 = 0.0, $6314 = 0.0, $6315 = 0.0, $6316 = 0.0, $6317 = 0.0, $6318 = 0, $6319 = 0.0, $632 = 0.0, $6320 = 0, $6321 = 0.0;
 var $6322 = 0.0, $6323 = 0.0, $6324 = 0.0, $6325 = 0.0, $6326 = 0.0, $6327 = 0.0, $6328 = 0.0, $6329 = 0.0, $633 = 0.0, $6330 = 0.0, $6331 = 0.0, $6332 = 0.0, $6333 = 0.0, $6334 = 0.0, $6335 = 0.0, $6336 = 0.0, $6337 = 0.0, $6338 = 0.0, $6339 = 0.0, $634 = 0.0;
 var $6340 = 0.0, $6341 = 0.0, $6342 = 0.0, $6343 = 0.0, $6344 = 0.0, $6345 = 0.0, $6346 = 0.0, $6347 = 0.0, $6348 = 0.0, $6349 = 0.0, $635 = 0.0, $6350 = 0.0, $6351 = 0.0, $6352 = 0.0, $6353 = 0.0, $6354 = 0.0, $6355 = 0.0, $6356 = 0.0, $6357 = 0.0, $6358 = 0.0;
 var $6359 = 0.0, $636 = 0.0, $6360 = 0, $6361 = 0.0, $6362 = 0.0, $6363 = 0.0, $6364 = 0.0, $6365 = 0.0, $6366 = 0, $6367 = 0.0, $6368 = 0, $6369 = 0.0, $637 = 0.0, $6370 = 0, $6371 = 0.0, $6372 = 0.0, $6373 = 0.0, $6374 = 0.0, $6375 = 0.0, $6376 = 0.0;
 var $6377 = 0.0, $6378 = 0.0, $6379 = 0.0, $638 = 0.0, $6380 = 0.0, $6381 = 0.0, $6382 = 0.0, $6383 = 0.0, $6384 = 0.0, $6385 = 0.0, $6386 = 0.0, $6387 = 0.0, $6388 = 0.0, $6389 = 0, $639 = 0.0, $6390 = 0.0, $6391 = 0.0, $6392 = 0.0, $6393 = 0.0, $6394 = 0;
 var $6395 = 0.0, $6396 = 0, $6397 = 0.0, $6398 = 0, $6399 = 0.0, $64 = 0, $640 = 0.0, $6400 = 0, $6401 = 0.0, $6402 = 0.0, $6403 = 0.0, $6404 = 0.0, $6405 = 0.0, $6406 = 0.0, $6407 = 0.0, $6408 = 0.0, $6409 = 0.0, $641 = 0.0, $6410 = 0.0, $6411 = 0.0;
 var $6412 = 0.0, $6413 = 0.0, $6414 = 0.0, $6415 = 0.0, $6416 = 0.0, $6417 = 0.0, $6418 = 0.0, $6419 = 0.0, $642 = 0.0, $6420 = 0.0, $6421 = 0.0, $6422 = 0, $6423 = 0.0, $6424 = 0.0, $6425 = 0.0, $6426 = 0.0, $6427 = 0.0, $6428 = 0, $6429 = 0.0, $643 = 0.0;
 var $6430 = 0, $6431 = 0.0, $6432 = 0.0, $6433 = 0.0, $6434 = 0.0, $6435 = 0.0, $6436 = 0.0, $6437 = 0.0, $6438 = 0.0, $6439 = 0.0, $644 = 0.0, $6440 = 0.0, $6441 = 0.0, $6442 = 0.0, $6443 = 0.0, $6444 = 0.0, $6445 = 0.0, $6446 = 0.0, $6447 = 0.0, $6448 = 0.0;
 var $6449 = 0.0, $645 = 0.0, $6450 = 0.0, $6451 = 0, $6452 = 0.0, $6453 = 0.0, $6454 = 0.0, $6455 = 0.0, $6456 = 0.0, $6457 = 0.0, $6458 = 0.0, $6459 = 0.0, $646 = 0.0, $6460 = 0.0, $6461 = 0.0, $6462 = 0, $6463 = 0.0, $6464 = 0, $6465 = 0.0, $6466 = 0.0;
 var $6467 = 0.0, $6468 = 0.0, $6469 = 0.0, $647 = 0.0, $6470 = 0.0, $6471 = 0.0, $6472 = 0.0, $6473 = 0.0, $6474 = 0.0, $6475 = 0.0, $6476 = 0.0, $6477 = 0.0, $6478 = 0.0, $6479 = 0.0, $648 = 0.0, $6480 = 0.0, $6481 = 0.0, $6482 = 0.0, $6483 = 0.0, $6484 = 0.0;
 var $6485 = 0, $6486 = 0.0, $6487 = 0.0, $6488 = 0.0, $6489 = 0.0, $649 = 0.0, $6490 = 0.0, $6491 = 0.0, $6492 = 0.0, $6493 = 0.0, $6494 = 0.0, $6495 = 0.0, $6496 = 0.0, $6497 = 0.0, $6498 = 0, $6499 = 0.0, $65 = 0, $650 = 0.0, $6500 = 0, $6501 = 0.0;
 var $6502 = 0.0, $6503 = 0.0, $6504 = 0.0, $6505 = 0.0, $6506 = 0.0, $6507 = 0.0, $6508 = 0.0, $6509 = 0.0, $651 = 0.0, $6510 = 0.0, $6511 = 0.0, $6512 = 0.0, $6513 = 0.0, $6514 = 0.0, $6515 = 0.0, $6516 = 0.0, $6517 = 0.0, $6518 = 0, $6519 = 0.0, $652 = 0.0;
 var $6520 = 0.0, $6521 = 0.0, $6522 = 0.0, $6523 = 0, $6524 = 0.0, $6525 = 0, $6526 = 0.0, $6527 = 0, $6528 = 0.0, $6529 = 0, $653 = 0.0, $6530 = 0.0, $6531 = 0.0, $6532 = 0.0, $6533 = 0.0, $6534 = 0.0, $6535 = 0.0, $6536 = 0, $6537 = 0.0, $6538 = 0.0;
 var $6539 = 0.0, $654 = 0.0, $6540 = 0.0, $6541 = 0.0, $6542 = 0, $6543 = 0.0, $6544 = 0, $6545 = 0.0, $6546 = 0, $6547 = 0.0, $6548 = 0.0, $6549 = 0.0, $655 = 0.0, $6550 = 0.0, $6551 = 0.0, $6552 = 0.0, $6553 = 0.0, $6554 = 0.0, $6555 = 0.0, $6556 = 0.0;
 var $6557 = 0.0, $6558 = 0.0, $6559 = 0, $656 = 0.0, $6560 = 0.0, $6561 = 0.0, $6562 = 0, $6563 = 0.0, $6564 = 0, $6565 = 0.0, $6566 = 0, $6567 = 0.0, $6568 = 0.0, $6569 = 0.0, $657 = 0.0, $6570 = 0.0, $6571 = 0.0, $6572 = 0.0, $6573 = 0, $6574 = 0.0;
 var $6575 = 0.0, $6576 = 0.0, $6577 = 0, $6578 = 0, $6579 = 0.0, $658 = 0.0, $6580 = 0.0, $6581 = 0.0, $6582 = 0.0, $6583 = 0.0, $6584 = 0.0, $6585 = 0.0, $6586 = 0.0, $6587 = 0.0, $6588 = 0, $6589 = 0.0, $659 = 0.0, $6590 = 0, $6591 = 0.0, $6592 = 0.0;
 var $6593 = 0, $6594 = 0.0, $6595 = 0, $6596 = 0.0, $6597 = 0, $6598 = 0, $6599 = 0, $66 = 0, $660 = 0.0, $6600 = 0, $6601 = 0.0, $6602 = 0.0, $6603 = 0.0, $6604 = 0.0, $6605 = 0, $6606 = 0.0, $6607 = 0.0, $6608 = 0.0, $6609 = 0.0, $661 = 0.0;
 var $6610 = 0, $6611 = 0.0, $6612 = 0.0, $6613 = 0.0, $6614 = 0.0, $6615 = 0.0, $6616 = 0.0, $6617 = 0.0, $6618 = 0.0, $6619 = 0.0, $662 = 0.0, $6620 = 0.0, $6621 = 0.0, $6622 = 0.0, $6623 = 0.0, $6624 = 0, $6625 = 0, $6626 = 0, $6627 = 0.0, $6628 = 0.0;
 var $6629 = 0.0, $663 = 0.0, $6630 = 0.0, $6631 = 0.0, $6632 = 0.0, $6633 = 0.0, $6634 = 0.0, $6635 = 0.0, $6636 = 0.0, $6637 = 0.0, $6638 = 0.0, $6639 = 0.0, $664 = 0.0, $6640 = 0, $6641 = 0.0, $6642 = 0.0, $6643 = 0, $6644 = 0.0, $6645 = 0, $6646 = 0.0;
 var $6647 = 0, $6648 = 0.0, $6649 = 0.0, $665 = 0.0, $6650 = 0.0, $6651 = 0.0, $6652 = 0.0, $6653 = 0.0, $6654 = 0, $6655 = 0.0, $6656 = 0.0, $6657 = 0.0, $6658 = 0, $6659 = 0, $666 = 0.0, $6660 = 0.0, $6661 = 0.0, $6662 = 0.0, $6663 = 0.0, $6664 = 0.0;
 var $6665 = 0.0, $6666 = 0.0, $6667 = 0.0, $6668 = 0.0, $6669 = 0, $667 = 0.0, $6670 = 0.0, $6671 = 0, $6672 = 0.0, $6673 = 0.0, $6674 = 0, $6675 = 0.0, $6676 = 0, $6677 = 0.0, $6678 = 0, $6679 = 0, $668 = 0.0, $6680 = 0, $6681 = 0, $6682 = 0.0;
 var $6683 = 0.0, $6684 = 0.0, $6685 = 0.0, $6686 = 0, $6687 = 0.0, $6688 = 0.0, $6689 = 0.0, $669 = 0.0, $6690 = 0.0, $6691 = 0, $6692 = 0.0, $6693 = 0.0, $6694 = 0.0, $6695 = 0.0, $6696 = 0.0, $6697 = 0.0, $6698 = 0.0, $6699 = 0.0, $67 = 0, $670 = 0.0;
 var $6700 = 0.0, $6701 = 0.0, $6702 = 0.0, $6703 = 0.0, $6704 = 0.0, $6705 = 0, $6706 = 0, $6707 = 0, $6708 = 0.0, $6709 = 0.0, $671 = 0.0, $6710 = 0.0, $6711 = 0.0, $6712 = 0.0, $6713 = 0.0, $6714 = 0, $6715 = 0, $6716 = 0.0, $6717 = 0.0, $6718 = 0.0;
 var $6719 = 0.0, $672 = 0.0, $6720 = 0.0, $6721 = 0.0, $6722 = 0.0, $6723 = 0, $6724 = 0, $6725 = 0.0, $6726 = 0.0, $6727 = 0.0, $6728 = 0.0, $6729 = 0.0, $673 = 0.0, $6730 = 0.0, $6731 = 0.0, $6732 = 0, $6733 = 0.0, $6734 = 0, $6735 = 0.0, $6736 = 0.0;
 var $6737 = 0.0, $6738 = 0.0, $6739 = 0.0, $674 = 0.0, $6740 = 0.0, $6741 = 0.0, $6742 = 0.0, $6743 = 0.0, $6744 = 0.0, $6745 = 0.0, $6746 = 0.0, $6747 = 0, $6748 = 0.0, $6749 = 0.0, $675 = 0.0, $6750 = 0.0, $6751 = 0.0, $6752 = 0.0, $6753 = 0.0, $6754 = 0.0;
 var $6755 = 0, $6756 = 0.0, $6757 = 0.0, $6758 = 0.0, $6759 = 0.0, $676 = 0.0, $6760 = 0.0, $6761 = 0.0, $6762 = 0.0, $6763 = 0.0, $6764 = 0.0, $6765 = 0.0, $6766 = 0.0, $6767 = 0.0, $6768 = 0.0, $6769 = 0.0, $677 = 0.0, $6770 = 0.0, $6771 = 0.0, $6772 = 0.0;
 var $6773 = 0.0, $6774 = 0, $6775 = 0.0, $6776 = 0.0, $6777 = 0.0, $6778 = 0.0, $6779 = 0, $678 = 0.0, $6780 = 0.0, $6781 = 0, $6782 = 0.0, $6783 = 0, $6784 = 0.0, $6785 = 0, $6786 = 0.0, $6787 = 0.0, $6788 = 0.0, $6789 = 0.0, $679 = 0.0, $6790 = 0.0;
 var $6791 = 0.0, $6792 = 0, $6793 = 0.0, $6794 = 0.0, $6795 = 0.0, $6796 = 0.0, $6797 = 0.0, $6798 = 0, $6799 = 0.0, $68 = 0, $680 = 0.0, $6800 = 0, $6801 = 0.0, $6802 = 0, $6803 = 0.0, $6804 = 0.0, $6805 = 0.0, $6806 = 0.0, $6807 = 0.0, $6808 = 0.0;
 var $6809 = 0.0, $681 = 0.0, $6810 = 0.0, $6811 = 0.0, $6812 = 0.0, $6813 = 0.0, $6814 = 0.0, $6815 = 0, $6816 = 0.0, $6817 = 0.0, $6818 = 0, $6819 = 0.0, $682 = 0.0, $6820 = 0, $6821 = 0.0, $6822 = 0, $6823 = 0.0, $6824 = 0.0, $6825 = 0.0, $6826 = 0.0;
 var $6827 = 0.0, $6828 = 0.0, $6829 = 0, $683 = 0.0, $6830 = 0.0, $6831 = 0.0, $6832 = 0.0, $6833 = 0, $6834 = 0, $6835 = 0.0, $6836 = 0.0, $6837 = 0.0, $6838 = 0.0, $6839 = 0.0, $684 = 0.0, $6840 = 0.0, $6841 = 0.0, $6842 = 0.0, $6843 = 0.0, $6844 = 0;
 var $6845 = 0.0, $6846 = 0, $6847 = 0.0, $6848 = 0.0, $6849 = 0, $685 = 0.0, $6850 = 0.0, $6851 = 0, $6852 = 0.0, $6853 = 0, $6854 = 0, $6855 = 0, $6856 = 0, $6857 = 0.0, $6858 = 0.0, $6859 = 0.0, $686 = 0.0, $6860 = 0.0, $6861 = 0, $6862 = 0.0;
 var $6863 = 0.0, $6864 = 0.0, $6865 = 0.0, $6866 = 0, $6867 = 0.0, $6868 = 0.0, $6869 = 0.0, $687 = 0.0, $6870 = 0.0, $6871 = 0.0, $6872 = 0.0, $6873 = 0.0, $6874 = 0.0, $6875 = 0.0, $6876 = 0.0, $6877 = 0.0, $6878 = 0.0, $6879 = 0.0, $688 = 0.0, $6880 = 0;
 var $6881 = 0, $6882 = 0, $6883 = 0.0, $6884 = 0.0, $6885 = 0.0, $6886 = 0.0, $6887 = 0.0, $6888 = 0.0, $6889 = 0.0, $689 = 0.0, $6890 = 0.0, $6891 = 0.0, $6892 = 0.0, $6893 = 0.0, $6894 = 0.0, $6895 = 0.0, $6896 = 0, $6897 = 0.0, $6898 = 0.0, $6899 = 0;
 var $69 = 0, $690 = 0.0, $6900 = 0.0, $6901 = 0, $6902 = 0.0, $6903 = 0, $6904 = 0.0, $6905 = 0.0, $6906 = 0.0, $6907 = 0.0, $6908 = 0.0, $6909 = 0.0, $691 = 0.0, $6910 = 0, $6911 = 0.0, $6912 = 0.0, $6913 = 0.0, $6914 = 0, $6915 = 0, $6916 = 0.0;
 var $6917 = 0.0, $6918 = 0.0, $6919 = 0.0, $692 = 0.0, $6920 = 0.0, $6921 = 0.0, $6922 = 0.0, $6923 = 0.0, $6924 = 0.0, $6925 = 0, $6926 = 0.0, $6927 = 0, $6928 = 0.0, $6929 = 0.0, $693 = 0.0, $6930 = 0, $6931 = 0.0, $6932 = 0, $6933 = 0.0, $6934 = 0;
 var $6935 = 0, $6936 = 0, $6937 = 0, $6938 = 0.0, $6939 = 0.0, $694 = 0.0, $6940 = 0.0, $6941 = 0.0, $6942 = 0, $6943 = 0.0, $6944 = 0.0, $6945 = 0.0, $6946 = 0.0, $6947 = 0, $6948 = 0.0, $6949 = 0.0, $695 = 0.0, $6950 = 0.0, $6951 = 0.0, $6952 = 0.0;
 var $6953 = 0.0, $6954 = 0.0, $6955 = 0.0, $6956 = 0.0, $6957 = 0.0, $6958 = 0.0, $6959 = 0.0, $696 = 0.0, $6960 = 0.0, $6961 = 0, $6962 = 0, $6963 = 0, $6964 = 0.0, $6965 = 0.0, $6966 = 0.0, $6967 = 0.0, $6968 = 0.0, $6969 = 0.0, $697 = 0.0, $6970 = 0.0;
 var $6971 = 0.0, $6972 = 0.0, $6973 = 0, $6974 = 0, $6975 = 0.0, $6976 = 0.0, $6977 = 0.0, $6978 = 0.0, $6979 = 0, $698 = 0.0, $6980 = 0, $6981 = 0.0, $6982 = 0.0, $6983 = 0.0, $6984 = 0.0, $6985 = 0.0, $6986 = 0.0, $6987 = 0.0, $6988 = 0, $6989 = 0.0;
 var $699 = 0.0, $6990 = 0, $6991 = 0.0, $6992 = 0.0, $6993 = 0.0, $6994 = 0.0, $6995 = 0.0, $6996 = 0.0, $6997 = 0.0, $6998 = 0.0, $6999 = 0.0, $7 = 0, $70 = 0, $700 = 0.0, $7000 = 0.0, $7001 = 0.0, $7002 = 0.0, $7003 = 0, $7004 = 0.0, $7005 = 0.0;
 var $7006 = 0.0, $7007 = 0.0, $7008 = 0.0, $7009 = 0.0, $701 = 0.0, $7010 = 0.0, $7011 = 0, $7012 = 0.0, $7013 = 0.0, $7014 = 0.0, $7015 = 0.0, $7016 = 0.0, $7017 = 0.0, $7018 = 0.0, $7019 = 0.0, $702 = 0.0, $7020 = 0.0, $7021 = 0.0, $7022 = 0.0, $7023 = 0.0;
 var $7024 = 0, $7025 = 0.0, $7026 = 0.0, $7027 = 0, $7028 = 0.0, $7029 = 0, $703 = 0.0, $7030 = 0.0, $7031 = 0, $7032 = 0.0, $7033 = 0.0, $7034 = 0.0, $7035 = 0.0, $7036 = 0.0, $7037 = 0.0, $7038 = 0, $7039 = 0.0, $704 = 0.0, $7040 = 0.0, $7041 = 0.0;
 var $7042 = 0.0, $7043 = 0.0, $7044 = 0.0, $7045 = 0.0, $7046 = 0.0, $7047 = 0.0, $7048 = 0.0, $7049 = 0.0, $705 = 0.0, $7050 = 0.0, $7051 = 0.0, $7052 = 0.0, $7053 = 0, $7054 = 0.0, $7055 = 0.0, $7056 = 0.0, $7057 = 0.0, $7058 = 0.0, $7059 = 0.0, $706 = 0.0;
 var $7060 = 0.0, $7061 = 0.0, $7062 = 0.0, $7063 = 0.0, $7064 = 0.0, $7065 = 0.0, $7066 = 0.0, $7067 = 0.0, $7068 = 0, $7069 = 0.0, $707 = 0.0, $7070 = 0.0, $7071 = 0.0, $7072 = 0.0, $7073 = 0.0, $7074 = 0.0, $7075 = 0.0, $7076 = 0.0, $7077 = 0.0, $7078 = 0.0;
 var $7079 = 0, $708 = 0.0, $7080 = 0, $7081 = 0.0, $7082 = 0.0, $7083 = 0.0, $7084 = 0.0, $7085 = 0.0, $7086 = 0.0, $7087 = 0.0, $7088 = 0.0, $7089 = 0.0, $709 = 0.0, $7090 = 0, $7091 = 0.0, $7092 = 0, $7093 = 0.0, $7094 = 0.0, $7095 = 0, $7096 = 0.0;
 var $7097 = 0, $7098 = 0.0, $7099 = 0, $71 = 0, $710 = 0.0, $7100 = 0, $7101 = 0, $7102 = 0, $7103 = 0, $7104 = 0, $7105 = 0, $7106 = 0, $7107 = 0, $7108 = 0, $7109 = 0.0, $711 = 0.0, $7110 = 0, $7111 = 0.0, $7112 = 0.0, $7113 = 0.0;
 var $7114 = 0, $7115 = 0.0, $7116 = 0, $7117 = 0.0, $7118 = 0.0, $7119 = 0.0, $712 = 0.0, $7120 = 0, $7121 = 0, $7122 = 0, $7123 = 0.0, $7124 = 0, $7125 = 0.0, $7126 = 0, $7127 = 0.0, $7128 = 0.0, $7129 = 0.0, $713 = 0.0, $7130 = 0.0, $7131 = 0.0;
 var $7132 = 0.0, $7133 = 0.0, $7134 = 0.0, $7135 = 0.0, $7136 = 0.0, $7137 = 0.0, $7138 = 0.0, $7139 = 0.0, $714 = 0.0, $7140 = 0.0, $7141 = 0.0, $7142 = 0.0, $7143 = 0.0, $7144 = 0.0, $7145 = 0.0, $7146 = 0.0, $7147 = 0.0, $7148 = 0.0, $7149 = 0, $715 = 0.0;
 var $7150 = 0.0, $7151 = 0.0, $7152 = 0.0, $7153 = 0.0, $7154 = 0, $7155 = 0.0, $7156 = 0, $7157 = 0, $7158 = 0.0, $7159 = 0.0, $716 = 0.0, $7160 = 0.0, $7161 = 0.0, $7162 = 0.0, $7163 = 0.0, $7164 = 0.0, $7165 = 0.0, $7166 = 0.0, $7167 = 0.0, $7168 = 0;
 var $7169 = 0, $717 = 0.0, $7170 = 0.0, $7171 = 0.0, $7172 = 0.0, $7173 = 0.0, $7174 = 0.0, $7175 = 0.0, $7176 = 0.0, $7177 = 0.0, $7178 = 0.0, $7179 = 0, $718 = 0.0, $7180 = 0.0, $7181 = 0, $7182 = 0.0, $7183 = 0.0, $7184 = 0, $7185 = 0.0, $7186 = 0;
 var $7187 = 0.0, $7188 = 0, $7189 = 0, $719 = 0.0, $7190 = 0, $7191 = 0, $7192 = 0, $7193 = 0, $7194 = 0, $7195 = 0, $7196 = 0, $7197 = 0, $7198 = 0.0, $7199 = 0, $72 = 0, $720 = 0.0, $7200 = 0.0, $7201 = 0.0, $7202 = 0.0, $7203 = 0;
 var $7204 = 0.0, $7205 = 0, $7206 = 0.0, $7207 = 0.0, $7208 = 0.0, $7209 = 0, $721 = 0.0, $7210 = 0, $7211 = 0, $7212 = 0.0, $7213 = 0, $7214 = 0.0, $7215 = 0, $7216 = 0.0, $7217 = 0.0, $7218 = 0.0, $7219 = 0.0, $722 = 0.0, $7220 = 0.0, $7221 = 0.0;
 var $7222 = 0.0, $7223 = 0.0, $7224 = 0.0, $7225 = 0.0, $7226 = 0.0, $7227 = 0.0, $7228 = 0.0, $7229 = 0.0, $723 = 0.0, $7230 = 0.0, $7231 = 0.0, $7232 = 0.0, $7233 = 0.0, $7234 = 0.0, $7235 = 0.0, $7236 = 0.0, $7237 = 0.0, $7238 = 0, $7239 = 0.0, $724 = 0.0;
 var $7240 = 0.0, $7241 = 0.0, $7242 = 0.0, $7243 = 0, $7244 = 0.0, $7245 = 0, $7246 = 0, $7247 = 0.0, $7248 = 0.0, $7249 = 0.0, $725 = 0.0, $7250 = 0, $7251 = 0, $7252 = 0.0, $7253 = 0.0, $7254 = 0.0, $7255 = 0.0, $7256 = 0.0, $7257 = 0.0, $7258 = 0.0;
 var $7259 = 0.0, $726 = 0.0, $7260 = 0.0, $7261 = 0, $7262 = 0.0, $7263 = 0, $7264 = 0.0, $7265 = 0.0, $7266 = 0, $7267 = 0.0, $7268 = 0, $7269 = 0.0, $727 = 0.0, $7270 = 0, $7271 = 0, $7272 = 0, $7273 = 0, $7274 = 0, $7275 = 0, $7276 = 0;
 var $7277 = 0, $7278 = 0, $7279 = 0, $728 = 0.0, $7280 = 0.0, $7281 = 0, $7282 = 0.0, $7283 = 0.0, $7284 = 0.0, $7285 = 0, $7286 = 0.0, $7287 = 0, $7288 = 0.0, $7289 = 0.0, $729 = 0.0, $7290 = 0.0, $7291 = 0, $7292 = 0, $7293 = 0, $7294 = 0.0;
 var $7295 = 0, $7296 = 0.0, $7297 = 0, $7298 = 0.0, $7299 = 0.0, $73 = 0, $730 = 0.0, $7300 = 0.0, $7301 = 0.0, $7302 = 0.0, $7303 = 0.0, $7304 = 0.0, $7305 = 0.0, $7306 = 0.0, $7307 = 0.0, $7308 = 0.0, $7309 = 0.0, $731 = 0.0, $7310 = 0.0, $7311 = 0.0;
 var $7312 = 0.0, $7313 = 0.0, $7314 = 0.0, $7315 = 0.0, $7316 = 0.0, $7317 = 0.0, $7318 = 0.0, $7319 = 0.0, $732 = 0.0, $7320 = 0.0, $7321 = 0.0, $7322 = 0, $7323 = 0.0, $7324 = 0.0, $7325 = 0.0, $7326 = 0.0, $7327 = 0.0, $7328 = 0.0, $7329 = 0.0, $733 = 0.0;
 var $7330 = 0.0, $7331 = 0, $7332 = 0.0, $7333 = 0, $7334 = 0, $7335 = 0.0, $7336 = 0.0, $7337 = 0.0, $7338 = 0.0, $7339 = 0.0, $734 = 0.0, $7340 = 0.0, $7341 = 0.0, $7342 = 0.0, $7343 = 0.0, $7344 = 0.0, $7345 = 0.0, $7346 = 0.0, $7347 = 0.0, $7348 = 0;
 var $7349 = 0.0, $735 = 0.0, $7350 = 0.0, $7351 = 0, $7352 = 0.0, $7353 = 0, $7354 = 0.0, $7355 = 0, $7356 = 0.0, $7357 = 0.0, $7358 = 0.0, $7359 = 0.0, $736 = 0.0, $7360 = 0.0, $7361 = 0.0, $7362 = 0, $7363 = 0.0, $7364 = 0.0, $7365 = 0.0, $7366 = 0.0;
 var $7367 = 0.0, $7368 = 0.0, $7369 = 0.0, $737 = 0.0, $7370 = 0.0, $7371 = 0.0, $7372 = 0.0, $7373 = 0.0, $7374 = 0.0, $7375 = 0.0, $7376 = 0.0, $7377 = 0, $7378 = 0.0, $7379 = 0.0, $738 = 0.0, $7380 = 0.0, $7381 = 0.0, $7382 = 0.0, $7383 = 0.0, $7384 = 0.0;
 var $7385 = 0.0, $7386 = 0.0, $7387 = 0.0, $7388 = 0.0, $7389 = 0.0, $739 = 0.0, $7390 = 0.0, $7391 = 0.0, $7392 = 0, $7393 = 0.0, $7394 = 0.0, $7395 = 0.0, $7396 = 0.0, $7397 = 0.0, $7398 = 0.0, $7399 = 0.0, $74 = 0, $740 = 0.0, $7400 = 0.0, $7401 = 0.0;
 var $7402 = 0.0, $7403 = 0, $7404 = 0, $7405 = 0.0, $7406 = 0.0, $7407 = 0.0, $7408 = 0.0, $7409 = 0.0, $741 = 0.0, $7410 = 0.0, $7411 = 0.0, $7412 = 0.0, $7413 = 0.0, $7414 = 0, $7415 = 0.0, $7416 = 0, $7417 = 0.0, $7418 = 0.0, $7419 = 0, $742 = 0.0;
 var $7420 = 0.0, $7421 = 0, $7422 = 0.0, $7423 = 0, $7424 = 0, $7425 = 0, $7426 = 0, $7427 = 0, $7428 = 0, $7429 = 0, $743 = 0.0, $7430 = 0, $7431 = 0, $7432 = 0, $7433 = 0.0, $7434 = 0, $7435 = 0.0, $7436 = 0.0, $7437 = 0.0, $7438 = 0;
 var $7439 = 0.0, $744 = 0.0, $7440 = 0, $7441 = 0.0, $7442 = 0.0, $7443 = 0.0, $7444 = 0, $7445 = 0, $7446 = 0, $7447 = 0.0, $7448 = 0, $7449 = 0.0, $745 = 0.0, $7450 = 0, $7451 = 0.0, $7452 = 0.0, $7453 = 0.0, $7454 = 0.0, $7455 = 0.0, $7456 = 0.0;
 var $7457 = 0.0, $7458 = 0.0, $7459 = 0.0, $746 = 0.0, $7460 = 0.0, $7461 = 0.0, $7462 = 0.0, $7463 = 0.0, $7464 = 0.0, $7465 = 0.0, $7466 = 0.0, $7467 = 0.0, $7468 = 0.0, $7469 = 0.0, $747 = 0.0, $7470 = 0.0, $7471 = 0.0, $7472 = 0.0, $7473 = 0, $7474 = 0.0;
 var $7475 = 0.0, $7476 = 0.0, $7477 = 0.0, $7478 = 0, $7479 = 0.0, $748 = 0.0, $7480 = 0, $7481 = 0, $7482 = 0.0, $7483 = 0.0, $7484 = 0.0, $7485 = 0.0, $7486 = 0.0, $7487 = 0.0, $7488 = 0.0, $7489 = 0.0, $749 = 0.0, $7490 = 0.0, $7491 = 0.0, $7492 = 0;
 var $7493 = 0, $7494 = 0.0, $7495 = 0.0, $7496 = 0.0, $7497 = 0.0, $7498 = 0.0, $7499 = 0.0, $75 = 0, $750 = 0.0, $7500 = 0.0, $7501 = 0.0, $7502 = 0.0, $7503 = 0, $7504 = 0.0, $7505 = 0, $7506 = 0.0, $7507 = 0.0, $7508 = 0, $7509 = 0.0, $751 = 0.0;
 var $7510 = 0, $7511 = 0.0, $7512 = 0, $7513 = 0, $7514 = 0, $7515 = 0, $7516 = 0, $7517 = 0, $7518 = 0, $7519 = 0, $752 = 0.0, $7520 = 0, $7521 = 0, $7522 = 0.0, $7523 = 0, $7524 = 0.0, $7525 = 0.0, $7526 = 0.0, $7527 = 0, $7528 = 0.0;
 var $7529 = 0, $753 = 0.0, $7530 = 0.0, $7531 = 0.0, $7532 = 0.0, $7533 = 0, $7534 = 0, $7535 = 0, $7536 = 0.0, $7537 = 0, $7538 = 0.0, $7539 = 0, $754 = 0.0, $7540 = 0.0, $7541 = 0.0, $7542 = 0.0, $7543 = 0.0, $7544 = 0.0, $7545 = 0.0, $7546 = 0.0;
 var $7547 = 0.0, $7548 = 0.0, $7549 = 0.0, $755 = 0.0, $7550 = 0.0, $7551 = 0.0, $7552 = 0.0, $7553 = 0.0, $7554 = 0.0, $7555 = 0.0, $7556 = 0.0, $7557 = 0.0, $7558 = 0.0, $7559 = 0.0, $756 = 0.0, $7560 = 0.0, $7561 = 0.0, $7562 = 0, $7563 = 0.0, $7564 = 0.0;
 var $7565 = 0.0, $7566 = 0.0, $7567 = 0, $7568 = 0.0, $7569 = 0, $757 = 0.0, $7570 = 0, $7571 = 0.0, $7572 = 0.0, $7573 = 0.0, $7574 = 0, $7575 = 0, $7576 = 0.0, $7577 = 0.0, $7578 = 0.0, $7579 = 0.0, $758 = 0.0, $7580 = 0.0, $7581 = 0.0, $7582 = 0.0;
 var $7583 = 0.0, $7584 = 0.0, $7585 = 0, $7586 = 0.0, $7587 = 0, $7588 = 0.0, $7589 = 0.0, $759 = 0.0, $7590 = 0, $7591 = 0.0, $7592 = 0, $7593 = 0.0, $7594 = 0, $7595 = 0, $7596 = 0, $7597 = 0, $7598 = 0, $7599 = 0, $76 = 0, $760 = 0.0;
 var $7600 = 0, $7601 = 0, $7602 = 0, $7603 = 0, $7604 = 0.0, $7605 = 0, $7606 = 0.0, $7607 = 0.0, $7608 = 0.0, $7609 = 0, $761 = 0.0, $7610 = 0.0, $7611 = 0, $7612 = 0.0, $7613 = 0.0, $7614 = 0.0, $7615 = 0, $7616 = 0, $7617 = 0, $7618 = 0.0;
 var $7619 = 0, $762 = 0.0, $7620 = 0.0, $7621 = 0, $7622 = 0.0, $7623 = 0.0, $7624 = 0.0, $7625 = 0.0, $7626 = 0.0, $7627 = 0.0, $7628 = 0.0, $7629 = 0.0, $763 = 0.0, $7630 = 0.0, $7631 = 0.0, $7632 = 0.0, $7633 = 0.0, $7634 = 0.0, $7635 = 0.0, $7636 = 0.0;
 var $7637 = 0.0, $7638 = 0.0, $7639 = 0.0, $764 = 0.0, $7640 = 0.0, $7641 = 0.0, $7642 = 0.0, $7643 = 0.0, $7644 = 0.0, $7645 = 0.0, $7646 = 0, $7647 = 0.0, $7648 = 0.0, $7649 = 0.0, $765 = 0.0, $7650 = 0.0, $7651 = 0.0, $7652 = 0.0, $7653 = 0.0, $7654 = 0.0;
 var $7655 = 0, $7656 = 0.0, $7657 = 0, $7658 = 0, $7659 = 0.0, $766 = 0.0, $7660 = 0.0, $7661 = 0.0, $7662 = 0.0, $7663 = 0.0, $7664 = 0.0, $7665 = 0.0, $7666 = 0.0, $7667 = 0.0, $7668 = 0.0, $7669 = 0.0, $767 = 0.0, $7670 = 0.0, $7671 = 0.0, $7672 = 0.0;
 var $7673 = 0.0, $7674 = 0.0, $7675 = 0.0, $7676 = 0.0, $7677 = 0, $7678 = 0.0, $7679 = 0.0, $768 = 0.0, $7680 = 0.0, $7681 = 0.0, $7682 = 0, $7683 = 0.0, $7684 = 0, $7685 = 0.0, $7686 = 0, $7687 = 0.0, $7688 = 0, $7689 = 0.0, $769 = 0, $7690 = 0.0;
 var $7691 = 0.0, $7692 = 0.0, $7693 = 0.0, $7694 = 0.0, $7695 = 0, $7696 = 0.0, $7697 = 0.0, $7698 = 0.0, $7699 = 0.0, $77 = 0, $770 = 0, $7700 = 0.0, $7701 = 0, $7702 = 0.0, $7703 = 0, $7704 = 0.0, $7705 = 0, $7706 = 0.0, $7707 = 0.0, $7708 = 0.0;
 var $7709 = 0.0, $771 = 0, $7710 = 0.0, $7711 = 0.0, $7712 = 0.0, $7713 = 0.0, $7714 = 0.0, $7715 = 0.0, $7716 = 0.0, $7717 = 0.0, $7718 = 0, $7719 = 0.0, $772 = 0, $7720 = 0.0, $7721 = 0, $7722 = 0.0, $7723 = 0, $7724 = 0.0, $7725 = 0, $7726 = 0.0;
 var $7727 = 0.0, $7728 = 0.0, $7729 = 0.0, $773 = 0, $7730 = 0.0, $7731 = 0.0, $7732 = 0, $7733 = 0.0, $7734 = 0.0, $7735 = 0.0, $7736 = 0, $7737 = 0, $7738 = 0.0, $7739 = 0.0, $774 = 0, $7740 = 0.0, $7741 = 0.0, $7742 = 0.0, $7743 = 0.0, $7744 = 0.0;
 var $7745 = 0.0, $7746 = 0.0, $7747 = 0, $7748 = 0.0, $7749 = 0, $775 = 0.0, $7750 = 0.0, $7751 = 0.0, $7752 = 0, $7753 = 0.0, $7754 = 0, $7755 = 0.0, $7756 = 0, $7757 = 0, $7758 = 0, $7759 = 0, $776 = 0.0, $7760 = 0.0, $7761 = 0.0, $7762 = 0.0;
 var $7763 = 0.0, $7764 = 0, $7765 = 0.0, $7766 = 0.0, $7767 = 0.0, $7768 = 0.0, $7769 = 0, $777 = 0.0, $7770 = 0.0, $7771 = 0.0, $7772 = 0.0, $7773 = 0.0, $7774 = 0.0, $7775 = 0.0, $7776 = 0.0, $7777 = 0.0, $7778 = 0.0, $7779 = 0.0, $778 = 0.0, $7780 = 0.0;
 var $7781 = 0.0, $7782 = 0.0, $7783 = 0, $7784 = 0, $7785 = 0, $7786 = 0.0, $7787 = 0.0, $7788 = 0.0, $7789 = 0.0, $779 = 0.0, $7790 = 0.0, $7791 = 0.0, $7792 = 0.0, $7793 = 0.0, $7794 = 0.0, $7795 = 0.0, $7796 = 0.0, $7797 = 0.0, $7798 = 0.0, $7799 = 0;
 var $78 = 0, $780 = 0.0, $7800 = 0.0, $7801 = 0.0, $7802 = 0, $7803 = 0.0, $7804 = 0, $7805 = 0.0, $7806 = 0, $7807 = 0.0, $7808 = 0.0, $7809 = 0.0, $781 = 0.0, $7810 = 0.0, $7811 = 0.0, $7812 = 0.0, $7813 = 0, $7814 = 0.0, $7815 = 0.0, $7816 = 0.0;
 var $7817 = 0, $7818 = 0, $7819 = 0.0, $782 = 0.0, $7820 = 0.0, $7821 = 0.0, $7822 = 0.0, $7823 = 0.0, $7824 = 0.0, $7825 = 0.0, $7826 = 0.0, $7827 = 0.0, $7828 = 0, $7829 = 0.0, $783 = 0, $7830 = 0, $7831 = 0.0, $7832 = 0.0, $7833 = 0, $7834 = 0.0;
 var $7835 = 0, $7836 = 0.0, $7837 = 0, $7838 = 0, $7839 = 0, $784 = 0, $7840 = 0, $7841 = 0.0, $7842 = 0.0, $7843 = 0.0, $7844 = 0.0, $7845 = 0, $7846 = 0.0, $7847 = 0.0, $7848 = 0.0, $7849 = 0.0, $785 = 0, $7850 = 0, $7851 = 0.0, $7852 = 0.0;
 var $7853 = 0.0, $7854 = 0.0, $7855 = 0.0, $7856 = 0.0, $7857 = 0.0, $7858 = 0.0, $7859 = 0.0, $786 = 0, $7860 = 0.0, $7861 = 0.0, $7862 = 0.0, $7863 = 0.0, $7864 = 0, $7865 = 0, $7866 = 0, $7867 = 0.0, $7868 = 0.0, $7869 = 0.0, $787 = 0, $7870 = 0.0;
 var $7871 = 0.0, $7872 = 0.0, $7873 = 0.0, $7874 = 0, $7875 = 0, $7876 = 0.0, $7877 = 0.0, $7878 = 0.0, $7879 = 0.0, $788 = 0, $7880 = 0.0, $7881 = 0.0, $7882 = 0.0, $7883 = 0, $7884 = 0, $7885 = 0.0, $7886 = 0.0, $7887 = 0.0, $7888 = 0.0, $7889 = 0.0;
 var $789 = 0, $7890 = 0.0, $7891 = 0.0, $7892 = 0, $7893 = 0.0, $7894 = 0, $7895 = 0.0, $7896 = 0.0, $7897 = 0.0, $7898 = 0.0, $7899 = 0.0, $79 = 0, $790 = 0, $7900 = 0.0, $7901 = 0.0, $7902 = 0.0, $7903 = 0.0, $7904 = 0.0, $7905 = 0.0, $7906 = 0.0;
 var $7907 = 0, $7908 = 0.0, $7909 = 0.0, $791 = 0, $7910 = 0.0, $7911 = 0.0, $7912 = 0.0, $7913 = 0.0, $7914 = 0.0, $7915 = 0, $7916 = 0.0, $7917 = 0.0, $7918 = 0.0, $7919 = 0.0, $792 = 0, $7920 = 0.0, $7921 = 0.0, $7922 = 0.0, $7923 = 0.0, $7924 = 0.0;
 var $7925 = 0.0, $7926 = 0.0, $7927 = 0.0, $7928 = 0.0, $7929 = 0.0, $793 = 0, $7930 = 0.0, $7931 = 0.0, $7932 = 0.0, $7933 = 0.0, $7934 = 0, $7935 = 0.0, $7936 = 0.0, $7937 = 0.0, $7938 = 0.0, $7939 = 0, $794 = 0, $7940 = 0.0, $7941 = 0, $7942 = 0.0;
 var $7943 = 0, $7944 = 0.0, $7945 = 0, $7946 = 0.0, $7947 = 0.0, $7948 = 0.0, $7949 = 0.0, $795 = 0, $7950 = 0.0, $7951 = 0.0, $7952 = 0, $7953 = 0.0, $7954 = 0.0, $7955 = 0.0, $7956 = 0.0, $7957 = 0.0, $7958 = 0, $7959 = 0.0, $796 = 0, $7960 = 0;
 var $7961 = 0.0, $7962 = 0, $7963 = 0.0, $7964 = 0.0, $7965 = 0.0, $7966 = 0.0, $7967 = 0.0, $7968 = 0.0, $7969 = 0.0, $797 = 0, $7970 = 0.0, $7971 = 0.0, $7972 = 0.0, $7973 = 0.0, $7974 = 0.0, $7975 = 0, $7976 = 0.0, $7977 = 0.0, $7978 = 0, $7979 = 0.0;
 var $798 = 0, $7980 = 0, $7981 = 0.0, $7982 = 0, $7983 = 0.0, $7984 = 0.0, $7985 = 0.0, $7986 = 0.0, $7987 = 0.0, $7988 = 0.0, $7989 = 0, $799 = 0, $7990 = 0.0, $7991 = 0.0, $7992 = 0.0, $7993 = 0, $7994 = 0, $7995 = 0.0, $7996 = 0.0, $7997 = 0.0;
 var $7998 = 0.0, $7999 = 0.0, $8 = 0, $80 = 0, $800 = 0, $8000 = 0.0, $8001 = 0.0, $8002 = 0.0, $8003 = 0.0, $8004 = 0, $8005 = 0.0, $8006 = 0, $8007 = 0.0, $8008 = 0.0, $8009 = 0, $801 = 0, $8010 = 0.0, $8011 = 0, $8012 = 0.0, $8013 = 0;
 var $8014 = 0, $8015 = 0, $8016 = 0, $8017 = 0.0, $8018 = 0.0, $8019 = 0.0, $802 = 0, $8020 = 0.0, $8021 = 0, $8022 = 0.0, $8023 = 0.0, $8024 = 0.0, $8025 = 0.0, $8026 = 0, $8027 = 0.0, $8028 = 0.0, $8029 = 0.0, $803 = 0, $8030 = 0.0, $8031 = 0.0;
 var $8032 = 0.0, $8033 = 0.0, $8034 = 0.0, $8035 = 0.0, $8036 = 0.0, $8037 = 0.0, $8038 = 0.0, $8039 = 0.0, $804 = 0, $8040 = 0, $8041 = 0, $8042 = 0, $8043 = 0.0, $8044 = 0.0, $8045 = 0.0, $8046 = 0.0, $8047 = 0.0, $8048 = 0.0, $8049 = 0.0, $805 = 0;
 var $8050 = 0.0, $8051 = 0.0, $8052 = 0.0, $8053 = 0.0, $8054 = 0.0, $8055 = 0.0, $8056 = 0, $8057 = 0.0, $8058 = 0.0, $8059 = 0, $806 = 0, $8060 = 0.0, $8061 = 0, $8062 = 0.0, $8063 = 0, $8064 = 0.0, $8065 = 0.0, $8066 = 0.0, $8067 = 0.0, $8068 = 0.0;
 var $8069 = 0.0, $807 = 0, $8070 = 0, $8071 = 0.0, $8072 = 0.0, $8073 = 0.0, $8074 = 0, $8075 = 0, $8076 = 0.0, $8077 = 0.0, $8078 = 0.0, $8079 = 0.0, $808 = 0, $8080 = 0.0, $8081 = 0.0, $8082 = 0.0, $8083 = 0.0, $8084 = 0.0, $8085 = 0, $8086 = 0.0;
 var $8087 = 0, $8088 = 0.0, $8089 = 0.0, $809 = 0, $8090 = 0, $8091 = 0.0, $8092 = 0, $8093 = 0.0, $8094 = 0, $8095 = 0, $8096 = 0, $8097 = 0, $8098 = 0.0, $8099 = 0.0, $81 = 0, $810 = 0, $8100 = 0.0, $8101 = 0.0, $8102 = 0, $8103 = 0.0;
 var $8104 = 0.0, $8105 = 0.0, $8106 = 0.0, $8107 = 0, $8108 = 0.0, $8109 = 0.0, $811 = 0, $8110 = 0.0, $8111 = 0.0, $8112 = 0.0, $8113 = 0.0, $8114 = 0.0, $8115 = 0.0, $8116 = 0.0, $8117 = 0.0, $8118 = 0.0, $8119 = 0.0, $812 = 0, $8120 = 0.0, $8121 = 0;
 var $8122 = 0, $8123 = 0, $8124 = 0.0, $8125 = 0.0, $8126 = 0.0, $8127 = 0.0, $8128 = 0.0, $8129 = 0.0, $813 = 0, $8130 = 0.0, $8131 = 0, $8132 = 0, $8133 = 0.0, $8134 = 0.0, $8135 = 0.0, $8136 = 0.0, $8137 = 0.0, $8138 = 0.0, $8139 = 0.0, $814 = 0;
 var $8140 = 0, $8141 = 0, $8142 = 0.0, $8143 = 0.0, $8144 = 0.0, $8145 = 0.0, $8146 = 0.0, $8147 = 0.0, $8148 = 0.0, $8149 = 0, $815 = 0, $8150 = 0.0, $8151 = 0, $8152 = 0.0, $8153 = 0.0, $8154 = 0.0, $8155 = 0.0, $8156 = 0.0, $8157 = 0.0, $8158 = 0.0;
 var $8159 = 0.0, $816 = 0, $8160 = 0.0, $8161 = 0.0, $8162 = 0.0, $8163 = 0.0, $8164 = 0, $8165 = 0.0, $8166 = 0.0, $8167 = 0.0, $8168 = 0.0, $8169 = 0.0, $817 = 0, $8170 = 0.0, $8171 = 0.0, $8172 = 0, $8173 = 0.0, $8174 = 0.0, $8175 = 0.0, $8176 = 0.0;
 var $8177 = 0.0, $8178 = 0.0, $8179 = 0.0, $818 = 0, $8180 = 0.0, $8181 = 0.0, $8182 = 0.0, $8183 = 0.0, $8184 = 0.0, $8185 = 0.0, $8186 = 0.0, $8187 = 0, $8188 = 0, $8189 = 0.0, $819 = 0, $8190 = 0.0, $8191 = 0.0, $8192 = 0.0, $8193 = 0.0, $8194 = 0.0;
 var $8195 = 0.0, $8196 = 0.0, $8197 = 0.0, $8198 = 0.0, $8199 = 0.0, $82 = 0, $820 = 0, $8200 = 0.0, $8201 = 0.0, $8202 = 0.0, $8203 = 0, $8204 = 0, $8205 = 0.0, $8206 = 0.0, $8207 = 0.0, $8208 = 0.0, $8209 = 0.0, $821 = 0, $8210 = 0.0, $8211 = 0.0;
 var $8212 = 0, $8213 = 0.0, $8214 = 0, $8215 = 0.0, $8216 = 0.0, $8217 = 0.0, $8218 = 0.0, $8219 = 0.0, $822 = 0, $8220 = 0.0, $8221 = 0.0, $8222 = 0.0, $8223 = 0.0, $8224 = 0.0, $8225 = 0.0, $8226 = 0.0, $8227 = 0.0, $8228 = 0.0, $8229 = 0.0, $823 = 0;
 var $8230 = 0.0, $8231 = 0.0, $8232 = 0.0, $8233 = 0.0, $8234 = 0.0, $8235 = 0.0, $8236 = 0.0, $8237 = 0.0, $8238 = 0.0, $8239 = 0.0, $824 = 0, $8240 = 0.0, $8241 = 0.0, $8242 = 0.0, $8243 = 0.0, $8244 = 0.0, $8245 = 0.0, $8246 = 0.0, $8247 = 0.0, $8248 = 0.0;
 var $8249 = 0.0, $825 = 0, $8250 = 0.0, $8251 = 0.0, $8252 = 0, $8253 = 0.0, $8254 = 0.0, $8255 = 0.0, $8256 = 0.0, $8257 = 0.0, $8258 = 0, $8259 = 0.0, $826 = 0, $8260 = 0, $8261 = 0.0, $8262 = 0, $8263 = 0.0, $8264 = 0.0, $8265 = 0.0, $8266 = 0.0;
 var $8267 = 0.0, $8268 = 0.0, $8269 = 0.0, $827 = 0, $8270 = 0.0, $8271 = 0.0, $8272 = 0.0, $8273 = 0.0, $8274 = 0.0, $8275 = 0.0, $8276 = 0.0, $8277 = 0.0, $8278 = 0.0, $8279 = 0.0, $828 = 0, $8280 = 0.0, $8281 = 0, $8282 = 0, $8283 = 0.0, $8284 = 0.0;
 var $8285 = 0.0, $8286 = 0.0, $8287 = 0.0, $8288 = 0.0, $8289 = 0.0, $829 = 0, $8290 = 0, $8291 = 0, $8292 = 0.0, $8293 = 0.0, $8294 = 0.0, $8295 = 0.0, $8296 = 0.0, $8297 = 0.0, $8298 = 0.0, $8299 = 0, $83 = 0, $830 = 0, $8300 = 0.0, $8301 = 0;
 var $8302 = 0.0, $8303 = 0.0, $8304 = 0.0, $8305 = 0.0, $8306 = 0.0, $8307 = 0.0, $8308 = 0.0, $8309 = 0.0, $831 = 0, $8310 = 0.0, $8311 = 0.0, $8312 = 0.0, $8313 = 0.0, $8314 = 0.0, $8315 = 0.0, $8316 = 0.0, $8317 = 0.0, $8318 = 0.0, $8319 = 0.0, $832 = 0;
 var $8320 = 0.0, $8321 = 0.0, $8322 = 0.0, $8323 = 0.0, $8324 = 0.0, $8325 = 0.0, $8326 = 0.0, $8327 = 0.0, $8328 = 0.0, $8329 = 0.0, $833 = 0, $8330 = 0.0, $8331 = 0.0, $8332 = 0.0, $8333 = 0.0, $8334 = 0.0, $8335 = 0.0, $8336 = 0.0, $8337 = 0.0, $8338 = 0;
 var $8339 = 0.0, $834 = 0, $8340 = 0.0, $8341 = 0.0, $8342 = 0.0, $8343 = 0.0, $8344 = 0, $8345 = 0.0, $8346 = 0, $8347 = 0.0, $8348 = 0, $8349 = 0.0, $835 = 0, $8350 = 0.0, $8351 = 0.0, $8352 = 0.0, $8353 = 0.0, $8354 = 0.0, $8355 = 0.0, $8356 = 0.0;
 var $8357 = 0.0, $8358 = 0.0, $8359 = 0.0, $836 = 0, $8360 = 0.0, $8361 = 0.0, $8362 = 0.0, $8363 = 0.0, $8364 = 0.0, $8365 = 0, $8366 = 0, $8367 = 0.0, $8368 = 0.0, $8369 = 0.0, $837 = 0, $8370 = 0.0, $8371 = 0.0, $8372 = 0.0, $8373 = 0.0, $8374 = 0;
 var $8375 = 0, $8376 = 0.0, $8377 = 0.0, $8378 = 0.0, $8379 = 0.0, $838 = 0, $8380 = 0.0, $8381 = 0.0, $8382 = 0.0, $8383 = 0, $8384 = 0.0, $8385 = 0, $8386 = 0.0, $8387 = 0.0, $8388 = 0.0, $8389 = 0.0, $839 = 0, $8390 = 0.0, $8391 = 0.0, $8392 = 0.0;
 var $8393 = 0.0, $8394 = 0.0, $8395 = 0.0, $8396 = 0.0, $8397 = 0.0, $8398 = 0.0, $8399 = 0.0, $84 = 0, $840 = 0, $8400 = 0.0, $8401 = 0.0, $8402 = 0.0, $8403 = 0.0, $8404 = 0.0, $8405 = 0.0, $8406 = 0.0, $8407 = 0.0, $8408 = 0.0, $8409 = 0.0, $841 = 0;
 var $8410 = 0.0, $8411 = 0.0, $8412 = 0.0, $8413 = 0.0, $8414 = 0.0, $8415 = 0.0, $8416 = 0.0, $8417 = 0.0, $8418 = 0.0, $8419 = 0.0, $842 = 0, $8420 = 0.0, $8421 = 0.0, $8422 = 0, $8423 = 0.0, $8424 = 0.0, $8425 = 0.0, $8426 = 0.0, $8427 = 0.0, $8428 = 0;
 var $8429 = 0.0, $843 = 0, $8430 = 0, $8431 = 0.0, $8432 = 0, $8433 = 0.0, $8434 = 0.0, $8435 = 0.0, $8436 = 0.0, $8437 = 0.0, $8438 = 0.0, $8439 = 0.0, $844 = 0, $8440 = 0.0, $8441 = 0.0, $8442 = 0.0, $8443 = 0.0, $8444 = 0.0, $8445 = 0.0, $8446 = 0.0;
 var $8447 = 0.0, $8448 = 0.0, $8449 = 0.0, $845 = 0, $8450 = 0.0, $8451 = 0.0, $8452 = 0, $8453 = 0, $8454 = 0.0, $8455 = 0.0, $8456 = 0.0, $8457 = 0.0, $8458 = 0.0, $8459 = 0.0, $846 = 0, $8460 = 0.0, $8461 = 0.0, $8462 = 0.0, $8463 = 0.0, $8464 = 0.0;
 var $8465 = 0.0, $8466 = 0.0, $8467 = 0.0, $8468 = 0.0, $8469 = 0.0, $847 = 0, $8470 = 0.0, $8471 = 0.0, $8472 = 0.0, $8473 = 0.0, $8474 = 0.0, $8475 = 0.0, $8476 = 0, $8477 = 0, $8478 = 0.0, $8479 = 0.0, $848 = 0, $8480 = 0.0, $8481 = 0.0, $8482 = 0.0;
 var $8483 = 0.0, $8484 = 0.0, $8485 = 0, $8486 = 0.0, $8487 = 0, $8488 = 0.0, $8489 = 0.0, $849 = 0, $8490 = 0.0, $8491 = 0.0, $8492 = 0.0, $8493 = 0.0, $8494 = 0.0, $8495 = 0.0, $8496 = 0.0, $8497 = 0.0, $8498 = 0.0, $8499 = 0.0, $85 = 0, $850 = 0;
 var $8500 = 0.0, $8501 = 0.0, $8502 = 0.0, $8503 = 0.0, $8504 = 0.0, $8505 = 0.0, $8506 = 0.0, $8507 = 0.0, $8508 = 0.0, $8509 = 0.0, $851 = 0, $8510 = 0.0, $8511 = 0.0, $8512 = 0.0, $8513 = 0.0, $8514 = 0.0, $8515 = 0.0, $8516 = 0.0, $8517 = 0.0, $8518 = 0.0;
 var $8519 = 0.0, $852 = 0, $8520 = 0.0, $8521 = 0.0, $8522 = 0.0, $8523 = 0.0, $8524 = 0.0, $8525 = 0.0, $8526 = 0.0, $8527 = 0.0, $8528 = 0.0, $8529 = 0.0, $853 = 0, $8530 = 0.0, $8531 = 0.0, $8532 = 0.0, $8533 = 0.0, $8534 = 0.0, $8535 = 0.0, $8536 = 0.0;
 var $8537 = 0.0, $8538 = 0.0, $8539 = 0.0, $854 = 0, $8540 = 0.0, $8541 = 0.0, $8542 = 0.0, $8543 = 0.0, $8544 = 0.0, $8545 = 0.0, $8546 = 0.0, $8547 = 0.0, $8548 = 0.0, $8549 = 0.0, $855 = 0, $8550 = 0.0, $8551 = 0.0, $8552 = 0.0, $8553 = 0.0, $8554 = 0.0;
 var $8555 = 0.0, $8556 = 0.0, $8557 = 0.0, $8558 = 0.0, $8559 = 0, $856 = 0, $8560 = 0.0, $8561 = 0.0, $8562 = 0.0, $8563 = 0.0, $8564 = 0.0, $8565 = 0, $8566 = 0.0, $8567 = 0, $8568 = 0.0, $8569 = 0, $857 = 0, $8570 = 0.0, $8571 = 0, $8572 = 0.0;
 var $8573 = 0, $8574 = 0.0, $8575 = 0.0, $8576 = 0.0, $8577 = 0.0, $8578 = 0.0, $8579 = 0.0, $858 = 0, $8580 = 0.0, $8581 = 0.0, $8582 = 0.0, $8583 = 0.0, $8584 = 0.0, $8585 = 0.0, $8586 = 0.0, $8587 = 0.0, $8588 = 0.0, $8589 = 0.0, $859 = 0, $8590 = 0.0;
 var $8591 = 0.0, $8592 = 0.0, $8593 = 0.0, $8594 = 0.0, $8595 = 0.0, $8596 = 0.0, $8597 = 0.0, $8598 = 0.0, $8599 = 0.0, $86 = 0, $860 = 0, $8600 = 0.0, $8601 = 0.0, $8602 = 0.0, $8603 = 0.0, $8604 = 0, $8605 = 0, $8606 = 0.0, $8607 = 0.0, $8608 = 0.0;
 var $8609 = 0.0, $861 = 0, $8610 = 0.0, $8611 = 0.0, $8612 = 0.0, $8613 = 0, $8614 = 0, $8615 = 0.0, $8616 = 0.0, $8617 = 0.0, $8618 = 0.0, $8619 = 0.0, $862 = 0, $8620 = 0.0, $8621 = 0.0, $8622 = 0, $8623 = 0.0, $8624 = 0, $8625 = 0.0, $8626 = 0.0;
 var $8627 = 0.0, $8628 = 0.0, $8629 = 0.0, $863 = 0, $8630 = 0.0, $8631 = 0.0, $8632 = 0.0, $8633 = 0.0, $8634 = 0.0, $8635 = 0.0, $8636 = 0.0, $8637 = 0.0, $8638 = 0.0, $8639 = 0.0, $864 = 0, $8640 = 0.0, $8641 = 0.0, $8642 = 0.0, $8643 = 0.0, $8644 = 0.0;
 var $8645 = 0.0, $8646 = 0.0, $8647 = 0.0, $8648 = 0.0, $8649 = 0.0, $865 = 0, $8650 = 0.0, $8651 = 0.0, $8652 = 0.0, $8653 = 0.0, $8654 = 0.0, $8655 = 0.0, $8656 = 0.0, $8657 = 0.0, $8658 = 0.0, $8659 = 0.0, $866 = 0, $8660 = 0.0, $8661 = 0.0, $8662 = 0.0;
 var $8663 = 0.0, $8664 = 0.0, $8665 = 0.0, $8666 = 0.0, $8667 = 0.0, $8668 = 0.0, $8669 = 0.0, $867 = 0, $8670 = 0.0, $8671 = 0.0, $8672 = 0.0, $8673 = 0.0, $8674 = 0.0, $8675 = 0.0, $8676 = 0.0, $8677 = 0.0, $8678 = 0.0, $8679 = 0.0, $868 = 0, $8680 = 0.0;
 var $8681 = 0.0, $8682 = 0.0, $8683 = 0.0, $8684 = 0.0, $8685 = 0.0, $8686 = 0.0, $8687 = 0.0, $8688 = 0.0, $8689 = 0.0, $869 = 0, $8690 = 0.0, $8691 = 0.0, $8692 = 0.0, $8693 = 0.0, $8694 = 0.0, $8695 = 0.0, $8696 = 0, $8697 = 0.0, $8698 = 0.0, $8699 = 0.0;
 var $87 = 0, $870 = 0, $8700 = 0.0, $8701 = 0.0, $8702 = 0, $8703 = 0.0, $8704 = 0, $8705 = 0.0, $8706 = 0, $8707 = 0.0, $8708 = 0, $8709 = 0.0, $871 = 0, $8710 = 0, $8711 = 0.0, $8712 = 0.0, $8713 = 0.0, $8714 = 0.0, $8715 = 0.0, $8716 = 0.0;
 var $8717 = 0.0, $8718 = 0.0, $8719 = 0.0, $872 = 0, $8720 = 0.0, $8721 = 0.0, $8722 = 0.0, $8723 = 0.0, $8724 = 0.0, $8725 = 0.0, $8726 = 0.0, $8727 = 0.0, $8728 = 0.0, $8729 = 0.0, $873 = 0, $8730 = 0.0, $8731 = 0.0, $8732 = 0.0, $8733 = 0.0, $8734 = 0.0;
 var $8735 = 0.0, $8736 = 0.0, $8737 = 0.0, $8738 = 0.0, $8739 = 0.0, $874 = 0, $8740 = 0.0, $8741 = 0, $8742 = 0, $8743 = 0.0, $8744 = 0.0, $8745 = 0.0, $8746 = 0.0, $8747 = 0.0, $8748 = 0.0, $8749 = 0.0, $875 = 0, $8750 = 0, $8751 = 0, $8752 = 0.0;
 var $8753 = 0.0, $8754 = 0.0, $8755 = 0.0, $8756 = 0.0, $8757 = 0.0, $8758 = 0.0, $8759 = 0, $876 = 0, $8760 = 0.0, $8761 = 0, $8762 = 0.0, $8763 = 0.0, $8764 = 0.0, $8765 = 0.0, $8766 = 0.0, $8767 = 0.0, $8768 = 0.0, $8769 = 0.0, $877 = 0, $8770 = 0.0;
 var $8771 = 0.0, $8772 = 0.0, $8773 = 0.0, $8774 = 0.0, $8775 = 0.0, $8776 = 0.0, $8777 = 0.0, $8778 = 0.0, $8779 = 0.0, $878 = 0, $8780 = 0.0, $8781 = 0.0, $8782 = 0.0, $8783 = 0.0, $8784 = 0.0, $8785 = 0.0, $8786 = 0.0, $8787 = 0.0, $8788 = 0.0, $8789 = 0.0;
 var $879 = 0, $8790 = 0.0, $8791 = 0.0, $8792 = 0.0, $8793 = 0.0, $8794 = 0.0, $8795 = 0.0, $8796 = 0.0, $8797 = 0.0, $8798 = 0.0, $8799 = 0.0, $88 = 0, $880 = 0, $8800 = 0.0, $8801 = 0.0, $8802 = 0.0, $8803 = 0.0, $8804 = 0.0, $8805 = 0.0, $8806 = 0.0;
 var $8807 = 0.0, $8808 = 0.0, $8809 = 0.0, $881 = 0, $8810 = 0.0, $8811 = 0.0, $8812 = 0.0, $8813 = 0.0, $8814 = 0.0, $8815 = 0.0, $8816 = 0.0, $8817 = 0.0, $8818 = 0.0, $8819 = 0.0, $882 = 0, $8820 = 0.0, $8821 = 0.0, $8822 = 0.0, $8823 = 0.0, $8824 = 0.0;
 var $8825 = 0.0, $8826 = 0.0, $8827 = 0.0, $8828 = 0.0, $8829 = 0.0, $883 = 0, $8830 = 0.0, $8831 = 0.0, $8832 = 0.0, $8833 = 0, $8834 = 0.0, $8835 = 0.0, $8836 = 0.0, $8837 = 0.0, $8838 = 0.0, $8839 = 0, $884 = 0, $8840 = 0.0, $8841 = 0, $8842 = 0.0;
 var $8843 = 0, $8844 = 0.0, $8845 = 0, $8846 = 0.0, $8847 = 0, $8848 = 0, $8849 = 0.0, $885 = 0, $8850 = 0.0, $8851 = 0.0, $8852 = 0, $8853 = 0, $8854 = 0.0, $8855 = 0.0, $8856 = 0.0, $8857 = 0.0, $8858 = 0.0, $8859 = 0.0, $886 = 0, $8860 = 0;
 var $8861 = 0.0, $8862 = 0.0, $8863 = 0, $8864 = 0, $8865 = 0.0, $8866 = 0.0, $8867 = 0.0, $8868 = 0.0, $8869 = 0.0, $887 = 0, $8870 = 0.0, $8871 = 0, $8872 = 0, $8873 = 0.0, $8874 = 0.0, $8875 = 0.0, $8876 = 0.0, $8877 = 0.0, $8878 = 0.0, $8879 = 0.0;
 var $888 = 0, $8880 = 0.0, $8881 = 0.0, $8882 = 0.0, $8883 = 0.0, $8884 = 0, $8885 = 0.0, $8886 = 0, $8887 = 0.0, $8888 = 0.0, $8889 = 0, $889 = 0, $8890 = 0.0, $8891 = 0, $8892 = 0.0, $8893 = 0, $8894 = 0, $8895 = 0, $8896 = 0, $8897 = 0;
 var $8898 = 0, $8899 = 0, $89 = 0, $890 = 0, $8900 = 0, $8901 = 0, $8902 = 0, $8903 = 0.0, $8904 = 0, $8905 = 0.0, $8906 = 0.0, $8907 = 0.0, $8908 = 0, $8909 = 0.0, $891 = 0, $8910 = 0, $8911 = 0.0, $8912 = 0.0, $8913 = 0.0, $8914 = 0;
 var $8915 = 0, $8916 = 0, $8917 = 0.0, $8918 = 0, $8919 = 0.0, $892 = 0, $8920 = 0, $8921 = 0.0, $8922 = 0.0, $8923 = 0.0, $8924 = 0.0, $8925 = 0.0, $8926 = 0.0, $8927 = 0.0, $8928 = 0.0, $8929 = 0.0, $893 = 0, $8930 = 0.0, $8931 = 0.0, $8932 = 0.0;
 var $8933 = 0.0, $8934 = 0.0, $8935 = 0.0, $8936 = 0.0, $8937 = 0.0, $8938 = 0.0, $8939 = 0.0, $894 = 0, $8940 = 0.0, $8941 = 0.0, $8942 = 0.0, $8943 = 0.0, $8944 = 0.0, $8945 = 0.0, $8946 = 0.0, $8947 = 0.0, $8948 = 0.0, $8949 = 0.0, $895 = 0, $8950 = 0.0;
 var $8951 = 0.0, $8952 = 0.0, $8953 = 0.0, $8954 = 0.0, $8955 = 0.0, $8956 = 0.0, $8957 = 0.0, $8958 = 0.0, $8959 = 0.0, $896 = 0, $8960 = 0.0, $8961 = 0.0, $8962 = 0.0, $8963 = 0.0, $8964 = 0, $8965 = 0.0, $8966 = 0.0, $8967 = 0.0, $8968 = 0.0, $8969 = 0.0;
 var $897 = 0, $8970 = 0.0, $8971 = 0.0, $8972 = 0.0, $8973 = 0.0, $8974 = 0.0, $8975 = 0.0, $8976 = 0.0, $8977 = 0, $8978 = 0.0, $8979 = 0, $898 = 0, $8980 = 0.0, $8981 = 0.0, $8982 = 0.0, $8983 = 0.0, $8984 = 0.0, $8985 = 0.0, $8986 = 0.0, $8987 = 0.0;
 var $8988 = 0.0, $8989 = 0.0, $899 = 0, $8990 = 0.0, $8991 = 0.0, $8992 = 0.0, $8993 = 0.0, $8994 = 0.0, $8995 = 0.0, $8996 = 0.0, $8997 = 0.0, $8998 = 0.0, $8999 = 0.0, $9 = 0, $90 = 0, $900 = 0, $9000 = 0.0, $9001 = 0.0, $9002 = 0.0, $9003 = 0.0;
 var $9004 = 0.0, $9005 = 0.0, $9006 = 0.0, $9007 = 0.0, $9008 = 0.0, $9009 = 0.0, $901 = 0, $9010 = 0.0, $9011 = 0.0, $9012 = 0.0, $9013 = 0.0, $9014 = 0.0, $9015 = 0.0, $9016 = 0.0, $9017 = 0.0, $9018 = 0.0, $9019 = 0.0, $902 = 0, $9020 = 0.0, $9021 = 0.0;
 var $9022 = 0.0, $9023 = 0.0, $9024 = 0, $9025 = 0.0, $9026 = 0.0, $9027 = 0.0, $9028 = 0.0, $9029 = 0.0, $903 = 0, $9030 = 0.0, $9031 = 0.0, $9032 = 0.0, $9033 = 0.0, $9034 = 0, $9035 = 0.0, $9036 = 0, $9037 = 0.0, $9038 = 0.0, $9039 = 0.0, $904 = 0;
 var $9040 = 0.0, $9041 = 0.0, $9042 = 0.0, $9043 = 0.0, $9044 = 0.0, $9045 = 0.0, $9046 = 0.0, $9047 = 0.0, $9048 = 0.0, $9049 = 0.0, $905 = 0, $9050 = 0.0, $9051 = 0.0, $9052 = 0.0, $9053 = 0.0, $9054 = 0.0, $9055 = 0.0, $9056 = 0.0, $9057 = 0, $9058 = 0.0;
 var $9059 = 0.0, $906 = 0, $9060 = 0.0, $9061 = 0.0, $9062 = 0.0, $9063 = 0.0, $9064 = 0.0, $9065 = 0.0, $9066 = 0.0, $9067 = 0, $9068 = 0.0, $9069 = 0.0, $907 = 0, $9070 = 0.0, $9071 = 0.0, $9072 = 0.0, $9073 = 0.0, $9074 = 0.0, $9075 = 0.0, $9076 = 0.0;
 var $9077 = 0.0, $9078 = 0.0, $9079 = 0.0, $908 = 0, $9080 = 0.0, $9081 = 0.0, $9082 = 0.0, $9083 = 0.0, $9084 = 0.0, $9085 = 0.0, $9086 = 0.0, $9087 = 0.0, $9088 = 0.0, $9089 = 0, $909 = 0, $9090 = 0.0, $9091 = 0.0, $9092 = 0.0, $9093 = 0.0, $9094 = 0.0;
 var $9095 = 0.0, $9096 = 0, $9097 = 0.0, $9098 = 0, $9099 = 0.0, $91 = 0, $910 = 0, $9100 = 0, $9101 = 0.0, $9102 = 0.0, $9103 = 0.0, $9104 = 0.0, $9105 = 0.0, $9106 = 0.0, $9107 = 0.0, $9108 = 0.0, $9109 = 0.0, $911 = 0, $9110 = 0.0, $9111 = 0.0;
 var $9112 = 0.0, $9113 = 0.0, $9114 = 0.0, $9115 = 0.0, $9116 = 0.0, $9117 = 0.0, $9118 = 0.0, $9119 = 0.0, $912 = 0, $9120 = 0.0, $9121 = 0.0, $9122 = 0.0, $9123 = 0.0, $9124 = 0.0, $9125 = 0.0, $9126 = 0.0, $9127 = 0.0, $9128 = 0.0, $9129 = 0.0, $913 = 0.0;
 var $9130 = 0.0, $9131 = 0.0, $9132 = 0.0, $9133 = 0.0, $9134 = 0.0, $9135 = 0.0, $9136 = 0.0, $9137 = 0.0, $9138 = 0.0, $9139 = 0.0, $914 = 0, $9140 = 0.0, $9141 = 0.0, $9142 = 0.0, $9143 = 0.0, $9144 = 0.0, $9145 = 0.0, $9146 = 0, $9147 = 0.0, $9148 = 0.0;
 var $9149 = 0.0, $915 = 0.0, $9150 = 0.0, $9151 = 0.0, $9152 = 0.0, $9153 = 0.0, $9154 = 0.0, $9155 = 0.0, $9156 = 0.0, $9157 = 0.0, $9158 = 0.0, $9159 = 0.0, $916 = 0.0, $9160 = 0.0, $9161 = 0.0, $9162 = 0.0, $9163 = 0.0, $9164 = 0.0, $9165 = 0.0, $9166 = 0.0;
 var $9167 = 0.0, $9168 = 0.0, $9169 = 0.0, $917 = 0.0, $9170 = 0.0, $9171 = 0.0, $9172 = 0.0, $9173 = 0.0, $9174 = 0.0, $9175 = 0.0, $9176 = 0.0, $9177 = 0.0, $9178 = 0.0, $9179 = 0.0, $918 = 0, $9180 = 0.0, $9181 = 0.0, $9182 = 0.0, $9183 = 0.0, $9184 = 0.0;
 var $9185 = 0.0, $9186 = 0.0, $9187 = 0.0, $9188 = 0.0, $9189 = 0.0, $919 = 0.0, $9190 = 0.0, $9191 = 0.0, $9192 = 0.0, $9193 = 0.0, $9194 = 0.0, $9195 = 0.0, $9196 = 0.0, $9197 = 0.0, $9198 = 0, $9199 = 0.0, $92 = 0, $920 = 0, $9200 = 0.0, $9201 = 0.0;
 var $9202 = 0.0, $9203 = 0, $9204 = 0.0, $9205 = 0, $9206 = 0, $9207 = 0.0, $9208 = 0.0, $9209 = 0.0, $921 = 0.0, $9210 = 0.0, $9211 = 0.0, $9212 = 0.0, $9213 = 0.0, $9214 = 0.0, $9215 = 0.0, $9216 = 0, $9217 = 0, $9218 = 0.0, $9219 = 0.0, $922 = 0.0;
 var $9220 = 0.0, $9221 = 0.0, $9222 = 0.0, $9223 = 0.0, $9224 = 0.0, $9225 = 0.0, $9226 = 0.0, $9227 = 0.0, $9228 = 0.0, $9229 = 0.0, $923 = 0.0, $9230 = 0.0, $9231 = 0.0, $9232 = 0, $9233 = 0.0, $9234 = 0.0, $9235 = 0.0, $9236 = 0.0, $9237 = 0.0, $9238 = 0.0;
 var $9239 = 0.0, $924 = 0, $9240 = 0.0, $9241 = 0, $9242 = 0.0, $9243 = 0, $9244 = 0.0, $9245 = 0, $9246 = 0.0, $9247 = 0, $9248 = 0, $9249 = 0.0, $925 = 0, $9250 = 0.0, $9251 = 0.0, $9252 = 0.0, $9253 = 0.0, $9254 = 0.0, $9255 = 0.0, $9256 = 0.0;
 var $9257 = 0.0, $9258 = 0.0, $9259 = 0.0, $926 = 0, $9260 = 0.0, $9261 = 0.0, $9262 = 0.0, $9263 = 0.0, $9264 = 0.0, $9265 = 0.0, $9266 = 0.0, $9267 = 0.0, $9268 = 0.0, $9269 = 0.0, $927 = 0.0, $9270 = 0.0, $9271 = 0.0, $9272 = 0.0, $9273 = 0.0, $9274 = 0.0;
 var $9275 = 0.0, $9276 = 0.0, $9277 = 0.0, $9278 = 0.0, $9279 = 0.0, $928 = 0, $9280 = 0.0, $9281 = 0.0, $9282 = 0.0, $9283 = 0.0, $9284 = 0.0, $9285 = 0.0, $9286 = 0.0, $9287 = 0.0, $9288 = 0.0, $9289 = 0.0, $929 = 0.0, $9290 = 0.0, $9291 = 0.0, $9292 = 0.0;
 var $9293 = 0.0, $9294 = 0.0, $9295 = 0.0, $9296 = 0.0, $9297 = 0.0, $9298 = 0.0, $9299 = 0.0, $93 = 0, $930 = 0, $9300 = 0, $9301 = 0.0, $9302 = 0, $9303 = 0, $9304 = 0.0, $9305 = 0.0, $9306 = 0.0, $9307 = 0.0, $9308 = 0.0, $9309 = 0.0, $931 = 0.0;
 var $9310 = 0.0, $9311 = 0.0, $9312 = 0.0, $9313 = 0.0, $9314 = 0.0, $9315 = 0.0, $9316 = 0.0, $9317 = 0.0, $9318 = 0.0, $9319 = 0.0, $932 = 0.0, $9320 = 0.0, $9321 = 0.0, $9322 = 0.0, $9323 = 0.0, $9324 = 0.0, $9325 = 0.0, $9326 = 0.0, $9327 = 0.0, $9328 = 0.0;
 var $9329 = 0.0, $933 = 0.0, $9330 = 0.0, $9331 = 0.0, $9332 = 0.0, $9333 = 0.0, $9334 = 0.0, $9335 = 0.0, $9336 = 0.0, $9337 = 0.0, $9338 = 0.0, $9339 = 0.0, $934 = 0.0, $9340 = 0.0, $9341 = 0.0, $9342 = 0.0, $9343 = 0.0, $9344 = 0.0, $9345 = 0.0, $9346 = 0.0;
 var $9347 = 0.0, $9348 = 0.0, $9349 = 0.0, $935 = 0.0, $9350 = 0.0, $9351 = 0.0, $9352 = 0.0, $9353 = 0, $9354 = 0.0, $9355 = 0.0, $9356 = 0.0, $9357 = 0.0, $9358 = 0.0, $9359 = 0, $936 = 0.0, $9360 = 0, $9361 = 0.0, $9362 = 0.0, $9363 = 0.0, $9364 = 0.0;
 var $9365 = 0.0, $9366 = 0.0, $9367 = 0, $9368 = 0, $9369 = 0.0, $937 = 0.0, $9370 = 0.0, $9371 = 0.0, $9372 = 0.0, $9373 = 0.0, $9374 = 0, $9375 = 0.0, $9376 = 0.0, $9377 = 0.0, $9378 = 0, $9379 = 0, $938 = 0, $9380 = 0, $9381 = 0, $9382 = 0;
 var $9383 = 0, $9384 = 0, $9385 = 0, $9386 = 0, $9387 = 0, $9388 = 0, $9389 = 0, $939 = 0.0, $9390 = 0, $9391 = 0, $9392 = 0, $9393 = 0, $9394 = 0, $9395 = 0, $9396 = 0.0, $9397 = 0, $9398 = 0.0, $9399 = 0.0, $94 = 0, $940 = 0.0;
 var $9400 = 0.0, $9401 = 0, $9402 = 0.0, $9403 = 0, $9404 = 0.0, $9405 = 0.0, $9406 = 0.0, $9407 = 0, $9408 = 0, $9409 = 0, $941 = 0.0, $9410 = 0.0, $9411 = 0, $9412 = 0.0, $9413 = 0, $9414 = 0.0, $9415 = 0.0, $9416 = 0.0, $9417 = 0.0, $9418 = 0.0;
 var $9419 = 0.0, $942 = 0.0, $9420 = 0.0, $9421 = 0.0, $9422 = 0.0, $9423 = 0.0, $9424 = 0.0, $9425 = 0.0, $9426 = 0.0, $9427 = 0.0, $9428 = 0.0, $9429 = 0.0, $943 = 0, $9430 = 0.0, $9431 = 0.0, $9432 = 0.0, $9433 = 0.0, $9434 = 0.0, $9435 = 0.0, $9436 = 0.0;
 var $9437 = 0.0, $9438 = 0.0, $9439 = 0.0, $944 = 0.0, $9440 = 0.0, $9441 = 0.0, $9442 = 0, $9443 = 0.0, $9444 = 0.0, $9445 = 0.0, $9446 = 0.0, $9447 = 0.0, $9448 = 0.0, $9449 = 0.0, $945 = 0.0, $9450 = 0.0, $9451 = 0, $9452 = 0.0, $9453 = 0, $9454 = 0.0;
 var $9455 = 0, $9456 = 0, $9457 = 0.0, $9458 = 0.0, $9459 = 0.0, $946 = 0.0, $9460 = 0, $9461 = 0, $9462 = 0.0, $9463 = 0.0, $9464 = 0.0, $9465 = 0.0, $9466 = 0.0, $9467 = 0.0, $9468 = 0.0, $9469 = 0.0, $947 = 0.0, $9470 = 0, $9471 = 0, $9472 = 0.0;
 var $9473 = 0.0, $9474 = 0.0, $9475 = 0.0, $9476 = 0.0, $9477 = 0, $9478 = 0.0, $9479 = 0.0, $948 = 0.0, $9480 = 0.0, $9481 = 0, $9482 = 0, $9483 = 0, $9484 = 0, $9485 = 0, $9486 = 0, $9487 = 0, $9488 = 0, $9489 = 0, $949 = 0.0, $9490 = 0;
 var $9491 = 0, $9492 = 0, $9493 = 0, $9494 = 0, $9495 = 0, $9496 = 0, $9497 = 0, $9498 = 0, $9499 = 0.0, $95 = 0, $950 = 0.0, $9500 = 0, $9501 = 0.0, $9502 = 0.0, $9503 = 0.0, $9504 = 0, $9505 = 0.0, $9506 = 0, $9507 = 0.0, $9508 = 0.0;
 var $9509 = 0.0, $951 = 0.0, $9510 = 0, $9511 = 0, $9512 = 0, $9513 = 0.0, $9514 = 0, $9515 = 0.0, $9516 = 0, $9517 = 0.0, $9518 = 0.0, $9519 = 0.0, $952 = 0.0, $9520 = 0.0, $9521 = 0.0, $9522 = 0.0, $9523 = 0.0, $9524 = 0.0, $9525 = 0.0, $9526 = 0.0;
 var $9527 = 0.0, $9528 = 0.0, $9529 = 0.0, $953 = 0.0, $9530 = 0.0, $9531 = 0.0, $9532 = 0.0, $9533 = 0.0, $9534 = 0.0, $9535 = 0.0, $9536 = 0.0, $9537 = 0.0, $9538 = 0.0, $9539 = 0.0, $954 = 0.0, $9540 = 0.0, $9541 = 0.0, $9542 = 0.0, $9543 = 0.0, $9544 = 0.0;
 var $9545 = 0.0, $9546 = 0, $9547 = 0.0, $9548 = 0.0, $9549 = 0.0, $955 = 0.0, $9550 = 0.0, $9551 = 0.0, $9552 = 0.0, $9553 = 0.0, $9554 = 0, $9555 = 0.0, $9556 = 0, $9557 = 0.0, $9558 = 0, $9559 = 0, $956 = 0, $9560 = 0.0, $9561 = 0.0, $9562 = 0.0;
 var $9563 = 0.0, $9564 = 0.0, $9565 = 0.0, $9566 = 0, $9567 = 0.0, $9568 = 0, $9569 = 0, $957 = 0.0, $9570 = 0.0, $9571 = 0.0, $9572 = 0.0, $9573 = 0.0, $9574 = 0.0, $9575 = 0.0, $9576 = 0.0, $9577 = 0.0, $9578 = 0.0, $9579 = 0, $958 = 0.0, $9580 = 0;
 var $9581 = 0.0, $9582 = 0.0, $9583 = 0.0, $9584 = 0.0, $9585 = 0.0, $9586 = 0.0, $9587 = 0.0, $9588 = 0.0, $9589 = 0.0, $959 = 0.0, $9590 = 0.0, $9591 = 0.0, $9592 = 0.0, $9593 = 0.0, $9594 = 0.0, $9595 = 0.0, $9596 = 0, $9597 = 0.0, $9598 = 0.0, $9599 = 0.0;
 var $96 = 0, $960 = 0.0, $9600 = 0.0, $9601 = 0.0, $9602 = 0.0, $9603 = 0.0, $9604 = 0.0, $9605 = 0, $9606 = 0.0, $9607 = 0, $9608 = 0.0, $9609 = 0, $961 = 0.0, $9610 = 0, $9611 = 0, $9612 = 0.0, $9613 = 0.0, $9614 = 0.0, $9615 = 0.0, $9616 = 0.0;
 var $9617 = 0.0, $9618 = 0.0, $9619 = 0.0, $962 = 0.0, $9620 = 0.0, $9621 = 0.0, $9622 = 0.0, $9623 = 0.0, $9624 = 0.0, $9625 = 0.0, $9626 = 0.0, $9627 = 0.0, $9628 = 0.0, $9629 = 0.0, $963 = 0.0, $9630 = 0.0, $9631 = 0.0, $9632 = 0.0, $9633 = 0.0, $9634 = 0.0;
 var $9635 = 0.0, $9636 = 0.0, $9637 = 0.0, $9638 = 0.0, $9639 = 0.0, $964 = 0.0, $9640 = 0.0, $9641 = 0.0, $9642 = 0.0, $9643 = 0.0, $9644 = 0.0, $9645 = 0.0, $9646 = 0.0, $9647 = 0.0, $9648 = 0.0, $9649 = 0.0, $965 = 0, $9650 = 0.0, $9651 = 0.0, $9652 = 0.0;
 var $9653 = 0.0, $9654 = 0.0, $9655 = 0.0, $9656 = 0.0, $9657 = 0.0, $9658 = 0.0, $9659 = 0.0, $966 = 0.0, $9660 = 0.0, $9661 = 0.0, $9662 = 0, $9663 = 0.0, $9664 = 0, $9665 = 0, $9666 = 0.0, $9667 = 0.0, $9668 = 0.0, $9669 = 0.0, $967 = 0.0, $9670 = 0.0;
 var $9671 = 0.0, $9672 = 0.0, $9673 = 0.0, $9674 = 0.0, $9675 = 0.0, $9676 = 0.0, $9677 = 0.0, $9678 = 0.0, $9679 = 0.0, $968 = 0.0, $9680 = 0.0, $9681 = 0.0, $9682 = 0.0, $9683 = 0.0, $9684 = 0.0, $9685 = 0.0, $9686 = 0.0, $9687 = 0.0, $9688 = 0.0, $9689 = 0.0;
 var $969 = 0.0, $9690 = 0.0, $9691 = 0.0, $9692 = 0.0, $9693 = 0.0, $9694 = 0.0, $9695 = 0.0, $9696 = 0.0, $9697 = 0.0, $9698 = 0.0, $9699 = 0.0, $97 = 0, $970 = 0.0, $9700 = 0.0, $9701 = 0.0, $9702 = 0.0, $9703 = 0.0, $9704 = 0.0, $9705 = 0.0, $9706 = 0.0;
 var $9707 = 0.0, $9708 = 0.0, $9709 = 0.0, $971 = 0.0, $9710 = 0.0, $9711 = 0.0, $9712 = 0.0, $9713 = 0.0, $9714 = 0, $9715 = 0.0, $9716 = 0.0, $9717 = 0.0, $9718 = 0.0, $9719 = 0.0, $972 = 0.0, $9720 = 0, $9721 = 0, $9722 = 0.0, $9723 = 0.0, $9724 = 0.0;
 var $9725 = 0.0, $9726 = 0.0, $9727 = 0.0, $9728 = 0, $9729 = 0, $973 = 0.0, $9730 = 0.0, $9731 = 0.0, $9732 = 0.0, $9733 = 0.0, $9734 = 0.0, $9735 = 0, $9736 = 0.0, $9737 = 0.0, $9738 = 0.0, $9739 = 0, $974 = 0.0, $9740 = 0, $9741 = 0, $9742 = 0;
 var $9743 = 0, $9744 = 0, $9745 = 0, $9746 = 0, $9747 = 0, $9748 = 0, $9749 = 0, $975 = 0.0, $9750 = 0, $9751 = 0, $9752 = 0, $9753 = 0, $9754 = 0, $9755 = 0, $9756 = 0, $9757 = 0.0, $9758 = 0, $9759 = 0.0, $976 = 0.0, $9760 = 0.0;
 var $9761 = 0.0, $9762 = 0, $9763 = 0.0, $9764 = 0, $9765 = 0.0, $9766 = 0.0, $9767 = 0.0, $9768 = 0, $9769 = 0, $977 = 0.0, $9770 = 0, $9771 = 0.0, $9772 = 0, $9773 = 0.0, $9774 = 0, $9775 = 0.0, $9776 = 0.0, $9777 = 0.0, $9778 = 0.0, $9779 = 0.0;
 var $978 = 0.0, $9780 = 0.0, $9781 = 0.0, $9782 = 0.0, $9783 = 0.0, $9784 = 0.0, $9785 = 0.0, $9786 = 0.0, $9787 = 0.0, $9788 = 0.0, $9789 = 0.0, $979 = 0.0, $9790 = 0.0, $9791 = 0.0, $9792 = 0.0, $9793 = 0.0, $9794 = 0.0, $9795 = 0.0, $9796 = 0.0, $9797 = 0.0;
 var $9798 = 0.0, $9799 = 0.0, $98 = 0, $980 = 0.0, $9800 = 0.0, $9801 = 0.0, $9802 = 0.0, $9803 = 0.0, $9804 = 0, $9805 = 0.0, $9806 = 0.0, $9807 = 0.0, $9808 = 0.0, $9809 = 0.0, $981 = 0.0, $9810 = 0.0, $9811 = 0.0, $9812 = 0.0, $9813 = 0, $9814 = 0.0;
 var $9815 = 0, $9816 = 0.0, $9817 = 0, $9818 = 0, $9819 = 0.0, $982 = 0.0, $9820 = 0.0, $9821 = 0.0, $9822 = 0, $9823 = 0, $9824 = 0.0, $9825 = 0.0, $9826 = 0.0, $9827 = 0.0, $9828 = 0.0, $9829 = 0.0, $983 = 0.0, $9830 = 0.0, $9831 = 0.0, $9832 = 0;
 var $9833 = 0, $9834 = 0.0, $9835 = 0.0, $9836 = 0.0, $9837 = 0.0, $9838 = 0.0, $9839 = 0, $984 = 0.0, $9840 = 0.0, $9841 = 0.0, $9842 = 0.0, $9843 = 0, $9844 = 0, $9845 = 0, $9846 = 0, $9847 = 0, $9848 = 0, $9849 = 0, $985 = 0.0, $9850 = 0;
 var $9851 = 0, $9852 = 0, $9853 = 0, $9854 = 0, $9855 = 0, $9856 = 0, $9857 = 0, $9858 = 0, $9859 = 0, $986 = 0.0, $9860 = 0, $9861 = 0.0, $9862 = 0, $9863 = 0.0, $9864 = 0.0, $9865 = 0.0, $9866 = 0, $9867 = 0.0, $9868 = 0, $9869 = 0.0;
 var $987 = 0.0, $9870 = 0.0, $9871 = 0.0, $9872 = 0, $9873 = 0, $9874 = 0, $9875 = 0.0, $9876 = 0, $9877 = 0.0, $9878 = 0, $9879 = 0.0, $988 = 0.0, $9880 = 0.0, $9881 = 0.0, $9882 = 0.0, $9883 = 0.0, $9884 = 0.0, $9885 = 0.0, $9886 = 0.0, $9887 = 0.0;
 var $9888 = 0.0, $9889 = 0.0, $989 = 0.0, $9890 = 0.0, $9891 = 0.0, $9892 = 0.0, $9893 = 0.0, $9894 = 0.0, $9895 = 0.0, $9896 = 0.0, $9897 = 0.0, $9898 = 0.0, $9899 = 0.0, $99 = 0, $990 = 0.0, $9900 = 0.0, $9901 = 0.0, $9902 = 0.0, $9903 = 0.0, $9904 = 0.0;
 var $9905 = 0.0, $9906 = 0.0, $9907 = 0.0, $9908 = 0, $9909 = 0.0, $991 = 0.0, $9910 = 0.0, $9911 = 0.0, $9912 = 0.0, $9913 = 0.0, $9914 = 0.0, $9915 = 0.0, $9916 = 0, $9917 = 0.0, $9918 = 0, $9919 = 0.0, $992 = 0.0, $9920 = 0, $9921 = 0, $9922 = 0.0;
 var $9923 = 0.0, $9924 = 0.0, $9925 = 0.0, $9926 = 0.0, $9927 = 0.0, $9928 = 0.0, $9929 = 0, $993 = 0.0, $9930 = 0, $9931 = 0.0, $9932 = 0.0, $9933 = 0.0, $9934 = 0.0, $9935 = 0.0, $9936 = 0.0, $9937 = 0, $9938 = 0, $9939 = 0.0, $994 = 0.0, $9940 = 0.0;
 var $9941 = 0.0, $9942 = 0.0, $9943 = 0.0, $9944 = 0, $9945 = 0.0, $9946 = 0.0, $9947 = 0.0, $9948 = 0, $9949 = 0, $995 = 0, $9950 = 0, $9951 = 0, $9952 = 0, $9953 = 0, $9954 = 0, $9955 = 0, $9956 = 0, $9957 = 0, $9958 = 0, $9959 = 0;
 var $996 = 0.0, $9960 = 0, $9961 = 0, $9962 = 0, $9963 = 0, $9964 = 0, $9965 = 0, $9966 = 0.0, $9967 = 0, $9968 = 0.0, $9969 = 0.0, $997 = 0.0, $9970 = 0.0, $9971 = 0, $9972 = 0.0, $9973 = 0, $9974 = 0.0, $9975 = 0.0, $9976 = 0.0, $9977 = 0;
 var $9978 = 0, $9979 = 0, $998 = 0.0, $9980 = 0.0, $9981 = 0, $9982 = 0.0, $9983 = 0, $9984 = 0.0, $9985 = 0.0, $9986 = 0.0, $9987 = 0.0, $9988 = 0.0, $9989 = 0.0, $999 = 0.0, $9990 = 0.0, $9991 = 0.0, $9992 = 0.0, $9993 = 0.0, $9994 = 0.0, $9995 = 0.0;
 var $9996 = 0.0, $9997 = 0.0, $9998 = 0.0, $9999 = 0.0, $brmerge = 0, $brmerge408 = 0, $cj0array = 0, $cj0array192 = 0, $cj0array201 = 0, $cj0array221 = 0, $cj0array230 = 0, $cj0array249 = 0, $cj0array256 = 0, $cj0array263 = 0, $cj0array274 = 0, $cj0array281 = 0, $cj0array288 = 0, $cj0array300 = 0, $cj0array309 = 0, $cj0array329 = 0;
 var $cj0array338 = 0, $cj0array385 = 0, $cj0array394 = 0, $cj0array414 = 0, $cj0array423 = 0, $cj0array442 = 0, $cj0array449 = 0, $cj0array456 = 0, $cj0array467 = 0, $cj0array474 = 0, $cj0array481 = 0, $cj0array493 = 0, $cj0array502 = 0, $cj0array522 = 0, $cj0array531 = 0, $cj0array593 = 0, $cj1array = 0, $cj1array101 = 0, $cj1array108 = 0, $cj1array116 = 0;
 var $cj1array123 = 0, $cj1array131 = 0, $cj1array139 = 0, $cj1array172 = 0, $cj1array20 = 0, $cj1array36 = 0, $cj1array43 = 0, $cj1array51 = 0, $cj1array58 = 0, $cj1array619 = 0, $cj1array626 = 0, $cj1array645 = 0, $cj1array652 = 0, $cj1array660 = 0, $cj1array667 = 0, $cj1array690 = 0, $cj1array697 = 0, $cj1array716 = 0, $cj1array723 = 0, $cj1array731 = 0;
 var $cj1array738 = 0, $cj1array746 = 0, $cj1array755 = 0, $cj1array78 = 0, $cj1array85 = 0, $cj3array = 0, $exitcond = 0, $exitcond1359 = 0, $exitcond1360 = 0, $exitcond1361 = 0, $exitcond1362 = 0, $exitcond1363 = 0, $exitcond1364 = 0, $exitcond1365 = 0, $exitcond1366 = 0, $exitcond1367 = 0, $exitcond1368 = 0, $exitcond1369 = 0, $exitcond1370 = 0, $exitcond1371 = 0;
 var $exitcond1372 = 0, $exitcond1389 = 0, $exitcond1390 = 0, $exitcond1391 = 0, $exitcond1392 = 0, $exitcond1393 = 0, $exitcond1394 = 0, $exitcond1418 = 0, $exitcond1419 = 0, $exitcond1420 = 0, $exitcond1421 = 0, $exitcond1422 = 0, $exitcond1423 = 0, $exitcond1434 = 0, $exitcond1438 = 0, $exitcond1439 = 0, $exitcond1440 = 0, $exitcond1441 = 0, $exitcond1442 = 0, $exitcond1443 = 0;
 var $exitcond1444 = 0, $exitcond1445 = 0, $exitcond1446 = 0, $exitcond1447 = 0, $exitcond1448 = 0, $exitcond1449 = 0, $exitcond1450 = 0, $exitcond1451 = 0, $exitcond1452 = 0, $exitcond1453 = 0, $iij0$01080 = 0, $iij0253$01051 = 0, $iij0260$01047 = 0, $iij0267$01043 = 0, $iij0278$01039 = 0, $iij0285$01035 = 0, $iij0292$01031 = 0, $iij0446$0967 = 0, $iij0453$0963 = 0, $iij0460$0959 = 0;
 var $iij0471$0955 = 0, $iij0478$0951 = 0, $iij0485$0947 = 0, $iij0597$0824 = 0, $iij1$01139 = 0, $iij1105$01123 = 0, $iij1112$01119 = 0, $iij1120$01107 = 0, $iij1127$01103 = 0, $iij1135$01099 = 0, $iij1143$01095 = 0, $iij1176$0896 = 0, $iij124$01135 = 0, $iij140$01147 = 0, $iij147$01143 = 0, $iij155$01131 = 0, $iij162$01127 = 0, $iij1623$0883 = 0, $iij1630$0879 = 0, $iij1649$0891 = 0;
 var $iij1656$0887 = 0, $iij1664$0875 = 0, $iij1671$0871 = 0, $iij1694$0859 = 0, $iij1701$0855 = 0, $iij1720$0867 = 0, $iij1727$0863 = 0, $iij1735$0851 = 0, $iij1742$0847 = 0, $iij1750$0843 = 0, $iij1759$0839 = 0, $iij182$01115 = 0, $iij189$01111 = 0, $iij3$0822 = 0, $ij0$01151 = 0, $ij0252$01054 = 0, $ij0259$01050 = 0, $ij0266$01046 = 0, $ij0277$01042 = 0, $ij0284$01038 = 0;
 var $ij0291$01034 = 0, $ij0445$0970 = 0, $ij0452$0966 = 0, $ij0459$0962 = 0, $ij0470$0958 = 0, $ij0477$0954 = 0, $ij0484$0950 = 0, $ij0596$0895 = 0, $ij1$01142 = 0, $ij1104$01126 = 0, $ij1111$01122 = 0, $ij1119$01110 = 0, $ij1126$01106 = 0, $ij1134$01102 = 0, $ij1142$01098 = 0, $ij1175$01079 = 0, $ij123$01138 = 0, $ij139$01150 = 0, $ij146$01146 = 0, $ij154$01134 = 0;
 var $ij161$01130 = 0, $ij1622$0886 = 0, $ij1629$0882 = 0, $ij1648$0894 = 0, $ij1655$0890 = 0, $ij1663$0878 = 0, $ij1670$0874 = 0, $ij1693$0862 = 0, $ij1700$0858 = 0, $ij1719$0870 = 0, $ij1726$0866 = 0, $ij1734$0854 = 0, $ij1741$0850 = 0, $ij1749$0846 = 0, $ij1758$0842 = 0, $ij181$01118 = 0, $ij188$01114 = 0, $ij3$01152 = 0, $j0array = 0, $j0array191 = 0;
 var $j0array200 = 0, $j0array220 = 0, $j0array229 = 0, $j0array248 = 0, $j0array255 = 0, $j0array262 = 0, $j0array273 = 0, $j0array280 = 0, $j0array287 = 0, $j0array299 = 0, $j0array308 = 0, $j0array328 = 0, $j0array337 = 0, $j0array384 = 0, $j0array393 = 0, $j0array413 = 0, $j0array422 = 0, $j0array441 = 0, $j0array448 = 0, $j0array455 = 0;
 var $j0array466 = 0, $j0array473 = 0, $j0array480 = 0, $j0array492 = 0, $j0array501 = 0, $j0array521 = 0, $j0array530 = 0, $j0array592 = 0, $j0valid = 0, $j0valid194 = 0, $j0valid203 = 0, $j0valid223 = 0, $j0valid232 = 0, $j0valid251 = 0, $j0valid258 = 0, $j0valid265 = 0, $j0valid276 = 0, $j0valid283 = 0, $j0valid290 = 0, $j0valid302 = 0;
 var $j0valid311 = 0, $j0valid331 = 0, $j0valid340 = 0, $j0valid387 = 0, $j0valid396 = 0, $j0valid416 = 0, $j0valid425 = 0, $j0valid444 = 0, $j0valid451 = 0, $j0valid458 = 0, $j0valid469 = 0, $j0valid476 = 0, $j0valid483 = 0, $j0valid495 = 0, $j0valid504 = 0, $j0valid524 = 0, $j0valid533 = 0, $j0valid595 = 0, $j1array = 0, $j1array100 = 0;
 var $j1array107 = 0, $j1array115 = 0, $j1array122 = 0, $j1array130 = 0, $j1array138 = 0, $j1array171 = 0, $j1array19 = 0, $j1array35 = 0, $j1array42 = 0, $j1array50 = 0, $j1array57 = 0, $j1array618 = 0, $j1array625 = 0, $j1array644 = 0, $j1array651 = 0, $j1array659 = 0, $j1array666 = 0, $j1array689 = 0, $j1array696 = 0, $j1array715 = 0;
 var $j1array722 = 0, $j1array730 = 0, $j1array737 = 0, $j1array745 = 0, $j1array754 = 0, $j1array77 = 0, $j1array84 = 0, $j1valid = 0, $j1valid103 = 0, $j1valid110 = 0, $j1valid118 = 0, $j1valid125 = 0, $j1valid133 = 0, $j1valid141 = 0, $j1valid174 = 0, $j1valid22 = 0, $j1valid38 = 0, $j1valid45 = 0, $j1valid53 = 0, $j1valid60 = 0;
 var $j1valid621 = 0, $j1valid628 = 0, $j1valid647 = 0, $j1valid654 = 0, $j1valid662 = 0, $j1valid669 = 0, $j1valid692 = 0, $j1valid699 = 0, $j1valid718 = 0, $j1valid725 = 0, $j1valid733 = 0, $j1valid740 = 0, $j1valid748 = 0, $j1valid757 = 0, $j1valid80 = 0, $j1valid87 = 0, $j3array = 0, $j3valid = 0, $or$cond = 0, $or$cond100 = 0;
 var $or$cond101 = 0, $or$cond109 = 0, $or$cond110 = 0, $or$cond119 = 0, $or$cond120 = 0, $or$cond129 = 0, $or$cond130 = 0, $or$cond139 = 0, $or$cond140 = 0, $or$cond149 = 0, $or$cond150 = 0, $or$cond158 = 0, $or$cond161 = 0, $or$cond167 = 0, $or$cond336 = 0, $or$cond337 = 0, $or$cond338 = 0, $or$cond347 = 0, $or$cond348 = 0, $or$cond357 = 0;
 var $or$cond358 = 0, $or$cond367 = 0, $or$cond368 = 0, $or$cond377 = 0, $or$cond378 = 0, $or$cond387 = 0, $or$cond388 = 0, $or$cond396 = 0, $or$cond399 = 0, $or$cond99 = 0, $sj0array = 0, $sj0array193 = 0, $sj0array202 = 0, $sj0array222 = 0, $sj0array231 = 0, $sj0array250 = 0, $sj0array257 = 0, $sj0array264 = 0, $sj0array275 = 0, $sj0array282 = 0;
 var $sj0array289 = 0, $sj0array301 = 0, $sj0array310 = 0, $sj0array330 = 0, $sj0array339 = 0, $sj0array386 = 0, $sj0array395 = 0, $sj0array415 = 0, $sj0array424 = 0, $sj0array443 = 0, $sj0array450 = 0, $sj0array457 = 0, $sj0array468 = 0, $sj0array475 = 0, $sj0array482 = 0, $sj0array494 = 0, $sj0array503 = 0, $sj0array523 = 0, $sj0array532 = 0, $sj0array594 = 0;
 var $sj1array = 0, $sj1array102 = 0, $sj1array109 = 0, $sj1array117 = 0, $sj1array124 = 0, $sj1array132 = 0, $sj1array140 = 0, $sj1array173 = 0, $sj1array21 = 0, $sj1array37 = 0, $sj1array44 = 0, $sj1array52 = 0, $sj1array59 = 0, $sj1array620 = 0, $sj1array627 = 0, $sj1array646 = 0, $sj1array653 = 0, $sj1array661 = 0, $sj1array668 = 0, $sj1array691 = 0;
 var $sj1array698 = 0, $sj1array717 = 0, $sj1array724 = 0, $sj1array732 = 0, $sj1array739 = 0, $sj1array747 = 0, $sj1array756 = 0, $sj1array79 = 0, $sj1array86 = 0, $sj3array = 0, $x1000 = 0, $x1008 = 0, $x1009 = 0, $x1022 = 0, $x1023 = 0, $x1033 = 0, $x1034 = 0, $x1048 = 0, $x1049 = 0, $x1068 = 0;
 var $x1069 = 0, $x1089 = 0, $x1090 = 0, $x1107 = 0, $x1108 = 0, $x1134 = 0, $x1138 = 0, $x1143 = 0, $x1148 = 0, $x1150 = 0, $x1160 = 0, $x1171 = 0, $x1175 = 0, $x1180 = 0, $x1185 = 0, $x1187 = 0, $x1198 = 0, $x1208 = 0, $x1219 = 0, $x122 = 0;
 var $x1234 = 0, $x1236 = 0, $x1241 = 0, $x1246 = 0, $x1248 = 0, $x1258 = 0, $x126 = 0, $x1268 = 0, $x1270 = 0, $x1275 = 0, $x1280 = 0, $x1282 = 0, $x1292 = 0, $x1302 = 0, $x131 = 0, $x1312 = 0, $x1328 = 0, $x1337 = 0, $x1345 = 0, $x1346 = 0;
 var $x136 = 0, $x1367 = 0, $x1368 = 0, $x138 = 0, $x1387 = 0, $x1388 = 0, $x449 = 0, $x460 = 0, $x464 = 0, $x469 = 0, $x474 = 0, $x476 = 0, $x487 = 0, $x497 = 0, $x508 = 0, $x523 = 0, $x525 = 0, $x530 = 0, $x535 = 0, $x537 = 0;
 var $x547 = 0, $x557 = 0, $x559 = 0, $x564 = 0, $x569 = 0, $x571 = 0, $x581 = 0, $x591 = 0, $x601 = 0, $x617 = 0, $x626 = 0, $x634 = 0, $x635 = 0, $x656 = 0, $x657 = 0, $x676 = 0, $x677 = 0, $x694 = 0, $x695 = 0, $x736 = 0;
 var $x739 = 0, $x741 = 0, $x742 = 0, $x751 = 0, $x754 = 0, $x756 = 0, $x757 = 0, $x766 = 0, $x774 = 0, $x781 = 0, $x793 = 0, $x801 = 0, $x808 = 0, $x820 = 0, $x823 = 0, $x824 = 0, $x825 = 0, $x834 = 0, $x837 = 0, $x838 = 0;
 var $x839 = 0, $x847 = 0, $x848 = 0, $x860 = 0, $x861 = 0, $x870 = 0, $x871 = 0, $x88 = 0, $x89 = 0, $x903 = 0, $x906 = 0, $x908 = 0, $x909 = 0, $x918 = 0, $x921 = 0, $x923 = 0, $x924 = 0, $x930 = 0, $x937 = 0, $x944 = 0;
 var $x954 = 0, $x961 = 0, $x968 = 0, $x981 = 0, $x984 = 0, $x985 = 0, $x986 = 0, $x995 = 0, $x998 = 0, $x999 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 5248|0;
 $j3array = sp + 5104|0;
 $cj3array = sp + 5088|0;
 $sj3array = sp + 5072|0;
 $j3valid = sp + 5238|0;
 $j0array = sp + 5056|0;
 $cj0array = sp + 5040|0;
 $sj0array = sp + 5024|0;
 $j0valid = sp + 5236|0;
 $x88 = sp + 5008|0;
 $x89 = sp + 4992|0;
 $x122 = sp + 4976|0;
 $x126 = sp + 4960|0;
 $x131 = sp + 4944|0;
 $x136 = sp + 4928|0;
 $j1array = sp + 4912|0;
 $cj1array = sp + 4896|0;
 $sj1array = sp + 4880|0;
 $j1valid = sp + 5234|0;
 $x138 = sp + 4864|0;
 $j1array19 = sp + 4848|0;
 $cj1array20 = sp + 4832|0;
 $sj1array21 = sp + 4816|0;
 $j1valid22 = sp + 5232|0;
 $x449 = sp + 4800|0;
 $x460 = sp + 4784|0;
 $x464 = sp + 4768|0;
 $x469 = sp + 4752|0;
 $x474 = sp + 4736|0;
 $j1array35 = sp + 4720|0;
 $cj1array36 = sp + 4704|0;
 $sj1array37 = sp + 4688|0;
 $j1valid38 = sp + 5230|0;
 $x476 = sp + 4672|0;
 $j1array42 = sp + 4656|0;
 $cj1array43 = sp + 4640|0;
 $sj1array44 = sp + 4624|0;
 $j1valid45 = sp + 5228|0;
 $x487 = sp + 4608|0;
 $j1array50 = sp + 4592|0;
 $cj1array51 = sp + 4576|0;
 $sj1array52 = sp + 4560|0;
 $j1valid53 = sp + 5226|0;
 $x497 = sp + 4544|0;
 $j1array57 = sp + 4528|0;
 $cj1array58 = sp + 4512|0;
 $sj1array59 = sp + 4496|0;
 $j1valid60 = sp + 5224|0;
 $x508 = sp + 4480|0;
 $x523 = sp + 4464|0;
 $x525 = sp + 4448|0;
 $x530 = sp + 4432|0;
 $x535 = sp + 4416|0;
 $j1array77 = sp + 4400|0;
 $cj1array78 = sp + 4384|0;
 $sj1array79 = sp + 4368|0;
 $j1valid80 = sp + 5222|0;
 $x537 = sp + 4352|0;
 $j1array84 = sp + 4336|0;
 $cj1array85 = sp + 4320|0;
 $sj1array86 = sp + 4304|0;
 $j1valid87 = sp + 5220|0;
 $x547 = sp + 4288|0;
 $x557 = sp + 4272|0;
 $x559 = sp + 4256|0;
 $x564 = sp + 4240|0;
 $x569 = sp + 4224|0;
 $j1array100 = sp + 4208|0;
 $cj1array101 = sp + 4192|0;
 $sj1array102 = sp + 4176|0;
 $j1valid103 = sp + 5218|0;
 $x571 = sp + 4160|0;
 $j1array107 = sp + 4144|0;
 $cj1array108 = sp + 4128|0;
 $sj1array109 = sp + 4112|0;
 $j1valid110 = sp + 5216|0;
 $x581 = sp + 4096|0;
 $j1array115 = sp + 4080|0;
 $cj1array116 = sp + 4064|0;
 $sj1array117 = sp + 4048|0;
 $j1valid118 = sp + 5214|0;
 $x591 = sp + 4032|0;
 $j1array122 = sp + 4016|0;
 $cj1array123 = sp + 4000|0;
 $sj1array124 = sp + 3984|0;
 $j1valid125 = sp + 5212|0;
 $x601 = sp + 3968|0;
 $j1array130 = sp + 3952|0;
 $cj1array131 = sp + 3936|0;
 $sj1array132 = sp + 3920|0;
 $j1valid133 = sp + 5210|0;
 $x617 = sp + 3904|0;
 $j1array138 = sp + 3888|0;
 $cj1array139 = sp + 3872|0;
 $sj1array140 = sp + 3856|0;
 $j1valid141 = sp + 5208|0;
 $x626 = sp + 3840|0;
 $x634 = sp + 3824|0;
 $x635 = sp + 3808|0;
 $x656 = sp + 3792|0;
 $x657 = sp + 3776|0;
 $x676 = sp + 3760|0;
 $x677 = sp + 3744|0;
 $j1array171 = sp + 3728|0;
 $cj1array172 = sp + 3712|0;
 $sj1array173 = sp + 3696|0;
 $j1valid174 = sp + 5206|0;
 $x694 = sp + 3680|0;
 $x695 = sp + 3664|0;
 $j0array191 = sp + 3648|0;
 $cj0array192 = sp + 3632|0;
 $sj0array193 = sp + 3616|0;
 $j0valid194 = sp + 5204|0;
 $x736 = sp + 3600|0;
 $j0array200 = sp + 3584|0;
 $cj0array201 = sp + 3568|0;
 $sj0array202 = sp + 3552|0;
 $j0valid203 = sp + 5202|0;
 $x739 = sp + 3536|0;
 $x741 = sp + 3520|0;
 $x742 = sp + 3504|0;
 $j0array220 = sp + 3488|0;
 $cj0array221 = sp + 3472|0;
 $sj0array222 = sp + 3456|0;
 $j0valid223 = sp + 5200|0;
 $x751 = sp + 3440|0;
 $j0array229 = sp + 3424|0;
 $cj0array230 = sp + 3408|0;
 $sj0array231 = sp + 3392|0;
 $j0valid232 = sp + 5198|0;
 $x754 = sp + 3376|0;
 $x756 = sp + 3360|0;
 $x757 = sp + 3344|0;
 $j0array248 = sp + 3328|0;
 $cj0array249 = sp + 3312|0;
 $sj0array250 = sp + 3296|0;
 $j0valid251 = sp + 5196|0;
 $x766 = sp + 3280|0;
 $j0array255 = sp + 3264|0;
 $cj0array256 = sp + 3248|0;
 $sj0array257 = sp + 3232|0;
 $j0valid258 = sp + 5194|0;
 $x774 = sp + 3216|0;
 $j0array262 = sp + 3200|0;
 $cj0array263 = sp + 3184|0;
 $sj0array264 = sp + 3168|0;
 $j0valid265 = sp + 5192|0;
 $x781 = sp + 3152|0;
 $j0array273 = sp + 3136|0;
 $cj0array274 = sp + 3120|0;
 $sj0array275 = sp + 3104|0;
 $j0valid276 = sp + 5190|0;
 $x793 = sp + 3088|0;
 $j0array280 = sp + 3072|0;
 $cj0array281 = sp + 3056|0;
 $sj0array282 = sp + 3040|0;
 $j0valid283 = sp + 5188|0;
 $x801 = sp + 3024|0;
 $j0array287 = sp + 3008|0;
 $cj0array288 = sp + 2992|0;
 $sj0array289 = sp + 2976|0;
 $j0valid290 = sp + 5186|0;
 $x808 = sp + 2960|0;
 $j0array299 = sp + 2944|0;
 $cj0array300 = sp + 2928|0;
 $sj0array301 = sp + 2912|0;
 $j0valid302 = sp + 5184|0;
 $x820 = sp + 2896|0;
 $j0array308 = sp + 2880|0;
 $cj0array309 = sp + 2864|0;
 $sj0array310 = sp + 2848|0;
 $j0valid311 = sp + 5182|0;
 $x823 = sp + 2832|0;
 $x824 = sp + 2816|0;
 $x825 = sp + 2800|0;
 $j0array328 = sp + 2784|0;
 $cj0array329 = sp + 2768|0;
 $sj0array330 = sp + 2752|0;
 $j0valid331 = sp + 5180|0;
 $x834 = sp + 2736|0;
 $j0array337 = sp + 2720|0;
 $cj0array338 = sp + 2704|0;
 $sj0array339 = sp + 2688|0;
 $j0valid340 = sp + 5178|0;
 $x837 = sp + 2672|0;
 $x838 = sp + 2656|0;
 $x839 = sp + 2640|0;
 $x847 = sp + 2624|0;
 $x848 = sp + 2608|0;
 $x860 = sp + 2592|0;
 $x861 = sp + 2576|0;
 $x870 = sp + 2560|0;
 $x871 = sp + 2544|0;
 $j0array384 = sp + 2528|0;
 $cj0array385 = sp + 2512|0;
 $sj0array386 = sp + 2496|0;
 $j0valid387 = sp + 5176|0;
 $x903 = sp + 2480|0;
 $j0array393 = sp + 2464|0;
 $cj0array394 = sp + 2448|0;
 $sj0array395 = sp + 2432|0;
 $j0valid396 = sp + 5174|0;
 $x906 = sp + 2416|0;
 $x908 = sp + 2400|0;
 $x909 = sp + 2384|0;
 $j0array413 = sp + 2368|0;
 $cj0array414 = sp + 2352|0;
 $sj0array415 = sp + 2336|0;
 $j0valid416 = sp + 5172|0;
 $x918 = sp + 2320|0;
 $j0array422 = sp + 2304|0;
 $cj0array423 = sp + 2288|0;
 $sj0array424 = sp + 2272|0;
 $j0valid425 = sp + 5170|0;
 $x921 = sp + 2256|0;
 $x923 = sp + 2240|0;
 $x924 = sp + 2224|0;
 $j0array441 = sp + 2208|0;
 $cj0array442 = sp + 2192|0;
 $sj0array443 = sp + 2176|0;
 $j0valid444 = sp + 5168|0;
 $x930 = sp + 2160|0;
 $j0array448 = sp + 2144|0;
 $cj0array449 = sp + 2128|0;
 $sj0array450 = sp + 2112|0;
 $j0valid451 = sp + 5166|0;
 $x937 = sp + 2096|0;
 $j0array455 = sp + 2080|0;
 $cj0array456 = sp + 2064|0;
 $sj0array457 = sp + 2048|0;
 $j0valid458 = sp + 5164|0;
 $x944 = sp + 2032|0;
 $j0array466 = sp + 2016|0;
 $cj0array467 = sp + 2000|0;
 $sj0array468 = sp + 1984|0;
 $j0valid469 = sp + 5162|0;
 $x954 = sp + 1968|0;
 $j0array473 = sp + 1952|0;
 $cj0array474 = sp + 1936|0;
 $sj0array475 = sp + 1920|0;
 $j0valid476 = sp + 5160|0;
 $x961 = sp + 1904|0;
 $j0array480 = sp + 1888|0;
 $cj0array481 = sp + 1872|0;
 $sj0array482 = sp + 1856|0;
 $j0valid483 = sp + 5158|0;
 $x968 = sp + 1840|0;
 $j0array492 = sp + 1824|0;
 $cj0array493 = sp + 1808|0;
 $sj0array494 = sp + 1792|0;
 $j0valid495 = sp + 5156|0;
 $x981 = sp + 1776|0;
 $j0array501 = sp + 1760|0;
 $cj0array502 = sp + 1744|0;
 $sj0array503 = sp + 1728|0;
 $j0valid504 = sp + 5154|0;
 $x984 = sp + 1712|0;
 $x985 = sp + 1696|0;
 $x986 = sp + 1680|0;
 $j0array521 = sp + 1664|0;
 $cj0array522 = sp + 1648|0;
 $sj0array523 = sp + 1632|0;
 $j0valid524 = sp + 5152|0;
 $x995 = sp + 1616|0;
 $j0array530 = sp + 1600|0;
 $cj0array531 = sp + 1584|0;
 $sj0array532 = sp + 1568|0;
 $j0valid533 = sp + 5150|0;
 $x998 = sp + 1552|0;
 $x999 = sp + 1536|0;
 $x1000 = sp + 1520|0;
 $x1008 = sp + 1504|0;
 $x1009 = sp + 1488|0;
 $x1022 = sp + 1472|0;
 $x1023 = sp + 1456|0;
 $x1033 = sp + 1440|0;
 $x1034 = sp + 1424|0;
 $x1048 = sp + 1408|0;
 $x1049 = sp + 1392|0;
 $x1068 = sp + 1376|0;
 $x1069 = sp + 1360|0;
 $x1089 = sp + 1344|0;
 $x1090 = sp + 1328|0;
 $j0array592 = sp + 1312|0;
 $cj0array593 = sp + 1296|0;
 $sj0array594 = sp + 1280|0;
 $j0valid595 = sp + 5148|0;
 $x1107 = sp + 1264|0;
 $x1108 = sp + 1248|0;
 $x1134 = sp + 1232|0;
 $x1138 = sp + 1216|0;
 $x1143 = sp + 1200|0;
 $x1148 = sp + 1184|0;
 $j1array618 = sp + 1168|0;
 $cj1array619 = sp + 1152|0;
 $sj1array620 = sp + 1136|0;
 $j1valid621 = sp + 5146|0;
 $x1150 = sp + 1120|0;
 $j1array625 = sp + 1104|0;
 $cj1array626 = sp + 1088|0;
 $sj1array627 = sp + 1072|0;
 $j1valid628 = sp + 5144|0;
 $x1160 = sp + 1056|0;
 $x1171 = sp + 1040|0;
 $x1175 = sp + 1024|0;
 $x1180 = sp + 1008|0;
 $x1185 = sp + 992|0;
 $j1array644 = sp + 976|0;
 $cj1array645 = sp + 960|0;
 $sj1array646 = sp + 944|0;
 $j1valid647 = sp + 5142|0;
 $x1187 = sp + 928|0;
 $j1array651 = sp + 912|0;
 $cj1array652 = sp + 896|0;
 $sj1array653 = sp + 880|0;
 $j1valid654 = sp + 5140|0;
 $x1198 = sp + 864|0;
 $j1array659 = sp + 848|0;
 $cj1array660 = sp + 832|0;
 $sj1array661 = sp + 816|0;
 $j1valid662 = sp + 5138|0;
 $x1208 = sp + 800|0;
 $j1array666 = sp + 784|0;
 $cj1array667 = sp + 768|0;
 $sj1array668 = sp + 752|0;
 $j1valid669 = sp + 5136|0;
 $x1219 = sp + 736|0;
 $x1234 = sp + 720|0;
 $x1236 = sp + 704|0;
 $x1241 = sp + 688|0;
 $x1246 = sp + 672|0;
 $j1array689 = sp + 656|0;
 $cj1array690 = sp + 640|0;
 $sj1array691 = sp + 624|0;
 $j1valid692 = sp + 5134|0;
 $x1248 = sp + 608|0;
 $j1array696 = sp + 592|0;
 $cj1array697 = sp + 576|0;
 $sj1array698 = sp + 560|0;
 $j1valid699 = sp + 5132|0;
 $x1258 = sp + 544|0;
 $x1268 = sp + 528|0;
 $x1270 = sp + 512|0;
 $x1275 = sp + 496|0;
 $x1280 = sp + 480|0;
 $j1array715 = sp + 464|0;
 $cj1array716 = sp + 448|0;
 $sj1array717 = sp + 432|0;
 $j1valid718 = sp + 5130|0;
 $x1282 = sp + 416|0;
 $j1array722 = sp + 400|0;
 $cj1array723 = sp + 384|0;
 $sj1array724 = sp + 368|0;
 $j1valid725 = sp + 5128|0;
 $x1292 = sp + 352|0;
 $j1array730 = sp + 336|0;
 $cj1array731 = sp + 320|0;
 $sj1array732 = sp + 304|0;
 $j1valid733 = sp + 5126|0;
 $x1302 = sp + 288|0;
 $j1array737 = sp + 272|0;
 $cj1array738 = sp + 256|0;
 $sj1array739 = sp + 240|0;
 $j1valid740 = sp + 5124|0;
 $x1312 = sp + 224|0;
 $j1array745 = sp + 208|0;
 $cj1array746 = sp + 192|0;
 $sj1array747 = sp + 176|0;
 $j1valid748 = sp + 5122|0;
 $x1328 = sp + 160|0;
 $j1array754 = sp + 144|0;
 $cj1array755 = sp + 128|0;
 $sj1array756 = sp + 112|0;
 $j1valid757 = sp + 5120|0;
 $x1337 = sp + 96|0;
 $x1345 = sp + 80|0;
 $x1346 = sp + 64|0;
 $x1367 = sp + 48|0;
 $x1368 = sp + 32|0;
 $x1387 = sp + 16|0;
 $x1388 = sp;
 HEAPF64[$this>>3] = nan;
 $0 = ((($this)) + 568|0);
 HEAP8[$0>>0] = -1;
 $1 = ((($this)) + 569|0);
 HEAP8[$1>>0] = -1;
 $2 = ((($this)) + 570|0);
 HEAP8[$2>>0] = -1;
 $3 = ((($this)) + 40|0);
 HEAPF64[$3>>3] = nan;
 $4 = ((($this)) + 571|0);
 HEAP8[$4>>0] = -1;
 $5 = ((($this)) + 572|0);
 HEAP8[$5>>0] = -1;
 $6 = ((($this)) + 573|0);
 HEAP8[$6>>0] = -1;
 $7 = ((($this)) + 80|0);
 HEAPF64[$7>>3] = nan;
 $8 = ((($this)) + 574|0);
 HEAP8[$8>>0] = -1;
 $9 = ((($this)) + 575|0);
 HEAP8[$9>>0] = -1;
 $10 = ((($this)) + 576|0);
 HEAP8[$10>>0] = -1;
 $11 = ((($this)) + 120|0);
 HEAPF64[$11>>3] = nan;
 $12 = ((($this)) + 577|0);
 HEAP8[$12>>0] = -1;
 $13 = ((($this)) + 578|0);
 HEAP8[$13>>0] = -1;
 $14 = ((($this)) + 579|0);
 HEAP8[$14>>0] = -1;
 $15 = ((($this)) + 160|0);
 HEAPF64[$15>>3] = nan;
 $16 = ((($this)) + 580|0);
 HEAP8[$16>>0] = -1;
 $17 = ((($this)) + 581|0);
 HEAP8[$17>>0] = -1;
 $18 = ((($this)) + 582|0);
 HEAP8[$18>>0] = -1;
 $19 = ((($this)) + 200|0);
 HEAPF64[$19>>3] = nan;
 $20 = ((($this)) + 583|0);
 $21 = ((($this)) + 588|0);
 ;HEAP8[$20>>0]=255|0;HEAP8[$20+1>>0]=255|0;HEAP8[$20+2>>0]=255|0;HEAP8[$20+3>>0]=255|0;HEAP8[$20+4>>0]=255|0;
 HEAP8[$21>>0] = 0;
 $22 = ((($this)) + 240|0);
 $23 = ((($this)) + 248|0);
 $24 = ((($this)) + 256|0);
 $25 = ((($this)) + 264|0);
 $26 = ((($this)) + 280|0);
 $27 = ((($eerot)) + 8|0);
 $28 = ((($this)) + 304|0);
 $29 = ((($eerot)) + 16|0);
 $30 = ((($this)) + 328|0);
 $31 = ((($eerot)) + 24|0);
 $32 = ((($this)) + 352|0);
 $33 = ((($eerot)) + 32|0);
 $34 = ((($this)) + 376|0);
 $35 = ((($eerot)) + 40|0);
 $36 = ((($this)) + 400|0);
 $37 = ((($eerot)) + 48|0);
 $38 = ((($this)) + 424|0);
 $39 = ((($eerot)) + 56|0);
 $40 = ((($this)) + 448|0);
 $41 = ((($eerot)) + 64|0);
 $42 = ((($this)) + 472|0);
 $43 = ((($this)) + 496|0);
 $44 = ((($eetrans)) + 8|0);
 $45 = ((($this)) + 520|0);
 $46 = ((($eetrans)) + 16|0);
 $47 = ((($this)) + 544|0);
 $48 = ((($this)) + 272|0);
 $49 = ((($this)) + 296|0);
 $50 = ((($this)) + 320|0);
 $51 = ((($this)) + 488|0);
 $52 = ((($this)) + 344|0);
 $53 = ((($this)) + 368|0);
 $54 = ((($this)) + 392|0);
 $55 = ((($this)) + 512|0);
 $56 = ((($this)) + 416|0);
 $57 = ((($this)) + 440|0);
 $58 = ((($this)) + 464|0);
 $59 = ((($this)) + 536|0);
 $60 = ((($this)) + 560|0);
 $61 = ((($this)) + 504|0);
 $62 = ((($this)) + 528|0);
 $63 = ((($this)) + 552|0);
 $64 = ((($this)) + 288|0);
 $65 = ((($this)) + 312|0);
 $66 = ((($this)) + 336|0);
 $67 = ((($this)) + 360|0);
 $68 = ((($this)) + 384|0);
 $69 = ((($this)) + 408|0);
 $70 = ((($this)) + 432|0);
 $71 = ((($this)) + 456|0);
 $72 = ((($this)) + 480|0);
 $73 = ((($this)) + 88|0);
 $74 = ((($this)) + 96|0);
 $75 = ((($x88)) + 8|0);
 $76 = ((($x89)) + 8|0);
 $77 = ((($j0array)) + 8|0);
 $78 = ((($sj0array)) + 8|0);
 $79 = ((($cj0array)) + 8|0);
 $80 = ((($j0valid)) + 1|0);
 $81 = ((($this)) + 8|0);
 $82 = ((($this)) + 16|0);
 $83 = ((($x460)) + 8|0);
 $84 = ((($x464)) + 8|0);
 $85 = ((($x469)) + 8|0);
 $86 = ((($x474)) + 8|0);
 $87 = ((($x476)) + 8|0);
 $88 = ((($j1valid38)) + 1|0);
 $89 = ((($sj1array37)) + 8|0);
 $90 = ((($j1array35)) + 8|0);
 $91 = ((($cj1array36)) + 8|0);
 $92 = ((($this)) + 48|0);
 $93 = ((($this)) + 56|0);
 $94 = ((($x487)) + 8|0);
 $95 = ((($j1valid45)) + 1|0);
 $96 = ((($sj1array44)) + 8|0);
 $97 = ((($j1array42)) + 8|0);
 $98 = ((($cj1array43)) + 8|0);
 $99 = ((($this)) + 48|0);
 $100 = ((($this)) + 56|0);
 $101 = ((($x122)) + 8|0);
 $102 = ((($x126)) + 8|0);
 $103 = ((($x131)) + 8|0);
 $104 = ((($x136)) + 8|0);
 $105 = ((($x138)) + 8|0);
 $106 = ((($j1valid)) + 1|0);
 $107 = ((($sj1array)) + 8|0);
 $108 = ((($j1array)) + 8|0);
 $109 = ((($cj1array)) + 8|0);
 $110 = ((($this)) + 48|0);
 $111 = ((($this)) + 56|0);
 $112 = ((($x449)) + 8|0);
 $113 = ((($j1valid22)) + 1|0);
 $114 = ((($sj1array21)) + 8|0);
 $115 = ((($j1array19)) + 8|0);
 $116 = ((($cj1array20)) + 8|0);
 $117 = ((($this)) + 48|0);
 $118 = ((($this)) + 56|0);
 $119 = ((($x497)) + 8|0);
 $120 = ((($j1valid53)) + 1|0);
 $121 = ((($sj1array52)) + 8|0);
 $122 = ((($j1array50)) + 8|0);
 $123 = ((($cj1array51)) + 8|0);
 $124 = ((($this)) + 48|0);
 $125 = ((($this)) + 56|0);
 $126 = ((($x508)) + 8|0);
 $127 = ((($j1valid60)) + 1|0);
 $128 = ((($sj1array59)) + 8|0);
 $129 = ((($j1array57)) + 8|0);
 $130 = ((($cj1array58)) + 8|0);
 $131 = ((($this)) + 48|0);
 $132 = ((($this)) + 56|0);
 $133 = ((($x557)) + 8|0);
 $134 = ((($x559)) + 8|0);
 $135 = ((($x564)) + 8|0);
 $136 = ((($x569)) + 8|0);
 $137 = ((($x571)) + 8|0);
 $138 = ((($j1valid103)) + 1|0);
 $139 = ((($sj1array102)) + 8|0);
 $140 = ((($j1array100)) + 8|0);
 $141 = ((($cj1array101)) + 8|0);
 $142 = ((($this)) + 48|0);
 $143 = ((($this)) + 56|0);
 $144 = ((($x581)) + 8|0);
 $145 = ((($j1valid110)) + 1|0);
 $146 = ((($sj1array109)) + 8|0);
 $147 = ((($j1array107)) + 8|0);
 $148 = ((($cj1array108)) + 8|0);
 $149 = ((($this)) + 48|0);
 $150 = ((($this)) + 56|0);
 $151 = ((($x523)) + 8|0);
 $152 = ((($x525)) + 8|0);
 $153 = ((($x530)) + 8|0);
 $154 = ((($x535)) + 8|0);
 $155 = ((($x537)) + 8|0);
 $156 = ((($j1valid80)) + 1|0);
 $157 = ((($sj1array79)) + 8|0);
 $158 = ((($j1array77)) + 8|0);
 $159 = ((($cj1array78)) + 8|0);
 $160 = ((($this)) + 48|0);
 $161 = ((($this)) + 56|0);
 $162 = ((($x547)) + 8|0);
 $163 = ((($j1valid87)) + 1|0);
 $164 = ((($sj1array86)) + 8|0);
 $165 = ((($j1array84)) + 8|0);
 $166 = ((($cj1array85)) + 8|0);
 $167 = ((($this)) + 48|0);
 $168 = ((($this)) + 56|0);
 $169 = ((($x591)) + 8|0);
 $170 = ((($j1valid118)) + 1|0);
 $171 = ((($sj1array117)) + 8|0);
 $172 = ((($j1array115)) + 8|0);
 $173 = ((($cj1array116)) + 8|0);
 $174 = ((($this)) + 48|0);
 $175 = ((($this)) + 56|0);
 $176 = ((($x601)) + 8|0);
 $177 = ((($j1valid125)) + 1|0);
 $178 = ((($sj1array124)) + 8|0);
 $179 = ((($j1array122)) + 8|0);
 $180 = ((($cj1array123)) + 8|0);
 $181 = ((($this)) + 48|0);
 $182 = ((($this)) + 56|0);
 $183 = ((($j1valid133)) + 1|0);
 $184 = ((($sj1array132)) + 8|0);
 $185 = ((($j1array130)) + 8|0);
 $186 = ((($cj1array131)) + 8|0);
 $187 = ((($this)) + 48|0);
 $188 = ((($this)) + 56|0);
 $189 = ((($x617)) + 8|0);
 $190 = ((($j1valid141)) + 1|0);
 $191 = ((($sj1array140)) + 8|0);
 $192 = ((($j1array138)) + 8|0);
 $193 = ((($cj1array139)) + 8|0);
 $194 = ((($this)) + 48|0);
 $195 = ((($this)) + 56|0);
 $196 = ((($x626)) + 8|0);
 $197 = ((($x634)) + 8|0);
 $198 = ((($x635)) + 8|0);
 $199 = ((($this)) + 48|0);
 $200 = ((($this)) + 56|0);
 $201 = ((($x656)) + 8|0);
 $202 = ((($x657)) + 8|0);
 $203 = ((($this)) + 48|0);
 $204 = ((($this)) + 56|0);
 $205 = ((($x676)) + 8|0);
 $206 = ((($x677)) + 8|0);
 $207 = ((($this)) + 48|0);
 $208 = ((($this)) + 56|0);
 $209 = ((($x694)) + 8|0);
 $210 = ((($x695)) + 8|0);
 $211 = ((($j1array171)) + 8|0);
 $212 = ((($sj1array173)) + 8|0);
 $213 = ((($cj1array172)) + 8|0);
 $214 = ((($j1valid174)) + 1|0);
 $215 = ((($this)) + 48|0);
 $216 = ((($this)) + 56|0);
 $217 = ((($x736)) + 8|0);
 $218 = ((($j0array191)) + 8|0);
 $219 = ((($sj0array193)) + 8|0);
 $220 = ((($cj0array192)) + 8|0);
 $221 = ((($j0valid194)) + 1|0);
 $222 = ((($this)) + 8|0);
 $223 = ((($this)) + 16|0);
 $224 = ((($x739)) + 8|0);
 $225 = ((($j0array200)) + 8|0);
 $226 = ((($sj0array202)) + 8|0);
 $227 = ((($cj0array201)) + 8|0);
 $228 = ((($j0valid203)) + 1|0);
 $229 = ((($this)) + 8|0);
 $230 = ((($this)) + 16|0);
 $231 = ((($x741)) + 8|0);
 $232 = ((($x742)) + 8|0);
 $233 = ((($this)) + 8|0);
 $234 = ((($this)) + 16|0);
 $235 = ((($x751)) + 8|0);
 $236 = ((($j0array220)) + 8|0);
 $237 = ((($sj0array222)) + 8|0);
 $238 = ((($cj0array221)) + 8|0);
 $239 = ((($j0valid223)) + 1|0);
 $240 = ((($this)) + 8|0);
 $241 = ((($this)) + 16|0);
 $242 = ((($x754)) + 8|0);
 $243 = ((($j0array229)) + 8|0);
 $244 = ((($sj0array231)) + 8|0);
 $245 = ((($cj0array230)) + 8|0);
 $246 = ((($j0valid232)) + 1|0);
 $247 = ((($this)) + 8|0);
 $248 = ((($this)) + 16|0);
 $249 = ((($x756)) + 8|0);
 $250 = ((($x757)) + 8|0);
 $251 = ((($this)) + 8|0);
 $252 = ((($this)) + 16|0);
 $253 = ((($x766)) + 8|0);
 $254 = ((($j0array248)) + 8|0);
 $255 = ((($sj0array250)) + 8|0);
 $256 = ((($cj0array249)) + 8|0);
 $257 = ((($j0valid251)) + 1|0);
 $258 = ((($this)) + 8|0);
 $259 = ((($this)) + 16|0);
 $260 = ((($x774)) + 8|0);
 $261 = ((($j0array255)) + 8|0);
 $262 = ((($sj0array257)) + 8|0);
 $263 = ((($cj0array256)) + 8|0);
 $264 = ((($j0valid258)) + 1|0);
 $265 = ((($this)) + 8|0);
 $266 = ((($this)) + 16|0);
 $267 = ((($x781)) + 8|0);
 $268 = ((($j0array262)) + 8|0);
 $269 = ((($sj0array264)) + 8|0);
 $270 = ((($cj0array263)) + 8|0);
 $271 = ((($j0valid265)) + 1|0);
 $272 = ((($this)) + 8|0);
 $273 = ((($this)) + 16|0);
 $274 = ((($x793)) + 8|0);
 $275 = ((($j0array273)) + 8|0);
 $276 = ((($sj0array275)) + 8|0);
 $277 = ((($cj0array274)) + 8|0);
 $278 = ((($j0valid276)) + 1|0);
 $279 = ((($this)) + 8|0);
 $280 = ((($this)) + 16|0);
 $281 = ((($x801)) + 8|0);
 $282 = ((($j0array280)) + 8|0);
 $283 = ((($sj0array282)) + 8|0);
 $284 = ((($cj0array281)) + 8|0);
 $285 = ((($j0valid283)) + 1|0);
 $286 = ((($this)) + 8|0);
 $287 = ((($this)) + 16|0);
 $288 = ((($x808)) + 8|0);
 $289 = ((($j0array287)) + 8|0);
 $290 = ((($sj0array289)) + 8|0);
 $291 = ((($cj0array288)) + 8|0);
 $292 = ((($j0valid290)) + 1|0);
 $293 = ((($this)) + 8|0);
 $294 = ((($this)) + 16|0);
 $295 = ((($x820)) + 8|0);
 $296 = ((($j0array299)) + 8|0);
 $297 = ((($sj0array301)) + 8|0);
 $298 = ((($cj0array300)) + 8|0);
 $299 = ((($j0valid302)) + 1|0);
 $300 = ((($this)) + 8|0);
 $301 = ((($this)) + 16|0);
 $302 = ((($x823)) + 8|0);
 $303 = ((($j0array308)) + 8|0);
 $304 = ((($sj0array310)) + 8|0);
 $305 = ((($cj0array309)) + 8|0);
 $306 = ((($j0valid311)) + 1|0);
 $307 = ((($this)) + 8|0);
 $308 = ((($this)) + 16|0);
 $309 = ((($x824)) + 8|0);
 $310 = ((($x825)) + 8|0);
 $311 = ((($this)) + 8|0);
 $312 = ((($this)) + 16|0);
 $313 = ((($x834)) + 8|0);
 $314 = ((($j0array328)) + 8|0);
 $315 = ((($sj0array330)) + 8|0);
 $316 = ((($cj0array329)) + 8|0);
 $317 = ((($j0valid331)) + 1|0);
 $318 = ((($this)) + 8|0);
 $319 = ((($this)) + 16|0);
 $320 = ((($x837)) + 8|0);
 $321 = ((($j0array337)) + 8|0);
 $322 = ((($sj0array339)) + 8|0);
 $323 = ((($cj0array338)) + 8|0);
 $324 = ((($j0valid340)) + 1|0);
 $325 = ((($this)) + 8|0);
 $326 = ((($this)) + 16|0);
 $327 = ((($x838)) + 8|0);
 $328 = ((($x839)) + 8|0);
 $329 = ((($this)) + 8|0);
 $330 = ((($this)) + 16|0);
 $331 = ((($x847)) + 8|0);
 $332 = ((($x848)) + 8|0);
 $333 = ((($this)) + 8|0);
 $334 = ((($this)) + 16|0);
 $335 = ((($x860)) + 8|0);
 $336 = ((($x861)) + 8|0);
 $337 = ((($this)) + 8|0);
 $338 = ((($this)) + 16|0);
 $339 = ((($x870)) + 8|0);
 $340 = ((($x871)) + 8|0);
 $341 = ((($this)) + 8|0);
 $342 = ((($this)) + 16|0);
 $343 = ((($x903)) + 8|0);
 $344 = ((($j0array384)) + 8|0);
 $345 = ((($sj0array386)) + 8|0);
 $346 = ((($cj0array385)) + 8|0);
 $347 = ((($j0valid387)) + 1|0);
 $348 = ((($this)) + 8|0);
 $349 = ((($this)) + 16|0);
 $350 = ((($x906)) + 8|0);
 $351 = ((($j0array393)) + 8|0);
 $352 = ((($sj0array395)) + 8|0);
 $353 = ((($cj0array394)) + 8|0);
 $354 = ((($j0valid396)) + 1|0);
 $355 = ((($this)) + 8|0);
 $356 = ((($this)) + 16|0);
 $357 = ((($x908)) + 8|0);
 $358 = ((($x909)) + 8|0);
 $359 = ((($this)) + 8|0);
 $360 = ((($this)) + 16|0);
 $361 = ((($x918)) + 8|0);
 $362 = ((($j0array413)) + 8|0);
 $363 = ((($sj0array415)) + 8|0);
 $364 = ((($cj0array414)) + 8|0);
 $365 = ((($j0valid416)) + 1|0);
 $366 = ((($this)) + 8|0);
 $367 = ((($this)) + 16|0);
 $368 = ((($x921)) + 8|0);
 $369 = ((($j0array422)) + 8|0);
 $370 = ((($sj0array424)) + 8|0);
 $371 = ((($cj0array423)) + 8|0);
 $372 = ((($j0valid425)) + 1|0);
 $373 = ((($this)) + 8|0);
 $374 = ((($this)) + 16|0);
 $375 = ((($x923)) + 8|0);
 $376 = ((($x924)) + 8|0);
 $377 = ((($this)) + 8|0);
 $378 = ((($this)) + 16|0);
 $379 = ((($x930)) + 8|0);
 $380 = ((($j0array441)) + 8|0);
 $381 = ((($sj0array443)) + 8|0);
 $382 = ((($cj0array442)) + 8|0);
 $383 = ((($j0valid444)) + 1|0);
 $384 = ((($this)) + 8|0);
 $385 = ((($this)) + 16|0);
 $386 = ((($x937)) + 8|0);
 $387 = ((($j0array448)) + 8|0);
 $388 = ((($sj0array450)) + 8|0);
 $389 = ((($cj0array449)) + 8|0);
 $390 = ((($j0valid451)) + 1|0);
 $391 = ((($this)) + 8|0);
 $392 = ((($this)) + 16|0);
 $393 = ((($x944)) + 8|0);
 $394 = ((($j0array455)) + 8|0);
 $395 = ((($sj0array457)) + 8|0);
 $396 = ((($cj0array456)) + 8|0);
 $397 = ((($j0valid458)) + 1|0);
 $398 = ((($this)) + 8|0);
 $399 = ((($this)) + 16|0);
 $400 = ((($x954)) + 8|0);
 $401 = ((($j0array466)) + 8|0);
 $402 = ((($sj0array468)) + 8|0);
 $403 = ((($cj0array467)) + 8|0);
 $404 = ((($j0valid469)) + 1|0);
 $405 = ((($this)) + 8|0);
 $406 = ((($this)) + 16|0);
 $407 = ((($x961)) + 8|0);
 $408 = ((($j0array473)) + 8|0);
 $409 = ((($sj0array475)) + 8|0);
 $410 = ((($cj0array474)) + 8|0);
 $411 = ((($j0valid476)) + 1|0);
 $412 = ((($this)) + 8|0);
 $413 = ((($this)) + 16|0);
 $414 = ((($x968)) + 8|0);
 $415 = ((($j0array480)) + 8|0);
 $416 = ((($sj0array482)) + 8|0);
 $417 = ((($cj0array481)) + 8|0);
 $418 = ((($j0valid483)) + 1|0);
 $419 = ((($this)) + 8|0);
 $420 = ((($this)) + 16|0);
 $421 = ((($x981)) + 8|0);
 $422 = ((($j0array492)) + 8|0);
 $423 = ((($sj0array494)) + 8|0);
 $424 = ((($cj0array493)) + 8|0);
 $425 = ((($j0valid495)) + 1|0);
 $426 = ((($this)) + 8|0);
 $427 = ((($this)) + 16|0);
 $428 = ((($x984)) + 8|0);
 $429 = ((($j0array501)) + 8|0);
 $430 = ((($sj0array503)) + 8|0);
 $431 = ((($cj0array502)) + 8|0);
 $432 = ((($j0valid504)) + 1|0);
 $433 = ((($this)) + 8|0);
 $434 = ((($this)) + 16|0);
 $435 = ((($x985)) + 8|0);
 $436 = ((($x986)) + 8|0);
 $437 = ((($this)) + 8|0);
 $438 = ((($this)) + 16|0);
 $439 = ((($x995)) + 8|0);
 $440 = ((($j0array521)) + 8|0);
 $441 = ((($sj0array523)) + 8|0);
 $442 = ((($cj0array522)) + 8|0);
 $443 = ((($j0valid524)) + 1|0);
 $444 = ((($this)) + 8|0);
 $445 = ((($this)) + 16|0);
 $446 = ((($x998)) + 8|0);
 $447 = ((($j0array530)) + 8|0);
 $448 = ((($sj0array532)) + 8|0);
 $449 = ((($cj0array531)) + 8|0);
 $450 = ((($j0valid533)) + 1|0);
 $451 = ((($this)) + 8|0);
 $452 = ((($this)) + 16|0);
 $453 = ((($x999)) + 8|0);
 $454 = ((($x1000)) + 8|0);
 $455 = ((($this)) + 8|0);
 $456 = ((($this)) + 16|0);
 $457 = ((($x1008)) + 8|0);
 $458 = ((($x1009)) + 8|0);
 $459 = ((($this)) + 8|0);
 $460 = ((($this)) + 16|0);
 $461 = ((($x1022)) + 8|0);
 $462 = ((($x1023)) + 8|0);
 $463 = ((($this)) + 8|0);
 $464 = ((($this)) + 16|0);
 $465 = ((($x1033)) + 8|0);
 $466 = ((($x1034)) + 8|0);
 $467 = ((($this)) + 8|0);
 $468 = ((($this)) + 16|0);
 $469 = ((($x1048)) + 8|0);
 $470 = ((($x1049)) + 8|0);
 $471 = ((($this)) + 8|0);
 $472 = ((($this)) + 16|0);
 $473 = ((($x1068)) + 8|0);
 $474 = ((($x1069)) + 8|0);
 $475 = ((($this)) + 8|0);
 $476 = ((($this)) + 16|0);
 $477 = ((($x1089)) + 8|0);
 $478 = ((($x1090)) + 8|0);
 $479 = ((($this)) + 8|0);
 $480 = ((($this)) + 16|0);
 $481 = ((($x1107)) + 8|0);
 $482 = ((($x1108)) + 8|0);
 $483 = ((($j0array592)) + 8|0);
 $484 = ((($sj0array594)) + 8|0);
 $485 = ((($cj0array593)) + 8|0);
 $486 = ((($j0valid595)) + 1|0);
 $487 = ((($this)) + 8|0);
 $488 = ((($this)) + 16|0);
 $489 = ((($x1171)) + 8|0);
 $490 = ((($x1175)) + 8|0);
 $491 = ((($x1180)) + 8|0);
 $492 = ((($x1185)) + 8|0);
 $493 = ((($x1187)) + 8|0);
 $494 = ((($j1valid647)) + 1|0);
 $495 = ((($sj1array646)) + 8|0);
 $496 = ((($j1array644)) + 8|0);
 $497 = ((($cj1array645)) + 8|0);
 $498 = ((($this)) + 48|0);
 $499 = ((($this)) + 56|0);
 $500 = ((($x1198)) + 8|0);
 $501 = ((($j1valid654)) + 1|0);
 $502 = ((($sj1array653)) + 8|0);
 $503 = ((($j1array651)) + 8|0);
 $504 = ((($cj1array652)) + 8|0);
 $505 = ((($this)) + 48|0);
 $506 = ((($this)) + 56|0);
 $507 = ((($x1134)) + 8|0);
 $508 = ((($x1138)) + 8|0);
 $509 = ((($x1143)) + 8|0);
 $510 = ((($x1148)) + 8|0);
 $511 = ((($x1150)) + 8|0);
 $512 = ((($j1valid621)) + 1|0);
 $513 = ((($sj1array620)) + 8|0);
 $514 = ((($j1array618)) + 8|0);
 $515 = ((($cj1array619)) + 8|0);
 $516 = ((($this)) + 48|0);
 $517 = ((($this)) + 56|0);
 $518 = ((($x1160)) + 8|0);
 $519 = ((($j1valid628)) + 1|0);
 $520 = ((($sj1array627)) + 8|0);
 $521 = ((($j1array625)) + 8|0);
 $522 = ((($cj1array626)) + 8|0);
 $523 = ((($this)) + 48|0);
 $524 = ((($this)) + 56|0);
 $525 = ((($x1208)) + 8|0);
 $526 = ((($j1valid662)) + 1|0);
 $527 = ((($sj1array661)) + 8|0);
 $528 = ((($j1array659)) + 8|0);
 $529 = ((($cj1array660)) + 8|0);
 $530 = ((($this)) + 48|0);
 $531 = ((($this)) + 56|0);
 $532 = ((($x1219)) + 8|0);
 $533 = ((($j1valid669)) + 1|0);
 $534 = ((($sj1array668)) + 8|0);
 $535 = ((($j1array666)) + 8|0);
 $536 = ((($cj1array667)) + 8|0);
 $537 = ((($this)) + 48|0);
 $538 = ((($this)) + 56|0);
 $539 = ((($x1268)) + 8|0);
 $540 = ((($x1270)) + 8|0);
 $541 = ((($x1275)) + 8|0);
 $542 = ((($x1280)) + 8|0);
 $543 = ((($x1282)) + 8|0);
 $544 = ((($j1valid718)) + 1|0);
 $545 = ((($sj1array717)) + 8|0);
 $546 = ((($j1array715)) + 8|0);
 $547 = ((($cj1array716)) + 8|0);
 $548 = ((($this)) + 48|0);
 $549 = ((($this)) + 56|0);
 $550 = ((($x1292)) + 8|0);
 $551 = ((($j1valid725)) + 1|0);
 $552 = ((($sj1array724)) + 8|0);
 $553 = ((($j1array722)) + 8|0);
 $554 = ((($cj1array723)) + 8|0);
 $555 = ((($this)) + 48|0);
 $556 = ((($this)) + 56|0);
 $557 = ((($x1234)) + 8|0);
 $558 = ((($x1236)) + 8|0);
 $559 = ((($x1241)) + 8|0);
 $560 = ((($x1246)) + 8|0);
 $561 = ((($x1248)) + 8|0);
 $562 = ((($j1valid692)) + 1|0);
 $563 = ((($sj1array691)) + 8|0);
 $564 = ((($j1array689)) + 8|0);
 $565 = ((($cj1array690)) + 8|0);
 $566 = ((($this)) + 48|0);
 $567 = ((($this)) + 56|0);
 $568 = ((($x1258)) + 8|0);
 $569 = ((($j1valid699)) + 1|0);
 $570 = ((($sj1array698)) + 8|0);
 $571 = ((($j1array696)) + 8|0);
 $572 = ((($cj1array697)) + 8|0);
 $573 = ((($this)) + 48|0);
 $574 = ((($this)) + 56|0);
 $575 = ((($x1302)) + 8|0);
 $576 = ((($j1valid733)) + 1|0);
 $577 = ((($sj1array732)) + 8|0);
 $578 = ((($j1array730)) + 8|0);
 $579 = ((($cj1array731)) + 8|0);
 $580 = ((($this)) + 48|0);
 $581 = ((($this)) + 56|0);
 $582 = ((($x1312)) + 8|0);
 $583 = ((($j1valid740)) + 1|0);
 $584 = ((($sj1array739)) + 8|0);
 $585 = ((($j1array737)) + 8|0);
 $586 = ((($cj1array738)) + 8|0);
 $587 = ((($this)) + 48|0);
 $588 = ((($this)) + 56|0);
 $589 = ((($j1valid748)) + 1|0);
 $590 = ((($sj1array747)) + 8|0);
 $591 = ((($j1array745)) + 8|0);
 $592 = ((($cj1array746)) + 8|0);
 $593 = ((($this)) + 48|0);
 $594 = ((($this)) + 56|0);
 $595 = ((($x1328)) + 8|0);
 $596 = ((($j1valid757)) + 1|0);
 $597 = ((($sj1array756)) + 8|0);
 $598 = ((($j1array754)) + 8|0);
 $599 = ((($cj1array755)) + 8|0);
 $600 = ((($this)) + 48|0);
 $601 = ((($this)) + 56|0);
 $602 = ((($x1337)) + 8|0);
 $603 = ((($x1345)) + 8|0);
 $604 = ((($x1346)) + 8|0);
 $605 = ((($this)) + 48|0);
 $606 = ((($this)) + 56|0);
 $607 = ((($x1367)) + 8|0);
 $608 = ((($x1368)) + 8|0);
 $609 = ((($this)) + 48|0);
 $610 = ((($this)) + 56|0);
 $611 = ((($x1387)) + 8|0);
 $612 = ((($x1388)) + 8|0);
 $613 = ((($this)) + 48|0);
 $614 = ((($this)) + 56|0);
 $615 = HEAP32[$solutions>>2]|0;
 $616 = ((($615)) + 20|0);
 $617 = HEAP32[$616>>2]|0;
 FUNCTION_TABLE_vi[$617 & 127]($solutions);
 $618 = +HEAPF64[$pfree>>3];
 HEAPF64[$22>>3] = $618;
 $619 = +HEAPF64[$pfree>>3];
 $620 = (+Math_cos((+$619)));
 HEAPF64[$23>>3] = $620;
 $621 = +HEAPF64[$pfree>>3];
 $622 = (+Math_sin((+$621)));
 HEAPF64[$24>>3] = $622;
 $623 = +HEAPF64[$pfree>>3];
 $624 = $623 * 0.5;
 $625 = (+Math_tan((+$624)));
 HEAPF64[$25>>3] = $625;
 $626 = +HEAPF64[$eerot>>3];
 HEAPF64[$26>>3] = $626;
 $627 = +HEAPF64[$27>>3];
 HEAPF64[$28>>3] = $627;
 $628 = +HEAPF64[$29>>3];
 HEAPF64[$30>>3] = $628;
 $629 = +HEAPF64[$31>>3];
 HEAPF64[$32>>3] = $629;
 $630 = +HEAPF64[$33>>3];
 HEAPF64[$34>>3] = $630;
 $631 = +HEAPF64[$35>>3];
 HEAPF64[$36>>3] = $631;
 $632 = +HEAPF64[$37>>3];
 HEAPF64[$38>>3] = $632;
 $633 = +HEAPF64[$39>>3];
 HEAPF64[$40>>3] = $633;
 $634 = +HEAPF64[$41>>3];
 HEAPF64[$42>>3] = $634;
 $635 = +HEAPF64[$eetrans>>3];
 HEAPF64[$43>>3] = $635;
 $636 = +HEAPF64[$44>>3];
 HEAPF64[$45>>3] = $636;
 $637 = +HEAPF64[$46>>3];
 HEAPF64[$47>>3] = $637;
 $638 = +HEAPF64[$26>>3];
 HEAPF64[$48>>3] = $638;
 $639 = +HEAPF64[$28>>3];
 HEAPF64[$49>>3] = $639;
 $640 = +HEAPF64[$30>>3];
 HEAPF64[$50>>3] = $640;
 $641 = +HEAPF64[$30>>3];
 $642 = $641 * 0.1825;
 $643 = +HEAPF64[$43>>3];
 $644 = $643 - $642;
 HEAPF64[$51>>3] = $644;
 $645 = +HEAPF64[$32>>3];
 HEAPF64[$52>>3] = $645;
 $646 = +HEAPF64[$34>>3];
 HEAPF64[$53>>3] = $646;
 $647 = +HEAPF64[$36>>3];
 HEAPF64[$54>>3] = $647;
 $648 = +HEAPF64[$36>>3];
 $649 = $648 * 0.1825;
 $650 = +HEAPF64[$45>>3];
 $651 = $650 - $649;
 HEAPF64[$55>>3] = $651;
 $652 = +HEAPF64[$38>>3];
 HEAPF64[$56>>3] = $652;
 $653 = +HEAPF64[$40>>3];
 HEAPF64[$57>>3] = $653;
 $654 = +HEAPF64[$42>>3];
 HEAPF64[$58>>3] = $654;
 $655 = +HEAPF64[$47>>3];
 $656 = $655 + -0.29999999999999999;
 $657 = +HEAPF64[$42>>3];
 $658 = $657 * 0.1825;
 $659 = $656 - $658;
 HEAPF64[$59>>3] = $659;
 $660 = +HEAPF64[$48>>3];
 HEAPF64[$26>>3] = $660;
 $661 = +HEAPF64[$49>>3];
 HEAPF64[$28>>3] = $661;
 $662 = +HEAPF64[$50>>3];
 HEAPF64[$30>>3] = $662;
 $663 = +HEAPF64[$52>>3];
 HEAPF64[$32>>3] = $663;
 $664 = +HEAPF64[$53>>3];
 HEAPF64[$34>>3] = $664;
 $665 = +HEAPF64[$54>>3];
 HEAPF64[$36>>3] = $665;
 $666 = +HEAPF64[$56>>3];
 HEAPF64[$38>>3] = $666;
 $667 = +HEAPF64[$57>>3];
 HEAPF64[$40>>3] = $667;
 $668 = +HEAPF64[$58>>3];
 HEAPF64[$42>>3] = $668;
 $669 = +HEAPF64[$51>>3];
 HEAPF64[$43>>3] = $669;
 $670 = +HEAPF64[$55>>3];
 HEAPF64[$45>>3] = $670;
 $671 = +HEAPF64[$59>>3];
 HEAPF64[$47>>3] = $671;
 $672 = +HEAPF64[$43>>3];
 $673 = +HEAPF64[$45>>3];
 $674 = $672 * $672;
 $675 = $673 * $673;
 $676 = $674 + $675;
 $677 = $671 * $671;
 $678 = $677 + $676;
 HEAPF64[$60>>3] = $678;
 $679 = +HEAPF64[$43>>3];
 $680 = +HEAPF64[$26>>3];
 $681 = $679 * $680;
 $682 = +HEAPF64[$45>>3];
 $683 = +HEAPF64[$32>>3];
 $684 = $682 * $683;
 $685 = $681 + $684;
 $686 = +HEAPF64[$47>>3];
 $687 = +HEAPF64[$38>>3];
 $688 = $686 * $687;
 $689 = $685 + $688;
 HEAPF64[$61>>3] = $689;
 $690 = +HEAPF64[$43>>3];
 $691 = +HEAPF64[$28>>3];
 $692 = $690 * $691;
 $693 = +HEAPF64[$45>>3];
 $694 = +HEAPF64[$34>>3];
 $695 = $693 * $694;
 $696 = $692 + $695;
 $697 = +HEAPF64[$47>>3];
 $698 = +HEAPF64[$40>>3];
 $699 = $697 * $698;
 $700 = $696 + $699;
 HEAPF64[$62>>3] = $700;
 $701 = +HEAPF64[$43>>3];
 $702 = +HEAPF64[$30>>3];
 $703 = $701 * $702;
 $704 = +HEAPF64[$45>>3];
 $705 = +HEAPF64[$36>>3];
 $706 = $704 * $705;
 $707 = $703 + $706;
 $708 = +HEAPF64[$47>>3];
 $709 = +HEAPF64[$42>>3];
 $710 = $708 * $709;
 $711 = $707 + $710;
 HEAPF64[$63>>3] = $711;
 $712 = +HEAPF64[$38>>3];
 $713 = $673 * $712;
 $714 = +HEAPF64[$47>>3];
 $715 = +HEAPF64[$32>>3];
 $716 = $714 * $715;
 $717 = $716 - $713;
 HEAPF64[$64>>3] = $717;
 $718 = +HEAPF64[$43>>3];
 $719 = +HEAPF64[$38>>3];
 $720 = $718 * $719;
 $721 = +HEAPF64[$26>>3];
 $722 = $671 * $721;
 $723 = $720 - $722;
 HEAPF64[$65>>3] = $723;
 $724 = +HEAPF64[$32>>3];
 $725 = $672 * $724;
 $726 = +HEAPF64[$45>>3];
 $727 = +HEAPF64[$26>>3];
 $728 = $726 * $727;
 $729 = $728 - $725;
 HEAPF64[$66>>3] = $729;
 $730 = +HEAPF64[$40>>3];
 $731 = $673 * $730;
 $732 = +HEAPF64[$47>>3];
 $733 = +HEAPF64[$34>>3];
 $734 = $732 * $733;
 $735 = $734 - $731;
 HEAPF64[$67>>3] = $735;
 $736 = +HEAPF64[$43>>3];
 $737 = +HEAPF64[$40>>3];
 $738 = $736 * $737;
 $739 = +HEAPF64[$28>>3];
 $740 = $671 * $739;
 $741 = $738 - $740;
 HEAPF64[$68>>3] = $741;
 $742 = +HEAPF64[$34>>3];
 $743 = $672 * $742;
 $744 = +HEAPF64[$45>>3];
 $745 = +HEAPF64[$28>>3];
 $746 = $744 * $745;
 $747 = $746 - $743;
 HEAPF64[$69>>3] = $747;
 $748 = +HEAPF64[$47>>3];
 $749 = +HEAPF64[$36>>3];
 $750 = $748 * $749;
 $751 = +HEAPF64[$42>>3];
 $752 = $673 * $751;
 $753 = $750 - $752;
 HEAPF64[$70>>3] = $753;
 $754 = +HEAPF64[$43>>3];
 $755 = +HEAPF64[$42>>3];
 $756 = $754 * $755;
 $757 = +HEAPF64[$30>>3];
 $758 = $671 * $757;
 $759 = $756 - $758;
 HEAPF64[$71>>3] = $759;
 $760 = +HEAPF64[$36>>3];
 $761 = $672 * $760;
 $762 = +HEAPF64[$45>>3];
 $763 = +HEAPF64[$30>>3];
 $764 = $762 * $763;
 $765 = $764 - $761;
 HEAPF64[$72>>3] = $765;
 HEAP16[$j3valid>>1] = 0;
 HEAP8[$10>>0] = 2;
 $766 = +HEAPF64[$60>>3];
 $767 = $766 * 5.5131654390684997;
 $768 = $767 + -1.01462229303577;
 HEAPF64[$cj3array>>3] = $768;
 $769 = !($768 >= -1.0000020000000001);
 $770 = !($768 <= 1.0000020000000001);
 $or$cond = $769 | $770;
 if ($or$cond) {
  $783 = (__Z13__DOUBLE_BITSd($768)|0);
  $784 = tempRet0;
  $785 = $784 & 2147483647;
  $786 = ($785>>>0)>(2146435072);
  $787 = ($783>>>0)>(0);
  $788 = ($785|0)==(2146435072);
  $789 = $788 & $787;
  $790 = $786 | $789;
  if ($790) {
   HEAP8[$j3valid>>0] = 1;
   HEAPF64[$cj3array>>3] = 1.0;
   HEAPF64[$sj3array>>3] = 0.0;
   HEAPF64[$j3array>>3] = 0.0;
  }
 } else {
  $771 = ((($sj3array)) + 8|0);
  $772 = ((($j3array)) + 8|0);
  $773 = ((($cj3array)) + 8|0);
  $774 = ((($j3valid)) + 1|0);
  HEAP8[$774>>0] = 1;
  HEAP8[$j3valid>>0] = 1;
  $775 = +HEAPF64[$cj3array>>3];
  $776 = (+__Z6IKacosd($775));
  HEAPF64[$j3array>>3] = $776;
  $777 = (+__Z5IKsind($776));
  HEAPF64[$sj3array>>3] = $777;
  $778 = +HEAPF64[$cj3array>>3];
  HEAPF64[$773>>3] = $778;
  $779 = +HEAPF64[$j3array>>3];
  $780 = -$779;
  HEAPF64[$772>>3] = $780;
  $781 = +HEAPF64[$sj3array>>3];
  $782 = -$781;
  HEAPF64[$771>>3] = $782;
 }
 $791 = ((($j0valid194)) + 1|0);
 $792 = ((($j0array191)) + 8|0);
 $793 = ((($cj0array192)) + 8|0);
 $794 = ((($sj0array193)) + 8|0);
 $795 = ((($j0valid194)) + 1|0);
 $796 = ((($cj0array192)) + 8|0);
 $797 = ((($sj0array193)) + 8|0);
 $798 = ((($j0valid203)) + 1|0);
 $799 = ((($j0array200)) + 8|0);
 $800 = ((($cj0array201)) + 8|0);
 $801 = ((($sj0array202)) + 8|0);
 $802 = ((($j0valid203)) + 1|0);
 $803 = ((($cj0array201)) + 8|0);
 $804 = ((($sj0array202)) + 8|0);
 $805 = ((($j0valid223)) + 1|0);
 $806 = ((($j0array220)) + 8|0);
 $807 = ((($cj0array221)) + 8|0);
 $808 = ((($sj0array222)) + 8|0);
 $809 = ((($j0valid223)) + 1|0);
 $810 = ((($cj0array221)) + 8|0);
 $811 = ((($sj0array222)) + 8|0);
 $812 = ((($j0valid232)) + 1|0);
 $813 = ((($j0array229)) + 8|0);
 $814 = ((($cj0array230)) + 8|0);
 $815 = ((($sj0array231)) + 8|0);
 $816 = ((($j0valid232)) + 1|0);
 $817 = ((($cj0array230)) + 8|0);
 $818 = ((($sj0array231)) + 8|0);
 $819 = ((($j0valid302)) + 1|0);
 $820 = ((($j0array299)) + 8|0);
 $821 = ((($cj0array300)) + 8|0);
 $822 = ((($sj0array301)) + 8|0);
 $823 = ((($j0valid302)) + 1|0);
 $824 = ((($cj0array300)) + 8|0);
 $825 = ((($sj0array301)) + 8|0);
 $826 = ((($j0valid311)) + 1|0);
 $827 = ((($j0array308)) + 8|0);
 $828 = ((($cj0array309)) + 8|0);
 $829 = ((($sj0array310)) + 8|0);
 $830 = ((($j0valid311)) + 1|0);
 $831 = ((($cj0array309)) + 8|0);
 $832 = ((($sj0array310)) + 8|0);
 $833 = ((($j0valid331)) + 1|0);
 $834 = ((($j0array328)) + 8|0);
 $835 = ((($cj0array329)) + 8|0);
 $836 = ((($sj0array330)) + 8|0);
 $837 = ((($j0valid331)) + 1|0);
 $838 = ((($cj0array329)) + 8|0);
 $839 = ((($sj0array330)) + 8|0);
 $840 = ((($j0valid340)) + 1|0);
 $841 = ((($j0array337)) + 8|0);
 $842 = ((($cj0array338)) + 8|0);
 $843 = ((($sj0array339)) + 8|0);
 $844 = ((($j0valid340)) + 1|0);
 $845 = ((($cj0array338)) + 8|0);
 $846 = ((($sj0array339)) + 8|0);
 $847 = ((($j0valid387)) + 1|0);
 $848 = ((($j0array384)) + 8|0);
 $849 = ((($cj0array385)) + 8|0);
 $850 = ((($sj0array386)) + 8|0);
 $851 = ((($j0valid387)) + 1|0);
 $852 = ((($cj0array385)) + 8|0);
 $853 = ((($sj0array386)) + 8|0);
 $854 = ((($j0valid396)) + 1|0);
 $855 = ((($j0array393)) + 8|0);
 $856 = ((($cj0array394)) + 8|0);
 $857 = ((($sj0array395)) + 8|0);
 $858 = ((($j0valid396)) + 1|0);
 $859 = ((($cj0array394)) + 8|0);
 $860 = ((($sj0array395)) + 8|0);
 $861 = ((($j0valid416)) + 1|0);
 $862 = ((($j0array413)) + 8|0);
 $863 = ((($cj0array414)) + 8|0);
 $864 = ((($sj0array415)) + 8|0);
 $865 = ((($j0valid416)) + 1|0);
 $866 = ((($cj0array414)) + 8|0);
 $867 = ((($sj0array415)) + 8|0);
 $868 = ((($j0valid425)) + 1|0);
 $869 = ((($j0array422)) + 8|0);
 $870 = ((($cj0array423)) + 8|0);
 $871 = ((($sj0array424)) + 8|0);
 $872 = ((($j0valid425)) + 1|0);
 $873 = ((($cj0array423)) + 8|0);
 $874 = ((($sj0array424)) + 8|0);
 $875 = ((($j0valid495)) + 1|0);
 $876 = ((($j0array492)) + 8|0);
 $877 = ((($cj0array493)) + 8|0);
 $878 = ((($sj0array494)) + 8|0);
 $879 = ((($j0valid495)) + 1|0);
 $880 = ((($cj0array493)) + 8|0);
 $881 = ((($sj0array494)) + 8|0);
 $882 = ((($j0valid504)) + 1|0);
 $883 = ((($j0array501)) + 8|0);
 $884 = ((($cj0array502)) + 8|0);
 $885 = ((($sj0array503)) + 8|0);
 $886 = ((($j0valid504)) + 1|0);
 $887 = ((($cj0array502)) + 8|0);
 $888 = ((($sj0array503)) + 8|0);
 $889 = ((($j0valid524)) + 1|0);
 $890 = ((($j0array521)) + 8|0);
 $891 = ((($cj0array522)) + 8|0);
 $892 = ((($sj0array523)) + 8|0);
 $893 = ((($j0valid524)) + 1|0);
 $894 = ((($cj0array522)) + 8|0);
 $895 = ((($sj0array523)) + 8|0);
 $896 = ((($j0valid533)) + 1|0);
 $897 = ((($j0array530)) + 8|0);
 $898 = ((($cj0array531)) + 8|0);
 $899 = ((($sj0array532)) + 8|0);
 $900 = ((($j0valid533)) + 1|0);
 $901 = ((($cj0array531)) + 8|0);
 $902 = ((($sj0array532)) + 8|0);
 $ij3$01152 = 0;
 while(1) {
  $903 = (($j3valid) + ($ij3$01152)|0);
  $904 = HEAP8[$903>>0]|0;
  $905 = ($904<<24>>24)==(0);
  L8: do {
   if (!($905)) {
    $906 = $ij3$01152&255;
    HEAP8[$8>>0] = $906;
    HEAP8[$9>>0] = -1;
    $iij3$0822 = (($ij3$01152) + 1)|0;
    $907 = ($iij3$0822|0)<(2);
    if ($907) {
     $908 = (($sj3array) + ($ij3$01152<<3)|0);
     $909 = (($j3valid) + ($iij3$0822)|0);
     $910 = HEAP8[$909>>0]|0;
     $911 = ($910<<24>>24)==(0);
     if (!($911)) {
      $912 = (($cj3array) + ($ij3$01152<<3)|0);
      $913 = +HEAPF64[$912>>3];
      $914 = (($cj3array) + ($iij3$0822<<3)|0);
      $915 = +HEAPF64[$914>>3];
      $916 = $913 - $915;
      $917 = (+__Z5IKabsd($916));
      $918 = $917 < 9.9999999999999995E-7;
      if ($918) {
       $919 = +HEAPF64[$908>>3];
       $920 = (($sj3array) + ($iij3$0822<<3)|0);
       $921 = +HEAPF64[$920>>3];
       $922 = $919 - $921;
       $923 = (+__Z5IKabsd($922));
       $924 = $923 < 9.9999999999999995E-7;
       if ($924) {
        HEAP8[$909>>0] = 0;
        $925 = $iij3$0822&255;
        HEAP8[$9>>0] = $925;
       }
      }
     }
    }
    $926 = (($j3array) + ($ij3$01152<<3)|0);
    $927 = +HEAPF64[$926>>3];
    HEAPF64[$7>>3] = $927;
    $928 = (($cj3array) + ($ij3$01152<<3)|0);
    $929 = +HEAPF64[$928>>3];
    HEAPF64[$73>>3] = $929;
    $930 = (($sj3array) + ($ij3$01152<<3)|0);
    $931 = +HEAPF64[$930>>3];
    HEAPF64[$74>>3] = $931;
    $932 = +HEAPF64[$43>>3];
    $933 = (+__Z5IKabsd($932));
    $934 = +HEAPF64[$45>>3];
    $935 = (+__Z5IKabsd($934));
    $936 = $933 + $935;
    $937 = (+__Z5IKabsd($936));
    $938 = $937 < 9.9999999999999995E-7;
    if (!($938)) {
     $939 = $932 * $932;
     $940 = $934 * $934;
     $941 = $939 + $940;
     $942 = (+__Z5IKabsd($941));
     $943 = $942 < 9.9999999999999995E-7;
     if (!($943)) {
      HEAP16[$j0valid595>>1] = 0;
      HEAP8[$2>>0] = 2;
      $8849 = +HEAPF64[$45>>3];
      $8850 = +HEAPF64[$43>>3];
      $8851 = -$8850;
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1107,$8849,$8851,1.9999999999999999E-6);
      $8852 = HEAP8[$481>>0]|0;
      $8853 = ($8852<<24>>24)==(0);
      if ($8853) {
       break;
      }
      $8854 = +HEAPF64[$x1107>>3];
      $8855 = +HEAPF64[$43>>3];
      $8856 = $8855 * $8855;
      $8857 = +HEAPF64[$45>>3];
      $8858 = $8857 * $8857;
      $8859 = $8856 + $8858;
      $8860 = $8859 < -1.0000000000000001E-5;
      if ($8860) {
       break;
      }
      $8861 = (+__Z6IKsqrtd($8859));
      $8862 = (+__Z5IKabsd($8861));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1108,$8862,-1);
      $8863 = HEAP8[$482>>0]|0;
      $8864 = ($8863<<24>>24)==(0);
      if ($8864) {
       break;
      }
      $8865 = +HEAPF64[$24>>3];
      $8866 = $8865 * 0.27650000000000002;
      $8867 = +HEAPF64[$74>>3];
      $8868 = $8866 * $8867;
      $8869 = +HEAPF64[$x1108>>3];
      $8870 = $8868 * $8869;
      $8871 = $8870 < -1.0000020000000001;
      $8872 = $8870 > 1.0000020000000001;
      $or$cond336 = $8871 | $8872;
      if ($or$cond336) {
       break;
      }
      $8873 = (+__Z6IKasind($8870));
      $8874 = -$8854;
      $8875 = $8874 - $8873;
      HEAPF64[$j0array592>>3] = $8875;
      $8876 = (+__Z5IKsind($8875));
      HEAPF64[$sj0array594>>3] = $8876;
      $8877 = (+__Z5IKcosd($8875));
      HEAPF64[$cj0array593>>3] = $8877;
      $8878 = $8873 + 3.14159265358979;
      $8879 = $8878 - $8854;
      HEAPF64[$483>>3] = $8879;
      $8880 = (+__Z5IKsind($8879));
      HEAPF64[$484>>3] = $8880;
      $8881 = +HEAPF64[$483>>3];
      $8882 = (+__Z5IKcosd($8881));
      HEAPF64[$485>>3] = $8882;
      $8883 = +HEAPF64[$j0array592>>3];
      $8884 = $8883 > 3.14159265358979;
      if ($8884) {
       $8885 = $8883 + -6.2831853071795898;
       HEAPF64[$j0array592>>3] = $8885;
      } else {
       $8886 = $8883 < -3.14159265358979;
       if ($8886) {
        $8887 = $8883 + 6.2831853071795898;
        HEAPF64[$j0array592>>3] = $8887;
       }
      }
      HEAP8[$j0valid595>>0] = 1;
      $8888 = +HEAPF64[$483>>3];
      $8889 = $8888 > 3.14159265358979;
      if ($8889) {
       $8890 = $8888 + -6.2831853071795898;
       HEAPF64[$483>>3] = $8890;
      } else {
       $8891 = $8888 < -3.14159265358979;
       if ($8891) {
        $8892 = $8888 + 6.2831853071795898;
        HEAPF64[$483>>3] = $8892;
       }
      }
      HEAP8[$486>>0] = 1;
      $ij0596$0895 = 0;
      while(1) {
       $8893 = (($j0valid595) + ($ij0596$0895)|0);
       $8894 = HEAP8[$8893>>0]|0;
       $8895 = ($8894<<24>>24)==(0);
       L35: do {
        if (!($8895)) {
         $8896 = $ij0596$0895&255;
         HEAP8[$0>>0] = $8896;
         HEAP8[$1>>0] = -1;
         $iij0597$0824 = (($ij0596$0895) + 1)|0;
         $8897 = ($iij0597$0824|0)<(2);
         do {
          if ($8897) {
           $8898 = (($sj0array594) + ($ij0596$0895<<3)|0);
           $8899 = (($j0valid595) + ($iij0597$0824)|0);
           $8900 = HEAP8[$8899>>0]|0;
           $8901 = ($8900<<24>>24)==(0);
           if (!($8901)) {
            $8902 = (($cj0array593) + ($ij0596$0895<<3)|0);
            $8903 = +HEAPF64[$8902>>3];
            $8904 = (($cj0array593) + ($iij0597$0824<<3)|0);
            $8905 = +HEAPF64[$8904>>3];
            $8906 = $8903 - $8905;
            $8907 = (+__Z5IKabsd($8906));
            $8908 = $8907 < 9.9999999999999995E-7;
            if (!($8908)) {
             break;
            }
            $8909 = +HEAPF64[$8898>>3];
            $8910 = (($sj0array594) + ($iij0597$0824<<3)|0);
            $8911 = +HEAPF64[$8910>>3];
            $8912 = $8909 - $8911;
            $8913 = (+__Z5IKabsd($8912));
            $8914 = $8913 < 9.9999999999999995E-7;
            if (!($8914)) {
             break;
            }
            HEAP8[$8899>>0] = 0;
            $8915 = $iij0597$0824&255;
            HEAP8[$1>>0] = $8915;
           }
          }
         } while(0);
         $8916 = (($j0array592) + ($ij0596$0895<<3)|0);
         $8917 = +HEAPF64[$8916>>3];
         HEAPF64[$this>>3] = $8917;
         $8918 = (($cj0array593) + ($ij0596$0895<<3)|0);
         $8919 = +HEAPF64[$8918>>3];
         HEAPF64[$487>>3] = $8919;
         $8920 = (($sj0array594) + ($ij0596$0895<<3)|0);
         $8921 = +HEAPF64[$8920>>3];
         HEAPF64[$488>>3] = $8921;
         $8922 = +HEAPF64[$45>>3];
         $8923 = $8921 * $8922;
         $8924 = +HEAPF64[$47>>3];
         $8925 = $8924 * 2000.0;
         $8926 = +HEAPF64[$487>>3];
         $8927 = +HEAPF64[$43>>3];
         $8928 = $8926 * $8927;
         $8929 = +HEAPF64[$73>>3];
         $8930 = $8929 * 553.0;
         $8931 = +HEAPF64[$23>>3];
         $8932 = +HEAPF64[$74>>3];
         $8933 = $8931 * $8932;
         $8934 = $8928 * 1.1862567811934901;
         $8935 = $8923 * -1.1862567811934901;
         $8936 = $8935 - $8934;
         $8937 = -$8923;
         $8938 = $8929 * $8937;
         $8939 = $8938 + $8936;
         $8940 = $8924 * $8933;
         $8941 = $8939 + $8940;
         $8942 = -$8928;
         $8943 = $8929 * $8942;
         $8944 = $8943 + $8941;
         $8945 = $8929 * $8929;
         $8946 = $8945 * 152.90450000000001;
         $8947 = $8946 + 215.16800000000001;
         $8948 = $8924 * $8925;
         $8949 = $8947 - $8948;
         $8950 = $8929 * 362.76799999999997;
         $8951 = $8950 + $8949;
         $8952 = (+__Z5IKabsd($8951));
         $8953 = $8925 * $8937;
         $8954 = $8929 * 152.90450000000001;
         $8955 = $8954 * $8933;
         $8956 = $8953 + $8955;
         $8957 = $8933 * 181.38399999999999;
         $8958 = $8957 + $8956;
         $8959 = $8925 * $8928;
         $8960 = $8958 - $8959;
         $8961 = (+__Z5IKabsd($8960));
         $8962 = $8952 + $8961;
         $8963 = (+__Z5IKabsd($8944));
         $8964 = $8963 < 9.9999999999999995E-7;
         do {
          if (!($8964)) {
           $8965 = $8928 * 656.0;
           $8966 = $8923 * -656.0;
           $8967 = $8966 - $8965;
           $8968 = $8930 * $8937;
           $8969 = $8967 + $8968;
           $8970 = $8924 * 553.0;
           $8971 = $8970 * $8933;
           $8972 = $8969 + $8971;
           $8973 = $8930 * $8942;
           $8974 = $8973 + $8972;
           $8975 = (+__Z6IKsignd($8974));
           $8976 = (+__Z5IKabsd($8975));
           $8977 = $8976 < 9.9999999999999995E-7;
           if ($8977) {
            break;
           }
           $8978 = (+__Z5IKabsd($8962));
           $8979 = $8978 < 9.9999999999999995E-7;
           if ($8979) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $11754 = +HEAPF64[$487>>3];
           $11755 = +HEAPF64[$43>>3];
           $11756 = $11754 * $11755;
           $11757 = +HEAPF64[$73>>3];
           $11758 = $11757 * 553.0;
           $11759 = +HEAPF64[$23>>3];
           $11760 = +HEAPF64[$74>>3];
           $11761 = $11759 * $11760;
           $11762 = +HEAPF64[$45>>3];
           $11763 = +HEAPF64[$488>>3];
           $11764 = $11762 * $11763;
           $11765 = +HEAPF64[$47>>3];
           $11766 = $11765 * 2000.0;
           $11767 = $11757 * $11757;
           $11768 = $11767 * 152.90450000000001;
           $11769 = $11768 + 215.16800000000001;
           $11770 = $11765 * $11766;
           $11771 = $11769 - $11770;
           $11772 = $11757 * 362.76799999999997;
           $11773 = $11772 + $11771;
           $11774 = $11757 * 152.90450000000001;
           $11775 = $11774 * $11761;
           $11776 = -$11756;
           $11777 = $11766 * $11776;
           $11778 = $11775 + $11777;
           $11779 = $11761 * 181.38399999999999;
           $11780 = $11779 + $11778;
           $11781 = $11764 * $11766;
           $11782 = $11780 - $11781;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1387,$11773,$11782,1.9999999999999999E-6);
           $11783 = HEAP8[$611>>0]|0;
           $11784 = ($11783<<24>>24)==(0);
           if ($11784) {
            break L35;
           }
           $11785 = $11758 * $11764;
           $11786 = $11758 * $11776;
           $11787 = $11786 - $11785;
           $11788 = $11764 * 656.0;
           $11789 = $11787 - $11788;
           $11790 = $11756 * 656.0;
           $11791 = $11789 - $11790;
           $11792 = +HEAPF64[$47>>3];
           $11793 = $11792 * 553.0;
           $11794 = $11761 * $11793;
           $11795 = $11791 + $11794;
           $11796 = (+__Z6IKsignd($11795));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1388,$11796,-1);
           $11797 = HEAP8[$612>>0]|0;
           $11798 = ($11797<<24>>24)==(0);
           if ($11798) {
            break L35;
           }
           $11799 = +HEAPF64[$x1387>>3];
           $11800 = $11799 + -1.5707963267949001;
           $11801 = +HEAPF64[$x1388>>3];
           $11802 = $11801 * 1.5707963267949001;
           $11803 = $11800 + $11802;
           $11804 = (+__Z5IKsind($11803));
           $11805 = (+__Z5IKcosd($11803));
           $11806 = $11803 > 3.14159265358979;
           do {
            if ($11806) {
             $11807 = $11803 + -6.2831853071795898;
             $11810 = $11807;
            } else {
             $11808 = $11803 < -3.14159265358979;
             if (!($11808)) {
              $11810 = $11803;
              break;
             }
             $11809 = $11803 + 6.2831853071795898;
             $11810 = $11809;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $11810;
           HEAPF64[$613>>3] = $11805;
           HEAPF64[$614>>3] = $11804;
           $11811 = +HEAPF64[$3>>3];
           $11812 = (+__Z5IKcosd($11811));
           $11813 = (+__Z5IKsind($11811));
           $11814 = +HEAPF64[$73>>3];
           $11815 = $11814 * 0.27650000000000002;
           $11816 = +HEAPF64[$487>>3];
           $11817 = +HEAPF64[$43>>3];
           $11818 = $11816 * $11817;
           $11819 = +HEAPF64[$488>>3];
           $11820 = +HEAPF64[$45>>3];
           $11821 = $11819 * $11820;
           $11822 = +HEAPF64[$47>>3];
           $11823 = +HEAPF64[$74>>3];
           $11824 = $11823 * 0.27650000000000002;
           $11825 = $11816 * $11820;
           $11826 = $11813 * 0.65600000000000003;
           $11827 = $11812 * $11820;
           $11828 = +HEAPF64[$23>>3];
           $11829 = $11813 * $11828;
           $11830 = $11812 * 0.32800000000000001;
           $11831 = $11812 * $11815;
           $11832 = $11830 + $11831;
           $11833 = $11824 * $11829;
           $11834 = $11832 - $11833;
           $11835 = $11834 - $11822;
           $11836 = $11826 * $11818;
           $11837 = -0.03113175 - $11836;
           $11838 = $11826 * $11821;
           $11839 = $11837 - $11838;
           $11840 = +HEAPF64[$60>>3];
           $11841 = $11839 - $11840;
           $11842 = $11822 * 0.65600000000000003;
           $11843 = $11812 * $11842;
           $11844 = $11843 + $11841;
           $11845 = $11813 * 0.32800000000000001;
           $11846 = -$11828;
           $11847 = $11812 * $11846;
           $11848 = $11824 * $11847;
           $11849 = $11848 - $11845;
           $11850 = $11813 * $11815;
           $11851 = $11849 - $11850;
           $11852 = $11851 - $11818;
           $11853 = $11852 - $11821;
           $11854 = +HEAPF64[$24>>3];
           $11855 = -$11854;
           $11856 = $11819 * $11855;
           $11857 = $11827 * $11856;
           $11858 = $11817 * $11846;
           $11859 = $11819 * $11858;
           $11860 = $11859 + $11857;
           $11861 = $11825 * $11828;
           $11862 = $11861 + $11860;
           $11863 = $11813 * $11855;
           $11864 = $11822 * $11863;
           $11865 = $11864 + $11862;
           $11866 = $11818 * $11855;
           $11867 = $11812 * $11866;
           $11868 = $11867 + $11865;
           $11869 = $11819 * $11846;
           $11870 = $11827 * $11869;
           $11871 = $11825 * $11855;
           $11872 = $11870 + $11871;
           $11873 = $11817 * $11819;
           $11874 = $11873 * $11854;
           $11875 = $11874 + $11872;
           $11876 = $11818 * $11846;
           $11877 = $11812 * $11876;
           $11878 = $11877 + $11875;
           $11879 = $11822 * $11829;
           $11880 = $11878 - $11879;
           $11881 = $11880 - $11824;
           $11882 = (+__Z5IKabsd($11835));
           $11883 = $11882 > 5.0000000000000004E-6;
           if ($11883) {
            break L35;
           }
           $11884 = $11815 + 0.32800000000000001;
           $11885 = $11812 * $11822;
           $11886 = $11884 - $11885;
           $11887 = $11813 * $11818;
           $11888 = $11887 + $11886;
           $11889 = $11813 * $11821;
           $11890 = $11889 + $11888;
           $11891 = (+__Z5IKabsd($11890));
           $11892 = $11891 > 5.0000000000000004E-6;
           if ($11892) {
            break L35;
           }
           $11893 = (+__Z5IKabsd($11844));
           $11894 = $11893 > 5.0000000000000004E-6;
           if ($11894) {
            break L35;
           }
           $11895 = (+__Z5IKabsd($11853));
           $11896 = $11895 > 5.0000000000000004E-6;
           if ($11896) {
            break L35;
           }
           $11897 = (+__Z5IKabsd($11868));
           $11898 = $11897 > 5.0000000000000004E-6;
           if ($11898) {
            break L35;
           }
           $11899 = (+__Z5IKabsd($11881));
           $11900 = $11899 > 5.0000000000000004E-6;
           if ($11900) {
            break L35;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L35;
          }
         } while(0);
         $8980 = +HEAPF64[$23>>3];
         $8981 = $8980 * $8980;
         $8982 = +HEAPF64[$73>>3];
         $8983 = $8982 * $8982;
         $8984 = +HEAPF64[$45>>3];
         $8985 = +HEAPF64[$488>>3];
         $8986 = $8984 * $8985;
         $8987 = $8982 * 1106000.0;
         $8988 = +HEAPF64[$487>>3];
         $8989 = +HEAPF64[$43>>3];
         $8990 = $8988 * $8989;
         $8991 = $8983 * 305809.0;
         $8992 = $8980 * 1106000.0;
         $8993 = +HEAPF64[$74>>3];
         $8994 = $8992 * $8993;
         $8995 = $8981 + 1.4072051509275401;
         $8996 = $8995 + $8983;
         $8997 = $8982 * 2.3725135623869802;
         $8998 = $8997 + $8996;
         $8999 = -$8981;
         $9000 = $8983 * $8999;
         $9001 = $9000 + $8998;
         $9002 = +HEAPF64[$47>>3];
         $9003 = $9002 * $8994;
         $9004 = $8990 * -1312000.0;
         $9005 = $9004 - $9003;
         $9006 = $8986 * 1312000.0;
         $9007 = $9005 - $9006;
         $9008 = $8987 * $8990;
         $9009 = $9007 - $9008;
         $9010 = -$8986;
         $9011 = $8987 * $9010;
         $9012 = $9011 + $9009;
         $9013 = (+__Z5IKabsd($9012));
         $9014 = $8994 * $9010;
         $9015 = $8987 * $9002;
         $9016 = $9014 + $9015;
         $9017 = $8990 * $8994;
         $9018 = $9016 - $9017;
         $9019 = $9002 * 1312000.0;
         $9020 = $9019 + $9018;
         $9021 = (+__Z5IKabsd($9020));
         $9022 = $9013 + $9021;
         $9023 = (+__Z5IKabsd($9001));
         $9024 = $9023 < 9.9999999999999995E-7;
         do {
          if (!($9024)) {
           $9025 = $8991 + 430336.0;
           $9026 = $8982 * 725536.0;
           $9027 = $9026 + $9025;
           $9028 = $8981 * 305809.0;
           $9029 = $9028 + $9027;
           $9030 = $8991 * $8999;
           $9031 = $9030 + $9029;
           $9032 = (+__Z6IKsignd($9031));
           $9033 = (+__Z5IKabsd($9032));
           $9034 = $9033 < 9.9999999999999995E-7;
           if ($9034) {
            break;
           }
           $9035 = (+__Z5IKabsd($9022));
           $9036 = $9035 < 9.9999999999999995E-7;
           if ($9036) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $11605 = +HEAPF64[$23>>3];
           $11606 = $11605 * $11605;
           $11607 = +HEAPF64[$73>>3];
           $11608 = $11607 * $11607;
           $11609 = +HEAPF64[$45>>3];
           $11610 = +HEAPF64[$488>>3];
           $11611 = $11609 * $11610;
           $11612 = $11607 * 1106000.0;
           $11613 = +HEAPF64[$487>>3];
           $11614 = +HEAPF64[$43>>3];
           $11615 = $11613 * $11614;
           $11616 = $11608 * 305809.0;
           $11617 = $11605 * 1106000.0;
           $11618 = +HEAPF64[$74>>3];
           $11619 = $11617 * $11618;
           $11620 = $11616 + 430336.0;
           $11621 = $11606 * 305809.0;
           $11622 = $11621 + $11620;
           $11623 = $11607 * 725536.0;
           $11624 = $11623 + $11622;
           $11625 = $11606 * $11616;
           $11626 = $11624 - $11625;
           $11627 = (+__Z6IKsignd($11626));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1367,$11627,-1);
           $11628 = HEAP8[$607>>0]|0;
           $11629 = ($11628<<24>>24)==(0);
           if ($11629) {
            break L35;
           }
           $11630 = +HEAPF64[$47>>3];
           $11631 = $11619 * $11630;
           $11632 = $11615 * -1312000.0;
           $11633 = $11632 - $11631;
           $11634 = $11611 * 1312000.0;
           $11635 = $11633 - $11634;
           $11636 = -$11611;
           $11637 = $11612 * $11636;
           $11638 = $11637 + $11635;
           $11639 = $11612 * $11615;
           $11640 = $11638 - $11639;
           $11641 = $11615 * $11619;
           $11642 = $11619 * $11636;
           $11643 = $11642 - $11641;
           $11644 = $11612 * $11630;
           $11645 = $11643 + $11644;
           $11646 = $11630 * 1312000.0;
           $11647 = $11646 + $11645;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1368,$11640,$11647,1.9999999999999999E-6);
           $11648 = HEAP8[$608>>0]|0;
           $11649 = ($11648<<24>>24)==(0);
           if ($11649) {
            break L35;
           }
           $11650 = +HEAPF64[$x1367>>3];
           $11651 = $11650 * 1.5707963267949001;
           $11652 = $11651 + -1.5707963267949001;
           $11653 = +HEAPF64[$x1368>>3];
           $11654 = $11653 + $11652;
           $11655 = (+__Z5IKsind($11654));
           $11656 = (+__Z5IKcosd($11654));
           $11657 = $11654 > 3.14159265358979;
           do {
            if ($11657) {
             $11658 = $11654 + -6.2831853071795898;
             $11661 = $11658;
            } else {
             $11659 = $11654 < -3.14159265358979;
             if (!($11659)) {
              $11661 = $11654;
              break;
             }
             $11660 = $11654 + 6.2831853071795898;
             $11661 = $11660;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $11661;
           HEAPF64[$609>>3] = $11656;
           HEAPF64[$610>>3] = $11655;
           $11662 = +HEAPF64[$3>>3];
           $11663 = (+__Z5IKcosd($11662));
           $11664 = (+__Z5IKsind($11662));
           $11665 = +HEAPF64[$73>>3];
           $11666 = $11665 * 0.27650000000000002;
           $11667 = +HEAPF64[$487>>3];
           $11668 = +HEAPF64[$43>>3];
           $11669 = $11667 * $11668;
           $11670 = +HEAPF64[$488>>3];
           $11671 = +HEAPF64[$45>>3];
           $11672 = $11670 * $11671;
           $11673 = +HEAPF64[$47>>3];
           $11674 = +HEAPF64[$74>>3];
           $11675 = $11674 * 0.27650000000000002;
           $11676 = $11667 * $11671;
           $11677 = $11664 * 0.65600000000000003;
           $11678 = $11663 * $11671;
           $11679 = +HEAPF64[$23>>3];
           $11680 = $11664 * $11679;
           $11681 = $11675 * $11680;
           $11682 = -$11681;
           $11683 = $11682 - $11673;
           $11684 = $11663 * 0.32800000000000001;
           $11685 = $11684 + $11683;
           $11686 = $11663 * $11666;
           $11687 = $11686 + $11685;
           $11688 = -$11669;
           $11689 = $11677 * $11688;
           $11690 = $11689 + -0.03113175;
           $11691 = $11677 * $11672;
           $11692 = $11690 - $11691;
           $11693 = +HEAPF64[$60>>3];
           $11694 = $11692 - $11693;
           $11695 = $11673 * 0.65600000000000003;
           $11696 = $11663 * $11695;
           $11697 = $11696 + $11694;
           $11698 = $11664 * $11666;
           $11699 = $11688 - $11698;
           $11700 = -$11679;
           $11701 = $11663 * $11700;
           $11702 = $11675 * $11701;
           $11703 = $11699 + $11702;
           $11704 = $11664 * 0.32800000000000001;
           $11705 = $11703 - $11704;
           $11706 = $11705 - $11672;
           $11707 = +HEAPF64[$24>>3];
           $11708 = -$11707;
           $11709 = $11669 * $11708;
           $11710 = $11663 * $11709;
           $11711 = $11670 * $11708;
           $11712 = $11678 * $11711;
           $11713 = $11710 + $11712;
           $11714 = $11664 * $11708;
           $11715 = $11673 * $11714;
           $11716 = $11715 + $11713;
           $11717 = $11676 * $11679;
           $11718 = $11717 + $11716;
           $11719 = $11668 * $11700;
           $11720 = $11670 * $11719;
           $11721 = $11720 + $11718;
           $11722 = $11676 * $11708;
           $11723 = $11673 * $11680;
           $11724 = $11722 - $11723;
           $11725 = $11669 * $11700;
           $11726 = $11663 * $11725;
           $11727 = $11726 + $11724;
           $11728 = $11668 * $11670;
           $11729 = $11728 * $11707;
           $11730 = $11729 + $11727;
           $11731 = $11730 - $11675;
           $11732 = $11670 * $11700;
           $11733 = $11678 * $11732;
           $11734 = $11733 + $11731;
           $11735 = (+__Z5IKabsd($11687));
           $11736 = $11735 > 5.0000000000000004E-6;
           if ($11736) {
            break L35;
           }
           $11737 = $11666 + 0.32800000000000001;
           $11738 = $11664 * $11669;
           $11739 = $11737 + $11738;
           $11740 = $11664 * $11672;
           $11741 = $11739 + $11740;
           $11742 = $11663 * $11673;
           $11743 = $11741 - $11742;
           $11744 = (+__Z5IKabsd($11743));
           $11745 = $11744 > 5.0000000000000004E-6;
           if ($11745) {
            break L35;
           }
           $11746 = (+__Z5IKabsd($11697));
           $11747 = $11746 > 5.0000000000000004E-6;
           if ($11747) {
            break L35;
           }
           $11748 = (+__Z5IKabsd($11706));
           $11749 = $11748 > 5.0000000000000004E-6;
           if ($11749) {
            break L35;
           }
           $11750 = (+__Z5IKabsd($11721));
           $11751 = $11750 > 5.0000000000000004E-6;
           if ($11751) {
            break L35;
           }
           $11752 = (+__Z5IKabsd($11734));
           $11753 = $11752 > 5.0000000000000004E-6;
           if ($11753) {
            break L35;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L35;
          }
         } while(0);
         $9037 = +HEAPF64[$487>>3];
         $9038 = +HEAPF64[$43>>3];
         $9039 = $9037 * $9038;
         $9040 = +HEAPF64[$73>>3];
         $9041 = +HEAPF64[$47>>3];
         $9042 = $9040 * $9041;
         $9043 = +HEAPF64[$45>>3];
         $9044 = +HEAPF64[$488>>3];
         $9045 = $9043 * $9044;
         $9046 = +HEAPF64[$23>>3];
         $9047 = +HEAPF64[$74>>3];
         $9048 = $9046 * $9047;
         $9049 = $9048 * 553.0;
         $9050 = $9041 * 1.1862567811934901;
         $9051 = $9042 + $9050;
         $9052 = $9045 * $9048;
         $9053 = $9051 + $9052;
         $9054 = $9039 * $9048;
         $9055 = $9054 + $9053;
         $9056 = (+__Z5IKabsd($9055));
         $9057 = $9056 < 9.9999999999999995E-7;
         do {
          if (!($9057)) {
           $9058 = $9042 * 553.0;
           $9059 = $9045 * $9049;
           $9060 = $9058 + $9059;
           $9061 = $9041 * 656.0;
           $9062 = $9061 + $9060;
           $9063 = $9039 * $9049;
           $9064 = $9063 + $9062;
           $9065 = (+__Z6IKsignd($9064));
           $9066 = (+__Z5IKabsd($9065));
           $9067 = $9066 < 9.9999999999999995E-7;
           if ($9067) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $11445 = +HEAPF64[$45>>3];
           $11446 = $11445 * $11445;
           $11447 = +HEAPF64[$487>>3];
           $11448 = $11447 * $11447;
           $11449 = +HEAPF64[$43>>3];
           $11450 = $11447 * $11449;
           $11451 = +HEAPF64[$488>>3];
           $11452 = $11445 * $11451;
           $11453 = +HEAPF64[$47>>3];
           $11454 = $11453 * 2000.0;
           $11455 = +HEAPF64[$23>>3];
           $11456 = +HEAPF64[$74>>3];
           $11457 = $11455 * $11456;
           $11458 = $11446 * 2000.0;
           $11459 = $11452 * 553.0;
           $11460 = $11459 * $11457;
           $11461 = $11453 * 656.0;
           $11462 = $11461 + $11460;
           $11463 = $11450 * 553.0;
           $11464 = $11463 * $11457;
           $11465 = $11464 + $11462;
           $11466 = +HEAPF64[$73>>3];
           $11467 = $11466 * 553.0;
           $11468 = $11453 * $11467;
           $11469 = $11468 + $11465;
           $11470 = (+__Z6IKsignd($11469));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1345,$11470,-1);
           $11471 = HEAP8[$603>>0]|0;
           $11472 = ($11471<<24>>24)==(0);
           if ($11472) {
            break L35;
           }
           $11473 = $11450 * $11454;
           $11474 = $11452 * $11454;
           $11475 = -$11474;
           $11476 = $11475 - $11473;
           $11477 = $11457 * 181.38399999999999;
           $11478 = $11476 - $11477;
           $11479 = +HEAPF64[$73>>3];
           $11480 = $11479 * -152.90450000000001;
           $11481 = $11457 * $11480;
           $11482 = $11478 + $11481;
           $11483 = $11448 * $11458;
           $11484 = $11483 + 215.16800000000001;
           $11485 = $11484 - $11458;
           $11486 = $11479 * $11479;
           $11487 = $11486 * 152.90450000000001;
           $11488 = $11485 + $11487;
           $11489 = $11450 * -4000.0;
           $11490 = $11489 * $11452;
           $11491 = $11490 + $11488;
           $11492 = $11448 * -2000.0;
           $11493 = +HEAPF64[$43>>3];
           $11494 = $11493 * $11493;
           $11495 = $11492 * $11494;
           $11496 = $11495 + $11491;
           $11497 = $11479 * 362.76799999999997;
           $11498 = $11497 + $11496;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1346,$11482,$11498,1.9999999999999999E-6);
           $11499 = HEAP8[$604>>0]|0;
           $11500 = ($11499<<24>>24)==(0);
           if ($11500) {
            break L35;
           }
           $11501 = +HEAPF64[$x1345>>3];
           $11502 = $11501 * 1.5707963267949001;
           $11503 = $11502 + -1.5707963267949001;
           $11504 = +HEAPF64[$x1346>>3];
           $11505 = $11504 + $11503;
           $11506 = (+__Z5IKsind($11505));
           $11507 = (+__Z5IKcosd($11505));
           $11508 = $11505 > 3.14159265358979;
           do {
            if ($11508) {
             $11509 = $11505 + -6.2831853071795898;
             $11512 = $11509;
            } else {
             $11510 = $11505 < -3.14159265358979;
             if (!($11510)) {
              $11512 = $11505;
              break;
             }
             $11511 = $11505 + 6.2831853071795898;
             $11512 = $11511;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $11512;
           HEAPF64[$605>>3] = $11507;
           HEAPF64[$606>>3] = $11506;
           $11513 = +HEAPF64[$3>>3];
           $11514 = (+__Z5IKcosd($11513));
           $11515 = (+__Z5IKsind($11513));
           $11516 = +HEAPF64[$73>>3];
           $11517 = $11516 * 0.27650000000000002;
           $11518 = +HEAPF64[$487>>3];
           $11519 = +HEAPF64[$43>>3];
           $11520 = $11518 * $11519;
           $11521 = +HEAPF64[$488>>3];
           $11522 = +HEAPF64[$45>>3];
           $11523 = $11521 * $11522;
           $11524 = +HEAPF64[$47>>3];
           $11525 = +HEAPF64[$74>>3];
           $11526 = $11525 * 0.27650000000000002;
           $11527 = $11518 * $11522;
           $11528 = $11515 * 0.65600000000000003;
           $11529 = $11514 * $11522;
           $11530 = +HEAPF64[$23>>3];
           $11531 = $11515 * $11530;
           $11532 = $11526 * $11531;
           $11533 = -$11532;
           $11534 = $11533 - $11524;
           $11535 = $11514 * 0.32800000000000001;
           $11536 = $11535 + $11534;
           $11537 = $11514 * $11517;
           $11538 = $11537 + $11536;
           $11539 = $11528 * $11523;
           $11540 = -0.03113175 - $11539;
           $11541 = $11528 * $11520;
           $11542 = $11540 - $11541;
           $11543 = +HEAPF64[$60>>3];
           $11544 = $11542 - $11543;
           $11545 = $11524 * 0.65600000000000003;
           $11546 = $11514 * $11545;
           $11547 = $11546 + $11544;
           $11548 = $11515 * $11517;
           $11549 = -$11548;
           $11550 = $11549 - $11520;
           $11551 = $11515 * 0.32800000000000001;
           $11552 = $11550 - $11551;
           $11553 = -$11530;
           $11554 = $11514 * $11553;
           $11555 = $11526 * $11554;
           $11556 = $11552 + $11555;
           $11557 = $11556 - $11523;
           $11558 = +HEAPF64[$24>>3];
           $11559 = -$11558;
           $11560 = $11521 * $11559;
           $11561 = $11529 * $11560;
           $11562 = $11519 * $11553;
           $11563 = $11521 * $11562;
           $11564 = $11563 + $11561;
           $11565 = $11515 * $11559;
           $11566 = $11524 * $11565;
           $11567 = $11566 + $11564;
           $11568 = $11527 * $11530;
           $11569 = $11568 + $11567;
           $11570 = $11520 * $11559;
           $11571 = $11514 * $11570;
           $11572 = $11571 + $11569;
           $11573 = $11521 * $11553;
           $11574 = $11529 * $11573;
           $11575 = $11574 - $11526;
           $11576 = $11520 * $11553;
           $11577 = $11514 * $11576;
           $11578 = $11577 + $11575;
           $11579 = $11527 * $11559;
           $11580 = $11579 + $11578;
           $11581 = $11519 * $11521;
           $11582 = $11581 * $11558;
           $11583 = $11582 + $11580;
           $11584 = $11524 * $11531;
           $11585 = $11583 - $11584;
           $11586 = (+__Z5IKabsd($11538));
           $11587 = $11586 > 5.0000000000000004E-6;
           if ($11587) {
            break L35;
           }
           $11588 = $11517 + 0.32800000000000001;
           $11589 = $11514 * $11524;
           $11590 = $11588 - $11589;
           $11591 = $11515 * $11523;
           $11592 = $11591 + $11590;
           $11593 = $11515 * $11520;
           $11594 = $11593 + $11592;
           $11595 = (+__Z5IKabsd($11594));
           $11596 = $11595 > 5.0000000000000004E-6;
           if ($11596) {
            break L35;
           }
           $11597 = (+__Z5IKabsd($11547));
           $11598 = $11597 > 5.0000000000000004E-6;
           if ($11598) {
            break L35;
           }
           $11599 = (+__Z5IKabsd($11557));
           $11600 = $11599 > 5.0000000000000004E-6;
           if ($11600) {
            break L35;
           }
           $11601 = (+__Z5IKabsd($11572));
           $11602 = $11601 > 5.0000000000000004E-6;
           if ($11602) {
            break L35;
           }
           $11603 = (+__Z5IKabsd($11585));
           $11604 = $11603 > 5.0000000000000004E-6;
           if ($11604) {
            break L35;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L35;
          }
         } while(0);
         $9068 = +HEAPF64[$74>>3];
         $9069 = $9068 * 0.27650000000000002;
         $9070 = +HEAPF64[$487>>3];
         $9071 = +HEAPF64[$45>>3];
         $9072 = $9070 * $9071;
         $9073 = +HEAPF64[$43>>3];
         $9074 = +HEAPF64[$488>>3];
         $9075 = $9073 * $9074;
         $9076 = +HEAPF64[$47>>3];
         $9077 = (+__Z5IKabsd($9076));
         $9078 = +HEAPF64[$22>>3];
         $9079 = $9078 + 1.5707963267949001;
         $9080 = (+__Z6IKfmoddd($9079,6.2831853071795898));
         $9081 = $9080 + -3.14159265358979;
         $9082 = (+__Z5IKabsd($9081));
         $9083 = $9077 + $9082;
         $9084 = $9069 + $9072;
         $9085 = $9084 - $9075;
         $9086 = $9075 - $9072;
         $9087 = $9086 - $9069;
         $9088 = (+__Z5IKabsd($9083));
         $9089 = $9088 < 9.9999999999999995E-7;
         do {
          if ($9089) {
           $9090 = +HEAPF64[$60>>3];
           $9091 = +HEAPF64[$73>>3];
           $9092 = $9091 * 0.18138399999999999;
           $9093 = $9092 + 0.18403625000000001;
           $9094 = $9093 - $9090;
           $9095 = (+__Z5IKabsd($9094));
           $9096 = $9095 < 9.9999999999999995E-7;
           if (!($9096)) {
            break;
           }
           $9097 = (+__Z5IKabsd($9085));
           $9098 = $9097 < 9.9999999999999995E-7;
           if (!($9098)) {
            break;
           }
           $9099 = (+__Z5IKabsd($9087));
           $9100 = $9099 < 9.9999999999999995E-7;
           if (!($9100)) {
            break;
           }
           $9101 = -$9071;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           $9102 = +HEAPF64[$43>>3];
           $9103 = $9102 * $9102;
           $9104 = +HEAPF64[$45>>3];
           $9105 = $9104 * $9104;
           $9106 = $9103 + $9105;
           HEAPF64[$60>>3] = $9106;
           $9107 = +HEAPF64[$43>>3];
           $9108 = +HEAPF64[$26>>3];
           $9109 = $9107 * $9108;
           $9110 = +HEAPF64[$45>>3];
           $9111 = +HEAPF64[$32>>3];
           $9112 = $9110 * $9111;
           $9113 = $9109 + $9112;
           HEAPF64[$61>>3] = $9113;
           $9114 = +HEAPF64[$43>>3];
           $9115 = +HEAPF64[$28>>3];
           $9116 = $9114 * $9115;
           $9117 = +HEAPF64[$45>>3];
           $9118 = +HEAPF64[$34>>3];
           $9119 = $9117 * $9118;
           $9120 = $9116 + $9119;
           HEAPF64[$62>>3] = $9120;
           $9121 = +HEAPF64[$43>>3];
           $9122 = +HEAPF64[$30>>3];
           $9123 = $9121 * $9122;
           $9124 = +HEAPF64[$45>>3];
           $9125 = +HEAPF64[$36>>3];
           $9126 = $9124 * $9125;
           $9127 = $9123 + $9126;
           HEAPF64[$63>>3] = $9127;
           $9128 = +HEAPF64[$38>>3];
           $9129 = $9128 * $9101;
           HEAPF64[$64>>3] = $9129;
           $9130 = +HEAPF64[$43>>3];
           $9131 = +HEAPF64[$38>>3];
           $9132 = $9130 * $9131;
           HEAPF64[$65>>3] = $9132;
           $9133 = +HEAPF64[$40>>3];
           $9134 = $9133 * $9101;
           HEAPF64[$67>>3] = $9134;
           $9135 = +HEAPF64[$43>>3];
           $9136 = +HEAPF64[$40>>3];
           $9137 = $9135 * $9136;
           HEAPF64[$68>>3] = $9137;
           $9138 = +HEAPF64[$42>>3];
           $9139 = $9138 * $9101;
           HEAPF64[$70>>3] = $9139;
           $9140 = +HEAPF64[$43>>3];
           $9141 = +HEAPF64[$42>>3];
           $9142 = $9140 * $9141;
           HEAPF64[$71>>3] = $9142;
           $9143 = +HEAPF64[$73>>3];
           $9144 = -1.1862567811934901 - $9143;
           $9145 = (+__Z5IKabsd($9144));
           $9146 = $9145 < 9.9999999999999995E-7;
           if (!($9146)) {
            HEAP16[$j1valid669>>1] = 0;
            HEAP8[$6>>0] = 2;
            $10030 = +HEAPF64[$73>>3];
            $10031 = $10030 * 0.27650000000000002;
            $10032 = -0.32800000000000001 - $10031;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1219,$10032,-1);
            $10033 = HEAP8[$532>>0]|0;
            $10034 = ($10033<<24>>24)==(0);
            if ($10034) {
             break L35;
            }
            $10035 = +HEAPF64[$x1219>>3];
            $10036 = +HEAPF64[$487>>3];
            $10037 = +HEAPF64[$43>>3];
            $10038 = $10036 * $10037;
            $10039 = $10035 * $10038;
            $10040 = +HEAPF64[$45>>3];
            $10041 = +HEAPF64[$488>>3];
            $10042 = $10040 * $10041;
            $10043 = $10035 * $10042;
            $10044 = $10039 + $10043;
            HEAPF64[$sj1array668>>3] = $10044;
            $10045 = !($10044 >= -1.0000020000000001);
            $10046 = !($10044 <= 1.0000020000000001);
            $or$cond358 = $10045 | $10046;
            do {
             if ($or$cond358) {
              $10056 = (__Z13__DOUBLE_BITSd($10044)|0);
              $10057 = tempRet0;
              $10058 = $10057 & 2147483647;
              $10059 = ($10058>>>0)>(2146435072);
              $10060 = ($10056>>>0)>(0);
              $10061 = ($10058|0)==(2146435072);
              $10062 = $10061 & $10060;
              $10063 = $10059 | $10062;
              if (!($10063)) {
               $ij1670$0874 = 0;
               break;
              }
              HEAP8[$j1valid669>>0] = 1;
              HEAPF64[$cj1array667>>3] = 1.0;
              HEAPF64[$sj1array668>>3] = 0.0;
              HEAPF64[$j1array666>>3] = 0.0;
              $ij1670$0874 = 0;
             } else {
              HEAP8[$533>>0] = 1;
              HEAP8[$j1valid669>>0] = 1;
              $10047 = +HEAPF64[$sj1array668>>3];
              $10048 = (+__Z6IKasind($10047));
              HEAPF64[$j1array666>>3] = $10048;
              $10049 = (+__Z5IKcosd($10048));
              HEAPF64[$cj1array667>>3] = $10049;
              $10050 = +HEAPF64[$sj1array668>>3];
              HEAPF64[$534>>3] = $10050;
              $10051 = +HEAPF64[$j1array666>>3];
              $10052 = $10051 > 0.0;
              $$v30 = $10052 ? 3.14159265358979 : -3.14159265358979;
              $10053 = $$v30 - $10051;
              HEAPF64[$535>>3] = $10053;
              $10054 = +HEAPF64[$cj1array667>>3];
              $10055 = -$10054;
              HEAPF64[$536>>3] = $10055;
              $ij1670$0874 = 0;
             }
            } while(0);
            while(1) {
             $10064 = (($j1valid669) + ($ij1670$0874)|0);
             $10065 = HEAP8[$10064>>0]|0;
             $10066 = ($10065<<24>>24)==(0);
             do {
              if (!($10066)) {
               $10067 = $ij1670$0874&255;
               HEAP8[$4>>0] = $10067;
               HEAP8[$5>>0] = -1;
               $iij1671$0871 = (($ij1670$0874) + 1)|0;
               $10068 = ($iij1671$0871|0)<(2);
               do {
                if ($10068) {
                 $10069 = (($sj1array668) + ($ij1670$0874<<3)|0);
                 $10070 = (($j1valid669) + ($iij1671$0871)|0);
                 $10071 = HEAP8[$10070>>0]|0;
                 $10072 = ($10071<<24>>24)==(0);
                 if ($10072) {
                  break;
                 }
                 $10073 = (($cj1array667) + ($ij1670$0874<<3)|0);
                 $10074 = +HEAPF64[$10073>>3];
                 $10075 = (($cj1array667) + ($iij1671$0871<<3)|0);
                 $10076 = +HEAPF64[$10075>>3];
                 $10077 = $10074 - $10076;
                 $10078 = (+__Z5IKabsd($10077));
                 $10079 = $10078 < 9.9999999999999995E-7;
                 if (!($10079)) {
                  break;
                 }
                 $10080 = +HEAPF64[$10069>>3];
                 $10081 = (($sj1array668) + ($iij1671$0871<<3)|0);
                 $10082 = +HEAPF64[$10081>>3];
                 $10083 = $10080 - $10082;
                 $10084 = (+__Z5IKabsd($10083));
                 $10085 = $10084 < 9.9999999999999995E-7;
                 if (!($10085)) {
                  break;
                 }
                 HEAP8[$10070>>0] = 0;
                 $10086 = $iij1671$0871&255;
                 HEAP8[$5>>0] = $10086;
                }
               } while(0);
               $10087 = (($j1array666) + ($ij1670$0874<<3)|0);
               $10088 = +HEAPF64[$10087>>3];
               HEAPF64[$3>>3] = $10088;
               $10089 = (($cj1array667) + ($ij1670$0874<<3)|0);
               $10090 = +HEAPF64[$10089>>3];
               HEAPF64[$537>>3] = $10090;
               $10091 = (($sj1array668) + ($ij1670$0874<<3)|0);
               $10092 = +HEAPF64[$10091>>3];
               HEAPF64[$538>>3] = $10092;
               $10093 = +HEAPF64[$3>>3];
               $10094 = (+__Z5IKcosd($10093));
               $10095 = (+__Z5IKsind($10093));
               $10096 = +HEAPF64[$43>>3];
               $10097 = $10096 * $10096;
               $10098 = +HEAPF64[$45>>3];
               $10099 = $10098 * $10098;
               $10100 = +HEAPF64[$488>>3];
               $10101 = $10098 * $10100;
               $10102 = +HEAPF64[$487>>3];
               $10103 = $10096 * $10102;
               $10104 = $10095 * 0.65600000000000003;
               $10105 = $10094 * 1.5243902439024399;
               $10106 = -$10101;
               $10107 = $10094 * $10106;
               $10108 = -$10103;
               $10109 = $10094 * $10108;
               $10110 = $10107 + $10109;
               $10111 = $10094 * 0.0474569359756098;
               $10112 = $10105 * $10099;
               $10113 = $10111 + $10112;
               $10114 = $10105 * $10097;
               $10115 = $10114 + $10113;
               $10116 = $10104 * $10106;
               $10117 = $10116 + -0.03113175;
               $10118 = $10117 - $10097;
               $10119 = $10118 - $10099;
               $10120 = $10104 * $10108;
               $10121 = $10120 + $10119;
               $10122 = (+__Z5IKabsd($10110));
               $10123 = $10122 > 5.0000000000000004E-6;
               if ($10123) {
                break;
               }
               $10124 = +HEAPF64[$73>>3];
               $10125 = $10124 * 0.27650000000000002;
               $10126 = $10125 + 0.32800000000000001;
               $10127 = $10095 * $10103;
               $10128 = $10127 + $10126;
               $10129 = $10095 * $10101;
               $10130 = $10129 + $10128;
               $10131 = (+__Z5IKabsd($10130));
               $10132 = $10131 > 5.0000000000000004E-6;
               if ($10132) {
                break;
               }
               $10133 = (+__Z5IKabsd($10115));
               $10134 = $10133 > 5.0000000000000004E-6;
               if ($10134) {
                break;
               }
               $10135 = (+__Z5IKabsd($10121));
               $10136 = $10135 > 5.0000000000000004E-6;
               if ($10136) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $10137 = (($ij1670$0874) + 1)|0;
             $exitcond1366 = ($10137|0)==(2);
             if ($exitcond1366) {
              break L35;
             } else {
              $ij1670$0874 = $10137;
             }
            }
           }
           $9147 = +HEAPF64[$45>>3];
           $9148 = -$9147;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           $9149 = +HEAPF64[$43>>3];
           $9150 = $9149 * $9149;
           $9151 = +HEAPF64[$45>>3];
           $9152 = $9151 * $9151;
           $9153 = $9150 + $9152;
           HEAPF64[$60>>3] = $9153;
           $9154 = +HEAPF64[$43>>3];
           $9155 = +HEAPF64[$26>>3];
           $9156 = $9154 * $9155;
           $9157 = +HEAPF64[$45>>3];
           $9158 = +HEAPF64[$32>>3];
           $9159 = $9157 * $9158;
           $9160 = $9156 + $9159;
           HEAPF64[$61>>3] = $9160;
           $9161 = +HEAPF64[$43>>3];
           $9162 = +HEAPF64[$28>>3];
           $9163 = $9161 * $9162;
           $9164 = +HEAPF64[$45>>3];
           $9165 = +HEAPF64[$34>>3];
           $9166 = $9164 * $9165;
           $9167 = $9163 + $9166;
           HEAPF64[$62>>3] = $9167;
           $9168 = +HEAPF64[$43>>3];
           $9169 = +HEAPF64[$30>>3];
           $9170 = $9168 * $9169;
           $9171 = +HEAPF64[$45>>3];
           $9172 = +HEAPF64[$36>>3];
           $9173 = $9171 * $9172;
           $9174 = $9170 + $9173;
           HEAPF64[$63>>3] = $9174;
           $9175 = +HEAPF64[$38>>3];
           $9176 = $9175 * $9148;
           HEAPF64[$64>>3] = $9176;
           $9177 = +HEAPF64[$43>>3];
           $9178 = +HEAPF64[$38>>3];
           $9179 = $9177 * $9178;
           HEAPF64[$65>>3] = $9179;
           $9180 = +HEAPF64[$40>>3];
           $9181 = $9180 * $9148;
           HEAPF64[$67>>3] = $9181;
           $9182 = +HEAPF64[$43>>3];
           $9183 = +HEAPF64[$40>>3];
           $9184 = $9182 * $9183;
           HEAPF64[$68>>3] = $9184;
           $9185 = +HEAPF64[$42>>3];
           $9186 = $9185 * $9148;
           HEAPF64[$70>>3] = $9186;
           $9187 = +HEAPF64[$43>>3];
           $9188 = +HEAPF64[$42>>3];
           $9189 = $9187 * $9188;
           HEAPF64[$71>>3] = $9189;
           $9190 = +HEAPF64[$487>>3];
           $9191 = +HEAPF64[$43>>3];
           $9192 = $9190 * $9191;
           $9193 = +HEAPF64[$45>>3];
           $9194 = +HEAPF64[$488>>3];
           $9195 = $9193 * $9194;
           $9196 = $9192 + $9195;
           $9197 = (+__Z5IKabsd($9196));
           $9198 = $9197 < 9.9999999999999995E-7;
           if (!($9198)) {
            HEAP16[$j1valid662>>1] = 0;
            HEAP8[$6>>0] = 2;
            $9922 = +HEAPF64[$487>>3];
            $9923 = +HEAPF64[$43>>3];
            $9924 = $9922 * $9923;
            $9925 = +HEAPF64[$45>>3];
            $9926 = +HEAPF64[$488>>3];
            $9927 = $9925 * $9926;
            $9928 = $9924 + $9927;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1208,$9928,-1);
            $9929 = HEAP8[$525>>0]|0;
            $9930 = ($9929<<24>>24)==(0);
            if ($9930) {
             break L35;
            }
            $9931 = +HEAPF64[$x1208>>3];
            $9932 = +HEAPF64[$73>>3];
            $9933 = $9932 * -0.27650000000000002;
            $9934 = $9931 * $9933;
            $9935 = $9931 * 0.32800000000000001;
            $9936 = $9934 - $9935;
            HEAPF64[$sj1array661>>3] = $9936;
            $9937 = !($9936 >= -1.0000020000000001);
            $9938 = !($9936 <= 1.0000020000000001);
            $or$cond357 = $9937 | $9938;
            do {
             if ($or$cond357) {
              $9948 = (__Z13__DOUBLE_BITSd($9936)|0);
              $9949 = tempRet0;
              $9950 = $9949 & 2147483647;
              $9951 = ($9950>>>0)>(2146435072);
              $9952 = ($9948>>>0)>(0);
              $9953 = ($9950|0)==(2146435072);
              $9954 = $9953 & $9952;
              $9955 = $9951 | $9954;
              if (!($9955)) {
               $ij1663$0878 = 0;
               break;
              }
              HEAP8[$j1valid662>>0] = 1;
              HEAPF64[$cj1array660>>3] = 1.0;
              HEAPF64[$sj1array661>>3] = 0.0;
              HEAPF64[$j1array659>>3] = 0.0;
              $ij1663$0878 = 0;
             } else {
              HEAP8[$526>>0] = 1;
              HEAP8[$j1valid662>>0] = 1;
              $9939 = +HEAPF64[$sj1array661>>3];
              $9940 = (+__Z6IKasind($9939));
              HEAPF64[$j1array659>>3] = $9940;
              $9941 = (+__Z5IKcosd($9940));
              HEAPF64[$cj1array660>>3] = $9941;
              $9942 = +HEAPF64[$sj1array661>>3];
              HEAPF64[$527>>3] = $9942;
              $9943 = +HEAPF64[$j1array659>>3];
              $9944 = $9943 > 0.0;
              $$v32 = $9944 ? 3.14159265358979 : -3.14159265358979;
              $9945 = $$v32 - $9943;
              HEAPF64[$528>>3] = $9945;
              $9946 = +HEAPF64[$cj1array660>>3];
              $9947 = -$9946;
              HEAPF64[$529>>3] = $9947;
              $ij1663$0878 = 0;
             }
            } while(0);
            while(1) {
             $9956 = (($j1valid662) + ($ij1663$0878)|0);
             $9957 = HEAP8[$9956>>0]|0;
             $9958 = ($9957<<24>>24)==(0);
             do {
              if (!($9958)) {
               $9959 = $ij1663$0878&255;
               HEAP8[$4>>0] = $9959;
               HEAP8[$5>>0] = -1;
               $iij1664$0875 = (($ij1663$0878) + 1)|0;
               $9960 = ($iij1664$0875|0)<(2);
               do {
                if ($9960) {
                 $9961 = (($sj1array661) + ($ij1663$0878<<3)|0);
                 $9962 = (($j1valid662) + ($iij1664$0875)|0);
                 $9963 = HEAP8[$9962>>0]|0;
                 $9964 = ($9963<<24>>24)==(0);
                 if ($9964) {
                  break;
                 }
                 $9965 = (($cj1array660) + ($ij1663$0878<<3)|0);
                 $9966 = +HEAPF64[$9965>>3];
                 $9967 = (($cj1array660) + ($iij1664$0875<<3)|0);
                 $9968 = +HEAPF64[$9967>>3];
                 $9969 = $9966 - $9968;
                 $9970 = (+__Z5IKabsd($9969));
                 $9971 = $9970 < 9.9999999999999995E-7;
                 if (!($9971)) {
                  break;
                 }
                 $9972 = +HEAPF64[$9961>>3];
                 $9973 = (($sj1array661) + ($iij1664$0875<<3)|0);
                 $9974 = +HEAPF64[$9973>>3];
                 $9975 = $9972 - $9974;
                 $9976 = (+__Z5IKabsd($9975));
                 $9977 = $9976 < 9.9999999999999995E-7;
                 if (!($9977)) {
                  break;
                 }
                 HEAP8[$9962>>0] = 0;
                 $9978 = $iij1664$0875&255;
                 HEAP8[$5>>0] = $9978;
                }
               } while(0);
               $9979 = (($j1array659) + ($ij1663$0878<<3)|0);
               $9980 = +HEAPF64[$9979>>3];
               HEAPF64[$3>>3] = $9980;
               $9981 = (($cj1array660) + ($ij1663$0878<<3)|0);
               $9982 = +HEAPF64[$9981>>3];
               HEAPF64[$530>>3] = $9982;
               $9983 = (($sj1array661) + ($ij1663$0878<<3)|0);
               $9984 = +HEAPF64[$9983>>3];
               HEAPF64[$531>>3] = $9984;
               $9985 = +HEAPF64[$3>>3];
               $9986 = (+__Z5IKcosd($9985));
               $9987 = (+__Z5IKsind($9985));
               $9988 = +HEAPF64[$43>>3];
               $9989 = $9988 * $9988;
               $9990 = +HEAPF64[$45>>3];
               $9991 = $9990 * $9990;
               $9992 = +HEAPF64[$487>>3];
               $9993 = $9988 * $9992;
               $9994 = +HEAPF64[$488>>3];
               $9995 = $9990 * $9994;
               $9996 = $9987 * 0.65600000000000003;
               $9997 = $9986 * 1.5243902439024399;
               $9998 = -$9995;
               $9999 = $9986 * $9998;
               $10000 = -$9993;
               $10001 = $9986 * $10000;
               $10002 = $10001 + $9999;
               $10003 = $9997 * $9991;
               $10004 = $9986 * 0.0474569359756098;
               $10005 = $10004 + $10003;
               $10006 = $9997 * $9989;
               $10007 = $10006 + $10005;
               $10008 = $9996 * $9998;
               $10009 = $10008 + -0.03113175;
               $10010 = $9996 * $10000;
               $10011 = $10010 + $10009;
               $10012 = $10011 - $9991;
               $10013 = $10012 - $9989;
               $10014 = (+__Z5IKabsd($10002));
               $10015 = $10014 > 5.0000000000000004E-6;
               if ($10015) {
                break;
               }
               $10016 = +HEAPF64[$73>>3];
               $10017 = $9987 * 0.32800000000000001;
               $10018 = $10016 * -0.27650000000000002;
               $10019 = $9987 * $10018;
               $10020 = $10019 - $10017;
               $10021 = $10020 - $9995;
               $10022 = $10021 - $9993;
               $10023 = (+__Z5IKabsd($10022));
               $10024 = $10023 > 5.0000000000000004E-6;
               if ($10024) {
                break;
               }
               $10025 = (+__Z5IKabsd($10007));
               $10026 = $10025 > 5.0000000000000004E-6;
               if ($10026) {
                break;
               }
               $10027 = (+__Z5IKabsd($10013));
               $10028 = $10027 > 5.0000000000000004E-6;
               if ($10028) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $10029 = (($ij1663$0878) + 1)|0;
             $exitcond1367 = ($10029|0)==(2);
             if ($exitcond1367) {
              break L35;
             } else {
              $ij1663$0878 = $10029;
             }
            }
           }
           $9199 = $9191 * $9191;
           $9200 = $9193 * $9193;
           $9201 = $9199 + $9200;
           $9202 = (+__Z5IKabsd($9201));
           $9203 = $9202 == 0.0;
           do {
            if (!($9203)) {
             $9204 = (+Math_pow((+$9201),-0.5));
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1134,$9191,$9193,1.9999999999999999E-6);
             $9205 = HEAP8[$507>>0]|0;
             $9206 = ($9205<<24>>24)==(0);
             if ($9206) {
              break;
             }
             $9207 = +HEAPF64[$43>>3];
             $9208 = $9204 * $9207;
             $9209 = -$9208;
             $9210 = +HEAPF64[$45>>3];
             $9211 = $9204 * $9210;
             $9212 = +HEAPF64[$74>>3];
             $9213 = $9212 * 0.27650000000000002;
             $9214 = $9210 * $9211;
             $9215 = $9207 * $9209;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1138,$9207,$9210,1.9999999999999999E-6);
             $9216 = HEAP8[$508>>0]|0;
             $9217 = ($9216<<24>>24)==(0);
             if ($9217) {
              break;
             }
             $9218 = +HEAPF64[$x1138>>3];
             $9219 = +HEAPF64[$this>>3];
             $9220 = $9218 + $9219;
             $9221 = (+__Z5IKabsd($9220));
             $9222 = $9221 + 3.14159265358979;
             $9223 = (+__Z6IKfmoddd($9222,6.2831853071795898));
             $9224 = $9223 + -3.14159265358979;
             $9225 = +HEAPF64[$43>>3];
             $9226 = +HEAPF64[$45>>3];
             $9227 = $9214 + $9213;
             $9228 = $9227 - $9215;
             $9229 = $9215 - $9213;
             $9230 = $9229 - $9214;
             $9231 = (+__Z5IKabsd($9224));
             $9232 = $9231 < 9.9999999999999995E-7;
             if (!($9232)) {
              break;
             }
             $9233 = +HEAPF64[$73>>3];
             $9234 = $9225 * $9225;
             $9235 = 0.18403625000000001 - $9234;
             $9236 = $9233 * 0.18138399999999999;
             $9237 = $9235 + $9236;
             $9238 = $9226 * $9226;
             $9239 = $9237 - $9238;
             $9240 = (+__Z5IKabsd($9239));
             $9241 = $9240 < 9.9999999999999995E-7;
             if (!($9241)) {
              break;
             }
             $9242 = (+__Z5IKabsd($9228));
             $9243 = $9242 < 9.9999999999999995E-7;
             if (!($9243)) {
              break;
             }
             $9244 = (+__Z5IKabsd($9230));
             $9245 = $9244 < 9.9999999999999995E-7;
             if (!($9245)) {
              break;
             }
             $9246 = -$9226;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1143,$9225,$9226,1.9999999999999999E-6);
             $9247 = HEAP8[$509>>0]|0;
             $9248 = ($9247<<24>>24)==(0);
             if ($9248) {
              break L35;
             }
             $9249 = +HEAPF64[$x1143>>3];
             $9250 = -$9249;
             $9251 = +HEAPF64[$43>>3];
             $9252 = $9251 * $9251;
             $9253 = +HEAPF64[$45>>3];
             $9254 = $9253 * $9253;
             $9255 = $9252 + $9254;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$60>>3] = $9255;
             $9256 = +HEAPF64[$43>>3];
             $9257 = +HEAPF64[$26>>3];
             $9258 = $9256 * $9257;
             $9259 = +HEAPF64[$45>>3];
             $9260 = +HEAPF64[$32>>3];
             $9261 = $9259 * $9260;
             $9262 = $9258 + $9261;
             HEAPF64[$61>>3] = $9262;
             $9263 = +HEAPF64[$43>>3];
             $9264 = +HEAPF64[$28>>3];
             $9265 = $9263 * $9264;
             $9266 = +HEAPF64[$45>>3];
             $9267 = +HEAPF64[$34>>3];
             $9268 = $9266 * $9267;
             $9269 = $9265 + $9268;
             HEAPF64[$62>>3] = $9269;
             $9270 = +HEAPF64[$43>>3];
             $9271 = +HEAPF64[$30>>3];
             $9272 = $9270 * $9271;
             $9273 = +HEAPF64[$45>>3];
             $9274 = +HEAPF64[$36>>3];
             $9275 = $9273 * $9274;
             $9276 = $9272 + $9275;
             HEAPF64[$63>>3] = $9276;
             $9277 = +HEAPF64[$38>>3];
             $9278 = $9277 * $9246;
             HEAPF64[$64>>3] = $9278;
             $9279 = +HEAPF64[$43>>3];
             $9280 = +HEAPF64[$38>>3];
             $9281 = $9279 * $9280;
             HEAPF64[$65>>3] = $9281;
             $9282 = +HEAPF64[$40>>3];
             $9283 = $9282 * $9246;
             HEAPF64[$67>>3] = $9283;
             $9284 = +HEAPF64[$43>>3];
             $9285 = +HEAPF64[$40>>3];
             $9286 = $9284 * $9285;
             HEAPF64[$68>>3] = $9286;
             $9287 = +HEAPF64[$42>>3];
             $9288 = $9287 * $9246;
             HEAPF64[$70>>3] = $9288;
             $9289 = +HEAPF64[$43>>3];
             $9290 = +HEAPF64[$42>>3];
             $9291 = $9289 * $9290;
             HEAPF64[$71>>3] = $9291;
             HEAPF64[$488>>3] = $9209;
             HEAPF64[$487>>3] = $9211;
             HEAPF64[$this>>3] = $9250;
             $9292 = +HEAPF64[$43>>3];
             $9293 = $9204 * $9292;
             $9294 = -$9293;
             $9295 = +HEAPF64[$45>>3];
             $9296 = $9204 * $9295;
             $9297 = +HEAPF64[$73>>3];
             $9298 = -1.1862567811934901 - $9297;
             $9299 = (+__Z5IKabsd($9298));
             $9300 = $9299 < 9.9999999999999995E-7;
             if (!($9300)) {
              HEAP16[$j1valid628>>1] = 0;
              HEAP8[$6>>0] = 2;
              $9457 = +HEAPF64[$73>>3];
              $9458 = $9457 * 0.27650000000000002;
              $9459 = -0.32800000000000001 - $9458;
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1160,$9459,-1);
              $9460 = HEAP8[$518>>0]|0;
              $9461 = ($9460<<24>>24)==(0);
              if ($9461) {
               break L35;
              }
              $9462 = +HEAPF64[$x1160>>3];
              $9463 = +HEAPF64[$45>>3];
              $9464 = $9463 * $9294;
              $9465 = $9462 * $9464;
              $9466 = +HEAPF64[$43>>3];
              $9467 = $9296 * $9466;
              $9468 = $9462 * $9467;
              $9469 = $9465 + $9468;
              HEAPF64[$sj1array627>>3] = $9469;
              $9470 = !($9469 >= -1.0000020000000001);
              $9471 = !($9469 <= 1.0000020000000001);
              $or$cond338 = $9470 | $9471;
              do {
               if ($or$cond338) {
                $9481 = (__Z13__DOUBLE_BITSd($9469)|0);
                $9482 = tempRet0;
                $9483 = $9482 & 2147483647;
                $9484 = ($9483>>>0)>(2146435072);
                $9485 = ($9481>>>0)>(0);
                $9486 = ($9483|0)==(2146435072);
                $9487 = $9486 & $9485;
                $9488 = $9484 | $9487;
                if (!($9488)) {
                 $ij1629$0882 = 0;
                 break;
                }
                HEAP8[$j1valid628>>0] = 1;
                HEAPF64[$cj1array626>>3] = 1.0;
                HEAPF64[$sj1array627>>3] = 0.0;
                HEAPF64[$j1array625>>3] = 0.0;
                $ij1629$0882 = 0;
               } else {
                HEAP8[$519>>0] = 1;
                HEAP8[$j1valid628>>0] = 1;
                $9472 = +HEAPF64[$sj1array627>>3];
                $9473 = (+__Z6IKasind($9472));
                HEAPF64[$j1array625>>3] = $9473;
                $9474 = (+__Z5IKcosd($9473));
                HEAPF64[$cj1array626>>3] = $9474;
                $9475 = +HEAPF64[$sj1array627>>3];
                HEAPF64[$520>>3] = $9475;
                $9476 = +HEAPF64[$j1array625>>3];
                $9477 = $9476 > 0.0;
                $$v38 = $9477 ? 3.14159265358979 : -3.14159265358979;
                $9478 = $$v38 - $9476;
                HEAPF64[$521>>3] = $9478;
                $9479 = +HEAPF64[$cj1array626>>3];
                $9480 = -$9479;
                HEAPF64[$522>>3] = $9480;
                $ij1629$0882 = 0;
               }
              } while(0);
              while(1) {
               $9489 = (($j1valid628) + ($ij1629$0882)|0);
               $9490 = HEAP8[$9489>>0]|0;
               $9491 = ($9490<<24>>24)==(0);
               do {
                if (!($9491)) {
                 $9492 = $ij1629$0882&255;
                 HEAP8[$4>>0] = $9492;
                 HEAP8[$5>>0] = -1;
                 $iij1630$0879 = (($ij1629$0882) + 1)|0;
                 $9493 = ($iij1630$0879|0)<(2);
                 do {
                  if ($9493) {
                   $9494 = (($sj1array627) + ($ij1629$0882<<3)|0);
                   $9495 = (($j1valid628) + ($iij1630$0879)|0);
                   $9496 = HEAP8[$9495>>0]|0;
                   $9497 = ($9496<<24>>24)==(0);
                   if ($9497) {
                    break;
                   }
                   $9498 = (($cj1array626) + ($ij1629$0882<<3)|0);
                   $9499 = +HEAPF64[$9498>>3];
                   $9500 = (($cj1array626) + ($iij1630$0879<<3)|0);
                   $9501 = +HEAPF64[$9500>>3];
                   $9502 = $9499 - $9501;
                   $9503 = (+__Z5IKabsd($9502));
                   $9504 = $9503 < 9.9999999999999995E-7;
                   if (!($9504)) {
                    break;
                   }
                   $9505 = +HEAPF64[$9494>>3];
                   $9506 = (($sj1array627) + ($iij1630$0879<<3)|0);
                   $9507 = +HEAPF64[$9506>>3];
                   $9508 = $9505 - $9507;
                   $9509 = (+__Z5IKabsd($9508));
                   $9510 = $9509 < 9.9999999999999995E-7;
                   if (!($9510)) {
                    break;
                   }
                   HEAP8[$9495>>0] = 0;
                   $9511 = $iij1630$0879&255;
                   HEAP8[$5>>0] = $9511;
                  }
                 } while(0);
                 $9512 = (($j1array625) + ($ij1629$0882<<3)|0);
                 $9513 = +HEAPF64[$9512>>3];
                 HEAPF64[$3>>3] = $9513;
                 $9514 = (($cj1array626) + ($ij1629$0882<<3)|0);
                 $9515 = +HEAPF64[$9514>>3];
                 HEAPF64[$523>>3] = $9515;
                 $9516 = (($sj1array627) + ($ij1629$0882<<3)|0);
                 $9517 = +HEAPF64[$9516>>3];
                 HEAPF64[$524>>3] = $9517;
                 $9518 = +HEAPF64[$3>>3];
                 $9519 = (+__Z5IKcosd($9518));
                 $9520 = (+__Z5IKsind($9518));
                 $9521 = +HEAPF64[$43>>3];
                 $9522 = $9521 * $9521;
                 $9523 = +HEAPF64[$45>>3];
                 $9524 = $9523 * $9523;
                 $9525 = $9296 * $9521;
                 $9526 = $9519 * 1.5243902439024399;
                 $9527 = $9523 * $9294;
                 $9528 = $9520 * $9527;
                 $9529 = $9293 * $9523;
                 $9530 = $9519 * $9529;
                 $9531 = $9519 * $9525;
                 $9532 = $9530 - $9531;
                 $9533 = $9526 * $9524;
                 $9534 = $9519 * 0.0474569359756098;
                 $9535 = $9534 + $9533;
                 $9536 = $9526 * $9522;
                 $9537 = $9536 + $9535;
                 $9538 = $9528 * 0.65600000000000003;
                 $9539 = -0.03113175 - $9538;
                 $9540 = $9520 * -0.65600000000000003;
                 $9541 = $9540 * $9525;
                 $9542 = $9541 + $9539;
                 $9543 = $9542 - $9522;
                 $9544 = $9543 - $9524;
                 $9545 = (+__Z5IKabsd($9532));
                 $9546 = $9545 > 5.0000000000000004E-6;
                 if ($9546) {
                  break;
                 }
                 $9547 = +HEAPF64[$73>>3];
                 $9548 = $9528 + 0.32800000000000001;
                 $9549 = $9520 * $9525;
                 $9550 = $9549 + $9548;
                 $9551 = $9547 * 0.27650000000000002;
                 $9552 = $9550 + $9551;
                 $9553 = (+__Z5IKabsd($9552));
                 $9554 = $9553 > 5.0000000000000004E-6;
                 if ($9554) {
                  break;
                 }
                 $9555 = (+__Z5IKabsd($9537));
                 $9556 = $9555 > 5.0000000000000004E-6;
                 if ($9556) {
                  break;
                 }
                 $9557 = (+__Z5IKabsd($9544));
                 $9558 = $9557 > 5.0000000000000004E-6;
                 if ($9558) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $9559 = (($ij1629$0882) + 1)|0;
               $exitcond1368 = ($9559|0)==(2);
               if ($exitcond1368) {
                break L35;
               } else {
                $ij1629$0882 = $9559;
               }
              }
             }
             $9301 = -$9295;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1148,$9292,$9295,1.9999999999999999E-6);
             $9302 = HEAP8[$510>>0]|0;
             $9303 = ($9302<<24>>24)==(0);
             if ($9303) {
              break L35;
             }
             $9304 = +HEAPF64[$x1148>>3];
             $9305 = -$9304;
             $9306 = +HEAPF64[$43>>3];
             $9307 = $9306 * $9306;
             $9308 = +HEAPF64[$45>>3];
             $9309 = $9308 * $9308;
             $9310 = $9307 + $9309;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$60>>3] = $9310;
             $9311 = +HEAPF64[$43>>3];
             $9312 = +HEAPF64[$26>>3];
             $9313 = $9311 * $9312;
             $9314 = +HEAPF64[$45>>3];
             $9315 = +HEAPF64[$32>>3];
             $9316 = $9314 * $9315;
             $9317 = $9313 + $9316;
             HEAPF64[$61>>3] = $9317;
             $9318 = +HEAPF64[$43>>3];
             $9319 = +HEAPF64[$28>>3];
             $9320 = $9318 * $9319;
             $9321 = +HEAPF64[$45>>3];
             $9322 = +HEAPF64[$34>>3];
             $9323 = $9321 * $9322;
             $9324 = $9320 + $9323;
             HEAPF64[$62>>3] = $9324;
             $9325 = +HEAPF64[$43>>3];
             $9326 = +HEAPF64[$30>>3];
             $9327 = $9325 * $9326;
             $9328 = +HEAPF64[$45>>3];
             $9329 = +HEAPF64[$36>>3];
             $9330 = $9328 * $9329;
             $9331 = $9327 + $9330;
             HEAPF64[$63>>3] = $9331;
             $9332 = +HEAPF64[$38>>3];
             $9333 = $9332 * $9301;
             HEAPF64[$64>>3] = $9333;
             $9334 = +HEAPF64[$43>>3];
             $9335 = +HEAPF64[$38>>3];
             $9336 = $9334 * $9335;
             HEAPF64[$65>>3] = $9336;
             $9337 = +HEAPF64[$40>>3];
             $9338 = $9337 * $9301;
             HEAPF64[$67>>3] = $9338;
             $9339 = +HEAPF64[$43>>3];
             $9340 = +HEAPF64[$40>>3];
             $9341 = $9339 * $9340;
             HEAPF64[$68>>3] = $9341;
             $9342 = +HEAPF64[$42>>3];
             $9343 = $9342 * $9301;
             HEAPF64[$70>>3] = $9343;
             $9344 = +HEAPF64[$43>>3];
             $9345 = +HEAPF64[$42>>3];
             $9346 = $9344 * $9345;
             HEAPF64[$71>>3] = $9346;
             HEAPF64[$488>>3] = $9294;
             HEAPF64[$487>>3] = $9296;
             HEAPF64[$this>>3] = $9305;
             $9347 = +HEAPF64[$43>>3];
             $9348 = $9204 * $9347;
             $9349 = -$9348;
             $9350 = +HEAPF64[$45>>3];
             $9351 = $9204 * $9350;
             $9352 = (+__Z5IKabsd(0.0));
             $9353 = $9352 < 9.9999999999999995E-7;
             if ($9353) {
              break L35;
             }
             HEAP16[$j1valid621>>1] = 0;
             HEAP8[$6>>0] = 2;
             $9354 = +HEAPF64[$43>>3];
             $9355 = $9351 * $9354;
             $9356 = +HEAPF64[$45>>3];
             $9357 = $9356 * $9349;
             $9358 = $9355 + $9357;
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1150,$9358,-1);
             $9359 = HEAP8[$511>>0]|0;
             $9360 = ($9359<<24>>24)==(0);
             if ($9360) {
              break L35;
             }
             $9361 = +HEAPF64[$x1150>>3];
             $9362 = $9361 * 0.32800000000000001;
             $9363 = +HEAPF64[$73>>3];
             $9364 = $9363 * -0.27650000000000002;
             $9365 = $9361 * $9364;
             $9366 = $9365 - $9362;
             HEAPF64[$sj1array620>>3] = $9366;
             $9367 = !($9366 >= -1.0000020000000001);
             $9368 = !($9366 <= 1.0000020000000001);
             $or$cond337 = $9367 | $9368;
             do {
              if ($or$cond337) {
               $9378 = (__Z13__DOUBLE_BITSd($9366)|0);
               $9379 = tempRet0;
               $9380 = $9379 & 2147483647;
               $9381 = ($9380>>>0)>(2146435072);
               $9382 = ($9378>>>0)>(0);
               $9383 = ($9380|0)==(2146435072);
               $9384 = $9383 & $9382;
               $9385 = $9381 | $9384;
               if (!($9385)) {
                $ij1622$0886 = 0;
                break;
               }
               HEAP8[$j1valid621>>0] = 1;
               HEAPF64[$cj1array619>>3] = 1.0;
               HEAPF64[$sj1array620>>3] = 0.0;
               HEAPF64[$j1array618>>3] = 0.0;
               $ij1622$0886 = 0;
              } else {
               HEAP8[$512>>0] = 1;
               HEAP8[$j1valid621>>0] = 1;
               $9369 = +HEAPF64[$sj1array620>>3];
               $9370 = (+__Z6IKasind($9369));
               HEAPF64[$j1array618>>3] = $9370;
               $9371 = (+__Z5IKcosd($9370));
               HEAPF64[$cj1array619>>3] = $9371;
               $9372 = +HEAPF64[$sj1array620>>3];
               HEAPF64[$513>>3] = $9372;
               $9373 = +HEAPF64[$j1array618>>3];
               $9374 = $9373 > 0.0;
               $$v40 = $9374 ? 3.14159265358979 : -3.14159265358979;
               $9375 = $$v40 - $9373;
               HEAPF64[$514>>3] = $9375;
               $9376 = +HEAPF64[$cj1array619>>3];
               $9377 = -$9376;
               HEAPF64[$515>>3] = $9377;
               $ij1622$0886 = 0;
              }
             } while(0);
             while(1) {
              $9386 = (($j1valid621) + ($ij1622$0886)|0);
              $9387 = HEAP8[$9386>>0]|0;
              $9388 = ($9387<<24>>24)==(0);
              do {
               if (!($9388)) {
                $9389 = $ij1622$0886&255;
                HEAP8[$4>>0] = $9389;
                HEAP8[$5>>0] = -1;
                $iij1623$0883 = (($ij1622$0886) + 1)|0;
                $9390 = ($iij1623$0883|0)<(2);
                do {
                 if ($9390) {
                  $9391 = (($sj1array620) + ($ij1622$0886<<3)|0);
                  $9392 = (($j1valid621) + ($iij1623$0883)|0);
                  $9393 = HEAP8[$9392>>0]|0;
                  $9394 = ($9393<<24>>24)==(0);
                  if ($9394) {
                   break;
                  }
                  $9395 = (($cj1array619) + ($ij1622$0886<<3)|0);
                  $9396 = +HEAPF64[$9395>>3];
                  $9397 = (($cj1array619) + ($iij1623$0883<<3)|0);
                  $9398 = +HEAPF64[$9397>>3];
                  $9399 = $9396 - $9398;
                  $9400 = (+__Z5IKabsd($9399));
                  $9401 = $9400 < 9.9999999999999995E-7;
                  if (!($9401)) {
                   break;
                  }
                  $9402 = +HEAPF64[$9391>>3];
                  $9403 = (($sj1array620) + ($iij1623$0883<<3)|0);
                  $9404 = +HEAPF64[$9403>>3];
                  $9405 = $9402 - $9404;
                  $9406 = (+__Z5IKabsd($9405));
                  $9407 = $9406 < 9.9999999999999995E-7;
                  if (!($9407)) {
                   break;
                  }
                  HEAP8[$9392>>0] = 0;
                  $9408 = $iij1623$0883&255;
                  HEAP8[$5>>0] = $9408;
                 }
                } while(0);
                $9409 = (($j1array618) + ($ij1622$0886<<3)|0);
                $9410 = +HEAPF64[$9409>>3];
                HEAPF64[$3>>3] = $9410;
                $9411 = (($cj1array619) + ($ij1622$0886<<3)|0);
                $9412 = +HEAPF64[$9411>>3];
                HEAPF64[$516>>3] = $9412;
                $9413 = (($sj1array620) + ($ij1622$0886<<3)|0);
                $9414 = +HEAPF64[$9413>>3];
                HEAPF64[$517>>3] = $9414;
                $9415 = +HEAPF64[$3>>3];
                $9416 = (+__Z5IKcosd($9415));
                $9417 = (+__Z5IKsind($9415));
                $9418 = +HEAPF64[$43>>3];
                $9419 = $9418 * $9418;
                $9420 = +HEAPF64[$45>>3];
                $9421 = $9420 * $9420;
                $9422 = $9420 * $9349;
                $9423 = $9351 * $9418;
                $9424 = $9416 * 1.5243902439024399;
                $9425 = $9417 * 0.65600000000000003;
                $9426 = -$9416;
                $9427 = $9423 * $9426;
                $9428 = $9422 * $9426;
                $9429 = $9427 + $9428;
                $9430 = $9424 * $9419;
                $9431 = $9416 * 0.0474569359756098;
                $9432 = $9431 + $9430;
                $9433 = $9424 * $9421;
                $9434 = $9432 + $9433;
                $9435 = $9425 * $9422;
                $9436 = -0.03113175 - $9435;
                $9437 = $9436 - $9419;
                $9438 = $9437 - $9421;
                $9439 = $9425 * $9423;
                $9440 = $9438 - $9439;
                $9441 = (+__Z5IKabsd($9429));
                $9442 = $9441 > 5.0000000000000004E-6;
                if ($9442) {
                 break;
                }
                $9443 = +HEAPF64[$73>>3];
                $9444 = $9443 * -0.27650000000000002;
                $9445 = $9417 * $9444;
                $9446 = $9445 - $9423;
                $9447 = $9417 * 0.32800000000000001;
                $9448 = $9446 - $9447;
                $9449 = $9448 - $9422;
                $9450 = (+__Z5IKabsd($9449));
                $9451 = $9450 > 5.0000000000000004E-6;
                if ($9451) {
                 break;
                }
                $9452 = (+__Z5IKabsd($9434));
                $9453 = $9452 > 5.0000000000000004E-6;
                if ($9453) {
                 break;
                }
                $9454 = (+__Z5IKabsd($9440));
                $9455 = $9454 > 5.0000000000000004E-6;
                if ($9455) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $9456 = (($ij1622$0886) + 1)|0;
              $exitcond1369 = ($9456|0)==(2);
              if ($exitcond1369) {
               break L35;
              } else {
               $ij1622$0886 = $9456;
              }
             }
            }
           } while(0);
           $9560 = +HEAPF64[$43>>3];
           $9561 = $9560 * $9560;
           $9562 = +HEAPF64[$45>>3];
           $9563 = $9562 * $9562;
           $9564 = $9561 + $9563;
           $9565 = (+__Z5IKabsd($9564));
           $9566 = $9565 == 0.0;
           if ($9566) {
            break L35;
           }
           $9567 = (+Math_pow((+$9564),-0.5));
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1171,$9560,$9562,1.9999999999999999E-6);
           $9568 = HEAP8[$489>>0]|0;
           $9569 = ($9568<<24>>24)==(0);
           if ($9569) {
            break L35;
           }
           $9570 = +HEAPF64[$43>>3];
           $9571 = $9567 * $9570;
           $9572 = +HEAPF64[$45>>3];
           $9573 = $9567 * $9572;
           $9574 = -$9573;
           $9575 = +HEAPF64[$74>>3];
           $9576 = $9575 * 0.27650000000000002;
           $9577 = $9570 * $9571;
           $9578 = $9572 * $9574;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1175,$9570,$9572,1.9999999999999999E-6);
           $9579 = HEAP8[$490>>0]|0;
           $9580 = ($9579<<24>>24)==(0);
           if ($9580) {
            break L35;
           }
           $9581 = +HEAPF64[$x1175>>3];
           $9582 = $9581 + -3.14159265358979;
           $9583 = +HEAPF64[$this>>3];
           $9584 = $9582 + $9583;
           $9585 = (+__Z5IKabsd($9584));
           $9586 = $9585 + 3.14159265358979;
           $9587 = (+__Z6IKfmoddd($9586,6.2831853071795898));
           $9588 = $9587 + -3.14159265358979;
           $9589 = +HEAPF64[$43>>3];
           $9590 = +HEAPF64[$45>>3];
           $9591 = $9578 + $9576;
           $9592 = $9591 - $9577;
           $9593 = $9577 - $9576;
           $9594 = $9593 - $9578;
           $9595 = (+__Z5IKabsd($9588));
           $9596 = $9595 < 9.9999999999999995E-7;
           if (!($9596)) {
            break L35;
           }
           $9597 = +HEAPF64[$73>>3];
           $9598 = $9589 * $9589;
           $9599 = 0.18403625000000001 - $9598;
           $9600 = $9597 * 0.18138399999999999;
           $9601 = $9599 + $9600;
           $9602 = $9590 * $9590;
           $9603 = $9601 - $9602;
           $9604 = (+__Z5IKabsd($9603));
           $9605 = $9604 < 9.9999999999999995E-7;
           if (!($9605)) {
            break L35;
           }
           $9606 = (+__Z5IKabsd($9592));
           $9607 = $9606 < 9.9999999999999995E-7;
           if (!($9607)) {
            break L35;
           }
           $9608 = (+__Z5IKabsd($9594));
           $9609 = $9608 < 9.9999999999999995E-7;
           if (!($9609)) {
            break L35;
           }
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1180,$9589,$9590,1.9999999999999999E-6);
           $9610 = HEAP8[$491>>0]|0;
           $9611 = ($9610<<24>>24)==(0);
           if ($9611) {
            break L35;
           }
           $9612 = +HEAPF64[$x1180>>3];
           $9613 = +HEAPF64[$45>>3];
           $9614 = -$9613;
           $9615 = +HEAPF64[$43>>3];
           $9616 = $9615 * $9615;
           $9617 = $9613 * $9613;
           $9618 = $9617 + $9616;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$60>>3] = $9618;
           $9619 = +HEAPF64[$43>>3];
           $9620 = +HEAPF64[$26>>3];
           $9621 = $9619 * $9620;
           $9622 = +HEAPF64[$45>>3];
           $9623 = +HEAPF64[$32>>3];
           $9624 = $9622 * $9623;
           $9625 = $9621 + $9624;
           HEAPF64[$61>>3] = $9625;
           $9626 = +HEAPF64[$43>>3];
           $9627 = +HEAPF64[$28>>3];
           $9628 = $9626 * $9627;
           $9629 = +HEAPF64[$45>>3];
           $9630 = +HEAPF64[$34>>3];
           $9631 = $9629 * $9630;
           $9632 = $9628 + $9631;
           HEAPF64[$62>>3] = $9632;
           $9633 = +HEAPF64[$43>>3];
           $9634 = +HEAPF64[$30>>3];
           $9635 = $9633 * $9634;
           $9636 = +HEAPF64[$45>>3];
           $9637 = +HEAPF64[$36>>3];
           $9638 = $9636 * $9637;
           $9639 = $9635 + $9638;
           HEAPF64[$63>>3] = $9639;
           $9640 = +HEAPF64[$38>>3];
           $9641 = $9640 * $9614;
           HEAPF64[$64>>3] = $9641;
           $9642 = +HEAPF64[$43>>3];
           $9643 = +HEAPF64[$38>>3];
           $9644 = $9642 * $9643;
           HEAPF64[$65>>3] = $9644;
           $9645 = +HEAPF64[$40>>3];
           $9646 = $9645 * $9614;
           HEAPF64[$67>>3] = $9646;
           $9647 = +HEAPF64[$43>>3];
           $9648 = +HEAPF64[$40>>3];
           $9649 = $9647 * $9648;
           HEAPF64[$68>>3] = $9649;
           $9650 = +HEAPF64[$42>>3];
           $9651 = $9650 * $9614;
           HEAPF64[$70>>3] = $9651;
           $9652 = +HEAPF64[$43>>3];
           $9653 = +HEAPF64[$42>>3];
           $9654 = $9652 * $9653;
           HEAPF64[$71>>3] = $9654;
           HEAPF64[$488>>3] = $9571;
           HEAPF64[$487>>3] = $9574;
           $9655 = 3.1415926500000002 - $9612;
           HEAPF64[$this>>3] = $9655;
           $9656 = +HEAPF64[$43>>3];
           $9657 = $9567 * $9656;
           $9658 = $9567 * $9614;
           $9659 = +HEAPF64[$73>>3];
           $9660 = -1.1862567811934901 - $9659;
           $9661 = (+__Z5IKabsd($9660));
           $9662 = $9661 < 9.9999999999999995E-7;
           if (!($9662)) {
            HEAP16[$j1valid654>>1] = 0;
            HEAP8[$6>>0] = 2;
            $9819 = +HEAPF64[$73>>3];
            $9820 = $9819 * 0.27650000000000002;
            $9821 = -0.32800000000000001 - $9820;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1198,$9821,-1);
            $9822 = HEAP8[$500>>0]|0;
            $9823 = ($9822<<24>>24)==(0);
            if ($9823) {
             break L35;
            }
            $9824 = +HEAPF64[$x1198>>3];
            $9825 = +HEAPF64[$45>>3];
            $9826 = $9657 * $9825;
            $9827 = $9824 * $9826;
            $9828 = +HEAPF64[$43>>3];
            $9829 = $9658 * $9828;
            $9830 = $9824 * $9829;
            $9831 = $9827 + $9830;
            HEAPF64[$sj1array653>>3] = $9831;
            $9832 = !($9831 >= -1.0000020000000001);
            $9833 = !($9831 <= 1.0000020000000001);
            $or$cond348 = $9832 | $9833;
            do {
             if ($or$cond348) {
              $9843 = (__Z13__DOUBLE_BITSd($9831)|0);
              $9844 = tempRet0;
              $9845 = $9844 & 2147483647;
              $9846 = ($9845>>>0)>(2146435072);
              $9847 = ($9843>>>0)>(0);
              $9848 = ($9845|0)==(2146435072);
              $9849 = $9848 & $9847;
              $9850 = $9846 | $9849;
              if (!($9850)) {
               $ij1655$0890 = 0;
               break;
              }
              HEAP8[$j1valid654>>0] = 1;
              HEAPF64[$cj1array652>>3] = 1.0;
              HEAPF64[$sj1array653>>3] = 0.0;
              HEAPF64[$j1array651>>3] = 0.0;
              $ij1655$0890 = 0;
             } else {
              HEAP8[$501>>0] = 1;
              HEAP8[$j1valid654>>0] = 1;
              $9834 = +HEAPF64[$sj1array653>>3];
              $9835 = (+__Z6IKasind($9834));
              HEAPF64[$j1array651>>3] = $9835;
              $9836 = (+__Z5IKcosd($9835));
              HEAPF64[$cj1array652>>3] = $9836;
              $9837 = +HEAPF64[$sj1array653>>3];
              HEAPF64[$502>>3] = $9837;
              $9838 = +HEAPF64[$j1array651>>3];
              $9839 = $9838 > 0.0;
              $$v34 = $9839 ? 3.14159265358979 : -3.14159265358979;
              $9840 = $$v34 - $9838;
              HEAPF64[$503>>3] = $9840;
              $9841 = +HEAPF64[$cj1array652>>3];
              $9842 = -$9841;
              HEAPF64[$504>>3] = $9842;
              $ij1655$0890 = 0;
             }
            } while(0);
            while(1) {
             $9851 = (($j1valid654) + ($ij1655$0890)|0);
             $9852 = HEAP8[$9851>>0]|0;
             $9853 = ($9852<<24>>24)==(0);
             do {
              if (!($9853)) {
               $9854 = $ij1655$0890&255;
               HEAP8[$4>>0] = $9854;
               HEAP8[$5>>0] = -1;
               $iij1656$0887 = (($ij1655$0890) + 1)|0;
               $9855 = ($iij1656$0887|0)<(2);
               do {
                if ($9855) {
                 $9856 = (($sj1array653) + ($ij1655$0890<<3)|0);
                 $9857 = (($j1valid654) + ($iij1656$0887)|0);
                 $9858 = HEAP8[$9857>>0]|0;
                 $9859 = ($9858<<24>>24)==(0);
                 if ($9859) {
                  break;
                 }
                 $9860 = (($cj1array652) + ($ij1655$0890<<3)|0);
                 $9861 = +HEAPF64[$9860>>3];
                 $9862 = (($cj1array652) + ($iij1656$0887<<3)|0);
                 $9863 = +HEAPF64[$9862>>3];
                 $9864 = $9861 - $9863;
                 $9865 = (+__Z5IKabsd($9864));
                 $9866 = $9865 < 9.9999999999999995E-7;
                 if (!($9866)) {
                  break;
                 }
                 $9867 = +HEAPF64[$9856>>3];
                 $9868 = (($sj1array653) + ($iij1656$0887<<3)|0);
                 $9869 = +HEAPF64[$9868>>3];
                 $9870 = $9867 - $9869;
                 $9871 = (+__Z5IKabsd($9870));
                 $9872 = $9871 < 9.9999999999999995E-7;
                 if (!($9872)) {
                  break;
                 }
                 HEAP8[$9857>>0] = 0;
                 $9873 = $iij1656$0887&255;
                 HEAP8[$5>>0] = $9873;
                }
               } while(0);
               $9874 = (($j1array651) + ($ij1655$0890<<3)|0);
               $9875 = +HEAPF64[$9874>>3];
               HEAPF64[$3>>3] = $9875;
               $9876 = (($cj1array652) + ($ij1655$0890<<3)|0);
               $9877 = +HEAPF64[$9876>>3];
               HEAPF64[$505>>3] = $9877;
               $9878 = (($sj1array653) + ($ij1655$0890<<3)|0);
               $9879 = +HEAPF64[$9878>>3];
               HEAPF64[$506>>3] = $9879;
               $9880 = +HEAPF64[$3>>3];
               $9881 = (+__Z5IKcosd($9880));
               $9882 = (+__Z5IKsind($9880));
               $9883 = +HEAPF64[$43>>3];
               $9884 = $9883 * $9883;
               $9885 = +HEAPF64[$45>>3];
               $9886 = $9885 * $9885;
               $9887 = $9658 * $9883;
               $9888 = $9881 * 1.5243902439024399;
               $9889 = $9657 * $9885;
               $9890 = $9882 * $9889;
               $9891 = $9881 * $9887;
               $9892 = $9881 * $9889;
               $9893 = -$9892;
               $9894 = $9893 - $9891;
               $9895 = $9888 * $9886;
               $9896 = $9881 * 0.0474569359756098;
               $9897 = $9896 + $9895;
               $9898 = $9888 * $9884;
               $9899 = $9898 + $9897;
               $9900 = -0.03113175 - $9886;
               $9901 = $9900 - $9884;
               $9902 = $9882 * -0.65600000000000003;
               $9903 = $9902 * $9887;
               $9904 = $9903 + $9901;
               $9905 = $9890 * 0.65600000000000003;
               $9906 = $9904 - $9905;
               $9907 = (+__Z5IKabsd($9894));
               $9908 = $9907 > 5.0000000000000004E-6;
               if ($9908) {
                break;
               }
               $9909 = +HEAPF64[$73>>3];
               $9910 = $9890 + 0.32800000000000001;
               $9911 = $9909 * 0.27650000000000002;
               $9912 = $9910 + $9911;
               $9913 = $9882 * $9887;
               $9914 = $9913 + $9912;
               $9915 = (+__Z5IKabsd($9914));
               $9916 = $9915 > 5.0000000000000004E-6;
               if ($9916) {
                break;
               }
               $9917 = (+__Z5IKabsd($9899));
               $9918 = $9917 > 5.0000000000000004E-6;
               if ($9918) {
                break;
               }
               $9919 = (+__Z5IKabsd($9906));
               $9920 = $9919 > 5.0000000000000004E-6;
               if ($9920) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $9921 = (($ij1655$0890) + 1)|0;
             $exitcond1370 = ($9921|0)==(2);
             if ($exitcond1370) {
              break L35;
             } else {
              $ij1655$0890 = $9921;
             }
            }
           }
           $9663 = +HEAPF64[$45>>3];
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1185,$9656,$9663,1.9999999999999999E-6);
           $9664 = HEAP8[$492>>0]|0;
           $9665 = ($9664<<24>>24)==(0);
           if ($9665) {
            break L35;
           }
           $9666 = +HEAPF64[$x1185>>3];
           $9667 = +HEAPF64[$45>>3];
           $9668 = -$9667;
           $9669 = +HEAPF64[$43>>3];
           $9670 = $9669 * $9669;
           $9671 = $9667 * $9667;
           $9672 = $9671 + $9670;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$60>>3] = $9672;
           $9673 = +HEAPF64[$43>>3];
           $9674 = +HEAPF64[$26>>3];
           $9675 = $9673 * $9674;
           $9676 = +HEAPF64[$45>>3];
           $9677 = +HEAPF64[$32>>3];
           $9678 = $9676 * $9677;
           $9679 = $9675 + $9678;
           HEAPF64[$61>>3] = $9679;
           $9680 = +HEAPF64[$43>>3];
           $9681 = +HEAPF64[$28>>3];
           $9682 = $9680 * $9681;
           $9683 = +HEAPF64[$45>>3];
           $9684 = +HEAPF64[$34>>3];
           $9685 = $9683 * $9684;
           $9686 = $9682 + $9685;
           HEAPF64[$62>>3] = $9686;
           $9687 = +HEAPF64[$43>>3];
           $9688 = +HEAPF64[$30>>3];
           $9689 = $9687 * $9688;
           $9690 = +HEAPF64[$45>>3];
           $9691 = +HEAPF64[$36>>3];
           $9692 = $9690 * $9691;
           $9693 = $9689 + $9692;
           HEAPF64[$63>>3] = $9693;
           $9694 = +HEAPF64[$38>>3];
           $9695 = $9694 * $9668;
           HEAPF64[$64>>3] = $9695;
           $9696 = +HEAPF64[$43>>3];
           $9697 = +HEAPF64[$38>>3];
           $9698 = $9696 * $9697;
           HEAPF64[$65>>3] = $9698;
           $9699 = +HEAPF64[$40>>3];
           $9700 = $9699 * $9668;
           HEAPF64[$67>>3] = $9700;
           $9701 = +HEAPF64[$43>>3];
           $9702 = +HEAPF64[$40>>3];
           $9703 = $9701 * $9702;
           HEAPF64[$68>>3] = $9703;
           $9704 = +HEAPF64[$42>>3];
           $9705 = $9704 * $9668;
           HEAPF64[$70>>3] = $9705;
           $9706 = +HEAPF64[$43>>3];
           $9707 = +HEAPF64[$42>>3];
           $9708 = $9706 * $9707;
           HEAPF64[$71>>3] = $9708;
           HEAPF64[$488>>3] = $9657;
           HEAPF64[$487>>3] = $9658;
           $9709 = 3.1415926500000002 - $9666;
           HEAPF64[$this>>3] = $9709;
           $9710 = +HEAPF64[$43>>3];
           $9711 = $9567 * $9710;
           $9712 = $9567 * $9668;
           $9713 = (+__Z5IKabsd(0.0));
           $9714 = $9713 < 9.9999999999999995E-7;
           if ($9714) {
            break L35;
           }
           HEAP16[$j1valid647>>1] = 0;
           HEAP8[$6>>0] = 2;
           $9715 = +HEAPF64[$43>>3];
           $9716 = $9712 * $9715;
           $9717 = +HEAPF64[$45>>3];
           $9718 = $9711 * $9717;
           $9719 = $9716 + $9718;
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1187,$9719,-1);
           $9720 = HEAP8[$493>>0]|0;
           $9721 = ($9720<<24>>24)==(0);
           if ($9721) {
            break L35;
           }
           $9722 = +HEAPF64[$x1187>>3];
           $9723 = $9722 * 0.32800000000000001;
           $9724 = +HEAPF64[$73>>3];
           $9725 = $9724 * -0.27650000000000002;
           $9726 = $9722 * $9725;
           $9727 = $9726 - $9723;
           HEAPF64[$sj1array646>>3] = $9727;
           $9728 = !($9727 >= -1.0000020000000001);
           $9729 = !($9727 <= 1.0000020000000001);
           $or$cond347 = $9728 | $9729;
           do {
            if ($or$cond347) {
             $9739 = (__Z13__DOUBLE_BITSd($9727)|0);
             $9740 = tempRet0;
             $9741 = $9740 & 2147483647;
             $9742 = ($9741>>>0)>(2146435072);
             $9743 = ($9739>>>0)>(0);
             $9744 = ($9741|0)==(2146435072);
             $9745 = $9744 & $9743;
             $9746 = $9742 | $9745;
             if (!($9746)) {
              $ij1648$0894 = 0;
              break;
             }
             HEAP8[$j1valid647>>0] = 1;
             HEAPF64[$cj1array645>>3] = 1.0;
             HEAPF64[$sj1array646>>3] = 0.0;
             HEAPF64[$j1array644>>3] = 0.0;
             $ij1648$0894 = 0;
            } else {
             HEAP8[$494>>0] = 1;
             HEAP8[$j1valid647>>0] = 1;
             $9730 = +HEAPF64[$sj1array646>>3];
             $9731 = (+__Z6IKasind($9730));
             HEAPF64[$j1array644>>3] = $9731;
             $9732 = (+__Z5IKcosd($9731));
             HEAPF64[$cj1array645>>3] = $9732;
             $9733 = +HEAPF64[$sj1array646>>3];
             HEAPF64[$495>>3] = $9733;
             $9734 = +HEAPF64[$j1array644>>3];
             $9735 = $9734 > 0.0;
             $$v36 = $9735 ? 3.14159265358979 : -3.14159265358979;
             $9736 = $$v36 - $9734;
             HEAPF64[$496>>3] = $9736;
             $9737 = +HEAPF64[$cj1array645>>3];
             $9738 = -$9737;
             HEAPF64[$497>>3] = $9738;
             $ij1648$0894 = 0;
            }
           } while(0);
           while(1) {
            $9747 = (($j1valid647) + ($ij1648$0894)|0);
            $9748 = HEAP8[$9747>>0]|0;
            $9749 = ($9748<<24>>24)==(0);
            do {
             if (!($9749)) {
              $9750 = $ij1648$0894&255;
              HEAP8[$4>>0] = $9750;
              HEAP8[$5>>0] = -1;
              $iij1649$0891 = (($ij1648$0894) + 1)|0;
              $9751 = ($iij1649$0891|0)<(2);
              do {
               if ($9751) {
                $9752 = (($sj1array646) + ($ij1648$0894<<3)|0);
                $9753 = (($j1valid647) + ($iij1649$0891)|0);
                $9754 = HEAP8[$9753>>0]|0;
                $9755 = ($9754<<24>>24)==(0);
                if ($9755) {
                 break;
                }
                $9756 = (($cj1array645) + ($ij1648$0894<<3)|0);
                $9757 = +HEAPF64[$9756>>3];
                $9758 = (($cj1array645) + ($iij1649$0891<<3)|0);
                $9759 = +HEAPF64[$9758>>3];
                $9760 = $9757 - $9759;
                $9761 = (+__Z5IKabsd($9760));
                $9762 = $9761 < 9.9999999999999995E-7;
                if (!($9762)) {
                 break;
                }
                $9763 = +HEAPF64[$9752>>3];
                $9764 = (($sj1array646) + ($iij1649$0891<<3)|0);
                $9765 = +HEAPF64[$9764>>3];
                $9766 = $9763 - $9765;
                $9767 = (+__Z5IKabsd($9766));
                $9768 = $9767 < 9.9999999999999995E-7;
                if (!($9768)) {
                 break;
                }
                HEAP8[$9753>>0] = 0;
                $9769 = $iij1649$0891&255;
                HEAP8[$5>>0] = $9769;
               }
              } while(0);
              $9770 = (($j1array644) + ($ij1648$0894<<3)|0);
              $9771 = +HEAPF64[$9770>>3];
              HEAPF64[$3>>3] = $9771;
              $9772 = (($cj1array645) + ($ij1648$0894<<3)|0);
              $9773 = +HEAPF64[$9772>>3];
              HEAPF64[$498>>3] = $9773;
              $9774 = (($sj1array646) + ($ij1648$0894<<3)|0);
              $9775 = +HEAPF64[$9774>>3];
              HEAPF64[$499>>3] = $9775;
              $9776 = +HEAPF64[$3>>3];
              $9777 = (+__Z5IKcosd($9776));
              $9778 = (+__Z5IKsind($9776));
              $9779 = +HEAPF64[$43>>3];
              $9780 = $9779 * $9779;
              $9781 = +HEAPF64[$45>>3];
              $9782 = $9781 * $9781;
              $9783 = $9711 * $9781;
              $9784 = $9712 * $9779;
              $9785 = $9778 * 0.65600000000000003;
              $9786 = $9777 * 1.5243902439024399;
              $9787 = -$9784;
              $9788 = $9777 * $9787;
              $9789 = -$9783;
              $9790 = $9777 * $9789;
              $9791 = $9788 + $9790;
              $9792 = $9777 * 0.0474569359756098;
              $9793 = $9786 * $9782;
              $9794 = $9792 + $9793;
              $9795 = $9786 * $9780;
              $9796 = $9795 + $9794;
              $9797 = $9785 * $9787;
              $9798 = $9797 + -0.03113175;
              $9799 = $9785 * $9789;
              $9800 = $9798 + $9799;
              $9801 = $9800 - $9782;
              $9802 = $9801 - $9780;
              $9803 = (+__Z5IKabsd($9791));
              $9804 = $9803 > 5.0000000000000004E-6;
              if ($9804) {
               break;
              }
              $9805 = +HEAPF64[$73>>3];
              $9806 = $9778 * 0.32800000000000001;
              $9807 = $9805 * -0.27650000000000002;
              $9808 = $9778 * $9807;
              $9809 = $9808 - $9806;
              $9810 = $9809 - $9784;
              $9811 = $9810 - $9783;
              $9812 = (+__Z5IKabsd($9811));
              $9813 = $9812 > 5.0000000000000004E-6;
              if ($9813) {
               break;
              }
              $9814 = (+__Z5IKabsd($9796));
              $9815 = $9814 > 5.0000000000000004E-6;
              if ($9815) {
               break;
              }
              $9816 = (+__Z5IKabsd($9802));
              $9817 = $9816 > 5.0000000000000004E-6;
              if ($9817) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $9818 = (($ij1648$0894) + 1)|0;
            $exitcond1371 = ($9818|0)==(2);
            if ($exitcond1371) {
             break L35;
            } else {
             $ij1648$0894 = $9818;
            }
           }
          }
         } while(0);
         $10138 = +HEAPF64[$74>>3];
         $10139 = $10138 * -0.27650000000000002;
         $10140 = +HEAPF64[$43>>3];
         $10141 = +HEAPF64[$488>>3];
         $10142 = $10140 * $10141;
         $10143 = $10139 - $10142;
         $10144 = +HEAPF64[$487>>3];
         $10145 = +HEAPF64[$45>>3];
         $10146 = $10144 * $10145;
         $10147 = $10143 + $10146;
         $10148 = +HEAPF64[$47>>3];
         $10149 = (+__Z5IKabsd($10148));
         $10150 = +HEAPF64[$22>>3];
         $10151 = $10150 + 4.7123889803846897;
         $10152 = (+__Z6IKfmoddd($10151,6.2831853071795898));
         $10153 = $10152 + -3.14159265358979;
         $10154 = (+__Z5IKabsd($10153));
         $10155 = $10149 + $10154;
         $10156 = (+__Z5IKabsd($10155));
         $10157 = $10156 < 9.9999999999999995E-7;
         do {
          if ($10157) {
           $10158 = +HEAPF64[$60>>3];
           $10159 = +HEAPF64[$73>>3];
           $10160 = $10159 * 0.18138399999999999;
           $10161 = $10160 + 0.18403625000000001;
           $10162 = $10161 - $10158;
           $10163 = (+__Z5IKabsd($10162));
           $10164 = $10163 < 9.9999999999999995E-7;
           if (!($10164)) {
            break;
           }
           $10165 = (+__Z5IKabsd($10147));
           $10166 = $10165 < 9.9999999999999995E-7;
           if (!($10166)) {
            break;
           }
           $10167 = -$10145;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           $10168 = +HEAPF64[$43>>3];
           $10169 = $10168 * $10168;
           $10170 = +HEAPF64[$45>>3];
           $10171 = $10170 * $10170;
           $10172 = $10169 + $10171;
           HEAPF64[$60>>3] = $10172;
           $10173 = +HEAPF64[$43>>3];
           $10174 = +HEAPF64[$26>>3];
           $10175 = $10173 * $10174;
           $10176 = +HEAPF64[$45>>3];
           $10177 = +HEAPF64[$32>>3];
           $10178 = $10176 * $10177;
           $10179 = $10175 + $10178;
           HEAPF64[$61>>3] = $10179;
           $10180 = +HEAPF64[$43>>3];
           $10181 = +HEAPF64[$28>>3];
           $10182 = $10180 * $10181;
           $10183 = +HEAPF64[$45>>3];
           $10184 = +HEAPF64[$34>>3];
           $10185 = $10183 * $10184;
           $10186 = $10182 + $10185;
           HEAPF64[$62>>3] = $10186;
           $10187 = +HEAPF64[$43>>3];
           $10188 = +HEAPF64[$30>>3];
           $10189 = $10187 * $10188;
           $10190 = +HEAPF64[$45>>3];
           $10191 = +HEAPF64[$36>>3];
           $10192 = $10190 * $10191;
           $10193 = $10189 + $10192;
           HEAPF64[$63>>3] = $10193;
           $10194 = +HEAPF64[$38>>3];
           $10195 = $10194 * $10167;
           HEAPF64[$64>>3] = $10195;
           $10196 = +HEAPF64[$43>>3];
           $10197 = +HEAPF64[$38>>3];
           $10198 = $10196 * $10197;
           HEAPF64[$65>>3] = $10198;
           $10199 = +HEAPF64[$40>>3];
           $10200 = $10199 * $10167;
           HEAPF64[$67>>3] = $10200;
           $10201 = +HEAPF64[$43>>3];
           $10202 = +HEAPF64[$40>>3];
           $10203 = $10201 * $10202;
           HEAPF64[$68>>3] = $10203;
           $10204 = +HEAPF64[$42>>3];
           $10205 = $10204 * $10167;
           HEAPF64[$70>>3] = $10205;
           $10206 = +HEAPF64[$43>>3];
           $10207 = +HEAPF64[$42>>3];
           $10208 = $10206 * $10207;
           HEAPF64[$71>>3] = $10208;
           $10209 = +HEAPF64[$73>>3];
           $10210 = -1.1862567811934901 - $10209;
           $10211 = (+__Z5IKabsd($10210));
           $10212 = $10211 < 9.9999999999999995E-7;
           if (!($10212)) {
            HEAP16[$j1valid740>>1] = 0;
            HEAP8[$6>>0] = 2;
            $11082 = +HEAPF64[$73>>3];
            $11083 = $11082 * 0.27650000000000002;
            $11084 = -0.32800000000000001 - $11083;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1312,$11084,-1);
            $11085 = HEAP8[$582>>0]|0;
            $11086 = ($11085<<24>>24)==(0);
            if ($11086) {
             break L35;
            }
            $11087 = +HEAPF64[$x1312>>3];
            $11088 = +HEAPF64[$487>>3];
            $11089 = +HEAPF64[$43>>3];
            $11090 = $11088 * $11089;
            $11091 = $11087 * $11090;
            $11092 = +HEAPF64[$45>>3];
            $11093 = +HEAPF64[$488>>3];
            $11094 = $11092 * $11093;
            $11095 = $11087 * $11094;
            $11096 = $11091 + $11095;
            HEAPF64[$sj1array739>>3] = $11096;
            $11097 = !($11096 >= -1.0000020000000001);
            $11098 = !($11096 <= 1.0000020000000001);
            $or$cond388 = $11097 | $11098;
            do {
             if ($or$cond388) {
              $11108 = (__Z13__DOUBLE_BITSd($11096)|0);
              $11109 = tempRet0;
              $11110 = $11109 & 2147483647;
              $11111 = ($11110>>>0)>(2146435072);
              $11112 = ($11108>>>0)>(0);
              $11113 = ($11110|0)==(2146435072);
              $11114 = $11113 & $11112;
              $11115 = $11111 | $11114;
              if (!($11115)) {
               $ij1741$0850 = 0;
               break;
              }
              HEAP8[$j1valid740>>0] = 1;
              HEAPF64[$cj1array738>>3] = 1.0;
              HEAPF64[$sj1array739>>3] = 0.0;
              HEAPF64[$j1array737>>3] = 0.0;
              $ij1741$0850 = 0;
             } else {
              HEAP8[$583>>0] = 1;
              HEAP8[$j1valid740>>0] = 1;
              $11099 = +HEAPF64[$sj1array739>>3];
              $11100 = (+__Z6IKasind($11099));
              HEAPF64[$j1array737>>3] = $11100;
              $11101 = (+__Z5IKcosd($11100));
              HEAPF64[$cj1array738>>3] = $11101;
              $11102 = +HEAPF64[$sj1array739>>3];
              HEAPF64[$584>>3] = $11102;
              $11103 = +HEAPF64[$j1array737>>3];
              $11104 = $11103 > 0.0;
              $$v18 = $11104 ? 3.14159265358979 : -3.14159265358979;
              $11105 = $$v18 - $11103;
              HEAPF64[$585>>3] = $11105;
              $11106 = +HEAPF64[$cj1array738>>3];
              $11107 = -$11106;
              HEAPF64[$586>>3] = $11107;
              $ij1741$0850 = 0;
             }
            } while(0);
            while(1) {
             $11116 = (($j1valid740) + ($ij1741$0850)|0);
             $11117 = HEAP8[$11116>>0]|0;
             $11118 = ($11117<<24>>24)==(0);
             do {
              if (!($11118)) {
               $11119 = $ij1741$0850&255;
               HEAP8[$4>>0] = $11119;
               HEAP8[$5>>0] = -1;
               $iij1742$0847 = (($ij1741$0850) + 1)|0;
               $11120 = ($iij1742$0847|0)<(2);
               do {
                if ($11120) {
                 $11121 = (($sj1array739) + ($ij1741$0850<<3)|0);
                 $11122 = (($j1valid740) + ($iij1742$0847)|0);
                 $11123 = HEAP8[$11122>>0]|0;
                 $11124 = ($11123<<24>>24)==(0);
                 if ($11124) {
                  break;
                 }
                 $11125 = (($cj1array738) + ($ij1741$0850<<3)|0);
                 $11126 = +HEAPF64[$11125>>3];
                 $11127 = (($cj1array738) + ($iij1742$0847<<3)|0);
                 $11128 = +HEAPF64[$11127>>3];
                 $11129 = $11126 - $11128;
                 $11130 = (+__Z5IKabsd($11129));
                 $11131 = $11130 < 9.9999999999999995E-7;
                 if (!($11131)) {
                  break;
                 }
                 $11132 = +HEAPF64[$11121>>3];
                 $11133 = (($sj1array739) + ($iij1742$0847<<3)|0);
                 $11134 = +HEAPF64[$11133>>3];
                 $11135 = $11132 - $11134;
                 $11136 = (+__Z5IKabsd($11135));
                 $11137 = $11136 < 9.9999999999999995E-7;
                 if (!($11137)) {
                  break;
                 }
                 HEAP8[$11122>>0] = 0;
                 $11138 = $iij1742$0847&255;
                 HEAP8[$5>>0] = $11138;
                }
               } while(0);
               $11139 = (($j1array737) + ($ij1741$0850<<3)|0);
               $11140 = +HEAPF64[$11139>>3];
               HEAPF64[$3>>3] = $11140;
               $11141 = (($cj1array738) + ($ij1741$0850<<3)|0);
               $11142 = +HEAPF64[$11141>>3];
               HEAPF64[$587>>3] = $11142;
               $11143 = (($sj1array739) + ($ij1741$0850<<3)|0);
               $11144 = +HEAPF64[$11143>>3];
               HEAPF64[$588>>3] = $11144;
               $11145 = +HEAPF64[$3>>3];
               $11146 = (+__Z5IKcosd($11145));
               $11147 = (+__Z5IKsind($11145));
               $11148 = +HEAPF64[$43>>3];
               $11149 = $11148 * $11148;
               $11150 = +HEAPF64[$45>>3];
               $11151 = $11150 * $11150;
               $11152 = $11146 * 1.5243902439024399;
               $11153 = +HEAPF64[$488>>3];
               $11154 = $11150 * $11153;
               $11155 = $11147 * $11154;
               $11156 = +HEAPF64[$487>>3];
               $11157 = $11148 * $11156;
               $11158 = $11147 * $11157;
               $11159 = $11146 * $11157;
               $11160 = $11146 * $11154;
               $11161 = $11160 + $11159;
               $11162 = $11152 * $11151;
               $11163 = $11152 * $11149;
               $11164 = $11163 + $11162;
               $11165 = $11146 * 0.0474569359756098;
               $11166 = $11165 + $11164;
               $11167 = $11155 * 0.65600000000000003;
               $11168 = -0.03113175 - $11167;
               $11169 = $11158 * 0.65600000000000003;
               $11170 = $11168 - $11169;
               $11171 = $11170 - $11151;
               $11172 = $11171 - $11149;
               $11173 = (+__Z5IKabsd($11161));
               $11174 = $11173 > 5.0000000000000004E-6;
               if ($11174) {
                break;
               }
               $11175 = +HEAPF64[$73>>3];
               $11176 = $11158 + 0.32800000000000001;
               $11177 = $11155 + $11176;
               $11178 = $11175 * 0.27650000000000002;
               $11179 = $11177 + $11178;
               $11180 = (+__Z5IKabsd($11179));
               $11181 = $11180 > 5.0000000000000004E-6;
               if ($11181) {
                break;
               }
               $11182 = (+__Z5IKabsd($11166));
               $11183 = $11182 > 5.0000000000000004E-6;
               if ($11183) {
                break;
               }
               $11184 = (+__Z5IKabsd($11172));
               $11185 = $11184 > 5.0000000000000004E-6;
               if ($11185) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $11186 = (($ij1741$0850) + 1)|0;
             $exitcond1360 = ($11186|0)==(2);
             if ($exitcond1360) {
              break L35;
             } else {
              $ij1741$0850 = $11186;
             }
            }
           }
           $10213 = +HEAPF64[$45>>3];
           $10214 = -$10213;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           $10215 = +HEAPF64[$43>>3];
           $10216 = $10215 * $10215;
           $10217 = +HEAPF64[$45>>3];
           $10218 = $10217 * $10217;
           $10219 = $10216 + $10218;
           HEAPF64[$60>>3] = $10219;
           $10220 = +HEAPF64[$43>>3];
           $10221 = +HEAPF64[$26>>3];
           $10222 = $10220 * $10221;
           $10223 = +HEAPF64[$45>>3];
           $10224 = +HEAPF64[$32>>3];
           $10225 = $10223 * $10224;
           $10226 = $10222 + $10225;
           HEAPF64[$61>>3] = $10226;
           $10227 = +HEAPF64[$43>>3];
           $10228 = +HEAPF64[$28>>3];
           $10229 = $10227 * $10228;
           $10230 = +HEAPF64[$45>>3];
           $10231 = +HEAPF64[$34>>3];
           $10232 = $10230 * $10231;
           $10233 = $10229 + $10232;
           HEAPF64[$62>>3] = $10233;
           $10234 = +HEAPF64[$43>>3];
           $10235 = +HEAPF64[$30>>3];
           $10236 = $10234 * $10235;
           $10237 = +HEAPF64[$45>>3];
           $10238 = +HEAPF64[$36>>3];
           $10239 = $10237 * $10238;
           $10240 = $10236 + $10239;
           HEAPF64[$63>>3] = $10240;
           $10241 = +HEAPF64[$38>>3];
           $10242 = $10241 * $10214;
           HEAPF64[$64>>3] = $10242;
           $10243 = +HEAPF64[$43>>3];
           $10244 = +HEAPF64[$38>>3];
           $10245 = $10243 * $10244;
           HEAPF64[$65>>3] = $10245;
           $10246 = +HEAPF64[$40>>3];
           $10247 = $10246 * $10214;
           HEAPF64[$67>>3] = $10247;
           $10248 = +HEAPF64[$43>>3];
           $10249 = +HEAPF64[$40>>3];
           $10250 = $10248 * $10249;
           HEAPF64[$68>>3] = $10250;
           $10251 = +HEAPF64[$42>>3];
           $10252 = $10251 * $10214;
           HEAPF64[$70>>3] = $10252;
           $10253 = +HEAPF64[$43>>3];
           $10254 = +HEAPF64[$42>>3];
           $10255 = $10253 * $10254;
           HEAPF64[$71>>3] = $10255;
           $10256 = +HEAPF64[$487>>3];
           $10257 = +HEAPF64[$43>>3];
           $10258 = $10256 * $10257;
           $10259 = +HEAPF64[$45>>3];
           $10260 = +HEAPF64[$488>>3];
           $10261 = $10259 * $10260;
           $10262 = $10258 + $10261;
           $10263 = (+__Z5IKabsd($10262));
           $10264 = $10263 < 9.9999999999999995E-7;
           if (!($10264)) {
            HEAP16[$j1valid733>>1] = 0;
            HEAP8[$6>>0] = 2;
            $10976 = +HEAPF64[$487>>3];
            $10977 = +HEAPF64[$43>>3];
            $10978 = $10976 * $10977;
            $10979 = +HEAPF64[$45>>3];
            $10980 = +HEAPF64[$488>>3];
            $10981 = $10979 * $10980;
            $10982 = $10978 + $10981;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1302,$10982,-1);
            $10983 = HEAP8[$575>>0]|0;
            $10984 = ($10983<<24>>24)==(0);
            if ($10984) {
             break L35;
            }
            $10985 = +HEAPF64[$x1302>>3];
            $10986 = +HEAPF64[$73>>3];
            $10987 = $10986 * -0.27650000000000002;
            $10988 = $10985 * $10987;
            $10989 = $10985 * 0.32800000000000001;
            $10990 = $10988 - $10989;
            HEAPF64[$sj1array732>>3] = $10990;
            $10991 = !($10990 >= -1.0000020000000001);
            $10992 = !($10990 <= 1.0000020000000001);
            $or$cond387 = $10991 | $10992;
            do {
             if ($or$cond387) {
              $11002 = (__Z13__DOUBLE_BITSd($10990)|0);
              $11003 = tempRet0;
              $11004 = $11003 & 2147483647;
              $11005 = ($11004>>>0)>(2146435072);
              $11006 = ($11002>>>0)>(0);
              $11007 = ($11004|0)==(2146435072);
              $11008 = $11007 & $11006;
              $11009 = $11005 | $11008;
              if (!($11009)) {
               $ij1734$0854 = 0;
               break;
              }
              HEAP8[$j1valid733>>0] = 1;
              HEAPF64[$cj1array731>>3] = 1.0;
              HEAPF64[$sj1array732>>3] = 0.0;
              HEAPF64[$j1array730>>3] = 0.0;
              $ij1734$0854 = 0;
             } else {
              HEAP8[$576>>0] = 1;
              HEAP8[$j1valid733>>0] = 1;
              $10993 = +HEAPF64[$sj1array732>>3];
              $10994 = (+__Z6IKasind($10993));
              HEAPF64[$j1array730>>3] = $10994;
              $10995 = (+__Z5IKcosd($10994));
              HEAPF64[$cj1array731>>3] = $10995;
              $10996 = +HEAPF64[$sj1array732>>3];
              HEAPF64[$577>>3] = $10996;
              $10997 = +HEAPF64[$j1array730>>3];
              $10998 = $10997 > 0.0;
              $$v20 = $10998 ? 3.14159265358979 : -3.14159265358979;
              $10999 = $$v20 - $10997;
              HEAPF64[$578>>3] = $10999;
              $11000 = +HEAPF64[$cj1array731>>3];
              $11001 = -$11000;
              HEAPF64[$579>>3] = $11001;
              $ij1734$0854 = 0;
             }
            } while(0);
            while(1) {
             $11010 = (($j1valid733) + ($ij1734$0854)|0);
             $11011 = HEAP8[$11010>>0]|0;
             $11012 = ($11011<<24>>24)==(0);
             do {
              if (!($11012)) {
               $11013 = $ij1734$0854&255;
               HEAP8[$4>>0] = $11013;
               HEAP8[$5>>0] = -1;
               $iij1735$0851 = (($ij1734$0854) + 1)|0;
               $11014 = ($iij1735$0851|0)<(2);
               do {
                if ($11014) {
                 $11015 = (($sj1array732) + ($ij1734$0854<<3)|0);
                 $11016 = (($j1valid733) + ($iij1735$0851)|0);
                 $11017 = HEAP8[$11016>>0]|0;
                 $11018 = ($11017<<24>>24)==(0);
                 if ($11018) {
                  break;
                 }
                 $11019 = (($cj1array731) + ($ij1734$0854<<3)|0);
                 $11020 = +HEAPF64[$11019>>3];
                 $11021 = (($cj1array731) + ($iij1735$0851<<3)|0);
                 $11022 = +HEAPF64[$11021>>3];
                 $11023 = $11020 - $11022;
                 $11024 = (+__Z5IKabsd($11023));
                 $11025 = $11024 < 9.9999999999999995E-7;
                 if (!($11025)) {
                  break;
                 }
                 $11026 = +HEAPF64[$11015>>3];
                 $11027 = (($sj1array732) + ($iij1735$0851<<3)|0);
                 $11028 = +HEAPF64[$11027>>3];
                 $11029 = $11026 - $11028;
                 $11030 = (+__Z5IKabsd($11029));
                 $11031 = $11030 < 9.9999999999999995E-7;
                 if (!($11031)) {
                  break;
                 }
                 HEAP8[$11016>>0] = 0;
                 $11032 = $iij1735$0851&255;
                 HEAP8[$5>>0] = $11032;
                }
               } while(0);
               $11033 = (($j1array730) + ($ij1734$0854<<3)|0);
               $11034 = +HEAPF64[$11033>>3];
               HEAPF64[$3>>3] = $11034;
               $11035 = (($cj1array731) + ($ij1734$0854<<3)|0);
               $11036 = +HEAPF64[$11035>>3];
               HEAPF64[$580>>3] = $11036;
               $11037 = (($sj1array732) + ($ij1734$0854<<3)|0);
               $11038 = +HEAPF64[$11037>>3];
               HEAPF64[$581>>3] = $11038;
               $11039 = +HEAPF64[$3>>3];
               $11040 = (+__Z5IKcosd($11039));
               $11041 = (+__Z5IKsind($11039));
               $11042 = +HEAPF64[$43>>3];
               $11043 = $11042 * $11042;
               $11044 = +HEAPF64[$45>>3];
               $11045 = $11044 * $11044;
               $11046 = +HEAPF64[$487>>3];
               $11047 = $11042 * $11046;
               $11048 = +HEAPF64[$488>>3];
               $11049 = $11044 * $11048;
               $11050 = $11041 * 0.65600000000000003;
               $11051 = $11040 * 1.5243902439024399;
               $11052 = $11040 * $11049;
               $11053 = $11040 * $11047;
               $11054 = $11053 + $11052;
               $11055 = $11051 * $11043;
               $11056 = $11051 * $11045;
               $11057 = $11055 + $11056;
               $11058 = $11040 * 0.0474569359756098;
               $11059 = $11058 + $11057;
               $11060 = $11050 * $11047;
               $11061 = -0.03113175 - $11060;
               $11062 = $11061 - $11043;
               $11063 = $11062 - $11045;
               $11064 = $11050 * $11049;
               $11065 = $11063 - $11064;
               $11066 = (+__Z5IKabsd($11054));
               $11067 = $11066 > 5.0000000000000004E-6;
               if ($11067) {
                break;
               }
               $11068 = +HEAPF64[$73>>3];
               $11069 = $11068 * -0.27650000000000002;
               $11070 = $11041 * $11069;
               $11071 = $11070 - $11049;
               $11072 = $11071 - $11047;
               $11073 = $11041 * 0.32800000000000001;
               $11074 = $11072 - $11073;
               $11075 = (+__Z5IKabsd($11074));
               $11076 = $11075 > 5.0000000000000004E-6;
               if ($11076) {
                break;
               }
               $11077 = (+__Z5IKabsd($11059));
               $11078 = $11077 > 5.0000000000000004E-6;
               if ($11078) {
                break;
               }
               $11079 = (+__Z5IKabsd($11065));
               $11080 = $11079 > 5.0000000000000004E-6;
               if ($11080) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $11081 = (($ij1734$0854) + 1)|0;
             $exitcond1361 = ($11081|0)==(2);
             if ($exitcond1361) {
              break L35;
             } else {
              $ij1734$0854 = $11081;
             }
            }
           }
           $10265 = $10257 * $10257;
           $10266 = $10259 * $10259;
           $10267 = $10265 + $10266;
           $10268 = (+__Z5IKabsd($10267));
           $10269 = $10268 == 0.0;
           do {
            if (!($10269)) {
             $10270 = (+Math_pow((+$10267),-0.5));
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1234,$10257,$10259,1.9999999999999999E-6);
             $10271 = HEAP8[$557>>0]|0;
             $10272 = ($10271<<24>>24)==(0);
             if ($10272) {
              break;
             }
             $10273 = +HEAPF64[$43>>3];
             $10274 = $10270 * $10273;
             $10275 = -$10274;
             $10276 = +HEAPF64[$45>>3];
             $10277 = $10270 * $10276;
             $10278 = +HEAPF64[$74>>3];
             $10279 = $10278 * 0.27650000000000002;
             $10280 = $10276 * $10277;
             $10281 = $10280 - $10279;
             $10282 = $10273 * $10274;
             $10283 = $10282 + $10281;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1236,$10273,$10276,1.9999999999999999E-6);
             $10284 = HEAP8[$558>>0]|0;
             $10285 = ($10284<<24>>24)==(0);
             if ($10285) {
              break;
             }
             $10286 = +HEAPF64[$x1236>>3];
             $10287 = +HEAPF64[$this>>3];
             $10288 = $10286 + $10287;
             $10289 = (+__Z5IKabsd($10288));
             $10290 = $10289 + 3.14159265358979;
             $10291 = (+__Z6IKfmoddd($10290,6.2831853071795898));
             $10292 = $10291 + -3.14159265358979;
             $10293 = +HEAPF64[$43>>3];
             $10294 = +HEAPF64[$45>>3];
             $10295 = (+__Z5IKabsd($10292));
             $10296 = $10295 < 9.9999999999999995E-7;
             if (!($10296)) {
              break;
             }
             $10297 = +HEAPF64[$73>>3];
             $10298 = $10293 * $10293;
             $10299 = 0.18403625000000001 - $10298;
             $10300 = $10297 * 0.18138399999999999;
             $10301 = $10299 + $10300;
             $10302 = $10294 * $10294;
             $10303 = $10301 - $10302;
             $10304 = (+__Z5IKabsd($10303));
             $10305 = $10304 < 9.9999999999999995E-7;
             if (!($10305)) {
              break;
             }
             $10306 = (+__Z5IKabsd($10283));
             $10307 = $10306 < 9.9999999999999995E-7;
             if (!($10307)) {
              break;
             }
             $10308 = -$10294;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1241,$10293,$10294,1.9999999999999999E-6);
             $10309 = HEAP8[$559>>0]|0;
             $10310 = ($10309<<24>>24)==(0);
             if ($10310) {
              break L35;
             }
             $10311 = +HEAPF64[$x1241>>3];
             $10312 = -$10311;
             $10313 = +HEAPF64[$43>>3];
             $10314 = $10313 * $10313;
             $10315 = +HEAPF64[$45>>3];
             $10316 = $10315 * $10315;
             $10317 = $10314 + $10316;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$60>>3] = $10317;
             $10318 = +HEAPF64[$43>>3];
             $10319 = +HEAPF64[$26>>3];
             $10320 = $10318 * $10319;
             $10321 = +HEAPF64[$45>>3];
             $10322 = +HEAPF64[$32>>3];
             $10323 = $10321 * $10322;
             $10324 = $10320 + $10323;
             HEAPF64[$61>>3] = $10324;
             $10325 = +HEAPF64[$43>>3];
             $10326 = +HEAPF64[$28>>3];
             $10327 = $10325 * $10326;
             $10328 = +HEAPF64[$45>>3];
             $10329 = +HEAPF64[$34>>3];
             $10330 = $10328 * $10329;
             $10331 = $10327 + $10330;
             HEAPF64[$62>>3] = $10331;
             $10332 = +HEAPF64[$43>>3];
             $10333 = +HEAPF64[$30>>3];
             $10334 = $10332 * $10333;
             $10335 = +HEAPF64[$45>>3];
             $10336 = +HEAPF64[$36>>3];
             $10337 = $10335 * $10336;
             $10338 = $10334 + $10337;
             HEAPF64[$63>>3] = $10338;
             $10339 = +HEAPF64[$38>>3];
             $10340 = $10339 * $10308;
             HEAPF64[$64>>3] = $10340;
             $10341 = +HEAPF64[$43>>3];
             $10342 = +HEAPF64[$38>>3];
             $10343 = $10341 * $10342;
             HEAPF64[$65>>3] = $10343;
             $10344 = +HEAPF64[$40>>3];
             $10345 = $10344 * $10308;
             HEAPF64[$67>>3] = $10345;
             $10346 = +HEAPF64[$43>>3];
             $10347 = +HEAPF64[$40>>3];
             $10348 = $10346 * $10347;
             HEAPF64[$68>>3] = $10348;
             $10349 = +HEAPF64[$42>>3];
             $10350 = $10349 * $10308;
             HEAPF64[$70>>3] = $10350;
             $10351 = +HEAPF64[$43>>3];
             $10352 = +HEAPF64[$42>>3];
             $10353 = $10351 * $10352;
             HEAPF64[$71>>3] = $10353;
             HEAPF64[$488>>3] = $10275;
             HEAPF64[$487>>3] = $10277;
             HEAPF64[$this>>3] = $10312;
             $10354 = +HEAPF64[$43>>3];
             $10355 = $10270 * $10354;
             $10356 = -$10355;
             $10357 = +HEAPF64[$45>>3];
             $10358 = $10270 * $10357;
             $10359 = +HEAPF64[$73>>3];
             $10360 = -1.1862567811934901 - $10359;
             $10361 = (+__Z5IKabsd($10360));
             $10362 = $10361 < 9.9999999999999995E-7;
             if (!($10362)) {
              HEAP16[$j1valid699>>1] = 0;
              HEAP8[$6>>0] = 2;
              $10518 = +HEAPF64[$73>>3];
              $10519 = $10518 * 0.27650000000000002;
              $10520 = -0.32800000000000001 - $10519;
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1258,$10520,-1);
              $10521 = HEAP8[$568>>0]|0;
              $10522 = ($10521<<24>>24)==(0);
              if ($10522) {
               break L35;
              }
              $10523 = +HEAPF64[$x1258>>3];
              $10524 = +HEAPF64[$45>>3];
              $10525 = $10524 * $10356;
              $10526 = $10523 * $10525;
              $10527 = +HEAPF64[$43>>3];
              $10528 = $10358 * $10527;
              $10529 = $10523 * $10528;
              $10530 = $10526 + $10529;
              HEAPF64[$sj1array698>>3] = $10530;
              $10531 = !($10530 >= -1.0000020000000001);
              $10532 = !($10530 <= 1.0000020000000001);
              $or$cond368 = $10531 | $10532;
              do {
               if ($or$cond368) {
                $10542 = (__Z13__DOUBLE_BITSd($10530)|0);
                $10543 = tempRet0;
                $10544 = $10543 & 2147483647;
                $10545 = ($10544>>>0)>(2146435072);
                $10546 = ($10542>>>0)>(0);
                $10547 = ($10544|0)==(2146435072);
                $10548 = $10547 & $10546;
                $10549 = $10545 | $10548;
                if (!($10549)) {
                 $ij1700$0858 = 0;
                 break;
                }
                HEAP8[$j1valid699>>0] = 1;
                HEAPF64[$cj1array697>>3] = 1.0;
                HEAPF64[$sj1array698>>3] = 0.0;
                HEAPF64[$j1array696>>3] = 0.0;
                $ij1700$0858 = 0;
               } else {
                HEAP8[$569>>0] = 1;
                HEAP8[$j1valid699>>0] = 1;
                $10533 = +HEAPF64[$sj1array698>>3];
                $10534 = (+__Z6IKasind($10533));
                HEAPF64[$j1array696>>3] = $10534;
                $10535 = (+__Z5IKcosd($10534));
                HEAPF64[$cj1array697>>3] = $10535;
                $10536 = +HEAPF64[$sj1array698>>3];
                HEAPF64[$570>>3] = $10536;
                $10537 = +HEAPF64[$j1array696>>3];
                $10538 = $10537 > 0.0;
                $$v26 = $10538 ? 3.14159265358979 : -3.14159265358979;
                $10539 = $$v26 - $10537;
                HEAPF64[$571>>3] = $10539;
                $10540 = +HEAPF64[$cj1array697>>3];
                $10541 = -$10540;
                HEAPF64[$572>>3] = $10541;
                $ij1700$0858 = 0;
               }
              } while(0);
              while(1) {
               $10550 = (($j1valid699) + ($ij1700$0858)|0);
               $10551 = HEAP8[$10550>>0]|0;
               $10552 = ($10551<<24>>24)==(0);
               do {
                if (!($10552)) {
                 $10553 = $ij1700$0858&255;
                 HEAP8[$4>>0] = $10553;
                 HEAP8[$5>>0] = -1;
                 $iij1701$0855 = (($ij1700$0858) + 1)|0;
                 $10554 = ($iij1701$0855|0)<(2);
                 do {
                  if ($10554) {
                   $10555 = (($sj1array698) + ($ij1700$0858<<3)|0);
                   $10556 = (($j1valid699) + ($iij1701$0855)|0);
                   $10557 = HEAP8[$10556>>0]|0;
                   $10558 = ($10557<<24>>24)==(0);
                   if ($10558) {
                    break;
                   }
                   $10559 = (($cj1array697) + ($ij1700$0858<<3)|0);
                   $10560 = +HEAPF64[$10559>>3];
                   $10561 = (($cj1array697) + ($iij1701$0855<<3)|0);
                   $10562 = +HEAPF64[$10561>>3];
                   $10563 = $10560 - $10562;
                   $10564 = (+__Z5IKabsd($10563));
                   $10565 = $10564 < 9.9999999999999995E-7;
                   if (!($10565)) {
                    break;
                   }
                   $10566 = +HEAPF64[$10555>>3];
                   $10567 = (($sj1array698) + ($iij1701$0855<<3)|0);
                   $10568 = +HEAPF64[$10567>>3];
                   $10569 = $10566 - $10568;
                   $10570 = (+__Z5IKabsd($10569));
                   $10571 = $10570 < 9.9999999999999995E-7;
                   if (!($10571)) {
                    break;
                   }
                   HEAP8[$10556>>0] = 0;
                   $10572 = $iij1701$0855&255;
                   HEAP8[$5>>0] = $10572;
                  }
                 } while(0);
                 $10573 = (($j1array696) + ($ij1700$0858<<3)|0);
                 $10574 = +HEAPF64[$10573>>3];
                 HEAPF64[$3>>3] = $10574;
                 $10575 = (($cj1array697) + ($ij1700$0858<<3)|0);
                 $10576 = +HEAPF64[$10575>>3];
                 HEAPF64[$573>>3] = $10576;
                 $10577 = (($sj1array698) + ($ij1700$0858<<3)|0);
                 $10578 = +HEAPF64[$10577>>3];
                 HEAPF64[$574>>3] = $10578;
                 $10579 = +HEAPF64[$3>>3];
                 $10580 = (+__Z5IKcosd($10579));
                 $10581 = (+__Z5IKsind($10579));
                 $10582 = +HEAPF64[$43>>3];
                 $10583 = $10582 * $10582;
                 $10584 = +HEAPF64[$45>>3];
                 $10585 = $10584 * $10584;
                 $10586 = $10358 * $10582;
                 $10587 = $10580 * 1.5243902439024399;
                 $10588 = $10584 * $10356;
                 $10589 = $10581 * $10588;
                 $10590 = $10580 * $10588;
                 $10591 = $10580 * $10586;
                 $10592 = $10591 + $10590;
                 $10593 = $10587 * $10583;
                 $10594 = $10580 * 0.0474569359756098;
                 $10595 = $10594 + $10593;
                 $10596 = $10587 * $10585;
                 $10597 = $10595 + $10596;
                 $10598 = $10589 * 0.65600000000000003;
                 $10599 = -0.03113175 - $10598;
                 $10600 = $10599 - $10583;
                 $10601 = $10600 - $10585;
                 $10602 = $10581 * -0.65600000000000003;
                 $10603 = $10602 * $10586;
                 $10604 = $10603 + $10601;
                 $10605 = (+__Z5IKabsd($10592));
                 $10606 = $10605 > 5.0000000000000004E-6;
                 if ($10606) {
                  break;
                 }
                 $10607 = +HEAPF64[$73>>3];
                 $10608 = $10589 + 0.32800000000000001;
                 $10609 = $10607 * 0.27650000000000002;
                 $10610 = $10608 + $10609;
                 $10611 = $10581 * $10586;
                 $10612 = $10611 + $10610;
                 $10613 = (+__Z5IKabsd($10612));
                 $10614 = $10613 > 5.0000000000000004E-6;
                 if ($10614) {
                  break;
                 }
                 $10615 = (+__Z5IKabsd($10597));
                 $10616 = $10615 > 5.0000000000000004E-6;
                 if ($10616) {
                  break;
                 }
                 $10617 = (+__Z5IKabsd($10604));
                 $10618 = $10617 > 5.0000000000000004E-6;
                 if ($10618) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $10619 = (($ij1700$0858) + 1)|0;
               $exitcond1362 = ($10619|0)==(2);
               if ($exitcond1362) {
                break L35;
               } else {
                $ij1700$0858 = $10619;
               }
              }
             }
             $10363 = -$10357;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1246,$10354,$10357,1.9999999999999999E-6);
             $10364 = HEAP8[$560>>0]|0;
             $10365 = ($10364<<24>>24)==(0);
             if ($10365) {
              break L35;
             }
             $10366 = +HEAPF64[$x1246>>3];
             $10367 = -$10366;
             $10368 = +HEAPF64[$43>>3];
             $10369 = $10368 * $10368;
             $10370 = +HEAPF64[$45>>3];
             $10371 = $10370 * $10370;
             $10372 = $10369 + $10371;
             HEAPF64[$47>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$60>>3] = $10372;
             $10373 = +HEAPF64[$43>>3];
             $10374 = +HEAPF64[$26>>3];
             $10375 = $10373 * $10374;
             $10376 = +HEAPF64[$45>>3];
             $10377 = +HEAPF64[$32>>3];
             $10378 = $10376 * $10377;
             $10379 = $10375 + $10378;
             HEAPF64[$61>>3] = $10379;
             $10380 = +HEAPF64[$43>>3];
             $10381 = +HEAPF64[$28>>3];
             $10382 = $10380 * $10381;
             $10383 = +HEAPF64[$45>>3];
             $10384 = +HEAPF64[$34>>3];
             $10385 = $10383 * $10384;
             $10386 = $10382 + $10385;
             HEAPF64[$62>>3] = $10386;
             $10387 = +HEAPF64[$43>>3];
             $10388 = +HEAPF64[$30>>3];
             $10389 = $10387 * $10388;
             $10390 = +HEAPF64[$45>>3];
             $10391 = +HEAPF64[$36>>3];
             $10392 = $10390 * $10391;
             $10393 = $10389 + $10392;
             HEAPF64[$63>>3] = $10393;
             $10394 = +HEAPF64[$38>>3];
             $10395 = $10394 * $10363;
             HEAPF64[$64>>3] = $10395;
             $10396 = +HEAPF64[$43>>3];
             $10397 = +HEAPF64[$38>>3];
             $10398 = $10396 * $10397;
             HEAPF64[$65>>3] = $10398;
             $10399 = +HEAPF64[$40>>3];
             $10400 = $10399 * $10363;
             HEAPF64[$67>>3] = $10400;
             $10401 = +HEAPF64[$43>>3];
             $10402 = +HEAPF64[$40>>3];
             $10403 = $10401 * $10402;
             HEAPF64[$68>>3] = $10403;
             $10404 = +HEAPF64[$42>>3];
             $10405 = $10404 * $10363;
             HEAPF64[$70>>3] = $10405;
             $10406 = +HEAPF64[$43>>3];
             $10407 = +HEAPF64[$42>>3];
             $10408 = $10406 * $10407;
             HEAPF64[$71>>3] = $10408;
             HEAPF64[$488>>3] = $10356;
             HEAPF64[$487>>3] = $10358;
             HEAPF64[$this>>3] = $10367;
             $10409 = +HEAPF64[$43>>3];
             $10410 = $10270 * $10409;
             $10411 = -$10410;
             $10412 = +HEAPF64[$45>>3];
             $10413 = $10270 * $10412;
             $10414 = (+__Z5IKabsd(0.0));
             $10415 = $10414 < 9.9999999999999995E-7;
             if ($10415) {
              break L35;
             }
             HEAP16[$j1valid692>>1] = 0;
             HEAP8[$6>>0] = 2;
             $10416 = +HEAPF64[$43>>3];
             $10417 = $10413 * $10416;
             $10418 = +HEAPF64[$45>>3];
             $10419 = $10418 * $10411;
             $10420 = $10417 + $10419;
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1248,$10420,-1);
             $10421 = HEAP8[$561>>0]|0;
             $10422 = ($10421<<24>>24)==(0);
             if ($10422) {
              break L35;
             }
             $10423 = +HEAPF64[$x1248>>3];
             $10424 = +HEAPF64[$73>>3];
             $10425 = $10424 * -0.27650000000000002;
             $10426 = $10423 * $10425;
             $10427 = $10423 * 0.32800000000000001;
             $10428 = $10426 - $10427;
             HEAPF64[$sj1array691>>3] = $10428;
             $10429 = !($10428 >= -1.0000020000000001);
             $10430 = !($10428 <= 1.0000020000000001);
             $or$cond367 = $10429 | $10430;
             do {
              if ($or$cond367) {
               $10440 = (__Z13__DOUBLE_BITSd($10428)|0);
               $10441 = tempRet0;
               $10442 = $10441 & 2147483647;
               $10443 = ($10442>>>0)>(2146435072);
               $10444 = ($10440>>>0)>(0);
               $10445 = ($10442|0)==(2146435072);
               $10446 = $10445 & $10444;
               $10447 = $10443 | $10446;
               if (!($10447)) {
                $ij1693$0862 = 0;
                break;
               }
               HEAP8[$j1valid692>>0] = 1;
               HEAPF64[$cj1array690>>3] = 1.0;
               HEAPF64[$sj1array691>>3] = 0.0;
               HEAPF64[$j1array689>>3] = 0.0;
               $ij1693$0862 = 0;
              } else {
               HEAP8[$562>>0] = 1;
               HEAP8[$j1valid692>>0] = 1;
               $10431 = +HEAPF64[$sj1array691>>3];
               $10432 = (+__Z6IKasind($10431));
               HEAPF64[$j1array689>>3] = $10432;
               $10433 = (+__Z5IKcosd($10432));
               HEAPF64[$cj1array690>>3] = $10433;
               $10434 = +HEAPF64[$sj1array691>>3];
               HEAPF64[$563>>3] = $10434;
               $10435 = +HEAPF64[$j1array689>>3];
               $10436 = $10435 > 0.0;
               $$v28 = $10436 ? 3.14159265358979 : -3.14159265358979;
               $10437 = $$v28 - $10435;
               HEAPF64[$564>>3] = $10437;
               $10438 = +HEAPF64[$cj1array690>>3];
               $10439 = -$10438;
               HEAPF64[$565>>3] = $10439;
               $ij1693$0862 = 0;
              }
             } while(0);
             while(1) {
              $10448 = (($j1valid692) + ($ij1693$0862)|0);
              $10449 = HEAP8[$10448>>0]|0;
              $10450 = ($10449<<24>>24)==(0);
              do {
               if (!($10450)) {
                $10451 = $ij1693$0862&255;
                HEAP8[$4>>0] = $10451;
                HEAP8[$5>>0] = -1;
                $iij1694$0859 = (($ij1693$0862) + 1)|0;
                $10452 = ($iij1694$0859|0)<(2);
                do {
                 if ($10452) {
                  $10453 = (($sj1array691) + ($ij1693$0862<<3)|0);
                  $10454 = (($j1valid692) + ($iij1694$0859)|0);
                  $10455 = HEAP8[$10454>>0]|0;
                  $10456 = ($10455<<24>>24)==(0);
                  if ($10456) {
                   break;
                  }
                  $10457 = (($cj1array690) + ($ij1693$0862<<3)|0);
                  $10458 = +HEAPF64[$10457>>3];
                  $10459 = (($cj1array690) + ($iij1694$0859<<3)|0);
                  $10460 = +HEAPF64[$10459>>3];
                  $10461 = $10458 - $10460;
                  $10462 = (+__Z5IKabsd($10461));
                  $10463 = $10462 < 9.9999999999999995E-7;
                  if (!($10463)) {
                   break;
                  }
                  $10464 = +HEAPF64[$10453>>3];
                  $10465 = (($sj1array691) + ($iij1694$0859<<3)|0);
                  $10466 = +HEAPF64[$10465>>3];
                  $10467 = $10464 - $10466;
                  $10468 = (+__Z5IKabsd($10467));
                  $10469 = $10468 < 9.9999999999999995E-7;
                  if (!($10469)) {
                   break;
                  }
                  HEAP8[$10454>>0] = 0;
                  $10470 = $iij1694$0859&255;
                  HEAP8[$5>>0] = $10470;
                 }
                } while(0);
                $10471 = (($j1array689) + ($ij1693$0862<<3)|0);
                $10472 = +HEAPF64[$10471>>3];
                HEAPF64[$3>>3] = $10472;
                $10473 = (($cj1array690) + ($ij1693$0862<<3)|0);
                $10474 = +HEAPF64[$10473>>3];
                HEAPF64[$566>>3] = $10474;
                $10475 = (($sj1array691) + ($ij1693$0862<<3)|0);
                $10476 = +HEAPF64[$10475>>3];
                HEAPF64[$567>>3] = $10476;
                $10477 = +HEAPF64[$3>>3];
                $10478 = (+__Z5IKcosd($10477));
                $10479 = (+__Z5IKsind($10477));
                $10480 = +HEAPF64[$43>>3];
                $10481 = $10480 * $10480;
                $10482 = +HEAPF64[$45>>3];
                $10483 = $10482 * $10482;
                $10484 = $10413 * $10480;
                $10485 = $10482 * $10411;
                $10486 = $10479 * 0.65600000000000003;
                $10487 = $10478 * 1.5243902439024399;
                $10488 = $10478 * $10484;
                $10489 = $10478 * $10485;
                $10490 = $10488 + $10489;
                $10491 = $10487 * $10483;
                $10492 = $10487 * $10481;
                $10493 = $10492 + $10491;
                $10494 = $10478 * 0.0474569359756098;
                $10495 = $10494 + $10493;
                $10496 = $10486 * $10484;
                $10497 = -0.03113175 - $10496;
                $10498 = $10486 * $10485;
                $10499 = $10497 - $10498;
                $10500 = $10499 - $10481;
                $10501 = $10500 - $10483;
                $10502 = (+__Z5IKabsd($10490));
                $10503 = $10502 > 5.0000000000000004E-6;
                if ($10503) {
                 break;
                }
                $10504 = +HEAPF64[$73>>3];
                $10505 = $10479 * 0.32800000000000001;
                $10506 = $10504 * -0.27650000000000002;
                $10507 = $10479 * $10506;
                $10508 = $10507 - $10505;
                $10509 = $10508 - $10484;
                $10510 = $10509 - $10485;
                $10511 = (+__Z5IKabsd($10510));
                $10512 = $10511 > 5.0000000000000004E-6;
                if ($10512) {
                 break;
                }
                $10513 = (+__Z5IKabsd($10495));
                $10514 = $10513 > 5.0000000000000004E-6;
                if ($10514) {
                 break;
                }
                $10515 = (+__Z5IKabsd($10501));
                $10516 = $10515 > 5.0000000000000004E-6;
                if ($10516) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $10517 = (($ij1693$0862) + 1)|0;
              $exitcond1363 = ($10517|0)==(2);
              if ($exitcond1363) {
               break L35;
              } else {
               $ij1693$0862 = $10517;
              }
             }
            }
           } while(0);
           $10620 = +HEAPF64[$43>>3];
           $10621 = $10620 * $10620;
           $10622 = +HEAPF64[$45>>3];
           $10623 = $10622 * $10622;
           $10624 = $10621 + $10623;
           $10625 = (+__Z5IKabsd($10624));
           $10626 = $10625 == 0.0;
           if ($10626) {
            break L35;
           }
           $10627 = (+Math_pow((+$10624),-0.5));
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1268,$10620,$10622,1.9999999999999999E-6);
           $10628 = HEAP8[$539>>0]|0;
           $10629 = ($10628<<24>>24)==(0);
           if ($10629) {
            break L35;
           }
           $10630 = +HEAPF64[$43>>3];
           $10631 = $10627 * $10630;
           $10632 = +HEAPF64[$45>>3];
           $10633 = $10627 * $10632;
           $10634 = -$10633;
           $10635 = +HEAPF64[$74>>3];
           $10636 = $10635 * -0.27650000000000002;
           $10637 = $10630 * $10631;
           $10638 = $10636 - $10637;
           $10639 = $10632 * $10634;
           $10640 = $10639 + $10638;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1270,$10630,$10632,1.9999999999999999E-6);
           $10641 = HEAP8[$540>>0]|0;
           $10642 = ($10641<<24>>24)==(0);
           if ($10642) {
            break L35;
           }
           $10643 = +HEAPF64[$x1270>>3];
           $10644 = $10643 + -3.14159265358979;
           $10645 = +HEAPF64[$this>>3];
           $10646 = $10644 + $10645;
           $10647 = (+__Z5IKabsd($10646));
           $10648 = $10647 + 3.14159265358979;
           $10649 = (+__Z6IKfmoddd($10648,6.2831853071795898));
           $10650 = $10649 + -3.14159265358979;
           $10651 = +HEAPF64[$43>>3];
           $10652 = +HEAPF64[$45>>3];
           $10653 = (+__Z5IKabsd($10650));
           $10654 = $10653 < 9.9999999999999995E-7;
           if (!($10654)) {
            break L35;
           }
           $10655 = +HEAPF64[$73>>3];
           $10656 = $10651 * $10651;
           $10657 = 0.18403625000000001 - $10656;
           $10658 = $10655 * 0.18138399999999999;
           $10659 = $10657 + $10658;
           $10660 = $10652 * $10652;
           $10661 = $10659 - $10660;
           $10662 = (+__Z5IKabsd($10661));
           $10663 = $10662 < 9.9999999999999995E-7;
           if (!($10663)) {
            break L35;
           }
           $10664 = (+__Z5IKabsd($10640));
           $10665 = $10664 < 9.9999999999999995E-7;
           if (!($10665)) {
            break L35;
           }
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1275,$10651,$10652,1.9999999999999999E-6);
           $10666 = HEAP8[$541>>0]|0;
           $10667 = ($10666<<24>>24)==(0);
           if ($10667) {
            break L35;
           }
           $10668 = +HEAPF64[$x1275>>3];
           $10669 = +HEAPF64[$45>>3];
           $10670 = -$10669;
           $10671 = +HEAPF64[$43>>3];
           $10672 = $10671 * $10671;
           $10673 = $10669 * $10669;
           $10674 = $10673 + $10672;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$60>>3] = $10674;
           $10675 = +HEAPF64[$43>>3];
           $10676 = +HEAPF64[$26>>3];
           $10677 = $10675 * $10676;
           $10678 = +HEAPF64[$45>>3];
           $10679 = +HEAPF64[$32>>3];
           $10680 = $10678 * $10679;
           $10681 = $10677 + $10680;
           HEAPF64[$61>>3] = $10681;
           $10682 = +HEAPF64[$43>>3];
           $10683 = +HEAPF64[$28>>3];
           $10684 = $10682 * $10683;
           $10685 = +HEAPF64[$45>>3];
           $10686 = +HEAPF64[$34>>3];
           $10687 = $10685 * $10686;
           $10688 = $10684 + $10687;
           HEAPF64[$62>>3] = $10688;
           $10689 = +HEAPF64[$43>>3];
           $10690 = +HEAPF64[$30>>3];
           $10691 = $10689 * $10690;
           $10692 = +HEAPF64[$45>>3];
           $10693 = +HEAPF64[$36>>3];
           $10694 = $10692 * $10693;
           $10695 = $10691 + $10694;
           HEAPF64[$63>>3] = $10695;
           $10696 = +HEAPF64[$38>>3];
           $10697 = $10696 * $10670;
           HEAPF64[$64>>3] = $10697;
           $10698 = +HEAPF64[$43>>3];
           $10699 = +HEAPF64[$38>>3];
           $10700 = $10698 * $10699;
           HEAPF64[$65>>3] = $10700;
           $10701 = +HEAPF64[$40>>3];
           $10702 = $10701 * $10670;
           HEAPF64[$67>>3] = $10702;
           $10703 = +HEAPF64[$43>>3];
           $10704 = +HEAPF64[$40>>3];
           $10705 = $10703 * $10704;
           HEAPF64[$68>>3] = $10705;
           $10706 = +HEAPF64[$42>>3];
           $10707 = $10706 * $10670;
           HEAPF64[$70>>3] = $10707;
           $10708 = +HEAPF64[$43>>3];
           $10709 = +HEAPF64[$42>>3];
           $10710 = $10708 * $10709;
           HEAPF64[$71>>3] = $10710;
           HEAPF64[$488>>3] = $10631;
           HEAPF64[$487>>3] = $10634;
           $10711 = 3.1415926500000002 - $10668;
           HEAPF64[$this>>3] = $10711;
           $10712 = +HEAPF64[$43>>3];
           $10713 = $10627 * $10712;
           $10714 = $10627 * $10670;
           $10715 = +HEAPF64[$73>>3];
           $10716 = -1.1862567811934901 - $10715;
           $10717 = (+__Z5IKabsd($10716));
           $10718 = $10717 < 9.9999999999999995E-7;
           if (!($10718)) {
            HEAP16[$j1valid725>>1] = 0;
            HEAP8[$6>>0] = 2;
            $10874 = +HEAPF64[$73>>3];
            $10875 = $10874 * 0.27650000000000002;
            $10876 = -0.32800000000000001 - $10875;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1292,$10876,-1);
            $10877 = HEAP8[$550>>0]|0;
            $10878 = ($10877<<24>>24)==(0);
            if ($10878) {
             break L35;
            }
            $10879 = +HEAPF64[$x1292>>3];
            $10880 = +HEAPF64[$43>>3];
            $10881 = $10714 * $10880;
            $10882 = $10879 * $10881;
            $10883 = +HEAPF64[$45>>3];
            $10884 = $10713 * $10883;
            $10885 = $10879 * $10884;
            $10886 = $10882 + $10885;
            HEAPF64[$sj1array724>>3] = $10886;
            $10887 = !($10886 >= -1.0000020000000001);
            $10888 = !($10886 <= 1.0000020000000001);
            $or$cond378 = $10887 | $10888;
            do {
             if ($or$cond378) {
              $10898 = (__Z13__DOUBLE_BITSd($10886)|0);
              $10899 = tempRet0;
              $10900 = $10899 & 2147483647;
              $10901 = ($10900>>>0)>(2146435072);
              $10902 = ($10898>>>0)>(0);
              $10903 = ($10900|0)==(2146435072);
              $10904 = $10903 & $10902;
              $10905 = $10901 | $10904;
              if (!($10905)) {
               $ij1726$0866 = 0;
               break;
              }
              HEAP8[$j1valid725>>0] = 1;
              HEAPF64[$cj1array723>>3] = 1.0;
              HEAPF64[$sj1array724>>3] = 0.0;
              HEAPF64[$j1array722>>3] = 0.0;
              $ij1726$0866 = 0;
             } else {
              HEAP8[$551>>0] = 1;
              HEAP8[$j1valid725>>0] = 1;
              $10889 = +HEAPF64[$sj1array724>>3];
              $10890 = (+__Z6IKasind($10889));
              HEAPF64[$j1array722>>3] = $10890;
              $10891 = (+__Z5IKcosd($10890));
              HEAPF64[$cj1array723>>3] = $10891;
              $10892 = +HEAPF64[$sj1array724>>3];
              HEAPF64[$552>>3] = $10892;
              $10893 = +HEAPF64[$j1array722>>3];
              $10894 = $10893 > 0.0;
              $$v22 = $10894 ? 3.14159265358979 : -3.14159265358979;
              $10895 = $$v22 - $10893;
              HEAPF64[$553>>3] = $10895;
              $10896 = +HEAPF64[$cj1array723>>3];
              $10897 = -$10896;
              HEAPF64[$554>>3] = $10897;
              $ij1726$0866 = 0;
             }
            } while(0);
            while(1) {
             $10906 = (($j1valid725) + ($ij1726$0866)|0);
             $10907 = HEAP8[$10906>>0]|0;
             $10908 = ($10907<<24>>24)==(0);
             do {
              if (!($10908)) {
               $10909 = $ij1726$0866&255;
               HEAP8[$4>>0] = $10909;
               HEAP8[$5>>0] = -1;
               $iij1727$0863 = (($ij1726$0866) + 1)|0;
               $10910 = ($iij1727$0863|0)<(2);
               do {
                if ($10910) {
                 $10911 = (($sj1array724) + ($ij1726$0866<<3)|0);
                 $10912 = (($j1valid725) + ($iij1727$0863)|0);
                 $10913 = HEAP8[$10912>>0]|0;
                 $10914 = ($10913<<24>>24)==(0);
                 if ($10914) {
                  break;
                 }
                 $10915 = (($cj1array723) + ($ij1726$0866<<3)|0);
                 $10916 = +HEAPF64[$10915>>3];
                 $10917 = (($cj1array723) + ($iij1727$0863<<3)|0);
                 $10918 = +HEAPF64[$10917>>3];
                 $10919 = $10916 - $10918;
                 $10920 = (+__Z5IKabsd($10919));
                 $10921 = $10920 < 9.9999999999999995E-7;
                 if (!($10921)) {
                  break;
                 }
                 $10922 = +HEAPF64[$10911>>3];
                 $10923 = (($sj1array724) + ($iij1727$0863<<3)|0);
                 $10924 = +HEAPF64[$10923>>3];
                 $10925 = $10922 - $10924;
                 $10926 = (+__Z5IKabsd($10925));
                 $10927 = $10926 < 9.9999999999999995E-7;
                 if (!($10927)) {
                  break;
                 }
                 HEAP8[$10912>>0] = 0;
                 $10928 = $iij1727$0863&255;
                 HEAP8[$5>>0] = $10928;
                }
               } while(0);
               $10929 = (($j1array722) + ($ij1726$0866<<3)|0);
               $10930 = +HEAPF64[$10929>>3];
               HEAPF64[$3>>3] = $10930;
               $10931 = (($cj1array723) + ($ij1726$0866<<3)|0);
               $10932 = +HEAPF64[$10931>>3];
               HEAPF64[$555>>3] = $10932;
               $10933 = (($sj1array724) + ($ij1726$0866<<3)|0);
               $10934 = +HEAPF64[$10933>>3];
               HEAPF64[$556>>3] = $10934;
               $10935 = +HEAPF64[$3>>3];
               $10936 = (+__Z5IKcosd($10935));
               $10937 = (+__Z5IKsind($10935));
               $10938 = +HEAPF64[$43>>3];
               $10939 = $10938 * $10938;
               $10940 = +HEAPF64[$45>>3];
               $10941 = $10940 * $10940;
               $10942 = $10713 * $10940;
               $10943 = $10714 * $10938;
               $10944 = $10936 * 1.5243902439024399;
               $10945 = $10937 * 0.65600000000000003;
               $10946 = $10936 * $10943;
               $10947 = $10936 * $10942;
               $10948 = $10946 + $10947;
               $10949 = $10944 * $10941;
               $10950 = $10944 * $10939;
               $10951 = $10950 + $10949;
               $10952 = $10936 * 0.0474569359756098;
               $10953 = $10952 + $10951;
               $10954 = $10945 * $10942;
               $10955 = -0.03113175 - $10954;
               $10956 = $10955 - $10941;
               $10957 = $10956 - $10939;
               $10958 = $10945 * $10943;
               $10959 = $10957 - $10958;
               $10960 = (+__Z5IKabsd($10948));
               $10961 = $10960 > 5.0000000000000004E-6;
               if ($10961) {
                break;
               }
               $10962 = +HEAPF64[$73>>3];
               $10963 = $10962 * 0.27650000000000002;
               $10964 = $10963 + 0.32800000000000001;
               $10965 = $10937 * $10942;
               $10966 = $10965 + $10964;
               $10967 = $10937 * $10943;
               $10968 = $10967 + $10966;
               $10969 = (+__Z5IKabsd($10968));
               $10970 = $10969 > 5.0000000000000004E-6;
               if ($10970) {
                break;
               }
               $10971 = (+__Z5IKabsd($10953));
               $10972 = $10971 > 5.0000000000000004E-6;
               if ($10972) {
                break;
               }
               $10973 = (+__Z5IKabsd($10959));
               $10974 = $10973 > 5.0000000000000004E-6;
               if ($10974) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $10975 = (($ij1726$0866) + 1)|0;
             $exitcond1364 = ($10975|0)==(2);
             if ($exitcond1364) {
              break L35;
             } else {
              $ij1726$0866 = $10975;
             }
            }
           }
           $10719 = +HEAPF64[$45>>3];
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1280,$10712,$10719,1.9999999999999999E-6);
           $10720 = HEAP8[$542>>0]|0;
           $10721 = ($10720<<24>>24)==(0);
           if ($10721) {
            break L35;
           }
           $10722 = +HEAPF64[$x1280>>3];
           $10723 = +HEAPF64[$45>>3];
           $10724 = -$10723;
           $10725 = +HEAPF64[$43>>3];
           $10726 = $10725 * $10725;
           $10727 = $10723 * $10723;
           $10728 = $10727 + $10726;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$60>>3] = $10728;
           $10729 = +HEAPF64[$43>>3];
           $10730 = +HEAPF64[$26>>3];
           $10731 = $10729 * $10730;
           $10732 = +HEAPF64[$45>>3];
           $10733 = +HEAPF64[$32>>3];
           $10734 = $10732 * $10733;
           $10735 = $10731 + $10734;
           HEAPF64[$61>>3] = $10735;
           $10736 = +HEAPF64[$43>>3];
           $10737 = +HEAPF64[$28>>3];
           $10738 = $10736 * $10737;
           $10739 = +HEAPF64[$45>>3];
           $10740 = +HEAPF64[$34>>3];
           $10741 = $10739 * $10740;
           $10742 = $10738 + $10741;
           HEAPF64[$62>>3] = $10742;
           $10743 = +HEAPF64[$43>>3];
           $10744 = +HEAPF64[$30>>3];
           $10745 = $10743 * $10744;
           $10746 = +HEAPF64[$45>>3];
           $10747 = +HEAPF64[$36>>3];
           $10748 = $10746 * $10747;
           $10749 = $10745 + $10748;
           HEAPF64[$63>>3] = $10749;
           $10750 = +HEAPF64[$38>>3];
           $10751 = $10750 * $10724;
           HEAPF64[$64>>3] = $10751;
           $10752 = +HEAPF64[$43>>3];
           $10753 = +HEAPF64[$38>>3];
           $10754 = $10752 * $10753;
           HEAPF64[$65>>3] = $10754;
           $10755 = +HEAPF64[$40>>3];
           $10756 = $10755 * $10724;
           HEAPF64[$67>>3] = $10756;
           $10757 = +HEAPF64[$43>>3];
           $10758 = +HEAPF64[$40>>3];
           $10759 = $10757 * $10758;
           HEAPF64[$68>>3] = $10759;
           $10760 = +HEAPF64[$42>>3];
           $10761 = $10760 * $10724;
           HEAPF64[$70>>3] = $10761;
           $10762 = +HEAPF64[$43>>3];
           $10763 = +HEAPF64[$42>>3];
           $10764 = $10762 * $10763;
           HEAPF64[$71>>3] = $10764;
           HEAPF64[$488>>3] = $10713;
           HEAPF64[$487>>3] = $10714;
           $10765 = 3.1415926500000002 - $10722;
           HEAPF64[$this>>3] = $10765;
           $10766 = +HEAPF64[$43>>3];
           $10767 = $10627 * $10766;
           $10768 = $10627 * $10724;
           $10769 = (+__Z5IKabsd(0.0));
           $10770 = $10769 < 9.9999999999999995E-7;
           if ($10770) {
            break L35;
           }
           HEAP16[$j1valid718>>1] = 0;
           HEAP8[$6>>0] = 2;
           $10771 = +HEAPF64[$45>>3];
           $10772 = $10767 * $10771;
           $10773 = +HEAPF64[$43>>3];
           $10774 = $10768 * $10773;
           $10775 = $10772 + $10774;
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1282,$10775,-1);
           $10776 = HEAP8[$543>>0]|0;
           $10777 = ($10776<<24>>24)==(0);
           if ($10777) {
            break L35;
           }
           $10778 = +HEAPF64[$x1282>>3];
           $10779 = $10778 * 0.32800000000000001;
           $10780 = +HEAPF64[$73>>3];
           $10781 = $10780 * -0.27650000000000002;
           $10782 = $10778 * $10781;
           $10783 = $10782 - $10779;
           HEAPF64[$sj1array717>>3] = $10783;
           $10784 = !($10783 >= -1.0000020000000001);
           $10785 = !($10783 <= 1.0000020000000001);
           $or$cond377 = $10784 | $10785;
           do {
            if ($or$cond377) {
             $10795 = (__Z13__DOUBLE_BITSd($10783)|0);
             $10796 = tempRet0;
             $10797 = $10796 & 2147483647;
             $10798 = ($10797>>>0)>(2146435072);
             $10799 = ($10795>>>0)>(0);
             $10800 = ($10797|0)==(2146435072);
             $10801 = $10800 & $10799;
             $10802 = $10798 | $10801;
             if (!($10802)) {
              $ij1719$0870 = 0;
              break;
             }
             HEAP8[$j1valid718>>0] = 1;
             HEAPF64[$cj1array716>>3] = 1.0;
             HEAPF64[$sj1array717>>3] = 0.0;
             HEAPF64[$j1array715>>3] = 0.0;
             $ij1719$0870 = 0;
            } else {
             HEAP8[$544>>0] = 1;
             HEAP8[$j1valid718>>0] = 1;
             $10786 = +HEAPF64[$sj1array717>>3];
             $10787 = (+__Z6IKasind($10786));
             HEAPF64[$j1array715>>3] = $10787;
             $10788 = (+__Z5IKcosd($10787));
             HEAPF64[$cj1array716>>3] = $10788;
             $10789 = +HEAPF64[$sj1array717>>3];
             HEAPF64[$545>>3] = $10789;
             $10790 = +HEAPF64[$j1array715>>3];
             $10791 = $10790 > 0.0;
             $$v24 = $10791 ? 3.14159265358979 : -3.14159265358979;
             $10792 = $$v24 - $10790;
             HEAPF64[$546>>3] = $10792;
             $10793 = +HEAPF64[$cj1array716>>3];
             $10794 = -$10793;
             HEAPF64[$547>>3] = $10794;
             $ij1719$0870 = 0;
            }
           } while(0);
           while(1) {
            $10803 = (($j1valid718) + ($ij1719$0870)|0);
            $10804 = HEAP8[$10803>>0]|0;
            $10805 = ($10804<<24>>24)==(0);
            do {
             if (!($10805)) {
              $10806 = $ij1719$0870&255;
              HEAP8[$4>>0] = $10806;
              HEAP8[$5>>0] = -1;
              $iij1720$0867 = (($ij1719$0870) + 1)|0;
              $10807 = ($iij1720$0867|0)<(2);
              do {
               if ($10807) {
                $10808 = (($sj1array717) + ($ij1719$0870<<3)|0);
                $10809 = (($j1valid718) + ($iij1720$0867)|0);
                $10810 = HEAP8[$10809>>0]|0;
                $10811 = ($10810<<24>>24)==(0);
                if ($10811) {
                 break;
                }
                $10812 = (($cj1array716) + ($ij1719$0870<<3)|0);
                $10813 = +HEAPF64[$10812>>3];
                $10814 = (($cj1array716) + ($iij1720$0867<<3)|0);
                $10815 = +HEAPF64[$10814>>3];
                $10816 = $10813 - $10815;
                $10817 = (+__Z5IKabsd($10816));
                $10818 = $10817 < 9.9999999999999995E-7;
                if (!($10818)) {
                 break;
                }
                $10819 = +HEAPF64[$10808>>3];
                $10820 = (($sj1array717) + ($iij1720$0867<<3)|0);
                $10821 = +HEAPF64[$10820>>3];
                $10822 = $10819 - $10821;
                $10823 = (+__Z5IKabsd($10822));
                $10824 = $10823 < 9.9999999999999995E-7;
                if (!($10824)) {
                 break;
                }
                HEAP8[$10809>>0] = 0;
                $10825 = $iij1720$0867&255;
                HEAP8[$5>>0] = $10825;
               }
              } while(0);
              $10826 = (($j1array715) + ($ij1719$0870<<3)|0);
              $10827 = +HEAPF64[$10826>>3];
              HEAPF64[$3>>3] = $10827;
              $10828 = (($cj1array716) + ($ij1719$0870<<3)|0);
              $10829 = +HEAPF64[$10828>>3];
              HEAPF64[$548>>3] = $10829;
              $10830 = (($sj1array717) + ($ij1719$0870<<3)|0);
              $10831 = +HEAPF64[$10830>>3];
              HEAPF64[$549>>3] = $10831;
              $10832 = +HEAPF64[$3>>3];
              $10833 = (+__Z5IKcosd($10832));
              $10834 = (+__Z5IKsind($10832));
              $10835 = +HEAPF64[$43>>3];
              $10836 = $10835 * $10835;
              $10837 = +HEAPF64[$45>>3];
              $10838 = $10837 * $10837;
              $10839 = $10767 * $10837;
              $10840 = $10768 * $10835;
              $10841 = $10833 * 1.5243902439024399;
              $10842 = $10834 * 0.65600000000000003;
              $10843 = $10833 * $10840;
              $10844 = $10833 * $10839;
              $10845 = $10843 + $10844;
              $10846 = -$10839;
              $10847 = $10841 * $10836;
              $10848 = $10833 * 0.0474569359756098;
              $10849 = $10848 + $10847;
              $10850 = $10841 * $10838;
              $10851 = $10849 + $10850;
              $10852 = -0.03113175 - $10838;
              $10853 = $10852 - $10836;
              $10854 = $10842 * $10846;
              $10855 = $10854 + $10853;
              $10856 = $10842 * $10840;
              $10857 = $10855 - $10856;
              $10858 = (+__Z5IKabsd($10845));
              $10859 = $10858 > 5.0000000000000004E-6;
              if ($10859) {
               break;
              }
              $10860 = +HEAPF64[$73>>3];
              $10861 = $10846 - $10840;
              $10862 = $10834 * 0.32800000000000001;
              $10863 = $10861 - $10862;
              $10864 = $10860 * -0.27650000000000002;
              $10865 = $10834 * $10864;
              $10866 = $10863 + $10865;
              $10867 = (+__Z5IKabsd($10866));
              $10868 = $10867 > 5.0000000000000004E-6;
              if ($10868) {
               break;
              }
              $10869 = (+__Z5IKabsd($10851));
              $10870 = $10869 > 5.0000000000000004E-6;
              if ($10870) {
               break;
              }
              $10871 = (+__Z5IKabsd($10857));
              $10872 = $10871 > 5.0000000000000004E-6;
              if ($10872) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $10873 = (($ij1719$0870) + 1)|0;
            $exitcond1365 = ($10873|0)==(2);
            if ($exitcond1365) {
             break L35;
            } else {
             $ij1719$0870 = $10873;
            }
           }
          }
         } while(0);
         $11187 = +HEAPF64[$47>>3];
         $11188 = (+__Z5IKabsd($11187));
         $11189 = +HEAPF64[$7>>3];
         $11190 = $11189 + 3.14159265358979;
         $11191 = (+__Z6IKfmoddd($11190,6.2831853071795898));
         $11192 = $11191 + -3.14159265358979;
         $11193 = (+__Z5IKabsd($11192));
         $11194 = $11188 + $11193;
         $11195 = +HEAPF64[$43>>3];
         $11196 = +HEAPF64[$488>>3];
         $11197 = $11195 * $11196;
         $11198 = +HEAPF64[$487>>3];
         $11199 = +HEAPF64[$45>>3];
         $11200 = $11198 * $11199;
         $11201 = $11200 - $11197;
         $11202 = (+__Z5IKabsd($11194));
         $11203 = $11202 < 9.9999999999999995E-7;
         do {
          if ($11203) {
           $11204 = +HEAPF64[$60>>3];
           $11205 = 0.36542025 - $11204;
           $11206 = (+__Z5IKabsd($11205));
           $11207 = $11206 < 9.9999999999999995E-7;
           if (!($11207)) {
            break;
           }
           $11208 = (+__Z5IKabsd($11201));
           $11209 = $11208 < 9.9999999999999995E-7;
           if (!($11209)) {
            break;
           }
           HEAP16[$j1valid748>>1] = 0;
           HEAP8[$6>>0] = 2;
           $11210 = +HEAPF64[$45>>3];
           $11211 = $11210 * -1.6542597187758501;
           $11212 = +HEAPF64[$488>>3];
           $11213 = $11211 * $11212;
           $11214 = +HEAPF64[$487>>3];
           $11215 = $11214 * -1.6542597187758501;
           $11216 = +HEAPF64[$43>>3];
           $11217 = $11215 * $11216;
           $11218 = $11213 + $11217;
           HEAPF64[$sj1array747>>3] = $11218;
           $11219 = !($11218 >= -1.0000020000000001);
           $11220 = !($11218 <= 1.0000020000000001);
           $or$cond396 = $11219 | $11220;
           do {
            if ($or$cond396) {
             $11230 = (__Z13__DOUBLE_BITSd($11218)|0);
             $11231 = tempRet0;
             $11232 = $11231 & 2147483647;
             $11233 = ($11232>>>0)>(2146435072);
             $11234 = ($11230>>>0)>(0);
             $11235 = ($11232|0)==(2146435072);
             $11236 = $11235 & $11234;
             $11237 = $11233 | $11236;
             if (!($11237)) {
              $ij1749$0846 = 0;
              break;
             }
             HEAP8[$j1valid748>>0] = 1;
             HEAPF64[$cj1array746>>3] = 1.0;
             HEAPF64[$sj1array747>>3] = 0.0;
             HEAPF64[$j1array745>>3] = 0.0;
             $ij1749$0846 = 0;
            } else {
             HEAP8[$589>>0] = 1;
             HEAP8[$j1valid748>>0] = 1;
             $11221 = +HEAPF64[$sj1array747>>3];
             $11222 = (+__Z6IKasind($11221));
             HEAPF64[$j1array745>>3] = $11222;
             $11223 = (+__Z5IKcosd($11222));
             HEAPF64[$cj1array746>>3] = $11223;
             $11224 = +HEAPF64[$sj1array747>>3];
             HEAPF64[$590>>3] = $11224;
             $11225 = +HEAPF64[$j1array745>>3];
             $11226 = $11225 > 0.0;
             $$v16 = $11226 ? 3.14159265358979 : -3.14159265358979;
             $11227 = $$v16 - $11225;
             HEAPF64[$591>>3] = $11227;
             $11228 = +HEAPF64[$cj1array746>>3];
             $11229 = -$11228;
             HEAPF64[$592>>3] = $11229;
             $ij1749$0846 = 0;
            }
           } while(0);
           while(1) {
            $11238 = (($j1valid748) + ($ij1749$0846)|0);
            $11239 = HEAP8[$11238>>0]|0;
            $11240 = ($11239<<24>>24)==(0);
            do {
             if (!($11240)) {
              $11241 = $ij1749$0846&255;
              HEAP8[$4>>0] = $11241;
              HEAP8[$5>>0] = -1;
              $iij1750$0843 = (($ij1749$0846) + 1)|0;
              $11242 = ($iij1750$0843|0)<(2);
              do {
               if ($11242) {
                $11243 = (($sj1array747) + ($ij1749$0846<<3)|0);
                $11244 = (($j1valid748) + ($iij1750$0843)|0);
                $11245 = HEAP8[$11244>>0]|0;
                $11246 = ($11245<<24>>24)==(0);
                if ($11246) {
                 break;
                }
                $11247 = (($cj1array746) + ($ij1749$0846<<3)|0);
                $11248 = +HEAPF64[$11247>>3];
                $11249 = (($cj1array746) + ($iij1750$0843<<3)|0);
                $11250 = +HEAPF64[$11249>>3];
                $11251 = $11248 - $11250;
                $11252 = (+__Z5IKabsd($11251));
                $11253 = $11252 < 9.9999999999999995E-7;
                if (!($11253)) {
                 break;
                }
                $11254 = +HEAPF64[$11243>>3];
                $11255 = (($sj1array747) + ($iij1750$0843<<3)|0);
                $11256 = +HEAPF64[$11255>>3];
                $11257 = $11254 - $11256;
                $11258 = (+__Z5IKabsd($11257));
                $11259 = $11258 < 9.9999999999999995E-7;
                if (!($11259)) {
                 break;
                }
                HEAP8[$11244>>0] = 0;
                $11260 = $iij1750$0843&255;
                HEAP8[$5>>0] = $11260;
               }
              } while(0);
              $11261 = (($j1array745) + ($ij1749$0846<<3)|0);
              $11262 = +HEAPF64[$11261>>3];
              HEAPF64[$3>>3] = $11262;
              $11263 = (($cj1array746) + ($ij1749$0846<<3)|0);
              $11264 = +HEAPF64[$11263>>3];
              HEAPF64[$593>>3] = $11264;
              $11265 = (($sj1array747) + ($ij1749$0846<<3)|0);
              $11266 = +HEAPF64[$11265>>3];
              HEAPF64[$594>>3] = $11266;
              $11267 = +HEAPF64[$3>>3];
              $11268 = (+__Z5IKsind($11267));
              $11269 = (+__Z5IKcosd($11267));
              $11270 = +HEAPF64[$487>>3];
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1328,$11270,-1);
              $11271 = HEAP8[$595>>0]|0;
              $11272 = ($11271<<24>>24)==(0);
              if ($11272) {
               break;
              }
              $11273 = +HEAPF64[$x1328>>3];
              $11274 = +HEAPF64[$488>>3];
              $11275 = $11274 * $11274;
              $11276 = $11273 * $11275;
              $11277 = +HEAPF64[$45>>3];
              $11278 = $11274 * $11277;
              $11279 = $11268 * $11278;
              $11280 = +HEAPF64[$43>>3];
              $11281 = $11269 * $11280;
              $11282 = +HEAPF64[$487>>3];
              $11283 = $11280 * $11282;
              $11284 = $11268 * $11283;
              $11285 = $11269 * 0.60450000000000004;
              $11286 = $11279 * 0.65600000000000003;
              $11287 = -0.39655200000000002 - $11286;
              $11288 = $11284 * 0.65600000000000003;
              $11289 = $11287 - $11288;
              $11290 = +HEAPF64[$24>>3];
              $11291 = $11276 * $11290;
              $11292 = $11281 * $11291;
              $11293 = -$11282;
              $11294 = $11290 * $11293;
              $11295 = $11281 * $11294;
              $11296 = $11295 - $11292;
              $11297 = +HEAPF64[$23>>3];
              $11298 = $11297 * $11293;
              $11299 = $11281 * $11298;
              $11300 = $11276 * $11297;
              $11301 = $11281 * $11300;
              $11302 = $11299 - $11301;
              $11303 = (+__Z5IKabsd($11285));
              $11304 = $11303 > 5.0000000000000004E-6;
              if ($11304) {
               break;
              }
              $11305 = $11284 + 0.60450000000000004;
              $11306 = $11279 + $11305;
              $11307 = (+__Z5IKabsd($11306));
              $11308 = $11307 > 5.0000000000000004E-6;
              if ($11308) {
               break;
              }
              $11309 = (+__Z5IKabsd($11289));
              $11310 = $11309 > 5.0000000000000004E-6;
              if ($11310) {
               break;
              }
              $11311 = (+__Z5IKabsd($11296));
              $11312 = $11311 > 5.0000000000000004E-6;
              if ($11312) {
               break;
              }
              $11313 = (+__Z5IKabsd($11302));
              $11314 = $11313 > 5.0000000000000004E-6;
              if ($11314) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $11315 = (($ij1749$0846) + 1)|0;
            $exitcond1359 = ($11315|0)==(2);
            if ($exitcond1359) {
             break L35;
            } else {
             $ij1749$0846 = $11315;
            }
           }
          }
         } while(0);
         $11316 = +HEAPF64[$7>>3];
         $11317 = (+__Z6IKfmoddd($11316,6.2831853071795898));
         $11318 = $11317 + -3.14159265358979;
         $11319 = (+__Z5IKabsd($11318));
         $11320 = +HEAPF64[$47>>3];
         $11321 = (+__Z5IKabsd($11320));
         $11322 = $11319 + $11321;
         $11323 = +HEAPF64[$43>>3];
         $11324 = +HEAPF64[$488>>3];
         $11325 = $11323 * $11324;
         $11326 = +HEAPF64[$487>>3];
         $11327 = +HEAPF64[$45>>3];
         $11328 = $11326 * $11327;
         $11329 = $11328 - $11325;
         $11330 = (+__Z5IKabsd($11322));
         $11331 = $11330 < 9.9999999999999995E-7;
         if (!($11331)) {
          break;
         }
         $11332 = +HEAPF64[$60>>3];
         $11333 = 0.0026522500000000001 - $11332;
         $11334 = (+__Z5IKabsd($11333));
         $11335 = $11334 < 9.9999999999999995E-7;
         if (!($11335)) {
          break;
         }
         $11336 = (+__Z5IKabsd($11329));
         $11337 = $11336 < 9.9999999999999995E-7;
         if (!($11337)) {
          break;
         }
         HEAP16[$j1valid757>>1] = 0;
         HEAP8[$6>>0] = 2;
         $11338 = +HEAPF64[$45>>3];
         $11339 = $11338 * -19.417475728155299;
         $11340 = +HEAPF64[$488>>3];
         $11341 = $11339 * $11340;
         $11342 = +HEAPF64[$487>>3];
         $11343 = $11342 * -19.417475728155299;
         $11344 = +HEAPF64[$43>>3];
         $11345 = $11343 * $11344;
         $11346 = $11341 + $11345;
         HEAPF64[$sj1array756>>3] = $11346;
         $11347 = !($11346 >= -1.0000020000000001);
         $11348 = !($11346 <= 1.0000020000000001);
         $or$cond399 = $11347 | $11348;
         do {
          if ($or$cond399) {
           $11358 = (__Z13__DOUBLE_BITSd($11346)|0);
           $11359 = tempRet0;
           $11360 = $11359 & 2147483647;
           $11361 = ($11360>>>0)>(2146435072);
           $11362 = ($11358>>>0)>(0);
           $11363 = ($11360|0)==(2146435072);
           $11364 = $11363 & $11362;
           $11365 = $11361 | $11364;
           if (!($11365)) {
            $ij1758$0842 = 0;
            break;
           }
           HEAP8[$j1valid757>>0] = 1;
           HEAPF64[$cj1array755>>3] = 1.0;
           HEAPF64[$sj1array756>>3] = 0.0;
           HEAPF64[$j1array754>>3] = 0.0;
           $ij1758$0842 = 0;
          } else {
           HEAP8[$596>>0] = 1;
           HEAP8[$j1valid757>>0] = 1;
           $11349 = +HEAPF64[$sj1array756>>3];
           $11350 = (+__Z6IKasind($11349));
           HEAPF64[$j1array754>>3] = $11350;
           $11351 = (+__Z5IKcosd($11350));
           HEAPF64[$cj1array755>>3] = $11351;
           $11352 = +HEAPF64[$sj1array756>>3];
           HEAPF64[$597>>3] = $11352;
           $11353 = +HEAPF64[$j1array754>>3];
           $11354 = $11353 > 0.0;
           $$v = $11354 ? 3.14159265358979 : -3.14159265358979;
           $11355 = $$v - $11353;
           HEAPF64[$598>>3] = $11355;
           $11356 = +HEAPF64[$cj1array755>>3];
           $11357 = -$11356;
           HEAPF64[$599>>3] = $11357;
           $ij1758$0842 = 0;
          }
         } while(0);
         while(1) {
          $11366 = (($j1valid757) + ($ij1758$0842)|0);
          $11367 = HEAP8[$11366>>0]|0;
          $11368 = ($11367<<24>>24)==(0);
          do {
           if (!($11368)) {
            $11369 = $ij1758$0842&255;
            HEAP8[$4>>0] = $11369;
            HEAP8[$5>>0] = -1;
            $iij1759$0839 = (($ij1758$0842) + 1)|0;
            $11370 = ($iij1759$0839|0)<(2);
            do {
             if ($11370) {
              $11371 = (($sj1array756) + ($ij1758$0842<<3)|0);
              $11372 = (($j1valid757) + ($iij1759$0839)|0);
              $11373 = HEAP8[$11372>>0]|0;
              $11374 = ($11373<<24>>24)==(0);
              if ($11374) {
               break;
              }
              $11375 = (($cj1array755) + ($ij1758$0842<<3)|0);
              $11376 = +HEAPF64[$11375>>3];
              $11377 = (($cj1array755) + ($iij1759$0839<<3)|0);
              $11378 = +HEAPF64[$11377>>3];
              $11379 = $11376 - $11378;
              $11380 = (+__Z5IKabsd($11379));
              $11381 = $11380 < 9.9999999999999995E-7;
              if (!($11381)) {
               break;
              }
              $11382 = +HEAPF64[$11371>>3];
              $11383 = (($sj1array756) + ($iij1759$0839<<3)|0);
              $11384 = +HEAPF64[$11383>>3];
              $11385 = $11382 - $11384;
              $11386 = (+__Z5IKabsd($11385));
              $11387 = $11386 < 9.9999999999999995E-7;
              if (!($11387)) {
               break;
              }
              HEAP8[$11372>>0] = 0;
              $11388 = $iij1759$0839&255;
              HEAP8[$5>>0] = $11388;
             }
            } while(0);
            $11389 = (($j1array754) + ($ij1758$0842<<3)|0);
            $11390 = +HEAPF64[$11389>>3];
            HEAPF64[$3>>3] = $11390;
            $11391 = (($cj1array755) + ($ij1758$0842<<3)|0);
            $11392 = +HEAPF64[$11391>>3];
            HEAPF64[$600>>3] = $11392;
            $11393 = (($sj1array756) + ($ij1758$0842<<3)|0);
            $11394 = +HEAPF64[$11393>>3];
            HEAPF64[$601>>3] = $11394;
            $11395 = +HEAPF64[$3>>3];
            $11396 = (+__Z5IKsind($11395));
            $11397 = (+__Z5IKcosd($11395));
            $11398 = +HEAPF64[$487>>3];
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1337,$11398,-1);
            $11399 = HEAP8[$602>>0]|0;
            $11400 = ($11399<<24>>24)==(0);
            if ($11400) {
             break;
            }
            $11401 = +HEAPF64[$x1337>>3];
            $11402 = +HEAPF64[$488>>3];
            $11403 = $11402 * $11402;
            $11404 = +HEAPF64[$487>>3];
            $11405 = +HEAPF64[$43>>3];
            $11406 = $11404 * $11405;
            $11407 = +HEAPF64[$45>>3];
            $11408 = $11402 * $11407;
            $11409 = $11396 * $11408;
            $11410 = $11401 * $11405;
            $11411 = $11403 * $11410;
            $11412 = $11397 * $11411;
            $11413 = $11397 * 0.051499999999999997;
            $11414 = $11396 * -0.65600000000000003;
            $11415 = $11414 * $11406;
            $11416 = $11415 + -0.033784000000000002;
            $11417 = $11409 * 0.65600000000000003;
            $11418 = $11416 - $11417;
            $11419 = +HEAPF64[$24>>3];
            $11420 = -$11419;
            $11421 = $11412 * $11420;
            $11422 = $11406 * $11420;
            $11423 = $11397 * $11422;
            $11424 = $11421 + $11423;
            $11425 = +HEAPF64[$23>>3];
            $11426 = -$11425;
            $11427 = $11412 * $11426;
            $11428 = $11406 * $11426;
            $11429 = $11397 * $11428;
            $11430 = $11427 + $11429;
            $11431 = (+__Z5IKabsd($11413));
            $11432 = $11431 > 5.0000000000000004E-6;
            if ($11432) {
             break;
            }
            $11433 = $11409 + 0.051499999999999997;
            $11434 = $11396 * $11406;
            $11435 = $11434 + $11433;
            $11436 = (+__Z5IKabsd($11435));
            $11437 = $11436 > 5.0000000000000004E-6;
            if ($11437) {
             break;
            }
            $11438 = (+__Z5IKabsd($11418));
            $11439 = $11438 > 5.0000000000000004E-6;
            if ($11439) {
             break;
            }
            $11440 = (+__Z5IKabsd($11424));
            $11441 = $11440 > 5.0000000000000004E-6;
            if ($11441) {
             break;
            }
            $11442 = (+__Z5IKabsd($11430));
            $11443 = $11442 > 5.0000000000000004E-6;
            if ($11443) {
             break;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           }
          } while(0);
          $11444 = (($ij1758$0842) + 1)|0;
          $exitcond = ($11444|0)==(2);
          if ($exitcond) {
           break;
          } else {
           $ij1758$0842 = $11444;
          }
         }
        }
       } while(0);
       $11901 = (($ij0596$0895) + 1)|0;
       $exitcond1372 = ($11901|0)==(2);
       if ($exitcond1372) {
        break L8;
       } else {
        $ij0596$0895 = $11901;
       }
      }
     }
    }
    $944 = +HEAPF64[$73>>3];
    $945 = $944 * $944;
    $946 = $945 + 1.4072051509275401;
    $947 = $944 * 2.3725135623869802;
    $948 = $947 + $946;
    $949 = +HEAPF64[$23>>3];
    $950 = $949 * $949;
    $951 = +HEAPF64[$74>>3];
    $952 = $951 * $951;
    $953 = $950 * $952;
    $954 = $948 + $953;
    $955 = (+__Z5IKabsd($954));
    $956 = $955 < 9.9999999999999995E-7;
    if (!($956)) {
     $957 = $949 * $951;
     $958 = (+__Z5IKabsd($957));
     $959 = $944 * 0.27650000000000002;
     $960 = $959 + 0.32800000000000001;
     $961 = (+__Z5IKabsd($960));
     $962 = $961 * 3.6166365280289301;
     $963 = $958 + $962;
     $964 = (+__Z5IKabsd($963));
     $965 = $964 < 9.9999999999999995E-7;
     if (!($965)) {
      HEAP16[$j1valid174>>1] = 0;
      HEAP8[$6>>0] = 2;
      $4104 = +HEAPF64[$73>>3];
      $4105 = $4104 * 0.27650000000000002;
      $4106 = $4105 + 0.32800000000000001;
      $4107 = +HEAPF64[$23>>3];
      $4108 = $4107 * -0.27650000000000002;
      $4109 = +HEAPF64[$74>>3];
      $4110 = $4108 * $4109;
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x694,$4106,$4110,1.9999999999999999E-6);
      $4111 = HEAP8[$209>>0]|0;
      $4112 = ($4111<<24>>24)==(0);
      if ($4112) {
       break;
      }
      $4113 = +HEAPF64[$x694>>3];
      $4114 = $4106 * $4106;
      $4115 = +HEAPF64[$23>>3];
      $4116 = $4115 * $4115;
      $4117 = $4116 * 0.076452249999999999;
      $4118 = +HEAPF64[$74>>3];
      $4119 = $4118 * $4118;
      $4120 = $4117 * $4119;
      $4121 = $4114 + $4120;
      $4122 = $4121 < -1.0000000000000001E-5;
      if ($4122) {
       break;
      }
      $4123 = (+__Z6IKsqrtd($4121));
      $4124 = (+__Z5IKabsd($4123));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x695,$4124,-1);
      $4125 = HEAP8[$210>>0]|0;
      $4126 = ($4125<<24>>24)==(0);
      if ($4126) {
       break;
      }
      $4127 = +HEAPF64[$47>>3];
      $4128 = +HEAPF64[$x695>>3];
      $4129 = $4127 * $4128;
      $4130 = $4129 < -1.0000020000000001;
      $4131 = $4129 > 1.0000020000000001;
      $or$cond167 = $4130 | $4131;
      if ($or$cond167) {
       break;
      }
      $4132 = (+__Z6IKasind($4129));
      $4133 = $4132 - $4113;
      HEAPF64[$j1array171>>3] = $4133;
      $4134 = (+__Z5IKsind($4133));
      HEAPF64[$sj1array173>>3] = $4134;
      $4135 = (+__Z5IKcosd($4133));
      HEAPF64[$cj1array172>>3] = $4135;
      $4136 = 3.14159265358979 - $4113;
      $4137 = $4136 - $4132;
      HEAPF64[$211>>3] = $4137;
      $4138 = (+__Z5IKsind($4137));
      HEAPF64[$212>>3] = $4138;
      $4139 = +HEAPF64[$211>>3];
      $4140 = (+__Z5IKcosd($4139));
      HEAPF64[$213>>3] = $4140;
      $4141 = +HEAPF64[$j1array171>>3];
      $4142 = $4141 > 3.14159265358979;
      if ($4142) {
       $4143 = $4141 + -6.2831853071795898;
       HEAPF64[$j1array171>>3] = $4143;
      } else {
       $4144 = $4141 < -3.14159265358979;
       if ($4144) {
        $4145 = $4141 + 6.2831853071795898;
        HEAPF64[$j1array171>>3] = $4145;
       }
      }
      HEAP8[$j1valid174>>0] = 1;
      $4146 = +HEAPF64[$211>>3];
      $4147 = $4146 > 3.14159265358979;
      if ($4147) {
       $4148 = $4146 + -6.2831853071795898;
       HEAPF64[$211>>3] = $4148;
      } else {
       $4149 = $4146 < -3.14159265358979;
       if ($4149) {
        $4150 = $4146 + 6.2831853071795898;
        HEAPF64[$211>>3] = $4150;
       }
      }
      HEAP8[$214>>0] = 1;
      $ij1175$01079 = 0;
      while(1) {
       $4151 = (($j1valid174) + ($ij1175$01079)|0);
       $4152 = HEAP8[$4151>>0]|0;
       $4153 = ($4152<<24>>24)==(0);
       L484: do {
        if (!($4153)) {
         $4154 = $ij1175$01079&255;
         HEAP8[$4>>0] = $4154;
         HEAP8[$5>>0] = -1;
         $iij1176$0896 = (($ij1175$01079) + 1)|0;
         $4155 = ($iij1176$0896|0)<(2);
         do {
          if ($4155) {
           $4156 = (($sj1array173) + ($ij1175$01079<<3)|0);
           $4157 = (($j1valid174) + ($iij1176$0896)|0);
           $4158 = HEAP8[$4157>>0]|0;
           $4159 = ($4158<<24>>24)==(0);
           if ($4159) {
            break;
           }
           $4160 = (($cj1array172) + ($ij1175$01079<<3)|0);
           $4161 = +HEAPF64[$4160>>3];
           $4162 = (($cj1array172) + ($iij1176$0896<<3)|0);
           $4163 = +HEAPF64[$4162>>3];
           $4164 = $4161 - $4163;
           $4165 = (+__Z5IKabsd($4164));
           $4166 = $4165 < 9.9999999999999995E-7;
           if (!($4166)) {
            break;
           }
           $4167 = +HEAPF64[$4156>>3];
           $4168 = (($sj1array173) + ($iij1176$0896<<3)|0);
           $4169 = +HEAPF64[$4168>>3];
           $4170 = $4167 - $4169;
           $4171 = (+__Z5IKabsd($4170));
           $4172 = $4171 < 9.9999999999999995E-7;
           if (!($4172)) {
            break;
           }
           HEAP8[$4157>>0] = 0;
           $4173 = $iij1176$0896&255;
           HEAP8[$5>>0] = $4173;
          }
         } while(0);
         $4174 = (($j1array171) + ($ij1175$01079<<3)|0);
         $4175 = +HEAPF64[$4174>>3];
         HEAPF64[$3>>3] = $4175;
         $4176 = (($cj1array172) + ($ij1175$01079<<3)|0);
         $4177 = +HEAPF64[$4176>>3];
         HEAPF64[$215>>3] = $4177;
         $4178 = (($sj1array173) + ($ij1175$01079<<3)|0);
         $4179 = +HEAPF64[$4178>>3];
         HEAPF64[$216>>3] = $4179;
         $4180 = +HEAPF64[$47>>3];
         $4181 = $4180 * $4180;
         $4182 = +HEAPF64[$73>>3];
         $4183 = $4182 * 553.0;
         $4184 = +HEAPF64[$60>>3];
         $4185 = $4179 * $4184;
         $4186 = +HEAPF64[$215>>3];
         $4187 = $4186 * 2000.0;
         $4188 = $4180 * $4187;
         $4189 = $4179 * $4181;
         $4190 = $4179 * 553.0;
         $4191 = +HEAPF64[$24>>3];
         $4192 = $4190 * $4191;
         $4193 = +HEAPF64[$74>>3];
         $4194 = $4192 * $4193;
         $4195 = $4185 - $4189;
         $4196 = +HEAPF64[$45>>3];
         $4197 = +HEAPF64[$43>>3];
         $4198 = $4185 * 2000.0;
         $4199 = $4189 * 2000.0;
         $4200 = $4198 - $4199;
         $4201 = (+__Z6IKsignd($4200));
         $4202 = (+__Z5IKabsd($4195));
         $4203 = $4202 < 9.9999999999999995E-7;
         do {
          if (!($4203)) {
           $4204 = $4188 * $4196;
           $4205 = $4196 * 656.0;
           $4206 = $4204 - $4205;
           $4207 = $4194 * $4197;
           $4208 = $4206 + $4207;
           $4209 = $4183 * $4196;
           $4210 = $4208 - $4209;
           $4211 = (+__Z5IKabsd($4210));
           $4212 = $4183 * $4197;
           $4213 = -$4212;
           $4214 = $4196 * $4194;
           $4215 = $4213 - $4214;
           $4216 = $4188 * $4197;
           $4217 = $4216 + $4215;
           $4218 = $4197 * 656.0;
           $4219 = $4217 - $4218;
           $4220 = (+__Z5IKabsd($4219));
           $4221 = $4211 + $4220;
           $4222 = (+__Z5IKabsd($4221));
           $4223 = $4222 < 9.9999999999999995E-7;
           if ($4223) {
            break;
           }
           $4224 = (+__Z5IKabsd($4201));
           $4225 = $4224 < 9.9999999999999995E-7;
           if ($4225) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $8711 = +HEAPF64[$45>>3];
           $8712 = $8711 * 553.0;
           $8713 = +HEAPF64[$216>>3];
           $8714 = $8713 * 2000.0;
           $8715 = +HEAPF64[$43>>3];
           $8716 = $8715 * 553.0;
           $8717 = +HEAPF64[$215>>3];
           $8718 = $8717 * 2000.0;
           $8719 = +HEAPF64[$47>>3];
           $8720 = $8718 * $8719;
           $8721 = +HEAPF64[$24>>3];
           $8722 = $8713 * $8721;
           $8723 = +HEAPF64[$74>>3];
           $8724 = $8722 * $8723;
           $8725 = $8711 * $8720;
           $8726 = $8711 * 656.0;
           $8727 = $8725 - $8726;
           $8728 = $8716 * $8724;
           $8729 = $8727 + $8728;
           $8730 = +HEAPF64[$73>>3];
           $8731 = -$8730;
           $8732 = $8712 * $8731;
           $8733 = $8732 + $8729;
           $8734 = $8715 * $8720;
           $8735 = $8715 * 656.0;
           $8736 = $8734 - $8735;
           $8737 = $8712 * $8724;
           $8738 = $8736 - $8737;
           $8739 = $8716 * $8731;
           $8740 = $8739 + $8738;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1089,$8733,$8740,1.9999999999999999E-6);
           $8741 = HEAP8[$477>>0]|0;
           $8742 = ($8741<<24>>24)==(0);
           if ($8742) {
            break L484;
           }
           $8743 = +HEAPF64[$47>>3];
           $8744 = $8743 * $8743;
           $8745 = $8714 * $8744;
           $8746 = +HEAPF64[$60>>3];
           $8747 = $8714 * $8746;
           $8748 = $8747 - $8745;
           $8749 = (+__Z6IKsignd($8748));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1090,$8749,-1);
           $8750 = HEAP8[$478>>0]|0;
           $8751 = ($8750<<24>>24)==(0);
           if ($8751) {
            break L484;
           }
           $8752 = +HEAPF64[$x1089>>3];
           $8753 = $8752 + -1.5707963267949001;
           $8754 = +HEAPF64[$x1090>>3];
           $8755 = $8754 * 1.5707963267949001;
           $8756 = $8753 + $8755;
           $8757 = (+__Z5IKsind($8756));
           $8758 = (+__Z5IKcosd($8756));
           $8759 = $8756 > 3.14159265358979;
           do {
            if ($8759) {
             $8760 = $8756 + -6.2831853071795898;
             $8763 = $8760;
            } else {
             $8761 = $8756 < -3.14159265358979;
             if (!($8761)) {
              $8763 = $8756;
              break;
             }
             $8762 = $8756 + 6.2831853071795898;
             $8763 = $8762;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $8763;
           HEAPF64[$479>>3] = $8758;
           HEAPF64[$480>>3] = $8757;
           $8764 = +HEAPF64[$this>>3];
           $8765 = (+__Z5IKcosd($8764));
           $8766 = (+__Z5IKsind($8764));
           $8767 = +HEAPF64[$73>>3];
           $8768 = $8767 * 0.27650000000000002;
           $8769 = +HEAPF64[$43>>3];
           $8770 = +HEAPF64[$215>>3];
           $8771 = +HEAPF64[$47>>3];
           $8772 = $8770 * $8771;
           $8773 = +HEAPF64[$74>>3];
           $8774 = $8773 * 0.27650000000000002;
           $8775 = +HEAPF64[$23>>3];
           $8776 = $8770 * $8775;
           $8777 = +HEAPF64[$24>>3];
           $8778 = $8766 * $8777;
           $8779 = +HEAPF64[$45>>3];
           $8780 = $8770 * $8779;
           $8781 = $8766 * $8775;
           $8782 = $8765 * $8779;
           $8783 = +HEAPF64[$216>>3];
           $8784 = $8771 * $8783;
           $8785 = $8779 * $8783;
           $8786 = $8766 * $8785;
           $8787 = $8769 * $8783;
           $8788 = $8765 * $8787;
           $8789 = $8766 * $8769;
           $8790 = $8782 - $8789;
           $8791 = $8774 * $8777;
           $8792 = $8791 + $8790;
           $8793 = $8772 * 0.65600000000000003;
           $8794 = $8793 + -0.03113175;
           $8795 = +HEAPF64[$60>>3];
           $8796 = $8794 - $8795;
           $8797 = $8788 * 0.65600000000000003;
           $8798 = $8796 - $8797;
           $8799 = $8786 * 0.65600000000000003;
           $8800 = $8798 - $8799;
           $8801 = $8765 * $8769;
           $8802 = $8783 * -0.32800000000000001;
           $8803 = $8802 - $8801;
           $8804 = $8774 * $8776;
           $8805 = $8803 - $8804;
           $8806 = $8768 * $8783;
           $8807 = $8805 - $8806;
           $8808 = $8766 * $8779;
           $8809 = $8807 - $8808;
           $8810 = $8770 * $8777;
           $8811 = $8765 * $8810;
           $8812 = $8769 * $8811;
           $8813 = -$8777;
           $8814 = $8784 * $8813;
           $8815 = $8814 - $8812;
           $8816 = $8769 * $8781;
           $8817 = $8815 - $8816;
           $8818 = $8775 * $8782;
           $8819 = $8818 + $8817;
           $8820 = $8778 * $8780;
           $8821 = $8819 - $8820;
           $8822 = $8782 * $8813;
           $8823 = $8801 * $8776;
           $8824 = $8822 - $8823;
           $8825 = $8824 - $8774;
           $8826 = $8776 * $8808;
           $8827 = $8825 - $8826;
           $8828 = $8775 * $8784;
           $8829 = $8827 - $8828;
           $8830 = $8769 * $8778;
           $8831 = $8830 + $8829;
           $8832 = (+__Z5IKabsd($8792));
           $8833 = $8832 > 5.0000000000000004E-6;
           if ($8833) {
            break L484;
           }
           $8834 = $8788 + 0.32800000000000001;
           $8835 = $8786 + $8834;
           $8836 = $8768 + $8835;
           $8837 = $8836 - $8772;
           $8838 = (+__Z5IKabsd($8837));
           $8839 = $8838 > 5.0000000000000004E-6;
           if ($8839) {
            break L484;
           }
           $8840 = (+__Z5IKabsd($8800));
           $8841 = $8840 > 5.0000000000000004E-6;
           if ($8841) {
            break L484;
           }
           $8842 = (+__Z5IKabsd($8809));
           $8843 = $8842 > 5.0000000000000004E-6;
           if ($8843) {
            break L484;
           }
           $8844 = (+__Z5IKabsd($8821));
           $8845 = $8844 > 5.0000000000000004E-6;
           if ($8845) {
            break L484;
           }
           $8846 = (+__Z5IKabsd($8831));
           $8847 = $8846 > 5.0000000000000004E-6;
           if ($8847) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         $4226 = +HEAPF64[$47>>3];
         $4227 = $4226 * $4226;
         $4228 = +HEAPF64[$60>>3];
         $4229 = +HEAPF64[$216>>3];
         $4230 = $4228 * $4229;
         $4231 = $4228 * 125000.0;
         $4232 = $4227 * $4229;
         $4233 = +HEAPF64[$215>>3];
         $4234 = $4233 * 82000.0;
         $4235 = $4226 * $4234;
         $4236 = $4229 * 22673.0;
         $4237 = +HEAPF64[$24>>3];
         $4238 = $4236 * $4237;
         $4239 = +HEAPF64[$74>>3];
         $4240 = $4238 * $4239;
         $4241 = $4230 - $4232;
         $4242 = +HEAPF64[$45>>3];
         $4243 = $4231 * $4242;
         $4244 = $4242 * -3891.46875;
         $4245 = $4244 - $4243;
         $4246 = +HEAPF64[$43>>3];
         $4247 = $4240 * $4246;
         $4248 = $4245 + $4247;
         $4249 = $4235 * $4242;
         $4250 = $4249 + $4248;
         $4251 = (+__Z5IKabsd($4250));
         $4252 = $4242 * $4240;
         $4253 = $4246 * -3891.46875;
         $4254 = $4253 - $4252;
         $4255 = $4231 * $4246;
         $4256 = $4254 - $4255;
         $4257 = $4235 * $4246;
         $4258 = $4257 + $4256;
         $4259 = (+__Z5IKabsd($4258));
         $4260 = $4251 + $4259;
         $4261 = (+__Z5IKabsd($4241));
         $4262 = $4261 < 9.9999999999999995E-7;
         do {
          if (!($4262)) {
           $4263 = $4230 * 82000.0;
           $4264 = $4232 * 82000.0;
           $4265 = $4263 - $4264;
           $4266 = (+__Z6IKsignd($4265));
           $4267 = (+__Z5IKabsd($4266));
           $4268 = $4267 < 9.9999999999999995E-7;
           if ($4268) {
            break;
           }
           $4269 = (+__Z5IKabsd($4260));
           $4270 = $4269 < 9.9999999999999995E-7;
           if ($4270) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $8574 = +HEAPF64[$216>>3];
           $8575 = $8574 * 82000.0;
           $8576 = +HEAPF64[$60>>3];
           $8577 = $8576 * 125000.0;
           $8578 = +HEAPF64[$215>>3];
           $8579 = $8578 * 82000.0;
           $8580 = +HEAPF64[$47>>3];
           $8581 = $8579 * $8580;
           $8582 = $8574 * 22673.0;
           $8583 = +HEAPF64[$24>>3];
           $8584 = $8582 * $8583;
           $8585 = +HEAPF64[$74>>3];
           $8586 = $8584 * $8585;
           $8587 = +HEAPF64[$45>>3];
           $8588 = $8581 * $8587;
           $8589 = $8587 * 3891.46875;
           $8590 = $8588 - $8589;
           $8591 = -$8587;
           $8592 = $8577 * $8591;
           $8593 = $8592 + $8590;
           $8594 = +HEAPF64[$43>>3];
           $8595 = $8586 * $8594;
           $8596 = $8595 + $8593;
           $8597 = $8577 * $8594;
           $8598 = $8594 * -3891.46875;
           $8599 = $8598 - $8597;
           $8600 = $8586 * $8591;
           $8601 = $8600 + $8599;
           $8602 = $8581 * $8594;
           $8603 = $8602 + $8601;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1068,$8596,$8603,1.9999999999999999E-6);
           $8604 = HEAP8[$473>>0]|0;
           $8605 = ($8604<<24>>24)==(0);
           if ($8605) {
            break L484;
           }
           $8606 = +HEAPF64[$47>>3];
           $8607 = $8606 * $8606;
           $8608 = $8575 * $8607;
           $8609 = +HEAPF64[$60>>3];
           $8610 = $8575 * $8609;
           $8611 = $8610 - $8608;
           $8612 = (+__Z6IKsignd($8611));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1069,$8612,-1);
           $8613 = HEAP8[$474>>0]|0;
           $8614 = ($8613<<24>>24)==(0);
           if ($8614) {
            break L484;
           }
           $8615 = +HEAPF64[$x1068>>3];
           $8616 = $8615 + -1.5707963267949001;
           $8617 = +HEAPF64[$x1069>>3];
           $8618 = $8617 * 1.5707963267949001;
           $8619 = $8616 + $8618;
           $8620 = (+__Z5IKsind($8619));
           $8621 = (+__Z5IKcosd($8619));
           $8622 = $8619 > 3.14159265358979;
           do {
            if ($8622) {
             $8623 = $8619 + -6.2831853071795898;
             $8626 = $8623;
            } else {
             $8624 = $8619 < -3.14159265358979;
             if (!($8624)) {
              $8626 = $8619;
              break;
             }
             $8625 = $8619 + 6.2831853071795898;
             $8626 = $8625;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $8626;
           HEAPF64[$475>>3] = $8621;
           HEAPF64[$476>>3] = $8620;
           $8627 = +HEAPF64[$this>>3];
           $8628 = (+__Z5IKcosd($8627));
           $8629 = (+__Z5IKsind($8627));
           $8630 = +HEAPF64[$73>>3];
           $8631 = $8630 * 0.27650000000000002;
           $8632 = +HEAPF64[$43>>3];
           $8633 = +HEAPF64[$215>>3];
           $8634 = +HEAPF64[$47>>3];
           $8635 = $8633 * $8634;
           $8636 = +HEAPF64[$74>>3];
           $8637 = $8636 * 0.27650000000000002;
           $8638 = +HEAPF64[$23>>3];
           $8639 = $8633 * $8638;
           $8640 = +HEAPF64[$24>>3];
           $8641 = $8629 * $8640;
           $8642 = +HEAPF64[$45>>3];
           $8643 = $8633 * $8642;
           $8644 = $8629 * $8638;
           $8645 = $8628 * $8642;
           $8646 = +HEAPF64[$216>>3];
           $8647 = $8634 * $8646;
           $8648 = $8642 * $8646;
           $8649 = $8629 * $8648;
           $8650 = $8632 * $8646;
           $8651 = $8628 * $8650;
           $8652 = $8629 * $8632;
           $8653 = $8645 - $8652;
           $8654 = $8637 * $8640;
           $8655 = $8654 + $8653;
           $8656 = +HEAPF64[$60>>3];
           $8657 = -0.03113175 - $8656;
           $8658 = $8635 * 0.65600000000000003;
           $8659 = $8658 + $8657;
           $8660 = $8649 * 0.65600000000000003;
           $8661 = $8659 - $8660;
           $8662 = $8651 * 0.65600000000000003;
           $8663 = $8661 - $8662;
           $8664 = $8637 * $8639;
           $8665 = $8646 * -0.32800000000000001;
           $8666 = $8665 - $8664;
           $8667 = $8629 * $8642;
           $8668 = $8666 - $8667;
           $8669 = $8628 * $8632;
           $8670 = $8668 - $8669;
           $8671 = $8631 * $8646;
           $8672 = $8670 - $8671;
           $8673 = -$8640;
           $8674 = $8647 * $8673;
           $8675 = $8641 * $8643;
           $8676 = $8674 - $8675;
           $8677 = $8632 * $8644;
           $8678 = $8676 - $8677;
           $8679 = $8633 * $8640;
           $8680 = $8628 * $8679;
           $8681 = $8632 * $8680;
           $8682 = $8678 - $8681;
           $8683 = $8638 * $8645;
           $8684 = $8683 + $8682;
           $8685 = $8645 * $8673;
           $8686 = $8632 * $8641;
           $8687 = $8686 + $8685;
           $8688 = $8669 * $8639;
           $8689 = $8687 - $8688;
           $8690 = $8689 - $8637;
           $8691 = $8638 * $8647;
           $8692 = $8690 - $8691;
           $8693 = $8639 * $8667;
           $8694 = $8692 - $8693;
           $8695 = (+__Z5IKabsd($8655));
           $8696 = $8695 > 5.0000000000000004E-6;
           if ($8696) {
            break L484;
           }
           $8697 = $8631 + 0.32800000000000001;
           $8698 = $8697 + $8651;
           $8699 = $8649 + $8698;
           $8700 = $8699 - $8635;
           $8701 = (+__Z5IKabsd($8700));
           $8702 = $8701 > 5.0000000000000004E-6;
           if ($8702) {
            break L484;
           }
           $8703 = (+__Z5IKabsd($8663));
           $8704 = $8703 > 5.0000000000000004E-6;
           if ($8704) {
            break L484;
           }
           $8705 = (+__Z5IKabsd($8672));
           $8706 = $8705 > 5.0000000000000004E-6;
           if ($8706) {
            break L484;
           }
           $8707 = (+__Z5IKabsd($8684));
           $8708 = $8707 > 5.0000000000000004E-6;
           if ($8708) {
            break L484;
           }
           $8709 = (+__Z5IKabsd($8694));
           $8710 = $8709 > 5.0000000000000004E-6;
           if ($8710) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         $4271 = +HEAPF64[$47>>3];
         $4272 = $4271 * $4271;
         $4273 = +HEAPF64[$43>>3];
         $4274 = +HEAPF64[$216>>3];
         $4275 = $4273 * $4274;
         $4276 = +HEAPF64[$73>>3];
         $4277 = $4276 * 553.0;
         $4278 = +HEAPF64[$45>>3];
         $4279 = $4274 * $4278;
         $4280 = +HEAPF64[$74>>3];
         $4281 = $4280 * 553.0;
         $4282 = +HEAPF64[$215>>3];
         $4283 = +HEAPF64[$23>>3];
         $4284 = $4282 * $4283;
         $4285 = +HEAPF64[$60>>3];
         $4286 = $4285 - $4272;
         $4287 = $4278 * $4281;
         $4288 = $4287 * $4284;
         $4289 = $4277 * $4279;
         $4290 = -$4289;
         $4291 = $4290 - $4288;
         $4292 = +HEAPF64[$24>>3];
         $4293 = $4273 * $4292;
         $4294 = $4281 * $4293;
         $4295 = $4291 + $4294;
         $4296 = $4279 * 656.0;
         $4297 = $4295 - $4296;
         $4298 = (+__Z5IKabsd($4297));
         $4299 = $4275 * $4277;
         $4300 = $4273 * $4281;
         $4301 = $4300 * $4284;
         $4302 = -$4301;
         $4303 = $4302 - $4299;
         $4304 = $4278 * $4292;
         $4305 = $4281 * $4304;
         $4306 = $4303 - $4305;
         $4307 = $4275 * 656.0;
         $4308 = $4306 - $4307;
         $4309 = (+__Z5IKabsd($4308));
         $4310 = $4298 + $4309;
         $4311 = (+__Z5IKabsd($4286));
         $4312 = $4311 < 9.9999999999999995E-7;
         do {
          if (!($4312)) {
           $4313 = $4272 * 2000.0;
           $4314 = $4285 * 2000.0;
           $4315 = $4314 - $4313;
           $4316 = (+__Z6IKsignd($4315));
           $4317 = (+__Z5IKabsd($4316));
           $4318 = $4317 < 9.9999999999999995E-7;
           if ($4318) {
            break;
           }
           $4319 = (+__Z5IKabsd($4310));
           $4320 = $4319 < 9.9999999999999995E-7;
           if ($4320) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $8433 = +HEAPF64[$43>>3];
           $8434 = +HEAPF64[$216>>3];
           $8435 = $8433 * $8434;
           $8436 = +HEAPF64[$73>>3];
           $8437 = $8436 * 553.0;
           $8438 = +HEAPF64[$45>>3];
           $8439 = $8434 * $8438;
           $8440 = +HEAPF64[$74>>3];
           $8441 = $8440 * 553.0;
           $8442 = +HEAPF64[$215>>3];
           $8443 = +HEAPF64[$23>>3];
           $8444 = $8442 * $8443;
           $8445 = +HEAPF64[$60>>3];
           $8446 = $8445 * 2000.0;
           $8447 = +HEAPF64[$47>>3];
           $8448 = $8447 * $8447;
           $8449 = $8448 * 2000.0;
           $8450 = $8446 - $8449;
           $8451 = (+__Z6IKsignd($8450));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1048,$8451,-1);
           $8452 = HEAP8[$469>>0]|0;
           $8453 = ($8452<<24>>24)==(0);
           if ($8453) {
            break L484;
           }
           $8454 = $8439 * -656.0;
           $8455 = $8437 * $8439;
           $8456 = $8454 - $8455;
           $8457 = +HEAPF64[$43>>3];
           $8458 = +HEAPF64[$24>>3];
           $8459 = $8457 * $8458;
           $8460 = $8441 * $8459;
           $8461 = $8456 + $8460;
           $8462 = +HEAPF64[$45>>3];
           $8463 = -$8462;
           $8464 = $8441 * $8463;
           $8465 = $8444 * $8464;
           $8466 = $8461 + $8465;
           $8467 = $8435 * 656.0;
           $8468 = $8458 * $8463;
           $8469 = $8441 * $8468;
           $8470 = $8469 - $8467;
           $8471 = $8441 * $8457;
           $8472 = $8444 * $8471;
           $8473 = $8470 - $8472;
           $8474 = $8435 * $8437;
           $8475 = $8473 - $8474;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1049,$8466,$8475,1.9999999999999999E-6);
           $8476 = HEAP8[$470>>0]|0;
           $8477 = ($8476<<24>>24)==(0);
           if ($8477) {
            break L484;
           }
           $8478 = +HEAPF64[$x1048>>3];
           $8479 = $8478 * 1.5707963267949001;
           $8480 = $8479 + -1.5707963267949001;
           $8481 = +HEAPF64[$x1049>>3];
           $8482 = $8481 + $8480;
           $8483 = (+__Z5IKsind($8482));
           $8484 = (+__Z5IKcosd($8482));
           $8485 = $8482 > 3.14159265358979;
           do {
            if ($8485) {
             $8486 = $8482 + -6.2831853071795898;
             $8489 = $8486;
            } else {
             $8487 = $8482 < -3.14159265358979;
             if (!($8487)) {
              $8489 = $8482;
              break;
             }
             $8488 = $8482 + 6.2831853071795898;
             $8489 = $8488;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $8489;
           HEAPF64[$471>>3] = $8484;
           HEAPF64[$472>>3] = $8483;
           $8490 = +HEAPF64[$this>>3];
           $8491 = (+__Z5IKcosd($8490));
           $8492 = (+__Z5IKsind($8490));
           $8493 = +HEAPF64[$73>>3];
           $8494 = $8493 * 0.27650000000000002;
           $8495 = +HEAPF64[$43>>3];
           $8496 = +HEAPF64[$215>>3];
           $8497 = +HEAPF64[$47>>3];
           $8498 = $8496 * $8497;
           $8499 = +HEAPF64[$74>>3];
           $8500 = $8499 * 0.27650000000000002;
           $8501 = +HEAPF64[$23>>3];
           $8502 = $8496 * $8501;
           $8503 = +HEAPF64[$24>>3];
           $8504 = $8492 * $8503;
           $8505 = +HEAPF64[$45>>3];
           $8506 = $8496 * $8505;
           $8507 = $8492 * $8501;
           $8508 = $8491 * $8505;
           $8509 = +HEAPF64[$216>>3];
           $8510 = $8497 * $8509;
           $8511 = $8505 * $8509;
           $8512 = $8492 * $8511;
           $8513 = $8495 * $8509;
           $8514 = $8491 * $8513;
           $8515 = $8500 * $8503;
           $8516 = $8515 + $8508;
           $8517 = $8492 * $8495;
           $8518 = $8516 - $8517;
           $8519 = $8498 * 0.65600000000000003;
           $8520 = $8519 + -0.03113175;
           $8521 = +HEAPF64[$60>>3];
           $8522 = $8520 - $8521;
           $8523 = $8512 * 0.65600000000000003;
           $8524 = $8522 - $8523;
           $8525 = $8514 * 0.65600000000000003;
           $8526 = $8524 - $8525;
           $8527 = $8492 * $8505;
           $8528 = $8509 * -0.32800000000000001;
           $8529 = $8528 - $8527;
           $8530 = $8500 * $8502;
           $8531 = $8529 - $8530;
           $8532 = $8494 * $8509;
           $8533 = $8531 - $8532;
           $8534 = $8491 * $8495;
           $8535 = $8533 - $8534;
           $8536 = $8496 * $8503;
           $8537 = $8491 * $8536;
           $8538 = $8495 * $8537;
           $8539 = $8501 * $8508;
           $8540 = $8539 - $8538;
           $8541 = -$8503;
           $8542 = $8510 * $8541;
           $8543 = $8540 + $8542;
           $8544 = $8504 * $8506;
           $8545 = $8543 - $8544;
           $8546 = $8495 * $8507;
           $8547 = $8545 - $8546;
           $8548 = $8495 * $8504;
           $8549 = $8548 - $8500;
           $8550 = $8508 * $8541;
           $8551 = $8549 + $8550;
           $8552 = $8534 * $8502;
           $8553 = $8551 - $8552;
           $8554 = $8502 * $8527;
           $8555 = $8553 - $8554;
           $8556 = $8501 * $8510;
           $8557 = $8555 - $8556;
           $8558 = (+__Z5IKabsd($8518));
           $8559 = $8558 > 5.0000000000000004E-6;
           if ($8559) {
            break L484;
           }
           $8560 = $8494 + 0.32800000000000001;
           $8561 = $8560 + $8514;
           $8562 = $8512 + $8561;
           $8563 = $8562 - $8498;
           $8564 = (+__Z5IKabsd($8563));
           $8565 = $8564 > 5.0000000000000004E-6;
           if ($8565) {
            break L484;
           }
           $8566 = (+__Z5IKabsd($8526));
           $8567 = $8566 > 5.0000000000000004E-6;
           if ($8567) {
            break L484;
           }
           $8568 = (+__Z5IKabsd($8535));
           $8569 = $8568 > 5.0000000000000004E-6;
           if ($8569) {
            break L484;
           }
           $8570 = (+__Z5IKabsd($8547));
           $8571 = $8570 > 5.0000000000000004E-6;
           if ($8571) {
            break L484;
           }
           $8572 = (+__Z5IKabsd($8557));
           $8573 = $8572 > 5.0000000000000004E-6;
           if ($8573) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         $4321 = +HEAPF64[$60>>3];
         $4322 = +HEAPF64[$73>>3];
         $4323 = $4322 * 0.27650000000000002;
         $4324 = $4323 + 0.32800000000000001;
         $4325 = +HEAPF64[$47>>3];
         $4326 = $4324 - $4325;
         $4327 = +HEAPF64[$3>>3];
         $4328 = (+__Z5IKabsd($4327));
         $4329 = $4328 + 3.14159265358979;
         $4330 = (+__Z6IKfmoddd($4329,6.2831853071795898));
         $4331 = $4330 + -3.14159265358979;
         $4332 = -0.03113175 - $4321;
         $4333 = $4325 * 0.65600000000000003;
         $4334 = $4332 + $4333;
         $4335 = (+__Z5IKabsd($4331));
         $4336 = $4335 < 9.9999999999999995E-7;
         do {
          if ($4336) {
           $4337 = $4322 * 0.18138399999999999;
           $4338 = $4337 + 0.18403625000000001;
           $4339 = $4338 - $4321;
           $4340 = (+__Z5IKabsd($4339));
           $4341 = $4340 < 9.9999999999999995E-7;
           if (!($4341)) {
            break;
           }
           $4342 = (+__Z5IKabsd($4326));
           $4343 = $4342 < 9.9999999999999995E-7;
           if (!($4343)) {
            break;
           }
           $4344 = (+__Z5IKabsd($4334));
           $4345 = $4344 < 9.9999999999999995E-7;
           if (!($4345)) {
            break;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           $4346 = +HEAPF64[$47>>3];
           $4347 = $4346 * $4346;
           $4348 = +HEAPF64[$43>>3];
           $4349 = +HEAPF64[$74>>3];
           $4350 = $4348 * $4349;
           $4351 = +HEAPF64[$45>>3];
           $4352 = $4349 * $4351;
           $4353 = +HEAPF64[$60>>3];
           $4354 = $4353 - $4347;
           $4355 = +HEAPF64[$23>>3];
           $4356 = $4350 * $4355;
           $4357 = +HEAPF64[$24>>3];
           $4358 = $4352 * $4357;
           $4359 = -$4358;
           $4360 = $4359 - $4356;
           $4361 = (+__Z5IKabsd($4360));
           $4362 = $4352 * $4355;
           $4363 = $4350 * $4357;
           $4364 = $4363 - $4362;
           $4365 = (+__Z5IKabsd($4364));
           $4366 = $4361 + $4365;
           $4367 = (+__Z5IKabsd($4354));
           $4368 = $4367 < 9.9999999999999995E-7;
           do {
            if (!($4368)) {
             $4369 = $4347 * 2000.0;
             $4370 = $4353 * 2000.0;
             $4371 = $4370 - $4369;
             $4372 = (+__Z6IKsignd($4371));
             $4373 = (+__Z5IKabsd($4372));
             $4374 = $4373 < 9.9999999999999995E-7;
             if ($4374) {
              break;
             }
             $4375 = (+__Z5IKabsd($4366));
             $4376 = $4375 < 9.9999999999999995E-7;
             if ($4376) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $6283 = +HEAPF64[$74>>3];
             $6284 = $6283 * 553.0;
             $6285 = +HEAPF64[$60>>3];
             $6286 = $6285 * 2000.0;
             $6287 = +HEAPF64[$47>>3];
             $6288 = $6287 * $6287;
             $6289 = $6288 * 2000.0;
             $6290 = $6286 - $6289;
             $6291 = (+__Z6IKsignd($6290));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x870,$6291,-1);
             $6292 = HEAP8[$339>>0]|0;
             $6293 = ($6292<<24>>24)==(0);
             if ($6293) {
              break L484;
             }
             $6294 = +HEAPF64[$23>>3];
             $6295 = -$6294;
             $6296 = +HEAPF64[$45>>3];
             $6297 = $6296 * $6295;
             $6298 = $6284 * $6297;
             $6299 = +HEAPF64[$43>>3];
             $6300 = +HEAPF64[$24>>3];
             $6301 = $6299 * $6300;
             $6302 = $6284 * $6301;
             $6303 = $6298 + $6302;
             $6304 = $6299 * $6295;
             $6305 = $6284 * $6304;
             $6306 = $6296 * $6300;
             $6307 = $6284 * $6306;
             $6308 = $6305 - $6307;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x871,$6303,$6308,1.9999999999999999E-6);
             $6309 = HEAP8[$340>>0]|0;
             $6310 = ($6309<<24>>24)==(0);
             if ($6310) {
              break L484;
             }
             $6311 = +HEAPF64[$x870>>3];
             $6312 = $6311 * 1.5707963267949001;
             $6313 = $6312 + -1.5707963267949001;
             $6314 = +HEAPF64[$x871>>3];
             $6315 = $6314 + $6313;
             $6316 = (+__Z5IKsind($6315));
             $6317 = (+__Z5IKcosd($6315));
             $6318 = $6315 > 3.14159265358979;
             do {
              if ($6318) {
               $6319 = $6315 + -6.2831853071795898;
               $6322 = $6319;
              } else {
               $6320 = $6315 < -3.14159265358979;
               if (!($6320)) {
                $6322 = $6315;
                break;
               }
               $6321 = $6315 + 6.2831853071795898;
               $6322 = $6321;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $6322;
             HEAPF64[$341>>3] = $6317;
             HEAPF64[$342>>3] = $6316;
             $6323 = +HEAPF64[$this>>3];
             $6324 = (+__Z5IKcosd($6323));
             $6325 = (+__Z5IKsind($6323));
             $6326 = +HEAPF64[$43>>3];
             $6327 = +HEAPF64[$74>>3];
             $6328 = $6327 * 0.27650000000000002;
             $6329 = +HEAPF64[$23>>3];
             $6330 = $6325 * $6329;
             $6331 = +HEAPF64[$45>>3];
             $6332 = $6324 * $6331;
             $6333 = $6325 * $6331;
             $6334 = +HEAPF64[$24>>3];
             $6335 = $6328 * $6334;
             $6336 = $6325 * $6326;
             $6337 = $6335 - $6336;
             $6338 = $6332 + $6337;
             $6339 = -$6329;
             $6340 = $6329 * $6332;
             $6341 = -$6334;
             $6342 = $6324 * $6341;
             $6343 = $6326 * $6342;
             $6344 = $6340 + $6343;
             $6345 = $6333 * $6341;
             $6346 = $6345 + $6344;
             $6347 = $6326 * $6330;
             $6348 = $6346 - $6347;
             $6349 = $6332 * $6341;
             $6350 = $6331 * $6330;
             $6351 = $6349 - $6350;
             $6352 = $6324 * $6339;
             $6353 = $6326 * $6352;
             $6354 = $6353 + $6351;
             $6355 = $6326 * $6334;
             $6356 = $6325 * $6355;
             $6357 = $6356 + $6354;
             $6358 = $6357 - $6328;
             $6359 = (+__Z5IKabsd($6338));
             $6360 = $6359 > 5.0000000000000004E-6;
             if ($6360) {
              break L484;
             }
             $6361 = $6328 * $6339;
             $6362 = $6324 * $6326;
             $6363 = $6361 - $6362;
             $6364 = $6363 - $6333;
             $6365 = (+__Z5IKabsd($6364));
             $6366 = $6365 > 5.0000000000000004E-6;
             if ($6366) {
              break L484;
             }
             $6367 = (+__Z5IKabsd($6348));
             $6368 = $6367 > 5.0000000000000004E-6;
             if ($6368) {
              break L484;
             }
             $6369 = (+__Z5IKabsd($6358));
             $6370 = $6369 > 5.0000000000000004E-6;
             if ($6370) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           $4377 = +HEAPF64[$23>>3];
           $4378 = $4377 * $4377;
           $4379 = +HEAPF64[$47>>3];
           $4380 = $4379 * $4379;
           $4381 = +HEAPF64[$43>>3];
           $4382 = +HEAPF64[$74>>3];
           $4383 = $4381 * $4382;
           $4384 = +HEAPF64[$45>>3];
           $4385 = $4382 * $4384;
           $4386 = $4377 * $4380;
           $4387 = +HEAPF64[$60>>3];
           $4388 = $4377 * $4387;
           $4389 = $4386 - $4388;
           $4390 = +HEAPF64[$24>>3];
           $4391 = $4377 * $4390;
           $4392 = $4377 * -2000.0;
           $4393 = $4392 * $4387;
           $4394 = $4386 * 2000.0;
           $4395 = $4394 + $4393;
           $4396 = (+__Z6IKsignd($4395));
           $4397 = (+__Z5IKabsd($4389));
           $4398 = $4397 < 9.9999999999999995E-7;
           do {
            if (!($4398)) {
             $4399 = $4378 * $4385;
             $4400 = $4383 * $4391;
             $4401 = $4399 - $4400;
             $4402 = (+__Z5IKabsd($4401));
             $4403 = $4385 * $4391;
             $4404 = $4378 * $4383;
             $4405 = $4404 + $4403;
             $4406 = (+__Z5IKabsd($4405));
             $4407 = $4402 + $4406;
             $4408 = (+__Z5IKabsd($4407));
             $4409 = $4408 < 9.9999999999999995E-7;
             if ($4409) {
              break;
             }
             $4410 = (+__Z5IKabsd($4396));
             $4411 = $4410 < 9.9999999999999995E-7;
             if ($4411) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $6193 = +HEAPF64[$23>>3];
             $6194 = $6193 * $6193;
             $6195 = $6193 * 2000.0;
             $6196 = +HEAPF64[$74>>3];
             $6197 = $6196 * 553.0;
             $6198 = +HEAPF64[$24>>3];
             $6199 = $6193 * $6198;
             $6200 = +HEAPF64[$43>>3];
             $6201 = $6197 * $6200;
             $6202 = $6199 * $6201;
             $6203 = +HEAPF64[$45>>3];
             $6204 = $6194 * $6203;
             $6205 = $6197 * $6204;
             $6206 = $6205 - $6202;
             $6207 = $6197 * $6203;
             $6208 = $6199 * $6207;
             $6209 = $6194 * $6200;
             $6210 = $6197 * $6209;
             $6211 = $6210 + $6208;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x860,$6206,$6211,1.9999999999999999E-6);
             $6212 = HEAP8[$335>>0]|0;
             $6213 = ($6212<<24>>24)==(0);
             if ($6213) {
              break L484;
             }
             $6214 = +HEAPF64[$60>>3];
             $6215 = $6195 * $6214;
             $6216 = +HEAPF64[$47>>3];
             $6217 = $6216 * $6216;
             $6218 = $6195 * $6217;
             $6219 = $6218 - $6215;
             $6220 = (+__Z6IKsignd($6219));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x861,$6220,-1);
             $6221 = HEAP8[$336>>0]|0;
             $6222 = ($6221<<24>>24)==(0);
             if ($6222) {
              break L484;
             }
             $6223 = +HEAPF64[$x860>>3];
             $6224 = $6223 + -1.5707963267949001;
             $6225 = +HEAPF64[$x861>>3];
             $6226 = $6225 * 1.5707963267949001;
             $6227 = $6224 + $6226;
             $6228 = (+__Z5IKsind($6227));
             $6229 = (+__Z5IKcosd($6227));
             $6230 = $6227 > 3.14159265358979;
             do {
              if ($6230) {
               $6231 = $6227 + -6.2831853071795898;
               $6234 = $6231;
              } else {
               $6232 = $6227 < -3.14159265358979;
               if (!($6232)) {
                $6234 = $6227;
                break;
               }
               $6233 = $6227 + 6.2831853071795898;
               $6234 = $6233;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $6234;
             HEAPF64[$337>>3] = $6229;
             HEAPF64[$338>>3] = $6228;
             $6235 = +HEAPF64[$this>>3];
             $6236 = (+__Z5IKcosd($6235));
             $6237 = (+__Z5IKsind($6235));
             $6238 = +HEAPF64[$43>>3];
             $6239 = +HEAPF64[$74>>3];
             $6240 = $6239 * 0.27650000000000002;
             $6241 = +HEAPF64[$23>>3];
             $6242 = $6237 * $6241;
             $6243 = +HEAPF64[$45>>3];
             $6244 = $6236 * $6243;
             $6245 = $6237 * $6243;
             $6246 = +HEAPF64[$24>>3];
             $6247 = $6240 * $6246;
             $6248 = $6244 + $6247;
             $6249 = $6237 * $6238;
             $6250 = $6248 - $6249;
             $6251 = -$6241;
             $6252 = $6241 * $6244;
             $6253 = -$6246;
             $6254 = $6245 * $6253;
             $6255 = $6252 + $6254;
             $6256 = $6238 * $6242;
             $6257 = $6255 - $6256;
             $6258 = $6236 * $6253;
             $6259 = $6238 * $6258;
             $6260 = $6259 + $6257;
             $6261 = $6244 * $6253;
             $6262 = $6261 - $6240;
             $6263 = $6243 * $6242;
             $6264 = $6262 - $6263;
             $6265 = $6236 * $6251;
             $6266 = $6238 * $6265;
             $6267 = $6266 + $6264;
             $6268 = $6238 * $6246;
             $6269 = $6237 * $6268;
             $6270 = $6269 + $6267;
             $6271 = (+__Z5IKabsd($6250));
             $6272 = $6271 > 5.0000000000000004E-6;
             if ($6272) {
              break L484;
             }
             $6273 = $6240 * $6251;
             $6274 = $6273 - $6245;
             $6275 = $6236 * $6238;
             $6276 = $6274 - $6275;
             $6277 = (+__Z5IKabsd($6276));
             $6278 = $6277 > 5.0000000000000004E-6;
             if ($6278) {
              break L484;
             }
             $6279 = (+__Z5IKabsd($6260));
             $6280 = $6279 > 5.0000000000000004E-6;
             if ($6280) {
              break L484;
             }
             $6281 = (+__Z5IKabsd($6270));
             $6282 = $6281 > 5.0000000000000004E-6;
             if ($6282) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           $4412 = +HEAPF64[$47>>3];
           $4413 = $4412 * $4412;
           $4414 = +HEAPF64[$23>>3];
           $4415 = $4414 * $4414;
           $4416 = +HEAPF64[$60>>3];
           $4417 = +HEAPF64[$24>>3];
           $4418 = $4416 * $4417;
           $4419 = +HEAPF64[$74>>3];
           $4420 = $4415 * $4419;
           $4421 = $4414 * $4417;
           $4422 = $4421 * $4419;
           $4423 = $4413 * $4417;
           $4424 = $4423 - $4418;
           $4425 = +HEAPF64[$45>>3];
           $4426 = $4425 * $4422;
           $4427 = +HEAPF64[$43>>3];
           $4428 = $4420 * $4427;
           $4429 = $4426 + $4428;
           $4430 = $4419 * $4427;
           $4431 = $4429 - $4430;
           $4432 = (+__Z5IKabsd($4431));
           $4433 = $4425 * $4420;
           $4434 = $4422 * $4427;
           $4435 = $4434 - $4433;
           $4436 = $4419 * $4425;
           $4437 = $4436 + $4435;
           $4438 = (+__Z5IKabsd($4437));
           $4439 = $4432 + $4438;
           $4440 = (+__Z5IKabsd($4424));
           $4441 = $4440 < 9.9999999999999995E-7;
           do {
            if (!($4441)) {
             $4442 = $4418 * 2000.0;
             $4443 = $4423 * 2000.0;
             $4444 = $4443 - $4442;
             $4445 = (+__Z6IKsignd($4444));
             $4446 = (+__Z5IKabsd($4445));
             $4447 = $4446 < 9.9999999999999995E-7;
             if ($4447) {
              break;
             }
             $4448 = (+__Z5IKabsd($4439));
             $4449 = $4448 < 9.9999999999999995E-7;
             if ($4449) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $6100 = +HEAPF64[$23>>3];
             $6101 = $6100 * $6100;
             $6102 = +HEAPF64[$74>>3];
             $6103 = $6102 * 553.0;
             $6104 = +HEAPF64[$24>>3];
             $6105 = $6100 * $6104;
             $6106 = $6104 * 2000.0;
             $6107 = +HEAPF64[$45>>3];
             $6108 = $6103 * $6107;
             $6109 = $6105 * $6108;
             $6110 = +HEAPF64[$43>>3];
             $6111 = $6103 * $6110;
             $6112 = $6109 - $6111;
             $6113 = $6101 * $6110;
             $6114 = $6103 * $6113;
             $6115 = $6112 + $6114;
             $6116 = $6101 * $6107;
             $6117 = $6103 * $6116;
             $6118 = $6108 - $6117;
             $6119 = $6105 * $6111;
             $6120 = $6118 + $6119;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x847,$6115,$6120,1.9999999999999999E-6);
             $6121 = HEAP8[$331>>0]|0;
             $6122 = ($6121<<24>>24)==(0);
             if ($6122) {
              break L484;
             }
             $6123 = +HEAPF64[$60>>3];
             $6124 = $6106 * $6123;
             $6125 = +HEAPF64[$47>>3];
             $6126 = $6125 * $6125;
             $6127 = $6106 * $6126;
             $6128 = $6127 - $6124;
             $6129 = (+__Z6IKsignd($6128));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x848,$6129,-1);
             $6130 = HEAP8[$332>>0]|0;
             $6131 = ($6130<<24>>24)==(0);
             if ($6131) {
              break L484;
             }
             $6132 = +HEAPF64[$x847>>3];
             $6133 = $6132 + -1.5707963267949001;
             $6134 = +HEAPF64[$x848>>3];
             $6135 = $6134 * 1.5707963267949001;
             $6136 = $6133 + $6135;
             $6137 = (+__Z5IKsind($6136));
             $6138 = (+__Z5IKcosd($6136));
             $6139 = $6136 > 3.14159265358979;
             do {
              if ($6139) {
               $6140 = $6136 + -6.2831853071795898;
               $6143 = $6140;
              } else {
               $6141 = $6136 < -3.14159265358979;
               if (!($6141)) {
                $6143 = $6136;
                break;
               }
               $6142 = $6136 + 6.2831853071795898;
               $6143 = $6142;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $6143;
             HEAPF64[$333>>3] = $6138;
             HEAPF64[$334>>3] = $6137;
             $6144 = +HEAPF64[$this>>3];
             $6145 = (+__Z5IKcosd($6144));
             $6146 = (+__Z5IKsind($6144));
             $6147 = +HEAPF64[$43>>3];
             $6148 = +HEAPF64[$74>>3];
             $6149 = $6148 * 0.27650000000000002;
             $6150 = +HEAPF64[$23>>3];
             $6151 = $6146 * $6150;
             $6152 = +HEAPF64[$45>>3];
             $6153 = $6145 * $6152;
             $6154 = $6146 * $6152;
             $6155 = +HEAPF64[$24>>3];
             $6156 = $6149 * $6155;
             $6157 = $6146 * $6147;
             $6158 = $6156 - $6157;
             $6159 = $6153 + $6158;
             $6160 = -$6150;
             $6161 = $6150 * $6153;
             $6162 = -$6155;
             $6163 = $6145 * $6162;
             $6164 = $6147 * $6163;
             $6165 = $6161 + $6164;
             $6166 = $6154 * $6162;
             $6167 = $6166 + $6165;
             $6168 = $6147 * $6151;
             $6169 = $6167 - $6168;
             $6170 = $6147 * $6155;
             $6171 = $6146 * $6170;
             $6172 = $6171 - $6149;
             $6173 = $6152 * $6151;
             $6174 = $6172 - $6173;
             $6175 = $6153 * $6162;
             $6176 = $6175 + $6174;
             $6177 = $6145 * $6160;
             $6178 = $6147 * $6177;
             $6179 = $6178 + $6176;
             $6180 = (+__Z5IKabsd($6159));
             $6181 = $6180 > 5.0000000000000004E-6;
             if ($6181) {
              break L484;
             }
             $6182 = $6145 * $6147;
             $6183 = -$6182;
             $6184 = $6183 - $6154;
             $6185 = $6149 * $6160;
             $6186 = $6185 + $6184;
             $6187 = (+__Z5IKabsd($6186));
             $6188 = $6187 > 5.0000000000000004E-6;
             if ($6188) {
              break L484;
             }
             $6189 = (+__Z5IKabsd($6169));
             $6190 = $6189 > 5.0000000000000004E-6;
             if ($6190) {
              break L484;
             }
             $6191 = (+__Z5IKabsd($6179));
             $6192 = $6191 > 5.0000000000000004E-6;
             if ($6192) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $4450 = +HEAPF64[$60>>3];
           $4451 = +HEAPF64[$22>>3];
           $4452 = (+__Z5IKabsd($4451));
           $4453 = $4452 + 3.14159265358979;
           $4454 = (+__Z6IKfmoddd($4453,6.2831853071795898));
           $4455 = $4454 + -3.14159265358979;
           $4456 = -0.03113175 - $4450;
           $4457 = +HEAPF64[$47>>3];
           $4458 = $4457 * 0.65600000000000003;
           $4459 = $4456 + $4458;
           $4460 = (+__Z5IKabsd($4455));
           $4461 = $4460 < 9.9999999999999995E-7;
           do {
            if ($4461) {
             $4462 = +HEAPF64[$73>>3];
             $4463 = $4462 * 0.18138399999999999;
             $4464 = $4463 + 0.18403625000000001;
             $4465 = $4464 - $4450;
             $4466 = (+__Z5IKabsd($4465));
             $4467 = $4466 < 9.9999999999999995E-7;
             if (!($4467)) {
              break;
             }
             $4468 = (+__Z5IKabsd($4459));
             $4469 = $4468 < 9.9999999999999995E-7;
             if (!($4469)) {
              break;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             $4470 = +HEAPF64[$47>>3];
             $4471 = $4470 * $4470;
             $4472 = +HEAPF64[$60>>3];
             $4473 = $4471 - $4472;
             $4474 = +HEAPF64[$74>>3];
             $4475 = (+__Z5IKabsd($4473));
             $4476 = $4475 < 9.9999999999999995E-7;
             do {
              if (!($4476)) {
               $4477 = $4471 * 2000.0;
               $4478 = $4472 * 2000.0;
               $4479 = $4477 - $4478;
               $4480 = (+__Z6IKsignd($4479));
               $4481 = (+__Z5IKabsd($4480));
               $4482 = $4481 < 9.9999999999999995E-7;
               if ($4482) {
                break;
               }
               $4483 = (+__Z5IKabsd(305809.0));
               $4484 = $4483 < 9.9999999999999995E-7;
               if ($4484) {
                break;
               }
               $4485 = (+__Z5IKabsd($4474));
               $4486 = $4485 < 9.9999999999999995E-7;
               if ($4486) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $4648 = +HEAPF64[$74>>3];
               $4649 = $4648 * 553.0;
               $4650 = +HEAPF64[$45>>3];
               $4651 = $4650 * $4649;
               $4652 = +HEAPF64[$43>>3];
               $4653 = $4649 * $4652;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x741,$4651,$4653,1.9999999999999999E-6);
               $4654 = HEAP8[$231>>0]|0;
               $4655 = ($4654<<24>>24)==(0);
               if ($4655) {
                break L484;
               }
               $4656 = +HEAPF64[$47>>3];
               $4657 = $4656 * $4656;
               $4658 = $4657 * 2000.0;
               $4659 = +HEAPF64[$60>>3];
               $4660 = $4659 * 2000.0;
               $4661 = $4658 - $4660;
               $4662 = (+__Z6IKsignd($4661));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x742,$4662,-1);
               $4663 = HEAP8[$232>>0]|0;
               $4664 = ($4663<<24>>24)==(0);
               if ($4664) {
                break L484;
               }
               $4665 = +HEAPF64[$x741>>3];
               $4666 = $4665 + -1.5707963267949001;
               $4667 = +HEAPF64[$x742>>3];
               $4668 = $4667 * 1.5707963267949001;
               $4669 = $4666 + $4668;
               $4670 = (+__Z5IKsind($4669));
               $4671 = (+__Z5IKcosd($4669));
               $4672 = $4669 > 3.14159265358979;
               do {
                if ($4672) {
                 $4673 = $4669 + -6.2831853071795898;
                 $4676 = $4673;
                } else {
                 $4674 = $4669 < -3.14159265358979;
                 if (!($4674)) {
                  $4676 = $4669;
                  break;
                 }
                 $4675 = $4669 + 6.2831853071795898;
                 $4676 = $4675;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $4676;
               HEAPF64[$233>>3] = $4671;
               HEAPF64[$234>>3] = $4670;
               $4677 = +HEAPF64[$this>>3];
               $4678 = (+__Z5IKcosd($4677));
               $4679 = (+__Z5IKsind($4677));
               $4680 = +HEAPF64[$45>>3];
               $4681 = $4678 * $4680;
               $4682 = +HEAPF64[$43>>3];
               $4683 = -$4682;
               $4684 = $4679 * $4683;
               $4685 = $4681 + $4684;
               $4686 = (+__Z5IKabsd($4685));
               $4687 = $4686 > 5.0000000000000004E-6;
               if ($4687) {
                break L484;
               }
               $4688 = +HEAPF64[$74>>3];
               $4689 = $4688 * 0.27650000000000002;
               $4690 = $4678 * $4683;
               $4691 = $4690 - $4689;
               $4692 = $4679 * $4680;
               $4693 = $4691 - $4692;
               $4694 = (+__Z5IKabsd($4693));
               $4695 = $4694 > 5.0000000000000004E-6;
               if ($4695) {
                break L484;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L484;
              }
             } while(0);
             $4487 = +HEAPF64[$60>>3];
             $4488 = +HEAPF64[$7>>3];
             $4489 = (+__Z5IKabsd($4488));
             $4490 = $4489 + 3.14159265358979;
             $4491 = (+__Z6IKfmoddd($4490,6.2831853071795898));
             $4492 = $4491 + -3.14159265358979;
             $4493 = +HEAPF64[$47>>3];
             $4494 = 0.60450000000000004 - $4493;
             $4495 = -0.03113175 - $4487;
             $4496 = $4493 * 0.65600000000000003;
             $4497 = $4495 + $4496;
             $4498 = (+__Z5IKabsd($4492));
             $4499 = $4498 < 9.9999999999999995E-7;
             do {
              if ($4499) {
               $4500 = 0.36542025 - $4487;
               $4501 = (+__Z5IKabsd($4500));
               $4502 = $4501 < 9.9999999999999995E-7;
               if (!($4502)) {
                break;
               }
               $4503 = (+__Z5IKabsd($4494));
               $4504 = $4503 < 9.9999999999999995E-7;
               if (!($4504)) {
                break;
               }
               $4505 = (+__Z5IKabsd($4497));
               $4506 = $4505 < 9.9999999999999995E-7;
               if (!($4506)) {
                break;
               }
               HEAPF64[$216>>3] = 0.0;
               HEAPF64[$215>>3] = 1.0;
               HEAPF64[$3>>3] = 0.0;
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = 1.0;
               HEAPF64[$22>>3] = 0.0;
               HEAPF64[$74>>3] = 0.0;
               HEAPF64[$73>>3] = 1.0;
               HEAPF64[$7>>3] = 0.0;
               $4507 = +HEAPF64[$43>>3];
               $4508 = (+__Z5IKabsd($4507));
               $4509 = +HEAPF64[$45>>3];
               $4510 = (+__Z5IKabsd($4509));
               $4511 = $4508 + $4510;
               $4512 = (+__Z5IKabsd($4511));
               $4513 = $4512 < 9.9999999999999995E-7;
               if ($4513) {
                break L484;
               }
               HEAP16[$j0valid194>>1] = 0;
               HEAP8[$2>>0] = 2;
               $4514 = +HEAPF64[$45>>3];
               $4515 = +HEAPF64[$43>>3];
               $4516 = -$4515;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x736,$4514,$4516,1.9999999999999999E-6);
               $4517 = HEAP8[$217>>0]|0;
               $4518 = ($4517<<24>>24)==(0);
               if ($4518) {
                break L484;
               }
               $4519 = +HEAPF64[$x736>>3];
               $4520 = -$4519;
               HEAPF64[$j0array191>>3] = $4520;
               $4521 = (+__Z5IKsind($4520));
               HEAPF64[$sj0array193>>3] = $4521;
               $4522 = (+__Z5IKcosd($4520));
               HEAPF64[$cj0array192>>3] = $4522;
               $4523 = 3.14159265358979 - $4519;
               HEAPF64[$218>>3] = $4523;
               $4524 = (+__Z5IKsind($4523));
               HEAPF64[$219>>3] = $4524;
               $4525 = +HEAPF64[$218>>3];
               $4526 = (+__Z5IKcosd($4525));
               HEAPF64[$220>>3] = $4526;
               $4527 = +HEAPF64[$j0array191>>3];
               $4528 = $4527 > 3.14159265358979;
               do {
                if ($4528) {
                 $4529 = $4527 + -6.2831853071795898;
                 HEAPF64[$j0array191>>3] = $4529;
                } else {
                 $4530 = $4527 < -3.14159265358979;
                 if (!($4530)) {
                  break;
                 }
                 $4531 = $4527 + 6.2831853071795898;
                 HEAPF64[$j0array191>>3] = $4531;
                }
               } while(0);
               HEAP8[$j0valid194>>0] = 1;
               $4532 = +HEAPF64[$218>>3];
               $4533 = $4532 > 3.14159265358979;
               do {
                if ($4533) {
                 $4534 = $4532 + -6.2831853071795898;
                 HEAPF64[$218>>3] = $4534;
                } else {
                 $4535 = $4532 < -3.14159265358979;
                 if (!($4535)) {
                  break;
                 }
                 $4536 = $4532 + 6.2831853071795898;
                 HEAPF64[$218>>3] = $4536;
                }
               } while(0);
               HEAP8[$221>>0] = 1;
               $4537 = HEAP8[$j0valid194>>0]|0;
               $4538 = ($4537<<24>>24)==(0);
               do {
                if (!($4538)) {
                 HEAP8[$0>>0] = 0;
                 HEAP8[$1>>0] = -1;
                 $4539 = HEAP8[$795>>0]|0;
                 $4540 = ($4539<<24>>24)==(0);
                 do {
                  if (!($4540)) {
                   $4541 = +HEAPF64[$cj0array192>>3];
                   $4542 = +HEAPF64[$796>>3];
                   $4543 = $4541 - $4542;
                   $4544 = (+__Z5IKabsd($4543));
                   $4545 = $4544 < 9.9999999999999995E-7;
                   if (!($4545)) {
                    break;
                   }
                   $4546 = +HEAPF64[$sj0array193>>3];
                   $4547 = +HEAPF64[$797>>3];
                   $4548 = $4546 - $4547;
                   $4549 = (+__Z5IKabsd($4548));
                   $4550 = $4549 < 9.9999999999999995E-7;
                   if (!($4550)) {
                    break;
                   }
                   HEAP8[$795>>0] = 0;
                   HEAP8[$1>>0] = 1;
                  }
                 } while(0);
                 $4551 = +HEAPF64[$j0array191>>3];
                 HEAPF64[$this>>3] = $4551;
                 $4552 = +HEAPF64[$cj0array192>>3];
                 HEAPF64[$222>>3] = $4552;
                 $4553 = +HEAPF64[$sj0array193>>3];
                 HEAPF64[$223>>3] = $4553;
                 $4554 = +HEAPF64[$45>>3];
                 $4555 = +HEAPF64[$this>>3];
                 $4556 = (+__Z5IKsind($4555));
                 $4557 = $4554 * $4556;
                 $4558 = +HEAPF64[$43>>3];
                 $4559 = (+__Z5IKcosd($4555));
                 $4560 = $4558 * $4559;
                 $4561 = -$4560;
                 $4562 = $4561 - $4557;
                 $4563 = (+__Z5IKabsd($4562));
                 $4564 = $4563 > 5.0000000000000004E-6;
                 if ($4564) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $4565 = HEAP8[$791>>0]|0;
               $4566 = ($4565<<24>>24)==(0);
               if ($4566) {
                break L484;
               }
               HEAP8[$0>>0] = 1;
               HEAP8[$1>>0] = -1;
               $12118 = +HEAPF64[$792>>3];
               HEAPF64[$this>>3] = $12118;
               $12119 = +HEAPF64[$793>>3];
               HEAPF64[$222>>3] = $12119;
               $12120 = +HEAPF64[$794>>3];
               HEAPF64[$223>>3] = $12120;
               $12121 = +HEAPF64[$45>>3];
               $12122 = +HEAPF64[$this>>3];
               $12123 = (+__Z5IKsind($12122));
               $12124 = $12121 * $12123;
               $12125 = +HEAPF64[$43>>3];
               $12126 = (+__Z5IKcosd($12122));
               $12127 = $12125 * $12126;
               $12128 = -$12127;
               $12129 = $12128 - $12124;
               $12130 = (+__Z5IKabsd($12129));
               $12131 = $12130 > 5.0000000000000004E-6;
               if ($12131) {
                break L484;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L484;
              }
             } while(0);
             $4567 = +HEAPF64[$60>>3];
             $4568 = +HEAPF64[$7>>3];
             $4569 = $4568 + -3.14159265358979;
             $4570 = (+__Z5IKabsd($4569));
             $4571 = $4570 + 3.14159265358979;
             $4572 = (+__Z6IKfmoddd($4571,6.2831853071795898));
             $4573 = $4572 + -3.14159265358979;
             $4574 = +HEAPF64[$47>>3];
             $4575 = 0.051499999999999997 - $4574;
             $4576 = -0.03113175 - $4567;
             $4577 = $4574 * 0.65600000000000003;
             $4578 = $4576 + $4577;
             $4579 = (+__Z5IKabsd($4573));
             $4580 = $4579 < 9.9999999999999995E-7;
             if (!($4580)) {
              break L484;
             }
             $4581 = 0.0026522500000000001 - $4567;
             $4582 = (+__Z5IKabsd($4581));
             $4583 = $4582 < 9.9999999999999995E-7;
             if (!($4583)) {
              break L484;
             }
             $4584 = (+__Z5IKabsd($4575));
             $4585 = $4584 < 9.9999999999999995E-7;
             if (!($4585)) {
              break L484;
             }
             $4586 = (+__Z5IKabsd($4578));
             $4587 = $4586 < 9.9999999999999995E-7;
             if (!($4587)) {
              break L484;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = -1.0;
             HEAPF64[$7>>3] = 3.14159265358979;
             $4588 = +HEAPF64[$43>>3];
             $4589 = (+__Z5IKabsd($4588));
             $4590 = +HEAPF64[$45>>3];
             $4591 = (+__Z5IKabsd($4590));
             $4592 = $4589 + $4591;
             $4593 = (+__Z5IKabsd($4592));
             $4594 = $4593 < 9.9999999999999995E-7;
             if ($4594) {
              break L484;
             }
             HEAP16[$j0valid203>>1] = 0;
             HEAP8[$2>>0] = 2;
             $4595 = +HEAPF64[$45>>3];
             $4596 = +HEAPF64[$43>>3];
             $4597 = -$4596;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x739,$4595,$4597,1.9999999999999999E-6);
             $4598 = HEAP8[$224>>0]|0;
             $4599 = ($4598<<24>>24)==(0);
             if ($4599) {
              break L484;
             }
             $4600 = +HEAPF64[$x739>>3];
             $4601 = -$4600;
             HEAPF64[$j0array200>>3] = $4601;
             $4602 = (+__Z5IKsind($4601));
             HEAPF64[$sj0array202>>3] = $4602;
             $4603 = (+__Z5IKcosd($4601));
             HEAPF64[$cj0array201>>3] = $4603;
             $4604 = 3.14159265358979 - $4600;
             HEAPF64[$225>>3] = $4604;
             $4605 = (+__Z5IKsind($4604));
             HEAPF64[$226>>3] = $4605;
             $4606 = +HEAPF64[$225>>3];
             $4607 = (+__Z5IKcosd($4606));
             HEAPF64[$227>>3] = $4607;
             $4608 = +HEAPF64[$j0array200>>3];
             $4609 = $4608 > 3.14159265358979;
             do {
              if ($4609) {
               $4610 = $4608 + -6.2831853071795898;
               HEAPF64[$j0array200>>3] = $4610;
              } else {
               $4611 = $4608 < -3.14159265358979;
               if (!($4611)) {
                break;
               }
               $4612 = $4608 + 6.2831853071795898;
               HEAPF64[$j0array200>>3] = $4612;
              }
             } while(0);
             HEAP8[$j0valid203>>0] = 1;
             $4613 = +HEAPF64[$225>>3];
             $4614 = $4613 > 3.14159265358979;
             do {
              if ($4614) {
               $4615 = $4613 + -6.2831853071795898;
               HEAPF64[$225>>3] = $4615;
              } else {
               $4616 = $4613 < -3.14159265358979;
               if (!($4616)) {
                break;
               }
               $4617 = $4613 + 6.2831853071795898;
               HEAPF64[$225>>3] = $4617;
              }
             } while(0);
             HEAP8[$228>>0] = 1;
             $4618 = HEAP8[$j0valid203>>0]|0;
             $4619 = ($4618<<24>>24)==(0);
             do {
              if (!($4619)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $4620 = HEAP8[$802>>0]|0;
               $4621 = ($4620<<24>>24)==(0);
               do {
                if (!($4621)) {
                 $4622 = +HEAPF64[$cj0array201>>3];
                 $4623 = +HEAPF64[$803>>3];
                 $4624 = $4622 - $4623;
                 $4625 = (+__Z5IKabsd($4624));
                 $4626 = $4625 < 9.9999999999999995E-7;
                 if (!($4626)) {
                  break;
                 }
                 $4627 = +HEAPF64[$sj0array202>>3];
                 $4628 = +HEAPF64[$804>>3];
                 $4629 = $4627 - $4628;
                 $4630 = (+__Z5IKabsd($4629));
                 $4631 = $4630 < 9.9999999999999995E-7;
                 if (!($4631)) {
                  break;
                 }
                 HEAP8[$802>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $4632 = +HEAPF64[$j0array200>>3];
               HEAPF64[$this>>3] = $4632;
               $4633 = +HEAPF64[$cj0array201>>3];
               HEAPF64[$229>>3] = $4633;
               $4634 = +HEAPF64[$sj0array202>>3];
               HEAPF64[$230>>3] = $4634;
               $4635 = +HEAPF64[$45>>3];
               $4636 = +HEAPF64[$this>>3];
               $4637 = (+__Z5IKsind($4636));
               $4638 = $4635 * $4637;
               $4639 = +HEAPF64[$43>>3];
               $4640 = (+__Z5IKcosd($4636));
               $4641 = $4639 * $4640;
               $4642 = -$4641;
               $4643 = $4642 - $4638;
               $4644 = (+__Z5IKabsd($4643));
               $4645 = $4644 > 5.0000000000000004E-6;
               if ($4645) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $4646 = HEAP8[$798>>0]|0;
             $4647 = ($4646<<24>>24)==(0);
             if ($4647) {
              break L484;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $12104 = +HEAPF64[$799>>3];
             HEAPF64[$this>>3] = $12104;
             $12105 = +HEAPF64[$800>>3];
             HEAPF64[$229>>3] = $12105;
             $12106 = +HEAPF64[$801>>3];
             HEAPF64[$230>>3] = $12106;
             $12107 = +HEAPF64[$45>>3];
             $12108 = +HEAPF64[$this>>3];
             $12109 = (+__Z5IKsind($12108));
             $12110 = $12107 * $12109;
             $12111 = +HEAPF64[$43>>3];
             $12112 = (+__Z5IKcosd($12108));
             $12113 = $12111 * $12112;
             $12114 = -$12113;
             $12115 = $12114 - $12110;
             $12116 = (+__Z5IKabsd($12115));
             $12117 = $12116 > 5.0000000000000004E-6;
             if ($12117) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $4696 = +HEAPF64[$60>>3];
           $4697 = +HEAPF64[$22>>3];
           $4698 = $4697 + -3.14159265358979;
           $4699 = (+__Z5IKabsd($4698));
           $4700 = $4699 + 3.14159265358979;
           $4701 = (+__Z6IKfmoddd($4700,6.2831853071795898));
           $4702 = $4701 + -3.14159265358979;
           $4703 = +HEAPF64[$47>>3];
           $4704 = $4703 * 0.65600000000000003;
           $4705 = $4704 + -0.03113175;
           $4706 = $4705 - $4696;
           $4707 = (+__Z5IKabsd($4702));
           $4708 = $4707 < 9.9999999999999995E-7;
           do {
            if ($4708) {
             $4709 = +HEAPF64[$73>>3];
             $4710 = $4709 * 0.18138399999999999;
             $4711 = $4710 + 0.18403625000000001;
             $4712 = $4711 - $4696;
             $4713 = (+__Z5IKabsd($4712));
             $4714 = $4713 < 9.9999999999999995E-7;
             if (!($4714)) {
              break;
             }
             $4715 = (+__Z5IKabsd($4706));
             $4716 = $4715 < 9.9999999999999995E-7;
             if (!($4716)) {
              break;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             $4717 = +HEAPF64[$47>>3];
             $4718 = $4717 * $4717;
             $4719 = +HEAPF64[$60>>3];
             $4720 = $4719 - $4718;
             $4721 = +HEAPF64[$74>>3];
             $4722 = (+__Z5IKabsd($4720));
             $4723 = $4722 < 9.9999999999999995E-7;
             do {
              if (!($4723)) {
               $4724 = $4718 * 2000.0;
               $4725 = $4719 * 2000.0;
               $4726 = $4725 - $4724;
               $4727 = (+__Z6IKsignd($4726));
               $4728 = (+__Z5IKabsd($4727));
               $4729 = $4728 < 9.9999999999999995E-7;
               if ($4729) {
                break;
               }
               $4730 = (+__Z5IKabsd(305809.0));
               $4731 = $4730 < 9.9999999999999995E-7;
               if ($4731) {
                break;
               }
               $4732 = (+__Z5IKabsd($4721));
               $4733 = $4732 < 9.9999999999999995E-7;
               if ($4733) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $4895 = +HEAPF64[$74>>3];
               $4896 = $4895 * 553.0;
               $4897 = +HEAPF64[$60>>3];
               $4898 = $4897 * 2000.0;
               $4899 = +HEAPF64[$47>>3];
               $4900 = $4899 * $4899;
               $4901 = $4900 * 2000.0;
               $4902 = $4898 - $4901;
               $4903 = (+__Z6IKsignd($4902));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x756,$4903,-1);
               $4904 = HEAP8[$249>>0]|0;
               $4905 = ($4904<<24>>24)==(0);
               if ($4905) {
                break L484;
               }
               $4906 = +HEAPF64[$45>>3];
               $4907 = $4896 * $4906;
               $4908 = +HEAPF64[$43>>3];
               $4909 = $4896 * $4908;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x757,$4907,$4909,1.9999999999999999E-6);
               $4910 = HEAP8[$250>>0]|0;
               $4911 = ($4910<<24>>24)==(0);
               if ($4911) {
                break L484;
               }
               $4912 = +HEAPF64[$x756>>3];
               $4913 = $4912 * 1.5707963267949001;
               $4914 = $4913 + -1.5707963267949001;
               $4915 = +HEAPF64[$x757>>3];
               $4916 = $4915 + $4914;
               $4917 = (+__Z5IKsind($4916));
               $4918 = (+__Z5IKcosd($4916));
               $4919 = $4916 > 3.14159265358979;
               do {
                if ($4919) {
                 $4920 = $4916 + -6.2831853071795898;
                 $4923 = $4920;
                } else {
                 $4921 = $4916 < -3.14159265358979;
                 if (!($4921)) {
                  $4923 = $4916;
                  break;
                 }
                 $4922 = $4916 + 6.2831853071795898;
                 $4923 = $4922;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $4923;
               HEAPF64[$251>>3] = $4918;
               HEAPF64[$252>>3] = $4917;
               $4924 = +HEAPF64[$this>>3];
               $4925 = (+__Z5IKcosd($4924));
               $4926 = (+__Z5IKsind($4924));
               $4927 = +HEAPF64[$45>>3];
               $4928 = $4925 * $4927;
               $4929 = +HEAPF64[$43>>3];
               $4930 = -$4929;
               $4931 = $4926 * $4930;
               $4932 = $4928 + $4931;
               $4933 = (+__Z5IKabsd($4932));
               $4934 = $4933 > 5.0000000000000004E-6;
               if ($4934) {
                break L484;
               }
               $4935 = +HEAPF64[$74>>3];
               $4936 = $4935 * 0.27650000000000002;
               $4937 = $4926 * $4927;
               $4938 = $4936 - $4937;
               $4939 = $4925 * $4930;
               $4940 = $4939 + $4938;
               $4941 = (+__Z5IKabsd($4940));
               $4942 = $4941 > 5.0000000000000004E-6;
               if ($4942) {
                break L484;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L484;
              }
             } while(0);
             $4734 = +HEAPF64[$60>>3];
             $4735 = +HEAPF64[$7>>3];
             $4736 = (+__Z5IKabsd($4735));
             $4737 = $4736 + 3.14159265358979;
             $4738 = (+__Z6IKfmoddd($4737,6.2831853071795898));
             $4739 = $4738 + -3.14159265358979;
             $4740 = +HEAPF64[$47>>3];
             $4741 = 0.60450000000000004 - $4740;
             $4742 = $4740 * 0.65600000000000003;
             $4743 = $4742 + -0.03113175;
             $4744 = $4743 - $4734;
             $4745 = (+__Z5IKabsd($4739));
             $4746 = $4745 < 9.9999999999999995E-7;
             do {
              if ($4746) {
               $4747 = 0.36542025 - $4734;
               $4748 = (+__Z5IKabsd($4747));
               $4749 = $4748 < 9.9999999999999995E-7;
               if (!($4749)) {
                break;
               }
               $4750 = (+__Z5IKabsd($4741));
               $4751 = $4750 < 9.9999999999999995E-7;
               if (!($4751)) {
                break;
               }
               $4752 = (+__Z5IKabsd($4744));
               $4753 = $4752 < 9.9999999999999995E-7;
               if (!($4753)) {
                break;
               }
               HEAPF64[$216>>3] = 0.0;
               HEAPF64[$215>>3] = 1.0;
               HEAPF64[$3>>3] = 0.0;
               HEAPF64[$24>>3] = 0.0;
               HEAPF64[$23>>3] = -1.0;
               HEAPF64[$22>>3] = 3.14159265358979;
               HEAPF64[$74>>3] = 0.0;
               HEAPF64[$73>>3] = 1.0;
               HEAPF64[$7>>3] = 0.0;
               $4754 = +HEAPF64[$43>>3];
               $4755 = (+__Z5IKabsd($4754));
               $4756 = +HEAPF64[$45>>3];
               $4757 = (+__Z5IKabsd($4756));
               $4758 = $4755 + $4757;
               $4759 = (+__Z5IKabsd($4758));
               $4760 = $4759 < 9.9999999999999995E-7;
               if ($4760) {
                break L484;
               }
               HEAP16[$j0valid223>>1] = 0;
               HEAP8[$2>>0] = 2;
               $4761 = +HEAPF64[$45>>3];
               $4762 = +HEAPF64[$43>>3];
               $4763 = -$4762;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x751,$4761,$4763,1.9999999999999999E-6);
               $4764 = HEAP8[$235>>0]|0;
               $4765 = ($4764<<24>>24)==(0);
               if ($4765) {
                break L484;
               }
               $4766 = +HEAPF64[$x751>>3];
               $4767 = -$4766;
               HEAPF64[$j0array220>>3] = $4767;
               $4768 = (+__Z5IKsind($4767));
               HEAPF64[$sj0array222>>3] = $4768;
               $4769 = (+__Z5IKcosd($4767));
               HEAPF64[$cj0array221>>3] = $4769;
               $4770 = 3.14159265358979 - $4766;
               HEAPF64[$236>>3] = $4770;
               $4771 = (+__Z5IKsind($4770));
               HEAPF64[$237>>3] = $4771;
               $4772 = +HEAPF64[$236>>3];
               $4773 = (+__Z5IKcosd($4772));
               HEAPF64[$238>>3] = $4773;
               $4774 = +HEAPF64[$j0array220>>3];
               $4775 = $4774 > 3.14159265358979;
               do {
                if ($4775) {
                 $4776 = $4774 + -6.2831853071795898;
                 HEAPF64[$j0array220>>3] = $4776;
                } else {
                 $4777 = $4774 < -3.14159265358979;
                 if (!($4777)) {
                  break;
                 }
                 $4778 = $4774 + 6.2831853071795898;
                 HEAPF64[$j0array220>>3] = $4778;
                }
               } while(0);
               HEAP8[$j0valid223>>0] = 1;
               $4779 = +HEAPF64[$236>>3];
               $4780 = $4779 > 3.14159265358979;
               do {
                if ($4780) {
                 $4781 = $4779 + -6.2831853071795898;
                 HEAPF64[$236>>3] = $4781;
                } else {
                 $4782 = $4779 < -3.14159265358979;
                 if (!($4782)) {
                  break;
                 }
                 $4783 = $4779 + 6.2831853071795898;
                 HEAPF64[$236>>3] = $4783;
                }
               } while(0);
               HEAP8[$239>>0] = 1;
               $4784 = HEAP8[$j0valid223>>0]|0;
               $4785 = ($4784<<24>>24)==(0);
               do {
                if (!($4785)) {
                 HEAP8[$0>>0] = 0;
                 HEAP8[$1>>0] = -1;
                 $4786 = HEAP8[$809>>0]|0;
                 $4787 = ($4786<<24>>24)==(0);
                 do {
                  if (!($4787)) {
                   $4788 = +HEAPF64[$cj0array221>>3];
                   $4789 = +HEAPF64[$810>>3];
                   $4790 = $4788 - $4789;
                   $4791 = (+__Z5IKabsd($4790));
                   $4792 = $4791 < 9.9999999999999995E-7;
                   if (!($4792)) {
                    break;
                   }
                   $4793 = +HEAPF64[$sj0array222>>3];
                   $4794 = +HEAPF64[$811>>3];
                   $4795 = $4793 - $4794;
                   $4796 = (+__Z5IKabsd($4795));
                   $4797 = $4796 < 9.9999999999999995E-7;
                   if (!($4797)) {
                    break;
                   }
                   HEAP8[$809>>0] = 0;
                   HEAP8[$1>>0] = 1;
                  }
                 } while(0);
                 $4798 = +HEAPF64[$j0array220>>3];
                 HEAPF64[$this>>3] = $4798;
                 $4799 = +HEAPF64[$cj0array221>>3];
                 HEAPF64[$240>>3] = $4799;
                 $4800 = +HEAPF64[$sj0array222>>3];
                 HEAPF64[$241>>3] = $4800;
                 $4801 = +HEAPF64[$45>>3];
                 $4802 = +HEAPF64[$this>>3];
                 $4803 = (+__Z5IKsind($4802));
                 $4804 = $4801 * $4803;
                 $4805 = +HEAPF64[$43>>3];
                 $4806 = (+__Z5IKcosd($4802));
                 $4807 = $4805 * $4806;
                 $4808 = -$4807;
                 $4809 = $4808 - $4804;
                 $4810 = (+__Z5IKabsd($4809));
                 $4811 = $4810 > 5.0000000000000004E-6;
                 if ($4811) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $4812 = HEAP8[$805>>0]|0;
               $4813 = ($4812<<24>>24)==(0);
               if ($4813) {
                break L484;
               }
               HEAP8[$0>>0] = 1;
               HEAP8[$1>>0] = -1;
               $12090 = +HEAPF64[$806>>3];
               HEAPF64[$this>>3] = $12090;
               $12091 = +HEAPF64[$807>>3];
               HEAPF64[$240>>3] = $12091;
               $12092 = +HEAPF64[$808>>3];
               HEAPF64[$241>>3] = $12092;
               $12093 = +HEAPF64[$45>>3];
               $12094 = +HEAPF64[$this>>3];
               $12095 = (+__Z5IKsind($12094));
               $12096 = $12093 * $12095;
               $12097 = +HEAPF64[$43>>3];
               $12098 = (+__Z5IKcosd($12094));
               $12099 = $12097 * $12098;
               $12100 = -$12099;
               $12101 = $12100 - $12096;
               $12102 = (+__Z5IKabsd($12101));
               $12103 = $12102 > 5.0000000000000004E-6;
               if ($12103) {
                break L484;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L484;
              }
             } while(0);
             $4814 = +HEAPF64[$60>>3];
             $4815 = +HEAPF64[$7>>3];
             $4816 = $4815 + -3.14159265358979;
             $4817 = (+__Z5IKabsd($4816));
             $4818 = $4817 + 3.14159265358979;
             $4819 = (+__Z6IKfmoddd($4818,6.2831853071795898));
             $4820 = $4819 + -3.14159265358979;
             $4821 = +HEAPF64[$47>>3];
             $4822 = 0.051499999999999997 - $4821;
             $4823 = $4821 * 0.65600000000000003;
             $4824 = $4823 + -0.03113175;
             $4825 = $4824 - $4814;
             $4826 = (+__Z5IKabsd($4820));
             $4827 = $4826 < 9.9999999999999995E-7;
             if (!($4827)) {
              break L484;
             }
             $4828 = 0.0026522500000000001 - $4814;
             $4829 = (+__Z5IKabsd($4828));
             $4830 = $4829 < 9.9999999999999995E-7;
             if (!($4830)) {
              break L484;
             }
             $4831 = (+__Z5IKabsd($4822));
             $4832 = $4831 < 9.9999999999999995E-7;
             if (!($4832)) {
              break L484;
             }
             $4833 = (+__Z5IKabsd($4825));
             $4834 = $4833 < 9.9999999999999995E-7;
             if (!($4834)) {
              break L484;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = -1.0;
             HEAPF64[$7>>3] = 3.14159265358979;
             $4835 = +HEAPF64[$43>>3];
             $4836 = (+__Z5IKabsd($4835));
             $4837 = +HEAPF64[$45>>3];
             $4838 = (+__Z5IKabsd($4837));
             $4839 = $4836 + $4838;
             $4840 = (+__Z5IKabsd($4839));
             $4841 = $4840 < 9.9999999999999995E-7;
             if ($4841) {
              break L484;
             }
             HEAP16[$j0valid232>>1] = 0;
             HEAP8[$2>>0] = 2;
             $4842 = +HEAPF64[$45>>3];
             $4843 = +HEAPF64[$43>>3];
             $4844 = -$4843;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x754,$4842,$4844,1.9999999999999999E-6);
             $4845 = HEAP8[$242>>0]|0;
             $4846 = ($4845<<24>>24)==(0);
             if ($4846) {
              break L484;
             }
             $4847 = +HEAPF64[$x754>>3];
             $4848 = -$4847;
             HEAPF64[$j0array229>>3] = $4848;
             $4849 = (+__Z5IKsind($4848));
             HEAPF64[$sj0array231>>3] = $4849;
             $4850 = (+__Z5IKcosd($4848));
             HEAPF64[$cj0array230>>3] = $4850;
             $4851 = 3.14159265358979 - $4847;
             HEAPF64[$243>>3] = $4851;
             $4852 = (+__Z5IKsind($4851));
             HEAPF64[$244>>3] = $4852;
             $4853 = +HEAPF64[$243>>3];
             $4854 = (+__Z5IKcosd($4853));
             HEAPF64[$245>>3] = $4854;
             $4855 = +HEAPF64[$j0array229>>3];
             $4856 = $4855 > 3.14159265358979;
             do {
              if ($4856) {
               $4857 = $4855 + -6.2831853071795898;
               HEAPF64[$j0array229>>3] = $4857;
              } else {
               $4858 = $4855 < -3.14159265358979;
               if (!($4858)) {
                break;
               }
               $4859 = $4855 + 6.2831853071795898;
               HEAPF64[$j0array229>>3] = $4859;
              }
             } while(0);
             HEAP8[$j0valid232>>0] = 1;
             $4860 = +HEAPF64[$243>>3];
             $4861 = $4860 > 3.14159265358979;
             do {
              if ($4861) {
               $4862 = $4860 + -6.2831853071795898;
               HEAPF64[$243>>3] = $4862;
              } else {
               $4863 = $4860 < -3.14159265358979;
               if (!($4863)) {
                break;
               }
               $4864 = $4860 + 6.2831853071795898;
               HEAPF64[$243>>3] = $4864;
              }
             } while(0);
             HEAP8[$246>>0] = 1;
             $4865 = HEAP8[$j0valid232>>0]|0;
             $4866 = ($4865<<24>>24)==(0);
             do {
              if (!($4866)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $4867 = HEAP8[$816>>0]|0;
               $4868 = ($4867<<24>>24)==(0);
               do {
                if (!($4868)) {
                 $4869 = +HEAPF64[$cj0array230>>3];
                 $4870 = +HEAPF64[$817>>3];
                 $4871 = $4869 - $4870;
                 $4872 = (+__Z5IKabsd($4871));
                 $4873 = $4872 < 9.9999999999999995E-7;
                 if (!($4873)) {
                  break;
                 }
                 $4874 = +HEAPF64[$sj0array231>>3];
                 $4875 = +HEAPF64[$818>>3];
                 $4876 = $4874 - $4875;
                 $4877 = (+__Z5IKabsd($4876));
                 $4878 = $4877 < 9.9999999999999995E-7;
                 if (!($4878)) {
                  break;
                 }
                 HEAP8[$816>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $4879 = +HEAPF64[$j0array229>>3];
               HEAPF64[$this>>3] = $4879;
               $4880 = +HEAPF64[$cj0array230>>3];
               HEAPF64[$247>>3] = $4880;
               $4881 = +HEAPF64[$sj0array231>>3];
               HEAPF64[$248>>3] = $4881;
               $4882 = +HEAPF64[$45>>3];
               $4883 = +HEAPF64[$this>>3];
               $4884 = (+__Z5IKsind($4883));
               $4885 = $4882 * $4884;
               $4886 = +HEAPF64[$43>>3];
               $4887 = (+__Z5IKcosd($4883));
               $4888 = $4886 * $4887;
               $4889 = -$4888;
               $4890 = $4889 - $4885;
               $4891 = (+__Z5IKabsd($4890));
               $4892 = $4891 > 5.0000000000000004E-6;
               if ($4892) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $4893 = HEAP8[$812>>0]|0;
             $4894 = ($4893<<24>>24)==(0);
             if ($4894) {
              break L484;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $12076 = +HEAPF64[$813>>3];
             HEAPF64[$this>>3] = $12076;
             $12077 = +HEAPF64[$814>>3];
             HEAPF64[$247>>3] = $12077;
             $12078 = +HEAPF64[$815>>3];
             HEAPF64[$248>>3] = $12078;
             $12079 = +HEAPF64[$45>>3];
             $12080 = +HEAPF64[$this>>3];
             $12081 = (+__Z5IKsind($12080));
             $12082 = $12079 * $12081;
             $12083 = +HEAPF64[$43>>3];
             $12084 = (+__Z5IKcosd($12080));
             $12085 = $12083 * $12084;
             $12086 = -$12085;
             $12087 = $12086 - $12082;
             $12088 = (+__Z5IKabsd($12087));
             $12089 = $12088 > 5.0000000000000004E-6;
             if ($12089) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $4943 = +HEAPF64[$60>>3];
           $4944 = +HEAPF64[$7>>3];
           $4945 = (+__Z5IKabsd($4944));
           $4946 = $4945 + 3.14159265358979;
           $4947 = (+__Z6IKfmoddd($4946,6.2831853071795898));
           $4948 = $4947 + -3.14159265358979;
           $4949 = +HEAPF64[$47>>3];
           $4950 = 0.60450000000000004 - $4949;
           $4951 = -0.03113175 - $4943;
           $4952 = $4949 * 0.65600000000000003;
           $4953 = $4951 + $4952;
           $4954 = (+__Z5IKabsd($4948));
           $4955 = $4954 < 9.9999999999999995E-7;
           do {
            if ($4955) {
             $4956 = 0.36542025 - $4943;
             $4957 = (+__Z5IKabsd($4956));
             $4958 = $4957 < 9.9999999999999995E-7;
             if (!($4958)) {
              break;
             }
             $4959 = (+__Z5IKabsd($4950));
             $4960 = $4959 < 9.9999999999999995E-7;
             if (!($4960)) {
              break;
             }
             $4961 = (+__Z5IKabsd($4953));
             $4962 = $4961 < 9.9999999999999995E-7;
             if (!($4962)) {
              break;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $4963 = +HEAPF64[$43>>3];
             $4964 = (+__Z5IKabsd($4963));
             $4965 = +HEAPF64[$45>>3];
             $4966 = (+__Z5IKabsd($4965));
             $4967 = $4964 + $4966;
             $4968 = (+__Z5IKabsd($4967));
             $4969 = $4968 < 9.9999999999999995E-7;
             if (!($4969)) {
              HEAP16[$j0valid265>>1] = 0;
              HEAP8[$2>>0] = 2;
              $5184 = +HEAPF64[$45>>3];
              $5185 = +HEAPF64[$43>>3];
              $5186 = -$5185;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x781,$5184,$5186,1.9999999999999999E-6);
              $5187 = HEAP8[$267>>0]|0;
              $5188 = ($5187<<24>>24)==(0);
              if ($5188) {
               break L484;
              }
              $5189 = +HEAPF64[$x781>>3];
              $5190 = -$5189;
              HEAPF64[$j0array262>>3] = $5190;
              $5191 = (+__Z5IKsind($5190));
              HEAPF64[$sj0array264>>3] = $5191;
              $5192 = (+__Z5IKcosd($5190));
              HEAPF64[$cj0array263>>3] = $5192;
              $5193 = 3.14159265358979 - $5189;
              HEAPF64[$268>>3] = $5193;
              $5194 = (+__Z5IKsind($5193));
              HEAPF64[$269>>3] = $5194;
              $5195 = +HEAPF64[$268>>3];
              $5196 = (+__Z5IKcosd($5195));
              HEAPF64[$270>>3] = $5196;
              $5197 = +HEAPF64[$j0array262>>3];
              $5198 = $5197 > 3.14159265358979;
              do {
               if ($5198) {
                $5199 = $5197 + -6.2831853071795898;
                HEAPF64[$j0array262>>3] = $5199;
               } else {
                $5200 = $5197 < -3.14159265358979;
                if (!($5200)) {
                 break;
                }
                $5201 = $5197 + 6.2831853071795898;
                HEAPF64[$j0array262>>3] = $5201;
               }
              } while(0);
              HEAP8[$j0valid265>>0] = 1;
              $5202 = +HEAPF64[$268>>3];
              $5203 = $5202 > 3.14159265358979;
              do {
               if ($5203) {
                $5204 = $5202 + -6.2831853071795898;
                HEAPF64[$268>>3] = $5204;
               } else {
                $5205 = $5202 < -3.14159265358979;
                if (!($5205)) {
                 break;
                }
                $5206 = $5202 + 6.2831853071795898;
                HEAPF64[$268>>3] = $5206;
               }
              } while(0);
              HEAP8[$271>>0] = 1;
              $ij0266$01046 = 0;
              while(1) {
               $5207 = (($j0valid265) + ($ij0266$01046)|0);
               $5208 = HEAP8[$5207>>0]|0;
               $5209 = ($5208<<24>>24)==(0);
               do {
                if (!($5209)) {
                 $5210 = $ij0266$01046&255;
                 HEAP8[$0>>0] = $5210;
                 HEAP8[$1>>0] = -1;
                 $iij0267$01043 = (($ij0266$01046) + 1)|0;
                 $5211 = ($iij0267$01043|0)<(2);
                 do {
                  if ($5211) {
                   $5212 = (($sj0array264) + ($ij0266$01046<<3)|0);
                   $5213 = (($j0valid265) + ($iij0267$01043)|0);
                   $5214 = HEAP8[$5213>>0]|0;
                   $5215 = ($5214<<24>>24)==(0);
                   if ($5215) {
                    break;
                   }
                   $5216 = (($cj0array263) + ($ij0266$01046<<3)|0);
                   $5217 = +HEAPF64[$5216>>3];
                   $5218 = (($cj0array263) + ($iij0267$01043<<3)|0);
                   $5219 = +HEAPF64[$5218>>3];
                   $5220 = $5217 - $5219;
                   $5221 = (+__Z5IKabsd($5220));
                   $5222 = $5221 < 9.9999999999999995E-7;
                   if (!($5222)) {
                    break;
                   }
                   $5223 = +HEAPF64[$5212>>3];
                   $5224 = (($sj0array264) + ($iij0267$01043<<3)|0);
                   $5225 = +HEAPF64[$5224>>3];
                   $5226 = $5223 - $5225;
                   $5227 = (+__Z5IKabsd($5226));
                   $5228 = $5227 < 9.9999999999999995E-7;
                   if (!($5228)) {
                    break;
                   }
                   HEAP8[$5213>>0] = 0;
                   $5229 = $iij0267$01043&255;
                   HEAP8[$1>>0] = $5229;
                  }
                 } while(0);
                 $5230 = (($j0array262) + ($ij0266$01046<<3)|0);
                 $5231 = +HEAPF64[$5230>>3];
                 HEAPF64[$this>>3] = $5231;
                 $5232 = (($cj0array263) + ($ij0266$01046<<3)|0);
                 $5233 = +HEAPF64[$5232>>3];
                 HEAPF64[$272>>3] = $5233;
                 $5234 = (($sj0array264) + ($ij0266$01046<<3)|0);
                 $5235 = +HEAPF64[$5234>>3];
                 HEAPF64[$273>>3] = $5235;
                 $5236 = +HEAPF64[$this>>3];
                 $5237 = (+__Z5IKcosd($5236));
                 $5238 = (+__Z5IKsind($5236));
                 $5239 = +HEAPF64[$43>>3];
                 $5240 = +HEAPF64[$23>>3];
                 $5241 = $5238 * $5240;
                 $5242 = +HEAPF64[$45>>3];
                 $5243 = $5237 * $5242;
                 $5244 = $5238 * $5242;
                 $5245 = $5237 * $5239;
                 $5246 = -$5245;
                 $5247 = $5246 - $5244;
                 $5248 = +HEAPF64[$24>>3];
                 $5249 = -$5248;
                 $5250 = $5243 * $5249;
                 $5251 = $5239 * $5248;
                 $5252 = $5238 * $5251;
                 $5253 = $5250 + $5252;
                 $5254 = $5237 * $5240;
                 $5255 = $5239 * $5254;
                 $5256 = $5253 - $5255;
                 $5257 = $5242 * $5241;
                 $5258 = $5256 - $5257;
                 $5259 = (+__Z5IKabsd($5247));
                 $5260 = $5259 > 5.0000000000000004E-6;
                 if ($5260) {
                  break;
                 }
                 $5261 = $5237 * $5249;
                 $5262 = $5239 * $5261;
                 $5263 = $5239 * $5241;
                 $5264 = $5262 - $5263;
                 $5265 = $5244 * $5249;
                 $5266 = $5265 + $5264;
                 $5267 = $5240 * $5243;
                 $5268 = $5267 + $5266;
                 $5269 = (+__Z5IKabsd($5268));
                 $5270 = $5269 > 5.0000000000000004E-6;
                 if ($5270) {
                  break;
                 }
                 $5271 = (+__Z5IKabsd($5258));
                 $5272 = $5271 > 5.0000000000000004E-6;
                 if ($5272) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $5273 = (($ij0266$01046) + 1)|0;
               $exitcond1421 = ($5273|0)==(2);
               if ($exitcond1421) {
                break L484;
               } else {
                $ij0266$01046 = $5273;
               }
              }
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $4970 = +HEAPF64[$43>>3];
             $4971 = +HEAPF64[$23>>3];
             $4972 = +HEAPF64[$45>>3];
             $4973 = $4971 * $4972;
             $4974 = +HEAPF64[$24>>3];
             $4975 = $4970 * $4974;
             $4976 = $4973 - $4975;
             $4977 = (+__Z5IKabsd($4976));
             $4978 = $4970 * $4971;
             $4979 = $4972 * $4974;
             $4980 = -$4979;
             $4981 = $4980 - $4978;
             $4982 = (+__Z5IKabsd($4981));
             $4983 = $4977 + $4982;
             $4984 = (+__Z5IKabsd($4983));
             $4985 = $4984 < 9.9999999999999995E-7;
             if (!($4985)) {
              HEAP16[$j0valid258>>1] = 0;
              HEAP8[$2>>0] = 2;
              $5093 = +HEAPF64[$43>>3];
              $5094 = +HEAPF64[$24>>3];
              $5095 = $5093 * $5094;
              $5096 = +HEAPF64[$23>>3];
              $5097 = +HEAPF64[$45>>3];
              $5098 = $5096 * $5097;
              $5099 = $5098 - $5095;
              $5100 = $5094 * $5097;
              $5101 = $5093 * $5096;
              $5102 = -$5101;
              $5103 = $5102 - $5100;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x774,$5099,$5103,1.9999999999999999E-6);
              $5104 = HEAP8[$260>>0]|0;
              $5105 = ($5104<<24>>24)==(0);
              if ($5105) {
               break L484;
              }
              $5106 = +HEAPF64[$x774>>3];
              $5107 = -$5106;
              HEAPF64[$j0array255>>3] = $5107;
              $5108 = (+__Z5IKsind($5107));
              HEAPF64[$sj0array257>>3] = $5108;
              $5109 = (+__Z5IKcosd($5107));
              HEAPF64[$cj0array256>>3] = $5109;
              $5110 = 3.14159265358979 - $5106;
              HEAPF64[$261>>3] = $5110;
              $5111 = (+__Z5IKsind($5110));
              HEAPF64[$262>>3] = $5111;
              $5112 = +HEAPF64[$261>>3];
              $5113 = (+__Z5IKcosd($5112));
              HEAPF64[$263>>3] = $5113;
              $5114 = +HEAPF64[$j0array255>>3];
              $5115 = $5114 > 3.14159265358979;
              do {
               if ($5115) {
                $5116 = $5114 + -6.2831853071795898;
                HEAPF64[$j0array255>>3] = $5116;
               } else {
                $5117 = $5114 < -3.14159265358979;
                if (!($5117)) {
                 break;
                }
                $5118 = $5114 + 6.2831853071795898;
                HEAPF64[$j0array255>>3] = $5118;
               }
              } while(0);
              HEAP8[$j0valid258>>0] = 1;
              $5119 = +HEAPF64[$261>>3];
              $5120 = $5119 > 3.14159265358979;
              do {
               if ($5120) {
                $5121 = $5119 + -6.2831853071795898;
                HEAPF64[$261>>3] = $5121;
               } else {
                $5122 = $5119 < -3.14159265358979;
                if (!($5122)) {
                 break;
                }
                $5123 = $5119 + 6.2831853071795898;
                HEAPF64[$261>>3] = $5123;
               }
              } while(0);
              HEAP8[$264>>0] = 1;
              $ij0259$01050 = 0;
              while(1) {
               $5124 = (($j0valid258) + ($ij0259$01050)|0);
               $5125 = HEAP8[$5124>>0]|0;
               $5126 = ($5125<<24>>24)==(0);
               do {
                if (!($5126)) {
                 $5127 = $ij0259$01050&255;
                 HEAP8[$0>>0] = $5127;
                 HEAP8[$1>>0] = -1;
                 $iij0260$01047 = (($ij0259$01050) + 1)|0;
                 $5128 = ($iij0260$01047|0)<(2);
                 do {
                  if ($5128) {
                   $5129 = (($sj0array257) + ($ij0259$01050<<3)|0);
                   $5130 = (($j0valid258) + ($iij0260$01047)|0);
                   $5131 = HEAP8[$5130>>0]|0;
                   $5132 = ($5131<<24>>24)==(0);
                   if ($5132) {
                    break;
                   }
                   $5133 = (($cj0array256) + ($ij0259$01050<<3)|0);
                   $5134 = +HEAPF64[$5133>>3];
                   $5135 = (($cj0array256) + ($iij0260$01047<<3)|0);
                   $5136 = +HEAPF64[$5135>>3];
                   $5137 = $5134 - $5136;
                   $5138 = (+__Z5IKabsd($5137));
                   $5139 = $5138 < 9.9999999999999995E-7;
                   if (!($5139)) {
                    break;
                   }
                   $5140 = +HEAPF64[$5129>>3];
                   $5141 = (($sj0array257) + ($iij0260$01047<<3)|0);
                   $5142 = +HEAPF64[$5141>>3];
                   $5143 = $5140 - $5142;
                   $5144 = (+__Z5IKabsd($5143));
                   $5145 = $5144 < 9.9999999999999995E-7;
                   if (!($5145)) {
                    break;
                   }
                   HEAP8[$5130>>0] = 0;
                   $5146 = $iij0260$01047&255;
                   HEAP8[$1>>0] = $5146;
                  }
                 } while(0);
                 $5147 = (($j0array255) + ($ij0259$01050<<3)|0);
                 $5148 = +HEAPF64[$5147>>3];
                 HEAPF64[$this>>3] = $5148;
                 $5149 = (($cj0array256) + ($ij0259$01050<<3)|0);
                 $5150 = +HEAPF64[$5149>>3];
                 HEAPF64[$265>>3] = $5150;
                 $5151 = (($sj0array257) + ($ij0259$01050<<3)|0);
                 $5152 = +HEAPF64[$5151>>3];
                 HEAPF64[$266>>3] = $5152;
                 $5153 = +HEAPF64[$this>>3];
                 $5154 = (+__Z5IKcosd($5153));
                 $5155 = (+__Z5IKsind($5153));
                 $5156 = +HEAPF64[$43>>3];
                 $5157 = $5155 * $5156;
                 $5158 = +HEAPF64[$45>>3];
                 $5159 = $5155 * $5158;
                 $5160 = $5154 * $5158;
                 $5161 = $5160 - $5157;
                 $5162 = +HEAPF64[$24>>3];
                 $5163 = $5158 * $5162;
                 $5164 = $5154 * $5163;
                 $5165 = +HEAPF64[$23>>3];
                 $5166 = -$5165;
                 $5167 = $5156 * $5166;
                 $5168 = $5154 * $5167;
                 $5169 = $5168 - $5164;
                 $5170 = $5157 * $5162;
                 $5171 = $5170 + $5169;
                 $5172 = $5159 * $5166;
                 $5173 = $5172 + $5171;
                 $5174 = (+__Z5IKabsd($5161));
                 $5175 = $5174 > 5.0000000000000004E-6;
                 if ($5175) {
                  break;
                 }
                 $5176 = $5154 * $5156;
                 $5177 = -$5159;
                 $5178 = $5177 - $5176;
                 $5179 = (+__Z5IKabsd($5178));
                 $5180 = $5179 > 5.0000000000000004E-6;
                 if ($5180) {
                  break;
                 }
                 $5181 = (+__Z5IKabsd($5173));
                 $5182 = $5181 > 5.0000000000000004E-6;
                 if ($5182) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $5183 = (($ij0259$01050) + 1)|0;
               $exitcond1422 = ($5183|0)==(2);
               if ($exitcond1422) {
                break L484;
               } else {
                $ij0259$01050 = $5183;
               }
              }
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $4986 = +HEAPF64[$45>>3];
             $4987 = +HEAPF64[$23>>3];
             $4988 = +HEAPF64[$43>>3];
             $4989 = $4987 * $4988;
             $4990 = +HEAPF64[$24>>3];
             $4991 = $4986 * $4990;
             $4992 = -$4991;
             $4993 = $4992 - $4989;
             $4994 = (+__Z5IKabsd($4993));
             $4995 = $4986 * $4987;
             $4996 = $4988 * $4990;
             $4997 = $4996 - $4995;
             $4998 = (+__Z5IKabsd($4997));
             $4999 = $4994 + $4998;
             $5000 = (+__Z5IKabsd($4999));
             $5001 = $5000 < 9.9999999999999995E-7;
             if ($5001) {
              break L484;
             }
             HEAP16[$j0valid251>>1] = 0;
             HEAP8[$2>>0] = 2;
             $5002 = +HEAPF64[$23>>3];
             $5003 = +HEAPF64[$43>>3];
             $5004 = $5002 * $5003;
             $5005 = +HEAPF64[$45>>3];
             $5006 = -$5005;
             $5007 = +HEAPF64[$24>>3];
             $5008 = $5007 * $5006;
             $5009 = $5008 - $5004;
             $5010 = $5002 * $5006;
             $5011 = $5003 * $5007;
             $5012 = $5010 + $5011;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x766,$5009,$5012,1.9999999999999999E-6);
             $5013 = HEAP8[$253>>0]|0;
             $5014 = ($5013<<24>>24)==(0);
             if ($5014) {
              break L484;
             }
             $5015 = +HEAPF64[$x766>>3];
             $5016 = -$5015;
             HEAPF64[$j0array248>>3] = $5016;
             $5017 = (+__Z5IKsind($5016));
             HEAPF64[$sj0array250>>3] = $5017;
             $5018 = (+__Z5IKcosd($5016));
             HEAPF64[$cj0array249>>3] = $5018;
             $5019 = 3.14159265358979 - $5015;
             HEAPF64[$254>>3] = $5019;
             $5020 = (+__Z5IKsind($5019));
             HEAPF64[$255>>3] = $5020;
             $5021 = +HEAPF64[$254>>3];
             $5022 = (+__Z5IKcosd($5021));
             HEAPF64[$256>>3] = $5022;
             $5023 = +HEAPF64[$j0array248>>3];
             $5024 = $5023 > 3.14159265358979;
             do {
              if ($5024) {
               $5025 = $5023 + -6.2831853071795898;
               HEAPF64[$j0array248>>3] = $5025;
              } else {
               $5026 = $5023 < -3.14159265358979;
               if (!($5026)) {
                break;
               }
               $5027 = $5023 + 6.2831853071795898;
               HEAPF64[$j0array248>>3] = $5027;
              }
             } while(0);
             HEAP8[$j0valid251>>0] = 1;
             $5028 = +HEAPF64[$254>>3];
             $5029 = $5028 > 3.14159265358979;
             do {
              if ($5029) {
               $5030 = $5028 + -6.2831853071795898;
               HEAPF64[$254>>3] = $5030;
              } else {
               $5031 = $5028 < -3.14159265358979;
               if (!($5031)) {
                break;
               }
               $5032 = $5028 + 6.2831853071795898;
               HEAPF64[$254>>3] = $5032;
              }
             } while(0);
             HEAP8[$257>>0] = 1;
             $ij0252$01054 = 0;
             while(1) {
              $5033 = (($j0valid251) + ($ij0252$01054)|0);
              $5034 = HEAP8[$5033>>0]|0;
              $5035 = ($5034<<24>>24)==(0);
              do {
               if (!($5035)) {
                $5036 = $ij0252$01054&255;
                HEAP8[$0>>0] = $5036;
                HEAP8[$1>>0] = -1;
                $iij0253$01051 = (($ij0252$01054) + 1)|0;
                $5037 = ($iij0253$01051|0)<(2);
                do {
                 if ($5037) {
                  $5038 = (($sj0array250) + ($ij0252$01054<<3)|0);
                  $5039 = (($j0valid251) + ($iij0253$01051)|0);
                  $5040 = HEAP8[$5039>>0]|0;
                  $5041 = ($5040<<24>>24)==(0);
                  if ($5041) {
                   break;
                  }
                  $5042 = (($cj0array249) + ($ij0252$01054<<3)|0);
                  $5043 = +HEAPF64[$5042>>3];
                  $5044 = (($cj0array249) + ($iij0253$01051<<3)|0);
                  $5045 = +HEAPF64[$5044>>3];
                  $5046 = $5043 - $5045;
                  $5047 = (+__Z5IKabsd($5046));
                  $5048 = $5047 < 9.9999999999999995E-7;
                  if (!($5048)) {
                   break;
                  }
                  $5049 = +HEAPF64[$5038>>3];
                  $5050 = (($sj0array250) + ($iij0253$01051<<3)|0);
                  $5051 = +HEAPF64[$5050>>3];
                  $5052 = $5049 - $5051;
                  $5053 = (+__Z5IKabsd($5052));
                  $5054 = $5053 < 9.9999999999999995E-7;
                  if (!($5054)) {
                   break;
                  }
                  HEAP8[$5039>>0] = 0;
                  $5055 = $iij0253$01051&255;
                  HEAP8[$1>>0] = $5055;
                 }
                } while(0);
                $5056 = (($j0array248) + ($ij0252$01054<<3)|0);
                $5057 = +HEAPF64[$5056>>3];
                HEAPF64[$this>>3] = $5057;
                $5058 = (($cj0array249) + ($ij0252$01054<<3)|0);
                $5059 = +HEAPF64[$5058>>3];
                HEAPF64[$258>>3] = $5059;
                $5060 = (($sj0array250) + ($ij0252$01054<<3)|0);
                $5061 = +HEAPF64[$5060>>3];
                HEAPF64[$259>>3] = $5061;
                $5062 = +HEAPF64[$this>>3];
                $5063 = (+__Z5IKcosd($5062));
                $5064 = (+__Z5IKsind($5062));
                $5065 = +HEAPF64[$43>>3];
                $5066 = +HEAPF64[$45>>3];
                $5067 = $5063 * $5066;
                $5068 = $5064 * $5066;
                $5069 = $5064 * $5065;
                $5070 = $5067 - $5069;
                $5071 = +HEAPF64[$24>>3];
                $5072 = -$5071;
                $5073 = $5068 * $5072;
                $5074 = +HEAPF64[$23>>3];
                $5075 = $5064 * $5074;
                $5076 = $5065 * $5075;
                $5077 = $5073 - $5076;
                $5078 = $5067 * $5074;
                $5079 = $5078 + $5077;
                $5080 = $5063 * $5072;
                $5081 = $5065 * $5080;
                $5082 = $5081 + $5079;
                $5083 = (+__Z5IKabsd($5070));
                $5084 = $5083 > 5.0000000000000004E-6;
                if ($5084) {
                 break;
                }
                $5085 = $5063 * $5065;
                $5086 = -$5068;
                $5087 = $5086 - $5085;
                $5088 = (+__Z5IKabsd($5087));
                $5089 = $5088 > 5.0000000000000004E-6;
                if ($5089) {
                 break;
                }
                $5090 = (+__Z5IKabsd($5082));
                $5091 = $5090 > 5.0000000000000004E-6;
                if ($5091) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $5092 = (($ij0252$01054) + 1)|0;
              $exitcond1423 = ($5092|0)==(2);
              if ($exitcond1423) {
               break L484;
              } else {
               $ij0252$01054 = $5092;
              }
             }
            }
           } while(0);
           $5274 = +HEAPF64[$60>>3];
           $5275 = +HEAPF64[$7>>3];
           $5276 = $5275 + -3.14159265358979;
           $5277 = (+__Z5IKabsd($5276));
           $5278 = $5277 + 3.14159265358979;
           $5279 = (+__Z6IKfmoddd($5278,6.2831853071795898));
           $5280 = $5279 + -3.14159265358979;
           $5281 = +HEAPF64[$47>>3];
           $5282 = 0.051499999999999997 - $5281;
           $5283 = -0.03113175 - $5274;
           $5284 = $5281 * 0.65600000000000003;
           $5285 = $5283 + $5284;
           $5286 = (+__Z5IKabsd($5280));
           $5287 = $5286 < 9.9999999999999995E-7;
           do {
            if ($5287) {
             $5288 = 0.0026522500000000001 - $5274;
             $5289 = (+__Z5IKabsd($5288));
             $5290 = $5289 < 9.9999999999999995E-7;
             if (!($5290)) {
              break;
             }
             $5291 = (+__Z5IKabsd($5282));
             $5292 = $5291 < 9.9999999999999995E-7;
             if (!($5292)) {
              break;
             }
             $5293 = (+__Z5IKabsd($5285));
             $5294 = $5293 < 9.9999999999999995E-7;
             if (!($5294)) {
              break;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = -1.0;
             HEAPF64[$7>>3] = 3.14159265358979;
             $5295 = +HEAPF64[$43>>3];
             $5296 = (+__Z5IKabsd($5295));
             $5297 = +HEAPF64[$45>>3];
             $5298 = (+__Z5IKabsd($5297));
             $5299 = $5296 + $5298;
             $5300 = (+__Z5IKabsd($5299));
             $5301 = $5300 < 9.9999999999999995E-7;
             if (!($5301)) {
              HEAP16[$j0valid290>>1] = 0;
              HEAP8[$2>>0] = 2;
              $5516 = +HEAPF64[$45>>3];
              $5517 = +HEAPF64[$43>>3];
              $5518 = -$5517;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x808,$5516,$5518,1.9999999999999999E-6);
              $5519 = HEAP8[$288>>0]|0;
              $5520 = ($5519<<24>>24)==(0);
              if ($5520) {
               break L484;
              }
              $5521 = +HEAPF64[$x808>>3];
              $5522 = -$5521;
              HEAPF64[$j0array287>>3] = $5522;
              $5523 = (+__Z5IKsind($5522));
              HEAPF64[$sj0array289>>3] = $5523;
              $5524 = (+__Z5IKcosd($5522));
              HEAPF64[$cj0array288>>3] = $5524;
              $5525 = 3.14159265358979 - $5521;
              HEAPF64[$289>>3] = $5525;
              $5526 = (+__Z5IKsind($5525));
              HEAPF64[$290>>3] = $5526;
              $5527 = +HEAPF64[$289>>3];
              $5528 = (+__Z5IKcosd($5527));
              HEAPF64[$291>>3] = $5528;
              $5529 = +HEAPF64[$j0array287>>3];
              $5530 = $5529 > 3.14159265358979;
              do {
               if ($5530) {
                $5531 = $5529 + -6.2831853071795898;
                HEAPF64[$j0array287>>3] = $5531;
               } else {
                $5532 = $5529 < -3.14159265358979;
                if (!($5532)) {
                 break;
                }
                $5533 = $5529 + 6.2831853071795898;
                HEAPF64[$j0array287>>3] = $5533;
               }
              } while(0);
              HEAP8[$j0valid290>>0] = 1;
              $5534 = +HEAPF64[$289>>3];
              $5535 = $5534 > 3.14159265358979;
              do {
               if ($5535) {
                $5536 = $5534 + -6.2831853071795898;
                HEAPF64[$289>>3] = $5536;
               } else {
                $5537 = $5534 < -3.14159265358979;
                if (!($5537)) {
                 break;
                }
                $5538 = $5534 + 6.2831853071795898;
                HEAPF64[$289>>3] = $5538;
               }
              } while(0);
              HEAP8[$292>>0] = 1;
              $ij0291$01034 = 0;
              while(1) {
               $5539 = (($j0valid290) + ($ij0291$01034)|0);
               $5540 = HEAP8[$5539>>0]|0;
               $5541 = ($5540<<24>>24)==(0);
               do {
                if (!($5541)) {
                 $5542 = $ij0291$01034&255;
                 HEAP8[$0>>0] = $5542;
                 HEAP8[$1>>0] = -1;
                 $iij0292$01031 = (($ij0291$01034) + 1)|0;
                 $5543 = ($iij0292$01031|0)<(2);
                 do {
                  if ($5543) {
                   $5544 = (($sj0array289) + ($ij0291$01034<<3)|0);
                   $5545 = (($j0valid290) + ($iij0292$01031)|0);
                   $5546 = HEAP8[$5545>>0]|0;
                   $5547 = ($5546<<24>>24)==(0);
                   if ($5547) {
                    break;
                   }
                   $5548 = (($cj0array288) + ($ij0291$01034<<3)|0);
                   $5549 = +HEAPF64[$5548>>3];
                   $5550 = (($cj0array288) + ($iij0292$01031<<3)|0);
                   $5551 = +HEAPF64[$5550>>3];
                   $5552 = $5549 - $5551;
                   $5553 = (+__Z5IKabsd($5552));
                   $5554 = $5553 < 9.9999999999999995E-7;
                   if (!($5554)) {
                    break;
                   }
                   $5555 = +HEAPF64[$5544>>3];
                   $5556 = (($sj0array289) + ($iij0292$01031<<3)|0);
                   $5557 = +HEAPF64[$5556>>3];
                   $5558 = $5555 - $5557;
                   $5559 = (+__Z5IKabsd($5558));
                   $5560 = $5559 < 9.9999999999999995E-7;
                   if (!($5560)) {
                    break;
                   }
                   HEAP8[$5545>>0] = 0;
                   $5561 = $iij0292$01031&255;
                   HEAP8[$1>>0] = $5561;
                  }
                 } while(0);
                 $5562 = (($j0array287) + ($ij0291$01034<<3)|0);
                 $5563 = +HEAPF64[$5562>>3];
                 HEAPF64[$this>>3] = $5563;
                 $5564 = (($cj0array288) + ($ij0291$01034<<3)|0);
                 $5565 = +HEAPF64[$5564>>3];
                 HEAPF64[$293>>3] = $5565;
                 $5566 = (($sj0array289) + ($ij0291$01034<<3)|0);
                 $5567 = +HEAPF64[$5566>>3];
                 HEAPF64[$294>>3] = $5567;
                 $5568 = +HEAPF64[$this>>3];
                 $5569 = (+__Z5IKcosd($5568));
                 $5570 = (+__Z5IKsind($5568));
                 $5571 = +HEAPF64[$43>>3];
                 $5572 = +HEAPF64[$23>>3];
                 $5573 = $5570 * $5572;
                 $5574 = +HEAPF64[$45>>3];
                 $5575 = $5569 * $5574;
                 $5576 = $5570 * $5574;
                 $5577 = $5569 * $5571;
                 $5578 = -$5576;
                 $5579 = $5578 - $5577;
                 $5580 = +HEAPF64[$24>>3];
                 $5581 = -$5580;
                 $5582 = $5569 * $5572;
                 $5583 = $5571 * $5582;
                 $5584 = $5575 * $5581;
                 $5585 = $5584 - $5583;
                 $5586 = $5571 * $5580;
                 $5587 = $5570 * $5586;
                 $5588 = $5585 + $5587;
                 $5589 = $5574 * $5573;
                 $5590 = $5588 - $5589;
                 $5591 = (+__Z5IKabsd($5579));
                 $5592 = $5591 > 5.0000000000000004E-6;
                 if ($5592) {
                  break;
                 }
                 $5593 = $5569 * $5581;
                 $5594 = $5571 * $5593;
                 $5595 = $5571 * $5573;
                 $5596 = $5594 - $5595;
                 $5597 = $5576 * $5581;
                 $5598 = $5597 + $5596;
                 $5599 = $5572 * $5575;
                 $5600 = $5599 + $5598;
                 $5601 = (+__Z5IKabsd($5600));
                 $5602 = $5601 > 5.0000000000000004E-6;
                 if ($5602) {
                  break;
                 }
                 $5603 = (+__Z5IKabsd($5590));
                 $5604 = $5603 > 5.0000000000000004E-6;
                 if ($5604) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $5605 = (($ij0291$01034) + 1)|0;
               $exitcond1418 = ($5605|0)==(2);
               if ($exitcond1418) {
                break L484;
               } else {
                $ij0291$01034 = $5605;
               }
              }
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = -1.0;
             HEAPF64[$7>>3] = 3.14159265358979;
             $5302 = +HEAPF64[$43>>3];
             $5303 = +HEAPF64[$23>>3];
             $5304 = $5302 * $5303;
             $5305 = +HEAPF64[$45>>3];
             $5306 = +HEAPF64[$24>>3];
             $5307 = $5305 * $5306;
             $5308 = -$5307;
             $5309 = $5308 - $5304;
             $5310 = (+__Z5IKabsd($5309));
             $5311 = $5303 * $5305;
             $5312 = $5302 * $5306;
             $5313 = $5311 - $5312;
             $5314 = (+__Z5IKabsd($5313));
             $5315 = $5310 + $5314;
             $5316 = (+__Z5IKabsd($5315));
             $5317 = $5316 < 9.9999999999999995E-7;
             if (!($5317)) {
              HEAP16[$j0valid283>>1] = 0;
              HEAP8[$2>>0] = 2;
              $5425 = +HEAPF64[$43>>3];
              $5426 = +HEAPF64[$23>>3];
              $5427 = +HEAPF64[$45>>3];
              $5428 = $5426 * $5427;
              $5429 = +HEAPF64[$24>>3];
              $5430 = $5425 * $5429;
              $5431 = $5428 - $5430;
              $5432 = $5425 * $5426;
              $5433 = $5427 * $5429;
              $5434 = -$5433;
              $5435 = $5434 - $5432;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x801,$5431,$5435,1.9999999999999999E-6);
              $5436 = HEAP8[$281>>0]|0;
              $5437 = ($5436<<24>>24)==(0);
              if ($5437) {
               break L484;
              }
              $5438 = +HEAPF64[$x801>>3];
              $5439 = -$5438;
              HEAPF64[$j0array280>>3] = $5439;
              $5440 = (+__Z5IKsind($5439));
              HEAPF64[$sj0array282>>3] = $5440;
              $5441 = (+__Z5IKcosd($5439));
              HEAPF64[$cj0array281>>3] = $5441;
              $5442 = 3.14159265358979 - $5438;
              HEAPF64[$282>>3] = $5442;
              $5443 = (+__Z5IKsind($5442));
              HEAPF64[$283>>3] = $5443;
              $5444 = +HEAPF64[$282>>3];
              $5445 = (+__Z5IKcosd($5444));
              HEAPF64[$284>>3] = $5445;
              $5446 = +HEAPF64[$j0array280>>3];
              $5447 = $5446 > 3.14159265358979;
              do {
               if ($5447) {
                $5448 = $5446 + -6.2831853071795898;
                HEAPF64[$j0array280>>3] = $5448;
               } else {
                $5449 = $5446 < -3.14159265358979;
                if (!($5449)) {
                 break;
                }
                $5450 = $5446 + 6.2831853071795898;
                HEAPF64[$j0array280>>3] = $5450;
               }
              } while(0);
              HEAP8[$j0valid283>>0] = 1;
              $5451 = +HEAPF64[$282>>3];
              $5452 = $5451 > 3.14159265358979;
              do {
               if ($5452) {
                $5453 = $5451 + -6.2831853071795898;
                HEAPF64[$282>>3] = $5453;
               } else {
                $5454 = $5451 < -3.14159265358979;
                if (!($5454)) {
                 break;
                }
                $5455 = $5451 + 6.2831853071795898;
                HEAPF64[$282>>3] = $5455;
               }
              } while(0);
              HEAP8[$285>>0] = 1;
              $ij0284$01038 = 0;
              while(1) {
               $5456 = (($j0valid283) + ($ij0284$01038)|0);
               $5457 = HEAP8[$5456>>0]|0;
               $5458 = ($5457<<24>>24)==(0);
               do {
                if (!($5458)) {
                 $5459 = $ij0284$01038&255;
                 HEAP8[$0>>0] = $5459;
                 HEAP8[$1>>0] = -1;
                 $iij0285$01035 = (($ij0284$01038) + 1)|0;
                 $5460 = ($iij0285$01035|0)<(2);
                 do {
                  if ($5460) {
                   $5461 = (($sj0array282) + ($ij0284$01038<<3)|0);
                   $5462 = (($j0valid283) + ($iij0285$01035)|0);
                   $5463 = HEAP8[$5462>>0]|0;
                   $5464 = ($5463<<24>>24)==(0);
                   if ($5464) {
                    break;
                   }
                   $5465 = (($cj0array281) + ($ij0284$01038<<3)|0);
                   $5466 = +HEAPF64[$5465>>3];
                   $5467 = (($cj0array281) + ($iij0285$01035<<3)|0);
                   $5468 = +HEAPF64[$5467>>3];
                   $5469 = $5466 - $5468;
                   $5470 = (+__Z5IKabsd($5469));
                   $5471 = $5470 < 9.9999999999999995E-7;
                   if (!($5471)) {
                    break;
                   }
                   $5472 = +HEAPF64[$5461>>3];
                   $5473 = (($sj0array282) + ($iij0285$01035<<3)|0);
                   $5474 = +HEAPF64[$5473>>3];
                   $5475 = $5472 - $5474;
                   $5476 = (+__Z5IKabsd($5475));
                   $5477 = $5476 < 9.9999999999999995E-7;
                   if (!($5477)) {
                    break;
                   }
                   HEAP8[$5462>>0] = 0;
                   $5478 = $iij0285$01035&255;
                   HEAP8[$1>>0] = $5478;
                  }
                 } while(0);
                 $5479 = (($j0array280) + ($ij0284$01038<<3)|0);
                 $5480 = +HEAPF64[$5479>>3];
                 HEAPF64[$this>>3] = $5480;
                 $5481 = (($cj0array281) + ($ij0284$01038<<3)|0);
                 $5482 = +HEAPF64[$5481>>3];
                 HEAPF64[$286>>3] = $5482;
                 $5483 = (($sj0array282) + ($ij0284$01038<<3)|0);
                 $5484 = +HEAPF64[$5483>>3];
                 HEAPF64[$287>>3] = $5484;
                 $5485 = +HEAPF64[$this>>3];
                 $5486 = (+__Z5IKcosd($5485));
                 $5487 = (+__Z5IKsind($5485));
                 $5488 = +HEAPF64[$43>>3];
                 $5489 = $5487 * $5488;
                 $5490 = +HEAPF64[$45>>3];
                 $5491 = $5487 * $5490;
                 $5492 = $5486 * $5490;
                 $5493 = $5492 - $5489;
                 $5494 = +HEAPF64[$24>>3];
                 $5495 = $5489 * $5494;
                 $5496 = $5490 * $5494;
                 $5497 = $5486 * $5496;
                 $5498 = $5495 - $5497;
                 $5499 = +HEAPF64[$23>>3];
                 $5500 = -$5499;
                 $5501 = $5491 * $5500;
                 $5502 = $5501 + $5498;
                 $5503 = $5488 * $5500;
                 $5504 = $5486 * $5503;
                 $5505 = $5504 + $5502;
                 $5506 = (+__Z5IKabsd($5493));
                 $5507 = $5506 > 5.0000000000000004E-6;
                 if ($5507) {
                  break;
                 }
                 $5508 = $5486 * $5488;
                 $5509 = -$5491;
                 $5510 = $5509 - $5508;
                 $5511 = (+__Z5IKabsd($5510));
                 $5512 = $5511 > 5.0000000000000004E-6;
                 if ($5512) {
                  break;
                 }
                 $5513 = (+__Z5IKabsd($5505));
                 $5514 = $5513 > 5.0000000000000004E-6;
                 if ($5514) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $5515 = (($ij0284$01038) + 1)|0;
               $exitcond1419 = ($5515|0)==(2);
               if ($exitcond1419) {
                break L484;
               } else {
                $ij0284$01038 = $5515;
               }
              }
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = -1.0;
             HEAPF64[$7>>3] = 3.14159265358979;
             $5318 = +HEAPF64[$45>>3];
             $5319 = +HEAPF64[$23>>3];
             $5320 = +HEAPF64[$43>>3];
             $5321 = $5319 * $5320;
             $5322 = +HEAPF64[$24>>3];
             $5323 = $5318 * $5322;
             $5324 = -$5323;
             $5325 = $5324 - $5321;
             $5326 = (+__Z5IKabsd($5325));
             $5327 = $5318 * $5319;
             $5328 = $5320 * $5322;
             $5329 = $5328 - $5327;
             $5330 = (+__Z5IKabsd($5329));
             $5331 = $5326 + $5330;
             $5332 = (+__Z5IKabsd($5331));
             $5333 = $5332 < 9.9999999999999995E-7;
             if ($5333) {
              break L484;
             }
             HEAP16[$j0valid276>>1] = 0;
             HEAP8[$2>>0] = 2;
             $5334 = +HEAPF64[$23>>3];
             $5335 = +HEAPF64[$43>>3];
             $5336 = $5334 * $5335;
             $5337 = +HEAPF64[$45>>3];
             $5338 = -$5337;
             $5339 = +HEAPF64[$24>>3];
             $5340 = $5339 * $5338;
             $5341 = $5340 - $5336;
             $5342 = $5335 * $5339;
             $5343 = $5334 * $5338;
             $5344 = $5343 + $5342;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x793,$5341,$5344,1.9999999999999999E-6);
             $5345 = HEAP8[$274>>0]|0;
             $5346 = ($5345<<24>>24)==(0);
             if ($5346) {
              break L484;
             }
             $5347 = +HEAPF64[$x793>>3];
             $5348 = -$5347;
             HEAPF64[$j0array273>>3] = $5348;
             $5349 = (+__Z5IKsind($5348));
             HEAPF64[$sj0array275>>3] = $5349;
             $5350 = (+__Z5IKcosd($5348));
             HEAPF64[$cj0array274>>3] = $5350;
             $5351 = 3.14159265358979 - $5347;
             HEAPF64[$275>>3] = $5351;
             $5352 = (+__Z5IKsind($5351));
             HEAPF64[$276>>3] = $5352;
             $5353 = +HEAPF64[$275>>3];
             $5354 = (+__Z5IKcosd($5353));
             HEAPF64[$277>>3] = $5354;
             $5355 = +HEAPF64[$j0array273>>3];
             $5356 = $5355 > 3.14159265358979;
             do {
              if ($5356) {
               $5357 = $5355 + -6.2831853071795898;
               HEAPF64[$j0array273>>3] = $5357;
              } else {
               $5358 = $5355 < -3.14159265358979;
               if (!($5358)) {
                break;
               }
               $5359 = $5355 + 6.2831853071795898;
               HEAPF64[$j0array273>>3] = $5359;
              }
             } while(0);
             HEAP8[$j0valid276>>0] = 1;
             $5360 = +HEAPF64[$275>>3];
             $5361 = $5360 > 3.14159265358979;
             do {
              if ($5361) {
               $5362 = $5360 + -6.2831853071795898;
               HEAPF64[$275>>3] = $5362;
              } else {
               $5363 = $5360 < -3.14159265358979;
               if (!($5363)) {
                break;
               }
               $5364 = $5360 + 6.2831853071795898;
               HEAPF64[$275>>3] = $5364;
              }
             } while(0);
             HEAP8[$278>>0] = 1;
             $ij0277$01042 = 0;
             while(1) {
              $5365 = (($j0valid276) + ($ij0277$01042)|0);
              $5366 = HEAP8[$5365>>0]|0;
              $5367 = ($5366<<24>>24)==(0);
              do {
               if (!($5367)) {
                $5368 = $ij0277$01042&255;
                HEAP8[$0>>0] = $5368;
                HEAP8[$1>>0] = -1;
                $iij0278$01039 = (($ij0277$01042) + 1)|0;
                $5369 = ($iij0278$01039|0)<(2);
                do {
                 if ($5369) {
                  $5370 = (($sj0array275) + ($ij0277$01042<<3)|0);
                  $5371 = (($j0valid276) + ($iij0278$01039)|0);
                  $5372 = HEAP8[$5371>>0]|0;
                  $5373 = ($5372<<24>>24)==(0);
                  if ($5373) {
                   break;
                  }
                  $5374 = (($cj0array274) + ($ij0277$01042<<3)|0);
                  $5375 = +HEAPF64[$5374>>3];
                  $5376 = (($cj0array274) + ($iij0278$01039<<3)|0);
                  $5377 = +HEAPF64[$5376>>3];
                  $5378 = $5375 - $5377;
                  $5379 = (+__Z5IKabsd($5378));
                  $5380 = $5379 < 9.9999999999999995E-7;
                  if (!($5380)) {
                   break;
                  }
                  $5381 = +HEAPF64[$5370>>3];
                  $5382 = (($sj0array275) + ($iij0278$01039<<3)|0);
                  $5383 = +HEAPF64[$5382>>3];
                  $5384 = $5381 - $5383;
                  $5385 = (+__Z5IKabsd($5384));
                  $5386 = $5385 < 9.9999999999999995E-7;
                  if (!($5386)) {
                   break;
                  }
                  HEAP8[$5371>>0] = 0;
                  $5387 = $iij0278$01039&255;
                  HEAP8[$1>>0] = $5387;
                 }
                } while(0);
                $5388 = (($j0array273) + ($ij0277$01042<<3)|0);
                $5389 = +HEAPF64[$5388>>3];
                HEAPF64[$this>>3] = $5389;
                $5390 = (($cj0array274) + ($ij0277$01042<<3)|0);
                $5391 = +HEAPF64[$5390>>3];
                HEAPF64[$279>>3] = $5391;
                $5392 = (($sj0array275) + ($ij0277$01042<<3)|0);
                $5393 = +HEAPF64[$5392>>3];
                HEAPF64[$280>>3] = $5393;
                $5394 = +HEAPF64[$this>>3];
                $5395 = (+__Z5IKcosd($5394));
                $5396 = (+__Z5IKsind($5394));
                $5397 = +HEAPF64[$43>>3];
                $5398 = +HEAPF64[$45>>3];
                $5399 = $5395 * $5398;
                $5400 = $5396 * $5398;
                $5401 = $5396 * $5397;
                $5402 = $5399 - $5401;
                $5403 = +HEAPF64[$23>>3];
                $5404 = $5396 * $5403;
                $5405 = $5397 * $5404;
                $5406 = +HEAPF64[$24>>3];
                $5407 = -$5406;
                $5408 = $5395 * $5407;
                $5409 = $5397 * $5408;
                $5410 = $5409 - $5405;
                $5411 = $5400 * $5407;
                $5412 = $5411 + $5410;
                $5413 = $5403 * $5399;
                $5414 = $5413 + $5412;
                $5415 = (+__Z5IKabsd($5402));
                $5416 = $5415 > 5.0000000000000004E-6;
                if ($5416) {
                 break;
                }
                $5417 = $5395 * $5397;
                $5418 = -$5400;
                $5419 = $5418 - $5417;
                $5420 = (+__Z5IKabsd($5419));
                $5421 = $5420 > 5.0000000000000004E-6;
                if ($5421) {
                 break;
                }
                $5422 = (+__Z5IKabsd($5414));
                $5423 = $5422 > 5.0000000000000004E-6;
                if ($5423) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $5424 = (($ij0277$01042) + 1)|0;
              $exitcond1420 = ($5424|0)==(2);
              if ($exitcond1420) {
               break L484;
              } else {
               $ij0277$01042 = $5424;
              }
             }
            }
           } while(0);
           $5606 = +HEAPF64[$60>>3];
           $5607 = +HEAPF64[$22>>3];
           $5608 = $5607 + -1.5707963267949001;
           $5609 = (+__Z5IKabsd($5608));
           $5610 = $5609 + 3.14159265358979;
           $5611 = (+__Z6IKfmoddd($5610,6.2831853071795898));
           $5612 = $5611 + -3.14159265358979;
           $5613 = -0.03113175 - $5606;
           $5614 = +HEAPF64[$47>>3];
           $5615 = $5614 * 0.65600000000000003;
           $5616 = $5613 + $5615;
           $5617 = (+__Z5IKabsd($5612));
           $5618 = $5617 < 9.9999999999999995E-7;
           do {
            if ($5618) {
             $5619 = +HEAPF64[$73>>3];
             $5620 = 0.18403625000000001 - $5606;
             $5621 = $5619 * 0.18138399999999999;
             $5622 = $5620 + $5621;
             $5623 = (+__Z5IKabsd($5622));
             $$not = !($5623 < 9.9999999999999995E-7);
             $$not405 = $4343 ^ 1;
             $brmerge = $$not | $$not405;
             if ($brmerge) {
              break;
             }
             $5624 = (+__Z5IKabsd($5616));
             $5625 = $5624 < 9.9999999999999995E-7;
             if (!($5625)) {
              break;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             $5626 = +HEAPF64[$47>>3];
             $5627 = $5626 * $5626;
             $5628 = +HEAPF64[$60>>3];
             $5629 = $5628 - $5627;
             $5630 = +HEAPF64[$74>>3];
             $5631 = (+__Z5IKabsd($5629));
             $5632 = $5631 < 9.9999999999999995E-7;
             do {
              if (!($5632)) {
               $5633 = $5627 * 2000.0;
               $5634 = $5628 * 2000.0;
               $5635 = $5634 - $5633;
               $5636 = (+__Z6IKsignd($5635));
               $5637 = (+__Z5IKabsd($5636));
               $5638 = $5637 < 9.9999999999999995E-7;
               if ($5638) {
                break;
               }
               $5639 = (+__Z5IKabsd(305809.0));
               $5640 = $5639 < 9.9999999999999995E-7;
               if ($5640) {
                break;
               }
               $5641 = (+__Z5IKabsd($5630));
               $5642 = $5641 < 9.9999999999999995E-7;
               if ($5642) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $5804 = +HEAPF64[$60>>3];
               $5805 = $5804 * 2000.0;
               $5806 = +HEAPF64[$47>>3];
               $5807 = $5806 * $5806;
               $5808 = $5807 * 2000.0;
               $5809 = $5805 - $5808;
               $5810 = (+__Z6IKsignd($5809));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x824,$5810,-1);
               $5811 = HEAP8[$309>>0]|0;
               $5812 = ($5811<<24>>24)==(0);
               if ($5812) {
                break L484;
               }
               $5813 = +HEAPF64[$43>>3];
               $5814 = $5813 * 553.0;
               $5815 = +HEAPF64[$74>>3];
               $5816 = $5814 * $5815;
               $5817 = +HEAPF64[$45>>3];
               $5818 = $5817 * -553.0;
               $5819 = $5815 * $5818;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x825,$5816,$5819,1.9999999999999999E-6);
               $5820 = HEAP8[$310>>0]|0;
               $5821 = ($5820<<24>>24)==(0);
               if ($5821) {
                break L484;
               }
               $5822 = +HEAPF64[$x824>>3];
               $5823 = $5822 * 1.5707963267949001;
               $5824 = $5823 + -1.5707963267949001;
               $5825 = +HEAPF64[$x825>>3];
               $5826 = $5825 + $5824;
               $5827 = (+__Z5IKsind($5826));
               $5828 = (+__Z5IKcosd($5826));
               $5829 = $5826 > 3.14159265358979;
               do {
                if ($5829) {
                 $5830 = $5826 + -6.2831853071795898;
                 $5833 = $5830;
                } else {
                 $5831 = $5826 < -3.14159265358979;
                 if (!($5831)) {
                  $5833 = $5826;
                  break;
                 }
                 $5832 = $5826 + 6.2831853071795898;
                 $5833 = $5832;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $5833;
               HEAPF64[$311>>3] = $5828;
               HEAPF64[$312>>3] = $5827;
               $5834 = +HEAPF64[$this>>3];
               $5835 = (+__Z5IKcosd($5834));
               $5836 = (+__Z5IKsind($5834));
               $5837 = +HEAPF64[$43>>3];
               $5838 = $5835 * $5837;
               $5839 = +HEAPF64[$45>>3];
               $5840 = $5836 * $5839;
               $5841 = -$5840;
               $5842 = $5841 - $5838;
               $5843 = (+__Z5IKabsd($5842));
               $5844 = $5843 > 5.0000000000000004E-6;
               if ($5844) {
                break L484;
               }
               $5845 = +HEAPF64[$74>>3];
               $5846 = $5835 * $5839;
               $5847 = $5836 * $5837;
               $5848 = $5846 - $5847;
               $5849 = $5845 * 0.27650000000000002;
               $5850 = $5848 + $5849;
               $5851 = (+__Z5IKabsd($5850));
               $5852 = $5851 > 5.0000000000000004E-6;
               if ($5852) {
                break L484;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L484;
              }
             } while(0);
             $5643 = +HEAPF64[$60>>3];
             $5644 = +HEAPF64[$7>>3];
             $5645 = (+__Z5IKabsd($5644));
             $5646 = $5645 + 3.14159265358979;
             $5647 = (+__Z6IKfmoddd($5646,6.2831853071795898));
             $5648 = $5647 + -3.14159265358979;
             $5649 = +HEAPF64[$47>>3];
             $5650 = 0.60450000000000004 - $5649;
             $5651 = -0.03113175 - $5643;
             $5652 = $5649 * 0.65600000000000003;
             $5653 = $5651 + $5652;
             $5654 = (+__Z5IKabsd($5648));
             $5655 = $5654 < 9.9999999999999995E-7;
             do {
              if ($5655) {
               $5656 = 0.36542025 - $5643;
               $5657 = (+__Z5IKabsd($5656));
               $5658 = $5657 < 9.9999999999999995E-7;
               if (!($5658)) {
                break;
               }
               $5659 = (+__Z5IKabsd($5650));
               $5660 = $5659 < 9.9999999999999995E-7;
               if (!($5660)) {
                break;
               }
               $5661 = (+__Z5IKabsd($5653));
               $5662 = $5661 < 9.9999999999999995E-7;
               if (!($5662)) {
                break;
               }
               HEAPF64[$216>>3] = 0.0;
               HEAPF64[$215>>3] = 1.0;
               HEAPF64[$3>>3] = 0.0;
               HEAPF64[$24>>3] = 1.0;
               HEAPF64[$23>>3] = 0.0;
               HEAPF64[$22>>3] = 1.5707963267949001;
               HEAPF64[$74>>3] = 0.0;
               HEAPF64[$73>>3] = 1.0;
               HEAPF64[$7>>3] = 0.0;
               $5663 = +HEAPF64[$43>>3];
               $5664 = (+__Z5IKabsd($5663));
               $5665 = +HEAPF64[$45>>3];
               $5666 = (+__Z5IKabsd($5665));
               $5667 = $5664 + $5666;
               $5668 = (+__Z5IKabsd($5667));
               $5669 = $5668 < 9.9999999999999995E-7;
               if ($5669) {
                break L484;
               }
               HEAP16[$j0valid302>>1] = 0;
               HEAP8[$2>>0] = 2;
               $5670 = +HEAPF64[$45>>3];
               $5671 = +HEAPF64[$43>>3];
               $5672 = -$5671;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x820,$5670,$5672,1.9999999999999999E-6);
               $5673 = HEAP8[$295>>0]|0;
               $5674 = ($5673<<24>>24)==(0);
               if ($5674) {
                break L484;
               }
               $5675 = +HEAPF64[$x820>>3];
               $5676 = -$5675;
               HEAPF64[$j0array299>>3] = $5676;
               $5677 = (+__Z5IKsind($5676));
               HEAPF64[$sj0array301>>3] = $5677;
               $5678 = (+__Z5IKcosd($5676));
               HEAPF64[$cj0array300>>3] = $5678;
               $5679 = 3.14159265358979 - $5675;
               HEAPF64[$296>>3] = $5679;
               $5680 = (+__Z5IKsind($5679));
               HEAPF64[$297>>3] = $5680;
               $5681 = +HEAPF64[$296>>3];
               $5682 = (+__Z5IKcosd($5681));
               HEAPF64[$298>>3] = $5682;
               $5683 = +HEAPF64[$j0array299>>3];
               $5684 = $5683 > 3.14159265358979;
               do {
                if ($5684) {
                 $5685 = $5683 + -6.2831853071795898;
                 HEAPF64[$j0array299>>3] = $5685;
                } else {
                 $5686 = $5683 < -3.14159265358979;
                 if (!($5686)) {
                  break;
                 }
                 $5687 = $5683 + 6.2831853071795898;
                 HEAPF64[$j0array299>>3] = $5687;
                }
               } while(0);
               HEAP8[$j0valid302>>0] = 1;
               $5688 = +HEAPF64[$296>>3];
               $5689 = $5688 > 3.14159265358979;
               do {
                if ($5689) {
                 $5690 = $5688 + -6.2831853071795898;
                 HEAPF64[$296>>3] = $5690;
                } else {
                 $5691 = $5688 < -3.14159265358979;
                 if (!($5691)) {
                  break;
                 }
                 $5692 = $5688 + 6.2831853071795898;
                 HEAPF64[$296>>3] = $5692;
                }
               } while(0);
               HEAP8[$299>>0] = 1;
               $5693 = HEAP8[$j0valid302>>0]|0;
               $5694 = ($5693<<24>>24)==(0);
               do {
                if (!($5694)) {
                 HEAP8[$0>>0] = 0;
                 HEAP8[$1>>0] = -1;
                 $5695 = HEAP8[$823>>0]|0;
                 $5696 = ($5695<<24>>24)==(0);
                 do {
                  if (!($5696)) {
                   $5697 = +HEAPF64[$cj0array300>>3];
                   $5698 = +HEAPF64[$824>>3];
                   $5699 = $5697 - $5698;
                   $5700 = (+__Z5IKabsd($5699));
                   $5701 = $5700 < 9.9999999999999995E-7;
                   if (!($5701)) {
                    break;
                   }
                   $5702 = +HEAPF64[$sj0array301>>3];
                   $5703 = +HEAPF64[$825>>3];
                   $5704 = $5702 - $5703;
                   $5705 = (+__Z5IKabsd($5704));
                   $5706 = $5705 < 9.9999999999999995E-7;
                   if (!($5706)) {
                    break;
                   }
                   HEAP8[$823>>0] = 0;
                   HEAP8[$1>>0] = 1;
                  }
                 } while(0);
                 $5707 = +HEAPF64[$j0array299>>3];
                 HEAPF64[$this>>3] = $5707;
                 $5708 = +HEAPF64[$cj0array300>>3];
                 HEAPF64[$300>>3] = $5708;
                 $5709 = +HEAPF64[$sj0array301>>3];
                 HEAPF64[$301>>3] = $5709;
                 $5710 = +HEAPF64[$45>>3];
                 $5711 = +HEAPF64[$this>>3];
                 $5712 = (+__Z5IKsind($5711));
                 $5713 = $5710 * $5712;
                 $5714 = +HEAPF64[$43>>3];
                 $5715 = (+__Z5IKcosd($5711));
                 $5716 = $5714 * $5715;
                 $5717 = -$5716;
                 $5718 = $5717 - $5713;
                 $5719 = (+__Z5IKabsd($5718));
                 $5720 = $5719 > 5.0000000000000004E-6;
                 if ($5720) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $5721 = HEAP8[$819>>0]|0;
               $5722 = ($5721<<24>>24)==(0);
               if ($5722) {
                break L484;
               }
               HEAP8[$0>>0] = 1;
               HEAP8[$1>>0] = -1;
               $12034 = +HEAPF64[$820>>3];
               HEAPF64[$this>>3] = $12034;
               $12035 = +HEAPF64[$821>>3];
               HEAPF64[$300>>3] = $12035;
               $12036 = +HEAPF64[$822>>3];
               HEAPF64[$301>>3] = $12036;
               $12037 = +HEAPF64[$45>>3];
               $12038 = +HEAPF64[$this>>3];
               $12039 = (+__Z5IKsind($12038));
               $12040 = $12037 * $12039;
               $12041 = +HEAPF64[$43>>3];
               $12042 = (+__Z5IKcosd($12038));
               $12043 = $12041 * $12042;
               $12044 = -$12043;
               $12045 = $12044 - $12040;
               $12046 = (+__Z5IKabsd($12045));
               $12047 = $12046 > 5.0000000000000004E-6;
               if ($12047) {
                break L484;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L484;
              }
             } while(0);
             $5723 = +HEAPF64[$60>>3];
             $5724 = +HEAPF64[$7>>3];
             $5725 = $5724 + -3.14159265358979;
             $5726 = (+__Z5IKabsd($5725));
             $5727 = $5726 + 3.14159265358979;
             $5728 = (+__Z6IKfmoddd($5727,6.2831853071795898));
             $5729 = $5728 + -3.14159265358979;
             $5730 = +HEAPF64[$47>>3];
             $5731 = 0.051499999999999997 - $5730;
             $5732 = -0.03113175 - $5723;
             $5733 = $5730 * 0.65600000000000003;
             $5734 = $5732 + $5733;
             $5735 = (+__Z5IKabsd($5729));
             $5736 = $5735 < 9.9999999999999995E-7;
             if (!($5736)) {
              break L484;
             }
             $5737 = 0.0026522500000000001 - $5723;
             $5738 = (+__Z5IKabsd($5737));
             $5739 = $5738 < 9.9999999999999995E-7;
             if (!($5739)) {
              break L484;
             }
             $5740 = (+__Z5IKabsd($5731));
             $5741 = $5740 < 9.9999999999999995E-7;
             if (!($5741)) {
              break L484;
             }
             $5742 = (+__Z5IKabsd($5734));
             $5743 = $5742 < 9.9999999999999995E-7;
             if (!($5743)) {
              break L484;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = -1.0;
             HEAPF64[$7>>3] = 3.14159265358979;
             $5744 = +HEAPF64[$43>>3];
             $5745 = (+__Z5IKabsd($5744));
             $5746 = +HEAPF64[$45>>3];
             $5747 = (+__Z5IKabsd($5746));
             $5748 = $5745 + $5747;
             $5749 = (+__Z5IKabsd($5748));
             $5750 = $5749 < 9.9999999999999995E-7;
             if ($5750) {
              break L484;
             }
             HEAP16[$j0valid311>>1] = 0;
             HEAP8[$2>>0] = 2;
             $5751 = +HEAPF64[$45>>3];
             $5752 = +HEAPF64[$43>>3];
             $5753 = -$5752;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x823,$5751,$5753,1.9999999999999999E-6);
             $5754 = HEAP8[$302>>0]|0;
             $5755 = ($5754<<24>>24)==(0);
             if ($5755) {
              break L484;
             }
             $5756 = +HEAPF64[$x823>>3];
             $5757 = -$5756;
             HEAPF64[$j0array308>>3] = $5757;
             $5758 = (+__Z5IKsind($5757));
             HEAPF64[$sj0array310>>3] = $5758;
             $5759 = (+__Z5IKcosd($5757));
             HEAPF64[$cj0array309>>3] = $5759;
             $5760 = 3.14159265358979 - $5756;
             HEAPF64[$303>>3] = $5760;
             $5761 = (+__Z5IKsind($5760));
             HEAPF64[$304>>3] = $5761;
             $5762 = +HEAPF64[$303>>3];
             $5763 = (+__Z5IKcosd($5762));
             HEAPF64[$305>>3] = $5763;
             $5764 = +HEAPF64[$j0array308>>3];
             $5765 = $5764 > 3.14159265358979;
             do {
              if ($5765) {
               $5766 = $5764 + -6.2831853071795898;
               HEAPF64[$j0array308>>3] = $5766;
              } else {
               $5767 = $5764 < -3.14159265358979;
               if (!($5767)) {
                break;
               }
               $5768 = $5764 + 6.2831853071795898;
               HEAPF64[$j0array308>>3] = $5768;
              }
             } while(0);
             HEAP8[$j0valid311>>0] = 1;
             $5769 = +HEAPF64[$303>>3];
             $5770 = $5769 > 3.14159265358979;
             do {
              if ($5770) {
               $5771 = $5769 + -6.2831853071795898;
               HEAPF64[$303>>3] = $5771;
              } else {
               $5772 = $5769 < -3.14159265358979;
               if (!($5772)) {
                break;
               }
               $5773 = $5769 + 6.2831853071795898;
               HEAPF64[$303>>3] = $5773;
              }
             } while(0);
             HEAP8[$306>>0] = 1;
             $5774 = HEAP8[$j0valid311>>0]|0;
             $5775 = ($5774<<24>>24)==(0);
             do {
              if (!($5775)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $5776 = HEAP8[$830>>0]|0;
               $5777 = ($5776<<24>>24)==(0);
               do {
                if (!($5777)) {
                 $5778 = +HEAPF64[$cj0array309>>3];
                 $5779 = +HEAPF64[$831>>3];
                 $5780 = $5778 - $5779;
                 $5781 = (+__Z5IKabsd($5780));
                 $5782 = $5781 < 9.9999999999999995E-7;
                 if (!($5782)) {
                  break;
                 }
                 $5783 = +HEAPF64[$sj0array310>>3];
                 $5784 = +HEAPF64[$832>>3];
                 $5785 = $5783 - $5784;
                 $5786 = (+__Z5IKabsd($5785));
                 $5787 = $5786 < 9.9999999999999995E-7;
                 if (!($5787)) {
                  break;
                 }
                 HEAP8[$830>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $5788 = +HEAPF64[$j0array308>>3];
               HEAPF64[$this>>3] = $5788;
               $5789 = +HEAPF64[$cj0array309>>3];
               HEAPF64[$307>>3] = $5789;
               $5790 = +HEAPF64[$sj0array310>>3];
               HEAPF64[$308>>3] = $5790;
               $5791 = +HEAPF64[$45>>3];
               $5792 = +HEAPF64[$this>>3];
               $5793 = (+__Z5IKsind($5792));
               $5794 = $5791 * $5793;
               $5795 = +HEAPF64[$43>>3];
               $5796 = (+__Z5IKcosd($5792));
               $5797 = $5795 * $5796;
               $5798 = -$5797;
               $5799 = $5798 - $5794;
               $5800 = (+__Z5IKabsd($5799));
               $5801 = $5800 > 5.0000000000000004E-6;
               if ($5801) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $5802 = HEAP8[$826>>0]|0;
             $5803 = ($5802<<24>>24)==(0);
             if ($5803) {
              break L484;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $12020 = +HEAPF64[$827>>3];
             HEAPF64[$this>>3] = $12020;
             $12021 = +HEAPF64[$828>>3];
             HEAPF64[$307>>3] = $12021;
             $12022 = +HEAPF64[$829>>3];
             HEAPF64[$308>>3] = $12022;
             $12023 = +HEAPF64[$45>>3];
             $12024 = +HEAPF64[$this>>3];
             $12025 = (+__Z5IKsind($12024));
             $12026 = $12023 * $12025;
             $12027 = +HEAPF64[$43>>3];
             $12028 = (+__Z5IKcosd($12024));
             $12029 = $12027 * $12028;
             $12030 = -$12029;
             $12031 = $12030 - $12026;
             $12032 = (+__Z5IKabsd($12031));
             $12033 = $12032 > 5.0000000000000004E-6;
             if ($12033) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $5853 = +HEAPF64[$60>>3];
           $5854 = +HEAPF64[$22>>3];
           $5855 = $5854 + 1.5707963267949001;
           $5856 = (+__Z5IKabsd($5855));
           $5857 = $5856 + 3.14159265358979;
           $5858 = (+__Z6IKfmoddd($5857,6.2831853071795898));
           $5859 = $5858 + -3.14159265358979;
           $5860 = -0.03113175 - $5853;
           $5861 = +HEAPF64[$47>>3];
           $5862 = $5861 * 0.65600000000000003;
           $5863 = $5860 + $5862;
           $5864 = (+__Z5IKabsd($5859));
           $5865 = $5864 < 9.9999999999999995E-7;
           if (!($5865)) {
            break L484;
           }
           $5866 = +HEAPF64[$73>>3];
           $5867 = 0.18403625000000001 - $5853;
           $5868 = $5866 * 0.18138399999999999;
           $5869 = $5867 + $5868;
           $5870 = (+__Z5IKabsd($5869));
           $$not406 = !($5870 < 9.9999999999999995E-7);
           $$not407 = $4343 ^ 1;
           $brmerge408 = $$not406 | $$not407;
           if ($brmerge408) {
            break L484;
           }
           $5871 = (+__Z5IKabsd($5863));
           $5872 = $5871 < 9.9999999999999995E-7;
           if (!($5872)) {
            break L484;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           $5873 = +HEAPF64[$47>>3];
           $5874 = $5873 * $5873;
           $5875 = +HEAPF64[$60>>3];
           $5876 = $5874 - $5875;
           $5877 = +HEAPF64[$74>>3];
           $5878 = (+__Z5IKabsd($5876));
           $5879 = $5878 < 9.9999999999999995E-7;
           do {
            if (!($5879)) {
             $5880 = $5874 * 2000.0;
             $5881 = $5875 * 2000.0;
             $5882 = $5880 - $5881;
             $5883 = (+__Z6IKsignd($5882));
             $5884 = (+__Z5IKabsd($5883));
             $5885 = $5884 < 9.9999999999999995E-7;
             if ($5885) {
              break;
             }
             $5886 = (+__Z5IKabsd(305809.0));
             $5887 = $5886 < 9.9999999999999995E-7;
             if ($5887) {
              break;
             }
             $5888 = (+__Z5IKabsd($5877));
             $5889 = $5888 < 9.9999999999999995E-7;
             if ($5889) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $6051 = +HEAPF64[$47>>3];
             $6052 = $6051 * $6051;
             $6053 = $6052 * 2000.0;
             $6054 = +HEAPF64[$60>>3];
             $6055 = $6054 * 2000.0;
             $6056 = $6053 - $6055;
             $6057 = (+__Z6IKsignd($6056));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x838,$6057,-1);
             $6058 = HEAP8[$327>>0]|0;
             $6059 = ($6058<<24>>24)==(0);
             if ($6059) {
              break L484;
             }
             $6060 = +HEAPF64[$43>>3];
             $6061 = $6060 * 553.0;
             $6062 = +HEAPF64[$74>>3];
             $6063 = $6061 * $6062;
             $6064 = +HEAPF64[$45>>3];
             $6065 = $6064 * -553.0;
             $6066 = $6062 * $6065;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x839,$6063,$6066,1.9999999999999999E-6);
             $6067 = HEAP8[$328>>0]|0;
             $6068 = ($6067<<24>>24)==(0);
             if ($6068) {
              break L484;
             }
             $6069 = +HEAPF64[$x838>>3];
             $6070 = $6069 * 1.5707963267949001;
             $6071 = $6070 + -1.5707963267949001;
             $6072 = +HEAPF64[$x839>>3];
             $6073 = $6072 + $6071;
             $6074 = (+__Z5IKsind($6073));
             $6075 = (+__Z5IKcosd($6073));
             $6076 = $6073 > 3.14159265358979;
             do {
              if ($6076) {
               $6077 = $6073 + -6.2831853071795898;
               $6080 = $6077;
              } else {
               $6078 = $6073 < -3.14159265358979;
               if (!($6078)) {
                $6080 = $6073;
                break;
               }
               $6079 = $6073 + 6.2831853071795898;
               $6080 = $6079;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $6080;
             HEAPF64[$329>>3] = $6075;
             HEAPF64[$330>>3] = $6074;
             $6081 = +HEAPF64[$this>>3];
             $6082 = (+__Z5IKcosd($6081));
             $6083 = (+__Z5IKsind($6081));
             $6084 = +HEAPF64[$43>>3];
             $6085 = $6082 * $6084;
             $6086 = +HEAPF64[$45>>3];
             $6087 = $6083 * $6086;
             $6088 = -$6087;
             $6089 = $6088 - $6085;
             $6090 = (+__Z5IKabsd($6089));
             $6091 = $6090 > 5.0000000000000004E-6;
             if ($6091) {
              break L484;
             }
             $6092 = +HEAPF64[$74>>3];
             $6093 = $6092 * -0.27650000000000002;
             $6094 = $6083 * $6084;
             $6095 = $6093 - $6094;
             $6096 = $6082 * $6086;
             $6097 = $6096 + $6095;
             $6098 = (+__Z5IKabsd($6097));
             $6099 = $6098 > 5.0000000000000004E-6;
             if ($6099) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $5890 = +HEAPF64[$60>>3];
           $5891 = +HEAPF64[$7>>3];
           $5892 = (+__Z5IKabsd($5891));
           $5893 = $5892 + 3.14159265358979;
           $5894 = (+__Z6IKfmoddd($5893,6.2831853071795898));
           $5895 = $5894 + -3.14159265358979;
           $5896 = +HEAPF64[$47>>3];
           $5897 = 0.60450000000000004 - $5896;
           $5898 = -0.03113175 - $5890;
           $5899 = $5896 * 0.65600000000000003;
           $5900 = $5898 + $5899;
           $5901 = (+__Z5IKabsd($5895));
           $5902 = $5901 < 9.9999999999999995E-7;
           do {
            if ($5902) {
             $5903 = 0.36542025 - $5890;
             $5904 = (+__Z5IKabsd($5903));
             $5905 = $5904 < 9.9999999999999995E-7;
             if (!($5905)) {
              break;
             }
             $5906 = (+__Z5IKabsd($5897));
             $5907 = $5906 < 9.9999999999999995E-7;
             if (!($5907)) {
              break;
             }
             $5908 = (+__Z5IKabsd($5900));
             $5909 = $5908 < 9.9999999999999995E-7;
             if (!($5909)) {
              break;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $5910 = +HEAPF64[$43>>3];
             $5911 = (+__Z5IKabsd($5910));
             $5912 = +HEAPF64[$45>>3];
             $5913 = (+__Z5IKabsd($5912));
             $5914 = $5911 + $5913;
             $5915 = (+__Z5IKabsd($5914));
             $5916 = $5915 < 9.9999999999999995E-7;
             if ($5916) {
              break L484;
             }
             HEAP16[$j0valid331>>1] = 0;
             HEAP8[$2>>0] = 2;
             $5917 = +HEAPF64[$45>>3];
             $5918 = +HEAPF64[$43>>3];
             $5919 = -$5918;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x834,$5917,$5919,1.9999999999999999E-6);
             $5920 = HEAP8[$313>>0]|0;
             $5921 = ($5920<<24>>24)==(0);
             if ($5921) {
              break L484;
             }
             $5922 = +HEAPF64[$x834>>3];
             $5923 = -$5922;
             HEAPF64[$j0array328>>3] = $5923;
             $5924 = (+__Z5IKsind($5923));
             HEAPF64[$sj0array330>>3] = $5924;
             $5925 = (+__Z5IKcosd($5923));
             HEAPF64[$cj0array329>>3] = $5925;
             $5926 = 3.14159265358979 - $5922;
             HEAPF64[$314>>3] = $5926;
             $5927 = (+__Z5IKsind($5926));
             HEAPF64[$315>>3] = $5927;
             $5928 = +HEAPF64[$314>>3];
             $5929 = (+__Z5IKcosd($5928));
             HEAPF64[$316>>3] = $5929;
             $5930 = +HEAPF64[$j0array328>>3];
             $5931 = $5930 > 3.14159265358979;
             do {
              if ($5931) {
               $5932 = $5930 + -6.2831853071795898;
               HEAPF64[$j0array328>>3] = $5932;
              } else {
               $5933 = $5930 < -3.14159265358979;
               if (!($5933)) {
                break;
               }
               $5934 = $5930 + 6.2831853071795898;
               HEAPF64[$j0array328>>3] = $5934;
              }
             } while(0);
             HEAP8[$j0valid331>>0] = 1;
             $5935 = +HEAPF64[$314>>3];
             $5936 = $5935 > 3.14159265358979;
             do {
              if ($5936) {
               $5937 = $5935 + -6.2831853071795898;
               HEAPF64[$314>>3] = $5937;
              } else {
               $5938 = $5935 < -3.14159265358979;
               if (!($5938)) {
                break;
               }
               $5939 = $5935 + 6.2831853071795898;
               HEAPF64[$314>>3] = $5939;
              }
             } while(0);
             HEAP8[$317>>0] = 1;
             $5940 = HEAP8[$j0valid331>>0]|0;
             $5941 = ($5940<<24>>24)==(0);
             do {
              if (!($5941)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $5942 = HEAP8[$837>>0]|0;
               $5943 = ($5942<<24>>24)==(0);
               do {
                if (!($5943)) {
                 $5944 = +HEAPF64[$cj0array329>>3];
                 $5945 = +HEAPF64[$838>>3];
                 $5946 = $5944 - $5945;
                 $5947 = (+__Z5IKabsd($5946));
                 $5948 = $5947 < 9.9999999999999995E-7;
                 if (!($5948)) {
                  break;
                 }
                 $5949 = +HEAPF64[$sj0array330>>3];
                 $5950 = +HEAPF64[$839>>3];
                 $5951 = $5949 - $5950;
                 $5952 = (+__Z5IKabsd($5951));
                 $5953 = $5952 < 9.9999999999999995E-7;
                 if (!($5953)) {
                  break;
                 }
                 HEAP8[$837>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $5954 = +HEAPF64[$j0array328>>3];
               HEAPF64[$this>>3] = $5954;
               $5955 = +HEAPF64[$cj0array329>>3];
               HEAPF64[$318>>3] = $5955;
               $5956 = +HEAPF64[$sj0array330>>3];
               HEAPF64[$319>>3] = $5956;
               $5957 = +HEAPF64[$45>>3];
               $5958 = +HEAPF64[$this>>3];
               $5959 = (+__Z5IKsind($5958));
               $5960 = $5957 * $5959;
               $5961 = +HEAPF64[$43>>3];
               $5962 = (+__Z5IKcosd($5958));
               $5963 = $5961 * $5962;
               $5964 = -$5963;
               $5965 = $5964 - $5960;
               $5966 = (+__Z5IKabsd($5965));
               $5967 = $5966 > 5.0000000000000004E-6;
               if ($5967) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $5968 = HEAP8[$833>>0]|0;
             $5969 = ($5968<<24>>24)==(0);
             if ($5969) {
              break L484;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $12062 = +HEAPF64[$834>>3];
             HEAPF64[$this>>3] = $12062;
             $12063 = +HEAPF64[$835>>3];
             HEAPF64[$318>>3] = $12063;
             $12064 = +HEAPF64[$836>>3];
             HEAPF64[$319>>3] = $12064;
             $12065 = +HEAPF64[$45>>3];
             $12066 = +HEAPF64[$this>>3];
             $12067 = (+__Z5IKsind($12066));
             $12068 = $12065 * $12067;
             $12069 = +HEAPF64[$43>>3];
             $12070 = (+__Z5IKcosd($12066));
             $12071 = $12069 * $12070;
             $12072 = -$12071;
             $12073 = $12072 - $12068;
             $12074 = (+__Z5IKabsd($12073));
             $12075 = $12074 > 5.0000000000000004E-6;
             if ($12075) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $5970 = +HEAPF64[$60>>3];
           $5971 = +HEAPF64[$7>>3];
           $5972 = $5971 + -3.14159265358979;
           $5973 = (+__Z5IKabsd($5972));
           $5974 = $5973 + 3.14159265358979;
           $5975 = (+__Z6IKfmoddd($5974,6.2831853071795898));
           $5976 = $5975 + -3.14159265358979;
           $5977 = +HEAPF64[$47>>3];
           $5978 = 0.051499999999999997 - $5977;
           $5979 = -0.03113175 - $5970;
           $5980 = $5977 * 0.65600000000000003;
           $5981 = $5979 + $5980;
           $5982 = (+__Z5IKabsd($5976));
           $5983 = $5982 < 9.9999999999999995E-7;
           if (!($5983)) {
            break L484;
           }
           $5984 = 0.0026522500000000001 - $5970;
           $5985 = (+__Z5IKabsd($5984));
           $5986 = $5985 < 9.9999999999999995E-7;
           if (!($5986)) {
            break L484;
           }
           $5987 = (+__Z5IKabsd($5978));
           $5988 = $5987 < 9.9999999999999995E-7;
           if (!($5988)) {
            break L484;
           }
           $5989 = (+__Z5IKabsd($5981));
           $5990 = $5989 < 9.9999999999999995E-7;
           if (!($5990)) {
            break L484;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = -1.0;
           HEAPF64[$7>>3] = 3.14159265358979;
           $5991 = +HEAPF64[$43>>3];
           $5992 = (+__Z5IKabsd($5991));
           $5993 = +HEAPF64[$45>>3];
           $5994 = (+__Z5IKabsd($5993));
           $5995 = $5992 + $5994;
           $5996 = (+__Z5IKabsd($5995));
           $5997 = $5996 < 9.9999999999999995E-7;
           if ($5997) {
            break L484;
           }
           HEAP16[$j0valid340>>1] = 0;
           HEAP8[$2>>0] = 2;
           $5998 = +HEAPF64[$45>>3];
           $5999 = +HEAPF64[$43>>3];
           $6000 = -$5999;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x837,$5998,$6000,1.9999999999999999E-6);
           $6001 = HEAP8[$320>>0]|0;
           $6002 = ($6001<<24>>24)==(0);
           if ($6002) {
            break L484;
           }
           $6003 = +HEAPF64[$x837>>3];
           $6004 = -$6003;
           HEAPF64[$j0array337>>3] = $6004;
           $6005 = (+__Z5IKsind($6004));
           HEAPF64[$sj0array339>>3] = $6005;
           $6006 = (+__Z5IKcosd($6004));
           HEAPF64[$cj0array338>>3] = $6006;
           $6007 = 3.14159265358979 - $6003;
           HEAPF64[$321>>3] = $6007;
           $6008 = (+__Z5IKsind($6007));
           HEAPF64[$322>>3] = $6008;
           $6009 = +HEAPF64[$321>>3];
           $6010 = (+__Z5IKcosd($6009));
           HEAPF64[$323>>3] = $6010;
           $6011 = +HEAPF64[$j0array337>>3];
           $6012 = $6011 > 3.14159265358979;
           do {
            if ($6012) {
             $6013 = $6011 + -6.2831853071795898;
             HEAPF64[$j0array337>>3] = $6013;
            } else {
             $6014 = $6011 < -3.14159265358979;
             if (!($6014)) {
              break;
             }
             $6015 = $6011 + 6.2831853071795898;
             HEAPF64[$j0array337>>3] = $6015;
            }
           } while(0);
           HEAP8[$j0valid340>>0] = 1;
           $6016 = +HEAPF64[$321>>3];
           $6017 = $6016 > 3.14159265358979;
           do {
            if ($6017) {
             $6018 = $6016 + -6.2831853071795898;
             HEAPF64[$321>>3] = $6018;
            } else {
             $6019 = $6016 < -3.14159265358979;
             if (!($6019)) {
              break;
             }
             $6020 = $6016 + 6.2831853071795898;
             HEAPF64[$321>>3] = $6020;
            }
           } while(0);
           HEAP8[$324>>0] = 1;
           $6021 = HEAP8[$j0valid340>>0]|0;
           $6022 = ($6021<<24>>24)==(0);
           do {
            if (!($6022)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $6023 = HEAP8[$844>>0]|0;
             $6024 = ($6023<<24>>24)==(0);
             do {
              if (!($6024)) {
               $6025 = +HEAPF64[$cj0array338>>3];
               $6026 = +HEAPF64[$845>>3];
               $6027 = $6025 - $6026;
               $6028 = (+__Z5IKabsd($6027));
               $6029 = $6028 < 9.9999999999999995E-7;
               if (!($6029)) {
                break;
               }
               $6030 = +HEAPF64[$sj0array339>>3];
               $6031 = +HEAPF64[$846>>3];
               $6032 = $6030 - $6031;
               $6033 = (+__Z5IKabsd($6032));
               $6034 = $6033 < 9.9999999999999995E-7;
               if (!($6034)) {
                break;
               }
               HEAP8[$844>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $6035 = +HEAPF64[$j0array337>>3];
             HEAPF64[$this>>3] = $6035;
             $6036 = +HEAPF64[$cj0array338>>3];
             HEAPF64[$325>>3] = $6036;
             $6037 = +HEAPF64[$sj0array339>>3];
             HEAPF64[$326>>3] = $6037;
             $6038 = +HEAPF64[$45>>3];
             $6039 = +HEAPF64[$this>>3];
             $6040 = (+__Z5IKsind($6039));
             $6041 = $6038 * $6040;
             $6042 = +HEAPF64[$43>>3];
             $6043 = (+__Z5IKcosd($6039));
             $6044 = $6042 * $6043;
             $6045 = -$6044;
             $6046 = $6045 - $6041;
             $6047 = (+__Z5IKabsd($6046));
             $6048 = $6047 > 5.0000000000000004E-6;
             if ($6048) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $6049 = HEAP8[$840>>0]|0;
           $6050 = ($6049<<24>>24)==(0);
           if ($6050) {
            break L484;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $12048 = +HEAPF64[$841>>3];
           HEAPF64[$this>>3] = $12048;
           $12049 = +HEAPF64[$842>>3];
           HEAPF64[$325>>3] = $12049;
           $12050 = +HEAPF64[$843>>3];
           HEAPF64[$326>>3] = $12050;
           $12051 = +HEAPF64[$45>>3];
           $12052 = +HEAPF64[$this>>3];
           $12053 = (+__Z5IKsind($12052));
           $12054 = $12051 * $12053;
           $12055 = +HEAPF64[$43>>3];
           $12056 = (+__Z5IKcosd($12052));
           $12057 = $12055 * $12056;
           $12058 = -$12057;
           $12059 = $12058 - $12054;
           $12060 = (+__Z5IKabsd($12059));
           $12061 = $12060 > 5.0000000000000004E-6;
           if ($12061) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         $6371 = +HEAPF64[$73>>3];
         $6372 = $6371 * 0.27650000000000002;
         $6373 = +HEAPF64[$60>>3];
         $6374 = +HEAPF64[$3>>3];
         $6375 = $6374 + -3.14159265358979;
         $6376 = (+__Z5IKabsd($6375));
         $6377 = $6376 + 3.14159265358979;
         $6378 = (+__Z6IKfmoddd($6377,6.2831853071795898));
         $6379 = $6378 + -3.14159265358979;
         $6380 = +HEAPF64[$47>>3];
         $6381 = -0.32800000000000001 - $6380;
         $6382 = $6381 - $6372;
         $6383 = $6380 + 0.32800000000000001;
         $6384 = $6372 + $6383;
         $6385 = $6380 * 0.65600000000000003;
         $6386 = -0.03113175 - $6385;
         $6387 = $6386 - $6373;
         $6388 = (+__Z5IKabsd($6379));
         $6389 = $6388 < 9.9999999999999995E-7;
         if (!($6389)) {
          break;
         }
         $6390 = $6371 * 0.18138399999999999;
         $6391 = $6390 + 0.18403625000000001;
         $6392 = $6391 - $6373;
         $6393 = (+__Z5IKabsd($6392));
         $6394 = $6393 < 9.9999999999999995E-7;
         if (!($6394)) {
          break;
         }
         $6395 = (+__Z5IKabsd($6382));
         $6396 = $6395 < 9.9999999999999995E-7;
         if (!($6396)) {
          break;
         }
         $6397 = (+__Z5IKabsd($6384));
         $6398 = $6397 < 9.9999999999999995E-7;
         if (!($6398)) {
          break;
         }
         $6399 = (+__Z5IKabsd($6387));
         $6400 = $6399 < 9.9999999999999995E-7;
         if (!($6400)) {
          break;
         }
         HEAPF64[$216>>3] = 0.0;
         HEAPF64[$215>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         $6401 = +HEAPF64[$47>>3];
         $6402 = $6401 * $6401;
         $6403 = +HEAPF64[$43>>3];
         $6404 = +HEAPF64[$74>>3];
         $6405 = $6403 * $6404;
         $6406 = +HEAPF64[$45>>3];
         $6407 = $6404 * $6406;
         $6408 = +HEAPF64[$60>>3];
         $6409 = $6408 - $6402;
         $6410 = +HEAPF64[$23>>3];
         $6411 = $6407 * $6410;
         $6412 = +HEAPF64[$24>>3];
         $6413 = $6405 * $6412;
         $6414 = $6411 + $6413;
         $6415 = (+__Z5IKabsd($6414));
         $6416 = $6405 * $6410;
         $6417 = $6407 * $6412;
         $6418 = $6416 - $6417;
         $6419 = (+__Z5IKabsd($6418));
         $6420 = $6415 + $6419;
         $6421 = (+__Z5IKabsd($6409));
         $6422 = $6421 < 9.9999999999999995E-7;
         do {
          if (!($6422)) {
           $6423 = $6402 * 2000.0;
           $6424 = $6408 * 2000.0;
           $6425 = $6424 - $6423;
           $6426 = (+__Z6IKsignd($6425));
           $6427 = (+__Z5IKabsd($6426));
           $6428 = $6427 < 9.9999999999999995E-7;
           if ($6428) {
            break;
           }
           $6429 = (+__Z5IKabsd($6420));
           $6430 = $6429 < 9.9999999999999995E-7;
           if ($6430) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $8349 = +HEAPF64[$74>>3];
           $8350 = $8349 * 553.0;
           $8351 = +HEAPF64[$23>>3];
           $8352 = +HEAPF64[$45>>3];
           $8353 = $8351 * $8352;
           $8354 = $8350 * $8353;
           $8355 = +HEAPF64[$43>>3];
           $8356 = +HEAPF64[$24>>3];
           $8357 = $8355 * $8356;
           $8358 = $8350 * $8357;
           $8359 = $8354 + $8358;
           $8360 = $8352 * $8356;
           $8361 = $8350 * $8360;
           $8362 = $8351 * $8355;
           $8363 = $8350 * $8362;
           $8364 = $8363 - $8361;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1033,$8359,$8364,1.9999999999999999E-6);
           $8365 = HEAP8[$465>>0]|0;
           $8366 = ($8365<<24>>24)==(0);
           if ($8366) {
            break L484;
           }
           $8367 = +HEAPF64[$60>>3];
           $8368 = $8367 * 2000.0;
           $8369 = +HEAPF64[$47>>3];
           $8370 = $8369 * $8369;
           $8371 = $8370 * 2000.0;
           $8372 = $8368 - $8371;
           $8373 = (+__Z6IKsignd($8372));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1034,$8373,-1);
           $8374 = HEAP8[$466>>0]|0;
           $8375 = ($8374<<24>>24)==(0);
           if ($8375) {
            break L484;
           }
           $8376 = +HEAPF64[$x1033>>3];
           $8377 = $8376 + -1.5707963267949001;
           $8378 = +HEAPF64[$x1034>>3];
           $8379 = $8378 * 1.5707963267949001;
           $8380 = $8377 + $8379;
           $8381 = (+__Z5IKsind($8380));
           $8382 = (+__Z5IKcosd($8380));
           $8383 = $8380 > 3.14159265358979;
           do {
            if ($8383) {
             $8384 = $8380 + -6.2831853071795898;
             $8387 = $8384;
            } else {
             $8385 = $8380 < -3.14159265358979;
             if (!($8385)) {
              $8387 = $8380;
              break;
             }
             $8386 = $8380 + 6.2831853071795898;
             $8387 = $8386;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $8387;
           HEAPF64[$467>>3] = $8382;
           HEAPF64[$468>>3] = $8381;
           $8388 = +HEAPF64[$this>>3];
           $8389 = (+__Z5IKcosd($8388));
           $8390 = (+__Z5IKsind($8388));
           $8391 = +HEAPF64[$43>>3];
           $8392 = +HEAPF64[$74>>3];
           $8393 = $8392 * 0.27650000000000002;
           $8394 = +HEAPF64[$24>>3];
           $8395 = $8391 * $8394;
           $8396 = +HEAPF64[$23>>3];
           $8397 = $8390 * $8396;
           $8398 = +HEAPF64[$45>>3];
           $8399 = $8389 * $8398;
           $8400 = $8390 * $8398;
           $8401 = $8390 * $8391;
           $8402 = $8399 - $8401;
           $8403 = $8394 * $8393;
           $8404 = $8403 + $8402;
           $8405 = $8394 * $8400;
           $8406 = $8396 * $8399;
           $8407 = $8405 + $8406;
           $8408 = $8391 * $8397;
           $8409 = $8407 - $8408;
           $8410 = $8389 * $8395;
           $8411 = $8410 + $8409;
           $8412 = $8390 * $8395;
           $8413 = $8412 - $8393;
           $8414 = $8394 * $8399;
           $8415 = $8413 - $8414;
           $8416 = $8398 * $8397;
           $8417 = $8416 + $8415;
           $8418 = $8391 * $8396;
           $8419 = $8389 * $8418;
           $8420 = $8419 + $8417;
           $8421 = (+__Z5IKabsd($8404));
           $8422 = $8421 > 5.0000000000000004E-6;
           if ($8422) {
            break L484;
           }
           $8423 = $8393 * $8396;
           $8424 = $8389 * $8391;
           $8425 = $8423 - $8424;
           $8426 = $8425 - $8400;
           $8427 = (+__Z5IKabsd($8426));
           $8428 = $8427 > 5.0000000000000004E-6;
           if ($8428) {
            break L484;
           }
           $8429 = (+__Z5IKabsd($8411));
           $8430 = $8429 > 5.0000000000000004E-6;
           if ($8430) {
            break L484;
           }
           $8431 = (+__Z5IKabsd($8420));
           $8432 = $8431 > 5.0000000000000004E-6;
           if ($8432) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         HEAPF64[$216>>3] = 0.0;
         HEAPF64[$215>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         $6431 = +HEAPF64[$23>>3];
         $6432 = $6431 * $6431;
         $6433 = +HEAPF64[$47>>3];
         $6434 = $6433 * $6433;
         $6435 = +HEAPF64[$43>>3];
         $6436 = +HEAPF64[$74>>3];
         $6437 = $6435 * $6436;
         $6438 = +HEAPF64[$24>>3];
         $6439 = $6431 * $6438;
         $6440 = +HEAPF64[$45>>3];
         $6441 = $6436 * $6440;
         $6442 = +HEAPF64[$60>>3];
         $6443 = $6431 * $6442;
         $6444 = $6431 * $6434;
         $6445 = $6443 - $6444;
         $6446 = $6444 * 2000.0;
         $6447 = $6443 * 2000.0;
         $6448 = $6447 - $6446;
         $6449 = (+__Z6IKsignd($6448));
         $6450 = (+__Z5IKabsd($6445));
         $6451 = $6450 < 9.9999999999999995E-7;
         do {
          if (!($6451)) {
           $6452 = $6437 * $6439;
           $6453 = $6432 * $6441;
           $6454 = $6452 + $6453;
           $6455 = (+__Z5IKabsd($6454));
           $6456 = $6432 * $6437;
           $6457 = $6439 * $6441;
           $6458 = $6456 - $6457;
           $6459 = (+__Z5IKabsd($6458));
           $6460 = $6455 + $6459;
           $6461 = (+__Z5IKabsd($6460));
           $6462 = $6461 < 9.9999999999999995E-7;
           if ($6462) {
            break;
           }
           $6463 = (+__Z5IKabsd($6449));
           $6464 = $6463 < 9.9999999999999995E-7;
           if ($6464) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $8263 = +HEAPF64[$23>>3];
           $8264 = $8263 * $8263;
           $8265 = $8263 * 2000.0;
           $8266 = +HEAPF64[$74>>3];
           $8267 = $8266 * 553.0;
           $8268 = $8264 * $8267;
           $8269 = $8263 * 553.0;
           $8270 = +HEAPF64[$24>>3];
           $8271 = $8269 * $8270;
           $8272 = $8266 * $8271;
           $8273 = +HEAPF64[$45>>3];
           $8274 = $8273 * $8268;
           $8275 = +HEAPF64[$43>>3];
           $8276 = $8275 * $8272;
           $8277 = $8274 + $8276;
           $8278 = $8273 * $8272;
           $8279 = $8268 * $8275;
           $8280 = $8279 - $8278;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1022,$8277,$8280,1.9999999999999999E-6);
           $8281 = HEAP8[$461>>0]|0;
           $8282 = ($8281<<24>>24)==(0);
           if ($8282) {
            break L484;
           }
           $8283 = +HEAPF64[$60>>3];
           $8284 = $8265 * $8283;
           $8285 = +HEAPF64[$47>>3];
           $8286 = $8285 * $8285;
           $8287 = $8265 * $8286;
           $8288 = $8284 - $8287;
           $8289 = (+__Z6IKsignd($8288));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1023,$8289,-1);
           $8290 = HEAP8[$462>>0]|0;
           $8291 = ($8290<<24>>24)==(0);
           if ($8291) {
            break L484;
           }
           $8292 = +HEAPF64[$x1022>>3];
           $8293 = $8292 + -1.5707963267949001;
           $8294 = +HEAPF64[$x1023>>3];
           $8295 = $8294 * 1.5707963267949001;
           $8296 = $8293 + $8295;
           $8297 = (+__Z5IKsind($8296));
           $8298 = (+__Z5IKcosd($8296));
           $8299 = $8296 > 3.14159265358979;
           do {
            if ($8299) {
             $8300 = $8296 + -6.2831853071795898;
             $8303 = $8300;
            } else {
             $8301 = $8296 < -3.14159265358979;
             if (!($8301)) {
              $8303 = $8296;
              break;
             }
             $8302 = $8296 + 6.2831853071795898;
             $8303 = $8302;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $8303;
           HEAPF64[$463>>3] = $8298;
           HEAPF64[$464>>3] = $8297;
           $8304 = +HEAPF64[$this>>3];
           $8305 = (+__Z5IKcosd($8304));
           $8306 = (+__Z5IKsind($8304));
           $8307 = +HEAPF64[$43>>3];
           $8308 = +HEAPF64[$74>>3];
           $8309 = $8308 * 0.27650000000000002;
           $8310 = +HEAPF64[$24>>3];
           $8311 = $8307 * $8310;
           $8312 = +HEAPF64[$23>>3];
           $8313 = $8306 * $8312;
           $8314 = +HEAPF64[$45>>3];
           $8315 = $8305 * $8314;
           $8316 = $8306 * $8314;
           $8317 = $8306 * $8307;
           $8318 = $8315 - $8317;
           $8319 = $8310 * $8309;
           $8320 = $8319 + $8318;
           $8321 = $8312 * $8315;
           $8322 = $8307 * $8313;
           $8323 = $8321 - $8322;
           $8324 = $8310 * $8316;
           $8325 = $8324 + $8323;
           $8326 = $8305 * $8311;
           $8327 = $8326 + $8325;
           $8328 = $8307 * $8312;
           $8329 = $8305 * $8328;
           $8330 = $8314 * $8313;
           $8331 = $8329 + $8330;
           $8332 = $8331 - $8309;
           $8333 = $8306 * $8311;
           $8334 = $8333 + $8332;
           $8335 = $8310 * $8315;
           $8336 = $8334 - $8335;
           $8337 = (+__Z5IKabsd($8320));
           $8338 = $8337 > 5.0000000000000004E-6;
           if ($8338) {
            break L484;
           }
           $8339 = $8309 * $8312;
           $8340 = $8339 - $8316;
           $8341 = $8305 * $8307;
           $8342 = $8340 - $8341;
           $8343 = (+__Z5IKabsd($8342));
           $8344 = $8343 > 5.0000000000000004E-6;
           if ($8344) {
            break L484;
           }
           $8345 = (+__Z5IKabsd($8327));
           $8346 = $8345 > 5.0000000000000004E-6;
           if ($8346) {
            break L484;
           }
           $8347 = (+__Z5IKabsd($8336));
           $8348 = $8347 > 5.0000000000000004E-6;
           if ($8348) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         HEAPF64[$216>>3] = 0.0;
         HEAPF64[$215>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         $6465 = +HEAPF64[$23>>3];
         $6466 = $6465 * $6465;
         $6467 = +HEAPF64[$47>>3];
         $6468 = $6467 * $6467;
         $6469 = +HEAPF64[$60>>3];
         $6470 = +HEAPF64[$24>>3];
         $6471 = $6469 * $6470;
         $6472 = +HEAPF64[$43>>3];
         $6473 = +HEAPF64[$74>>3];
         $6474 = $6472 * $6473;
         $6475 = $6465 * $6470;
         $6476 = +HEAPF64[$45>>3];
         $6477 = $6473 * $6476;
         $6478 = $6468 * $6470;
         $6479 = $6471 - $6478;
         $6480 = $6478 * 2000.0;
         $6481 = $6471 * 2000.0;
         $6482 = $6481 - $6480;
         $6483 = (+__Z6IKsignd($6482));
         $6484 = (+__Z5IKabsd($6479));
         $6485 = $6484 < 9.9999999999999995E-7;
         do {
          if (!($6485)) {
           $6486 = $6475 * $6474;
           $6487 = $6486 - $6477;
           $6488 = $6466 * $6477;
           $6489 = $6487 + $6488;
           $6490 = (+__Z5IKabsd($6489));
           $6491 = $6475 * $6477;
           $6492 = $6466 * $6474;
           $6493 = $6491 - $6492;
           $6494 = $6474 + $6493;
           $6495 = (+__Z5IKabsd($6494));
           $6496 = $6490 + $6495;
           $6497 = (+__Z5IKabsd($6496));
           $6498 = $6497 < 9.9999999999999995E-7;
           if ($6498) {
            break;
           }
           $6499 = (+__Z5IKabsd($6483));
           $6500 = $6499 < 9.9999999999999995E-7;
           if ($6500) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $8173 = +HEAPF64[$23>>3];
           $8174 = $8173 * $8173;
           $8175 = +HEAPF64[$74>>3];
           $8176 = $8175 * 553.0;
           $8177 = +HEAPF64[$24>>3];
           $8178 = $8173 * $8177;
           $8179 = $8177 * 2000.0;
           $8180 = +HEAPF64[$47>>3];
           $8181 = $8180 * $8180;
           $8182 = $8179 * $8181;
           $8183 = +HEAPF64[$60>>3];
           $8184 = $8179 * $8183;
           $8185 = $8184 - $8182;
           $8186 = (+__Z6IKsignd($8185));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1008,$8186,-1);
           $8187 = HEAP8[$457>>0]|0;
           $8188 = ($8187<<24>>24)==(0);
           if ($8188) {
            break L484;
           }
           $8189 = +HEAPF64[$43>>3];
           $8190 = $8176 * $8189;
           $8191 = +HEAPF64[$45>>3];
           $8192 = $8176 * $8191;
           $8193 = $8178 * $8192;
           $8194 = $8190 + $8193;
           $8195 = $8174 * $8189;
           $8196 = $8176 * $8195;
           $8197 = $8194 - $8196;
           $8198 = $8178 * $8190;
           $8199 = $8198 - $8192;
           $8200 = $8174 * $8191;
           $8201 = $8176 * $8200;
           $8202 = $8199 + $8201;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1009,$8197,$8202,1.9999999999999999E-6);
           $8203 = HEAP8[$458>>0]|0;
           $8204 = ($8203<<24>>24)==(0);
           if ($8204) {
            break L484;
           }
           $8205 = +HEAPF64[$x1008>>3];
           $8206 = $8205 * 1.5707963267949001;
           $8207 = $8206 + -1.5707963267949001;
           $8208 = +HEAPF64[$x1009>>3];
           $8209 = $8208 + $8207;
           $8210 = (+__Z5IKsind($8209));
           $8211 = (+__Z5IKcosd($8209));
           $8212 = $8209 > 3.14159265358979;
           do {
            if ($8212) {
             $8213 = $8209 + -6.2831853071795898;
             $8216 = $8213;
            } else {
             $8214 = $8209 < -3.14159265358979;
             if (!($8214)) {
              $8216 = $8209;
              break;
             }
             $8215 = $8209 + 6.2831853071795898;
             $8216 = $8215;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $8216;
           HEAPF64[$459>>3] = $8211;
           HEAPF64[$460>>3] = $8210;
           $8217 = +HEAPF64[$this>>3];
           $8218 = (+__Z5IKcosd($8217));
           $8219 = (+__Z5IKsind($8217));
           $8220 = +HEAPF64[$43>>3];
           $8221 = +HEAPF64[$74>>3];
           $8222 = $8221 * 0.27650000000000002;
           $8223 = +HEAPF64[$24>>3];
           $8224 = $8220 * $8223;
           $8225 = +HEAPF64[$23>>3];
           $8226 = $8219 * $8225;
           $8227 = +HEAPF64[$45>>3];
           $8228 = $8218 * $8227;
           $8229 = $8219 * $8227;
           $8230 = $8219 * $8220;
           $8231 = $8228 - $8230;
           $8232 = $8223 * $8222;
           $8233 = $8232 + $8231;
           $8234 = $8220 * $8226;
           $8235 = $8225 * $8228;
           $8236 = $8235 - $8234;
           $8237 = $8223 * $8229;
           $8238 = $8237 + $8236;
           $8239 = $8218 * $8224;
           $8240 = $8239 + $8238;
           $8241 = $8223 * $8228;
           $8242 = -$8222;
           $8243 = $8242 - $8241;
           $8244 = $8227 * $8226;
           $8245 = $8244 + $8243;
           $8246 = $8220 * $8225;
           $8247 = $8218 * $8246;
           $8248 = $8247 + $8245;
           $8249 = $8219 * $8224;
           $8250 = $8249 + $8248;
           $8251 = (+__Z5IKabsd($8233));
           $8252 = $8251 > 5.0000000000000004E-6;
           if ($8252) {
            break L484;
           }
           $8253 = $8222 * $8225;
           $8254 = $8218 * $8220;
           $8255 = $8253 - $8254;
           $8256 = $8255 - $8229;
           $8257 = (+__Z5IKabsd($8256));
           $8258 = $8257 > 5.0000000000000004E-6;
           if ($8258) {
            break L484;
           }
           $8259 = (+__Z5IKabsd($8240));
           $8260 = $8259 > 5.0000000000000004E-6;
           if ($8260) {
            break L484;
           }
           $8261 = (+__Z5IKabsd($8250));
           $8262 = $8261 > 5.0000000000000004E-6;
           if ($8262) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         $6501 = +HEAPF64[$73>>3];
         $6502 = $6501 * 0.27650000000000002;
         $6503 = +HEAPF64[$60>>3];
         $6504 = +HEAPF64[$22>>3];
         $6505 = (+__Z5IKabsd($6504));
         $6506 = $6505 + 3.14159265358979;
         $6507 = (+__Z6IKfmoddd($6506,6.2831853071795898));
         $6508 = $6507 + -3.14159265358979;
         $6509 = -0.32800000000000001 - $6502;
         $6510 = +HEAPF64[$47>>3];
         $6511 = $6509 - $6510;
         $6512 = $6510 + 0.32800000000000001;
         $6513 = $6502 + $6512;
         $6514 = -0.03113175 - $6503;
         $6515 = $6510 * 0.65600000000000003;
         $6516 = $6514 - $6515;
         $6517 = (+__Z5IKabsd($6508));
         $6518 = $6517 < 9.9999999999999995E-7;
         do {
          if ($6518) {
           $6519 = 0.18403625000000001 - $6503;
           $6520 = $6501 * 0.18138399999999999;
           $6521 = $6520 + $6519;
           $6522 = (+__Z5IKabsd($6521));
           $6523 = $6522 < 9.9999999999999995E-7;
           if (!($6523)) {
            break;
           }
           $6524 = (+__Z5IKabsd($6511));
           $6525 = $6524 < 9.9999999999999995E-7;
           if (!($6525)) {
            break;
           }
           $6526 = (+__Z5IKabsd($6513));
           $6527 = $6526 < 9.9999999999999995E-7;
           if (!($6527)) {
            break;
           }
           $6528 = (+__Z5IKabsd($6516));
           $6529 = $6528 < 9.9999999999999995E-7;
           if (!($6529)) {
            break;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           $6530 = +HEAPF64[$47>>3];
           $6531 = $6530 * $6530;
           $6532 = +HEAPF64[$60>>3];
           $6533 = $6532 - $6531;
           $6534 = +HEAPF64[$74>>3];
           $6535 = (+__Z5IKabsd($6533));
           $6536 = $6535 < 9.9999999999999995E-7;
           do {
            if (!($6536)) {
             $6537 = $6531 * 2000.0;
             $6538 = $6532 * 2000.0;
             $6539 = $6538 - $6537;
             $6540 = (+__Z6IKsignd($6539));
             $6541 = (+__Z5IKabsd($6540));
             $6542 = $6541 < 9.9999999999999995E-7;
             if ($6542) {
              break;
             }
             $6543 = (+__Z5IKabsd(305809.0));
             $6544 = $6543 < 9.9999999999999995E-7;
             if ($6544) {
              break;
             }
             $6545 = (+__Z5IKabsd($6534));
             $6546 = $6545 < 9.9999999999999995E-7;
             if ($6546) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $6708 = +HEAPF64[$74>>3];
             $6709 = $6708 * 553.0;
             $6710 = +HEAPF64[$45>>3];
             $6711 = $6710 * $6709;
             $6712 = +HEAPF64[$43>>3];
             $6713 = $6709 * $6712;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x908,$6711,$6713,1.9999999999999999E-6);
             $6714 = HEAP8[$357>>0]|0;
             $6715 = ($6714<<24>>24)==(0);
             if ($6715) {
              break L484;
             }
             $6716 = +HEAPF64[$60>>3];
             $6717 = $6716 * 2000.0;
             $6718 = +HEAPF64[$47>>3];
             $6719 = $6718 * $6718;
             $6720 = $6719 * 2000.0;
             $6721 = $6717 - $6720;
             $6722 = (+__Z6IKsignd($6721));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x909,$6722,-1);
             $6723 = HEAP8[$358>>0]|0;
             $6724 = ($6723<<24>>24)==(0);
             if ($6724) {
              break L484;
             }
             $6725 = +HEAPF64[$x908>>3];
             $6726 = $6725 + -1.5707963267949001;
             $6727 = +HEAPF64[$x909>>3];
             $6728 = $6727 * 1.5707963267949001;
             $6729 = $6726 + $6728;
             $6730 = (+__Z5IKsind($6729));
             $6731 = (+__Z5IKcosd($6729));
             $6732 = $6729 > 3.14159265358979;
             do {
              if ($6732) {
               $6733 = $6729 + -6.2831853071795898;
               $6736 = $6733;
              } else {
               $6734 = $6729 < -3.14159265358979;
               if (!($6734)) {
                $6736 = $6729;
                break;
               }
               $6735 = $6729 + 6.2831853071795898;
               $6736 = $6735;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $6736;
             HEAPF64[$359>>3] = $6731;
             HEAPF64[$360>>3] = $6730;
             $6737 = +HEAPF64[$this>>3];
             $6738 = (+__Z5IKcosd($6737));
             $6739 = (+__Z5IKsind($6737));
             $6740 = +HEAPF64[$43>>3];
             $6741 = -$6740;
             $6742 = $6739 * $6741;
             $6743 = +HEAPF64[$45>>3];
             $6744 = $6738 * $6743;
             $6745 = $6742 + $6744;
             $6746 = (+__Z5IKabsd($6745));
             $6747 = $6746 > 5.0000000000000004E-6;
             if ($6747) {
              break L484;
             }
             $6748 = +HEAPF64[$74>>3];
             $6749 = $6748 * 0.27650000000000002;
             $6750 = $6739 * $6743;
             $6751 = $6749 - $6750;
             $6752 = $6738 * $6741;
             $6753 = $6752 + $6751;
             $6754 = (+__Z5IKabsd($6753));
             $6755 = $6754 > 5.0000000000000004E-6;
             if ($6755) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $6547 = +HEAPF64[$60>>3];
           $6548 = +HEAPF64[$7>>3];
           $6549 = (+__Z5IKabsd($6548));
           $6550 = $6549 + 3.14159265358979;
           $6551 = (+__Z6IKfmoddd($6550,6.2831853071795898));
           $6552 = $6551 + -3.14159265358979;
           $6553 = +HEAPF64[$47>>3];
           $6554 = -0.60450000000000004 - $6553;
           $6555 = -0.03113175 - $6547;
           $6556 = $6553 * 0.65600000000000003;
           $6557 = $6555 - $6556;
           $6558 = (+__Z5IKabsd($6552));
           $6559 = $6558 < 9.9999999999999995E-7;
           do {
            if ($6559) {
             $6560 = 0.36542025 - $6547;
             $6561 = (+__Z5IKabsd($6560));
             $6562 = $6561 < 9.9999999999999995E-7;
             if (!($6562)) {
              break;
             }
             $6563 = (+__Z5IKabsd($6554));
             $6564 = $6563 < 9.9999999999999995E-7;
             if (!($6564)) {
              break;
             }
             $6565 = (+__Z5IKabsd($6557));
             $6566 = $6565 < 9.9999999999999995E-7;
             if (!($6566)) {
              break;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $6567 = +HEAPF64[$43>>3];
             $6568 = (+__Z5IKabsd($6567));
             $6569 = +HEAPF64[$45>>3];
             $6570 = (+__Z5IKabsd($6569));
             $6571 = $6568 + $6570;
             $6572 = (+__Z5IKabsd($6571));
             $6573 = $6572 < 9.9999999999999995E-7;
             if ($6573) {
              break L484;
             }
             HEAP16[$j0valid387>>1] = 0;
             HEAP8[$2>>0] = 2;
             $6574 = +HEAPF64[$45>>3];
             $6575 = +HEAPF64[$43>>3];
             $6576 = -$6575;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x903,$6574,$6576,1.9999999999999999E-6);
             $6577 = HEAP8[$343>>0]|0;
             $6578 = ($6577<<24>>24)==(0);
             if ($6578) {
              break L484;
             }
             $6579 = +HEAPF64[$x903>>3];
             $6580 = -$6579;
             HEAPF64[$j0array384>>3] = $6580;
             $6581 = (+__Z5IKsind($6580));
             HEAPF64[$sj0array386>>3] = $6581;
             $6582 = (+__Z5IKcosd($6580));
             HEAPF64[$cj0array385>>3] = $6582;
             $6583 = 3.14159265358979 - $6579;
             HEAPF64[$344>>3] = $6583;
             $6584 = (+__Z5IKsind($6583));
             HEAPF64[$345>>3] = $6584;
             $6585 = +HEAPF64[$344>>3];
             $6586 = (+__Z5IKcosd($6585));
             HEAPF64[$346>>3] = $6586;
             $6587 = +HEAPF64[$j0array384>>3];
             $6588 = $6587 > 3.14159265358979;
             do {
              if ($6588) {
               $6589 = $6587 + -6.2831853071795898;
               HEAPF64[$j0array384>>3] = $6589;
              } else {
               $6590 = $6587 < -3.14159265358979;
               if (!($6590)) {
                break;
               }
               $6591 = $6587 + 6.2831853071795898;
               HEAPF64[$j0array384>>3] = $6591;
              }
             } while(0);
             HEAP8[$j0valid387>>0] = 1;
             $6592 = +HEAPF64[$344>>3];
             $6593 = $6592 > 3.14159265358979;
             do {
              if ($6593) {
               $6594 = $6592 + -6.2831853071795898;
               HEAPF64[$344>>3] = $6594;
              } else {
               $6595 = $6592 < -3.14159265358979;
               if (!($6595)) {
                break;
               }
               $6596 = $6592 + 6.2831853071795898;
               HEAPF64[$344>>3] = $6596;
              }
             } while(0);
             HEAP8[$347>>0] = 1;
             $6597 = HEAP8[$j0valid387>>0]|0;
             $6598 = ($6597<<24>>24)==(0);
             do {
              if (!($6598)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $6599 = HEAP8[$851>>0]|0;
               $6600 = ($6599<<24>>24)==(0);
               do {
                if (!($6600)) {
                 $6601 = +HEAPF64[$cj0array385>>3];
                 $6602 = +HEAPF64[$852>>3];
                 $6603 = $6601 - $6602;
                 $6604 = (+__Z5IKabsd($6603));
                 $6605 = $6604 < 9.9999999999999995E-7;
                 if (!($6605)) {
                  break;
                 }
                 $6606 = +HEAPF64[$sj0array386>>3];
                 $6607 = +HEAPF64[$853>>3];
                 $6608 = $6606 - $6607;
                 $6609 = (+__Z5IKabsd($6608));
                 $6610 = $6609 < 9.9999999999999995E-7;
                 if (!($6610)) {
                  break;
                 }
                 HEAP8[$851>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $6611 = +HEAPF64[$j0array384>>3];
               HEAPF64[$this>>3] = $6611;
               $6612 = +HEAPF64[$cj0array385>>3];
               HEAPF64[$348>>3] = $6612;
               $6613 = +HEAPF64[$sj0array386>>3];
               HEAPF64[$349>>3] = $6613;
               $6614 = +HEAPF64[$45>>3];
               $6615 = +HEAPF64[$this>>3];
               $6616 = (+__Z5IKsind($6615));
               $6617 = $6614 * $6616;
               $6618 = +HEAPF64[$43>>3];
               $6619 = (+__Z5IKcosd($6615));
               $6620 = $6618 * $6619;
               $6621 = -$6620;
               $6622 = $6621 - $6617;
               $6623 = (+__Z5IKabsd($6622));
               $6624 = $6623 > 5.0000000000000004E-6;
               if ($6624) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $6625 = HEAP8[$847>>0]|0;
             $6626 = ($6625<<24>>24)==(0);
             if ($6626) {
              break L484;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $12006 = +HEAPF64[$848>>3];
             HEAPF64[$this>>3] = $12006;
             $12007 = +HEAPF64[$849>>3];
             HEAPF64[$348>>3] = $12007;
             $12008 = +HEAPF64[$850>>3];
             HEAPF64[$349>>3] = $12008;
             $12009 = +HEAPF64[$45>>3];
             $12010 = +HEAPF64[$this>>3];
             $12011 = (+__Z5IKsind($12010));
             $12012 = $12009 * $12011;
             $12013 = +HEAPF64[$43>>3];
             $12014 = (+__Z5IKcosd($12010));
             $12015 = $12013 * $12014;
             $12016 = -$12015;
             $12017 = $12016 - $12012;
             $12018 = (+__Z5IKabsd($12017));
             $12019 = $12018 > 5.0000000000000004E-6;
             if ($12019) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $6627 = +HEAPF64[$60>>3];
           $6628 = +HEAPF64[$7>>3];
           $6629 = $6628 + -3.14159265358979;
           $6630 = (+__Z5IKabsd($6629));
           $6631 = $6630 + 3.14159265358979;
           $6632 = (+__Z6IKfmoddd($6631,6.2831853071795898));
           $6633 = $6632 + -3.14159265358979;
           $6634 = +HEAPF64[$47>>3];
           $6635 = -0.051499999999999997 - $6634;
           $6636 = -0.03113175 - $6627;
           $6637 = $6634 * 0.65600000000000003;
           $6638 = $6636 - $6637;
           $6639 = (+__Z5IKabsd($6633));
           $6640 = $6639 < 9.9999999999999995E-7;
           if (!($6640)) {
            break L484;
           }
           $6641 = 0.0026522500000000001 - $6627;
           $6642 = (+__Z5IKabsd($6641));
           $6643 = $6642 < 9.9999999999999995E-7;
           if (!($6643)) {
            break L484;
           }
           $6644 = (+__Z5IKabsd($6635));
           $6645 = $6644 < 9.9999999999999995E-7;
           if (!($6645)) {
            break L484;
           }
           $6646 = (+__Z5IKabsd($6638));
           $6647 = $6646 < 9.9999999999999995E-7;
           if (!($6647)) {
            break L484;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = -1.0;
           HEAPF64[$7>>3] = 3.14159265358979;
           $6648 = +HEAPF64[$43>>3];
           $6649 = (+__Z5IKabsd($6648));
           $6650 = +HEAPF64[$45>>3];
           $6651 = (+__Z5IKabsd($6650));
           $6652 = $6649 + $6651;
           $6653 = (+__Z5IKabsd($6652));
           $6654 = $6653 < 9.9999999999999995E-7;
           if ($6654) {
            break L484;
           }
           HEAP16[$j0valid396>>1] = 0;
           HEAP8[$2>>0] = 2;
           $6655 = +HEAPF64[$45>>3];
           $6656 = +HEAPF64[$43>>3];
           $6657 = -$6656;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x906,$6655,$6657,1.9999999999999999E-6);
           $6658 = HEAP8[$350>>0]|0;
           $6659 = ($6658<<24>>24)==(0);
           if ($6659) {
            break L484;
           }
           $6660 = +HEAPF64[$x906>>3];
           $6661 = -$6660;
           HEAPF64[$j0array393>>3] = $6661;
           $6662 = (+__Z5IKsind($6661));
           HEAPF64[$sj0array395>>3] = $6662;
           $6663 = (+__Z5IKcosd($6661));
           HEAPF64[$cj0array394>>3] = $6663;
           $6664 = 3.14159265358979 - $6660;
           HEAPF64[$351>>3] = $6664;
           $6665 = (+__Z5IKsind($6664));
           HEAPF64[$352>>3] = $6665;
           $6666 = +HEAPF64[$351>>3];
           $6667 = (+__Z5IKcosd($6666));
           HEAPF64[$353>>3] = $6667;
           $6668 = +HEAPF64[$j0array393>>3];
           $6669 = $6668 > 3.14159265358979;
           do {
            if ($6669) {
             $6670 = $6668 + -6.2831853071795898;
             HEAPF64[$j0array393>>3] = $6670;
            } else {
             $6671 = $6668 < -3.14159265358979;
             if (!($6671)) {
              break;
             }
             $6672 = $6668 + 6.2831853071795898;
             HEAPF64[$j0array393>>3] = $6672;
            }
           } while(0);
           HEAP8[$j0valid396>>0] = 1;
           $6673 = +HEAPF64[$351>>3];
           $6674 = $6673 > 3.14159265358979;
           do {
            if ($6674) {
             $6675 = $6673 + -6.2831853071795898;
             HEAPF64[$351>>3] = $6675;
            } else {
             $6676 = $6673 < -3.14159265358979;
             if (!($6676)) {
              break;
             }
             $6677 = $6673 + 6.2831853071795898;
             HEAPF64[$351>>3] = $6677;
            }
           } while(0);
           HEAP8[$354>>0] = 1;
           $6678 = HEAP8[$j0valid396>>0]|0;
           $6679 = ($6678<<24>>24)==(0);
           do {
            if (!($6679)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $6680 = HEAP8[$858>>0]|0;
             $6681 = ($6680<<24>>24)==(0);
             do {
              if (!($6681)) {
               $6682 = +HEAPF64[$cj0array394>>3];
               $6683 = +HEAPF64[$859>>3];
               $6684 = $6682 - $6683;
               $6685 = (+__Z5IKabsd($6684));
               $6686 = $6685 < 9.9999999999999995E-7;
               if (!($6686)) {
                break;
               }
               $6687 = +HEAPF64[$sj0array395>>3];
               $6688 = +HEAPF64[$860>>3];
               $6689 = $6687 - $6688;
               $6690 = (+__Z5IKabsd($6689));
               $6691 = $6690 < 9.9999999999999995E-7;
               if (!($6691)) {
                break;
               }
               HEAP8[$858>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $6692 = +HEAPF64[$j0array393>>3];
             HEAPF64[$this>>3] = $6692;
             $6693 = +HEAPF64[$cj0array394>>3];
             HEAPF64[$355>>3] = $6693;
             $6694 = +HEAPF64[$sj0array395>>3];
             HEAPF64[$356>>3] = $6694;
             $6695 = +HEAPF64[$45>>3];
             $6696 = +HEAPF64[$this>>3];
             $6697 = (+__Z5IKsind($6696));
             $6698 = $6695 * $6697;
             $6699 = +HEAPF64[$43>>3];
             $6700 = (+__Z5IKcosd($6696));
             $6701 = $6699 * $6700;
             $6702 = -$6701;
             $6703 = $6702 - $6698;
             $6704 = (+__Z5IKabsd($6703));
             $6705 = $6704 > 5.0000000000000004E-6;
             if ($6705) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $6706 = HEAP8[$854>>0]|0;
           $6707 = ($6706<<24>>24)==(0);
           if ($6707) {
            break L484;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $11992 = +HEAPF64[$855>>3];
           HEAPF64[$this>>3] = $11992;
           $11993 = +HEAPF64[$856>>3];
           HEAPF64[$355>>3] = $11993;
           $11994 = +HEAPF64[$857>>3];
           HEAPF64[$356>>3] = $11994;
           $11995 = +HEAPF64[$45>>3];
           $11996 = +HEAPF64[$this>>3];
           $11997 = (+__Z5IKsind($11996));
           $11998 = $11995 * $11997;
           $11999 = +HEAPF64[$43>>3];
           $12000 = (+__Z5IKcosd($11996));
           $12001 = $11999 * $12000;
           $12002 = -$12001;
           $12003 = $12002 - $11998;
           $12004 = (+__Z5IKabsd($12003));
           $12005 = $12004 > 5.0000000000000004E-6;
           if ($12005) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         $6756 = +HEAPF64[$73>>3];
         $6757 = $6756 * 0.27650000000000002;
         $6758 = +HEAPF64[$60>>3];
         $6759 = +HEAPF64[$22>>3];
         $6760 = $6759 + -3.14159265358979;
         $6761 = (+__Z5IKabsd($6760));
         $6762 = $6761 + 3.14159265358979;
         $6763 = (+__Z6IKfmoddd($6762,6.2831853071795898));
         $6764 = $6763 + -3.14159265358979;
         $6765 = -0.32800000000000001 - $6757;
         $6766 = +HEAPF64[$47>>3];
         $6767 = $6765 - $6766;
         $6768 = $6766 + 0.32800000000000001;
         $6769 = $6757 + $6768;
         $6770 = -0.03113175 - $6758;
         $6771 = $6766 * 0.65600000000000003;
         $6772 = $6770 - $6771;
         $6773 = (+__Z5IKabsd($6764));
         $6774 = $6773 < 9.9999999999999995E-7;
         do {
          if ($6774) {
           $6775 = 0.18403625000000001 - $6758;
           $6776 = $6756 * 0.18138399999999999;
           $6777 = $6776 + $6775;
           $6778 = (+__Z5IKabsd($6777));
           $6779 = $6778 < 9.9999999999999995E-7;
           if (!($6779)) {
            break;
           }
           $6780 = (+__Z5IKabsd($6767));
           $6781 = $6780 < 9.9999999999999995E-7;
           if (!($6781)) {
            break;
           }
           $6782 = (+__Z5IKabsd($6769));
           $6783 = $6782 < 9.9999999999999995E-7;
           if (!($6783)) {
            break;
           }
           $6784 = (+__Z5IKabsd($6772));
           $6785 = $6784 < 9.9999999999999995E-7;
           if (!($6785)) {
            break;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           $6786 = +HEAPF64[$47>>3];
           $6787 = $6786 * $6786;
           $6788 = +HEAPF64[$60>>3];
           $6789 = $6787 - $6788;
           $6790 = +HEAPF64[$74>>3];
           $6791 = (+__Z5IKabsd($6789));
           $6792 = $6791 < 9.9999999999999995E-7;
           do {
            if (!($6792)) {
             $6793 = $6787 * 2000.0;
             $6794 = $6788 * 2000.0;
             $6795 = $6793 - $6794;
             $6796 = (+__Z6IKsignd($6795));
             $6797 = (+__Z5IKabsd($6796));
             $6798 = $6797 < 9.9999999999999995E-7;
             if ($6798) {
              break;
             }
             $6799 = (+__Z5IKabsd(305809.0));
             $6800 = $6799 < 9.9999999999999995E-7;
             if ($6800) {
              break;
             }
             $6801 = (+__Z5IKabsd($6790));
             $6802 = $6801 < 9.9999999999999995E-7;
             if ($6802) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $6964 = +HEAPF64[$74>>3];
             $6965 = $6964 * 553.0;
             $6966 = +HEAPF64[$47>>3];
             $6967 = $6966 * $6966;
             $6968 = $6967 * 2000.0;
             $6969 = +HEAPF64[$60>>3];
             $6970 = $6969 * 2000.0;
             $6971 = $6968 - $6970;
             $6972 = (+__Z6IKsignd($6971));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x923,$6972,-1);
             $6973 = HEAP8[$375>>0]|0;
             $6974 = ($6973<<24>>24)==(0);
             if ($6974) {
              break L484;
             }
             $6975 = +HEAPF64[$45>>3];
             $6976 = $6965 * $6975;
             $6977 = +HEAPF64[$43>>3];
             $6978 = $6965 * $6977;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x924,$6976,$6978,1.9999999999999999E-6);
             $6979 = HEAP8[$376>>0]|0;
             $6980 = ($6979<<24>>24)==(0);
             if ($6980) {
              break L484;
             }
             $6981 = +HEAPF64[$x923>>3];
             $6982 = $6981 * 1.5707963267949001;
             $6983 = $6982 + -1.5707963267949001;
             $6984 = +HEAPF64[$x924>>3];
             $6985 = $6984 + $6983;
             $6986 = (+__Z5IKsind($6985));
             $6987 = (+__Z5IKcosd($6985));
             $6988 = $6985 > 3.14159265358979;
             do {
              if ($6988) {
               $6989 = $6985 + -6.2831853071795898;
               $6992 = $6989;
              } else {
               $6990 = $6985 < -3.14159265358979;
               if (!($6990)) {
                $6992 = $6985;
                break;
               }
               $6991 = $6985 + 6.2831853071795898;
               $6992 = $6991;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $6992;
             HEAPF64[$377>>3] = $6987;
             HEAPF64[$378>>3] = $6986;
             $6993 = +HEAPF64[$this>>3];
             $6994 = (+__Z5IKcosd($6993));
             $6995 = (+__Z5IKsind($6993));
             $6996 = +HEAPF64[$43>>3];
             $6997 = -$6996;
             $6998 = $6995 * $6997;
             $6999 = +HEAPF64[$45>>3];
             $7000 = $6994 * $6999;
             $7001 = $6998 + $7000;
             $7002 = (+__Z5IKabsd($7001));
             $7003 = $7002 > 5.0000000000000004E-6;
             if ($7003) {
              break L484;
             }
             $7004 = +HEAPF64[$74>>3];
             $7005 = $7004 * -0.27650000000000002;
             $7006 = $6995 * $6999;
             $7007 = $7005 - $7006;
             $7008 = $6994 * $6997;
             $7009 = $7008 + $7007;
             $7010 = (+__Z5IKabsd($7009));
             $7011 = $7010 > 5.0000000000000004E-6;
             if ($7011) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $6803 = +HEAPF64[$60>>3];
           $6804 = +HEAPF64[$7>>3];
           $6805 = (+__Z5IKabsd($6804));
           $6806 = $6805 + 3.14159265358979;
           $6807 = (+__Z6IKfmoddd($6806,6.2831853071795898));
           $6808 = $6807 + -3.14159265358979;
           $6809 = +HEAPF64[$47>>3];
           $6810 = -0.60450000000000004 - $6809;
           $6811 = -0.03113175 - $6803;
           $6812 = $6809 * 0.65600000000000003;
           $6813 = $6811 - $6812;
           $6814 = (+__Z5IKabsd($6808));
           $6815 = $6814 < 9.9999999999999995E-7;
           do {
            if ($6815) {
             $6816 = 0.36542025 - $6803;
             $6817 = (+__Z5IKabsd($6816));
             $6818 = $6817 < 9.9999999999999995E-7;
             if (!($6818)) {
              break;
             }
             $6819 = (+__Z5IKabsd($6810));
             $6820 = $6819 < 9.9999999999999995E-7;
             if (!($6820)) {
              break;
             }
             $6821 = (+__Z5IKabsd($6813));
             $6822 = $6821 < 9.9999999999999995E-7;
             if (!($6822)) {
              break;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = -1.0;
             HEAPF64[$22>>3] = 3.14159265358979;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $6823 = +HEAPF64[$43>>3];
             $6824 = (+__Z5IKabsd($6823));
             $6825 = +HEAPF64[$45>>3];
             $6826 = (+__Z5IKabsd($6825));
             $6827 = $6824 + $6826;
             $6828 = (+__Z5IKabsd($6827));
             $6829 = $6828 < 9.9999999999999995E-7;
             if ($6829) {
              break L484;
             }
             HEAP16[$j0valid416>>1] = 0;
             HEAP8[$2>>0] = 2;
             $6830 = +HEAPF64[$45>>3];
             $6831 = +HEAPF64[$43>>3];
             $6832 = -$6831;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x918,$6830,$6832,1.9999999999999999E-6);
             $6833 = HEAP8[$361>>0]|0;
             $6834 = ($6833<<24>>24)==(0);
             if ($6834) {
              break L484;
             }
             $6835 = +HEAPF64[$x918>>3];
             $6836 = -$6835;
             HEAPF64[$j0array413>>3] = $6836;
             $6837 = (+__Z5IKsind($6836));
             HEAPF64[$sj0array415>>3] = $6837;
             $6838 = (+__Z5IKcosd($6836));
             HEAPF64[$cj0array414>>3] = $6838;
             $6839 = 3.14159265358979 - $6835;
             HEAPF64[$362>>3] = $6839;
             $6840 = (+__Z5IKsind($6839));
             HEAPF64[$363>>3] = $6840;
             $6841 = +HEAPF64[$362>>3];
             $6842 = (+__Z5IKcosd($6841));
             HEAPF64[$364>>3] = $6842;
             $6843 = +HEAPF64[$j0array413>>3];
             $6844 = $6843 > 3.14159265358979;
             do {
              if ($6844) {
               $6845 = $6843 + -6.2831853071795898;
               HEAPF64[$j0array413>>3] = $6845;
              } else {
               $6846 = $6843 < -3.14159265358979;
               if (!($6846)) {
                break;
               }
               $6847 = $6843 + 6.2831853071795898;
               HEAPF64[$j0array413>>3] = $6847;
              }
             } while(0);
             HEAP8[$j0valid416>>0] = 1;
             $6848 = +HEAPF64[$362>>3];
             $6849 = $6848 > 3.14159265358979;
             do {
              if ($6849) {
               $6850 = $6848 + -6.2831853071795898;
               HEAPF64[$362>>3] = $6850;
              } else {
               $6851 = $6848 < -3.14159265358979;
               if (!($6851)) {
                break;
               }
               $6852 = $6848 + 6.2831853071795898;
               HEAPF64[$362>>3] = $6852;
              }
             } while(0);
             HEAP8[$365>>0] = 1;
             $6853 = HEAP8[$j0valid416>>0]|0;
             $6854 = ($6853<<24>>24)==(0);
             do {
              if (!($6854)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $6855 = HEAP8[$865>>0]|0;
               $6856 = ($6855<<24>>24)==(0);
               do {
                if (!($6856)) {
                 $6857 = +HEAPF64[$cj0array414>>3];
                 $6858 = +HEAPF64[$866>>3];
                 $6859 = $6857 - $6858;
                 $6860 = (+__Z5IKabsd($6859));
                 $6861 = $6860 < 9.9999999999999995E-7;
                 if (!($6861)) {
                  break;
                 }
                 $6862 = +HEAPF64[$sj0array415>>3];
                 $6863 = +HEAPF64[$867>>3];
                 $6864 = $6862 - $6863;
                 $6865 = (+__Z5IKabsd($6864));
                 $6866 = $6865 < 9.9999999999999995E-7;
                 if (!($6866)) {
                  break;
                 }
                 HEAP8[$865>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $6867 = +HEAPF64[$j0array413>>3];
               HEAPF64[$this>>3] = $6867;
               $6868 = +HEAPF64[$cj0array414>>3];
               HEAPF64[$366>>3] = $6868;
               $6869 = +HEAPF64[$sj0array415>>3];
               HEAPF64[$367>>3] = $6869;
               $6870 = +HEAPF64[$45>>3];
               $6871 = +HEAPF64[$this>>3];
               $6872 = (+__Z5IKsind($6871));
               $6873 = $6870 * $6872;
               $6874 = +HEAPF64[$43>>3];
               $6875 = (+__Z5IKcosd($6871));
               $6876 = $6874 * $6875;
               $6877 = -$6876;
               $6878 = $6877 - $6873;
               $6879 = (+__Z5IKabsd($6878));
               $6880 = $6879 > 5.0000000000000004E-6;
               if ($6880) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $6881 = HEAP8[$861>>0]|0;
             $6882 = ($6881<<24>>24)==(0);
             if ($6882) {
              break L484;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $11978 = +HEAPF64[$862>>3];
             HEAPF64[$this>>3] = $11978;
             $11979 = +HEAPF64[$863>>3];
             HEAPF64[$366>>3] = $11979;
             $11980 = +HEAPF64[$864>>3];
             HEAPF64[$367>>3] = $11980;
             $11981 = +HEAPF64[$45>>3];
             $11982 = +HEAPF64[$this>>3];
             $11983 = (+__Z5IKsind($11982));
             $11984 = $11981 * $11983;
             $11985 = +HEAPF64[$43>>3];
             $11986 = (+__Z5IKcosd($11982));
             $11987 = $11985 * $11986;
             $11988 = -$11987;
             $11989 = $11988 - $11984;
             $11990 = (+__Z5IKabsd($11989));
             $11991 = $11990 > 5.0000000000000004E-6;
             if ($11991) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $6883 = +HEAPF64[$60>>3];
           $6884 = +HEAPF64[$7>>3];
           $6885 = $6884 + -3.14159265358979;
           $6886 = (+__Z5IKabsd($6885));
           $6887 = $6886 + 3.14159265358979;
           $6888 = (+__Z6IKfmoddd($6887,6.2831853071795898));
           $6889 = $6888 + -3.14159265358979;
           $6890 = +HEAPF64[$47>>3];
           $6891 = -0.051499999999999997 - $6890;
           $6892 = -0.03113175 - $6883;
           $6893 = $6890 * 0.65600000000000003;
           $6894 = $6892 - $6893;
           $6895 = (+__Z5IKabsd($6889));
           $6896 = $6895 < 9.9999999999999995E-7;
           if (!($6896)) {
            break L484;
           }
           $6897 = 0.0026522500000000001 - $6883;
           $6898 = (+__Z5IKabsd($6897));
           $6899 = $6898 < 9.9999999999999995E-7;
           if (!($6899)) {
            break L484;
           }
           $6900 = (+__Z5IKabsd($6891));
           $6901 = $6900 < 9.9999999999999995E-7;
           if (!($6901)) {
            break L484;
           }
           $6902 = (+__Z5IKabsd($6894));
           $6903 = $6902 < 9.9999999999999995E-7;
           if (!($6903)) {
            break L484;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = -1.0;
           HEAPF64[$7>>3] = 3.14159265358979;
           $6904 = +HEAPF64[$43>>3];
           $6905 = (+__Z5IKabsd($6904));
           $6906 = +HEAPF64[$45>>3];
           $6907 = (+__Z5IKabsd($6906));
           $6908 = $6905 + $6907;
           $6909 = (+__Z5IKabsd($6908));
           $6910 = $6909 < 9.9999999999999995E-7;
           if ($6910) {
            break L484;
           }
           HEAP16[$j0valid425>>1] = 0;
           HEAP8[$2>>0] = 2;
           $6911 = +HEAPF64[$45>>3];
           $6912 = +HEAPF64[$43>>3];
           $6913 = -$6912;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x921,$6911,$6913,1.9999999999999999E-6);
           $6914 = HEAP8[$368>>0]|0;
           $6915 = ($6914<<24>>24)==(0);
           if ($6915) {
            break L484;
           }
           $6916 = +HEAPF64[$x921>>3];
           $6917 = -$6916;
           HEAPF64[$j0array422>>3] = $6917;
           $6918 = (+__Z5IKsind($6917));
           HEAPF64[$sj0array424>>3] = $6918;
           $6919 = (+__Z5IKcosd($6917));
           HEAPF64[$cj0array423>>3] = $6919;
           $6920 = 3.14159265358979 - $6916;
           HEAPF64[$369>>3] = $6920;
           $6921 = (+__Z5IKsind($6920));
           HEAPF64[$370>>3] = $6921;
           $6922 = +HEAPF64[$369>>3];
           $6923 = (+__Z5IKcosd($6922));
           HEAPF64[$371>>3] = $6923;
           $6924 = +HEAPF64[$j0array422>>3];
           $6925 = $6924 > 3.14159265358979;
           do {
            if ($6925) {
             $6926 = $6924 + -6.2831853071795898;
             HEAPF64[$j0array422>>3] = $6926;
            } else {
             $6927 = $6924 < -3.14159265358979;
             if (!($6927)) {
              break;
             }
             $6928 = $6924 + 6.2831853071795898;
             HEAPF64[$j0array422>>3] = $6928;
            }
           } while(0);
           HEAP8[$j0valid425>>0] = 1;
           $6929 = +HEAPF64[$369>>3];
           $6930 = $6929 > 3.14159265358979;
           do {
            if ($6930) {
             $6931 = $6929 + -6.2831853071795898;
             HEAPF64[$369>>3] = $6931;
            } else {
             $6932 = $6929 < -3.14159265358979;
             if (!($6932)) {
              break;
             }
             $6933 = $6929 + 6.2831853071795898;
             HEAPF64[$369>>3] = $6933;
            }
           } while(0);
           HEAP8[$372>>0] = 1;
           $6934 = HEAP8[$j0valid425>>0]|0;
           $6935 = ($6934<<24>>24)==(0);
           do {
            if (!($6935)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $6936 = HEAP8[$872>>0]|0;
             $6937 = ($6936<<24>>24)==(0);
             do {
              if (!($6937)) {
               $6938 = +HEAPF64[$cj0array423>>3];
               $6939 = +HEAPF64[$873>>3];
               $6940 = $6938 - $6939;
               $6941 = (+__Z5IKabsd($6940));
               $6942 = $6941 < 9.9999999999999995E-7;
               if (!($6942)) {
                break;
               }
               $6943 = +HEAPF64[$sj0array424>>3];
               $6944 = +HEAPF64[$874>>3];
               $6945 = $6943 - $6944;
               $6946 = (+__Z5IKabsd($6945));
               $6947 = $6946 < 9.9999999999999995E-7;
               if (!($6947)) {
                break;
               }
               HEAP8[$872>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $6948 = +HEAPF64[$j0array422>>3];
             HEAPF64[$this>>3] = $6948;
             $6949 = +HEAPF64[$cj0array423>>3];
             HEAPF64[$373>>3] = $6949;
             $6950 = +HEAPF64[$sj0array424>>3];
             HEAPF64[$374>>3] = $6950;
             $6951 = +HEAPF64[$45>>3];
             $6952 = +HEAPF64[$this>>3];
             $6953 = (+__Z5IKsind($6952));
             $6954 = $6951 * $6953;
             $6955 = +HEAPF64[$43>>3];
             $6956 = (+__Z5IKcosd($6952));
             $6957 = $6955 * $6956;
             $6958 = -$6957;
             $6959 = $6958 - $6954;
             $6960 = (+__Z5IKabsd($6959));
             $6961 = $6960 > 5.0000000000000004E-6;
             if ($6961) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $6962 = HEAP8[$868>>0]|0;
           $6963 = ($6962<<24>>24)==(0);
           if ($6963) {
            break L484;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $11964 = +HEAPF64[$869>>3];
           HEAPF64[$this>>3] = $11964;
           $11965 = +HEAPF64[$870>>3];
           HEAPF64[$373>>3] = $11965;
           $11966 = +HEAPF64[$871>>3];
           HEAPF64[$374>>3] = $11966;
           $11967 = +HEAPF64[$45>>3];
           $11968 = +HEAPF64[$this>>3];
           $11969 = (+__Z5IKsind($11968));
           $11970 = $11967 * $11969;
           $11971 = +HEAPF64[$43>>3];
           $11972 = (+__Z5IKcosd($11968));
           $11973 = $11971 * $11972;
           $11974 = -$11973;
           $11975 = $11974 - $11970;
           $11976 = (+__Z5IKabsd($11975));
           $11977 = $11976 > 5.0000000000000004E-6;
           if ($11977) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         $7012 = +HEAPF64[$60>>3];
         $7013 = +HEAPF64[$7>>3];
         $7014 = (+__Z5IKabsd($7013));
         $7015 = $7014 + 3.14159265358979;
         $7016 = (+__Z6IKfmoddd($7015,6.2831853071795898));
         $7017 = $7016 + -3.14159265358979;
         $7018 = +HEAPF64[$47>>3];
         $7019 = -0.60450000000000004 - $7018;
         $7020 = -0.03113175 - $7012;
         $7021 = $7018 * 0.65600000000000003;
         $7022 = $7020 - $7021;
         $7023 = (+__Z5IKabsd($7017));
         $7024 = $7023 < 9.9999999999999995E-7;
         do {
          if ($7024) {
           $7025 = 0.36542025 - $7012;
           $7026 = (+__Z5IKabsd($7025));
           $7027 = $7026 < 9.9999999999999995E-7;
           if (!($7027)) {
            break;
           }
           $7028 = (+__Z5IKabsd($7019));
           $7029 = $7028 < 9.9999999999999995E-7;
           if (!($7029)) {
            break;
           }
           $7030 = (+__Z5IKabsd($7022));
           $7031 = $7030 < 9.9999999999999995E-7;
           if (!($7031)) {
            break;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $7032 = +HEAPF64[$43>>3];
           $7033 = (+__Z5IKabsd($7032));
           $7034 = +HEAPF64[$45>>3];
           $7035 = (+__Z5IKabsd($7034));
           $7036 = $7033 + $7035;
           $7037 = (+__Z5IKabsd($7036));
           $7038 = $7037 < 9.9999999999999995E-7;
           if (!($7038)) {
            HEAP16[$j0valid458>>1] = 0;
            HEAP8[$2>>0] = 2;
            $7247 = +HEAPF64[$45>>3];
            $7248 = +HEAPF64[$43>>3];
            $7249 = -$7248;
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x944,$7247,$7249,1.9999999999999999E-6);
            $7250 = HEAP8[$393>>0]|0;
            $7251 = ($7250<<24>>24)==(0);
            if ($7251) {
             break L484;
            }
            $7252 = +HEAPF64[$x944>>3];
            $7253 = -$7252;
            HEAPF64[$j0array455>>3] = $7253;
            $7254 = (+__Z5IKsind($7253));
            HEAPF64[$sj0array457>>3] = $7254;
            $7255 = (+__Z5IKcosd($7253));
            HEAPF64[$cj0array456>>3] = $7255;
            $7256 = 3.14159265358979 - $7252;
            HEAPF64[$394>>3] = $7256;
            $7257 = (+__Z5IKsind($7256));
            HEAPF64[$395>>3] = $7257;
            $7258 = +HEAPF64[$394>>3];
            $7259 = (+__Z5IKcosd($7258));
            HEAPF64[$396>>3] = $7259;
            $7260 = +HEAPF64[$j0array455>>3];
            $7261 = $7260 > 3.14159265358979;
            do {
             if ($7261) {
              $7262 = $7260 + -6.2831853071795898;
              HEAPF64[$j0array455>>3] = $7262;
             } else {
              $7263 = $7260 < -3.14159265358979;
              if (!($7263)) {
               break;
              }
              $7264 = $7260 + 6.2831853071795898;
              HEAPF64[$j0array455>>3] = $7264;
             }
            } while(0);
            HEAP8[$j0valid458>>0] = 1;
            $7265 = +HEAPF64[$394>>3];
            $7266 = $7265 > 3.14159265358979;
            do {
             if ($7266) {
              $7267 = $7265 + -6.2831853071795898;
              HEAPF64[$394>>3] = $7267;
             } else {
              $7268 = $7265 < -3.14159265358979;
              if (!($7268)) {
               break;
              }
              $7269 = $7265 + 6.2831853071795898;
              HEAPF64[$394>>3] = $7269;
             }
            } while(0);
            HEAP8[$397>>0] = 1;
            $ij0459$0962 = 0;
            while(1) {
             $7270 = (($j0valid458) + ($ij0459$0962)|0);
             $7271 = HEAP8[$7270>>0]|0;
             $7272 = ($7271<<24>>24)==(0);
             do {
              if (!($7272)) {
               $7273 = $ij0459$0962&255;
               HEAP8[$0>>0] = $7273;
               HEAP8[$1>>0] = -1;
               $iij0460$0959 = (($ij0459$0962) + 1)|0;
               $7274 = ($iij0460$0959|0)<(2);
               do {
                if ($7274) {
                 $7275 = (($sj0array457) + ($ij0459$0962<<3)|0);
                 $7276 = (($j0valid458) + ($iij0460$0959)|0);
                 $7277 = HEAP8[$7276>>0]|0;
                 $7278 = ($7277<<24>>24)==(0);
                 if ($7278) {
                  break;
                 }
                 $7279 = (($cj0array456) + ($ij0459$0962<<3)|0);
                 $7280 = +HEAPF64[$7279>>3];
                 $7281 = (($cj0array456) + ($iij0460$0959<<3)|0);
                 $7282 = +HEAPF64[$7281>>3];
                 $7283 = $7280 - $7282;
                 $7284 = (+__Z5IKabsd($7283));
                 $7285 = $7284 < 9.9999999999999995E-7;
                 if (!($7285)) {
                  break;
                 }
                 $7286 = +HEAPF64[$7275>>3];
                 $7287 = (($sj0array457) + ($iij0460$0959<<3)|0);
                 $7288 = +HEAPF64[$7287>>3];
                 $7289 = $7286 - $7288;
                 $7290 = (+__Z5IKabsd($7289));
                 $7291 = $7290 < 9.9999999999999995E-7;
                 if (!($7291)) {
                  break;
                 }
                 HEAP8[$7276>>0] = 0;
                 $7292 = $iij0460$0959&255;
                 HEAP8[$1>>0] = $7292;
                }
               } while(0);
               $7293 = (($j0array455) + ($ij0459$0962<<3)|0);
               $7294 = +HEAPF64[$7293>>3];
               HEAPF64[$this>>3] = $7294;
               $7295 = (($cj0array456) + ($ij0459$0962<<3)|0);
               $7296 = +HEAPF64[$7295>>3];
               HEAPF64[$398>>3] = $7296;
               $7297 = (($sj0array457) + ($ij0459$0962<<3)|0);
               $7298 = +HEAPF64[$7297>>3];
               HEAPF64[$399>>3] = $7298;
               $7299 = +HEAPF64[$this>>3];
               $7300 = (+__Z5IKcosd($7299));
               $7301 = (+__Z5IKsind($7299));
               $7302 = +HEAPF64[$43>>3];
               $7303 = +HEAPF64[$24>>3];
               $7304 = $7302 * $7303;
               $7305 = +HEAPF64[$23>>3];
               $7306 = $7301 * $7305;
               $7307 = +HEAPF64[$45>>3];
               $7308 = $7300 * $7307;
               $7309 = $7301 * $7307;
               $7310 = $7300 * $7302;
               $7311 = -$7309;
               $7312 = $7311 - $7310;
               $7313 = $7301 * $7304;
               $7314 = $7302 * $7305;
               $7315 = $7300 * $7314;
               $7316 = $7313 + $7315;
               $7317 = $7303 * $7308;
               $7318 = $7316 - $7317;
               $7319 = $7307 * $7306;
               $7320 = $7319 + $7318;
               $7321 = (+__Z5IKabsd($7312));
               $7322 = $7321 > 5.0000000000000004E-6;
               if ($7322) {
                break;
               }
               $7323 = $7300 * $7304;
               $7324 = $7302 * $7306;
               $7325 = $7323 - $7324;
               $7326 = $7305 * $7308;
               $7327 = $7325 + $7326;
               $7328 = $7303 * $7309;
               $7329 = $7328 + $7327;
               $7330 = (+__Z5IKabsd($7329));
               $7331 = $7330 > 5.0000000000000004E-6;
               if ($7331) {
                break;
               }
               $7332 = (+__Z5IKabsd($7320));
               $7333 = $7332 > 5.0000000000000004E-6;
               if ($7333) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $7334 = (($ij0459$0962) + 1)|0;
             $exitcond1392 = ($7334|0)==(2);
             if ($exitcond1392) {
              break L484;
             } else {
              $ij0459$0962 = $7334;
             }
            }
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $7039 = +HEAPF64[$23>>3];
           $7040 = +HEAPF64[$43>>3];
           $7041 = $7039 * $7040;
           $7042 = +HEAPF64[$45>>3];
           $7043 = +HEAPF64[$24>>3];
           $7044 = $7042 * $7043;
           $7045 = $7044 - $7041;
           $7046 = (+__Z5IKabsd($7045));
           $7047 = $7039 * $7042;
           $7048 = $7040 * $7043;
           $7049 = $7047 + $7048;
           $7050 = (+__Z5IKabsd($7049));
           $7051 = $7046 + $7050;
           $7052 = (+__Z5IKabsd($7051));
           $7053 = $7052 < 9.9999999999999995E-7;
           if (!($7053)) {
            HEAP16[$j0valid451>>1] = 0;
            HEAP8[$2>>0] = 2;
            $7158 = +HEAPF64[$23>>3];
            $7159 = +HEAPF64[$45>>3];
            $7160 = $7158 * $7159;
            $7161 = +HEAPF64[$43>>3];
            $7162 = +HEAPF64[$24>>3];
            $7163 = $7161 * $7162;
            $7164 = $7160 + $7163;
            $7165 = $7158 * $7161;
            $7166 = $7159 * $7162;
            $7167 = $7166 - $7165;
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x937,$7164,$7167,1.9999999999999999E-6);
            $7168 = HEAP8[$386>>0]|0;
            $7169 = ($7168<<24>>24)==(0);
            if ($7169) {
             break L484;
            }
            $7170 = +HEAPF64[$x937>>3];
            $7171 = -$7170;
            HEAPF64[$j0array448>>3] = $7171;
            $7172 = (+__Z5IKsind($7171));
            HEAPF64[$sj0array450>>3] = $7172;
            $7173 = (+__Z5IKcosd($7171));
            HEAPF64[$cj0array449>>3] = $7173;
            $7174 = 3.14159265358979 - $7170;
            HEAPF64[$387>>3] = $7174;
            $7175 = (+__Z5IKsind($7174));
            HEAPF64[$388>>3] = $7175;
            $7176 = +HEAPF64[$387>>3];
            $7177 = (+__Z5IKcosd($7176));
            HEAPF64[$389>>3] = $7177;
            $7178 = +HEAPF64[$j0array448>>3];
            $7179 = $7178 > 3.14159265358979;
            do {
             if ($7179) {
              $7180 = $7178 + -6.2831853071795898;
              HEAPF64[$j0array448>>3] = $7180;
             } else {
              $7181 = $7178 < -3.14159265358979;
              if (!($7181)) {
               break;
              }
              $7182 = $7178 + 6.2831853071795898;
              HEAPF64[$j0array448>>3] = $7182;
             }
            } while(0);
            HEAP8[$j0valid451>>0] = 1;
            $7183 = +HEAPF64[$387>>3];
            $7184 = $7183 > 3.14159265358979;
            do {
             if ($7184) {
              $7185 = $7183 + -6.2831853071795898;
              HEAPF64[$387>>3] = $7185;
             } else {
              $7186 = $7183 < -3.14159265358979;
              if (!($7186)) {
               break;
              }
              $7187 = $7183 + 6.2831853071795898;
              HEAPF64[$387>>3] = $7187;
             }
            } while(0);
            HEAP8[$390>>0] = 1;
            $ij0452$0966 = 0;
            while(1) {
             $7188 = (($j0valid451) + ($ij0452$0966)|0);
             $7189 = HEAP8[$7188>>0]|0;
             $7190 = ($7189<<24>>24)==(0);
             do {
              if (!($7190)) {
               $7191 = $ij0452$0966&255;
               HEAP8[$0>>0] = $7191;
               HEAP8[$1>>0] = -1;
               $iij0453$0963 = (($ij0452$0966) + 1)|0;
               $7192 = ($iij0453$0963|0)<(2);
               do {
                if ($7192) {
                 $7193 = (($sj0array450) + ($ij0452$0966<<3)|0);
                 $7194 = (($j0valid451) + ($iij0453$0963)|0);
                 $7195 = HEAP8[$7194>>0]|0;
                 $7196 = ($7195<<24>>24)==(0);
                 if ($7196) {
                  break;
                 }
                 $7197 = (($cj0array449) + ($ij0452$0966<<3)|0);
                 $7198 = +HEAPF64[$7197>>3];
                 $7199 = (($cj0array449) + ($iij0453$0963<<3)|0);
                 $7200 = +HEAPF64[$7199>>3];
                 $7201 = $7198 - $7200;
                 $7202 = (+__Z5IKabsd($7201));
                 $7203 = $7202 < 9.9999999999999995E-7;
                 if (!($7203)) {
                  break;
                 }
                 $7204 = +HEAPF64[$7193>>3];
                 $7205 = (($sj0array450) + ($iij0453$0963<<3)|0);
                 $7206 = +HEAPF64[$7205>>3];
                 $7207 = $7204 - $7206;
                 $7208 = (+__Z5IKabsd($7207));
                 $7209 = $7208 < 9.9999999999999995E-7;
                 if (!($7209)) {
                  break;
                 }
                 HEAP8[$7194>>0] = 0;
                 $7210 = $iij0453$0963&255;
                 HEAP8[$1>>0] = $7210;
                }
               } while(0);
               $7211 = (($j0array448) + ($ij0452$0966<<3)|0);
               $7212 = +HEAPF64[$7211>>3];
               HEAPF64[$this>>3] = $7212;
               $7213 = (($cj0array449) + ($ij0452$0966<<3)|0);
               $7214 = +HEAPF64[$7213>>3];
               HEAPF64[$391>>3] = $7214;
               $7215 = (($sj0array450) + ($ij0452$0966<<3)|0);
               $7216 = +HEAPF64[$7215>>3];
               HEAPF64[$392>>3] = $7216;
               $7217 = +HEAPF64[$this>>3];
               $7218 = (+__Z5IKcosd($7217));
               $7219 = (+__Z5IKsind($7217));
               $7220 = +HEAPF64[$45>>3];
               $7221 = $7219 * $7220;
               $7222 = +HEAPF64[$43>>3];
               $7223 = $7219 * $7222;
               $7224 = $7218 * $7220;
               $7225 = $7224 - $7223;
               $7226 = +HEAPF64[$24>>3];
               $7227 = $7226 * $7223;
               $7228 = +HEAPF64[$23>>3];
               $7229 = $7222 * $7228;
               $7230 = $7218 * $7229;
               $7231 = $7227 + $7230;
               $7232 = $7221 * $7228;
               $7233 = $7232 + $7231;
               $7234 = $7220 * $7226;
               $7235 = $7218 * $7234;
               $7236 = $7233 - $7235;
               $7237 = (+__Z5IKabsd($7225));
               $7238 = $7237 > 5.0000000000000004E-6;
               if ($7238) {
                break;
               }
               $7239 = $7218 * $7222;
               $7240 = -$7239;
               $7241 = $7240 - $7221;
               $7242 = (+__Z5IKabsd($7241));
               $7243 = $7242 > 5.0000000000000004E-6;
               if ($7243) {
                break;
               }
               $7244 = (+__Z5IKabsd($7236));
               $7245 = $7244 > 5.0000000000000004E-6;
               if ($7245) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $7246 = (($ij0452$0966) + 1)|0;
             $exitcond1393 = ($7246|0)==(2);
             if ($exitcond1393) {
              break L484;
             } else {
              $ij0452$0966 = $7246;
             }
            }
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $7054 = +HEAPF64[$23>>3];
           $7055 = +HEAPF64[$43>>3];
           $7056 = $7054 * $7055;
           $7057 = +HEAPF64[$45>>3];
           $7058 = +HEAPF64[$24>>3];
           $7059 = $7057 * $7058;
           $7060 = $7056 - $7059;
           $7061 = (+__Z5IKabsd($7060));
           $7062 = $7054 * $7057;
           $7063 = $7055 * $7058;
           $7064 = $7062 + $7063;
           $7065 = (+__Z5IKabsd($7064));
           $7066 = $7061 + $7065;
           $7067 = (+__Z5IKabsd($7066));
           $7068 = $7067 < 9.9999999999999995E-7;
           if ($7068) {
            break L484;
           }
           HEAP16[$j0valid444>>1] = 0;
           HEAP8[$2>>0] = 2;
           $7069 = +HEAPF64[$23>>3];
           $7070 = +HEAPF64[$43>>3];
           $7071 = $7069 * $7070;
           $7072 = +HEAPF64[$45>>3];
           $7073 = +HEAPF64[$24>>3];
           $7074 = $7072 * $7073;
           $7075 = $7071 - $7074;
           $7076 = $7069 * $7072;
           $7077 = $7070 * $7073;
           $7078 = $7076 + $7077;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x930,$7075,$7078,1.9999999999999999E-6);
           $7079 = HEAP8[$379>>0]|0;
           $7080 = ($7079<<24>>24)==(0);
           if ($7080) {
            break L484;
           }
           $7081 = +HEAPF64[$x930>>3];
           $7082 = -$7081;
           HEAPF64[$j0array441>>3] = $7082;
           $7083 = (+__Z5IKsind($7082));
           HEAPF64[$sj0array443>>3] = $7083;
           $7084 = (+__Z5IKcosd($7082));
           HEAPF64[$cj0array442>>3] = $7084;
           $7085 = 3.14159265358979 - $7081;
           HEAPF64[$380>>3] = $7085;
           $7086 = (+__Z5IKsind($7085));
           HEAPF64[$381>>3] = $7086;
           $7087 = +HEAPF64[$380>>3];
           $7088 = (+__Z5IKcosd($7087));
           HEAPF64[$382>>3] = $7088;
           $7089 = +HEAPF64[$j0array441>>3];
           $7090 = $7089 > 3.14159265358979;
           do {
            if ($7090) {
             $7091 = $7089 + -6.2831853071795898;
             HEAPF64[$j0array441>>3] = $7091;
            } else {
             $7092 = $7089 < -3.14159265358979;
             if (!($7092)) {
              break;
             }
             $7093 = $7089 + 6.2831853071795898;
             HEAPF64[$j0array441>>3] = $7093;
            }
           } while(0);
           HEAP8[$j0valid444>>0] = 1;
           $7094 = +HEAPF64[$380>>3];
           $7095 = $7094 > 3.14159265358979;
           do {
            if ($7095) {
             $7096 = $7094 + -6.2831853071795898;
             HEAPF64[$380>>3] = $7096;
            } else {
             $7097 = $7094 < -3.14159265358979;
             if (!($7097)) {
              break;
             }
             $7098 = $7094 + 6.2831853071795898;
             HEAPF64[$380>>3] = $7098;
            }
           } while(0);
           HEAP8[$383>>0] = 1;
           $ij0445$0970 = 0;
           while(1) {
            $7099 = (($j0valid444) + ($ij0445$0970)|0);
            $7100 = HEAP8[$7099>>0]|0;
            $7101 = ($7100<<24>>24)==(0);
            do {
             if (!($7101)) {
              $7102 = $ij0445$0970&255;
              HEAP8[$0>>0] = $7102;
              HEAP8[$1>>0] = -1;
              $iij0446$0967 = (($ij0445$0970) + 1)|0;
              $7103 = ($iij0446$0967|0)<(2);
              do {
               if ($7103) {
                $7104 = (($sj0array443) + ($ij0445$0970<<3)|0);
                $7105 = (($j0valid444) + ($iij0446$0967)|0);
                $7106 = HEAP8[$7105>>0]|0;
                $7107 = ($7106<<24>>24)==(0);
                if ($7107) {
                 break;
                }
                $7108 = (($cj0array442) + ($ij0445$0970<<3)|0);
                $7109 = +HEAPF64[$7108>>3];
                $7110 = (($cj0array442) + ($iij0446$0967<<3)|0);
                $7111 = +HEAPF64[$7110>>3];
                $7112 = $7109 - $7111;
                $7113 = (+__Z5IKabsd($7112));
                $7114 = $7113 < 9.9999999999999995E-7;
                if (!($7114)) {
                 break;
                }
                $7115 = +HEAPF64[$7104>>3];
                $7116 = (($sj0array443) + ($iij0446$0967<<3)|0);
                $7117 = +HEAPF64[$7116>>3];
                $7118 = $7115 - $7117;
                $7119 = (+__Z5IKabsd($7118));
                $7120 = $7119 < 9.9999999999999995E-7;
                if (!($7120)) {
                 break;
                }
                HEAP8[$7105>>0] = 0;
                $7121 = $iij0446$0967&255;
                HEAP8[$1>>0] = $7121;
               }
              } while(0);
              $7122 = (($j0array441) + ($ij0445$0970<<3)|0);
              $7123 = +HEAPF64[$7122>>3];
              HEAPF64[$this>>3] = $7123;
              $7124 = (($cj0array442) + ($ij0445$0970<<3)|0);
              $7125 = +HEAPF64[$7124>>3];
              HEAPF64[$384>>3] = $7125;
              $7126 = (($sj0array443) + ($ij0445$0970<<3)|0);
              $7127 = +HEAPF64[$7126>>3];
              HEAPF64[$385>>3] = $7127;
              $7128 = +HEAPF64[$this>>3];
              $7129 = (+__Z5IKcosd($7128));
              $7130 = (+__Z5IKsind($7128));
              $7131 = +HEAPF64[$43>>3];
              $7132 = +HEAPF64[$45>>3];
              $7133 = $7129 * $7132;
              $7134 = $7130 * $7132;
              $7135 = $7130 * $7131;
              $7136 = $7133 - $7135;
              $7137 = +HEAPF64[$23>>3];
              $7138 = $7130 * $7137;
              $7139 = $7131 * $7138;
              $7140 = $7137 * $7133;
              $7141 = $7140 - $7139;
              $7142 = +HEAPF64[$24>>3];
              $7143 = $7131 * $7142;
              $7144 = $7129 * $7143;
              $7145 = $7141 + $7144;
              $7146 = $7134 * $7142;
              $7147 = $7146 + $7145;
              $7148 = (+__Z5IKabsd($7136));
              $7149 = $7148 > 5.0000000000000004E-6;
              if ($7149) {
               break;
              }
              $7150 = $7129 * $7131;
              $7151 = -$7134;
              $7152 = $7151 - $7150;
              $7153 = (+__Z5IKabsd($7152));
              $7154 = $7153 > 5.0000000000000004E-6;
              if ($7154) {
               break;
              }
              $7155 = (+__Z5IKabsd($7147));
              $7156 = $7155 > 5.0000000000000004E-6;
              if ($7156) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $7157 = (($ij0445$0970) + 1)|0;
            $exitcond1394 = ($7157|0)==(2);
            if ($exitcond1394) {
             break L484;
            } else {
             $ij0445$0970 = $7157;
            }
           }
          }
         } while(0);
         $7335 = +HEAPF64[$60>>3];
         $7336 = +HEAPF64[$7>>3];
         $7337 = $7336 + -3.14159265358979;
         $7338 = (+__Z5IKabsd($7337));
         $7339 = $7338 + 3.14159265358979;
         $7340 = (+__Z6IKfmoddd($7339,6.2831853071795898));
         $7341 = $7340 + -3.14159265358979;
         $7342 = +HEAPF64[$47>>3];
         $7343 = -0.051499999999999997 - $7342;
         $7344 = $7342 * 0.65600000000000003;
         $7345 = -0.03113175 - $7344;
         $7346 = $7345 - $7335;
         $7347 = (+__Z5IKabsd($7341));
         $7348 = $7347 < 9.9999999999999995E-7;
         do {
          if ($7348) {
           $7349 = 0.0026522500000000001 - $7335;
           $7350 = (+__Z5IKabsd($7349));
           $7351 = $7350 < 9.9999999999999995E-7;
           if (!($7351)) {
            break;
           }
           $7352 = (+__Z5IKabsd($7343));
           $7353 = $7352 < 9.9999999999999995E-7;
           if (!($7353)) {
            break;
           }
           $7354 = (+__Z5IKabsd($7346));
           $7355 = $7354 < 9.9999999999999995E-7;
           if (!($7355)) {
            break;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = -1.0;
           HEAPF64[$7>>3] = 3.14159265358979;
           $7356 = +HEAPF64[$43>>3];
           $7357 = (+__Z5IKabsd($7356));
           $7358 = +HEAPF64[$45>>3];
           $7359 = (+__Z5IKabsd($7358));
           $7360 = $7357 + $7359;
           $7361 = (+__Z5IKabsd($7360));
           $7362 = $7361 < 9.9999999999999995E-7;
           if (!($7362)) {
            HEAP16[$j0valid483>>1] = 0;
            HEAP8[$2>>0] = 2;
            $7571 = +HEAPF64[$45>>3];
            $7572 = +HEAPF64[$43>>3];
            $7573 = -$7572;
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x968,$7571,$7573,1.9999999999999999E-6);
            $7574 = HEAP8[$414>>0]|0;
            $7575 = ($7574<<24>>24)==(0);
            if ($7575) {
             break L484;
            }
            $7576 = +HEAPF64[$x968>>3];
            $7577 = -$7576;
            HEAPF64[$j0array480>>3] = $7577;
            $7578 = (+__Z5IKsind($7577));
            HEAPF64[$sj0array482>>3] = $7578;
            $7579 = (+__Z5IKcosd($7577));
            HEAPF64[$cj0array481>>3] = $7579;
            $7580 = 3.14159265358979 - $7576;
            HEAPF64[$415>>3] = $7580;
            $7581 = (+__Z5IKsind($7580));
            HEAPF64[$416>>3] = $7581;
            $7582 = +HEAPF64[$415>>3];
            $7583 = (+__Z5IKcosd($7582));
            HEAPF64[$417>>3] = $7583;
            $7584 = +HEAPF64[$j0array480>>3];
            $7585 = $7584 > 3.14159265358979;
            do {
             if ($7585) {
              $7586 = $7584 + -6.2831853071795898;
              HEAPF64[$j0array480>>3] = $7586;
             } else {
              $7587 = $7584 < -3.14159265358979;
              if (!($7587)) {
               break;
              }
              $7588 = $7584 + 6.2831853071795898;
              HEAPF64[$j0array480>>3] = $7588;
             }
            } while(0);
            HEAP8[$j0valid483>>0] = 1;
            $7589 = +HEAPF64[$415>>3];
            $7590 = $7589 > 3.14159265358979;
            do {
             if ($7590) {
              $7591 = $7589 + -6.2831853071795898;
              HEAPF64[$415>>3] = $7591;
             } else {
              $7592 = $7589 < -3.14159265358979;
              if (!($7592)) {
               break;
              }
              $7593 = $7589 + 6.2831853071795898;
              HEAPF64[$415>>3] = $7593;
             }
            } while(0);
            HEAP8[$418>>0] = 1;
            $ij0484$0950 = 0;
            while(1) {
             $7594 = (($j0valid483) + ($ij0484$0950)|0);
             $7595 = HEAP8[$7594>>0]|0;
             $7596 = ($7595<<24>>24)==(0);
             do {
              if (!($7596)) {
               $7597 = $ij0484$0950&255;
               HEAP8[$0>>0] = $7597;
               HEAP8[$1>>0] = -1;
               $iij0485$0947 = (($ij0484$0950) + 1)|0;
               $7598 = ($iij0485$0947|0)<(2);
               do {
                if ($7598) {
                 $7599 = (($sj0array482) + ($ij0484$0950<<3)|0);
                 $7600 = (($j0valid483) + ($iij0485$0947)|0);
                 $7601 = HEAP8[$7600>>0]|0;
                 $7602 = ($7601<<24>>24)==(0);
                 if ($7602) {
                  break;
                 }
                 $7603 = (($cj0array481) + ($ij0484$0950<<3)|0);
                 $7604 = +HEAPF64[$7603>>3];
                 $7605 = (($cj0array481) + ($iij0485$0947<<3)|0);
                 $7606 = +HEAPF64[$7605>>3];
                 $7607 = $7604 - $7606;
                 $7608 = (+__Z5IKabsd($7607));
                 $7609 = $7608 < 9.9999999999999995E-7;
                 if (!($7609)) {
                  break;
                 }
                 $7610 = +HEAPF64[$7599>>3];
                 $7611 = (($sj0array482) + ($iij0485$0947<<3)|0);
                 $7612 = +HEAPF64[$7611>>3];
                 $7613 = $7610 - $7612;
                 $7614 = (+__Z5IKabsd($7613));
                 $7615 = $7614 < 9.9999999999999995E-7;
                 if (!($7615)) {
                  break;
                 }
                 HEAP8[$7600>>0] = 0;
                 $7616 = $iij0485$0947&255;
                 HEAP8[$1>>0] = $7616;
                }
               } while(0);
               $7617 = (($j0array480) + ($ij0484$0950<<3)|0);
               $7618 = +HEAPF64[$7617>>3];
               HEAPF64[$this>>3] = $7618;
               $7619 = (($cj0array481) + ($ij0484$0950<<3)|0);
               $7620 = +HEAPF64[$7619>>3];
               HEAPF64[$419>>3] = $7620;
               $7621 = (($sj0array482) + ($ij0484$0950<<3)|0);
               $7622 = +HEAPF64[$7621>>3];
               HEAPF64[$420>>3] = $7622;
               $7623 = +HEAPF64[$this>>3];
               $7624 = (+__Z5IKcosd($7623));
               $7625 = (+__Z5IKsind($7623));
               $7626 = +HEAPF64[$43>>3];
               $7627 = +HEAPF64[$24>>3];
               $7628 = $7626 * $7627;
               $7629 = +HEAPF64[$23>>3];
               $7630 = $7625 * $7629;
               $7631 = +HEAPF64[$45>>3];
               $7632 = $7624 * $7631;
               $7633 = $7625 * $7631;
               $7634 = $7624 * $7626;
               $7635 = -$7633;
               $7636 = $7635 - $7634;
               $7637 = $7626 * $7629;
               $7638 = $7624 * $7637;
               $7639 = $7631 * $7630;
               $7640 = $7638 + $7639;
               $7641 = $7625 * $7628;
               $7642 = $7641 + $7640;
               $7643 = $7627 * $7632;
               $7644 = $7642 - $7643;
               $7645 = (+__Z5IKabsd($7636));
               $7646 = $7645 > 5.0000000000000004E-6;
               if ($7646) {
                break;
               }
               $7647 = $7624 * $7628;
               $7648 = $7626 * $7630;
               $7649 = $7647 - $7648;
               $7650 = $7629 * $7632;
               $7651 = $7649 + $7650;
               $7652 = $7627 * $7633;
               $7653 = $7652 + $7651;
               $7654 = (+__Z5IKabsd($7653));
               $7655 = $7654 > 5.0000000000000004E-6;
               if ($7655) {
                break;
               }
               $7656 = (+__Z5IKabsd($7644));
               $7657 = $7656 > 5.0000000000000004E-6;
               if ($7657) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $7658 = (($ij0484$0950) + 1)|0;
             $exitcond1389 = ($7658|0)==(2);
             if ($exitcond1389) {
              break L484;
             } else {
              $ij0484$0950 = $7658;
             }
            }
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = -1.0;
           HEAPF64[$7>>3] = 3.14159265358979;
           $7363 = +HEAPF64[$23>>3];
           $7364 = +HEAPF64[$43>>3];
           $7365 = $7363 * $7364;
           $7366 = +HEAPF64[$45>>3];
           $7367 = +HEAPF64[$24>>3];
           $7368 = $7366 * $7367;
           $7369 = $7368 - $7365;
           $7370 = (+__Z5IKabsd($7369));
           $7371 = $7363 * $7366;
           $7372 = $7364 * $7367;
           $7373 = $7371 + $7372;
           $7374 = (+__Z5IKabsd($7373));
           $7375 = $7370 + $7374;
           $7376 = (+__Z5IKabsd($7375));
           $7377 = $7376 < 9.9999999999999995E-7;
           if (!($7377)) {
            HEAP16[$j0valid476>>1] = 0;
            HEAP8[$2>>0] = 2;
            $7482 = +HEAPF64[$23>>3];
            $7483 = +HEAPF64[$45>>3];
            $7484 = $7482 * $7483;
            $7485 = +HEAPF64[$43>>3];
            $7486 = +HEAPF64[$24>>3];
            $7487 = $7485 * $7486;
            $7488 = $7484 + $7487;
            $7489 = $7482 * $7485;
            $7490 = $7483 * $7486;
            $7491 = $7490 - $7489;
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x961,$7488,$7491,1.9999999999999999E-6);
            $7492 = HEAP8[$407>>0]|0;
            $7493 = ($7492<<24>>24)==(0);
            if ($7493) {
             break L484;
            }
            $7494 = +HEAPF64[$x961>>3];
            $7495 = -$7494;
            HEAPF64[$j0array473>>3] = $7495;
            $7496 = (+__Z5IKsind($7495));
            HEAPF64[$sj0array475>>3] = $7496;
            $7497 = (+__Z5IKcosd($7495));
            HEAPF64[$cj0array474>>3] = $7497;
            $7498 = 3.14159265358979 - $7494;
            HEAPF64[$408>>3] = $7498;
            $7499 = (+__Z5IKsind($7498));
            HEAPF64[$409>>3] = $7499;
            $7500 = +HEAPF64[$408>>3];
            $7501 = (+__Z5IKcosd($7500));
            HEAPF64[$410>>3] = $7501;
            $7502 = +HEAPF64[$j0array473>>3];
            $7503 = $7502 > 3.14159265358979;
            do {
             if ($7503) {
              $7504 = $7502 + -6.2831853071795898;
              HEAPF64[$j0array473>>3] = $7504;
             } else {
              $7505 = $7502 < -3.14159265358979;
              if (!($7505)) {
               break;
              }
              $7506 = $7502 + 6.2831853071795898;
              HEAPF64[$j0array473>>3] = $7506;
             }
            } while(0);
            HEAP8[$j0valid476>>0] = 1;
            $7507 = +HEAPF64[$408>>3];
            $7508 = $7507 > 3.14159265358979;
            do {
             if ($7508) {
              $7509 = $7507 + -6.2831853071795898;
              HEAPF64[$408>>3] = $7509;
             } else {
              $7510 = $7507 < -3.14159265358979;
              if (!($7510)) {
               break;
              }
              $7511 = $7507 + 6.2831853071795898;
              HEAPF64[$408>>3] = $7511;
             }
            } while(0);
            HEAP8[$411>>0] = 1;
            $ij0477$0954 = 0;
            while(1) {
             $7512 = (($j0valid476) + ($ij0477$0954)|0);
             $7513 = HEAP8[$7512>>0]|0;
             $7514 = ($7513<<24>>24)==(0);
             do {
              if (!($7514)) {
               $7515 = $ij0477$0954&255;
               HEAP8[$0>>0] = $7515;
               HEAP8[$1>>0] = -1;
               $iij0478$0951 = (($ij0477$0954) + 1)|0;
               $7516 = ($iij0478$0951|0)<(2);
               do {
                if ($7516) {
                 $7517 = (($sj0array475) + ($ij0477$0954<<3)|0);
                 $7518 = (($j0valid476) + ($iij0478$0951)|0);
                 $7519 = HEAP8[$7518>>0]|0;
                 $7520 = ($7519<<24>>24)==(0);
                 if ($7520) {
                  break;
                 }
                 $7521 = (($cj0array474) + ($ij0477$0954<<3)|0);
                 $7522 = +HEAPF64[$7521>>3];
                 $7523 = (($cj0array474) + ($iij0478$0951<<3)|0);
                 $7524 = +HEAPF64[$7523>>3];
                 $7525 = $7522 - $7524;
                 $7526 = (+__Z5IKabsd($7525));
                 $7527 = $7526 < 9.9999999999999995E-7;
                 if (!($7527)) {
                  break;
                 }
                 $7528 = +HEAPF64[$7517>>3];
                 $7529 = (($sj0array475) + ($iij0478$0951<<3)|0);
                 $7530 = +HEAPF64[$7529>>3];
                 $7531 = $7528 - $7530;
                 $7532 = (+__Z5IKabsd($7531));
                 $7533 = $7532 < 9.9999999999999995E-7;
                 if (!($7533)) {
                  break;
                 }
                 HEAP8[$7518>>0] = 0;
                 $7534 = $iij0478$0951&255;
                 HEAP8[$1>>0] = $7534;
                }
               } while(0);
               $7535 = (($j0array473) + ($ij0477$0954<<3)|0);
               $7536 = +HEAPF64[$7535>>3];
               HEAPF64[$this>>3] = $7536;
               $7537 = (($cj0array474) + ($ij0477$0954<<3)|0);
               $7538 = +HEAPF64[$7537>>3];
               HEAPF64[$412>>3] = $7538;
               $7539 = (($sj0array475) + ($ij0477$0954<<3)|0);
               $7540 = +HEAPF64[$7539>>3];
               HEAPF64[$413>>3] = $7540;
               $7541 = +HEAPF64[$this>>3];
               $7542 = (+__Z5IKcosd($7541));
               $7543 = (+__Z5IKsind($7541));
               $7544 = +HEAPF64[$45>>3];
               $7545 = $7543 * $7544;
               $7546 = +HEAPF64[$43>>3];
               $7547 = $7543 * $7546;
               $7548 = $7542 * $7544;
               $7549 = $7548 - $7547;
               $7550 = +HEAPF64[$23>>3];
               $7551 = $7546 * $7550;
               $7552 = $7542 * $7551;
               $7553 = +HEAPF64[$24>>3];
               $7554 = $7544 * $7553;
               $7555 = $7542 * $7554;
               $7556 = $7552 - $7555;
               $7557 = $7545 * $7550;
               $7558 = $7557 + $7556;
               $7559 = $7547 * $7553;
               $7560 = $7559 + $7558;
               $7561 = (+__Z5IKabsd($7549));
               $7562 = $7561 > 5.0000000000000004E-6;
               if ($7562) {
                break;
               }
               $7563 = $7542 * $7546;
               $7564 = -$7563;
               $7565 = $7564 - $7545;
               $7566 = (+__Z5IKabsd($7565));
               $7567 = $7566 > 5.0000000000000004E-6;
               if ($7567) {
                break;
               }
               $7568 = (+__Z5IKabsd($7560));
               $7569 = $7568 > 5.0000000000000004E-6;
               if ($7569) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $7570 = (($ij0477$0954) + 1)|0;
             $exitcond1390 = ($7570|0)==(2);
             if ($exitcond1390) {
              break L484;
             } else {
              $ij0477$0954 = $7570;
             }
            }
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = -1.0;
           HEAPF64[$7>>3] = 3.14159265358979;
           $7378 = +HEAPF64[$23>>3];
           $7379 = +HEAPF64[$43>>3];
           $7380 = $7378 * $7379;
           $7381 = +HEAPF64[$45>>3];
           $7382 = +HEAPF64[$24>>3];
           $7383 = $7381 * $7382;
           $7384 = $7380 - $7383;
           $7385 = (+__Z5IKabsd($7384));
           $7386 = $7378 * $7381;
           $7387 = $7379 * $7382;
           $7388 = $7386 + $7387;
           $7389 = (+__Z5IKabsd($7388));
           $7390 = $7385 + $7389;
           $7391 = (+__Z5IKabsd($7390));
           $7392 = $7391 < 9.9999999999999995E-7;
           if ($7392) {
            break L484;
           }
           HEAP16[$j0valid469>>1] = 0;
           HEAP8[$2>>0] = 2;
           $7393 = +HEAPF64[$23>>3];
           $7394 = +HEAPF64[$43>>3];
           $7395 = $7393 * $7394;
           $7396 = +HEAPF64[$45>>3];
           $7397 = +HEAPF64[$24>>3];
           $7398 = $7396 * $7397;
           $7399 = $7395 - $7398;
           $7400 = $7393 * $7396;
           $7401 = $7394 * $7397;
           $7402 = $7400 + $7401;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x954,$7399,$7402,1.9999999999999999E-6);
           $7403 = HEAP8[$400>>0]|0;
           $7404 = ($7403<<24>>24)==(0);
           if ($7404) {
            break L484;
           }
           $7405 = +HEAPF64[$x954>>3];
           $7406 = -$7405;
           HEAPF64[$j0array466>>3] = $7406;
           $7407 = (+__Z5IKsind($7406));
           HEAPF64[$sj0array468>>3] = $7407;
           $7408 = (+__Z5IKcosd($7406));
           HEAPF64[$cj0array467>>3] = $7408;
           $7409 = 3.14159265358979 - $7405;
           HEAPF64[$401>>3] = $7409;
           $7410 = (+__Z5IKsind($7409));
           HEAPF64[$402>>3] = $7410;
           $7411 = +HEAPF64[$401>>3];
           $7412 = (+__Z5IKcosd($7411));
           HEAPF64[$403>>3] = $7412;
           $7413 = +HEAPF64[$j0array466>>3];
           $7414 = $7413 > 3.14159265358979;
           do {
            if ($7414) {
             $7415 = $7413 + -6.2831853071795898;
             HEAPF64[$j0array466>>3] = $7415;
            } else {
             $7416 = $7413 < -3.14159265358979;
             if (!($7416)) {
              break;
             }
             $7417 = $7413 + 6.2831853071795898;
             HEAPF64[$j0array466>>3] = $7417;
            }
           } while(0);
           HEAP8[$j0valid469>>0] = 1;
           $7418 = +HEAPF64[$401>>3];
           $7419 = $7418 > 3.14159265358979;
           do {
            if ($7419) {
             $7420 = $7418 + -6.2831853071795898;
             HEAPF64[$401>>3] = $7420;
            } else {
             $7421 = $7418 < -3.14159265358979;
             if (!($7421)) {
              break;
             }
             $7422 = $7418 + 6.2831853071795898;
             HEAPF64[$401>>3] = $7422;
            }
           } while(0);
           HEAP8[$404>>0] = 1;
           $ij0470$0958 = 0;
           while(1) {
            $7423 = (($j0valid469) + ($ij0470$0958)|0);
            $7424 = HEAP8[$7423>>0]|0;
            $7425 = ($7424<<24>>24)==(0);
            do {
             if (!($7425)) {
              $7426 = $ij0470$0958&255;
              HEAP8[$0>>0] = $7426;
              HEAP8[$1>>0] = -1;
              $iij0471$0955 = (($ij0470$0958) + 1)|0;
              $7427 = ($iij0471$0955|0)<(2);
              do {
               if ($7427) {
                $7428 = (($sj0array468) + ($ij0470$0958<<3)|0);
                $7429 = (($j0valid469) + ($iij0471$0955)|0);
                $7430 = HEAP8[$7429>>0]|0;
                $7431 = ($7430<<24>>24)==(0);
                if ($7431) {
                 break;
                }
                $7432 = (($cj0array467) + ($ij0470$0958<<3)|0);
                $7433 = +HEAPF64[$7432>>3];
                $7434 = (($cj0array467) + ($iij0471$0955<<3)|0);
                $7435 = +HEAPF64[$7434>>3];
                $7436 = $7433 - $7435;
                $7437 = (+__Z5IKabsd($7436));
                $7438 = $7437 < 9.9999999999999995E-7;
                if (!($7438)) {
                 break;
                }
                $7439 = +HEAPF64[$7428>>3];
                $7440 = (($sj0array468) + ($iij0471$0955<<3)|0);
                $7441 = +HEAPF64[$7440>>3];
                $7442 = $7439 - $7441;
                $7443 = (+__Z5IKabsd($7442));
                $7444 = $7443 < 9.9999999999999995E-7;
                if (!($7444)) {
                 break;
                }
                HEAP8[$7429>>0] = 0;
                $7445 = $iij0471$0955&255;
                HEAP8[$1>>0] = $7445;
               }
              } while(0);
              $7446 = (($j0array466) + ($ij0470$0958<<3)|0);
              $7447 = +HEAPF64[$7446>>3];
              HEAPF64[$this>>3] = $7447;
              $7448 = (($cj0array467) + ($ij0470$0958<<3)|0);
              $7449 = +HEAPF64[$7448>>3];
              HEAPF64[$405>>3] = $7449;
              $7450 = (($sj0array468) + ($ij0470$0958<<3)|0);
              $7451 = +HEAPF64[$7450>>3];
              HEAPF64[$406>>3] = $7451;
              $7452 = +HEAPF64[$this>>3];
              $7453 = (+__Z5IKcosd($7452));
              $7454 = (+__Z5IKsind($7452));
              $7455 = +HEAPF64[$43>>3];
              $7456 = +HEAPF64[$45>>3];
              $7457 = $7453 * $7456;
              $7458 = $7454 * $7456;
              $7459 = $7454 * $7455;
              $7460 = $7457 - $7459;
              $7461 = +HEAPF64[$24>>3];
              $7462 = $7455 * $7461;
              $7463 = $7453 * $7462;
              $7464 = +HEAPF64[$23>>3];
              $7465 = $7454 * $7464;
              $7466 = $7455 * $7465;
              $7467 = $7463 - $7466;
              $7468 = $7457 * $7464;
              $7469 = $7468 + $7467;
              $7470 = $7461 * $7458;
              $7471 = $7470 + $7469;
              $7472 = (+__Z5IKabsd($7460));
              $7473 = $7472 > 5.0000000000000004E-6;
              if ($7473) {
               break;
              }
              $7474 = $7453 * $7455;
              $7475 = -$7474;
              $7476 = $7475 - $7458;
              $7477 = (+__Z5IKabsd($7476));
              $7478 = $7477 > 5.0000000000000004E-6;
              if ($7478) {
               break;
              }
              $7479 = (+__Z5IKabsd($7471));
              $7480 = $7479 > 5.0000000000000004E-6;
              if ($7480) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $7481 = (($ij0470$0958) + 1)|0;
            $exitcond1391 = ($7481|0)==(2);
            if ($exitcond1391) {
             break L484;
            } else {
             $ij0470$0958 = $7481;
            }
           }
          }
         } while(0);
         $7659 = +HEAPF64[$73>>3];
         $7660 = $7659 * 0.27650000000000002;
         $7661 = +HEAPF64[$60>>3];
         $7662 = +HEAPF64[$22>>3];
         $7663 = $7662 + -1.5707963267949001;
         $7664 = (+__Z5IKabsd($7663));
         $7665 = $7664 + 3.14159265358979;
         $7666 = (+__Z6IKfmoddd($7665,6.2831853071795898));
         $7667 = $7666 + -3.14159265358979;
         $7668 = +HEAPF64[$47>>3];
         $7669 = -0.32800000000000001 - $7668;
         $7670 = $7669 - $7660;
         $7671 = $7668 + 0.32800000000000001;
         $7672 = $7660 + $7671;
         $7673 = $7668 * 0.65600000000000003;
         $7674 = -0.03113175 - $7673;
         $7675 = $7674 - $7661;
         $7676 = (+__Z5IKabsd($7667));
         $7677 = $7676 < 9.9999999999999995E-7;
         do {
          if ($7677) {
           $7678 = $7659 * 0.18138399999999999;
           $7679 = $7678 + 0.18403625000000001;
           $7680 = $7679 - $7661;
           $7681 = (+__Z5IKabsd($7680));
           $7682 = $7681 < 9.9999999999999995E-7;
           if (!($7682)) {
            break;
           }
           $7683 = (+__Z5IKabsd($7670));
           $7684 = $7683 < 9.9999999999999995E-7;
           if (!($7684)) {
            break;
           }
           $7685 = (+__Z5IKabsd($7672));
           $7686 = $7685 < 9.9999999999999995E-7;
           if (!($7686)) {
            break;
           }
           $7687 = (+__Z5IKabsd($7675));
           $7688 = $7687 < 9.9999999999999995E-7;
           if (!($7688)) {
            break;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           $7689 = +HEAPF64[$47>>3];
           $7690 = $7689 * $7689;
           $7691 = +HEAPF64[$60>>3];
           $7692 = $7691 - $7690;
           $7693 = +HEAPF64[$74>>3];
           $7694 = (+__Z5IKabsd($7692));
           $7695 = $7694 < 9.9999999999999995E-7;
           do {
            if (!($7695)) {
             $7696 = $7691 * 2000.0;
             $7697 = $7690 * 2000.0;
             $7698 = $7696 - $7697;
             $7699 = (+__Z6IKsignd($7698));
             $7700 = (+__Z5IKabsd($7699));
             $7701 = $7700 < 9.9999999999999995E-7;
             if ($7701) {
              break;
             }
             $7702 = (+__Z5IKabsd(305809.0));
             $7703 = $7702 < 9.9999999999999995E-7;
             if ($7703) {
              break;
             }
             $7704 = (+__Z5IKabsd($7693));
             $7705 = $7704 < 9.9999999999999995E-7;
             if ($7705) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $7867 = +HEAPF64[$60>>3];
             $7868 = $7867 * 2000.0;
             $7869 = +HEAPF64[$47>>3];
             $7870 = $7869 * $7869;
             $7871 = $7870 * 2000.0;
             $7872 = $7868 - $7871;
             $7873 = (+__Z6IKsignd($7872));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x985,$7873,-1);
             $7874 = HEAP8[$435>>0]|0;
             $7875 = ($7874<<24>>24)==(0);
             if ($7875) {
              break L484;
             }
             $7876 = +HEAPF64[$43>>3];
             $7877 = $7876 * 553.0;
             $7878 = +HEAPF64[$74>>3];
             $7879 = $7877 * $7878;
             $7880 = +HEAPF64[$45>>3];
             $7881 = $7880 * -553.0;
             $7882 = $7878 * $7881;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x986,$7879,$7882,1.9999999999999999E-6);
             $7883 = HEAP8[$436>>0]|0;
             $7884 = ($7883<<24>>24)==(0);
             if ($7884) {
              break L484;
             }
             $7885 = +HEAPF64[$x985>>3];
             $7886 = $7885 * 1.5707963267949001;
             $7887 = $7886 + -1.5707963267949001;
             $7888 = +HEAPF64[$x986>>3];
             $7889 = $7888 + $7887;
             $7890 = (+__Z5IKsind($7889));
             $7891 = (+__Z5IKcosd($7889));
             $7892 = $7889 > 3.14159265358979;
             do {
              if ($7892) {
               $7893 = $7889 + -6.2831853071795898;
               $7896 = $7893;
              } else {
               $7894 = $7889 < -3.14159265358979;
               if (!($7894)) {
                $7896 = $7889;
                break;
               }
               $7895 = $7889 + 6.2831853071795898;
               $7896 = $7895;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $7896;
             HEAPF64[$437>>3] = $7891;
             HEAPF64[$438>>3] = $7890;
             $7897 = +HEAPF64[$this>>3];
             $7898 = (+__Z5IKcosd($7897));
             $7899 = (+__Z5IKsind($7897));
             $7900 = +HEAPF64[$43>>3];
             $7901 = +HEAPF64[$45>>3];
             $7902 = $7899 * $7901;
             $7903 = $7898 * $7900;
             $7904 = -$7903;
             $7905 = $7904 - $7902;
             $7906 = (+__Z5IKabsd($7905));
             $7907 = $7906 > 5.0000000000000004E-6;
             if ($7907) {
              break L484;
             }
             $7908 = +HEAPF64[$74>>3];
             $7909 = $7908 * 0.27650000000000002;
             $7910 = $7899 * $7900;
             $7911 = $7909 - $7910;
             $7912 = $7898 * $7901;
             $7913 = $7912 + $7911;
             $7914 = (+__Z5IKabsd($7913));
             $7915 = $7914 > 5.0000000000000004E-6;
             if ($7915) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $7706 = +HEAPF64[$60>>3];
           $7707 = +HEAPF64[$7>>3];
           $7708 = (+__Z5IKabsd($7707));
           $7709 = $7708 + 3.14159265358979;
           $7710 = (+__Z6IKfmoddd($7709,6.2831853071795898));
           $7711 = $7710 + -3.14159265358979;
           $7712 = +HEAPF64[$47>>3];
           $7713 = -0.60450000000000004 - $7712;
           $7714 = $7712 * 0.65600000000000003;
           $7715 = -0.03113175 - $7714;
           $7716 = $7715 - $7706;
           $7717 = (+__Z5IKabsd($7711));
           $7718 = $7717 < 9.9999999999999995E-7;
           do {
            if ($7718) {
             $7719 = 0.36542025 - $7706;
             $7720 = (+__Z5IKabsd($7719));
             $7721 = $7720 < 9.9999999999999995E-7;
             if (!($7721)) {
              break;
             }
             $7722 = (+__Z5IKabsd($7713));
             $7723 = $7722 < 9.9999999999999995E-7;
             if (!($7723)) {
              break;
             }
             $7724 = (+__Z5IKabsd($7716));
             $7725 = $7724 < 9.9999999999999995E-7;
             if (!($7725)) {
              break;
             }
             HEAPF64[$216>>3] = 0.0;
             HEAPF64[$215>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$74>>3] = 0.0;
             HEAPF64[$73>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $7726 = +HEAPF64[$43>>3];
             $7727 = (+__Z5IKabsd($7726));
             $7728 = +HEAPF64[$45>>3];
             $7729 = (+__Z5IKabsd($7728));
             $7730 = $7727 + $7729;
             $7731 = (+__Z5IKabsd($7730));
             $7732 = $7731 < 9.9999999999999995E-7;
             if ($7732) {
              break L484;
             }
             HEAP16[$j0valid495>>1] = 0;
             HEAP8[$2>>0] = 2;
             $7733 = +HEAPF64[$45>>3];
             $7734 = +HEAPF64[$43>>3];
             $7735 = -$7734;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x981,$7733,$7735,1.9999999999999999E-6);
             $7736 = HEAP8[$421>>0]|0;
             $7737 = ($7736<<24>>24)==(0);
             if ($7737) {
              break L484;
             }
             $7738 = +HEAPF64[$x981>>3];
             $7739 = -$7738;
             HEAPF64[$j0array492>>3] = $7739;
             $7740 = (+__Z5IKsind($7739));
             HEAPF64[$sj0array494>>3] = $7740;
             $7741 = (+__Z5IKcosd($7739));
             HEAPF64[$cj0array493>>3] = $7741;
             $7742 = 3.14159265358979 - $7738;
             HEAPF64[$422>>3] = $7742;
             $7743 = (+__Z5IKsind($7742));
             HEAPF64[$423>>3] = $7743;
             $7744 = +HEAPF64[$422>>3];
             $7745 = (+__Z5IKcosd($7744));
             HEAPF64[$424>>3] = $7745;
             $7746 = +HEAPF64[$j0array492>>3];
             $7747 = $7746 > 3.14159265358979;
             do {
              if ($7747) {
               $7748 = $7746 + -6.2831853071795898;
               HEAPF64[$j0array492>>3] = $7748;
              } else {
               $7749 = $7746 < -3.14159265358979;
               if (!($7749)) {
                break;
               }
               $7750 = $7746 + 6.2831853071795898;
               HEAPF64[$j0array492>>3] = $7750;
              }
             } while(0);
             HEAP8[$j0valid495>>0] = 1;
             $7751 = +HEAPF64[$422>>3];
             $7752 = $7751 > 3.14159265358979;
             do {
              if ($7752) {
               $7753 = $7751 + -6.2831853071795898;
               HEAPF64[$422>>3] = $7753;
              } else {
               $7754 = $7751 < -3.14159265358979;
               if (!($7754)) {
                break;
               }
               $7755 = $7751 + 6.2831853071795898;
               HEAPF64[$422>>3] = $7755;
              }
             } while(0);
             HEAP8[$425>>0] = 1;
             $7756 = HEAP8[$j0valid495>>0]|0;
             $7757 = ($7756<<24>>24)==(0);
             do {
              if (!($7757)) {
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               $7758 = HEAP8[$879>>0]|0;
               $7759 = ($7758<<24>>24)==(0);
               do {
                if (!($7759)) {
                 $7760 = +HEAPF64[$cj0array493>>3];
                 $7761 = +HEAPF64[$880>>3];
                 $7762 = $7760 - $7761;
                 $7763 = (+__Z5IKabsd($7762));
                 $7764 = $7763 < 9.9999999999999995E-7;
                 if (!($7764)) {
                  break;
                 }
                 $7765 = +HEAPF64[$sj0array494>>3];
                 $7766 = +HEAPF64[$881>>3];
                 $7767 = $7765 - $7766;
                 $7768 = (+__Z5IKabsd($7767));
                 $7769 = $7768 < 9.9999999999999995E-7;
                 if (!($7769)) {
                  break;
                 }
                 HEAP8[$879>>0] = 0;
                 HEAP8[$1>>0] = 1;
                }
               } while(0);
               $7770 = +HEAPF64[$j0array492>>3];
               HEAPF64[$this>>3] = $7770;
               $7771 = +HEAPF64[$cj0array493>>3];
               HEAPF64[$426>>3] = $7771;
               $7772 = +HEAPF64[$sj0array494>>3];
               HEAPF64[$427>>3] = $7772;
               $7773 = +HEAPF64[$45>>3];
               $7774 = +HEAPF64[$this>>3];
               $7775 = (+__Z5IKsind($7774));
               $7776 = $7773 * $7775;
               $7777 = +HEAPF64[$43>>3];
               $7778 = (+__Z5IKcosd($7774));
               $7779 = $7777 * $7778;
               $7780 = -$7779;
               $7781 = $7780 - $7776;
               $7782 = (+__Z5IKabsd($7781));
               $7783 = $7782 > 5.0000000000000004E-6;
               if ($7783) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $7784 = HEAP8[$875>>0]|0;
             $7785 = ($7784<<24>>24)==(0);
             if ($7785) {
              break L484;
             }
             HEAP8[$0>>0] = 1;
             HEAP8[$1>>0] = -1;
             $11950 = +HEAPF64[$876>>3];
             HEAPF64[$this>>3] = $11950;
             $11951 = +HEAPF64[$877>>3];
             HEAPF64[$426>>3] = $11951;
             $11952 = +HEAPF64[$878>>3];
             HEAPF64[$427>>3] = $11952;
             $11953 = +HEAPF64[$45>>3];
             $11954 = +HEAPF64[$this>>3];
             $11955 = (+__Z5IKsind($11954));
             $11956 = $11953 * $11955;
             $11957 = +HEAPF64[$43>>3];
             $11958 = (+__Z5IKcosd($11954));
             $11959 = $11957 * $11958;
             $11960 = -$11959;
             $11961 = $11960 - $11956;
             $11962 = (+__Z5IKabsd($11961));
             $11963 = $11962 > 5.0000000000000004E-6;
             if ($11963) {
              break L484;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L484;
            }
           } while(0);
           $7786 = +HEAPF64[$60>>3];
           $7787 = +HEAPF64[$7>>3];
           $7788 = $7787 + -3.14159265358979;
           $7789 = (+__Z5IKabsd($7788));
           $7790 = $7789 + 3.14159265358979;
           $7791 = (+__Z6IKfmoddd($7790,6.2831853071795898));
           $7792 = $7791 + -3.14159265358979;
           $7793 = +HEAPF64[$47>>3];
           $7794 = -0.051499999999999997 - $7793;
           $7795 = -0.03113175 - $7786;
           $7796 = $7793 * 0.65600000000000003;
           $7797 = $7795 - $7796;
           $7798 = (+__Z5IKabsd($7792));
           $7799 = $7798 < 9.9999999999999995E-7;
           if (!($7799)) {
            break L484;
           }
           $7800 = 0.0026522500000000001 - $7786;
           $7801 = (+__Z5IKabsd($7800));
           $7802 = $7801 < 9.9999999999999995E-7;
           if (!($7802)) {
            break L484;
           }
           $7803 = (+__Z5IKabsd($7794));
           $7804 = $7803 < 9.9999999999999995E-7;
           if (!($7804)) {
            break L484;
           }
           $7805 = (+__Z5IKabsd($7797));
           $7806 = $7805 < 9.9999999999999995E-7;
           if (!($7806)) {
            break L484;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = -1.0;
           HEAPF64[$7>>3] = 3.14159265358979;
           $7807 = +HEAPF64[$43>>3];
           $7808 = (+__Z5IKabsd($7807));
           $7809 = +HEAPF64[$45>>3];
           $7810 = (+__Z5IKabsd($7809));
           $7811 = $7808 + $7810;
           $7812 = (+__Z5IKabsd($7811));
           $7813 = $7812 < 9.9999999999999995E-7;
           if ($7813) {
            break L484;
           }
           HEAP16[$j0valid504>>1] = 0;
           HEAP8[$2>>0] = 2;
           $7814 = +HEAPF64[$45>>3];
           $7815 = +HEAPF64[$43>>3];
           $7816 = -$7815;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x984,$7814,$7816,1.9999999999999999E-6);
           $7817 = HEAP8[$428>>0]|0;
           $7818 = ($7817<<24>>24)==(0);
           if ($7818) {
            break L484;
           }
           $7819 = +HEAPF64[$x984>>3];
           $7820 = -$7819;
           HEAPF64[$j0array501>>3] = $7820;
           $7821 = (+__Z5IKsind($7820));
           HEAPF64[$sj0array503>>3] = $7821;
           $7822 = (+__Z5IKcosd($7820));
           HEAPF64[$cj0array502>>3] = $7822;
           $7823 = 3.14159265358979 - $7819;
           HEAPF64[$429>>3] = $7823;
           $7824 = (+__Z5IKsind($7823));
           HEAPF64[$430>>3] = $7824;
           $7825 = +HEAPF64[$429>>3];
           $7826 = (+__Z5IKcosd($7825));
           HEAPF64[$431>>3] = $7826;
           $7827 = +HEAPF64[$j0array501>>3];
           $7828 = $7827 > 3.14159265358979;
           do {
            if ($7828) {
             $7829 = $7827 + -6.2831853071795898;
             HEAPF64[$j0array501>>3] = $7829;
            } else {
             $7830 = $7827 < -3.14159265358979;
             if (!($7830)) {
              break;
             }
             $7831 = $7827 + 6.2831853071795898;
             HEAPF64[$j0array501>>3] = $7831;
            }
           } while(0);
           HEAP8[$j0valid504>>0] = 1;
           $7832 = +HEAPF64[$429>>3];
           $7833 = $7832 > 3.14159265358979;
           do {
            if ($7833) {
             $7834 = $7832 + -6.2831853071795898;
             HEAPF64[$429>>3] = $7834;
            } else {
             $7835 = $7832 < -3.14159265358979;
             if (!($7835)) {
              break;
             }
             $7836 = $7832 + 6.2831853071795898;
             HEAPF64[$429>>3] = $7836;
            }
           } while(0);
           HEAP8[$432>>0] = 1;
           $7837 = HEAP8[$j0valid504>>0]|0;
           $7838 = ($7837<<24>>24)==(0);
           do {
            if (!($7838)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $7839 = HEAP8[$886>>0]|0;
             $7840 = ($7839<<24>>24)==(0);
             do {
              if (!($7840)) {
               $7841 = +HEAPF64[$cj0array502>>3];
               $7842 = +HEAPF64[$887>>3];
               $7843 = $7841 - $7842;
               $7844 = (+__Z5IKabsd($7843));
               $7845 = $7844 < 9.9999999999999995E-7;
               if (!($7845)) {
                break;
               }
               $7846 = +HEAPF64[$sj0array503>>3];
               $7847 = +HEAPF64[$888>>3];
               $7848 = $7846 - $7847;
               $7849 = (+__Z5IKabsd($7848));
               $7850 = $7849 < 9.9999999999999995E-7;
               if (!($7850)) {
                break;
               }
               HEAP8[$886>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $7851 = +HEAPF64[$j0array501>>3];
             HEAPF64[$this>>3] = $7851;
             $7852 = +HEAPF64[$cj0array502>>3];
             HEAPF64[$433>>3] = $7852;
             $7853 = +HEAPF64[$sj0array503>>3];
             HEAPF64[$434>>3] = $7853;
             $7854 = +HEAPF64[$45>>3];
             $7855 = +HEAPF64[$this>>3];
             $7856 = (+__Z5IKsind($7855));
             $7857 = $7854 * $7856;
             $7858 = +HEAPF64[$43>>3];
             $7859 = (+__Z5IKcosd($7855));
             $7860 = $7858 * $7859;
             $7861 = -$7860;
             $7862 = $7861 - $7857;
             $7863 = (+__Z5IKabsd($7862));
             $7864 = $7863 > 5.0000000000000004E-6;
             if ($7864) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $7865 = HEAP8[$882>>0]|0;
           $7866 = ($7865<<24>>24)==(0);
           if ($7866) {
            break L484;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $11936 = +HEAPF64[$883>>3];
           HEAPF64[$this>>3] = $11936;
           $11937 = +HEAPF64[$884>>3];
           HEAPF64[$433>>3] = $11937;
           $11938 = +HEAPF64[$885>>3];
           HEAPF64[$434>>3] = $11938;
           $11939 = +HEAPF64[$45>>3];
           $11940 = +HEAPF64[$this>>3];
           $11941 = (+__Z5IKsind($11940));
           $11942 = $11939 * $11941;
           $11943 = +HEAPF64[$43>>3];
           $11944 = (+__Z5IKcosd($11940));
           $11945 = $11943 * $11944;
           $11946 = -$11945;
           $11947 = $11946 - $11942;
           $11948 = (+__Z5IKabsd($11947));
           $11949 = $11948 > 5.0000000000000004E-6;
           if ($11949) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         $7916 = +HEAPF64[$73>>3];
         $7917 = $7916 * 0.27650000000000002;
         $7918 = +HEAPF64[$60>>3];
         $7919 = +HEAPF64[$22>>3];
         $7920 = $7919 + 1.5707963267949001;
         $7921 = (+__Z5IKabsd($7920));
         $7922 = $7921 + 3.14159265358979;
         $7923 = (+__Z6IKfmoddd($7922,6.2831853071795898));
         $7924 = $7923 + -3.14159265358979;
         $7925 = +HEAPF64[$47>>3];
         $7926 = -0.32800000000000001 - $7925;
         $7927 = $7926 - $7917;
         $7928 = $7925 + 0.32800000000000001;
         $7929 = $7917 + $7928;
         $7930 = $7925 * 0.65600000000000003;
         $7931 = -0.03113175 - $7930;
         $7932 = $7931 - $7918;
         $7933 = (+__Z5IKabsd($7924));
         $7934 = $7933 < 9.9999999999999995E-7;
         if (!($7934)) {
          break;
         }
         $7935 = $7916 * 0.18138399999999999;
         $7936 = $7935 + 0.18403625000000001;
         $7937 = $7936 - $7918;
         $7938 = (+__Z5IKabsd($7937));
         $7939 = $7938 < 9.9999999999999995E-7;
         if (!($7939)) {
          break;
         }
         $7940 = (+__Z5IKabsd($7927));
         $7941 = $7940 < 9.9999999999999995E-7;
         if (!($7941)) {
          break;
         }
         $7942 = (+__Z5IKabsd($7929));
         $7943 = $7942 < 9.9999999999999995E-7;
         if (!($7943)) {
          break;
         }
         $7944 = (+__Z5IKabsd($7932));
         $7945 = $7944 < 9.9999999999999995E-7;
         if (!($7945)) {
          break;
         }
         HEAPF64[$216>>3] = 0.0;
         HEAPF64[$215>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         HEAPF64[$24>>3] = -1.0;
         HEAPF64[$23>>3] = 0.0;
         HEAPF64[$22>>3] = -1.5707963267949001;
         $7946 = +HEAPF64[$47>>3];
         $7947 = $7946 * $7946;
         $7948 = +HEAPF64[$60>>3];
         $7949 = $7947 - $7948;
         $7950 = +HEAPF64[$74>>3];
         $7951 = (+__Z5IKabsd($7949));
         $7952 = $7951 < 9.9999999999999995E-7;
         do {
          if (!($7952)) {
           $7953 = $7947 * 2000.0;
           $7954 = $7948 * 2000.0;
           $7955 = $7953 - $7954;
           $7956 = (+__Z6IKsignd($7955));
           $7957 = (+__Z5IKabsd($7956));
           $7958 = $7957 < 9.9999999999999995E-7;
           if ($7958) {
            break;
           }
           $7959 = (+__Z5IKabsd(305809.0));
           $7960 = $7959 < 9.9999999999999995E-7;
           if ($7960) {
            break;
           }
           $7961 = (+__Z5IKabsd($7950));
           $7962 = $7961 < 9.9999999999999995E-7;
           if ($7962) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $8124 = +HEAPF64[$47>>3];
           $8125 = $8124 * $8124;
           $8126 = $8125 * 2000.0;
           $8127 = +HEAPF64[$60>>3];
           $8128 = $8127 * 2000.0;
           $8129 = $8126 - $8128;
           $8130 = (+__Z6IKsignd($8129));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x999,$8130,-1);
           $8131 = HEAP8[$453>>0]|0;
           $8132 = ($8131<<24>>24)==(0);
           if ($8132) {
            break L484;
           }
           $8133 = +HEAPF64[$43>>3];
           $8134 = $8133 * 553.0;
           $8135 = +HEAPF64[$74>>3];
           $8136 = $8134 * $8135;
           $8137 = +HEAPF64[$45>>3];
           $8138 = $8137 * -553.0;
           $8139 = $8135 * $8138;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1000,$8136,$8139,1.9999999999999999E-6);
           $8140 = HEAP8[$454>>0]|0;
           $8141 = ($8140<<24>>24)==(0);
           if ($8141) {
            break L484;
           }
           $8142 = +HEAPF64[$x999>>3];
           $8143 = $8142 * 1.5707963267949001;
           $8144 = $8143 + -1.5707963267949001;
           $8145 = +HEAPF64[$x1000>>3];
           $8146 = $8145 + $8144;
           $8147 = (+__Z5IKsind($8146));
           $8148 = (+__Z5IKcosd($8146));
           $8149 = $8146 > 3.14159265358979;
           do {
            if ($8149) {
             $8150 = $8146 + -6.2831853071795898;
             $8153 = $8150;
            } else {
             $8151 = $8146 < -3.14159265358979;
             if (!($8151)) {
              $8153 = $8146;
              break;
             }
             $8152 = $8146 + 6.2831853071795898;
             $8153 = $8152;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $8153;
           HEAPF64[$455>>3] = $8148;
           HEAPF64[$456>>3] = $8147;
           $8154 = +HEAPF64[$this>>3];
           $8155 = (+__Z5IKcosd($8154));
           $8156 = (+__Z5IKsind($8154));
           $8157 = +HEAPF64[$43>>3];
           $8158 = +HEAPF64[$45>>3];
           $8159 = $8156 * $8158;
           $8160 = $8155 * $8157;
           $8161 = -$8160;
           $8162 = $8161 - $8159;
           $8163 = (+__Z5IKabsd($8162));
           $8164 = $8163 > 5.0000000000000004E-6;
           if ($8164) {
            break L484;
           }
           $8165 = +HEAPF64[$74>>3];
           $8166 = $8165 * 0.27650000000000002;
           $8167 = $8155 * $8158;
           $8168 = $8167 - $8166;
           $8169 = $8156 * $8157;
           $8170 = $8168 - $8169;
           $8171 = (+__Z5IKabsd($8170));
           $8172 = $8171 > 5.0000000000000004E-6;
           if ($8172) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         $7963 = +HEAPF64[$60>>3];
         $7964 = +HEAPF64[$7>>3];
         $7965 = (+__Z5IKabsd($7964));
         $7966 = $7965 + 3.14159265358979;
         $7967 = (+__Z6IKfmoddd($7966,6.2831853071795898));
         $7968 = $7967 + -3.14159265358979;
         $7969 = +HEAPF64[$47>>3];
         $7970 = -0.60450000000000004 - $7969;
         $7971 = $7969 * 0.65600000000000003;
         $7972 = -0.03113175 - $7971;
         $7973 = $7972 - $7963;
         $7974 = (+__Z5IKabsd($7968));
         $7975 = $7974 < 9.9999999999999995E-7;
         do {
          if ($7975) {
           $7976 = 0.36542025 - $7963;
           $7977 = (+__Z5IKabsd($7976));
           $7978 = $7977 < 9.9999999999999995E-7;
           if (!($7978)) {
            break;
           }
           $7979 = (+__Z5IKabsd($7970));
           $7980 = $7979 < 9.9999999999999995E-7;
           if (!($7980)) {
            break;
           }
           $7981 = (+__Z5IKabsd($7973));
           $7982 = $7981 < 9.9999999999999995E-7;
           if (!($7982)) {
            break;
           }
           HEAPF64[$216>>3] = 0.0;
           HEAPF64[$215>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$74>>3] = 0.0;
           HEAPF64[$73>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $7983 = +HEAPF64[$43>>3];
           $7984 = (+__Z5IKabsd($7983));
           $7985 = +HEAPF64[$45>>3];
           $7986 = (+__Z5IKabsd($7985));
           $7987 = $7984 + $7986;
           $7988 = (+__Z5IKabsd($7987));
           $7989 = $7988 < 9.9999999999999995E-7;
           if ($7989) {
            break L484;
           }
           HEAP16[$j0valid524>>1] = 0;
           HEAP8[$2>>0] = 2;
           $7990 = +HEAPF64[$45>>3];
           $7991 = +HEAPF64[$43>>3];
           $7992 = -$7991;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x995,$7990,$7992,1.9999999999999999E-6);
           $7993 = HEAP8[$439>>0]|0;
           $7994 = ($7993<<24>>24)==(0);
           if ($7994) {
            break L484;
           }
           $7995 = +HEAPF64[$x995>>3];
           $7996 = -$7995;
           HEAPF64[$j0array521>>3] = $7996;
           $7997 = (+__Z5IKsind($7996));
           HEAPF64[$sj0array523>>3] = $7997;
           $7998 = (+__Z5IKcosd($7996));
           HEAPF64[$cj0array522>>3] = $7998;
           $7999 = 3.14159265358979 - $7995;
           HEAPF64[$440>>3] = $7999;
           $8000 = (+__Z5IKsind($7999));
           HEAPF64[$441>>3] = $8000;
           $8001 = +HEAPF64[$440>>3];
           $8002 = (+__Z5IKcosd($8001));
           HEAPF64[$442>>3] = $8002;
           $8003 = +HEAPF64[$j0array521>>3];
           $8004 = $8003 > 3.14159265358979;
           do {
            if ($8004) {
             $8005 = $8003 + -6.2831853071795898;
             HEAPF64[$j0array521>>3] = $8005;
            } else {
             $8006 = $8003 < -3.14159265358979;
             if (!($8006)) {
              break;
             }
             $8007 = $8003 + 6.2831853071795898;
             HEAPF64[$j0array521>>3] = $8007;
            }
           } while(0);
           HEAP8[$j0valid524>>0] = 1;
           $8008 = +HEAPF64[$440>>3];
           $8009 = $8008 > 3.14159265358979;
           do {
            if ($8009) {
             $8010 = $8008 + -6.2831853071795898;
             HEAPF64[$440>>3] = $8010;
            } else {
             $8011 = $8008 < -3.14159265358979;
             if (!($8011)) {
              break;
             }
             $8012 = $8008 + 6.2831853071795898;
             HEAPF64[$440>>3] = $8012;
            }
           } while(0);
           HEAP8[$443>>0] = 1;
           $8013 = HEAP8[$j0valid524>>0]|0;
           $8014 = ($8013<<24>>24)==(0);
           do {
            if (!($8014)) {
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             $8015 = HEAP8[$893>>0]|0;
             $8016 = ($8015<<24>>24)==(0);
             do {
              if (!($8016)) {
               $8017 = +HEAPF64[$cj0array522>>3];
               $8018 = +HEAPF64[$894>>3];
               $8019 = $8017 - $8018;
               $8020 = (+__Z5IKabsd($8019));
               $8021 = $8020 < 9.9999999999999995E-7;
               if (!($8021)) {
                break;
               }
               $8022 = +HEAPF64[$sj0array523>>3];
               $8023 = +HEAPF64[$895>>3];
               $8024 = $8022 - $8023;
               $8025 = (+__Z5IKabsd($8024));
               $8026 = $8025 < 9.9999999999999995E-7;
               if (!($8026)) {
                break;
               }
               HEAP8[$893>>0] = 0;
               HEAP8[$1>>0] = 1;
              }
             } while(0);
             $8027 = +HEAPF64[$j0array521>>3];
             HEAPF64[$this>>3] = $8027;
             $8028 = +HEAPF64[$cj0array522>>3];
             HEAPF64[$444>>3] = $8028;
             $8029 = +HEAPF64[$sj0array523>>3];
             HEAPF64[$445>>3] = $8029;
             $8030 = +HEAPF64[$45>>3];
             $8031 = +HEAPF64[$this>>3];
             $8032 = (+__Z5IKsind($8031));
             $8033 = $8030 * $8032;
             $8034 = +HEAPF64[$43>>3];
             $8035 = (+__Z5IKcosd($8031));
             $8036 = $8034 * $8035;
             $8037 = -$8036;
             $8038 = $8037 - $8033;
             $8039 = (+__Z5IKabsd($8038));
             $8040 = $8039 > 5.0000000000000004E-6;
             if ($8040) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $8041 = HEAP8[$889>>0]|0;
           $8042 = ($8041<<24>>24)==(0);
           if ($8042) {
            break L484;
           }
           HEAP8[$0>>0] = 1;
           HEAP8[$1>>0] = -1;
           $11922 = +HEAPF64[$890>>3];
           HEAPF64[$this>>3] = $11922;
           $11923 = +HEAPF64[$891>>3];
           HEAPF64[$444>>3] = $11923;
           $11924 = +HEAPF64[$892>>3];
           HEAPF64[$445>>3] = $11924;
           $11925 = +HEAPF64[$45>>3];
           $11926 = +HEAPF64[$this>>3];
           $11927 = (+__Z5IKsind($11926));
           $11928 = $11925 * $11927;
           $11929 = +HEAPF64[$43>>3];
           $11930 = (+__Z5IKcosd($11926));
           $11931 = $11929 * $11930;
           $11932 = -$11931;
           $11933 = $11932 - $11928;
           $11934 = (+__Z5IKabsd($11933));
           $11935 = $11934 > 5.0000000000000004E-6;
           if ($11935) {
            break L484;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L484;
          }
         } while(0);
         $8043 = +HEAPF64[$60>>3];
         $8044 = +HEAPF64[$7>>3];
         $8045 = $8044 + -3.14159265358979;
         $8046 = (+__Z5IKabsd($8045));
         $8047 = $8046 + 3.14159265358979;
         $8048 = (+__Z6IKfmoddd($8047,6.2831853071795898));
         $8049 = $8048 + -3.14159265358979;
         $8050 = +HEAPF64[$47>>3];
         $8051 = -0.051499999999999997 - $8050;
         $8052 = $8050 * 0.65600000000000003;
         $8053 = -0.03113175 - $8052;
         $8054 = $8053 - $8043;
         $8055 = (+__Z5IKabsd($8049));
         $8056 = $8055 < 9.9999999999999995E-7;
         if (!($8056)) {
          break;
         }
         $8057 = 0.0026522500000000001 - $8043;
         $8058 = (+__Z5IKabsd($8057));
         $8059 = $8058 < 9.9999999999999995E-7;
         if (!($8059)) {
          break;
         }
         $8060 = (+__Z5IKabsd($8051));
         $8061 = $8060 < 9.9999999999999995E-7;
         if (!($8061)) {
          break;
         }
         $8062 = (+__Z5IKabsd($8054));
         $8063 = $8062 < 9.9999999999999995E-7;
         if (!($8063)) {
          break;
         }
         HEAPF64[$216>>3] = 0.0;
         HEAPF64[$215>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         HEAPF64[$24>>3] = -1.0;
         HEAPF64[$23>>3] = 0.0;
         HEAPF64[$22>>3] = -1.5707963267949001;
         HEAPF64[$74>>3] = 0.0;
         HEAPF64[$73>>3] = -1.0;
         HEAPF64[$7>>3] = 3.14159265358979;
         $8064 = +HEAPF64[$43>>3];
         $8065 = (+__Z5IKabsd($8064));
         $8066 = +HEAPF64[$45>>3];
         $8067 = (+__Z5IKabsd($8066));
         $8068 = $8065 + $8067;
         $8069 = (+__Z5IKabsd($8068));
         $8070 = $8069 < 9.9999999999999995E-7;
         if ($8070) {
          break;
         }
         HEAP16[$j0valid533>>1] = 0;
         HEAP8[$2>>0] = 2;
         $8071 = +HEAPF64[$45>>3];
         $8072 = +HEAPF64[$43>>3];
         $8073 = -$8072;
         __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x998,$8071,$8073,1.9999999999999999E-6);
         $8074 = HEAP8[$446>>0]|0;
         $8075 = ($8074<<24>>24)==(0);
         if ($8075) {
          break;
         }
         $8076 = +HEAPF64[$x998>>3];
         $8077 = -$8076;
         HEAPF64[$j0array530>>3] = $8077;
         $8078 = (+__Z5IKsind($8077));
         HEAPF64[$sj0array532>>3] = $8078;
         $8079 = (+__Z5IKcosd($8077));
         HEAPF64[$cj0array531>>3] = $8079;
         $8080 = 3.14159265358979 - $8076;
         HEAPF64[$447>>3] = $8080;
         $8081 = (+__Z5IKsind($8080));
         HEAPF64[$448>>3] = $8081;
         $8082 = +HEAPF64[$447>>3];
         $8083 = (+__Z5IKcosd($8082));
         HEAPF64[$449>>3] = $8083;
         $8084 = +HEAPF64[$j0array530>>3];
         $8085 = $8084 > 3.14159265358979;
         do {
          if ($8085) {
           $8086 = $8084 + -6.2831853071795898;
           HEAPF64[$j0array530>>3] = $8086;
          } else {
           $8087 = $8084 < -3.14159265358979;
           if (!($8087)) {
            break;
           }
           $8088 = $8084 + 6.2831853071795898;
           HEAPF64[$j0array530>>3] = $8088;
          }
         } while(0);
         HEAP8[$j0valid533>>0] = 1;
         $8089 = +HEAPF64[$447>>3];
         $8090 = $8089 > 3.14159265358979;
         do {
          if ($8090) {
           $8091 = $8089 + -6.2831853071795898;
           HEAPF64[$447>>3] = $8091;
          } else {
           $8092 = $8089 < -3.14159265358979;
           if (!($8092)) {
            break;
           }
           $8093 = $8089 + 6.2831853071795898;
           HEAPF64[$447>>3] = $8093;
          }
         } while(0);
         HEAP8[$450>>0] = 1;
         $8094 = HEAP8[$j0valid533>>0]|0;
         $8095 = ($8094<<24>>24)==(0);
         do {
          if (!($8095)) {
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           $8096 = HEAP8[$900>>0]|0;
           $8097 = ($8096<<24>>24)==(0);
           do {
            if (!($8097)) {
             $8098 = +HEAPF64[$cj0array531>>3];
             $8099 = +HEAPF64[$901>>3];
             $8100 = $8098 - $8099;
             $8101 = (+__Z5IKabsd($8100));
             $8102 = $8101 < 9.9999999999999995E-7;
             if (!($8102)) {
              break;
             }
             $8103 = +HEAPF64[$sj0array532>>3];
             $8104 = +HEAPF64[$902>>3];
             $8105 = $8103 - $8104;
             $8106 = (+__Z5IKabsd($8105));
             $8107 = $8106 < 9.9999999999999995E-7;
             if (!($8107)) {
              break;
             }
             HEAP8[$900>>0] = 0;
             HEAP8[$1>>0] = 1;
            }
           } while(0);
           $8108 = +HEAPF64[$j0array530>>3];
           HEAPF64[$this>>3] = $8108;
           $8109 = +HEAPF64[$cj0array531>>3];
           HEAPF64[$451>>3] = $8109;
           $8110 = +HEAPF64[$sj0array532>>3];
           HEAPF64[$452>>3] = $8110;
           $8111 = +HEAPF64[$45>>3];
           $8112 = +HEAPF64[$this>>3];
           $8113 = (+__Z5IKsind($8112));
           $8114 = $8111 * $8113;
           $8115 = +HEAPF64[$43>>3];
           $8116 = (+__Z5IKcosd($8112));
           $8117 = $8115 * $8116;
           $8118 = -$8117;
           $8119 = $8118 - $8114;
           $8120 = (+__Z5IKabsd($8119));
           $8121 = $8120 > 5.0000000000000004E-6;
           if ($8121) {
            break;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          }
         } while(0);
         $8122 = HEAP8[$896>>0]|0;
         $8123 = ($8122<<24>>24)==(0);
         if ($8123) {
          break;
         }
         HEAP8[$0>>0] = 1;
         HEAP8[$1>>0] = -1;
         $11908 = +HEAPF64[$897>>3];
         HEAPF64[$this>>3] = $11908;
         $11909 = +HEAPF64[$898>>3];
         HEAPF64[$451>>3] = $11909;
         $11910 = +HEAPF64[$899>>3];
         HEAPF64[$452>>3] = $11910;
         $11911 = +HEAPF64[$45>>3];
         $11912 = +HEAPF64[$this>>3];
         $11913 = (+__Z5IKsind($11912));
         $11914 = $11911 * $11913;
         $11915 = +HEAPF64[$43>>3];
         $11916 = (+__Z5IKcosd($11912));
         $11917 = $11915 * $11916;
         $11918 = -$11917;
         $11919 = $11918 - $11914;
         $11920 = (+__Z5IKabsd($11919));
         $11921 = $11920 > 5.0000000000000004E-6;
         if ($11921) {
          break;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
        }
       } while(0);
       $8848 = (($ij1175$01079) + 1)|0;
       $exitcond1434 = ($8848|0)==(2);
       if ($exitcond1434) {
        break L8;
       } else {
        $ij1175$01079 = $8848;
       }
      }
     }
    }
    $966 = +HEAPF64[$24>>3];
    $967 = $966 * $966;
    $968 = +HEAPF64[$23>>3];
    $969 = $968 * $968;
    $970 = +HEAPF64[$45>>3];
    $971 = $970 * $970;
    $972 = +HEAPF64[$43>>3];
    $973 = $972 * $972;
    $974 = $970 * $971;
    $975 = $970 * $974;
    $976 = $966 * $967;
    $977 = $966 * $976;
    $978 = $968 * $969;
    $979 = $968 * $978;
    $980 = $970 * $972;
    $981 = $971 * $973;
    $982 = $967 * 2.0;
    $983 = $982 * $969;
    $984 = $969 * $971;
    $985 = $967 * $971;
    $986 = -$985;
    $987 = $986 - $984;
    $988 = (+__Z5IKabsd($987));
    $989 = $969 * $980;
    $990 = $967 * $980;
    $991 = $989 + $990;
    $992 = (+__Z5IKabsd($991));
    $993 = $988 + $992;
    $994 = (+__Z5IKabsd($993));
    $995 = $994 < 9.9999999999999995E-7;
    if (!($995)) {
     $996 = $983 * $975;
     $997 = $977 * $975;
     $998 = $996 + $997;
     $999 = $979 * $975;
     $1000 = $999 + $998;
     $1001 = $977 * $981;
     $1002 = $1001 + $1000;
     $1003 = $979 * $981;
     $1004 = $1003 + $1002;
     $1005 = $983 * $981;
     $1006 = $1005 + $1004;
     $1007 = (+__Z5IKabsd($1006));
     $1008 = $1007 < 9.9999999999999995E-7;
     if (!($1008)) {
      HEAP16[$j0valid>>1] = 0;
      HEAP8[$2>>0] = 2;
      $1009 = +HEAPF64[$45>>3];
      $1010 = $1009 * $1009;
      $1011 = +HEAPF64[$24>>3];
      $1012 = $1011 * $1011;
      $1013 = +HEAPF64[$23>>3];
      $1014 = $1013 * $1013;
      $1015 = +HEAPF64[$43>>3];
      $1016 = $1009 * $1015;
      $1017 = $1014 * $1016;
      $1018 = $1012 * $1016;
      $1019 = $1017 + $1018;
      $1020 = $1010 * $1014;
      $1021 = $1010 * $1012;
      $1022 = -$1021;
      $1023 = $1022 - $1020;
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x88,$1023,$1019,1.9999999999999999E-6);
      $1024 = HEAP8[$75>>0]|0;
      $1025 = ($1024<<24>>24)==(0);
      if (!($1025)) {
       $1026 = +HEAPF64[$x88>>3];
       $1027 = $1019 * $1019;
       $1028 = $1023 * $1023;
       $1029 = $1028 + $1027;
       $1030 = $1029 < -1.0000000000000001E-5;
       if (!($1030)) {
        $1031 = (+__Z6IKsqrtd($1029));
        $1032 = (+__Z5IKabsd($1031));
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x89,$1032,-1);
        $1033 = HEAP8[$76>>0]|0;
        $1034 = ($1033<<24>>24)==(0);
        if (!($1034)) {
         $1035 = +HEAPF64[$45>>3];
         $1036 = $1035 * 0.27650000000000002;
         $1037 = +HEAPF64[$24>>3];
         $1038 = $1036 * $1037;
         $1039 = +HEAPF64[$74>>3];
         $1040 = $1038 * $1039;
         $1041 = +HEAPF64[$x89>>3];
         $1042 = $1040 * $1041;
         $1043 = $1042 < -1.0000020000000001;
         $1044 = $1042 > 1.0000020000000001;
         $or$cond99 = $1043 | $1044;
         if (!($or$cond99)) {
          $1045 = (+__Z6IKasind($1042));
          $1046 = $1045 - $1026;
          HEAPF64[$j0array>>3] = $1046;
          $1047 = (+__Z5IKsind($1046));
          HEAPF64[$sj0array>>3] = $1047;
          $1048 = (+__Z5IKcosd($1046));
          HEAPF64[$cj0array>>3] = $1048;
          $1049 = 3.14159265358979 - $1045;
          $1050 = $1049 - $1026;
          HEAPF64[$77>>3] = $1050;
          $1051 = (+__Z5IKsind($1050));
          HEAPF64[$78>>3] = $1051;
          $1052 = +HEAPF64[$77>>3];
          $1053 = (+__Z5IKcosd($1052));
          HEAPF64[$79>>3] = $1053;
          $1054 = +HEAPF64[$j0array>>3];
          $1055 = $1054 > 3.14159265358979;
          if ($1055) {
           $1056 = $1054 + -6.2831853071795898;
           HEAPF64[$j0array>>3] = $1056;
          } else {
           $1057 = $1054 < -3.14159265358979;
           if ($1057) {
            $1058 = $1054 + 6.2831853071795898;
            HEAPF64[$j0array>>3] = $1058;
           }
          }
          HEAP8[$j0valid>>0] = 1;
          $1059 = +HEAPF64[$77>>3];
          $1060 = $1059 > 3.14159265358979;
          if ($1060) {
           $1061 = $1059 + -6.2831853071795898;
           HEAPF64[$77>>3] = $1061;
          } else {
           $1062 = $1059 < -3.14159265358979;
           if ($1062) {
            $1063 = $1059 + 6.2831853071795898;
            HEAPF64[$77>>3] = $1063;
           }
          }
          HEAP8[$80>>0] = 1;
          $ij0$01151 = 0;
          while(1) {
           $1064 = (($j0valid) + ($ij0$01151)|0);
           $1065 = HEAP8[$1064>>0]|0;
           $1066 = ($1065<<24>>24)==(0);
           L1637: do {
            if (!($1066)) {
             $1067 = $ij0$01151&255;
             HEAP8[$0>>0] = $1067;
             HEAP8[$1>>0] = -1;
             $iij0$01080 = (($ij0$01151) + 1)|0;
             $1068 = ($iij0$01080|0)<(2);
             do {
              if ($1068) {
               $1069 = (($sj0array) + ($ij0$01151<<3)|0);
               $1070 = (($j0valid) + ($iij0$01080)|0);
               $1071 = HEAP8[$1070>>0]|0;
               $1072 = ($1071<<24>>24)==(0);
               if ($1072) {
                break;
               }
               $1073 = (($cj0array) + ($ij0$01151<<3)|0);
               $1074 = +HEAPF64[$1073>>3];
               $1075 = (($cj0array) + ($iij0$01080<<3)|0);
               $1076 = +HEAPF64[$1075>>3];
               $1077 = $1074 - $1076;
               $1078 = (+__Z5IKabsd($1077));
               $1079 = $1078 < 9.9999999999999995E-7;
               if (!($1079)) {
                break;
               }
               $1080 = +HEAPF64[$1069>>3];
               $1081 = (($sj0array) + ($iij0$01080<<3)|0);
               $1082 = +HEAPF64[$1081>>3];
               $1083 = $1080 - $1082;
               $1084 = (+__Z5IKabsd($1083));
               $1085 = $1084 < 9.9999999999999995E-7;
               if (!($1085)) {
                break;
               }
               HEAP8[$1070>>0] = 0;
               $1086 = $iij0$01080&255;
               HEAP8[$1>>0] = $1086;
              }
             } while(0);
             $1087 = (($j0array) + ($ij0$01151<<3)|0);
             $1088 = +HEAPF64[$1087>>3];
             HEAPF64[$this>>3] = $1088;
             $1089 = (($cj0array) + ($ij0$01151<<3)|0);
             $1090 = +HEAPF64[$1089>>3];
             HEAPF64[$81>>3] = $1090;
             $1091 = (($sj0array) + ($ij0$01151<<3)|0);
             $1092 = +HEAPF64[$1091>>3];
             HEAPF64[$82>>3] = $1092;
             $1093 = +HEAPF64[$43>>3];
             $1094 = $1093 * $1093;
             $1095 = +HEAPF64[$this>>3];
             $1096 = (+__Z5IKsind($1095));
             $1097 = (+__Z5IKcosd($1095));
             $1098 = +HEAPF64[$23>>3];
             $1099 = $1098 * $1098;
             $1100 = +HEAPF64[$24>>3];
             $1101 = $1100 * $1100;
             $1102 = $1100 * 0.27650000000000002;
             $1103 = +HEAPF64[$74>>3];
             $1104 = $1102 * $1103;
             $1105 = $1093 * $1096;
             $1106 = +HEAPF64[$45>>3];
             $1107 = $1097 * $1106;
             $1108 = $1107 - $1105;
             $1109 = $1104 + $1108;
             $1110 = -$1106;
             $1111 = (+__Z5IKabsd($1109));
             $1112 = $1111 > 5.0000000000000004E-6;
             if (!($1112)) {
              $1113 = $1094 * $1099;
              $1114 = $1094 * $1101;
              $1115 = $1113 + $1114;
              $1116 = $1096 * $1115;
              $1117 = $1101 * $1110;
              $1118 = $1093 * $1117;
              $1119 = $1099 * $1110;
              $1120 = $1093 * $1119;
              $1121 = $1118 + $1120;
              $1122 = $1097 * $1121;
              $1123 = $1116 + $1122;
              $1124 = $1093 * $1104;
              $1125 = $1123 - $1124;
              $1126 = (+__Z5IKabsd($1125));
              $1127 = $1126 > 5.0000000000000004E-6;
              if ($1127) {
               break;
              }
              $1128 = $1092 * $1106;
              $1129 = +HEAPF64[$47>>3];
              $1130 = $1129 * 2000.0;
              $1131 = +HEAPF64[$81>>3];
              $1132 = $1093 * $1131;
              $1133 = +HEAPF64[$73>>3];
              $1134 = $1133 * 553.0;
              $1135 = $1098 * $1103;
              $1136 = -$1133;
              $1137 = $1128 * $1136;
              $1138 = $1132 * $1136;
              $1139 = $1137 + $1138;
              $1140 = $1135 * $1129;
              $1141 = $1140 + $1139;
              $1142 = $1132 * 1.1862567811934901;
              $1143 = $1141 - $1142;
              $1144 = $1128 * 1.1862567811934901;
              $1145 = $1143 - $1144;
              $1146 = -$1134;
              $1147 = $1133 * 152.90450000000001;
              $1148 = $1135 * $1147;
              $1149 = $1130 * $1132;
              $1150 = $1148 - $1149;
              $1151 = $1135 * 181.38399999999999;
              $1152 = $1151 + $1150;
              $1153 = $1128 * $1130;
              $1154 = $1152 - $1153;
              $1155 = (+__Z5IKabsd($1154));
              $1156 = $1129 * $1130;
              $1157 = 215.16800000000001 - $1156;
              $1158 = $1133 * $1133;
              $1159 = $1158 * 152.90450000000001;
              $1160 = $1157 + $1159;
              $1161 = $1133 * 362.76799999999997;
              $1162 = $1161 + $1160;
              $1163 = (+__Z5IKabsd($1162));
              $1164 = $1155 + $1163;
              $1165 = (+__Z5IKabsd($1145));
              $1166 = $1165 < 9.9999999999999995E-7;
              do {
               if (!($1166)) {
                $1167 = $1129 * 553.0;
                $1168 = $1135 * $1167;
                $1169 = $1128 * 656.0;
                $1170 = $1168 - $1169;
                $1171 = $1132 * 656.0;
                $1172 = $1170 - $1171;
                $1173 = $1128 * $1146;
                $1174 = $1172 + $1173;
                $1175 = $1132 * $1146;
                $1176 = $1175 + $1174;
                $1177 = (+__Z6IKsignd($1176));
                $1178 = (+__Z5IKabsd($1177));
                $1179 = $1178 < 9.9999999999999995E-7;
                if ($1179) {
                 break;
                }
                $1180 = (+__Z5IKabsd($1164));
                $1181 = $1180 < 9.9999999999999995E-7;
                if ($1181) {
                 break;
                }
                HEAP8[$6>>0] = 1;
                $3955 = +HEAPF64[$81>>3];
                $3956 = +HEAPF64[$43>>3];
                $3957 = $3955 * $3956;
                $3958 = +HEAPF64[$73>>3];
                $3959 = $3958 * 553.0;
                $3960 = +HEAPF64[$23>>3];
                $3961 = +HEAPF64[$74>>3];
                $3962 = $3960 * $3961;
                $3963 = +HEAPF64[$45>>3];
                $3964 = +HEAPF64[$82>>3];
                $3965 = $3963 * $3964;
                $3966 = +HEAPF64[$47>>3];
                $3967 = $3966 * 2000.0;
                $3968 = $3958 * $3958;
                $3969 = $3968 * 152.90450000000001;
                $3970 = $3969 + 215.16800000000001;
                $3971 = $3966 * $3967;
                $3972 = $3970 - $3971;
                $3973 = $3958 * 362.76799999999997;
                $3974 = $3973 + $3972;
                $3975 = $3958 * 152.90450000000001;
                $3976 = $3975 * $3962;
                $3977 = $3962 * 181.38399999999999;
                $3978 = $3976 + $3977;
                $3979 = -$3957;
                $3980 = $3967 * $3979;
                $3981 = $3978 + $3980;
                $3982 = $3965 * $3967;
                $3983 = $3981 - $3982;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x676,$3974,$3983,1.9999999999999999E-6);
                $3984 = HEAP8[$205>>0]|0;
                $3985 = ($3984<<24>>24)==(0);
                if ($3985) {
                 break L1637;
                }
                $3986 = $3965 * 656.0;
                $3987 = $3957 * -656.0;
                $3988 = $3987 - $3986;
                $3989 = $3959 * $3979;
                $3990 = $3989 + $3988;
                $3991 = $3959 * $3965;
                $3992 = $3990 - $3991;
                $3993 = +HEAPF64[$47>>3];
                $3994 = $3993 * 553.0;
                $3995 = $3962 * $3994;
                $3996 = $3992 + $3995;
                $3997 = (+__Z6IKsignd($3996));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x677,$3997,-1);
                $3998 = HEAP8[$206>>0]|0;
                $3999 = ($3998<<24>>24)==(0);
                if ($3999) {
                 break L1637;
                }
                $4000 = +HEAPF64[$x676>>3];
                $4001 = $4000 + -1.5707963267949001;
                $4002 = +HEAPF64[$x677>>3];
                $4003 = $4002 * 1.5707963267949001;
                $4004 = $4001 + $4003;
                $4005 = (+__Z5IKsind($4004));
                $4006 = (+__Z5IKcosd($4004));
                $4007 = $4004 > 3.14159265358979;
                do {
                 if ($4007) {
                  $4008 = $4004 + -6.2831853071795898;
                  $4011 = $4008;
                 } else {
                  $4009 = $4004 < -3.14159265358979;
                  if (!($4009)) {
                   $4011 = $4004;
                   break;
                  }
                  $4010 = $4004 + 6.2831853071795898;
                  $4011 = $4010;
                 }
                } while(0);
                HEAP8[$4>>0] = 0;
                HEAP8[$5>>0] = -1;
                HEAPF64[$3>>3] = $4011;
                HEAPF64[$207>>3] = $4006;
                HEAPF64[$208>>3] = $4005;
                $4012 = +HEAPF64[$3>>3];
                $4013 = (+__Z5IKcosd($4012));
                $4014 = (+__Z5IKsind($4012));
                $4015 = +HEAPF64[$73>>3];
                $4016 = $4015 * 0.27650000000000002;
                $4017 = +HEAPF64[$81>>3];
                $4018 = +HEAPF64[$43>>3];
                $4019 = $4017 * $4018;
                $4020 = +HEAPF64[$82>>3];
                $4021 = +HEAPF64[$45>>3];
                $4022 = $4020 * $4021;
                $4023 = +HEAPF64[$47>>3];
                $4024 = +HEAPF64[$74>>3];
                $4025 = $4024 * 0.27650000000000002;
                $4026 = $4017 * $4021;
                $4027 = $4014 * 0.65600000000000003;
                $4028 = $4013 * $4021;
                $4029 = +HEAPF64[$23>>3];
                $4030 = $4014 * $4029;
                $4031 = $4013 * $4016;
                $4032 = $4031 - $4023;
                $4033 = -$4025;
                $4034 = $4030 * $4033;
                $4035 = $4032 + $4034;
                $4036 = $4013 * 0.32800000000000001;
                $4037 = $4036 + $4035;
                $4038 = $4027 * $4019;
                $4039 = -0.03113175 - $4038;
                $4040 = +HEAPF64[$60>>3];
                $4041 = $4039 - $4040;
                $4042 = $4023 * 0.65600000000000003;
                $4043 = $4013 * $4042;
                $4044 = $4043 + $4041;
                $4045 = $4027 * $4022;
                $4046 = $4044 - $4045;
                $4047 = $4014 * -0.32800000000000001;
                $4048 = $4014 * $4016;
                $4049 = $4047 - $4048;
                $4050 = -$4029;
                $4051 = $4013 * $4050;
                $4052 = $4025 * $4051;
                $4053 = $4049 + $4052;
                $4054 = $4053 - $4022;
                $4055 = $4054 - $4019;
                $4056 = +HEAPF64[$24>>3];
                $4057 = -$4056;
                $4058 = $4020 * $4057;
                $4059 = $4028 * $4058;
                $4060 = $4014 * $4057;
                $4061 = $4023 * $4060;
                $4062 = $4059 + $4061;
                $4063 = $4019 * $4057;
                $4064 = $4013 * $4063;
                $4065 = $4064 + $4062;
                $4066 = $4018 * $4050;
                $4067 = $4020 * $4066;
                $4068 = $4067 + $4065;
                $4069 = $4026 * $4029;
                $4070 = $4069 + $4068;
                $4071 = $4023 * $4030;
                $4072 = $4033 - $4071;
                $4073 = $4018 * $4020;
                $4074 = $4073 * $4056;
                $4075 = $4072 + $4074;
                $4076 = $4019 * $4050;
                $4077 = $4013 * $4076;
                $4078 = $4077 + $4075;
                $4079 = $4020 * $4050;
                $4080 = $4028 * $4079;
                $4081 = $4080 + $4078;
                $4082 = $4026 * $4057;
                $4083 = $4082 + $4081;
                $4084 = (+__Z5IKabsd($4037));
                $4085 = $4084 > 5.0000000000000004E-6;
                if ($4085) {
                 break L1637;
                }
                $4086 = $4013 * $4023;
                $4087 = 0.32800000000000001 - $4086;
                $4088 = $4014 * $4022;
                $4089 = $4088 + $4087;
                $4090 = $4014 * $4019;
                $4091 = $4090 + $4089;
                $4092 = $4016 + $4091;
                $4093 = (+__Z5IKabsd($4092));
                $4094 = $4093 > 5.0000000000000004E-6;
                if ($4094) {
                 break L1637;
                }
                $4095 = (+__Z5IKabsd($4046));
                $4096 = $4095 > 5.0000000000000004E-6;
                if ($4096) {
                 break L1637;
                }
                $4097 = (+__Z5IKabsd($4055));
                $4098 = $4097 > 5.0000000000000004E-6;
                if ($4098) {
                 break L1637;
                }
                $4099 = (+__Z5IKabsd($4070));
                $4100 = $4099 > 5.0000000000000004E-6;
                if ($4100) {
                 break L1637;
                }
                $4101 = (+__Z5IKabsd($4083));
                $4102 = $4101 > 5.0000000000000004E-6;
                if ($4102) {
                 break L1637;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                break L1637;
               }
              } while(0);
              $1182 = +HEAPF64[$23>>3];
              $1183 = $1182 * $1182;
              $1184 = +HEAPF64[$73>>3];
              $1185 = $1184 * $1184;
              $1186 = +HEAPF64[$45>>3];
              $1187 = +HEAPF64[$82>>3];
              $1188 = $1186 * $1187;
              $1189 = $1184 * 1106000.0;
              $1190 = +HEAPF64[$81>>3];
              $1191 = +HEAPF64[$43>>3];
              $1192 = $1190 * $1191;
              $1193 = $1185 * 305809.0;
              $1194 = $1182 * 1106000.0;
              $1195 = +HEAPF64[$74>>3];
              $1196 = $1194 * $1195;
              $1197 = -$1183;
              $1198 = $1185 * $1197;
              $1199 = $1198 + 1.4072051509275401;
              $1200 = $1184 * 2.3725135623869802;
              $1201 = $1200 + $1199;
              $1202 = $1185 + $1201;
              $1203 = $1183 + $1202;
              $1204 = +HEAPF64[$47>>3];
              $1205 = $1189 * $1204;
              $1206 = $1192 * $1196;
              $1207 = $1205 - $1206;
              $1208 = $1204 * 1312000.0;
              $1209 = $1208 + $1207;
              $1210 = -$1188;
              $1211 = $1196 * $1210;
              $1212 = $1211 + $1209;
              $1213 = (+__Z5IKabsd($1212));
              $1214 = $1204 * $1196;
              $1215 = $1192 * -1312000.0;
              $1216 = $1215 - $1214;
              $1217 = $1188 * 1312000.0;
              $1218 = $1216 - $1217;
              $1219 = $1189 * $1192;
              $1220 = $1218 - $1219;
              $1221 = $1189 * $1210;
              $1222 = $1221 + $1220;
              $1223 = (+__Z5IKabsd($1222));
              $1224 = $1213 + $1223;
              $1225 = (+__Z5IKabsd($1203));
              $1226 = $1225 < 9.9999999999999995E-7;
              do {
               if (!($1226)) {
                $1227 = $1184 * 725536.0;
                $1228 = $1227 + 430336.0;
                $1229 = $1183 * 305809.0;
                $1230 = $1229 + $1228;
                $1231 = $1193 + $1230;
                $1232 = $1193 * $1197;
                $1233 = $1232 + $1231;
                $1234 = (+__Z6IKsignd($1233));
                $1235 = (+__Z5IKabsd($1234));
                $1236 = $1235 < 9.9999999999999995E-7;
                if ($1236) {
                 break;
                }
                $1237 = (+__Z5IKabsd($1224));
                $1238 = $1237 < 9.9999999999999995E-7;
                if ($1238) {
                 break;
                }
                HEAP8[$6>>0] = 1;
                $3807 = +HEAPF64[$23>>3];
                $3808 = $3807 * $3807;
                $3809 = +HEAPF64[$73>>3];
                $3810 = $3809 * $3809;
                $3811 = +HEAPF64[$45>>3];
                $3812 = +HEAPF64[$82>>3];
                $3813 = $3811 * $3812;
                $3814 = $3809 * 1106000.0;
                $3815 = +HEAPF64[$81>>3];
                $3816 = +HEAPF64[$43>>3];
                $3817 = $3815 * $3816;
                $3818 = $3810 * 305809.0;
                $3819 = $3807 * 1106000.0;
                $3820 = +HEAPF64[$74>>3];
                $3821 = $3819 * $3820;
                $3822 = -$3813;
                $3823 = $3814 * $3822;
                $3824 = $3813 * 1312000.0;
                $3825 = $3823 - $3824;
                $3826 = $3817 * 1312000.0;
                $3827 = $3825 - $3826;
                $3828 = +HEAPF64[$47>>3];
                $3829 = $3828 * $3821;
                $3830 = $3827 - $3829;
                $3831 = $3814 * $3817;
                $3832 = $3830 - $3831;
                $3833 = $3821 * $3822;
                $3834 = $3814 * $3828;
                $3835 = $3833 + $3834;
                $3836 = $3828 * 1312000.0;
                $3837 = $3836 + $3835;
                $3838 = $3817 * $3821;
                $3839 = $3837 - $3838;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x656,$3832,$3839,1.9999999999999999E-6);
                $3840 = HEAP8[$201>>0]|0;
                $3841 = ($3840<<24>>24)==(0);
                if ($3841) {
                 break L1637;
                }
                $3842 = +HEAPF64[$73>>3];
                $3843 = $3842 * 725536.0;
                $3844 = $3843 + 430336.0;
                $3845 = $3808 * 305809.0;
                $3846 = $3845 + $3844;
                $3847 = $3818 + $3846;
                $3848 = $3808 * $3818;
                $3849 = $3847 - $3848;
                $3850 = (+__Z6IKsignd($3849));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x657,$3850,-1);
                $3851 = HEAP8[$202>>0]|0;
                $3852 = ($3851<<24>>24)==(0);
                if ($3852) {
                 break L1637;
                }
                $3853 = +HEAPF64[$x656>>3];
                $3854 = $3853 + -1.5707963267949001;
                $3855 = +HEAPF64[$x657>>3];
                $3856 = $3855 * 1.5707963267949001;
                $3857 = $3854 + $3856;
                $3858 = (+__Z5IKsind($3857));
                $3859 = (+__Z5IKcosd($3857));
                $3860 = $3857 > 3.14159265358979;
                do {
                 if ($3860) {
                  $3861 = $3857 + -6.2831853071795898;
                  $3864 = $3861;
                 } else {
                  $3862 = $3857 < -3.14159265358979;
                  if (!($3862)) {
                   $3864 = $3857;
                   break;
                  }
                  $3863 = $3857 + 6.2831853071795898;
                  $3864 = $3863;
                 }
                } while(0);
                HEAP8[$4>>0] = 0;
                HEAP8[$5>>0] = -1;
                HEAPF64[$3>>3] = $3864;
                HEAPF64[$203>>3] = $3859;
                HEAPF64[$204>>3] = $3858;
                $3865 = +HEAPF64[$3>>3];
                $3866 = (+__Z5IKcosd($3865));
                $3867 = (+__Z5IKsind($3865));
                $3868 = +HEAPF64[$73>>3];
                $3869 = $3868 * 0.27650000000000002;
                $3870 = +HEAPF64[$81>>3];
                $3871 = +HEAPF64[$43>>3];
                $3872 = $3870 * $3871;
                $3873 = +HEAPF64[$82>>3];
                $3874 = +HEAPF64[$45>>3];
                $3875 = $3873 * $3874;
                $3876 = +HEAPF64[$47>>3];
                $3877 = +HEAPF64[$74>>3];
                $3878 = $3877 * 0.27650000000000002;
                $3879 = $3870 * $3874;
                $3880 = $3867 * 0.65600000000000003;
                $3881 = $3866 * $3874;
                $3882 = +HEAPF64[$23>>3];
                $3883 = $3867 * $3882;
                $3884 = $3878 * $3883;
                $3885 = $3866 * 0.32800000000000001;
                $3886 = $3885 - $3884;
                $3887 = $3886 - $3876;
                $3888 = $3866 * $3869;
                $3889 = $3888 + $3887;
                $3890 = $3880 * $3875;
                $3891 = -0.03113175 - $3890;
                $3892 = $3880 * $3872;
                $3893 = $3891 - $3892;
                $3894 = +HEAPF64[$60>>3];
                $3895 = $3893 - $3894;
                $3896 = $3876 * 0.65600000000000003;
                $3897 = $3866 * $3896;
                $3898 = $3897 + $3895;
                $3899 = $3867 * $3869;
                $3900 = -$3882;
                $3901 = $3866 * $3900;
                $3902 = $3878 * $3901;
                $3903 = $3902 - $3899;
                $3904 = $3903 - $3872;
                $3905 = $3904 - $3875;
                $3906 = $3867 * 0.32800000000000001;
                $3907 = $3905 - $3906;
                $3908 = $3879 * $3882;
                $3909 = +HEAPF64[$24>>3];
                $3910 = -$3909;
                $3911 = $3867 * $3910;
                $3912 = $3876 * $3911;
                $3913 = $3908 + $3912;
                $3914 = $3871 * $3900;
                $3915 = $3873 * $3914;
                $3916 = $3915 + $3913;
                $3917 = $3872 * $3910;
                $3918 = $3866 * $3917;
                $3919 = $3918 + $3916;
                $3920 = $3873 * $3910;
                $3921 = $3881 * $3920;
                $3922 = $3921 + $3919;
                $3923 = $3873 * $3900;
                $3924 = $3881 * $3923;
                $3925 = $3879 * $3910;
                $3926 = $3924 + $3925;
                $3927 = $3871 * $3873;
                $3928 = $3927 * $3909;
                $3929 = $3928 + $3926;
                $3930 = $3876 * $3883;
                $3931 = $3929 - $3930;
                $3932 = $3872 * $3900;
                $3933 = $3866 * $3932;
                $3934 = $3933 + $3931;
                $3935 = $3934 - $3878;
                $3936 = (+__Z5IKabsd($3889));
                $3937 = $3936 > 5.0000000000000004E-6;
                if ($3937) {
                 break L1637;
                }
                $3938 = $3866 * $3876;
                $3939 = 0.32800000000000001 - $3938;
                $3940 = $3869 + $3939;
                $3941 = $3867 * $3872;
                $3942 = $3941 + $3940;
                $3943 = $3867 * $3875;
                $3944 = $3943 + $3942;
                $3945 = (+__Z5IKabsd($3944));
                $3946 = $3945 > 5.0000000000000004E-6;
                if ($3946) {
                 break L1637;
                }
                $3947 = (+__Z5IKabsd($3898));
                $3948 = $3947 > 5.0000000000000004E-6;
                if ($3948) {
                 break L1637;
                }
                $3949 = (+__Z5IKabsd($3907));
                $3950 = $3949 > 5.0000000000000004E-6;
                if ($3950) {
                 break L1637;
                }
                $3951 = (+__Z5IKabsd($3922));
                $3952 = $3951 > 5.0000000000000004E-6;
                if ($3952) {
                 break L1637;
                }
                $3953 = (+__Z5IKabsd($3935));
                $3954 = $3953 > 5.0000000000000004E-6;
                if ($3954) {
                 break L1637;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                break L1637;
               }
              } while(0);
              $1239 = +HEAPF64[$81>>3];
              $1240 = +HEAPF64[$43>>3];
              $1241 = $1239 * $1240;
              $1242 = +HEAPF64[$73>>3];
              $1243 = +HEAPF64[$47>>3];
              $1244 = $1242 * $1243;
              $1245 = +HEAPF64[$45>>3];
              $1246 = +HEAPF64[$82>>3];
              $1247 = $1245 * $1246;
              $1248 = +HEAPF64[$23>>3];
              $1249 = +HEAPF64[$74>>3];
              $1250 = $1248 * $1249;
              $1251 = $1250 * 553.0;
              $1252 = $1241 * $1250;
              $1253 = $1247 * $1250;
              $1254 = $1252 + $1253;
              $1255 = $1243 * 1.1862567811934901;
              $1256 = $1255 + $1254;
              $1257 = $1244 + $1256;
              $1258 = (+__Z5IKabsd($1257));
              $1259 = $1258 < 9.9999999999999995E-7;
              do {
               if (!($1259)) {
                $1260 = $1241 * $1251;
                $1261 = $1247 * $1251;
                $1262 = $1260 + $1261;
                $1263 = $1243 * 656.0;
                $1264 = $1263 + $1262;
                $1265 = $1244 * 553.0;
                $1266 = $1265 + $1264;
                $1267 = (+__Z6IKsignd($1266));
                $1268 = (+__Z5IKabsd($1267));
                $1269 = $1268 < 9.9999999999999995E-7;
                if ($1269) {
                 break;
                }
                HEAP8[$6>>0] = 1;
                $3649 = +HEAPF64[$45>>3];
                $3650 = $3649 * $3649;
                $3651 = +HEAPF64[$81>>3];
                $3652 = $3651 * $3651;
                $3653 = +HEAPF64[$43>>3];
                $3654 = $3651 * $3653;
                $3655 = +HEAPF64[$82>>3];
                $3656 = $3649 * $3655;
                $3657 = +HEAPF64[$47>>3];
                $3658 = $3657 * 2000.0;
                $3659 = +HEAPF64[$23>>3];
                $3660 = +HEAPF64[$74>>3];
                $3661 = $3659 * $3660;
                $3662 = $3650 * 2000.0;
                $3663 = $3656 * 553.0;
                $3664 = $3663 * $3661;
                $3665 = $3657 * 656.0;
                $3666 = $3665 + $3664;
                $3667 = +HEAPF64[$73>>3];
                $3668 = $3667 * 553.0;
                $3669 = $3657 * $3668;
                $3670 = $3666 + $3669;
                $3671 = $3654 * 553.0;
                $3672 = $3671 * $3661;
                $3673 = $3672 + $3670;
                $3674 = (+__Z6IKsignd($3673));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x634,$3674,-1);
                $3675 = HEAP8[$197>>0]|0;
                $3676 = ($3675<<24>>24)==(0);
                if ($3676) {
                 break L1637;
                }
                $3677 = $3654 * $3658;
                $3678 = $3656 * $3658;
                $3679 = -$3678;
                $3680 = $3679 - $3677;
                $3681 = $3661 * 181.38399999999999;
                $3682 = $3680 - $3681;
                $3683 = +HEAPF64[$73>>3];
                $3684 = $3683 * -152.90450000000001;
                $3685 = $3661 * $3684;
                $3686 = $3682 + $3685;
                $3687 = $3652 * $3662;
                $3688 = $3687 + 215.16800000000001;
                $3689 = $3683 * $3683;
                $3690 = $3689 * 152.90450000000001;
                $3691 = $3688 + $3690;
                $3692 = $3654 * -4000.0;
                $3693 = $3692 * $3656;
                $3694 = $3693 + $3691;
                $3695 = $3694 - $3662;
                $3696 = $3652 * -2000.0;
                $3697 = +HEAPF64[$43>>3];
                $3698 = $3697 * $3697;
                $3699 = $3696 * $3698;
                $3700 = $3699 + $3695;
                $3701 = $3683 * 362.76799999999997;
                $3702 = $3701 + $3700;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x635,$3686,$3702,1.9999999999999999E-6);
                $3703 = HEAP8[$198>>0]|0;
                $3704 = ($3703<<24>>24)==(0);
                if ($3704) {
                 break L1637;
                }
                $3705 = +HEAPF64[$x634>>3];
                $3706 = $3705 * 1.5707963267949001;
                $3707 = $3706 + -1.5707963267949001;
                $3708 = +HEAPF64[$x635>>3];
                $3709 = $3708 + $3707;
                $3710 = (+__Z5IKsind($3709));
                $3711 = (+__Z5IKcosd($3709));
                $3712 = $3709 > 3.14159265358979;
                do {
                 if ($3712) {
                  $3713 = $3709 + -6.2831853071795898;
                  $3716 = $3713;
                 } else {
                  $3714 = $3709 < -3.14159265358979;
                  if (!($3714)) {
                   $3716 = $3709;
                   break;
                  }
                  $3715 = $3709 + 6.2831853071795898;
                  $3716 = $3715;
                 }
                } while(0);
                HEAP8[$4>>0] = 0;
                HEAP8[$5>>0] = -1;
                HEAPF64[$3>>3] = $3716;
                HEAPF64[$199>>3] = $3711;
                HEAPF64[$200>>3] = $3710;
                $3717 = +HEAPF64[$3>>3];
                $3718 = (+__Z5IKcosd($3717));
                $3719 = (+__Z5IKsind($3717));
                $3720 = +HEAPF64[$73>>3];
                $3721 = $3720 * 0.27650000000000002;
                $3722 = +HEAPF64[$81>>3];
                $3723 = +HEAPF64[$43>>3];
                $3724 = $3722 * $3723;
                $3725 = +HEAPF64[$82>>3];
                $3726 = +HEAPF64[$45>>3];
                $3727 = $3725 * $3726;
                $3728 = +HEAPF64[$47>>3];
                $3729 = +HEAPF64[$74>>3];
                $3730 = $3729 * 0.27650000000000002;
                $3731 = $3722 * $3726;
                $3732 = $3719 * 0.65600000000000003;
                $3733 = $3718 * $3726;
                $3734 = +HEAPF64[$23>>3];
                $3735 = $3719 * $3734;
                $3736 = $3718 * $3721;
                $3737 = $3718 * 0.32800000000000001;
                $3738 = $3737 + $3736;
                $3739 = $3738 - $3728;
                $3740 = $3730 * $3735;
                $3741 = $3739 - $3740;
                $3742 = $3732 * $3727;
                $3743 = -0.03113175 - $3742;
                $3744 = $3732 * $3724;
                $3745 = $3743 - $3744;
                $3746 = $3728 * 0.65600000000000003;
                $3747 = $3718 * $3746;
                $3748 = $3747 + $3745;
                $3749 = +HEAPF64[$60>>3];
                $3750 = $3748 - $3749;
                $3751 = $3719 * -0.32800000000000001;
                $3752 = $3719 * $3721;
                $3753 = $3751 - $3752;
                $3754 = -$3734;
                $3755 = $3718 * $3754;
                $3756 = $3730 * $3755;
                $3757 = $3753 + $3756;
                $3758 = $3757 - $3724;
                $3759 = $3758 - $3727;
                $3760 = $3723 * $3754;
                $3761 = $3725 * $3760;
                $3762 = +HEAPF64[$24>>3];
                $3763 = -$3762;
                $3764 = $3725 * $3763;
                $3765 = $3733 * $3764;
                $3766 = $3761 + $3765;
                $3767 = $3719 * $3763;
                $3768 = $3728 * $3767;
                $3769 = $3768 + $3766;
                $3770 = $3731 * $3734;
                $3771 = $3770 + $3769;
                $3772 = $3724 * $3763;
                $3773 = $3718 * $3772;
                $3774 = $3773 + $3771;
                $3775 = $3728 * $3735;
                $3776 = $3723 * $3725;
                $3777 = $3776 * $3762;
                $3778 = $3777 - $3775;
                $3779 = $3778 - $3730;
                $3780 = $3731 * $3763;
                $3781 = $3780 + $3779;
                $3782 = $3724 * $3754;
                $3783 = $3718 * $3782;
                $3784 = $3783 + $3781;
                $3785 = $3725 * $3754;
                $3786 = $3733 * $3785;
                $3787 = $3786 + $3784;
                $3788 = (+__Z5IKabsd($3741));
                $3789 = $3788 > 5.0000000000000004E-6;
                if ($3789) {
                 break L1637;
                }
                $3790 = $3719 * $3727;
                $3791 = $3790 + 0.32800000000000001;
                $3792 = $3721 + $3791;
                $3793 = $3718 * $3728;
                $3794 = $3792 - $3793;
                $3795 = $3719 * $3724;
                $3796 = $3795 + $3794;
                $3797 = (+__Z5IKabsd($3796));
                $3798 = $3797 > 5.0000000000000004E-6;
                if ($3798) {
                 break L1637;
                }
                $3799 = (+__Z5IKabsd($3750));
                $3800 = $3799 > 5.0000000000000004E-6;
                if ($3800) {
                 break L1637;
                }
                $3801 = (+__Z5IKabsd($3759));
                $3802 = $3801 > 5.0000000000000004E-6;
                if ($3802) {
                 break L1637;
                }
                $3803 = (+__Z5IKabsd($3774));
                $3804 = $3803 > 5.0000000000000004E-6;
                if ($3804) {
                 break L1637;
                }
                $3805 = (+__Z5IKabsd($3787));
                $3806 = $3805 > 5.0000000000000004E-6;
                if ($3806) {
                 break L1637;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                break L1637;
               }
              } while(0);
              $1270 = +HEAPF64[$74>>3];
              $1271 = $1270 * 0.27650000000000002;
              $1272 = +HEAPF64[$81>>3];
              $1273 = +HEAPF64[$45>>3];
              $1274 = $1272 * $1273;
              $1275 = +HEAPF64[$43>>3];
              $1276 = +HEAPF64[$82>>3];
              $1277 = $1275 * $1276;
              $1278 = +HEAPF64[$47>>3];
              $1279 = (+__Z5IKabsd($1278));
              $1280 = +HEAPF64[$22>>3];
              $1281 = $1280 + 1.5707963267949001;
              $1282 = (+__Z6IKfmoddd($1281,6.2831853071795898));
              $1283 = $1282 + -3.14159265358979;
              $1284 = (+__Z5IKabsd($1283));
              $1285 = $1279 + $1284;
              $1286 = $1271 + $1274;
              $1287 = $1286 - $1277;
              $1288 = $1277 - $1271;
              $1289 = $1288 - $1274;
              $1290 = (+__Z5IKabsd($1285));
              $1291 = $1290 < 9.9999999999999995E-7;
              do {
               if ($1291) {
                $1292 = +HEAPF64[$60>>3];
                $1293 = +HEAPF64[$73>>3];
                $1294 = $1293 * 0.18138399999999999;
                $1295 = $1294 + 0.18403625000000001;
                $1296 = $1295 - $1292;
                $1297 = (+__Z5IKabsd($1296));
                $1298 = $1297 < 9.9999999999999995E-7;
                if (!($1298)) {
                 break;
                }
                $1299 = (+__Z5IKabsd($1287));
                $1300 = $1299 < 9.9999999999999995E-7;
                if (!($1300)) {
                 break;
                }
                $1301 = (+__Z5IKabsd($1289));
                $1302 = $1301 < 9.9999999999999995E-7;
                if (!($1302)) {
                 break;
                }
                $1303 = -$1273;
                HEAPF64[$47>>3] = 0.0;
                HEAPF64[$22>>3] = 1.5707963267949001;
                HEAPF64[$24>>3] = 1.0;
                HEAPF64[$23>>3] = 0.0;
                $1304 = +HEAPF64[$43>>3];
                $1305 = $1304 * $1304;
                $1306 = +HEAPF64[$45>>3];
                $1307 = $1306 * $1306;
                $1308 = $1305 + $1307;
                HEAPF64[$60>>3] = $1308;
                $1309 = +HEAPF64[$43>>3];
                $1310 = +HEAPF64[$26>>3];
                $1311 = $1309 * $1310;
                $1312 = +HEAPF64[$45>>3];
                $1313 = +HEAPF64[$32>>3];
                $1314 = $1312 * $1313;
                $1315 = $1311 + $1314;
                HEAPF64[$61>>3] = $1315;
                $1316 = +HEAPF64[$43>>3];
                $1317 = +HEAPF64[$28>>3];
                $1318 = $1316 * $1317;
                $1319 = +HEAPF64[$45>>3];
                $1320 = +HEAPF64[$34>>3];
                $1321 = $1319 * $1320;
                $1322 = $1318 + $1321;
                HEAPF64[$62>>3] = $1322;
                $1323 = +HEAPF64[$43>>3];
                $1324 = +HEAPF64[$30>>3];
                $1325 = $1323 * $1324;
                $1326 = +HEAPF64[$45>>3];
                $1327 = +HEAPF64[$36>>3];
                $1328 = $1326 * $1327;
                $1329 = $1325 + $1328;
                HEAPF64[$63>>3] = $1329;
                $1330 = +HEAPF64[$38>>3];
                $1331 = $1330 * $1303;
                HEAPF64[$64>>3] = $1331;
                $1332 = +HEAPF64[$43>>3];
                $1333 = +HEAPF64[$38>>3];
                $1334 = $1332 * $1333;
                HEAPF64[$65>>3] = $1334;
                $1335 = +HEAPF64[$40>>3];
                $1336 = $1335 * $1303;
                HEAPF64[$67>>3] = $1336;
                $1337 = +HEAPF64[$43>>3];
                $1338 = +HEAPF64[$40>>3];
                $1339 = $1337 * $1338;
                HEAPF64[$68>>3] = $1339;
                $1340 = +HEAPF64[$42>>3];
                $1341 = $1340 * $1303;
                HEAPF64[$70>>3] = $1341;
                $1342 = +HEAPF64[$43>>3];
                $1343 = +HEAPF64[$42>>3];
                $1344 = $1342 * $1343;
                HEAPF64[$71>>3] = $1344;
                $1345 = +HEAPF64[$73>>3];
                $1346 = -1.1862567811934901 - $1345;
                $1347 = (+__Z5IKabsd($1346));
                $1348 = $1347 < 9.9999999999999995E-7;
                if (!($1348)) {
                 HEAP16[$j1valid60>>1] = 0;
                 HEAP8[$6>>0] = 2;
                 $2233 = +HEAPF64[$73>>3];
                 $2234 = $2233 * 0.27650000000000002;
                 $2235 = -0.32800000000000001 - $2234;
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x508,$2235,-1);
                 $2236 = HEAP8[$126>>0]|0;
                 $2237 = ($2236<<24>>24)==(0);
                 if ($2237) {
                  break L1637;
                 }
                 $2238 = +HEAPF64[$x508>>3];
                 $2239 = +HEAPF64[$45>>3];
                 $2240 = +HEAPF64[$82>>3];
                 $2241 = $2239 * $2240;
                 $2242 = $2238 * $2241;
                 $2243 = +HEAPF64[$81>>3];
                 $2244 = +HEAPF64[$43>>3];
                 $2245 = $2243 * $2244;
                 $2246 = $2238 * $2245;
                 $2247 = $2242 + $2246;
                 HEAPF64[$sj1array59>>3] = $2247;
                 $2248 = !($2247 >= -1.0000020000000001);
                 $2249 = !($2247 <= 1.0000020000000001);
                 $or$cond120 = $2248 | $2249;
                 do {
                  if ($or$cond120) {
                   $2259 = (__Z13__DOUBLE_BITSd($2247)|0);
                   $2260 = tempRet0;
                   $2261 = $2260 & 2147483647;
                   $2262 = ($2261>>>0)>(2146435072);
                   $2263 = ($2259>>>0)>(0);
                   $2264 = ($2261|0)==(2146435072);
                   $2265 = $2264 & $2263;
                   $2266 = $2262 | $2265;
                   if (!($2266)) {
                    $ij161$01130 = 0;
                    break;
                   }
                   HEAP8[$j1valid60>>0] = 1;
                   HEAPF64[$cj1array58>>3] = 1.0;
                   HEAPF64[$sj1array59>>3] = 0.0;
                   HEAPF64[$j1array57>>3] = 0.0;
                   $ij161$01130 = 0;
                  } else {
                   HEAP8[$127>>0] = 1;
                   HEAP8[$j1valid60>>0] = 1;
                   $2250 = +HEAPF64[$sj1array59>>3];
                   $2251 = (+__Z6IKasind($2250));
                   HEAPF64[$j1array57>>3] = $2251;
                   $2252 = (+__Z5IKcosd($2251));
                   HEAPF64[$cj1array58>>3] = $2252;
                   $2253 = +HEAPF64[$sj1array59>>3];
                   HEAPF64[$128>>3] = $2253;
                   $2254 = +HEAPF64[$j1array57>>3];
                   $2255 = $2254 > 0.0;
                   $$v88 = $2255 ? 3.14159265358979 : -3.14159265358979;
                   $2256 = $$v88 - $2254;
                   HEAPF64[$129>>3] = $2256;
                   $2257 = +HEAPF64[$cj1array58>>3];
                   $2258 = -$2257;
                   HEAPF64[$130>>3] = $2258;
                   $ij161$01130 = 0;
                  }
                 } while(0);
                 while(1) {
                  $2267 = (($j1valid60) + ($ij161$01130)|0);
                  $2268 = HEAP8[$2267>>0]|0;
                  $2269 = ($2268<<24>>24)==(0);
                  do {
                   if (!($2269)) {
                    $2270 = $ij161$01130&255;
                    HEAP8[$4>>0] = $2270;
                    HEAP8[$5>>0] = -1;
                    $iij162$01127 = (($ij161$01130) + 1)|0;
                    $2271 = ($iij162$01127|0)<(2);
                    do {
                     if ($2271) {
                      $2272 = (($sj1array59) + ($ij161$01130<<3)|0);
                      $2273 = (($j1valid60) + ($iij162$01127)|0);
                      $2274 = HEAP8[$2273>>0]|0;
                      $2275 = ($2274<<24>>24)==(0);
                      if ($2275) {
                       break;
                      }
                      $2276 = (($cj1array58) + ($ij161$01130<<3)|0);
                      $2277 = +HEAPF64[$2276>>3];
                      $2278 = (($cj1array58) + ($iij162$01127<<3)|0);
                      $2279 = +HEAPF64[$2278>>3];
                      $2280 = $2277 - $2279;
                      $2281 = (+__Z5IKabsd($2280));
                      $2282 = $2281 < 9.9999999999999995E-7;
                      if (!($2282)) {
                       break;
                      }
                      $2283 = +HEAPF64[$2272>>3];
                      $2284 = (($sj1array59) + ($iij162$01127<<3)|0);
                      $2285 = +HEAPF64[$2284>>3];
                      $2286 = $2283 - $2285;
                      $2287 = (+__Z5IKabsd($2286));
                      $2288 = $2287 < 9.9999999999999995E-7;
                      if (!($2288)) {
                       break;
                      }
                      HEAP8[$2273>>0] = 0;
                      $2289 = $iij162$01127&255;
                      HEAP8[$5>>0] = $2289;
                     }
                    } while(0);
                    $2290 = (($j1array57) + ($ij161$01130<<3)|0);
                    $2291 = +HEAPF64[$2290>>3];
                    HEAPF64[$3>>3] = $2291;
                    $2292 = (($cj1array58) + ($ij161$01130<<3)|0);
                    $2293 = +HEAPF64[$2292>>3];
                    HEAPF64[$131>>3] = $2293;
                    $2294 = (($sj1array59) + ($ij161$01130<<3)|0);
                    $2295 = +HEAPF64[$2294>>3];
                    HEAPF64[$132>>3] = $2295;
                    $2296 = +HEAPF64[$3>>3];
                    $2297 = (+__Z5IKcosd($2296));
                    $2298 = (+__Z5IKsind($2296));
                    $2299 = +HEAPF64[$43>>3];
                    $2300 = $2299 * $2299;
                    $2301 = +HEAPF64[$45>>3];
                    $2302 = $2301 * $2301;
                    $2303 = +HEAPF64[$82>>3];
                    $2304 = $2301 * $2303;
                    $2305 = +HEAPF64[$81>>3];
                    $2306 = $2299 * $2305;
                    $2307 = $2298 * 0.65600000000000003;
                    $2308 = $2297 * 1.5243902439024399;
                    $2309 = -$2306;
                    $2310 = $2297 * $2309;
                    $2311 = -$2304;
                    $2312 = $2297 * $2311;
                    $2313 = $2312 + $2310;
                    $2314 = $2308 * $2300;
                    $2315 = $2308 * $2302;
                    $2316 = $2314 + $2315;
                    $2317 = $2297 * 0.0474569359756098;
                    $2318 = $2317 + $2316;
                    $2319 = $2307 * $2309;
                    $2320 = $2319 + -0.03113175;
                    $2321 = $2320 - $2300;
                    $2322 = $2321 - $2302;
                    $2323 = $2307 * $2311;
                    $2324 = $2323 + $2322;
                    $2325 = (+__Z5IKabsd($2313));
                    $2326 = $2325 > 5.0000000000000004E-6;
                    if ($2326) {
                     break;
                    }
                    $2327 = +HEAPF64[$73>>3];
                    $2328 = $2298 * $2304;
                    $2329 = $2328 + 0.32800000000000001;
                    $2330 = $2298 * $2306;
                    $2331 = $2329 + $2330;
                    $2332 = $2327 * 0.27650000000000002;
                    $2333 = $2331 + $2332;
                    $2334 = (+__Z5IKabsd($2333));
                    $2335 = $2334 > 5.0000000000000004E-6;
                    if ($2335) {
                     break;
                    }
                    $2336 = (+__Z5IKabsd($2318));
                    $2337 = $2336 > 5.0000000000000004E-6;
                    if ($2337) {
                     break;
                    }
                    $2338 = (+__Z5IKabsd($2324));
                    $2339 = $2338 > 5.0000000000000004E-6;
                    if ($2339) {
                     break;
                    }
                    __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                   }
                  } while(0);
                  $2340 = (($ij161$01130) + 1)|0;
                  $exitcond1446 = ($2340|0)==(2);
                  if ($exitcond1446) {
                   break L1637;
                  } else {
                   $ij161$01130 = $2340;
                  }
                 }
                }
                $1349 = +HEAPF64[$45>>3];
                $1350 = -$1349;
                HEAPF64[$47>>3] = 0.0;
                HEAPF64[$22>>3] = 1.5707963267949001;
                HEAPF64[$24>>3] = 1.0;
                HEAPF64[$23>>3] = 0.0;
                $1351 = +HEAPF64[$43>>3];
                $1352 = $1351 * $1351;
                $1353 = +HEAPF64[$45>>3];
                $1354 = $1353 * $1353;
                $1355 = $1352 + $1354;
                HEAPF64[$60>>3] = $1355;
                $1356 = +HEAPF64[$43>>3];
                $1357 = +HEAPF64[$26>>3];
                $1358 = $1356 * $1357;
                $1359 = +HEAPF64[$45>>3];
                $1360 = +HEAPF64[$32>>3];
                $1361 = $1359 * $1360;
                $1362 = $1358 + $1361;
                HEAPF64[$61>>3] = $1362;
                $1363 = +HEAPF64[$43>>3];
                $1364 = +HEAPF64[$28>>3];
                $1365 = $1363 * $1364;
                $1366 = +HEAPF64[$45>>3];
                $1367 = +HEAPF64[$34>>3];
                $1368 = $1366 * $1367;
                $1369 = $1365 + $1368;
                HEAPF64[$62>>3] = $1369;
                $1370 = +HEAPF64[$43>>3];
                $1371 = +HEAPF64[$30>>3];
                $1372 = $1370 * $1371;
                $1373 = +HEAPF64[$45>>3];
                $1374 = +HEAPF64[$36>>3];
                $1375 = $1373 * $1374;
                $1376 = $1372 + $1375;
                HEAPF64[$63>>3] = $1376;
                $1377 = +HEAPF64[$38>>3];
                $1378 = $1377 * $1350;
                HEAPF64[$64>>3] = $1378;
                $1379 = +HEAPF64[$43>>3];
                $1380 = +HEAPF64[$38>>3];
                $1381 = $1379 * $1380;
                HEAPF64[$65>>3] = $1381;
                $1382 = +HEAPF64[$40>>3];
                $1383 = $1382 * $1350;
                HEAPF64[$67>>3] = $1383;
                $1384 = +HEAPF64[$43>>3];
                $1385 = +HEAPF64[$40>>3];
                $1386 = $1384 * $1385;
                HEAPF64[$68>>3] = $1386;
                $1387 = +HEAPF64[$42>>3];
                $1388 = $1387 * $1350;
                HEAPF64[$70>>3] = $1388;
                $1389 = +HEAPF64[$43>>3];
                $1390 = +HEAPF64[$42>>3];
                $1391 = $1389 * $1390;
                HEAPF64[$71>>3] = $1391;
                $1392 = +HEAPF64[$81>>3];
                $1393 = +HEAPF64[$43>>3];
                $1394 = $1392 * $1393;
                $1395 = +HEAPF64[$45>>3];
                $1396 = +HEAPF64[$82>>3];
                $1397 = $1395 * $1396;
                $1398 = $1394 + $1397;
                $1399 = (+__Z5IKabsd($1398));
                $1400 = $1399 < 9.9999999999999995E-7;
                if (!($1400)) {
                 HEAP16[$j1valid53>>1] = 0;
                 HEAP8[$6>>0] = 2;
                 $2125 = +HEAPF64[$81>>3];
                 $2126 = +HEAPF64[$43>>3];
                 $2127 = $2125 * $2126;
                 $2128 = +HEAPF64[$45>>3];
                 $2129 = +HEAPF64[$82>>3];
                 $2130 = $2128 * $2129;
                 $2131 = $2127 + $2130;
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x497,$2131,-1);
                 $2132 = HEAP8[$119>>0]|0;
                 $2133 = ($2132<<24>>24)==(0);
                 if ($2133) {
                  break L1637;
                 }
                 $2134 = +HEAPF64[$x497>>3];
                 $2135 = $2134 * 0.32800000000000001;
                 $2136 = +HEAPF64[$73>>3];
                 $2137 = $2136 * -0.27650000000000002;
                 $2138 = $2134 * $2137;
                 $2139 = $2138 - $2135;
                 HEAPF64[$sj1array52>>3] = $2139;
                 $2140 = !($2139 >= -1.0000020000000001);
                 $2141 = !($2139 <= 1.0000020000000001);
                 $or$cond119 = $2140 | $2141;
                 do {
                  if ($or$cond119) {
                   $2151 = (__Z13__DOUBLE_BITSd($2139)|0);
                   $2152 = tempRet0;
                   $2153 = $2152 & 2147483647;
                   $2154 = ($2153>>>0)>(2146435072);
                   $2155 = ($2151>>>0)>(0);
                   $2156 = ($2153|0)==(2146435072);
                   $2157 = $2156 & $2155;
                   $2158 = $2154 | $2157;
                   if (!($2158)) {
                    $ij154$01134 = 0;
                    break;
                   }
                   HEAP8[$j1valid53>>0] = 1;
                   HEAPF64[$cj1array51>>3] = 1.0;
                   HEAPF64[$sj1array52>>3] = 0.0;
                   HEAPF64[$j1array50>>3] = 0.0;
                   $ij154$01134 = 0;
                  } else {
                   HEAP8[$120>>0] = 1;
                   HEAP8[$j1valid53>>0] = 1;
                   $2142 = +HEAPF64[$sj1array52>>3];
                   $2143 = (+__Z6IKasind($2142));
                   HEAPF64[$j1array50>>3] = $2143;
                   $2144 = (+__Z5IKcosd($2143));
                   HEAPF64[$cj1array51>>3] = $2144;
                   $2145 = +HEAPF64[$sj1array52>>3];
                   HEAPF64[$121>>3] = $2145;
                   $2146 = +HEAPF64[$j1array50>>3];
                   $2147 = $2146 > 0.0;
                   $$v90 = $2147 ? 3.14159265358979 : -3.14159265358979;
                   $2148 = $$v90 - $2146;
                   HEAPF64[$122>>3] = $2148;
                   $2149 = +HEAPF64[$cj1array51>>3];
                   $2150 = -$2149;
                   HEAPF64[$123>>3] = $2150;
                   $ij154$01134 = 0;
                  }
                 } while(0);
                 while(1) {
                  $2159 = (($j1valid53) + ($ij154$01134)|0);
                  $2160 = HEAP8[$2159>>0]|0;
                  $2161 = ($2160<<24>>24)==(0);
                  do {
                   if (!($2161)) {
                    $2162 = $ij154$01134&255;
                    HEAP8[$4>>0] = $2162;
                    HEAP8[$5>>0] = -1;
                    $iij155$01131 = (($ij154$01134) + 1)|0;
                    $2163 = ($iij155$01131|0)<(2);
                    do {
                     if ($2163) {
                      $2164 = (($sj1array52) + ($ij154$01134<<3)|0);
                      $2165 = (($j1valid53) + ($iij155$01131)|0);
                      $2166 = HEAP8[$2165>>0]|0;
                      $2167 = ($2166<<24>>24)==(0);
                      if ($2167) {
                       break;
                      }
                      $2168 = (($cj1array51) + ($ij154$01134<<3)|0);
                      $2169 = +HEAPF64[$2168>>3];
                      $2170 = (($cj1array51) + ($iij155$01131<<3)|0);
                      $2171 = +HEAPF64[$2170>>3];
                      $2172 = $2169 - $2171;
                      $2173 = (+__Z5IKabsd($2172));
                      $2174 = $2173 < 9.9999999999999995E-7;
                      if (!($2174)) {
                       break;
                      }
                      $2175 = +HEAPF64[$2164>>3];
                      $2176 = (($sj1array52) + ($iij155$01131<<3)|0);
                      $2177 = +HEAPF64[$2176>>3];
                      $2178 = $2175 - $2177;
                      $2179 = (+__Z5IKabsd($2178));
                      $2180 = $2179 < 9.9999999999999995E-7;
                      if (!($2180)) {
                       break;
                      }
                      HEAP8[$2165>>0] = 0;
                      $2181 = $iij155$01131&255;
                      HEAP8[$5>>0] = $2181;
                     }
                    } while(0);
                    $2182 = (($j1array50) + ($ij154$01134<<3)|0);
                    $2183 = +HEAPF64[$2182>>3];
                    HEAPF64[$3>>3] = $2183;
                    $2184 = (($cj1array51) + ($ij154$01134<<3)|0);
                    $2185 = +HEAPF64[$2184>>3];
                    HEAPF64[$124>>3] = $2185;
                    $2186 = (($sj1array52) + ($ij154$01134<<3)|0);
                    $2187 = +HEAPF64[$2186>>3];
                    HEAPF64[$125>>3] = $2187;
                    $2188 = +HEAPF64[$3>>3];
                    $2189 = (+__Z5IKcosd($2188));
                    $2190 = (+__Z5IKsind($2188));
                    $2191 = +HEAPF64[$43>>3];
                    $2192 = $2191 * $2191;
                    $2193 = +HEAPF64[$45>>3];
                    $2194 = $2193 * $2193;
                    $2195 = +HEAPF64[$81>>3];
                    $2196 = $2191 * $2195;
                    $2197 = +HEAPF64[$82>>3];
                    $2198 = $2193 * $2197;
                    $2199 = $2190 * 0.65600000000000003;
                    $2200 = $2189 * 1.5243902439024399;
                    $2201 = -$2196;
                    $2202 = $2189 * $2201;
                    $2203 = -$2198;
                    $2204 = $2189 * $2203;
                    $2205 = $2202 + $2204;
                    $2206 = $2200 * $2192;
                    $2207 = $2200 * $2194;
                    $2208 = $2206 + $2207;
                    $2209 = $2189 * 0.0474569359756098;
                    $2210 = $2209 + $2208;
                    $2211 = $2199 * $2201;
                    $2212 = $2211 + -0.03113175;
                    $2213 = $2199 * $2203;
                    $2214 = $2212 + $2213;
                    $2215 = $2214 - $2194;
                    $2216 = $2215 - $2192;
                    $2217 = (+__Z5IKabsd($2205));
                    $2218 = $2217 > 5.0000000000000004E-6;
                    if ($2218) {
                     break;
                    }
                    $2219 = +HEAPF64[$73>>3];
                    $2220 = $2203 - $2196;
                    $2221 = $2190 * 0.32800000000000001;
                    $2222 = $2220 - $2221;
                    $2223 = $2219 * -0.27650000000000002;
                    $2224 = $2190 * $2223;
                    $2225 = $2222 + $2224;
                    $2226 = (+__Z5IKabsd($2225));
                    $2227 = $2226 > 5.0000000000000004E-6;
                    if ($2227) {
                     break;
                    }
                    $2228 = (+__Z5IKabsd($2210));
                    $2229 = $2228 > 5.0000000000000004E-6;
                    if ($2229) {
                     break;
                    }
                    $2230 = (+__Z5IKabsd($2216));
                    $2231 = $2230 > 5.0000000000000004E-6;
                    if ($2231) {
                     break;
                    }
                    __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                   }
                  } while(0);
                  $2232 = (($ij154$01134) + 1)|0;
                  $exitcond1447 = ($2232|0)==(2);
                  if ($exitcond1447) {
                   break L1637;
                  } else {
                   $ij154$01134 = $2232;
                  }
                 }
                }
                $1401 = $1393 * $1393;
                $1402 = $1395 * $1395;
                $1403 = $1401 + $1402;
                $1404 = (+__Z5IKabsd($1403));
                $1405 = $1404 == 0.0;
                do {
                 if (!($1405)) {
                  $1406 = (+Math_pow((+$1403),-0.5));
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x122,$1393,$1395,1.9999999999999999E-6);
                  $1407 = HEAP8[$101>>0]|0;
                  $1408 = ($1407<<24>>24)==(0);
                  if ($1408) {
                   break;
                  }
                  $1409 = +HEAPF64[$43>>3];
                  $1410 = $1406 * $1409;
                  $1411 = -$1410;
                  $1412 = +HEAPF64[$45>>3];
                  $1413 = $1406 * $1412;
                  $1414 = +HEAPF64[$74>>3];
                  $1415 = $1414 * 0.27650000000000002;
                  $1416 = $1412 * $1413;
                  $1417 = $1409 * $1411;
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x126,$1409,$1412,1.9999999999999999E-6);
                  $1418 = HEAP8[$102>>0]|0;
                  $1419 = ($1418<<24>>24)==(0);
                  if ($1419) {
                   break;
                  }
                  $1420 = +HEAPF64[$x126>>3];
                  $1421 = +HEAPF64[$this>>3];
                  $1422 = $1420 + $1421;
                  $1423 = (+__Z5IKabsd($1422));
                  $1424 = $1423 + 3.14159265358979;
                  $1425 = (+__Z6IKfmoddd($1424,6.2831853071795898));
                  $1426 = $1425 + -3.14159265358979;
                  $1427 = +HEAPF64[$43>>3];
                  $1428 = +HEAPF64[$45>>3];
                  $1429 = $1416 + $1415;
                  $1430 = $1429 - $1417;
                  $1431 = $1417 - $1415;
                  $1432 = $1431 - $1416;
                  $1433 = (+__Z5IKabsd($1426));
                  $1434 = $1433 < 9.9999999999999995E-7;
                  if (!($1434)) {
                   break;
                  }
                  $1435 = +HEAPF64[$73>>3];
                  $1436 = $1427 * $1427;
                  $1437 = 0.18403625000000001 - $1436;
                  $1438 = $1435 * 0.18138399999999999;
                  $1439 = $1437 + $1438;
                  $1440 = $1428 * $1428;
                  $1441 = $1439 - $1440;
                  $1442 = (+__Z5IKabsd($1441));
                  $1443 = $1442 < 9.9999999999999995E-7;
                  if (!($1443)) {
                   break;
                  }
                  $1444 = (+__Z5IKabsd($1430));
                  $1445 = $1444 < 9.9999999999999995E-7;
                  if (!($1445)) {
                   break;
                  }
                  $1446 = (+__Z5IKabsd($1432));
                  $1447 = $1446 < 9.9999999999999995E-7;
                  if (!($1447)) {
                   break;
                  }
                  $1448 = -$1428;
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x131,$1427,$1428,1.9999999999999999E-6);
                  $1449 = HEAP8[$103>>0]|0;
                  $1450 = ($1449<<24>>24)==(0);
                  if ($1450) {
                   break L1637;
                  }
                  $1451 = +HEAPF64[$x131>>3];
                  $1452 = -$1451;
                  $1453 = +HEAPF64[$43>>3];
                  $1454 = $1453 * $1453;
                  $1455 = +HEAPF64[$45>>3];
                  $1456 = $1455 * $1455;
                  $1457 = $1454 + $1456;
                  HEAPF64[$47>>3] = 0.0;
                  HEAPF64[$22>>3] = 1.5707963267949001;
                  HEAPF64[$24>>3] = 1.0;
                  HEAPF64[$23>>3] = 0.0;
                  HEAPF64[$60>>3] = $1457;
                  $1458 = +HEAPF64[$43>>3];
                  $1459 = +HEAPF64[$26>>3];
                  $1460 = $1458 * $1459;
                  $1461 = +HEAPF64[$45>>3];
                  $1462 = +HEAPF64[$32>>3];
                  $1463 = $1461 * $1462;
                  $1464 = $1460 + $1463;
                  HEAPF64[$61>>3] = $1464;
                  $1465 = +HEAPF64[$43>>3];
                  $1466 = +HEAPF64[$28>>3];
                  $1467 = $1465 * $1466;
                  $1468 = +HEAPF64[$45>>3];
                  $1469 = +HEAPF64[$34>>3];
                  $1470 = $1468 * $1469;
                  $1471 = $1467 + $1470;
                  HEAPF64[$62>>3] = $1471;
                  $1472 = +HEAPF64[$43>>3];
                  $1473 = +HEAPF64[$30>>3];
                  $1474 = $1472 * $1473;
                  $1475 = +HEAPF64[$45>>3];
                  $1476 = +HEAPF64[$36>>3];
                  $1477 = $1475 * $1476;
                  $1478 = $1474 + $1477;
                  HEAPF64[$63>>3] = $1478;
                  $1479 = +HEAPF64[$38>>3];
                  $1480 = $1479 * $1448;
                  HEAPF64[$64>>3] = $1480;
                  $1481 = +HEAPF64[$43>>3];
                  $1482 = +HEAPF64[$38>>3];
                  $1483 = $1481 * $1482;
                  HEAPF64[$65>>3] = $1483;
                  $1484 = +HEAPF64[$40>>3];
                  $1485 = $1484 * $1448;
                  HEAPF64[$67>>3] = $1485;
                  $1486 = +HEAPF64[$43>>3];
                  $1487 = +HEAPF64[$40>>3];
                  $1488 = $1486 * $1487;
                  HEAPF64[$68>>3] = $1488;
                  $1489 = +HEAPF64[$42>>3];
                  $1490 = $1489 * $1448;
                  HEAPF64[$70>>3] = $1490;
                  $1491 = +HEAPF64[$43>>3];
                  $1492 = +HEAPF64[$42>>3];
                  $1493 = $1491 * $1492;
                  HEAPF64[$71>>3] = $1493;
                  HEAPF64[$82>>3] = $1411;
                  HEAPF64[$81>>3] = $1413;
                  HEAPF64[$this>>3] = $1452;
                  $1494 = +HEAPF64[$43>>3];
                  $1495 = $1406 * $1494;
                  $1496 = -$1495;
                  $1497 = +HEAPF64[$45>>3];
                  $1498 = $1406 * $1497;
                  $1499 = +HEAPF64[$73>>3];
                  $1500 = -1.1862567811934901 - $1499;
                  $1501 = (+__Z5IKabsd($1500));
                  $1502 = $1501 < 9.9999999999999995E-7;
                  if (!($1502)) {
                   HEAP16[$j1valid22>>1] = 0;
                   HEAP8[$6>>0] = 2;
                   $1659 = +HEAPF64[$73>>3];
                   $1660 = $1659 * 0.27650000000000002;
                   $1661 = -0.32800000000000001 - $1660;
                   __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x449,$1661,-1);
                   $1662 = HEAP8[$112>>0]|0;
                   $1663 = ($1662<<24>>24)==(0);
                   if ($1663) {
                    break L1637;
                   }
                   $1664 = +HEAPF64[$x449>>3];
                   $1665 = +HEAPF64[$45>>3];
                   $1666 = $1665 * $1496;
                   $1667 = $1664 * $1666;
                   $1668 = +HEAPF64[$43>>3];
                   $1669 = $1498 * $1668;
                   $1670 = $1664 * $1669;
                   $1671 = $1667 + $1670;
                   HEAPF64[$sj1array21>>3] = $1671;
                   $1672 = !($1671 >= -1.0000020000000001);
                   $1673 = !($1671 <= 1.0000020000000001);
                   $or$cond101 = $1672 | $1673;
                   do {
                    if ($or$cond101) {
                     $1683 = (__Z13__DOUBLE_BITSd($1671)|0);
                     $1684 = tempRet0;
                     $1685 = $1684 & 2147483647;
                     $1686 = ($1685>>>0)>(2146435072);
                     $1687 = ($1683>>>0)>(0);
                     $1688 = ($1685|0)==(2146435072);
                     $1689 = $1688 & $1687;
                     $1690 = $1686 | $1689;
                     if (!($1690)) {
                      $ij123$01138 = 0;
                      break;
                     }
                     HEAP8[$j1valid22>>0] = 1;
                     HEAPF64[$cj1array20>>3] = 1.0;
                     HEAPF64[$sj1array21>>3] = 0.0;
                     HEAPF64[$j1array19>>3] = 0.0;
                     $ij123$01138 = 0;
                    } else {
                     HEAP8[$113>>0] = 1;
                     HEAP8[$j1valid22>>0] = 1;
                     $1674 = +HEAPF64[$sj1array21>>3];
                     $1675 = (+__Z6IKasind($1674));
                     HEAPF64[$j1array19>>3] = $1675;
                     $1676 = (+__Z5IKcosd($1675));
                     HEAPF64[$cj1array20>>3] = $1676;
                     $1677 = +HEAPF64[$sj1array21>>3];
                     HEAPF64[$114>>3] = $1677;
                     $1678 = +HEAPF64[$j1array19>>3];
                     $1679 = $1678 > 0.0;
                     $$v96 = $1679 ? 3.14159265358979 : -3.14159265358979;
                     $1680 = $$v96 - $1678;
                     HEAPF64[$115>>3] = $1680;
                     $1681 = +HEAPF64[$cj1array20>>3];
                     $1682 = -$1681;
                     HEAPF64[$116>>3] = $1682;
                     $ij123$01138 = 0;
                    }
                   } while(0);
                   while(1) {
                    $1691 = (($j1valid22) + ($ij123$01138)|0);
                    $1692 = HEAP8[$1691>>0]|0;
                    $1693 = ($1692<<24>>24)==(0);
                    do {
                     if (!($1693)) {
                      $1694 = $ij123$01138&255;
                      HEAP8[$4>>0] = $1694;
                      HEAP8[$5>>0] = -1;
                      $iij124$01135 = (($ij123$01138) + 1)|0;
                      $1695 = ($iij124$01135|0)<(2);
                      do {
                       if ($1695) {
                        $1696 = (($sj1array21) + ($ij123$01138<<3)|0);
                        $1697 = (($j1valid22) + ($iij124$01135)|0);
                        $1698 = HEAP8[$1697>>0]|0;
                        $1699 = ($1698<<24>>24)==(0);
                        if ($1699) {
                         break;
                        }
                        $1700 = (($cj1array20) + ($ij123$01138<<3)|0);
                        $1701 = +HEAPF64[$1700>>3];
                        $1702 = (($cj1array20) + ($iij124$01135<<3)|0);
                        $1703 = +HEAPF64[$1702>>3];
                        $1704 = $1701 - $1703;
                        $1705 = (+__Z5IKabsd($1704));
                        $1706 = $1705 < 9.9999999999999995E-7;
                        if (!($1706)) {
                         break;
                        }
                        $1707 = +HEAPF64[$1696>>3];
                        $1708 = (($sj1array21) + ($iij124$01135<<3)|0);
                        $1709 = +HEAPF64[$1708>>3];
                        $1710 = $1707 - $1709;
                        $1711 = (+__Z5IKabsd($1710));
                        $1712 = $1711 < 9.9999999999999995E-7;
                        if (!($1712)) {
                         break;
                        }
                        HEAP8[$1697>>0] = 0;
                        $1713 = $iij124$01135&255;
                        HEAP8[$5>>0] = $1713;
                       }
                      } while(0);
                      $1714 = (($j1array19) + ($ij123$01138<<3)|0);
                      $1715 = +HEAPF64[$1714>>3];
                      HEAPF64[$3>>3] = $1715;
                      $1716 = (($cj1array20) + ($ij123$01138<<3)|0);
                      $1717 = +HEAPF64[$1716>>3];
                      HEAPF64[$117>>3] = $1717;
                      $1718 = (($sj1array21) + ($ij123$01138<<3)|0);
                      $1719 = +HEAPF64[$1718>>3];
                      HEAPF64[$118>>3] = $1719;
                      $1720 = +HEAPF64[$3>>3];
                      $1721 = (+__Z5IKcosd($1720));
                      $1722 = (+__Z5IKsind($1720));
                      $1723 = +HEAPF64[$43>>3];
                      $1724 = $1723 * $1723;
                      $1725 = +HEAPF64[$45>>3];
                      $1726 = $1725 * $1725;
                      $1727 = $1498 * $1723;
                      $1728 = $1721 * 1.5243902439024399;
                      $1729 = $1725 * $1496;
                      $1730 = $1722 * $1729;
                      $1731 = $1721 * $1727;
                      $1732 = $1495 * $1725;
                      $1733 = $1721 * $1732;
                      $1734 = $1733 - $1731;
                      $1735 = $1728 * $1724;
                      $1736 = $1728 * $1726;
                      $1737 = $1735 + $1736;
                      $1738 = $1721 * 0.0474569359756098;
                      $1739 = $1738 + $1737;
                      $1740 = $1730 * 0.65600000000000003;
                      $1741 = -0.03113175 - $1740;
                      $1742 = $1741 - $1724;
                      $1743 = $1742 - $1726;
                      $1744 = $1722 * -0.65600000000000003;
                      $1745 = $1744 * $1727;
                      $1746 = $1745 + $1743;
                      $1747 = (+__Z5IKabsd($1734));
                      $1748 = $1747 > 5.0000000000000004E-6;
                      if ($1748) {
                       break;
                      }
                      $1749 = +HEAPF64[$73>>3];
                      $1750 = $1749 * 0.27650000000000002;
                      $1751 = $1750 + 0.32800000000000001;
                      $1752 = $1730 + $1751;
                      $1753 = $1722 * $1727;
                      $1754 = $1753 + $1752;
                      $1755 = (+__Z5IKabsd($1754));
                      $1756 = $1755 > 5.0000000000000004E-6;
                      if ($1756) {
                       break;
                      }
                      $1757 = (+__Z5IKabsd($1739));
                      $1758 = $1757 > 5.0000000000000004E-6;
                      if ($1758) {
                       break;
                      }
                      $1759 = (+__Z5IKabsd($1746));
                      $1760 = $1759 > 5.0000000000000004E-6;
                      if ($1760) {
                       break;
                      }
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                     }
                    } while(0);
                    $1761 = (($ij123$01138) + 1)|0;
                    $exitcond1448 = ($1761|0)==(2);
                    if ($exitcond1448) {
                     break L1637;
                    } else {
                     $ij123$01138 = $1761;
                    }
                   }
                  }
                  $1503 = -$1497;
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x136,$1494,$1497,1.9999999999999999E-6);
                  $1504 = HEAP8[$104>>0]|0;
                  $1505 = ($1504<<24>>24)==(0);
                  if ($1505) {
                   break L1637;
                  }
                  $1506 = +HEAPF64[$x136>>3];
                  $1507 = -$1506;
                  $1508 = +HEAPF64[$43>>3];
                  $1509 = $1508 * $1508;
                  $1510 = +HEAPF64[$45>>3];
                  $1511 = $1510 * $1510;
                  $1512 = $1509 + $1511;
                  HEAPF64[$47>>3] = 0.0;
                  HEAPF64[$22>>3] = 1.5707963267949001;
                  HEAPF64[$24>>3] = 1.0;
                  HEAPF64[$23>>3] = 0.0;
                  HEAPF64[$60>>3] = $1512;
                  $1513 = +HEAPF64[$43>>3];
                  $1514 = +HEAPF64[$26>>3];
                  $1515 = $1513 * $1514;
                  $1516 = +HEAPF64[$45>>3];
                  $1517 = +HEAPF64[$32>>3];
                  $1518 = $1516 * $1517;
                  $1519 = $1515 + $1518;
                  HEAPF64[$61>>3] = $1519;
                  $1520 = +HEAPF64[$43>>3];
                  $1521 = +HEAPF64[$28>>3];
                  $1522 = $1520 * $1521;
                  $1523 = +HEAPF64[$45>>3];
                  $1524 = +HEAPF64[$34>>3];
                  $1525 = $1523 * $1524;
                  $1526 = $1522 + $1525;
                  HEAPF64[$62>>3] = $1526;
                  $1527 = +HEAPF64[$43>>3];
                  $1528 = +HEAPF64[$30>>3];
                  $1529 = $1527 * $1528;
                  $1530 = +HEAPF64[$45>>3];
                  $1531 = +HEAPF64[$36>>3];
                  $1532 = $1530 * $1531;
                  $1533 = $1529 + $1532;
                  HEAPF64[$63>>3] = $1533;
                  $1534 = +HEAPF64[$38>>3];
                  $1535 = $1534 * $1503;
                  HEAPF64[$64>>3] = $1535;
                  $1536 = +HEAPF64[$43>>3];
                  $1537 = +HEAPF64[$38>>3];
                  $1538 = $1536 * $1537;
                  HEAPF64[$65>>3] = $1538;
                  $1539 = +HEAPF64[$40>>3];
                  $1540 = $1539 * $1503;
                  HEAPF64[$67>>3] = $1540;
                  $1541 = +HEAPF64[$43>>3];
                  $1542 = +HEAPF64[$40>>3];
                  $1543 = $1541 * $1542;
                  HEAPF64[$68>>3] = $1543;
                  $1544 = +HEAPF64[$42>>3];
                  $1545 = $1544 * $1503;
                  HEAPF64[$70>>3] = $1545;
                  $1546 = +HEAPF64[$43>>3];
                  $1547 = +HEAPF64[$42>>3];
                  $1548 = $1546 * $1547;
                  HEAPF64[$71>>3] = $1548;
                  HEAPF64[$82>>3] = $1496;
                  HEAPF64[$81>>3] = $1498;
                  HEAPF64[$this>>3] = $1507;
                  $1549 = +HEAPF64[$43>>3];
                  $1550 = $1406 * $1549;
                  $1551 = -$1550;
                  $1552 = +HEAPF64[$45>>3];
                  $1553 = $1406 * $1552;
                  $1554 = (+__Z5IKabsd(0.0));
                  $1555 = $1554 < 9.9999999999999995E-7;
                  if ($1555) {
                   break L1637;
                  }
                  HEAP16[$j1valid>>1] = 0;
                  HEAP8[$6>>0] = 2;
                  $1556 = +HEAPF64[$43>>3];
                  $1557 = $1553 * $1556;
                  $1558 = +HEAPF64[$45>>3];
                  $1559 = $1558 * $1551;
                  $1560 = $1557 + $1559;
                  __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x138,$1560,-1);
                  $1561 = HEAP8[$105>>0]|0;
                  $1562 = ($1561<<24>>24)==(0);
                  if ($1562) {
                   break L1637;
                  }
                  $1563 = +HEAPF64[$x138>>3];
                  $1564 = +HEAPF64[$73>>3];
                  $1565 = $1564 * -0.27650000000000002;
                  $1566 = $1563 * $1565;
                  $1567 = $1563 * 0.32800000000000001;
                  $1568 = $1566 - $1567;
                  HEAPF64[$sj1array>>3] = $1568;
                  $1569 = !($1568 >= -1.0000020000000001);
                  $1570 = !($1568 <= 1.0000020000000001);
                  $or$cond100 = $1569 | $1570;
                  do {
                   if ($or$cond100) {
                    $1580 = (__Z13__DOUBLE_BITSd($1568)|0);
                    $1581 = tempRet0;
                    $1582 = $1581 & 2147483647;
                    $1583 = ($1582>>>0)>(2146435072);
                    $1584 = ($1580>>>0)>(0);
                    $1585 = ($1582|0)==(2146435072);
                    $1586 = $1585 & $1584;
                    $1587 = $1583 | $1586;
                    if (!($1587)) {
                     $ij1$01142 = 0;
                     break;
                    }
                    HEAP8[$j1valid>>0] = 1;
                    HEAPF64[$cj1array>>3] = 1.0;
                    HEAPF64[$sj1array>>3] = 0.0;
                    HEAPF64[$j1array>>3] = 0.0;
                    $ij1$01142 = 0;
                   } else {
                    HEAP8[$106>>0] = 1;
                    HEAP8[$j1valid>>0] = 1;
                    $1571 = +HEAPF64[$sj1array>>3];
                    $1572 = (+__Z6IKasind($1571));
                    HEAPF64[$j1array>>3] = $1572;
                    $1573 = (+__Z5IKcosd($1572));
                    HEAPF64[$cj1array>>3] = $1573;
                    $1574 = +HEAPF64[$sj1array>>3];
                    HEAPF64[$107>>3] = $1574;
                    $1575 = +HEAPF64[$j1array>>3];
                    $1576 = $1575 > 0.0;
                    $$v98 = $1576 ? 3.14159265358979 : -3.14159265358979;
                    $1577 = $$v98 - $1575;
                    HEAPF64[$108>>3] = $1577;
                    $1578 = +HEAPF64[$cj1array>>3];
                    $1579 = -$1578;
                    HEAPF64[$109>>3] = $1579;
                    $ij1$01142 = 0;
                   }
                  } while(0);
                  while(1) {
                   $1588 = (($j1valid) + ($ij1$01142)|0);
                   $1589 = HEAP8[$1588>>0]|0;
                   $1590 = ($1589<<24>>24)==(0);
                   do {
                    if (!($1590)) {
                     $1591 = $ij1$01142&255;
                     HEAP8[$4>>0] = $1591;
                     HEAP8[$5>>0] = -1;
                     $iij1$01139 = (($ij1$01142) + 1)|0;
                     $1592 = ($iij1$01139|0)<(2);
                     do {
                      if ($1592) {
                       $1593 = (($sj1array) + ($ij1$01142<<3)|0);
                       $1594 = (($j1valid) + ($iij1$01139)|0);
                       $1595 = HEAP8[$1594>>0]|0;
                       $1596 = ($1595<<24>>24)==(0);
                       if ($1596) {
                        break;
                       }
                       $1597 = (($cj1array) + ($ij1$01142<<3)|0);
                       $1598 = +HEAPF64[$1597>>3];
                       $1599 = (($cj1array) + ($iij1$01139<<3)|0);
                       $1600 = +HEAPF64[$1599>>3];
                       $1601 = $1598 - $1600;
                       $1602 = (+__Z5IKabsd($1601));
                       $1603 = $1602 < 9.9999999999999995E-7;
                       if (!($1603)) {
                        break;
                       }
                       $1604 = +HEAPF64[$1593>>3];
                       $1605 = (($sj1array) + ($iij1$01139<<3)|0);
                       $1606 = +HEAPF64[$1605>>3];
                       $1607 = $1604 - $1606;
                       $1608 = (+__Z5IKabsd($1607));
                       $1609 = $1608 < 9.9999999999999995E-7;
                       if (!($1609)) {
                        break;
                       }
                       HEAP8[$1594>>0] = 0;
                       $1610 = $iij1$01139&255;
                       HEAP8[$5>>0] = $1610;
                      }
                     } while(0);
                     $1611 = (($j1array) + ($ij1$01142<<3)|0);
                     $1612 = +HEAPF64[$1611>>3];
                     HEAPF64[$3>>3] = $1612;
                     $1613 = (($cj1array) + ($ij1$01142<<3)|0);
                     $1614 = +HEAPF64[$1613>>3];
                     HEAPF64[$110>>3] = $1614;
                     $1615 = (($sj1array) + ($ij1$01142<<3)|0);
                     $1616 = +HEAPF64[$1615>>3];
                     HEAPF64[$111>>3] = $1616;
                     $1617 = +HEAPF64[$3>>3];
                     $1618 = (+__Z5IKcosd($1617));
                     $1619 = (+__Z5IKsind($1617));
                     $1620 = +HEAPF64[$43>>3];
                     $1621 = $1620 * $1620;
                     $1622 = +HEAPF64[$45>>3];
                     $1623 = $1622 * $1622;
                     $1624 = $1622 * $1551;
                     $1625 = $1553 * $1620;
                     $1626 = $1618 * 1.5243902439024399;
                     $1627 = $1619 * 0.65600000000000003;
                     $1628 = -$1618;
                     $1629 = $1625 * $1628;
                     $1630 = $1624 * $1628;
                     $1631 = $1629 + $1630;
                     $1632 = $1626 * $1623;
                     $1633 = $1626 * $1621;
                     $1634 = $1633 + $1632;
                     $1635 = $1618 * 0.0474569359756098;
                     $1636 = $1635 + $1634;
                     $1637 = $1627 * $1624;
                     $1638 = -0.03113175 - $1637;
                     $1639 = $1627 * $1625;
                     $1640 = $1638 - $1639;
                     $1641 = $1640 - $1623;
                     $1642 = $1641 - $1621;
                     $1643 = (+__Z5IKabsd($1631));
                     $1644 = $1643 > 5.0000000000000004E-6;
                     if ($1644) {
                      break;
                     }
                     $1645 = +HEAPF64[$73>>3];
                     $1646 = $1645 * -0.27650000000000002;
                     $1647 = $1619 * $1646;
                     $1648 = $1647 - $1625;
                     $1649 = $1648 - $1624;
                     $1650 = $1619 * 0.32800000000000001;
                     $1651 = $1649 - $1650;
                     $1652 = (+__Z5IKabsd($1651));
                     $1653 = $1652 > 5.0000000000000004E-6;
                     if ($1653) {
                      break;
                     }
                     $1654 = (+__Z5IKabsd($1636));
                     $1655 = $1654 > 5.0000000000000004E-6;
                     if ($1655) {
                      break;
                     }
                     $1656 = (+__Z5IKabsd($1642));
                     $1657 = $1656 > 5.0000000000000004E-6;
                     if ($1657) {
                      break;
                     }
                     __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                    }
                   } while(0);
                   $1658 = (($ij1$01142) + 1)|0;
                   $exitcond1449 = ($1658|0)==(2);
                   if ($exitcond1449) {
                    break L1637;
                   } else {
                    $ij1$01142 = $1658;
                   }
                  }
                 }
                } while(0);
                $1762 = +HEAPF64[$43>>3];
                $1763 = $1762 * $1762;
                $1764 = +HEAPF64[$45>>3];
                $1765 = $1764 * $1764;
                $1766 = $1763 + $1765;
                $1767 = (+__Z5IKabsd($1766));
                $1768 = $1767 == 0.0;
                if ($1768) {
                 break L1637;
                }
                $1769 = (+Math_pow((+$1766),-0.5));
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x460,$1762,$1764,1.9999999999999999E-6);
                $1770 = HEAP8[$83>>0]|0;
                $1771 = ($1770<<24>>24)==(0);
                if ($1771) {
                 break L1637;
                }
                $1772 = +HEAPF64[$43>>3];
                $1773 = $1769 * $1772;
                $1774 = +HEAPF64[$45>>3];
                $1775 = $1769 * $1774;
                $1776 = -$1775;
                $1777 = +HEAPF64[$74>>3];
                $1778 = $1777 * 0.27650000000000002;
                $1779 = $1772 * $1773;
                $1780 = $1774 * $1776;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x464,$1772,$1774,1.9999999999999999E-6);
                $1781 = HEAP8[$84>>0]|0;
                $1782 = ($1781<<24>>24)==(0);
                if ($1782) {
                 break L1637;
                }
                $1783 = +HEAPF64[$x464>>3];
                $1784 = $1783 + -3.14159265358979;
                $1785 = +HEAPF64[$this>>3];
                $1786 = $1784 + $1785;
                $1787 = (+__Z5IKabsd($1786));
                $1788 = $1787 + 3.14159265358979;
                $1789 = (+__Z6IKfmoddd($1788,6.2831853071795898));
                $1790 = $1789 + -3.14159265358979;
                $1791 = +HEAPF64[$43>>3];
                $1792 = +HEAPF64[$45>>3];
                $1793 = $1780 - $1779;
                $1794 = $1778 + $1793;
                $1795 = -$1778;
                $1796 = $1795 - $1780;
                $1797 = $1779 + $1796;
                $1798 = (+__Z5IKabsd($1790));
                $1799 = $1798 < 9.9999999999999995E-7;
                if (!($1799)) {
                 break L1637;
                }
                $1800 = +HEAPF64[$73>>3];
                $1801 = $1791 * $1791;
                $1802 = 0.18403625000000001 - $1801;
                $1803 = $1800 * 0.18138399999999999;
                $1804 = $1802 + $1803;
                $1805 = $1792 * $1792;
                $1806 = $1804 - $1805;
                $1807 = (+__Z5IKabsd($1806));
                $1808 = $1807 < 9.9999999999999995E-7;
                if (!($1808)) {
                 break L1637;
                }
                $1809 = (+__Z5IKabsd($1794));
                $1810 = $1809 < 9.9999999999999995E-7;
                if (!($1810)) {
                 break L1637;
                }
                $1811 = (+__Z5IKabsd($1797));
                $1812 = $1811 < 9.9999999999999995E-7;
                if (!($1812)) {
                 break L1637;
                }
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x469,$1791,$1792,1.9999999999999999E-6);
                $1813 = HEAP8[$85>>0]|0;
                $1814 = ($1813<<24>>24)==(0);
                if ($1814) {
                 break L1637;
                }
                $1815 = +HEAPF64[$x469>>3];
                $1816 = +HEAPF64[$45>>3];
                $1817 = -$1816;
                $1818 = +HEAPF64[$43>>3];
                $1819 = $1818 * $1818;
                $1820 = $1816 * $1816;
                $1821 = $1820 + $1819;
                HEAPF64[$47>>3] = 0.0;
                HEAPF64[$22>>3] = 1.5707963267949001;
                HEAPF64[$24>>3] = 1.0;
                HEAPF64[$23>>3] = 0.0;
                HEAPF64[$60>>3] = $1821;
                $1822 = +HEAPF64[$43>>3];
                $1823 = +HEAPF64[$26>>3];
                $1824 = $1822 * $1823;
                $1825 = +HEAPF64[$45>>3];
                $1826 = +HEAPF64[$32>>3];
                $1827 = $1825 * $1826;
                $1828 = $1824 + $1827;
                HEAPF64[$61>>3] = $1828;
                $1829 = +HEAPF64[$43>>3];
                $1830 = +HEAPF64[$28>>3];
                $1831 = $1829 * $1830;
                $1832 = +HEAPF64[$45>>3];
                $1833 = +HEAPF64[$34>>3];
                $1834 = $1832 * $1833;
                $1835 = $1831 + $1834;
                HEAPF64[$62>>3] = $1835;
                $1836 = +HEAPF64[$43>>3];
                $1837 = +HEAPF64[$30>>3];
                $1838 = $1836 * $1837;
                $1839 = +HEAPF64[$45>>3];
                $1840 = +HEAPF64[$36>>3];
                $1841 = $1839 * $1840;
                $1842 = $1838 + $1841;
                HEAPF64[$63>>3] = $1842;
                $1843 = +HEAPF64[$38>>3];
                $1844 = $1843 * $1817;
                HEAPF64[$64>>3] = $1844;
                $1845 = +HEAPF64[$43>>3];
                $1846 = +HEAPF64[$38>>3];
                $1847 = $1845 * $1846;
                HEAPF64[$65>>3] = $1847;
                $1848 = +HEAPF64[$40>>3];
                $1849 = $1848 * $1817;
                HEAPF64[$67>>3] = $1849;
                $1850 = +HEAPF64[$43>>3];
                $1851 = +HEAPF64[$40>>3];
                $1852 = $1850 * $1851;
                HEAPF64[$68>>3] = $1852;
                $1853 = +HEAPF64[$42>>3];
                $1854 = $1853 * $1817;
                HEAPF64[$70>>3] = $1854;
                $1855 = +HEAPF64[$43>>3];
                $1856 = +HEAPF64[$42>>3];
                $1857 = $1855 * $1856;
                HEAPF64[$71>>3] = $1857;
                HEAPF64[$82>>3] = $1773;
                HEAPF64[$81>>3] = $1776;
                $1858 = 3.1415926500000002 - $1815;
                HEAPF64[$this>>3] = $1858;
                $1859 = +HEAPF64[$43>>3];
                $1860 = $1769 * $1859;
                $1861 = $1769 * $1817;
                $1862 = +HEAPF64[$73>>3];
                $1863 = -1.1862567811934901 - $1862;
                $1864 = (+__Z5IKabsd($1863));
                $1865 = $1864 < 9.9999999999999995E-7;
                if (!($1865)) {
                 HEAP16[$j1valid45>>1] = 0;
                 HEAP8[$6>>0] = 2;
                 $2022 = +HEAPF64[$73>>3];
                 $2023 = $2022 * 0.27650000000000002;
                 $2024 = -0.32800000000000001 - $2023;
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x487,$2024,-1);
                 $2025 = HEAP8[$94>>0]|0;
                 $2026 = ($2025<<24>>24)==(0);
                 if ($2026) {
                  break L1637;
                 }
                 $2027 = +HEAPF64[$x487>>3];
                 $2028 = +HEAPF64[$43>>3];
                 $2029 = $1861 * $2028;
                 $2030 = $2027 * $2029;
                 $2031 = +HEAPF64[$45>>3];
                 $2032 = $1860 * $2031;
                 $2033 = $2027 * $2032;
                 $2034 = $2030 + $2033;
                 HEAPF64[$sj1array44>>3] = $2034;
                 $2035 = !($2034 >= -1.0000020000000001);
                 $2036 = !($2034 <= 1.0000020000000001);
                 $or$cond110 = $2035 | $2036;
                 do {
                  if ($or$cond110) {
                   $2046 = (__Z13__DOUBLE_BITSd($2034)|0);
                   $2047 = tempRet0;
                   $2048 = $2047 & 2147483647;
                   $2049 = ($2048>>>0)>(2146435072);
                   $2050 = ($2046>>>0)>(0);
                   $2051 = ($2048|0)==(2146435072);
                   $2052 = $2051 & $2050;
                   $2053 = $2049 | $2052;
                   if (!($2053)) {
                    $ij146$01146 = 0;
                    break;
                   }
                   HEAP8[$j1valid45>>0] = 1;
                   HEAPF64[$cj1array43>>3] = 1.0;
                   HEAPF64[$sj1array44>>3] = 0.0;
                   HEAPF64[$j1array42>>3] = 0.0;
                   $ij146$01146 = 0;
                  } else {
                   HEAP8[$95>>0] = 1;
                   HEAP8[$j1valid45>>0] = 1;
                   $2037 = +HEAPF64[$sj1array44>>3];
                   $2038 = (+__Z6IKasind($2037));
                   HEAPF64[$j1array42>>3] = $2038;
                   $2039 = (+__Z5IKcosd($2038));
                   HEAPF64[$cj1array43>>3] = $2039;
                   $2040 = +HEAPF64[$sj1array44>>3];
                   HEAPF64[$96>>3] = $2040;
                   $2041 = +HEAPF64[$j1array42>>3];
                   $2042 = $2041 > 0.0;
                   $$v92 = $2042 ? 3.14159265358979 : -3.14159265358979;
                   $2043 = $$v92 - $2041;
                   HEAPF64[$97>>3] = $2043;
                   $2044 = +HEAPF64[$cj1array43>>3];
                   $2045 = -$2044;
                   HEAPF64[$98>>3] = $2045;
                   $ij146$01146 = 0;
                  }
                 } while(0);
                 while(1) {
                  $2054 = (($j1valid45) + ($ij146$01146)|0);
                  $2055 = HEAP8[$2054>>0]|0;
                  $2056 = ($2055<<24>>24)==(0);
                  do {
                   if (!($2056)) {
                    $2057 = $ij146$01146&255;
                    HEAP8[$4>>0] = $2057;
                    HEAP8[$5>>0] = -1;
                    $iij147$01143 = (($ij146$01146) + 1)|0;
                    $2058 = ($iij147$01143|0)<(2);
                    do {
                     if ($2058) {
                      $2059 = (($sj1array44) + ($ij146$01146<<3)|0);
                      $2060 = (($j1valid45) + ($iij147$01143)|0);
                      $2061 = HEAP8[$2060>>0]|0;
                      $2062 = ($2061<<24>>24)==(0);
                      if ($2062) {
                       break;
                      }
                      $2063 = (($cj1array43) + ($ij146$01146<<3)|0);
                      $2064 = +HEAPF64[$2063>>3];
                      $2065 = (($cj1array43) + ($iij147$01143<<3)|0);
                      $2066 = +HEAPF64[$2065>>3];
                      $2067 = $2064 - $2066;
                      $2068 = (+__Z5IKabsd($2067));
                      $2069 = $2068 < 9.9999999999999995E-7;
                      if (!($2069)) {
                       break;
                      }
                      $2070 = +HEAPF64[$2059>>3];
                      $2071 = (($sj1array44) + ($iij147$01143<<3)|0);
                      $2072 = +HEAPF64[$2071>>3];
                      $2073 = $2070 - $2072;
                      $2074 = (+__Z5IKabsd($2073));
                      $2075 = $2074 < 9.9999999999999995E-7;
                      if (!($2075)) {
                       break;
                      }
                      HEAP8[$2060>>0] = 0;
                      $2076 = $iij147$01143&255;
                      HEAP8[$5>>0] = $2076;
                     }
                    } while(0);
                    $2077 = (($j1array42) + ($ij146$01146<<3)|0);
                    $2078 = +HEAPF64[$2077>>3];
                    HEAPF64[$3>>3] = $2078;
                    $2079 = (($cj1array43) + ($ij146$01146<<3)|0);
                    $2080 = +HEAPF64[$2079>>3];
                    HEAPF64[$99>>3] = $2080;
                    $2081 = (($sj1array44) + ($ij146$01146<<3)|0);
                    $2082 = +HEAPF64[$2081>>3];
                    HEAPF64[$100>>3] = $2082;
                    $2083 = +HEAPF64[$3>>3];
                    $2084 = (+__Z5IKcosd($2083));
                    $2085 = (+__Z5IKsind($2083));
                    $2086 = +HEAPF64[$43>>3];
                    $2087 = $2086 * $2086;
                    $2088 = +HEAPF64[$45>>3];
                    $2089 = $2088 * $2088;
                    $2090 = $1861 * $2086;
                    $2091 = $2084 * 1.5243902439024399;
                    $2092 = $1860 * $2088;
                    $2093 = $2085 * $2092;
                    $2094 = $2084 * $2092;
                    $2095 = $2084 * $2090;
                    $2096 = -$2095;
                    $2097 = $2096 - $2094;
                    $2098 = $2091 * $2089;
                    $2099 = $2091 * $2087;
                    $2100 = $2099 + $2098;
                    $2101 = $2084 * 0.0474569359756098;
                    $2102 = $2101 + $2100;
                    $2103 = -0.03113175 - $2087;
                    $2104 = $2103 - $2089;
                    $2105 = $2085 * -0.65600000000000003;
                    $2106 = $2105 * $2090;
                    $2107 = $2106 + $2104;
                    $2108 = $2093 * 0.65600000000000003;
                    $2109 = $2107 - $2108;
                    $2110 = (+__Z5IKabsd($2097));
                    $2111 = $2110 > 5.0000000000000004E-6;
                    if ($2111) {
                     break;
                    }
                    $2112 = +HEAPF64[$73>>3];
                    $2113 = $2112 * 0.27650000000000002;
                    $2114 = $2113 + 0.32800000000000001;
                    $2115 = $2085 * $2090;
                    $2116 = $2115 + $2114;
                    $2117 = $2093 + $2116;
                    $2118 = (+__Z5IKabsd($2117));
                    $2119 = $2118 > 5.0000000000000004E-6;
                    if ($2119) {
                     break;
                    }
                    $2120 = (+__Z5IKabsd($2102));
                    $2121 = $2120 > 5.0000000000000004E-6;
                    if ($2121) {
                     break;
                    }
                    $2122 = (+__Z5IKabsd($2109));
                    $2123 = $2122 > 5.0000000000000004E-6;
                    if ($2123) {
                     break;
                    }
                    __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                   }
                  } while(0);
                  $2124 = (($ij146$01146) + 1)|0;
                  $exitcond1450 = ($2124|0)==(2);
                  if ($exitcond1450) {
                   break L1637;
                  } else {
                   $ij146$01146 = $2124;
                  }
                 }
                }
                $1866 = +HEAPF64[$45>>3];
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x474,$1859,$1866,1.9999999999999999E-6);
                $1867 = HEAP8[$86>>0]|0;
                $1868 = ($1867<<24>>24)==(0);
                if ($1868) {
                 break L1637;
                }
                $1869 = +HEAPF64[$x474>>3];
                $1870 = +HEAPF64[$45>>3];
                $1871 = -$1870;
                $1872 = +HEAPF64[$43>>3];
                $1873 = $1872 * $1872;
                $1874 = $1870 * $1870;
                $1875 = $1874 + $1873;
                HEAPF64[$47>>3] = 0.0;
                HEAPF64[$22>>3] = 1.5707963267949001;
                HEAPF64[$24>>3] = 1.0;
                HEAPF64[$23>>3] = 0.0;
                HEAPF64[$60>>3] = $1875;
                $1876 = +HEAPF64[$43>>3];
                $1877 = +HEAPF64[$26>>3];
                $1878 = $1876 * $1877;
                $1879 = +HEAPF64[$45>>3];
                $1880 = +HEAPF64[$32>>3];
                $1881 = $1879 * $1880;
                $1882 = $1878 + $1881;
                HEAPF64[$61>>3] = $1882;
                $1883 = +HEAPF64[$43>>3];
                $1884 = +HEAPF64[$28>>3];
                $1885 = $1883 * $1884;
                $1886 = +HEAPF64[$45>>3];
                $1887 = +HEAPF64[$34>>3];
                $1888 = $1886 * $1887;
                $1889 = $1885 + $1888;
                HEAPF64[$62>>3] = $1889;
                $1890 = +HEAPF64[$43>>3];
                $1891 = +HEAPF64[$30>>3];
                $1892 = $1890 * $1891;
                $1893 = +HEAPF64[$45>>3];
                $1894 = +HEAPF64[$36>>3];
                $1895 = $1893 * $1894;
                $1896 = $1892 + $1895;
                HEAPF64[$63>>3] = $1896;
                $1897 = +HEAPF64[$38>>3];
                $1898 = $1897 * $1871;
                HEAPF64[$64>>3] = $1898;
                $1899 = +HEAPF64[$43>>3];
                $1900 = +HEAPF64[$38>>3];
                $1901 = $1899 * $1900;
                HEAPF64[$65>>3] = $1901;
                $1902 = +HEAPF64[$40>>3];
                $1903 = $1902 * $1871;
                HEAPF64[$67>>3] = $1903;
                $1904 = +HEAPF64[$43>>3];
                $1905 = +HEAPF64[$40>>3];
                $1906 = $1904 * $1905;
                HEAPF64[$68>>3] = $1906;
                $1907 = +HEAPF64[$42>>3];
                $1908 = $1907 * $1871;
                HEAPF64[$70>>3] = $1908;
                $1909 = +HEAPF64[$43>>3];
                $1910 = +HEAPF64[$42>>3];
                $1911 = $1909 * $1910;
                HEAPF64[$71>>3] = $1911;
                HEAPF64[$82>>3] = $1860;
                HEAPF64[$81>>3] = $1861;
                $1912 = 3.1415926500000002 - $1869;
                HEAPF64[$this>>3] = $1912;
                $1913 = +HEAPF64[$43>>3];
                $1914 = $1769 * $1913;
                $1915 = $1769 * $1871;
                $1916 = (+__Z5IKabsd(0.0));
                $1917 = $1916 < 9.9999999999999995E-7;
                if ($1917) {
                 break L1637;
                }
                HEAP16[$j1valid38>>1] = 0;
                HEAP8[$6>>0] = 2;
                $1918 = +HEAPF64[$43>>3];
                $1919 = $1915 * $1918;
                $1920 = +HEAPF64[$45>>3];
                $1921 = $1914 * $1920;
                $1922 = $1919 + $1921;
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x476,$1922,-1);
                $1923 = HEAP8[$87>>0]|0;
                $1924 = ($1923<<24>>24)==(0);
                if ($1924) {
                 break L1637;
                }
                $1925 = +HEAPF64[$x476>>3];
                $1926 = +HEAPF64[$73>>3];
                $1927 = $1926 * -0.27650000000000002;
                $1928 = $1925 * $1927;
                $1929 = $1925 * 0.32800000000000001;
                $1930 = $1928 - $1929;
                HEAPF64[$sj1array37>>3] = $1930;
                $1931 = !($1930 >= -1.0000020000000001);
                $1932 = !($1930 <= 1.0000020000000001);
                $or$cond109 = $1931 | $1932;
                do {
                 if ($or$cond109) {
                  $1942 = (__Z13__DOUBLE_BITSd($1930)|0);
                  $1943 = tempRet0;
                  $1944 = $1943 & 2147483647;
                  $1945 = ($1944>>>0)>(2146435072);
                  $1946 = ($1942>>>0)>(0);
                  $1947 = ($1944|0)==(2146435072);
                  $1948 = $1947 & $1946;
                  $1949 = $1945 | $1948;
                  if (!($1949)) {
                   $ij139$01150 = 0;
                   break;
                  }
                  HEAP8[$j1valid38>>0] = 1;
                  HEAPF64[$cj1array36>>3] = 1.0;
                  HEAPF64[$sj1array37>>3] = 0.0;
                  HEAPF64[$j1array35>>3] = 0.0;
                  $ij139$01150 = 0;
                 } else {
                  HEAP8[$88>>0] = 1;
                  HEAP8[$j1valid38>>0] = 1;
                  $1933 = +HEAPF64[$sj1array37>>3];
                  $1934 = (+__Z6IKasind($1933));
                  HEAPF64[$j1array35>>3] = $1934;
                  $1935 = (+__Z5IKcosd($1934));
                  HEAPF64[$cj1array36>>3] = $1935;
                  $1936 = +HEAPF64[$sj1array37>>3];
                  HEAPF64[$89>>3] = $1936;
                  $1937 = +HEAPF64[$j1array35>>3];
                  $1938 = $1937 > 0.0;
                  $$v94 = $1938 ? 3.14159265358979 : -3.14159265358979;
                  $1939 = $$v94 - $1937;
                  HEAPF64[$90>>3] = $1939;
                  $1940 = +HEAPF64[$cj1array36>>3];
                  $1941 = -$1940;
                  HEAPF64[$91>>3] = $1941;
                  $ij139$01150 = 0;
                 }
                } while(0);
                while(1) {
                 $1950 = (($j1valid38) + ($ij139$01150)|0);
                 $1951 = HEAP8[$1950>>0]|0;
                 $1952 = ($1951<<24>>24)==(0);
                 do {
                  if (!($1952)) {
                   $1953 = $ij139$01150&255;
                   HEAP8[$4>>0] = $1953;
                   HEAP8[$5>>0] = -1;
                   $iij140$01147 = (($ij139$01150) + 1)|0;
                   $1954 = ($iij140$01147|0)<(2);
                   do {
                    if ($1954) {
                     $1955 = (($sj1array37) + ($ij139$01150<<3)|0);
                     $1956 = (($j1valid38) + ($iij140$01147)|0);
                     $1957 = HEAP8[$1956>>0]|0;
                     $1958 = ($1957<<24>>24)==(0);
                     if ($1958) {
                      break;
                     }
                     $1959 = (($cj1array36) + ($ij139$01150<<3)|0);
                     $1960 = +HEAPF64[$1959>>3];
                     $1961 = (($cj1array36) + ($iij140$01147<<3)|0);
                     $1962 = +HEAPF64[$1961>>3];
                     $1963 = $1960 - $1962;
                     $1964 = (+__Z5IKabsd($1963));
                     $1965 = $1964 < 9.9999999999999995E-7;
                     if (!($1965)) {
                      break;
                     }
                     $1966 = +HEAPF64[$1955>>3];
                     $1967 = (($sj1array37) + ($iij140$01147<<3)|0);
                     $1968 = +HEAPF64[$1967>>3];
                     $1969 = $1966 - $1968;
                     $1970 = (+__Z5IKabsd($1969));
                     $1971 = $1970 < 9.9999999999999995E-7;
                     if (!($1971)) {
                      break;
                     }
                     HEAP8[$1956>>0] = 0;
                     $1972 = $iij140$01147&255;
                     HEAP8[$5>>0] = $1972;
                    }
                   } while(0);
                   $1973 = (($j1array35) + ($ij139$01150<<3)|0);
                   $1974 = +HEAPF64[$1973>>3];
                   HEAPF64[$3>>3] = $1974;
                   $1975 = (($cj1array36) + ($ij139$01150<<3)|0);
                   $1976 = +HEAPF64[$1975>>3];
                   HEAPF64[$92>>3] = $1976;
                   $1977 = (($sj1array37) + ($ij139$01150<<3)|0);
                   $1978 = +HEAPF64[$1977>>3];
                   HEAPF64[$93>>3] = $1978;
                   $1979 = +HEAPF64[$3>>3];
                   $1980 = (+__Z5IKcosd($1979));
                   $1981 = (+__Z5IKsind($1979));
                   $1982 = +HEAPF64[$43>>3];
                   $1983 = $1982 * $1982;
                   $1984 = +HEAPF64[$45>>3];
                   $1985 = $1984 * $1984;
                   $1986 = $1914 * $1984;
                   $1987 = $1915 * $1982;
                   $1988 = $1981 * 0.65600000000000003;
                   $1989 = $1980 * 1.5243902439024399;
                   $1990 = -$1986;
                   $1991 = $1980 * $1990;
                   $1992 = -$1987;
                   $1993 = $1980 * $1992;
                   $1994 = $1993 + $1991;
                   $1995 = $1980 * 0.0474569359756098;
                   $1996 = $1989 * $1985;
                   $1997 = $1995 + $1996;
                   $1998 = $1989 * $1983;
                   $1999 = $1998 + $1997;
                   $2000 = -0.03113175 - $1985;
                   $2001 = $2000 - $1983;
                   $2002 = $1988 * $1990;
                   $2003 = $2002 + $2001;
                   $2004 = $1988 * $1992;
                   $2005 = $2004 + $2003;
                   $2006 = (+__Z5IKabsd($1994));
                   $2007 = $2006 > 5.0000000000000004E-6;
                   if ($2007) {
                    break;
                   }
                   $2008 = +HEAPF64[$73>>3];
                   $2009 = $1990 - $1987;
                   $2010 = $2008 * -0.27650000000000002;
                   $2011 = $1981 * $2010;
                   $2012 = $2009 + $2011;
                   $2013 = $1981 * 0.32800000000000001;
                   $2014 = $2012 - $2013;
                   $2015 = (+__Z5IKabsd($2014));
                   $2016 = $2015 > 5.0000000000000004E-6;
                   if ($2016) {
                    break;
                   }
                   $2017 = (+__Z5IKabsd($1999));
                   $2018 = $2017 > 5.0000000000000004E-6;
                   if ($2018) {
                    break;
                   }
                   $2019 = (+__Z5IKabsd($2005));
                   $2020 = $2019 > 5.0000000000000004E-6;
                   if ($2020) {
                    break;
                   }
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                 } while(0);
                 $2021 = (($ij139$01150) + 1)|0;
                 $exitcond1451 = ($2021|0)==(2);
                 if ($exitcond1451) {
                  break L1637;
                 } else {
                  $ij139$01150 = $2021;
                 }
                }
               }
              } while(0);
              $2341 = +HEAPF64[$74>>3];
              $2342 = $2341 * -0.27650000000000002;
              $2343 = +HEAPF64[$43>>3];
              $2344 = +HEAPF64[$82>>3];
              $2345 = $2343 * $2344;
              $2346 = $2342 - $2345;
              $2347 = +HEAPF64[$81>>3];
              $2348 = +HEAPF64[$45>>3];
              $2349 = $2347 * $2348;
              $2350 = $2346 + $2349;
              $2351 = +HEAPF64[$47>>3];
              $2352 = (+__Z5IKabsd($2351));
              $2353 = +HEAPF64[$22>>3];
              $2354 = $2353 + 4.7123889803846897;
              $2355 = (+__Z6IKfmoddd($2354,6.2831853071795898));
              $2356 = $2355 + -3.14159265358979;
              $2357 = (+__Z5IKabsd($2356));
              $2358 = $2352 + $2357;
              $2359 = (+__Z5IKabsd($2358));
              $2360 = $2359 < 9.9999999999999995E-7;
              do {
               if ($2360) {
                $2361 = +HEAPF64[$60>>3];
                $2362 = +HEAPF64[$73>>3];
                $2363 = $2362 * 0.18138399999999999;
                $2364 = $2363 + 0.18403625000000001;
                $2365 = $2364 - $2361;
                $2366 = (+__Z5IKabsd($2365));
                $2367 = $2366 < 9.9999999999999995E-7;
                if (!($2367)) {
                 break;
                }
                $2368 = (+__Z5IKabsd($2350));
                $2369 = $2368 < 9.9999999999999995E-7;
                if (!($2369)) {
                 break;
                }
                $2370 = -$2348;
                HEAPF64[$47>>3] = 0.0;
                HEAPF64[$22>>3] = -1.5707963267949001;
                HEAPF64[$24>>3] = -1.0;
                HEAPF64[$23>>3] = 0.0;
                $2371 = +HEAPF64[$43>>3];
                $2372 = $2371 * $2371;
                $2373 = +HEAPF64[$45>>3];
                $2374 = $2373 * $2373;
                $2375 = $2372 + $2374;
                HEAPF64[$60>>3] = $2375;
                $2376 = +HEAPF64[$43>>3];
                $2377 = +HEAPF64[$26>>3];
                $2378 = $2376 * $2377;
                $2379 = +HEAPF64[$45>>3];
                $2380 = +HEAPF64[$32>>3];
                $2381 = $2379 * $2380;
                $2382 = $2378 + $2381;
                HEAPF64[$61>>3] = $2382;
                $2383 = +HEAPF64[$43>>3];
                $2384 = +HEAPF64[$28>>3];
                $2385 = $2383 * $2384;
                $2386 = +HEAPF64[$45>>3];
                $2387 = +HEAPF64[$34>>3];
                $2388 = $2386 * $2387;
                $2389 = $2385 + $2388;
                HEAPF64[$62>>3] = $2389;
                $2390 = +HEAPF64[$43>>3];
                $2391 = +HEAPF64[$30>>3];
                $2392 = $2390 * $2391;
                $2393 = +HEAPF64[$45>>3];
                $2394 = +HEAPF64[$36>>3];
                $2395 = $2393 * $2394;
                $2396 = $2392 + $2395;
                HEAPF64[$63>>3] = $2396;
                $2397 = +HEAPF64[$38>>3];
                $2398 = $2397 * $2370;
                HEAPF64[$64>>3] = $2398;
                $2399 = +HEAPF64[$43>>3];
                $2400 = +HEAPF64[$38>>3];
                $2401 = $2399 * $2400;
                HEAPF64[$65>>3] = $2401;
                $2402 = +HEAPF64[$40>>3];
                $2403 = $2402 * $2370;
                HEAPF64[$67>>3] = $2403;
                $2404 = +HEAPF64[$43>>3];
                $2405 = +HEAPF64[$40>>3];
                $2406 = $2404 * $2405;
                HEAPF64[$68>>3] = $2406;
                $2407 = +HEAPF64[$42>>3];
                $2408 = $2407 * $2370;
                HEAPF64[$70>>3] = $2408;
                $2409 = +HEAPF64[$43>>3];
                $2410 = +HEAPF64[$42>>3];
                $2411 = $2409 * $2410;
                HEAPF64[$71>>3] = $2411;
                $2412 = +HEAPF64[$73>>3];
                $2413 = -1.1862567811934901 - $2412;
                $2414 = (+__Z5IKabsd($2413));
                $2415 = $2414 < 9.9999999999999995E-7;
                if (!($2415)) {
                 HEAP16[$j1valid125>>1] = 0;
                 HEAP8[$6>>0] = 2;
                 $3286 = +HEAPF64[$73>>3];
                 $3287 = $3286 * 0.27650000000000002;
                 $3288 = -0.32800000000000001 - $3287;
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x601,$3288,-1);
                 $3289 = HEAP8[$176>>0]|0;
                 $3290 = ($3289<<24>>24)==(0);
                 if ($3290) {
                  break L1637;
                 }
                 $3291 = +HEAPF64[$x601>>3];
                 $3292 = +HEAPF64[$81>>3];
                 $3293 = +HEAPF64[$43>>3];
                 $3294 = $3292 * $3293;
                 $3295 = $3291 * $3294;
                 $3296 = +HEAPF64[$45>>3];
                 $3297 = +HEAPF64[$82>>3];
                 $3298 = $3296 * $3297;
                 $3299 = $3291 * $3298;
                 $3300 = $3295 + $3299;
                 HEAPF64[$sj1array124>>3] = $3300;
                 $3301 = !($3300 >= -1.0000020000000001);
                 $3302 = !($3300 <= 1.0000020000000001);
                 $or$cond150 = $3301 | $3302;
                 do {
                  if ($or$cond150) {
                   $3312 = (__Z13__DOUBLE_BITSd($3300)|0);
                   $3313 = tempRet0;
                   $3314 = $3313 & 2147483647;
                   $3315 = ($3314>>>0)>(2146435072);
                   $3316 = ($3312>>>0)>(0);
                   $3317 = ($3314|0)==(2146435072);
                   $3318 = $3317 & $3316;
                   $3319 = $3315 | $3318;
                   if (!($3319)) {
                    $ij1126$01106 = 0;
                    break;
                   }
                   HEAP8[$j1valid125>>0] = 1;
                   HEAPF64[$cj1array123>>3] = 1.0;
                   HEAPF64[$sj1array124>>3] = 0.0;
                   HEAPF64[$j1array122>>3] = 0.0;
                   $ij1126$01106 = 0;
                  } else {
                   HEAP8[$177>>0] = 1;
                   HEAP8[$j1valid125>>0] = 1;
                   $3303 = +HEAPF64[$sj1array124>>3];
                   $3304 = (+__Z6IKasind($3303));
                   HEAPF64[$j1array122>>3] = $3304;
                   $3305 = (+__Z5IKcosd($3304));
                   HEAPF64[$cj1array123>>3] = $3305;
                   $3306 = +HEAPF64[$sj1array124>>3];
                   HEAPF64[$178>>3] = $3306;
                   $3307 = +HEAPF64[$j1array122>>3];
                   $3308 = $3307 > 0.0;
                   $$v76 = $3308 ? 3.14159265358979 : -3.14159265358979;
                   $3309 = $$v76 - $3307;
                   HEAPF64[$179>>3] = $3309;
                   $3310 = +HEAPF64[$cj1array123>>3];
                   $3311 = -$3310;
                   HEAPF64[$180>>3] = $3311;
                   $ij1126$01106 = 0;
                  }
                 } while(0);
                 while(1) {
                  $3320 = (($j1valid125) + ($ij1126$01106)|0);
                  $3321 = HEAP8[$3320>>0]|0;
                  $3322 = ($3321<<24>>24)==(0);
                  do {
                   if (!($3322)) {
                    $3323 = $ij1126$01106&255;
                    HEAP8[$4>>0] = $3323;
                    HEAP8[$5>>0] = -1;
                    $iij1127$01103 = (($ij1126$01106) + 1)|0;
                    $3324 = ($iij1127$01103|0)<(2);
                    do {
                     if ($3324) {
                      $3325 = (($sj1array124) + ($ij1126$01106<<3)|0);
                      $3326 = (($j1valid125) + ($iij1127$01103)|0);
                      $3327 = HEAP8[$3326>>0]|0;
                      $3328 = ($3327<<24>>24)==(0);
                      if ($3328) {
                       break;
                      }
                      $3329 = (($cj1array123) + ($ij1126$01106<<3)|0);
                      $3330 = +HEAPF64[$3329>>3];
                      $3331 = (($cj1array123) + ($iij1127$01103<<3)|0);
                      $3332 = +HEAPF64[$3331>>3];
                      $3333 = $3330 - $3332;
                      $3334 = (+__Z5IKabsd($3333));
                      $3335 = $3334 < 9.9999999999999995E-7;
                      if (!($3335)) {
                       break;
                      }
                      $3336 = +HEAPF64[$3325>>3];
                      $3337 = (($sj1array124) + ($iij1127$01103<<3)|0);
                      $3338 = +HEAPF64[$3337>>3];
                      $3339 = $3336 - $3338;
                      $3340 = (+__Z5IKabsd($3339));
                      $3341 = $3340 < 9.9999999999999995E-7;
                      if (!($3341)) {
                       break;
                      }
                      HEAP8[$3326>>0] = 0;
                      $3342 = $iij1127$01103&255;
                      HEAP8[$5>>0] = $3342;
                     }
                    } while(0);
                    $3343 = (($j1array122) + ($ij1126$01106<<3)|0);
                    $3344 = +HEAPF64[$3343>>3];
                    HEAPF64[$3>>3] = $3344;
                    $3345 = (($cj1array123) + ($ij1126$01106<<3)|0);
                    $3346 = +HEAPF64[$3345>>3];
                    HEAPF64[$181>>3] = $3346;
                    $3347 = (($sj1array124) + ($ij1126$01106<<3)|0);
                    $3348 = +HEAPF64[$3347>>3];
                    HEAPF64[$182>>3] = $3348;
                    $3349 = +HEAPF64[$3>>3];
                    $3350 = (+__Z5IKcosd($3349));
                    $3351 = (+__Z5IKsind($3349));
                    $3352 = +HEAPF64[$43>>3];
                    $3353 = $3352 * $3352;
                    $3354 = +HEAPF64[$45>>3];
                    $3355 = $3354 * $3354;
                    $3356 = $3350 * 1.5243902439024399;
                    $3357 = +HEAPF64[$82>>3];
                    $3358 = $3354 * $3357;
                    $3359 = $3351 * $3358;
                    $3360 = +HEAPF64[$81>>3];
                    $3361 = $3352 * $3360;
                    $3362 = $3351 * $3361;
                    $3363 = $3350 * $3361;
                    $3364 = $3350 * $3358;
                    $3365 = $3364 + $3363;
                    $3366 = $3356 * $3355;
                    $3367 = $3356 * $3353;
                    $3368 = $3367 + $3366;
                    $3369 = $3350 * 0.0474569359756098;
                    $3370 = $3369 + $3368;
                    $3371 = -0.03113175 - $3355;
                    $3372 = $3371 - $3353;
                    $3373 = $3362 * 0.65600000000000003;
                    $3374 = $3372 - $3373;
                    $3375 = $3359 * 0.65600000000000003;
                    $3376 = $3374 - $3375;
                    $3377 = (+__Z5IKabsd($3365));
                    $3378 = $3377 > 5.0000000000000004E-6;
                    if ($3378) {
                     break;
                    }
                    $3379 = +HEAPF64[$73>>3];
                    $3380 = $3379 * 0.27650000000000002;
                    $3381 = $3380 + 0.32800000000000001;
                    $3382 = $3359 + $3381;
                    $3383 = $3362 + $3382;
                    $3384 = (+__Z5IKabsd($3383));
                    $3385 = $3384 > 5.0000000000000004E-6;
                    if ($3385) {
                     break;
                    }
                    $3386 = (+__Z5IKabsd($3370));
                    $3387 = $3386 > 5.0000000000000004E-6;
                    if ($3387) {
                     break;
                    }
                    $3388 = (+__Z5IKabsd($3376));
                    $3389 = $3388 > 5.0000000000000004E-6;
                    if ($3389) {
                     break;
                    }
                    __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                   }
                  } while(0);
                  $3390 = (($ij1126$01106) + 1)|0;
                  $exitcond1440 = ($3390|0)==(2);
                  if ($exitcond1440) {
                   break L1637;
                  } else {
                   $ij1126$01106 = $3390;
                  }
                 }
                }
                $2416 = +HEAPF64[$45>>3];
                $2417 = -$2416;
                HEAPF64[$47>>3] = 0.0;
                HEAPF64[$22>>3] = -1.5707963267949001;
                HEAPF64[$24>>3] = -1.0;
                HEAPF64[$23>>3] = 0.0;
                $2418 = +HEAPF64[$43>>3];
                $2419 = $2418 * $2418;
                $2420 = +HEAPF64[$45>>3];
                $2421 = $2420 * $2420;
                $2422 = $2419 + $2421;
                HEAPF64[$60>>3] = $2422;
                $2423 = +HEAPF64[$43>>3];
                $2424 = +HEAPF64[$26>>3];
                $2425 = $2423 * $2424;
                $2426 = +HEAPF64[$45>>3];
                $2427 = +HEAPF64[$32>>3];
                $2428 = $2426 * $2427;
                $2429 = $2425 + $2428;
                HEAPF64[$61>>3] = $2429;
                $2430 = +HEAPF64[$43>>3];
                $2431 = +HEAPF64[$28>>3];
                $2432 = $2430 * $2431;
                $2433 = +HEAPF64[$45>>3];
                $2434 = +HEAPF64[$34>>3];
                $2435 = $2433 * $2434;
                $2436 = $2432 + $2435;
                HEAPF64[$62>>3] = $2436;
                $2437 = +HEAPF64[$43>>3];
                $2438 = +HEAPF64[$30>>3];
                $2439 = $2437 * $2438;
                $2440 = +HEAPF64[$45>>3];
                $2441 = +HEAPF64[$36>>3];
                $2442 = $2440 * $2441;
                $2443 = $2439 + $2442;
                HEAPF64[$63>>3] = $2443;
                $2444 = +HEAPF64[$38>>3];
                $2445 = $2444 * $2417;
                HEAPF64[$64>>3] = $2445;
                $2446 = +HEAPF64[$43>>3];
                $2447 = +HEAPF64[$38>>3];
                $2448 = $2446 * $2447;
                HEAPF64[$65>>3] = $2448;
                $2449 = +HEAPF64[$40>>3];
                $2450 = $2449 * $2417;
                HEAPF64[$67>>3] = $2450;
                $2451 = +HEAPF64[$43>>3];
                $2452 = +HEAPF64[$40>>3];
                $2453 = $2451 * $2452;
                HEAPF64[$68>>3] = $2453;
                $2454 = +HEAPF64[$42>>3];
                $2455 = $2454 * $2417;
                HEAPF64[$70>>3] = $2455;
                $2456 = +HEAPF64[$43>>3];
                $2457 = +HEAPF64[$42>>3];
                $2458 = $2456 * $2457;
                HEAPF64[$71>>3] = $2458;
                $2459 = +HEAPF64[$81>>3];
                $2460 = +HEAPF64[$43>>3];
                $2461 = $2459 * $2460;
                $2462 = +HEAPF64[$45>>3];
                $2463 = +HEAPF64[$82>>3];
                $2464 = $2462 * $2463;
                $2465 = $2461 + $2464;
                $2466 = (+__Z5IKabsd($2465));
                $2467 = $2466 < 9.9999999999999995E-7;
                if (!($2467)) {
                 HEAP16[$j1valid118>>1] = 0;
                 HEAP8[$6>>0] = 2;
                 $3179 = +HEAPF64[$81>>3];
                 $3180 = +HEAPF64[$43>>3];
                 $3181 = $3179 * $3180;
                 $3182 = +HEAPF64[$45>>3];
                 $3183 = +HEAPF64[$82>>3];
                 $3184 = $3182 * $3183;
                 $3185 = $3181 + $3184;
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x591,$3185,-1);
                 $3186 = HEAP8[$169>>0]|0;
                 $3187 = ($3186<<24>>24)==(0);
                 if ($3187) {
                  break L1637;
                 }
                 $3188 = +HEAPF64[$x591>>3];
                 $3189 = +HEAPF64[$73>>3];
                 $3190 = $3189 * -0.27650000000000002;
                 $3191 = $3188 * $3190;
                 $3192 = $3188 * 0.32800000000000001;
                 $3193 = $3191 - $3192;
                 HEAPF64[$sj1array117>>3] = $3193;
                 $3194 = !($3193 >= -1.0000020000000001);
                 $3195 = !($3193 <= 1.0000020000000001);
                 $or$cond149 = $3194 | $3195;
                 do {
                  if ($or$cond149) {
                   $3205 = (__Z13__DOUBLE_BITSd($3193)|0);
                   $3206 = tempRet0;
                   $3207 = $3206 & 2147483647;
                   $3208 = ($3207>>>0)>(2146435072);
                   $3209 = ($3205>>>0)>(0);
                   $3210 = ($3207|0)==(2146435072);
                   $3211 = $3210 & $3209;
                   $3212 = $3208 | $3211;
                   if (!($3212)) {
                    $ij1119$01110 = 0;
                    break;
                   }
                   HEAP8[$j1valid118>>0] = 1;
                   HEAPF64[$cj1array116>>3] = 1.0;
                   HEAPF64[$sj1array117>>3] = 0.0;
                   HEAPF64[$j1array115>>3] = 0.0;
                   $ij1119$01110 = 0;
                  } else {
                   HEAP8[$170>>0] = 1;
                   HEAP8[$j1valid118>>0] = 1;
                   $3196 = +HEAPF64[$sj1array117>>3];
                   $3197 = (+__Z6IKasind($3196));
                   HEAPF64[$j1array115>>3] = $3197;
                   $3198 = (+__Z5IKcosd($3197));
                   HEAPF64[$cj1array116>>3] = $3198;
                   $3199 = +HEAPF64[$sj1array117>>3];
                   HEAPF64[$171>>3] = $3199;
                   $3200 = +HEAPF64[$j1array115>>3];
                   $3201 = $3200 > 0.0;
                   $$v78 = $3201 ? 3.14159265358979 : -3.14159265358979;
                   $3202 = $$v78 - $3200;
                   HEAPF64[$172>>3] = $3202;
                   $3203 = +HEAPF64[$cj1array116>>3];
                   $3204 = -$3203;
                   HEAPF64[$173>>3] = $3204;
                   $ij1119$01110 = 0;
                  }
                 } while(0);
                 while(1) {
                  $3213 = (($j1valid118) + ($ij1119$01110)|0);
                  $3214 = HEAP8[$3213>>0]|0;
                  $3215 = ($3214<<24>>24)==(0);
                  do {
                   if (!($3215)) {
                    $3216 = $ij1119$01110&255;
                    HEAP8[$4>>0] = $3216;
                    HEAP8[$5>>0] = -1;
                    $iij1120$01107 = (($ij1119$01110) + 1)|0;
                    $3217 = ($iij1120$01107|0)<(2);
                    do {
                     if ($3217) {
                      $3218 = (($sj1array117) + ($ij1119$01110<<3)|0);
                      $3219 = (($j1valid118) + ($iij1120$01107)|0);
                      $3220 = HEAP8[$3219>>0]|0;
                      $3221 = ($3220<<24>>24)==(0);
                      if ($3221) {
                       break;
                      }
                      $3222 = (($cj1array116) + ($ij1119$01110<<3)|0);
                      $3223 = +HEAPF64[$3222>>3];
                      $3224 = (($cj1array116) + ($iij1120$01107<<3)|0);
                      $3225 = +HEAPF64[$3224>>3];
                      $3226 = $3223 - $3225;
                      $3227 = (+__Z5IKabsd($3226));
                      $3228 = $3227 < 9.9999999999999995E-7;
                      if (!($3228)) {
                       break;
                      }
                      $3229 = +HEAPF64[$3218>>3];
                      $3230 = (($sj1array117) + ($iij1120$01107<<3)|0);
                      $3231 = +HEAPF64[$3230>>3];
                      $3232 = $3229 - $3231;
                      $3233 = (+__Z5IKabsd($3232));
                      $3234 = $3233 < 9.9999999999999995E-7;
                      if (!($3234)) {
                       break;
                      }
                      HEAP8[$3219>>0] = 0;
                      $3235 = $iij1120$01107&255;
                      HEAP8[$5>>0] = $3235;
                     }
                    } while(0);
                    $3236 = (($j1array115) + ($ij1119$01110<<3)|0);
                    $3237 = +HEAPF64[$3236>>3];
                    HEAPF64[$3>>3] = $3237;
                    $3238 = (($cj1array116) + ($ij1119$01110<<3)|0);
                    $3239 = +HEAPF64[$3238>>3];
                    HEAPF64[$174>>3] = $3239;
                    $3240 = (($sj1array117) + ($ij1119$01110<<3)|0);
                    $3241 = +HEAPF64[$3240>>3];
                    HEAPF64[$175>>3] = $3241;
                    $3242 = +HEAPF64[$3>>3];
                    $3243 = (+__Z5IKcosd($3242));
                    $3244 = (+__Z5IKsind($3242));
                    $3245 = +HEAPF64[$43>>3];
                    $3246 = $3245 * $3245;
                    $3247 = +HEAPF64[$45>>3];
                    $3248 = $3247 * $3247;
                    $3249 = +HEAPF64[$81>>3];
                    $3250 = $3245 * $3249;
                    $3251 = +HEAPF64[$82>>3];
                    $3252 = $3247 * $3251;
                    $3253 = $3244 * 0.65600000000000003;
                    $3254 = $3243 * 1.5243902439024399;
                    $3255 = $3243 * $3252;
                    $3256 = $3243 * $3250;
                    $3257 = $3256 + $3255;
                    $3258 = -$3250;
                    $3259 = $3243 * 0.0474569359756098;
                    $3260 = $3254 * $3246;
                    $3261 = $3259 + $3260;
                    $3262 = $3254 * $3248;
                    $3263 = $3261 + $3262;
                    $3264 = $3253 * $3252;
                    $3265 = -0.03113175 - $3264;
                    $3266 = $3253 * $3258;
                    $3267 = $3266 + $3265;
                    $3268 = $3267 - $3248;
                    $3269 = $3268 - $3246;
                    $3270 = (+__Z5IKabsd($3257));
                    $3271 = $3270 > 5.0000000000000004E-6;
                    if ($3271) {
                     break;
                    }
                    $3272 = +HEAPF64[$73>>3];
                    $3273 = $3258 - $3252;
                    $3274 = $3272 * -0.27650000000000002;
                    $3275 = $3244 * $3274;
                    $3276 = $3273 + $3275;
                    $3277 = $3244 * 0.32800000000000001;
                    $3278 = $3276 - $3277;
                    $3279 = (+__Z5IKabsd($3278));
                    $3280 = $3279 > 5.0000000000000004E-6;
                    if ($3280) {
                     break;
                    }
                    $3281 = (+__Z5IKabsd($3263));
                    $3282 = $3281 > 5.0000000000000004E-6;
                    if ($3282) {
                     break;
                    }
                    $3283 = (+__Z5IKabsd($3269));
                    $3284 = $3283 > 5.0000000000000004E-6;
                    if ($3284) {
                     break;
                    }
                    __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                   }
                  } while(0);
                  $3285 = (($ij1119$01110) + 1)|0;
                  $exitcond1441 = ($3285|0)==(2);
                  if ($exitcond1441) {
                   break L1637;
                  } else {
                   $ij1119$01110 = $3285;
                  }
                 }
                }
                $2468 = $2460 * $2460;
                $2469 = $2462 * $2462;
                $2470 = $2468 + $2469;
                $2471 = (+__Z5IKabsd($2470));
                $2472 = $2471 == 0.0;
                do {
                 if (!($2472)) {
                  $2473 = (+Math_pow((+$2470),-0.5));
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x523,$2460,$2462,1.9999999999999999E-6);
                  $2474 = HEAP8[$151>>0]|0;
                  $2475 = ($2474<<24>>24)==(0);
                  if ($2475) {
                   break;
                  }
                  $2476 = +HEAPF64[$43>>3];
                  $2477 = $2473 * $2476;
                  $2478 = -$2477;
                  $2479 = +HEAPF64[$45>>3];
                  $2480 = $2473 * $2479;
                  $2481 = +HEAPF64[$74>>3];
                  $2482 = $2481 * 0.27650000000000002;
                  $2483 = $2479 * $2480;
                  $2484 = $2483 - $2482;
                  $2485 = $2476 * $2477;
                  $2486 = $2485 + $2484;
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x525,$2476,$2479,1.9999999999999999E-6);
                  $2487 = HEAP8[$152>>0]|0;
                  $2488 = ($2487<<24>>24)==(0);
                  if ($2488) {
                   break;
                  }
                  $2489 = +HEAPF64[$x525>>3];
                  $2490 = +HEAPF64[$this>>3];
                  $2491 = $2489 + $2490;
                  $2492 = (+__Z5IKabsd($2491));
                  $2493 = $2492 + 3.14159265358979;
                  $2494 = (+__Z6IKfmoddd($2493,6.2831853071795898));
                  $2495 = $2494 + -3.14159265358979;
                  $2496 = +HEAPF64[$43>>3];
                  $2497 = +HEAPF64[$45>>3];
                  $2498 = (+__Z5IKabsd($2495));
                  $2499 = $2498 < 9.9999999999999995E-7;
                  if (!($2499)) {
                   break;
                  }
                  $2500 = +HEAPF64[$73>>3];
                  $2501 = $2496 * $2496;
                  $2502 = 0.18403625000000001 - $2501;
                  $2503 = $2500 * 0.18138399999999999;
                  $2504 = $2502 + $2503;
                  $2505 = $2497 * $2497;
                  $2506 = $2504 - $2505;
                  $2507 = (+__Z5IKabsd($2506));
                  $2508 = $2507 < 9.9999999999999995E-7;
                  if (!($2508)) {
                   break;
                  }
                  $2509 = (+__Z5IKabsd($2486));
                  $2510 = $2509 < 9.9999999999999995E-7;
                  if (!($2510)) {
                   break;
                  }
                  $2511 = -$2497;
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x530,$2496,$2497,1.9999999999999999E-6);
                  $2512 = HEAP8[$153>>0]|0;
                  $2513 = ($2512<<24>>24)==(0);
                  if ($2513) {
                   break L1637;
                  }
                  $2514 = +HEAPF64[$x530>>3];
                  $2515 = -$2514;
                  $2516 = +HEAPF64[$43>>3];
                  $2517 = $2516 * $2516;
                  $2518 = +HEAPF64[$45>>3];
                  $2519 = $2518 * $2518;
                  $2520 = $2517 + $2519;
                  HEAPF64[$47>>3] = 0.0;
                  HEAPF64[$22>>3] = -1.5707963267949001;
                  HEAPF64[$24>>3] = -1.0;
                  HEAPF64[$23>>3] = 0.0;
                  HEAPF64[$60>>3] = $2520;
                  $2521 = +HEAPF64[$43>>3];
                  $2522 = +HEAPF64[$26>>3];
                  $2523 = $2521 * $2522;
                  $2524 = +HEAPF64[$45>>3];
                  $2525 = +HEAPF64[$32>>3];
                  $2526 = $2524 * $2525;
                  $2527 = $2523 + $2526;
                  HEAPF64[$61>>3] = $2527;
                  $2528 = +HEAPF64[$43>>3];
                  $2529 = +HEAPF64[$28>>3];
                  $2530 = $2528 * $2529;
                  $2531 = +HEAPF64[$45>>3];
                  $2532 = +HEAPF64[$34>>3];
                  $2533 = $2531 * $2532;
                  $2534 = $2530 + $2533;
                  HEAPF64[$62>>3] = $2534;
                  $2535 = +HEAPF64[$43>>3];
                  $2536 = +HEAPF64[$30>>3];
                  $2537 = $2535 * $2536;
                  $2538 = +HEAPF64[$45>>3];
                  $2539 = +HEAPF64[$36>>3];
                  $2540 = $2538 * $2539;
                  $2541 = $2537 + $2540;
                  HEAPF64[$63>>3] = $2541;
                  $2542 = +HEAPF64[$38>>3];
                  $2543 = $2542 * $2511;
                  HEAPF64[$64>>3] = $2543;
                  $2544 = +HEAPF64[$43>>3];
                  $2545 = +HEAPF64[$38>>3];
                  $2546 = $2544 * $2545;
                  HEAPF64[$65>>3] = $2546;
                  $2547 = +HEAPF64[$40>>3];
                  $2548 = $2547 * $2511;
                  HEAPF64[$67>>3] = $2548;
                  $2549 = +HEAPF64[$43>>3];
                  $2550 = +HEAPF64[$40>>3];
                  $2551 = $2549 * $2550;
                  HEAPF64[$68>>3] = $2551;
                  $2552 = +HEAPF64[$42>>3];
                  $2553 = $2552 * $2511;
                  HEAPF64[$70>>3] = $2553;
                  $2554 = +HEAPF64[$43>>3];
                  $2555 = +HEAPF64[$42>>3];
                  $2556 = $2554 * $2555;
                  HEAPF64[$71>>3] = $2556;
                  HEAPF64[$82>>3] = $2478;
                  HEAPF64[$81>>3] = $2480;
                  HEAPF64[$this>>3] = $2515;
                  $2557 = +HEAPF64[$43>>3];
                  $2558 = $2473 * $2557;
                  $2559 = -$2558;
                  $2560 = +HEAPF64[$45>>3];
                  $2561 = $2473 * $2560;
                  $2562 = +HEAPF64[$73>>3];
                  $2563 = -1.1862567811934901 - $2562;
                  $2564 = (+__Z5IKabsd($2563));
                  $2565 = $2564 < 9.9999999999999995E-7;
                  if (!($2565)) {
                   HEAP16[$j1valid87>>1] = 0;
                   HEAP8[$6>>0] = 2;
                   $2722 = +HEAPF64[$73>>3];
                   $2723 = $2722 * 0.27650000000000002;
                   $2724 = -0.32800000000000001 - $2723;
                   __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x547,$2724,-1);
                   $2725 = HEAP8[$162>>0]|0;
                   $2726 = ($2725<<24>>24)==(0);
                   if ($2726) {
                    break L1637;
                   }
                   $2727 = +HEAPF64[$x547>>3];
                   $2728 = +HEAPF64[$45>>3];
                   $2729 = $2728 * $2559;
                   $2730 = $2727 * $2729;
                   $2731 = +HEAPF64[$43>>3];
                   $2732 = $2561 * $2731;
                   $2733 = $2727 * $2732;
                   $2734 = $2730 + $2733;
                   HEAPF64[$sj1array86>>3] = $2734;
                   $2735 = !($2734 >= -1.0000020000000001);
                   $2736 = !($2734 <= 1.0000020000000001);
                   $or$cond130 = $2735 | $2736;
                   do {
                    if ($or$cond130) {
                     $2746 = (__Z13__DOUBLE_BITSd($2734)|0);
                     $2747 = tempRet0;
                     $2748 = $2747 & 2147483647;
                     $2749 = ($2748>>>0)>(2146435072);
                     $2750 = ($2746>>>0)>(0);
                     $2751 = ($2748|0)==(2146435072);
                     $2752 = $2751 & $2750;
                     $2753 = $2749 | $2752;
                     if (!($2753)) {
                      $ij188$01114 = 0;
                      break;
                     }
                     HEAP8[$j1valid87>>0] = 1;
                     HEAPF64[$cj1array85>>3] = 1.0;
                     HEAPF64[$sj1array86>>3] = 0.0;
                     HEAPF64[$j1array84>>3] = 0.0;
                     $ij188$01114 = 0;
                    } else {
                     HEAP8[$163>>0] = 1;
                     HEAP8[$j1valid87>>0] = 1;
                     $2737 = +HEAPF64[$sj1array86>>3];
                     $2738 = (+__Z6IKasind($2737));
                     HEAPF64[$j1array84>>3] = $2738;
                     $2739 = (+__Z5IKcosd($2738));
                     HEAPF64[$cj1array85>>3] = $2739;
                     $2740 = +HEAPF64[$sj1array86>>3];
                     HEAPF64[$164>>3] = $2740;
                     $2741 = +HEAPF64[$j1array84>>3];
                     $2742 = $2741 > 0.0;
                     $$v84 = $2742 ? 3.14159265358979 : -3.14159265358979;
                     $2743 = $$v84 - $2741;
                     HEAPF64[$165>>3] = $2743;
                     $2744 = +HEAPF64[$cj1array85>>3];
                     $2745 = -$2744;
                     HEAPF64[$166>>3] = $2745;
                     $ij188$01114 = 0;
                    }
                   } while(0);
                   while(1) {
                    $2754 = (($j1valid87) + ($ij188$01114)|0);
                    $2755 = HEAP8[$2754>>0]|0;
                    $2756 = ($2755<<24>>24)==(0);
                    do {
                     if (!($2756)) {
                      $2757 = $ij188$01114&255;
                      HEAP8[$4>>0] = $2757;
                      HEAP8[$5>>0] = -1;
                      $iij189$01111 = (($ij188$01114) + 1)|0;
                      $2758 = ($iij189$01111|0)<(2);
                      do {
                       if ($2758) {
                        $2759 = (($sj1array86) + ($ij188$01114<<3)|0);
                        $2760 = (($j1valid87) + ($iij189$01111)|0);
                        $2761 = HEAP8[$2760>>0]|0;
                        $2762 = ($2761<<24>>24)==(0);
                        if ($2762) {
                         break;
                        }
                        $2763 = (($cj1array85) + ($ij188$01114<<3)|0);
                        $2764 = +HEAPF64[$2763>>3];
                        $2765 = (($cj1array85) + ($iij189$01111<<3)|0);
                        $2766 = +HEAPF64[$2765>>3];
                        $2767 = $2764 - $2766;
                        $2768 = (+__Z5IKabsd($2767));
                        $2769 = $2768 < 9.9999999999999995E-7;
                        if (!($2769)) {
                         break;
                        }
                        $2770 = +HEAPF64[$2759>>3];
                        $2771 = (($sj1array86) + ($iij189$01111<<3)|0);
                        $2772 = +HEAPF64[$2771>>3];
                        $2773 = $2770 - $2772;
                        $2774 = (+__Z5IKabsd($2773));
                        $2775 = $2774 < 9.9999999999999995E-7;
                        if (!($2775)) {
                         break;
                        }
                        HEAP8[$2760>>0] = 0;
                        $2776 = $iij189$01111&255;
                        HEAP8[$5>>0] = $2776;
                       }
                      } while(0);
                      $2777 = (($j1array84) + ($ij188$01114<<3)|0);
                      $2778 = +HEAPF64[$2777>>3];
                      HEAPF64[$3>>3] = $2778;
                      $2779 = (($cj1array85) + ($ij188$01114<<3)|0);
                      $2780 = +HEAPF64[$2779>>3];
                      HEAPF64[$167>>3] = $2780;
                      $2781 = (($sj1array86) + ($ij188$01114<<3)|0);
                      $2782 = +HEAPF64[$2781>>3];
                      HEAPF64[$168>>3] = $2782;
                      $2783 = +HEAPF64[$3>>3];
                      $2784 = (+__Z5IKcosd($2783));
                      $2785 = (+__Z5IKsind($2783));
                      $2786 = +HEAPF64[$43>>3];
                      $2787 = $2786 * $2786;
                      $2788 = +HEAPF64[$45>>3];
                      $2789 = $2788 * $2788;
                      $2790 = $2561 * $2786;
                      $2791 = $2784 * 1.5243902439024399;
                      $2792 = $2788 * $2559;
                      $2793 = $2785 * $2792;
                      $2794 = $2784 * $2790;
                      $2795 = $2784 * $2792;
                      $2796 = $2794 + $2795;
                      $2797 = $2784 * 0.0474569359756098;
                      $2798 = $2791 * $2787;
                      $2799 = $2797 + $2798;
                      $2800 = $2791 * $2789;
                      $2801 = $2799 + $2800;
                      $2802 = -0.03113175 - $2789;
                      $2803 = $2802 - $2787;
                      $2804 = $2785 * -0.65600000000000003;
                      $2805 = $2804 * $2790;
                      $2806 = $2805 + $2803;
                      $2807 = $2793 * 0.65600000000000003;
                      $2808 = $2806 - $2807;
                      $2809 = (+__Z5IKabsd($2796));
                      $2810 = $2809 > 5.0000000000000004E-6;
                      if ($2810) {
                       break;
                      }
                      $2811 = +HEAPF64[$73>>3];
                      $2812 = $2811 * 0.27650000000000002;
                      $2813 = $2812 + 0.32800000000000001;
                      $2814 = $2793 + $2813;
                      $2815 = $2785 * $2790;
                      $2816 = $2815 + $2814;
                      $2817 = (+__Z5IKabsd($2816));
                      $2818 = $2817 > 5.0000000000000004E-6;
                      if ($2818) {
                       break;
                      }
                      $2819 = (+__Z5IKabsd($2801));
                      $2820 = $2819 > 5.0000000000000004E-6;
                      if ($2820) {
                       break;
                      }
                      $2821 = (+__Z5IKabsd($2808));
                      $2822 = $2821 > 5.0000000000000004E-6;
                      if ($2822) {
                       break;
                      }
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                     }
                    } while(0);
                    $2823 = (($ij188$01114) + 1)|0;
                    $exitcond1442 = ($2823|0)==(2);
                    if ($exitcond1442) {
                     break L1637;
                    } else {
                     $ij188$01114 = $2823;
                    }
                   }
                  }
                  $2566 = -$2560;
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x535,$2557,$2560,1.9999999999999999E-6);
                  $2567 = HEAP8[$154>>0]|0;
                  $2568 = ($2567<<24>>24)==(0);
                  if ($2568) {
                   break L1637;
                  }
                  $2569 = +HEAPF64[$x535>>3];
                  $2570 = -$2569;
                  $2571 = +HEAPF64[$43>>3];
                  $2572 = $2571 * $2571;
                  $2573 = +HEAPF64[$45>>3];
                  $2574 = $2573 * $2573;
                  $2575 = $2572 + $2574;
                  HEAPF64[$47>>3] = 0.0;
                  HEAPF64[$22>>3] = -1.5707963267949001;
                  HEAPF64[$24>>3] = -1.0;
                  HEAPF64[$23>>3] = 0.0;
                  HEAPF64[$60>>3] = $2575;
                  $2576 = +HEAPF64[$43>>3];
                  $2577 = +HEAPF64[$26>>3];
                  $2578 = $2576 * $2577;
                  $2579 = +HEAPF64[$45>>3];
                  $2580 = +HEAPF64[$32>>3];
                  $2581 = $2579 * $2580;
                  $2582 = $2578 + $2581;
                  HEAPF64[$61>>3] = $2582;
                  $2583 = +HEAPF64[$43>>3];
                  $2584 = +HEAPF64[$28>>3];
                  $2585 = $2583 * $2584;
                  $2586 = +HEAPF64[$45>>3];
                  $2587 = +HEAPF64[$34>>3];
                  $2588 = $2586 * $2587;
                  $2589 = $2585 + $2588;
                  HEAPF64[$62>>3] = $2589;
                  $2590 = +HEAPF64[$43>>3];
                  $2591 = +HEAPF64[$30>>3];
                  $2592 = $2590 * $2591;
                  $2593 = +HEAPF64[$45>>3];
                  $2594 = +HEAPF64[$36>>3];
                  $2595 = $2593 * $2594;
                  $2596 = $2592 + $2595;
                  HEAPF64[$63>>3] = $2596;
                  $2597 = +HEAPF64[$38>>3];
                  $2598 = $2597 * $2566;
                  HEAPF64[$64>>3] = $2598;
                  $2599 = +HEAPF64[$43>>3];
                  $2600 = +HEAPF64[$38>>3];
                  $2601 = $2599 * $2600;
                  HEAPF64[$65>>3] = $2601;
                  $2602 = +HEAPF64[$40>>3];
                  $2603 = $2602 * $2566;
                  HEAPF64[$67>>3] = $2603;
                  $2604 = +HEAPF64[$43>>3];
                  $2605 = +HEAPF64[$40>>3];
                  $2606 = $2604 * $2605;
                  HEAPF64[$68>>3] = $2606;
                  $2607 = +HEAPF64[$42>>3];
                  $2608 = $2607 * $2566;
                  HEAPF64[$70>>3] = $2608;
                  $2609 = +HEAPF64[$43>>3];
                  $2610 = +HEAPF64[$42>>3];
                  $2611 = $2609 * $2610;
                  HEAPF64[$71>>3] = $2611;
                  HEAPF64[$82>>3] = $2559;
                  HEAPF64[$81>>3] = $2561;
                  HEAPF64[$this>>3] = $2570;
                  $2612 = +HEAPF64[$43>>3];
                  $2613 = $2473 * $2612;
                  $2614 = -$2613;
                  $2615 = +HEAPF64[$45>>3];
                  $2616 = $2473 * $2615;
                  $2617 = (+__Z5IKabsd(0.0));
                  $2618 = $2617 < 9.9999999999999995E-7;
                  if ($2618) {
                   break L1637;
                  }
                  HEAP16[$j1valid80>>1] = 0;
                  HEAP8[$6>>0] = 2;
                  $2619 = +HEAPF64[$43>>3];
                  $2620 = $2616 * $2619;
                  $2621 = +HEAPF64[$45>>3];
                  $2622 = $2621 * $2614;
                  $2623 = $2620 + $2622;
                  __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x537,$2623,-1);
                  $2624 = HEAP8[$155>>0]|0;
                  $2625 = ($2624<<24>>24)==(0);
                  if ($2625) {
                   break L1637;
                  }
                  $2626 = +HEAPF64[$x537>>3];
                  $2627 = +HEAPF64[$73>>3];
                  $2628 = $2627 * -0.27650000000000002;
                  $2629 = $2626 * $2628;
                  $2630 = $2626 * 0.32800000000000001;
                  $2631 = $2629 - $2630;
                  HEAPF64[$sj1array79>>3] = $2631;
                  $2632 = !($2631 >= -1.0000020000000001);
                  $2633 = !($2631 <= 1.0000020000000001);
                  $or$cond129 = $2632 | $2633;
                  do {
                   if ($or$cond129) {
                    $2643 = (__Z13__DOUBLE_BITSd($2631)|0);
                    $2644 = tempRet0;
                    $2645 = $2644 & 2147483647;
                    $2646 = ($2645>>>0)>(2146435072);
                    $2647 = ($2643>>>0)>(0);
                    $2648 = ($2645|0)==(2146435072);
                    $2649 = $2648 & $2647;
                    $2650 = $2646 | $2649;
                    if (!($2650)) {
                     $ij181$01118 = 0;
                     break;
                    }
                    HEAP8[$j1valid80>>0] = 1;
                    HEAPF64[$cj1array78>>3] = 1.0;
                    HEAPF64[$sj1array79>>3] = 0.0;
                    HEAPF64[$j1array77>>3] = 0.0;
                    $ij181$01118 = 0;
                   } else {
                    HEAP8[$156>>0] = 1;
                    HEAP8[$j1valid80>>0] = 1;
                    $2634 = +HEAPF64[$sj1array79>>3];
                    $2635 = (+__Z6IKasind($2634));
                    HEAPF64[$j1array77>>3] = $2635;
                    $2636 = (+__Z5IKcosd($2635));
                    HEAPF64[$cj1array78>>3] = $2636;
                    $2637 = +HEAPF64[$sj1array79>>3];
                    HEAPF64[$157>>3] = $2637;
                    $2638 = +HEAPF64[$j1array77>>3];
                    $2639 = $2638 > 0.0;
                    $$v86 = $2639 ? 3.14159265358979 : -3.14159265358979;
                    $2640 = $$v86 - $2638;
                    HEAPF64[$158>>3] = $2640;
                    $2641 = +HEAPF64[$cj1array78>>3];
                    $2642 = -$2641;
                    HEAPF64[$159>>3] = $2642;
                    $ij181$01118 = 0;
                   }
                  } while(0);
                  while(1) {
                   $2651 = (($j1valid80) + ($ij181$01118)|0);
                   $2652 = HEAP8[$2651>>0]|0;
                   $2653 = ($2652<<24>>24)==(0);
                   do {
                    if (!($2653)) {
                     $2654 = $ij181$01118&255;
                     HEAP8[$4>>0] = $2654;
                     HEAP8[$5>>0] = -1;
                     $iij182$01115 = (($ij181$01118) + 1)|0;
                     $2655 = ($iij182$01115|0)<(2);
                     do {
                      if ($2655) {
                       $2656 = (($sj1array79) + ($ij181$01118<<3)|0);
                       $2657 = (($j1valid80) + ($iij182$01115)|0);
                       $2658 = HEAP8[$2657>>0]|0;
                       $2659 = ($2658<<24>>24)==(0);
                       if ($2659) {
                        break;
                       }
                       $2660 = (($cj1array78) + ($ij181$01118<<3)|0);
                       $2661 = +HEAPF64[$2660>>3];
                       $2662 = (($cj1array78) + ($iij182$01115<<3)|0);
                       $2663 = +HEAPF64[$2662>>3];
                       $2664 = $2661 - $2663;
                       $2665 = (+__Z5IKabsd($2664));
                       $2666 = $2665 < 9.9999999999999995E-7;
                       if (!($2666)) {
                        break;
                       }
                       $2667 = +HEAPF64[$2656>>3];
                       $2668 = (($sj1array79) + ($iij182$01115<<3)|0);
                       $2669 = +HEAPF64[$2668>>3];
                       $2670 = $2667 - $2669;
                       $2671 = (+__Z5IKabsd($2670));
                       $2672 = $2671 < 9.9999999999999995E-7;
                       if (!($2672)) {
                        break;
                       }
                       HEAP8[$2657>>0] = 0;
                       $2673 = $iij182$01115&255;
                       HEAP8[$5>>0] = $2673;
                      }
                     } while(0);
                     $2674 = (($j1array77) + ($ij181$01118<<3)|0);
                     $2675 = +HEAPF64[$2674>>3];
                     HEAPF64[$3>>3] = $2675;
                     $2676 = (($cj1array78) + ($ij181$01118<<3)|0);
                     $2677 = +HEAPF64[$2676>>3];
                     HEAPF64[$160>>3] = $2677;
                     $2678 = (($sj1array79) + ($ij181$01118<<3)|0);
                     $2679 = +HEAPF64[$2678>>3];
                     HEAPF64[$161>>3] = $2679;
                     $2680 = +HEAPF64[$3>>3];
                     $2681 = (+__Z5IKcosd($2680));
                     $2682 = (+__Z5IKsind($2680));
                     $2683 = +HEAPF64[$43>>3];
                     $2684 = $2683 * $2683;
                     $2685 = +HEAPF64[$45>>3];
                     $2686 = $2685 * $2685;
                     $2687 = $2616 * $2683;
                     $2688 = $2685 * $2614;
                     $2689 = $2682 * 0.65600000000000003;
                     $2690 = $2681 * 1.5243902439024399;
                     $2691 = $2681 * $2688;
                     $2692 = $2681 * $2687;
                     $2693 = $2692 + $2691;
                     $2694 = -$2687;
                     $2695 = $2690 * $2686;
                     $2696 = $2690 * $2684;
                     $2697 = $2696 + $2695;
                     $2698 = $2681 * 0.0474569359756098;
                     $2699 = $2698 + $2697;
                     $2700 = $2689 * $2694;
                     $2701 = $2700 + -0.03113175;
                     $2702 = $2701 - $2684;
                     $2703 = $2702 - $2686;
                     $2704 = $2689 * $2688;
                     $2705 = $2703 - $2704;
                     $2706 = (+__Z5IKabsd($2693));
                     $2707 = $2706 > 5.0000000000000004E-6;
                     if ($2707) {
                      break;
                     }
                     $2708 = +HEAPF64[$73>>3];
                     $2709 = $2694 - $2688;
                     $2710 = $2708 * -0.27650000000000002;
                     $2711 = $2682 * $2710;
                     $2712 = $2709 + $2711;
                     $2713 = $2682 * 0.32800000000000001;
                     $2714 = $2712 - $2713;
                     $2715 = (+__Z5IKabsd($2714));
                     $2716 = $2715 > 5.0000000000000004E-6;
                     if ($2716) {
                      break;
                     }
                     $2717 = (+__Z5IKabsd($2699));
                     $2718 = $2717 > 5.0000000000000004E-6;
                     if ($2718) {
                      break;
                     }
                     $2719 = (+__Z5IKabsd($2705));
                     $2720 = $2719 > 5.0000000000000004E-6;
                     if ($2720) {
                      break;
                     }
                     __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                    }
                   } while(0);
                   $2721 = (($ij181$01118) + 1)|0;
                   $exitcond1443 = ($2721|0)==(2);
                   if ($exitcond1443) {
                    break L1637;
                   } else {
                    $ij181$01118 = $2721;
                   }
                  }
                 }
                } while(0);
                $2824 = +HEAPF64[$43>>3];
                $2825 = $2824 * $2824;
                $2826 = +HEAPF64[$45>>3];
                $2827 = $2826 * $2826;
                $2828 = $2825 + $2827;
                $2829 = (+__Z5IKabsd($2828));
                $2830 = $2829 == 0.0;
                if ($2830) {
                 break L1637;
                }
                $2831 = (+Math_pow((+$2828),-0.5));
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x557,$2824,$2826,1.9999999999999999E-6);
                $2832 = HEAP8[$133>>0]|0;
                $2833 = ($2832<<24>>24)==(0);
                if ($2833) {
                 break L1637;
                }
                $2834 = +HEAPF64[$43>>3];
                $2835 = $2831 * $2834;
                $2836 = +HEAPF64[$45>>3];
                $2837 = $2831 * $2836;
                $2838 = -$2837;
                $2839 = +HEAPF64[$74>>3];
                $2840 = $2839 * -0.27650000000000002;
                $2841 = $2834 * $2835;
                $2842 = $2840 - $2841;
                $2843 = $2836 * $2838;
                $2844 = $2843 + $2842;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x559,$2834,$2836,1.9999999999999999E-6);
                $2845 = HEAP8[$134>>0]|0;
                $2846 = ($2845<<24>>24)==(0);
                if ($2846) {
                 break L1637;
                }
                $2847 = +HEAPF64[$x559>>3];
                $2848 = $2847 + -3.14159265358979;
                $2849 = +HEAPF64[$this>>3];
                $2850 = $2848 + $2849;
                $2851 = (+__Z5IKabsd($2850));
                $2852 = $2851 + 3.14159265358979;
                $2853 = (+__Z6IKfmoddd($2852,6.2831853071795898));
                $2854 = $2853 + -3.14159265358979;
                $2855 = +HEAPF64[$43>>3];
                $2856 = +HEAPF64[$45>>3];
                $2857 = (+__Z5IKabsd($2854));
                $2858 = $2857 < 9.9999999999999995E-7;
                if (!($2858)) {
                 break L1637;
                }
                $2859 = +HEAPF64[$73>>3];
                $2860 = $2855 * $2855;
                $2861 = 0.18403625000000001 - $2860;
                $2862 = $2859 * 0.18138399999999999;
                $2863 = $2861 + $2862;
                $2864 = $2856 * $2856;
                $2865 = $2863 - $2864;
                $2866 = (+__Z5IKabsd($2865));
                $2867 = $2866 < 9.9999999999999995E-7;
                if (!($2867)) {
                 break L1637;
                }
                $2868 = (+__Z5IKabsd($2844));
                $2869 = $2868 < 9.9999999999999995E-7;
                if (!($2869)) {
                 break L1637;
                }
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x564,$2855,$2856,1.9999999999999999E-6);
                $2870 = HEAP8[$135>>0]|0;
                $2871 = ($2870<<24>>24)==(0);
                if ($2871) {
                 break L1637;
                }
                $2872 = +HEAPF64[$x564>>3];
                $2873 = +HEAPF64[$45>>3];
                $2874 = -$2873;
                $2875 = +HEAPF64[$43>>3];
                $2876 = $2875 * $2875;
                $2877 = $2873 * $2873;
                $2878 = $2877 + $2876;
                HEAPF64[$47>>3] = 0.0;
                HEAPF64[$22>>3] = -1.5707963267949001;
                HEAPF64[$24>>3] = -1.0;
                HEAPF64[$23>>3] = 0.0;
                HEAPF64[$60>>3] = $2878;
                $2879 = +HEAPF64[$43>>3];
                $2880 = +HEAPF64[$26>>3];
                $2881 = $2879 * $2880;
                $2882 = +HEAPF64[$45>>3];
                $2883 = +HEAPF64[$32>>3];
                $2884 = $2882 * $2883;
                $2885 = $2881 + $2884;
                HEAPF64[$61>>3] = $2885;
                $2886 = +HEAPF64[$43>>3];
                $2887 = +HEAPF64[$28>>3];
                $2888 = $2886 * $2887;
                $2889 = +HEAPF64[$45>>3];
                $2890 = +HEAPF64[$34>>3];
                $2891 = $2889 * $2890;
                $2892 = $2888 + $2891;
                HEAPF64[$62>>3] = $2892;
                $2893 = +HEAPF64[$43>>3];
                $2894 = +HEAPF64[$30>>3];
                $2895 = $2893 * $2894;
                $2896 = +HEAPF64[$45>>3];
                $2897 = +HEAPF64[$36>>3];
                $2898 = $2896 * $2897;
                $2899 = $2895 + $2898;
                HEAPF64[$63>>3] = $2899;
                $2900 = +HEAPF64[$38>>3];
                $2901 = $2900 * $2874;
                HEAPF64[$64>>3] = $2901;
                $2902 = +HEAPF64[$43>>3];
                $2903 = +HEAPF64[$38>>3];
                $2904 = $2902 * $2903;
                HEAPF64[$65>>3] = $2904;
                $2905 = +HEAPF64[$40>>3];
                $2906 = $2905 * $2874;
                HEAPF64[$67>>3] = $2906;
                $2907 = +HEAPF64[$43>>3];
                $2908 = +HEAPF64[$40>>3];
                $2909 = $2907 * $2908;
                HEAPF64[$68>>3] = $2909;
                $2910 = +HEAPF64[$42>>3];
                $2911 = $2910 * $2874;
                HEAPF64[$70>>3] = $2911;
                $2912 = +HEAPF64[$43>>3];
                $2913 = +HEAPF64[$42>>3];
                $2914 = $2912 * $2913;
                HEAPF64[$71>>3] = $2914;
                HEAPF64[$82>>3] = $2835;
                HEAPF64[$81>>3] = $2838;
                $2915 = 3.1415926500000002 - $2872;
                HEAPF64[$this>>3] = $2915;
                $2916 = +HEAPF64[$43>>3];
                $2917 = $2831 * $2916;
                $2918 = $2831 * $2874;
                $2919 = +HEAPF64[$73>>3];
                $2920 = -1.1862567811934901 - $2919;
                $2921 = (+__Z5IKabsd($2920));
                $2922 = $2921 < 9.9999999999999995E-7;
                if (!($2922)) {
                 HEAP16[$j1valid110>>1] = 0;
                 HEAP8[$6>>0] = 2;
                 $3077 = +HEAPF64[$73>>3];
                 $3078 = $3077 * 0.27650000000000002;
                 $3079 = -0.32800000000000001 - $3078;
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x581,$3079,-1);
                 $3080 = HEAP8[$144>>0]|0;
                 $3081 = ($3080<<24>>24)==(0);
                 if ($3081) {
                  break L1637;
                 }
                 $3082 = +HEAPF64[$x581>>3];
                 $3083 = +HEAPF64[$43>>3];
                 $3084 = $2918 * $3083;
                 $3085 = $3082 * $3084;
                 $3086 = +HEAPF64[$45>>3];
                 $3087 = $2917 * $3086;
                 $3088 = $3082 * $3087;
                 $3089 = $3085 + $3088;
                 HEAPF64[$sj1array109>>3] = $3089;
                 $3090 = !($3089 >= -1.0000020000000001);
                 $3091 = !($3089 <= 1.0000020000000001);
                 $or$cond140 = $3090 | $3091;
                 do {
                  if ($or$cond140) {
                   $3101 = (__Z13__DOUBLE_BITSd($3089)|0);
                   $3102 = tempRet0;
                   $3103 = $3102 & 2147483647;
                   $3104 = ($3103>>>0)>(2146435072);
                   $3105 = ($3101>>>0)>(0);
                   $3106 = ($3103|0)==(2146435072);
                   $3107 = $3106 & $3105;
                   $3108 = $3104 | $3107;
                   if (!($3108)) {
                    $ij1111$01122 = 0;
                    break;
                   }
                   HEAP8[$j1valid110>>0] = 1;
                   HEAPF64[$cj1array108>>3] = 1.0;
                   HEAPF64[$sj1array109>>3] = 0.0;
                   HEAPF64[$j1array107>>3] = 0.0;
                   $ij1111$01122 = 0;
                  } else {
                   HEAP8[$145>>0] = 1;
                   HEAP8[$j1valid110>>0] = 1;
                   $3092 = +HEAPF64[$sj1array109>>3];
                   $3093 = (+__Z6IKasind($3092));
                   HEAPF64[$j1array107>>3] = $3093;
                   $3094 = (+__Z5IKcosd($3093));
                   HEAPF64[$cj1array108>>3] = $3094;
                   $3095 = +HEAPF64[$sj1array109>>3];
                   HEAPF64[$146>>3] = $3095;
                   $3096 = +HEAPF64[$j1array107>>3];
                   $3097 = $3096 > 0.0;
                   $$v80 = $3097 ? 3.14159265358979 : -3.14159265358979;
                   $3098 = $$v80 - $3096;
                   HEAPF64[$147>>3] = $3098;
                   $3099 = +HEAPF64[$cj1array108>>3];
                   $3100 = -$3099;
                   HEAPF64[$148>>3] = $3100;
                   $ij1111$01122 = 0;
                  }
                 } while(0);
                 while(1) {
                  $3109 = (($j1valid110) + ($ij1111$01122)|0);
                  $3110 = HEAP8[$3109>>0]|0;
                  $3111 = ($3110<<24>>24)==(0);
                  do {
                   if (!($3111)) {
                    $3112 = $ij1111$01122&255;
                    HEAP8[$4>>0] = $3112;
                    HEAP8[$5>>0] = -1;
                    $iij1112$01119 = (($ij1111$01122) + 1)|0;
                    $3113 = ($iij1112$01119|0)<(2);
                    do {
                     if ($3113) {
                      $3114 = (($sj1array109) + ($ij1111$01122<<3)|0);
                      $3115 = (($j1valid110) + ($iij1112$01119)|0);
                      $3116 = HEAP8[$3115>>0]|0;
                      $3117 = ($3116<<24>>24)==(0);
                      if ($3117) {
                       break;
                      }
                      $3118 = (($cj1array108) + ($ij1111$01122<<3)|0);
                      $3119 = +HEAPF64[$3118>>3];
                      $3120 = (($cj1array108) + ($iij1112$01119<<3)|0);
                      $3121 = +HEAPF64[$3120>>3];
                      $3122 = $3119 - $3121;
                      $3123 = (+__Z5IKabsd($3122));
                      $3124 = $3123 < 9.9999999999999995E-7;
                      if (!($3124)) {
                       break;
                      }
                      $3125 = +HEAPF64[$3114>>3];
                      $3126 = (($sj1array109) + ($iij1112$01119<<3)|0);
                      $3127 = +HEAPF64[$3126>>3];
                      $3128 = $3125 - $3127;
                      $3129 = (+__Z5IKabsd($3128));
                      $3130 = $3129 < 9.9999999999999995E-7;
                      if (!($3130)) {
                       break;
                      }
                      HEAP8[$3115>>0] = 0;
                      $3131 = $iij1112$01119&255;
                      HEAP8[$5>>0] = $3131;
                     }
                    } while(0);
                    $3132 = (($j1array107) + ($ij1111$01122<<3)|0);
                    $3133 = +HEAPF64[$3132>>3];
                    HEAPF64[$3>>3] = $3133;
                    $3134 = (($cj1array108) + ($ij1111$01122<<3)|0);
                    $3135 = +HEAPF64[$3134>>3];
                    HEAPF64[$149>>3] = $3135;
                    $3136 = (($sj1array109) + ($ij1111$01122<<3)|0);
                    $3137 = +HEAPF64[$3136>>3];
                    HEAPF64[$150>>3] = $3137;
                    $3138 = +HEAPF64[$3>>3];
                    $3139 = (+__Z5IKcosd($3138));
                    $3140 = (+__Z5IKsind($3138));
                    $3141 = +HEAPF64[$43>>3];
                    $3142 = $3141 * $3141;
                    $3143 = +HEAPF64[$45>>3];
                    $3144 = $3143 * $3143;
                    $3145 = $2917 * $3143;
                    $3146 = $2918 * $3141;
                    $3147 = $3139 * 1.5243902439024399;
                    $3148 = $3140 * 0.65600000000000003;
                    $3149 = $3139 * $3146;
                    $3150 = $3139 * $3145;
                    $3151 = $3149 + $3150;
                    $3152 = $3147 * $3142;
                    $3153 = $3147 * $3144;
                    $3154 = $3152 + $3153;
                    $3155 = $3139 * 0.0474569359756098;
                    $3156 = $3155 + $3154;
                    $3157 = -0.03113175 - $3144;
                    $3158 = $3157 - $3142;
                    $3159 = $3148 * $3145;
                    $3160 = $3158 - $3159;
                    $3161 = $3148 * $3146;
                    $3162 = $3160 - $3161;
                    $3163 = (+__Z5IKabsd($3151));
                    $3164 = $3163 > 5.0000000000000004E-6;
                    if ($3164) {
                     break;
                    }
                    $3165 = +HEAPF64[$73>>3];
                    $3166 = $3140 * $3146;
                    $3167 = $3166 + 0.32800000000000001;
                    $3168 = $3140 * $3145;
                    $3169 = $3167 + $3168;
                    $3170 = $3165 * 0.27650000000000002;
                    $3171 = $3169 + $3170;
                    $3172 = (+__Z5IKabsd($3171));
                    $3173 = $3172 > 5.0000000000000004E-6;
                    if ($3173) {
                     break;
                    }
                    $3174 = (+__Z5IKabsd($3156));
                    $3175 = $3174 > 5.0000000000000004E-6;
                    if ($3175) {
                     break;
                    }
                    $3176 = (+__Z5IKabsd($3162));
                    $3177 = $3176 > 5.0000000000000004E-6;
                    if ($3177) {
                     break;
                    }
                    __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                   }
                  } while(0);
                  $3178 = (($ij1111$01122) + 1)|0;
                  $exitcond1444 = ($3178|0)==(2);
                  if ($exitcond1444) {
                   break L1637;
                  } else {
                   $ij1111$01122 = $3178;
                  }
                 }
                }
                $2923 = +HEAPF64[$45>>3];
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x569,$2916,$2923,1.9999999999999999E-6);
                $2924 = HEAP8[$136>>0]|0;
                $2925 = ($2924<<24>>24)==(0);
                if ($2925) {
                 break L1637;
                }
                $2926 = +HEAPF64[$x569>>3];
                $2927 = +HEAPF64[$45>>3];
                $2928 = -$2927;
                $2929 = +HEAPF64[$43>>3];
                $2930 = $2929 * $2929;
                $2931 = $2927 * $2927;
                $2932 = $2931 + $2930;
                HEAPF64[$47>>3] = 0.0;
                HEAPF64[$22>>3] = -1.5707963267949001;
                HEAPF64[$24>>3] = -1.0;
                HEAPF64[$23>>3] = 0.0;
                HEAPF64[$60>>3] = $2932;
                $2933 = +HEAPF64[$43>>3];
                $2934 = +HEAPF64[$26>>3];
                $2935 = $2933 * $2934;
                $2936 = +HEAPF64[$45>>3];
                $2937 = +HEAPF64[$32>>3];
                $2938 = $2936 * $2937;
                $2939 = $2935 + $2938;
                HEAPF64[$61>>3] = $2939;
                $2940 = +HEAPF64[$43>>3];
                $2941 = +HEAPF64[$28>>3];
                $2942 = $2940 * $2941;
                $2943 = +HEAPF64[$45>>3];
                $2944 = +HEAPF64[$34>>3];
                $2945 = $2943 * $2944;
                $2946 = $2942 + $2945;
                HEAPF64[$62>>3] = $2946;
                $2947 = +HEAPF64[$43>>3];
                $2948 = +HEAPF64[$30>>3];
                $2949 = $2947 * $2948;
                $2950 = +HEAPF64[$45>>3];
                $2951 = +HEAPF64[$36>>3];
                $2952 = $2950 * $2951;
                $2953 = $2949 + $2952;
                HEAPF64[$63>>3] = $2953;
                $2954 = +HEAPF64[$38>>3];
                $2955 = $2954 * $2928;
                HEAPF64[$64>>3] = $2955;
                $2956 = +HEAPF64[$43>>3];
                $2957 = +HEAPF64[$38>>3];
                $2958 = $2956 * $2957;
                HEAPF64[$65>>3] = $2958;
                $2959 = +HEAPF64[$40>>3];
                $2960 = $2959 * $2928;
                HEAPF64[$67>>3] = $2960;
                $2961 = +HEAPF64[$43>>3];
                $2962 = +HEAPF64[$40>>3];
                $2963 = $2961 * $2962;
                HEAPF64[$68>>3] = $2963;
                $2964 = +HEAPF64[$42>>3];
                $2965 = $2964 * $2928;
                HEAPF64[$70>>3] = $2965;
                $2966 = +HEAPF64[$43>>3];
                $2967 = +HEAPF64[$42>>3];
                $2968 = $2966 * $2967;
                HEAPF64[$71>>3] = $2968;
                HEAPF64[$82>>3] = $2917;
                HEAPF64[$81>>3] = $2918;
                $2969 = 3.1415926500000002 - $2926;
                HEAPF64[$this>>3] = $2969;
                $2970 = +HEAPF64[$43>>3];
                $2971 = $2831 * $2970;
                $2972 = $2831 * $2928;
                $2973 = (+__Z5IKabsd(0.0));
                $2974 = $2973 < 9.9999999999999995E-7;
                if ($2974) {
                 break L1637;
                }
                HEAP16[$j1valid103>>1] = 0;
                HEAP8[$6>>0] = 2;
                $2975 = +HEAPF64[$45>>3];
                $2976 = $2971 * $2975;
                $2977 = +HEAPF64[$43>>3];
                $2978 = $2972 * $2977;
                $2979 = $2976 + $2978;
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x571,$2979,-1);
                $2980 = HEAP8[$137>>0]|0;
                $2981 = ($2980<<24>>24)==(0);
                if ($2981) {
                 break L1637;
                }
                $2982 = +HEAPF64[$x571>>3];
                $2983 = $2982 * 0.32800000000000001;
                $2984 = +HEAPF64[$73>>3];
                $2985 = $2984 * -0.27650000000000002;
                $2986 = $2982 * $2985;
                $2987 = $2986 - $2983;
                HEAPF64[$sj1array102>>3] = $2987;
                $2988 = !($2987 >= -1.0000020000000001);
                $2989 = !($2987 <= 1.0000020000000001);
                $or$cond139 = $2988 | $2989;
                do {
                 if ($or$cond139) {
                  $2999 = (__Z13__DOUBLE_BITSd($2987)|0);
                  $3000 = tempRet0;
                  $3001 = $3000 & 2147483647;
                  $3002 = ($3001>>>0)>(2146435072);
                  $3003 = ($2999>>>0)>(0);
                  $3004 = ($3001|0)==(2146435072);
                  $3005 = $3004 & $3003;
                  $3006 = $3002 | $3005;
                  if (!($3006)) {
                   $ij1104$01126 = 0;
                   break;
                  }
                  HEAP8[$j1valid103>>0] = 1;
                  HEAPF64[$cj1array101>>3] = 1.0;
                  HEAPF64[$sj1array102>>3] = 0.0;
                  HEAPF64[$j1array100>>3] = 0.0;
                  $ij1104$01126 = 0;
                 } else {
                  HEAP8[$138>>0] = 1;
                  HEAP8[$j1valid103>>0] = 1;
                  $2990 = +HEAPF64[$sj1array102>>3];
                  $2991 = (+__Z6IKasind($2990));
                  HEAPF64[$j1array100>>3] = $2991;
                  $2992 = (+__Z5IKcosd($2991));
                  HEAPF64[$cj1array101>>3] = $2992;
                  $2993 = +HEAPF64[$sj1array102>>3];
                  HEAPF64[$139>>3] = $2993;
                  $2994 = +HEAPF64[$j1array100>>3];
                  $2995 = $2994 > 0.0;
                  $$v82 = $2995 ? 3.14159265358979 : -3.14159265358979;
                  $2996 = $$v82 - $2994;
                  HEAPF64[$140>>3] = $2996;
                  $2997 = +HEAPF64[$cj1array101>>3];
                  $2998 = -$2997;
                  HEAPF64[$141>>3] = $2998;
                  $ij1104$01126 = 0;
                 }
                } while(0);
                while(1) {
                 $3007 = (($j1valid103) + ($ij1104$01126)|0);
                 $3008 = HEAP8[$3007>>0]|0;
                 $3009 = ($3008<<24>>24)==(0);
                 do {
                  if (!($3009)) {
                   $3010 = $ij1104$01126&255;
                   HEAP8[$4>>0] = $3010;
                   HEAP8[$5>>0] = -1;
                   $iij1105$01123 = (($ij1104$01126) + 1)|0;
                   $3011 = ($iij1105$01123|0)<(2);
                   do {
                    if ($3011) {
                     $3012 = (($sj1array102) + ($ij1104$01126<<3)|0);
                     $3013 = (($j1valid103) + ($iij1105$01123)|0);
                     $3014 = HEAP8[$3013>>0]|0;
                     $3015 = ($3014<<24>>24)==(0);
                     if ($3015) {
                      break;
                     }
                     $3016 = (($cj1array101) + ($ij1104$01126<<3)|0);
                     $3017 = +HEAPF64[$3016>>3];
                     $3018 = (($cj1array101) + ($iij1105$01123<<3)|0);
                     $3019 = +HEAPF64[$3018>>3];
                     $3020 = $3017 - $3019;
                     $3021 = (+__Z5IKabsd($3020));
                     $3022 = $3021 < 9.9999999999999995E-7;
                     if (!($3022)) {
                      break;
                     }
                     $3023 = +HEAPF64[$3012>>3];
                     $3024 = (($sj1array102) + ($iij1105$01123<<3)|0);
                     $3025 = +HEAPF64[$3024>>3];
                     $3026 = $3023 - $3025;
                     $3027 = (+__Z5IKabsd($3026));
                     $3028 = $3027 < 9.9999999999999995E-7;
                     if (!($3028)) {
                      break;
                     }
                     HEAP8[$3013>>0] = 0;
                     $3029 = $iij1105$01123&255;
                     HEAP8[$5>>0] = $3029;
                    }
                   } while(0);
                   $3030 = (($j1array100) + ($ij1104$01126<<3)|0);
                   $3031 = +HEAPF64[$3030>>3];
                   HEAPF64[$3>>3] = $3031;
                   $3032 = (($cj1array101) + ($ij1104$01126<<3)|0);
                   $3033 = +HEAPF64[$3032>>3];
                   HEAPF64[$142>>3] = $3033;
                   $3034 = (($sj1array102) + ($ij1104$01126<<3)|0);
                   $3035 = +HEAPF64[$3034>>3];
                   HEAPF64[$143>>3] = $3035;
                   $3036 = +HEAPF64[$3>>3];
                   $3037 = (+__Z5IKcosd($3036));
                   $3038 = (+__Z5IKsind($3036));
                   $3039 = +HEAPF64[$43>>3];
                   $3040 = $3039 * $3039;
                   $3041 = +HEAPF64[$45>>3];
                   $3042 = $3041 * $3041;
                   $3043 = $2971 * $3041;
                   $3044 = $2972 * $3039;
                   $3045 = $3037 * 1.5243902439024399;
                   $3046 = $3038 * 0.65600000000000003;
                   $3047 = $3037 * $3044;
                   $3048 = $3037 * $3043;
                   $3049 = $3047 + $3048;
                   $3050 = $3045 * $3040;
                   $3051 = $3037 * 0.0474569359756098;
                   $3052 = $3051 + $3050;
                   $3053 = $3045 * $3042;
                   $3054 = $3052 + $3053;
                   $3055 = $3046 * $3044;
                   $3056 = -0.03113175 - $3055;
                   $3057 = $3046 * $3043;
                   $3058 = $3056 - $3057;
                   $3059 = $3058 - $3042;
                   $3060 = $3059 - $3040;
                   $3061 = (+__Z5IKabsd($3049));
                   $3062 = $3061 > 5.0000000000000004E-6;
                   if ($3062) {
                    break;
                   }
                   $3063 = +HEAPF64[$73>>3];
                   $3064 = $3038 * -0.32800000000000001;
                   $3065 = $3064 - $3043;
                   $3066 = $3065 - $3044;
                   $3067 = $3063 * -0.27650000000000002;
                   $3068 = $3038 * $3067;
                   $3069 = $3066 + $3068;
                   $3070 = (+__Z5IKabsd($3069));
                   $3071 = $3070 > 5.0000000000000004E-6;
                   if ($3071) {
                    break;
                   }
                   $3072 = (+__Z5IKabsd($3054));
                   $3073 = $3072 > 5.0000000000000004E-6;
                   if ($3073) {
                    break;
                   }
                   $3074 = (+__Z5IKabsd($3060));
                   $3075 = $3074 > 5.0000000000000004E-6;
                   if ($3075) {
                    break;
                   }
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                 } while(0);
                 $3076 = (($ij1104$01126) + 1)|0;
                 $exitcond1445 = ($3076|0)==(2);
                 if ($exitcond1445) {
                  break L1637;
                 } else {
                  $ij1104$01126 = $3076;
                 }
                }
               }
              } while(0);
              $3391 = +HEAPF64[$47>>3];
              $3392 = (+__Z5IKabsd($3391));
              $3393 = +HEAPF64[$7>>3];
              $3394 = $3393 + 3.14159265358979;
              $3395 = (+__Z6IKfmoddd($3394,6.2831853071795898));
              $3396 = $3395 + -3.14159265358979;
              $3397 = (+__Z5IKabsd($3396));
              $3398 = $3392 + $3397;
              $3399 = +HEAPF64[$43>>3];
              $3400 = +HEAPF64[$82>>3];
              $3401 = $3399 * $3400;
              $3402 = +HEAPF64[$81>>3];
              $3403 = +HEAPF64[$45>>3];
              $3404 = $3402 * $3403;
              $3405 = $3404 - $3401;
              $3406 = (+__Z5IKabsd($3398));
              $3407 = $3406 < 9.9999999999999995E-7;
              do {
               if ($3407) {
                $3408 = +HEAPF64[$60>>3];
                $3409 = 0.36542025 - $3408;
                $3410 = (+__Z5IKabsd($3409));
                $3411 = $3410 < 9.9999999999999995E-7;
                if (!($3411)) {
                 break;
                }
                $3412 = (+__Z5IKabsd($3405));
                $3413 = $3412 < 9.9999999999999995E-7;
                if (!($3413)) {
                 break;
                }
                HEAP16[$j1valid133>>1] = 0;
                HEAP8[$6>>0] = 2;
                $3414 = +HEAPF64[$45>>3];
                $3415 = $3414 * -1.6542597187758501;
                $3416 = +HEAPF64[$82>>3];
                $3417 = $3415 * $3416;
                $3418 = +HEAPF64[$81>>3];
                $3419 = $3418 * -1.6542597187758501;
                $3420 = +HEAPF64[$43>>3];
                $3421 = $3419 * $3420;
                $3422 = $3417 + $3421;
                HEAPF64[$sj1array132>>3] = $3422;
                $3423 = !($3422 >= -1.0000020000000001);
                $3424 = !($3422 <= 1.0000020000000001);
                $or$cond158 = $3423 | $3424;
                do {
                 if ($or$cond158) {
                  $3434 = (__Z13__DOUBLE_BITSd($3422)|0);
                  $3435 = tempRet0;
                  $3436 = $3435 & 2147483647;
                  $3437 = ($3436>>>0)>(2146435072);
                  $3438 = ($3434>>>0)>(0);
                  $3439 = ($3436|0)==(2146435072);
                  $3440 = $3439 & $3438;
                  $3441 = $3437 | $3440;
                  if (!($3441)) {
                   $ij1134$01102 = 0;
                   break;
                  }
                  HEAP8[$j1valid133>>0] = 1;
                  HEAPF64[$cj1array131>>3] = 1.0;
                  HEAPF64[$sj1array132>>3] = 0.0;
                  HEAPF64[$j1array130>>3] = 0.0;
                  $ij1134$01102 = 0;
                 } else {
                  HEAP8[$183>>0] = 1;
                  HEAP8[$j1valid133>>0] = 1;
                  $3425 = +HEAPF64[$sj1array132>>3];
                  $3426 = (+__Z6IKasind($3425));
                  HEAPF64[$j1array130>>3] = $3426;
                  $3427 = (+__Z5IKcosd($3426));
                  HEAPF64[$cj1array131>>3] = $3427;
                  $3428 = +HEAPF64[$sj1array132>>3];
                  HEAPF64[$184>>3] = $3428;
                  $3429 = +HEAPF64[$j1array130>>3];
                  $3430 = $3429 > 0.0;
                  $$v74 = $3430 ? 3.14159265358979 : -3.14159265358979;
                  $3431 = $$v74 - $3429;
                  HEAPF64[$185>>3] = $3431;
                  $3432 = +HEAPF64[$cj1array131>>3];
                  $3433 = -$3432;
                  HEAPF64[$186>>3] = $3433;
                  $ij1134$01102 = 0;
                 }
                } while(0);
                while(1) {
                 $3442 = (($j1valid133) + ($ij1134$01102)|0);
                 $3443 = HEAP8[$3442>>0]|0;
                 $3444 = ($3443<<24>>24)==(0);
                 do {
                  if (!($3444)) {
                   $3445 = $ij1134$01102&255;
                   HEAP8[$4>>0] = $3445;
                   HEAP8[$5>>0] = -1;
                   $iij1135$01099 = (($ij1134$01102) + 1)|0;
                   $3446 = ($iij1135$01099|0)<(2);
                   do {
                    if ($3446) {
                     $3447 = (($sj1array132) + ($ij1134$01102<<3)|0);
                     $3448 = (($j1valid133) + ($iij1135$01099)|0);
                     $3449 = HEAP8[$3448>>0]|0;
                     $3450 = ($3449<<24>>24)==(0);
                     if ($3450) {
                      break;
                     }
                     $3451 = (($cj1array131) + ($ij1134$01102<<3)|0);
                     $3452 = +HEAPF64[$3451>>3];
                     $3453 = (($cj1array131) + ($iij1135$01099<<3)|0);
                     $3454 = +HEAPF64[$3453>>3];
                     $3455 = $3452 - $3454;
                     $3456 = (+__Z5IKabsd($3455));
                     $3457 = $3456 < 9.9999999999999995E-7;
                     if (!($3457)) {
                      break;
                     }
                     $3458 = +HEAPF64[$3447>>3];
                     $3459 = (($sj1array132) + ($iij1135$01099<<3)|0);
                     $3460 = +HEAPF64[$3459>>3];
                     $3461 = $3458 - $3460;
                     $3462 = (+__Z5IKabsd($3461));
                     $3463 = $3462 < 9.9999999999999995E-7;
                     if (!($3463)) {
                      break;
                     }
                     HEAP8[$3448>>0] = 0;
                     $3464 = $iij1135$01099&255;
                     HEAP8[$5>>0] = $3464;
                    }
                   } while(0);
                   $3465 = (($j1array130) + ($ij1134$01102<<3)|0);
                   $3466 = +HEAPF64[$3465>>3];
                   HEAPF64[$3>>3] = $3466;
                   $3467 = (($cj1array131) + ($ij1134$01102<<3)|0);
                   $3468 = +HEAPF64[$3467>>3];
                   HEAPF64[$187>>3] = $3468;
                   $3469 = (($sj1array132) + ($ij1134$01102<<3)|0);
                   $3470 = +HEAPF64[$3469>>3];
                   HEAPF64[$188>>3] = $3470;
                   $3471 = +HEAPF64[$3>>3];
                   $3472 = (+__Z5IKsind($3471));
                   $3473 = (+__Z5IKcosd($3471));
                   $3474 = +HEAPF64[$81>>3];
                   __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x617,$3474,-1);
                   $3475 = HEAP8[$189>>0]|0;
                   $3476 = ($3475<<24>>24)==(0);
                   if ($3476) {
                    break;
                   }
                   $3477 = +HEAPF64[$x617>>3];
                   $3478 = +HEAPF64[$82>>3];
                   $3479 = $3478 * $3478;
                   $3480 = $3477 * $3479;
                   $3481 = +HEAPF64[$45>>3];
                   $3482 = $3478 * $3481;
                   $3483 = $3472 * $3482;
                   $3484 = +HEAPF64[$43>>3];
                   $3485 = $3473 * $3484;
                   $3486 = +HEAPF64[$81>>3];
                   $3487 = $3484 * $3486;
                   $3488 = $3472 * $3487;
                   $3489 = $3473 * 0.60450000000000004;
                   $3490 = $3488 * 0.65600000000000003;
                   $3491 = -0.39655200000000002 - $3490;
                   $3492 = $3483 * 0.65600000000000003;
                   $3493 = $3491 - $3492;
                   $3494 = +HEAPF64[$24>>3];
                   $3495 = $3480 * $3494;
                   $3496 = $3485 * $3495;
                   $3497 = -$3486;
                   $3498 = $3494 * $3497;
                   $3499 = $3485 * $3498;
                   $3500 = $3499 - $3496;
                   $3501 = +HEAPF64[$23>>3];
                   $3502 = $3501 * $3497;
                   $3503 = $3485 * $3502;
                   $3504 = $3480 * $3501;
                   $3505 = $3485 * $3504;
                   $3506 = $3503 - $3505;
                   $3507 = (+__Z5IKabsd($3489));
                   $3508 = $3507 > 5.0000000000000004E-6;
                   if ($3508) {
                    break;
                   }
                   $3509 = $3483 + 0.60450000000000004;
                   $3510 = $3509 + $3488;
                   $3511 = (+__Z5IKabsd($3510));
                   $3512 = $3511 > 5.0000000000000004E-6;
                   if ($3512) {
                    break;
                   }
                   $3513 = (+__Z5IKabsd($3493));
                   $3514 = $3513 > 5.0000000000000004E-6;
                   if ($3514) {
                    break;
                   }
                   $3515 = (+__Z5IKabsd($3500));
                   $3516 = $3515 > 5.0000000000000004E-6;
                   if ($3516) {
                    break;
                   }
                   $3517 = (+__Z5IKabsd($3506));
                   $3518 = $3517 > 5.0000000000000004E-6;
                   if ($3518) {
                    break;
                   }
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                 } while(0);
                 $3519 = (($ij1134$01102) + 1)|0;
                 $exitcond1439 = ($3519|0)==(2);
                 if ($exitcond1439) {
                  break L1637;
                 } else {
                  $ij1134$01102 = $3519;
                 }
                }
               }
              } while(0);
              $3520 = +HEAPF64[$7>>3];
              $3521 = (+__Z6IKfmoddd($3520,6.2831853071795898));
              $3522 = $3521 + -3.14159265358979;
              $3523 = (+__Z5IKabsd($3522));
              $3524 = +HEAPF64[$47>>3];
              $3525 = (+__Z5IKabsd($3524));
              $3526 = $3523 + $3525;
              $3527 = +HEAPF64[$43>>3];
              $3528 = +HEAPF64[$82>>3];
              $3529 = $3527 * $3528;
              $3530 = +HEAPF64[$81>>3];
              $3531 = +HEAPF64[$45>>3];
              $3532 = $3530 * $3531;
              $3533 = $3532 - $3529;
              $3534 = (+__Z5IKabsd($3526));
              $3535 = $3534 < 9.9999999999999995E-7;
              if (!($3535)) {
               break;
              }
              $3536 = +HEAPF64[$60>>3];
              $3537 = 0.0026522500000000001 - $3536;
              $3538 = (+__Z5IKabsd($3537));
              $3539 = $3538 < 9.9999999999999995E-7;
              if (!($3539)) {
               break;
              }
              $3540 = (+__Z5IKabsd($3533));
              $3541 = $3540 < 9.9999999999999995E-7;
              if (!($3541)) {
               break;
              }
              HEAP16[$j1valid141>>1] = 0;
              HEAP8[$6>>0] = 2;
              $3542 = +HEAPF64[$45>>3];
              $3543 = $3542 * -19.417475728155299;
              $3544 = +HEAPF64[$82>>3];
              $3545 = $3543 * $3544;
              $3546 = +HEAPF64[$81>>3];
              $3547 = $3546 * -19.417475728155299;
              $3548 = +HEAPF64[$43>>3];
              $3549 = $3547 * $3548;
              $3550 = $3545 + $3549;
              HEAPF64[$sj1array140>>3] = $3550;
              $3551 = !($3550 >= -1.0000020000000001);
              $3552 = !($3550 <= 1.0000020000000001);
              $or$cond161 = $3551 | $3552;
              do {
               if ($or$cond161) {
                $3562 = (__Z13__DOUBLE_BITSd($3550)|0);
                $3563 = tempRet0;
                $3564 = $3563 & 2147483647;
                $3565 = ($3564>>>0)>(2146435072);
                $3566 = ($3562>>>0)>(0);
                $3567 = ($3564|0)==(2146435072);
                $3568 = $3567 & $3566;
                $3569 = $3565 | $3568;
                if (!($3569)) {
                 $ij1142$01098 = 0;
                 break;
                }
                HEAP8[$j1valid141>>0] = 1;
                HEAPF64[$cj1array139>>3] = 1.0;
                HEAPF64[$sj1array140>>3] = 0.0;
                HEAPF64[$j1array138>>3] = 0.0;
                $ij1142$01098 = 0;
               } else {
                HEAP8[$190>>0] = 1;
                HEAP8[$j1valid141>>0] = 1;
                $3553 = +HEAPF64[$sj1array140>>3];
                $3554 = (+__Z6IKasind($3553));
                HEAPF64[$j1array138>>3] = $3554;
                $3555 = (+__Z5IKcosd($3554));
                HEAPF64[$cj1array139>>3] = $3555;
                $3556 = +HEAPF64[$sj1array140>>3];
                HEAPF64[$191>>3] = $3556;
                $3557 = +HEAPF64[$j1array138>>3];
                $3558 = $3557 > 0.0;
                $$v72 = $3558 ? 3.14159265358979 : -3.14159265358979;
                $3559 = $$v72 - $3557;
                HEAPF64[$192>>3] = $3559;
                $3560 = +HEAPF64[$cj1array139>>3];
                $3561 = -$3560;
                HEAPF64[$193>>3] = $3561;
                $ij1142$01098 = 0;
               }
              } while(0);
              while(1) {
               $3570 = (($j1valid141) + ($ij1142$01098)|0);
               $3571 = HEAP8[$3570>>0]|0;
               $3572 = ($3571<<24>>24)==(0);
               do {
                if (!($3572)) {
                 $3573 = $ij1142$01098&255;
                 HEAP8[$4>>0] = $3573;
                 HEAP8[$5>>0] = -1;
                 $iij1143$01095 = (($ij1142$01098) + 1)|0;
                 $3574 = ($iij1143$01095|0)<(2);
                 do {
                  if ($3574) {
                   $3575 = (($sj1array140) + ($ij1142$01098<<3)|0);
                   $3576 = (($j1valid141) + ($iij1143$01095)|0);
                   $3577 = HEAP8[$3576>>0]|0;
                   $3578 = ($3577<<24>>24)==(0);
                   if ($3578) {
                    break;
                   }
                   $3579 = (($cj1array139) + ($ij1142$01098<<3)|0);
                   $3580 = +HEAPF64[$3579>>3];
                   $3581 = (($cj1array139) + ($iij1143$01095<<3)|0);
                   $3582 = +HEAPF64[$3581>>3];
                   $3583 = $3580 - $3582;
                   $3584 = (+__Z5IKabsd($3583));
                   $3585 = $3584 < 9.9999999999999995E-7;
                   if (!($3585)) {
                    break;
                   }
                   $3586 = +HEAPF64[$3575>>3];
                   $3587 = (($sj1array140) + ($iij1143$01095<<3)|0);
                   $3588 = +HEAPF64[$3587>>3];
                   $3589 = $3586 - $3588;
                   $3590 = (+__Z5IKabsd($3589));
                   $3591 = $3590 < 9.9999999999999995E-7;
                   if (!($3591)) {
                    break;
                   }
                   HEAP8[$3576>>0] = 0;
                   $3592 = $iij1143$01095&255;
                   HEAP8[$5>>0] = $3592;
                  }
                 } while(0);
                 $3593 = (($j1array138) + ($ij1142$01098<<3)|0);
                 $3594 = +HEAPF64[$3593>>3];
                 HEAPF64[$3>>3] = $3594;
                 $3595 = (($cj1array139) + ($ij1142$01098<<3)|0);
                 $3596 = +HEAPF64[$3595>>3];
                 HEAPF64[$194>>3] = $3596;
                 $3597 = (($sj1array140) + ($ij1142$01098<<3)|0);
                 $3598 = +HEAPF64[$3597>>3];
                 HEAPF64[$195>>3] = $3598;
                 $3599 = +HEAPF64[$3>>3];
                 $3600 = (+__Z5IKsind($3599));
                 $3601 = (+__Z5IKcosd($3599));
                 $3602 = +HEAPF64[$81>>3];
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x626,$3602,-1);
                 $3603 = HEAP8[$196>>0]|0;
                 $3604 = ($3603<<24>>24)==(0);
                 if ($3604) {
                  break;
                 }
                 $3605 = +HEAPF64[$x626>>3];
                 $3606 = +HEAPF64[$82>>3];
                 $3607 = $3606 * $3606;
                 $3608 = +HEAPF64[$81>>3];
                 $3609 = +HEAPF64[$43>>3];
                 $3610 = $3608 * $3609;
                 $3611 = +HEAPF64[$45>>3];
                 $3612 = $3606 * $3611;
                 $3613 = $3600 * $3612;
                 $3614 = $3605 * $3609;
                 $3615 = $3607 * $3614;
                 $3616 = $3601 * $3615;
                 $3617 = $3601 * 0.051499999999999997;
                 $3618 = $3613 * 0.65600000000000003;
                 $3619 = -0.033784000000000002 - $3618;
                 $3620 = $3600 * -0.65600000000000003;
                 $3621 = $3620 * $3610;
                 $3622 = $3621 + $3619;
                 $3623 = +HEAPF64[$24>>3];
                 $3624 = -$3623;
                 $3625 = $3610 * $3624;
                 $3626 = $3601 * $3625;
                 $3627 = $3616 * $3624;
                 $3628 = $3626 + $3627;
                 $3629 = +HEAPF64[$23>>3];
                 $3630 = -$3629;
                 $3631 = $3616 * $3630;
                 $3632 = $3610 * $3630;
                 $3633 = $3601 * $3632;
                 $3634 = $3631 + $3633;
                 $3635 = (+__Z5IKabsd($3617));
                 $3636 = $3635 > 5.0000000000000004E-6;
                 if ($3636) {
                  break;
                 }
                 $3637 = $3600 * $3610;
                 $3638 = $3637 + 0.051499999999999997;
                 $3639 = $3638 + $3613;
                 $3640 = (+__Z5IKabsd($3639));
                 $3641 = $3640 > 5.0000000000000004E-6;
                 if ($3641) {
                  break;
                 }
                 $3642 = (+__Z5IKabsd($3622));
                 $3643 = $3642 > 5.0000000000000004E-6;
                 if ($3643) {
                  break;
                 }
                 $3644 = (+__Z5IKabsd($3628));
                 $3645 = $3644 > 5.0000000000000004E-6;
                 if ($3645) {
                  break;
                 }
                 $3646 = (+__Z5IKabsd($3634));
                 $3647 = $3646 > 5.0000000000000004E-6;
                 if ($3647) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $3648 = (($ij1142$01098) + 1)|0;
               $exitcond1438 = ($3648|0)==(2);
               if ($exitcond1438) {
                break;
               } else {
                $ij1142$01098 = $3648;
               }
              }
             }
            }
           } while(0);
           $4103 = (($ij0$01151) + 1)|0;
           $exitcond1452 = ($4103|0)==(2);
           if ($exitcond1452) {
            break;
           } else {
            $ij0$01151 = $4103;
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while(0);
  $11902 = (($ij3$01152) + 1)|0;
  $exitcond1453 = ($11902|0)==(2);
  if ($exitcond1453) {
   break;
  } else {
   $ij3$01152 = $11902;
  }
 }
 $11903 = HEAP32[$solutions>>2]|0;
 $11904 = ((($11903)) + 16|0);
 $11905 = HEAP32[$11904>>2]|0;
 $11906 = (FUNCTION_TABLE_ii[$11905 & 63]($solutions)|0);
 $11907 = ($11906|0)!=(0);
 STACKTOP = sp;return ($11907|0);
}
function __ZN6ikfast14IkSolutionListIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this);
 HEAP32[$this>>2] = (376);
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = $0;
 $2 = ((($this)) + 12|0);
 HEAP32[$2>>2] = 0;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($this,$index) {
 $this = $this|0;
 $index = $index|0;
 var $$03$i$i = 0, $$14$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1>>>0)>($index>>>0);
 if (!($2)) {
  $3 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($3,800);
  ___cxa_throw(($3|0),(1952|0),(35|0));
  // unreachable;
 }
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5;
 $7 = ($index|0)>(-1);
 if (!($7)) {
  $$14$i$i = $index;$15 = $6;
  while(1) {
   $16 = $15;
   $17 = HEAP32[$16>>2]|0;
   $18 = (($$14$i$i) + 1)|0;
   $19 = ($$14$i$i|0)<(-1);
   if ($19) {
    $$14$i$i = $18;$15 = $17;
   } else {
    $20 = $17;
    break;
   }
  }
  $21 = $20;
  $22 = ((($21)) + 8|0);
  return ($22|0);
 }
 $8 = ($index|0)>(0);
 if ($8) {
  $$03$i$i = $index;$9 = $6;
 } else {
  $20 = $6;
  $21 = $20;
  $22 = ((($21)) + 8|0);
  return ($22|0);
 }
 while(1) {
  $10 = $9;
  $11 = ((($10)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($$03$i$i) + -1)|0;
  $14 = ($$03$i$i|0)>(1);
  if ($14) {
   $$03$i$i = $13;$9 = $12;
  } else {
   $20 = $12;
   break;
  }
 }
 $21 = $20;
 $22 = ((($21)) + 8|0);
 return ($22|0);
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -8|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = $6 >>> 3;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + ($8<<3)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZN6ikfast14IkSolutionListIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (376);
 $0 = ((($this)) + 4|0);
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($0);
 return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this);
 return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$01 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  return;
 }
 $3 = ((($this)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$this>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$4>>2]|0;
 $9 = ((($8)) + 4|0);
 HEAP32[$9>>2] = $7;
 $10 = HEAP32[$4>>2]|0;
 $11 = HEAP32[$6>>2]|0;
 HEAP32[$11>>2] = $10;
 HEAP32[$0>>2] = 0;
 $12 = ($4|0)==($this|0);
 if ($12) {
  return;
 } else {
  $__f$01 = $4;
 }
 while(1) {
  $13 = ((($__f$01)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($__f$01)) + 8|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vi[$17 & 127]($15);
  __ZdlPv($__f$01);
  $18 = ($14|0)==($this|0);
  if ($18) {
   break;
  } else {
   $__f$01 = $14;
  }
 }
 return;
}
function __ZN6ikfast14IkSolutionListIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionListIdED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $0 = sp;
 $1 = ((($this)) + 4|0);
 $2 = ((($this)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($0,$vinfos,$vfree);
 __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($1,$0);
 __ZN6ikfast10IkSolutionIdED2Ev($0);
 STACKTOP = sp;return ($3|0);
}
function __ZN6ikfast14IkSolutionListIdE5ClearEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($0);
 return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionBaseIdEC2Ev($this);
 HEAP32[$this>>2] = (424);
 $0 = ((($this)) + 4|0);
 $1 = ((($this)) + 16|0);
 $2 = ($0|0)==($vinfos|0);
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;
 if (!($2)) {
  $3 = HEAP32[$vinfos>>2]|0;
  $4 = ((($vinfos)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($0,$3,$5);
 }
 $6 = ($1|0)==($vfree|0);
 if ($6) {
  return;
 }
 $7 = HEAP32[$vfree>>2]|0;
 $8 = ((($vfree)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($1,$7,$9);
 return;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__Znwj(36)|0);
 $1 = ((($0)) + 8|0);
 __ZN6ikfast10IkSolutionIdEC2ERKS1_($1,$__x);
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $this;
 $3 = HEAP32[$this>>2]|0;
 HEAP32[$0>>2] = $3;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = $0;
 HEAP32[$this>>2] = $0;
 $5 = ((($this)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 1)|0;
 HEAP32[$5>>2] = $7;
 return;
}
function __ZN6ikfast10IkSolutionIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (424);
 $0 = ((($this)) + 16|0);
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($0);
 $1 = ((($this)) + 4|0);
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($1);
 return;
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -24|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = (($6>>>0) / 24)&-1;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + (($8*24)|0)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZN6ikfast10IkSolutionIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast10IkSolutionIdED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  return;
 }
 $5 = HEAP32[$0>>2]|0;
 $6 = HEAP32[$2>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = (($9|0) / 24)&-1;
 $12 = $3;$i$01 = 0;
 while(1) {
  $11 = (((($12) + (($i$01*24)|0)|0)) + 16|0);
  $13 = HEAP8[$11>>0]|0;
  $14 = ($13<<24>>24)<(0);
  do {
   if ($14) {
    $15 = (((($12) + (($i$01*24)|0)|0)) + 8|0);
    $16 = +HEAPF64[$15>>3];
    $17 = (($solution) + ($i$01<<3)|0);
    HEAPF64[$17>>3] = $16;
   } else {
    $18 = $13 << 24 >> 24;
    $19 = (($freevalues) + ($18<<3)|0);
    $20 = +HEAPF64[$19>>3];
    $21 = (($12) + (($i$01*24)|0)|0);
    $22 = +HEAPF64[$21>>3];
    $23 = $20 * $22;
    $24 = (((($12) + (($i$01*24)|0)|0)) + 8|0);
    $25 = +HEAPF64[$24>>3];
    $26 = $23 + $25;
    $27 = (($solution) + ($i$01<<3)|0);
    HEAPF64[$27>>3] = $26;
    $28 = $26 > 3.14159265358979;
    if ($28) {
     $29 = $26 + -6.2831853071795898;
     HEAPF64[$27>>3] = $29;
     break;
    }
    $30 = $26 < -3.14159265358979;
    if ($30) {
     $31 = $26 + 6.2831853071795898;
     HEAPF64[$27>>3] = $31;
    }
   }
  } while(0);
  $32 = (($i$01) + 1)|0;
  $33 = ($32>>>0)<($10>>>0);
  if ($33) {
   $12 = $6;$i$01 = $32;
  } else {
   break;
  }
 }
 return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($solution,$3);
 $4 = HEAP32[$this>>2]|0;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($solution,0)|0);
 $8 = ((($freevalues)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$freevalues>>2]|0;
 $11 = ($9|0)==($10|0);
 if ($11) {
  $13 = 0;
  FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
  return;
 }
 $12 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($freevalues,0)|0);
 $13 = $12;
 FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
 return;
}
function __ZNK6ikfast10IkSolutionIdE7GetFreeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 return ($0|0);
}
function __ZNK6ikfast10IkSolutionIdE6GetDOFEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = (($6|0) / 24)&-1;
 return ($7|0);
}
function __ZNK6ikfast10IkSolutionIdE8ValidateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$02 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  return;
 } else {
  $14 = $3;$i$02 = 0;
 }
 while(1) {
  $13 = (((($14) + (($i$02*24)|0)|0)) + 18|0);
  $15 = HEAP8[$13>>0]|0;
  if ((($15<<24>>24) == -1)) {
   label = 4;
   break;
  } else if (!((($15<<24>>24) == 0))) {
   $17 = (((($14) + (($i$02*24)|0)|0)) + 19|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = ($18&255)<($15&255);
   if (!($19)) {
    label = 6;
    break;
   }
   $21 = (((($14) + (($i$02*24)|0)|0)) + 20|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = ($22<<24>>24)==(-1);
   $24 = ($22&255)<($15&255);
   $or$cond = $23 | $24;
   if (!($or$cond)) {
    label = 8;
    break;
   }
  }
  $26 = HEAP32[$2>>2]|0;
  $27 = (((($26) + (($i$02*24)|0)|0)) + 8|0);
  $28 = +HEAPF64[$27>>3];
  (__Z13__DOUBLE_BITSd($28)|0);
  $29 = tempRet0;
  $30 = $29 & 2146435072;
  $31 = ($30>>>0)<(2146435072);
  $32 = (0)<(0);
  $33 = ($30|0)==(2146435072);
  $34 = $33 & $32;
  $35 = $31 | $34;
  $11 = (($i$02) + 1)|0;
  if (!($35)) {
   label = 10;
   break;
  }
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$2>>2]|0;
  $7 = $5;
  $8 = $6;
  $9 = (($7) - ($8))|0;
  $10 = (($9|0) / 24)&-1;
  $12 = ($11>>>0)<($10>>>0);
  if ($12) {
   $14 = $6;$i$02 = $11;
  } else {
   label = 11;
   break;
  }
 }
 if ((label|0) == 4) {
  $16 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($16,472);
  ___cxa_throw(($16|0),(1952|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  $20 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($20,512);
  ___cxa_throw(($20|0),(1952|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 8) {
  $25 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($25,552);
  ___cxa_throw(($25|0),(1952|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 10) {
  $36 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($36,592);
  ___cxa_throw(($36|0),(1952|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 11) {
  return;
 }
}
function __ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $$lcssa5 = 0, $$lcssa6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond18 = 0, $i$015 = 0;
 var $i$015$in = 0, $j$07 = 0, $j1$010 = 0, $j2$012 = 0, $or$cond = 0, $or$cond19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($v,0);
 HEAP32[$0>>2] = 0;
 $2 = ((($v)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($v)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if ($6) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($v,$0);
 } else {
  HEAP32[$3>>2] = 0;
  $7 = HEAP32[$2>>2]|0;
  $8 = ((($7)) + 4|0);
  HEAP32[$2>>2] = $8;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($this)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $10;
 $14 = $12;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(0);
 if (!($16)) {
  STACKTOP = sp;return;
 }
 $17 = (($15|0) / 24)&-1;
 $i$015$in = $17;
 while(1) {
  $i$015 = (($i$015$in) + -1)|0;
  $18 = HEAP32[$11>>2]|0;
  $19 = (((($18) + (($i$015*24)|0)|0)) + 18|0);
  $20 = HEAP8[$19>>0]|0;
  if (!((($20<<24>>24) == 0) | (($20<<24>>24) == 1) | (($20<<24>>24) == -1))) {
   $21 = HEAP32[$2>>2]|0;
   $22 = HEAP32[$v>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = HEAP32[$11>>2]|0;
   if ($23) {
    $$lcssa5 = 0;$$lcssa6 = $24;
   } else {
    $25 = HEAP32[$2>>2]|0;
    $26 = HEAP32[$v>>2]|0;
    $27 = $25;
    $28 = $26;
    $29 = (($27) - ($28))|0;
    $30 = $29 >> 2;
    $31 = HEAP32[$11>>2]|0;
    $33 = $24;$37 = $22;$j$07 = 0;
    while(1) {
     $32 = (((($33) + (($i$015*24)|0)|0)) + 18|0);
     $34 = HEAP8[$32>>0]|0;
     $35 = $34&255;
     $36 = (($37) + ($j$07<<2)|0);
     $38 = HEAP32[$36>>2]|0;
     $39 = Math_imul($38, $35)|0;
     HEAP32[$36>>2] = $39;
     $40 = (($j$07) + 1)|0;
     $41 = ($40>>>0)<($30>>>0);
     if ($41) {
      $33 = $31;$37 = $26;$j$07 = $40;
     } else {
      $$lcssa5 = $30;$$lcssa6 = $31;
      break;
     }
    }
   }
   $42 = (((($$lcssa6) + (($i$015*24)|0)|0)) + 20|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(-1);
   $45 = ($$lcssa5|0)==(0);
   $or$cond = $44 | $45;
   if (!($or$cond)) {
    $j1$010 = 0;
    while(1) {
     $46 = HEAP32[$v>>2]|0;
     $47 = (($46) + ($j1$010<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = HEAP32[$11>>2]|0;
     $50 = (((($49) + (($i$015*24)|0)|0)) + 20|0);
     $51 = HEAP8[$50>>0]|0;
     $52 = $51&255;
     $53 = (($52) + ($48))|0;
     HEAP32[$1>>2] = $53;
     $54 = HEAP32[$2>>2]|0;
     $55 = HEAP32[$4>>2]|0;
     $56 = ($54|0)==($55|0);
     if ($56) {
      __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($v,$1);
     } else {
      HEAP32[$54>>2] = $53;
      $57 = HEAP32[$2>>2]|0;
      $58 = ((($57)) + 4|0);
      HEAP32[$2>>2] = $58;
     }
     $59 = (($j1$010) + 1)|0;
     $exitcond = ($59|0)==($$lcssa5|0);
     if ($exitcond) {
      break;
     } else {
      $j1$010 = $59;
     }
    }
   }
   $60 = HEAP32[$11>>2]|0;
   $61 = (((($60) + (($i$015*24)|0)|0)) + 19|0);
   $62 = HEAP8[$61>>0]|0;
   $63 = ($62<<24>>24)==(-1);
   $64 = ($$lcssa5|0)==(0);
   $or$cond19 = $63 | $64;
   if (!($or$cond19)) {
    $j2$012 = 0;
    while(1) {
     $66 = HEAP32[$11>>2]|0;
     $67 = (((($66) + (($i$015*24)|0)|0)) + 19|0);
     $68 = HEAP8[$67>>0]|0;
     $69 = $68&255;
     $70 = HEAP32[$v>>2]|0;
     $71 = (($70) + ($j2$012<<2)|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = (($72) + ($69))|0;
     HEAP32[$71>>2] = $73;
     $74 = (($j2$012) + 1)|0;
     $exitcond18 = ($74|0)==($$lcssa5|0);
     if ($exitcond18) {
      break;
     } else {
      $j2$012 = $74;
     }
    }
   }
  }
  $65 = ($i$015$in|0)>(1);
  if ($65) {
   $i$015$in = $i$015;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$8);
  return;
 }
 $9 = ($6>>>0)>($__sz>>>0);
 if (!($9)) {
  return;
 }
 $10 = (($2) + ($__sz<<2)|0);
 $11 = ($1|0)==($10|0);
 if ($11) {
  return;
 }
 $scevgep$i$i = ((($1)) + -4|0);
 $12 = $scevgep$i$i;
 $__new_last2$i$i = $10;
 $13 = (($12) - ($__new_last2$i$i))|0;
 $14 = $13 >>> 2;
 $15 = $14 ^ -1;
 $scevgep4$i$i = (($1) + ($15<<2)|0);
 HEAP32[$0>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = (($7) + 1)|0;
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this)|0);
 $10 = ($9>>>0)<($8>>>0);
 if ($10) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $11 = ((($this)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = HEAP32[$this>>2]|0;
 $14 = $12;
 $15 = $13;
 $16 = (($14) - ($15))|0;
 $17 = $16 >> 2;
 $18 = $9 >>> 1;
 $19 = ($17>>>0)<($18>>>0);
 if ($19) {
  $20 = $16 >> 1;
  $21 = ($20>>>0)<($8>>>0);
  $22 = $21 ? $8 : $20;
  $$0$i = $22;
 } else {
  $$0$i = $9;
 }
 $23 = HEAP32[$1>>2]|0;
 $24 = HEAP32[$this>>2]|0;
 $25 = $23;
 $26 = $24;
 $27 = (($25) - ($26))|0;
 $28 = $27 >> 2;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$$0$i,$28,$0);
 $29 = ((($__v)) + 8|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = HEAP32[$__x>>2]|0;
 HEAP32[$30>>2] = $31;
 $32 = HEAP32[$29>>2]|0;
 $33 = ((($32)) + 4|0);
 HEAP32[$29>>2] = $33;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1073741823;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $5 = 0;
 } else {
  $3 = $__cap << 2;
  $4 = (__Znwj($3)|0);
  $5 = $4;
 }
 HEAP32[$this>>2] = $5;
 $6 = (($5) + ($__start<<2)|0);
 $7 = ((($this)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($this)) + 4|0);
 HEAP32[$8>>2] = $6;
 $9 = HEAP32[$this>>2]|0;
 $10 = (($9) + ($__cap<<2)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $1;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if (!($8)) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n);
  STACKTOP = sp;return;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$this>>2]|0;
 $11 = $10;
 $12 = (($5) - ($11))|0;
 $13 = $12 >> 2;
 $14 = (($13) + ($__n))|0;
 $15 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this)|0);
 $16 = ($15>>>0)<($14>>>0);
 if ($16) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $17 = ((($this)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$this>>2]|0;
 $20 = $18;
 $21 = $19;
 $22 = (($20) - ($21))|0;
 $23 = $22 >> 2;
 $24 = $15 >>> 1;
 $25 = ($23>>>0)<($24>>>0);
 if ($25) {
  $26 = $22 >> 1;
  $27 = ($26>>>0)<($14>>>0);
  $28 = $27 ? $14 : $26;
  $$0$i = $28;
 } else {
  $$0$i = $15;
 }
 $29 = HEAP32[$2>>2]|0;
 $30 = HEAP32[$this>>2]|0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $34 = $33 >> 2;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$$0$i,$34,$9);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($__v,$__n);
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __Z13__DOUBLE_BITSd($__f) {
 $__f = +$__f;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $__f;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($1);
 return ($0|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$8);
  return;
 }
 $9 = ($6>>>0)>($__sz>>>0);
 if (!($9)) {
  return;
 }
 $10 = (($2) + ($__sz<<3)|0);
 $11 = ($1|0)==($10|0);
 if ($11) {
  return;
 }
 $scevgep$i$i = ((($1)) + -8|0);
 $12 = $scevgep$i$i;
 $__new_last2$i$i = $10;
 $13 = (($12) - ($__new_last2$i$i))|0;
 $14 = $13 >>> 3;
 $15 = $14 ^ -1;
 $scevgep4$i$i = (($1) + ($15<<3)|0);
 HEAP32[$0>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)>($__n>>>0);
 if ($7) {
  $8 = HEAP32[$this>>2]|0;
  $9 = (($8) + ($__n<<3)|0);
  return ($9|0);
 } else {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 return (0)|0;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)>($__n>>>0);
 if ($7) {
  $8 = HEAP32[$this>>2]|0;
  $9 = (($8) + ($__n<<3)|0);
  return ($9|0);
 } else {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 3;
 $8 = ($7>>>0)<($__n>>>0);
 if (!($8)) {
  __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n);
  STACKTOP = sp;return;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$this>>2]|0;
 $11 = $10;
 $12 = (($5) - ($11))|0;
 $13 = $12 >> 3;
 $14 = (($13) + ($__n))|0;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this)|0);
 $16 = ($15>>>0)<($14>>>0);
 if ($16) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $17 = ((($this)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$this>>2]|0;
 $20 = $18;
 $21 = $19;
 $22 = (($20) - ($21))|0;
 $23 = $22 >> 3;
 $24 = $15 >>> 1;
 $25 = ($23>>>0)<($24>>>0);
 if ($25) {
  $26 = $22 >> 2;
  $27 = ($26>>>0)<($14>>>0);
  $28 = $27 ? $14 : $26;
  $$0$i = $28;
 } else {
  $$0$i = $15;
 }
 $29 = HEAP32[$2>>2]|0;
 $30 = HEAP32[$this>>2]|0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $34 = $33 >> 3;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($__v,$$0$i,$34,$9);
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($__v,$__n);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 3;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<3)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 536870911;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $5 = 0;
 } else {
  $3 = $__cap << 3;
  $4 = (__Znwj($3)|0);
  $5 = $4;
 }
 HEAP32[$this>>2] = $5;
 $6 = (($5) + ($__start<<3)|0);
 $7 = ((($this)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($this)) + 4|0);
 HEAP32[$8>>2] = $6;
 $9 = HEAP32[$this>>2]|0;
 $10 = (($9) + ($__cap<<3)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 3;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<3)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 3;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<3)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -8|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $1;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 3;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<3)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0);
 HEAP32[$this>>2] = (424);
 $1 = ((($this)) + 4|0);
 $2 = ((($0)) + 4|0);
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($1,$2);
 $3 = ((($this)) + 16|0);
 $4 = ((($0)) + 16|0);
 __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($3,$4);
 return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (696);
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__x)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$__x>>2]|0;
 $5 = ($3|0)==($4|0);
 if ($5) {
  return;
 }
 $6 = $3;
 $7 = $4;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 24)&-1;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$9);
 $10 = HEAP32[$__x>>2]|0;
 $11 = HEAP32[$2>>2]|0;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$10,$11);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__x)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$__x>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = $7 >> 2;
 $9 = ($8|0)==(0);
 if ($9) {
  return;
 }
 __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$8);
 $10 = HEAP32[$__x>>2]|0;
 $11 = HEAP32[$2>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$10,$11);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = $__n << 2;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + ($__n<<2)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$01 = 0, $$promoted = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__first3 = 0, $scevgep = 0, $scevgep5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__first|0)==($__last|0);
 if ($0) {
  return;
 }
 $__first3 = $__first;
 $1 = ((($this)) + 4|0);
 $$promoted = HEAP32[$1>>2]|0;
 $scevgep = ((($__last)) + -4|0);
 $2 = $scevgep;
 $3 = (($2) - ($__first3))|0;
 $4 = $3 >>> 2;
 $5 = (($4) + 1)|0;
 $$01 = $__first;$7 = $$promoted;
 while(1) {
  $6 = HEAP32[$$01>>2]|0;
  HEAP32[$7>>2] = $6;
  $8 = ((($7)) + 4|0);
  $9 = ((($$01)) + 4|0);
  $10 = ($9|0)==($__last|0);
  if ($10) {
   break;
  } else {
   $$01 = $9;$7 = $8;
  }
 }
 $scevgep5 = (($$promoted) + ($5<<2)|0);
 HEAP32[$1>>2] = $scevgep5;
 return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1073741823;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = ($__n*24)|0;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + (($__n*24)|0)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__first|0)==($__last|0);
 if ($0) {
  return;
 }
 $1 = ((($this)) + 4|0);
 $$01 = $__first;
 while(1) {
  $2 = HEAP32[$1>>2]|0;
  ;HEAP32[$2>>2]=HEAP32[$$01>>2]|0;HEAP32[$2+4>>2]=HEAP32[$$01+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$$01+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[$$01+12>>2]|0;HEAP32[$2+16>>2]=HEAP32[$$01+16>>2]|0;HEAP32[$2+20>>2]=HEAP32[$$01+20>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($3)) + 24|0);
  HEAP32[$1>>2] = $4;
  $5 = ((($$01)) + 24|0);
  $6 = ($5|0)==($__last|0);
  if ($6) {
   break;
  } else {
   $$01 = $5;
  }
 }
 return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 178956970;
}
function __ZN6ikfast14IkSolutionBaseIdED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN6ikfast14IkSolutionBaseIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($solution,$3);
 $4 = HEAP32[$this>>2]|0;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($solution,0)|0);
 $8 = ((($freevalues)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$freevalues>>2]|0;
 $11 = ($9|0)==($10|0);
 if ($11) {
  $13 = 0;
  FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
  return;
 }
 $12 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($freevalues,0)|0);
 $13 = $12;
 FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
 return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (696);
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0$i = 0, $$__last = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__last;
 $1 = $__first;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 24)&-1;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$this>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = (($9|0) / 24)&-1;
 $11 = ($3>>>0)>($10>>>0);
 if ($11) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this);
  $30 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this)|0);
  $31 = ($30>>>0)<($3>>>0);
  if ($31) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $32 = HEAP32[$4>>2]|0;
  $33 = HEAP32[$this>>2]|0;
  $34 = $32;
  $35 = $33;
  $36 = (($34) - ($35))|0;
  $37 = (($36|0) / 24)&-1;
  $38 = $30 >>> 1;
  $39 = ($37>>>0)<($38>>>0);
  if ($39) {
   $40 = $37 << 1;
   $41 = ($40>>>0)<($3>>>0);
   $42 = $41 ? $3 : $40;
   $$0$i = $42;
  } else {
   $$0$i = $30;
  }
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$$0$i);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last);
  return;
 }
 $12 = ((($this)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13;
 $15 = (($14) - ($8))|0;
 $16 = (($15|0) / 24)&-1;
 $17 = ($3>>>0)>($16>>>0);
 $18 = (($__first) + (($16*24)|0)|0);
 $$__last = $17 ? $18 : $__last;
 $19 = HEAP32[$this>>2]|0;
 $20 = $$__last;
 $21 = (($20) - ($1))|0;
 $22 = (($21|0) / 24)&-1;
 _memmove(($19|0),($__first|0),($21|0))|0;
 $23 = (($19) + (($22*24)|0)|0);
 if ($17) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$$__last,$__last);
  return;
 }
 $24 = HEAP32[$12>>2]|0;
 $25 = ($24|0)==($23|0);
 if ($25) {
  return;
 }
 $scevgep$i$i = ((($24)) + -24|0);
 $26 = $scevgep$i$i;
 $__new_last2$i$i = $23;
 $27 = (($26) - ($__new_last2$i$i))|0;
 $28 = (($27>>>0) / 24)&-1;
 $29 = $28 ^ -1;
 $scevgep4$i$i = (($24) + (($29*24)|0)|0);
 HEAP32[$12>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0$i = 0, $$__last = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__last;
 $1 = $__first;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$this>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = $9 >> 2;
 $11 = ($3>>>0)>($10>>>0);
 if ($11) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this);
  $30 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this)|0);
  $31 = ($30>>>0)<($3>>>0);
  if ($31) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $32 = HEAP32[$4>>2]|0;
  $33 = HEAP32[$this>>2]|0;
  $34 = $32;
  $35 = $33;
  $36 = (($34) - ($35))|0;
  $37 = $36 >> 2;
  $38 = $30 >>> 1;
  $39 = ($37>>>0)<($38>>>0);
  if ($39) {
   $40 = $36 >> 1;
   $41 = ($40>>>0)<($3>>>0);
   $42 = $41 ? $3 : $40;
   $$0$i = $42;
  } else {
   $$0$i = $30;
  }
  __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$$0$i);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last);
  return;
 }
 $12 = ((($this)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13;
 $15 = (($14) - ($8))|0;
 $16 = $15 >> 2;
 $17 = ($3>>>0)>($16>>>0);
 $18 = (($__first) + ($16<<2)|0);
 $$__last = $17 ? $18 : $__last;
 $19 = HEAP32[$this>>2]|0;
 $20 = $$__last;
 $21 = (($20) - ($1))|0;
 $22 = $21 >> 2;
 _memmove(($19|0),($__first|0),($21|0))|0;
 $23 = (($19) + ($22<<2)|0);
 if ($17) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$$__last,$__last);
  return;
 }
 $24 = HEAP32[$12>>2]|0;
 $25 = ($24|0)==($23|0);
 if ($25) {
  return;
 }
 $scevgep$i$i = ((($24)) + -4|0);
 $26 = $scevgep$i$i;
 $__new_last2$i$i = $23;
 $27 = (($26) - ($__new_last2$i$i))|0;
 $28 = $27 >>> 2;
 $29 = $28 ^ -1;
 $scevgep4$i$i = (($24) + ($29<<2)|0);
 HEAP32[$12>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$2>>2] = 0;
 HEAP32[$this>>2] = 0;
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -24|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = (($6>>>0) / 24)&-1;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + (($8*24)|0)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$2>>2] = 0;
 HEAP32[$this>>2] = 0;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = $__n << 3;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + ($__n<<3)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (840);
 return;
}
function __ZN6ikfast18IkSolutionListBaseIdED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN6ikfast18IkSolutionListBaseIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __Z6IKacosd($f) {
 $f = +$f;
 var $$06 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = $f > -1.0000020000000001;
 $3 = $f < 1.0000020000000001;
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $4 = ((($ss)) + 64|0);
  $5 = ((($ss)) + 8|0);
  HEAP32[$5>>2] = (896);
  $6 = ((($ss)) + 12|0);
  HEAP32[$ss>>2] = ((940));
  HEAP32[$4>>2] = ((960));
  $7 = ((($ss)) + 4|0);
  HEAP32[$7>>2] = 0;
  $8 = HEAP32[$ss>>2]|0;
  $9 = ((($8)) + -12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($ss) + ($10)|0);
  __ZNSt3__18ios_base4initEPv($11,$6);
  $12 = ((($ss)) + 64|0);
  $$sum$i$i$i = (($10) + 72)|0;
  $13 = (($ss) + ($$sum$i$i$i)|0);
  HEAP32[$13>>2] = 0;
  $$sum1$i$i$i = (($10) + 76)|0;
  $14 = (($ss) + ($$sum1$i$i$i)|0);
  HEAP32[$14>>2] = -1;
  HEAP32[$ss>>2] = (876);
  HEAP32[$12>>2] = (916);
  HEAP32[$5>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
  HEAP32[$6>>2] = (976);
  $15 = ((($ss)) + 44|0);
  $16 = ((($ss)) + 60|0);
  ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;HEAP32[$15+12>>2]=0|0;
  HEAP32[$16>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $17 = ((($ss)) + 8|0);
  $18 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($17,1072)|0);
  $19 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($18,1096)|0);
  $20 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($19,1152)|0);
  $21 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($20,163)|0);
  $22 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($21,1160)|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1576)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1176)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1512)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($25,1208)|0);
  $26 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$6);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($26,$1);
  ___cxa_throw(($26|0),(1952|0),(35|0));
  // unreachable;
 }
 $27 = !($f <= -1.0);
 if (!($27)) {
  $$06 = 3.14159265358979;
  STACKTOP = sp;return (+$$06);
 }
 $28 = !($f >= 1.0);
 if (!($28)) {
  $$06 = 0.0;
  STACKTOP = sp;return (+$$06);
 }
 $29 = (+Math_acos((+$f)));
 $$06 = $29;
 STACKTOP = sp;return (+$$06);
}
function __Z5IKabsd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_abs((+$f)));
 return (+$0);
}
function __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($agg$result,$fy,$fx,$epsilon) {
 $agg$result = $agg$result|0;
 $fy = +$fy;
 $fx = +$fx;
 $epsilon = +$epsilon;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($agg$result)) + 8|0);
 HEAP8[$0>>0] = 0;
 HEAPF64[$agg$result>>3] = 0.0;
 $1 = (__Z13__DOUBLE_BITSd($fy)|0);
 $2 = tempRet0;
 $3 = $2 & 2147483647;
 $4 = ($3>>>0)>(2146435072);
 $5 = ($1>>>0)>(0);
 $6 = ($3|0)==(2146435072);
 $7 = $6 & $5;
 $8 = $4 | $7;
 if ($8) {
  return;
 }
 $9 = (__Z13__DOUBLE_BITSd($fx)|0);
 $10 = tempRet0;
 $11 = $10 & 2147483647;
 $12 = ($11>>>0)>(2146435072);
 $13 = ($9>>>0)>(0);
 $14 = ($11|0)==(2146435072);
 $15 = $14 & $13;
 $16 = $12 | $15;
 if ($16) {
  return;
 }
 $17 = (+__Z5IKabsd($fy));
 $18 = !($17 >= 1.9999999999999999E-6);
 if ($18) {
  $19 = (+__Z5IKabsd($fx));
  $20 = $19 > 1.9999999999999999E-6;
  if (!($20)) {
   return;
  }
 }
 $21 = (+__Z13IKatan2Simpledd($fy,$fx));
 HEAPF64[$agg$result>>3] = $21;
 HEAP8[$0>>0] = 1;
 return;
}
function __Z6IKsqrtd($f) {
 $f = +$f;
 var $$0 = 0.0, $0 = 0, $1 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = !($f <= 0.0);
 if ($0) {
  $1 = (+Math_sqrt((+$f)));
  $$0 = $1;
 } else {
  $$0 = 0.0;
 }
 return (+$$0);
}
function __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($agg$result,$f,$n) {
 $agg$result = $agg$result|0;
 $f = +$f;
 $n = $n|0;
 var $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0.0, $num$02 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($agg$result)) + 8|0);
 HEAP8[$0>>0] = 1;
 if ((($n|0) == 0)) {
  HEAPF64[$agg$result>>3] = 1.0;
  return;
 } else if ((($n|0) == 1)) {
  HEAPF64[$agg$result>>3] = $f;
  return;
 } else {
  $1 = ($n|0)<(0);
  if ($1) {
   $2 = $f == 0.0;
   if ($2) {
    HEAP8[$0>>0] = 0;
    HEAPF64[$agg$result>>3] = 1.0E+30;
    return;
   }
   $3 = ($n|0)==(-1);
   if ($3) {
    $4 = 1.0 / $f;
    HEAPF64[$agg$result>>3] = $4;
    return;
   }
  }
  $5 = ($n|0)>(0);
  $6 = (0 - ($n))|0;
  $7 = $5 ? $n : $6;
  if ((($7|0) == 2)) {
   $8 = $f * $f;
   HEAPF64[$agg$result>>3] = $8;
  } else if ((($7|0) == 3)) {
   $9 = $f * $f;
   $10 = $9 * $f;
   HEAPF64[$agg$result>>3] = $10;
  } else {
   HEAPF64[$agg$result>>3] = 1.0;
   $11 = ($7|0)>(0);
   if ($11) {
    $$01 = $f;$num$02 = $7;
    while(1) {
     $12 = $num$02 & 1;
     $13 = ($12|0)==(0);
     if (!($13)) {
      $14 = +HEAPF64[$agg$result>>3];
      $15 = $$01 * $14;
      HEAPF64[$agg$result>>3] = $15;
     }
     $16 = $num$02 >> 1;
     $17 = $$01 * $$01;
     $18 = ($16|0)>(0);
     if ($18) {
      $$01 = $17;$num$02 = $16;
     } else {
      break;
     }
    }
   }
  }
  if (!($1)) {
   return;
  }
  $19 = +HEAPF64[$agg$result>>3];
  $20 = 1.0 / $19;
  HEAPF64[$agg$result>>3] = $20;
  return;
 }
}
function __Z6IKasind($f) {
 $f = +$f;
 var $$06 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = $f > -1.0000020000000001;
 $3 = $f < 1.0000020000000001;
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $4 = ((($ss)) + 64|0);
  $5 = ((($ss)) + 8|0);
  HEAP32[$5>>2] = (896);
  $6 = ((($ss)) + 12|0);
  HEAP32[$ss>>2] = ((940));
  HEAP32[$4>>2] = ((960));
  $7 = ((($ss)) + 4|0);
  HEAP32[$7>>2] = 0;
  $8 = HEAP32[$ss>>2]|0;
  $9 = ((($8)) + -12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($ss) + ($10)|0);
  __ZNSt3__18ios_base4initEPv($11,$6);
  $12 = ((($ss)) + 64|0);
  $$sum$i$i$i = (($10) + 72)|0;
  $13 = (($ss) + ($$sum$i$i$i)|0);
  HEAP32[$13>>2] = 0;
  $$sum1$i$i$i = (($10) + 76)|0;
  $14 = (($ss) + ($$sum1$i$i$i)|0);
  HEAP32[$14>>2] = -1;
  HEAP32[$ss>>2] = (876);
  HEAP32[$12>>2] = (916);
  HEAP32[$5>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
  HEAP32[$6>>2] = (976);
  $15 = ((($ss)) + 44|0);
  $16 = ((($ss)) + 60|0);
  ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;HEAP32[$15+12>>2]=0|0;
  HEAP32[$16>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $17 = ((($ss)) + 8|0);
  $18 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($17,1072)|0);
  $19 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($18,1096)|0);
  $20 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($19,1152)|0);
  $21 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($20,130)|0);
  $22 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($21,1160)|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1504)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1176)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1512)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($25,1208)|0);
  $26 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$6);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($26,$1);
  ___cxa_throw(($26|0),(1952|0),(35|0));
  // unreachable;
 }
 $27 = !($f <= -1.0);
 if (!($27)) {
  $$06 = -1.5707963267949001;
  STACKTOP = sp;return (+$$06);
 }
 $28 = !($f >= 1.0);
 if (!($28)) {
  $$06 = 1.5707963267949001;
  STACKTOP = sp;return (+$$06);
 }
 $29 = (+Math_asin((+$f)));
 $$06 = $29;
 STACKTOP = sp;return (+$$06);
}
function __Z6IKsignd($f) {
 $f = +$f;
 var $$ = 0.0, $$0 = 0.0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f > 0.0;
 $1 = $f < 0.0;
 $$ = $1 ? -1.0 : 0.0;
 $$0 = $0 ? 1.0 : $$;
 return (+$$0);
}
function __Z6IKfmoddd($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0$lcssa = 0.0, $$01 = 0.0, $0 = 0, $1 = 0.0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $x < 0.0;
 if ($0) {
  $$01 = $x;
  while(1) {
   $1 = $$01 + $y;
   $2 = $1 < 0.0;
   if ($2) {
    $$01 = $1;
   } else {
    $$0$lcssa = $1;
    break;
   }
  }
 } else {
  $$0$lcssa = $x;
 }
 $3 = (+_fmod($$0$lcssa,$y));
 return (+$3);
}
function __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions) {
 $this = $this|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0.0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0;
 var $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0.0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0.0;
 var $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0.0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0;
 var $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0.0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0;
 var $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0.0, $1078 = 0.0, $1079 = 0.0, $108 = 0, $1080 = 0.0, $1081 = 0.0, $1082 = 0.0, $1083 = 0.0, $1084 = 0.0, $1085 = 0.0, $1086 = 0.0, $1087 = 0.0;
 var $1088 = 0, $1089 = 0.0, $109 = 0, $1090 = 0.0, $1091 = 0.0, $1092 = 0, $1093 = 0.0, $1094 = 0, $1095 = 0.0, $1096 = 0, $1097 = 0.0, $1098 = 0, $1099 = 0.0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0.0, $1102 = 0.0, $1103 = 0, $1104 = 0;
 var $1105 = 0.0, $1106 = 0.0, $1107 = 0.0, $1108 = 0.0, $1109 = 0.0, $111 = 0, $1110 = 0.0, $1111 = 0.0, $1112 = 0.0, $1113 = 0.0, $1114 = 0, $1115 = 0.0, $1116 = 0, $1117 = 0.0, $1118 = 0.0, $1119 = 0, $112 = 0, $1120 = 0.0, $1121 = 0, $1122 = 0.0;
 var $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0.0, $1134 = 0, $1135 = 0.0, $1136 = 0.0, $1137 = 0.0, $1138 = 0, $1139 = 0.0, $114 = 0, $1140 = 0;
 var $1141 = 0.0, $1142 = 0.0, $1143 = 0.0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0.0, $1148 = 0, $1149 = 0.0, $115 = 0, $1150 = 0, $1151 = 0.0, $1152 = 0.0, $1153 = 0.0, $1154 = 0.0, $1155 = 0.0, $1156 = 0.0, $1157 = 0.0, $1158 = 0.0, $1159 = 0.0;
 var $116 = 0, $1160 = 0.0, $1161 = 0, $1162 = 0.0, $1163 = 0.0, $1164 = 0.0, $1165 = 0.0, $1166 = 0.0, $1167 = 0.0, $1168 = 0.0, $1169 = 0.0, $117 = 0, $1170 = 0, $1171 = 0.0, $1172 = 0.0, $1173 = 0.0, $1174 = 0.0, $1175 = 0.0, $1176 = 0, $1177 = 0.0;
 var $1178 = 0.0, $1179 = 0.0, $118 = 0, $1180 = 0.0, $1181 = 0.0, $1182 = 0, $1183 = 0.0, $1184 = 0.0, $1185 = 0.0, $1186 = 0.0, $1187 = 0.0, $1188 = 0.0, $1189 = 0.0, $119 = 0, $1190 = 0.0, $1191 = 0.0, $1192 = 0.0, $1193 = 0.0, $1194 = 0.0, $1195 = 0.0;
 var $1196 = 0, $1197 = 0.0, $1198 = 0, $1199 = 0.0, $12 = 0, $120 = 0, $1200 = 0.0, $1201 = 0.0, $1202 = 0.0, $1203 = 0.0, $1204 = 0.0, $1205 = 0.0, $1206 = 0.0, $1207 = 0.0, $1208 = 0.0, $1209 = 0.0, $121 = 0, $1210 = 0.0, $1211 = 0.0, $1212 = 0.0;
 var $1213 = 0.0, $1214 = 0.0, $1215 = 0.0, $1216 = 0.0, $1217 = 0.0, $1218 = 0.0, $1219 = 0.0, $122 = 0, $1220 = 0.0, $1221 = 0.0, $1222 = 0.0, $1223 = 0.0, $1224 = 0.0, $1225 = 0.0, $1226 = 0.0, $1227 = 0.0, $1228 = 0.0, $1229 = 0.0, $123 = 0, $1230 = 0.0;
 var $1231 = 0.0, $1232 = 0.0, $1233 = 0.0, $1234 = 0.0, $1235 = 0.0, $1236 = 0, $1237 = 0.0, $1238 = 0.0, $1239 = 0.0, $124 = 0, $1240 = 0.0, $1241 = 0.0, $1242 = 0, $1243 = 0.0, $1244 = 0, $1245 = 0.0, $1246 = 0, $1247 = 0.0, $1248 = 0, $1249 = 0.0;
 var $125 = 0, $1250 = 0, $1251 = 0.0, $1252 = 0, $1253 = 0.0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0.0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0;
 var $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0.0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0.0;
 var $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0.0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0;
 var $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0.0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0;
 var $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0.0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0;
 var $134 = 0, $1340 = 0, $1341 = 0.0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0;
 var $1358 = 0.0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0.0, $1362 = 0.0, $1363 = 0, $1364 = 0, $1365 = 0.0, $1366 = 0.0, $1367 = 0.0, $1368 = 0.0, $1369 = 0.0, $137 = 0, $1370 = 0.0, $1371 = 0.0, $1372 = 0.0, $1373 = 0.0, $1374 = 0.0, $1375 = 0;
 var $1376 = 0.0, $1377 = 0.0, $1378 = 0.0, $1379 = 0, $138 = 0, $1380 = 0.0, $1381 = 0.0, $1382 = 0.0, $1383 = 0.0, $1384 = 0.0, $1385 = 0, $1386 = 0.0, $1387 = 0.0, $1388 = 0.0, $1389 = 0.0, $139 = 0, $1390 = 0.0, $1391 = 0.0, $1392 = 0.0, $1393 = 0.0;
 var $1394 = 0.0, $1395 = 0.0, $1396 = 0.0, $1397 = 0.0, $1398 = 0.0, $1399 = 0.0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0.0, $1402 = 0, $1403 = 0.0, $1404 = 0.0, $1405 = 0.0, $1406 = 0.0, $1407 = 0.0, $1408 = 0.0, $1409 = 0.0, $141 = 0, $1410 = 0.0;
 var $1411 = 0.0, $1412 = 0.0, $1413 = 0.0, $1414 = 0.0, $1415 = 0.0, $1416 = 0.0, $1417 = 0.0, $1418 = 0.0, $1419 = 0.0, $142 = 0, $1420 = 0.0, $1421 = 0.0, $1422 = 0.0, $1423 = 0.0, $1424 = 0.0, $1425 = 0.0, $1426 = 0.0, $1427 = 0.0, $1428 = 0.0, $1429 = 0.0;
 var $143 = 0, $1430 = 0.0, $1431 = 0.0, $1432 = 0.0, $1433 = 0.0, $1434 = 0.0, $1435 = 0.0, $1436 = 0.0, $1437 = 0.0, $1438 = 0.0, $1439 = 0.0, $144 = 0, $1440 = 0.0, $1441 = 0.0, $1442 = 0.0, $1443 = 0.0, $1444 = 0.0, $1445 = 0.0, $1446 = 0.0, $1447 = 0.0;
 var $1448 = 0.0, $1449 = 0.0, $145 = 0, $1450 = 0.0, $1451 = 0.0, $1452 = 0.0, $1453 = 0.0, $1454 = 0.0, $1455 = 0, $1456 = 0.0, $1457 = 0.0, $1458 = 0.0, $1459 = 0, $146 = 0, $1460 = 0.0, $1461 = 0, $1462 = 0.0, $1463 = 0, $1464 = 0.0, $1465 = 0;
 var $1466 = 0.0, $1467 = 0, $1468 = 0.0, $1469 = 0, $147 = 0, $1470 = 0.0, $1471 = 0, $1472 = 0.0, $1473 = 0.0, $1474 = 0.0, $1475 = 0.0, $1476 = 0.0, $1477 = 0.0, $1478 = 0.0, $1479 = 0.0, $148 = 0, $1480 = 0.0, $1481 = 0.0, $1482 = 0.0, $1483 = 0.0;
 var $1484 = 0.0, $1485 = 0.0, $1486 = 0.0, $1487 = 0.0, $1488 = 0.0, $1489 = 0.0, $149 = 0, $1490 = 0.0, $1491 = 0.0, $1492 = 0.0, $1493 = 0.0, $1494 = 0.0, $1495 = 0.0, $1496 = 0.0, $1497 = 0.0, $1498 = 0.0, $1499 = 0.0, $15 = 0, $150 = 0, $1500 = 0.0;
 var $1501 = 0.0, $1502 = 0.0, $1503 = 0.0, $1504 = 0.0, $1505 = 0.0, $1506 = 0.0, $1507 = 0.0, $1508 = 0.0, $1509 = 0.0, $151 = 0, $1510 = 0.0, $1511 = 0.0, $1512 = 0.0, $1513 = 0.0, $1514 = 0.0, $1515 = 0.0, $1516 = 0.0, $1517 = 0.0, $1518 = 0.0, $1519 = 0.0;
 var $152 = 0, $1520 = 0.0, $1521 = 0.0, $1522 = 0.0, $1523 = 0.0, $1524 = 0.0, $1525 = 0.0, $1526 = 0.0, $1527 = 0.0, $1528 = 0.0, $1529 = 0.0, $153 = 0, $1530 = 0.0, $1531 = 0.0, $1532 = 0.0, $1533 = 0.0, $1534 = 0.0, $1535 = 0.0, $1536 = 0.0, $1537 = 0.0;
 var $1538 = 0.0, $1539 = 0.0, $154 = 0, $1540 = 0.0, $1541 = 0.0, $1542 = 0.0, $1543 = 0.0, $1544 = 0.0, $1545 = 0.0, $1546 = 0.0, $1547 = 0.0, $1548 = 0.0, $1549 = 0.0, $155 = 0, $1550 = 0.0, $1551 = 0.0, $1552 = 0.0, $1553 = 0.0, $1554 = 0.0, $1555 = 0.0;
 var $1556 = 0.0, $1557 = 0.0, $1558 = 0.0, $1559 = 0.0, $156 = 0, $1560 = 0.0, $1561 = 0.0, $1562 = 0.0, $1563 = 0.0, $1564 = 0.0, $1565 = 0.0, $1566 = 0.0, $1567 = 0.0, $1568 = 0.0, $1569 = 0.0, $157 = 0, $1570 = 0.0, $1571 = 0.0, $1572 = 0.0, $1573 = 0.0;
 var $1574 = 0.0, $1575 = 0.0, $1576 = 0.0, $1577 = 0.0, $1578 = 0.0, $1579 = 0.0, $158 = 0, $1580 = 0.0, $1581 = 0.0, $1582 = 0, $1583 = 0.0, $1584 = 0.0, $1585 = 0, $1586 = 0.0, $1587 = 0.0, $1588 = 0.0, $1589 = 0.0, $159 = 0, $1590 = 0.0, $1591 = 0.0;
 var $1592 = 0.0, $1593 = 0.0, $1594 = 0.0, $1595 = 0.0, $1596 = 0.0, $1597 = 0.0, $1598 = 0.0, $1599 = 0.0, $16 = 0, $160 = 0, $1600 = 0.0, $1601 = 0.0, $1602 = 0.0, $1603 = 0.0, $1604 = 0.0, $1605 = 0.0, $1606 = 0.0, $1607 = 0.0, $1608 = 0.0, $1609 = 0.0;
 var $161 = 0, $1610 = 0.0, $1611 = 0.0, $1612 = 0.0, $1613 = 0.0, $1614 = 0.0, $1615 = 0.0, $1616 = 0.0, $1617 = 0.0, $1618 = 0.0, $1619 = 0.0, $162 = 0, $1620 = 0.0, $1621 = 0.0, $1622 = 0.0, $1623 = 0.0, $1624 = 0.0, $1625 = 0.0, $1626 = 0.0, $1627 = 0.0;
 var $1628 = 0.0, $1629 = 0.0, $163 = 0, $1630 = 0.0, $1631 = 0.0, $1632 = 0.0, $1633 = 0.0, $1634 = 0.0, $1635 = 0.0, $1636 = 0.0, $1637 = 0.0, $1638 = 0.0, $1639 = 0.0, $164 = 0, $1640 = 0.0, $1641 = 0.0, $1642 = 0.0, $1643 = 0.0, $1644 = 0.0, $1645 = 0.0;
 var $1646 = 0.0, $1647 = 0.0, $1648 = 0.0, $1649 = 0.0, $165 = 0, $1650 = 0.0, $1651 = 0.0, $1652 = 0.0, $1653 = 0.0, $1654 = 0.0, $1655 = 0.0, $1656 = 0.0, $1657 = 0.0, $1658 = 0.0, $1659 = 0.0, $166 = 0, $1660 = 0.0, $1661 = 0.0, $1662 = 0.0, $1663 = 0.0;
 var $1664 = 0.0, $1665 = 0.0, $1666 = 0.0, $1667 = 0.0, $1668 = 0.0, $1669 = 0.0, $167 = 0, $1670 = 0.0, $1671 = 0.0, $1672 = 0.0, $1673 = 0.0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0, $1677 = 0.0, $1678 = 0.0, $1679 = 0.0, $168 = 0, $1680 = 0.0, $1681 = 0.0;
 var $1682 = 0.0, $1683 = 0.0, $1684 = 0.0, $1685 = 0.0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0.0, $169 = 0, $1690 = 0.0, $1691 = 0.0, $1692 = 0.0, $1693 = 0.0, $1694 = 0.0, $1695 = 0.0, $1696 = 0, $1697 = 0.0, $1698 = 0.0, $1699 = 0, $17 = 0;
 var $170 = 0, $1700 = 0.0, $1701 = 0.0, $1702 = 0.0, $1703 = 0.0, $1704 = 0.0, $1705 = 0.0, $1706 = 0.0, $1707 = 0.0, $1708 = 0.0, $1709 = 0.0, $171 = 0, $1710 = 0.0, $1711 = 0.0, $1712 = 0.0, $1713 = 0.0, $1714 = 0.0, $1715 = 0.0, $1716 = 0.0, $1717 = 0.0;
 var $1718 = 0.0, $1719 = 0.0, $172 = 0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0.0, $1724 = 0.0, $1725 = 0.0, $1726 = 0.0, $1727 = 0.0, $1728 = 0.0, $1729 = 0.0, $173 = 0, $1730 = 0.0, $1731 = 0.0, $1732 = 0.0, $1733 = 0.0, $1734 = 0.0, $1735 = 0.0;
 var $1736 = 0.0, $1737 = 0.0, $1738 = 0.0, $1739 = 0.0, $174 = 0, $1740 = 0.0, $1741 = 0.0, $1742 = 0.0, $1743 = 0.0, $1744 = 0.0, $1745 = 0.0, $1746 = 0.0, $1747 = 0.0, $1748 = 0.0, $1749 = 0.0, $175 = 0, $1750 = 0.0, $1751 = 0.0, $1752 = 0.0, $1753 = 0.0;
 var $1754 = 0.0, $1755 = 0.0, $1756 = 0.0, $1757 = 0.0, $1758 = 0.0, $1759 = 0.0, $176 = 0, $1760 = 0.0, $1761 = 0.0, $1762 = 0.0, $1763 = 0.0, $1764 = 0.0, $1765 = 0.0, $1766 = 0.0, $1767 = 0.0, $1768 = 0.0, $1769 = 0.0, $177 = 0, $1770 = 0.0, $1771 = 0.0;
 var $1772 = 0.0, $1773 = 0.0, $1774 = 0.0, $1775 = 0.0, $1776 = 0.0, $1777 = 0.0, $1778 = 0.0, $1779 = 0.0, $178 = 0, $1780 = 0.0, $1781 = 0.0, $1782 = 0.0, $1783 = 0.0, $1784 = 0.0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0.0, $1789 = 0.0, $179 = 0;
 var $1790 = 0.0, $1791 = 0.0, $1792 = 0.0, $1793 = 0.0, $1794 = 0.0, $1795 = 0.0, $1796 = 0.0, $1797 = 0.0, $1798 = 0.0, $1799 = 0.0, $18 = 0, $180 = 0, $1800 = 0.0, $1801 = 0.0, $1802 = 0.0, $1803 = 0.0, $1804 = 0.0, $1805 = 0.0, $1806 = 0.0, $1807 = 0.0;
 var $1808 = 0.0, $1809 = 0.0, $181 = 0, $1810 = 0, $1811 = 0.0, $1812 = 0.0, $1813 = 0, $1814 = 0.0, $1815 = 0.0, $1816 = 0.0, $1817 = 0.0, $1818 = 0.0, $1819 = 0.0, $182 = 0, $1820 = 0.0, $1821 = 0.0, $1822 = 0.0, $1823 = 0.0, $1824 = 0.0, $1825 = 0.0;
 var $1826 = 0.0, $1827 = 0.0, $1828 = 0.0, $1829 = 0.0, $183 = 0, $1830 = 0.0, $1831 = 0.0, $1832 = 0.0, $1833 = 0, $1834 = 0.0, $1835 = 0.0, $1836 = 0.0, $1837 = 0, $1838 = 0.0, $1839 = 0, $184 = 0, $1840 = 0.0, $1841 = 0, $1842 = 0.0, $1843 = 0;
 var $1844 = 0.0, $1845 = 0, $1846 = 0.0, $1847 = 0, $1848 = 0.0, $1849 = 0, $185 = 0, $1850 = 0.0, $1851 = 0, $1852 = 0.0, $1853 = 0.0, $1854 = 0.0, $1855 = 0.0, $1856 = 0.0, $1857 = 0.0, $1858 = 0.0, $1859 = 0.0, $186 = 0, $1860 = 0.0, $1861 = 0;
 var $1862 = 0.0, $1863 = 0.0, $1864 = 0.0, $1865 = 0.0, $1866 = 0, $1867 = 0.0, $1868 = 0.0, $1869 = 0.0, $187 = 0, $1870 = 0.0, $1871 = 0.0, $1872 = 0, $1873 = 0.0, $1874 = 0.0, $1875 = 0.0, $1876 = 0.0, $1877 = 0.0, $1878 = 0.0, $1879 = 0.0, $188 = 0;
 var $1880 = 0.0, $1881 = 0.0, $1882 = 0.0, $1883 = 0.0, $1884 = 0.0, $1885 = 0.0, $1886 = 0, $1887 = 0.0, $1888 = 0, $1889 = 0.0, $189 = 0, $1890 = 0.0, $1891 = 0.0, $1892 = 0.0, $1893 = 0.0, $1894 = 0.0, $1895 = 0.0, $1896 = 0.0, $1897 = 0.0, $1898 = 0.0;
 var $1899 = 0.0, $19 = 0, $190 = 0, $1900 = 0.0, $1901 = 0.0, $1902 = 0.0, $1903 = 0.0, $1904 = 0.0, $1905 = 0.0, $1906 = 0.0, $1907 = 0.0, $1908 = 0.0, $1909 = 0.0, $191 = 0, $1910 = 0.0, $1911 = 0.0, $1912 = 0.0, $1913 = 0.0, $1914 = 0.0, $1915 = 0.0;
 var $1916 = 0.0, $1917 = 0.0, $1918 = 0.0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $1921 = 0.0, $1922 = 0.0, $1923 = 0.0, $1924 = 0, $1925 = 0.0, $1926 = 0.0, $1927 = 0.0, $1928 = 0.0, $1929 = 0.0, $193 = 0, $1930 = 0, $1931 = 0.0, $1932 = 0, $1933 = 0.0;
 var $1934 = 0, $1935 = 0.0, $1936 = 0, $1937 = 0.0, $1938 = 0, $1939 = 0.0, $194 = 0, $1940 = 0, $1941 = 0.0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0.0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0;
 var $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0.0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0;
 var $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0.0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0.0, $1988 = 0;
 var $1989 = 0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0.0, $2002 = 0, $2003 = 0, $2004 = 0;
 var $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0.0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0;
 var $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0.0, $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0;
 var $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0.0, $2045 = 0.0, $2046 = 0.0, $2047 = 0.0, $2048 = 0.0, $2049 = 0.0, $205 = 0, $2050 = 0.0, $2051 = 0.0, $2052 = 0.0, $2053 = 0.0, $2054 = 0.0, $2055 = 0.0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0, $2059 = 0.0;
 var $206 = 0, $2060 = 0.0, $2061 = 0.0, $2062 = 0.0, $2063 = 0.0, $2064 = 0.0, $2065 = 0.0, $2066 = 0, $2067 = 0.0, $2068 = 0.0, $2069 = 0.0, $207 = 0, $2070 = 0, $2071 = 0.0, $2072 = 0, $2073 = 0.0, $2074 = 0, $2075 = 0.0, $2076 = 0, $2077 = 0.0;
 var $2078 = 0, $2079 = 0.0, $208 = 0, $2080 = 0, $2081 = 0.0, $2082 = 0, $2083 = 0.0, $2084 = 0, $2085 = 0.0, $2086 = 0, $2087 = 0.0, $2088 = 0.0, $2089 = 0.0, $209 = 0, $2090 = 0.0, $2091 = 0.0, $2092 = 0.0, $2093 = 0.0, $2094 = 0.0, $2095 = 0;
 var $2096 = 0.0, $2097 = 0.0, $2098 = 0.0, $2099 = 0.0, $21 = 0, $210 = 0, $2100 = 0.0, $2101 = 0, $2102 = 0.0, $2103 = 0.0, $2104 = 0.0, $2105 = 0.0, $2106 = 0.0, $2107 = 0, $2108 = 0.0, $2109 = 0.0, $211 = 0, $2110 = 0.0, $2111 = 0.0, $2112 = 0.0;
 var $2113 = 0.0, $2114 = 0.0, $2115 = 0.0, $2116 = 0.0, $2117 = 0.0, $2118 = 0.0, $2119 = 0.0, $212 = 0, $2120 = 0.0, $2121 = 0, $2122 = 0.0, $2123 = 0, $2124 = 0.0, $2125 = 0.0, $2126 = 0.0, $2127 = 0.0, $2128 = 0.0, $2129 = 0.0, $213 = 0, $2130 = 0.0;
 var $2131 = 0.0, $2132 = 0.0, $2133 = 0.0, $2134 = 0.0, $2135 = 0.0, $2136 = 0.0, $2137 = 0.0, $2138 = 0.0, $2139 = 0.0, $214 = 0, $2140 = 0.0, $2141 = 0.0, $2142 = 0.0, $2143 = 0.0, $2144 = 0.0, $2145 = 0.0, $2146 = 0.0, $2147 = 0.0, $2148 = 0.0, $2149 = 0.0;
 var $215 = 0, $2150 = 0.0, $2151 = 0.0, $2152 = 0.0, $2153 = 0.0, $2154 = 0.0, $2155 = 0.0, $2156 = 0.0, $2157 = 0.0, $2158 = 0.0, $2159 = 0.0, $216 = 0, $2160 = 0.0, $2161 = 0, $2162 = 0.0, $2163 = 0.0, $2164 = 0.0, $2165 = 0.0, $2166 = 0.0, $2167 = 0;
 var $2168 = 0.0, $2169 = 0, $217 = 0, $2170 = 0.0, $2171 = 0, $2172 = 0.0, $2173 = 0, $2174 = 0.0, $2175 = 0, $2176 = 0.0, $2177 = 0, $2178 = 0.0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0.0, $2183 = 0, $2184 = 0, $2185 = 0;
 var $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0.0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0;
 var $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0.0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0;
 var $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0.0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0.0, $2239 = 0;
 var $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0.0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0;
 var $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0.0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0;
 var $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0.0, $2282 = 0.0, $2283 = 0.0, $2284 = 0.0, $2285 = 0.0, $2286 = 0.0, $2287 = 0.0, $2288 = 0.0, $2289 = 0.0, $229 = 0, $2290 = 0.0, $2291 = 0.0, $2292 = 0.0, $2293 = 0.0;
 var $2294 = 0.0, $2295 = 0.0, $2296 = 0.0, $2297 = 0.0, $2298 = 0.0, $2299 = 0.0, $23 = 0, $230 = 0, $2300 = 0.0, $2301 = 0.0, $2302 = 0.0, $2303 = 0.0, $2304 = 0.0, $2305 = 0.0, $2306 = 0.0, $2307 = 0.0, $2308 = 0.0, $2309 = 0.0, $231 = 0, $2310 = 0.0;
 var $2311 = 0, $2312 = 0.0, $2313 = 0.0, $2314 = 0, $2315 = 0.0, $2316 = 0, $2317 = 0.0, $2318 = 0, $2319 = 0.0, $232 = 0, $2320 = 0, $2321 = 0.0, $2322 = 0, $2323 = 0.0, $2324 = 0, $2325 = 0.0, $2326 = 0, $2327 = 0.0, $2328 = 0.0, $2329 = 0.0;
 var $233 = 0, $2330 = 0, $2331 = 0.0, $2332 = 0.0, $2333 = 0.0, $2334 = 0, $2335 = 0.0, $2336 = 0.0, $2337 = 0.0, $2338 = 0.0, $2339 = 0.0, $234 = 0, $2340 = 0, $2341 = 0.0, $2342 = 0.0, $2343 = 0.0, $2344 = 0.0, $2345 = 0.0, $2346 = 0.0, $2347 = 0.0;
 var $2348 = 0, $2349 = 0.0, $235 = 0, $2350 = 0, $2351 = 0.0, $2352 = 0.0, $2353 = 0.0, $2354 = 0.0, $2355 = 0.0, $2356 = 0.0, $2357 = 0.0, $2358 = 0.0, $2359 = 0.0, $236 = 0, $2360 = 0.0, $2361 = 0.0, $2362 = 0.0, $2363 = 0.0, $2364 = 0.0, $2365 = 0.0;
 var $2366 = 0.0, $2367 = 0.0, $2368 = 0.0, $2369 = 0.0, $237 = 0, $2370 = 0.0, $2371 = 0.0, $2372 = 0.0, $2373 = 0.0, $2374 = 0.0, $2375 = 0.0, $2376 = 0.0, $2377 = 0.0, $2378 = 0.0, $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0, $2382 = 0.0, $2383 = 0.0;
 var $2384 = 0.0, $2385 = 0, $2386 = 0.0, $2387 = 0, $2388 = 0.0, $2389 = 0, $239 = 0, $2390 = 0.0, $2391 = 0, $2392 = 0.0, $2393 = 0, $2394 = 0.0, $2395 = 0, $2396 = 0.0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0.0;
 var $2401 = 0, $2402 = 0, $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0.0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0;
 var $242 = 0, $2420 = 0, $2421 = 0, $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0, $2428 = 0.0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0;
 var $2438 = 0, $2439 = 0, $244 = 0, $2440 = 0, $2441 = 0, $2442 = 0.0, $2443 = 0, $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0;
 var $2456 = 0.0, $2457 = 0, $2458 = 0, $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0.0, $2471 = 0, $2472 = 0, $2473 = 0;
 var $2474 = 0, $2475 = 0, $2476 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0.0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0;
 var $2492 = 0, $2493 = 0, $2494 = 0, $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0.0, $25 = 0, $250 = 0, $2500 = 0.0, $2501 = 0.0, $2502 = 0.0, $2503 = 0.0, $2504 = 0.0, $2505 = 0.0, $2506 = 0.0, $2507 = 0.0, $2508 = 0.0, $2509 = 0.0;
 var $251 = 0, $2510 = 0.0, $2511 = 0.0, $2512 = 0.0, $2513 = 0.0, $2514 = 0.0, $2515 = 0.0, $2516 = 0.0, $2517 = 0.0, $2518 = 0.0, $2519 = 0.0, $252 = 0, $2520 = 0.0, $2521 = 0.0, $2522 = 0.0, $2523 = 0.0, $2524 = 0.0, $2525 = 0.0, $2526 = 0.0, $2527 = 0.0;
 var $2528 = 0.0, $2529 = 0.0, $253 = 0, $2530 = 0, $2531 = 0.0, $2532 = 0.0, $2533 = 0, $2534 = 0.0, $2535 = 0, $2536 = 0.0, $2537 = 0, $2538 = 0.0, $2539 = 0, $254 = 0, $2540 = 0.0, $2541 = 0, $2542 = 0.0, $2543 = 0, $2544 = 0.0, $2545 = 0;
 var $2546 = 0.0, $2547 = 0, $2548 = 0.0, $2549 = 0.0, $255 = 0, $2550 = 0, $2551 = 0.0, $2552 = 0.0, $2553 = 0, $2554 = 0.0, $2555 = 0.0, $2556 = 0.0, $2557 = 0.0, $2558 = 0.0, $2559 = 0, $256 = 0, $2560 = 0.0, $2561 = 0.0, $2562 = 0.0, $2563 = 0.0;
 var $2564 = 0.0, $2565 = 0, $2566 = 0.0, $2567 = 0, $2568 = 0.0, $2569 = 0.0, $257 = 0, $2570 = 0.0, $2571 = 0.0, $2572 = 0.0, $2573 = 0.0, $2574 = 0.0, $2575 = 0.0, $2576 = 0.0, $2577 = 0.0, $2578 = 0.0, $2579 = 0.0, $258 = 0, $2580 = 0.0, $2581 = 0.0;
 var $2582 = 0.0, $2583 = 0.0, $2584 = 0.0, $2585 = 0.0, $2586 = 0.0, $2587 = 0.0, $2588 = 0.0, $2589 = 0.0, $259 = 0, $2590 = 0.0, $2591 = 0.0, $2592 = 0.0, $2593 = 0.0, $2594 = 0.0, $2595 = 0.0, $2596 = 0.0, $2597 = 0.0, $2598 = 0.0, $2599 = 0, $26 = 0;
 var $260 = 0, $2600 = 0.0, $2601 = 0.0, $2602 = 0.0, $2603 = 0, $2604 = 0.0, $2605 = 0, $2606 = 0.0, $2607 = 0, $2608 = 0.0, $2609 = 0, $261 = 0, $2610 = 0.0, $2611 = 0, $2612 = 0.0, $2613 = 0, $2614 = 0.0, $2615 = 0, $2616 = 0, $2617 = 0;
 var $2618 = 0.0, $2619 = 0, $262 = 0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0.0, $2633 = 0, $2634 = 0, $2635 = 0;
 var $2636 = 0, $2637 = 0, $2638 = 0, $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0.0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0;
 var $2654 = 0, $2655 = 0, $2656 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0.0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0, $2671 = 0;
 var $2672 = 0, $2673 = 0, $2674 = 0.0, $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0.0, $2689 = 0, $269 = 0;
 var $2690 = 0, $2691 = 0, $2692 = 0, $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0, $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0.0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0;
 var $2708 = 0, $2709 = 0, $271 = 0, $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0.0, $2718 = 0.0, $2719 = 0.0, $272 = 0, $2720 = 0.0, $2721 = 0.0, $2722 = 0.0, $2723 = 0.0, $2724 = 0.0, $2725 = 0.0;
 var $2726 = 0.0, $2727 = 0.0, $2728 = 0.0, $2729 = 0.0, $273 = 0, $2730 = 0.0, $2731 = 0.0, $2732 = 0.0, $2733 = 0.0, $2734 = 0.0, $2735 = 0.0, $2736 = 0.0, $2737 = 0.0, $2738 = 0.0, $2739 = 0.0, $274 = 0, $2740 = 0.0, $2741 = 0.0, $2742 = 0.0, $2743 = 0.0;
 var $2744 = 0.0, $2745 = 0.0, $2746 = 0, $2747 = 0.0, $2748 = 0.0, $2749 = 0, $275 = 0, $2750 = 0.0, $2751 = 0, $2752 = 0.0, $2753 = 0, $2754 = 0.0, $2755 = 0, $2756 = 0.0, $2757 = 0, $2758 = 0.0, $2759 = 0, $276 = 0, $2760 = 0.0, $2761 = 0;
 var $2762 = 0.0, $2763 = 0.0, $2764 = 0, $2765 = 0.0, $2766 = 0.0, $2767 = 0, $2768 = 0.0, $2769 = 0.0, $277 = 0, $2770 = 0.0, $2771 = 0.0, $2772 = 0.0, $2773 = 0, $2774 = 0.0, $2775 = 0.0, $2776 = 0.0, $2777 = 0.0, $2778 = 0.0, $2779 = 0, $278 = 0;
 var $2780 = 0.0, $2781 = 0, $2782 = 0.0, $2783 = 0.0, $2784 = 0.0, $2785 = 0.0, $2786 = 0.0, $2787 = 0.0, $2788 = 0.0, $2789 = 0.0, $279 = 0, $2790 = 0.0, $2791 = 0.0, $2792 = 0.0, $2793 = 0.0, $2794 = 0.0, $2795 = 0.0, $2796 = 0.0, $2797 = 0.0, $2798 = 0.0;
 var $2799 = 0.0, $28 = 0, $280 = 0, $2800 = 0.0, $2801 = 0.0, $2802 = 0.0, $2803 = 0.0, $2804 = 0.0, $2805 = 0.0, $2806 = 0.0, $2807 = 0.0, $2808 = 0.0, $2809 = 0.0, $281 = 0, $2810 = 0.0, $2811 = 0.0, $2812 = 0, $2813 = 0.0, $2814 = 0.0, $2815 = 0.0;
 var $2816 = 0, $2817 = 0.0, $2818 = 0, $2819 = 0.0, $282 = 0, $2820 = 0, $2821 = 0.0, $2822 = 0, $2823 = 0.0, $2824 = 0, $2825 = 0.0, $2826 = 0, $2827 = 0.0, $2828 = 0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0.0, $2832 = 0, $2833 = 0;
 var $2834 = 0, $2835 = 0, $2836 = 0, $2837 = 0, $2838 = 0, $2839 = 0, $284 = 0, $2840 = 0, $2841 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2845 = 0.0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0, $2850 = 0, $2851 = 0;
 var $2852 = 0, $2853 = 0, $2854 = 0, $2855 = 0, $2856 = 0, $2857 = 0, $2858 = 0, $2859 = 0.0, $286 = 0, $2860 = 0, $2861 = 0, $2862 = 0, $2863 = 0, $2864 = 0, $2865 = 0, $2866 = 0, $2867 = 0, $2868 = 0, $2869 = 0, $287 = 0;
 var $2870 = 0, $2871 = 0, $2872 = 0, $2873 = 0.0, $2874 = 0, $2875 = 0, $2876 = 0, $2877 = 0, $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $2885 = 0, $2886 = 0, $2887 = 0.0, $2888 = 0;
 var $2889 = 0, $289 = 0, $2890 = 0, $2891 = 0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0, $2896 = 0, $2897 = 0, $2898 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0.0, $2902 = 0, $2903 = 0, $2904 = 0, $2905 = 0;
 var $2906 = 0, $2907 = 0, $2908 = 0, $2909 = 0, $291 = 0, $2910 = 0, $2911 = 0, $2912 = 0, $2913 = 0, $2914 = 0, $2915 = 0.0, $2916 = 0, $2917 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2921 = 0, $2922 = 0, $2923 = 0;
 var $2924 = 0, $2925 = 0, $2926 = 0, $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0.0, $2931 = 0.0, $2932 = 0.0, $2933 = 0.0, $2934 = 0.0, $2935 = 0.0, $2936 = 0.0, $2937 = 0.0, $2938 = 0.0, $2939 = 0.0, $294 = 0, $2940 = 0.0, $2941 = 0.0;
 var $2942 = 0.0, $2943 = 0.0, $2944 = 0.0, $2945 = 0.0, $2946 = 0.0, $2947 = 0.0, $2948 = 0.0, $2949 = 0.0, $295 = 0, $2950 = 0.0, $2951 = 0.0, $2952 = 0.0, $2953 = 0.0, $2954 = 0.0, $2955 = 0.0, $2956 = 0.0, $2957 = 0.0, $2958 = 0.0, $2959 = 0.0, $296 = 0;
 var $2960 = 0.0, $2961 = 0, $2962 = 0.0, $2963 = 0.0, $2964 = 0, $2965 = 0.0, $2966 = 0, $2967 = 0.0, $2968 = 0, $2969 = 0.0, $297 = 0, $2970 = 0, $2971 = 0.0, $2972 = 0, $2973 = 0.0, $2974 = 0, $2975 = 0.0, $2976 = 0, $2977 = 0.0, $2978 = 0;
 var $2979 = 0.0, $298 = 0, $2980 = 0.0, $2981 = 0.0, $2982 = 0, $2983 = 0.0, $2984 = 0.0, $2985 = 0.0, $2986 = 0, $2987 = 0.0, $2988 = 0.0, $2989 = 0.0, $299 = 0, $2990 = 0.0, $2991 = 0.0, $2992 = 0, $2993 = 0.0, $2994 = 0.0, $2995 = 0.0, $2996 = 0.0;
 var $2997 = 0.0, $2998 = 0.0, $2999 = 0.0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $3001 = 0.0, $3002 = 0, $3003 = 0.0, $3004 = 0.0, $3005 = 0.0, $3006 = 0.0, $3007 = 0.0, $3008 = 0.0, $3009 = 0.0, $301 = 0, $3010 = 0.0, $3011 = 0.0, $3012 = 0.0;
 var $3013 = 0.0, $3014 = 0.0, $3015 = 0.0, $3016 = 0.0, $3017 = 0.0, $3018 = 0.0, $3019 = 0.0, $302 = 0, $3020 = 0.0, $3021 = 0.0, $3022 = 0.0, $3023 = 0.0, $3024 = 0.0, $3025 = 0.0, $3026 = 0.0, $3027 = 0.0, $3028 = 0.0, $3029 = 0.0, $303 = 0, $3030 = 0.0;
 var $3031 = 0.0, $3032 = 0.0, $3033 = 0.0, $3034 = 0.0, $3035 = 0, $3036 = 0.0, $3037 = 0.0, $3038 = 0.0, $3039 = 0, $304 = 0, $3040 = 0.0, $3041 = 0, $3042 = 0.0, $3043 = 0, $3044 = 0.0, $3045 = 0, $3046 = 0.0, $3047 = 0, $3048 = 0.0, $3049 = 0;
 var $305 = 0, $3050 = 0.0, $3051 = 0, $3052 = 0, $3053 = 0, $3054 = 0.0, $3055 = 0, $3056 = 0, $3057 = 0, $3058 = 0, $3059 = 0, $306 = 0, $3060 = 0, $3061 = 0, $3062 = 0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0, $3067 = 0;
 var $3068 = 0.0, $3069 = 0, $307 = 0, $3070 = 0, $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3080 = 0, $3081 = 0, $3082 = 0.0, $3083 = 0, $3084 = 0, $3085 = 0;
 var $3086 = 0, $3087 = 0, $3088 = 0, $3089 = 0, $309 = 0, $3090 = 0, $3091 = 0, $3092 = 0, $3093 = 0, $3094 = 0, $3095 = 0, $3096 = 0.0, $3097 = 0, $3098 = 0, $3099 = 0, $31 = 0, $310 = 0, $3100 = 0, $3101 = 0, $3102 = 0;
 var $3103 = 0, $3104 = 0, $3105 = 0, $3106 = 0, $3107 = 0, $3108 = 0, $3109 = 0, $311 = 0, $3110 = 0.0, $3111 = 0, $3112 = 0, $3113 = 0, $3114 = 0, $3115 = 0, $3116 = 0, $3117 = 0, $3118 = 0, $3119 = 0, $312 = 0, $3120 = 0;
 var $3121 = 0, $3122 = 0, $3123 = 0, $3124 = 0.0, $3125 = 0, $3126 = 0, $3127 = 0, $3128 = 0, $3129 = 0, $313 = 0, $3130 = 0, $3131 = 0, $3132 = 0, $3133 = 0, $3134 = 0, $3135 = 0, $3136 = 0, $3137 = 0, $3138 = 0.0, $3139 = 0;
 var $314 = 0, $3140 = 0, $3141 = 0, $3142 = 0, $3143 = 0, $3144 = 0, $3145 = 0, $3146 = 0, $3147 = 0, $3148 = 0, $3149 = 0, $315 = 0, $3150 = 0, $3151 = 0, $3152 = 0, $3153 = 0.0, $3154 = 0, $3155 = 0, $3156 = 0.0, $3157 = 0.0;
 var $3158 = 0, $3159 = 0, $316 = 0, $3160 = 0.0, $3161 = 0.0, $3162 = 0.0, $3163 = 0.0, $3164 = 0, $3165 = 0.0, $3166 = 0.0, $3167 = 0.0, $3168 = 0.0, $3169 = 0.0, $317 = 0, $3170 = 0.0, $3171 = 0.0, $3172 = 0.0, $3173 = 0.0, $3174 = 0.0, $3175 = 0.0;
 var $3176 = 0.0, $3177 = 0, $3178 = 0.0, $3179 = 0.0, $318 = 0, $3180 = 0.0, $3181 = 0.0, $3182 = 0.0, $3183 = 0, $3184 = 0.0, $3185 = 0.0, $3186 = 0.0, $3187 = 0.0, $3188 = 0.0, $3189 = 0.0, $319 = 0, $3190 = 0.0, $3191 = 0.0, $3192 = 0.0, $3193 = 0.0;
 var $3194 = 0.0, $3195 = 0.0, $3196 = 0.0, $3197 = 0.0, $3198 = 0.0, $3199 = 0.0, $32 = 0, $320 = 0, $3200 = 0.0, $3201 = 0, $3202 = 0.0, $3203 = 0, $3204 = 0.0, $3205 = 0.0, $3206 = 0.0, $3207 = 0.0, $3208 = 0.0, $3209 = 0.0, $321 = 0, $3210 = 0.0;
 var $3211 = 0.0, $3212 = 0.0, $3213 = 0.0, $3214 = 0.0, $3215 = 0.0, $3216 = 0.0, $3217 = 0.0, $3218 = 0.0, $3219 = 0.0, $322 = 0, $3220 = 0.0, $3221 = 0.0, $3222 = 0.0, $3223 = 0.0, $3224 = 0.0, $3225 = 0.0, $3226 = 0.0, $3227 = 0.0, $3228 = 0.0, $3229 = 0.0;
 var $323 = 0, $3230 = 0.0, $3231 = 0.0, $3232 = 0.0, $3233 = 0.0, $3234 = 0.0, $3235 = 0.0, $3236 = 0.0, $3237 = 0.0, $3238 = 0.0, $3239 = 0.0, $324 = 0, $3240 = 0.0, $3241 = 0.0, $3242 = 0.0, $3243 = 0.0, $3244 = 0.0, $3245 = 0.0, $3246 = 0.0, $3247 = 0.0;
 var $3248 = 0.0, $3249 = 0.0, $325 = 0, $3250 = 0.0, $3251 = 0.0, $3252 = 0.0, $3253 = 0.0, $3254 = 0.0, $3255 = 0.0, $3256 = 0.0, $3257 = 0.0, $3258 = 0.0, $3259 = 0.0, $326 = 0, $3260 = 0.0, $3261 = 0.0, $3262 = 0.0, $3263 = 0.0, $3264 = 0.0, $3265 = 0.0;
 var $3266 = 0.0, $3267 = 0.0, $3268 = 0.0, $3269 = 0.0, $327 = 0, $3270 = 0.0, $3271 = 0, $3272 = 0.0, $3273 = 0.0, $3274 = 0.0, $3275 = 0, $3276 = 0.0, $3277 = 0, $3278 = 0.0, $3279 = 0, $328 = 0, $3280 = 0.0, $3281 = 0, $3282 = 0.0, $3283 = 0;
 var $3284 = 0.0, $3285 = 0, $3286 = 0.0, $3287 = 0, $3288 = 0.0, $3289 = 0, $329 = 0, $3290 = 0.0, $3291 = 0, $3292 = 0.0, $3293 = 0, $3294 = 0.0, $3295 = 0, $3296 = 0, $3297 = 0, $3298 = 0.0, $3299 = 0, $33 = 0, $330 = 0, $3300 = 0;
 var $3301 = 0, $3302 = 0, $3303 = 0, $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $3309 = 0, $331 = 0, $3310 = 0, $3311 = 0, $3312 = 0.0, $3313 = 0, $3314 = 0, $3315 = 0, $3316 = 0, $3317 = 0, $3318 = 0, $3319 = 0;
 var $332 = 0, $3320 = 0, $3321 = 0, $3322 = 0, $3323 = 0, $3324 = 0, $3325 = 0, $3326 = 0.0, $3327 = 0, $3328 = 0, $3329 = 0, $333 = 0, $3330 = 0, $3331 = 0, $3332 = 0, $3333 = 0, $3334 = 0, $3335 = 0, $3336 = 0, $3337 = 0;
 var $3338 = 0, $3339 = 0, $334 = 0, $3340 = 0.0, $3341 = 0, $3342 = 0, $3343 = 0, $3344 = 0, $3345 = 0, $3346 = 0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0, $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $3354 = 0.0, $3355 = 0;
 var $3356 = 0, $3357 = 0, $3358 = 0, $3359 = 0, $336 = 0, $3360 = 0, $3361 = 0, $3362 = 0, $3363 = 0, $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0, $3368 = 0.0, $3369 = 0, $337 = 0, $3370 = 0, $3371 = 0, $3372 = 0, $3373 = 0;
 var $3374 = 0, $3375 = 0, $3376 = 0, $3377 = 0, $3378 = 0, $3379 = 0, $338 = 0, $3380 = 0, $3381 = 0, $3382 = 0.0, $3383 = 0, $3384 = 0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0, $3389 = 0, $339 = 0, $3390 = 0, $3391 = 0;
 var $3392 = 0, $3393 = 0, $3394 = 0, $3395 = 0, $3396 = 0, $3397 = 0.0, $3398 = 0, $3399 = 0, $34 = 0, $340 = 0, $3400 = 0.0, $3401 = 0.0, $3402 = 0, $3403 = 0, $3404 = 0.0, $3405 = 0.0, $3406 = 0.0, $3407 = 0.0, $3408 = 0, $3409 = 0.0;
 var $341 = 0, $3410 = 0.0, $3411 = 0.0, $3412 = 0.0, $3413 = 0.0, $3414 = 0.0, $3415 = 0.0, $3416 = 0.0, $3417 = 0.0, $3418 = 0.0, $3419 = 0.0, $342 = 0, $3420 = 0.0, $3421 = 0, $3422 = 0.0, $3423 = 0.0, $3424 = 0.0, $3425 = 0.0, $3426 = 0.0, $3427 = 0;
 var $3428 = 0.0, $3429 = 0.0, $343 = 0, $3430 = 0.0, $3431 = 0.0, $3432 = 0.0, $3433 = 0.0, $3434 = 0.0, $3435 = 0.0, $3436 = 0.0, $3437 = 0.0, $3438 = 0.0, $3439 = 0.0, $344 = 0, $3440 = 0.0, $3441 = 0.0, $3442 = 0.0, $3443 = 0.0, $3444 = 0.0, $3445 = 0;
 var $3446 = 0.0, $3447 = 0, $3448 = 0.0, $3449 = 0.0, $345 = 0, $3450 = 0.0, $3451 = 0.0, $3452 = 0.0, $3453 = 0.0, $3454 = 0.0, $3455 = 0.0, $3456 = 0.0, $3457 = 0.0, $3458 = 0.0, $3459 = 0.0, $346 = 0, $3460 = 0.0, $3461 = 0.0, $3462 = 0.0, $3463 = 0.0;
 var $3464 = 0.0, $3465 = 0.0, $3466 = 0.0, $3467 = 0.0, $3468 = 0.0, $3469 = 0.0, $347 = 0, $3470 = 0.0, $3471 = 0.0, $3472 = 0.0, $3473 = 0.0, $3474 = 0.0, $3475 = 0.0, $3476 = 0.0, $3477 = 0.0, $3478 = 0.0, $3479 = 0.0, $348 = 0, $3480 = 0.0, $3481 = 0.0;
 var $3482 = 0.0, $3483 = 0.0, $3484 = 0.0, $3485 = 0.0, $3486 = 0.0, $3487 = 0.0, $3488 = 0.0, $3489 = 0.0, $349 = 0, $3490 = 0.0, $3491 = 0.0, $3492 = 0.0, $3493 = 0.0, $3494 = 0.0, $3495 = 0.0, $3496 = 0.0, $3497 = 0.0, $3498 = 0.0, $3499 = 0.0, $35 = 0;
 var $350 = 0, $3500 = 0.0, $3501 = 0.0, $3502 = 0.0, $3503 = 0.0, $3504 = 0.0, $3505 = 0.0, $3506 = 0.0, $3507 = 0.0, $3508 = 0.0, $3509 = 0.0, $351 = 0, $3510 = 0.0, $3511 = 0.0, $3512 = 0.0, $3513 = 0.0, $3514 = 0.0, $3515 = 0, $3516 = 0.0, $3517 = 0.0;
 var $3518 = 0.0, $3519 = 0, $352 = 0, $3520 = 0.0, $3521 = 0, $3522 = 0.0, $3523 = 0, $3524 = 0.0, $3525 = 0, $3526 = 0.0, $3527 = 0, $3528 = 0.0, $3529 = 0, $353 = 0, $3530 = 0.0, $3531 = 0, $3532 = 0.0, $3533 = 0, $3534 = 0.0, $3535 = 0;
 var $3536 = 0.0, $3537 = 0, $3538 = 0.0, $3539 = 0, $354 = 0, $3540 = 0, $3541 = 0, $3542 = 0.0, $3543 = 0, $3544 = 0, $3545 = 0, $3546 = 0, $3547 = 0, $3548 = 0, $3549 = 0, $355 = 0, $3550 = 0, $3551 = 0, $3552 = 0, $3553 = 0;
 var $3554 = 0, $3555 = 0, $3556 = 0.0, $3557 = 0, $3558 = 0, $3559 = 0, $356 = 0, $3560 = 0, $3561 = 0, $3562 = 0, $3563 = 0, $3564 = 0, $3565 = 0, $3566 = 0, $3567 = 0, $3568 = 0, $3569 = 0, $357 = 0, $3570 = 0.0, $3571 = 0;
 var $3572 = 0, $3573 = 0, $3574 = 0, $3575 = 0, $3576 = 0, $3577 = 0, $3578 = 0, $3579 = 0, $358 = 0, $3580 = 0, $3581 = 0, $3582 = 0, $3583 = 0, $3584 = 0.0, $3585 = 0, $3586 = 0, $3587 = 0, $3588 = 0, $3589 = 0, $359 = 0;
 var $3590 = 0, $3591 = 0, $3592 = 0, $3593 = 0, $3594 = 0, $3595 = 0, $3596 = 0, $3597 = 0, $3598 = 0.0, $3599 = 0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0, $3602 = 0, $3603 = 0, $3604 = 0, $3605 = 0, $3606 = 0, $3607 = 0;
 var $3608 = 0, $3609 = 0, $361 = 0, $3610 = 0, $3611 = 0, $3612 = 0.0, $3613 = 0, $3614 = 0, $3615 = 0, $3616 = 0, $3617 = 0, $3618 = 0, $3619 = 0, $362 = 0, $3620 = 0, $3621 = 0, $3622 = 0, $3623 = 0, $3624 = 0, $3625 = 0;
 var $3626 = 0.0, $3627 = 0, $3628 = 0, $3629 = 0, $363 = 0, $3630 = 0, $3631 = 0, $3632 = 0, $3633 = 0, $3634 = 0, $3635 = 0, $3636 = 0, $3637 = 0, $3638 = 0, $3639 = 0, $364 = 0, $3640 = 0, $3641 = 0.0, $3642 = 0.0, $3643 = 0.0;
 var $3644 = 0, $3645 = 0, $3646 = 0.0, $3647 = 0.0, $3648 = 0, $3649 = 0, $365 = 0, $3650 = 0.0, $3651 = 0.0, $3652 = 0.0, $3653 = 0.0, $3654 = 0.0, $3655 = 0.0, $3656 = 0.0, $3657 = 0, $3658 = 0.0, $3659 = 0, $366 = 0, $3660 = 0.0, $3661 = 0.0;
 var $3662 = 0.0, $3663 = 0.0, $3664 = 0.0, $3665 = 0.0, $3666 = 0.0, $3667 = 0.0, $3668 = 0.0, $3669 = 0.0, $367 = 0, $3670 = 0.0, $3671 = 0.0, $3672 = 0.0, $3673 = 0.0, $3674 = 0.0, $3675 = 0.0, $3676 = 0.0, $3677 = 0.0, $3678 = 0.0, $3679 = 0.0, $368 = 0;
 var $3680 = 0.0, $3681 = 0.0, $3682 = 0.0, $3683 = 0.0, $3684 = 0.0, $3685 = 0.0, $3686 = 0.0, $3687 = 0.0, $3688 = 0.0, $3689 = 0.0, $369 = 0, $3690 = 0.0, $3691 = 0.0, $3692 = 0.0, $3693 = 0.0, $3694 = 0.0, $3695 = 0.0, $3696 = 0.0, $3697 = 0.0, $3698 = 0.0;
 var $3699 = 0.0, $37 = 0, $370 = 0, $3700 = 0.0, $3701 = 0.0, $3702 = 0.0, $3703 = 0.0, $3704 = 0.0, $3705 = 0.0, $3706 = 0.0, $3707 = 0.0, $3708 = 0.0, $3709 = 0.0, $371 = 0, $3710 = 0.0, $3711 = 0.0, $3712 = 0.0, $3713 = 0.0, $3714 = 0.0, $3715 = 0.0;
 var $3716 = 0.0, $3717 = 0.0, $3718 = 0.0, $3719 = 0.0, $372 = 0, $3720 = 0.0, $3721 = 0.0, $3722 = 0.0, $3723 = 0.0, $3724 = 0.0, $3725 = 0.0, $3726 = 0.0, $3727 = 0, $3728 = 0.0, $3729 = 0.0, $373 = 0, $3730 = 0.0, $3731 = 0, $3732 = 0.0, $3733 = 0;
 var $3734 = 0.0, $3735 = 0, $3736 = 0.0, $3737 = 0, $3738 = 0.0, $3739 = 0, $374 = 0, $3740 = 0.0, $3741 = 0, $3742 = 0.0, $3743 = 0, $3744 = 0.0, $3745 = 0, $3746 = 0.0, $3747 = 0, $3748 = 0.0, $3749 = 0, $375 = 0, $3750 = 0.0, $3751 = 0;
 var $3752 = 0, $3753 = 0, $3754 = 0.0, $3755 = 0, $3756 = 0, $3757 = 0, $3758 = 0, $3759 = 0, $376 = 0, $3760 = 0, $3761 = 0, $3762 = 0, $3763 = 0, $3764 = 0, $3765 = 0, $3766 = 0, $3767 = 0, $3768 = 0.0, $3769 = 0, $377 = 0;
 var $3770 = 0, $3771 = 0, $3772 = 0, $3773 = 0, $3774 = 0, $3775 = 0, $3776 = 0, $3777 = 0, $3778 = 0, $3779 = 0, $378 = 0, $3780 = 0, $3781 = 0, $3782 = 0.0, $3783 = 0, $3784 = 0, $3785 = 0, $3786 = 0, $3787 = 0, $3788 = 0;
 var $3789 = 0, $379 = 0, $3790 = 0, $3791 = 0, $3792 = 0, $3793 = 0, $3794 = 0, $3795 = 0, $3796 = 0.0, $3797 = 0, $3798 = 0, $3799 = 0, $38 = 0, $380 = 0, $3800 = 0, $3801 = 0, $3802 = 0, $3803 = 0, $3804 = 0, $3805 = 0;
 var $3806 = 0, $3807 = 0, $3808 = 0, $3809 = 0, $381 = 0, $3810 = 0.0, $3811 = 0, $3812 = 0, $3813 = 0, $3814 = 0, $3815 = 0, $3816 = 0, $3817 = 0, $3818 = 0, $3819 = 0, $382 = 0, $3820 = 0, $3821 = 0, $3822 = 0, $3823 = 0;
 var $3824 = 0.0, $3825 = 0, $3826 = 0, $3827 = 0, $3828 = 0, $3829 = 0, $383 = 0, $3830 = 0, $3831 = 0, $3832 = 0, $3833 = 0, $3834 = 0, $3835 = 0, $3836 = 0, $3837 = 0, $3838 = 0.0, $3839 = 0, $384 = 0, $3840 = 0, $3841 = 0;
 var $3842 = 0, $3843 = 0, $3844 = 0, $3845 = 0, $3846 = 0, $3847 = 0, $3848 = 0, $3849 = 0, $385 = 0, $3850 = 0, $3851 = 0, $3852 = 0, $3853 = 0.0, $3854 = 0.0, $3855 = 0.0, $3856 = 0, $3857 = 0, $3858 = 0.0, $3859 = 0.0, $386 = 0;
 var $3860 = 0, $3861 = 0, $3862 = 0.0, $3863 = 0.0, $3864 = 0.0, $3865 = 0.0, $3866 = 0.0, $3867 = 0.0, $3868 = 0.0, $3869 = 0, $387 = 0, $3870 = 0.0, $3871 = 0, $3872 = 0.0, $3873 = 0.0, $3874 = 0.0, $3875 = 0.0, $3876 = 0.0, $3877 = 0.0, $3878 = 0.0;
 var $3879 = 0.0, $388 = 0, $3880 = 0.0, $3881 = 0, $3882 = 0.0, $3883 = 0.0, $3884 = 0.0, $3885 = 0.0, $3886 = 0.0, $3887 = 0, $3888 = 0.0, $3889 = 0.0, $389 = 0, $3890 = 0.0, $3891 = 0.0, $3892 = 0.0, $3893 = 0.0, $3894 = 0.0, $3895 = 0.0, $3896 = 0.0;
 var $3897 = 0.0, $3898 = 0.0, $3899 = 0.0, $39 = 0, $390 = 0, $3900 = 0.0, $3901 = 0.0, $3902 = 0.0, $3903 = 0.0, $3904 = 0.0, $3905 = 0.0, $3906 = 0.0, $3907 = 0.0, $3908 = 0.0, $3909 = 0.0, $391 = 0, $3910 = 0.0, $3911 = 0.0, $3912 = 0.0, $3913 = 0.0;
 var $3914 = 0.0, $3915 = 0.0, $3916 = 0.0, $3917 = 0.0, $3918 = 0.0, $3919 = 0.0, $392 = 0, $3920 = 0.0, $3921 = 0.0, $3922 = 0.0, $3923 = 0.0, $3924 = 0.0, $3925 = 0.0, $3926 = 0.0, $3927 = 0.0, $3928 = 0.0, $3929 = 0.0, $393 = 0, $3930 = 0.0, $3931 = 0.0;
 var $3932 = 0.0, $3933 = 0.0, $3934 = 0.0, $3935 = 0.0, $3936 = 0.0, $3937 = 0.0, $3938 = 0.0, $3939 = 0.0, $394 = 0, $3940 = 0.0, $3941 = 0.0, $3942 = 0.0, $3943 = 0.0, $3944 = 0.0, $3945 = 0.0, $3946 = 0.0, $3947 = 0.0, $3948 = 0.0, $3949 = 0.0, $395 = 0;
 var $3950 = 0.0, $3951 = 0.0, $3952 = 0.0, $3953 = 0.0, $3954 = 0.0, $3955 = 0.0, $3956 = 0.0, $3957 = 0.0, $3958 = 0.0, $3959 = 0.0, $396 = 0, $3960 = 0.0, $3961 = 0.0, $3962 = 0.0, $3963 = 0.0, $3964 = 0.0, $3965 = 0.0, $3966 = 0.0, $3967 = 0.0, $3968 = 0.0;
 var $3969 = 0.0, $397 = 0, $3970 = 0.0, $3971 = 0.0, $3972 = 0.0, $3973 = 0.0, $3974 = 0.0, $3975 = 0.0, $3976 = 0.0, $3977 = 0.0, $3978 = 0.0, $3979 = 0.0, $398 = 0, $3980 = 0.0, $3981 = 0.0, $3982 = 0.0, $3983 = 0.0, $3984 = 0.0, $3985 = 0.0, $3986 = 0.0;
 var $3987 = 0.0, $3988 = 0.0, $3989 = 0.0, $399 = 0.0, $3990 = 0.0, $3991 = 0.0, $3992 = 0.0, $3993 = 0.0, $3994 = 0.0, $3995 = 0.0, $3996 = 0.0, $3997 = 0.0, $3998 = 0, $3999 = 0.0, $4 = 0, $40 = 0, $400 = 0.0, $4000 = 0.0, $4001 = 0, $4002 = 0.0;
 var $4003 = 0.0, $4004 = 0.0, $4005 = 0.0, $4006 = 0.0, $4007 = 0.0, $4008 = 0.0, $4009 = 0.0, $401 = 0.0, $4010 = 0.0, $4011 = 0.0, $4012 = 0.0, $4013 = 0.0, $4014 = 0.0, $4015 = 0.0, $4016 = 0.0, $4017 = 0.0, $4018 = 0.0, $4019 = 0.0, $402 = 0.0, $4020 = 0.0;
 var $4021 = 0.0, $4022 = 0.0, $4023 = 0.0, $4024 = 0.0, $4025 = 0.0, $4026 = 0.0, $4027 = 0.0, $4028 = 0.0, $4029 = 0.0, $403 = 0.0, $4030 = 0.0, $4031 = 0.0, $4032 = 0.0, $4033 = 0.0, $4034 = 0.0, $4035 = 0.0, $4036 = 0.0, $4037 = 0.0, $4038 = 0.0, $4039 = 0.0;
 var $404 = 0.0, $4040 = 0.0, $4041 = 0.0, $4042 = 0.0, $4043 = 0.0, $4044 = 0.0, $4045 = 0.0, $4046 = 0.0, $4047 = 0.0, $4048 = 0.0, $4049 = 0.0, $405 = 0.0, $4050 = 0.0, $4051 = 0.0, $4052 = 0.0, $4053 = 0.0, $4054 = 0.0, $4055 = 0.0, $4056 = 0.0, $4057 = 0.0;
 var $4058 = 0.0, $4059 = 0.0, $406 = 0.0, $4060 = 0.0, $4061 = 0.0, $4062 = 0.0, $4063 = 0.0, $4064 = 0.0, $4065 = 0.0, $4066 = 0.0, $4067 = 0.0, $4068 = 0.0, $4069 = 0.0, $407 = 0.0, $4070 = 0.0, $4071 = 0.0, $4072 = 0.0, $4073 = 0.0, $4074 = 0.0, $4075 = 0.0;
 var $4076 = 0.0, $4077 = 0.0, $4078 = 0.0, $4079 = 0.0, $408 = 0.0, $4080 = 0.0, $4081 = 0.0, $4082 = 0.0, $4083 = 0.0, $4084 = 0.0, $4085 = 0.0, $4086 = 0.0, $4087 = 0.0, $4088 = 0.0, $4089 = 0.0, $409 = 0.0, $4090 = 0.0, $4091 = 0.0, $4092 = 0.0, $4093 = 0.0;
 var $4094 = 0.0, $4095 = 0.0, $4096 = 0.0, $4097 = 0.0, $4098 = 0.0, $4099 = 0.0, $41 = 0, $410 = 0.0, $4100 = 0.0, $4101 = 0.0, $4102 = 0.0, $4103 = 0.0, $4104 = 0.0, $4105 = 0.0, $4106 = 0.0, $4107 = 0.0, $4108 = 0.0, $4109 = 0.0, $411 = 0.0, $4110 = 0.0;
 var $4111 = 0.0, $4112 = 0, $4113 = 0.0, $4114 = 0.0, $4115 = 0.0, $4116 = 0.0, $4117 = 0.0, $4118 = 0.0, $4119 = 0.0, $412 = 0.0, $4120 = 0.0, $4121 = 0.0, $4122 = 0.0, $4123 = 0, $4124 = 0.0, $4125 = 0.0, $4126 = 0, $4127 = 0.0, $4128 = 0, $4129 = 0.0;
 var $413 = 0.0, $4130 = 0, $4131 = 0.0, $4132 = 0, $4133 = 0.0, $4134 = 0, $4135 = 0.0, $4136 = 0.0, $4137 = 0.0, $4138 = 0.0, $4139 = 0.0, $414 = 0.0, $4140 = 0.0, $4141 = 0.0, $4142 = 0.0, $4143 = 0, $4144 = 0, $4145 = 0.0, $4146 = 0.0, $4147 = 0.0;
 var $4148 = 0.0, $4149 = 0.0, $415 = 0.0, $4150 = 0.0, $4151 = 0, $4152 = 0, $4153 = 0.0, $4154 = 0.0, $4155 = 0.0, $4156 = 0.0, $4157 = 0.0, $4158 = 0.0, $4159 = 0.0, $416 = 0.0, $4160 = 0, $4161 = 0.0, $4162 = 0, $4163 = 0.0, $4164 = 0.0, $4165 = 0.0;
 var $4166 = 0.0, $4167 = 0.0, $4168 = 0.0, $4169 = 0.0, $417 = 0.0, $4170 = 0.0, $4171 = 0.0, $4172 = 0.0, $4173 = 0.0, $4174 = 0.0, $4175 = 0.0, $4176 = 0.0, $4177 = 0.0, $4178 = 0.0, $4179 = 0.0, $418 = 0.0, $4180 = 0.0, $4181 = 0.0, $4182 = 0.0, $4183 = 0.0;
 var $4184 = 0.0, $4185 = 0.0, $4186 = 0.0, $4187 = 0.0, $4188 = 0.0, $4189 = 0.0, $419 = 0.0, $4190 = 0.0, $4191 = 0.0, $4192 = 0.0, $4193 = 0.0, $4194 = 0.0, $4195 = 0.0, $4196 = 0.0, $4197 = 0.0, $4198 = 0.0, $4199 = 0.0, $42 = 0, $420 = 0.0, $4200 = 0.0;
 var $4201 = 0.0, $4202 = 0.0, $4203 = 0.0, $4204 = 0.0, $4205 = 0.0, $4206 = 0.0, $4207 = 0.0, $4208 = 0, $4209 = 0.0, $421 = 0.0, $4210 = 0.0, $4211 = 0.0, $4212 = 0.0, $4213 = 0, $4214 = 0.0, $4215 = 0, $4216 = 0.0, $4217 = 0, $4218 = 0.0, $4219 = 0;
 var $422 = 0.0, $4220 = 0.0, $4221 = 0, $4222 = 0.0, $4223 = 0, $4224 = 0.0, $4225 = 0, $4226 = 0.0, $4227 = 0, $4228 = 0.0, $4229 = 0, $423 = 0.0, $4230 = 0, $4231 = 0, $4232 = 0.0, $4233 = 0, $4234 = 0, $4235 = 0, $4236 = 0, $4237 = 0;
 var $4238 = 0, $4239 = 0, $424 = 0.0, $4240 = 0, $4241 = 0, $4242 = 0, $4243 = 0, $4244 = 0, $4245 = 0, $4246 = 0.0, $4247 = 0, $4248 = 0, $4249 = 0, $425 = 0.0, $4250 = 0, $4251 = 0, $4252 = 0, $4253 = 0, $4254 = 0, $4255 = 0;
 var $4256 = 0, $4257 = 0, $4258 = 0, $4259 = 0, $426 = 0.0, $4260 = 0.0, $4261 = 0, $4262 = 0, $4263 = 0, $4264 = 0, $4265 = 0, $4266 = 0, $4267 = 0, $4268 = 0, $4269 = 0, $427 = 0.0, $4270 = 0, $4271 = 0, $4272 = 0, $4273 = 0;
 var $4274 = 0.0, $4275 = 0, $4276 = 0, $4277 = 0, $4278 = 0, $4279 = 0, $428 = 0.0, $4280 = 0, $4281 = 0, $4282 = 0, $4283 = 0, $4284 = 0, $4285 = 0, $4286 = 0, $4287 = 0, $4288 = 0.0, $4289 = 0, $429 = 0.0, $4290 = 0, $4291 = 0;
 var $4292 = 0, $4293 = 0, $4294 = 0, $4295 = 0, $4296 = 0, $4297 = 0, $4298 = 0, $4299 = 0, $43 = 0, $430 = 0.0, $4300 = 0, $4301 = 0, $4302 = 0.0, $4303 = 0, $4304 = 0, $4305 = 0, $4306 = 0, $4307 = 0, $4308 = 0, $4309 = 0;
 var $431 = 0.0, $4310 = 0, $4311 = 0, $4312 = 0, $4313 = 0, $4314 = 0, $4315 = 0, $4316 = 0.0, $4317 = 0, $4318 = 0, $4319 = 0, $432 = 0.0, $4320 = 0, $4321 = 0, $4322 = 0, $4323 = 0, $4324 = 0, $4325 = 0, $4326 = 0, $4327 = 0;
 var $4328 = 0, $4329 = 0, $433 = 0.0, $4330 = 0, $4331 = 0.0, $4332 = 0.0, $4333 = 0.0, $4334 = 0.0, $4335 = 0.0, $4336 = 0.0, $4337 = 0.0, $4338 = 0.0, $4339 = 0.0, $434 = 0.0, $4340 = 0.0, $4341 = 0.0, $4342 = 0, $4343 = 0.0, $4344 = 0.0, $4345 = 0.0;
 var $4346 = 0, $4347 = 0.0, $4348 = 0, $4349 = 0.0, $435 = 0.0, $4350 = 0, $4351 = 0.0, $4352 = 0, $4353 = 0.0, $4354 = 0, $4355 = 0.0, $4356 = 0.0, $4357 = 0.0, $4358 = 0.0, $4359 = 0.0, $436 = 0.0, $4360 = 0.0, $4361 = 0.0, $4362 = 0.0, $4363 = 0;
 var $4364 = 0, $4365 = 0.0, $4366 = 0.0, $4367 = 0.0, $4368 = 0.0, $4369 = 0.0, $437 = 0.0, $4370 = 0.0, $4371 = 0, $4372 = 0, $4373 = 0.0, $4374 = 0.0, $4375 = 0.0, $4376 = 0.0, $4377 = 0.0, $4378 = 0.0, $4379 = 0.0, $438 = 0.0, $4380 = 0, $4381 = 0.0;
 var $4382 = 0, $4383 = 0.0, $4384 = 0.0, $4385 = 0.0, $4386 = 0.0, $4387 = 0.0, $4388 = 0.0, $4389 = 0.0, $439 = 0.0, $4390 = 0.0, $4391 = 0.0, $4392 = 0.0, $4393 = 0.0, $4394 = 0.0, $4395 = 0.0, $4396 = 0.0, $4397 = 0.0, $4398 = 0.0, $4399 = 0.0, $44 = 0;
 var $440 = 0.0, $4400 = 0.0, $4401 = 0.0, $4402 = 0.0, $4403 = 0.0, $4404 = 0.0, $4405 = 0.0, $4406 = 0.0, $4407 = 0.0, $4408 = 0.0, $4409 = 0.0, $441 = 0.0, $4410 = 0.0, $4411 = 0.0, $4412 = 0.0, $4413 = 0.0, $4414 = 0.0, $4415 = 0.0, $4416 = 0.0, $4417 = 0.0;
 var $4418 = 0.0, $4419 = 0.0, $442 = 0.0, $4420 = 0.0, $4421 = 0.0, $4422 = 0.0, $4423 = 0.0, $4424 = 0.0, $4425 = 0.0, $4426 = 0.0, $4427 = 0.0, $4428 = 0.0, $4429 = 0, $443 = 0.0, $4430 = 0.0, $4431 = 0.0, $4432 = 0.0, $4433 = 0.0, $4434 = 0, $4435 = 0.0;
 var $4436 = 0, $4437 = 0.0, $4438 = 0, $4439 = 0.0, $444 = 0.0, $4440 = 0, $4441 = 0.0, $4442 = 0, $4443 = 0.0, $4444 = 0, $4445 = 0.0, $4446 = 0, $4447 = 0.0, $4448 = 0, $4449 = 0.0, $445 = 0.0, $4450 = 0, $4451 = 0, $4452 = 0, $4453 = 0.0;
 var $4454 = 0, $4455 = 0, $4456 = 0, $4457 = 0, $4458 = 0, $4459 = 0, $446 = 0.0, $4460 = 0, $4461 = 0, $4462 = 0, $4463 = 0, $4464 = 0, $4465 = 0, $4466 = 0, $4467 = 0.0, $4468 = 0, $4469 = 0, $447 = 0.0, $4470 = 0, $4471 = 0;
 var $4472 = 0, $4473 = 0, $4474 = 0, $4475 = 0, $4476 = 0, $4477 = 0, $4478 = 0, $4479 = 0, $448 = 0.0, $4480 = 0, $4481 = 0.0, $4482 = 0, $4483 = 0, $4484 = 0, $4485 = 0, $4486 = 0, $4487 = 0, $4488 = 0, $4489 = 0, $449 = 0.0;
 var $4490 = 0, $4491 = 0, $4492 = 0, $4493 = 0, $4494 = 0, $4495 = 0.0, $4496 = 0, $4497 = 0, $4498 = 0, $4499 = 0, $45 = 0, $450 = 0.0, $4500 = 0, $4501 = 0, $4502 = 0, $4503 = 0, $4504 = 0, $4505 = 0, $4506 = 0, $4507 = 0;
 var $4508 = 0, $4509 = 0.0, $451 = 0.0, $4510 = 0, $4511 = 0, $4512 = 0, $4513 = 0, $4514 = 0, $4515 = 0, $4516 = 0, $4517 = 0, $4518 = 0, $4519 = 0, $452 = 0.0, $4520 = 0, $4521 = 0, $4522 = 0, $4523 = 0.0, $4524 = 0, $4525 = 0;
 var $4526 = 0, $4527 = 0, $4528 = 0, $4529 = 0, $453 = 0.0, $4530 = 0, $4531 = 0, $4532 = 0, $4533 = 0, $4534 = 0, $4535 = 0, $4536 = 0, $4537 = 0.0, $4538 = 0, $4539 = 0, $454 = 0.0, $4540 = 0, $4541 = 0, $4542 = 0, $4543 = 0;
 var $4544 = 0, $4545 = 0, $4546 = 0, $4547 = 0, $4548 = 0, $4549 = 0, $455 = 0.0, $4550 = 0, $4551 = 0, $4552 = 0.0, $4553 = 0, $4554 = 0, $4555 = 0.0, $4556 = 0.0, $4557 = 0, $4558 = 0, $4559 = 0.0, $456 = 0.0, $4560 = 0.0, $4561 = 0.0;
 var $4562 = 0.0, $4563 = 0.0, $4564 = 0.0, $4565 = 0.0, $4566 = 0.0, $4567 = 0.0, $4568 = 0.0, $4569 = 0, $457 = 0.0, $4570 = 0.0, $4571 = 0.0, $4572 = 0.0, $4573 = 0, $4574 = 0.0, $4575 = 0.0, $4576 = 0.0, $4577 = 0.0, $4578 = 0.0, $4579 = 0, $458 = 0.0;
 var $4580 = 0.0, $4581 = 0.0, $4582 = 0.0, $4583 = 0.0, $4584 = 0.0, $4585 = 0.0, $4586 = 0.0, $4587 = 0.0, $4588 = 0.0, $4589 = 0.0, $459 = 0.0, $4590 = 0.0, $4591 = 0.0, $4592 = 0.0, $4593 = 0.0, $4594 = 0, $4595 = 0.0, $4596 = 0, $4597 = 0.0, $4598 = 0.0;
 var $4599 = 0.0, $46 = 0, $460 = 0.0, $4600 = 0.0, $4601 = 0.0, $4602 = 0.0, $4603 = 0.0, $4604 = 0.0, $4605 = 0.0, $4606 = 0.0, $4607 = 0.0, $4608 = 0.0, $4609 = 0.0, $461 = 0.0, $4610 = 0.0, $4611 = 0.0, $4612 = 0.0, $4613 = 0.0, $4614 = 0.0, $4615 = 0.0;
 var $4616 = 0.0, $4617 = 0.0, $4618 = 0.0, $4619 = 0.0, $462 = 0.0, $4620 = 0.0, $4621 = 0.0, $4622 = 0.0, $4623 = 0.0, $4624 = 0.0, $4625 = 0.0, $4626 = 0.0, $4627 = 0.0, $4628 = 0.0, $4629 = 0.0, $463 = 0.0, $4630 = 0.0, $4631 = 0.0, $4632 = 0.0, $4633 = 0.0;
 var $4634 = 0.0, $4635 = 0.0, $4636 = 0.0, $4637 = 0.0, $4638 = 0.0, $4639 = 0.0, $464 = 0.0, $4640 = 0.0, $4641 = 0.0, $4642 = 0.0, $4643 = 0.0, $4644 = 0.0, $4645 = 0.0, $4646 = 0.0, $4647 = 0.0, $4648 = 0.0, $4649 = 0.0, $465 = 0.0, $4650 = 0.0, $4651 = 0.0;
 var $4652 = 0.0, $4653 = 0.0, $4654 = 0.0, $4655 = 0.0, $4656 = 0.0, $4657 = 0.0, $4658 = 0.0, $4659 = 0.0, $466 = 0.0, $4660 = 0.0, $4661 = 0.0, $4662 = 0.0, $4663 = 0.0, $4664 = 0.0, $4665 = 0.0, $4666 = 0.0, $4667 = 0.0, $4668 = 0.0, $4669 = 0.0, $467 = 0.0;
 var $4670 = 0.0, $4671 = 0.0, $4672 = 0.0, $4673 = 0.0, $4674 = 0.0, $4675 = 0.0, $4676 = 0.0, $4677 = 0.0, $4678 = 0.0, $4679 = 0.0, $468 = 0.0, $4680 = 0.0, $4681 = 0.0, $4682 = 0.0, $4683 = 0.0, $4684 = 0.0, $4685 = 0.0, $4686 = 0.0, $4687 = 0.0, $4688 = 0.0;
 var $4689 = 0.0, $469 = 0.0, $4690 = 0.0, $4691 = 0.0, $4692 = 0.0, $4693 = 0.0, $4694 = 0.0, $4695 = 0.0, $4696 = 0.0, $4697 = 0.0, $4698 = 0, $4699 = 0.0, $47 = 0, $470 = 0.0, $4700 = 0.0, $4701 = 0, $4702 = 0.0, $4703 = 0, $4704 = 0.0, $4705 = 0;
 var $4706 = 0.0, $4707 = 0, $4708 = 0.0, $4709 = 0, $471 = 0.0, $4710 = 0.0, $4711 = 0, $4712 = 0.0, $4713 = 0, $4714 = 0.0, $4715 = 0, $4716 = 0.0, $4717 = 0, $4718 = 0.0, $4719 = 0, $472 = 0.0, $4720 = 0.0, $4721 = 0, $4722 = 0.0, $4723 = 0;
 var $4724 = 0.0, $4725 = 0, $4726 = 0.0, $4727 = 0, $4728 = 0.0, $4729 = 0, $473 = 0.0, $4730 = 0.0, $4731 = 0, $4732 = 0.0, $4733 = 0, $4734 = 0, $4735 = 0, $4736 = 0.0, $4737 = 0, $4738 = 0, $4739 = 0, $474 = 0.0, $4740 = 0, $4741 = 0;
 var $4742 = 0, $4743 = 0, $4744 = 0, $4745 = 0, $4746 = 0, $4747 = 0, $4748 = 0, $4749 = 0, $475 = 0.0, $4750 = 0.0, $4751 = 0, $4752 = 0, $4753 = 0, $4754 = 0, $4755 = 0, $4756 = 0, $4757 = 0, $4758 = 0, $4759 = 0, $476 = 0.0;
 var $4760 = 0, $4761 = 0, $4762 = 0, $4763 = 0, $4764 = 0.0, $4765 = 0, $4766 = 0, $4767 = 0, $4768 = 0, $4769 = 0, $477 = 0.0, $4770 = 0, $4771 = 0, $4772 = 0, $4773 = 0, $4774 = 0, $4775 = 0, $4776 = 0, $4777 = 0, $4778 = 0.0;
 var $4779 = 0, $478 = 0.0, $4780 = 0, $4781 = 0, $4782 = 0, $4783 = 0, $4784 = 0, $4785 = 0, $4786 = 0, $4787 = 0, $4788 = 0, $4789 = 0, $479 = 0.0, $4790 = 0, $4791 = 0, $4792 = 0.0, $4793 = 0, $4794 = 0, $4795 = 0, $4796 = 0;
 var $4797 = 0, $4798 = 0, $4799 = 0, $48 = 0, $480 = 0.0, $4800 = 0, $4801 = 0, $4802 = 0, $4803 = 0, $4804 = 0, $4805 = 0, $4806 = 0.0, $4807 = 0, $4808 = 0, $4809 = 0, $481 = 0.0, $4810 = 0, $4811 = 0, $4812 = 0, $4813 = 0;
 var $4814 = 0, $4815 = 0, $4816 = 0, $4817 = 0, $4818 = 0, $4819 = 0, $482 = 0.0, $4820 = 0.0, $4821 = 0, $4822 = 0, $4823 = 0, $4824 = 0, $4825 = 0, $4826 = 0, $4827 = 0, $4828 = 0, $4829 = 0, $483 = 0.0, $4830 = 0, $4831 = 0;
 var $4832 = 0, $4833 = 0, $4834 = 0, $4835 = 0.0, $4836 = 0.0, $4837 = 0, $4838 = 0, $4839 = 0.0, $484 = 0.0, $4840 = 0.0, $4841 = 0.0, $4842 = 0.0, $4843 = 0, $4844 = 0, $4845 = 0.0, $4846 = 0.0, $4847 = 0.0, $4848 = 0.0, $4849 = 0.0, $485 = 0.0;
 var $4850 = 0.0, $4851 = 0.0, $4852 = 0, $4853 = 0.0, $4854 = 0, $4855 = 0.0, $4856 = 0.0, $4857 = 0.0, $4858 = 0.0, $4859 = 0.0, $486 = 0.0, $4860 = 0.0, $4861 = 0.0, $4862 = 0.0, $4863 = 0.0, $4864 = 0.0, $4865 = 0.0, $4866 = 0.0, $4867 = 0.0, $4868 = 0.0;
 var $4869 = 0.0, $487 = 0.0, $4870 = 0.0, $4871 = 0.0, $4872 = 0.0, $4873 = 0.0, $4874 = 0.0, $4875 = 0.0, $4876 = 0.0, $4877 = 0.0, $4878 = 0.0, $4879 = 0.0, $488 = 0.0, $4880 = 0.0, $4881 = 0.0, $4882 = 0.0, $4883 = 0.0, $4884 = 0.0, $4885 = 0.0, $4886 = 0.0;
 var $4887 = 0.0, $4888 = 0.0, $4889 = 0.0, $489 = 0.0, $4890 = 0.0, $4891 = 0.0, $4892 = 0.0, $4893 = 0.0, $4894 = 0.0, $4895 = 0.0, $4896 = 0.0, $4897 = 0.0, $4898 = 0.0, $4899 = 0.0, $49 = 0, $490 = 0.0, $4900 = 0.0, $4901 = 0.0, $4902 = 0.0, $4903 = 0.0;
 var $4904 = 0.0, $4905 = 0.0, $4906 = 0.0, $4907 = 0.0, $4908 = 0.0, $4909 = 0.0, $491 = 0.0, $4910 = 0.0, $4911 = 0.0, $4912 = 0.0, $4913 = 0.0, $4914 = 0.0, $4915 = 0.0, $4916 = 0.0, $4917 = 0.0, $4918 = 0.0, $4919 = 0.0, $492 = 0.0, $4920 = 0.0, $4921 = 0.0;
 var $4922 = 0.0, $4923 = 0.0, $4924 = 0.0, $4925 = 0.0, $4926 = 0.0, $4927 = 0.0, $4928 = 0.0, $4929 = 0.0, $493 = 0.0, $4930 = 0.0, $4931 = 0.0, $4932 = 0.0, $4933 = 0.0, $4934 = 0.0, $4935 = 0.0, $4936 = 0.0, $4937 = 0.0, $4938 = 0.0, $4939 = 0.0, $494 = 0.0;
 var $4940 = 0.0, $4941 = 0.0, $4942 = 0.0, $4943 = 0.0, $4944 = 0.0, $4945 = 0.0, $4946 = 0.0, $4947 = 0.0, $4948 = 0.0, $4949 = 0.0, $495 = 0.0, $4950 = 0.0, $4951 = 0.0, $4952 = 0.0, $4953 = 0.0, $4954 = 0.0, $4955 = 0.0, $4956 = 0, $4957 = 0.0, $4958 = 0.0;
 var $4959 = 0, $496 = 0.0, $4960 = 0.0, $4961 = 0, $4962 = 0.0, $4963 = 0, $4964 = 0.0, $4965 = 0, $4966 = 0.0, $4967 = 0, $4968 = 0.0, $4969 = 0, $497 = 0.0, $4970 = 0.0, $4971 = 0, $4972 = 0.0, $4973 = 0, $4974 = 0.0, $4975 = 0, $4976 = 0.0;
 var $4977 = 0, $4978 = 0.0, $4979 = 0, $498 = 0.0, $4980 = 0.0, $4981 = 0, $4982 = 0.0, $4983 = 0, $4984 = 0.0, $4985 = 0, $4986 = 0.0, $4987 = 0, $4988 = 0.0, $4989 = 0, $499 = 0.0, $4990 = 0.0, $4991 = 0, $4992 = 0, $4993 = 0, $4994 = 0.0;
 var $4995 = 0, $4996 = 0, $4997 = 0, $4998 = 0, $4999 = 0, $5 = 0, $50 = 0, $500 = 0.0, $5000 = 0, $5001 = 0, $5002 = 0, $5003 = 0, $5004 = 0, $5005 = 0, $5006 = 0, $5007 = 0, $5008 = 0.0, $5009 = 0, $501 = 0.0, $5010 = 0;
 var $5011 = 0, $5012 = 0, $5013 = 0, $5014 = 0, $5015 = 0, $5016 = 0, $5017 = 0, $5018 = 0, $5019 = 0, $502 = 0.0, $5020 = 0, $5021 = 0, $5022 = 0.0, $5023 = 0, $5024 = 0, $5025 = 0, $5026 = 0, $5027 = 0, $5028 = 0, $5029 = 0;
 var $503 = 0.0, $5030 = 0, $5031 = 0, $5032 = 0, $5033 = 0, $5034 = 0, $5035 = 0, $5036 = 0.0, $5037 = 0, $5038 = 0, $5039 = 0, $504 = 0.0, $5040 = 0, $5041 = 0, $5042 = 0, $5043 = 0, $5044 = 0, $5045 = 0, $5046 = 0, $5047 = 0;
 var $5048 = 0, $5049 = 0, $505 = 0.0, $5050 = 0.0, $5051 = 0, $5052 = 0, $5053 = 0, $5054 = 0, $5055 = 0, $5056 = 0, $5057 = 0, $5058 = 0, $5059 = 0, $506 = 0.0, $5060 = 0, $5061 = 0, $5062 = 0, $5063 = 0, $5064 = 0.0, $5065 = 0;
 var $5066 = 0, $5067 = 0, $5068 = 0, $5069 = 0, $507 = 0.0, $5070 = 0, $5071 = 0, $5072 = 0, $5073 = 0, $5074 = 0, $5075 = 0, $5076 = 0, $5077 = 0, $5078 = 0.0, $5079 = 0, $508 = 0.0, $5080 = 0, $5081 = 0, $5082 = 0, $5083 = 0;
 var $5084 = 0, $5085 = 0, $5086 = 0, $5087 = 0, $5088 = 0, $5089 = 0, $509 = 0.0, $5090 = 0, $5091 = 0, $5092 = 0, $5093 = 0, $5094 = 0, $51 = 0, $510 = 0.0, $511 = 0.0, $512 = 0.0, $513 = 0.0, $514 = 0.0, $515 = 0.0, $516 = 0.0;
 var $517 = 0.0, $518 = 0.0, $519 = 0.0, $52 = 0, $520 = 0.0, $521 = 0.0, $522 = 0.0, $523 = 0.0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0.0, $531 = 0.0, $532 = 0.0, $533 = 0.0, $534 = 0.0;
 var $535 = 0.0, $536 = 0.0, $537 = 0.0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0;
 var $553 = 0, $554 = 0, $555 = 0, $556 = 0.0, $557 = 0, $558 = 0.0, $559 = 0.0, $56 = 0, $560 = 0.0, $561 = 0, $562 = 0.0, $563 = 0, $564 = 0.0, $565 = 0.0, $566 = 0.0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0.0;
 var $571 = 0, $572 = 0.0, $573 = 0, $574 = 0.0, $575 = 0.0, $576 = 0.0, $577 = 0.0, $578 = 0.0, $579 = 0.0, $58 = 0, $580 = 0.0, $581 = 0.0, $582 = 0.0, $583 = 0.0, $584 = 0.0, $585 = 0.0, $586 = 0.0, $587 = 0.0, $588 = 0.0, $589 = 0.0;
 var $59 = 0, $590 = 0.0, $591 = 0.0, $592 = 0.0, $593 = 0.0, $594 = 0.0, $595 = 0.0, $596 = 0.0, $597 = 0.0, $598 = 0.0, $599 = 0.0, $6 = 0, $60 = 0, $600 = 0.0, $601 = 0.0, $602 = 0.0, $603 = 0.0, $604 = 0.0, $605 = 0.0, $606 = 0.0;
 var $607 = 0.0, $608 = 0.0, $609 = 0.0, $61 = 0, $610 = 0.0, $611 = 0.0, $612 = 0.0, $613 = 0.0, $614 = 0.0, $615 = 0.0, $616 = 0.0, $617 = 0.0, $618 = 0.0, $619 = 0.0, $62 = 0, $620 = 0.0, $621 = 0.0, $622 = 0.0, $623 = 0.0, $624 = 0.0;
 var $625 = 0.0, $626 = 0.0, $627 = 0.0, $628 = 0.0, $629 = 0.0, $63 = 0, $630 = 0.0, $631 = 0.0, $632 = 0.0, $633 = 0.0, $634 = 0.0, $635 = 0.0, $636 = 0.0, $637 = 0.0, $638 = 0.0, $639 = 0.0, $64 = 0, $640 = 0.0, $641 = 0.0, $642 = 0.0;
 var $643 = 0.0, $644 = 0.0, $645 = 0.0, $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0.0, $651 = 0.0, $652 = 0.0, $653 = 0.0, $654 = 0.0, $655 = 0.0, $656 = 0.0, $657 = 0.0, $658 = 0.0, $659 = 0.0, $66 = 0, $660 = 0.0;
 var $661 = 0.0, $662 = 0.0, $663 = 0.0, $664 = 0.0, $665 = 0.0, $666 = 0.0, $667 = 0.0, $668 = 0.0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0, $672 = 0.0, $673 = 0.0, $674 = 0.0, $675 = 0.0, $676 = 0.0, $677 = 0.0, $678 = 0.0, $679 = 0.0;
 var $68 = 0, $680 = 0.0, $681 = 0.0, $682 = 0.0, $683 = 0.0, $684 = 0.0, $685 = 0, $686 = 0.0, $687 = 0.0, $688 = 0, $689 = 0.0, $69 = 0, $690 = 0.0, $691 = 0.0, $692 = 0.0, $693 = 0.0, $694 = 0.0, $695 = 0.0, $696 = 0.0, $697 = 0.0;
 var $698 = 0.0, $699 = 0.0, $7 = 0, $70 = 0, $700 = 0.0, $701 = 0.0, $702 = 0.0, $703 = 0.0, $704 = 0.0, $705 = 0.0, $706 = 0.0, $707 = 0.0, $708 = 0.0, $709 = 0.0, $71 = 0, $710 = 0.0, $711 = 0.0, $712 = 0.0, $713 = 0.0, $714 = 0.0;
 var $715 = 0.0, $716 = 0.0, $717 = 0.0, $718 = 0.0, $719 = 0.0, $72 = 0, $720 = 0.0, $721 = 0.0, $722 = 0.0, $723 = 0.0, $724 = 0.0, $725 = 0.0, $726 = 0.0, $727 = 0.0, $728 = 0.0, $729 = 0.0, $73 = 0, $730 = 0.0, $731 = 0.0, $732 = 0.0;
 var $733 = 0.0, $734 = 0.0, $735 = 0.0, $736 = 0.0, $737 = 0.0, $738 = 0.0, $739 = 0.0, $74 = 0, $740 = 0.0, $741 = 0.0, $742 = 0.0, $743 = 0.0, $744 = 0.0, $745 = 0.0, $746 = 0.0, $747 = 0.0, $748 = 0.0, $749 = 0.0, $75 = 0, $750 = 0.0;
 var $751 = 0.0, $752 = 0.0, $753 = 0.0, $754 = 0.0, $755 = 0.0, $756 = 0.0, $757 = 0.0, $758 = 0.0, $759 = 0.0, $76 = 0, $760 = 0.0, $761 = 0.0, $762 = 0.0, $763 = 0.0, $764 = 0.0, $765 = 0.0, $766 = 0.0, $767 = 0.0, $768 = 0.0, $769 = 0.0;
 var $77 = 0, $770 = 0.0, $771 = 0.0, $772 = 0.0, $773 = 0.0, $774 = 0.0, $775 = 0.0, $776 = 0.0, $777 = 0.0, $778 = 0.0, $779 = 0.0, $78 = 0, $780 = 0.0, $781 = 0.0, $782 = 0.0, $783 = 0.0, $784 = 0.0, $785 = 0.0, $786 = 0.0, $787 = 0.0;
 var $788 = 0.0, $789 = 0.0, $79 = 0, $790 = 0.0, $791 = 0.0, $792 = 0.0, $793 = 0.0, $794 = 0.0, $795 = 0.0, $796 = 0.0, $797 = 0.0, $798 = 0.0, $799 = 0, $8 = 0, $80 = 0, $800 = 0.0, $801 = 0.0, $802 = 0.0, $803 = 0.0, $804 = 0.0;
 var $805 = 0.0, $806 = 0.0, $807 = 0.0, $808 = 0.0, $809 = 0.0, $81 = 0, $810 = 0, $811 = 0.0, $812 = 0.0, $813 = 0, $814 = 0.0, $815 = 0, $816 = 0.0, $817 = 0, $818 = 0.0, $819 = 0, $82 = 0, $820 = 0.0, $821 = 0, $822 = 0.0;
 var $823 = 0.0, $824 = 0, $825 = 0, $826 = 0.0, $827 = 0.0, $828 = 0.0, $829 = 0.0, $83 = 0, $830 = 0.0, $831 = 0.0, $832 = 0.0, $833 = 0.0, $834 = 0.0, $835 = 0, $836 = 0.0, $837 = 0, $838 = 0.0, $839 = 0.0, $84 = 0, $840 = 0;
 var $841 = 0.0, $842 = 0, $843 = 0.0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0.0, $855 = 0, $856 = 0.0, $857 = 0.0, $858 = 0.0, $859 = 0;
 var $86 = 0, $860 = 0.0, $861 = 0, $862 = 0.0, $863 = 0.0, $864 = 0.0, $865 = 0, $866 = 0, $867 = 0, $868 = 0.0, $869 = 0, $87 = 0, $870 = 0.0, $871 = 0, $872 = 0.0, $873 = 0.0, $874 = 0.0, $875 = 0.0, $876 = 0.0, $877 = 0.0;
 var $878 = 0.0, $879 = 0.0, $88 = 0, $880 = 0.0, $881 = 0.0, $882 = 0, $883 = 0.0, $884 = 0.0, $885 = 0.0, $886 = 0.0, $887 = 0.0, $888 = 0.0, $889 = 0.0, $89 = 0, $890 = 0.0, $891 = 0.0, $892 = 0, $893 = 0.0, $894 = 0.0, $895 = 0.0;
 var $896 = 0.0, $897 = 0, $898 = 0.0, $899 = 0.0, $9 = 0, $90 = 0, $900 = 0.0, $901 = 0.0, $902 = 0.0, $903 = 0, $904 = 0.0, $905 = 0.0, $906 = 0.0, $907 = 0.0, $908 = 0.0, $909 = 0.0, $91 = 0, $910 = 0.0, $911 = 0.0, $912 = 0.0;
 var $913 = 0.0, $914 = 0.0, $915 = 0.0, $916 = 0.0, $917 = 0, $918 = 0.0, $919 = 0, $92 = 0, $920 = 0.0, $921 = 0.0, $922 = 0.0, $923 = 0.0, $924 = 0.0, $925 = 0.0, $926 = 0.0, $927 = 0.0, $928 = 0.0, $929 = 0.0, $93 = 0, $930 = 0.0;
 var $931 = 0.0, $932 = 0.0, $933 = 0.0, $934 = 0.0, $935 = 0.0, $936 = 0.0, $937 = 0.0, $938 = 0.0, $939 = 0.0, $94 = 0, $940 = 0.0, $941 = 0.0, $942 = 0.0, $943 = 0.0, $944 = 0.0, $945 = 0.0, $946 = 0.0, $947 = 0.0, $948 = 0.0, $949 = 0.0;
 var $95 = 0, $950 = 0.0, $951 = 0.0, $952 = 0.0, $953 = 0.0, $954 = 0.0, $955 = 0, $956 = 0.0, $957 = 0.0, $958 = 0.0, $959 = 0.0, $96 = 0, $960 = 0.0, $961 = 0, $962 = 0.0, $963 = 0, $964 = 0.0, $965 = 0, $966 = 0.0, $967 = 0;
 var $968 = 0.0, $969 = 0, $97 = 0, $970 = 0.0, $971 = 0, $972 = 0.0, $973 = 0, $974 = 0, $975 = 0, $976 = 0.0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0;
 var $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0.0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $cj4array = 0, $cj4array5 = 0, $cj5array = 0, $iij4$0233 = 0, $iij49$0225 = 0;
 var $iij5$0163 = 0, $ij4$0240 = 0, $ij48$0232 = 0, $ij5$0241 = 0, $j4array = 0, $j4array4 = 0, $j4valid = 0, $j4valid7 = 0, $j5array = 0, $j5valid = 0, $or$cond = 0, $sj4array = 0, $sj4array6 = 0, $sj5array = 0, $vfree = 0, $vfree110 = 0, $vfree120 = 0, $vfree130 = 0, $vfree151 = 0, $vfree162 = 0;
 var $vfree173 = 0, $vfree183 = 0, $vfree20 = 0, $vfree44 = 0, $vfree55 = 0, $vfree66 = 0, $vfree77 = 0, $vfree88 = 0, $vfree99 = 0, $vinfos = 0, $vinfos109 = 0, $vinfos119 = 0, $vinfos129 = 0, $vinfos150 = 0, $vinfos161 = 0, $vinfos172 = 0, $vinfos182 = 0, $vinfos19 = 0, $vinfos43 = 0, $vinfos54 = 0;
 var $vinfos65 = 0, $vinfos76 = 0, $vinfos87 = 0, $vinfos98 = 0, $x202 = 0, $x211 = 0, $x220 = 0, $x221 = 0, $x329 = 0, $x330 = 0, $x341 = 0, $x342 = 0, $x352 = 0, $x353 = 0, $x363 = 0, $x364 = 0, $x401 = 0, $x402 = 0, $x409 = 0, $x410 = 0;
 var $x418 = 0, $x419 = 0, $x433 = 0, $x434 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 832|0;
 $j5array = sp + 448|0;
 $cj5array = sp + 432|0;
 $sj5array = sp + 416|0;
 $j5valid = sp + 828|0;
 $j4array = sp + 400|0;
 $cj4array = sp + 384|0;
 $sj4array = sp + 368|0;
 $j4valid = sp + 826|0;
 $x202 = sp + 352|0;
 $vinfos = sp + 812|0;
 $vfree = sp + 800|0;
 $j4array4 = sp + 336|0;
 $cj4array5 = sp + 320|0;
 $sj4array6 = sp + 304|0;
 $j4valid7 = sp + 824|0;
 $x211 = sp + 288|0;
 $vinfos19 = sp + 788|0;
 $vfree20 = sp + 776|0;
 $x220 = sp + 272|0;
 $x221 = sp + 256|0;
 $vinfos43 = sp + 764|0;
 $vfree44 = sp + 752|0;
 $vinfos54 = sp + 740|0;
 $vfree55 = sp + 728|0;
 $vinfos65 = sp + 716|0;
 $vfree66 = sp + 704|0;
 $vinfos76 = sp + 692|0;
 $vfree77 = sp + 680|0;
 $vinfos87 = sp + 668|0;
 $vfree88 = sp + 656|0;
 $vinfos98 = sp + 644|0;
 $vfree99 = sp + 632|0;
 $x329 = sp + 240|0;
 $x330 = sp + 224|0;
 $vinfos109 = sp + 620|0;
 $vfree110 = sp + 608|0;
 $x341 = sp + 208|0;
 $x342 = sp + 192|0;
 $vinfos119 = sp + 596|0;
 $vfree120 = sp + 584|0;
 $x352 = sp + 176|0;
 $x353 = sp + 160|0;
 $vinfos129 = sp + 572|0;
 $vfree130 = sp + 560|0;
 $x363 = sp + 144|0;
 $x364 = sp + 128|0;
 $x401 = sp + 112|0;
 $x402 = sp + 96|0;
 $vinfos150 = sp + 548|0;
 $vfree151 = sp + 536|0;
 $x409 = sp + 80|0;
 $x410 = sp + 64|0;
 $vinfos161 = sp + 524|0;
 $vfree162 = sp + 512|0;
 $x418 = sp + 48|0;
 $x419 = sp + 32|0;
 $vinfos172 = sp + 500|0;
 $vfree173 = sp + 488|0;
 $x433 = sp + 16|0;
 $x434 = sp;
 $vinfos182 = sp + 476|0;
 $vfree183 = sp + 464|0;
 $0 = ((($this)) + 256|0);
 $1 = ((($this)) + 88|0);
 $2 = ((($this)) + 16|0);
 $3 = ((($this)) + 248|0);
 $4 = ((($this)) + 8|0);
 $5 = ((($this)) + 48|0);
 $6 = ((($this)) + 96|0);
 $7 = ((($this)) + 56|0);
 $8 = ((($this)) + 280|0);
 $9 = ((($this)) + 424|0);
 $10 = ((($this)) + 352|0);
 $11 = ((($this)) + 272|0);
 $12 = ((($this)) + 304|0);
 $13 = ((($this)) + 448|0);
 $14 = ((($this)) + 376|0);
 $15 = ((($this)) + 296|0);
 $16 = ((($this)) + 400|0);
 $17 = ((($this)) + 472|0);
 $18 = ((($this)) + 328|0);
 $19 = ((($this)) + 320|0);
 $20 = ((($this)) + 344|0);
 $21 = ((($this)) + 368|0);
 $22 = ((($this)) + 392|0);
 $23 = ((($this)) + 416|0);
 $24 = ((($this)) + 440|0);
 $25 = ((($this)) + 464|0);
 $26 = ((($this)) + 582|0);
 $27 = ((($this)) + 580|0);
 $28 = ((($this)) + 581|0);
 $29 = ((($this)) + 160|0);
 $30 = ((($this)) + 168|0);
 $31 = ((($this)) + 176|0);
 $32 = ((($this)) + 579|0);
 $33 = ((($x202)) + 8|0);
 $34 = ((($j4array)) + 8|0);
 $35 = ((($sj4array)) + 8|0);
 $36 = ((($cj4array)) + 8|0);
 $37 = ((($j4valid)) + 1|0);
 $38 = ((($this)) + 577|0);
 $39 = ((($this)) + 578|0);
 $40 = ((($this)) + 120|0);
 $41 = ((($this)) + 128|0);
 $42 = ((($this)) + 136|0);
 $43 = ((($this)) + 585|0);
 $44 = ((($this)) + 583|0);
 $45 = ((($this)) + 584|0);
 $46 = ((($this)) + 200|0);
 $47 = ((($this)) + 208|0);
 $48 = ((($this)) + 216|0);
 $49 = ((($this)) + 568|0);
 $50 = ((($this)) + 569|0);
 $51 = ((($this)) + 570|0);
 $52 = ((($this)) + 40|0);
 $53 = ((($this)) + 571|0);
 $54 = ((($this)) + 572|0);
 $55 = ((($this)) + 573|0);
 $56 = ((($this)) + 240|0);
 $57 = ((($this)) + 586|0);
 $58 = ((($this)) + 587|0);
 $59 = ((($this)) + 588|0);
 $60 = ((($this)) + 80|0);
 $61 = ((($this)) + 574|0);
 $62 = ((($this)) + 575|0);
 $63 = ((($this)) + 576|0);
 $64 = ((($this)) + 579|0);
 $65 = ((($x211)) + 8|0);
 $66 = ((($j4array4)) + 8|0);
 $67 = ((($sj4array6)) + 8|0);
 $68 = ((($cj4array5)) + 8|0);
 $69 = ((($j4valid7)) + 1|0);
 $70 = ((($this)) + 577|0);
 $71 = ((($this)) + 578|0);
 $72 = ((($this)) + 120|0);
 $73 = ((($this)) + 128|0);
 $74 = ((($this)) + 136|0);
 $75 = ((($this)) + 585|0);
 $76 = ((($this)) + 583|0);
 $77 = ((($this)) + 584|0);
 $78 = ((($this)) + 200|0);
 $79 = ((($this)) + 208|0);
 $80 = ((($this)) + 216|0);
 $81 = ((($this)) + 568|0);
 $82 = ((($this)) + 569|0);
 $83 = ((($this)) + 570|0);
 $84 = ((($this)) + 40|0);
 $85 = ((($this)) + 571|0);
 $86 = ((($this)) + 572|0);
 $87 = ((($this)) + 573|0);
 $88 = ((($this)) + 240|0);
 $89 = ((($this)) + 586|0);
 $90 = ((($this)) + 587|0);
 $91 = ((($this)) + 588|0);
 $92 = ((($this)) + 80|0);
 $93 = ((($this)) + 574|0);
 $94 = ((($this)) + 575|0);
 $95 = ((($this)) + 576|0);
 $96 = ((($this)) + 579|0);
 $97 = ((($x220)) + 8|0);
 $98 = ((($x221)) + 8|0);
 $99 = ((($this)) + 577|0);
 $100 = ((($this)) + 578|0);
 $101 = ((($this)) + 120|0);
 $102 = ((($this)) + 128|0);
 $103 = ((($this)) + 136|0);
 $104 = ((($this)) + 585|0);
 $105 = ((($this)) + 583|0);
 $106 = ((($this)) + 584|0);
 $107 = ((($this)) + 200|0);
 $108 = ((($this)) + 208|0);
 $109 = ((($this)) + 216|0);
 $110 = ((($this)) + 568|0);
 $111 = ((($this)) + 569|0);
 $112 = ((($this)) + 570|0);
 $113 = ((($this)) + 40|0);
 $114 = ((($this)) + 571|0);
 $115 = ((($this)) + 572|0);
 $116 = ((($this)) + 573|0);
 $117 = ((($this)) + 240|0);
 $118 = ((($this)) + 586|0);
 $119 = ((($this)) + 587|0);
 $120 = ((($this)) + 588|0);
 $121 = ((($this)) + 80|0);
 $122 = ((($this)) + 574|0);
 $123 = ((($this)) + 575|0);
 $124 = ((($this)) + 576|0);
 $125 = ((($this)) + 585|0);
 $126 = ((($this)) + 583|0);
 $127 = ((($this)) + 584|0);
 $128 = ((($this)) + 200|0);
 $129 = ((($this)) + 208|0);
 $130 = ((($this)) + 216|0);
 $131 = ((($this)) + 568|0);
 $132 = ((($this)) + 569|0);
 $133 = ((($this)) + 570|0);
 $134 = ((($this)) + 40|0);
 $135 = ((($this)) + 571|0);
 $136 = ((($this)) + 572|0);
 $137 = ((($this)) + 573|0);
 $138 = ((($this)) + 240|0);
 $139 = ((($this)) + 586|0);
 $140 = ((($this)) + 587|0);
 $141 = ((($this)) + 588|0);
 $142 = ((($this)) + 80|0);
 $143 = ((($this)) + 574|0);
 $144 = ((($this)) + 575|0);
 $145 = ((($this)) + 576|0);
 $146 = ((($this)) + 585|0);
 $147 = ((($this)) + 583|0);
 $148 = ((($this)) + 584|0);
 $149 = ((($this)) + 200|0);
 $150 = ((($this)) + 208|0);
 $151 = ((($this)) + 216|0);
 $152 = ((($this)) + 568|0);
 $153 = ((($this)) + 569|0);
 $154 = ((($this)) + 570|0);
 $155 = ((($this)) + 40|0);
 $156 = ((($this)) + 571|0);
 $157 = ((($this)) + 572|0);
 $158 = ((($this)) + 573|0);
 $159 = ((($this)) + 240|0);
 $160 = ((($this)) + 586|0);
 $161 = ((($this)) + 587|0);
 $162 = ((($this)) + 588|0);
 $163 = ((($this)) + 80|0);
 $164 = ((($this)) + 574|0);
 $165 = ((($this)) + 575|0);
 $166 = ((($this)) + 576|0);
 $167 = ((($this)) + 585|0);
 $168 = ((($this)) + 583|0);
 $169 = ((($this)) + 584|0);
 $170 = ((($this)) + 200|0);
 $171 = ((($this)) + 208|0);
 $172 = ((($this)) + 216|0);
 $173 = ((($this)) + 568|0);
 $174 = ((($this)) + 569|0);
 $175 = ((($this)) + 570|0);
 $176 = ((($this)) + 40|0);
 $177 = ((($this)) + 571|0);
 $178 = ((($this)) + 572|0);
 $179 = ((($this)) + 573|0);
 $180 = ((($this)) + 240|0);
 $181 = ((($this)) + 586|0);
 $182 = ((($this)) + 587|0);
 $183 = ((($this)) + 588|0);
 $184 = ((($this)) + 80|0);
 $185 = ((($this)) + 574|0);
 $186 = ((($this)) + 575|0);
 $187 = ((($this)) + 576|0);
 $188 = ((($this)) + 585|0);
 $189 = ((($this)) + 583|0);
 $190 = ((($this)) + 584|0);
 $191 = ((($this)) + 200|0);
 $192 = ((($this)) + 208|0);
 $193 = ((($this)) + 216|0);
 $194 = ((($this)) + 568|0);
 $195 = ((($this)) + 569|0);
 $196 = ((($this)) + 570|0);
 $197 = ((($this)) + 40|0);
 $198 = ((($this)) + 571|0);
 $199 = ((($this)) + 572|0);
 $200 = ((($this)) + 573|0);
 $201 = ((($this)) + 240|0);
 $202 = ((($this)) + 586|0);
 $203 = ((($this)) + 587|0);
 $204 = ((($this)) + 588|0);
 $205 = ((($this)) + 80|0);
 $206 = ((($this)) + 574|0);
 $207 = ((($this)) + 575|0);
 $208 = ((($this)) + 576|0);
 $209 = ((($this)) + 585|0);
 $210 = ((($this)) + 583|0);
 $211 = ((($this)) + 584|0);
 $212 = ((($this)) + 200|0);
 $213 = ((($this)) + 208|0);
 $214 = ((($this)) + 216|0);
 $215 = ((($this)) + 568|0);
 $216 = ((($this)) + 569|0);
 $217 = ((($this)) + 570|0);
 $218 = ((($this)) + 40|0);
 $219 = ((($this)) + 571|0);
 $220 = ((($this)) + 572|0);
 $221 = ((($this)) + 573|0);
 $222 = ((($this)) + 240|0);
 $223 = ((($this)) + 586|0);
 $224 = ((($this)) + 587|0);
 $225 = ((($this)) + 588|0);
 $226 = ((($this)) + 80|0);
 $227 = ((($this)) + 574|0);
 $228 = ((($this)) + 575|0);
 $229 = ((($this)) + 576|0);
 $230 = ((($this)) + 585|0);
 $231 = ((($x329)) + 8|0);
 $232 = ((($x330)) + 8|0);
 $233 = ((($this)) + 583|0);
 $234 = ((($this)) + 584|0);
 $235 = ((($this)) + 200|0);
 $236 = ((($this)) + 208|0);
 $237 = ((($this)) + 216|0);
 $238 = ((($this)) + 568|0);
 $239 = ((($this)) + 569|0);
 $240 = ((($this)) + 570|0);
 $241 = ((($this)) + 40|0);
 $242 = ((($this)) + 571|0);
 $243 = ((($this)) + 572|0);
 $244 = ((($this)) + 573|0);
 $245 = ((($this)) + 240|0);
 $246 = ((($this)) + 586|0);
 $247 = ((($this)) + 587|0);
 $248 = ((($this)) + 588|0);
 $249 = ((($this)) + 80|0);
 $250 = ((($this)) + 574|0);
 $251 = ((($this)) + 575|0);
 $252 = ((($this)) + 576|0);
 $253 = ((($this)) + 585|0);
 $254 = ((($x341)) + 8|0);
 $255 = ((($x342)) + 8|0);
 $256 = ((($this)) + 583|0);
 $257 = ((($this)) + 584|0);
 $258 = ((($this)) + 200|0);
 $259 = ((($this)) + 208|0);
 $260 = ((($this)) + 216|0);
 $261 = ((($this)) + 568|0);
 $262 = ((($this)) + 569|0);
 $263 = ((($this)) + 570|0);
 $264 = ((($this)) + 40|0);
 $265 = ((($this)) + 571|0);
 $266 = ((($this)) + 572|0);
 $267 = ((($this)) + 573|0);
 $268 = ((($this)) + 240|0);
 $269 = ((($this)) + 586|0);
 $270 = ((($this)) + 587|0);
 $271 = ((($this)) + 588|0);
 $272 = ((($this)) + 80|0);
 $273 = ((($this)) + 574|0);
 $274 = ((($this)) + 575|0);
 $275 = ((($this)) + 576|0);
 $276 = ((($this)) + 585|0);
 $277 = ((($x352)) + 8|0);
 $278 = ((($x353)) + 8|0);
 $279 = ((($this)) + 583|0);
 $280 = ((($this)) + 584|0);
 $281 = ((($this)) + 200|0);
 $282 = ((($this)) + 208|0);
 $283 = ((($this)) + 216|0);
 $284 = ((($this)) + 568|0);
 $285 = ((($this)) + 569|0);
 $286 = ((($this)) + 570|0);
 $287 = ((($this)) + 40|0);
 $288 = ((($this)) + 571|0);
 $289 = ((($this)) + 572|0);
 $290 = ((($this)) + 573|0);
 $291 = ((($this)) + 240|0);
 $292 = ((($this)) + 586|0);
 $293 = ((($this)) + 587|0);
 $294 = ((($this)) + 588|0);
 $295 = ((($this)) + 80|0);
 $296 = ((($this)) + 574|0);
 $297 = ((($this)) + 575|0);
 $298 = ((($this)) + 576|0);
 $299 = ((($this)) + 585|0);
 $300 = ((($x363)) + 8|0);
 $301 = ((($x364)) + 8|0);
 $302 = ((($this)) + 583|0);
 $303 = ((($this)) + 584|0);
 $304 = ((($this)) + 200|0);
 $305 = ((($this)) + 208|0);
 $306 = ((($this)) + 216|0);
 $307 = ((($this)) + 579|0);
 $308 = ((($x401)) + 8|0);
 $309 = ((($x402)) + 8|0);
 $310 = ((($this)) + 577|0);
 $311 = ((($this)) + 578|0);
 $312 = ((($this)) + 120|0);
 $313 = ((($this)) + 128|0);
 $314 = ((($this)) + 136|0);
 $315 = ((($this)) + 568|0);
 $316 = ((($this)) + 569|0);
 $317 = ((($this)) + 570|0);
 $318 = ((($this)) + 40|0);
 $319 = ((($this)) + 571|0);
 $320 = ((($this)) + 572|0);
 $321 = ((($this)) + 573|0);
 $322 = ((($this)) + 240|0);
 $323 = ((($this)) + 586|0);
 $324 = ((($this)) + 587|0);
 $325 = ((($this)) + 588|0);
 $326 = ((($this)) + 80|0);
 $327 = ((($this)) + 574|0);
 $328 = ((($this)) + 575|0);
 $329 = ((($this)) + 576|0);
 $330 = ((($this)) + 579|0);
 $331 = ((($x409)) + 8|0);
 $332 = ((($x410)) + 8|0);
 $333 = ((($this)) + 577|0);
 $334 = ((($this)) + 578|0);
 $335 = ((($this)) + 120|0);
 $336 = ((($this)) + 128|0);
 $337 = ((($this)) + 136|0);
 $338 = ((($this)) + 568|0);
 $339 = ((($this)) + 569|0);
 $340 = ((($this)) + 570|0);
 $341 = ((($this)) + 40|0);
 $342 = ((($this)) + 571|0);
 $343 = ((($this)) + 572|0);
 $344 = ((($this)) + 573|0);
 $345 = ((($this)) + 240|0);
 $346 = ((($this)) + 586|0);
 $347 = ((($this)) + 587|0);
 $348 = ((($this)) + 588|0);
 $349 = ((($this)) + 80|0);
 $350 = ((($this)) + 574|0);
 $351 = ((($this)) + 575|0);
 $352 = ((($this)) + 576|0);
 $353 = ((($this)) + 579|0);
 $354 = ((($x418)) + 8|0);
 $355 = ((($x419)) + 8|0);
 $356 = ((($this)) + 577|0);
 $357 = ((($this)) + 578|0);
 $358 = ((($this)) + 120|0);
 $359 = ((($this)) + 128|0);
 $360 = ((($this)) + 136|0);
 $361 = ((($this)) + 568|0);
 $362 = ((($this)) + 569|0);
 $363 = ((($this)) + 570|0);
 $364 = ((($this)) + 40|0);
 $365 = ((($this)) + 571|0);
 $366 = ((($this)) + 572|0);
 $367 = ((($this)) + 573|0);
 $368 = ((($this)) + 240|0);
 $369 = ((($this)) + 586|0);
 $370 = ((($this)) + 587|0);
 $371 = ((($this)) + 588|0);
 $372 = ((($this)) + 80|0);
 $373 = ((($this)) + 574|0);
 $374 = ((($this)) + 575|0);
 $375 = ((($this)) + 576|0);
 $376 = ((($this)) + 579|0);
 $377 = ((($x433)) + 8|0);
 $378 = ((($x434)) + 8|0);
 $379 = ((($this)) + 577|0);
 $380 = ((($this)) + 578|0);
 $381 = ((($this)) + 120|0);
 $382 = ((($this)) + 128|0);
 $383 = ((($this)) + 136|0);
 $384 = ((($this)) + 568|0);
 $385 = ((($this)) + 569|0);
 $386 = ((($this)) + 570|0);
 $387 = ((($this)) + 40|0);
 $388 = ((($this)) + 571|0);
 $389 = ((($this)) + 572|0);
 $390 = ((($this)) + 573|0);
 $391 = ((($this)) + 240|0);
 $392 = ((($this)) + 586|0);
 $393 = ((($this)) + 587|0);
 $394 = ((($this)) + 588|0);
 $395 = ((($this)) + 80|0);
 $396 = ((($this)) + 574|0);
 $397 = ((($this)) + 575|0);
 $398 = ((($this)) + 576|0);
 $399 = +HEAPF64[$0>>3];
 $400 = +HEAPF64[$1>>3];
 $401 = +HEAPF64[$2>>3];
 $402 = $400 * $401;
 $403 = +HEAPF64[$3>>3];
 $404 = $400 * $403;
 $405 = +HEAPF64[$4>>3];
 $406 = $399 * $405;
 $407 = +HEAPF64[$5>>3];
 $408 = +HEAPF64[$6>>3];
 $409 = $407 * $408;
 $410 = +HEAPF64[$7>>3];
 $411 = $408 * $410;
 $412 = $404 * $407;
 $413 = $412 - $411;
 $414 = $404 * $410;
 $415 = $409 + $414;
 $416 = $403 * $405;
 $417 = $401 * $407;
 $418 = $399 * $417;
 $419 = $416 - $418;
 $420 = $400 * $407;
 $421 = $403 * $411;
 $422 = $420 - $421;
 $423 = $405 * $413;
 $424 = $401 * $403;
 $425 = $405 * $407;
 $426 = $399 * $425;
 $427 = -$426;
 $428 = $427 - $424;
 $429 = $403 * $409;
 $430 = $400 * $410;
 $431 = -$430;
 $432 = $431 - $429;
 $433 = $400 * $406;
 $434 = $401 * $413;
 $435 = $433 + $434;
 $436 = $399 * $402;
 $437 = $423 - $436;
 $438 = $405 * $432;
 $439 = $399 * $401;
 $440 = $439 * $408;
 $441 = $440 + $438;
 $442 = $401 * $432;
 $443 = $406 * $408;
 $444 = $442 - $443;
 $445 = +HEAPF64[$8>>3];
 $446 = $445 * $437;
 $447 = +HEAPF64[$9>>3];
 $448 = $447 * $415;
 $449 = $448 + $446;
 $450 = +HEAPF64[$10>>3];
 $451 = $450 * $435;
 $452 = $451 + $449;
 HEAPF64[$11>>3] = $452;
 $453 = +HEAPF64[$12>>3];
 $454 = $453 * $437;
 $455 = +HEAPF64[$13>>3];
 $456 = $415 * $455;
 $457 = $454 + $456;
 $458 = +HEAPF64[$14>>3];
 $459 = $435 * $458;
 $460 = $457 + $459;
 HEAPF64[$15>>3] = $460;
 $461 = +HEAPF64[$16>>3];
 $462 = $435 * $461;
 $463 = +HEAPF64[$17>>3];
 $464 = $415 * $463;
 $465 = $462 + $464;
 $466 = +HEAPF64[$18>>3];
 $467 = $437 * $466;
 $468 = $465 + $467;
 HEAPF64[$19>>3] = $468;
 $469 = +HEAPF64[$8>>3];
 $470 = $428 * $469;
 $471 = +HEAPF64[$10>>3];
 $472 = $419 * $471;
 $473 = $470 + $472;
 $474 = +HEAPF64[$9>>3];
 $475 = +HEAPF64[$7>>3];
 $476 = $474 * $475;
 $477 = $399 * $476;
 $478 = $473 - $477;
 HEAPF64[$20>>3] = $478;
 $479 = +HEAPF64[$12>>3];
 $480 = $428 * $479;
 $481 = +HEAPF64[$13>>3];
 $482 = +HEAPF64[$7>>3];
 $483 = $481 * $482;
 $484 = $399 * $483;
 $485 = $480 - $484;
 $486 = +HEAPF64[$14>>3];
 $487 = $419 * $486;
 $488 = $487 + $485;
 HEAPF64[$21>>3] = $488;
 $489 = +HEAPF64[$17>>3];
 $490 = +HEAPF64[$7>>3];
 $491 = $489 * $490;
 $492 = $399 * $491;
 $493 = +HEAPF64[$18>>3];
 $494 = $428 * $493;
 $495 = $494 - $492;
 $496 = +HEAPF64[$16>>3];
 $497 = $419 * $496;
 $498 = $495 + $497;
 HEAPF64[$22>>3] = $498;
 $499 = +HEAPF64[$8>>3];
 $500 = $441 * $499;
 $501 = +HEAPF64[$9>>3];
 $502 = $422 * $501;
 $503 = $500 + $502;
 $504 = +HEAPF64[$10>>3];
 $505 = $444 * $504;
 $506 = $503 + $505;
 HEAPF64[$23>>3] = $506;
 $507 = +HEAPF64[$12>>3];
 $508 = $441 * $507;
 $509 = +HEAPF64[$13>>3];
 $510 = $422 * $509;
 $511 = $508 + $510;
 $512 = +HEAPF64[$14>>3];
 $513 = $444 * $512;
 $514 = $511 + $513;
 HEAPF64[$24>>3] = $514;
 $515 = +HEAPF64[$16>>3];
 $516 = $444 * $515;
 $517 = +HEAPF64[$17>>3];
 $518 = $422 * $517;
 $519 = $516 + $518;
 $520 = +HEAPF64[$18>>3];
 $521 = $441 * $520;
 $522 = $519 + $521;
 HEAPF64[$25>>3] = $522;
 HEAP16[$j5valid>>1] = 0;
 HEAP8[$26>>0] = 2;
 $523 = +HEAPF64[$25>>3];
 HEAPF64[$cj5array>>3] = $523;
 $524 = !($523 >= -1.0000020000000001);
 $525 = !($523 <= 1.0000020000000001);
 $or$cond = $524 | $525;
 if ($or$cond) {
  $538 = (__Z13__DOUBLE_BITSd($523)|0);
  $539 = tempRet0;
  $540 = $539 & 2147483647;
  $541 = ($540>>>0)>(2146435072);
  $542 = ($538>>>0)>(0);
  $543 = ($540|0)==(2146435072);
  $544 = $543 & $542;
  $545 = $541 | $544;
  if ($545) {
   HEAP8[$j5valid>>0] = 1;
   HEAPF64[$cj5array>>3] = 1.0;
   HEAPF64[$sj5array>>3] = 0.0;
   HEAPF64[$j5array>>3] = 0.0;
   $ij5$0241 = 0;
  } else {
   $ij5$0241 = 0;
  }
 } else {
  $526 = ((($sj5array)) + 8|0);
  $527 = ((($j5array)) + 8|0);
  $528 = ((($cj5array)) + 8|0);
  $529 = ((($j5valid)) + 1|0);
  HEAP8[$529>>0] = 1;
  HEAP8[$j5valid>>0] = 1;
  $530 = +HEAPF64[$cj5array>>3];
  $531 = (+__Z6IKacosd($530));
  HEAPF64[$j5array>>3] = $531;
  $532 = (+__Z5IKsind($531));
  HEAPF64[$sj5array>>3] = $532;
  $533 = +HEAPF64[$cj5array>>3];
  HEAPF64[$528>>3] = $533;
  $534 = +HEAPF64[$j5array>>3];
  $535 = -$534;
  HEAPF64[$527>>3] = $535;
  $536 = +HEAPF64[$sj5array>>3];
  $537 = -$536;
  HEAPF64[$526>>3] = $537;
  $ij5$0241 = 0;
 }
 while(1) {
  $546 = (($j5valid) + ($ij5$0241)|0);
  $547 = HEAP8[$546>>0]|0;
  $548 = ($547<<24>>24)==(0);
  L7: do {
   if (!($548)) {
    $549 = $ij5$0241&255;
    HEAP8[$27>>0] = $549;
    HEAP8[$28>>0] = -1;
    $iij5$0163 = (($ij5$0241) + 1)|0;
    $550 = ($iij5$0163|0)<(2);
    if ($550) {
     $551 = (($sj5array) + ($ij5$0241<<3)|0);
     $552 = (($j5valid) + ($iij5$0163)|0);
     $553 = HEAP8[$552>>0]|0;
     $554 = ($553<<24>>24)==(0);
     if (!($554)) {
      $555 = (($cj5array) + ($ij5$0241<<3)|0);
      $556 = +HEAPF64[$555>>3];
      $557 = (($cj5array) + ($iij5$0163<<3)|0);
      $558 = +HEAPF64[$557>>3];
      $559 = $556 - $558;
      $560 = (+__Z5IKabsd($559));
      $561 = $560 < 9.9999999999999995E-7;
      if ($561) {
       $562 = +HEAPF64[$551>>3];
       $563 = (($sj5array) + ($iij5$0163<<3)|0);
       $564 = +HEAPF64[$563>>3];
       $565 = $562 - $564;
       $566 = (+__Z5IKabsd($565));
       $567 = $566 < 9.9999999999999995E-7;
       if ($567) {
        HEAP8[$552>>0] = 0;
        $568 = $iij5$0163&255;
        HEAP8[$28>>0] = $568;
       }
      }
     }
    }
    $569 = (($j5array) + ($ij5$0241<<3)|0);
    $570 = +HEAPF64[$569>>3];
    HEAPF64[$29>>3] = $570;
    $571 = (($cj5array) + ($ij5$0241<<3)|0);
    $572 = +HEAPF64[$571>>3];
    HEAPF64[$30>>3] = $572;
    $573 = (($sj5array) + ($ij5$0241<<3)|0);
    $574 = +HEAPF64[$573>>3];
    HEAPF64[$31>>3] = $574;
    $575 = +HEAPF64[$0>>3];
    $576 = +HEAPF64[$1>>3];
    $577 = +HEAPF64[$2>>3];
    $578 = $576 * $577;
    $579 = +HEAPF64[$3>>3];
    $580 = $576 * $579;
    $581 = +HEAPF64[$4>>3];
    $582 = $575 * $581;
    $583 = +HEAPF64[$5>>3];
    $584 = +HEAPF64[$6>>3];
    $585 = $583 * $584;
    $586 = +HEAPF64[$7>>3];
    $587 = $584 * $586;
    $588 = $580 * $583;
    $589 = $588 - $587;
    $590 = $580 * $586;
    $591 = $585 + $590;
    $592 = $581 * $589;
    $593 = $577 * $589;
    $594 = $576 * $582;
    $595 = $594 + $593;
    $596 = $575 * $578;
    $597 = $592 - $596;
    $598 = $432 * $581;
    $599 = $575 * $577;
    $600 = $599 * $584;
    $601 = $598 + $600;
    $602 = $582 * $584;
    $603 = $432 * $577;
    $604 = $603 - $602;
    $605 = +HEAPF64[$9>>3];
    $606 = $605 * $591;
    $607 = +HEAPF64[$8>>3];
    $608 = $607 * $597;
    $609 = $606 + $608;
    $610 = +HEAPF64[$10>>3];
    $611 = $610 * $595;
    $612 = $611 + $609;
    HEAPF64[$11>>3] = $612;
    $613 = +HEAPF64[$12>>3];
    $614 = $613 * $597;
    $615 = +HEAPF64[$13>>3];
    $616 = $591 * $615;
    $617 = $614 + $616;
    $618 = +HEAPF64[$14>>3];
    $619 = $595 * $618;
    $620 = $617 + $619;
    HEAPF64[$15>>3] = $620;
    $621 = +HEAPF64[$17>>3];
    $622 = $591 * $621;
    $623 = +HEAPF64[$18>>3];
    $624 = $597 * $623;
    $625 = $622 + $624;
    $626 = +HEAPF64[$16>>3];
    $627 = $595 * $626;
    $628 = $625 + $627;
    HEAPF64[$19>>3] = $628;
    $629 = +HEAPF64[$8>>3];
    $630 = $428 * $629;
    $631 = +HEAPF64[$9>>3];
    $632 = +HEAPF64[$7>>3];
    $633 = $631 * $632;
    $634 = $575 * $633;
    $635 = $630 - $634;
    $636 = +HEAPF64[$10>>3];
    $637 = $419 * $636;
    $638 = $637 + $635;
    HEAPF64[$20>>3] = $638;
    $639 = +HEAPF64[$12>>3];
    $640 = $428 * $639;
    $641 = +HEAPF64[$13>>3];
    $642 = +HEAPF64[$7>>3];
    $643 = $641 * $642;
    $644 = $575 * $643;
    $645 = $640 - $644;
    $646 = +HEAPF64[$14>>3];
    $647 = $419 * $646;
    $648 = $647 + $645;
    HEAPF64[$21>>3] = $648;
    $649 = +HEAPF64[$17>>3];
    $650 = +HEAPF64[$7>>3];
    $651 = $649 * $650;
    $652 = $575 * $651;
    $653 = +HEAPF64[$16>>3];
    $654 = $419 * $653;
    $655 = $654 - $652;
    $656 = +HEAPF64[$18>>3];
    $657 = $428 * $656;
    $658 = $655 + $657;
    HEAPF64[$22>>3] = $658;
    $659 = +HEAPF64[$8>>3];
    $660 = $601 * $659;
    $661 = +HEAPF64[$9>>3];
    $662 = $422 * $661;
    $663 = $660 + $662;
    $664 = +HEAPF64[$10>>3];
    $665 = $604 * $664;
    $666 = $663 + $665;
    HEAPF64[$23>>3] = $666;
    $667 = +HEAPF64[$12>>3];
    $668 = $601 * $667;
    $669 = +HEAPF64[$13>>3];
    $670 = $422 * $669;
    $671 = $668 + $670;
    $672 = +HEAPF64[$14>>3];
    $673 = $604 * $672;
    $674 = $671 + $673;
    HEAPF64[$24>>3] = $674;
    $675 = +HEAPF64[$17>>3];
    $676 = $422 * $675;
    $677 = +HEAPF64[$16>>3];
    $678 = $604 * $677;
    $679 = $676 + $678;
    $680 = +HEAPF64[$18>>3];
    $681 = $601 * $680;
    $682 = $679 + $681;
    HEAPF64[$25>>3] = $682;
    $683 = +HEAPF64[$31>>3];
    $684 = (+__Z5IKabsd($683));
    $685 = $684 < 9.9999999999999995E-7;
    if (!($685)) {
     $686 = (+__Z6IKsignd($683));
     $687 = (+__Z5IKabsd($686));
     $688 = $687 < 9.9999999999999995E-7;
     if (!($688)) {
      HEAP8[$299>>0] = 1;
      $3853 = +HEAPF64[$24>>3];
      $3854 = -$3853;
      $3855 = +HEAPF64[$23>>3];
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x363,$3854,$3855,1.9999999999999999E-6);
      $3856 = HEAP8[$300>>0]|0;
      $3857 = ($3856<<24>>24)==(0);
      if ($3857) {
       break;
      }
      $3858 = +HEAPF64[$31>>3];
      $3859 = (+__Z6IKsignd($3858));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x364,$3859,-1);
      $3860 = HEAP8[$301>>0]|0;
      $3861 = ($3860<<24>>24)==(0);
      if ($3861) {
       break;
      }
      $3862 = +HEAPF64[$x363>>3];
      $3863 = $3862 + -1.5707963267949001;
      $3864 = +HEAPF64[$x364>>3];
      $3865 = $3864 * 1.5707963267949001;
      $3866 = $3863 + $3865;
      $3867 = (+__Z5IKsind($3866));
      $3868 = (+__Z5IKcosd($3866));
      $3869 = $3866 > 3.14159265358979;
      if ($3869) {
       $3870 = $3866 + -6.2831853071795898;
       $3873 = $3870;
      } else {
       $3871 = $3866 < -3.14159265358979;
       if ($3871) {
        $3872 = $3866 + 6.2831853071795898;
        $3873 = $3872;
       } else {
        $3873 = $3866;
       }
      }
      HEAP8[$302>>0] = 0;
      HEAP8[$303>>0] = -1;
      HEAPF64[$304>>3] = $3873;
      HEAPF64[$305>>3] = $3868;
      HEAPF64[$306>>3] = $3867;
      $3874 = +HEAPF64[$31>>3];
      $3875 = +HEAPF64[$304>>3];
      $3876 = (+__Z5IKsind($3875));
      $3877 = $3874 * $3876;
      $3878 = +HEAPF64[$24>>3];
      $3879 = $3877 + $3878;
      $3880 = (+__Z5IKabsd($3879));
      $3881 = $3880 > 5.0000000000000004E-6;
      if ($3881) {
       break;
      }
      $3882 = +HEAPF64[$23>>3];
      $3883 = (+__Z5IKcosd($3875));
      $3884 = $3874 * $3883;
      $3885 = $3882 - $3884;
      $3886 = (+__Z5IKabsd($3885));
      $3887 = $3886 > 5.0000000000000004E-6;
      if ($3887) {
       break;
      }
      $3888 = +HEAPF64[$0>>3];
      $3889 = +HEAPF64[$1>>3];
      $3890 = +HEAPF64[$2>>3];
      $3891 = $3889 * $3890;
      $3892 = +HEAPF64[$3>>3];
      $3893 = $3889 * $3892;
      $3894 = +HEAPF64[$4>>3];
      $3895 = $3888 * $3894;
      $3896 = +HEAPF64[$5>>3];
      $3897 = +HEAPF64[$6>>3];
      $3898 = $3896 * $3897;
      $3899 = +HEAPF64[$7>>3];
      $3900 = $3897 * $3899;
      $3901 = $3893 * $3896;
      $3902 = $3901 - $3900;
      $3903 = $3893 * $3899;
      $3904 = $3898 + $3903;
      $3905 = $3894 * $3902;
      $3906 = $3890 * $3902;
      $3907 = $3889 * $3895;
      $3908 = $3907 + $3906;
      $3909 = $3888 * $3891;
      $3910 = $3905 - $3909;
      $3911 = $3888 * $3890;
      $3912 = $3911 * $3897;
      $3913 = $432 * $3894;
      $3914 = $3913 + $3912;
      $3915 = $3895 * $3897;
      $3916 = $432 * $3890;
      $3917 = $3916 - $3915;
      $3918 = +HEAPF64[$9>>3];
      $3919 = $3918 * $3904;
      $3920 = +HEAPF64[$8>>3];
      $3921 = $3920 * $3910;
      $3922 = $3919 + $3921;
      $3923 = +HEAPF64[$10>>3];
      $3924 = $3923 * $3908;
      $3925 = $3924 + $3922;
      HEAPF64[$11>>3] = $3925;
      $3926 = +HEAPF64[$14>>3];
      $3927 = $3926 * $3908;
      $3928 = +HEAPF64[$13>>3];
      $3929 = $3904 * $3928;
      $3930 = $3927 + $3929;
      $3931 = +HEAPF64[$12>>3];
      $3932 = $3910 * $3931;
      $3933 = $3930 + $3932;
      HEAPF64[$15>>3] = $3933;
      $3934 = +HEAPF64[$18>>3];
      $3935 = $3910 * $3934;
      $3936 = +HEAPF64[$16>>3];
      $3937 = $3908 * $3936;
      $3938 = $3935 + $3937;
      $3939 = +HEAPF64[$17>>3];
      $3940 = $3904 * $3939;
      $3941 = $3938 + $3940;
      HEAPF64[$19>>3] = $3941;
      $3942 = +HEAPF64[$9>>3];
      $3943 = +HEAPF64[$7>>3];
      $3944 = $3942 * $3943;
      $3945 = $3888 * $3944;
      $3946 = +HEAPF64[$8>>3];
      $3947 = $428 * $3946;
      $3948 = $3947 - $3945;
      $3949 = +HEAPF64[$10>>3];
      $3950 = $419 * $3949;
      $3951 = $3948 + $3950;
      HEAPF64[$20>>3] = $3951;
      $3952 = +HEAPF64[$12>>3];
      $3953 = $428 * $3952;
      $3954 = +HEAPF64[$14>>3];
      $3955 = $419 * $3954;
      $3956 = $3953 + $3955;
      $3957 = +HEAPF64[$13>>3];
      $3958 = +HEAPF64[$7>>3];
      $3959 = $3957 * $3958;
      $3960 = $3888 * $3959;
      $3961 = $3956 - $3960;
      HEAPF64[$21>>3] = $3961;
      $3962 = +HEAPF64[$18>>3];
      $3963 = $428 * $3962;
      $3964 = +HEAPF64[$17>>3];
      $3965 = +HEAPF64[$7>>3];
      $3966 = $3964 * $3965;
      $3967 = $3888 * $3966;
      $3968 = $3963 - $3967;
      $3969 = +HEAPF64[$16>>3];
      $3970 = $419 * $3969;
      $3971 = $3970 + $3968;
      HEAPF64[$22>>3] = $3971;
      $3972 = +HEAPF64[$9>>3];
      $3973 = $422 * $3972;
      $3974 = +HEAPF64[$10>>3];
      $3975 = $3917 * $3974;
      $3976 = $3973 + $3975;
      $3977 = +HEAPF64[$8>>3];
      $3978 = $3914 * $3977;
      $3979 = $3976 + $3978;
      HEAPF64[$23>>3] = $3979;
      $3980 = +HEAPF64[$14>>3];
      $3981 = $3917 * $3980;
      $3982 = +HEAPF64[$13>>3];
      $3983 = $422 * $3982;
      $3984 = $3981 + $3983;
      $3985 = +HEAPF64[$12>>3];
      $3986 = $3914 * $3985;
      $3987 = $3984 + $3986;
      HEAPF64[$24>>3] = $3987;
      $3988 = +HEAPF64[$16>>3];
      $3989 = $3917 * $3988;
      $3990 = +HEAPF64[$18>>3];
      $3991 = $3914 * $3990;
      $3992 = $3989 + $3991;
      $3993 = +HEAPF64[$17>>3];
      $3994 = $422 * $3993;
      $3995 = $3992 + $3994;
      HEAPF64[$25>>3] = $3995;
      $3996 = +HEAPF64[$31>>3];
      $3997 = (+__Z5IKabsd($3996));
      $3998 = $3997 < 9.9999999999999995E-7;
      if (!($3998)) {
       $3999 = (+__Z6IKsignd($3996));
       $4000 = (+__Z5IKabsd($3999));
       $4001 = $4000 < 9.9999999999999995E-7;
       if (!($4001)) {
        HEAP8[$376>>0] = 1;
        $4835 = +HEAPF64[$31>>3];
        $4836 = (+__Z6IKsignd($4835));
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x433,$4836,-1);
        $4837 = HEAP8[$377>>0]|0;
        $4838 = ($4837<<24>>24)==(0);
        if ($4838) {
         break;
        }
        $4839 = +HEAPF64[$22>>3];
        $4840 = -$4839;
        $4841 = +HEAPF64[$19>>3];
        $4842 = -$4841;
        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x434,$4840,$4842,1.9999999999999999E-6);
        $4843 = HEAP8[$378>>0]|0;
        $4844 = ($4843<<24>>24)==(0);
        if ($4844) {
         break;
        }
        $4845 = +HEAPF64[$x433>>3];
        $4846 = $4845 * 1.5707963267949001;
        $4847 = $4846 + -1.5707963267949001;
        $4848 = +HEAPF64[$x434>>3];
        $4849 = $4848 + $4847;
        $4850 = (+__Z5IKsind($4849));
        $4851 = (+__Z5IKcosd($4849));
        $4852 = $4849 > 3.14159265358979;
        do {
         if ($4852) {
          $4853 = $4849 + -6.2831853071795898;
          $4856 = $4853;
         } else {
          $4854 = $4849 < -3.14159265358979;
          if (!($4854)) {
           $4856 = $4849;
           break;
          }
          $4855 = $4849 + 6.2831853071795898;
          $4856 = $4855;
         }
        } while(0);
        HEAP8[$379>>0] = 0;
        HEAP8[$380>>0] = -1;
        HEAPF64[$381>>3] = $4856;
        HEAPF64[$382>>3] = $4851;
        HEAPF64[$383>>3] = $4850;
        $4857 = +HEAPF64[$381>>3];
        $4858 = (+__Z5IKcosd($4857));
        $4859 = (+__Z5IKsind($4857));
        $4860 = +HEAPF64[$305>>3];
        $4861 = +HEAPF64[$20>>3];
        $4862 = +HEAPF64[$19>>3];
        $4863 = +HEAPF64[$31>>3];
        $4864 = +HEAPF64[$306>>3];
        $4865 = $4858 * $4864;
        $4866 = +HEAPF64[$30>>3];
        $4867 = $4859 * $4866;
        $4868 = $4858 * $4863;
        $4869 = +HEAPF64[$21>>3];
        $4870 = $4859 * $4869;
        $4871 = $4858 * $4866;
        $4872 = +HEAPF64[$22>>3];
        $4873 = $4859 * $4872;
        $4874 = $4859 * $4863;
        $4875 = $4862 + $4868;
        $4876 = $4859 * $4862;
        $4877 = $4858 * $4872;
        $4878 = $4877 - $4876;
        $4879 = $4863 + $4873;
        $4880 = $4858 * $4862;
        $4881 = $4880 + $4879;
        $4882 = +HEAPF64[$11>>3];
        $4883 = $4859 * $4882;
        $4884 = $4864 + $4883;
        $4885 = -$4858;
        $4886 = $4861 * $4885;
        $4887 = $4886 + $4884;
        $4888 = +HEAPF64[$15>>3];
        $4889 = $4859 * $4888;
        $4890 = $4860 + $4889;
        $4891 = $4858 * $4869;
        $4892 = $4890 - $4891;
        $4893 = $4866 * $4865;
        $4894 = $4859 * $4860;
        $4895 = $4894 + $4893;
        $4896 = $4895 + $4888;
        $4897 = $4858 * $4888;
        $4898 = $4864 * $4866;
        $4899 = $4898 + $4897;
        $4900 = $4870 + $4899;
        $4901 = -$4860;
        $4902 = $4871 * $4901;
        $4903 = $4859 * $4864;
        $4904 = $4903 + $4902;
        $4905 = $4904 + $4882;
        $4906 = $4860 * $4885;
        $4907 = $4864 * $4867;
        $4908 = $4906 + $4907;
        $4909 = $4869 + $4908;
        $4910 = $4858 * $4882;
        $4911 = $4860 * $4866;
        $4912 = $4910 - $4911;
        $4913 = $4859 * $4861;
        $4914 = $4913 + $4912;
        $4915 = $4867 * $4901;
        $4916 = $4915 - $4865;
        $4917 = $4861 + $4916;
        $4918 = $4867 * $4872;
        $4919 = +HEAPF64[$25>>3];
        $4920 = $4863 * $4919;
        $4921 = $4918 + $4920;
        $4922 = $4862 * $4871;
        $4923 = $4922 + $4921;
        $4924 = $4871 * $4888;
        $4925 = $4864 + $4924;
        $4926 = $4869 * $4867;
        $4927 = $4926 + $4925;
        $4928 = +HEAPF64[$24>>3];
        $4929 = $4863 * $4928;
        $4930 = $4927 + $4929;
        $4931 = $4861 * $4874;
        $4932 = +HEAPF64[$23>>3];
        $4933 = $4866 * $4932;
        $4934 = $4933 - $4931;
        $4935 = $4863 * $4910;
        $4936 = $4934 - $4935;
        $4937 = $4866 * $4928;
        $4938 = -$4863;
        $4939 = $4870 * $4938;
        $4940 = $4939 + $4937;
        $4941 = $4863 * $4897;
        $4942 = $4940 - $4941;
        $4943 = $4862 * $4868;
        $4944 = -1.0 - $4943;
        $4945 = $4866 * $4919;
        $4946 = $4944 + $4945;
        $4947 = $4873 * $4938;
        $4948 = $4947 + $4946;
        $4949 = $4871 * $4882;
        $4950 = $4949 - $4860;
        $4951 = $4863 * $4932;
        $4952 = $4950 + $4951;
        $4953 = $4861 * $4867;
        $4954 = $4953 + $4952;
        $4955 = (+__Z5IKabsd($4875));
        $4956 = $4955 > 5.0000000000000004E-6;
        if ($4956) {
         break;
        }
        $4957 = $4874 + $4872;
        $4958 = (+__Z5IKabsd($4957));
        $4959 = $4958 > 5.0000000000000004E-6;
        if ($4959) {
         break;
        }
        $4960 = (+__Z5IKabsd($4878));
        $4961 = $4960 > 5.0000000000000004E-6;
        if ($4961) {
         break;
        }
        $4962 = (+__Z5IKabsd($4881));
        $4963 = $4962 > 5.0000000000000004E-6;
        if ($4963) {
         break;
        }
        $4964 = (+__Z5IKabsd($4887));
        $4965 = $4964 > 5.0000000000000004E-6;
        if ($4965) {
         break;
        }
        $4966 = (+__Z5IKabsd($4892));
        $4967 = $4966 > 5.0000000000000004E-6;
        if ($4967) {
         break;
        }
        $4968 = (+__Z5IKabsd($4896));
        $4969 = $4968 > 5.0000000000000004E-6;
        if ($4969) {
         break;
        }
        $4970 = (+__Z5IKabsd($4900));
        $4971 = $4970 > 5.0000000000000004E-6;
        if ($4971) {
         break;
        }
        $4972 = (+__Z5IKabsd($4905));
        $4973 = $4972 > 5.0000000000000004E-6;
        if ($4973) {
         break;
        }
        $4974 = (+__Z5IKabsd($4909));
        $4975 = $4974 > 5.0000000000000004E-6;
        if ($4975) {
         break;
        }
        $4976 = (+__Z5IKabsd($4914));
        $4977 = $4976 > 5.0000000000000004E-6;
        if ($4977) {
         break;
        }
        $4978 = (+__Z5IKabsd($4917));
        $4979 = $4978 > 5.0000000000000004E-6;
        if ($4979) {
         break;
        }
        $4980 = (+__Z5IKabsd($4923));
        $4981 = $4980 > 5.0000000000000004E-6;
        if ($4981) {
         break;
        }
        $4982 = (+__Z5IKabsd($4930));
        $4983 = $4982 > 5.0000000000000004E-6;
        if ($4983) {
         break;
        }
        $4984 = (+__Z5IKabsd($4936));
        $4985 = $4984 > 5.0000000000000004E-6;
        if ($4985) {
         break;
        }
        $4986 = (+__Z5IKabsd($4942));
        $4987 = $4986 > 5.0000000000000004E-6;
        if ($4987) {
         break;
        }
        $4988 = (+__Z5IKabsd($4948));
        $4989 = $4988 > 5.0000000000000004E-6;
        if ($4989) {
         break;
        }
        $4990 = (+__Z5IKabsd($4954));
        $4991 = $4990 > 5.0000000000000004E-6;
        if ($4991) {
         break;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos182,7);
        $4992 = HEAP32[$vinfos182>>2]|0;
        $4993 = ((($4992)) + 17|0);
        HEAP8[$4993>>0] = 1;
        $4994 = +HEAPF64[$this>>3];
        $4995 = HEAP32[$vinfos182>>2]|0;
        $4996 = ((($4995)) + 8|0);
        HEAPF64[$4996>>3] = $4994;
        $4997 = HEAP8[$384>>0]|0;
        $4998 = HEAP32[$vinfos182>>2]|0;
        $4999 = ((($4998)) + 19|0);
        HEAP8[$4999>>0] = $4997;
        $5000 = HEAP8[$385>>0]|0;
        $5001 = HEAP32[$vinfos182>>2]|0;
        $5002 = ((($5001)) + 20|0);
        HEAP8[$5002>>0] = $5000;
        $5003 = HEAP8[$386>>0]|0;
        $5004 = HEAP32[$vinfos182>>2]|0;
        $5005 = ((($5004)) + 18|0);
        HEAP8[$5005>>0] = $5003;
        $5006 = HEAP32[$vinfos182>>2]|0;
        $5007 = ((($5006)) + 41|0);
        HEAP8[$5007>>0] = 1;
        $5008 = +HEAPF64[$387>>3];
        $5009 = HEAP32[$vinfos182>>2]|0;
        $5010 = ((($5009)) + 32|0);
        HEAPF64[$5010>>3] = $5008;
        $5011 = HEAP8[$388>>0]|0;
        $5012 = HEAP32[$vinfos182>>2]|0;
        $5013 = ((($5012)) + 43|0);
        HEAP8[$5013>>0] = $5011;
        $5014 = HEAP8[$389>>0]|0;
        $5015 = HEAP32[$vinfos182>>2]|0;
        $5016 = ((($5015)) + 44|0);
        HEAP8[$5016>>0] = $5014;
        $5017 = HEAP8[$390>>0]|0;
        $5018 = HEAP32[$vinfos182>>2]|0;
        $5019 = ((($5018)) + 42|0);
        HEAP8[$5019>>0] = $5017;
        $5020 = HEAP32[$vinfos182>>2]|0;
        $5021 = ((($5020)) + 65|0);
        HEAP8[$5021>>0] = 1;
        $5022 = +HEAPF64[$391>>3];
        $5023 = HEAP32[$vinfos182>>2]|0;
        $5024 = ((($5023)) + 56|0);
        HEAPF64[$5024>>3] = $5022;
        $5025 = HEAP8[$392>>0]|0;
        $5026 = HEAP32[$vinfos182>>2]|0;
        $5027 = ((($5026)) + 67|0);
        HEAP8[$5027>>0] = $5025;
        $5028 = HEAP8[$393>>0]|0;
        $5029 = HEAP32[$vinfos182>>2]|0;
        $5030 = ((($5029)) + 68|0);
        HEAP8[$5030>>0] = $5028;
        $5031 = HEAP8[$394>>0]|0;
        $5032 = HEAP32[$vinfos182>>2]|0;
        $5033 = ((($5032)) + 66|0);
        HEAP8[$5033>>0] = $5031;
        $5034 = HEAP32[$vinfos182>>2]|0;
        $5035 = ((($5034)) + 89|0);
        HEAP8[$5035>>0] = 1;
        $5036 = +HEAPF64[$395>>3];
        $5037 = HEAP32[$vinfos182>>2]|0;
        $5038 = ((($5037)) + 80|0);
        HEAPF64[$5038>>3] = $5036;
        $5039 = HEAP8[$396>>0]|0;
        $5040 = HEAP32[$vinfos182>>2]|0;
        $5041 = ((($5040)) + 91|0);
        HEAP8[$5041>>0] = $5039;
        $5042 = HEAP8[$397>>0]|0;
        $5043 = HEAP32[$vinfos182>>2]|0;
        $5044 = ((($5043)) + 92|0);
        HEAP8[$5044>>0] = $5042;
        $5045 = HEAP8[$398>>0]|0;
        $5046 = HEAP32[$vinfos182>>2]|0;
        $5047 = ((($5046)) + 90|0);
        HEAP8[$5047>>0] = $5045;
        $5048 = HEAP32[$vinfos182>>2]|0;
        $5049 = ((($5048)) + 113|0);
        HEAP8[$5049>>0] = 1;
        $5050 = +HEAPF64[$381>>3];
        $5051 = HEAP32[$vinfos182>>2]|0;
        $5052 = ((($5051)) + 104|0);
        HEAPF64[$5052>>3] = $5050;
        $5053 = HEAP8[$379>>0]|0;
        $5054 = HEAP32[$vinfos182>>2]|0;
        $5055 = ((($5054)) + 115|0);
        HEAP8[$5055>>0] = $5053;
        $5056 = HEAP8[$380>>0]|0;
        $5057 = HEAP32[$vinfos182>>2]|0;
        $5058 = ((($5057)) + 116|0);
        HEAP8[$5058>>0] = $5056;
        $5059 = HEAP8[$376>>0]|0;
        $5060 = HEAP32[$vinfos182>>2]|0;
        $5061 = ((($5060)) + 114|0);
        HEAP8[$5061>>0] = $5059;
        $5062 = HEAP32[$vinfos182>>2]|0;
        $5063 = ((($5062)) + 137|0);
        HEAP8[$5063>>0] = 1;
        $5064 = +HEAPF64[$29>>3];
        $5065 = HEAP32[$vinfos182>>2]|0;
        $5066 = ((($5065)) + 128|0);
        HEAPF64[$5066>>3] = $5064;
        $5067 = HEAP8[$27>>0]|0;
        $5068 = HEAP32[$vinfos182>>2]|0;
        $5069 = ((($5068)) + 139|0);
        HEAP8[$5069>>0] = $5067;
        $5070 = HEAP8[$28>>0]|0;
        $5071 = HEAP32[$vinfos182>>2]|0;
        $5072 = ((($5071)) + 140|0);
        HEAP8[$5072>>0] = $5070;
        $5073 = HEAP8[$26>>0]|0;
        $5074 = HEAP32[$vinfos182>>2]|0;
        $5075 = ((($5074)) + 138|0);
        HEAP8[$5075>>0] = $5073;
        $5076 = HEAP32[$vinfos182>>2]|0;
        $5077 = ((($5076)) + 161|0);
        HEAP8[$5077>>0] = 1;
        $5078 = +HEAPF64[$304>>3];
        $5079 = HEAP32[$vinfos182>>2]|0;
        $5080 = ((($5079)) + 152|0);
        HEAPF64[$5080>>3] = $5078;
        $5081 = HEAP8[$302>>0]|0;
        $5082 = HEAP32[$vinfos182>>2]|0;
        $5083 = ((($5082)) + 163|0);
        HEAP8[$5083>>0] = $5081;
        $5084 = HEAP8[$303>>0]|0;
        $5085 = HEAP32[$vinfos182>>2]|0;
        $5086 = ((($5085)) + 164|0);
        HEAP8[$5086>>0] = $5084;
        $5087 = HEAP8[$299>>0]|0;
        $5088 = HEAP32[$vinfos182>>2]|0;
        $5089 = ((($5088)) + 162|0);
        HEAP8[$5089>>0] = $5087;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree183,0);
        $5090 = HEAP32[$solutions>>2]|0;
        $5091 = ((($5090)) + 8|0);
        $5092 = HEAP32[$5091>>2]|0;
        (FUNCTION_TABLE_iiii[$5092 & 31]($solutions,$vinfos182,$vfree183)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree183);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos182);
        break;
       }
      }
      $4002 = +HEAPF64[$0>>3];
      $4003 = +HEAPF64[$1>>3];
      $4004 = +HEAPF64[$2>>3];
      $4005 = $4003 * $4004;
      $4006 = +HEAPF64[$3>>3];
      $4007 = $4003 * $4006;
      $4008 = +HEAPF64[$4>>3];
      $4009 = $4002 * $4008;
      $4010 = +HEAPF64[$5>>3];
      $4011 = +HEAPF64[$6>>3];
      $4012 = $4010 * $4011;
      $4013 = +HEAPF64[$7>>3];
      $4014 = $4011 * $4013;
      $4015 = $4007 * $4010;
      $4016 = $4015 - $4014;
      $4017 = $4007 * $4013;
      $4018 = $4012 + $4017;
      $4019 = $4008 * $4016;
      $4020 = $4003 * $4009;
      $4021 = $4004 * $4016;
      $4022 = $4020 + $4021;
      $4023 = $4002 * $4005;
      $4024 = $4019 - $4023;
      $4025 = $432 * $4008;
      $4026 = $4002 * $4004;
      $4027 = $4026 * $4011;
      $4028 = $4025 + $4027;
      $4029 = $432 * $4004;
      $4030 = $4009 * $4011;
      $4031 = $4029 - $4030;
      $4032 = +HEAPF64[$9>>3];
      $4033 = $4032 * $4018;
      $4034 = +HEAPF64[$10>>3];
      $4035 = $4034 * $4022;
      $4036 = $4033 + $4035;
      $4037 = +HEAPF64[$8>>3];
      $4038 = $4037 * $4024;
      $4039 = $4038 + $4036;
      HEAPF64[$11>>3] = $4039;
      $4040 = +HEAPF64[$12>>3];
      $4041 = $4040 * $4024;
      $4042 = +HEAPF64[$14>>3];
      $4043 = $4022 * $4042;
      $4044 = $4041 + $4043;
      $4045 = +HEAPF64[$13>>3];
      $4046 = $4018 * $4045;
      $4047 = $4044 + $4046;
      HEAPF64[$15>>3] = $4047;
      $4048 = +HEAPF64[$17>>3];
      $4049 = $4018 * $4048;
      $4050 = +HEAPF64[$16>>3];
      $4051 = $4022 * $4050;
      $4052 = $4049 + $4051;
      $4053 = +HEAPF64[$18>>3];
      $4054 = $4024 * $4053;
      $4055 = $4052 + $4054;
      HEAPF64[$19>>3] = $4055;
      $4056 = +HEAPF64[$10>>3];
      $4057 = $419 * $4056;
      $4058 = +HEAPF64[$8>>3];
      $4059 = $428 * $4058;
      $4060 = $4057 + $4059;
      $4061 = +HEAPF64[$9>>3];
      $4062 = +HEAPF64[$7>>3];
      $4063 = $4061 * $4062;
      $4064 = $4002 * $4063;
      $4065 = $4060 - $4064;
      HEAPF64[$20>>3] = $4065;
      $4066 = +HEAPF64[$12>>3];
      $4067 = $428 * $4066;
      $4068 = +HEAPF64[$13>>3];
      $4069 = +HEAPF64[$7>>3];
      $4070 = $4068 * $4069;
      $4071 = $4002 * $4070;
      $4072 = $4067 - $4071;
      $4073 = +HEAPF64[$14>>3];
      $4074 = $419 * $4073;
      $4075 = $4074 + $4072;
      HEAPF64[$21>>3] = $4075;
      $4076 = +HEAPF64[$17>>3];
      $4077 = +HEAPF64[$7>>3];
      $4078 = $4076 * $4077;
      $4079 = $4002 * $4078;
      $4080 = +HEAPF64[$16>>3];
      $4081 = $419 * $4080;
      $4082 = $4081 - $4079;
      $4083 = +HEAPF64[$18>>3];
      $4084 = $428 * $4083;
      $4085 = $4082 + $4084;
      HEAPF64[$22>>3] = $4085;
      $4086 = +HEAPF64[$9>>3];
      $4087 = $422 * $4086;
      $4088 = +HEAPF64[$8>>3];
      $4089 = $4028 * $4088;
      $4090 = $4087 + $4089;
      $4091 = +HEAPF64[$10>>3];
      $4092 = $4031 * $4091;
      $4093 = $4090 + $4092;
      HEAPF64[$23>>3] = $4093;
      $4094 = +HEAPF64[$14>>3];
      $4095 = $4031 * $4094;
      $4096 = +HEAPF64[$12>>3];
      $4097 = $4028 * $4096;
      $4098 = $4095 + $4097;
      $4099 = +HEAPF64[$13>>3];
      $4100 = $422 * $4099;
      $4101 = $4098 + $4100;
      HEAPF64[$24>>3] = $4101;
      $4102 = +HEAPF64[$16>>3];
      $4103 = $4031 * $4102;
      $4104 = +HEAPF64[$17>>3];
      $4105 = $422 * $4104;
      $4106 = $4103 + $4105;
      $4107 = +HEAPF64[$18>>3];
      $4108 = $4028 * $4107;
      $4109 = $4106 + $4108;
      HEAPF64[$25>>3] = $4109;
      $4110 = +HEAPF64[$31>>3];
      $4111 = (+__Z5IKabsd($4110));
      $4112 = $4111 < 9.9999999999999995E-7;
      if (!($4112)) {
       HEAP8[$353>>0] = 1;
       $4552 = +HEAPF64[$31>>3];
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x418,$4552,-1);
       $4553 = HEAP8[$354>>0]|0;
       $4554 = ($4553<<24>>24)==(0);
       if ($4554) {
        break;
       }
       $4555 = +HEAPF64[$x418>>3];
       $4556 = +HEAPF64[$22>>3];
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x419,$4556,-1);
       $4557 = HEAP8[$355>>0]|0;
       $4558 = ($4557<<24>>24)==(0);
       if ($4558) {
        break;
       }
       $4559 = +HEAPF64[$x419>>3];
       $4560 = $4555 * $4559;
       $4561 = +HEAPF64[$19>>3];
       $4562 = $4561 * $4561;
       $4563 = $4562 + -1.0;
       $4564 = +HEAPF64[$30>>3];
       $4565 = $4564 * $4564;
       $4566 = $4563 + $4565;
       $4567 = $4560 * $4566;
       $4568 = (+__Z5IKabsd($4567));
       $4569 = $4568 < 1.9999999999999999E-6;
       do {
        if ($4569) {
         $4570 = $4555 * $4561;
         $4571 = -$4570;
         $4572 = (+__Z5IKabsd($4571));
         $4573 = $4572 < 1.9999999999999999E-6;
         if (!($4573)) {
          break;
         }
         $4574 = (+__Z5IKsqrd($4567));
         $4575 = (+__Z5IKsqrd($4571));
         $4576 = $4574 + $4575;
         $4577 = $4576 + -1.0;
         $4578 = (+__Z5IKabsd($4577));
         $4579 = !($4578 <= 1.9999999999999999E-6);
         if (!($4579)) {
          break L7;
         }
        }
       } while(0);
       $4580 = +HEAPF64[$x419>>3];
       $4581 = $4555 * $4580;
       $4582 = +HEAPF64[$19>>3];
       $4583 = $4582 * $4582;
       $4584 = $4583 + -1.0;
       $4585 = +HEAPF64[$30>>3];
       $4586 = $4585 * $4585;
       $4587 = $4584 + $4586;
       $4588 = $4581 * $4587;
       $4589 = $4555 * $4582;
       $4590 = -$4589;
       $4591 = (+__Z7IKatan2dd($4588,$4590));
       $4592 = (+__Z5IKsind($4591));
       $4593 = (+__Z5IKcosd($4591));
       $4594 = $4591 > 3.14159265358979;
       do {
        if ($4594) {
         $4595 = $4591 + -6.2831853071795898;
         $4598 = $4595;
        } else {
         $4596 = $4591 < -3.14159265358979;
         if (!($4596)) {
          $4598 = $4591;
          break;
         }
         $4597 = $4591 + 6.2831853071795898;
         $4598 = $4597;
        }
       } while(0);
       HEAP8[$356>>0] = 0;
       HEAP8[$357>>0] = -1;
       HEAPF64[$358>>3] = $4598;
       HEAPF64[$359>>3] = $4593;
       HEAPF64[$360>>3] = $4592;
       $4599 = +HEAPF64[$358>>3];
       $4600 = (+__Z5IKcosd($4599));
       $4601 = (+__Z5IKsind($4599));
       $4602 = +HEAPF64[$305>>3];
       $4603 = +HEAPF64[$20>>3];
       $4604 = +HEAPF64[$19>>3];
       $4605 = +HEAPF64[$31>>3];
       $4606 = +HEAPF64[$306>>3];
       $4607 = $4600 * $4606;
       $4608 = +HEAPF64[$30>>3];
       $4609 = $4601 * $4608;
       $4610 = $4600 * $4605;
       $4611 = +HEAPF64[$21>>3];
       $4612 = $4601 * $4611;
       $4613 = $4600 * $4608;
       $4614 = +HEAPF64[$22>>3];
       $4615 = $4601 * $4614;
       $4616 = $4601 * $4605;
       $4617 = $4604 + $4610;
       $4618 = $4601 * $4604;
       $4619 = $4600 * $4614;
       $4620 = $4619 - $4618;
       $4621 = $4605 + $4615;
       $4622 = $4600 * $4604;
       $4623 = $4622 + $4621;
       $4624 = -$4600;
       $4625 = $4603 * $4624;
       $4626 = $4625 + $4606;
       $4627 = +HEAPF64[$11>>3];
       $4628 = $4601 * $4627;
       $4629 = $4626 + $4628;
       $4630 = $4600 * $4611;
       $4631 = $4602 - $4630;
       $4632 = +HEAPF64[$15>>3];
       $4633 = $4601 * $4632;
       $4634 = $4631 + $4633;
       $4635 = $4608 * $4607;
       $4636 = $4601 * $4602;
       $4637 = $4636 + $4635;
       $4638 = $4637 + $4632;
       $4639 = $4606 * $4608;
       $4640 = $4639 + $4612;
       $4641 = $4600 * $4632;
       $4642 = $4640 + $4641;
       $4643 = $4601 * $4606;
       $4644 = $4643 + $4627;
       $4645 = -$4602;
       $4646 = $4613 * $4645;
       $4647 = $4646 + $4644;
       $4648 = $4602 * $4624;
       $4649 = $4606 * $4609;
       $4650 = $4648 + $4649;
       $4651 = $4611 + $4650;
       $4652 = $4601 * $4603;
       $4653 = $4602 * $4608;
       $4654 = $4652 - $4653;
       $4655 = $4600 * $4627;
       $4656 = $4654 + $4655;
       $4657 = $4609 * $4645;
       $4658 = $4657 - $4607;
       $4659 = $4603 + $4658;
       $4660 = +HEAPF64[$25>>3];
       $4661 = $4605 * $4660;
       $4662 = $4609 * $4614;
       $4663 = $4662 + $4661;
       $4664 = $4604 * $4613;
       $4665 = $4664 + $4663;
       $4666 = $4613 * $4632;
       $4667 = $4606 + $4666;
       $4668 = $4611 * $4609;
       $4669 = $4668 + $4667;
       $4670 = +HEAPF64[$24>>3];
       $4671 = $4605 * $4670;
       $4672 = $4669 + $4671;
       $4673 = +HEAPF64[$23>>3];
       $4674 = $4608 * $4673;
       $4675 = $4605 * $4655;
       $4676 = $4674 - $4675;
       $4677 = $4603 * $4616;
       $4678 = $4676 - $4677;
       $4679 = $4605 * $4641;
       $4680 = $4608 * $4670;
       $4681 = $4680 - $4679;
       $4682 = -$4605;
       $4683 = $4612 * $4682;
       $4684 = $4683 + $4681;
       $4685 = $4608 * $4660;
       $4686 = $4685 + -1.0;
       $4687 = $4604 * $4610;
       $4688 = $4686 - $4687;
       $4689 = $4615 * $4682;
       $4690 = $4689 + $4688;
       $4691 = $4613 * $4627;
       $4692 = $4605 * $4673;
       $4693 = $4691 + $4692;
       $4694 = $4693 - $4602;
       $4695 = $4603 * $4609;
       $4696 = $4695 + $4694;
       $4697 = (+__Z5IKabsd($4617));
       $4698 = $4697 > 5.0000000000000004E-6;
       if ($4698) {
        break;
       }
       $4699 = $4616 + $4614;
       $4700 = (+__Z5IKabsd($4699));
       $4701 = $4700 > 5.0000000000000004E-6;
       if ($4701) {
        break;
       }
       $4702 = (+__Z5IKabsd($4620));
       $4703 = $4702 > 5.0000000000000004E-6;
       if ($4703) {
        break;
       }
       $4704 = (+__Z5IKabsd($4623));
       $4705 = $4704 > 5.0000000000000004E-6;
       if ($4705) {
        break;
       }
       $4706 = (+__Z5IKabsd($4629));
       $4707 = $4706 > 5.0000000000000004E-6;
       if ($4707) {
        break;
       }
       $4708 = (+__Z5IKabsd($4634));
       $4709 = $4708 > 5.0000000000000004E-6;
       if ($4709) {
        break;
       }
       $4710 = (+__Z5IKabsd($4638));
       $4711 = $4710 > 5.0000000000000004E-6;
       if ($4711) {
        break;
       }
       $4712 = (+__Z5IKabsd($4642));
       $4713 = $4712 > 5.0000000000000004E-6;
       if ($4713) {
        break;
       }
       $4714 = (+__Z5IKabsd($4647));
       $4715 = $4714 > 5.0000000000000004E-6;
       if ($4715) {
        break;
       }
       $4716 = (+__Z5IKabsd($4651));
       $4717 = $4716 > 5.0000000000000004E-6;
       if ($4717) {
        break;
       }
       $4718 = (+__Z5IKabsd($4656));
       $4719 = $4718 > 5.0000000000000004E-6;
       if ($4719) {
        break;
       }
       $4720 = (+__Z5IKabsd($4659));
       $4721 = $4720 > 5.0000000000000004E-6;
       if ($4721) {
        break;
       }
       $4722 = (+__Z5IKabsd($4665));
       $4723 = $4722 > 5.0000000000000004E-6;
       if ($4723) {
        break;
       }
       $4724 = (+__Z5IKabsd($4672));
       $4725 = $4724 > 5.0000000000000004E-6;
       if ($4725) {
        break;
       }
       $4726 = (+__Z5IKabsd($4678));
       $4727 = $4726 > 5.0000000000000004E-6;
       if ($4727) {
        break;
       }
       $4728 = (+__Z5IKabsd($4684));
       $4729 = $4728 > 5.0000000000000004E-6;
       if ($4729) {
        break;
       }
       $4730 = (+__Z5IKabsd($4690));
       $4731 = $4730 > 5.0000000000000004E-6;
       if ($4731) {
        break;
       }
       $4732 = (+__Z5IKabsd($4696));
       $4733 = $4732 > 5.0000000000000004E-6;
       if ($4733) {
        break;
       }
       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos172,7);
       $4734 = HEAP32[$vinfos172>>2]|0;
       $4735 = ((($4734)) + 17|0);
       HEAP8[$4735>>0] = 1;
       $4736 = +HEAPF64[$this>>3];
       $4737 = HEAP32[$vinfos172>>2]|0;
       $4738 = ((($4737)) + 8|0);
       HEAPF64[$4738>>3] = $4736;
       $4739 = HEAP8[$361>>0]|0;
       $4740 = HEAP32[$vinfos172>>2]|0;
       $4741 = ((($4740)) + 19|0);
       HEAP8[$4741>>0] = $4739;
       $4742 = HEAP8[$362>>0]|0;
       $4743 = HEAP32[$vinfos172>>2]|0;
       $4744 = ((($4743)) + 20|0);
       HEAP8[$4744>>0] = $4742;
       $4745 = HEAP8[$363>>0]|0;
       $4746 = HEAP32[$vinfos172>>2]|0;
       $4747 = ((($4746)) + 18|0);
       HEAP8[$4747>>0] = $4745;
       $4748 = HEAP32[$vinfos172>>2]|0;
       $4749 = ((($4748)) + 41|0);
       HEAP8[$4749>>0] = 1;
       $4750 = +HEAPF64[$364>>3];
       $4751 = HEAP32[$vinfos172>>2]|0;
       $4752 = ((($4751)) + 32|0);
       HEAPF64[$4752>>3] = $4750;
       $4753 = HEAP8[$365>>0]|0;
       $4754 = HEAP32[$vinfos172>>2]|0;
       $4755 = ((($4754)) + 43|0);
       HEAP8[$4755>>0] = $4753;
       $4756 = HEAP8[$366>>0]|0;
       $4757 = HEAP32[$vinfos172>>2]|0;
       $4758 = ((($4757)) + 44|0);
       HEAP8[$4758>>0] = $4756;
       $4759 = HEAP8[$367>>0]|0;
       $4760 = HEAP32[$vinfos172>>2]|0;
       $4761 = ((($4760)) + 42|0);
       HEAP8[$4761>>0] = $4759;
       $4762 = HEAP32[$vinfos172>>2]|0;
       $4763 = ((($4762)) + 65|0);
       HEAP8[$4763>>0] = 1;
       $4764 = +HEAPF64[$368>>3];
       $4765 = HEAP32[$vinfos172>>2]|0;
       $4766 = ((($4765)) + 56|0);
       HEAPF64[$4766>>3] = $4764;
       $4767 = HEAP8[$369>>0]|0;
       $4768 = HEAP32[$vinfos172>>2]|0;
       $4769 = ((($4768)) + 67|0);
       HEAP8[$4769>>0] = $4767;
       $4770 = HEAP8[$370>>0]|0;
       $4771 = HEAP32[$vinfos172>>2]|0;
       $4772 = ((($4771)) + 68|0);
       HEAP8[$4772>>0] = $4770;
       $4773 = HEAP8[$371>>0]|0;
       $4774 = HEAP32[$vinfos172>>2]|0;
       $4775 = ((($4774)) + 66|0);
       HEAP8[$4775>>0] = $4773;
       $4776 = HEAP32[$vinfos172>>2]|0;
       $4777 = ((($4776)) + 89|0);
       HEAP8[$4777>>0] = 1;
       $4778 = +HEAPF64[$372>>3];
       $4779 = HEAP32[$vinfos172>>2]|0;
       $4780 = ((($4779)) + 80|0);
       HEAPF64[$4780>>3] = $4778;
       $4781 = HEAP8[$373>>0]|0;
       $4782 = HEAP32[$vinfos172>>2]|0;
       $4783 = ((($4782)) + 91|0);
       HEAP8[$4783>>0] = $4781;
       $4784 = HEAP8[$374>>0]|0;
       $4785 = HEAP32[$vinfos172>>2]|0;
       $4786 = ((($4785)) + 92|0);
       HEAP8[$4786>>0] = $4784;
       $4787 = HEAP8[$375>>0]|0;
       $4788 = HEAP32[$vinfos172>>2]|0;
       $4789 = ((($4788)) + 90|0);
       HEAP8[$4789>>0] = $4787;
       $4790 = HEAP32[$vinfos172>>2]|0;
       $4791 = ((($4790)) + 113|0);
       HEAP8[$4791>>0] = 1;
       $4792 = +HEAPF64[$358>>3];
       $4793 = HEAP32[$vinfos172>>2]|0;
       $4794 = ((($4793)) + 104|0);
       HEAPF64[$4794>>3] = $4792;
       $4795 = HEAP8[$356>>0]|0;
       $4796 = HEAP32[$vinfos172>>2]|0;
       $4797 = ((($4796)) + 115|0);
       HEAP8[$4797>>0] = $4795;
       $4798 = HEAP8[$357>>0]|0;
       $4799 = HEAP32[$vinfos172>>2]|0;
       $4800 = ((($4799)) + 116|0);
       HEAP8[$4800>>0] = $4798;
       $4801 = HEAP8[$353>>0]|0;
       $4802 = HEAP32[$vinfos172>>2]|0;
       $4803 = ((($4802)) + 114|0);
       HEAP8[$4803>>0] = $4801;
       $4804 = HEAP32[$vinfos172>>2]|0;
       $4805 = ((($4804)) + 137|0);
       HEAP8[$4805>>0] = 1;
       $4806 = +HEAPF64[$29>>3];
       $4807 = HEAP32[$vinfos172>>2]|0;
       $4808 = ((($4807)) + 128|0);
       HEAPF64[$4808>>3] = $4806;
       $4809 = HEAP8[$27>>0]|0;
       $4810 = HEAP32[$vinfos172>>2]|0;
       $4811 = ((($4810)) + 139|0);
       HEAP8[$4811>>0] = $4809;
       $4812 = HEAP8[$28>>0]|0;
       $4813 = HEAP32[$vinfos172>>2]|0;
       $4814 = ((($4813)) + 140|0);
       HEAP8[$4814>>0] = $4812;
       $4815 = HEAP8[$26>>0]|0;
       $4816 = HEAP32[$vinfos172>>2]|0;
       $4817 = ((($4816)) + 138|0);
       HEAP8[$4817>>0] = $4815;
       $4818 = HEAP32[$vinfos172>>2]|0;
       $4819 = ((($4818)) + 161|0);
       HEAP8[$4819>>0] = 1;
       $4820 = +HEAPF64[$304>>3];
       $4821 = HEAP32[$vinfos172>>2]|0;
       $4822 = ((($4821)) + 152|0);
       HEAPF64[$4822>>3] = $4820;
       $4823 = HEAP8[$302>>0]|0;
       $4824 = HEAP32[$vinfos172>>2]|0;
       $4825 = ((($4824)) + 163|0);
       HEAP8[$4825>>0] = $4823;
       $4826 = HEAP8[$303>>0]|0;
       $4827 = HEAP32[$vinfos172>>2]|0;
       $4828 = ((($4827)) + 164|0);
       HEAP8[$4828>>0] = $4826;
       $4829 = HEAP8[$299>>0]|0;
       $4830 = HEAP32[$vinfos172>>2]|0;
       $4831 = ((($4830)) + 162|0);
       HEAP8[$4831>>0] = $4829;
       __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree173,0);
       $4832 = HEAP32[$solutions>>2]|0;
       $4833 = ((($4832)) + 8|0);
       $4834 = HEAP32[$4833>>2]|0;
       (FUNCTION_TABLE_iiii[$4834 & 31]($solutions,$vinfos172,$vfree173)|0);
       __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree173);
       __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos172);
       break;
      }
      $4113 = +HEAPF64[$29>>3];
      $4114 = (+__Z5IKabsd($4113));
      $4115 = $4114 + 3.14159265358979;
      $4116 = (+__Z6IKfmoddd($4115,6.2831853071795898));
      $4117 = $4116 + -3.14159265358979;
      $4118 = +HEAPF64[$19>>3];
      $4119 = +HEAPF64[$22>>3];
      $4120 = +HEAPF64[$24>>3];
      $4121 = +HEAPF64[$23>>3];
      $4122 = (+__Z5IKabsd($4117));
      $4123 = $4122 < 9.9999999999999995E-7;
      do {
       if ($4123) {
        $4124 = $4109 + -1.0;
        $4125 = (+__Z5IKabsd($4124));
        $4126 = $4125 < 9.9999999999999995E-7;
        if ($4126) {
         $4127 = (+__Z5IKabsd($4118));
         $4128 = $4127 < 9.9999999999999995E-7;
         if ($4128) {
          $4129 = (+__Z5IKabsd($4119));
          $4130 = $4129 < 9.9999999999999995E-7;
          if ($4130) {
           $4131 = (+__Z5IKabsd($4120));
           $4132 = $4131 < 9.9999999999999995E-7;
           if (!($4132)) {
            break;
           }
           $4133 = (+__Z5IKabsd($4121));
           $4134 = $4133 < 9.9999999999999995E-7;
           if (!($4134)) {
            break;
           }
           HEAP8[$307>>0] = 1;
           $4135 = +HEAPF64[$15>>3];
           $4136 = +HEAPF64[$22>>3];
           $4137 = $4135 * $4136;
           $4138 = +HEAPF64[$19>>3];
           $4139 = +HEAPF64[$21>>3];
           $4140 = $4138 * $4139;
           $4141 = $4137 - $4140;
           $4142 = (+__Z6IKsignd($4141));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x401,$4142,-1);
           $4143 = HEAP8[$308>>0]|0;
           $4144 = ($4143<<24>>24)==(0);
           if ($4144) {
            break L7;
           }
           $4145 = +HEAPF64[$19>>3];
           $4146 = +HEAPF64[$306>>3];
           $4147 = $4145 * $4146;
           $4148 = +HEAPF64[$22>>3];
           $4149 = $4146 * $4148;
           $4150 = -$4149;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x402,$4147,$4150,1.9999999999999999E-6);
           $4151 = HEAP8[$309>>0]|0;
           $4152 = ($4151<<24>>24)==(0);
           if ($4152) {
            break L7;
           }
           $4153 = +HEAPF64[$x401>>3];
           $4154 = $4153 * 1.5707963267949001;
           $4155 = $4154 + -1.5707963267949001;
           $4156 = +HEAPF64[$x402>>3];
           $4157 = $4156 + $4155;
           $4158 = (+__Z5IKsind($4157));
           $4159 = (+__Z5IKcosd($4157));
           $4160 = $4157 > 3.14159265358979;
           do {
            if ($4160) {
             $4161 = $4157 + -6.2831853071795898;
             $4164 = $4161;
            } else {
             $4162 = $4157 < -3.14159265358979;
             if (!($4162)) {
              $4164 = $4157;
              break;
             }
             $4163 = $4157 + 6.2831853071795898;
             $4164 = $4163;
            }
           } while(0);
           HEAP8[$310>>0] = 0;
           HEAP8[$311>>0] = -1;
           HEAPF64[$312>>3] = $4164;
           HEAPF64[$313>>3] = $4159;
           HEAPF64[$314>>3] = $4158;
           $4165 = +HEAPF64[$312>>3];
           $4166 = (+__Z5IKcosd($4165));
           $4167 = (+__Z5IKsind($4165));
           $4168 = +HEAPF64[$306>>3];
           $4169 = $4167 * $4168;
           $4170 = +HEAPF64[$305>>3];
           $4171 = $4167 * $4170;
           $4172 = $4166 * $4170;
           $4173 = +HEAPF64[$22>>3];
           $4174 = $4167 * $4173;
           $4175 = +HEAPF64[$19>>3];
           $4176 = $4166 * $4175;
           $4177 = $4174 + $4176;
           $4178 = +HEAPF64[$21>>3];
           $4179 = $4167 * $4178;
           $4180 = $4168 + $4179;
           $4181 = +HEAPF64[$15>>3];
           $4182 = $4166 * $4181;
           $4183 = $4180 + $4182;
           $4184 = $4166 * $4168;
           $4185 = $4184 + $4171;
           $4186 = $4185 + $4181;
           $4187 = +HEAPF64[$20>>3];
           $4188 = $4166 * $4187;
           $4189 = $4168 - $4188;
           $4190 = +HEAPF64[$11>>3];
           $4191 = $4167 * $4190;
           $4192 = $4189 + $4191;
           $4193 = $4167 * $4181;
           $4194 = $4170 + $4193;
           $4195 = $4166 * $4178;
           $4196 = $4194 - $4195;
           $4197 = $4169 + $4190;
           $4198 = $4197 - $4172;
           $4199 = $4169 + $4178;
           $4200 = $4199 - $4172;
           $4201 = $4167 * $4187;
           $4202 = $4166 * $4190;
           $4203 = $4201 + $4202;
           $4204 = $4203 - $4170;
           $4205 = $4187 - $4171;
           $4206 = $4205 - $4184;
           $4207 = (+__Z5IKabsd($4177));
           $4208 = $4207 > 5.0000000000000004E-6;
           if ($4208) {
            break L7;
           }
           $4209 = $4167 * $4175;
           $4210 = $4166 * $4173;
           $4211 = $4210 - $4209;
           $4212 = (+__Z5IKabsd($4211));
           $4213 = $4212 > 5.0000000000000004E-6;
           if ($4213) {
            break L7;
           }
           $4214 = (+__Z5IKabsd($4183));
           $4215 = $4214 > 5.0000000000000004E-6;
           if ($4215) {
            break L7;
           }
           $4216 = (+__Z5IKabsd($4186));
           $4217 = $4216 > 5.0000000000000004E-6;
           if ($4217) {
            break L7;
           }
           $4218 = (+__Z5IKabsd($4192));
           $4219 = $4218 > 5.0000000000000004E-6;
           if ($4219) {
            break L7;
           }
           $4220 = (+__Z5IKabsd($4196));
           $4221 = $4220 > 5.0000000000000004E-6;
           if ($4221) {
            break L7;
           }
           $4222 = (+__Z5IKabsd($4198));
           $4223 = $4222 > 5.0000000000000004E-6;
           if ($4223) {
            break L7;
           }
           $4224 = (+__Z5IKabsd($4200));
           $4225 = $4224 > 5.0000000000000004E-6;
           if ($4225) {
            break L7;
           }
           $4226 = (+__Z5IKabsd($4204));
           $4227 = $4226 > 5.0000000000000004E-6;
           if ($4227) {
            break L7;
           }
           $4228 = (+__Z5IKabsd($4206));
           $4229 = $4228 > 5.0000000000000004E-6;
           if ($4229) {
            break L7;
           }
           __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos150,7);
           $4230 = HEAP32[$vinfos150>>2]|0;
           $4231 = ((($4230)) + 17|0);
           HEAP8[$4231>>0] = 1;
           $4232 = +HEAPF64[$this>>3];
           $4233 = HEAP32[$vinfos150>>2]|0;
           $4234 = ((($4233)) + 8|0);
           HEAPF64[$4234>>3] = $4232;
           $4235 = HEAP8[$315>>0]|0;
           $4236 = HEAP32[$vinfos150>>2]|0;
           $4237 = ((($4236)) + 19|0);
           HEAP8[$4237>>0] = $4235;
           $4238 = HEAP8[$316>>0]|0;
           $4239 = HEAP32[$vinfos150>>2]|0;
           $4240 = ((($4239)) + 20|0);
           HEAP8[$4240>>0] = $4238;
           $4241 = HEAP8[$317>>0]|0;
           $4242 = HEAP32[$vinfos150>>2]|0;
           $4243 = ((($4242)) + 18|0);
           HEAP8[$4243>>0] = $4241;
           $4244 = HEAP32[$vinfos150>>2]|0;
           $4245 = ((($4244)) + 41|0);
           HEAP8[$4245>>0] = 1;
           $4246 = +HEAPF64[$318>>3];
           $4247 = HEAP32[$vinfos150>>2]|0;
           $4248 = ((($4247)) + 32|0);
           HEAPF64[$4248>>3] = $4246;
           $4249 = HEAP8[$319>>0]|0;
           $4250 = HEAP32[$vinfos150>>2]|0;
           $4251 = ((($4250)) + 43|0);
           HEAP8[$4251>>0] = $4249;
           $4252 = HEAP8[$320>>0]|0;
           $4253 = HEAP32[$vinfos150>>2]|0;
           $4254 = ((($4253)) + 44|0);
           HEAP8[$4254>>0] = $4252;
           $4255 = HEAP8[$321>>0]|0;
           $4256 = HEAP32[$vinfos150>>2]|0;
           $4257 = ((($4256)) + 42|0);
           HEAP8[$4257>>0] = $4255;
           $4258 = HEAP32[$vinfos150>>2]|0;
           $4259 = ((($4258)) + 65|0);
           HEAP8[$4259>>0] = 1;
           $4260 = +HEAPF64[$322>>3];
           $4261 = HEAP32[$vinfos150>>2]|0;
           $4262 = ((($4261)) + 56|0);
           HEAPF64[$4262>>3] = $4260;
           $4263 = HEAP8[$323>>0]|0;
           $4264 = HEAP32[$vinfos150>>2]|0;
           $4265 = ((($4264)) + 67|0);
           HEAP8[$4265>>0] = $4263;
           $4266 = HEAP8[$324>>0]|0;
           $4267 = HEAP32[$vinfos150>>2]|0;
           $4268 = ((($4267)) + 68|0);
           HEAP8[$4268>>0] = $4266;
           $4269 = HEAP8[$325>>0]|0;
           $4270 = HEAP32[$vinfos150>>2]|0;
           $4271 = ((($4270)) + 66|0);
           HEAP8[$4271>>0] = $4269;
           $4272 = HEAP32[$vinfos150>>2]|0;
           $4273 = ((($4272)) + 89|0);
           HEAP8[$4273>>0] = 1;
           $4274 = +HEAPF64[$326>>3];
           $4275 = HEAP32[$vinfos150>>2]|0;
           $4276 = ((($4275)) + 80|0);
           HEAPF64[$4276>>3] = $4274;
           $4277 = HEAP8[$327>>0]|0;
           $4278 = HEAP32[$vinfos150>>2]|0;
           $4279 = ((($4278)) + 91|0);
           HEAP8[$4279>>0] = $4277;
           $4280 = HEAP8[$328>>0]|0;
           $4281 = HEAP32[$vinfos150>>2]|0;
           $4282 = ((($4281)) + 92|0);
           HEAP8[$4282>>0] = $4280;
           $4283 = HEAP8[$329>>0]|0;
           $4284 = HEAP32[$vinfos150>>2]|0;
           $4285 = ((($4284)) + 90|0);
           HEAP8[$4285>>0] = $4283;
           $4286 = HEAP32[$vinfos150>>2]|0;
           $4287 = ((($4286)) + 113|0);
           HEAP8[$4287>>0] = 1;
           $4288 = +HEAPF64[$312>>3];
           $4289 = HEAP32[$vinfos150>>2]|0;
           $4290 = ((($4289)) + 104|0);
           HEAPF64[$4290>>3] = $4288;
           $4291 = HEAP8[$310>>0]|0;
           $4292 = HEAP32[$vinfos150>>2]|0;
           $4293 = ((($4292)) + 115|0);
           HEAP8[$4293>>0] = $4291;
           $4294 = HEAP8[$311>>0]|0;
           $4295 = HEAP32[$vinfos150>>2]|0;
           $4296 = ((($4295)) + 116|0);
           HEAP8[$4296>>0] = $4294;
           $4297 = HEAP8[$307>>0]|0;
           $4298 = HEAP32[$vinfos150>>2]|0;
           $4299 = ((($4298)) + 114|0);
           HEAP8[$4299>>0] = $4297;
           $4300 = HEAP32[$vinfos150>>2]|0;
           $4301 = ((($4300)) + 137|0);
           HEAP8[$4301>>0] = 1;
           $4302 = +HEAPF64[$29>>3];
           $4303 = HEAP32[$vinfos150>>2]|0;
           $4304 = ((($4303)) + 128|0);
           HEAPF64[$4304>>3] = $4302;
           $4305 = HEAP8[$27>>0]|0;
           $4306 = HEAP32[$vinfos150>>2]|0;
           $4307 = ((($4306)) + 139|0);
           HEAP8[$4307>>0] = $4305;
           $4308 = HEAP8[$28>>0]|0;
           $4309 = HEAP32[$vinfos150>>2]|0;
           $4310 = ((($4309)) + 140|0);
           HEAP8[$4310>>0] = $4308;
           $4311 = HEAP8[$26>>0]|0;
           $4312 = HEAP32[$vinfos150>>2]|0;
           $4313 = ((($4312)) + 138|0);
           HEAP8[$4313>>0] = $4311;
           $4314 = HEAP32[$vinfos150>>2]|0;
           $4315 = ((($4314)) + 161|0);
           HEAP8[$4315>>0] = 1;
           $4316 = +HEAPF64[$304>>3];
           $4317 = HEAP32[$vinfos150>>2]|0;
           $4318 = ((($4317)) + 152|0);
           HEAPF64[$4318>>3] = $4316;
           $4319 = HEAP8[$302>>0]|0;
           $4320 = HEAP32[$vinfos150>>2]|0;
           $4321 = ((($4320)) + 163|0);
           HEAP8[$4321>>0] = $4319;
           $4322 = HEAP8[$303>>0]|0;
           $4323 = HEAP32[$vinfos150>>2]|0;
           $4324 = ((($4323)) + 164|0);
           HEAP8[$4324>>0] = $4322;
           $4325 = HEAP8[$299>>0]|0;
           $4326 = HEAP32[$vinfos150>>2]|0;
           $4327 = ((($4326)) + 162|0);
           HEAP8[$4327>>0] = $4325;
           __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree151,0);
           $4328 = HEAP32[$solutions>>2]|0;
           $4329 = ((($4328)) + 8|0);
           $4330 = HEAP32[$4329>>2]|0;
           (FUNCTION_TABLE_iiii[$4330 & 31]($solutions,$vinfos150,$vfree151)|0);
           __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree151);
           __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos150);
           break L7;
          }
         }
        }
       }
      } while(0);
      $4331 = +HEAPF64[$29>>3];
      $4332 = $4331 + -3.14159265358979;
      $4333 = (+__Z5IKabsd($4332));
      $4334 = $4333 + 3.14159265358979;
      $4335 = (+__Z6IKfmoddd($4334,6.2831853071795898));
      $4336 = $4335 + -3.14159265358979;
      $4337 = +HEAPF64[$19>>3];
      $4338 = +HEAPF64[$22>>3];
      $4339 = +HEAPF64[$24>>3];
      $4340 = +HEAPF64[$23>>3];
      $4341 = (+__Z5IKabsd($4336));
      $4342 = $4341 < 9.9999999999999995E-7;
      if (!($4342)) {
       break;
      }
      $4343 = +HEAPF64[$25>>3];
      $4344 = $4343 + 1.0;
      $4345 = (+__Z5IKabsd($4344));
      $4346 = $4345 < 9.9999999999999995E-7;
      if (!($4346)) {
       break;
      }
      $4347 = (+__Z5IKabsd($4337));
      $4348 = $4347 < 9.9999999999999995E-7;
      if (!($4348)) {
       break;
      }
      $4349 = (+__Z5IKabsd($4338));
      $4350 = $4349 < 9.9999999999999995E-7;
      if (!($4350)) {
       break;
      }
      $4351 = (+__Z5IKabsd($4339));
      $4352 = $4351 < 9.9999999999999995E-7;
      if (!($4352)) {
       break;
      }
      $4353 = (+__Z5IKabsd($4340));
      $4354 = $4353 < 9.9999999999999995E-7;
      if (!($4354)) {
       break;
      }
      HEAP8[$330>>0] = 1;
      $4355 = +HEAPF64[$11>>3];
      $4356 = +HEAPF64[$22>>3];
      $4357 = $4355 * $4356;
      $4358 = +HEAPF64[$19>>3];
      $4359 = +HEAPF64[$20>>3];
      $4360 = $4358 * $4359;
      $4361 = $4357 - $4360;
      $4362 = (+__Z6IKsignd($4361));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x409,$4362,-1);
      $4363 = HEAP8[$331>>0]|0;
      $4364 = ($4363<<24>>24)==(0);
      if ($4364) {
       break;
      }
      $4365 = +HEAPF64[$305>>3];
      $4366 = +HEAPF64[$19>>3];
      $4367 = $4365 * $4366;
      $4368 = +HEAPF64[$22>>3];
      $4369 = $4365 * $4368;
      $4370 = -$4369;
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x410,$4367,$4370,1.9999999999999999E-6);
      $4371 = HEAP8[$332>>0]|0;
      $4372 = ($4371<<24>>24)==(0);
      if ($4372) {
       break;
      }
      $4373 = +HEAPF64[$x409>>3];
      $4374 = $4373 * 1.5707963267949001;
      $4375 = $4374 + -1.5707963267949001;
      $4376 = +HEAPF64[$x410>>3];
      $4377 = $4376 + $4375;
      $4378 = (+__Z5IKsind($4377));
      $4379 = (+__Z5IKcosd($4377));
      $4380 = $4377 > 3.14159265358979;
      do {
       if ($4380) {
        $4381 = $4377 + -6.2831853071795898;
        $4384 = $4381;
       } else {
        $4382 = $4377 < -3.14159265358979;
        if (!($4382)) {
         $4384 = $4377;
         break;
        }
        $4383 = $4377 + 6.2831853071795898;
        $4384 = $4383;
       }
      } while(0);
      HEAP8[$333>>0] = 0;
      HEAP8[$334>>0] = -1;
      HEAPF64[$335>>3] = $4384;
      HEAPF64[$336>>3] = $4379;
      HEAPF64[$337>>3] = $4378;
      $4385 = +HEAPF64[$335>>3];
      $4386 = (+__Z5IKcosd($4385));
      $4387 = (+__Z5IKsind($4385));
      $4388 = +HEAPF64[$306>>3];
      $4389 = +HEAPF64[$305>>3];
      $4390 = $4387 * $4389;
      $4391 = $4386 * $4388;
      $4392 = +HEAPF64[$22>>3];
      $4393 = $4387 * $4392;
      $4394 = +HEAPF64[$19>>3];
      $4395 = $4386 * $4394;
      $4396 = $4393 + $4395;
      $4397 = +HEAPF64[$20>>3];
      $4398 = $4387 * $4397;
      $4399 = $4389 + $4398;
      $4400 = +HEAPF64[$11>>3];
      $4401 = $4386 * $4400;
      $4402 = $4399 + $4401;
      $4403 = $4386 * $4389;
      $4404 = $4387 * $4388;
      $4405 = $4404 + $4403;
      $4406 = $4405 + $4400;
      $4407 = $4387 * $4400;
      $4408 = $4388 + $4407;
      $4409 = $4386 * $4397;
      $4410 = $4408 - $4409;
      $4411 = +HEAPF64[$21>>3];
      $4412 = $4386 * $4411;
      $4413 = $4389 - $4412;
      $4414 = +HEAPF64[$15>>3];
      $4415 = $4387 * $4414;
      $4416 = $4413 + $4415;
      $4417 = $4390 + $4414;
      $4418 = $4417 - $4391;
      $4419 = $4390 + $4397;
      $4420 = $4419 - $4391;
      $4421 = $4387 * $4411;
      $4422 = $4421 - $4388;
      $4423 = $4386 * $4414;
      $4424 = $4422 + $4423;
      $4425 = -$4403;
      $4426 = $4425 - $4404;
      $4427 = $4426 + $4411;
      $4428 = (+__Z5IKabsd($4396));
      $4429 = $4428 > 5.0000000000000004E-6;
      if ($4429) {
       break;
      }
      $4430 = $4387 * $4394;
      $4431 = $4386 * $4392;
      $4432 = $4431 - $4430;
      $4433 = (+__Z5IKabsd($4432));
      $4434 = $4433 > 5.0000000000000004E-6;
      if ($4434) {
       break;
      }
      $4435 = (+__Z5IKabsd($4402));
      $4436 = $4435 > 5.0000000000000004E-6;
      if ($4436) {
       break;
      }
      $4437 = (+__Z5IKabsd($4406));
      $4438 = $4437 > 5.0000000000000004E-6;
      if ($4438) {
       break;
      }
      $4439 = (+__Z5IKabsd($4410));
      $4440 = $4439 > 5.0000000000000004E-6;
      if ($4440) {
       break;
      }
      $4441 = (+__Z5IKabsd($4416));
      $4442 = $4441 > 5.0000000000000004E-6;
      if ($4442) {
       break;
      }
      $4443 = (+__Z5IKabsd($4418));
      $4444 = $4443 > 5.0000000000000004E-6;
      if ($4444) {
       break;
      }
      $4445 = (+__Z5IKabsd($4420));
      $4446 = $4445 > 5.0000000000000004E-6;
      if ($4446) {
       break;
      }
      $4447 = (+__Z5IKabsd($4424));
      $4448 = $4447 > 5.0000000000000004E-6;
      if ($4448) {
       break;
      }
      $4449 = (+__Z5IKabsd($4427));
      $4450 = $4449 > 5.0000000000000004E-6;
      if ($4450) {
       break;
      }
      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos161,7);
      $4451 = HEAP32[$vinfos161>>2]|0;
      $4452 = ((($4451)) + 17|0);
      HEAP8[$4452>>0] = 1;
      $4453 = +HEAPF64[$this>>3];
      $4454 = HEAP32[$vinfos161>>2]|0;
      $4455 = ((($4454)) + 8|0);
      HEAPF64[$4455>>3] = $4453;
      $4456 = HEAP8[$338>>0]|0;
      $4457 = HEAP32[$vinfos161>>2]|0;
      $4458 = ((($4457)) + 19|0);
      HEAP8[$4458>>0] = $4456;
      $4459 = HEAP8[$339>>0]|0;
      $4460 = HEAP32[$vinfos161>>2]|0;
      $4461 = ((($4460)) + 20|0);
      HEAP8[$4461>>0] = $4459;
      $4462 = HEAP8[$340>>0]|0;
      $4463 = HEAP32[$vinfos161>>2]|0;
      $4464 = ((($4463)) + 18|0);
      HEAP8[$4464>>0] = $4462;
      $4465 = HEAP32[$vinfos161>>2]|0;
      $4466 = ((($4465)) + 41|0);
      HEAP8[$4466>>0] = 1;
      $4467 = +HEAPF64[$341>>3];
      $4468 = HEAP32[$vinfos161>>2]|0;
      $4469 = ((($4468)) + 32|0);
      HEAPF64[$4469>>3] = $4467;
      $4470 = HEAP8[$342>>0]|0;
      $4471 = HEAP32[$vinfos161>>2]|0;
      $4472 = ((($4471)) + 43|0);
      HEAP8[$4472>>0] = $4470;
      $4473 = HEAP8[$343>>0]|0;
      $4474 = HEAP32[$vinfos161>>2]|0;
      $4475 = ((($4474)) + 44|0);
      HEAP8[$4475>>0] = $4473;
      $4476 = HEAP8[$344>>0]|0;
      $4477 = HEAP32[$vinfos161>>2]|0;
      $4478 = ((($4477)) + 42|0);
      HEAP8[$4478>>0] = $4476;
      $4479 = HEAP32[$vinfos161>>2]|0;
      $4480 = ((($4479)) + 65|0);
      HEAP8[$4480>>0] = 1;
      $4481 = +HEAPF64[$345>>3];
      $4482 = HEAP32[$vinfos161>>2]|0;
      $4483 = ((($4482)) + 56|0);
      HEAPF64[$4483>>3] = $4481;
      $4484 = HEAP8[$346>>0]|0;
      $4485 = HEAP32[$vinfos161>>2]|0;
      $4486 = ((($4485)) + 67|0);
      HEAP8[$4486>>0] = $4484;
      $4487 = HEAP8[$347>>0]|0;
      $4488 = HEAP32[$vinfos161>>2]|0;
      $4489 = ((($4488)) + 68|0);
      HEAP8[$4489>>0] = $4487;
      $4490 = HEAP8[$348>>0]|0;
      $4491 = HEAP32[$vinfos161>>2]|0;
      $4492 = ((($4491)) + 66|0);
      HEAP8[$4492>>0] = $4490;
      $4493 = HEAP32[$vinfos161>>2]|0;
      $4494 = ((($4493)) + 89|0);
      HEAP8[$4494>>0] = 1;
      $4495 = +HEAPF64[$349>>3];
      $4496 = HEAP32[$vinfos161>>2]|0;
      $4497 = ((($4496)) + 80|0);
      HEAPF64[$4497>>3] = $4495;
      $4498 = HEAP8[$350>>0]|0;
      $4499 = HEAP32[$vinfos161>>2]|0;
      $4500 = ((($4499)) + 91|0);
      HEAP8[$4500>>0] = $4498;
      $4501 = HEAP8[$351>>0]|0;
      $4502 = HEAP32[$vinfos161>>2]|0;
      $4503 = ((($4502)) + 92|0);
      HEAP8[$4503>>0] = $4501;
      $4504 = HEAP8[$352>>0]|0;
      $4505 = HEAP32[$vinfos161>>2]|0;
      $4506 = ((($4505)) + 90|0);
      HEAP8[$4506>>0] = $4504;
      $4507 = HEAP32[$vinfos161>>2]|0;
      $4508 = ((($4507)) + 113|0);
      HEAP8[$4508>>0] = 1;
      $4509 = +HEAPF64[$335>>3];
      $4510 = HEAP32[$vinfos161>>2]|0;
      $4511 = ((($4510)) + 104|0);
      HEAPF64[$4511>>3] = $4509;
      $4512 = HEAP8[$333>>0]|0;
      $4513 = HEAP32[$vinfos161>>2]|0;
      $4514 = ((($4513)) + 115|0);
      HEAP8[$4514>>0] = $4512;
      $4515 = HEAP8[$334>>0]|0;
      $4516 = HEAP32[$vinfos161>>2]|0;
      $4517 = ((($4516)) + 116|0);
      HEAP8[$4517>>0] = $4515;
      $4518 = HEAP8[$330>>0]|0;
      $4519 = HEAP32[$vinfos161>>2]|0;
      $4520 = ((($4519)) + 114|0);
      HEAP8[$4520>>0] = $4518;
      $4521 = HEAP32[$vinfos161>>2]|0;
      $4522 = ((($4521)) + 137|0);
      HEAP8[$4522>>0] = 1;
      $4523 = +HEAPF64[$29>>3];
      $4524 = HEAP32[$vinfos161>>2]|0;
      $4525 = ((($4524)) + 128|0);
      HEAPF64[$4525>>3] = $4523;
      $4526 = HEAP8[$27>>0]|0;
      $4527 = HEAP32[$vinfos161>>2]|0;
      $4528 = ((($4527)) + 139|0);
      HEAP8[$4528>>0] = $4526;
      $4529 = HEAP8[$28>>0]|0;
      $4530 = HEAP32[$vinfos161>>2]|0;
      $4531 = ((($4530)) + 140|0);
      HEAP8[$4531>>0] = $4529;
      $4532 = HEAP8[$26>>0]|0;
      $4533 = HEAP32[$vinfos161>>2]|0;
      $4534 = ((($4533)) + 138|0);
      HEAP8[$4534>>0] = $4532;
      $4535 = HEAP32[$vinfos161>>2]|0;
      $4536 = ((($4535)) + 161|0);
      HEAP8[$4536>>0] = 1;
      $4537 = +HEAPF64[$304>>3];
      $4538 = HEAP32[$vinfos161>>2]|0;
      $4539 = ((($4538)) + 152|0);
      HEAPF64[$4539>>3] = $4537;
      $4540 = HEAP8[$302>>0]|0;
      $4541 = HEAP32[$vinfos161>>2]|0;
      $4542 = ((($4541)) + 163|0);
      HEAP8[$4542>>0] = $4540;
      $4543 = HEAP8[$303>>0]|0;
      $4544 = HEAP32[$vinfos161>>2]|0;
      $4545 = ((($4544)) + 164|0);
      HEAP8[$4545>>0] = $4543;
      $4546 = HEAP8[$299>>0]|0;
      $4547 = HEAP32[$vinfos161>>2]|0;
      $4548 = ((($4547)) + 162|0);
      HEAP8[$4548>>0] = $4546;
      __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree162,0);
      $4549 = HEAP32[$solutions>>2]|0;
      $4550 = ((($4549)) + 8|0);
      $4551 = HEAP32[$4550>>2]|0;
      (FUNCTION_TABLE_iiii[$4551 & 31]($solutions,$vinfos161,$vfree162)|0);
      __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree162);
      __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos161);
      break;
     }
    }
    $689 = +HEAPF64[$0>>3];
    $690 = +HEAPF64[$1>>3];
    $691 = +HEAPF64[$2>>3];
    $692 = $690 * $691;
    $693 = +HEAPF64[$3>>3];
    $694 = $690 * $693;
    $695 = +HEAPF64[$4>>3];
    $696 = $689 * $695;
    $697 = +HEAPF64[$5>>3];
    $698 = +HEAPF64[$6>>3];
    $699 = $697 * $698;
    $700 = +HEAPF64[$7>>3];
    $701 = $698 * $700;
    $702 = $694 * $697;
    $703 = $702 - $701;
    $704 = $694 * $700;
    $705 = $699 + $704;
    $706 = $695 * $703;
    $707 = $691 * $703;
    $708 = $690 * $696;
    $709 = $708 + $707;
    $710 = $689 * $692;
    $711 = $706 - $710;
    $712 = $432 * $695;
    $713 = $689 * $691;
    $714 = $713 * $698;
    $715 = $712 + $714;
    $716 = $432 * $691;
    $717 = $696 * $698;
    $718 = $716 - $717;
    $719 = +HEAPF64[$8>>3];
    $720 = $719 * $711;
    $721 = +HEAPF64[$9>>3];
    $722 = $721 * $705;
    $723 = $722 + $720;
    $724 = +HEAPF64[$10>>3];
    $725 = $724 * $709;
    $726 = $725 + $723;
    HEAPF64[$11>>3] = $726;
    $727 = +HEAPF64[$12>>3];
    $728 = $727 * $711;
    $729 = +HEAPF64[$13>>3];
    $730 = $705 * $729;
    $731 = $728 + $730;
    $732 = +HEAPF64[$14>>3];
    $733 = $709 * $732;
    $734 = $731 + $733;
    HEAPF64[$15>>3] = $734;
    $735 = +HEAPF64[$16>>3];
    $736 = $709 * $735;
    $737 = +HEAPF64[$17>>3];
    $738 = $705 * $737;
    $739 = $736 + $738;
    $740 = +HEAPF64[$18>>3];
    $741 = $711 * $740;
    $742 = $739 + $741;
    HEAPF64[$19>>3] = $742;
    $743 = +HEAPF64[$8>>3];
    $744 = $428 * $743;
    $745 = +HEAPF64[$10>>3];
    $746 = $419 * $745;
    $747 = $744 + $746;
    $748 = +HEAPF64[$9>>3];
    $749 = +HEAPF64[$7>>3];
    $750 = $748 * $749;
    $751 = $689 * $750;
    $752 = $747 - $751;
    HEAPF64[$20>>3] = $752;
    $753 = +HEAPF64[$12>>3];
    $754 = $428 * $753;
    $755 = +HEAPF64[$14>>3];
    $756 = $419 * $755;
    $757 = $754 + $756;
    $758 = +HEAPF64[$13>>3];
    $759 = +HEAPF64[$7>>3];
    $760 = $758 * $759;
    $761 = $689 * $760;
    $762 = $757 - $761;
    HEAPF64[$21>>3] = $762;
    $763 = +HEAPF64[$17>>3];
    $764 = +HEAPF64[$7>>3];
    $765 = $763 * $764;
    $766 = $689 * $765;
    $767 = +HEAPF64[$16>>3];
    $768 = $419 * $767;
    $769 = $768 - $766;
    $770 = +HEAPF64[$18>>3];
    $771 = $428 * $770;
    $772 = $769 + $771;
    HEAPF64[$22>>3] = $772;
    $773 = +HEAPF64[$8>>3];
    $774 = $715 * $773;
    $775 = +HEAPF64[$9>>3];
    $776 = $422 * $775;
    $777 = $774 + $776;
    $778 = +HEAPF64[$10>>3];
    $779 = $718 * $778;
    $780 = $777 + $779;
    HEAPF64[$23>>3] = $780;
    $781 = +HEAPF64[$14>>3];
    $782 = $718 * $781;
    $783 = +HEAPF64[$12>>3];
    $784 = $715 * $783;
    $785 = $782 + $784;
    $786 = +HEAPF64[$13>>3];
    $787 = $422 * $786;
    $788 = $785 + $787;
    HEAPF64[$24>>3] = $788;
    $789 = +HEAPF64[$17>>3];
    $790 = $422 * $789;
    $791 = +HEAPF64[$18>>3];
    $792 = $715 * $791;
    $793 = $790 + $792;
    $794 = +HEAPF64[$16>>3];
    $795 = $718 * $794;
    $796 = $793 + $795;
    HEAPF64[$25>>3] = $796;
    $797 = +HEAPF64[$31>>3];
    $798 = (+__Z5IKabsd($797));
    $799 = $798 < 9.9999999999999995E-7;
    if ($799) {
     $800 = +HEAPF64[$29>>3];
     $801 = (+__Z5IKabsd($800));
     $802 = $801 + 3.14159265358979;
     $803 = (+__Z6IKfmoddd($802,6.2831853071795898));
     $804 = $803 + -3.14159265358979;
     $805 = +HEAPF64[$19>>3];
     $806 = +HEAPF64[$22>>3];
     $807 = +HEAPF64[$24>>3];
     $808 = +HEAPF64[$23>>3];
     $809 = (+__Z5IKabsd($804));
     $810 = $809 < 9.9999999999999995E-7;
     if ($810) {
      $811 = $796 + -1.0;
      $812 = (+__Z5IKabsd($811));
      $813 = $812 < 9.9999999999999995E-7;
      if ($813) {
       $814 = (+__Z5IKabsd($805));
       $815 = $814 < 9.9999999999999995E-7;
       if ($815) {
        $816 = (+__Z5IKabsd($806));
        $817 = $816 < 9.9999999999999995E-7;
        if ($817) {
         $818 = (+__Z5IKabsd($807));
         $819 = $818 < 9.9999999999999995E-7;
         if ($819) {
          $820 = (+__Z5IKabsd($808));
          $821 = $820 < 9.9999999999999995E-7;
          if ($821) {
           HEAP16[$j4valid>>1] = 0;
           HEAP8[$32>>0] = 2;
           $822 = +HEAPF64[$19>>3];
           $823 = +HEAPF64[$22>>3];
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x202,$822,$823,1.9999999999999999E-6);
           $824 = HEAP8[$33>>0]|0;
           $825 = ($824<<24>>24)==(0);
           if ($825) {
            break;
           }
           $826 = +HEAPF64[$x202>>3];
           $827 = -$826;
           HEAPF64[$j4array>>3] = $827;
           $828 = (+__Z5IKsind($827));
           HEAPF64[$sj4array>>3] = $828;
           $829 = (+__Z5IKcosd($827));
           HEAPF64[$cj4array>>3] = $829;
           $830 = 3.14159265358979 - $826;
           HEAPF64[$34>>3] = $830;
           $831 = (+__Z5IKsind($830));
           HEAPF64[$35>>3] = $831;
           $832 = +HEAPF64[$34>>3];
           $833 = (+__Z5IKcosd($832));
           HEAPF64[$36>>3] = $833;
           $834 = +HEAPF64[$j4array>>3];
           $835 = $834 > 3.14159265358979;
           if ($835) {
            $836 = $834 + -6.2831853071795898;
            HEAPF64[$j4array>>3] = $836;
           } else {
            $837 = $834 < -3.14159265358979;
            if ($837) {
             $838 = $834 + 6.2831853071795898;
             HEAPF64[$j4array>>3] = $838;
            }
           }
           HEAP8[$j4valid>>0] = 1;
           $839 = +HEAPF64[$34>>3];
           $840 = $839 > 3.14159265358979;
           if ($840) {
            $841 = $839 + -6.2831853071795898;
            HEAPF64[$34>>3] = $841;
           } else {
            $842 = $839 < -3.14159265358979;
            if ($842) {
             $843 = $839 + 6.2831853071795898;
             HEAPF64[$34>>3] = $843;
            }
           }
           HEAP8[$37>>0] = 1;
           $ij4$0240 = 0;
           while(1) {
            $844 = (($j4valid) + ($ij4$0240)|0);
            $845 = HEAP8[$844>>0]|0;
            $846 = ($845<<24>>24)==(0);
            L159: do {
             if (!($846)) {
              $847 = $ij4$0240&255;
              HEAP8[$38>>0] = $847;
              HEAP8[$39>>0] = -1;
              $iij4$0233 = (($ij4$0240) + 1)|0;
              $848 = ($iij4$0233|0)<(2);
              do {
               if ($848) {
                $849 = (($sj4array) + ($ij4$0240<<3)|0);
                $850 = (($j4valid) + ($iij4$0233)|0);
                $851 = HEAP8[$850>>0]|0;
                $852 = ($851<<24>>24)==(0);
                if ($852) {
                 break;
                }
                $853 = (($cj4array) + ($ij4$0240<<3)|0);
                $854 = +HEAPF64[$853>>3];
                $855 = (($cj4array) + ($iij4$0233<<3)|0);
                $856 = +HEAPF64[$855>>3];
                $857 = $854 - $856;
                $858 = (+__Z5IKabsd($857));
                $859 = $858 < 9.9999999999999995E-7;
                if (!($859)) {
                 break;
                }
                $860 = +HEAPF64[$849>>3];
                $861 = (($sj4array) + ($iij4$0233<<3)|0);
                $862 = +HEAPF64[$861>>3];
                $863 = $860 - $862;
                $864 = (+__Z5IKabsd($863));
                $865 = $864 < 9.9999999999999995E-7;
                if (!($865)) {
                 break;
                }
                HEAP8[$850>>0] = 0;
                $866 = $iij4$0233&255;
                HEAP8[$39>>0] = $866;
               }
              } while(0);
              $867 = (($j4array) + ($ij4$0240<<3)|0);
              $868 = +HEAPF64[$867>>3];
              HEAPF64[$40>>3] = $868;
              $869 = (($cj4array) + ($ij4$0240<<3)|0);
              $870 = +HEAPF64[$869>>3];
              HEAPF64[$41>>3] = $870;
              $871 = (($sj4array) + ($ij4$0240<<3)|0);
              $872 = +HEAPF64[$871>>3];
              HEAPF64[$42>>3] = $872;
              $873 = +HEAPF64[$22>>3];
              $874 = +HEAPF64[$40>>3];
              $875 = (+__Z5IKcosd($874));
              $876 = $873 * $875;
              $877 = +HEAPF64[$19>>3];
              $878 = (+__Z5IKsind($874));
              $879 = $877 * $878;
              $880 = $876 - $879;
              $881 = (+__Z5IKabsd($880));
              $882 = $881 > 5.0000000000000004E-6;
              if ($882) {
               break;
              }
              HEAP8[$43>>0] = 1;
              $883 = +HEAPF64[$15>>3];
              $884 = +HEAPF64[$41>>3];
              $885 = $883 * $884;
              $886 = +HEAPF64[$11>>3];
              $887 = +HEAPF64[$42>>3];
              $888 = $886 * $887;
              $889 = -$888;
              $890 = $889 - $885;
              $891 = (+__Z5IKabsd($890));
              $892 = $891 < 1.9999999999999999E-6;
              do {
               if ($892) {
                $893 = $884 * $886;
                $894 = $883 * $887;
                $895 = $893 - $894;
                $896 = (+__Z5IKabsd($895));
                $897 = $896 < 1.9999999999999999E-6;
                if (!($897)) {
                 break;
                }
                $898 = (+__Z5IKsqrd($890));
                $899 = (+__Z5IKsqrd($895));
                $900 = $898 + $899;
                $901 = $900 + -1.0;
                $902 = (+__Z5IKabsd($901));
                $903 = !($902 <= 1.9999999999999999E-6);
                if (!($903)) {
                 break L159;
                }
               }
              } while(0);
              $904 = +HEAPF64[$41>>3];
              $905 = $883 * $904;
              $906 = +HEAPF64[$11>>3];
              $907 = +HEAPF64[$42>>3];
              $908 = $906 * $907;
              $909 = -$908;
              $910 = $909 - $905;
              $911 = $904 * $906;
              $912 = $883 * $907;
              $913 = $911 - $912;
              $914 = (+__Z7IKatan2dd($910,$913));
              $915 = (+__Z5IKsind($914));
              $916 = (+__Z5IKcosd($914));
              $917 = $914 > 3.14159265358979;
              do {
               if ($917) {
                $918 = $914 + -6.2831853071795898;
                $921 = $918;
               } else {
                $919 = $914 < -3.14159265358979;
                if (!($919)) {
                 $921 = $914;
                 break;
                }
                $920 = $914 + 6.2831853071795898;
                $921 = $920;
               }
              } while(0);
              HEAP8[$44>>0] = 0;
              HEAP8[$45>>0] = -1;
              HEAPF64[$46>>3] = $921;
              HEAPF64[$47>>3] = $916;
              HEAPF64[$48>>3] = $915;
              $922 = +HEAPF64[$46>>3];
              $923 = (+__Z5IKsind($922));
              $924 = (+__Z5IKcosd($922));
              $925 = +HEAPF64[$41>>3];
              $926 = +HEAPF64[$42>>3];
              $927 = $923 * $926;
              $928 = $924 * $925;
              $929 = +HEAPF64[$15>>3];
              $930 = $925 * $929;
              $931 = +HEAPF64[$21>>3];
              $932 = $926 * $931;
              $933 = $930 + $932;
              $934 = $923 + $933;
              $935 = +HEAPF64[$11>>3];
              $936 = +HEAPF64[$20>>3];
              $937 = $926 * $929;
              $938 = $924 + $937;
              $939 = $925 * $931;
              $940 = $938 - $939;
              $941 = $923 * $925;
              $942 = $924 * $926;
              $943 = $941 + $942;
              $944 = $929 + $943;
              $945 = $925 * $935;
              $946 = $926 * $936;
              $947 = $945 + $946;
              $948 = $947 - $924;
              $949 = $927 - $928;
              $950 = $949 + $935;
              $951 = $949 + $931;
              $952 = $936 - $941;
              $953 = $952 - $942;
              $954 = (+__Z5IKabsd($934));
              $955 = $954 > 5.0000000000000004E-6;
              if ($955) {
               break;
              }
              $956 = $926 * $935;
              $957 = $923 + $956;
              $958 = $925 * $936;
              $959 = $957 - $958;
              $960 = (+__Z5IKabsd($959));
              $961 = $960 > 5.0000000000000004E-6;
              if ($961) {
               break;
              }
              $962 = (+__Z5IKabsd($940));
              $963 = $962 > 5.0000000000000004E-6;
              if ($963) {
               break;
              }
              $964 = (+__Z5IKabsd($944));
              $965 = $964 > 5.0000000000000004E-6;
              if ($965) {
               break;
              }
              $966 = (+__Z5IKabsd($948));
              $967 = $966 > 5.0000000000000004E-6;
              if ($967) {
               break;
              }
              $968 = (+__Z5IKabsd($950));
              $969 = $968 > 5.0000000000000004E-6;
              if ($969) {
               break;
              }
              $970 = (+__Z5IKabsd($951));
              $971 = $970 > 5.0000000000000004E-6;
              if ($971) {
               break;
              }
              $972 = (+__Z5IKabsd($953));
              $973 = $972 > 5.0000000000000004E-6;
              if ($973) {
               break;
              }
              __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos,7);
              $974 = HEAP32[$vinfos>>2]|0;
              $975 = ((($974)) + 17|0);
              HEAP8[$975>>0] = 1;
              $976 = +HEAPF64[$this>>3];
              $977 = HEAP32[$vinfos>>2]|0;
              $978 = ((($977)) + 8|0);
              HEAPF64[$978>>3] = $976;
              $979 = HEAP8[$49>>0]|0;
              $980 = HEAP32[$vinfos>>2]|0;
              $981 = ((($980)) + 19|0);
              HEAP8[$981>>0] = $979;
              $982 = HEAP8[$50>>0]|0;
              $983 = HEAP32[$vinfos>>2]|0;
              $984 = ((($983)) + 20|0);
              HEAP8[$984>>0] = $982;
              $985 = HEAP8[$51>>0]|0;
              $986 = HEAP32[$vinfos>>2]|0;
              $987 = ((($986)) + 18|0);
              HEAP8[$987>>0] = $985;
              $988 = HEAP32[$vinfos>>2]|0;
              $989 = ((($988)) + 41|0);
              HEAP8[$989>>0] = 1;
              $990 = +HEAPF64[$52>>3];
              $991 = HEAP32[$vinfos>>2]|0;
              $992 = ((($991)) + 32|0);
              HEAPF64[$992>>3] = $990;
              $993 = HEAP8[$53>>0]|0;
              $994 = HEAP32[$vinfos>>2]|0;
              $995 = ((($994)) + 43|0);
              HEAP8[$995>>0] = $993;
              $996 = HEAP8[$54>>0]|0;
              $997 = HEAP32[$vinfos>>2]|0;
              $998 = ((($997)) + 44|0);
              HEAP8[$998>>0] = $996;
              $999 = HEAP8[$55>>0]|0;
              $1000 = HEAP32[$vinfos>>2]|0;
              $1001 = ((($1000)) + 42|0);
              HEAP8[$1001>>0] = $999;
              $1002 = HEAP32[$vinfos>>2]|0;
              $1003 = ((($1002)) + 65|0);
              HEAP8[$1003>>0] = 1;
              $1004 = +HEAPF64[$56>>3];
              $1005 = HEAP32[$vinfos>>2]|0;
              $1006 = ((($1005)) + 56|0);
              HEAPF64[$1006>>3] = $1004;
              $1007 = HEAP8[$57>>0]|0;
              $1008 = HEAP32[$vinfos>>2]|0;
              $1009 = ((($1008)) + 67|0);
              HEAP8[$1009>>0] = $1007;
              $1010 = HEAP8[$58>>0]|0;
              $1011 = HEAP32[$vinfos>>2]|0;
              $1012 = ((($1011)) + 68|0);
              HEAP8[$1012>>0] = $1010;
              $1013 = HEAP8[$59>>0]|0;
              $1014 = HEAP32[$vinfos>>2]|0;
              $1015 = ((($1014)) + 66|0);
              HEAP8[$1015>>0] = $1013;
              $1016 = HEAP32[$vinfos>>2]|0;
              $1017 = ((($1016)) + 89|0);
              HEAP8[$1017>>0] = 1;
              $1018 = +HEAPF64[$60>>3];
              $1019 = HEAP32[$vinfos>>2]|0;
              $1020 = ((($1019)) + 80|0);
              HEAPF64[$1020>>3] = $1018;
              $1021 = HEAP8[$61>>0]|0;
              $1022 = HEAP32[$vinfos>>2]|0;
              $1023 = ((($1022)) + 91|0);
              HEAP8[$1023>>0] = $1021;
              $1024 = HEAP8[$62>>0]|0;
              $1025 = HEAP32[$vinfos>>2]|0;
              $1026 = ((($1025)) + 92|0);
              HEAP8[$1026>>0] = $1024;
              $1027 = HEAP8[$63>>0]|0;
              $1028 = HEAP32[$vinfos>>2]|0;
              $1029 = ((($1028)) + 90|0);
              HEAP8[$1029>>0] = $1027;
              $1030 = HEAP32[$vinfos>>2]|0;
              $1031 = ((($1030)) + 113|0);
              HEAP8[$1031>>0] = 1;
              $1032 = +HEAPF64[$40>>3];
              $1033 = HEAP32[$vinfos>>2]|0;
              $1034 = ((($1033)) + 104|0);
              HEAPF64[$1034>>3] = $1032;
              $1035 = HEAP8[$38>>0]|0;
              $1036 = HEAP32[$vinfos>>2]|0;
              $1037 = ((($1036)) + 115|0);
              HEAP8[$1037>>0] = $1035;
              $1038 = HEAP8[$39>>0]|0;
              $1039 = HEAP32[$vinfos>>2]|0;
              $1040 = ((($1039)) + 116|0);
              HEAP8[$1040>>0] = $1038;
              $1041 = HEAP8[$32>>0]|0;
              $1042 = HEAP32[$vinfos>>2]|0;
              $1043 = ((($1042)) + 114|0);
              HEAP8[$1043>>0] = $1041;
              $1044 = HEAP32[$vinfos>>2]|0;
              $1045 = ((($1044)) + 137|0);
              HEAP8[$1045>>0] = 1;
              $1046 = +HEAPF64[$29>>3];
              $1047 = HEAP32[$vinfos>>2]|0;
              $1048 = ((($1047)) + 128|0);
              HEAPF64[$1048>>3] = $1046;
              $1049 = HEAP8[$27>>0]|0;
              $1050 = HEAP32[$vinfos>>2]|0;
              $1051 = ((($1050)) + 139|0);
              HEAP8[$1051>>0] = $1049;
              $1052 = HEAP8[$28>>0]|0;
              $1053 = HEAP32[$vinfos>>2]|0;
              $1054 = ((($1053)) + 140|0);
              HEAP8[$1054>>0] = $1052;
              $1055 = HEAP8[$26>>0]|0;
              $1056 = HEAP32[$vinfos>>2]|0;
              $1057 = ((($1056)) + 138|0);
              HEAP8[$1057>>0] = $1055;
              $1058 = HEAP32[$vinfos>>2]|0;
              $1059 = ((($1058)) + 161|0);
              HEAP8[$1059>>0] = 1;
              $1060 = +HEAPF64[$46>>3];
              $1061 = HEAP32[$vinfos>>2]|0;
              $1062 = ((($1061)) + 152|0);
              HEAPF64[$1062>>3] = $1060;
              $1063 = HEAP8[$44>>0]|0;
              $1064 = HEAP32[$vinfos>>2]|0;
              $1065 = ((($1064)) + 163|0);
              HEAP8[$1065>>0] = $1063;
              $1066 = HEAP8[$45>>0]|0;
              $1067 = HEAP32[$vinfos>>2]|0;
              $1068 = ((($1067)) + 164|0);
              HEAP8[$1068>>0] = $1066;
              $1069 = HEAP8[$43>>0]|0;
              $1070 = HEAP32[$vinfos>>2]|0;
              $1071 = ((($1070)) + 162|0);
              HEAP8[$1071>>0] = $1069;
              __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree,0);
              $1072 = HEAP32[$solutions>>2]|0;
              $1073 = ((($1072)) + 8|0);
              $1074 = HEAP32[$1073>>2]|0;
              (FUNCTION_TABLE_iiii[$1074 & 31]($solutions,$vinfos,$vfree)|0);
              __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree);
              __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos);
             }
            } while(0);
            $1075 = (($ij4$0240) + 1)|0;
            $1076 = ($1075|0)<(2);
            if ($1076) {
             $ij4$0240 = $1075;
            } else {
             break L7;
            }
           }
          }
         }
        }
       }
      }
     }
     $1077 = +HEAPF64[$29>>3];
     $1078 = $1077 + -3.14159265358979;
     $1079 = (+__Z5IKabsd($1078));
     $1080 = $1079 + 3.14159265358979;
     $1081 = (+__Z6IKfmoddd($1080,6.2831853071795898));
     $1082 = $1081 + -3.14159265358979;
     $1083 = +HEAPF64[$19>>3];
     $1084 = +HEAPF64[$22>>3];
     $1085 = +HEAPF64[$24>>3];
     $1086 = +HEAPF64[$23>>3];
     $1087 = (+__Z5IKabsd($1082));
     $1088 = $1087 < 9.9999999999999995E-7;
     if (!($1088)) {
      break;
     }
     $1089 = +HEAPF64[$25>>3];
     $1090 = $1089 + 1.0;
     $1091 = (+__Z5IKabsd($1090));
     $1092 = $1091 < 9.9999999999999995E-7;
     if (!($1092)) {
      break;
     }
     $1093 = (+__Z5IKabsd($1083));
     $1094 = $1093 < 9.9999999999999995E-7;
     if (!($1094)) {
      break;
     }
     $1095 = (+__Z5IKabsd($1084));
     $1096 = $1095 < 9.9999999999999995E-7;
     if (!($1096)) {
      break;
     }
     $1097 = (+__Z5IKabsd($1085));
     $1098 = $1097 < 9.9999999999999995E-7;
     if (!($1098)) {
      break;
     }
     $1099 = (+__Z5IKabsd($1086));
     $1100 = $1099 < 9.9999999999999995E-7;
     if (!($1100)) {
      break;
     }
     HEAP16[$j4valid7>>1] = 0;
     HEAP8[$64>>0] = 2;
     $1101 = +HEAPF64[$19>>3];
     $1102 = +HEAPF64[$22>>3];
     __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x211,$1101,$1102,1.9999999999999999E-6);
     $1103 = HEAP8[$65>>0]|0;
     $1104 = ($1103<<24>>24)==(0);
     if ($1104) {
      break;
     }
     $1105 = +HEAPF64[$x211>>3];
     $1106 = -$1105;
     HEAPF64[$j4array4>>3] = $1106;
     $1107 = (+__Z5IKsind($1106));
     HEAPF64[$sj4array6>>3] = $1107;
     $1108 = (+__Z5IKcosd($1106));
     HEAPF64[$cj4array5>>3] = $1108;
     $1109 = 3.14159265358979 - $1105;
     HEAPF64[$66>>3] = $1109;
     $1110 = (+__Z5IKsind($1109));
     HEAPF64[$67>>3] = $1110;
     $1111 = +HEAPF64[$66>>3];
     $1112 = (+__Z5IKcosd($1111));
     HEAPF64[$68>>3] = $1112;
     $1113 = +HEAPF64[$j4array4>>3];
     $1114 = $1113 > 3.14159265358979;
     if ($1114) {
      $1115 = $1113 + -6.2831853071795898;
      HEAPF64[$j4array4>>3] = $1115;
     } else {
      $1116 = $1113 < -3.14159265358979;
      if ($1116) {
       $1117 = $1113 + 6.2831853071795898;
       HEAPF64[$j4array4>>3] = $1117;
      }
     }
     HEAP8[$j4valid7>>0] = 1;
     $1118 = +HEAPF64[$66>>3];
     $1119 = $1118 > 3.14159265358979;
     if ($1119) {
      $1120 = $1118 + -6.2831853071795898;
      HEAPF64[$66>>3] = $1120;
     } else {
      $1121 = $1118 < -3.14159265358979;
      if ($1121) {
       $1122 = $1118 + 6.2831853071795898;
       HEAPF64[$66>>3] = $1122;
      }
     }
     HEAP8[$69>>0] = 1;
     $ij48$0232 = 0;
     while(1) {
      $1123 = (($j4valid7) + ($ij48$0232)|0);
      $1124 = HEAP8[$1123>>0]|0;
      $1125 = ($1124<<24>>24)==(0);
      L206: do {
       if (!($1125)) {
        $1126 = $ij48$0232&255;
        HEAP8[$70>>0] = $1126;
        HEAP8[$71>>0] = -1;
        $iij49$0225 = (($ij48$0232) + 1)|0;
        $1127 = ($iij49$0225|0)<(2);
        do {
         if ($1127) {
          $1128 = (($sj4array6) + ($ij48$0232<<3)|0);
          $1129 = (($j4valid7) + ($iij49$0225)|0);
          $1130 = HEAP8[$1129>>0]|0;
          $1131 = ($1130<<24>>24)==(0);
          if ($1131) {
           break;
          }
          $1132 = (($cj4array5) + ($ij48$0232<<3)|0);
          $1133 = +HEAPF64[$1132>>3];
          $1134 = (($cj4array5) + ($iij49$0225<<3)|0);
          $1135 = +HEAPF64[$1134>>3];
          $1136 = $1133 - $1135;
          $1137 = (+__Z5IKabsd($1136));
          $1138 = $1137 < 9.9999999999999995E-7;
          if (!($1138)) {
           break;
          }
          $1139 = +HEAPF64[$1128>>3];
          $1140 = (($sj4array6) + ($iij49$0225<<3)|0);
          $1141 = +HEAPF64[$1140>>3];
          $1142 = $1139 - $1141;
          $1143 = (+__Z5IKabsd($1142));
          $1144 = $1143 < 9.9999999999999995E-7;
          if (!($1144)) {
           break;
          }
          HEAP8[$1129>>0] = 0;
          $1145 = $iij49$0225&255;
          HEAP8[$71>>0] = $1145;
         }
        } while(0);
        $1146 = (($j4array4) + ($ij48$0232<<3)|0);
        $1147 = +HEAPF64[$1146>>3];
        HEAPF64[$72>>3] = $1147;
        $1148 = (($cj4array5) + ($ij48$0232<<3)|0);
        $1149 = +HEAPF64[$1148>>3];
        HEAPF64[$73>>3] = $1149;
        $1150 = (($sj4array6) + ($ij48$0232<<3)|0);
        $1151 = +HEAPF64[$1150>>3];
        HEAPF64[$74>>3] = $1151;
        $1152 = +HEAPF64[$22>>3];
        $1153 = +HEAPF64[$72>>3];
        $1154 = (+__Z5IKcosd($1153));
        $1155 = $1152 * $1154;
        $1156 = +HEAPF64[$19>>3];
        $1157 = (+__Z5IKsind($1153));
        $1158 = $1156 * $1157;
        $1159 = $1155 - $1158;
        $1160 = (+__Z5IKabsd($1159));
        $1161 = $1160 > 5.0000000000000004E-6;
        if ($1161) {
         break;
        }
        HEAP8[$75>>0] = 1;
        $1162 = +HEAPF64[$11>>3];
        $1163 = +HEAPF64[$73>>3];
        $1164 = +HEAPF64[$15>>3];
        $1165 = $1163 * $1164;
        $1166 = +HEAPF64[$74>>3];
        $1167 = $1162 * $1166;
        $1168 = $1165 - $1167;
        $1169 = (+__Z5IKabsd($1168));
        $1170 = $1169 < 1.9999999999999999E-6;
        do {
         if ($1170) {
          $1171 = $1164 * $1166;
          $1172 = $1162 * $1163;
          $1173 = -$1172;
          $1174 = $1173 - $1171;
          $1175 = (+__Z5IKabsd($1174));
          $1176 = $1175 < 1.9999999999999999E-6;
          if (!($1176)) {
           break;
          }
          $1177 = (+__Z5IKsqrd($1168));
          $1178 = (+__Z5IKsqrd($1174));
          $1179 = $1177 + $1178;
          $1180 = $1179 + -1.0;
          $1181 = (+__Z5IKabsd($1180));
          $1182 = !($1181 <= 1.9999999999999999E-6);
          if (!($1182)) {
           break L206;
          }
         }
        } while(0);
        $1183 = +HEAPF64[$73>>3];
        $1184 = +HEAPF64[$15>>3];
        $1185 = $1183 * $1184;
        $1186 = +HEAPF64[$74>>3];
        $1187 = $1162 * $1186;
        $1188 = $1185 - $1187;
        $1189 = $1184 * $1186;
        $1190 = $1162 * $1183;
        $1191 = -$1190;
        $1192 = $1191 - $1189;
        $1193 = (+__Z7IKatan2dd($1188,$1192));
        $1194 = (+__Z5IKsind($1193));
        $1195 = (+__Z5IKcosd($1193));
        $1196 = $1193 > 3.14159265358979;
        do {
         if ($1196) {
          $1197 = $1193 + -6.2831853071795898;
          $1200 = $1197;
         } else {
          $1198 = $1193 < -3.14159265358979;
          if (!($1198)) {
           $1200 = $1193;
           break;
          }
          $1199 = $1193 + 6.2831853071795898;
          $1200 = $1199;
         }
        } while(0);
        HEAP8[$76>>0] = 0;
        HEAP8[$77>>0] = -1;
        HEAPF64[$78>>3] = $1200;
        HEAPF64[$79>>3] = $1195;
        HEAPF64[$80>>3] = $1194;
        $1201 = +HEAPF64[$78>>3];
        $1202 = (+__Z5IKcosd($1201));
        $1203 = (+__Z5IKsind($1201));
        $1204 = +HEAPF64[$73>>3];
        $1205 = +HEAPF64[$74>>3];
        $1206 = $1202 * $1205;
        $1207 = $1203 * $1204;
        $1208 = +HEAPF64[$11>>3];
        $1209 = $1204 * $1208;
        $1210 = +HEAPF64[$20>>3];
        $1211 = $1205 * $1210;
        $1212 = $1209 + $1211;
        $1213 = $1202 + $1212;
        $1214 = +HEAPF64[$21>>3];
        $1215 = $1204 * $1214;
        $1216 = +HEAPF64[$15>>3];
        $1217 = $1205 * $1216;
        $1218 = $1217 - $1215;
        $1219 = $1202 + $1218;
        $1220 = $1204 * $1216;
        $1221 = $1205 * $1214;
        $1222 = $1221 + $1220;
        $1223 = $1222 - $1203;
        $1224 = $1202 * $1204;
        $1225 = $1224 + $1208;
        $1226 = $1203 * $1205;
        $1227 = $1226 + $1225;
        $1228 = $1206 + $1216;
        $1229 = $1228 - $1207;
        $1230 = $1206 + $1210;
        $1231 = $1230 - $1207;
        $1232 = -$1224;
        $1233 = $1232 - $1226;
        $1234 = $1233 + $1214;
        $1235 = (+__Z5IKabsd($1213));
        $1236 = $1235 > 5.0000000000000004E-6;
        if ($1236) {
         break;
        }
        $1237 = $1205 * $1208;
        $1238 = $1204 * $1210;
        $1239 = $1237 - $1238;
        $1240 = $1203 + $1239;
        $1241 = (+__Z5IKabsd($1240));
        $1242 = $1241 > 5.0000000000000004E-6;
        if ($1242) {
         break;
        }
        $1243 = (+__Z5IKabsd($1219));
        $1244 = $1243 > 5.0000000000000004E-6;
        if ($1244) {
         break;
        }
        $1245 = (+__Z5IKabsd($1223));
        $1246 = $1245 > 5.0000000000000004E-6;
        if ($1246) {
         break;
        }
        $1247 = (+__Z5IKabsd($1227));
        $1248 = $1247 > 5.0000000000000004E-6;
        if ($1248) {
         break;
        }
        $1249 = (+__Z5IKabsd($1229));
        $1250 = $1249 > 5.0000000000000004E-6;
        if ($1250) {
         break;
        }
        $1251 = (+__Z5IKabsd($1231));
        $1252 = $1251 > 5.0000000000000004E-6;
        if ($1252) {
         break;
        }
        $1253 = (+__Z5IKabsd($1234));
        $1254 = $1253 > 5.0000000000000004E-6;
        if ($1254) {
         break;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos19,7);
        $1255 = HEAP32[$vinfos19>>2]|0;
        $1256 = ((($1255)) + 17|0);
        HEAP8[$1256>>0] = 1;
        $1257 = +HEAPF64[$this>>3];
        $1258 = HEAP32[$vinfos19>>2]|0;
        $1259 = ((($1258)) + 8|0);
        HEAPF64[$1259>>3] = $1257;
        $1260 = HEAP8[$81>>0]|0;
        $1261 = HEAP32[$vinfos19>>2]|0;
        $1262 = ((($1261)) + 19|0);
        HEAP8[$1262>>0] = $1260;
        $1263 = HEAP8[$82>>0]|0;
        $1264 = HEAP32[$vinfos19>>2]|0;
        $1265 = ((($1264)) + 20|0);
        HEAP8[$1265>>0] = $1263;
        $1266 = HEAP8[$83>>0]|0;
        $1267 = HEAP32[$vinfos19>>2]|0;
        $1268 = ((($1267)) + 18|0);
        HEAP8[$1268>>0] = $1266;
        $1269 = HEAP32[$vinfos19>>2]|0;
        $1270 = ((($1269)) + 41|0);
        HEAP8[$1270>>0] = 1;
        $1271 = +HEAPF64[$84>>3];
        $1272 = HEAP32[$vinfos19>>2]|0;
        $1273 = ((($1272)) + 32|0);
        HEAPF64[$1273>>3] = $1271;
        $1274 = HEAP8[$85>>0]|0;
        $1275 = HEAP32[$vinfos19>>2]|0;
        $1276 = ((($1275)) + 43|0);
        HEAP8[$1276>>0] = $1274;
        $1277 = HEAP8[$86>>0]|0;
        $1278 = HEAP32[$vinfos19>>2]|0;
        $1279 = ((($1278)) + 44|0);
        HEAP8[$1279>>0] = $1277;
        $1280 = HEAP8[$87>>0]|0;
        $1281 = HEAP32[$vinfos19>>2]|0;
        $1282 = ((($1281)) + 42|0);
        HEAP8[$1282>>0] = $1280;
        $1283 = HEAP32[$vinfos19>>2]|0;
        $1284 = ((($1283)) + 65|0);
        HEAP8[$1284>>0] = 1;
        $1285 = +HEAPF64[$88>>3];
        $1286 = HEAP32[$vinfos19>>2]|0;
        $1287 = ((($1286)) + 56|0);
        HEAPF64[$1287>>3] = $1285;
        $1288 = HEAP8[$89>>0]|0;
        $1289 = HEAP32[$vinfos19>>2]|0;
        $1290 = ((($1289)) + 67|0);
        HEAP8[$1290>>0] = $1288;
        $1291 = HEAP8[$90>>0]|0;
        $1292 = HEAP32[$vinfos19>>2]|0;
        $1293 = ((($1292)) + 68|0);
        HEAP8[$1293>>0] = $1291;
        $1294 = HEAP8[$91>>0]|0;
        $1295 = HEAP32[$vinfos19>>2]|0;
        $1296 = ((($1295)) + 66|0);
        HEAP8[$1296>>0] = $1294;
        $1297 = HEAP32[$vinfos19>>2]|0;
        $1298 = ((($1297)) + 89|0);
        HEAP8[$1298>>0] = 1;
        $1299 = +HEAPF64[$92>>3];
        $1300 = HEAP32[$vinfos19>>2]|0;
        $1301 = ((($1300)) + 80|0);
        HEAPF64[$1301>>3] = $1299;
        $1302 = HEAP8[$93>>0]|0;
        $1303 = HEAP32[$vinfos19>>2]|0;
        $1304 = ((($1303)) + 91|0);
        HEAP8[$1304>>0] = $1302;
        $1305 = HEAP8[$94>>0]|0;
        $1306 = HEAP32[$vinfos19>>2]|0;
        $1307 = ((($1306)) + 92|0);
        HEAP8[$1307>>0] = $1305;
        $1308 = HEAP8[$95>>0]|0;
        $1309 = HEAP32[$vinfos19>>2]|0;
        $1310 = ((($1309)) + 90|0);
        HEAP8[$1310>>0] = $1308;
        $1311 = HEAP32[$vinfos19>>2]|0;
        $1312 = ((($1311)) + 113|0);
        HEAP8[$1312>>0] = 1;
        $1313 = +HEAPF64[$72>>3];
        $1314 = HEAP32[$vinfos19>>2]|0;
        $1315 = ((($1314)) + 104|0);
        HEAPF64[$1315>>3] = $1313;
        $1316 = HEAP8[$70>>0]|0;
        $1317 = HEAP32[$vinfos19>>2]|0;
        $1318 = ((($1317)) + 115|0);
        HEAP8[$1318>>0] = $1316;
        $1319 = HEAP8[$71>>0]|0;
        $1320 = HEAP32[$vinfos19>>2]|0;
        $1321 = ((($1320)) + 116|0);
        HEAP8[$1321>>0] = $1319;
        $1322 = HEAP8[$64>>0]|0;
        $1323 = HEAP32[$vinfos19>>2]|0;
        $1324 = ((($1323)) + 114|0);
        HEAP8[$1324>>0] = $1322;
        $1325 = HEAP32[$vinfos19>>2]|0;
        $1326 = ((($1325)) + 137|0);
        HEAP8[$1326>>0] = 1;
        $1327 = +HEAPF64[$29>>3];
        $1328 = HEAP32[$vinfos19>>2]|0;
        $1329 = ((($1328)) + 128|0);
        HEAPF64[$1329>>3] = $1327;
        $1330 = HEAP8[$27>>0]|0;
        $1331 = HEAP32[$vinfos19>>2]|0;
        $1332 = ((($1331)) + 139|0);
        HEAP8[$1332>>0] = $1330;
        $1333 = HEAP8[$28>>0]|0;
        $1334 = HEAP32[$vinfos19>>2]|0;
        $1335 = ((($1334)) + 140|0);
        HEAP8[$1335>>0] = $1333;
        $1336 = HEAP8[$26>>0]|0;
        $1337 = HEAP32[$vinfos19>>2]|0;
        $1338 = ((($1337)) + 138|0);
        HEAP8[$1338>>0] = $1336;
        $1339 = HEAP32[$vinfos19>>2]|0;
        $1340 = ((($1339)) + 161|0);
        HEAP8[$1340>>0] = 1;
        $1341 = +HEAPF64[$78>>3];
        $1342 = HEAP32[$vinfos19>>2]|0;
        $1343 = ((($1342)) + 152|0);
        HEAPF64[$1343>>3] = $1341;
        $1344 = HEAP8[$76>>0]|0;
        $1345 = HEAP32[$vinfos19>>2]|0;
        $1346 = ((($1345)) + 163|0);
        HEAP8[$1346>>0] = $1344;
        $1347 = HEAP8[$77>>0]|0;
        $1348 = HEAP32[$vinfos19>>2]|0;
        $1349 = ((($1348)) + 164|0);
        HEAP8[$1349>>0] = $1347;
        $1350 = HEAP8[$75>>0]|0;
        $1351 = HEAP32[$vinfos19>>2]|0;
        $1352 = ((($1351)) + 162|0);
        HEAP8[$1352>>0] = $1350;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree20,0);
        $1353 = HEAP32[$solutions>>2]|0;
        $1354 = ((($1353)) + 8|0);
        $1355 = HEAP32[$1354>>2]|0;
        (FUNCTION_TABLE_iiii[$1355 & 31]($solutions,$vinfos19,$vfree20)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree20);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos19);
       }
      } while(0);
      $1356 = (($ij48$0232) + 1)|0;
      $1357 = ($1356|0)<(2);
      if ($1357) {
       $ij48$0232 = $1356;
      } else {
       break L7;
      }
     }
    }
    HEAP8[$96>>0] = 1;
    $1358 = +HEAPF64[$31>>3];
    __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x220,$1358,-1);
    $1359 = HEAP8[$97>>0]|0;
    $1360 = ($1359<<24>>24)==(0);
    if (!($1360)) {
     $1361 = +HEAPF64[$x220>>3];
     $1362 = +HEAPF64[$22>>3];
     __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x221,$1362,-1);
     $1363 = HEAP8[$98>>0]|0;
     $1364 = ($1363<<24>>24)==(0);
     if (!($1364)) {
      $1365 = +HEAPF64[$x221>>3];
      $1366 = $1361 * $1365;
      $1367 = +HEAPF64[$19>>3];
      $1368 = $1367 * $1367;
      $1369 = $1368 + -1.0;
      $1370 = +HEAPF64[$30>>3];
      $1371 = $1370 * $1370;
      $1372 = $1369 + $1371;
      $1373 = $1366 * $1372;
      $1374 = (+__Z5IKabsd($1373));
      $1375 = $1374 < 1.9999999999999999E-6;
      if ($1375) {
       $1376 = $1361 * $1367;
       $1377 = -$1376;
       $1378 = (+__Z5IKabsd($1377));
       $1379 = $1378 < 1.9999999999999999E-6;
       if ($1379) {
        $1380 = (+__Z5IKsqrd($1373));
        $1381 = (+__Z5IKsqrd($1377));
        $1382 = $1380 + $1381;
        $1383 = $1382 + -1.0;
        $1384 = (+__Z5IKabsd($1383));
        $1385 = !($1384 <= 1.9999999999999999E-6);
        if (!($1385)) {
         break;
        }
       }
      }
      $1386 = +HEAPF64[$x221>>3];
      $1387 = $1361 * $1386;
      $1388 = +HEAPF64[$19>>3];
      $1389 = $1388 * $1388;
      $1390 = $1389 + -1.0;
      $1391 = +HEAPF64[$30>>3];
      $1392 = $1391 * $1391;
      $1393 = $1390 + $1392;
      $1394 = $1387 * $1393;
      $1395 = $1361 * $1388;
      $1396 = -$1395;
      $1397 = (+__Z7IKatan2dd($1394,$1396));
      $1398 = (+__Z5IKsind($1397));
      $1399 = (+__Z5IKcosd($1397));
      $1400 = $1397 > 3.14159265358979;
      if ($1400) {
       $1401 = $1397 + -6.2831853071795898;
       $1404 = $1401;
      } else {
       $1402 = $1397 < -3.14159265358979;
       if ($1402) {
        $1403 = $1397 + 6.2831853071795898;
        $1404 = $1403;
       } else {
        $1404 = $1397;
       }
      }
      HEAP8[$99>>0] = 0;
      HEAP8[$100>>0] = -1;
      HEAPF64[$101>>3] = $1404;
      HEAPF64[$102>>3] = $1399;
      HEAPF64[$103>>3] = $1398;
      $1405 = +HEAPF64[$101>>3];
      $1406 = (+__Z5IKcosd($1405));
      $1407 = (+__Z5IKsind($1405));
      $1408 = +HEAPF64[$31>>3];
      $1409 = +HEAPF64[$22>>3];
      $1410 = $1407 * $1409;
      $1411 = +HEAPF64[$19>>3];
      $1412 = $1406 * $1411;
      $1413 = $1406 * $1408;
      $1414 = $1413 + $1411;
      $1415 = $1406 * $1409;
      $1416 = $1407 * $1411;
      $1417 = $1415 - $1416;
      $1418 = $1408 + $1410;
      $1419 = $1418 + $1412;
      $1420 = +HEAPF64[$25>>3];
      $1421 = $1408 * $1420;
      $1422 = +HEAPF64[$30>>3];
      $1423 = $1410 * $1422;
      $1424 = $1421 + $1423;
      $1425 = $1412 * $1422;
      $1426 = $1425 + $1424;
      $1427 = +HEAPF64[$23>>3];
      $1428 = $1422 * $1427;
      $1429 = +HEAPF64[$20>>3];
      $1430 = $1407 * $1429;
      $1431 = $1408 * $1430;
      $1432 = $1428 - $1431;
      $1433 = +HEAPF64[$11>>3];
      $1434 = $1406 * $1433;
      $1435 = $1408 * $1434;
      $1436 = $1432 - $1435;
      $1437 = +HEAPF64[$15>>3];
      $1438 = $1406 * $1437;
      $1439 = $1408 * $1438;
      $1440 = +HEAPF64[$24>>3];
      $1441 = $1422 * $1440;
      $1442 = $1441 - $1439;
      $1443 = +HEAPF64[$21>>3];
      $1444 = $1407 * $1443;
      $1445 = $1408 * $1444;
      $1446 = $1442 - $1445;
      $1447 = -$1408;
      $1448 = $1412 * $1447;
      $1449 = $1448 + -1.0;
      $1450 = $1410 * $1447;
      $1451 = $1450 + $1449;
      $1452 = $1420 * $1422;
      $1453 = $1452 + $1451;
      $1454 = (+__Z5IKabsd($1414));
      $1455 = $1454 > 5.0000000000000004E-6;
      if (!($1455)) {
       $1456 = $1407 * $1408;
       $1457 = $1456 + $1409;
       $1458 = (+__Z5IKabsd($1457));
       $1459 = $1458 > 5.0000000000000004E-6;
       if (!($1459)) {
        $1460 = (+__Z5IKabsd($1417));
        $1461 = $1460 > 5.0000000000000004E-6;
        if (!($1461)) {
         $1462 = (+__Z5IKabsd($1419));
         $1463 = $1462 > 5.0000000000000004E-6;
         if (!($1463)) {
          $1464 = (+__Z5IKabsd($1426));
          $1465 = $1464 > 5.0000000000000004E-6;
          if (!($1465)) {
           $1466 = (+__Z5IKabsd($1436));
           $1467 = $1466 > 5.0000000000000004E-6;
           if (!($1467)) {
            $1468 = (+__Z5IKabsd($1446));
            $1469 = $1468 > 5.0000000000000004E-6;
            if (!($1469)) {
             $1470 = (+__Z5IKabsd($1453));
             $1471 = $1470 > 5.0000000000000004E-6;
             if (!($1471)) {
              $1472 = +HEAPF64[$0>>3];
              $1473 = +HEAPF64[$1>>3];
              $1474 = +HEAPF64[$2>>3];
              $1475 = $1473 * $1474;
              $1476 = +HEAPF64[$3>>3];
              $1477 = $1473 * $1476;
              $1478 = +HEAPF64[$4>>3];
              $1479 = $1472 * $1478;
              $1480 = +HEAPF64[$5>>3];
              $1481 = +HEAPF64[$6>>3];
              $1482 = $1480 * $1481;
              $1483 = +HEAPF64[$7>>3];
              $1484 = $1481 * $1483;
              $1485 = $1477 * $1480;
              $1486 = $1485 - $1484;
              $1487 = $1477 * $1483;
              $1488 = $1482 + $1487;
              $1489 = $1478 * $1486;
              $1490 = $1473 * $1479;
              $1491 = $1474 * $1486;
              $1492 = $1490 + $1491;
              $1493 = $1472 * $1475;
              $1494 = $1489 - $1493;
              $1495 = $432 * $1478;
              $1496 = $1472 * $1474;
              $1497 = $1496 * $1481;
              $1498 = $1495 + $1497;
              $1499 = $1479 * $1481;
              $1500 = $432 * $1474;
              $1501 = $1500 - $1499;
              $1502 = +HEAPF64[$8>>3];
              $1503 = $1502 * $1494;
              $1504 = +HEAPF64[$9>>3];
              $1505 = $1504 * $1488;
              $1506 = $1505 + $1503;
              $1507 = +HEAPF64[$10>>3];
              $1508 = $1507 * $1492;
              $1509 = $1508 + $1506;
              HEAPF64[$11>>3] = $1509;
              $1510 = +HEAPF64[$12>>3];
              $1511 = $1510 * $1494;
              $1512 = +HEAPF64[$14>>3];
              $1513 = $1492 * $1512;
              $1514 = $1511 + $1513;
              $1515 = +HEAPF64[$13>>3];
              $1516 = $1488 * $1515;
              $1517 = $1514 + $1516;
              HEAPF64[$15>>3] = $1517;
              $1518 = +HEAPF64[$18>>3];
              $1519 = $1494 * $1518;
              $1520 = +HEAPF64[$16>>3];
              $1521 = $1492 * $1520;
              $1522 = $1519 + $1521;
              $1523 = +HEAPF64[$17>>3];
              $1524 = $1488 * $1523;
              $1525 = $1522 + $1524;
              HEAPF64[$19>>3] = $1525;
              $1526 = +HEAPF64[$9>>3];
              $1527 = +HEAPF64[$7>>3];
              $1528 = $1526 * $1527;
              $1529 = $1472 * $1528;
              $1530 = +HEAPF64[$10>>3];
              $1531 = $419 * $1530;
              $1532 = $1531 - $1529;
              $1533 = +HEAPF64[$8>>3];
              $1534 = $428 * $1533;
              $1535 = $1532 + $1534;
              HEAPF64[$20>>3] = $1535;
              $1536 = +HEAPF64[$14>>3];
              $1537 = $419 * $1536;
              $1538 = +HEAPF64[$13>>3];
              $1539 = +HEAPF64[$7>>3];
              $1540 = $1538 * $1539;
              $1541 = $1472 * $1540;
              $1542 = $1537 - $1541;
              $1543 = +HEAPF64[$12>>3];
              $1544 = $428 * $1543;
              $1545 = $1544 + $1542;
              HEAPF64[$21>>3] = $1545;
              $1546 = +HEAPF64[$17>>3];
              $1547 = +HEAPF64[$7>>3];
              $1548 = $1546 * $1547;
              $1549 = $1472 * $1548;
              $1550 = +HEAPF64[$18>>3];
              $1551 = $428 * $1550;
              $1552 = $1551 - $1549;
              $1553 = +HEAPF64[$16>>3];
              $1554 = $419 * $1553;
              $1555 = $1552 + $1554;
              HEAPF64[$22>>3] = $1555;
              $1556 = +HEAPF64[$9>>3];
              $1557 = $422 * $1556;
              $1558 = +HEAPF64[$8>>3];
              $1559 = $1498 * $1558;
              $1560 = $1557 + $1559;
              $1561 = +HEAPF64[$10>>3];
              $1562 = $1501 * $1561;
              $1563 = $1560 + $1562;
              HEAPF64[$23>>3] = $1563;
              $1564 = +HEAPF64[$12>>3];
              $1565 = $1498 * $1564;
              $1566 = +HEAPF64[$14>>3];
              $1567 = $1501 * $1566;
              $1568 = $1565 + $1567;
              $1569 = +HEAPF64[$13>>3];
              $1570 = $422 * $1569;
              $1571 = $1568 + $1570;
              HEAPF64[$24>>3] = $1571;
              $1572 = +HEAPF64[$18>>3];
              $1573 = $1498 * $1572;
              $1574 = +HEAPF64[$16>>3];
              $1575 = $1501 * $1574;
              $1576 = $1573 + $1575;
              $1577 = +HEAPF64[$17>>3];
              $1578 = $422 * $1577;
              $1579 = $1576 + $1578;
              HEAPF64[$25>>3] = $1579;
              $1580 = +HEAPF64[$31>>3];
              $1581 = (+__Z5IKabsd($1580));
              $1582 = $1581 < 9.9999999999999995E-7;
              do {
               if (!($1582)) {
                $1583 = (+__Z6IKsignd($1580));
                $1584 = (+__Z5IKabsd($1583));
                $1585 = $1584 < 9.9999999999999995E-7;
                if ($1585) {
                 break;
                }
                HEAP8[$276>>0] = 1;
                $3641 = +HEAPF64[$24>>3];
                $3642 = -$3641;
                $3643 = +HEAPF64[$23>>3];
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x352,$3642,$3643,1.9999999999999999E-6);
                $3644 = HEAP8[$277>>0]|0;
                $3645 = ($3644<<24>>24)==(0);
                if ($3645) {
                 break L7;
                }
                $3646 = +HEAPF64[$31>>3];
                $3647 = (+__Z6IKsignd($3646));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x353,$3647,-1);
                $3648 = HEAP8[$278>>0]|0;
                $3649 = ($3648<<24>>24)==(0);
                if ($3649) {
                 break L7;
                }
                $3650 = +HEAPF64[$x352>>3];
                $3651 = $3650 + -1.5707963267949001;
                $3652 = +HEAPF64[$x353>>3];
                $3653 = $3652 * 1.5707963267949001;
                $3654 = $3651 + $3653;
                $3655 = (+__Z5IKsind($3654));
                $3656 = (+__Z5IKcosd($3654));
                $3657 = $3654 > 3.14159265358979;
                do {
                 if ($3657) {
                  $3658 = $3654 + -6.2831853071795898;
                  $3661 = $3658;
                 } else {
                  $3659 = $3654 < -3.14159265358979;
                  if (!($3659)) {
                   $3661 = $3654;
                   break;
                  }
                  $3660 = $3654 + 6.2831853071795898;
                  $3661 = $3660;
                 }
                } while(0);
                HEAP8[$279>>0] = 0;
                HEAP8[$280>>0] = -1;
                HEAPF64[$281>>3] = $3661;
                HEAPF64[$282>>3] = $3656;
                HEAPF64[$283>>3] = $3655;
                $3662 = +HEAPF64[$281>>3];
                $3663 = (+__Z5IKsind($3662));
                $3664 = (+__Z5IKcosd($3662));
                $3665 = +HEAPF64[$102>>3];
                $3666 = +HEAPF64[$15>>3];
                $3667 = $3665 * $3666;
                $3668 = +HEAPF64[$20>>3];
                $3669 = +HEAPF64[$103>>3];
                $3670 = $3668 * $3669;
                $3671 = +HEAPF64[$30>>3];
                $3672 = $3665 * $3671;
                $3673 = +HEAPF64[$21>>3];
                $3674 = $3669 * $3673;
                $3675 = $3663 * $3671;
                $3676 = +HEAPF64[$31>>3];
                $3677 = $3663 * $3676;
                $3678 = +HEAPF64[$24>>3];
                $3679 = $3677 + $3678;
                $3680 = +HEAPF64[$23>>3];
                $3681 = +HEAPF64[$11>>3];
                $3682 = $3669 * $3681;
                $3683 = $3663 + $3682;
                $3684 = $3665 * $3668;
                $3685 = $3683 - $3684;
                $3686 = $3666 * $3669;
                $3687 = $3664 + $3686;
                $3688 = $3665 * $3673;
                $3689 = $3687 - $3688;
                $3690 = $3667 + $3674;
                $3691 = $3675 + $3690;
                $3692 = $3664 * $3669;
                $3693 = $3663 * $3672;
                $3694 = $3692 + $3693;
                $3695 = $3666 + $3694;
                $3696 = $3665 * $3681;
                $3697 = -$3671;
                $3698 = $3664 * $3697;
                $3699 = $3698 + $3696;
                $3700 = $3670 + $3699;
                $3701 = $3663 * $3669;
                $3702 = $3664 * $3672;
                $3703 = $3701 - $3702;
                $3704 = $3703 + $3681;
                $3705 = $3669 * $3675;
                $3706 = $3673 + $3705;
                $3707 = $3664 * $3665;
                $3708 = $3706 - $3707;
                $3709 = $3663 * $3665;
                $3710 = $3668 - $3709;
                $3711 = $3669 * $3697;
                $3712 = $3664 * $3711;
                $3713 = $3710 + $3712;
                $3714 = $3671 * $3674;
                $3715 = $3663 + $3714;
                $3716 = $3667 * $3671;
                $3717 = $3716 + $3715;
                $3718 = $3676 * $3678;
                $3719 = $3718 + $3717;
                $3720 = $3676 * $3680;
                $3721 = $3720 - $3664;
                $3722 = $3671 * $3670;
                $3723 = $3722 + $3721;
                $3724 = $3672 * $3681;
                $3725 = $3724 + $3723;
                $3726 = (+__Z5IKabsd($3679));
                $3727 = $3726 > 5.0000000000000004E-6;
                if ($3727) {
                 break L7;
                }
                $3728 = $3664 * $3676;
                $3729 = $3680 - $3728;
                $3730 = (+__Z5IKabsd($3729));
                $3731 = $3730 > 5.0000000000000004E-6;
                if ($3731) {
                 break L7;
                }
                $3732 = (+__Z5IKabsd($3685));
                $3733 = $3732 > 5.0000000000000004E-6;
                if ($3733) {
                 break L7;
                }
                $3734 = (+__Z5IKabsd($3689));
                $3735 = $3734 > 5.0000000000000004E-6;
                if ($3735) {
                 break L7;
                }
                $3736 = (+__Z5IKabsd($3691));
                $3737 = $3736 > 5.0000000000000004E-6;
                if ($3737) {
                 break L7;
                }
                $3738 = (+__Z5IKabsd($3695));
                $3739 = $3738 > 5.0000000000000004E-6;
                if ($3739) {
                 break L7;
                }
                $3740 = (+__Z5IKabsd($3700));
                $3741 = $3740 > 5.0000000000000004E-6;
                if ($3741) {
                 break L7;
                }
                $3742 = (+__Z5IKabsd($3704));
                $3743 = $3742 > 5.0000000000000004E-6;
                if ($3743) {
                 break L7;
                }
                $3744 = (+__Z5IKabsd($3708));
                $3745 = $3744 > 5.0000000000000004E-6;
                if ($3745) {
                 break L7;
                }
                $3746 = (+__Z5IKabsd($3713));
                $3747 = $3746 > 5.0000000000000004E-6;
                if ($3747) {
                 break L7;
                }
                $3748 = (+__Z5IKabsd($3719));
                $3749 = $3748 > 5.0000000000000004E-6;
                if ($3749) {
                 break L7;
                }
                $3750 = (+__Z5IKabsd($3725));
                $3751 = $3750 > 5.0000000000000004E-6;
                if ($3751) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos129,7);
                $3752 = HEAP32[$vinfos129>>2]|0;
                $3753 = ((($3752)) + 17|0);
                HEAP8[$3753>>0] = 1;
                $3754 = +HEAPF64[$this>>3];
                $3755 = HEAP32[$vinfos129>>2]|0;
                $3756 = ((($3755)) + 8|0);
                HEAPF64[$3756>>3] = $3754;
                $3757 = HEAP8[$284>>0]|0;
                $3758 = HEAP32[$vinfos129>>2]|0;
                $3759 = ((($3758)) + 19|0);
                HEAP8[$3759>>0] = $3757;
                $3760 = HEAP8[$285>>0]|0;
                $3761 = HEAP32[$vinfos129>>2]|0;
                $3762 = ((($3761)) + 20|0);
                HEAP8[$3762>>0] = $3760;
                $3763 = HEAP8[$286>>0]|0;
                $3764 = HEAP32[$vinfos129>>2]|0;
                $3765 = ((($3764)) + 18|0);
                HEAP8[$3765>>0] = $3763;
                $3766 = HEAP32[$vinfos129>>2]|0;
                $3767 = ((($3766)) + 41|0);
                HEAP8[$3767>>0] = 1;
                $3768 = +HEAPF64[$287>>3];
                $3769 = HEAP32[$vinfos129>>2]|0;
                $3770 = ((($3769)) + 32|0);
                HEAPF64[$3770>>3] = $3768;
                $3771 = HEAP8[$288>>0]|0;
                $3772 = HEAP32[$vinfos129>>2]|0;
                $3773 = ((($3772)) + 43|0);
                HEAP8[$3773>>0] = $3771;
                $3774 = HEAP8[$289>>0]|0;
                $3775 = HEAP32[$vinfos129>>2]|0;
                $3776 = ((($3775)) + 44|0);
                HEAP8[$3776>>0] = $3774;
                $3777 = HEAP8[$290>>0]|0;
                $3778 = HEAP32[$vinfos129>>2]|0;
                $3779 = ((($3778)) + 42|0);
                HEAP8[$3779>>0] = $3777;
                $3780 = HEAP32[$vinfos129>>2]|0;
                $3781 = ((($3780)) + 65|0);
                HEAP8[$3781>>0] = 1;
                $3782 = +HEAPF64[$291>>3];
                $3783 = HEAP32[$vinfos129>>2]|0;
                $3784 = ((($3783)) + 56|0);
                HEAPF64[$3784>>3] = $3782;
                $3785 = HEAP8[$292>>0]|0;
                $3786 = HEAP32[$vinfos129>>2]|0;
                $3787 = ((($3786)) + 67|0);
                HEAP8[$3787>>0] = $3785;
                $3788 = HEAP8[$293>>0]|0;
                $3789 = HEAP32[$vinfos129>>2]|0;
                $3790 = ((($3789)) + 68|0);
                HEAP8[$3790>>0] = $3788;
                $3791 = HEAP8[$294>>0]|0;
                $3792 = HEAP32[$vinfos129>>2]|0;
                $3793 = ((($3792)) + 66|0);
                HEAP8[$3793>>0] = $3791;
                $3794 = HEAP32[$vinfos129>>2]|0;
                $3795 = ((($3794)) + 89|0);
                HEAP8[$3795>>0] = 1;
                $3796 = +HEAPF64[$295>>3];
                $3797 = HEAP32[$vinfos129>>2]|0;
                $3798 = ((($3797)) + 80|0);
                HEAPF64[$3798>>3] = $3796;
                $3799 = HEAP8[$296>>0]|0;
                $3800 = HEAP32[$vinfos129>>2]|0;
                $3801 = ((($3800)) + 91|0);
                HEAP8[$3801>>0] = $3799;
                $3802 = HEAP8[$297>>0]|0;
                $3803 = HEAP32[$vinfos129>>2]|0;
                $3804 = ((($3803)) + 92|0);
                HEAP8[$3804>>0] = $3802;
                $3805 = HEAP8[$298>>0]|0;
                $3806 = HEAP32[$vinfos129>>2]|0;
                $3807 = ((($3806)) + 90|0);
                HEAP8[$3807>>0] = $3805;
                $3808 = HEAP32[$vinfos129>>2]|0;
                $3809 = ((($3808)) + 113|0);
                HEAP8[$3809>>0] = 1;
                $3810 = +HEAPF64[$101>>3];
                $3811 = HEAP32[$vinfos129>>2]|0;
                $3812 = ((($3811)) + 104|0);
                HEAPF64[$3812>>3] = $3810;
                $3813 = HEAP8[$99>>0]|0;
                $3814 = HEAP32[$vinfos129>>2]|0;
                $3815 = ((($3814)) + 115|0);
                HEAP8[$3815>>0] = $3813;
                $3816 = HEAP8[$100>>0]|0;
                $3817 = HEAP32[$vinfos129>>2]|0;
                $3818 = ((($3817)) + 116|0);
                HEAP8[$3818>>0] = $3816;
                $3819 = HEAP8[$96>>0]|0;
                $3820 = HEAP32[$vinfos129>>2]|0;
                $3821 = ((($3820)) + 114|0);
                HEAP8[$3821>>0] = $3819;
                $3822 = HEAP32[$vinfos129>>2]|0;
                $3823 = ((($3822)) + 137|0);
                HEAP8[$3823>>0] = 1;
                $3824 = +HEAPF64[$29>>3];
                $3825 = HEAP32[$vinfos129>>2]|0;
                $3826 = ((($3825)) + 128|0);
                HEAPF64[$3826>>3] = $3824;
                $3827 = HEAP8[$27>>0]|0;
                $3828 = HEAP32[$vinfos129>>2]|0;
                $3829 = ((($3828)) + 139|0);
                HEAP8[$3829>>0] = $3827;
                $3830 = HEAP8[$28>>0]|0;
                $3831 = HEAP32[$vinfos129>>2]|0;
                $3832 = ((($3831)) + 140|0);
                HEAP8[$3832>>0] = $3830;
                $3833 = HEAP8[$26>>0]|0;
                $3834 = HEAP32[$vinfos129>>2]|0;
                $3835 = ((($3834)) + 138|0);
                HEAP8[$3835>>0] = $3833;
                $3836 = HEAP32[$vinfos129>>2]|0;
                $3837 = ((($3836)) + 161|0);
                HEAP8[$3837>>0] = 1;
                $3838 = +HEAPF64[$281>>3];
                $3839 = HEAP32[$vinfos129>>2]|0;
                $3840 = ((($3839)) + 152|0);
                HEAPF64[$3840>>3] = $3838;
                $3841 = HEAP8[$279>>0]|0;
                $3842 = HEAP32[$vinfos129>>2]|0;
                $3843 = ((($3842)) + 163|0);
                HEAP8[$3843>>0] = $3841;
                $3844 = HEAP8[$280>>0]|0;
                $3845 = HEAP32[$vinfos129>>2]|0;
                $3846 = ((($3845)) + 164|0);
                HEAP8[$3846>>0] = $3844;
                $3847 = HEAP8[$276>>0]|0;
                $3848 = HEAP32[$vinfos129>>2]|0;
                $3849 = ((($3848)) + 162|0);
                HEAP8[$3849>>0] = $3847;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree130,0);
                $3850 = HEAP32[$solutions>>2]|0;
                $3851 = ((($3850)) + 8|0);
                $3852 = HEAP32[$3851>>2]|0;
                (FUNCTION_TABLE_iiii[$3852 & 31]($solutions,$vinfos129,$vfree130)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree130);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos129);
                break L7;
               }
              } while(0);
              $1586 = +HEAPF64[$0>>3];
              $1587 = +HEAPF64[$1>>3];
              $1588 = +HEAPF64[$2>>3];
              $1589 = $1587 * $1588;
              $1590 = +HEAPF64[$3>>3];
              $1591 = $1587 * $1590;
              $1592 = +HEAPF64[$4>>3];
              $1593 = $1586 * $1592;
              $1594 = +HEAPF64[$5>>3];
              $1595 = +HEAPF64[$6>>3];
              $1596 = $1594 * $1595;
              $1597 = +HEAPF64[$7>>3];
              $1598 = $1595 * $1597;
              $1599 = $1591 * $1594;
              $1600 = $1599 - $1598;
              $1601 = $1591 * $1597;
              $1602 = $1596 + $1601;
              $1603 = $1592 * $1600;
              $1604 = $1588 * $1600;
              $1605 = $1587 * $1593;
              $1606 = $1605 + $1604;
              $1607 = $1586 * $1589;
              $1608 = $1603 - $1607;
              $1609 = $432 * $1592;
              $1610 = $1586 * $1588;
              $1611 = $1610 * $1595;
              $1612 = $1609 + $1611;
              $1613 = $1593 * $1595;
              $1614 = $432 * $1588;
              $1615 = $1614 - $1613;
              $1616 = +HEAPF64[$9>>3];
              $1617 = $1616 * $1602;
              $1618 = +HEAPF64[$10>>3];
              $1619 = $1618 * $1606;
              $1620 = $1617 + $1619;
              $1621 = +HEAPF64[$8>>3];
              $1622 = $1621 * $1608;
              $1623 = $1622 + $1620;
              HEAPF64[$11>>3] = $1623;
              $1624 = +HEAPF64[$13>>3];
              $1625 = $1602 * $1624;
              $1626 = +HEAPF64[$14>>3];
              $1627 = $1606 * $1626;
              $1628 = $1625 + $1627;
              $1629 = +HEAPF64[$12>>3];
              $1630 = $1608 * $1629;
              $1631 = $1628 + $1630;
              HEAPF64[$15>>3] = $1631;
              $1632 = +HEAPF64[$18>>3];
              $1633 = $1608 * $1632;
              $1634 = +HEAPF64[$16>>3];
              $1635 = $1606 * $1634;
              $1636 = $1633 + $1635;
              $1637 = +HEAPF64[$17>>3];
              $1638 = $1602 * $1637;
              $1639 = $1636 + $1638;
              HEAPF64[$19>>3] = $1639;
              $1640 = +HEAPF64[$8>>3];
              $1641 = $428 * $1640;
              $1642 = +HEAPF64[$10>>3];
              $1643 = $419 * $1642;
              $1644 = $1641 + $1643;
              $1645 = +HEAPF64[$9>>3];
              $1646 = +HEAPF64[$7>>3];
              $1647 = $1645 * $1646;
              $1648 = $1586 * $1647;
              $1649 = $1644 - $1648;
              HEAPF64[$20>>3] = $1649;
              $1650 = +HEAPF64[$13>>3];
              $1651 = +HEAPF64[$7>>3];
              $1652 = $1650 * $1651;
              $1653 = $1586 * $1652;
              $1654 = +HEAPF64[$14>>3];
              $1655 = $419 * $1654;
              $1656 = $1655 - $1653;
              $1657 = +HEAPF64[$12>>3];
              $1658 = $428 * $1657;
              $1659 = $1656 + $1658;
              HEAPF64[$21>>3] = $1659;
              $1660 = +HEAPF64[$17>>3];
              $1661 = +HEAPF64[$7>>3];
              $1662 = $1660 * $1661;
              $1663 = $1586 * $1662;
              $1664 = +HEAPF64[$16>>3];
              $1665 = $419 * $1664;
              $1666 = $1665 - $1663;
              $1667 = +HEAPF64[$18>>3];
              $1668 = $428 * $1667;
              $1669 = $1666 + $1668;
              HEAPF64[$22>>3] = $1669;
              $1670 = +HEAPF64[$9>>3];
              $1671 = $422 * $1670;
              $1672 = +HEAPF64[$8>>3];
              $1673 = $1612 * $1672;
              $1674 = $1671 + $1673;
              $1675 = +HEAPF64[$10>>3];
              $1676 = $1615 * $1675;
              $1677 = $1674 + $1676;
              HEAPF64[$23>>3] = $1677;
              $1678 = +HEAPF64[$13>>3];
              $1679 = $422 * $1678;
              $1680 = +HEAPF64[$14>>3];
              $1681 = $1615 * $1680;
              $1682 = $1679 + $1681;
              $1683 = +HEAPF64[$12>>3];
              $1684 = $1612 * $1683;
              $1685 = $1682 + $1684;
              HEAPF64[$24>>3] = $1685;
              $1686 = +HEAPF64[$18>>3];
              $1687 = $1612 * $1686;
              $1688 = +HEAPF64[$16>>3];
              $1689 = $1615 * $1688;
              $1690 = $1687 + $1689;
              $1691 = +HEAPF64[$17>>3];
              $1692 = $422 * $1691;
              $1693 = $1690 + $1692;
              HEAPF64[$25>>3] = $1693;
              $1694 = +HEAPF64[$31>>3];
              $1695 = (+__Z5IKabsd($1694));
              $1696 = $1695 < 9.9999999999999995E-7;
              do {
               if (!($1696)) {
                $1697 = +HEAPF64[$103>>3];
                $1698 = (+__Z5IKabsd($1697));
                $1699 = $1698 < 9.9999999999999995E-7;
                if ($1699) {
                 break;
                }
                HEAP8[$253>>0] = 1;
                $3397 = +HEAPF64[$31>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x341,$3397,-1);
                $3398 = HEAP8[$254>>0]|0;
                $3399 = ($3398<<24>>24)==(0);
                if ($3399) {
                 break L7;
                }
                $3400 = +HEAPF64[$x341>>3];
                $3401 = +HEAPF64[$103>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x342,$3401,-1);
                $3402 = HEAP8[$255>>0]|0;
                $3403 = ($3402<<24>>24)==(0);
                if ($3403) {
                 break L7;
                }
                $3404 = +HEAPF64[$24>>3];
                $3405 = $3400 * $3404;
                $3406 = -$3405;
                $3407 = (+__Z5IKabsd($3406));
                $3408 = $3407 < 1.9999999999999999E-6;
                do {
                 if ($3408) {
                  $3409 = +HEAPF64[$x342>>3];
                  $3410 = $3400 * $3409;
                  $3411 = +HEAPF64[$15>>3];
                  $3412 = +HEAPF64[$31>>3];
                  $3413 = $3411 * $3412;
                  $3414 = +HEAPF64[$102>>3];
                  $3415 = +HEAPF64[$30>>3];
                  $3416 = $3414 * $3415;
                  $3417 = $3404 * $3416;
                  $3418 = $3417 - $3413;
                  $3419 = $3410 * $3418;
                  $3420 = (+__Z5IKabsd($3419));
                  $3421 = $3420 < 1.9999999999999999E-6;
                  if (!($3421)) {
                   break;
                  }
                  $3422 = (+__Z5IKsqrd($3406));
                  $3423 = (+__Z5IKsqrd($3419));
                  $3424 = $3422 + $3423;
                  $3425 = $3424 + -1.0;
                  $3426 = (+__Z5IKabsd($3425));
                  $3427 = !($3426 <= 1.9999999999999999E-6);
                  if (!($3427)) {
                   break L7;
                  }
                 }
                } while(0);
                $3428 = +HEAPF64[$24>>3];
                $3429 = $3400 * $3428;
                $3430 = -$3429;
                $3431 = +HEAPF64[$x342>>3];
                $3432 = $3400 * $3431;
                $3433 = +HEAPF64[$15>>3];
                $3434 = +HEAPF64[$31>>3];
                $3435 = $3433 * $3434;
                $3436 = +HEAPF64[$102>>3];
                $3437 = +HEAPF64[$30>>3];
                $3438 = $3436 * $3437;
                $3439 = $3428 * $3438;
                $3440 = $3439 - $3435;
                $3441 = $3432 * $3440;
                $3442 = (+__Z7IKatan2dd($3430,$3441));
                $3443 = (+__Z5IKsind($3442));
                $3444 = (+__Z5IKcosd($3442));
                $3445 = $3442 > 3.14159265358979;
                do {
                 if ($3445) {
                  $3446 = $3442 + -6.2831853071795898;
                  $3449 = $3446;
                 } else {
                  $3447 = $3442 < -3.14159265358979;
                  if (!($3447)) {
                   $3449 = $3442;
                   break;
                  }
                  $3448 = $3442 + 6.2831853071795898;
                  $3449 = $3448;
                 }
                } while(0);
                HEAP8[$256>>0] = 0;
                HEAP8[$257>>0] = -1;
                HEAPF64[$258>>3] = $3449;
                HEAPF64[$259>>3] = $3444;
                HEAPF64[$260>>3] = $3443;
                $3450 = +HEAPF64[$258>>3];
                $3451 = (+__Z5IKsind($3450));
                $3452 = (+__Z5IKcosd($3450));
                $3453 = +HEAPF64[$102>>3];
                $3454 = +HEAPF64[$15>>3];
                $3455 = $3453 * $3454;
                $3456 = +HEAPF64[$20>>3];
                $3457 = +HEAPF64[$103>>3];
                $3458 = $3456 * $3457;
                $3459 = +HEAPF64[$30>>3];
                $3460 = $3453 * $3459;
                $3461 = +HEAPF64[$21>>3];
                $3462 = $3457 * $3461;
                $3463 = $3451 * $3459;
                $3464 = +HEAPF64[$31>>3];
                $3465 = $3451 * $3464;
                $3466 = +HEAPF64[$24>>3];
                $3467 = $3465 + $3466;
                $3468 = +HEAPF64[$23>>3];
                $3469 = $3453 * $3456;
                $3470 = +HEAPF64[$11>>3];
                $3471 = $3457 * $3470;
                $3472 = $3471 - $3469;
                $3473 = $3451 + $3472;
                $3474 = $3453 * $3461;
                $3475 = $3454 * $3457;
                $3476 = $3475 - $3474;
                $3477 = $3452 + $3476;
                $3478 = $3455 + $3463;
                $3479 = $3478 + $3462;
                $3480 = $3452 * $3457;
                $3481 = $3454 + $3480;
                $3482 = $3451 * $3460;
                $3483 = $3481 + $3482;
                $3484 = $3453 * $3470;
                $3485 = $3458 + $3484;
                $3486 = -$3459;
                $3487 = $3452 * $3486;
                $3488 = $3487 + $3485;
                $3489 = $3452 * $3460;
                $3490 = $3451 * $3457;
                $3491 = $3490 - $3489;
                $3492 = $3491 + $3470;
                $3493 = $3457 * $3463;
                $3494 = $3452 * $3453;
                $3495 = $3493 - $3494;
                $3496 = $3461 + $3495;
                $3497 = $3451 * $3453;
                $3498 = $3456 - $3497;
                $3499 = $3457 * $3486;
                $3500 = $3452 * $3499;
                $3501 = $3498 + $3500;
                $3502 = $3459 * $3462;
                $3503 = $3451 + $3502;
                $3504 = $3455 * $3459;
                $3505 = $3504 + $3503;
                $3506 = $3464 * $3466;
                $3507 = $3506 + $3505;
                $3508 = $3464 * $3468;
                $3509 = $3508 - $3452;
                $3510 = $3460 * $3470;
                $3511 = $3509 + $3510;
                $3512 = $3459 * $3458;
                $3513 = $3512 + $3511;
                $3514 = (+__Z5IKabsd($3467));
                $3515 = $3514 > 5.0000000000000004E-6;
                if ($3515) {
                 break L7;
                }
                $3516 = $3452 * $3464;
                $3517 = $3468 - $3516;
                $3518 = (+__Z5IKabsd($3517));
                $3519 = $3518 > 5.0000000000000004E-6;
                if ($3519) {
                 break L7;
                }
                $3520 = (+__Z5IKabsd($3473));
                $3521 = $3520 > 5.0000000000000004E-6;
                if ($3521) {
                 break L7;
                }
                $3522 = (+__Z5IKabsd($3477));
                $3523 = $3522 > 5.0000000000000004E-6;
                if ($3523) {
                 break L7;
                }
                $3524 = (+__Z5IKabsd($3479));
                $3525 = $3524 > 5.0000000000000004E-6;
                if ($3525) {
                 break L7;
                }
                $3526 = (+__Z5IKabsd($3483));
                $3527 = $3526 > 5.0000000000000004E-6;
                if ($3527) {
                 break L7;
                }
                $3528 = (+__Z5IKabsd($3488));
                $3529 = $3528 > 5.0000000000000004E-6;
                if ($3529) {
                 break L7;
                }
                $3530 = (+__Z5IKabsd($3492));
                $3531 = $3530 > 5.0000000000000004E-6;
                if ($3531) {
                 break L7;
                }
                $3532 = (+__Z5IKabsd($3496));
                $3533 = $3532 > 5.0000000000000004E-6;
                if ($3533) {
                 break L7;
                }
                $3534 = (+__Z5IKabsd($3501));
                $3535 = $3534 > 5.0000000000000004E-6;
                if ($3535) {
                 break L7;
                }
                $3536 = (+__Z5IKabsd($3507));
                $3537 = $3536 > 5.0000000000000004E-6;
                if ($3537) {
                 break L7;
                }
                $3538 = (+__Z5IKabsd($3513));
                $3539 = $3538 > 5.0000000000000004E-6;
                if ($3539) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos119,7);
                $3540 = HEAP32[$vinfos119>>2]|0;
                $3541 = ((($3540)) + 17|0);
                HEAP8[$3541>>0] = 1;
                $3542 = +HEAPF64[$this>>3];
                $3543 = HEAP32[$vinfos119>>2]|0;
                $3544 = ((($3543)) + 8|0);
                HEAPF64[$3544>>3] = $3542;
                $3545 = HEAP8[$261>>0]|0;
                $3546 = HEAP32[$vinfos119>>2]|0;
                $3547 = ((($3546)) + 19|0);
                HEAP8[$3547>>0] = $3545;
                $3548 = HEAP8[$262>>0]|0;
                $3549 = HEAP32[$vinfos119>>2]|0;
                $3550 = ((($3549)) + 20|0);
                HEAP8[$3550>>0] = $3548;
                $3551 = HEAP8[$263>>0]|0;
                $3552 = HEAP32[$vinfos119>>2]|0;
                $3553 = ((($3552)) + 18|0);
                HEAP8[$3553>>0] = $3551;
                $3554 = HEAP32[$vinfos119>>2]|0;
                $3555 = ((($3554)) + 41|0);
                HEAP8[$3555>>0] = 1;
                $3556 = +HEAPF64[$264>>3];
                $3557 = HEAP32[$vinfos119>>2]|0;
                $3558 = ((($3557)) + 32|0);
                HEAPF64[$3558>>3] = $3556;
                $3559 = HEAP8[$265>>0]|0;
                $3560 = HEAP32[$vinfos119>>2]|0;
                $3561 = ((($3560)) + 43|0);
                HEAP8[$3561>>0] = $3559;
                $3562 = HEAP8[$266>>0]|0;
                $3563 = HEAP32[$vinfos119>>2]|0;
                $3564 = ((($3563)) + 44|0);
                HEAP8[$3564>>0] = $3562;
                $3565 = HEAP8[$267>>0]|0;
                $3566 = HEAP32[$vinfos119>>2]|0;
                $3567 = ((($3566)) + 42|0);
                HEAP8[$3567>>0] = $3565;
                $3568 = HEAP32[$vinfos119>>2]|0;
                $3569 = ((($3568)) + 65|0);
                HEAP8[$3569>>0] = 1;
                $3570 = +HEAPF64[$268>>3];
                $3571 = HEAP32[$vinfos119>>2]|0;
                $3572 = ((($3571)) + 56|0);
                HEAPF64[$3572>>3] = $3570;
                $3573 = HEAP8[$269>>0]|0;
                $3574 = HEAP32[$vinfos119>>2]|0;
                $3575 = ((($3574)) + 67|0);
                HEAP8[$3575>>0] = $3573;
                $3576 = HEAP8[$270>>0]|0;
                $3577 = HEAP32[$vinfos119>>2]|0;
                $3578 = ((($3577)) + 68|0);
                HEAP8[$3578>>0] = $3576;
                $3579 = HEAP8[$271>>0]|0;
                $3580 = HEAP32[$vinfos119>>2]|0;
                $3581 = ((($3580)) + 66|0);
                HEAP8[$3581>>0] = $3579;
                $3582 = HEAP32[$vinfos119>>2]|0;
                $3583 = ((($3582)) + 89|0);
                HEAP8[$3583>>0] = 1;
                $3584 = +HEAPF64[$272>>3];
                $3585 = HEAP32[$vinfos119>>2]|0;
                $3586 = ((($3585)) + 80|0);
                HEAPF64[$3586>>3] = $3584;
                $3587 = HEAP8[$273>>0]|0;
                $3588 = HEAP32[$vinfos119>>2]|0;
                $3589 = ((($3588)) + 91|0);
                HEAP8[$3589>>0] = $3587;
                $3590 = HEAP8[$274>>0]|0;
                $3591 = HEAP32[$vinfos119>>2]|0;
                $3592 = ((($3591)) + 92|0);
                HEAP8[$3592>>0] = $3590;
                $3593 = HEAP8[$275>>0]|0;
                $3594 = HEAP32[$vinfos119>>2]|0;
                $3595 = ((($3594)) + 90|0);
                HEAP8[$3595>>0] = $3593;
                $3596 = HEAP32[$vinfos119>>2]|0;
                $3597 = ((($3596)) + 113|0);
                HEAP8[$3597>>0] = 1;
                $3598 = +HEAPF64[$101>>3];
                $3599 = HEAP32[$vinfos119>>2]|0;
                $3600 = ((($3599)) + 104|0);
                HEAPF64[$3600>>3] = $3598;
                $3601 = HEAP8[$99>>0]|0;
                $3602 = HEAP32[$vinfos119>>2]|0;
                $3603 = ((($3602)) + 115|0);
                HEAP8[$3603>>0] = $3601;
                $3604 = HEAP8[$100>>0]|0;
                $3605 = HEAP32[$vinfos119>>2]|0;
                $3606 = ((($3605)) + 116|0);
                HEAP8[$3606>>0] = $3604;
                $3607 = HEAP8[$96>>0]|0;
                $3608 = HEAP32[$vinfos119>>2]|0;
                $3609 = ((($3608)) + 114|0);
                HEAP8[$3609>>0] = $3607;
                $3610 = HEAP32[$vinfos119>>2]|0;
                $3611 = ((($3610)) + 137|0);
                HEAP8[$3611>>0] = 1;
                $3612 = +HEAPF64[$29>>3];
                $3613 = HEAP32[$vinfos119>>2]|0;
                $3614 = ((($3613)) + 128|0);
                HEAPF64[$3614>>3] = $3612;
                $3615 = HEAP8[$27>>0]|0;
                $3616 = HEAP32[$vinfos119>>2]|0;
                $3617 = ((($3616)) + 139|0);
                HEAP8[$3617>>0] = $3615;
                $3618 = HEAP8[$28>>0]|0;
                $3619 = HEAP32[$vinfos119>>2]|0;
                $3620 = ((($3619)) + 140|0);
                HEAP8[$3620>>0] = $3618;
                $3621 = HEAP8[$26>>0]|0;
                $3622 = HEAP32[$vinfos119>>2]|0;
                $3623 = ((($3622)) + 138|0);
                HEAP8[$3623>>0] = $3621;
                $3624 = HEAP32[$vinfos119>>2]|0;
                $3625 = ((($3624)) + 161|0);
                HEAP8[$3625>>0] = 1;
                $3626 = +HEAPF64[$258>>3];
                $3627 = HEAP32[$vinfos119>>2]|0;
                $3628 = ((($3627)) + 152|0);
                HEAPF64[$3628>>3] = $3626;
                $3629 = HEAP8[$256>>0]|0;
                $3630 = HEAP32[$vinfos119>>2]|0;
                $3631 = ((($3630)) + 163|0);
                HEAP8[$3631>>0] = $3629;
                $3632 = HEAP8[$257>>0]|0;
                $3633 = HEAP32[$vinfos119>>2]|0;
                $3634 = ((($3633)) + 164|0);
                HEAP8[$3634>>0] = $3632;
                $3635 = HEAP8[$253>>0]|0;
                $3636 = HEAP32[$vinfos119>>2]|0;
                $3637 = ((($3636)) + 162|0);
                HEAP8[$3637>>0] = $3635;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree120,0);
                $3638 = HEAP32[$solutions>>2]|0;
                $3639 = ((($3638)) + 8|0);
                $3640 = HEAP32[$3639>>2]|0;
                (FUNCTION_TABLE_iiii[$3640 & 31]($solutions,$vinfos119,$vfree120)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree120);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos119);
                break L7;
               }
              } while(0);
              $1700 = +HEAPF64[$0>>3];
              $1701 = +HEAPF64[$1>>3];
              $1702 = +HEAPF64[$2>>3];
              $1703 = $1701 * $1702;
              $1704 = +HEAPF64[$3>>3];
              $1705 = $1701 * $1704;
              $1706 = +HEAPF64[$4>>3];
              $1707 = $1700 * $1706;
              $1708 = +HEAPF64[$5>>3];
              $1709 = +HEAPF64[$6>>3];
              $1710 = $1708 * $1709;
              $1711 = +HEAPF64[$7>>3];
              $1712 = $1709 * $1711;
              $1713 = $1705 * $1708;
              $1714 = $1713 - $1712;
              $1715 = $1705 * $1711;
              $1716 = $1710 + $1715;
              $1717 = $1706 * $1714;
              $1718 = $1701 * $1707;
              $1719 = $1702 * $1714;
              $1720 = $1718 + $1719;
              $1721 = $1700 * $1703;
              $1722 = $1717 - $1721;
              $1723 = $1700 * $1702;
              $1724 = $1723 * $1709;
              $1725 = $432 * $1706;
              $1726 = $1725 + $1724;
              $1727 = $1707 * $1709;
              $1728 = $432 * $1702;
              $1729 = $1728 - $1727;
              $1730 = +HEAPF64[$8>>3];
              $1731 = $1730 * $1722;
              $1732 = +HEAPF64[$10>>3];
              $1733 = $1732 * $1720;
              $1734 = $1731 + $1733;
              $1735 = +HEAPF64[$9>>3];
              $1736 = $1716 * $1735;
              $1737 = $1736 + $1734;
              HEAPF64[$11>>3] = $1737;
              $1738 = +HEAPF64[$13>>3];
              $1739 = $1716 * $1738;
              $1740 = +HEAPF64[$12>>3];
              $1741 = $1722 * $1740;
              $1742 = $1739 + $1741;
              $1743 = +HEAPF64[$14>>3];
              $1744 = $1720 * $1743;
              $1745 = $1742 + $1744;
              HEAPF64[$15>>3] = $1745;
              $1746 = +HEAPF64[$18>>3];
              $1747 = $1722 * $1746;
              $1748 = +HEAPF64[$17>>3];
              $1749 = $1716 * $1748;
              $1750 = $1747 + $1749;
              $1751 = +HEAPF64[$16>>3];
              $1752 = $1720 * $1751;
              $1753 = $1750 + $1752;
              HEAPF64[$19>>3] = $1753;
              $1754 = +HEAPF64[$9>>3];
              $1755 = +HEAPF64[$7>>3];
              $1756 = $1754 * $1755;
              $1757 = $1700 * $1756;
              $1758 = +HEAPF64[$8>>3];
              $1759 = $428 * $1758;
              $1760 = $1759 - $1757;
              $1761 = +HEAPF64[$10>>3];
              $1762 = $419 * $1761;
              $1763 = $1760 + $1762;
              HEAPF64[$20>>3] = $1763;
              $1764 = +HEAPF64[$13>>3];
              $1765 = +HEAPF64[$7>>3];
              $1766 = $1764 * $1765;
              $1767 = $1700 * $1766;
              $1768 = +HEAPF64[$12>>3];
              $1769 = $428 * $1768;
              $1770 = $1769 - $1767;
              $1771 = +HEAPF64[$14>>3];
              $1772 = $419 * $1771;
              $1773 = $1770 + $1772;
              HEAPF64[$21>>3] = $1773;
              $1774 = +HEAPF64[$17>>3];
              $1775 = +HEAPF64[$7>>3];
              $1776 = $1774 * $1775;
              $1777 = $1700 * $1776;
              $1778 = +HEAPF64[$18>>3];
              $1779 = $428 * $1778;
              $1780 = $1779 - $1777;
              $1781 = +HEAPF64[$16>>3];
              $1782 = $419 * $1781;
              $1783 = $1780 + $1782;
              HEAPF64[$22>>3] = $1783;
              $1784 = +HEAPF64[$8>>3];
              $1785 = $1726 * $1784;
              $1786 = +HEAPF64[$10>>3];
              $1787 = $1729 * $1786;
              $1788 = $1785 + $1787;
              $1789 = +HEAPF64[$9>>3];
              $1790 = $422 * $1789;
              $1791 = $1788 + $1790;
              HEAPF64[$23>>3] = $1791;
              $1792 = +HEAPF64[$12>>3];
              $1793 = $1726 * $1792;
              $1794 = +HEAPF64[$14>>3];
              $1795 = $1729 * $1794;
              $1796 = $1793 + $1795;
              $1797 = +HEAPF64[$13>>3];
              $1798 = $422 * $1797;
              $1799 = $1796 + $1798;
              HEAPF64[$24>>3] = $1799;
              $1800 = +HEAPF64[$17>>3];
              $1801 = $422 * $1800;
              $1802 = +HEAPF64[$18>>3];
              $1803 = $1726 * $1802;
              $1804 = $1801 + $1803;
              $1805 = +HEAPF64[$16>>3];
              $1806 = $1729 * $1805;
              $1807 = $1804 + $1806;
              HEAPF64[$25>>3] = $1807;
              $1808 = +HEAPF64[$31>>3];
              $1809 = (+__Z5IKabsd($1808));
              $1810 = $1809 < 9.9999999999999995E-7;
              do {
               if (!($1810)) {
                $1811 = +HEAPF64[$102>>3];
                $1812 = (+__Z5IKabsd($1811));
                $1813 = $1812 < 9.9999999999999995E-7;
                if ($1813) {
                 break;
                }
                HEAP8[$230>>0] = 1;
                $3153 = +HEAPF64[$31>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x329,$3153,-1);
                $3154 = HEAP8[$231>>0]|0;
                $3155 = ($3154<<24>>24)==(0);
                if ($3155) {
                 break L7;
                }
                $3156 = +HEAPF64[$x329>>3];
                $3157 = +HEAPF64[$102>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x330,$3157,-1);
                $3158 = HEAP8[$232>>0]|0;
                $3159 = ($3158<<24>>24)==(0);
                if ($3159) {
                 break L7;
                }
                $3160 = +HEAPF64[$24>>3];
                $3161 = $3156 * $3160;
                $3162 = -$3161;
                $3163 = (+__Z5IKabsd($3162));
                $3164 = $3163 < 1.9999999999999999E-6;
                do {
                 if ($3164) {
                  $3165 = +HEAPF64[$x330>>3];
                  $3166 = $3156 * $3165;
                  $3167 = +HEAPF64[$30>>3];
                  $3168 = $3160 * $3167;
                  $3169 = +HEAPF64[$103>>3];
                  $3170 = $3168 * $3169;
                  $3171 = +HEAPF64[$21>>3];
                  $3172 = +HEAPF64[$31>>3];
                  $3173 = $3171 * $3172;
                  $3174 = $3173 - $3170;
                  $3175 = $3166 * $3174;
                  $3176 = (+__Z5IKabsd($3175));
                  $3177 = $3176 < 1.9999999999999999E-6;
                  if (!($3177)) {
                   break;
                  }
                  $3178 = (+__Z5IKsqrd($3162));
                  $3179 = (+__Z5IKsqrd($3175));
                  $3180 = $3178 + $3179;
                  $3181 = $3180 + -1.0;
                  $3182 = (+__Z5IKabsd($3181));
                  $3183 = !($3182 <= 1.9999999999999999E-6);
                  if (!($3183)) {
                   break L7;
                  }
                 }
                } while(0);
                $3184 = +HEAPF64[$24>>3];
                $3185 = $3156 * $3184;
                $3186 = -$3185;
                $3187 = +HEAPF64[$x330>>3];
                $3188 = $3156 * $3187;
                $3189 = +HEAPF64[$30>>3];
                $3190 = $3184 * $3189;
                $3191 = +HEAPF64[$103>>3];
                $3192 = $3190 * $3191;
                $3193 = +HEAPF64[$21>>3];
                $3194 = +HEAPF64[$31>>3];
                $3195 = $3193 * $3194;
                $3196 = $3195 - $3192;
                $3197 = $3188 * $3196;
                $3198 = (+__Z7IKatan2dd($3186,$3197));
                $3199 = (+__Z5IKsind($3198));
                $3200 = (+__Z5IKcosd($3198));
                $3201 = $3198 > 3.14159265358979;
                do {
                 if ($3201) {
                  $3202 = $3198 + -6.2831853071795898;
                  $3205 = $3202;
                 } else {
                  $3203 = $3198 < -3.14159265358979;
                  if (!($3203)) {
                   $3205 = $3198;
                   break;
                  }
                  $3204 = $3198 + 6.2831853071795898;
                  $3205 = $3204;
                 }
                } while(0);
                HEAP8[$233>>0] = 0;
                HEAP8[$234>>0] = -1;
                HEAPF64[$235>>3] = $3205;
                HEAPF64[$236>>3] = $3200;
                HEAPF64[$237>>3] = $3199;
                $3206 = +HEAPF64[$235>>3];
                $3207 = (+__Z5IKsind($3206));
                $3208 = (+__Z5IKcosd($3206));
                $3209 = +HEAPF64[$102>>3];
                $3210 = +HEAPF64[$15>>3];
                $3211 = $3209 * $3210;
                $3212 = +HEAPF64[$20>>3];
                $3213 = +HEAPF64[$103>>3];
                $3214 = $3212 * $3213;
                $3215 = +HEAPF64[$30>>3];
                $3216 = $3209 * $3215;
                $3217 = +HEAPF64[$21>>3];
                $3218 = $3213 * $3217;
                $3219 = $3207 * $3215;
                $3220 = +HEAPF64[$31>>3];
                $3221 = $3207 * $3220;
                $3222 = +HEAPF64[$24>>3];
                $3223 = $3221 + $3222;
                $3224 = +HEAPF64[$23>>3];
                $3225 = $3209 * $3212;
                $3226 = +HEAPF64[$11>>3];
                $3227 = $3213 * $3226;
                $3228 = $3227 - $3225;
                $3229 = $3207 + $3228;
                $3230 = $3209 * $3217;
                $3231 = $3210 * $3213;
                $3232 = $3231 - $3230;
                $3233 = $3208 + $3232;
                $3234 = $3211 + $3219;
                $3235 = $3234 + $3218;
                $3236 = $3207 * $3216;
                $3237 = $3208 * $3213;
                $3238 = $3237 + $3236;
                $3239 = $3210 + $3238;
                $3240 = $3209 * $3226;
                $3241 = -$3215;
                $3242 = $3208 * $3241;
                $3243 = $3242 + $3240;
                $3244 = $3214 + $3243;
                $3245 = $3207 * $3213;
                $3246 = $3245 + $3226;
                $3247 = $3208 * $3216;
                $3248 = $3246 - $3247;
                $3249 = $3213 * $3219;
                $3250 = $3208 * $3209;
                $3251 = $3249 - $3250;
                $3252 = $3217 + $3251;
                $3253 = $3213 * $3241;
                $3254 = $3208 * $3253;
                $3255 = $3207 * $3209;
                $3256 = $3254 - $3255;
                $3257 = $3212 + $3256;
                $3258 = $3215 * $3218;
                $3259 = $3207 + $3258;
                $3260 = $3211 * $3215;
                $3261 = $3260 + $3259;
                $3262 = $3220 * $3222;
                $3263 = $3262 + $3261;
                $3264 = $3220 * $3224;
                $3265 = $3216 * $3226;
                $3266 = $3264 + $3265;
                $3267 = $3266 - $3208;
                $3268 = $3215 * $3214;
                $3269 = $3268 + $3267;
                $3270 = (+__Z5IKabsd($3223));
                $3271 = $3270 > 5.0000000000000004E-6;
                if ($3271) {
                 break L7;
                }
                $3272 = $3208 * $3220;
                $3273 = $3224 - $3272;
                $3274 = (+__Z5IKabsd($3273));
                $3275 = $3274 > 5.0000000000000004E-6;
                if ($3275) {
                 break L7;
                }
                $3276 = (+__Z5IKabsd($3229));
                $3277 = $3276 > 5.0000000000000004E-6;
                if ($3277) {
                 break L7;
                }
                $3278 = (+__Z5IKabsd($3233));
                $3279 = $3278 > 5.0000000000000004E-6;
                if ($3279) {
                 break L7;
                }
                $3280 = (+__Z5IKabsd($3235));
                $3281 = $3280 > 5.0000000000000004E-6;
                if ($3281) {
                 break L7;
                }
                $3282 = (+__Z5IKabsd($3239));
                $3283 = $3282 > 5.0000000000000004E-6;
                if ($3283) {
                 break L7;
                }
                $3284 = (+__Z5IKabsd($3244));
                $3285 = $3284 > 5.0000000000000004E-6;
                if ($3285) {
                 break L7;
                }
                $3286 = (+__Z5IKabsd($3248));
                $3287 = $3286 > 5.0000000000000004E-6;
                if ($3287) {
                 break L7;
                }
                $3288 = (+__Z5IKabsd($3252));
                $3289 = $3288 > 5.0000000000000004E-6;
                if ($3289) {
                 break L7;
                }
                $3290 = (+__Z5IKabsd($3257));
                $3291 = $3290 > 5.0000000000000004E-6;
                if ($3291) {
                 break L7;
                }
                $3292 = (+__Z5IKabsd($3263));
                $3293 = $3292 > 5.0000000000000004E-6;
                if ($3293) {
                 break L7;
                }
                $3294 = (+__Z5IKabsd($3269));
                $3295 = $3294 > 5.0000000000000004E-6;
                if ($3295) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos109,7);
                $3296 = HEAP32[$vinfos109>>2]|0;
                $3297 = ((($3296)) + 17|0);
                HEAP8[$3297>>0] = 1;
                $3298 = +HEAPF64[$this>>3];
                $3299 = HEAP32[$vinfos109>>2]|0;
                $3300 = ((($3299)) + 8|0);
                HEAPF64[$3300>>3] = $3298;
                $3301 = HEAP8[$238>>0]|0;
                $3302 = HEAP32[$vinfos109>>2]|0;
                $3303 = ((($3302)) + 19|0);
                HEAP8[$3303>>0] = $3301;
                $3304 = HEAP8[$239>>0]|0;
                $3305 = HEAP32[$vinfos109>>2]|0;
                $3306 = ((($3305)) + 20|0);
                HEAP8[$3306>>0] = $3304;
                $3307 = HEAP8[$240>>0]|0;
                $3308 = HEAP32[$vinfos109>>2]|0;
                $3309 = ((($3308)) + 18|0);
                HEAP8[$3309>>0] = $3307;
                $3310 = HEAP32[$vinfos109>>2]|0;
                $3311 = ((($3310)) + 41|0);
                HEAP8[$3311>>0] = 1;
                $3312 = +HEAPF64[$241>>3];
                $3313 = HEAP32[$vinfos109>>2]|0;
                $3314 = ((($3313)) + 32|0);
                HEAPF64[$3314>>3] = $3312;
                $3315 = HEAP8[$242>>0]|0;
                $3316 = HEAP32[$vinfos109>>2]|0;
                $3317 = ((($3316)) + 43|0);
                HEAP8[$3317>>0] = $3315;
                $3318 = HEAP8[$243>>0]|0;
                $3319 = HEAP32[$vinfos109>>2]|0;
                $3320 = ((($3319)) + 44|0);
                HEAP8[$3320>>0] = $3318;
                $3321 = HEAP8[$244>>0]|0;
                $3322 = HEAP32[$vinfos109>>2]|0;
                $3323 = ((($3322)) + 42|0);
                HEAP8[$3323>>0] = $3321;
                $3324 = HEAP32[$vinfos109>>2]|0;
                $3325 = ((($3324)) + 65|0);
                HEAP8[$3325>>0] = 1;
                $3326 = +HEAPF64[$245>>3];
                $3327 = HEAP32[$vinfos109>>2]|0;
                $3328 = ((($3327)) + 56|0);
                HEAPF64[$3328>>3] = $3326;
                $3329 = HEAP8[$246>>0]|0;
                $3330 = HEAP32[$vinfos109>>2]|0;
                $3331 = ((($3330)) + 67|0);
                HEAP8[$3331>>0] = $3329;
                $3332 = HEAP8[$247>>0]|0;
                $3333 = HEAP32[$vinfos109>>2]|0;
                $3334 = ((($3333)) + 68|0);
                HEAP8[$3334>>0] = $3332;
                $3335 = HEAP8[$248>>0]|0;
                $3336 = HEAP32[$vinfos109>>2]|0;
                $3337 = ((($3336)) + 66|0);
                HEAP8[$3337>>0] = $3335;
                $3338 = HEAP32[$vinfos109>>2]|0;
                $3339 = ((($3338)) + 89|0);
                HEAP8[$3339>>0] = 1;
                $3340 = +HEAPF64[$249>>3];
                $3341 = HEAP32[$vinfos109>>2]|0;
                $3342 = ((($3341)) + 80|0);
                HEAPF64[$3342>>3] = $3340;
                $3343 = HEAP8[$250>>0]|0;
                $3344 = HEAP32[$vinfos109>>2]|0;
                $3345 = ((($3344)) + 91|0);
                HEAP8[$3345>>0] = $3343;
                $3346 = HEAP8[$251>>0]|0;
                $3347 = HEAP32[$vinfos109>>2]|0;
                $3348 = ((($3347)) + 92|0);
                HEAP8[$3348>>0] = $3346;
                $3349 = HEAP8[$252>>0]|0;
                $3350 = HEAP32[$vinfos109>>2]|0;
                $3351 = ((($3350)) + 90|0);
                HEAP8[$3351>>0] = $3349;
                $3352 = HEAP32[$vinfos109>>2]|0;
                $3353 = ((($3352)) + 113|0);
                HEAP8[$3353>>0] = 1;
                $3354 = +HEAPF64[$101>>3];
                $3355 = HEAP32[$vinfos109>>2]|0;
                $3356 = ((($3355)) + 104|0);
                HEAPF64[$3356>>3] = $3354;
                $3357 = HEAP8[$99>>0]|0;
                $3358 = HEAP32[$vinfos109>>2]|0;
                $3359 = ((($3358)) + 115|0);
                HEAP8[$3359>>0] = $3357;
                $3360 = HEAP8[$100>>0]|0;
                $3361 = HEAP32[$vinfos109>>2]|0;
                $3362 = ((($3361)) + 116|0);
                HEAP8[$3362>>0] = $3360;
                $3363 = HEAP8[$96>>0]|0;
                $3364 = HEAP32[$vinfos109>>2]|0;
                $3365 = ((($3364)) + 114|0);
                HEAP8[$3365>>0] = $3363;
                $3366 = HEAP32[$vinfos109>>2]|0;
                $3367 = ((($3366)) + 137|0);
                HEAP8[$3367>>0] = 1;
                $3368 = +HEAPF64[$29>>3];
                $3369 = HEAP32[$vinfos109>>2]|0;
                $3370 = ((($3369)) + 128|0);
                HEAPF64[$3370>>3] = $3368;
                $3371 = HEAP8[$27>>0]|0;
                $3372 = HEAP32[$vinfos109>>2]|0;
                $3373 = ((($3372)) + 139|0);
                HEAP8[$3373>>0] = $3371;
                $3374 = HEAP8[$28>>0]|0;
                $3375 = HEAP32[$vinfos109>>2]|0;
                $3376 = ((($3375)) + 140|0);
                HEAP8[$3376>>0] = $3374;
                $3377 = HEAP8[$26>>0]|0;
                $3378 = HEAP32[$vinfos109>>2]|0;
                $3379 = ((($3378)) + 138|0);
                HEAP8[$3379>>0] = $3377;
                $3380 = HEAP32[$vinfos109>>2]|0;
                $3381 = ((($3380)) + 161|0);
                HEAP8[$3381>>0] = 1;
                $3382 = +HEAPF64[$235>>3];
                $3383 = HEAP32[$vinfos109>>2]|0;
                $3384 = ((($3383)) + 152|0);
                HEAPF64[$3384>>3] = $3382;
                $3385 = HEAP8[$233>>0]|0;
                $3386 = HEAP32[$vinfos109>>2]|0;
                $3387 = ((($3386)) + 163|0);
                HEAP8[$3387>>0] = $3385;
                $3388 = HEAP8[$234>>0]|0;
                $3389 = HEAP32[$vinfos109>>2]|0;
                $3390 = ((($3389)) + 164|0);
                HEAP8[$3390>>0] = $3388;
                $3391 = HEAP8[$230>>0]|0;
                $3392 = HEAP32[$vinfos109>>2]|0;
                $3393 = ((($3392)) + 162|0);
                HEAP8[$3393>>0] = $3391;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree110,0);
                $3394 = HEAP32[$solutions>>2]|0;
                $3395 = ((($3394)) + 8|0);
                $3396 = HEAP32[$3395>>2]|0;
                (FUNCTION_TABLE_iiii[$3396 & 31]($solutions,$vinfos109,$vfree110)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree110);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos109);
                break L7;
               }
              } while(0);
              $1814 = +HEAPF64[$19>>3];
              $1815 = +HEAPF64[$103>>3];
              $1816 = $1814 * $1815;
              $1817 = +HEAPF64[$102>>3];
              $1818 = +HEAPF64[$22>>3];
              $1819 = $1817 * $1818;
              $1820 = $1815 * $1818;
              $1821 = $1814 * $1817;
              $1822 = $1821 + $1820;
              $1823 = +HEAPF64[$29>>3];
              $1824 = (+__Z5IKabsd($1823));
              $1825 = $1824 + 3.14159265358979;
              $1826 = (+__Z6IKfmoddd($1825,6.2831853071795898));
              $1827 = $1826 + -3.14159265358979;
              $1828 = +HEAPF64[$24>>3];
              $1829 = +HEAPF64[$23>>3];
              $1830 = $1819 - $1816;
              $1831 = $1816 - $1819;
              $1832 = (+__Z5IKabsd($1827));
              $1833 = $1832 < 9.9999999999999995E-7;
              do {
               if ($1833) {
                $1834 = +HEAPF64[$25>>3];
                $1835 = $1834 + -1.0;
                $1836 = (+__Z5IKabsd($1835));
                $1837 = $1836 < 9.9999999999999995E-7;
                if (!($1837)) {
                 break;
                }
                $1838 = (+__Z5IKabsd($1814));
                $1839 = $1838 < 9.9999999999999995E-7;
                if (!($1839)) {
                 break;
                }
                $1840 = (+__Z5IKabsd($1818));
                $1841 = $1840 < 9.9999999999999995E-7;
                if (!($1841)) {
                 break;
                }
                $1842 = (+__Z5IKabsd($1828));
                $1843 = $1842 < 9.9999999999999995E-7;
                if (!($1843)) {
                 break;
                }
                $1844 = (+__Z5IKabsd($1829));
                $1845 = $1844 < 9.9999999999999995E-7;
                if (!($1845)) {
                 break;
                }
                $1846 = (+__Z5IKabsd($1830));
                $1847 = $1846 < 9.9999999999999995E-7;
                if (!($1847)) {
                 break;
                }
                $1848 = (+__Z5IKabsd($1831));
                $1849 = $1848 < 9.9999999999999995E-7;
                if (!($1849)) {
                 break;
                }
                $1850 = (+__Z5IKabsd($1822));
                $1851 = $1850 < 9.9999999999999995E-7;
                if (!($1851)) {
                 break;
                }
                HEAP8[$104>>0] = 1;
                $1852 = +HEAPF64[$15>>3];
                $1853 = +HEAPF64[$102>>3];
                $1854 = $1852 * $1853;
                $1855 = +HEAPF64[$11>>3];
                $1856 = +HEAPF64[$103>>3];
                $1857 = $1855 * $1856;
                $1858 = -$1857;
                $1859 = $1858 - $1854;
                $1860 = (+__Z5IKabsd($1859));
                $1861 = $1860 < 1.9999999999999999E-6;
                do {
                 if ($1861) {
                  $1862 = $1853 * $1855;
                  $1863 = $1852 * $1856;
                  $1864 = $1862 - $1863;
                  $1865 = (+__Z5IKabsd($1864));
                  $1866 = $1865 < 1.9999999999999999E-6;
                  if (!($1866)) {
                   break;
                  }
                  $1867 = (+__Z5IKsqrd($1859));
                  $1868 = (+__Z5IKsqrd($1864));
                  $1869 = $1867 + $1868;
                  $1870 = $1869 + -1.0;
                  $1871 = (+__Z5IKabsd($1870));
                  $1872 = !($1871 <= 1.9999999999999999E-6);
                  if (!($1872)) {
                   break L7;
                  }
                 }
                } while(0);
                $1873 = +HEAPF64[$102>>3];
                $1874 = $1852 * $1873;
                $1875 = +HEAPF64[$11>>3];
                $1876 = +HEAPF64[$103>>3];
                $1877 = $1875 * $1876;
                $1878 = -$1877;
                $1879 = $1878 - $1874;
                $1880 = $1873 * $1875;
                $1881 = $1852 * $1876;
                $1882 = $1880 - $1881;
                $1883 = (+__Z7IKatan2dd($1879,$1882));
                $1884 = (+__Z5IKsind($1883));
                $1885 = (+__Z5IKcosd($1883));
                $1886 = $1883 > 3.14159265358979;
                do {
                 if ($1886) {
                  $1887 = $1883 + -6.2831853071795898;
                  $1890 = $1887;
                 } else {
                  $1888 = $1883 < -3.14159265358979;
                  if (!($1888)) {
                   $1890 = $1883;
                   break;
                  }
                  $1889 = $1883 + 6.2831853071795898;
                  $1890 = $1889;
                 }
                } while(0);
                HEAP8[$105>>0] = 0;
                HEAP8[$106>>0] = -1;
                HEAPF64[$107>>3] = $1890;
                HEAPF64[$108>>3] = $1885;
                HEAPF64[$109>>3] = $1884;
                $1891 = +HEAPF64[$107>>3];
                $1892 = (+__Z5IKsind($1891));
                $1893 = (+__Z5IKcosd($1891));
                $1894 = +HEAPF64[$102>>3];
                $1895 = +HEAPF64[$103>>3];
                $1896 = $1892 * $1895;
                $1897 = $1893 * $1894;
                $1898 = +HEAPF64[$15>>3];
                $1899 = $1894 * $1898;
                $1900 = +HEAPF64[$21>>3];
                $1901 = $1895 * $1900;
                $1902 = $1899 + $1901;
                $1903 = $1892 + $1902;
                $1904 = +HEAPF64[$11>>3];
                $1905 = +HEAPF64[$20>>3];
                $1906 = $1895 * $1898;
                $1907 = $1893 + $1906;
                $1908 = $1894 * $1900;
                $1909 = $1907 - $1908;
                $1910 = $1892 * $1894;
                $1911 = $1910 + $1898;
                $1912 = $1893 * $1895;
                $1913 = $1912 + $1911;
                $1914 = $1894 * $1904;
                $1915 = $1895 * $1905;
                $1916 = $1914 + $1915;
                $1917 = $1916 - $1893;
                $1918 = $1896 - $1897;
                $1919 = $1918 + $1904;
                $1920 = $1918 + $1900;
                $1921 = $1905 - $1912;
                $1922 = $1921 - $1910;
                $1923 = (+__Z5IKabsd($1903));
                $1924 = $1923 > 5.0000000000000004E-6;
                if ($1924) {
                 break L7;
                }
                $1925 = $1895 * $1904;
                $1926 = $1892 + $1925;
                $1927 = $1894 * $1905;
                $1928 = $1926 - $1927;
                $1929 = (+__Z5IKabsd($1928));
                $1930 = $1929 > 5.0000000000000004E-6;
                if ($1930) {
                 break L7;
                }
                $1931 = (+__Z5IKabsd($1909));
                $1932 = $1931 > 5.0000000000000004E-6;
                if ($1932) {
                 break L7;
                }
                $1933 = (+__Z5IKabsd($1913));
                $1934 = $1933 > 5.0000000000000004E-6;
                if ($1934) {
                 break L7;
                }
                $1935 = (+__Z5IKabsd($1917));
                $1936 = $1935 > 5.0000000000000004E-6;
                if ($1936) {
                 break L7;
                }
                $1937 = (+__Z5IKabsd($1919));
                $1938 = $1937 > 5.0000000000000004E-6;
                if ($1938) {
                 break L7;
                }
                $1939 = (+__Z5IKabsd($1920));
                $1940 = $1939 > 5.0000000000000004E-6;
                if ($1940) {
                 break L7;
                }
                $1941 = (+__Z5IKabsd($1922));
                $1942 = $1941 > 5.0000000000000004E-6;
                if ($1942) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos43,7);
                $1943 = HEAP32[$vinfos43>>2]|0;
                $1944 = ((($1943)) + 17|0);
                HEAP8[$1944>>0] = 1;
                $1945 = +HEAPF64[$this>>3];
                $1946 = HEAP32[$vinfos43>>2]|0;
                $1947 = ((($1946)) + 8|0);
                HEAPF64[$1947>>3] = $1945;
                $1948 = HEAP8[$110>>0]|0;
                $1949 = HEAP32[$vinfos43>>2]|0;
                $1950 = ((($1949)) + 19|0);
                HEAP8[$1950>>0] = $1948;
                $1951 = HEAP8[$111>>0]|0;
                $1952 = HEAP32[$vinfos43>>2]|0;
                $1953 = ((($1952)) + 20|0);
                HEAP8[$1953>>0] = $1951;
                $1954 = HEAP8[$112>>0]|0;
                $1955 = HEAP32[$vinfos43>>2]|0;
                $1956 = ((($1955)) + 18|0);
                HEAP8[$1956>>0] = $1954;
                $1957 = HEAP32[$vinfos43>>2]|0;
                $1958 = ((($1957)) + 41|0);
                HEAP8[$1958>>0] = 1;
                $1959 = +HEAPF64[$113>>3];
                $1960 = HEAP32[$vinfos43>>2]|0;
                $1961 = ((($1960)) + 32|0);
                HEAPF64[$1961>>3] = $1959;
                $1962 = HEAP8[$114>>0]|0;
                $1963 = HEAP32[$vinfos43>>2]|0;
                $1964 = ((($1963)) + 43|0);
                HEAP8[$1964>>0] = $1962;
                $1965 = HEAP8[$115>>0]|0;
                $1966 = HEAP32[$vinfos43>>2]|0;
                $1967 = ((($1966)) + 44|0);
                HEAP8[$1967>>0] = $1965;
                $1968 = HEAP8[$116>>0]|0;
                $1969 = HEAP32[$vinfos43>>2]|0;
                $1970 = ((($1969)) + 42|0);
                HEAP8[$1970>>0] = $1968;
                $1971 = HEAP32[$vinfos43>>2]|0;
                $1972 = ((($1971)) + 65|0);
                HEAP8[$1972>>0] = 1;
                $1973 = +HEAPF64[$117>>3];
                $1974 = HEAP32[$vinfos43>>2]|0;
                $1975 = ((($1974)) + 56|0);
                HEAPF64[$1975>>3] = $1973;
                $1976 = HEAP8[$118>>0]|0;
                $1977 = HEAP32[$vinfos43>>2]|0;
                $1978 = ((($1977)) + 67|0);
                HEAP8[$1978>>0] = $1976;
                $1979 = HEAP8[$119>>0]|0;
                $1980 = HEAP32[$vinfos43>>2]|0;
                $1981 = ((($1980)) + 68|0);
                HEAP8[$1981>>0] = $1979;
                $1982 = HEAP8[$120>>0]|0;
                $1983 = HEAP32[$vinfos43>>2]|0;
                $1984 = ((($1983)) + 66|0);
                HEAP8[$1984>>0] = $1982;
                $1985 = HEAP32[$vinfos43>>2]|0;
                $1986 = ((($1985)) + 89|0);
                HEAP8[$1986>>0] = 1;
                $1987 = +HEAPF64[$121>>3];
                $1988 = HEAP32[$vinfos43>>2]|0;
                $1989 = ((($1988)) + 80|0);
                HEAPF64[$1989>>3] = $1987;
                $1990 = HEAP8[$122>>0]|0;
                $1991 = HEAP32[$vinfos43>>2]|0;
                $1992 = ((($1991)) + 91|0);
                HEAP8[$1992>>0] = $1990;
                $1993 = HEAP8[$123>>0]|0;
                $1994 = HEAP32[$vinfos43>>2]|0;
                $1995 = ((($1994)) + 92|0);
                HEAP8[$1995>>0] = $1993;
                $1996 = HEAP8[$124>>0]|0;
                $1997 = HEAP32[$vinfos43>>2]|0;
                $1998 = ((($1997)) + 90|0);
                HEAP8[$1998>>0] = $1996;
                $1999 = HEAP32[$vinfos43>>2]|0;
                $2000 = ((($1999)) + 113|0);
                HEAP8[$2000>>0] = 1;
                $2001 = +HEAPF64[$101>>3];
                $2002 = HEAP32[$vinfos43>>2]|0;
                $2003 = ((($2002)) + 104|0);
                HEAPF64[$2003>>3] = $2001;
                $2004 = HEAP8[$99>>0]|0;
                $2005 = HEAP32[$vinfos43>>2]|0;
                $2006 = ((($2005)) + 115|0);
                HEAP8[$2006>>0] = $2004;
                $2007 = HEAP8[$100>>0]|0;
                $2008 = HEAP32[$vinfos43>>2]|0;
                $2009 = ((($2008)) + 116|0);
                HEAP8[$2009>>0] = $2007;
                $2010 = HEAP8[$96>>0]|0;
                $2011 = HEAP32[$vinfos43>>2]|0;
                $2012 = ((($2011)) + 114|0);
                HEAP8[$2012>>0] = $2010;
                $2013 = HEAP32[$vinfos43>>2]|0;
                $2014 = ((($2013)) + 137|0);
                HEAP8[$2014>>0] = 1;
                $2015 = +HEAPF64[$29>>3];
                $2016 = HEAP32[$vinfos43>>2]|0;
                $2017 = ((($2016)) + 128|0);
                HEAPF64[$2017>>3] = $2015;
                $2018 = HEAP8[$27>>0]|0;
                $2019 = HEAP32[$vinfos43>>2]|0;
                $2020 = ((($2019)) + 139|0);
                HEAP8[$2020>>0] = $2018;
                $2021 = HEAP8[$28>>0]|0;
                $2022 = HEAP32[$vinfos43>>2]|0;
                $2023 = ((($2022)) + 140|0);
                HEAP8[$2023>>0] = $2021;
                $2024 = HEAP8[$26>>0]|0;
                $2025 = HEAP32[$vinfos43>>2]|0;
                $2026 = ((($2025)) + 138|0);
                HEAP8[$2026>>0] = $2024;
                $2027 = HEAP32[$vinfos43>>2]|0;
                $2028 = ((($2027)) + 161|0);
                HEAP8[$2028>>0] = 1;
                $2029 = +HEAPF64[$107>>3];
                $2030 = HEAP32[$vinfos43>>2]|0;
                $2031 = ((($2030)) + 152|0);
                HEAPF64[$2031>>3] = $2029;
                $2032 = HEAP8[$105>>0]|0;
                $2033 = HEAP32[$vinfos43>>2]|0;
                $2034 = ((($2033)) + 163|0);
                HEAP8[$2034>>0] = $2032;
                $2035 = HEAP8[$106>>0]|0;
                $2036 = HEAP32[$vinfos43>>2]|0;
                $2037 = ((($2036)) + 164|0);
                HEAP8[$2037>>0] = $2035;
                $2038 = HEAP8[$104>>0]|0;
                $2039 = HEAP32[$vinfos43>>2]|0;
                $2040 = ((($2039)) + 162|0);
                HEAP8[$2040>>0] = $2038;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree44,0);
                $2041 = HEAP32[$solutions>>2]|0;
                $2042 = ((($2041)) + 8|0);
                $2043 = HEAP32[$2042>>2]|0;
                (FUNCTION_TABLE_iiii[$2043 & 31]($solutions,$vinfos43,$vfree44)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree44);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos43);
                break L7;
               }
              } while(0);
              $2044 = +HEAPF64[$102>>3];
              $2045 = +HEAPF64[$19>>3];
              $2046 = $2044 * $2045;
              $2047 = +HEAPF64[$22>>3];
              $2048 = +HEAPF64[$103>>3];
              $2049 = $2045 * $2048;
              $2050 = +HEAPF64[$29>>3];
              $2051 = $2050 + -3.14159265358979;
              $2052 = (+__Z5IKabsd($2051));
              $2053 = $2052 + 3.14159265358979;
              $2054 = (+__Z6IKfmoddd($2053,6.2831853071795898));
              $2055 = $2054 + -3.14159265358979;
              $2056 = +HEAPF64[$24>>3];
              $2057 = +HEAPF64[$23>>3];
              $2058 = $2044 * $2047;
              $2059 = $2058 - $2049;
              $2060 = $2049 - $2058;
              $2061 = $2047 * $2048;
              $2062 = $2046 + $2061;
              $2063 = -$2061;
              $2064 = $2063 - $2046;
              $2065 = (+__Z5IKabsd($2055));
              $2066 = $2065 < 9.9999999999999995E-7;
              do {
               if ($2066) {
                $2067 = +HEAPF64[$25>>3];
                $2068 = $2067 + 1.0;
                $2069 = (+__Z5IKabsd($2068));
                $2070 = $2069 < 9.9999999999999995E-7;
                if (!($2070)) {
                 break;
                }
                $2071 = (+__Z5IKabsd($2045));
                $2072 = $2071 < 9.9999999999999995E-7;
                if (!($2072)) {
                 break;
                }
                $2073 = (+__Z5IKabsd($2047));
                $2074 = $2073 < 9.9999999999999995E-7;
                if (!($2074)) {
                 break;
                }
                $2075 = (+__Z5IKabsd($2056));
                $2076 = $2075 < 9.9999999999999995E-7;
                if (!($2076)) {
                 break;
                }
                $2077 = (+__Z5IKabsd($2057));
                $2078 = $2077 < 9.9999999999999995E-7;
                if (!($2078)) {
                 break;
                }
                $2079 = (+__Z5IKabsd($2059));
                $2080 = $2079 < 9.9999999999999995E-7;
                if (!($2080)) {
                 break;
                }
                $2081 = (+__Z5IKabsd($2060));
                $2082 = $2081 < 9.9999999999999995E-7;
                if (!($2082)) {
                 break;
                }
                $2083 = (+__Z5IKabsd($2062));
                $2084 = $2083 < 9.9999999999999995E-7;
                if (!($2084)) {
                 break;
                }
                $2085 = (+__Z5IKabsd($2064));
                $2086 = $2085 < 9.9999999999999995E-7;
                if (!($2086)) {
                 break;
                }
                HEAP8[$125>>0] = 1;
                $2087 = +HEAPF64[$11>>3];
                $2088 = +HEAPF64[$102>>3];
                $2089 = +HEAPF64[$15>>3];
                $2090 = $2088 * $2089;
                $2091 = +HEAPF64[$103>>3];
                $2092 = $2087 * $2091;
                $2093 = $2090 - $2092;
                $2094 = (+__Z5IKabsd($2093));
                $2095 = $2094 < 1.9999999999999999E-6;
                do {
                 if ($2095) {
                  $2096 = $2089 * $2091;
                  $2097 = $2087 * $2088;
                  $2098 = -$2097;
                  $2099 = $2098 - $2096;
                  $2100 = (+__Z5IKabsd($2099));
                  $2101 = $2100 < 1.9999999999999999E-6;
                  if (!($2101)) {
                   break;
                  }
                  $2102 = (+__Z5IKsqrd($2093));
                  $2103 = (+__Z5IKsqrd($2099));
                  $2104 = $2102 + $2103;
                  $2105 = $2104 + -1.0;
                  $2106 = (+__Z5IKabsd($2105));
                  $2107 = !($2106 <= 1.9999999999999999E-6);
                  if (!($2107)) {
                   break L7;
                  }
                 }
                } while(0);
                $2108 = +HEAPF64[$102>>3];
                $2109 = +HEAPF64[$15>>3];
                $2110 = $2108 * $2109;
                $2111 = +HEAPF64[$103>>3];
                $2112 = $2087 * $2111;
                $2113 = $2110 - $2112;
                $2114 = $2109 * $2111;
                $2115 = $2087 * $2108;
                $2116 = -$2115;
                $2117 = $2116 - $2114;
                $2118 = (+__Z7IKatan2dd($2113,$2117));
                $2119 = (+__Z5IKsind($2118));
                $2120 = (+__Z5IKcosd($2118));
                $2121 = $2118 > 3.14159265358979;
                do {
                 if ($2121) {
                  $2122 = $2118 + -6.2831853071795898;
                  $2125 = $2122;
                 } else {
                  $2123 = $2118 < -3.14159265358979;
                  if (!($2123)) {
                   $2125 = $2118;
                   break;
                  }
                  $2124 = $2118 + 6.2831853071795898;
                  $2125 = $2124;
                 }
                } while(0);
                HEAP8[$126>>0] = 0;
                HEAP8[$127>>0] = -1;
                HEAPF64[$128>>3] = $2125;
                HEAPF64[$129>>3] = $2120;
                HEAPF64[$130>>3] = $2119;
                $2126 = +HEAPF64[$128>>3];
                $2127 = (+__Z5IKcosd($2126));
                $2128 = (+__Z5IKsind($2126));
                $2129 = +HEAPF64[$102>>3];
                $2130 = +HEAPF64[$103>>3];
                $2131 = $2127 * $2130;
                $2132 = $2128 * $2129;
                $2133 = +HEAPF64[$11>>3];
                $2134 = $2129 * $2133;
                $2135 = +HEAPF64[$20>>3];
                $2136 = $2130 * $2135;
                $2137 = $2134 + $2136;
                $2138 = $2127 + $2137;
                $2139 = +HEAPF64[$21>>3];
                $2140 = $2129 * $2139;
                $2141 = +HEAPF64[$15>>3];
                $2142 = $2130 * $2141;
                $2143 = $2142 - $2140;
                $2144 = $2127 + $2143;
                $2145 = $2129 * $2141;
                $2146 = $2130 * $2139;
                $2147 = $2146 + $2145;
                $2148 = $2147 - $2128;
                $2149 = $2127 * $2129;
                $2150 = $2128 * $2130;
                $2151 = $2149 + $2150;
                $2152 = $2133 + $2151;
                $2153 = $2131 + $2141;
                $2154 = $2153 - $2132;
                $2155 = $2131 + $2135;
                $2156 = $2155 - $2132;
                $2157 = -$2149;
                $2158 = $2157 - $2150;
                $2159 = $2158 + $2139;
                $2160 = (+__Z5IKabsd($2138));
                $2161 = $2160 > 5.0000000000000004E-6;
                if ($2161) {
                 break L7;
                }
                $2162 = $2130 * $2133;
                $2163 = $2129 * $2135;
                $2164 = $2162 - $2163;
                $2165 = $2128 + $2164;
                $2166 = (+__Z5IKabsd($2165));
                $2167 = $2166 > 5.0000000000000004E-6;
                if ($2167) {
                 break L7;
                }
                $2168 = (+__Z5IKabsd($2144));
                $2169 = $2168 > 5.0000000000000004E-6;
                if ($2169) {
                 break L7;
                }
                $2170 = (+__Z5IKabsd($2148));
                $2171 = $2170 > 5.0000000000000004E-6;
                if ($2171) {
                 break L7;
                }
                $2172 = (+__Z5IKabsd($2152));
                $2173 = $2172 > 5.0000000000000004E-6;
                if ($2173) {
                 break L7;
                }
                $2174 = (+__Z5IKabsd($2154));
                $2175 = $2174 > 5.0000000000000004E-6;
                if ($2175) {
                 break L7;
                }
                $2176 = (+__Z5IKabsd($2156));
                $2177 = $2176 > 5.0000000000000004E-6;
                if ($2177) {
                 break L7;
                }
                $2178 = (+__Z5IKabsd($2159));
                $2179 = $2178 > 5.0000000000000004E-6;
                if ($2179) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos54,7);
                $2180 = HEAP32[$vinfos54>>2]|0;
                $2181 = ((($2180)) + 17|0);
                HEAP8[$2181>>0] = 1;
                $2182 = +HEAPF64[$this>>3];
                $2183 = HEAP32[$vinfos54>>2]|0;
                $2184 = ((($2183)) + 8|0);
                HEAPF64[$2184>>3] = $2182;
                $2185 = HEAP8[$131>>0]|0;
                $2186 = HEAP32[$vinfos54>>2]|0;
                $2187 = ((($2186)) + 19|0);
                HEAP8[$2187>>0] = $2185;
                $2188 = HEAP8[$132>>0]|0;
                $2189 = HEAP32[$vinfos54>>2]|0;
                $2190 = ((($2189)) + 20|0);
                HEAP8[$2190>>0] = $2188;
                $2191 = HEAP8[$133>>0]|0;
                $2192 = HEAP32[$vinfos54>>2]|0;
                $2193 = ((($2192)) + 18|0);
                HEAP8[$2193>>0] = $2191;
                $2194 = HEAP32[$vinfos54>>2]|0;
                $2195 = ((($2194)) + 41|0);
                HEAP8[$2195>>0] = 1;
                $2196 = +HEAPF64[$134>>3];
                $2197 = HEAP32[$vinfos54>>2]|0;
                $2198 = ((($2197)) + 32|0);
                HEAPF64[$2198>>3] = $2196;
                $2199 = HEAP8[$135>>0]|0;
                $2200 = HEAP32[$vinfos54>>2]|0;
                $2201 = ((($2200)) + 43|0);
                HEAP8[$2201>>0] = $2199;
                $2202 = HEAP8[$136>>0]|0;
                $2203 = HEAP32[$vinfos54>>2]|0;
                $2204 = ((($2203)) + 44|0);
                HEAP8[$2204>>0] = $2202;
                $2205 = HEAP8[$137>>0]|0;
                $2206 = HEAP32[$vinfos54>>2]|0;
                $2207 = ((($2206)) + 42|0);
                HEAP8[$2207>>0] = $2205;
                $2208 = HEAP32[$vinfos54>>2]|0;
                $2209 = ((($2208)) + 65|0);
                HEAP8[$2209>>0] = 1;
                $2210 = +HEAPF64[$138>>3];
                $2211 = HEAP32[$vinfos54>>2]|0;
                $2212 = ((($2211)) + 56|0);
                HEAPF64[$2212>>3] = $2210;
                $2213 = HEAP8[$139>>0]|0;
                $2214 = HEAP32[$vinfos54>>2]|0;
                $2215 = ((($2214)) + 67|0);
                HEAP8[$2215>>0] = $2213;
                $2216 = HEAP8[$140>>0]|0;
                $2217 = HEAP32[$vinfos54>>2]|0;
                $2218 = ((($2217)) + 68|0);
                HEAP8[$2218>>0] = $2216;
                $2219 = HEAP8[$141>>0]|0;
                $2220 = HEAP32[$vinfos54>>2]|0;
                $2221 = ((($2220)) + 66|0);
                HEAP8[$2221>>0] = $2219;
                $2222 = HEAP32[$vinfos54>>2]|0;
                $2223 = ((($2222)) + 89|0);
                HEAP8[$2223>>0] = 1;
                $2224 = +HEAPF64[$142>>3];
                $2225 = HEAP32[$vinfos54>>2]|0;
                $2226 = ((($2225)) + 80|0);
                HEAPF64[$2226>>3] = $2224;
                $2227 = HEAP8[$143>>0]|0;
                $2228 = HEAP32[$vinfos54>>2]|0;
                $2229 = ((($2228)) + 91|0);
                HEAP8[$2229>>0] = $2227;
                $2230 = HEAP8[$144>>0]|0;
                $2231 = HEAP32[$vinfos54>>2]|0;
                $2232 = ((($2231)) + 92|0);
                HEAP8[$2232>>0] = $2230;
                $2233 = HEAP8[$145>>0]|0;
                $2234 = HEAP32[$vinfos54>>2]|0;
                $2235 = ((($2234)) + 90|0);
                HEAP8[$2235>>0] = $2233;
                $2236 = HEAP32[$vinfos54>>2]|0;
                $2237 = ((($2236)) + 113|0);
                HEAP8[$2237>>0] = 1;
                $2238 = +HEAPF64[$101>>3];
                $2239 = HEAP32[$vinfos54>>2]|0;
                $2240 = ((($2239)) + 104|0);
                HEAPF64[$2240>>3] = $2238;
                $2241 = HEAP8[$99>>0]|0;
                $2242 = HEAP32[$vinfos54>>2]|0;
                $2243 = ((($2242)) + 115|0);
                HEAP8[$2243>>0] = $2241;
                $2244 = HEAP8[$100>>0]|0;
                $2245 = HEAP32[$vinfos54>>2]|0;
                $2246 = ((($2245)) + 116|0);
                HEAP8[$2246>>0] = $2244;
                $2247 = HEAP8[$96>>0]|0;
                $2248 = HEAP32[$vinfos54>>2]|0;
                $2249 = ((($2248)) + 114|0);
                HEAP8[$2249>>0] = $2247;
                $2250 = HEAP32[$vinfos54>>2]|0;
                $2251 = ((($2250)) + 137|0);
                HEAP8[$2251>>0] = 1;
                $2252 = +HEAPF64[$29>>3];
                $2253 = HEAP32[$vinfos54>>2]|0;
                $2254 = ((($2253)) + 128|0);
                HEAPF64[$2254>>3] = $2252;
                $2255 = HEAP8[$27>>0]|0;
                $2256 = HEAP32[$vinfos54>>2]|0;
                $2257 = ((($2256)) + 139|0);
                HEAP8[$2257>>0] = $2255;
                $2258 = HEAP8[$28>>0]|0;
                $2259 = HEAP32[$vinfos54>>2]|0;
                $2260 = ((($2259)) + 140|0);
                HEAP8[$2260>>0] = $2258;
                $2261 = HEAP8[$26>>0]|0;
                $2262 = HEAP32[$vinfos54>>2]|0;
                $2263 = ((($2262)) + 138|0);
                HEAP8[$2263>>0] = $2261;
                $2264 = HEAP32[$vinfos54>>2]|0;
                $2265 = ((($2264)) + 161|0);
                HEAP8[$2265>>0] = 1;
                $2266 = +HEAPF64[$128>>3];
                $2267 = HEAP32[$vinfos54>>2]|0;
                $2268 = ((($2267)) + 152|0);
                HEAPF64[$2268>>3] = $2266;
                $2269 = HEAP8[$126>>0]|0;
                $2270 = HEAP32[$vinfos54>>2]|0;
                $2271 = ((($2270)) + 163|0);
                HEAP8[$2271>>0] = $2269;
                $2272 = HEAP8[$127>>0]|0;
                $2273 = HEAP32[$vinfos54>>2]|0;
                $2274 = ((($2273)) + 164|0);
                HEAP8[$2274>>0] = $2272;
                $2275 = HEAP8[$125>>0]|0;
                $2276 = HEAP32[$vinfos54>>2]|0;
                $2277 = ((($2276)) + 162|0);
                HEAP8[$2277>>0] = $2275;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree55,0);
                $2278 = HEAP32[$solutions>>2]|0;
                $2279 = ((($2278)) + 8|0);
                $2280 = HEAP32[$2279>>2]|0;
                (FUNCTION_TABLE_iiii[$2280 & 31]($solutions,$vinfos54,$vfree55)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree55);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos54);
                break L7;
               }
              } while(0);
              $2281 = +HEAPF64[$25>>3];
              $2282 = +HEAPF64[$30>>3];
              $2283 = +HEAPF64[$31>>3];
              $2284 = +HEAPF64[$22>>3];
              $2285 = $2283 + $2284;
              $2286 = +HEAPF64[$101>>3];
              $2287 = $2286 + -1.5707963267949001;
              $2288 = (+__Z5IKabsd($2287));
              $2289 = $2288 + 3.14159265358979;
              $2290 = (+__Z6IKfmoddd($2289,6.2831853071795898));
              $2291 = $2290 + -3.14159265358979;
              $2292 = +HEAPF64[$19>>3];
              $2293 = $2282 * $2284;
              $2294 = $2281 * $2283;
              $2295 = $2294 + $2293;
              $2296 = +HEAPF64[$23>>3];
              $2297 = $2282 * $2296;
              $2298 = +HEAPF64[$20>>3];
              $2299 = $2283 * $2298;
              $2300 = $2297 - $2299;
              $2301 = +HEAPF64[$24>>3];
              $2302 = $2282 * $2301;
              $2303 = +HEAPF64[$21>>3];
              $2304 = $2283 * $2303;
              $2305 = $2302 - $2304;
              $2306 = $2281 * $2282;
              $2307 = $2306 + -1.0;
              $2308 = $2283 * $2284;
              $2309 = $2307 - $2308;
              $2310 = (+__Z5IKabsd($2291));
              $2311 = $2310 < 9.9999999999999995E-7;
              do {
               if ($2311) {
                $2312 = $2281 - $2282;
                $2313 = (+__Z5IKabsd($2312));
                $2314 = $2313 < 9.9999999999999995E-7;
                if (!($2314)) {
                 break;
                }
                $2315 = (+__Z5IKabsd($2292));
                $2316 = $2315 < 9.9999999999999995E-7;
                if (!($2316)) {
                 break;
                }
                $2317 = (+__Z5IKabsd($2285));
                $2318 = $2317 < 9.9999999999999995E-7;
                if (!($2318)) {
                 break;
                }
                $2319 = (+__Z5IKabsd($2295));
                $2320 = $2319 < 9.9999999999999995E-7;
                if (!($2320)) {
                 break;
                }
                $2321 = (+__Z5IKabsd($2300));
                $2322 = $2321 < 9.9999999999999995E-7;
                if (!($2322)) {
                 break;
                }
                $2323 = (+__Z5IKabsd($2305));
                $2324 = $2323 < 9.9999999999999995E-7;
                if (!($2324)) {
                 break;
                }
                $2325 = (+__Z5IKabsd($2309));
                $2326 = $2325 < 9.9999999999999995E-7;
                if (!($2326)) {
                 break;
                }
                HEAP8[$146>>0] = 1;
                $2327 = +HEAPF64[$11>>3];
                $2328 = -$2327;
                $2329 = (+__Z5IKabsd($2328));
                $2330 = $2329 < 1.9999999999999999E-6;
                do {
                 if ($2330) {
                  $2331 = +HEAPF64[$15>>3];
                  $2332 = -$2331;
                  $2333 = (+__Z5IKabsd($2332));
                  $2334 = $2333 < 1.9999999999999999E-6;
                  if (!($2334)) {
                   break;
                  }
                  $2335 = (+__Z5IKsqrd($2328));
                  $2336 = (+__Z5IKsqrd($2332));
                  $2337 = $2335 + $2336;
                  $2338 = $2337 + -1.0;
                  $2339 = (+__Z5IKabsd($2338));
                  $2340 = !($2339 <= 1.9999999999999999E-6);
                  if (!($2340)) {
                   break L7;
                  }
                 }
                } while(0);
                $2341 = +HEAPF64[$11>>3];
                $2342 = -$2341;
                $2343 = +HEAPF64[$15>>3];
                $2344 = -$2343;
                $2345 = (+__Z7IKatan2dd($2342,$2344));
                $2346 = (+__Z5IKsind($2345));
                $2347 = (+__Z5IKcosd($2345));
                $2348 = $2345 > 3.14159265358979;
                do {
                 if ($2348) {
                  $2349 = $2345 + -6.2831853071795898;
                  $2352 = $2349;
                 } else {
                  $2350 = $2345 < -3.14159265358979;
                  if (!($2350)) {
                   $2352 = $2345;
                   break;
                  }
                  $2351 = $2345 + 6.2831853071795898;
                  $2352 = $2351;
                 }
                } while(0);
                HEAP8[$147>>0] = 0;
                HEAP8[$148>>0] = -1;
                HEAPF64[$149>>3] = $2352;
                HEAPF64[$150>>3] = $2347;
                HEAPF64[$151>>3] = $2346;
                $2353 = +HEAPF64[$149>>3];
                $2354 = (+__Z5IKcosd($2353));
                $2355 = (+__Z5IKsind($2353));
                $2356 = +HEAPF64[$22>>3];
                $2357 = +HEAPF64[$11>>3];
                $2358 = $2355 + $2357;
                $2359 = $2354 * $2356;
                $2360 = +HEAPF64[$23>>3];
                $2361 = $2359 + $2360;
                $2362 = +HEAPF64[$25>>3];
                $2363 = $2355 * $2362;
                $2364 = +HEAPF64[$21>>3];
                $2365 = $2363 + $2364;
                $2366 = $2355 * $2356;
                $2367 = +HEAPF64[$24>>3];
                $2368 = $2367 - $2366;
                $2369 = $2354 * $2362;
                $2370 = +HEAPF64[$20>>3];
                $2371 = $2370 - $2369;
                $2372 = $2356 * $2367;
                $2373 = $2355 - $2372;
                $2374 = $2362 * $2364;
                $2375 = $2374 + $2373;
                $2376 = $2356 * $2360;
                $2377 = $2362 * $2370;
                $2378 = $2377 - $2376;
                $2379 = $2378 - $2354;
                $2380 = (+__Z5IKabsd($2358));
                $2381 = $2380 > 5.0000000000000004E-6;
                if ($2381) {
                 break L7;
                }
                $2382 = +HEAPF64[$15>>3];
                $2383 = $2354 + $2382;
                $2384 = (+__Z5IKabsd($2383));
                $2385 = $2384 > 5.0000000000000004E-6;
                if ($2385) {
                 break L7;
                }
                $2386 = (+__Z5IKabsd($2361));
                $2387 = $2386 > 5.0000000000000004E-6;
                if ($2387) {
                 break L7;
                }
                $2388 = (+__Z5IKabsd($2365));
                $2389 = $2388 > 5.0000000000000004E-6;
                if ($2389) {
                 break L7;
                }
                $2390 = (+__Z5IKabsd($2368));
                $2391 = $2390 > 5.0000000000000004E-6;
                if ($2391) {
                 break L7;
                }
                $2392 = (+__Z5IKabsd($2371));
                $2393 = $2392 > 5.0000000000000004E-6;
                if ($2393) {
                 break L7;
                }
                $2394 = (+__Z5IKabsd($2375));
                $2395 = $2394 > 5.0000000000000004E-6;
                if ($2395) {
                 break L7;
                }
                $2396 = (+__Z5IKabsd($2379));
                $2397 = $2396 > 5.0000000000000004E-6;
                if ($2397) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos65,7);
                $2398 = HEAP32[$vinfos65>>2]|0;
                $2399 = ((($2398)) + 17|0);
                HEAP8[$2399>>0] = 1;
                $2400 = +HEAPF64[$this>>3];
                $2401 = HEAP32[$vinfos65>>2]|0;
                $2402 = ((($2401)) + 8|0);
                HEAPF64[$2402>>3] = $2400;
                $2403 = HEAP8[$152>>0]|0;
                $2404 = HEAP32[$vinfos65>>2]|0;
                $2405 = ((($2404)) + 19|0);
                HEAP8[$2405>>0] = $2403;
                $2406 = HEAP8[$153>>0]|0;
                $2407 = HEAP32[$vinfos65>>2]|0;
                $2408 = ((($2407)) + 20|0);
                HEAP8[$2408>>0] = $2406;
                $2409 = HEAP8[$154>>0]|0;
                $2410 = HEAP32[$vinfos65>>2]|0;
                $2411 = ((($2410)) + 18|0);
                HEAP8[$2411>>0] = $2409;
                $2412 = HEAP32[$vinfos65>>2]|0;
                $2413 = ((($2412)) + 41|0);
                HEAP8[$2413>>0] = 1;
                $2414 = +HEAPF64[$155>>3];
                $2415 = HEAP32[$vinfos65>>2]|0;
                $2416 = ((($2415)) + 32|0);
                HEAPF64[$2416>>3] = $2414;
                $2417 = HEAP8[$156>>0]|0;
                $2418 = HEAP32[$vinfos65>>2]|0;
                $2419 = ((($2418)) + 43|0);
                HEAP8[$2419>>0] = $2417;
                $2420 = HEAP8[$157>>0]|0;
                $2421 = HEAP32[$vinfos65>>2]|0;
                $2422 = ((($2421)) + 44|0);
                HEAP8[$2422>>0] = $2420;
                $2423 = HEAP8[$158>>0]|0;
                $2424 = HEAP32[$vinfos65>>2]|0;
                $2425 = ((($2424)) + 42|0);
                HEAP8[$2425>>0] = $2423;
                $2426 = HEAP32[$vinfos65>>2]|0;
                $2427 = ((($2426)) + 65|0);
                HEAP8[$2427>>0] = 1;
                $2428 = +HEAPF64[$159>>3];
                $2429 = HEAP32[$vinfos65>>2]|0;
                $2430 = ((($2429)) + 56|0);
                HEAPF64[$2430>>3] = $2428;
                $2431 = HEAP8[$160>>0]|0;
                $2432 = HEAP32[$vinfos65>>2]|0;
                $2433 = ((($2432)) + 67|0);
                HEAP8[$2433>>0] = $2431;
                $2434 = HEAP8[$161>>0]|0;
                $2435 = HEAP32[$vinfos65>>2]|0;
                $2436 = ((($2435)) + 68|0);
                HEAP8[$2436>>0] = $2434;
                $2437 = HEAP8[$162>>0]|0;
                $2438 = HEAP32[$vinfos65>>2]|0;
                $2439 = ((($2438)) + 66|0);
                HEAP8[$2439>>0] = $2437;
                $2440 = HEAP32[$vinfos65>>2]|0;
                $2441 = ((($2440)) + 89|0);
                HEAP8[$2441>>0] = 1;
                $2442 = +HEAPF64[$163>>3];
                $2443 = HEAP32[$vinfos65>>2]|0;
                $2444 = ((($2443)) + 80|0);
                HEAPF64[$2444>>3] = $2442;
                $2445 = HEAP8[$164>>0]|0;
                $2446 = HEAP32[$vinfos65>>2]|0;
                $2447 = ((($2446)) + 91|0);
                HEAP8[$2447>>0] = $2445;
                $2448 = HEAP8[$165>>0]|0;
                $2449 = HEAP32[$vinfos65>>2]|0;
                $2450 = ((($2449)) + 92|0);
                HEAP8[$2450>>0] = $2448;
                $2451 = HEAP8[$166>>0]|0;
                $2452 = HEAP32[$vinfos65>>2]|0;
                $2453 = ((($2452)) + 90|0);
                HEAP8[$2453>>0] = $2451;
                $2454 = HEAP32[$vinfos65>>2]|0;
                $2455 = ((($2454)) + 113|0);
                HEAP8[$2455>>0] = 1;
                $2456 = +HEAPF64[$101>>3];
                $2457 = HEAP32[$vinfos65>>2]|0;
                $2458 = ((($2457)) + 104|0);
                HEAPF64[$2458>>3] = $2456;
                $2459 = HEAP8[$99>>0]|0;
                $2460 = HEAP32[$vinfos65>>2]|0;
                $2461 = ((($2460)) + 115|0);
                HEAP8[$2461>>0] = $2459;
                $2462 = HEAP8[$100>>0]|0;
                $2463 = HEAP32[$vinfos65>>2]|0;
                $2464 = ((($2463)) + 116|0);
                HEAP8[$2464>>0] = $2462;
                $2465 = HEAP8[$96>>0]|0;
                $2466 = HEAP32[$vinfos65>>2]|0;
                $2467 = ((($2466)) + 114|0);
                HEAP8[$2467>>0] = $2465;
                $2468 = HEAP32[$vinfos65>>2]|0;
                $2469 = ((($2468)) + 137|0);
                HEAP8[$2469>>0] = 1;
                $2470 = +HEAPF64[$29>>3];
                $2471 = HEAP32[$vinfos65>>2]|0;
                $2472 = ((($2471)) + 128|0);
                HEAPF64[$2472>>3] = $2470;
                $2473 = HEAP8[$27>>0]|0;
                $2474 = HEAP32[$vinfos65>>2]|0;
                $2475 = ((($2474)) + 139|0);
                HEAP8[$2475>>0] = $2473;
                $2476 = HEAP8[$28>>0]|0;
                $2477 = HEAP32[$vinfos65>>2]|0;
                $2478 = ((($2477)) + 140|0);
                HEAP8[$2478>>0] = $2476;
                $2479 = HEAP8[$26>>0]|0;
                $2480 = HEAP32[$vinfos65>>2]|0;
                $2481 = ((($2480)) + 138|0);
                HEAP8[$2481>>0] = $2479;
                $2482 = HEAP32[$vinfos65>>2]|0;
                $2483 = ((($2482)) + 161|0);
                HEAP8[$2483>>0] = 1;
                $2484 = +HEAPF64[$149>>3];
                $2485 = HEAP32[$vinfos65>>2]|0;
                $2486 = ((($2485)) + 152|0);
                HEAPF64[$2486>>3] = $2484;
                $2487 = HEAP8[$147>>0]|0;
                $2488 = HEAP32[$vinfos65>>2]|0;
                $2489 = ((($2488)) + 163|0);
                HEAP8[$2489>>0] = $2487;
                $2490 = HEAP8[$148>>0]|0;
                $2491 = HEAP32[$vinfos65>>2]|0;
                $2492 = ((($2491)) + 164|0);
                HEAP8[$2492>>0] = $2490;
                $2493 = HEAP8[$146>>0]|0;
                $2494 = HEAP32[$vinfos65>>2]|0;
                $2495 = ((($2494)) + 162|0);
                HEAP8[$2495>>0] = $2493;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree66,0);
                $2496 = HEAP32[$solutions>>2]|0;
                $2497 = ((($2496)) + 8|0);
                $2498 = HEAP32[$2497>>2]|0;
                (FUNCTION_TABLE_iiii[$2498 & 31]($solutions,$vinfos65,$vfree66)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree66);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos65);
                break L7;
               }
              } while(0);
              $2499 = +HEAPF64[$25>>3];
              $2500 = +HEAPF64[$30>>3];
              $2501 = +HEAPF64[$101>>3];
              $2502 = $2501 + 1.5707963267949001;
              $2503 = (+__Z5IKabsd($2502));
              $2504 = $2503 + 3.14159265358979;
              $2505 = (+__Z6IKfmoddd($2504,6.2831853071795898));
              $2506 = $2505 + -3.14159265358979;
              $2507 = +HEAPF64[$19>>3];
              $2508 = +HEAPF64[$31>>3];
              $2509 = +HEAPF64[$22>>3];
              $2510 = $2509 - $2508;
              $2511 = $2508 - $2509;
              $2512 = $2500 * $2509;
              $2513 = $2499 * $2508;
              $2514 = $2513 - $2512;
              $2515 = +HEAPF64[$20>>3];
              $2516 = $2508 * $2515;
              $2517 = +HEAPF64[$23>>3];
              $2518 = $2500 * $2517;
              $2519 = $2516 + $2518;
              $2520 = +HEAPF64[$21>>3];
              $2521 = $2508 * $2520;
              $2522 = +HEAPF64[$24>>3];
              $2523 = $2500 * $2522;
              $2524 = $2521 + $2523;
              $2525 = $2508 * $2509;
              $2526 = $2525 + -1.0;
              $2527 = $2499 * $2500;
              $2528 = $2527 + $2526;
              $2529 = (+__Z5IKabsd($2506));
              $2530 = $2529 < 9.9999999999999995E-7;
              do {
               if ($2530) {
                $2531 = $2499 - $2500;
                $2532 = (+__Z5IKabsd($2531));
                $2533 = $2532 < 9.9999999999999995E-7;
                if (!($2533)) {
                 break;
                }
                $2534 = (+__Z5IKabsd($2507));
                $2535 = $2534 < 9.9999999999999995E-7;
                if (!($2535)) {
                 break;
                }
                $2536 = (+__Z5IKabsd($2510));
                $2537 = $2536 < 9.9999999999999995E-7;
                if (!($2537)) {
                 break;
                }
                $2538 = (+__Z5IKabsd($2511));
                $2539 = $2538 < 9.9999999999999995E-7;
                if (!($2539)) {
                 break;
                }
                $2540 = (+__Z5IKabsd($2514));
                $2541 = $2540 < 9.9999999999999995E-7;
                if (!($2541)) {
                 break;
                }
                $2542 = (+__Z5IKabsd($2519));
                $2543 = $2542 < 9.9999999999999995E-7;
                if (!($2543)) {
                 break;
                }
                $2544 = (+__Z5IKabsd($2524));
                $2545 = $2544 < 9.9999999999999995E-7;
                if (!($2545)) {
                 break;
                }
                $2546 = (+__Z5IKabsd($2528));
                $2547 = $2546 < 9.9999999999999995E-7;
                if (!($2547)) {
                 break;
                }
                HEAP8[$167>>0] = 1;
                $2548 = +HEAPF64[$11>>3];
                $2549 = (+__Z5IKabsd($2548));
                $2550 = $2549 < 1.9999999999999999E-6;
                do {
                 if ($2550) {
                  $2551 = +HEAPF64[$15>>3];
                  $2552 = (+__Z5IKabsd($2551));
                  $2553 = $2552 < 1.9999999999999999E-6;
                  if (!($2553)) {
                   break;
                  }
                  $2554 = (+__Z5IKsqrd($2548));
                  $2555 = (+__Z5IKsqrd($2551));
                  $2556 = $2554 + $2555;
                  $2557 = $2556 + -1.0;
                  $2558 = (+__Z5IKabsd($2557));
                  $2559 = !($2558 <= 1.9999999999999999E-6);
                  if (!($2559)) {
                   break L7;
                  }
                 }
                } while(0);
                $2560 = +HEAPF64[$11>>3];
                $2561 = +HEAPF64[$15>>3];
                $2562 = (+__Z7IKatan2dd($2560,$2561));
                $2563 = (+__Z5IKsind($2562));
                $2564 = (+__Z5IKcosd($2562));
                $2565 = $2562 > 3.14159265358979;
                do {
                 if ($2565) {
                  $2566 = $2562 + -6.2831853071795898;
                  $2569 = $2566;
                 } else {
                  $2567 = $2562 < -3.14159265358979;
                  if (!($2567)) {
                   $2569 = $2562;
                   break;
                  }
                  $2568 = $2562 + 6.2831853071795898;
                  $2569 = $2568;
                 }
                } while(0);
                HEAP8[$168>>0] = 0;
                HEAP8[$169>>0] = -1;
                HEAPF64[$170>>3] = $2569;
                HEAPF64[$171>>3] = $2564;
                HEAPF64[$172>>3] = $2563;
                $2570 = +HEAPF64[$170>>3];
                $2571 = (+__Z5IKsind($2570));
                $2572 = (+__Z5IKcosd($2570));
                $2573 = +HEAPF64[$25>>3];
                $2574 = +HEAPF64[$22>>3];
                $2575 = $2571 * $2574;
                $2576 = +HEAPF64[$24>>3];
                $2577 = $2575 + $2576;
                $2578 = +HEAPF64[$15>>3];
                $2579 = $2572 - $2578;
                $2580 = $2572 * $2574;
                $2581 = +HEAPF64[$23>>3];
                $2582 = $2581 - $2580;
                $2583 = +HEAPF64[$21>>3];
                $2584 = $2571 * $2573;
                $2585 = $2584 - $2583;
                $2586 = $2572 * $2573;
                $2587 = -$2586;
                $2588 = +HEAPF64[$20>>3];
                $2589 = $2587 - $2588;
                $2590 = $2573 * $2583;
                $2591 = $2571 - $2590;
                $2592 = $2574 * $2576;
                $2593 = $2592 + $2591;
                $2594 = $2574 * $2581;
                $2595 = $2573 * $2588;
                $2596 = $2594 - $2595;
                $2597 = $2596 - $2572;
                $2598 = (+__Z5IKabsd($2577));
                $2599 = $2598 > 5.0000000000000004E-6;
                if ($2599) {
                 break L7;
                }
                $2600 = +HEAPF64[$11>>3];
                $2601 = $2571 - $2600;
                $2602 = (+__Z5IKabsd($2601));
                $2603 = $2602 > 5.0000000000000004E-6;
                if ($2603) {
                 break L7;
                }
                $2604 = (+__Z5IKabsd($2579));
                $2605 = $2604 > 5.0000000000000004E-6;
                if ($2605) {
                 break L7;
                }
                $2606 = (+__Z5IKabsd($2582));
                $2607 = $2606 > 5.0000000000000004E-6;
                if ($2607) {
                 break L7;
                }
                $2608 = (+__Z5IKabsd($2585));
                $2609 = $2608 > 5.0000000000000004E-6;
                if ($2609) {
                 break L7;
                }
                $2610 = (+__Z5IKabsd($2589));
                $2611 = $2610 > 5.0000000000000004E-6;
                if ($2611) {
                 break L7;
                }
                $2612 = (+__Z5IKabsd($2593));
                $2613 = $2612 > 5.0000000000000004E-6;
                if ($2613) {
                 break L7;
                }
                $2614 = (+__Z5IKabsd($2597));
                $2615 = $2614 > 5.0000000000000004E-6;
                if ($2615) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos76,7);
                $2616 = HEAP32[$vinfos76>>2]|0;
                $2617 = ((($2616)) + 17|0);
                HEAP8[$2617>>0] = 1;
                $2618 = +HEAPF64[$this>>3];
                $2619 = HEAP32[$vinfos76>>2]|0;
                $2620 = ((($2619)) + 8|0);
                HEAPF64[$2620>>3] = $2618;
                $2621 = HEAP8[$173>>0]|0;
                $2622 = HEAP32[$vinfos76>>2]|0;
                $2623 = ((($2622)) + 19|0);
                HEAP8[$2623>>0] = $2621;
                $2624 = HEAP8[$174>>0]|0;
                $2625 = HEAP32[$vinfos76>>2]|0;
                $2626 = ((($2625)) + 20|0);
                HEAP8[$2626>>0] = $2624;
                $2627 = HEAP8[$175>>0]|0;
                $2628 = HEAP32[$vinfos76>>2]|0;
                $2629 = ((($2628)) + 18|0);
                HEAP8[$2629>>0] = $2627;
                $2630 = HEAP32[$vinfos76>>2]|0;
                $2631 = ((($2630)) + 41|0);
                HEAP8[$2631>>0] = 1;
                $2632 = +HEAPF64[$176>>3];
                $2633 = HEAP32[$vinfos76>>2]|0;
                $2634 = ((($2633)) + 32|0);
                HEAPF64[$2634>>3] = $2632;
                $2635 = HEAP8[$177>>0]|0;
                $2636 = HEAP32[$vinfos76>>2]|0;
                $2637 = ((($2636)) + 43|0);
                HEAP8[$2637>>0] = $2635;
                $2638 = HEAP8[$178>>0]|0;
                $2639 = HEAP32[$vinfos76>>2]|0;
                $2640 = ((($2639)) + 44|0);
                HEAP8[$2640>>0] = $2638;
                $2641 = HEAP8[$179>>0]|0;
                $2642 = HEAP32[$vinfos76>>2]|0;
                $2643 = ((($2642)) + 42|0);
                HEAP8[$2643>>0] = $2641;
                $2644 = HEAP32[$vinfos76>>2]|0;
                $2645 = ((($2644)) + 65|0);
                HEAP8[$2645>>0] = 1;
                $2646 = +HEAPF64[$180>>3];
                $2647 = HEAP32[$vinfos76>>2]|0;
                $2648 = ((($2647)) + 56|0);
                HEAPF64[$2648>>3] = $2646;
                $2649 = HEAP8[$181>>0]|0;
                $2650 = HEAP32[$vinfos76>>2]|0;
                $2651 = ((($2650)) + 67|0);
                HEAP8[$2651>>0] = $2649;
                $2652 = HEAP8[$182>>0]|0;
                $2653 = HEAP32[$vinfos76>>2]|0;
                $2654 = ((($2653)) + 68|0);
                HEAP8[$2654>>0] = $2652;
                $2655 = HEAP8[$183>>0]|0;
                $2656 = HEAP32[$vinfos76>>2]|0;
                $2657 = ((($2656)) + 66|0);
                HEAP8[$2657>>0] = $2655;
                $2658 = HEAP32[$vinfos76>>2]|0;
                $2659 = ((($2658)) + 89|0);
                HEAP8[$2659>>0] = 1;
                $2660 = +HEAPF64[$184>>3];
                $2661 = HEAP32[$vinfos76>>2]|0;
                $2662 = ((($2661)) + 80|0);
                HEAPF64[$2662>>3] = $2660;
                $2663 = HEAP8[$185>>0]|0;
                $2664 = HEAP32[$vinfos76>>2]|0;
                $2665 = ((($2664)) + 91|0);
                HEAP8[$2665>>0] = $2663;
                $2666 = HEAP8[$186>>0]|0;
                $2667 = HEAP32[$vinfos76>>2]|0;
                $2668 = ((($2667)) + 92|0);
                HEAP8[$2668>>0] = $2666;
                $2669 = HEAP8[$187>>0]|0;
                $2670 = HEAP32[$vinfos76>>2]|0;
                $2671 = ((($2670)) + 90|0);
                HEAP8[$2671>>0] = $2669;
                $2672 = HEAP32[$vinfos76>>2]|0;
                $2673 = ((($2672)) + 113|0);
                HEAP8[$2673>>0] = 1;
                $2674 = +HEAPF64[$101>>3];
                $2675 = HEAP32[$vinfos76>>2]|0;
                $2676 = ((($2675)) + 104|0);
                HEAPF64[$2676>>3] = $2674;
                $2677 = HEAP8[$99>>0]|0;
                $2678 = HEAP32[$vinfos76>>2]|0;
                $2679 = ((($2678)) + 115|0);
                HEAP8[$2679>>0] = $2677;
                $2680 = HEAP8[$100>>0]|0;
                $2681 = HEAP32[$vinfos76>>2]|0;
                $2682 = ((($2681)) + 116|0);
                HEAP8[$2682>>0] = $2680;
                $2683 = HEAP8[$96>>0]|0;
                $2684 = HEAP32[$vinfos76>>2]|0;
                $2685 = ((($2684)) + 114|0);
                HEAP8[$2685>>0] = $2683;
                $2686 = HEAP32[$vinfos76>>2]|0;
                $2687 = ((($2686)) + 137|0);
                HEAP8[$2687>>0] = 1;
                $2688 = +HEAPF64[$29>>3];
                $2689 = HEAP32[$vinfos76>>2]|0;
                $2690 = ((($2689)) + 128|0);
                HEAPF64[$2690>>3] = $2688;
                $2691 = HEAP8[$27>>0]|0;
                $2692 = HEAP32[$vinfos76>>2]|0;
                $2693 = ((($2692)) + 139|0);
                HEAP8[$2693>>0] = $2691;
                $2694 = HEAP8[$28>>0]|0;
                $2695 = HEAP32[$vinfos76>>2]|0;
                $2696 = ((($2695)) + 140|0);
                HEAP8[$2696>>0] = $2694;
                $2697 = HEAP8[$26>>0]|0;
                $2698 = HEAP32[$vinfos76>>2]|0;
                $2699 = ((($2698)) + 138|0);
                HEAP8[$2699>>0] = $2697;
                $2700 = HEAP32[$vinfos76>>2]|0;
                $2701 = ((($2700)) + 161|0);
                HEAP8[$2701>>0] = 1;
                $2702 = +HEAPF64[$170>>3];
                $2703 = HEAP32[$vinfos76>>2]|0;
                $2704 = ((($2703)) + 152|0);
                HEAPF64[$2704>>3] = $2702;
                $2705 = HEAP8[$168>>0]|0;
                $2706 = HEAP32[$vinfos76>>2]|0;
                $2707 = ((($2706)) + 163|0);
                HEAP8[$2707>>0] = $2705;
                $2708 = HEAP8[$169>>0]|0;
                $2709 = HEAP32[$vinfos76>>2]|0;
                $2710 = ((($2709)) + 164|0);
                HEAP8[$2710>>0] = $2708;
                $2711 = HEAP8[$167>>0]|0;
                $2712 = HEAP32[$vinfos76>>2]|0;
                $2713 = ((($2712)) + 162|0);
                HEAP8[$2713>>0] = $2711;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree77,0);
                $2714 = HEAP32[$solutions>>2]|0;
                $2715 = ((($2714)) + 8|0);
                $2716 = HEAP32[$2715>>2]|0;
                (FUNCTION_TABLE_iiii[$2716 & 31]($solutions,$vinfos76,$vfree77)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree77);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos76);
                break L7;
               }
              } while(0);
              $2717 = +HEAPF64[$25>>3];
              $2718 = +HEAPF64[$30>>3];
              $2719 = +HEAPF64[$31>>3];
              $2720 = +HEAPF64[$19>>3];
              $2721 = $2719 + $2720;
              $2722 = +HEAPF64[$101>>3];
              $2723 = (+__Z5IKabsd($2722));
              $2724 = $2723 + 3.14159265358979;
              $2725 = (+__Z6IKfmoddd($2724,6.2831853071795898));
              $2726 = $2725 + -3.14159265358979;
              $2727 = +HEAPF64[$22>>3];
              $2728 = $2718 * $2720;
              $2729 = $2717 * $2719;
              $2730 = $2729 + $2728;
              $2731 = +HEAPF64[$11>>3];
              $2732 = $2719 * $2731;
              $2733 = +HEAPF64[$23>>3];
              $2734 = $2718 * $2733;
              $2735 = $2734 - $2732;
              $2736 = +HEAPF64[$24>>3];
              $2737 = $2718 * $2736;
              $2738 = +HEAPF64[$15>>3];
              $2739 = $2719 * $2738;
              $2740 = $2737 - $2739;
              $2741 = $2719 * $2720;
              $2742 = -1.0 - $2741;
              $2743 = $2717 * $2718;
              $2744 = $2743 + $2742;
              $2745 = (+__Z5IKabsd($2726));
              $2746 = $2745 < 9.9999999999999995E-7;
              do {
               if ($2746) {
                $2747 = $2717 - $2718;
                $2748 = (+__Z5IKabsd($2747));
                $2749 = $2748 < 9.9999999999999995E-7;
                if (!($2749)) {
                 break;
                }
                $2750 = (+__Z5IKabsd($2721));
                $2751 = $2750 < 9.9999999999999995E-7;
                if (!($2751)) {
                 break;
                }
                $2752 = (+__Z5IKabsd($2727));
                $2753 = $2752 < 9.9999999999999995E-7;
                if (!($2753)) {
                 break;
                }
                $2754 = (+__Z5IKabsd($2730));
                $2755 = $2754 < 9.9999999999999995E-7;
                if (!($2755)) {
                 break;
                }
                $2756 = (+__Z5IKabsd($2735));
                $2757 = $2756 < 9.9999999999999995E-7;
                if (!($2757)) {
                 break;
                }
                $2758 = (+__Z5IKabsd($2740));
                $2759 = $2758 < 9.9999999999999995E-7;
                if (!($2759)) {
                 break;
                }
                $2760 = (+__Z5IKabsd($2744));
                $2761 = $2760 < 9.9999999999999995E-7;
                if (!($2761)) {
                 break;
                }
                HEAP8[$188>>0] = 1;
                $2762 = +HEAPF64[$20>>3];
                $2763 = (+__Z5IKabsd($2762));
                $2764 = $2763 < 1.9999999999999999E-6;
                do {
                 if ($2764) {
                  $2765 = +HEAPF64[$21>>3];
                  $2766 = (+__Z5IKabsd($2765));
                  $2767 = $2766 < 1.9999999999999999E-6;
                  if (!($2767)) {
                   break;
                  }
                  $2768 = (+__Z5IKsqrd($2762));
                  $2769 = (+__Z5IKsqrd($2765));
                  $2770 = $2768 + $2769;
                  $2771 = $2770 + -1.0;
                  $2772 = (+__Z5IKabsd($2771));
                  $2773 = !($2772 <= 1.9999999999999999E-6);
                  if (!($2773)) {
                   break L7;
                  }
                 }
                } while(0);
                $2774 = +HEAPF64[$20>>3];
                $2775 = +HEAPF64[$21>>3];
                $2776 = (+__Z7IKatan2dd($2774,$2775));
                $2777 = (+__Z5IKsind($2776));
                $2778 = (+__Z5IKcosd($2776));
                $2779 = $2776 > 3.14159265358979;
                do {
                 if ($2779) {
                  $2780 = $2776 + -6.2831853071795898;
                  $2783 = $2780;
                 } else {
                  $2781 = $2776 < -3.14159265358979;
                  if (!($2781)) {
                   $2783 = $2776;
                   break;
                  }
                  $2782 = $2776 + 6.2831853071795898;
                  $2783 = $2782;
                 }
                } while(0);
                HEAP8[$189>>0] = 0;
                HEAP8[$190>>0] = -1;
                HEAPF64[$191>>3] = $2783;
                HEAPF64[$192>>3] = $2778;
                HEAPF64[$193>>3] = $2777;
                $2784 = +HEAPF64[$191>>3];
                $2785 = (+__Z5IKcosd($2784));
                $2786 = (+__Z5IKsind($2784));
                $2787 = +HEAPF64[$19>>3];
                $2788 = $2785 * $2787;
                $2789 = +HEAPF64[$23>>3];
                $2790 = $2788 + $2789;
                $2791 = +HEAPF64[$21>>3];
                $2792 = $2785 - $2791;
                $2793 = +HEAPF64[$15>>3];
                $2794 = +HEAPF64[$25>>3];
                $2795 = $2786 * $2794;
                $2796 = $2793 + $2795;
                $2797 = $2786 * $2787;
                $2798 = +HEAPF64[$24>>3];
                $2799 = $2798 - $2797;
                $2800 = $2785 * $2794;
                $2801 = +HEAPF64[$11>>3];
                $2802 = $2801 - $2800;
                $2803 = $2793 * $2794;
                $2804 = $2786 + $2803;
                $2805 = $2787 * $2798;
                $2806 = $2804 - $2805;
                $2807 = $2794 * $2801;
                $2808 = $2807 - $2785;
                $2809 = $2787 * $2789;
                $2810 = $2808 - $2809;
                $2811 = (+__Z5IKabsd($2790));
                $2812 = $2811 > 5.0000000000000004E-6;
                if ($2812) {
                 break L7;
                }
                $2813 = +HEAPF64[$20>>3];
                $2814 = $2786 - $2813;
                $2815 = (+__Z5IKabsd($2814));
                $2816 = $2815 > 5.0000000000000004E-6;
                if ($2816) {
                 break L7;
                }
                $2817 = (+__Z5IKabsd($2792));
                $2818 = $2817 > 5.0000000000000004E-6;
                if ($2818) {
                 break L7;
                }
                $2819 = (+__Z5IKabsd($2796));
                $2820 = $2819 > 5.0000000000000004E-6;
                if ($2820) {
                 break L7;
                }
                $2821 = (+__Z5IKabsd($2799));
                $2822 = $2821 > 5.0000000000000004E-6;
                if ($2822) {
                 break L7;
                }
                $2823 = (+__Z5IKabsd($2802));
                $2824 = $2823 > 5.0000000000000004E-6;
                if ($2824) {
                 break L7;
                }
                $2825 = (+__Z5IKabsd($2806));
                $2826 = $2825 > 5.0000000000000004E-6;
                if ($2826) {
                 break L7;
                }
                $2827 = (+__Z5IKabsd($2810));
                $2828 = $2827 > 5.0000000000000004E-6;
                if ($2828) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos87,7);
                $2829 = HEAP32[$vinfos87>>2]|0;
                $2830 = ((($2829)) + 17|0);
                HEAP8[$2830>>0] = 1;
                $2831 = +HEAPF64[$this>>3];
                $2832 = HEAP32[$vinfos87>>2]|0;
                $2833 = ((($2832)) + 8|0);
                HEAPF64[$2833>>3] = $2831;
                $2834 = HEAP8[$194>>0]|0;
                $2835 = HEAP32[$vinfos87>>2]|0;
                $2836 = ((($2835)) + 19|0);
                HEAP8[$2836>>0] = $2834;
                $2837 = HEAP8[$195>>0]|0;
                $2838 = HEAP32[$vinfos87>>2]|0;
                $2839 = ((($2838)) + 20|0);
                HEAP8[$2839>>0] = $2837;
                $2840 = HEAP8[$196>>0]|0;
                $2841 = HEAP32[$vinfos87>>2]|0;
                $2842 = ((($2841)) + 18|0);
                HEAP8[$2842>>0] = $2840;
                $2843 = HEAP32[$vinfos87>>2]|0;
                $2844 = ((($2843)) + 41|0);
                HEAP8[$2844>>0] = 1;
                $2845 = +HEAPF64[$197>>3];
                $2846 = HEAP32[$vinfos87>>2]|0;
                $2847 = ((($2846)) + 32|0);
                HEAPF64[$2847>>3] = $2845;
                $2848 = HEAP8[$198>>0]|0;
                $2849 = HEAP32[$vinfos87>>2]|0;
                $2850 = ((($2849)) + 43|0);
                HEAP8[$2850>>0] = $2848;
                $2851 = HEAP8[$199>>0]|0;
                $2852 = HEAP32[$vinfos87>>2]|0;
                $2853 = ((($2852)) + 44|0);
                HEAP8[$2853>>0] = $2851;
                $2854 = HEAP8[$200>>0]|0;
                $2855 = HEAP32[$vinfos87>>2]|0;
                $2856 = ((($2855)) + 42|0);
                HEAP8[$2856>>0] = $2854;
                $2857 = HEAP32[$vinfos87>>2]|0;
                $2858 = ((($2857)) + 65|0);
                HEAP8[$2858>>0] = 1;
                $2859 = +HEAPF64[$201>>3];
                $2860 = HEAP32[$vinfos87>>2]|0;
                $2861 = ((($2860)) + 56|0);
                HEAPF64[$2861>>3] = $2859;
                $2862 = HEAP8[$202>>0]|0;
                $2863 = HEAP32[$vinfos87>>2]|0;
                $2864 = ((($2863)) + 67|0);
                HEAP8[$2864>>0] = $2862;
                $2865 = HEAP8[$203>>0]|0;
                $2866 = HEAP32[$vinfos87>>2]|0;
                $2867 = ((($2866)) + 68|0);
                HEAP8[$2867>>0] = $2865;
                $2868 = HEAP8[$204>>0]|0;
                $2869 = HEAP32[$vinfos87>>2]|0;
                $2870 = ((($2869)) + 66|0);
                HEAP8[$2870>>0] = $2868;
                $2871 = HEAP32[$vinfos87>>2]|0;
                $2872 = ((($2871)) + 89|0);
                HEAP8[$2872>>0] = 1;
                $2873 = +HEAPF64[$205>>3];
                $2874 = HEAP32[$vinfos87>>2]|0;
                $2875 = ((($2874)) + 80|0);
                HEAPF64[$2875>>3] = $2873;
                $2876 = HEAP8[$206>>0]|0;
                $2877 = HEAP32[$vinfos87>>2]|0;
                $2878 = ((($2877)) + 91|0);
                HEAP8[$2878>>0] = $2876;
                $2879 = HEAP8[$207>>0]|0;
                $2880 = HEAP32[$vinfos87>>2]|0;
                $2881 = ((($2880)) + 92|0);
                HEAP8[$2881>>0] = $2879;
                $2882 = HEAP8[$208>>0]|0;
                $2883 = HEAP32[$vinfos87>>2]|0;
                $2884 = ((($2883)) + 90|0);
                HEAP8[$2884>>0] = $2882;
                $2885 = HEAP32[$vinfos87>>2]|0;
                $2886 = ((($2885)) + 113|0);
                HEAP8[$2886>>0] = 1;
                $2887 = +HEAPF64[$101>>3];
                $2888 = HEAP32[$vinfos87>>2]|0;
                $2889 = ((($2888)) + 104|0);
                HEAPF64[$2889>>3] = $2887;
                $2890 = HEAP8[$99>>0]|0;
                $2891 = HEAP32[$vinfos87>>2]|0;
                $2892 = ((($2891)) + 115|0);
                HEAP8[$2892>>0] = $2890;
                $2893 = HEAP8[$100>>0]|0;
                $2894 = HEAP32[$vinfos87>>2]|0;
                $2895 = ((($2894)) + 116|0);
                HEAP8[$2895>>0] = $2893;
                $2896 = HEAP8[$96>>0]|0;
                $2897 = HEAP32[$vinfos87>>2]|0;
                $2898 = ((($2897)) + 114|0);
                HEAP8[$2898>>0] = $2896;
                $2899 = HEAP32[$vinfos87>>2]|0;
                $2900 = ((($2899)) + 137|0);
                HEAP8[$2900>>0] = 1;
                $2901 = +HEAPF64[$29>>3];
                $2902 = HEAP32[$vinfos87>>2]|0;
                $2903 = ((($2902)) + 128|0);
                HEAPF64[$2903>>3] = $2901;
                $2904 = HEAP8[$27>>0]|0;
                $2905 = HEAP32[$vinfos87>>2]|0;
                $2906 = ((($2905)) + 139|0);
                HEAP8[$2906>>0] = $2904;
                $2907 = HEAP8[$28>>0]|0;
                $2908 = HEAP32[$vinfos87>>2]|0;
                $2909 = ((($2908)) + 140|0);
                HEAP8[$2909>>0] = $2907;
                $2910 = HEAP8[$26>>0]|0;
                $2911 = HEAP32[$vinfos87>>2]|0;
                $2912 = ((($2911)) + 138|0);
                HEAP8[$2912>>0] = $2910;
                $2913 = HEAP32[$vinfos87>>2]|0;
                $2914 = ((($2913)) + 161|0);
                HEAP8[$2914>>0] = 1;
                $2915 = +HEAPF64[$191>>3];
                $2916 = HEAP32[$vinfos87>>2]|0;
                $2917 = ((($2916)) + 152|0);
                HEAPF64[$2917>>3] = $2915;
                $2918 = HEAP8[$189>>0]|0;
                $2919 = HEAP32[$vinfos87>>2]|0;
                $2920 = ((($2919)) + 163|0);
                HEAP8[$2920>>0] = $2918;
                $2921 = HEAP8[$190>>0]|0;
                $2922 = HEAP32[$vinfos87>>2]|0;
                $2923 = ((($2922)) + 164|0);
                HEAP8[$2923>>0] = $2921;
                $2924 = HEAP8[$188>>0]|0;
                $2925 = HEAP32[$vinfos87>>2]|0;
                $2926 = ((($2925)) + 162|0);
                HEAP8[$2926>>0] = $2924;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree88,0);
                $2927 = HEAP32[$solutions>>2]|0;
                $2928 = ((($2927)) + 8|0);
                $2929 = HEAP32[$2928>>2]|0;
                (FUNCTION_TABLE_iiii[$2929 & 31]($solutions,$vinfos87,$vfree88)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree88);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos87);
                break L7;
               }
              } while(0);
              $2930 = +HEAPF64[$25>>3];
              $2931 = +HEAPF64[$30>>3];
              $2932 = +HEAPF64[$101>>3];
              $2933 = $2932 + -3.14159265358979;
              $2934 = (+__Z5IKabsd($2933));
              $2935 = $2934 + 3.14159265358979;
              $2936 = (+__Z6IKfmoddd($2935,6.2831853071795898));
              $2937 = $2936 + -3.14159265358979;
              $2938 = +HEAPF64[$31>>3];
              $2939 = +HEAPF64[$19>>3];
              $2940 = $2939 - $2938;
              $2941 = +HEAPF64[$22>>3];
              $2942 = $2938 - $2939;
              $2943 = $2931 * $2939;
              $2944 = $2930 * $2938;
              $2945 = $2944 - $2943;
              $2946 = +HEAPF64[$11>>3];
              $2947 = $2938 * $2946;
              $2948 = +HEAPF64[$23>>3];
              $2949 = $2931 * $2948;
              $2950 = $2947 + $2949;
              $2951 = +HEAPF64[$15>>3];
              $2952 = $2938 * $2951;
              $2953 = +HEAPF64[$24>>3];
              $2954 = $2931 * $2953;
              $2955 = $2952 + $2954;
              $2956 = $2938 * $2939;
              $2957 = $2956 + -1.0;
              $2958 = $2930 * $2931;
              $2959 = $2958 + $2957;
              $2960 = (+__Z5IKabsd($2937));
              $2961 = $2960 < 9.9999999999999995E-7;
              if (!($2961)) {
               break;
              }
              $2962 = $2930 - $2931;
              $2963 = (+__Z5IKabsd($2962));
              $2964 = $2963 < 9.9999999999999995E-7;
              if (!($2964)) {
               break;
              }
              $2965 = (+__Z5IKabsd($2940));
              $2966 = $2965 < 9.9999999999999995E-7;
              if (!($2966)) {
               break;
              }
              $2967 = (+__Z5IKabsd($2941));
              $2968 = $2967 < 9.9999999999999995E-7;
              if (!($2968)) {
               break;
              }
              $2969 = (+__Z5IKabsd($2942));
              $2970 = $2969 < 9.9999999999999995E-7;
              if (!($2970)) {
               break;
              }
              $2971 = (+__Z5IKabsd($2945));
              $2972 = $2971 < 9.9999999999999995E-7;
              if (!($2972)) {
               break;
              }
              $2973 = (+__Z5IKabsd($2950));
              $2974 = $2973 < 9.9999999999999995E-7;
              if (!($2974)) {
               break;
              }
              $2975 = (+__Z5IKabsd($2955));
              $2976 = $2975 < 9.9999999999999995E-7;
              if (!($2976)) {
               break;
              }
              $2977 = (+__Z5IKabsd($2959));
              $2978 = $2977 < 9.9999999999999995E-7;
              if (!($2978)) {
               break;
              }
              HEAP8[$209>>0] = 1;
              $2979 = +HEAPF64[$20>>3];
              $2980 = -$2979;
              $2981 = (+__Z5IKabsd($2980));
              $2982 = $2981 < 1.9999999999999999E-6;
              do {
               if ($2982) {
                $2983 = +HEAPF64[$21>>3];
                $2984 = -$2983;
                $2985 = (+__Z5IKabsd($2984));
                $2986 = $2985 < 1.9999999999999999E-6;
                if (!($2986)) {
                 break;
                }
                $2987 = (+__Z5IKsqrd($2980));
                $2988 = (+__Z5IKsqrd($2984));
                $2989 = $2987 + $2988;
                $2990 = $2989 + -1.0;
                $2991 = (+__Z5IKabsd($2990));
                $2992 = !($2991 <= 1.9999999999999999E-6);
                if (!($2992)) {
                 break L7;
                }
               }
              } while(0);
              $2993 = +HEAPF64[$20>>3];
              $2994 = -$2993;
              $2995 = +HEAPF64[$21>>3];
              $2996 = -$2995;
              $2997 = (+__Z7IKatan2dd($2994,$2996));
              $2998 = (+__Z5IKsind($2997));
              $2999 = (+__Z5IKcosd($2997));
              $3000 = $2997 > 3.14159265358979;
              do {
               if ($3000) {
                $3001 = $2997 + -6.2831853071795898;
                $3004 = $3001;
               } else {
                $3002 = $2997 < -3.14159265358979;
                if (!($3002)) {
                 $3004 = $2997;
                 break;
                }
                $3003 = $2997 + 6.2831853071795898;
                $3004 = $3003;
               }
              } while(0);
              HEAP8[$210>>0] = 0;
              HEAP8[$211>>0] = -1;
              HEAPF64[$212>>3] = $3004;
              HEAPF64[$213>>3] = $2999;
              HEAPF64[$214>>3] = $2998;
              $3005 = +HEAPF64[$212>>3];
              $3006 = (+__Z5IKsind($3005));
              $3007 = (+__Z5IKcosd($3005));
              $3008 = +HEAPF64[$25>>3];
              $3009 = +HEAPF64[$20>>3];
              $3010 = $3006 + $3009;
              $3011 = +HEAPF64[$24>>3];
              $3012 = +HEAPF64[$19>>3];
              $3013 = $3006 * $3012;
              $3014 = $3011 + $3013;
              $3015 = $3007 * $3012;
              $3016 = +HEAPF64[$23>>3];
              $3017 = $3016 - $3015;
              $3018 = $3006 * $3008;
              $3019 = +HEAPF64[$15>>3];
              $3020 = $3018 - $3019;
              $3021 = $3007 * $3008;
              $3022 = -$3021;
              $3023 = +HEAPF64[$11>>3];
              $3024 = $3022 - $3023;
              $3025 = $3008 * $3019;
              $3026 = $3006 - $3025;
              $3027 = $3011 * $3012;
              $3028 = $3027 + $3026;
              $3029 = $3008 * $3023;
              $3030 = -$3029;
              $3031 = $3030 - $3007;
              $3032 = $3012 * $3016;
              $3033 = $3032 + $3031;
              $3034 = (+__Z5IKabsd($3010));
              $3035 = $3034 > 5.0000000000000004E-6;
              if ($3035) {
               break;
              }
              $3036 = +HEAPF64[$21>>3];
              $3037 = $3007 + $3036;
              $3038 = (+__Z5IKabsd($3037));
              $3039 = $3038 > 5.0000000000000004E-6;
              if ($3039) {
               break;
              }
              $3040 = (+__Z5IKabsd($3014));
              $3041 = $3040 > 5.0000000000000004E-6;
              if ($3041) {
               break;
              }
              $3042 = (+__Z5IKabsd($3017));
              $3043 = $3042 > 5.0000000000000004E-6;
              if ($3043) {
               break;
              }
              $3044 = (+__Z5IKabsd($3020));
              $3045 = $3044 > 5.0000000000000004E-6;
              if ($3045) {
               break;
              }
              $3046 = (+__Z5IKabsd($3024));
              $3047 = $3046 > 5.0000000000000004E-6;
              if ($3047) {
               break;
              }
              $3048 = (+__Z5IKabsd($3028));
              $3049 = $3048 > 5.0000000000000004E-6;
              if ($3049) {
               break;
              }
              $3050 = (+__Z5IKabsd($3033));
              $3051 = $3050 > 5.0000000000000004E-6;
              if ($3051) {
               break;
              }
              __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos98,7);
              $3052 = HEAP32[$vinfos98>>2]|0;
              $3053 = ((($3052)) + 17|0);
              HEAP8[$3053>>0] = 1;
              $3054 = +HEAPF64[$this>>3];
              $3055 = HEAP32[$vinfos98>>2]|0;
              $3056 = ((($3055)) + 8|0);
              HEAPF64[$3056>>3] = $3054;
              $3057 = HEAP8[$215>>0]|0;
              $3058 = HEAP32[$vinfos98>>2]|0;
              $3059 = ((($3058)) + 19|0);
              HEAP8[$3059>>0] = $3057;
              $3060 = HEAP8[$216>>0]|0;
              $3061 = HEAP32[$vinfos98>>2]|0;
              $3062 = ((($3061)) + 20|0);
              HEAP8[$3062>>0] = $3060;
              $3063 = HEAP8[$217>>0]|0;
              $3064 = HEAP32[$vinfos98>>2]|0;
              $3065 = ((($3064)) + 18|0);
              HEAP8[$3065>>0] = $3063;
              $3066 = HEAP32[$vinfos98>>2]|0;
              $3067 = ((($3066)) + 41|0);
              HEAP8[$3067>>0] = 1;
              $3068 = +HEAPF64[$218>>3];
              $3069 = HEAP32[$vinfos98>>2]|0;
              $3070 = ((($3069)) + 32|0);
              HEAPF64[$3070>>3] = $3068;
              $3071 = HEAP8[$219>>0]|0;
              $3072 = HEAP32[$vinfos98>>2]|0;
              $3073 = ((($3072)) + 43|0);
              HEAP8[$3073>>0] = $3071;
              $3074 = HEAP8[$220>>0]|0;
              $3075 = HEAP32[$vinfos98>>2]|0;
              $3076 = ((($3075)) + 44|0);
              HEAP8[$3076>>0] = $3074;
              $3077 = HEAP8[$221>>0]|0;
              $3078 = HEAP32[$vinfos98>>2]|0;
              $3079 = ((($3078)) + 42|0);
              HEAP8[$3079>>0] = $3077;
              $3080 = HEAP32[$vinfos98>>2]|0;
              $3081 = ((($3080)) + 65|0);
              HEAP8[$3081>>0] = 1;
              $3082 = +HEAPF64[$222>>3];
              $3083 = HEAP32[$vinfos98>>2]|0;
              $3084 = ((($3083)) + 56|0);
              HEAPF64[$3084>>3] = $3082;
              $3085 = HEAP8[$223>>0]|0;
              $3086 = HEAP32[$vinfos98>>2]|0;
              $3087 = ((($3086)) + 67|0);
              HEAP8[$3087>>0] = $3085;
              $3088 = HEAP8[$224>>0]|0;
              $3089 = HEAP32[$vinfos98>>2]|0;
              $3090 = ((($3089)) + 68|0);
              HEAP8[$3090>>0] = $3088;
              $3091 = HEAP8[$225>>0]|0;
              $3092 = HEAP32[$vinfos98>>2]|0;
              $3093 = ((($3092)) + 66|0);
              HEAP8[$3093>>0] = $3091;
              $3094 = HEAP32[$vinfos98>>2]|0;
              $3095 = ((($3094)) + 89|0);
              HEAP8[$3095>>0] = 1;
              $3096 = +HEAPF64[$226>>3];
              $3097 = HEAP32[$vinfos98>>2]|0;
              $3098 = ((($3097)) + 80|0);
              HEAPF64[$3098>>3] = $3096;
              $3099 = HEAP8[$227>>0]|0;
              $3100 = HEAP32[$vinfos98>>2]|0;
              $3101 = ((($3100)) + 91|0);
              HEAP8[$3101>>0] = $3099;
              $3102 = HEAP8[$228>>0]|0;
              $3103 = HEAP32[$vinfos98>>2]|0;
              $3104 = ((($3103)) + 92|0);
              HEAP8[$3104>>0] = $3102;
              $3105 = HEAP8[$229>>0]|0;
              $3106 = HEAP32[$vinfos98>>2]|0;
              $3107 = ((($3106)) + 90|0);
              HEAP8[$3107>>0] = $3105;
              $3108 = HEAP32[$vinfos98>>2]|0;
              $3109 = ((($3108)) + 113|0);
              HEAP8[$3109>>0] = 1;
              $3110 = +HEAPF64[$101>>3];
              $3111 = HEAP32[$vinfos98>>2]|0;
              $3112 = ((($3111)) + 104|0);
              HEAPF64[$3112>>3] = $3110;
              $3113 = HEAP8[$99>>0]|0;
              $3114 = HEAP32[$vinfos98>>2]|0;
              $3115 = ((($3114)) + 115|0);
              HEAP8[$3115>>0] = $3113;
              $3116 = HEAP8[$100>>0]|0;
              $3117 = HEAP32[$vinfos98>>2]|0;
              $3118 = ((($3117)) + 116|0);
              HEAP8[$3118>>0] = $3116;
              $3119 = HEAP8[$96>>0]|0;
              $3120 = HEAP32[$vinfos98>>2]|0;
              $3121 = ((($3120)) + 114|0);
              HEAP8[$3121>>0] = $3119;
              $3122 = HEAP32[$vinfos98>>2]|0;
              $3123 = ((($3122)) + 137|0);
              HEAP8[$3123>>0] = 1;
              $3124 = +HEAPF64[$29>>3];
              $3125 = HEAP32[$vinfos98>>2]|0;
              $3126 = ((($3125)) + 128|0);
              HEAPF64[$3126>>3] = $3124;
              $3127 = HEAP8[$27>>0]|0;
              $3128 = HEAP32[$vinfos98>>2]|0;
              $3129 = ((($3128)) + 139|0);
              HEAP8[$3129>>0] = $3127;
              $3130 = HEAP8[$28>>0]|0;
              $3131 = HEAP32[$vinfos98>>2]|0;
              $3132 = ((($3131)) + 140|0);
              HEAP8[$3132>>0] = $3130;
              $3133 = HEAP8[$26>>0]|0;
              $3134 = HEAP32[$vinfos98>>2]|0;
              $3135 = ((($3134)) + 138|0);
              HEAP8[$3135>>0] = $3133;
              $3136 = HEAP32[$vinfos98>>2]|0;
              $3137 = ((($3136)) + 161|0);
              HEAP8[$3137>>0] = 1;
              $3138 = +HEAPF64[$212>>3];
              $3139 = HEAP32[$vinfos98>>2]|0;
              $3140 = ((($3139)) + 152|0);
              HEAPF64[$3140>>3] = $3138;
              $3141 = HEAP8[$210>>0]|0;
              $3142 = HEAP32[$vinfos98>>2]|0;
              $3143 = ((($3142)) + 163|0);
              HEAP8[$3143>>0] = $3141;
              $3144 = HEAP8[$211>>0]|0;
              $3145 = HEAP32[$vinfos98>>2]|0;
              $3146 = ((($3145)) + 164|0);
              HEAP8[$3146>>0] = $3144;
              $3147 = HEAP8[$209>>0]|0;
              $3148 = HEAP32[$vinfos98>>2]|0;
              $3149 = ((($3148)) + 162|0);
              HEAP8[$3149>>0] = $3147;
              __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree99,0);
              $3150 = HEAP32[$solutions>>2]|0;
              $3151 = ((($3150)) + 8|0);
              $3152 = HEAP32[$3151>>2]|0;
              (FUNCTION_TABLE_iiii[$3152 & 31]($solutions,$vinfos98,$vfree99)|0);
              __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree99);
              __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos98);
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while(0);
  $5093 = (($ij5$0241) + 1)|0;
  $5094 = ($5093|0)<(2);
  if ($5094) {
   $ij5$0241 = $5093;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __Z5IKsqrd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f * $f;
 return (+$0);
}
function __Z7IKatan2dd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $$05 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = (__Z13__DOUBLE_BITSd($fy)|0);
 $3 = tempRet0;
 $4 = $3 & 2147483647;
 $5 = ($4>>>0)>(2146435072);
 $6 = ($2>>>0)>(0);
 $7 = ($4|0)==(2146435072);
 $8 = $7 & $6;
 $9 = $5 | $8;
 $10 = (__Z13__DOUBLE_BITSd($fx)|0);
 $11 = tempRet0;
 $12 = $11 & 2147483647;
 $13 = ($12>>>0)>(2146435072);
 $14 = ($10>>>0)>(0);
 $15 = ($12|0)==(2146435072);
 $16 = $15 & $14;
 $17 = $13 | $16;
 if ($9) {
  if ($17) {
   $18 = ((($ss)) + 64|0);
   $19 = ((($ss)) + 8|0);
   HEAP32[$19>>2] = (896);
   $20 = ((($ss)) + 12|0);
   HEAP32[$ss>>2] = ((940));
   HEAP32[$18>>2] = ((960));
   $21 = ((($ss)) + 4|0);
   HEAP32[$21>>2] = 0;
   $22 = HEAP32[$ss>>2]|0;
   $23 = ((($22)) + -12|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (($ss) + ($24)|0);
   __ZNSt3__18ios_base4initEPv($25,$20);
   $26 = ((($ss)) + 64|0);
   $$sum$i$i$i = (($24) + 72)|0;
   $27 = (($ss) + ($$sum$i$i$i)|0);
   HEAP32[$27>>2] = 0;
   $$sum1$i$i$i = (($24) + 76)|0;
   $28 = (($ss) + ($$sum1$i$i$i)|0);
   HEAP32[$28>>2] = -1;
   HEAP32[$ss>>2] = (876);
   HEAP32[$26>>2] = (916);
   HEAP32[$19>>2] = (896);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($20);
   HEAP32[$20>>2] = (976);
   $29 = ((($ss)) + 44|0);
   $30 = ((($ss)) + 60|0);
   ;HEAP32[$29>>2]=0|0;HEAP32[$29+4>>2]=0|0;HEAP32[$29+8>>2]=0|0;HEAP32[$29+12>>2]=0|0;
   HEAP32[$30>>2] = 24;
   ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
   __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($20,$0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $31 = ((($ss)) + 8|0);
   $32 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($31,1072)|0);
   $33 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($32,1096)|0);
   $34 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($33,1152)|0);
   $35 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($34,194)|0);
   $36 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($35,1160)|0);
   $37 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($36,1168)|0);
   $38 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($37,1176)|0);
   $39 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($38,1192)|0);
   (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($39,1208)|0);
   $40 = (___cxa_allocate_exception(8)|0);
   __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$20);
   __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($40,$1);
   ___cxa_throw(($40|0),(1952|0),(35|0));
   // unreachable;
  } else {
   $$05 = 1.5707963267949001;
   STACKTOP = sp;return (+$$05);
  }
 }
 if ($17) {
  $$05 = 0.0;
  STACKTOP = sp;return (+$$05);
 }
 $41 = (+Math_atan2((+$fy),(+$fx)));
 $$05 = $41;
 STACKTOP = sp;return (+$$05);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$0 = $__n;
 while(1) {
  $1 = HEAP32[$0>>2]|0;
  __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($1);
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 24|0);
  HEAP32[$0>>2] = $3;
  $4 = (($$0) + -1)|0;
  $5 = ($4|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;
  }
 }
 return;
}
function __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;HEAP32[$this+12>>2]=0|0;
 HEAP8[$0>>0] = -1;
 $1 = ((($this)) + 18|0);
 HEAP8[$1>>0] = 1;
 $2 = ((($this)) + 19|0);
 ;HEAP8[$2>>0]=255|0;HEAP8[$2+1>>0]=255|0;HEAP8[$2+2>>0]=255|0;HEAP8[$2+3>>0]=255|0;HEAP8[$2+4>>0]=255|0;
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 32|0);
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0,$__s)|0);
 $1 = ((($this)) + 44|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 8;
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = HEAP8[$0>>0]|0;
  $7 = $6 & 1;
  $8 = ($7<<24>>24)==(0);
  if ($8) {
   $11 = ((($0)) + 1|0);
   $20 = $11;
  } else {
   $9 = ((($this)) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $20 = $10;
  }
  $12 = HEAP8[$0>>0]|0;
  $13 = $12 & 1;
  $14 = ($13<<24>>24)==(0);
  if ($14) {
   $17 = $12&255;
   $18 = $17 >>> 1;
   $21 = $18;
  } else {
   $15 = ((($this)) + 36|0);
   $16 = HEAP32[$15>>2]|0;
   $21 = $16;
  }
  $19 = (($20) + ($21)|0);
  HEAP32[$1>>2] = $19;
  $22 = HEAP8[$0>>0]|0;
  $23 = $22 & 1;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $27 = ((($0)) + 1|0);
   $36 = $27;
  } else {
   $25 = ((($this)) + 40|0);
   $26 = HEAP32[$25>>2]|0;
   $36 = $26;
  }
  $28 = HEAP8[$0>>0]|0;
  $29 = $28 & 1;
  $30 = ($29<<24>>24)==(0);
  if ($30) {
   $33 = ((($0)) + 1|0);
   $38 = $33;
  } else {
   $31 = ((($this)) + 40|0);
   $32 = HEAP32[$31>>2]|0;
   $38 = $32;
  }
  $34 = HEAP32[$1>>2]|0;
  $35 = ((($this)) + 8|0);
  HEAP32[$35>>2] = $36;
  $37 = ((($this)) + 12|0);
  HEAP32[$37>>2] = $38;
  $39 = ((($this)) + 16|0);
  HEAP32[$39>>2] = $34;
 }
 $40 = HEAP32[$2>>2]|0;
 $41 = $40 & 16;
 $42 = ($41|0)==(0);
 if ($42) {
  return;
 }
 $43 = HEAP8[$0>>0]|0;
 $44 = $43 & 1;
 $45 = ($44<<24>>24)==(0);
 if ($45) {
  $48 = $43&255;
  $49 = $48 >>> 1;
  $58 = $49;
 } else {
  $46 = ((($this)) + 36|0);
  $47 = HEAP32[$46>>2]|0;
  $58 = $47;
 }
 $50 = HEAP8[$0>>0]|0;
 $51 = $50 & 1;
 $52 = ($51<<24>>24)==(0);
 if ($52) {
  $55 = ((($0)) + 1|0);
  $57 = $55;
 } else {
  $53 = ((($this)) + 40|0);
  $54 = HEAP32[$53>>2]|0;
  $57 = $54;
 }
 $56 = (($57) + ($58)|0);
 HEAP32[$1>>2] = $56;
 $59 = HEAP8[$0>>0]|0;
 $60 = $59 & 1;
 $61 = ($60<<24>>24)==(0);
 if ($61) {
  $64 = 10;
 } else {
  $62 = HEAP32[$0>>2]|0;
  $63 = $62 & -2;
  $phitmp$i = (($63) + -1)|0;
  $64 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0,$64,0);
 $65 = HEAP8[$0>>0]|0;
 $66 = $65 & 1;
 $67 = ($66<<24>>24)==(0);
 if ($67) {
  $70 = ((($0)) + 1|0);
  $88 = $70;
 } else {
  $68 = ((($this)) + 40|0);
  $69 = HEAP32[$68>>2]|0;
  $88 = $69;
 }
 $71 = HEAP8[$0>>0]|0;
 $72 = $71 & 1;
 $73 = ($72<<24>>24)==(0);
 if ($73) {
  $76 = ((($0)) + 1|0);
  $85 = $76;
 } else {
  $74 = ((($this)) + 40|0);
  $75 = HEAP32[$74>>2]|0;
  $85 = $75;
 }
 $77 = HEAP8[$0>>0]|0;
 $78 = $77 & 1;
 $79 = ($78<<24>>24)==(0);
 if ($79) {
  $82 = $77&255;
  $83 = $82 >>> 1;
  $86 = $83;
 } else {
  $80 = ((($this)) + 36|0);
  $81 = HEAP32[$80>>2]|0;
  $86 = $81;
 }
 $84 = (($85) + ($86)|0);
 $87 = ((($this)) + 24|0);
 HEAP32[$87>>2] = $88;
 $89 = ((($this)) + 20|0);
 HEAP32[$89>>2] = $88;
 $90 = ((($this)) + 28|0);
 HEAP32[$90>>2] = $84;
 $91 = HEAP32[$2>>2]|0;
 $92 = $91 & 3;
 $93 = ($92|0)==(0);
 if ($93) {
  return;
 }
 $94 = HEAP32[$87>>2]|0;
 $95 = (($94) + ($58)|0);
 HEAP32[$87>>2] = $95;
 return;
}
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__111char_traitsIcE6lengthEPKc($__str)|0);
 $1 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$0)|0);
 return ($1|0);
}
function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 48|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 16;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($this)) + 44|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($this)) + 24|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5>>>0)<($7>>>0);
  if ($8) {
   HEAP32[$4>>2] = $7;
  }
  $9 = ((($this)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$4>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($agg$result,$10,$11);
  return;
 }
 $12 = $1 & 8;
 $13 = ($12|0)==(0);
 if ($13) {
  ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
  return;
 } else {
  $14 = ((($this)) + 8|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($this)) + 16|0);
  $17 = HEAP32[$16>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($agg$result,$15,$17);
  return;
 }
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,1032);
 $0 = ((($this)) + 64|0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var $$cast = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$vtt>>2]|0;
 HEAP32[$this>>2] = $0;
 $1 = ((($vtt)) + 32|0);
 $2 = HEAP32[$1>>2]|0;
 $$cast = $0;
 $3 = ((($$cast)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($this) + ($4)|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($vtt)) + 36|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($this)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($this)) + 12|0);
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (976);
 $0 = ((($this)) + 32|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0$lcssa = 0, $__p$0$ph = 0, $__p$02 = 0, $scevgep5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $__first;
 $1 = sp;
 $2 = $__last;
 $3 = (($2) - ($0))|0;
 $4 = ($3>>>0)>(4294967279);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(11);
 if ($5) {
  $6 = $3 << 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 1|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 16)|0;
  $10 = $9 & -16;
  $11 = (__Znwj($10)|0);
  $12 = ((($this)) + 8|0);
  HEAP32[$12>>2] = $11;
  $13 = $10 | 1;
  HEAP32[$this>>2] = $13;
  $14 = ((($this)) + 4|0);
  HEAP32[$14>>2] = $3;
  $__p$0$ph = $11;
 }
 $15 = ($__first|0)==($__last|0);
 if ($15) {
  $__p$0$lcssa = $__p$0$ph;
  HEAP8[$1>>0] = 0;
  __ZNSt3__111char_traitsIcE6assignERcRKc($__p$0$lcssa,$1);
  STACKTOP = sp;return;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $$03 = $__first;$__p$02 = $__p$0$ph;
 while(1) {
  __ZNSt3__111char_traitsIcE6assignERcRKc($__p$02,$$03);
  $18 = ((($$03)) + 1|0);
  $19 = ((($__p$02)) + 1|0);
  $20 = ($18|0)==($__last|0);
  if ($20) {
   break;
  } else {
   $$03 = $18;$__p$02 = $19;
  }
 }
 $scevgep5 = (($__p$0$ph) + ($17)|0);
 $__p$0$lcssa = $scevgep5;
 HEAP8[$1>>0] = 0;
 __ZNSt3__111char_traitsIcE6assignERcRKc($__p$0$lcssa,$1);
 STACKTOP = sp;return;
}
function __ZNSt3__111char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__c2>>0]|0;
 HEAP8[$__c1>>0] = $0;
 return;
}
function __ZNSt3__111char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 return ($0|0);
}
function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$__len) {
 $__os = $__os|0;
 $__str = $__str|0;
 $__len = $__len|0;
 var $$byval_copy = 0, $$sum = 0, $$sum$i = 0, $$sum2 = 0, $$sum3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 16|0;
 $__s = sp + 8|0;
 $0 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$__os);
 $1 = HEAP8[$__s>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;return ($__os|0);
 }
 $3 = HEAP32[$__os>>2]|0;
 $4 = ((($3)) + -12|0);
 $5 = HEAP32[$4>>2]|0;
 $$sum$i = (($5) + 24)|0;
 $6 = (($__os) + ($$sum$i)|0);
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__os>>2]|0;
 $9 = ((($8)) + -12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($__os) + ($10)|0);
 $$sum = (($10) + 4)|0;
 $12 = (($__os) + ($$sum)|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($__str) + ($__len)|0);
 $$sum2 = (($10) + 76)|0;
 $15 = (($__os) + ($$sum2)|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii(-1,$16)|0);
 if ($17) {
  $18 = (__ZNKSt3__18ios_base6getlocEv($11)|0);
  HEAP32[$$byval_copy>>2] = $18;
  $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy,6176)|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($20)) + 28|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (FUNCTION_TABLE_iii[$22 & 15]($19,32)|0);
  __ZNSt3__16localeD2Ev($$byval_copy);
  $24 = $23 << 24 >> 24;
  HEAP32[$15>>2] = $24;
 }
 $25 = HEAP32[$15>>2]|0;
 $26 = $25&255;
 $27 = $13 & 176;
 $28 = ($27|0)==(32);
 $29 = $28 ? $14 : $__str;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $30 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__str,$29,$14,$11,$26)|0);
 $31 = ($30|0)==(0|0);
 if (!($31)) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;return ($__os|0);
 }
 $32 = HEAP32[$__os>>2]|0;
 $33 = ((($32)) + -12|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($__os) + ($34)|0);
 $$sum3 = (($34) + 16)|0;
 $36 = (($__os) + ($$sum3)|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = $37 | 5;
 __ZNSt3__18ios_base5clearEj($35,$38);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;return ($__os|0);
}
function __ZNSt3__111char_traitsIcE11eq_int_typeEii($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c1|0)==($__c2|0);
 return ($0|0);
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$sroa$0$1 = 0;
  STACKTOP = sp;return ($$sroa$0$1|0);
 }
 $2 = $__oe;
 $3 = $__ob;
 $4 = (($2) - ($3))|0;
 $5 = ((($__iob)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)>($4|0);
 $8 = (($6) - ($4))|0;
 $__ns$0 = $7 ? $8 : 0;
 $9 = $__op;
 $10 = (($9) - ($3))|0;
 $11 = ($10|0)>(0);
 if ($11) {
  $12 = HEAP32[$0>>2]|0;
  $13 = ((($12)) + 48|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (FUNCTION_TABLE_iiii[$14 & 31]($0,$__ob,$10)|0);
  $16 = ($15|0)==($10|0);
  if (!($16)) {
   HEAP32[$__s>>2] = 0;
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 }
 $17 = ($__ns$0|0)>(0);
 do {
  if ($17) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($__sp,$__ns$0,$__fl);
   $18 = HEAP32[$__s>>2]|0;
   $19 = HEAP8[$__sp>>0]|0;
   $20 = $19 & 1;
   $21 = ($20<<24>>24)==(0);
   $22 = ((($__sp)) + 8|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($__sp)) + 1|0);
   $25 = $21 ? $24 : $23;
   $26 = HEAP32[$18>>2]|0;
   $27 = ((($26)) + 48|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (FUNCTION_TABLE_iiii[$28 & 31]($18,$25,$__ns$0)|0);
   $30 = ($29|0)==($__ns$0|0);
   if ($30) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
    break;
   }
   HEAP32[$__s>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 } while(0);
 $31 = (($2) - ($9))|0;
 $32 = ($31|0)>(0);
 if ($32) {
  $33 = HEAP32[$__s>>2]|0;
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 48|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = (FUNCTION_TABLE_iiii[$36 & 31]($33,$__op,$31)|0);
  $38 = ($37|0)==($31|0);
  if (!($38)) {
   HEAP32[$__s>>2] = 0;
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 }
 HEAP32[$5>>2] = 0;
 $39 = HEAP32[$__s>>2]|0;
 $$sroa$0$1 = $39;
 STACKTOP = sp;return ($$sroa$0$1|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$__way,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $__way = $__way|0;
 $__wch = $__wch|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($this)) + 44|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($this)) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  HEAP32[$2>>2] = $5;
 }
 $7 = $__wch & 24;
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = $agg$result;
  $10 = $9;
  HEAP32[$10>>2] = 0;
  $11 = (($9) + 4)|0;
  $12 = $11;
  HEAP32[$12>>2] = 0;
  $13 = ((($agg$result)) + 8|0);
  $14 = $13;
  $15 = $14;
  HEAP32[$15>>2] = -1;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = -1;
  return;
 }
 $18 = ($7|0)==(24);
 $19 = ($__way|0)==(1);
 $or$cond = $19 & $18;
 if ($or$cond) {
  $20 = $agg$result;
  $21 = $20;
  HEAP32[$21>>2] = 0;
  $22 = (($20) + 4)|0;
  $23 = $22;
  HEAP32[$23>>2] = 0;
  $24 = ((($agg$result)) + 8|0);
  $25 = $24;
  $26 = $25;
  HEAP32[$26>>2] = -1;
  $27 = (($25) + 4)|0;
  $28 = $27;
  HEAP32[$28>>2] = -1;
  return;
 }
 do {
  if ((($__way|0) == 1)) {
   $29 = $__wch & 8;
   $30 = ($29|0)==(0);
   if ($30) {
    $40 = HEAP32[$4>>2]|0;
    $41 = ((($this)) + 20|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = $40;
    $44 = $42;
    $45 = (($43) - ($44))|0;
    $46 = ($45|0)<(0);
    $47 = $46 << 31 >> 31;
    $71 = $45;$72 = $47;
    break;
   } else {
    $31 = ((($this)) + 12|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ((($this)) + 8|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = $32;
    $36 = $34;
    $37 = (($35) - ($36))|0;
    $38 = ($37|0)<(0);
    $39 = $38 << 31 >> 31;
    $71 = $37;$72 = $39;
    break;
   }
  } else if ((($__way|0) == 2)) {
   $48 = HEAP32[$2>>2]|0;
   $49 = ((($this)) + 32|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50 & 1;
   $52 = ($51<<24>>24)==(0);
   if ($52) {
    $55 = ((($49)) + 1|0);
    $57 = $55;
   } else {
    $53 = ((($this)) + 40|0);
    $54 = HEAP32[$53>>2]|0;
    $57 = $54;
   }
   $56 = $48;
   $58 = $57;
   $59 = (($56) - ($58))|0;
   $60 = ($59|0)<(0);
   $61 = $60 << 31 >> 31;
   $71 = $59;$72 = $61;
  } else if ((($__way|0) == 0)) {
   $71 = 0;$72 = 0;
  } else {
   $62 = $agg$result;
   $63 = $62;
   HEAP32[$63>>2] = 0;
   $64 = (($62) + 4)|0;
   $65 = $64;
   HEAP32[$65>>2] = 0;
   $66 = ((($agg$result)) + 8|0);
   $67 = $66;
   $68 = $67;
   HEAP32[$68>>2] = -1;
   $69 = (($67) + 4)|0;
   $70 = $69;
   HEAP32[$70>>2] = -1;
   return;
  }
 } while(0);
 $73 = (_i64Add(($71|0),($72|0),($0|0),($1|0))|0);
 $74 = tempRet0;
 $75 = ($74|0)<(0);
 if (!($75)) {
  $76 = HEAP32[$2>>2]|0;
  $77 = ((($this)) + 32|0);
  $78 = HEAP8[$77>>0]|0;
  $79 = $78 & 1;
  $80 = ($79<<24>>24)==(0);
  if ($80) {
   $83 = ((($77)) + 1|0);
   $85 = $83;
  } else {
   $81 = ((($this)) + 40|0);
   $82 = HEAP32[$81>>2]|0;
   $85 = $82;
  }
  $84 = $76;
  $86 = $85;
  $87 = (($84) - ($86))|0;
  $88 = ($87|0)<(0);
  $89 = $88 << 31 >> 31;
  $90 = ($89|0)<($74|0);
  $91 = ($87>>>0)<($73>>>0);
  $92 = ($89|0)==($74|0);
  $93 = $92 & $91;
  $94 = $90 | $93;
  if (!($94)) {
   $104 = ($73|0)==(0);
   $105 = ($74|0)==(0);
   $106 = $104 & $105;
   if (!($106)) {
    $107 = $__wch & 8;
    $108 = ($107|0)==(0);
    if (!($108)) {
     $109 = ((($this)) + 12|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $112 = $agg$result;
      $113 = $112;
      HEAP32[$113>>2] = 0;
      $114 = (($112) + 4)|0;
      $115 = $114;
      HEAP32[$115>>2] = 0;
      $116 = ((($agg$result)) + 8|0);
      $117 = $116;
      $118 = $117;
      HEAP32[$118>>2] = -1;
      $119 = (($117) + 4)|0;
      $120 = $119;
      HEAP32[$120>>2] = -1;
      return;
     }
    }
    $121 = $__wch & 16;
    $122 = ($121|0)==(0);
    if (!($122)) {
     $123 = HEAP32[$4>>2]|0;
     $124 = ($123|0)==(0|0);
     if ($124) {
      $125 = $agg$result;
      $126 = $125;
      HEAP32[$126>>2] = 0;
      $127 = (($125) + 4)|0;
      $128 = $127;
      HEAP32[$128>>2] = 0;
      $129 = ((($agg$result)) + 8|0);
      $130 = $129;
      $131 = $130;
      HEAP32[$131>>2] = -1;
      $132 = (($130) + 4)|0;
      $133 = $132;
      HEAP32[$133>>2] = -1;
      return;
     }
    }
   }
   $134 = $__wch & 8;
   $135 = ($134|0)==(0);
   if (!($135)) {
    $136 = ((($this)) + 8|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = (($137) + ($73)|0);
    $139 = HEAP32[$2>>2]|0;
    $140 = ((($this)) + 12|0);
    HEAP32[$140>>2] = $138;
    $141 = ((($this)) + 16|0);
    HEAP32[$141>>2] = $139;
   }
   $142 = $__wch & 16;
   $143 = ($142|0)==(0);
   if (!($143)) {
    $144 = ((($this)) + 20|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = ((($this)) + 28|0);
    $147 = HEAP32[$146>>2]|0;
    HEAP32[$4>>2] = $145;
    HEAP32[$144>>2] = $145;
    HEAP32[$146>>2] = $147;
    $148 = HEAP32[$4>>2]|0;
    $149 = (($148) + ($73)|0);
    HEAP32[$4>>2] = $149;
   }
   $150 = $agg$result;
   $151 = $150;
   HEAP32[$151>>2] = 0;
   $152 = (($150) + 4)|0;
   $153 = $152;
   HEAP32[$153>>2] = 0;
   $154 = ((($agg$result)) + 8|0);
   $155 = $154;
   $156 = $155;
   HEAP32[$156>>2] = $73;
   $157 = (($155) + 4)|0;
   $158 = $157;
   HEAP32[$158>>2] = $74;
   return;
  }
 }
 $95 = $agg$result;
 $96 = $95;
 HEAP32[$96>>2] = 0;
 $97 = (($95) + 4)|0;
 $98 = $97;
 HEAP32[$98>>2] = 0;
 $99 = ((($agg$result)) + 8|0);
 $100 = $99;
 $101 = $100;
 HEAP32[$101>>2] = -1;
 $102 = (($100) + 4)|0;
 $103 = $102;
 HEAP32[$103>>2] = -1;
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$__sp,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__sp = $__sp|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__sp)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 FUNCTION_TABLE_viiiiii[$2 & 7]($agg$result,$this,$6,$9,0,$__wch);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  HEAP32[$0>>2] = $3;
 }
 $5 = ((($this)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $$0 = -1;
  return ($$0|0);
 }
 $9 = ((($this)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = ($10>>>0)<($11>>>0);
 if ($12) {
  $13 = ((($this)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($this)) + 12|0);
  $16 = HEAP32[$15>>2]|0;
  HEAP32[$13>>2] = $14;
  HEAP32[$15>>2] = $16;
  HEAP32[$9>>2] = $11;
 }
 $17 = ((($this)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$9>>2]|0;
 $20 = ($18>>>0)<($19>>>0);
 if (!($20)) {
  $$0 = -1;
  return ($$0|0);
 }
 $21 = HEAP8[$18>>0]|0;
 $22 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($21)|0);
 $$0 = $22;
 return ($$0|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  HEAP32[$0>>2] = $3;
 }
 $5 = ((($this)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($this)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($6>>>0)<($8>>>0);
 if (!($9)) {
  $$0 = -1;
  return ($$0|0);
 }
 $10 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 if ($10) {
  $11 = ((($8)) + -1|0);
  $12 = HEAP32[$0>>2]|0;
  HEAP32[$5>>2] = $6;
  HEAP32[$7>>2] = $11;
  $13 = ((($this)) + 16|0);
  HEAP32[$13>>2] = $12;
  $14 = (__ZNSt3__111char_traitsIcE7not_eofEi($__c)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = ((($this)) + 48|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16 & 16;
 $18 = ($17|0)==(0);
 if ($18) {
  $19 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($__c)|0);
  $20 = ((($8)) + -1|0);
  $21 = HEAP8[$20>>0]|0;
  $22 = (__ZNSt3__111char_traitsIcE2eqEcc($19,$21)|0);
  if (!($22)) {
   $$0 = -1;
   return ($$0|0);
  }
 }
 $23 = HEAP32[$5>>2]|0;
 $24 = HEAP32[$7>>2]|0;
 $25 = ((($24)) + -1|0);
 $26 = HEAP32[$0>>2]|0;
 HEAP32[$5>>2] = $23;
 HEAP32[$7>>2] = $25;
 $27 = ((($this)) + 16|0);
 HEAP32[$27>>2] = $26;
 $28 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($__c)|0);
 $29 = HEAP32[$7>>2]|0;
 HEAP8[$29>>0] = $28;
 $$0 = $__c;
 return ($$0|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 if ($1) {
  $87 = (__ZNSt3__111char_traitsIcE7not_eofEi($__c)|0);
  $$0 = $87;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ((($this)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = ((($this)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($this)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10|0)==($12|0);
 if ($13) {
  $14 = ((($this)) + 48|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = $15 & 16;
  $17 = ($16|0)==(0);
  if ($17) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
  $18 = ((($this)) + 20|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = $10;
  $21 = $19;
  $22 = (($20) - ($21))|0;
  $23 = ((($this)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = $24;
  $26 = (($25) - ($21))|0;
  $27 = ((($this)) + 32|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($27,0);
  $28 = HEAP8[$27>>0]|0;
  $29 = $28 & 1;
  $30 = ($29<<24>>24)==(0);
  if ($30) {
   $33 = 10;
  } else {
   $31 = HEAP32[$27>>2]|0;
   $32 = $31 & -2;
   $phitmp$i = (($32) + -1)|0;
   $33 = $phitmp$i;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($27,$33,0);
  $34 = HEAP8[$27>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  if ($36) {
   $39 = ((($27)) + 1|0);
   $48 = $39;
  } else {
   $37 = ((($this)) + 40|0);
   $38 = HEAP32[$37>>2]|0;
   $48 = $38;
  }
  $40 = HEAP8[$27>>0]|0;
  $41 = $40 & 1;
  $42 = ($41<<24>>24)==(0);
  if ($42) {
   $45 = $40&255;
   $46 = $45 >>> 1;
   $49 = $46;
  } else {
   $43 = ((($this)) + 36|0);
   $44 = HEAP32[$43>>2]|0;
   $49 = $44;
  }
  $47 = (($48) + ($49)|0);
  HEAP32[$9>>2] = $48;
  HEAP32[$18>>2] = $48;
  HEAP32[$11>>2] = $47;
  $50 = HEAP32[$9>>2]|0;
  $51 = (($50) + ($22)|0);
  HEAP32[$9>>2] = $51;
  $52 = HEAP32[$18>>2]|0;
  $53 = (($52) + ($26)|0);
  HEAP32[$23>>2] = $53;
 }
 $54 = HEAP32[$9>>2]|0;
 $55 = ((($54)) + 1|0);
 HEAP32[$0>>2] = $55;
 $56 = ((($this)) + 44|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = ($55>>>0)<($57>>>0);
 $59 = $58 ? $56 : $0;
 $60 = HEAP32[$59>>2]|0;
 HEAP32[$56>>2] = $60;
 $61 = ((($this)) + 48|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = $62 & 8;
 $64 = ($63|0)==(0);
 if (!($64)) {
  $65 = ((($this)) + 32|0);
  $66 = HEAP8[$65>>0]|0;
  $67 = $66 & 1;
  $68 = ($67<<24>>24)==(0);
  if ($68) {
   $71 = ((($65)) + 1|0);
   $73 = $71;
  } else {
   $69 = ((($this)) + 40|0);
   $70 = HEAP32[$69>>2]|0;
   $73 = $70;
  }
  $72 = (($73) + ($8)|0);
  $74 = HEAP32[$56>>2]|0;
  HEAP32[$4>>2] = $73;
  HEAP32[$2>>2] = $72;
  $75 = ((($this)) + 16|0);
  HEAP32[$75>>2] = $74;
 }
 $76 = $__c&255;
 $77 = HEAP32[$9>>2]|0;
 $78 = HEAP32[$11>>2]|0;
 $79 = ($77|0)==($78|0);
 if ($79) {
  $80 = HEAP32[$this>>2]|0;
  $81 = ((($80)) + 52|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($76)|0);
  $84 = (FUNCTION_TABLE_iii[$82 & 15]($this,$83)|0);
  $$0 = $84;
  STACKTOP = sp;return ($$0|0);
 } else {
  $85 = ((($77)) + 1|0);
  HEAP32[$9>>2] = $85;
  HEAP8[$77>>0] = $76;
  $86 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($76)|0);
  $$0 = $86;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE11to_int_typeEc($__c) {
 $__c = $__c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__c&255;
 return ($0|0);
}
function __ZNSt3__111char_traitsIcE7not_eofEi($__c) {
 $__c = $__c|0;
 var $$__c = 0, $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 $$__c = $0 ? 0 : $__c;
 return ($$__c|0);
}
function __ZNSt3__111char_traitsIcE12to_char_typeEi($__c) {
 $__c = $__c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__c&255;
 return ($0|0);
}
function __ZNSt3__111char_traitsIcE2eqEcc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c1<<24>>24)==($__c2<<24>>24);
 return ($0|0);
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
 return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
 return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($3);
 return;
}
function __Z13IKatan2Simpledd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_atan2((+$fy),(+$fx)));
 return (+$0);
}
function _strtoull_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoull($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _strtoll_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoll($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _isdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $0 = $isdigit&1;
 return ($0|0);
}
function _isxdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isxdigit($c)|0);
 return ($0|0);
}
function _mbrlen($s,$n,$st) {
 $s = $s|0;
 $n = $n|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)!=(0|0);
 $1 = $0 ? $st : 1792;
 $2 = (_mbrtowc(0,$s,$n,$1)|0);
 return ($2|0);
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa34 = 0, $$st = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($st|0)==(0|0);
 $$st = $1 ? 1800 : $st;
 $2 = HEAP32[$$st>>2]|0;
 $3 = ($src|0)==(0|0);
 L1: do {
  if ($3) {
   $4 = ($2|0)==(0);
   if ($4) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $5 = ($wc|0)==(0|0);
   if ($5) {
    HEAP32[$0>>2] = $0;
    $11 = $0;
   } else {
    $11 = $wc;
   }
   $6 = ($n|0)==(0);
   if ($6) {
    $$0 = -2;
    STACKTOP = sp;return ($$0|0);
   }
   $7 = ($2|0)==(0);
   do {
    if ($7) {
     $8 = HEAP8[$src>>0]|0;
     $9 = $8&255;
     $10 = ($8<<24>>24)>(-1);
     if ($10) {
      HEAP32[$11>>2] = $9;
      $12 = ($8<<24>>24)!=(0);
      $13 = $12&1;
      $$0 = $13;
      STACKTOP = sp;return ($$0|0);
     } else {
      $14 = (($9) + -194)|0;
      $15 = ($14>>>0)>(50);
      if ($15) {
       break L1;
      }
      $16 = ((($src)) + 1|0);
      $17 = (1584 + ($14<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($n) + -1)|0;
      $20 = ($19|0)==(0);
      if ($20) {
       $c$2 = $18;
       break;
      } else {
       $$023 = $19;$c$04 = $18;$s$05 = $16;
       label = 11;
       break;
      }
     }
    } else {
     $$023 = $n;$c$04 = $2;$s$05 = $src;
     label = 11;
    }
   } while(0);
   L16: do {
    if ((label|0) == 11) {
     $21 = HEAP8[$s$05>>0]|0;
     $22 = $21&255;
     $23 = $22 >>> 3;
     $24 = (($23) + -16)|0;
     $25 = $c$04 >> 26;
     $26 = (($23) + ($25))|0;
     $27 = $24 | $26;
     $28 = ($27>>>0)>(7);
     if ($28) {
      break L1;
     } else {
      $$1 = $$023;$32 = $21;$c$1 = $c$04;$s$1 = $s$05;
     }
     while(1) {
      $29 = $c$1 << 6;
      $30 = ((($s$1)) + 1|0);
      $31 = $32&255;
      $33 = (($31) + -128)|0;
      $34 = $33 | $29;
      $35 = (($$1) + -1)|0;
      $36 = ($34|0)<(0);
      if (!($36)) {
       $$lcssa = $34;$$lcssa34 = $35;
       break;
      }
      $38 = ($35|0)==(0);
      if ($38) {
       $c$2 = $34;
       break L16;
      }
      $39 = HEAP8[$30>>0]|0;
      $40 = $39 & -64;
      $41 = ($40<<24>>24)==(-128);
      if ($41) {
       $$1 = $35;$32 = $39;$c$1 = $34;$s$1 = $30;
      } else {
       break L1;
      }
     }
     HEAP32[$$st>>2] = 0;
     HEAP32[$11>>2] = $$lcssa;
     $37 = (($n) - ($$lcssa34))|0;
     $$0 = $37;
     STACKTOP = sp;return ($$0|0);
    }
   } while(0);
   HEAP32[$$st>>2] = $c$2;
   $$0 = -2;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$$st>>2] = 0;
 $42 = (___errno_location()|0);
 HEAP32[$42>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($st) {
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)==(0|0);
 if ($0) {
  $4 = 1;
 } else {
  $1 = HEAP32[$st>>2]|0;
  $2 = ($1|0)==(0);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st) {
 $wcs = $wcs|0;
 $src = $src|0;
 $n = $n|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$02$ = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $or$cond = 0, $or$cond17 = 0, $s = 0, $wbuf = 0, $wcs$ = 0;
 var $wn$ = 0, $ws$020 = 0, $ws$020$lcssa56 = 0, $ws$09 = 0, $ws$1 = 0, $ws$215 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0;
 $wbuf = sp + 8|0;
 $s = sp;
 $0 = HEAP32[$src>>2]|0;
 HEAP32[$s>>2] = $0;
 $1 = ($wcs|0)!=(0|0);
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($wn$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $n;$$0218 = $wn$;$37 = $$cast;$cnt$019 = 0;$ws$020 = $wcs$;
   while(1) {
    $4 = $$021 >>> 2;
    $5 = ($4>>>0)>=($$0218>>>0);
    $6 = ($$021>>>0)>(131);
    $7 = $6 | $5;
    if (!($7)) {
     $$1 = $$021;$$24 = $$0218;$18 = $37;$cnt$1 = $cnt$019;$ws$09 = $ws$020;
     break L1;
    }
    $$02$ = $5 ? $$0218 : $4;
    $8 = (($$021) - ($$02$))|0;
    $9 = (_mbsrtowcs($ws$020,$s,$$02$,$st)|0);
    $10 = ($9|0)==(-1);
    if ($10) {
     $$lcssa57 = $8;$ws$020$lcssa56 = $ws$020;
     break;
    }
    $11 = ($ws$020|0)==($wbuf|0);
    $12 = (($ws$020) + ($9<<2)|0);
    $13 = $11 ? 0 : $9;
    $$13 = (($$0218) - ($13))|0;
    $ws$1 = $11 ? $ws$020 : $12;
    $14 = (($9) + ($cnt$019))|0;
    $15 = HEAP32[$s>>2]|0;
    $16 = ($15|0)!=(0|0);
    $17 = ($$0218|0)!=($13|0);
    $or$cond = $17 & $16;
    if ($or$cond) {
     $$021 = $8;$$0218 = $$13;$37 = $15;$cnt$019 = $14;$ws$020 = $ws$1;
    } else {
     $$1 = $8;$$24 = $$13;$18 = $15;$cnt$1 = $14;$ws$09 = $ws$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$s>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$18 = $$pr$pre;$cnt$1 = -1;$ws$09 = $ws$020$lcssa56;
  } else {
   $$1 = $n;$$24 = $wn$;$18 = $$cast;$cnt$1 = 0;$ws$09 = $wcs$;
  }
 } while(0);
 $19 = ($18|0)==(0|0);
 L8: do {
  if ($19) {
   $cnt$3 = $cnt$1;
  } else {
   $20 = ($$24|0)!=(0);
   $21 = ($$1|0)!=(0);
   $22 = $20 & $21;
   if ($22) {
    $$216 = $$1;$$313 = $$24;$23 = $18;$cnt$214 = $cnt$1;$ws$215 = $ws$09;
    while(1) {
     $24 = (_mbrtowc($ws$215,$23,$$216,$st)|0);
     $25 = (($24) + 2)|0;
     $26 = ($25>>>0)<(3);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $27 = HEAP32[$s>>2]|0;
     $28 = (($27) + ($24)|0);
     HEAP32[$s>>2] = $28;
     $29 = (($$216) - ($24))|0;
     $30 = ((($ws$215)) + 4|0);
     $31 = (($$313) + -1)|0;
     $32 = (($cnt$214) + 1)|0;
     $33 = ($31|0)!=(0);
     $34 = ($$216|0)!=($24|0);
     $35 = $33 & $34;
     if ($35) {
      $$216 = $29;$$313 = $31;$23 = $28;$cnt$214 = $32;$ws$215 = $30;
     } else {
      $cnt$3 = $32;
      break L8;
     }
    }
    if ((($$lcssa|0) == 0)) {
     HEAP32[$s>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break;
    } else if ((($$lcssa|0) == -1)) {
     $cnt$3 = -1;
     break;
    } else {
     HEAP32[$st>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $36 = HEAP32[$s>>2]|0;
 HEAP32[$src>>2] = $36;
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0;
 var $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa102 = 0, $$lcssa90 = 0, $$lcssa94 = 0, $$lcssa96 = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$old1 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0, $s$0 = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0;
 var $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 16;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 37;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03 = $wn;$s$0 = $0;
   label = 7;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 6;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 26;
    break;
   } else {
    $$0219 = $$02$ph;$$4718 = $$47$ph;$s$520 = $s$5$ph;
   }
   while(1) {
    $63 = HEAP8[$s$520>>0]|0;
    $64 = $63&255;
    $65 = (($64) + -1)|0;
    $66 = ($65>>>0)<(127);
    do {
     if ($66) {
      $67 = $s$520;
      $68 = $67 & 3;
      $69 = ($68|0)==(0);
      $70 = ($$4718>>>0)>(4);
      $or$cond = $70 & $69;
      if ($or$cond) {
       $$1 = $$0219;$$5 = $$4718;$s$6 = $s$520;
       while(1) {
        $71 = HEAP32[$s$6>>2]|0;
        $72 = (($71) + -16843009)|0;
        $73 = $72 | $71;
        $74 = $73 & -2139062144;
        $75 = ($74|0)==(0);
        if (!($75)) {
         $$1$lcssa = $$1;$$5$lcssa = $$5;$$lcssa94 = $71;$s$6$lcssa = $s$6;
         label = 32;
         break;
        }
        $76 = ((($s$6)) + 1|0);
        $77 = $71 & 255;
        $78 = ((($$1)) + 4|0);
        HEAP32[$$1>>2] = $77;
        $79 = ((($s$6)) + 2|0);
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $82 = ((($$1)) + 8|0);
        HEAP32[$78>>2] = $81;
        $83 = ((($s$6)) + 3|0);
        $84 = HEAP8[$79>>0]|0;
        $85 = $84&255;
        $86 = ((($$1)) + 12|0);
        HEAP32[$82>>2] = $85;
        $87 = ((($s$6)) + 4|0);
        $88 = HEAP8[$83>>0]|0;
        $89 = $88&255;
        $90 = ((($$1)) + 16|0);
        HEAP32[$86>>2] = $89;
        $91 = (($$5) + -4)|0;
        $$old1 = ($91>>>0)>(4);
        if ($$old1) {
         $$1 = $90;$$5 = $91;$s$6 = $87;
        } else {
         $$lcssa96 = $87;$$lcssa97 = $90;$$lcssa98 = $91;
         label = 31;
         break;
        }
       }
       if ((label|0) == 31) {
        label = 0;
        $$pre$pre = HEAP8[$$lcssa96>>0]|0;
        $$2 = $$lcssa97;$$6 = $$lcssa98;$94 = $$pre$pre;$s$7 = $$lcssa96;
        break;
       }
       else if ((label|0) == 32) {
        label = 0;
        $92 = $$lcssa94&255;
        $$2 = $$1$lcssa;$$6 = $$5$lcssa;$94 = $92;$s$7 = $s$6$lcssa;
        break;
       }
      } else {
       $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
      }
     } else {
      $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
     }
    } while(0);
    $93 = $94&255;
    $95 = (($93) + -1)|0;
    $96 = ($95>>>0)<(127);
    if (!($96)) {
     $$2$lcssa = $$2;$$6$lcssa = $$6;$$lcssa102 = $93;$s$7$lcssa = $s$7;
     break;
    }
    $97 = ((($s$7)) + 1|0);
    $98 = ((($$2)) + 4|0);
    HEAP32[$$2>>2] = $93;
    $99 = (($$6) + -1)|0;
    $100 = ($99|0)==(0);
    if ($100) {
     $s$5$lcssa = $97;
     label = 26;
     break L7;
    } else {
     $$0219 = $98;$$4718 = $99;$s$520 = $97;
    }
   }
   $101 = (($$lcssa102) + -194)|0;
   $102 = ($101>>>0)>(50);
   if ($102) {
    $$434 = $$2$lcssa;$$833 = $$6$lcssa;$s$1035 = $s$7$lcssa;
    label = 48;
    break;
   }
   $103 = ((($s$7$lcssa)) + 1|0);
   $104 = (1584 + ($101<<2)|0);
   $105 = HEAP32[$104>>2]|0;
   $$3 = $$2$lcssa;$$7 = $$6$lcssa;$c$4 = $105;$s$8 = $103;
   label = 37;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $7 = HEAP8[$s$0>>0]|0;
   $8 = $7&255;
   $9 = (($8) + -1)|0;
   $10 = ($9>>>0)<(127);
   if ($10) {
    $11 = $s$0;
    $12 = $11 & 3;
    $13 = ($12|0)==(0);
    if ($13) {
     $14 = HEAP32[$s$0>>2]|0;
     $15 = (($14) + -16843009)|0;
     $16 = $15 | $14;
     $17 = $16 & -2139062144;
     $18 = ($17|0)==(0);
     if ($18) {
      $$1415 = $$03;$s$116 = $s$0;
      while(1) {
       $19 = ((($s$116)) + 4|0);
       $20 = (($$1415) + -4)|0;
       $21 = HEAP32[$19>>2]|0;
       $22 = (($21) + -16843009)|0;
       $23 = $22 | $21;
       $24 = $23 & -2139062144;
       $25 = ($24|0)==(0);
       if ($25) {
        $$1415 = $20;$s$116 = $19;
       } else {
        $$14$lcssa = $20;$$in = $21;$s$1$lcssa = $19;
        break;
       }
      }
     } else {
      $$14$lcssa = $$03;$$in = $14;$s$1$lcssa = $s$0;
     }
     $26 = $$in&255;
     $$25 = $$14$lcssa;$28 = $26;$s$2 = $s$1$lcssa;
    } else {
     $$25 = $$03;$28 = $7;$s$2 = $s$0;
    }
   } else {
    $$25 = $$03;$28 = $7;$s$2 = $s$0;
   }
   $27 = $28&255;
   $29 = (($27) + -1)|0;
   $30 = ($29>>>0)<(127);
   if ($30) {
    $31 = ((($s$2)) + 1|0);
    $32 = (($$25) + -1)|0;
    $$03 = $32;$s$0 = $31;
    label = 7;
    continue;
   } else {
    $$25$lcssa = $$25;$$lcssa90 = $27;$s$2$lcssa = $s$2;
   }
   $33 = (($$lcssa90) + -194)|0;
   $34 = ($33>>>0)>(50);
   if ($34) {
    $$434 = $ws;$$833 = $$25$lcssa;$s$1035 = $s$2$lcssa;
    label = 48;
    break;
   }
   $35 = ((($s$2$lcssa)) + 1|0);
   $36 = (1584 + ($33<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $$36 = $$25$lcssa;$c$2 = $37;$s$3 = $35;
   label = 16;
   continue;
  }
  else if ((label|0) == 16) {
   label = 0;
   $38 = HEAP8[$s$3>>0]|0;
   $39 = $38&255;
   $40 = $39 >>> 3;
   $41 = (($40) + -16)|0;
   $42 = $c$2 >> 26;
   $43 = (($40) + ($42))|0;
   $44 = $41 | $43;
   $45 = ($44>>>0)>(7);
   if ($45) {
    label = 17;
    break;
   }
   $47 = ((($s$3)) + 1|0);
   $48 = $c$2 & 33554432;
   $49 = ($48|0)==(0);
   if ($49) {
    $s$4 = $47;
   } else {
    $50 = HEAP8[$47>>0]|0;
    $51 = $50 & -64;
    $52 = ($51<<24>>24)==(-128);
    if (!($52)) {
     label = 20;
     break;
    }
    $54 = ((($s$3)) + 2|0);
    $55 = $c$2 & 524288;
    $56 = ($55|0)==(0);
    if ($56) {
     $s$4 = $54;
    } else {
     $57 = HEAP8[$54>>0]|0;
     $58 = $57 & -64;
     $59 = ($58<<24>>24)==(-128);
     if (!($59)) {
      label = 23;
      break;
     }
     $61 = ((($s$3)) + 3|0);
     $s$4 = $61;
    }
   }
   $62 = (($$36) + -1)|0;
   $$03 = $62;$s$0 = $s$4;
   label = 7;
   continue;
  }
  else if ((label|0) == 37) {
   label = 0;
   $106 = HEAP8[$s$8>>0]|0;
   $107 = $106&255;
   $108 = $107 >>> 3;
   $109 = (($108) + -16)|0;
   $110 = $c$4 >> 26;
   $111 = (($108) + ($110))|0;
   $112 = $109 | $111;
   $113 = ($112>>>0)>(7);
   if ($113) {
    label = 38;
    break;
   }
   $115 = $c$4 << 6;
   $116 = ((($s$8)) + 1|0);
   $117 = (($107) + -128)|0;
   $118 = $117 | $115;
   $119 = ($118|0)<(0);
   if ($119) {
    $120 = HEAP8[$116>>0]|0;
    $121 = $120&255;
    $122 = $121 & 192;
    $123 = ($122|0)==(128);
    if (!($123)) {
     label = 41;
     break;
    }
    $125 = $118 << 6;
    $126 = ((($s$8)) + 2|0);
    $127 = (($121) + -128)|0;
    $128 = $127 | $125;
    $129 = ($128|0)<(0);
    if ($129) {
     $130 = HEAP8[$126>>0]|0;
     $131 = $130&255;
     $132 = $131 & 192;
     $133 = ($132|0)==(128);
     if (!($133)) {
      label = 44;
      break;
     }
     $135 = $128 << 6;
     $136 = ((($s$8)) + 3|0);
     $137 = (($131) + -128)|0;
     $138 = $137 | $135;
     $c$5 = $138;$s$9 = $136;
    } else {
     $c$5 = $128;$s$9 = $126;
    }
   } else {
    $c$5 = $118;$s$9 = $116;
   }
   $139 = ((($$3)) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $140 = (($$7) + -1)|0;
   $$02$ph = $139;$$47$ph = $140;$s$5$ph = $s$9;
   label = 6;
   continue;
  }
 }
 if ((label|0) == 17) {
  $46 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $46;
  label = 47;
 }
 else if ((label|0) == 20) {
  $53 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $53;
  label = 47;
 }
 else if ((label|0) == 23) {
  $60 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $60;
  label = 47;
 }
 else if ((label|0) == 26) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
  return ($$0|0);
 }
 else if ((label|0) == 38) {
  $114 = ((($s$8)) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $114;
  label = 47;
 }
 else if ((label|0) == 41) {
  $124 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $124;
 }
 else if ((label|0) == 44) {
  $134 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $134;
 }
 if ((label|0) == 47) {
  $141 = ($c$6|0)==(0);
  if ($141) {
   $$434 = $$4;$$833 = $$8;$s$1035 = $s$10;
   label = 48;
  } else {
   $$48 = $$4;$s$109 = $s$10;
  }
 }
 if ((label|0) == 48) {
  $142 = HEAP8[$s$1035>>0]|0;
  $143 = ($142<<24>>24)==(0);
  if ($143) {
   $144 = ($$434|0)==(0|0);
   if (!($144)) {
    HEAP32[$$434>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $145 = (($wn) - ($$833))|0;
   $$0 = $145;
   return ($$0|0);
  } else {
   $$48 = $$434;$s$109 = $s$1035;
  }
 }
 $146 = (___errno_location()|0);
 HEAP32[$146>>2] = 84;
 $147 = ($$48|0)==(0|0);
 if ($147) {
  $$0 = -1;
  return ($$0|0);
 }
 HEAP32[$src>>2] = $s$109;
 $$0 = -1;
 return ($$0|0);
}
function _mbtowc($wc,$src,$n) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($src|0)==(0|0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ($n|0)==(0);
 do {
  if (!($2)) {
   $3 = ($wc|0)==(0|0);
   if ($3) {
    HEAP32[$0>>2] = $0;
    $7 = $0;
   } else {
    $7 = $wc;
   }
   $4 = HEAP8[$src>>0]|0;
   $5 = $4&255;
   $6 = ($4<<24>>24)>(-1);
   if ($6) {
    HEAP32[$7>>2] = $5;
    $8 = ($4<<24>>24)!=(0);
    $9 = $8&1;
    $$0 = $9;
    STACKTOP = sp;return ($$0|0);
   }
   $10 = (($5) + -194)|0;
   $11 = ($10>>>0)>(50);
   if (!($11)) {
    $12 = ((($src)) + 1|0);
    $13 = (1584 + ($10<<2)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($n>>>0)<(4);
    if ($15) {
     $16 = ($n*6)|0;
     $17 = (($16) + -6)|0;
     $18 = -2147483648 >>> $17;
     $19 = $14 & $18;
     $20 = ($19|0)==(0);
     if (!($20)) {
      break;
     }
    }
    $21 = HEAP8[$12>>0]|0;
    $22 = $21&255;
    $23 = $22 >>> 3;
    $24 = (($23) + -16)|0;
    $25 = $14 >> 26;
    $26 = (($23) + ($25))|0;
    $27 = $24 | $26;
    $28 = ($27>>>0)>(7);
    if (!($28)) {
     $29 = $14 << 6;
     $30 = (($22) + -128)|0;
     $31 = $30 | $29;
     $32 = ($31|0)<(0);
     if (!($32)) {
      HEAP32[$7>>2] = $31;
      $$0 = 2;
      STACKTOP = sp;return ($$0|0);
     }
     $33 = ((($src)) + 2|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $35 & 192;
     $37 = ($36|0)==(128);
     if ($37) {
      $38 = $31 << 6;
      $39 = (($35) + -128)|0;
      $40 = $39 | $38;
      $41 = ($40|0)<(0);
      if (!($41)) {
       HEAP32[$7>>2] = $40;
       $$0 = 3;
       STACKTOP = sp;return ($$0|0);
      }
      $42 = ((($src)) + 3|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = $43&255;
      $45 = $44 & 192;
      $46 = ($45|0)==(128);
      if ($46) {
       $47 = $40 << 6;
       $48 = (($44) + -128)|0;
       $49 = $48 | $47;
       HEAP32[$7>>2] = $49;
       $$0 = 4;
       STACKTOP = sp;return ($$0|0);
      }
     }
    }
   }
  }
 } while(0);
 $50 = (___errno_location()|0);
 HEAP32[$50>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st) {
 $dst = $dst|0;
 $wcs = $wcs|0;
 $wn = $wn|0;
 $n = $n|0;
 $st = $st|0;
 var $$02$$0 = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $or$cond = 0;
 var $or$cond17 = 0, $s$020 = 0, $s$020$lcssa56 = 0, $s$09 = 0, $s$1 = 0, $s$215 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $buf = sp + 8|0;
 $ws = sp;
 $0 = HEAP32[$wcs>>2]|0;
 HEAP32[$ws>>2] = $0;
 $1 = ($dst|0)!=(0|0);
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($n$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $wn;$$0218 = $n$;$38 = $$cast;$cnt$019 = 0;$s$020 = $dst$;
   while(1) {
    $4 = ($$021>>>0)>=($$0218>>>0);
    $5 = ($$021>>>0)>(32);
    $6 = $4 | $5;
    if (!($6)) {
     $$1 = $$021;$$24 = $$0218;$17 = $38;$cnt$1 = $cnt$019;$s$09 = $s$020;
     break L1;
    }
    $$02$$0 = $4 ? $$0218 : $$021;
    $7 = (($$021) - ($$02$$0))|0;
    $8 = (_wcsrtombs($s$020,$ws,$$02$$0,0)|0);
    $9 = ($8|0)==(-1);
    if ($9) {
     $$lcssa57 = $7;$s$020$lcssa56 = $s$020;
     break;
    }
    $10 = ($s$020|0)==($buf|0);
    $11 = (($s$020) + ($8)|0);
    $12 = $10 ? 0 : $8;
    $$13 = (($$0218) - ($12))|0;
    $s$1 = $10 ? $s$020 : $11;
    $13 = (($8) + ($cnt$019))|0;
    $14 = HEAP32[$ws>>2]|0;
    $15 = ($14|0)!=(0|0);
    $16 = ($$0218|0)!=($12|0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$021 = $7;$$0218 = $$13;$38 = $14;$cnt$019 = $13;$s$020 = $s$1;
    } else {
     $$1 = $7;$$24 = $$13;$17 = $14;$cnt$1 = $13;$s$09 = $s$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$ws>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$17 = $$pr$pre;$cnt$1 = -1;$s$09 = $s$020$lcssa56;
  } else {
   $$1 = $wn;$$24 = $n$;$17 = $$cast;$cnt$1 = 0;$s$09 = $dst$;
  }
 } while(0);
 $18 = ($17|0)==(0|0);
 L8: do {
  if ($18) {
   $cnt$3 = $cnt$1;
  } else {
   $19 = ($$24|0)!=(0);
   $20 = ($$1|0)!=(0);
   $21 = $19 & $20;
   if ($21) {
    $$216 = $$1;$$313 = $$24;$23 = $17;$cnt$214 = $cnt$1;$s$215 = $s$09;
    while(1) {
     $22 = HEAP32[$23>>2]|0;
     $24 = (_wcrtomb($s$215,$22,0)|0);
     $25 = (($24) + 1)|0;
     $26 = ($25>>>0)<(2);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $28 = HEAP32[$ws>>2]|0;
     $29 = ((($28)) + 4|0);
     HEAP32[$ws>>2] = $29;
     $30 = (($$216) + -1)|0;
     $31 = (($s$215) + ($24)|0);
     $32 = (($$313) - ($24))|0;
     $33 = (($cnt$214) + 1)|0;
     $34 = ($$313|0)!=($24|0);
     $35 = ($30|0)!=(0);
     $36 = $34 & $35;
     if ($36) {
      $$216 = $30;$$313 = $32;$23 = $29;$cnt$214 = $33;$s$215 = $31;
     } else {
      $cnt$3 = $33;
      break L8;
     }
    }
    $27 = ($$lcssa|0)==(0);
    if ($27) {
     HEAP32[$ws>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
    } else {
     $cnt$3 = -1;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $37 = HEAP32[$ws>>2]|0;
 HEAP32[$wcs>>2] = $37;
 STACKTOP = sp;return ($cnt$3|0);
}
function _wcsrtombs($s,$ws,$n,$st) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa82 = 0, $$5 = 0, $$pn = 0, $$pre = 0;
 var $$pre43 = 0, $$pre44 = 0, $$pre45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $buf = sp;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $2 = HEAP32[$ws>>2]|0;
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==(0);
  if ($4) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$0218 = 0;$5 = $3;$ws2$019 = $2;
  }
  while(1) {
   $6 = ($5>>>0)>(127);
   if ($6) {
    $7 = (_wcrtomb($buf,$5,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     $$0 = -1;
     label = 26;
     break;
    } else {
     $$pn = $7;
    }
   } else {
    $$pn = 1;
   }
   $$13 = (($$pn) + ($$0218))|0;
   $9 = ((($ws2$019)) + 4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $$0 = $$13;
    label = 26;
    break;
   } else {
    $$0218 = $$13;$5 = $10;$ws2$019 = $9;
   }
  }
  if ((label|0) == 26) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1 = ($n>>>0)>(3);
 L14: do {
  if ($1) {
   $$pre = HEAP32[$ws>>2]|0;
   $$0129 = $s;$$2428 = $n;$14 = $$pre;
   while(1) {
    $13 = HEAP32[$14>>2]|0;
    $15 = (($13) + -1)|0;
    $16 = ($15>>>0)>(126);
    if ($16) {
     $17 = ($13|0)==(0);
     if ($17) {
      $$0129$lcssa = $$0129;$$2428$lcssa = $$2428;
      break;
     }
     $19 = (_wcrtomb($$0129,$13,0)|0);
     $20 = ($19|0)==(-1);
     if ($20) {
      $$0 = -1;
      label = 26;
      break;
     }
     $21 = (($$0129) + ($19)|0);
     $22 = (($$2428) - ($19))|0;
     $$1 = $21;$$35 = $22;$27 = $14;
    } else {
     $23 = $13&255;
     $24 = ((($$0129)) + 1|0);
     HEAP8[$$0129>>0] = $23;
     $25 = (($$2428) + -1)|0;
     $$pre43 = HEAP32[$ws>>2]|0;
     $$1 = $24;$$35 = $25;$27 = $$pre43;
    }
    $26 = ((($27)) + 4|0);
    HEAP32[$ws>>2] = $26;
    $28 = ($$35>>>0)>(3);
    if ($28) {
     $$0129 = $$1;$$2428 = $$35;$14 = $26;
    } else {
     $$01$lcssa = $$1;$$24$lcssa = $$35;
     break L14;
    }
   }
   if ((label|0) == 26) {
    STACKTOP = sp;return ($$0|0);
   }
   HEAP8[$$0129$lcssa>>0] = 0;
   HEAP32[$ws>>2] = 0;
   $18 = (($n) - ($$2428$lcssa))|0;
   $$0 = $18;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$01$lcssa = $s;$$24$lcssa = $n;
  }
 } while(0);
 $12 = ($$24$lcssa|0)==(0);
 if ($12) {
  $$0 = $n;
  STACKTOP = sp;return ($$0|0);
 }
 $$pre44 = HEAP32[$ws>>2]|0;
 $$223 = $$01$lcssa;$$422 = $$24$lcssa;$30 = $$pre44;
 while(1) {
  $29 = HEAP32[$30>>2]|0;
  $31 = (($29) + -1)|0;
  $32 = ($31>>>0)>(126);
  if ($32) {
   $33 = ($29|0)==(0);
   if ($33) {
    $$223$lcssa = $$223;$$422$lcssa = $$422;
    label = 19;
    break;
   }
   $35 = (_wcrtomb($buf,$29,0)|0);
   $36 = ($35|0)==(-1);
   if ($36) {
    $$0 = -1;
    label = 26;
    break;
   }
   $37 = ($$422>>>0)<($35>>>0);
   if ($37) {
    $$422$lcssa82 = $$422;
    label = 22;
    break;
   }
   $39 = HEAP32[$30>>2]|0;
   (_wcrtomb($$223,$39,0)|0);
   $40 = (($$223) + ($35)|0);
   $41 = (($$422) - ($35))|0;
   $$3 = $40;$$5 = $41;$46 = $30;
  } else {
   $42 = $29&255;
   $43 = ((($$223)) + 1|0);
   HEAP8[$$223>>0] = $42;
   $44 = (($$422) + -1)|0;
   $$pre45 = HEAP32[$ws>>2]|0;
   $$3 = $43;$$5 = $44;$46 = $$pre45;
  }
  $45 = ((($46)) + 4|0);
  HEAP32[$ws>>2] = $45;
  $47 = ($$5|0)==(0);
  if ($47) {
   $$0 = $n;
   label = 26;
   break;
  } else {
   $$223 = $$3;$$422 = $$5;$30 = $45;
  }
 }
 if ((label|0) == 19) {
  HEAP8[$$223$lcssa>>0] = 0;
  HEAP32[$ws>>2] = 0;
  $34 = (($n) - ($$422$lcssa))|0;
  $$0 = $34;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 22) {
  $38 = (($n) - ($$422$lcssa82))|0;
  $$0 = $38;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 26) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = (_memchr($1,0,$2)|0);
 $4 = ($3|0)==(0|0);
 $5 = $3;
 $6 = $1;
 $7 = (($5) - ($6))|0;
 $k$0 = $4 ? $2 : $7;
 $8 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $8 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $9 = (($1) + ($k$0$len)|0);
 $10 = ((($f)) + 4|0);
 HEAP32[$10>>2] = $9;
 $11 = (($1) + ($k$0)|0);
 $12 = ((($f)) + 8|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$0>>2] = $11;
 return ($k$0$len|0);
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vasprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap2 = sp;
 $0 = (_malloc(240)|0);
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = -1;
  } else {
   $vacopy_currentptr = HEAP32[$ap>>2]|0;
   HEAP32[$ap2>>2] = $vacopy_currentptr;
   $2 = (_vsnprintf($0,240,$fmt,$ap2)|0);
   $3 = ($2>>>0)<(240);
   if ($3) {
    $4 = (($2) + 1)|0;
    $5 = (_realloc($0,$4)|0);
    $6 = ($5|0)!=(0|0);
    $7 = $6 ? $5 : $0;
    HEAP32[$s>>2] = $7;
    $$0 = $2;
    break;
   }
   _free($0);
   $8 = ($2|0)<(0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = (($2) + 1)|0;
    $10 = (_malloc($9)|0);
    HEAP32[$s>>2] = $10;
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$0 = -1;
    } else {
     $12 = (_vsnprintf($10,$9,$fmt,$ap)|0);
     $$0 = $12;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _MUSL_vfscanf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$9 = 0, $$lcssa = 0, $$lcssa38 = 0, $$lcssa520 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi224Z2D = 0, $$pre208 = 0, $$pre210 = 0, $$pre212 = 0, $$pre214 = 0, $$pre216 = 0, $$pre220 = 0, $$pre222 = 0, $$pre223 = 0;
 var $$size$0 = 0, $$width$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0.0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0.0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0203 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $base$0 = 0, $c$0100 = 0, $dest$0 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0;
 var $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0, $factor16 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$lcssa = 0, $i$0$ph20 = 0, $i$0$ph20$lcssa = 0, $i$0$ph20$us105 = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0;
 var $isdigit = 0, $isdigit7 = 0, $isdigit795 = 0, $isdigittmp = 0, $isdigittmp6 = 0, $isdigittmp694 = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0$ = 0, $matches$0110 = 0, $matches$0110$lcssa = 0, $matches$0110501 = 0, $matches$1 = 0, $matches$2 = 0, $matches$3 = 0, $not$ = 0, $or$cond$us = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond8 = 0;
 var $p$0116 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$396 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0115 = 0, $pos$1 = 0, $pos$2 = 0, $s$0108 = 0, $s$0108$lcssa = 0;
 var $s$1 = 0, $s$2$ph = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $scanset = 0, $size$0 = 0, $st = 0, $vacopy_currentptr = 0, $wc = 0, $wcs$0109 = 0, $wcs$0109$lcssa = 0, $wcs$1 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph138 = 0;
 var $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$097 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $ap2$i = sp + 16|0;
 $st = sp + 8|0;
 $scanset = sp + 33|0;
 $wc = sp;
 $0 = sp + 32|0;
 $1 = HEAP8[$fmt>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $matches$3 = 0;
  STACKTOP = sp;return ($matches$3|0);
 }
 $3 = ((($f)) + 4|0);
 $4 = ((($f)) + 100|0);
 $5 = ((($f)) + 108|0);
 $6 = ((($f)) + 8|0);
 $7 = ((($scanset)) + 10|0);
 $8 = ((($scanset)) + 33|0);
 $9 = ((($st)) + 4|0);
 $10 = ((($scanset)) + 46|0);
 $11 = ((($scanset)) + 94|0);
 $13 = $1;$matches$0110 = 0;$p$0116 = $fmt;$pos$0115 = 0;$s$0108 = 0;$wcs$0109 = 0;
 L4: while(1) {
  $12 = $13&255;
  $14 = (_isspace($12)|0);
  $15 = ($14|0)==(0);
  L6: do {
   if ($15) {
    $42 = HEAP8[$p$0116>>0]|0;
    $43 = ($42<<24>>24)==(37);
    L8: do {
     if ($43) {
      $44 = ((($p$0116)) + 1|0);
      $45 = HEAP8[$44>>0]|0;
      do {
       if ((($45<<24>>24) == 37)) {
        break L8;
       } else if ((($45<<24>>24) == 42)) {
        $66 = ((($p$0116)) + 2|0);
        $dest$0 = 0;$p$2 = $66;
       } else {
        $67 = $45&255;
        $isdigittmp = (($67) + -48)|0;
        $isdigit = ($isdigittmp>>>0)<(10);
        if ($isdigit) {
         $68 = ((($p$0116)) + 2|0);
         $69 = HEAP8[$68>>0]|0;
         $70 = ($69<<24>>24)==(36);
         if ($70) {
          $vacopy_currentptr = HEAP32[$ap>>2]|0;
          HEAP32[$ap2$i>>2] = $vacopy_currentptr;
          $i$0$i = $isdigittmp;
          while(1) {
           $71 = ($i$0$i>>>0)>(1);
           $arglist_current = HEAP32[$ap2$i>>2]|0;
           $72 = $arglist_current;
           $73 = ((0) + 4|0);
           $expanded4 = $73;
           $expanded = (($expanded4) - 1)|0;
           $74 = (($72) + ($expanded))|0;
           $75 = ((0) + 4|0);
           $expanded8 = $75;
           $expanded7 = (($expanded8) - 1)|0;
           $expanded6 = $expanded7 ^ -1;
           $76 = $74 & $expanded6;
           $77 = $76;
           $78 = HEAP32[$77>>2]|0;
           $arglist_next = ((($77)) + 4|0);
           HEAP32[$ap2$i>>2] = $arglist_next;
           $79 = (($i$0$i) + -1)|0;
           if ($71) {
            $i$0$i = $79;
           } else {
            $$lcssa = $78;
            break;
           }
          }
          $80 = ((($p$0116)) + 3|0);
          $dest$0 = $$lcssa;$p$2 = $80;
          break;
         }
        }
        $arglist_current2 = HEAP32[$ap>>2]|0;
        $81 = $arglist_current2;
        $82 = ((0) + 4|0);
        $expanded11 = $82;
        $expanded10 = (($expanded11) - 1)|0;
        $83 = (($81) + ($expanded10))|0;
        $84 = ((0) + 4|0);
        $expanded15 = $84;
        $expanded14 = (($expanded15) - 1)|0;
        $expanded13 = $expanded14 ^ -1;
        $85 = $83 & $expanded13;
        $86 = $85;
        $87 = HEAP32[$86>>2]|0;
        $arglist_next3 = ((($86)) + 4|0);
        HEAP32[$ap>>2] = $arglist_next3;
        $dest$0 = $87;$p$2 = $44;
       }
      } while(0);
      $88 = HEAP8[$p$2>>0]|0;
      $89 = $88&255;
      $isdigittmp694 = (($89) + -48)|0;
      $isdigit795 = ($isdigittmp694>>>0)<(10);
      if ($isdigit795) {
       $93 = $89;$p$396 = $p$2;$width$097 = 0;
       while(1) {
        $90 = ($width$097*10)|0;
        $91 = (($90) + -48)|0;
        $92 = (($91) + ($93))|0;
        $94 = ((($p$396)) + 1|0);
        $95 = HEAP8[$94>>0]|0;
        $96 = $95&255;
        $isdigittmp6 = (($96) + -48)|0;
        $isdigit7 = ($isdigittmp6>>>0)<(10);
        if ($isdigit7) {
         $93 = $96;$p$396 = $94;$width$097 = $92;
        } else {
         $$lcssa38 = $95;$p$3$lcssa = $94;$width$0$lcssa = $92;
         break;
        }
       }
      } else {
       $$lcssa38 = $88;$p$3$lcssa = $p$2;$width$0$lcssa = 0;
      }
      $97 = ($$lcssa38<<24>>24)==(109);
      if ($97) {
       $98 = ($dest$0|0)!=(0|0);
       $99 = $98&1;
       $100 = ((($p$3$lcssa)) + 1|0);
       $$pre208 = HEAP8[$100>>0]|0;
       $103 = $$pre208;$alloc$0 = $99;$p$4 = $100;$s$1 = 0;$wcs$1 = 0;
      } else {
       $103 = $$lcssa38;$alloc$0 = 0;$p$4 = $p$3$lcssa;$s$1 = $s$0108;$wcs$1 = $wcs$0109;
      }
      $101 = ((($p$4)) + 1|0);
      $102 = $103&255;
      switch ($102|0) {
      case 104:  {
       $104 = HEAP8[$101>>0]|0;
       $105 = ($104<<24>>24)==(104);
       $106 = ((($p$4)) + 2|0);
       $$9 = $105 ? $106 : $101;
       $$10 = $105 ? -2 : -1;
       $p$5 = $$9;$size$0 = $$10;
       break;
      }
      case 108:  {
       $107 = HEAP8[$101>>0]|0;
       $108 = ($107<<24>>24)==(108);
       $109 = ((($p$4)) + 2|0);
       $$11 = $108 ? $109 : $101;
       $$12 = $108 ? 3 : 1;
       $p$5 = $$11;$size$0 = $$12;
       break;
      }
      case 116: case 122:  {
       $p$5 = $101;$size$0 = 1;
       break;
      }
      case 76:  {
       $p$5 = $101;$size$0 = 2;
       break;
      }
      case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
       $p$5 = $p$4;$size$0 = 0;
       break;
      }
      case 106:  {
       $p$5 = $101;$size$0 = 3;
       break;
      }
      default: {
       $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
       label = 164;
       break L4;
      }
      }
      $110 = HEAP8[$p$5>>0]|0;
      $111 = $110&255;
      $112 = $111 & 47;
      $113 = ($112|0)==(3);
      $114 = $111 | 32;
      $$ = $113 ? $114 : $111;
      $$size$0 = $113 ? 1 : $size$0;
      if ((($$|0) == 99)) {
       $115 = ($width$0$lcssa|0)<(1);
       $$width$0 = $115 ? 1 : $width$0$lcssa;
       $pos$1 = $pos$0115;$width$1 = $$width$0;
      } else if ((($$|0) == 91)) {
       $pos$1 = $pos$0115;$width$1 = $width$0$lcssa;
      } else if ((($$|0) == 110)) {
       $116 = ($pos$0115|0)<(0);
       $117 = $116 << 31 >> 31;
       $118 = ($dest$0|0)==(0|0);
       if ($118) {
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       switch ($$size$0|0) {
       case -2:  {
        $119 = $pos$0115&255;
        HEAP8[$dest$0>>0] = $119;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -1:  {
        $120 = $pos$0115&65535;
        HEAP16[$dest$0>>1] = $120;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 0:  {
        HEAP32[$dest$0>>2] = $pos$0115;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 1:  {
        HEAP32[$dest$0>>2] = $pos$0115;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 3:  {
        $121 = $dest$0;
        $122 = $121;
        HEAP32[$122>>2] = $pos$0115;
        $123 = (($121) + 4)|0;
        $124 = $123;
        HEAP32[$124>>2] = $117;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       default: {
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       }
      } else {
       ___shlim($f,0);
       while(1) {
        $125 = HEAP32[$3>>2]|0;
        $126 = HEAP32[$4>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = ((($125)) + 1|0);
         HEAP32[$3>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $132 = $130;
        } else {
         $131 = (___shgetc($f)|0);
         $132 = $131;
        }
        $133 = (_isspace($132)|0);
        $134 = ($133|0)==(0);
        if ($134) {
         break;
        }
       }
       $135 = HEAP32[$4>>2]|0;
       $136 = ($135|0)==(0|0);
       $$pre210 = HEAP32[$3>>2]|0;
       if ($136) {
        $140 = $$pre210;
       } else {
        $137 = ((($$pre210)) + -1|0);
        HEAP32[$3>>2] = $137;
        $140 = $137;
       }
       $138 = HEAP32[$5>>2]|0;
       $139 = HEAP32[$6>>2]|0;
       $141 = $140;
       $142 = $139;
       $143 = (($138) + ($pos$0115))|0;
       $144 = (($143) + ($141))|0;
       $145 = (($144) - ($142))|0;
       $pos$1 = $145;$width$1 = $width$0$lcssa;
      }
      ___shlim($f,$width$1);
      $146 = HEAP32[$3>>2]|0;
      $147 = HEAP32[$4>>2]|0;
      $148 = ($146>>>0)<($147>>>0);
      if ($148) {
       $149 = ((($146)) + 1|0);
       HEAP32[$3>>2] = $149;
       $152 = $147;
      } else {
       $150 = (___shgetc($f)|0);
       $151 = ($150|0)<(0);
       if ($151) {
        $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
        label = 164;
        break L4;
       }
       $$pre212 = HEAP32[$4>>2]|0;
       $152 = $$pre212;
      }
      $153 = ($152|0)==(0|0);
      if (!($153)) {
       $154 = HEAP32[$3>>2]|0;
       $155 = ((($154)) + -1|0);
       HEAP32[$3>>2] = $155;
      }
      L65: do {
       switch ($$|0) {
       case 91: case 99: case 115:  {
        $156 = ($$|0)==(99);
        $157 = $$ & 239;
        $158 = ($157|0)==(99);
        L67: do {
         if ($158) {
          $159 = ($$|0)==(115);
          _memset(($scanset|0),-1,257)|0;
          HEAP8[$scanset>>0] = 0;
          if ($159) {
           HEAP8[$8>>0] = 0;
           ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;HEAP8[$7+4>>0]=0|0;
           $p$9 = $p$5;
          } else {
           $p$9 = $p$5;
          }
         } else {
          $160 = ((($p$5)) + 1|0);
          $161 = HEAP8[$160>>0]|0;
          $162 = ($161<<24>>24)==(94);
          $163 = ((($p$5)) + 2|0);
          $invert$0 = $162&1;
          $164 = $162 ? $160 : $p$5;
          $p$6 = $162 ? $163 : $160;
          $165 = $162&1;
          _memset(($scanset|0),($165|0),257)|0;
          HEAP8[$scanset>>0] = 0;
          $166 = HEAP8[$p$6>>0]|0;
          if ((($166<<24>>24) == 45)) {
           $167 = ((($164)) + 2|0);
           $168 = $invert$0 ^ 1;
           $169 = $168&255;
           HEAP8[$10>>0] = $169;
           $$pre$phi224Z2D = $169;$p$7$ph = $167;
          } else if ((($166<<24>>24) == 93)) {
           $170 = ((($164)) + 2|0);
           $171 = $invert$0 ^ 1;
           $172 = $171&255;
           HEAP8[$11>>0] = $172;
           $$pre$phi224Z2D = $172;$p$7$ph = $170;
          } else {
           $$pre222 = $invert$0 ^ 1;
           $$pre223 = $$pre222&255;
           $$pre$phi224Z2D = $$pre223;$p$7$ph = $p$6;
          }
          $p$7 = $p$7$ph;
          while(1) {
           $173 = HEAP8[$p$7>>0]|0;
           if ((($173<<24>>24) == 45)) {
            $174 = ((($p$7)) + 1|0);
            $175 = HEAP8[$174>>0]|0;
            if ((($175<<24>>24) == 93) | (($175<<24>>24) == 0)) {
             $186 = 45;$p$8 = $p$7;
            } else {
             $176 = ((($p$7)) + -1|0);
             $177 = HEAP8[$176>>0]|0;
             $178 = ($177&255)<($175&255);
             if ($178) {
              $179 = $177&255;
              $c$0100 = $179;
              while(1) {
               $180 = (($c$0100) + 1)|0;
               $181 = (($scanset) + ($180)|0);
               HEAP8[$181>>0] = $$pre$phi224Z2D;
               $182 = HEAP8[$174>>0]|0;
               $183 = $182&255;
               $184 = ($180|0)<($183|0);
               if ($184) {
                $c$0100 = $180;
               } else {
                $186 = $182;$p$8 = $174;
                break;
               }
              }
             } else {
              $186 = $175;$p$8 = $174;
             }
            }
           } else if ((($173<<24>>24) == 93)) {
            $p$9 = $p$7;
            break L67;
           } else if ((($173<<24>>24) == 0)) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
            label = 164;
            break L4;
           } else {
            $186 = $173;$p$8 = $p$7;
           }
           $185 = $186&255;
           $187 = (($185) + 1)|0;
           $188 = (($scanset) + ($187)|0);
           HEAP8[$188>>0] = $$pre$phi224Z2D;
           $189 = ((($p$8)) + 1|0);
           $p$7 = $189;
          }
         }
        } while(0);
        $190 = (($width$1) + 1)|0;
        $191 = $156 ? $190 : 31;
        $192 = ($$size$0|0)==(1);
        $193 = ($alloc$0|0)!=(0);
        L86: do {
         if ($192) {
          if ($193) {
           $194 = $191 << 2;
           $195 = (_malloc($194)|0);
           $196 = ($195|0)==(0|0);
           if ($196) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $195;
            label = 164;
            break L4;
           } else {
            $wcs$2 = $195;
           }
          } else {
           $wcs$2 = $dest$0;
          }
          HEAP32[$st>>2] = 0;
          HEAP32[$9>>2] = 0;
          $i$0$ph = 0;$k$0$ph = $191;$wcs$3$ph = $wcs$2;
          L92: while(1) {
           $197 = ($wcs$3$ph|0)==(0|0);
           if ($197) {
            $198 = ($i$0$ph|0)==($k$0$ph|0);
            $or$cond$us = $193 & $198;
            while(1) {
             $201 = HEAP32[$3>>2]|0;
             $211 = HEAP32[$4>>2]|0;
             $212 = ($201>>>0)<($211>>>0);
             if ($212) {
              $200 = ((($201)) + 1|0);
              HEAP32[$3>>2] = $200;
              $202 = HEAP8[$201>>0]|0;
              $203 = $202&255;
              $205 = $203;
             } else {
              $199 = (___shgetc($f)|0);
              $205 = $199;
             }
             $204 = (($205) + 1)|0;
             $206 = (($scanset) + ($204)|0);
             $207 = HEAP8[$206>>0]|0;
             $208 = ($207<<24>>24)==(0);
             if ($208) {
              $i$0$ph20$lcssa = $i$0$ph;$wcs$3$ph138 = 0;
              break L92;
             }
             $209 = $205&255;
             HEAP8[$0>>0] = $209;
             $210 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($210|0) == -2)) {
              continue;
             } else if ((($210|0) == -1)) {
              $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = 0;
              label = 164;
              break L4;
             }
             if ($or$cond$us) {
              $i$1$lcssa = $i$0$ph;
              break;
             }
            }
           } else {
            if ($193) {
             $i$0$ph20$us105 = $i$0$ph;
            } else {
             $i$0$ph$lcssa = $i$0$ph;$wcs$3$ph$lcssa = $wcs$3$ph;
             label = 86;
             break;
            }
            while(1) {
             while(1) {
              $215 = HEAP32[$3>>2]|0;
              $229 = HEAP32[$4>>2]|0;
              $230 = ($215>>>0)<($229>>>0);
              if ($230) {
               $214 = ((($215)) + 1|0);
               HEAP32[$3>>2] = $214;
               $216 = HEAP8[$215>>0]|0;
               $217 = $216&255;
               $219 = $217;
              } else {
               $213 = (___shgetc($f)|0);
               $219 = $213;
              }
              $218 = (($219) + 1)|0;
              $220 = (($scanset) + ($218)|0);
              $221 = HEAP8[$220>>0]|0;
              $222 = ($221<<24>>24)==(0);
              if ($222) {
               $i$0$ph20$lcssa = $i$0$ph20$us105;$wcs$3$ph138 = $wcs$3$ph;
               break L92;
              }
              $223 = $219&255;
              HEAP8[$0>>0] = $223;
              $224 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($224|0) == -1)) {
               $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph;
               label = 164;
               break L4;
              } else if (!((($224|0) == -2))) {
               break;
              }
             }
             $225 = HEAP32[$wc>>2]|0;
             $226 = (($i$0$ph20$us105) + 1)|0;
             $227 = (($wcs$3$ph) + ($i$0$ph20$us105<<2)|0);
             HEAP32[$227>>2] = $225;
             $228 = ($226|0)==($k$0$ph|0);
             if ($228) {
              $i$1$lcssa = $k$0$ph;
              break;
             } else {
              $i$0$ph20$us105 = $226;
             }
            }
           }
           $factor = $k$0$ph << 1;
           $248 = $factor | 1;
           $249 = $248 << 2;
           $250 = (_realloc($wcs$3$ph,$249)|0);
           $251 = ($250|0)==(0|0);
           if ($251) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph;
            label = 164;
            break L4;
           }
           $i$0$ph = $i$1$lcssa;$k$0$ph = $248;$wcs$3$ph = $250;
          }
          L117: do {
           if ((label|0) == 86) {
            label = 0;
            $i$0$ph20 = $i$0$ph$lcssa;
            while(1) {
             while(1) {
              $231 = HEAP32[$3>>2]|0;
              $232 = HEAP32[$4>>2]|0;
              $233 = ($231>>>0)<($232>>>0);
              if ($233) {
               $234 = ((($231)) + 1|0);
               HEAP32[$3>>2] = $234;
               $235 = HEAP8[$231>>0]|0;
               $236 = $235&255;
               $239 = $236;
              } else {
               $237 = (___shgetc($f)|0);
               $239 = $237;
              }
              $238 = (($239) + 1)|0;
              $240 = (($scanset) + ($238)|0);
              $241 = HEAP8[$240>>0]|0;
              $242 = ($241<<24>>24)==(0);
              if ($242) {
               $i$0$ph20$lcssa = $i$0$ph20;$wcs$3$ph138 = $wcs$3$ph$lcssa;
               break L117;
              }
              $243 = $239&255;
              HEAP8[$0>>0] = $243;
              $244 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($244|0) == -1)) {
               $alloc$0203 = 0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa;
               label = 164;
               break L4;
              } else if (!((($244|0) == -2))) {
               break;
              }
             }
             $245 = HEAP32[$wc>>2]|0;
             $246 = (($i$0$ph20) + 1)|0;
             $247 = (($wcs$3$ph$lcssa) + ($i$0$ph20<<2)|0);
             HEAP32[$247>>2] = $245;
             $i$0$ph20 = $246;
            }
           }
          } while(0);
          $252 = (_mbsinit($st)|0);
          $253 = ($252|0)==(0);
          if ($253) {
           $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph138;
           label = 164;
           break L4;
          } else {
           $i$4 = $i$0$ph20$lcssa;$s$3 = 0;$wcs$4 = $wcs$3$ph138;
          }
         } else {
          if ($193) {
           $254 = (_malloc($191)|0);
           $255 = ($254|0)==(0|0);
           if ($255) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = 0;
            label = 164;
            break L4;
           } else {
            $i$2$ph = 0;$k$1$ph = $191;$s$2$ph = $254;
           }
           while(1) {
            $i$2 = $i$2$ph;
            while(1) {
             $256 = HEAP32[$3>>2]|0;
             $257 = HEAP32[$4>>2]|0;
             $258 = ($256>>>0)<($257>>>0);
             if ($258) {
              $259 = ((($256)) + 1|0);
              HEAP32[$3>>2] = $259;
              $260 = HEAP8[$256>>0]|0;
              $261 = $260&255;
              $264 = $261;
             } else {
              $262 = (___shgetc($f)|0);
              $264 = $262;
             }
             $263 = (($264) + 1)|0;
             $265 = (($scanset) + ($263)|0);
             $266 = HEAP8[$265>>0]|0;
             $267 = ($266<<24>>24)==(0);
             if ($267) {
              $i$4 = $i$2;$s$3 = $s$2$ph;$wcs$4 = 0;
              break L86;
             }
             $268 = $264&255;
             $269 = (($i$2) + 1)|0;
             $270 = (($s$2$ph) + ($i$2)|0);
             HEAP8[$270>>0] = $268;
             $271 = ($269|0)==($k$1$ph|0);
             if ($271) {
              break;
             } else {
              $i$2 = $269;
             }
            }
            $factor16 = $k$1$ph << 1;
            $272 = $factor16 | 1;
            $273 = (_realloc($s$2$ph,$272)|0);
            $274 = ($273|0)==(0|0);
            if ($274) {
             $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$2$ph;$wcs$7 = 0;
             label = 164;
             break L4;
            } else {
             $i$2$ph$phi = $k$1$ph;$k$1$ph = $272;$s$2$ph = $273;$i$2$ph = $i$2$ph$phi;
            }
           }
          }
          $275 = ($dest$0|0)==(0|0);
          if ($275) {
           $293 = $152;
           while(1) {
            $291 = HEAP32[$3>>2]|0;
            $292 = ($291>>>0)<($293>>>0);
            if ($292) {
             $294 = ((($291)) + 1|0);
             HEAP32[$3>>2] = $294;
             $295 = HEAP8[$291>>0]|0;
             $296 = $295&255;
             $299 = $296;
            } else {
             $297 = (___shgetc($f)|0);
             $299 = $297;
            }
            $298 = (($299) + 1)|0;
            $300 = (($scanset) + ($298)|0);
            $301 = HEAP8[$300>>0]|0;
            $302 = ($301<<24>>24)==(0);
            if ($302) {
             $i$4 = 0;$s$3 = 0;$wcs$4 = 0;
             break L86;
            }
            $$pre216 = HEAP32[$4>>2]|0;
            $293 = $$pre216;
           }
          } else {
           $278 = $152;$i$3 = 0;
           while(1) {
            $276 = HEAP32[$3>>2]|0;
            $277 = ($276>>>0)<($278>>>0);
            if ($277) {
             $279 = ((($276)) + 1|0);
             HEAP32[$3>>2] = $279;
             $280 = HEAP8[$276>>0]|0;
             $281 = $280&255;
             $284 = $281;
            } else {
             $282 = (___shgetc($f)|0);
             $284 = $282;
            }
            $283 = (($284) + 1)|0;
            $285 = (($scanset) + ($283)|0);
            $286 = HEAP8[$285>>0]|0;
            $287 = ($286<<24>>24)==(0);
            if ($287) {
             $i$4 = $i$3;$s$3 = $dest$0;$wcs$4 = 0;
             break L86;
            }
            $288 = $284&255;
            $289 = (($i$3) + 1)|0;
            $290 = (($dest$0) + ($i$3)|0);
            HEAP8[$290>>0] = $288;
            $$pre214 = HEAP32[$4>>2]|0;
            $278 = $$pre214;$i$3 = $289;
           }
          }
         }
        } while(0);
        $303 = HEAP32[$4>>2]|0;
        $304 = ($303|0)==(0|0);
        $$pre220 = HEAP32[$3>>2]|0;
        if ($304) {
         $308 = $$pre220;
        } else {
         $305 = ((($$pre220)) + -1|0);
         HEAP32[$3>>2] = $305;
         $308 = $305;
        }
        $306 = HEAP32[$5>>2]|0;
        $307 = HEAP32[$6>>2]|0;
        $309 = $308;
        $310 = $307;
        $311 = (($309) - ($310))|0;
        $312 = (($311) + ($306))|0;
        $313 = ($312|0)==(0);
        if ($313) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$3;$wcs$9 = $wcs$4;
         break L4;
        }
        $$not = $156 ^ 1;
        $314 = ($312|0)==($width$1|0);
        $or$cond8 = $314 | $$not;
        if (!($or$cond8)) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$3;$wcs$9 = $wcs$4;
         break L4;
        }
        do {
         if ($193) {
          if ($192) {
           HEAP32[$dest$0>>2] = $wcs$4;
           break;
          } else {
           HEAP32[$dest$0>>2] = $s$3;
           break;
          }
         }
        } while(0);
        if ($156) {
         $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
        } else {
         $315 = ($wcs$4|0)==(0|0);
         if (!($315)) {
          $316 = (($wcs$4) + ($i$4<<2)|0);
          HEAP32[$316>>2] = 0;
         }
         $317 = ($s$3|0)==(0|0);
         if ($317) {
          $p$10 = $p$9;$s$4 = 0;$wcs$5 = $wcs$4;
         } else {
          $318 = (($s$3) + ($i$4)|0);
          HEAP8[$318>>0] = 0;
          $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
         }
        }
        break;
       }
       case 111:  {
        $base$0 = 8;
        label = 146;
        break;
       }
       case 117: case 100:  {
        $base$0 = 10;
        label = 146;
        break;
       }
       case 105:  {
        $base$0 = 0;
        label = 146;
        break;
       }
       case 120: case 88: case 112:  {
        $base$0 = 16;
        label = 146;
        break;
       }
       case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
        $338 = (+___floatscan($f,$$size$0,0));
        $339 = HEAP32[$5>>2]|0;
        $340 = HEAP32[$3>>2]|0;
        $341 = HEAP32[$6>>2]|0;
        $342 = $340;
        $343 = $341;
        $344 = (($343) - ($342))|0;
        $345 = ($339|0)==($344|0);
        if ($345) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$1;$wcs$9 = $wcs$1;
         break L4;
        }
        $346 = ($dest$0|0)==(0|0);
        if ($346) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         if ((($$size$0|0) == 1)) {
          HEAPF64[$dest$0>>3] = $338;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         } else if ((($$size$0|0) == 2)) {
          HEAPF64[$dest$0>>3] = $338;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         } else if ((($$size$0|0) == 0)) {
          $347 = $338;
          HEAPF32[$dest$0>>2] = $347;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         } else {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L65;
         }
        }
        break;
       }
       default: {
        $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
       }
       }
      } while(0);
      L186: do {
       if ((label|0) == 146) {
        label = 0;
        $319 = (___intscan($f,$base$0,0,-1,-1)|0);
        $320 = tempRet0;
        $321 = HEAP32[$5>>2]|0;
        $322 = HEAP32[$3>>2]|0;
        $323 = HEAP32[$6>>2]|0;
        $324 = $322;
        $325 = $323;
        $326 = (($325) - ($324))|0;
        $327 = ($321|0)==($326|0);
        if ($327) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$1;$wcs$9 = $wcs$1;
         break L4;
        }
        $328 = ($$|0)==(112);
        $329 = ($dest$0|0)!=(0|0);
        $or$cond3 = $329 & $328;
        if ($or$cond3) {
         $330 = $319;
         HEAP32[$dest$0>>2] = $330;
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
         break;
        }
        $331 = ($dest$0|0)==(0|0);
        if ($331) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         switch ($$size$0|0) {
         case -2:  {
          $332 = $319&255;
          HEAP8[$dest$0>>0] = $332;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case -1:  {
          $333 = $319&65535;
          HEAP16[$dest$0>>1] = $333;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case 0:  {
          HEAP32[$dest$0>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case 1:  {
          HEAP32[$dest$0>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         case 3:  {
          $334 = $dest$0;
          $335 = $334;
          HEAP32[$335>>2] = $319;
          $336 = (($334) + 4)|0;
          $337 = $336;
          HEAP32[$337>>2] = $320;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
          break;
         }
         default: {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L186;
         }
         }
        }
       }
      } while(0);
      $348 = HEAP32[$5>>2]|0;
      $349 = HEAP32[$3>>2]|0;
      $350 = HEAP32[$6>>2]|0;
      $351 = $349;
      $352 = $350;
      $353 = (($348) + ($pos$1))|0;
      $354 = (($353) + ($351))|0;
      $355 = (($354) - ($352))|0;
      $not$ = ($dest$0|0)!=(0|0);
      $356 = $not$&1;
      $matches$0$ = (($356) + ($matches$0110))|0;
      $matches$1 = $matches$0$;$p$11 = $p$10;$pos$2 = $355;$s$5 = $s$4;$wcs$6 = $wcs$5;
      break L6;
     }
    } while(0);
    $46 = $43&1;
    $47 = (($p$0116) + ($46)|0);
    ___shlim($f,0);
    $48 = HEAP32[$3>>2]|0;
    $49 = HEAP32[$4>>2]|0;
    $50 = ($48>>>0)<($49>>>0);
    if ($50) {
     $51 = ((($48)) + 1|0);
     HEAP32[$3>>2] = $51;
     $52 = HEAP8[$48>>0]|0;
     $53 = $52&255;
     $57 = $53;
    } else {
     $54 = (___shgetc($f)|0);
     $57 = $54;
    }
    $55 = HEAP8[$47>>0]|0;
    $56 = $55&255;
    $58 = ($57|0)==($56|0);
    if (!($58)) {
     $$lcssa520 = $57;$matches$0110$lcssa = $matches$0110;$s$0108$lcssa = $s$0108;$wcs$0109$lcssa = $wcs$0109;
     label = 19;
     break L4;
    }
    $65 = (($pos$0115) + 1)|0;
    $matches$1 = $matches$0110;$p$11 = $47;$pos$2 = $65;$s$5 = $s$0108;$wcs$6 = $wcs$0109;
   } else {
    $p$1 = $p$0116;
    while(1) {
     $16 = ((($p$1)) + 1|0);
     $17 = HEAP8[$16>>0]|0;
     $18 = $17&255;
     $19 = (_isspace($18)|0);
     $20 = ($19|0)==(0);
     if ($20) {
      $p$1$lcssa = $p$1;
      break;
     } else {
      $p$1 = $16;
     }
    }
    ___shlim($f,0);
    while(1) {
     $21 = HEAP32[$3>>2]|0;
     $22 = HEAP32[$4>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = ((($21)) + 1|0);
      HEAP32[$3>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $28 = $26;
     } else {
      $27 = (___shgetc($f)|0);
      $28 = $27;
     }
     $29 = (_isspace($28)|0);
     $30 = ($29|0)==(0);
     if ($30) {
      break;
     }
    }
    $31 = HEAP32[$4>>2]|0;
    $32 = ($31|0)==(0|0);
    $$pre = HEAP32[$3>>2]|0;
    if ($32) {
     $36 = $$pre;
    } else {
     $33 = ((($$pre)) + -1|0);
     HEAP32[$3>>2] = $33;
     $36 = $33;
    }
    $34 = HEAP32[$5>>2]|0;
    $35 = HEAP32[$6>>2]|0;
    $37 = $36;
    $38 = $35;
    $39 = (($34) + ($pos$0115))|0;
    $40 = (($39) + ($37))|0;
    $41 = (($40) - ($38))|0;
    $matches$1 = $matches$0110;$p$11 = $p$1$lcssa;$pos$2 = $41;$s$5 = $s$0108;$wcs$6 = $wcs$0109;
   }
  } while(0);
  $357 = ((($p$11)) + 1|0);
  $358 = HEAP8[$357>>0]|0;
  $359 = ($358<<24>>24)==(0);
  if ($359) {
   $matches$3 = $matches$1;
   label = 168;
   break;
  } else {
   $13 = $358;$matches$0110 = $matches$1;$p$0116 = $357;$pos$0115 = $pos$2;$s$0108 = $s$5;$wcs$0109 = $wcs$6;
  }
 }
 if ((label|0) == 19) {
  $59 = HEAP32[$4>>2]|0;
  $60 = ($59|0)==(0|0);
  if (!($60)) {
   $61 = HEAP32[$3>>2]|0;
   $62 = ((($61)) + -1|0);
   HEAP32[$3>>2] = $62;
  }
  $63 = ($$lcssa520|0)>(-1);
  $64 = ($matches$0110$lcssa|0)!=(0);
  $or$cond5 = $64 | $63;
  if ($or$cond5) {
   $matches$3 = $matches$0110$lcssa;
   STACKTOP = sp;return ($matches$3|0);
  } else {
   $alloc$1 = 0;$s$7 = $s$0108$lcssa;$wcs$8 = $wcs$0109$lcssa;
   label = 165;
  }
 }
 else if ((label|0) == 164) {
  $$old4 = ($matches$0110501|0)==(0);
  if ($$old4) {
   $alloc$1 = $alloc$0203;$s$7 = $s$6;$wcs$8 = $wcs$7;
   label = 165;
  } else {
   $alloc$2 = $alloc$0203;$matches$2 = $matches$0110501;$s$8 = $s$6;$wcs$9 = $wcs$7;
  }
 }
 else if ((label|0) == 168) {
  STACKTOP = sp;return ($matches$3|0);
 }
 if ((label|0) == 165) {
  $alloc$2 = $alloc$1;$matches$2 = -1;$s$8 = $s$7;$wcs$9 = $wcs$8;
 }
 $360 = ($alloc$2|0)==(0);
 if ($360) {
  $matches$3 = $matches$2;
  STACKTOP = sp;return ($matches$3|0);
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;return ($matches$3|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f = sp;
 dest=$f; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f)) + 32|0);
 HEAP32[$0>>2] = 18;
 $1 = ((($f)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ((($f)) + 76|0);
 HEAP32[$2>>2] = -1;
 $3 = ((($f)) + 84|0);
 HEAP32[$3>>2] = $s;
 $4 = (_MUSL_vfscanf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($4|0);
}
function _wcslen($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP32[$$0>>2]|0;
  $1 = ($0|0)==(0);
  $2 = ((($$0)) + 4|0);
  if ($1) {
   $$0$lcssa = $$0;
   break;
  } else {
   $$0 = $2;
  }
 }
 $3 = $$0$lcssa;
 $4 = $s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 return ($6|0);
}
function _wmemcpy($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$014 = 0, $$023 = 0, $$05 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 } else {
  $$014 = $n;$$023 = $s;$$05 = $d;
 }
 while(1) {
  $1 = (($$014) + -1)|0;
  $2 = ((($$023)) + 4|0);
  $3 = HEAP32[$$023>>2]|0;
  $4 = ((($$05)) + 4|0);
  HEAP32[$$05>>2] = $3;
  $5 = ($1|0)==(0);
  if ($5) {
   break;
  } else {
   $$014 = $1;$$023 = $2;$$05 = $4;
  }
 }
 return ($d|0);
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if ($5) {
   return ($d|0);
  } else {
   $$in = $n;
  }
  while(1) {
   $6 = (($$in) + -1)|0;
   $7 = (($s) + ($6<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (($d) + ($6<<2)|0);
   HEAP32[$9>>2] = $8;
   $10 = ($6|0)==(0);
   if ($10) {
    break;
   } else {
    $$in = $6;
   }
  }
  return ($d|0);
 } else {
  if ($5) {
   return ($d|0);
  } else {
   $$025 = $s;$$07 = $d;$$16 = $n;
  }
  while(1) {
   $11 = (($$16) + -1)|0;
   $12 = ((($$025)) + 4|0);
   $13 = HEAP32[$$025>>2]|0;
   $14 = ((($$07)) + 4|0);
   HEAP32[$$07>>2] = $13;
   $15 = ($11|0)==(0);
   if ($15) {
    break;
   } else {
    $$025 = $12;$$07 = $14;$$16 = $11;
   }
  }
  return ($d|0);
 }
 return (0)|0;
}
function _wmemset($d,$c,$n) {
 $d = $d|0;
 $c = $c|0;
 $n = $n|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 } else {
  $$012 = $n;$$03 = $d;
 }
 while(1) {
  $1 = (($$012) + -1)|0;
  $2 = ((($$03)) + 4|0);
  HEAP32[$$03>>2] = $c;
  $3 = ($1|0)==(0);
  if ($3) {
   break;
  } else {
   $$012 = $1;$$03 = $2;
  }
 }
 return ($d|0);
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 return ($0|0);
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[_stderr>>2]|0;
 (_vfprintf(($0|0),($format|0),($list|0))|0);
 (_fputc(10,($0|0))|0);
 _abort();
 // unreachable;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((2448|0),(2480|0),1164,(2568|0));
 // unreachable;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((2592|0),(9544|0),303,(2568|0));
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $0 = (_pthread_once((2624|0),(3|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[2616>>2]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(2632,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 $1 = (_malloc($$size)|0);
 $2 = ($1|0)==(0|0);
 L1: do {
  if ($2) {
   while(1) {
    $3 = (__ZSt15get_new_handlerv()|0);
    $4 = ($3|0)==(0|0);
    if ($4) {
     break;
    }
    FUNCTION_TABLE_v[$3 & 3]();
    $5 = (_malloc($$size)|0);
    $6 = ($5|0)==(0|0);
    if (!($6)) {
     $$lcssa = $5;
     break L1;
    }
   }
   $7 = (___cxa_allocate_exception(4)|0);
   HEAP32[$7>>2] = (1824);
   ___cxa_throw(($7|0),(1856|0),(33|0));
   // unreachable;
  } else {
   $$lcssa = $1;
  }
 } while(0);
 return ($$lcssa|0);
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZdaPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1824);
 return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2688|0);
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 FUNCTION_TABLE_v[$func & 3]();
 _abort_message(2704,$vararg_buffer);
 // unreachable;
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 48|0);
   $5 = $4;
   $6 = $5;
   $7 = HEAP32[$6>>2]|0;
   $8 = (($5) + 4)|0;
   $9 = $8;
   $10 = HEAP32[$9>>2]|0;
   $11 = $7 & -256;
   $12 = ($11|0)==(1126902528);
   $13 = ($10|0)==(1129074247);
   $14 = $12 & $13;
   if ($14) {
    $15 = ((($2)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    __ZSt11__terminatePFvvE($16);
    // unreachable;
   }
  }
 }
 $17 = HEAP32[452]|0;HEAP32[452] = (($17+0)|0);
 $18 = $17;
 __ZSt11__terminatePFvvE($18);
 // unreachable;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1872>>2]|0;HEAP32[1872>>2] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1912);
 $0 = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,2032,2088,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = ((($info)) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = ((($info)) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = ((($info)) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = ((($7)) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 7]($2,$info,$10,1);
    $11 = ((($info)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = ((($info)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = ((($info)) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = ((($info)) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = ((($info)) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = ((($info)) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = ((($info)) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = ((($info)) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 7]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 7]($8,$info,$12,$15);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
  } else {
   $3 = ((($this)) + 16|0);
   $4 = ((($this)) + 12|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (((($this)) + 16|0) + ($5<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
   $7 = ($5|0)>(1);
   if ($7) {
    $8 = ((($this)) + 24|0);
    $9 = ((($info)) + 54|0);
    $p$0 = $8;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
     $10 = HEAP8[$9>>0]|0;
     $11 = ($10<<24>>24)==(0);
     if (!($11)) {
      break L1;
     }
     $12 = ((($p$0)) + 8|0);
     $13 = ($12>>>0)<($6>>>0);
     if ($13) {
      $p$0 = $12;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = ((($0)) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = ((($info)) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = ((($info)) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = ((($info)) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = ((($info)) + 16|0);
 $11 = ((($info)) + 20|0);
 $12 = ((($info)) + 24|0);
 $13 = ((($info)) + 28|0);
 $14 = ((($info)) + 32|0);
 $15 = ((($info)) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 do {
  if ($16) {
   $17 = ((($info)) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = ((($18)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 7]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = ((($info)) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = ((($24)) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 3]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   if ((($27|0) == 0)) {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break;
   } else if (!((($27|0) == 1))) {
    $dst_ptr$0 = 0;
    break;
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = ((($info)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = ((($info)) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = ((($info)) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = ((($info)) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = ((($info)) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = ((($info)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = ((($info)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = ((($info)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = ((($info)) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = ((($info)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = ((($info)) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = ((($info)) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off023 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off025 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0;
 var $p$024 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $57 = ((($this)) + 16|0);
    $58 = ((($this)) + 12|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (((($this)) + 16|0) + ($59<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($57,$info,$current_ptr,$path_below,$use_strcmp);
    $61 = ((($this)) + 24|0);
    $62 = ($59|0)>(1);
    if (!($62)) {
     break;
    }
    $63 = ((($this)) + 8|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = $64 & 2;
    $66 = ($65|0)==(0);
    if ($66) {
     $67 = ((($info)) + 36|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ($68|0)==(1);
     if (!($69)) {
      $75 = $64 & 1;
      $76 = ($75|0)==(0);
      if ($76) {
       $79 = ((($info)) + 54|0);
       $p2$2 = $61;
       while(1) {
        $88 = HEAP8[$79>>0]|0;
        $89 = ($88<<24>>24)==(0);
        if (!($89)) {
         break L1;
        }
        $90 = HEAP32[$67>>2]|0;
        $91 = ($90|0)==(1);
        if ($91) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $92 = ((($p2$2)) + 8|0);
        $93 = ($92>>>0)<($60>>>0);
        if ($93) {
         $p2$2 = $92;
        } else {
         break L1;
        }
       }
      }
      $77 = ((($info)) + 24|0);
      $78 = ((($info)) + 54|0);
      $p2$1 = $61;
      while(1) {
       $80 = HEAP8[$78>>0]|0;
       $81 = ($80<<24>>24)==(0);
       if (!($81)) {
        break L1;
       }
       $82 = HEAP32[$67>>2]|0;
       $83 = ($82|0)==(1);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = ($84|0)==(1);
        if ($85) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $86 = ((($p2$1)) + 8|0);
       $87 = ($86>>>0)<($60>>>0);
       if ($87) {
        $p2$1 = $86;
       } else {
        break L1;
       }
      }
     }
    }
    $70 = ((($info)) + 54|0);
    $p2$0 = $61;
    while(1) {
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(0);
     if (!($72)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $73 = ((($p2$0)) + 8|0);
     $74 = ($73>>>0)<($60>>>0);
     if ($74) {
      $p2$0 = $73;
     } else {
      break L1;
     }
    }
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($this)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (((($this)) + 16|0) + ($24<<3)|0);
     $26 = ((($info)) + 52|0);
     $27 = ((($info)) + 53|0);
     $28 = ((($info)) + 54|0);
     $29 = ((($this)) + 8|0);
     $30 = ((($info)) + 24|0);
     $31 = ($24|0)>(0);
     L34: do {
      if ($31) {
       $32 = ((($this)) + 16|0);
       $does_dst_type_point_to_our_static_type$0$off023 = 0;$is_dst_type_derived_from_static_type$0$off025 = 0;$p$024 = $32;
       while(1) {
        HEAP8[$26>>0] = 0;
        HEAP8[$27>>0] = 0;
        __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$024,$info,$current_ptr,$current_ptr,1,$use_strcmp);
        $33 = HEAP8[$28>>0]|0;
        $34 = ($33<<24>>24)==(0);
        if (!($34)) {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off025;
         label = 20;
         break L34;
        }
        $35 = HEAP8[$27>>0]|0;
        $36 = ($35<<24>>24)==(0);
        do {
         if ($36) {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off025;
         } else {
          $37 = HEAP8[$26>>0]|0;
          $38 = ($37<<24>>24)==(0);
          if ($38) {
           $44 = HEAP32[$29>>2]|0;
           $45 = $44 & 1;
           $46 = ($45|0)==(0);
           if ($46) {
            $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = 1;
            label = 20;
            break L34;
           } else {
            $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = 1;
            break;
           }
          }
          $39 = HEAP32[$30>>2]|0;
          $40 = ($39|0)==(1);
          if ($40) {
           break L34;
          }
          $41 = HEAP32[$29>>2]|0;
          $42 = $41 & 2;
          $43 = ($42|0)==(0);
          if ($43) {
           break L34;
          } else {
           $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
          }
         }
        } while(0);
        $47 = ((($p$024)) + 8|0);
        $48 = ($47>>>0)<($25>>>0);
        if ($48) {
         $does_dst_type_point_to_our_static_type$0$off023 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off025 = $is_dst_type_derived_from_static_type$1$off0;$p$024 = $47;
        } else {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
         label = 20;
         break;
        }
       }
      } else {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0;$is_dst_type_derived_from_static_type$2$off0 = 0;
       label = 20;
      }
     } while(0);
     do {
      if ((label|0) == 20) {
       if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
        label = 24;
       } else {
        HEAP32[$14>>2] = $current_ptr;
        $49 = ((($info)) + 40|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = (($50) + 1)|0;
        HEAP32[$49>>2] = $51;
        $52 = ((($info)) + 36|0);
        $53 = HEAP32[$52>>2]|0;
        $54 = ($53|0)==(1);
        if ($54) {
         $55 = HEAP32[$30>>2]|0;
         $56 = ($55|0)==(2);
         if ($56) {
          HEAP8[$28>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           break;
          }
         } else {
          label = 24;
         }
        } else {
         label = 24;
        }
       }
       if ((label|0) == 24) {
        if ($is_dst_type_derived_from_static_type$2$off0) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 7]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 3]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = ((($this)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = ((($45)) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 3]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($info)) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = ((($info)) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = ((($27)) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 7]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = ((($info)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = ((($info)) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = ((($info)) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = ((($info)) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = ((($info)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = ((($info)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = ((($info)) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = ((($info)) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = ((($info)) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = ((($info)) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = ((($info)) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = ((($info)) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = ((($info)) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($info)) + 52|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ((($info)) + 53|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ((($this)) + 16|0);
  $8 = ((($this)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (((($this)) + 16|0) + ($9<<3)|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $11 = ($9|0)>(1);
  L4: do {
   if ($11) {
    $12 = ((($this)) + 24|0);
    $13 = ((($info)) + 24|0);
    $14 = ((($this)) + 8|0);
    $15 = ((($info)) + 54|0);
    $p$0 = $12;
    while(1) {
     $16 = HEAP8[$15>>0]|0;
     $17 = ($16<<24>>24)==(0);
     if (!($17)) {
      break L4;
     }
     $18 = HEAP8[$3>>0]|0;
     $19 = ($18<<24>>24)==(0);
     if ($19) {
      $25 = HEAP8[$5>>0]|0;
      $26 = ($25<<24>>24)==(0);
      if (!($26)) {
       $27 = HEAP32[$14>>2]|0;
       $28 = $27 & 1;
       $29 = ($28|0)==(0);
       if ($29) {
        break L4;
       }
      }
     } else {
      $20 = HEAP32[$13>>2]|0;
      $21 = ($20|0)==(1);
      if ($21) {
       break L4;
      }
      $22 = HEAP32[$14>>2]|0;
      $23 = $22 & 2;
      $24 = ($23|0)==(0);
      if ($24) {
       break L4;
      }
     }
     HEAP8[$3>>0] = 0;
     HEAP8[$5>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
     $30 = ((($p$0)) + 8|0);
     $31 = ($30>>>0)<($10>>>0);
     if ($31) {
      $p$0 = $30;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$3>>0] = $4;
  HEAP8[$5>>0] = $6;
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 7]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 31]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,2032,2200,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function __ZSt17__throw_bad_allocv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(1856|0),(33|0));
 // unreachable;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 80|0);
   $5 = ((($2)) + 48|0);
   $6 = $5;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = (($6) + 4)|0;
   $10 = $9;
   $11 = HEAP32[$10>>2]|0;
   $12 = $8 & -256;
   $13 = ($12|0)==(1126902528);
   $14 = ($11|0)==(1129074247);
   $15 = $13 & $14;
   if (!($15)) {
    HEAP32[$vararg_buffer7>>2] = 3008;
    _abort_message(2952,$vararg_buffer7);
    // unreachable;
   }
   $16 = ($8|0)==(1126902529);
   $17 = ($11|0)==(1129074247);
   $18 = $16 & $17;
   if ($18) {
    $19 = ((($2)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20;
   } else {
    $21 = $4;
   }
   HEAP32[$thrown_object>>2] = $21;
   $22 = HEAP32[$2>>2]|0;
   $23 = ((($22)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = HEAP32[1896>>2]|0;
   $26 = ((($25)) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iiii[$27 & 31](1896,$22,$thrown_object)|0);
   if ($28) {
    $29 = HEAP32[$thrown_object>>2]|0;
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($30)) + 8|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($29)|0);
    HEAP32[$vararg_buffer>>2] = 3008;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $24;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $33;
    _abort_message(2856,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = 3008;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $24;
    _abort_message(2904,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(2992,$vararg_buffer10);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((2616|0),(106|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2744,$vararg_buffer);
  // unreachable;
 }
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -4|0);
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2+-1)|0);
 $3 = (($2) + -1)|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = ((($5)) + -12|0);
  __ZdlPv($6);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[2616>>2]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2800,$vararg_buffer);
  // unreachable;
 }
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0;
 var $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i14$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0;
 var $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i15$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0;
 var $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0;
 var $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0;
 var $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0;
 var $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0;
 var $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0;
 var $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0;
 var $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0;
 var $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0;
 var $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[3024>>2]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (3064 + ($13<<2)|0);
    $$sum10 = (($13) + 2)|0;
    $15 = (3064 + ($$sum10<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[3024>>2] = $22;
     } else {
      $23 = HEAP32[(3040)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = ((($18)) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[(3032)>>2]|0;
   $35 = ($4>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = (3064 + ($65<<2)|0);
     $$sum4 = (($65) + 2)|0;
     $67 = (3064 + ($$sum4<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[3024>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[(3040)>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = ((($70)) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[(3032)>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($4))|0;
     $82 = $4 | 3;
     $83 = ((($68)) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($4)|0);
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[(3044)>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = (3064 + ($92<<2)|0);
      $94 = HEAP32[3024>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[3024>>2] = $98;
       $$pre105 = (($92) + 2)|0;
       $$pre106 = (3064 + ($$pre105<<2)|0);
       $$pre$phiZ2D = $$pre106;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = (3064 + ($$sum9<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[(3040)>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = ((($F4$0)) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = ((($90)) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = ((($90)) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[(3032)>>2] = $81;
     HEAP32[(3044)>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[(3028)>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $4;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = (3328 + ($130<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($132)) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($4))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = ((($t$0$i)) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = ((($t$0$i)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = ((($144)) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($4))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[(3040)>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($4)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = ((($v$0$i$lcssa)) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ((($v$0$i$lcssa)) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = ((($v$0$i$lcssa)) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = ((($v$0$i$lcssa)) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;$RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;$RP$0$i = $167;
       }
       while(1) {
        $173 = ((($R$0$i)) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if (!($175)) {
         $R$0$i = $174;$RP$0$i = $173;
         continue;
        }
        $176 = ((($R$0$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;$RP$0$i = $176;
        }
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = ((($v$0$i$lcssa)) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = ((($159)) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = ((($156)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = ((($v$0$i$lcssa)) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = (3328 + ($182<<2)|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[(3028)>>2]|0;
         $189 = $188 & $187;
         HEAP32[(3028)>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[(3040)>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = ((($154)) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = ((($154)) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[(3040)>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = ((($R$1$i)) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = ((($v$0$i$lcssa)) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = ((($R$1$i)) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = ((($201)) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = ((($v$0$i$lcssa)) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[(3040)>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = ((($R$1$i)) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = ((($207)) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($4))|0;
      $215 = $214 | 3;
      $216 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $4 | 3;
      $221 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i35 = $4 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i35)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($4))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[(3032)>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[(3044)>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = (3064 + ($229<<2)|0);
       $231 = HEAP32[3024>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[3024>>2] = $235;
        $$pre$i = (($229) + 2)|0;
        $$pre8$i = (3064 + ($$pre$i<<2)|0);
        $$pre$phi$iZ2D = $$pre8$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = (3064 + ($$sum3$i<<2)|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(3040)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = ((($F1$0$i)) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = ((($227)) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = ((($227)) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[(3032)>>2] = $rsize$0$i$lcssa;
      HEAP32[(3044)>>2] = $151;
     }
     $243 = ((($v$0$i$lcssa)) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(3028)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = (3328 + ($idx$0$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i|0)==(31);
       $279 = $idx$0$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $282;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = ((($t$0$i14)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$331$i = $286;$t$230$i = $t$0$i14;$v$332$i = $t$0$i14;
          label = 90;
          break L123;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = ((($t$0$i14)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = (((($t$0$i14)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = (3328 + ($327<<2)|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;$v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;$v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $331 = ((($t$230$i)) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = ((($t$230$i)) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = ((($t$230$i)) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[(3032)>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[(3040)>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = ((($v$3$lcssa$i)) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = ((($v$3$lcssa$i)) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = ((($v$3$lcssa$i)) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = ((($v$3$lcssa$i)) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;$RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;$RP$0$i17 = $364;
         }
         while(1) {
          $370 = ((($R$0$i18)) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if (!($372)) {
           $R$0$i18 = $371;$RP$0$i17 = $370;
           continue;
          }
          $373 = ((($R$0$i18)) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
           break;
          } else {
           $R$0$i18 = $374;$RP$0$i17 = $373;
          }
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = ((($v$3$lcssa$i)) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = ((($356)) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = ((($353)) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = ((($v$3$lcssa$i)) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = (3328 + ($379<<2)|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[(3028)>>2]|0;
           $386 = $385 & $384;
           HEAP32[(3028)>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[(3040)>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($351)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = ((($351)) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[(3040)>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($R$1$i20)) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = ((($v$3$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($R$1$i20)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = ((($v$3$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[(3040)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($R$1$i20)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L199: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2334 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2334)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = (3064 + ($424<<2)|0);
          $426 = HEAP32[3024>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[3024>>2] = $430;
           $$pre$i25 = (($424) + 2)|0;
           $$pre43$i = (3064 + ($$pre$i25<<2)|0);
           $$pre$phi$i26Z2D = $$pre43$i;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = (3064 + ($$sum17$i<<2)|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[(3040)>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = ((($F5$0$i)) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = (3328 + ($I7$0$i<<2)|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[(3028)>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[(3028)>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ((($475)) + 4|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = $477 & -8;
         $479 = ($478|0)==($rsize$3$lcssa$i|0);
         L217: do {
          if ($479) {
           $T$0$lcssa$i = $475;
          } else {
           $480 = ($I7$0$i|0)==(31);
           $481 = $I7$0$i >>> 1;
           $482 = (25 - ($481))|0;
           $483 = $480 ? 0 : $482;
           $484 = $rsize$3$lcssa$i << $483;
           $K12$029$i = $484;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = (((($T$028$i)) + 16|0) + ($491<<2)|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa232 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = ((($487)) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L217;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           $494 = HEAP32[(3040)>>2]|0;
           $495 = ($$lcssa232>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa232>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L199;
           }
          }
         } while(0);
         $499 = ((($T$0$lcssa$i)) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[(3040)>>2]|0;
         $502 = ($500>>>0)>=($501>>>0);
         $not$$i = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = $502 & $not$$i;
         if ($503) {
          $504 = ((($500)) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = ((($v$3$lcssa$i)) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[(3032)>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[(3044)>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[(3044)>>2] = $514;
   HEAP32[(3032)>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = ((($512)) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[(3032)>>2] = 0;
   HEAP32[(3044)>>2] = 0;
   $520 = $509 | 3;
   $521 = ((($512)) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = ((($512)) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[(3036)>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[(3036)>>2] = $528;
  $529 = HEAP32[(3048)>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[(3048)>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = ((($529)) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = ((($529)) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[3496>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[(3504)>>2] = $538;
    HEAP32[(3500)>>2] = $538;
    HEAP32[(3508)>>2] = -1;
    HEAP32[(3512)>>2] = -1;
    HEAP32[(3516)>>2] = 0;
    HEAP32[(3468)>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[3496>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[(3504)>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[(3464)>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[(3456)>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[(3468)>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L258: do {
  if ($560) {
   $561 = HEAP32[(3048)>>2]|0;
   $562 = ($561|0)==(0|0);
   L260: do {
    if ($562) {
     label = 174;
    } else {
     $sp$0$i$i = (3472);
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = ((($sp$0$i$i)) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa228 = $sp$0$i$i;$$lcssa230 = $565;
        break;
       }
      }
      $569 = ((($sp$0$i$i)) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 174;
       break L260;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $594 = HEAP32[(3036)>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa228>>2]|0;
      $600 = HEAP32[$$lcssa230>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      $$3$i = $602 ? $596 : 0;
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0323944$i = $$3$i;
       } else {
        $tbase$255$i = $598;$tsize$254$i = $$3$i;
        label = 194;
        break L258;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;$tsize$0$ph$i = $$3$i;
       label = 184;
      }
     } else {
      $tsize$0323944$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 174) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0323944$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[(3500)>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[(3456)>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[(3464)>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0323944$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       $ssize$0$$i = $593 ? $ssize$0$i : 0;
       if ($593) {
        $tbase$255$i = $572;$tsize$254$i = $ssize$0$$i;
        label = 194;
        break L258;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;$tsize$0$ph$i = $ssize$0$$i;
        label = 184;
       }
      } else {
       $tsize$0323944$i = 0;
      }
     }
    }
   } while(0);
   L280: do {
    if ((label|0) == 184) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond6$i = $607 & $or$cond5$i;
     do {
      if ($or$cond6$i) {
       $608 = HEAP32[(3504)>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0323944$i = $tsize$0$ph$i;
         break L280;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0323944$i = $tsize$0$ph$i;
     } else {
      $tbase$255$i = $br$0$ph$i;$tsize$254$i = $ssize$2$i;
      label = 194;
      break L258;
     }
    }
   } while(0);
   $618 = HEAP32[(3468)>>2]|0;
   $619 = $618 | 4;
   HEAP32[(3468)>>2] = $619;
   $tsize$1$i = $tsize$0323944$i;
   label = 191;
  } else {
   $tsize$1$i = 0;
   label = 191;
  }
 } while(0);
 if ((label|0) == 191) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond8$i = $625 & $or$cond3$i;
   if ($or$cond8$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$255$i = $621;$tsize$254$i = $$tsize$1$i;
     label = 194;
    }
   }
  }
 }
 if ((label|0) == 194) {
  $631 = HEAP32[(3456)>>2]|0;
  $632 = (($631) + ($tsize$254$i))|0;
  HEAP32[(3456)>>2] = $632;
  $633 = HEAP32[(3460)>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[(3460)>>2] = $632;
  }
  $635 = HEAP32[(3048)>>2]|0;
  $636 = ($635|0)==(0|0);
  L299: do {
   if ($636) {
    $637 = HEAP32[(3040)>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$255$i>>>0)<($637>>>0);
    $or$cond9$i = $638 | $639;
    if ($or$cond9$i) {
     HEAP32[(3040)>>2] = $tbase$255$i;
    }
    HEAP32[(3472)>>2] = $tbase$255$i;
    HEAP32[(3476)>>2] = $tsize$254$i;
    HEAP32[(3484)>>2] = 0;
    $640 = HEAP32[3496>>2]|0;
    HEAP32[(3060)>>2] = $640;
    HEAP32[(3056)>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = (3064 + ($641<<2)|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = (3064 + ($$sum$i$i<<2)|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = (3064 + ($$sum1$i$i<<2)|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$254$i) + -40)|0;
    $647 = ((($tbase$255$i)) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    $651 = (0 - ($648))|0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = (($tbase$255$i) + ($653)|0);
    $655 = (($646) - ($653))|0;
    HEAP32[(3048)>>2] = $654;
    HEAP32[(3036)>>2] = $655;
    $656 = $655 | 1;
    $$sum$i13$i = (($653) + 4)|0;
    $657 = (($tbase$255$i) + ($$sum$i13$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$254$i) + -36)|0;
    $658 = (($tbase$255$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[(3512)>>2]|0;
    HEAP32[(3052)>>2] = $659;
   } else {
    $sp$084$i = (3472);
    while(1) {
     $660 = HEAP32[$sp$084$i>>2]|0;
     $661 = ((($sp$084$i)) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$255$i|0)==($663|0);
     if ($664) {
      $$lcssa222 = $660;$$lcssa224 = $661;$$lcssa226 = $662;$sp$084$i$lcssa = $sp$084$i;
      label = 204;
      break;
     }
     $665 = ((($sp$084$i)) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      break;
     } else {
      $sp$084$i = $666;
     }
    }
    if ((label|0) == 204) {
     $668 = ((($sp$084$i$lcssa)) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa222>>>0);
      $673 = ($635>>>0)<($tbase$255$i>>>0);
      $or$cond57$i = $673 & $672;
      if ($or$cond57$i) {
       $674 = (($$lcssa226) + ($tsize$254$i))|0;
       HEAP32[$$lcssa224>>2] = $674;
       $675 = HEAP32[(3036)>>2]|0;
       $676 = (($675) + ($tsize$254$i))|0;
       $677 = ((($635)) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       $681 = (0 - ($678))|0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = (($635) + ($683)|0);
       $685 = (($676) - ($683))|0;
       HEAP32[(3048)>>2] = $684;
       HEAP32[(3036)>>2] = $685;
       $686 = $685 | 1;
       $$sum$i17$i = (($683) + 4)|0;
       $687 = (($635) + ($$sum$i17$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i18$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i18$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[(3512)>>2]|0;
       HEAP32[(3052)>>2] = $689;
       break;
      }
     }
    }
    $690 = HEAP32[(3040)>>2]|0;
    $691 = ($tbase$255$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[(3040)>>2] = $tbase$255$i;
     $755 = $tbase$255$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$255$i) + ($tsize$254$i)|0);
    $sp$183$i = (3472);
    while(1) {
     $693 = HEAP32[$sp$183$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa219 = $sp$183$i;$sp$183$i$lcssa = $sp$183$i;
      label = 212;
      break;
     }
     $695 = ((($sp$183$i)) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      $sp$0$i$i$i = (3472);
      break;
     } else {
      $sp$183$i = $696;
     }
    }
    if ((label|0) == 212) {
     $698 = ((($sp$183$i$lcssa)) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa219>>2] = $tbase$255$i;
      $702 = ((($sp$183$i$lcssa)) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$254$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = ((($tbase$255$i)) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      $709 = (0 - ($706))|0;
      $710 = $709 & 7;
      $711 = $708 ? 0 : $710;
      $712 = (($tbase$255$i) + ($711)|0);
      $$sum112$i = (($tsize$254$i) + 8)|0;
      $713 = (($tbase$255$i) + ($$sum112$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      $717 = (0 - ($714))|0;
      $718 = $717 & 7;
      $719 = $716 ? 0 : $718;
      $$sum113$i = (($719) + ($tsize$254$i))|0;
      $720 = (($tbase$255$i) + ($$sum113$i)|0);
      $721 = $720;
      $722 = $712;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($711) + ($nb$0))|0;
      $724 = (($tbase$255$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($711) + 4)|0;
      $727 = (($tbase$255$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L324: do {
       if ($728) {
        $729 = HEAP32[(3036)>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[(3036)>>2] = $730;
        HEAP32[(3048)>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$255$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[(3044)>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[(3032)>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[(3032)>>2] = $736;
         HEAP32[(3044)>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$255$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$255$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$254$i) + 4)|0;
        $$sum114$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$255$i) + ($$sum114$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L331: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum124$i = (($$sum3738$i$i) + ($tsize$254$i))|0;
           $747 = (($tbase$255$i) + ($$sum124$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$254$i) + 12)|0;
           $$sum125$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$255$i) + ($$sum125$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = (3064 + ($751<<2)|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = ((($748)) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[3024>>2]|0;
            $763 = $762 & $761;
            HEAP32[3024>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre57$i$i = ((($750)) + 8|0);
             $$pre$phi58$i$iZ2D = $$pre57$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = ((($750)) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi58$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = ((($748)) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi58$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum115$i = (($$sum34$i$i) + ($tsize$254$i))|0;
           $770 = (($tbase$255$i) + ($$sum115$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$254$i) + 12)|0;
           $$sum116$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$255$i) + ($$sum116$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum122$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$255$i) + ($$sum122$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum123$i = (($$sum67$i$i) + ($tsize$254$i))|0;
              $787 = (($tbase$255$i) + ($$sum123$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $788;$RP$0$i$i = $787;
              }
             } else {
              $R$0$i$i = $785;$RP$0$i$i = $784;
             }
             while(1) {
              $790 = ((($R$0$i$i)) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if (!($792)) {
               $R$0$i$i = $791;$RP$0$i$i = $790;
               continue;
              }
              $793 = ((($R$0$i$i)) + 16|0);
              $794 = HEAP32[$793>>2]|0;
              $795 = ($794|0)==(0|0);
              if ($795) {
               $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
               break;
              } else {
               $R$0$i$i = $794;$RP$0$i$i = $793;
              }
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum117$i = (($$sum3536$i$i) + ($tsize$254$i))|0;
             $775 = (($tbase$255$i) + ($$sum117$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = ((($776)) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = ((($773)) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$254$i) + 28)|0;
           $$sum118$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$255$i) + ($$sum118$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = (3328 + ($799<<2)|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[(3028)>>2]|0;
             $806 = $805 & $804;
             HEAP32[(3028)>>2] = $806;
             break L331;
            } else {
             $807 = HEAP32[(3040)>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = ((($771)) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = ((($771)) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L331;
             }
            }
           } while(0);
           $814 = HEAP32[(3040)>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = ((($R$1$i$i)) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum119$i = (($$sum3132$i$i) + ($tsize$254$i))|0;
           $817 = (($tbase$255$i) + ($$sum119$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = ((($R$1$i$i)) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = ((($818)) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum120$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$255$i) + ($$sum120$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[(3040)>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = ((($R$1$i$i)) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = ((($824)) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum121$i = (($$sum9$i$i) + ($tsize$254$i))|0;
         $830 = (($tbase$255$i) + ($$sum121$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = ((($oldfirst$0$i$i)) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$255$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$255$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = (3064 + ($840<<2)|0);
         $842 = HEAP32[3024>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[3024>>2] = $846;
           $$pre$i22$i = (($840) + 2)|0;
           $$pre56$i$i = (3064 + ($$pre$i22$i<<2)|0);
           $$pre$phi$i23$iZ2D = $$pre56$i$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = (3064 + ($$sum29$i$i<<2)|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[(3040)>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = ((($F4$0$i$i)) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$255$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$255$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = (3328 + ($I7$0$i$i<<2)|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$255$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$255$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$255$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[(3028)>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[(3028)>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$255$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$255$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$255$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ((($891)) + 4|0);
        $893 = HEAP32[$892>>2]|0;
        $894 = $893 & -8;
        $895 = ($894|0)==($qsize$0$i$i|0);
        L417: do {
         if ($895) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $896 = ($I7$0$i$i|0)==(31);
          $897 = $I7$0$i$i >>> 1;
          $898 = (25 - ($897))|0;
          $899 = $896 ? 0 : $898;
          $900 = $qsize$0$i$i << $899;
          $K8$051$i$i = $900;$T$050$i$i = $891;
          while(1) {
           $907 = $K8$051$i$i >>> 31;
           $908 = (((($T$050$i$i)) + 16|0) + ($907<<2)|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$050$i$i$lcssa = $T$050$i$i;
            break;
           }
           $901 = $K8$051$i$i << 1;
           $902 = ((($903)) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $T$0$lcssa$i25$i = $903;
            break L417;
           } else {
            $K8$051$i$i = $901;$T$050$i$i = $903;
           }
          }
          $910 = HEAP32[(3040)>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$255$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$050$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$255$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$255$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L324;
          }
         }
        } while(0);
        $915 = ((($T$0$lcssa$i25$i)) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[(3040)>>2]|0;
        $918 = ($916>>>0)>=($917>>>0);
        $not$$i26$i = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = $918 & $not$$i26$i;
        if ($919) {
         $920 = ((($916)) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$255$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$255$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$255$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $711 | 8;
      $924 = (($tbase$255$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     } else {
      $sp$0$i$i$i = (3472);
     }
    }
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = ((($sp$0$i$i$i)) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa215 = $925;$$lcssa216 = $928;$$lcssa217 = $929;
       break;
      }
     }
     $931 = ((($sp$0$i$i$i)) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i14$i = (($$lcssa216) + -47)|0;
    $$sum1$i15$i = (($$lcssa216) + -39)|0;
    $933 = (($$lcssa215) + ($$sum1$i15$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    $937 = (0 - ($934))|0;
    $938 = $937 & 7;
    $939 = $936 ? 0 : $938;
    $$sum2$i16$i = (($$sum$i14$i) + ($939))|0;
    $940 = (($$lcssa215) + ($$sum2$i16$i)|0);
    $941 = ((($635)) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = ((($943)) + 8|0);
    $945 = (($tsize$254$i) + -40)|0;
    $946 = ((($tbase$255$i)) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    $950 = (0 - ($947))|0;
    $951 = $950 & 7;
    $952 = $949 ? 0 : $951;
    $953 = (($tbase$255$i) + ($952)|0);
    $954 = (($945) - ($952))|0;
    HEAP32[(3048)>>2] = $953;
    HEAP32[(3036)>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($952) + 4)|0;
    $956 = (($tbase$255$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$254$i) + -36)|0;
    $957 = (($tbase$255$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[(3512)>>2]|0;
    HEAP32[(3052)>>2] = $958;
    $959 = ((($943)) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944>>2]=HEAP32[(3472)>>2]|0;HEAP32[$944+4>>2]=HEAP32[(3472)+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[(3472)+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[(3472)+12>>2]|0;
    HEAP32[(3472)>>2] = $tbase$255$i;
    HEAP32[(3476)>>2] = $tsize$254$i;
    HEAP32[(3484)>>2] = 0;
    HEAP32[(3480)>>2] = $944;
    $960 = ((($943)) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = ((($943)) + 32|0);
    $962 = ($961>>>0)<($$lcssa217>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = ((($964)) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = ((($964)) + 8|0);
      $966 = ($965>>>0)<($$lcssa217>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = ((($635)) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = (3064 + ($977<<2)|0);
      $979 = HEAP32[3024>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      if ($982) {
       $983 = $979 | $980;
       HEAP32[3024>>2] = $983;
       $$pre$i$i = (($977) + 2)|0;
       $$pre14$i$i = (3064 + ($$pre$i$i<<2)|0);
       $$pre$phi$i$iZ2D = $$pre14$i$i;$F$0$i$i = $978;
      } else {
       $$sum4$i$i = (($977) + 2)|0;
       $984 = (3064 + ($$sum4$i$i<<2)|0);
       $985 = HEAP32[$984>>2]|0;
       $986 = HEAP32[(3040)>>2]|0;
       $987 = ($985>>>0)<($986>>>0);
       if ($987) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = ((($F$0$i$i)) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = ((($635)) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = ((($635)) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = (3328 + ($I1$0$i$i<<2)|0);
     $1017 = ((($635)) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = ((($635)) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[(3028)>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[(3028)>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = ((($635)) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = ((($635)) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = ((($635)) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ((($1027)) + 4|0);
     $1029 = HEAP32[$1028>>2]|0;
     $1030 = $1029 & -8;
     $1031 = ($1030|0)==($970|0);
     L459: do {
      if ($1031) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1032 = ($I1$0$i$i|0)==(31);
       $1033 = $I1$0$i$i >>> 1;
       $1034 = (25 - ($1033))|0;
       $1035 = $1032 ? 0 : $1034;
       $1036 = $970 << $1035;
       $K2$07$i$i = $1036;$T$06$i$i = $1027;
       while(1) {
        $1043 = $K2$07$i$i >>> 31;
        $1044 = (((($T$06$i$i)) + 16|0) + ($1043<<2)|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa211 = $1044;$T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        $1037 = $K2$07$i$i << 1;
        $1038 = ((($1039)) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $T$0$lcssa$i$i = $1039;
         break L459;
        } else {
         $K2$07$i$i = $1037;$T$06$i$i = $1039;
        }
       }
       $1046 = HEAP32[(3040)>>2]|0;
       $1047 = ($$lcssa211>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa211>>2] = $635;
        $1048 = ((($635)) + 24|0);
        HEAP32[$1048>>2] = $T$06$i$i$lcssa;
        $1049 = ((($635)) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = ((($635)) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L299;
       }
      }
     } while(0);
     $1051 = ((($T$0$lcssa$i$i)) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[(3040)>>2]|0;
     $1054 = ($1052>>>0)>=($1053>>>0);
     $not$$i$i = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = $1054 & $not$$i$i;
     if ($1055) {
      $1056 = ((($1052)) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = ((($635)) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = ((($635)) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = ((($635)) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[(3036)>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[(3036)>>2] = $1062;
   $1063 = HEAP32[(3048)>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[(3048)>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = ((($1063)) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = ((($1063)) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0;
 var $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0;
 var $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($mem)) + -8|0);
 $2 = HEAP32[(3040)>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = ((($mem)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[(3044)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[(3032)>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = (3064 + ($25<<2)|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = ((($22)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[3024>>2]|0;
     $36 = $35 & $34;
     HEAP32[3024>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre60 = ((($24)) + 8|0);
     $$pre$phi61Z2D = $$pre60;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = ((($24)) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi61Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = ((($22)) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi61Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;$RP$0 = $60;
      }
     } else {
      $R$0 = $58;$RP$0 = $57;
     }
     while(1) {
      $63 = ((($R$0)) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $R$0 = $64;$RP$0 = $63;
       continue;
      }
      $66 = ((($R$0)) + 16|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($67|0)==(0|0);
      if ($68) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $67;$RP$0 = $66;
      }
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = ((($49)) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = ((($46)) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (3328 + ($72<<2)|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[(3028)>>2]|0;
      $79 = $78 & $77;
      HEAP32[(3028)>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[(3040)>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = ((($44)) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = ((($44)) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[(3040)>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = ((($R$1)) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = ((($R$1)) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = ((($91)) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[(3040)>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = ((($R$1)) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = ((($97)) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[(3048)>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[(3036)>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[(3036)>>2] = $120;
   HEAP32[(3048)>>2] = $p$0;
   $121 = $120 | 1;
   $122 = ((($p$0)) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[(3044)>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[(3044)>>2] = 0;
   HEAP32[(3032)>>2] = 0;
   return;
  }
  $125 = HEAP32[(3044)>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[(3032)>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[(3032)>>2] = $128;
   HEAP32[(3044)>>2] = $p$0;
   $129 = $128 | 1;
   $130 = ((($p$0)) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = (3064 + ($140<<2)|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[(3040)>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = ((($137)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[3024>>2]|0;
     $152 = $151 & $150;
     HEAP32[3024>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre58 = ((($139)) + 8|0);
     $$pre$phi59Z2D = $$pre58;
    } else {
     $154 = HEAP32[(3040)>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = ((($139)) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi59Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = ((($137)) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi59Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;$RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;$RP9$0 = $175;
      }
      while(1) {
       $181 = ((($R7$0)) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if (!($183)) {
        $R7$0 = $182;$RP9$0 = $181;
        continue;
       }
       $184 = ((($R7$0)) + 16|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if ($186) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $185;$RP9$0 = $184;
       }
      }
      $187 = HEAP32[(3040)>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[(3040)>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = ((($166)) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = ((($163)) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = (3328 + ($191<<2)|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond47 = ($R7$1|0)==(0|0);
      if ($cond47) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[(3028)>>2]|0;
       $198 = $197 & $196;
       HEAP32[(3028)>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[(3040)>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = ((($161)) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = ((($161)) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[(3040)>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = ((($R7$1)) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = ((($R7$1)) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = ((($210)) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[(3040)>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = ((($R7$1)) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = ((($216)) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = ((($p$0)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[(3044)>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[(3032)>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = ((($p$0)) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = (3064 + ($233<<2)|0);
  $235 = HEAP32[3024>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[3024>>2] = $239;
   $$pre = (($233) + 2)|0;
   $$pre57 = (3064 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre57;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = (3064 + ($$sum11<<2)|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[(3040)>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = ((($F16$0)) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = ((($p$0)) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = ((($p$0)) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = (3328 + ($I18$0<<2)|0);
 $273 = ((($p$0)) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = ((($p$0)) + 16|0);
 $275 = ((($p$0)) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[(3028)>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L199: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[(3028)>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = ((($p$0)) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = ((($p$0)) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = ((($p$0)) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ((($284)) + 4|0);
   $286 = HEAP32[$285>>2]|0;
   $287 = $286 & -8;
   $288 = ($287|0)==($psize$1|0);
   L202: do {
    if ($288) {
     $T$0$lcssa = $284;
    } else {
     $289 = ($I18$0|0)==(31);
     $290 = $I18$0 >>> 1;
     $291 = (25 - ($290))|0;
     $292 = $289 ? 0 : $291;
     $293 = $psize$1 << $292;
     $K19$052 = $293;$T$051 = $284;
     while(1) {
      $300 = $K19$052 >>> 31;
      $301 = (((($T$051)) + 16|0) + ($300<<2)|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$051$lcssa = $T$051;
       break;
      }
      $294 = $K19$052 << 1;
      $295 = ((($296)) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $T$0$lcssa = $296;
       break L202;
      } else {
       $K19$052 = $294;$T$051 = $296;
      }
     }
     $303 = HEAP32[(3040)>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = ((($p$0)) + 24|0);
      HEAP32[$305>>2] = $T$051$lcssa;
      $306 = ((($p$0)) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = ((($p$0)) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L199;
     }
    }
   } while(0);
   $308 = ((($T$0$lcssa)) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[(3040)>>2]|0;
   $311 = ($309>>>0)>=($310>>>0);
   $not$ = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = $311 & $not$;
   if ($312) {
    $313 = ((($309)) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = ((($p$0)) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = ((($p$0)) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = ((($p$0)) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[(3056)>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[(3056)>>2] = $318;
 $319 = ($318|0)==(0);
 if ($319) {
  $sp$0$in$i = (3480);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = ((($sp$0$i)) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[(3056)>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 $5 = (($bytes) + 11)|0;
 $6 = $5 & -8;
 $7 = $4 ? 16 : $6;
 $8 = ((($oldmem)) + -8|0);
 $9 = (_try_realloc_chunk($8,$7)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($9)) + 8|0);
  $mem$0 = $11;
  return ($mem$0|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $14 = ((($oldmem)) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$0 = $12;
 return ($mem$0|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 $1 = (($c) + -9)|0;
 $2 = ($1>>>0)<(5);
 $3 = $0 | $2;
 $4 = $3&1;
 return ($4|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if ($isdigit) {
  $4 = 1;
  $3 = $4&1;
  return ($3|0);
 }
 $0 = $c | 32;
 $1 = (($0) + -97)|0;
 $2 = ($1>>>0)<(6);
 $4 = $2;
 $3 = $4&1;
 return ($3|0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$122 = 0, $$123 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa130 = 0, $$lcssa131 = 0, $$lcssa132 = 0, $$lcssa133 = 0, $$lcssa134 = 0, $$lcssa135 = 0, $$sum = 0, $$sum14 = 0, $$sum1445 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum18 = 0, $$sum1865 = 0, $$sum19 = 0;
 var $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$124 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$371 = 0;
 var $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$753 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond40 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$082 = 0, $x$146 = 0, $x$266 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 if ($2) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 22;
  $282 = 0;$283 = 0;
  tempRet0 = ($282);
  return ($283|0);
 }
 $3 = ((($f)) + 4|0);
 $4 = ((($f)) + 100|0);
 while(1) {
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = ((($6)) + 1|0);
   HEAP32[$3>>2] = $9;
   $10 = HEAP8[$6>>0]|0;
   $11 = $10&255;
   $13 = $11;
  } else {
   $12 = (___shgetc($f)|0);
   $13 = $12;
  }
  $14 = (_isspace($13)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$lcssa135 = $13;
   break;
  }
 }
 $16 = ($$lcssa135|0)==(45);
 do {
  if ((($$lcssa135|0) == 43) | (($$lcssa135|0) == 45)) {
   $17 = $16 << 31 >> 31;
   $18 = HEAP32[$3>>2]|0;
   $19 = HEAP32[$4>>2]|0;
   $20 = ($18>>>0)<($19>>>0);
   if ($20) {
    $21 = ((($18)) + 1|0);
    HEAP32[$3>>2] = $21;
    $22 = HEAP8[$18>>0]|0;
    $23 = $22&255;
    $c$0 = $23;$neg$0 = $17;
    break;
   } else {
    $24 = (___shgetc($f)|0);
    $c$0 = $24;$neg$0 = $17;
    break;
   }
  } else {
   $c$0 = $$lcssa135;$neg$0 = 0;
  }
 } while(0);
 $25 = ($base|0)==(0);
 $26 = $base & -17;
 $27 = ($26|0)==(0);
 $28 = ($c$0|0)==(48);
 $or$cond5 = $27 & $28;
 do {
  if ($or$cond5) {
   $29 = HEAP32[$3>>2]|0;
   $30 = HEAP32[$4>>2]|0;
   $31 = ($29>>>0)<($30>>>0);
   if ($31) {
    $32 = ((($29)) + 1|0);
    HEAP32[$3>>2] = $32;
    $33 = HEAP8[$29>>0]|0;
    $34 = $33&255;
    $37 = $34;
   } else {
    $35 = (___shgetc($f)|0);
    $37 = $35;
   }
   $36 = $37 | 32;
   $38 = ($36|0)==(120);
   if (!($38)) {
    if ($25) {
     $$123 = 8;$c$124 = $37;
     label = 46;
     break;
    } else {
     $$1 = $base;$c$1 = $37;
     label = 32;
     break;
    }
   }
   $39 = HEAP32[$3>>2]|0;
   $40 = HEAP32[$4>>2]|0;
   $41 = ($39>>>0)<($40>>>0);
   if ($41) {
    $42 = ((($39)) + 1|0);
    HEAP32[$3>>2] = $42;
    $43 = HEAP8[$39>>0]|0;
    $44 = $43&255;
    $46 = $44;
   } else {
    $45 = (___shgetc($f)|0);
    $46 = $45;
   }
   $$sum20 = (($46) + 1)|0;
   $47 = (3520 + ($$sum20)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48&255)>(15);
   if ($49) {
    $50 = HEAP32[$4>>2]|0;
    $51 = ($50|0)==(0|0);
    if (!($51)) {
     $52 = HEAP32[$3>>2]|0;
     $53 = ((($52)) + -1|0);
     HEAP32[$3>>2] = $53;
    }
    $54 = ($pok|0)==(0);
    if ($54) {
     ___shlim($f,0);
     $282 = 0;$283 = 0;
     tempRet0 = ($282);
     return ($283|0);
    }
    if ($51) {
     $282 = 0;$283 = 0;
     tempRet0 = ($282);
     return ($283|0);
    }
    $55 = HEAP32[$3>>2]|0;
    $56 = ((($55)) + -1|0);
    HEAP32[$3>>2] = $56;
    $282 = 0;$283 = 0;
    tempRet0 = ($282);
    return ($283|0);
   } else {
    $$123 = 16;$c$124 = $46;
    label = 46;
   }
  } else {
   $$base21 = $25 ? 10 : $base;
   $$sum = (($c$0) + 1)|0;
   $57 = (3520 + ($$sum)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58&255;
   $60 = ($59>>>0)<($$base21>>>0);
   if ($60) {
    $$1 = $$base21;$c$1 = $c$0;
    label = 32;
   } else {
    $61 = HEAP32[$4>>2]|0;
    $62 = ($61|0)==(0|0);
    if (!($62)) {
     $63 = HEAP32[$3>>2]|0;
     $64 = ((($63)) + -1|0);
     HEAP32[$3>>2] = $64;
    }
    ___shlim($f,0);
    $65 = (___errno_location()|0);
    HEAP32[$65>>2] = 22;
    $282 = 0;$283 = 0;
    tempRet0 = ($282);
    return ($283|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $66 = ($$1|0)==(10);
  if ($66) {
   $67 = (($c$1) + -48)|0;
   $68 = ($67>>>0)<(10);
   if ($68) {
    $71 = $67;$x$082 = 0;
    while(1) {
     $69 = ($x$082*10)|0;
     $70 = (($69) + ($71))|0;
     $72 = HEAP32[$3>>2]|0;
     $73 = HEAP32[$4>>2]|0;
     $74 = ($72>>>0)<($73>>>0);
     if ($74) {
      $75 = ((($72)) + 1|0);
      HEAP32[$3>>2] = $75;
      $76 = HEAP8[$72>>0]|0;
      $77 = $76&255;
      $c$2$be = $77;
     } else {
      $78 = (___shgetc($f)|0);
      $c$2$be = $78;
     }
     $79 = (($c$2$be) + -48)|0;
     $80 = ($79>>>0)<(10);
     $81 = ($70>>>0)<(429496729);
     $82 = $80 & $81;
     if ($82) {
      $71 = $79;$x$082 = $70;
     } else {
      $$lcssa134 = $70;$c$2$be$lcssa = $c$2$be;
      break;
     }
    }
    $284 = $$lcssa134;$285 = 0;$c$2$lcssa = $c$2$be$lcssa;
   } else {
    $284 = 0;$285 = 0;$c$2$lcssa = $c$1;
   }
   $83 = (($c$2$lcssa) + -48)|0;
   $84 = ($83>>>0)<(10);
   if ($84) {
    $85 = $284;$86 = $285;$89 = $83;$c$371 = $c$2$lcssa;
    while(1) {
     $87 = (___muldi3(($85|0),($86|0),10,0)|0);
     $88 = tempRet0;
     $90 = ($89|0)<(0);
     $91 = $90 << 31 >> 31;
     $92 = $89 ^ -1;
     $93 = $91 ^ -1;
     $94 = ($88>>>0)>($93>>>0);
     $95 = ($87>>>0)>($92>>>0);
     $96 = ($88|0)==($93|0);
     $97 = $96 & $95;
     $98 = $94 | $97;
     if ($98) {
      $$lcssa = $89;$286 = $85;$287 = $86;$c$3$lcssa = $c$371;
      break;
     }
     $99 = (_i64Add(($87|0),($88|0),($89|0),($91|0))|0);
     $100 = tempRet0;
     $101 = HEAP32[$3>>2]|0;
     $102 = HEAP32[$4>>2]|0;
     $103 = ($101>>>0)<($102>>>0);
     if ($103) {
      $104 = ((($101)) + 1|0);
      HEAP32[$3>>2] = $104;
      $105 = HEAP8[$101>>0]|0;
      $106 = $105&255;
      $c$3$be = $106;
     } else {
      $107 = (___shgetc($f)|0);
      $c$3$be = $107;
     }
     $108 = (($c$3$be) + -48)|0;
     $109 = ($108>>>0)<(10);
     $110 = ($100>>>0)<(429496729);
     $111 = ($99>>>0)<(2576980378);
     $112 = ($100|0)==(429496729);
     $113 = $112 & $111;
     $114 = $110 | $113;
     $or$cond7 = $109 & $114;
     if ($or$cond7) {
      $85 = $99;$86 = $100;$89 = $108;$c$371 = $c$3$be;
     } else {
      $$lcssa = $108;$286 = $99;$287 = $100;$c$3$lcssa = $c$3$be;
      break;
     }
    }
    $115 = ($$lcssa>>>0)>(9);
    if ($115) {
     $255 = $287;$257 = $286;
    } else {
     $$122 = 10;$288 = $286;$289 = $287;$c$8 = $c$3$lcssa;
     label = 72;
    }
   } else {
    $255 = $285;$257 = $284;
   }
  } else {
   $$123 = $$1;$c$124 = $c$1;
   label = 46;
  }
 }
 L69: do {
  if ((label|0) == 46) {
   $116 = (($$123) + -1)|0;
   $117 = $116 & $$123;
   $118 = ($117|0)==(0);
   if ($118) {
    $123 = ($$123*23)|0;
    $124 = $123 >>> 5;
    $125 = $124 & 7;
    $126 = (3784 + ($125)|0);
    $127 = HEAP8[$126>>0]|0;
    $128 = $127 << 24 >> 24;
    $$sum1445 = (($c$124) + 1)|0;
    $129 = (3520 + ($$sum1445)|0);
    $130 = HEAP8[$129>>0]|0;
    $131 = $130&255;
    $132 = ($131>>>0)<($$123>>>0);
    if ($132) {
     $135 = $131;$x$146 = 0;
     while(1) {
      $133 = $x$146 << $128;
      $134 = $135 | $133;
      $136 = HEAP32[$3>>2]|0;
      $137 = HEAP32[$4>>2]|0;
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $139 = ((($136)) + 1|0);
       HEAP32[$3>>2] = $139;
       $140 = HEAP8[$136>>0]|0;
       $141 = $140&255;
       $c$4$be = $141;
      } else {
       $142 = (___shgetc($f)|0);
       $c$4$be = $142;
      }
      $$sum14 = (($c$4$be) + 1)|0;
      $143 = (3520 + ($$sum14)|0);
      $144 = HEAP8[$143>>0]|0;
      $145 = $144&255;
      $146 = ($145>>>0)<($$123>>>0);
      $147 = ($134>>>0)<(134217728);
      $148 = $147 & $146;
      if ($148) {
       $135 = $145;$x$146 = $134;
      } else {
       $$lcssa130 = $134;$$lcssa131 = $144;$c$4$be$lcssa = $c$4$be;
       break;
      }
     }
     $152 = $$lcssa131;$154 = 0;$156 = $$lcssa130;$c$4$lcssa = $c$4$be$lcssa;
    } else {
     $152 = $130;$154 = 0;$156 = 0;$c$4$lcssa = $c$124;
    }
    $149 = (_bitshift64Lshr(-1,-1,($128|0))|0);
    $150 = tempRet0;
    $151 = $152&255;
    $153 = ($151>>>0)>=($$123>>>0);
    $155 = ($154>>>0)>($150>>>0);
    $157 = ($156>>>0)>($149>>>0);
    $158 = ($154|0)==($150|0);
    $159 = $158 & $157;
    $160 = $155 | $159;
    $or$cond40 = $153 | $160;
    if ($or$cond40) {
     $$122 = $$123;$288 = $156;$289 = $154;$c$8 = $c$4$lcssa;
     label = 72;
     break;
    } else {
     $161 = $156;$162 = $154;$166 = $152;
    }
    while(1) {
     $163 = (_bitshift64Shl(($161|0),($162|0),($128|0))|0);
     $164 = tempRet0;
     $165 = $166&255;
     $167 = $165 | $163;
     $168 = HEAP32[$3>>2]|0;
     $169 = HEAP32[$4>>2]|0;
     $170 = ($168>>>0)<($169>>>0);
     if ($170) {
      $171 = ((($168)) + 1|0);
      HEAP32[$3>>2] = $171;
      $172 = HEAP8[$168>>0]|0;
      $173 = $172&255;
      $c$5$be = $173;
     } else {
      $174 = (___shgetc($f)|0);
      $c$5$be = $174;
     }
     $$sum15 = (($c$5$be) + 1)|0;
     $175 = (3520 + ($$sum15)|0);
     $176 = HEAP8[$175>>0]|0;
     $177 = $176&255;
     $178 = ($177>>>0)>=($$123>>>0);
     $179 = ($164>>>0)>($150>>>0);
     $180 = ($167>>>0)>($149>>>0);
     $181 = ($164|0)==($150|0);
     $182 = $181 & $180;
     $183 = $179 | $182;
     $or$cond = $178 | $183;
     if ($or$cond) {
      $$122 = $$123;$288 = $167;$289 = $164;$c$8 = $c$5$be;
      label = 72;
      break L69;
     } else {
      $161 = $167;$162 = $164;$166 = $176;
     }
    }
   }
   $$sum1865 = (($c$124) + 1)|0;
   $119 = (3520 + ($$sum1865)|0);
   $120 = HEAP8[$119>>0]|0;
   $121 = $120&255;
   $122 = ($121>>>0)<($$123>>>0);
   if ($122) {
    $186 = $121;$x$266 = 0;
    while(1) {
     $184 = Math_imul($x$266, $$123)|0;
     $185 = (($186) + ($184))|0;
     $187 = HEAP32[$3>>2]|0;
     $188 = HEAP32[$4>>2]|0;
     $189 = ($187>>>0)<($188>>>0);
     if ($189) {
      $190 = ((($187)) + 1|0);
      HEAP32[$3>>2] = $190;
      $191 = HEAP8[$187>>0]|0;
      $192 = $191&255;
      $c$6$be = $192;
     } else {
      $193 = (___shgetc($f)|0);
      $c$6$be = $193;
     }
     $$sum18 = (($c$6$be) + 1)|0;
     $194 = (3520 + ($$sum18)|0);
     $195 = HEAP8[$194>>0]|0;
     $196 = $195&255;
     $197 = ($196>>>0)<($$123>>>0);
     $198 = ($185>>>0)<(119304647);
     $199 = $198 & $197;
     if ($199) {
      $186 = $196;$x$266 = $185;
     } else {
      $$lcssa132 = $185;$$lcssa133 = $195;$c$6$be$lcssa = $c$6$be;
      break;
     }
    }
    $201 = $$lcssa133;$290 = $$lcssa132;$291 = 0;$c$6$lcssa = $c$6$be$lcssa;
   } else {
    $201 = $120;$290 = 0;$291 = 0;$c$6$lcssa = $c$124;
   }
   $200 = $201&255;
   $202 = ($200>>>0)<($$123>>>0);
   if ($202) {
    $203 = (___udivdi3(-1,-1,($$123|0),0)|0);
    $204 = tempRet0;
    $205 = $291;$207 = $290;$215 = $201;$c$753 = $c$6$lcssa;
    while(1) {
     $206 = ($205>>>0)>($204>>>0);
     $208 = ($207>>>0)>($203>>>0);
     $209 = ($205|0)==($204|0);
     $210 = $209 & $208;
     $211 = $206 | $210;
     if ($211) {
      $$122 = $$123;$288 = $207;$289 = $205;$c$8 = $c$753;
      label = 72;
      break L69;
     }
     $212 = (___muldi3(($207|0),($205|0),($$123|0),0)|0);
     $213 = tempRet0;
     $214 = $215&255;
     $216 = $214 ^ -1;
     $217 = ($213>>>0)>(4294967295);
     $218 = ($212>>>0)>($216>>>0);
     $219 = ($213|0)==(-1);
     $220 = $219 & $218;
     $221 = $217 | $220;
     if ($221) {
      $$122 = $$123;$288 = $207;$289 = $205;$c$8 = $c$753;
      label = 72;
      break L69;
     }
     $222 = (_i64Add(($214|0),0,($212|0),($213|0))|0);
     $223 = tempRet0;
     $224 = HEAP32[$3>>2]|0;
     $225 = HEAP32[$4>>2]|0;
     $226 = ($224>>>0)<($225>>>0);
     if ($226) {
      $227 = ((($224)) + 1|0);
      HEAP32[$3>>2] = $227;
      $228 = HEAP8[$224>>0]|0;
      $229 = $228&255;
      $c$7$be = $229;
     } else {
      $230 = (___shgetc($f)|0);
      $c$7$be = $230;
     }
     $$sum19 = (($c$7$be) + 1)|0;
     $231 = (3520 + ($$sum19)|0);
     $232 = HEAP8[$231>>0]|0;
     $233 = $232&255;
     $234 = ($233>>>0)<($$123>>>0);
     if ($234) {
      $205 = $223;$207 = $222;$215 = $232;$c$753 = $c$7$be;
     } else {
      $$122 = $$123;$288 = $222;$289 = $223;$c$8 = $c$7$be;
      label = 72;
      break;
     }
    }
   } else {
    $$122 = $$123;$288 = $290;$289 = $291;$c$8 = $c$6$lcssa;
    label = 72;
   }
  }
 } while(0);
 if ((label|0) == 72) {
  $$sum16 = (($c$8) + 1)|0;
  $235 = (3520 + ($$sum16)|0);
  $236 = HEAP8[$235>>0]|0;
  $237 = $236&255;
  $238 = ($237>>>0)<($$122>>>0);
  if ($238) {
   while(1) {
    $239 = HEAP32[$3>>2]|0;
    $240 = HEAP32[$4>>2]|0;
    $241 = ($239>>>0)<($240>>>0);
    if ($241) {
     $242 = ((($239)) + 1|0);
     HEAP32[$3>>2] = $242;
     $243 = HEAP8[$239>>0]|0;
     $244 = $243&255;
     $c$9$be = $244;
    } else {
     $245 = (___shgetc($f)|0);
     $c$9$be = $245;
    }
    $$sum17 = (($c$9$be) + 1)|0;
    $246 = (3520 + ($$sum17)|0);
    $247 = HEAP8[$246>>0]|0;
    $248 = $247&255;
    $249 = ($248>>>0)<($$122>>>0);
    if (!($249)) {
     break;
    }
   }
   $250 = (___errno_location()|0);
   HEAP32[$250>>2] = 34;
   $255 = $1;$257 = $0;
  } else {
   $255 = $289;$257 = $288;
  }
 }
 $251 = HEAP32[$4>>2]|0;
 $252 = ($251|0)==(0|0);
 if (!($252)) {
  $253 = HEAP32[$3>>2]|0;
  $254 = ((($253)) + -1|0);
  HEAP32[$3>>2] = $254;
 }
 $256 = ($255>>>0)<($1>>>0);
 $258 = ($257>>>0)<($0>>>0);
 $259 = ($255|0)==($1|0);
 $260 = $259 & $258;
 $261 = $256 | $260;
 if (!($261)) {
  $262 = $0 & 1;
  $263 = ($262|0)!=(0);
  $264 = (0)!=(0);
  $265 = $263 | $264;
  $266 = ($neg$0|0)!=(0);
  $or$cond12 = $265 | $266;
  if (!($or$cond12)) {
   $267 = (___errno_location()|0);
   HEAP32[$267>>2] = 34;
   $268 = (_i64Add(($0|0),($1|0),-1,-1)|0);
   $269 = tempRet0;
   $282 = $269;$283 = $268;
   tempRet0 = ($282);
   return ($283|0);
  }
  $270 = ($255>>>0)>($1>>>0);
  $271 = ($257>>>0)>($0>>>0);
  $272 = ($255|0)==($1|0);
  $273 = $272 & $271;
  $274 = $270 | $273;
  if ($274) {
   $275 = (___errno_location()|0);
   HEAP32[$275>>2] = 34;
   $282 = $1;$283 = $0;
   tempRet0 = ($282);
   return ($283|0);
  }
 }
 $276 = ($neg$0|0)<(0);
 $277 = $276 << 31 >> 31;
 $278 = $257 ^ $neg$0;
 $279 = $255 ^ $277;
 $280 = (_i64Subtract(($278|0),($279|0),($neg$0|0),($277|0))|0);
 $281 = tempRet0;
 $282 = $281;$283 = $280;
 tempRet0 = ($282);
 return ($283|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$0$i25 = 0.0, $$010$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$09$i = 0, $$1$be$i = 0, $$1$ph$i = 0, $$11$i = 0, $$18$i = 0, $$2$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3121$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa288 = 0;
 var $$lcssa289 = 0, $$lcssa308 = 0, $$lcssa308$lcssa = 0, $$lcssa309 = 0, $$lcssa309$lcssa = 0, $$lcssa322 = 0, $$lcssa323 = 0, $$lcssa333 = 0, $$lcssa50$i = 0, $$lnz$0$i = 0, $$neg32$i = 0, $$not$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi42$iZ2D = 0.0, $$pre41$i = 0.0, $$promoted = 0, $$promoted$i = 0;
 var $$promoted185 = 0, $$sink$off0$us$i = 0, $$sink$off0$us93$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0.0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0.0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0.0;
 var $276 = 0.0, $277 = 0, $278 = 0, $279 = 0.0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0.0, $419 = 0.0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0.0, $436 = 0.0, $437 = 0.0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0.0, $448 = 0.0, $449 = 0.0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0.0, $46 = 0, $460 = 0.0, $461 = 0.0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0.0;
 var $474 = 0, $475 = 0.0, $476 = 0.0, $477 = 0, $478 = 0.0, $479 = 0, $48 = 0.0, $480 = 0.0, $481 = 0.0, $482 = 0, $483 = 0, $484 = 0, $485 = 0.0, $486 = 0.0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0, $491 = 0;
 var $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0, $496 = 0, $497 = 0, $498 = 0.0, $499 = 0.0, $5 = 0, $50 = 0.0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0.0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0.0, $643 = 0.0, $644 = 0.0, $645 = 0, $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0.0, $663 = 0, $664 = 0.0, $665 = 0.0, $666 = 0, $667 = 0, $668 = 0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0;
 var $672 = 0.0, $673 = 0, $674 = 0, $675 = 0.0, $676 = 0, $677 = 0.0, $678 = 0.0, $679 = 0.0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0.0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0.0, $69 = 0;
 var $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0.0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0.0, $702 = 0, $703 = 0, $704 = 0.0, $705 = 0.0, $706 = 0, $707 = 0;
 var $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0;
 var $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0;
 var $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a$0$lcssa177$i = 0, $a$0101$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph38$i = 0, $a$3$i = 0;
 var $a$3$i$lcssa300 = 0, $a$3$i301 = 0, $a$3$ph$i = 0, $a$3$ph183$i = 0, $a$478$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i23 = 0.0, $bits$0$ph = 0, $brmerge = 0, $brmerge$i26 = 0, $brmerge187 = 0, $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$185 = 0, $c$2 = 0;
 var $c$2$i = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0103$i = 0, $carry1$0$us$i = 0, $carry1$0$us89$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0, $carry1$1$us94$i = 0, $carry1$1$us94$i$lcssa = 0, $carry3$081$i = 0, $cond$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0;
 var $e2$0$us$i = 0, $e2$0$us84$i = 0, $e2$1$i = 0, $e2$1$i298 = 0, $e2$1$ph$i = 0, $e2$1$ph182$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa294 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa331 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0;
 var $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3117$i = 0, $gotdig$3117$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1118$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$084 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0;
 var $j$0$lcssa$i = 0, $j$0120$i = 0, $j$0120$i$lcssa = 0, $j$067$i = 0, $j$068$i = 0, $j$069$i = 0, $j$2$i = 0, $j$3110$i = 0, $k$0$lcssa$i = 0, $k$0119$i = 0, $k$0119$i$lcssa = 0, $k$063$i = 0, $k$064$i = 0, $k$065$i = 0, $k$2$i = 0, $k$3$i = 0, $k$4102$i = 0, $k$5$in$us$i = 0, $k$5$in$us88$i = 0, $k$5$us$i = 0;
 var $k$5$us90$i = 0, $k$5$z$2$us$i = 0, $k$5$z$2$us96$i = 0, $k$679$i = 0, $lnz$0$lcssa$i = 0, $lnz$0116$i = 0, $lnz$0116$i$lcssa = 0, $lnz$057$i = 0, $lnz$058$i = 0, $lnz$059$i = 0, $lnz$2$i = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i16 = 0, $or$cond13$i = 0, $or$cond15$i = 0, $or$cond16$i = 0, $or$cond17$us$i = 0;
 var $or$cond17$us95$i = 0, $or$cond19$i = 0, $or$cond20$i = 0, $or$cond216$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond8$i = 0, $or$cond9$i = 0, $or$cond9$not = 0, $rp$0$lcssa178$i = 0, $rp$0100$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph36$i = 0, $rp$3$ph$i = 0, $rp$3$ph34$i = 0, $rp$477$i = 0;
 var $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$6$i = 0, $x$i = 0;
 var $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i22 = 0.0, $y$2$i = 0.0, $y$2$i24 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$ph37$i = 0, $z$1$us$i = 0, $z$1$us85$i = 0, $z$2$us$i = 0, $z$2$us87$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0;
 var $z$3$us97$i = 0, $z$3$us97$i$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $x$i = sp;
 if ((($prec|0) == 1)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else if ((($prec|0) == 0)) {
  $bits$0$ph = 24;$emin$0$ph = -149;
 } else if ((($prec|0) == 2)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $0 = ((($f)) + 4|0);
 $1 = ((($f)) + 100|0);
 while(1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ($2>>>0)<($3>>>0);
  if ($4) {
   $5 = ((($2)) + 1|0);
   HEAP32[$0>>2] = $5;
   $6 = HEAP8[$2>>0]|0;
   $7 = $6&255;
   $9 = $7;
  } else {
   $8 = (___shgetc($f)|0);
   $9 = $8;
  }
  $10 = (_isspace($9)|0);
  $11 = ($10|0)==(0);
  if ($11) {
   $$lcssa333 = $9;
   break;
  }
 }
 $12 = ($$lcssa333|0)==(45);
 do {
  if ((($$lcssa333|0) == 43) | (($$lcssa333|0) == 45)) {
   $13 = $12&1;
   $14 = $13 << 1;
   $15 = (1 - ($14))|0;
   $16 = HEAP32[$0>>2]|0;
   $17 = HEAP32[$1>>2]|0;
   $18 = ($16>>>0)<($17>>>0);
   if ($18) {
    $19 = ((($16)) + 1|0);
    HEAP32[$0>>2] = $19;
    $20 = HEAP8[$16>>0]|0;
    $21 = $20&255;
    $c$0 = $21;$sign$0 = $15;
    break;
   } else {
    $22 = (___shgetc($f)|0);
    $c$0 = $22;$sign$0 = $15;
    break;
   }
  } else {
   $c$0 = $$lcssa333;$sign$0 = 1;
  }
 } while(0);
 $c$185 = $c$0;$i$084 = 0;
 while(1) {
  $23 = $c$185 | 32;
  $24 = (3800 + ($i$084)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25 << 24 >> 24;
  $27 = ($23|0)==($26|0);
  if (!($27)) {
   $c$1$lcssa = $c$185;$i$0$lcssa = $i$084;
   break;
  }
  $28 = ($i$084>>>0)<(7);
  do {
   if ($28) {
    $29 = HEAP32[$0>>2]|0;
    $30 = HEAP32[$1>>2]|0;
    $31 = ($29>>>0)<($30>>>0);
    if ($31) {
     $32 = ((($29)) + 1|0);
     HEAP32[$0>>2] = $32;
     $33 = HEAP8[$29>>0]|0;
     $34 = $33&255;
     $c$2 = $34;
     break;
    } else {
     $35 = (___shgetc($f)|0);
     $c$2 = $35;
     break;
    }
   } else {
    $c$2 = $c$185;
   }
  } while(0);
  $36 = (($i$084) + 1)|0;
  $37 = ($36>>>0)<(8);
  if ($37) {
   $c$185 = $c$2;$i$084 = $36;
  } else {
   $c$1$lcssa = $c$2;$i$0$lcssa = $36;
   break;
  }
 }
 do {
  if ((($i$0$lcssa|0) == 3)) {
   label = 23;
  } else if (!((($i$0$lcssa|0) == 8))) {
   $38 = ($i$0$lcssa>>>0)>(3);
   $39 = ($pok|0)!=(0);
   $or$cond5 = $39 & $38;
   if ($or$cond5) {
    $40 = ($i$0$lcssa|0)==(8);
    if ($40) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   $51 = ($i$0$lcssa|0)==(0);
   do {
    if ($51) {
     $52 = $c$1$lcssa | 32;
     $53 = ($52|0)==(110);
     if ($53) {
      $54 = HEAP32[$0>>2]|0;
      $55 = HEAP32[$1>>2]|0;
      $56 = ($54>>>0)<($55>>>0);
      if ($56) {
       $57 = ((($54)) + 1|0);
       HEAP32[$0>>2] = $57;
       $58 = HEAP8[$54>>0]|0;
       $59 = $58&255;
       $c$4 = $59;
      } else {
       $60 = (___shgetc($f)|0);
       $c$4 = $60;
      }
      $61 = $c$4 | 32;
      $62 = ($61|0)==(97);
      if (!($62)) {
       break;
      }
      $712 = HEAP32[$0>>2]|0;
      $713 = HEAP32[$1>>2]|0;
      $714 = ($712>>>0)<($713>>>0);
      if ($714) {
       $716 = ((($712)) + 1|0);
       HEAP32[$0>>2] = $716;
       $717 = HEAP8[$712>>0]|0;
       $718 = $717&255;
       $c$4$1 = $718;
      } else {
       $715 = (___shgetc($f)|0);
       $c$4$1 = $715;
      }
      $719 = $c$4$1 | 32;
      $720 = ($719|0)==(110);
      if (!($720)) {
       break;
      }
      $63 = HEAP32[$0>>2]|0;
      $64 = HEAP32[$1>>2]|0;
      $65 = ($63>>>0)<($64>>>0);
      if ($65) {
       $66 = ((($63)) + 1|0);
       HEAP32[$0>>2] = $66;
       $67 = HEAP8[$63>>0]|0;
       $68 = $67&255;
       $70 = $68;
      } else {
       $69 = (___shgetc($f)|0);
       $70 = $69;
      }
      $71 = ($70|0)==(40);
      if ($71) {
       $i$4 = 1;
      } else {
       $72 = HEAP32[$1>>2]|0;
       $73 = ($72|0)==(0|0);
       if ($73) {
        $$0 = nan;
        STACKTOP = sp;return (+$$0);
       }
       $74 = HEAP32[$0>>2]|0;
       $75 = ((($74)) + -1|0);
       HEAP32[$0>>2] = $75;
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      while(1) {
       $76 = HEAP32[$0>>2]|0;
       $77 = HEAP32[$1>>2]|0;
       $78 = ($76>>>0)<($77>>>0);
       if ($78) {
        $79 = ((($76)) + 1|0);
        HEAP32[$0>>2] = $79;
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $84 = $81;
       } else {
        $82 = (___shgetc($f)|0);
        $84 = $82;
       }
       $83 = (($84) + -48)|0;
       $85 = ($83>>>0)<(10);
       $86 = (($84) + -65)|0;
       $87 = ($86>>>0)<(26);
       $or$cond = $85 | $87;
       if (!($or$cond)) {
        $88 = (($84) + -97)|0;
        $89 = ($88>>>0)<(26);
        $90 = ($84|0)==(95);
        $or$cond7 = $90 | $89;
        if (!($or$cond7)) {
         $$lcssa289 = $84;$i$4$lcssa = $i$4;
         break;
        }
       }
       $102 = (($i$4) + 1)|0;
       $i$4 = $102;
      }
      $91 = ($$lcssa289|0)==(41);
      if ($91) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $92 = HEAP32[$1>>2]|0;
      $93 = ($92|0)==(0|0);
      if (!($93)) {
       $94 = HEAP32[$0>>2]|0;
       $95 = ((($94)) + -1|0);
       HEAP32[$0>>2] = $95;
      }
      if (!($39)) {
       $97 = (___errno_location()|0);
       HEAP32[$97>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       STACKTOP = sp;return (+$$0);
      }
      $96 = ($i$4$lcssa|0)==(0);
      $brmerge187 = $96 | $93;
      if ($brmerge187) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $$promoted185 = HEAP32[$0>>2]|0;
      $$in = $i$4$lcssa;$100 = $$promoted185;
      while(1) {
       $98 = (($$in) + -1)|0;
       $99 = ((($100)) + -1|0);
       $101 = ($98|0)==(0);
       if ($101) {
        $$lcssa288 = $99;
        break;
       } else {
        $$in = $98;$100 = $99;
       }
      }
      HEAP32[$0>>2] = $$lcssa288;
      $$0 = nan;
      STACKTOP = sp;return (+$$0);
     }
     $108 = ($c$1$lcssa|0)==(48);
     do {
      if ($108) {
       $109 = HEAP32[$0>>2]|0;
       $110 = HEAP32[$1>>2]|0;
       $111 = ($109>>>0)<($110>>>0);
       if ($111) {
        $112 = ((($109)) + 1|0);
        HEAP32[$0>>2] = $112;
        $113 = HEAP8[$109>>0]|0;
        $114 = $113&255;
        $117 = $114;
       } else {
        $115 = (___shgetc($f)|0);
        $117 = $115;
       }
       $116 = $117 | 32;
       $118 = ($116|0)==(120);
       if (!($118)) {
        $320 = HEAP32[$1>>2]|0;
        $321 = ($320|0)==(0|0);
        if ($321) {
         $c$6 = 48;
         break;
        }
        $322 = HEAP32[$0>>2]|0;
        $323 = ((($322)) + -1|0);
        HEAP32[$0>>2] = $323;
        $c$6 = 48;
        break;
       }
       $119 = HEAP32[$0>>2]|0;
       $120 = HEAP32[$1>>2]|0;
       $121 = ($119>>>0)<($120>>>0);
       if ($121) {
        $122 = ((($119)) + 1|0);
        HEAP32[$0>>2] = $122;
        $123 = HEAP8[$119>>0]|0;
        $124 = $123&255;
        $c$0$i = $124;$gotdig$0$i = 0;
       } else {
        $125 = (___shgetc($f)|0);
        $c$0$i = $125;$gotdig$0$i = 0;
       }
       while(1) {
        if ((($c$0$i|0) == 46)) {
         $gotdig$0$i$lcssa294 = $gotdig$0$i;
         label = 71;
         break;
        } else if (!((($c$0$i|0) == 48))) {
         $162 = 0;$164 = 0;$721 = 0;$722 = 0;$c$2$i = $c$0$i;$gotdig$2$i = $gotdig$0$i;$gotrad$0$i = 0;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
         break;
        }
        $126 = HEAP32[$0>>2]|0;
        $127 = HEAP32[$1>>2]|0;
        $128 = ($126>>>0)<($127>>>0);
        if ($128) {
         $129 = ((($126)) + 1|0);
         HEAP32[$0>>2] = $129;
         $130 = HEAP8[$126>>0]|0;
         $131 = $130&255;
         $c$0$i = $131;$gotdig$0$i = 1;
         continue;
        } else {
         $132 = (___shgetc($f)|0);
         $c$0$i = $132;$gotdig$0$i = 1;
         continue;
        }
       }
       if ((label|0) == 71) {
        $133 = HEAP32[$0>>2]|0;
        $134 = HEAP32[$1>>2]|0;
        $135 = ($133>>>0)<($134>>>0);
        if ($135) {
         $136 = ((($133)) + 1|0);
         HEAP32[$0>>2] = $136;
         $137 = HEAP8[$133>>0]|0;
         $138 = $137&255;
         $c$1$ph$i = $138;
        } else {
         $139 = (___shgetc($f)|0);
         $c$1$ph$i = $139;
        }
        $140 = ($c$1$ph$i|0)==(48);
        if ($140) {
         $148 = 0;$149 = 0;
         while(1) {
          $141 = HEAP32[$0>>2]|0;
          $142 = HEAP32[$1>>2]|0;
          $143 = ($141>>>0)<($142>>>0);
          if ($143) {
           $144 = ((($141)) + 1|0);
           HEAP32[$0>>2] = $144;
           $145 = HEAP8[$141>>0]|0;
           $146 = $145&255;
           $152 = $146;
          } else {
           $147 = (___shgetc($f)|0);
           $152 = $147;
          }
          $150 = (_i64Add(($148|0),($149|0),-1,-1)|0);
          $151 = tempRet0;
          $153 = ($152|0)==(48);
          if ($153) {
           $148 = $150;$149 = $151;
          } else {
           $162 = 0;$164 = 0;$721 = $150;$722 = $151;$c$2$i = $152;$gotdig$2$i = 1;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
           break;
          }
         }
        } else {
         $162 = 0;$164 = 0;$721 = 0;$722 = 0;$c$2$i = $c$1$ph$i;$gotdig$2$i = $gotdig$0$i$lcssa294;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
        }
       }
       while(1) {
        $154 = (($c$2$i) + -48)|0;
        $155 = ($154>>>0)<(10);
        $$pre$i = $c$2$i | 32;
        if ($155) {
         label = 83;
        } else {
         $156 = (($$pre$i) + -97)|0;
         $157 = ($156>>>0)<(6);
         $158 = ($c$2$i|0)==(46);
         $or$cond6$i = $158 | $157;
         if (!($or$cond6$i)) {
          $206 = $721;$207 = $164;$209 = $722;$210 = $162;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
          break;
         }
         if ($158) {
          $159 = ($gotrad$0$i|0)==(0);
          if ($159) {
           $723 = $164;$724 = $162;$725 = $164;$726 = $162;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
          } else {
           $206 = $721;$207 = $164;$209 = $722;$210 = $162;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break;
          }
         } else {
          label = 83;
         }
        }
        if ((label|0) == 83) {
         label = 0;
         $160 = ($c$2$i|0)>(57);
         $161 = (($$pre$i) + -87)|0;
         $d$0$i = $160 ? $161 : $154;
         $163 = ($162|0)<(0);
         $165 = ($164>>>0)<(8);
         $166 = ($162|0)==(0);
         $167 = $166 & $165;
         $168 = $163 | $167;
         do {
          if ($168) {
           $169 = $x$0$i << 4;
           $170 = (($d$0$i) + ($169))|0;
           $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $170;$y$1$i = $y$0$i;
          } else {
           $171 = ($162|0)<(0);
           $172 = ($164>>>0)<(14);
           $173 = ($162|0)==(0);
           $174 = $173 & $172;
           $175 = $171 | $174;
           if ($175) {
            $176 = (+($d$0$i|0));
            $177 = $scale$0$i * 0.0625;
            $178 = $177 * $176;
            $179 = $y$0$i + $178;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $177;$x$1$i = $x$0$i;$y$1$i = $179;
            break;
           }
           $180 = ($d$0$i|0)==(0);
           $181 = ($gottail$0$i|0)!=(0);
           $or$cond$i = $181 | $180;
           if ($or$cond$i) {
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
           } else {
            $182 = $scale$0$i * 0.5;
            $183 = $y$0$i + $182;
            $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $183;
           }
          }
         } while(0);
         $184 = (_i64Add(($164|0),($162|0),1,0)|0);
         $185 = tempRet0;
         $723 = $721;$724 = $722;$725 = $184;$726 = $185;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
        }
        $186 = HEAP32[$0>>2]|0;
        $187 = HEAP32[$1>>2]|0;
        $188 = ($186>>>0)<($187>>>0);
        if ($188) {
         $189 = ((($186)) + 1|0);
         HEAP32[$0>>2] = $189;
         $190 = HEAP8[$186>>0]|0;
         $191 = $190&255;
         $162 = $726;$164 = $725;$721 = $723;$722 = $724;$c$2$i = $191;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
         continue;
        } else {
         $192 = (___shgetc($f)|0);
         $162 = $726;$164 = $725;$721 = $723;$722 = $724;$c$2$i = $192;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
         continue;
        }
       }
       $193 = ($gotdig$2$i$lcssa|0)==(0);
       if ($193) {
        $194 = HEAP32[$1>>2]|0;
        $195 = ($194|0)==(0|0);
        if (!($195)) {
         $196 = HEAP32[$0>>2]|0;
         $197 = ((($196)) + -1|0);
         HEAP32[$0>>2] = $197;
        }
        $198 = ($pok|0)==(0);
        if ($198) {
         ___shlim($f,0);
        } else {
         if (!($195)) {
          $199 = HEAP32[$0>>2]|0;
          $200 = ((($199)) + -1|0);
          HEAP32[$0>>2] = $200;
          $201 = ($gotrad$0$i$lcssa|0)==(0);
          if (!($201)) {
           $202 = ((($199)) + -2|0);
           HEAP32[$0>>2] = $202;
          }
         }
        }
        $203 = (+($sign$0|0));
        $204 = $203 * 0.0;
        $$0 = $204;
        STACKTOP = sp;return (+$$0);
       }
       $205 = ($gotrad$0$i$lcssa|0)==(0);
       $208 = $205 ? $207 : $206;
       $211 = $205 ? $210 : $209;
       $212 = ($210|0)<(0);
       $213 = ($207>>>0)<(8);
       $214 = ($210|0)==(0);
       $215 = $214 & $213;
       $216 = $212 | $215;
       if ($216) {
        $218 = $207;$219 = $210;$x$324$i = $x$0$i$lcssa;
        while(1) {
         $217 = $x$324$i << 4;
         $220 = (_i64Add(($218|0),($219|0),1,0)|0);
         $221 = tempRet0;
         $222 = ($221|0)<(0);
         $223 = ($220>>>0)<(8);
         $224 = ($221|0)==(0);
         $225 = $224 & $223;
         $226 = $222 | $225;
         if ($226) {
          $218 = $220;$219 = $221;$x$324$i = $217;
         } else {
          $x$3$lcssa$i = $217;
          break;
         }
        }
       } else {
        $x$3$lcssa$i = $x$0$i$lcssa;
       }
       $227 = $c$2$lcssa$i | 32;
       $228 = ($227|0)==(112);
       do {
        if ($228) {
         $229 = (_scanexp($f,$pok)|0);
         $230 = tempRet0;
         $231 = ($229|0)==(0);
         $232 = ($230|0)==(-2147483648);
         $233 = $231 & $232;
         if ($233) {
          $234 = ($pok|0)==(0);
          if ($234) {
           ___shlim($f,0);
           $$0 = 0.0;
           STACKTOP = sp;return (+$$0);
          } else {
           $235 = HEAP32[$1>>2]|0;
           $236 = ($235|0)==(0|0);
           if ($236) {
            $247 = 0;$248 = 0;
            break;
           }
           $237 = HEAP32[$0>>2]|0;
           $238 = ((($237)) + -1|0);
           HEAP32[$0>>2] = $238;
           $247 = 0;$248 = 0;
           break;
          }
         } else {
          $247 = $229;$248 = $230;
         }
        } else {
         $239 = HEAP32[$1>>2]|0;
         $240 = ($239|0)==(0|0);
         if ($240) {
          $247 = 0;$248 = 0;
         } else {
          $241 = HEAP32[$0>>2]|0;
          $242 = ((($241)) + -1|0);
          HEAP32[$0>>2] = $242;
          $247 = 0;$248 = 0;
         }
        }
       } while(0);
       $243 = (_bitshift64Shl(($208|0),($211|0),2)|0);
       $244 = tempRet0;
       $245 = (_i64Add(($243|0),($244|0),-32,-1)|0);
       $246 = tempRet0;
       $249 = (_i64Add(($245|0),($246|0),($247|0),($248|0))|0);
       $250 = tempRet0;
       $251 = ($x$3$lcssa$i|0)==(0);
       if ($251) {
        $252 = (+($sign$0|0));
        $253 = $252 * 0.0;
        $$0 = $253;
        STACKTOP = sp;return (+$$0);
       }
       $254 = (0 - ($emin$0$ph))|0;
       $255 = ($250|0)>(0);
       $256 = ($249>>>0)>($254>>>0);
       $257 = ($250|0)==(0);
       $258 = $257 & $256;
       $259 = $255 | $258;
       if ($259) {
        $260 = (___errno_location()|0);
        HEAP32[$260>>2] = 34;
        $261 = (+($sign$0|0));
        $262 = $261 * 1.7976931348623157E+308;
        $263 = $262 * 1.7976931348623157E+308;
        $$0 = $263;
        STACKTOP = sp;return (+$$0);
       }
       $264 = (($emin$0$ph) + -106)|0;
       $265 = ($264|0)<(0);
       $266 = $265 << 31 >> 31;
       $267 = ($250|0)<($266|0);
       $268 = ($249>>>0)<($264>>>0);
       $269 = ($250|0)==($266|0);
       $270 = $269 & $268;
       $271 = $267 | $270;
       if ($271) {
        $273 = (___errno_location()|0);
        HEAP32[$273>>2] = 34;
        $274 = (+($sign$0|0));
        $275 = $274 * 2.2250738585072014E-308;
        $276 = $275 * 2.2250738585072014E-308;
        $$0 = $276;
        STACKTOP = sp;return (+$$0);
       }
       $272 = ($x$3$lcssa$i|0)>(-1);
       if ($272) {
        $282 = $249;$283 = $250;$x$419$i = $x$3$lcssa$i;$y$320$i = $y$0$i$lcssa;
        while(1) {
         $277 = !($y$320$i >= 0.5);
         $278 = $x$419$i << 1;
         $279 = $y$320$i + -1.0;
         $280 = $277&1;
         $281 = $280 | $278;
         $x$5$i = $281 ^ 1;
         $$pn$i = $277 ? $y$320$i : $279;
         $y$4$i = $y$320$i + $$pn$i;
         $284 = (_i64Add(($282|0),($283|0),-1,-1)|0);
         $285 = tempRet0;
         $286 = ($281|0)>(-1);
         if ($286) {
          $282 = $284;$283 = $285;$x$419$i = $x$5$i;$y$320$i = $y$4$i;
         } else {
          $291 = $284;$292 = $285;$x$4$lcssa$i = $x$5$i;$y$3$lcssa$i = $y$4$i;
          break;
         }
        }
       } else {
        $291 = $249;$292 = $250;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
       }
       $287 = ($emin$0$ph|0)<(0);
       $288 = $287 << 31 >> 31;
       $289 = (_i64Subtract(32,0,($emin$0$ph|0),($288|0))|0);
       $290 = tempRet0;
       $293 = (_i64Add(($291|0),($292|0),($289|0),($290|0))|0);
       $294 = tempRet0;
       $295 = (0)>($294|0);
       $296 = ($bits$0$ph>>>0)>($293>>>0);
       $297 = (0)==($294|0);
       $298 = $297 & $296;
       $299 = $295 | $298;
       if ($299) {
        $300 = ($293|0)<(0);
        if ($300) {
         $$0710$i = 0;
         label = 124;
        } else {
         $$07$i = $293;
         label = 122;
        }
       } else {
        $$07$i = $bits$0$ph;
        label = 122;
       }
       do {
        if ((label|0) == 122) {
         $301 = ($$07$i|0)<(53);
         if ($301) {
          $$0710$i = $$07$i;
          label = 124;
          break;
         }
         $$pre41$i = (+($sign$0|0));
         $$0711$i = $$07$i;$$pre$phi42$iZ2D = $$pre41$i;$bias$0$i = 0.0;
        }
       } while(0);
       if ((label|0) == 124) {
        $302 = (84 - ($$0710$i))|0;
        $303 = (+_scalbn(1.0,$302));
        $304 = (+($sign$0|0));
        $305 = (+_copysignl($303,$304));
        $$0711$i = $$0710$i;$$pre$phi42$iZ2D = $304;$bias$0$i = $305;
       }
       $306 = ($$0711$i|0)<(32);
       $307 = $y$3$lcssa$i != 0.0;
       $or$cond4$i = $307 & $306;
       $308 = $x$4$lcssa$i & 1;
       $309 = ($308|0)==(0);
       $or$cond9$i = $309 & $or$cond4$i;
       $310 = $or$cond9$i&1;
       $x$6$i = (($310) + ($x$4$lcssa$i))|0;
       $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
       $311 = (+($x$6$i>>>0));
       $312 = $$pre$phi42$iZ2D * $311;
       $313 = $bias$0$i + $312;
       $314 = $$pre$phi42$iZ2D * $y$5$i;
       $315 = $314 + $313;
       $316 = $315 - $bias$0$i;
       $317 = $316 != 0.0;
       if (!($317)) {
        $318 = (___errno_location()|0);
        HEAP32[$318>>2] = 34;
       }
       $319 = (+_scalbnl($316,$291));
       $$0 = $319;
       STACKTOP = sp;return (+$$0);
      } else {
       $c$6 = $c$1$lcssa;
      }
     } while(0);
     $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
     $324 = (0 - ($sum$i))|0;
     $$09$i = $c$6;$gotdig$0$i12 = 0;
     while(1) {
      if ((($$09$i|0) == 46)) {
       $gotdig$0$i12$lcssa331 = $gotdig$0$i12;
       label = 135;
       break;
      } else if (!((($$09$i|0) == 48))) {
       $$2$i = $$09$i;$727 = 0;$728 = 0;$gotdig$2$i13 = $gotdig$0$i12;$gotrad$0$i14 = 0;
       break;
      }
      $325 = HEAP32[$0>>2]|0;
      $326 = HEAP32[$1>>2]|0;
      $327 = ($325>>>0)<($326>>>0);
      if ($327) {
       $328 = ((($325)) + 1|0);
       HEAP32[$0>>2] = $328;
       $329 = HEAP8[$325>>0]|0;
       $330 = $329&255;
       $$09$i = $330;$gotdig$0$i12 = 1;
       continue;
      } else {
       $331 = (___shgetc($f)|0);
       $$09$i = $331;$gotdig$0$i12 = 1;
       continue;
      }
     }
     if ((label|0) == 135) {
      $332 = HEAP32[$0>>2]|0;
      $333 = HEAP32[$1>>2]|0;
      $334 = ($332>>>0)<($333>>>0);
      if ($334) {
       $335 = ((($332)) + 1|0);
       HEAP32[$0>>2] = $335;
       $336 = HEAP8[$332>>0]|0;
       $337 = $336&255;
       $$1$ph$i = $337;
      } else {
       $338 = (___shgetc($f)|0);
       $$1$ph$i = $338;
      }
      $339 = ($$1$ph$i|0)==(48);
      if ($339) {
       $340 = 0;$341 = 0;
       while(1) {
        $342 = (_i64Add(($340|0),($341|0),-1,-1)|0);
        $343 = tempRet0;
        $344 = HEAP32[$0>>2]|0;
        $345 = HEAP32[$1>>2]|0;
        $346 = ($344>>>0)<($345>>>0);
        if ($346) {
         $347 = ((($344)) + 1|0);
         HEAP32[$0>>2] = $347;
         $348 = HEAP8[$344>>0]|0;
         $349 = $348&255;
         $$1$be$i = $349;
        } else {
         $350 = (___shgetc($f)|0);
         $$1$be$i = $350;
        }
        $351 = ($$1$be$i|0)==(48);
        if ($351) {
         $340 = $342;$341 = $343;
        } else {
         $$2$i = $$1$be$i;$727 = $342;$728 = $343;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
         break;
        }
       }
      } else {
       $$2$i = $$1$ph$i;$727 = 0;$728 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa331;$gotrad$0$i14 = 1;
      }
     }
     HEAP32[$x$i>>2] = 0;
     $352 = (($$2$i) + -48)|0;
     $353 = ($352>>>0)<(10);
     $354 = ($$2$i|0)==(46);
     $355 = $354 | $353;
     L214: do {
      if ($355) {
       $356 = ((($x$i)) + 496|0);
       $$3121$i = $$2$i;$359 = 0;$360 = 0;$729 = $354;$730 = $352;$731 = $727;$732 = $728;$gotdig$3117$i = $gotdig$2$i13;$gotrad$1118$i = $gotrad$0$i14;$j$0120$i = 0;$k$0119$i = 0;$lnz$0116$i = 0;
       L216: while(1) {
        do {
         if ($729) {
          $cond$i = ($gotrad$1118$i|0)==(0);
          if ($cond$i) {
           $733 = $359;$734 = $360;$735 = $359;$736 = $360;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = 1;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
          } else {
           $737 = $731;$738 = $732;$739 = $359;$740 = $360;$gotdig$3117$i$lcssa = $gotdig$3117$i;$j$0120$i$lcssa = $j$0120$i;$k$0119$i$lcssa = $k$0119$i;$lnz$0116$i$lcssa = $lnz$0116$i;
           break L216;
          }
         } else {
          $358 = ($k$0119$i|0)<(125);
          $361 = (_i64Add(($359|0),($360|0),1,0)|0);
          $362 = tempRet0;
          $363 = ($$3121$i|0)!=(48);
          if (!($358)) {
           if (!($363)) {
            $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
            break;
           }
           $373 = HEAP32[$356>>2]|0;
           $374 = $373 | 1;
           HEAP32[$356>>2] = $374;
           $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
           break;
          }
          $$lnz$0$i = $363 ? $361 : $lnz$0116$i;
          $364 = ($j$0120$i|0)==(0);
          $365 = (($x$i) + ($k$0119$i<<2)|0);
          if ($364) {
           $storemerge$i = $730;
          } else {
           $366 = HEAP32[$365>>2]|0;
           $367 = ($366*10)|0;
           $368 = (($$3121$i) + -48)|0;
           $369 = (($368) + ($367))|0;
           $storemerge$i = $369;
          }
          HEAP32[$365>>2] = $storemerge$i;
          $370 = (($j$0120$i) + 1)|0;
          $371 = ($370|0)==(9);
          $372 = $371&1;
          $$k$0$i = (($372) + ($k$0119$i))|0;
          $$11$i = $371 ? 0 : $370;
          $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $$11$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
         }
        } while(0);
        $375 = HEAP32[$0>>2]|0;
        $376 = HEAP32[$1>>2]|0;
        $377 = ($375>>>0)<($376>>>0);
        if ($377) {
         $378 = ((($375)) + 1|0);
         HEAP32[$0>>2] = $378;
         $379 = HEAP8[$375>>0]|0;
         $380 = $379&255;
         $$3$be$i = $380;
        } else {
         $381 = (___shgetc($f)|0);
         $$3$be$i = $381;
        }
        $382 = (($$3$be$i) + -48)|0;
        $383 = ($382>>>0)<(10);
        $384 = ($$3$be$i|0)==(46);
        $385 = $384 | $383;
        if ($385) {
         $$3121$i = $$3$be$i;$359 = $735;$360 = $736;$729 = $384;$730 = $382;$731 = $733;$732 = $734;$gotdig$3117$i = $gotdig$4$i;$gotrad$1118$i = $gotrad$2$i;$j$0120$i = $j$2$i;$k$0119$i = $k$2$i;$lnz$0116$i = $lnz$2$i;
        } else {
         $$3$lcssa$i = $$3$be$i;$387 = $733;$388 = $735;$390 = $734;$391 = $736;$gotdig$3$lcssa$i = $gotdig$4$i;$gotrad$1$lcssa$i = $gotrad$2$i;$j$0$lcssa$i = $j$2$i;$k$0$lcssa$i = $k$2$i;$lnz$0$lcssa$i = $lnz$2$i;
         label = 158;
         break L214;
        }
       }
       $357 = ($gotdig$3117$i$lcssa|0)!=(0);
       $741 = $739;$742 = $740;$743 = $737;$744 = $738;$745 = $357;$j$069$i = $j$0120$i$lcssa;$k$065$i = $k$0119$i$lcssa;$lnz$059$i = $lnz$0116$i$lcssa;
       label = 166;
      } else {
       $$3$lcssa$i = $$2$i;$387 = $727;$388 = 0;$390 = $728;$391 = 0;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
       label = 158;
      }
     } while(0);
     do {
      if ((label|0) == 158) {
       $386 = ($gotrad$1$lcssa$i|0)==(0);
       $389 = $386 ? $388 : $387;
       $392 = $386 ? $391 : $390;
       $393 = ($gotdig$3$lcssa$i|0)!=(0);
       $394 = $$3$lcssa$i | 32;
       $395 = ($394|0)==(101);
       $or$cond13$i = $395 & $393;
       if (!($or$cond13$i)) {
        $410 = ($$3$lcssa$i|0)>(-1);
        if ($410) {
         $741 = $388;$742 = $391;$743 = $389;$744 = $392;$745 = $393;$j$069$i = $j$0$lcssa$i;$k$065$i = $k$0$lcssa$i;$lnz$059$i = $lnz$0$lcssa$i;
         label = 166;
         break;
        } else {
         $746 = $388;$747 = $391;$748 = $393;$749 = $389;$750 = $392;$j$068$i = $j$0$lcssa$i;$k$064$i = $k$0$lcssa$i;$lnz$058$i = $lnz$0$lcssa$i;
         label = 168;
         break;
        }
       }
       $396 = (_scanexp($f,$pok)|0);
       $397 = tempRet0;
       $398 = ($396|0)==(0);
       $399 = ($397|0)==(-2147483648);
       $400 = $398 & $399;
       if ($400) {
        $401 = ($pok|0)==(0);
        if ($401) {
         ___shlim($f,0);
         $$0$i25 = 0.0;
         break;
        }
        $402 = HEAP32[$1>>2]|0;
        $403 = ($402|0)==(0|0);
        if ($403) {
         $406 = 0;$407 = 0;
        } else {
         $404 = HEAP32[$0>>2]|0;
         $405 = ((($404)) + -1|0);
         HEAP32[$0>>2] = $405;
         $406 = 0;$407 = 0;
        }
       } else {
        $406 = $396;$407 = $397;
       }
       $408 = (_i64Add(($406|0),($407|0),($389|0),($392|0))|0);
       $409 = tempRet0;
       $420 = $408;$422 = $388;$423 = $409;$425 = $391;$j$067$i = $j$0$lcssa$i;$k$063$i = $k$0$lcssa$i;$lnz$057$i = $lnz$0$lcssa$i;
       label = 170;
      }
     } while(0);
     if ((label|0) == 166) {
      $411 = HEAP32[$1>>2]|0;
      $412 = ($411|0)==(0|0);
      if ($412) {
       $746 = $741;$747 = $742;$748 = $745;$749 = $743;$750 = $744;$j$068$i = $j$069$i;$k$064$i = $k$065$i;$lnz$058$i = $lnz$059$i;
       label = 168;
      } else {
       $413 = HEAP32[$0>>2]|0;
       $414 = ((($413)) + -1|0);
       HEAP32[$0>>2] = $414;
       if ($745) {
        $420 = $743;$422 = $741;$423 = $744;$425 = $742;$j$067$i = $j$069$i;$k$063$i = $k$065$i;$lnz$057$i = $lnz$059$i;
        label = 170;
       } else {
        label = 169;
       }
      }
     }
     if ((label|0) == 168) {
      if ($748) {
       $420 = $749;$422 = $746;$423 = $750;$425 = $747;$j$067$i = $j$068$i;$k$063$i = $k$064$i;$lnz$057$i = $lnz$058$i;
       label = 170;
      } else {
       label = 169;
      }
     }
     do {
      if ((label|0) == 169) {
       $415 = (___errno_location()|0);
       HEAP32[$415>>2] = 22;
       ___shlim($f,0);
       $$0$i25 = 0.0;
      }
      else if ((label|0) == 170) {
       $416 = HEAP32[$x$i>>2]|0;
       $417 = ($416|0)==(0);
       if ($417) {
        $418 = (+($sign$0|0));
        $419 = $418 * 0.0;
        $$0$i25 = $419;
        break;
       }
       $421 = ($420|0)==($422|0);
       $424 = ($423|0)==($425|0);
       $426 = $421 & $424;
       $427 = ($425|0)<(0);
       $428 = ($422>>>0)<(10);
       $429 = ($425|0)==(0);
       $430 = $429 & $428;
       $431 = $427 | $430;
       $or$cond$i16 = $431 & $426;
       if ($or$cond$i16) {
        $432 = ($bits$0$ph>>>0)>(30);
        $433 = $416 >>> $bits$0$ph;
        $434 = ($433|0)==(0);
        $or$cond15$i = $432 | $434;
        if ($or$cond15$i) {
         $435 = (+($sign$0|0));
         $436 = (+($416>>>0));
         $437 = $435 * $436;
         $$0$i25 = $437;
         break;
        }
       }
       $438 = (($emin$0$ph|0) / -2)&-1;
       $439 = ($438|0)<(0);
       $440 = $439 << 31 >> 31;
       $441 = ($423|0)>($440|0);
       $442 = ($420>>>0)>($438>>>0);
       $443 = ($423|0)==($440|0);
       $444 = $443 & $442;
       $445 = $441 | $444;
       if ($445) {
        $446 = (___errno_location()|0);
        HEAP32[$446>>2] = 34;
        $447 = (+($sign$0|0));
        $448 = $447 * 1.7976931348623157E+308;
        $449 = $448 * 1.7976931348623157E+308;
        $$0$i25 = $449;
        break;
       }
       $450 = (($emin$0$ph) + -106)|0;
       $451 = ($450|0)<(0);
       $452 = $451 << 31 >> 31;
       $453 = ($423|0)<($452|0);
       $454 = ($420>>>0)<($450>>>0);
       $455 = ($423|0)==($452|0);
       $456 = $455 & $454;
       $457 = $453 | $456;
       if ($457) {
        $458 = (___errno_location()|0);
        HEAP32[$458>>2] = 34;
        $459 = (+($sign$0|0));
        $460 = $459 * 2.2250738585072014E-308;
        $461 = $460 * 2.2250738585072014E-308;
        $$0$i25 = $461;
        break;
       }
       $462 = ($j$067$i|0)==(0);
       if ($462) {
        $k$3$i = $k$063$i;
       } else {
        $463 = ($j$067$i|0)<(9);
        if ($463) {
         $464 = (($x$i) + ($k$063$i<<2)|0);
         $$promoted$i = HEAP32[$464>>2]|0;
         $466 = $$promoted$i;$j$3110$i = $j$067$i;
         while(1) {
          $465 = ($466*10)|0;
          $467 = (($j$3110$i) + 1)|0;
          $exitcond$i = ($467|0)==(9);
          if ($exitcond$i) {
           $$lcssa323 = $465;
           break;
          } else {
           $466 = $465;$j$3110$i = $467;
          }
         }
         HEAP32[$464>>2] = $$lcssa323;
        }
        $468 = (($k$063$i) + 1)|0;
        $k$3$i = $468;
       }
       $469 = ($lnz$057$i|0)<(9);
       if ($469) {
        $470 = ($lnz$057$i|0)<=($420|0);
        $471 = ($420|0)<(18);
        $or$cond3$i = $470 & $471;
        if ($or$cond3$i) {
         $472 = ($420|0)==(9);
         if ($472) {
          $473 = (+($sign$0|0));
          $474 = HEAP32[$x$i>>2]|0;
          $475 = (+($474>>>0));
          $476 = $473 * $475;
          $$0$i25 = $476;
          break;
         }
         $477 = ($420|0)<(9);
         if ($477) {
          $478 = (+($sign$0|0));
          $479 = HEAP32[$x$i>>2]|0;
          $480 = (+($479>>>0));
          $481 = $478 * $480;
          $482 = (8 - ($420))|0;
          $483 = (3816 + ($482<<2)|0);
          $484 = HEAP32[$483>>2]|0;
          $485 = (+($484|0));
          $486 = $481 / $485;
          $$0$i25 = $486;
          break;
         }
         $$neg32$i = (($bits$0$ph) + 27)|0;
         $487 = Math_imul($420, -3)|0;
         $488 = (($$neg32$i) + ($487))|0;
         $489 = ($488|0)>(30);
         $$pre$i17 = HEAP32[$x$i>>2]|0;
         $490 = $$pre$i17 >>> $488;
         $491 = ($490|0)==(0);
         $or$cond216$i = $489 | $491;
         if ($or$cond216$i) {
          $492 = (+($sign$0|0));
          $493 = (+($$pre$i17>>>0));
          $494 = $492 * $493;
          $495 = (($420) + -10)|0;
          $496 = (3816 + ($495<<2)|0);
          $497 = HEAP32[$496>>2]|0;
          $498 = (+($497|0));
          $499 = $494 * $498;
          $$0$i25 = $499;
          break;
         }
        }
       }
       $500 = (($420|0) % 9)&-1;
       $501 = ($500|0)==(0);
       if ($501) {
        $a$2$ph38$i = 0;$e2$0$ph$i = 0;$rp$2$ph36$i = $420;$z$1$ph37$i = $k$3$i;
       } else {
        $502 = ($420|0)>(-1);
        $503 = (($500) + 9)|0;
        $504 = $502 ? $500 : $503;
        $505 = (8 - ($504))|0;
        $506 = (3816 + ($505<<2)|0);
        $507 = HEAP32[$506>>2]|0;
        $508 = ($k$3$i|0)==(0);
        if ($508) {
         $a$0$lcssa177$i = 0;$rp$0$lcssa178$i = $420;$z$0$i = 0;
        } else {
         $509 = (1000000000 / ($507|0))&-1;
         $a$0101$i = 0;$carry$0103$i = 0;$k$4102$i = 0;$rp$0100$i = $420;
         while(1) {
          $510 = (($x$i) + ($k$4102$i<<2)|0);
          $511 = HEAP32[$510>>2]|0;
          $512 = (($511>>>0) % ($507>>>0))&-1;
          $513 = (($511>>>0) / ($507>>>0))&-1;
          $514 = (($513) + ($carry$0103$i))|0;
          HEAP32[$510>>2] = $514;
          $515 = Math_imul($512, $509)|0;
          $516 = ($k$4102$i|0)==($a$0101$i|0);
          $517 = ($514|0)==(0);
          $or$cond16$i = $516 & $517;
          $518 = (($k$4102$i) + 1)|0;
          $519 = $518 & 127;
          $520 = (($rp$0100$i) + -9)|0;
          $rp$1$i18 = $or$cond16$i ? $520 : $rp$0100$i;
          $a$1$i = $or$cond16$i ? $519 : $a$0101$i;
          $521 = ($518|0)==($k$3$i|0);
          if ($521) {
           $$lcssa322 = $515;$a$1$i$lcssa = $a$1$i;$rp$1$i18$lcssa = $rp$1$i18;
           break;
          } else {
           $a$0101$i = $a$1$i;$carry$0103$i = $515;$k$4102$i = $518;$rp$0100$i = $rp$1$i18;
          }
         }
         $522 = ($$lcssa322|0)==(0);
         if ($522) {
          $a$0$lcssa177$i = $a$1$i$lcssa;$rp$0$lcssa178$i = $rp$1$i18$lcssa;$z$0$i = $k$3$i;
         } else {
          $523 = (($k$3$i) + 1)|0;
          $524 = (($x$i) + ($k$3$i<<2)|0);
          HEAP32[$524>>2] = $$lcssa322;
          $a$0$lcssa177$i = $a$1$i$lcssa;$rp$0$lcssa178$i = $rp$1$i18$lcssa;$z$0$i = $523;
         }
        }
        $525 = (9 - ($504))|0;
        $526 = (($525) + ($rp$0$lcssa178$i))|0;
        $a$2$ph38$i = $a$0$lcssa177$i;$e2$0$ph$i = 0;$rp$2$ph36$i = $526;$z$1$ph37$i = $z$0$i;
       }
       L296: while(1) {
        $527 = ($rp$2$ph36$i|0)<(18);
        $528 = (($x$i) + ($a$2$ph38$i<<2)|0);
        if ($527) {
         $e2$0$us$i = $e2$0$ph$i;$z$1$us$i = $z$1$ph37$i;
         while(1) {
          $530 = (($z$1$us$i) + 127)|0;
          $carry1$0$us$i = 0;$k$5$in$us$i = $530;$z$2$us$i = $z$1$us$i;
          while(1) {
           $k$5$us$i = $k$5$in$us$i & 127;
           $531 = (($x$i) + ($k$5$us$i<<2)|0);
           $532 = HEAP32[$531>>2]|0;
           $533 = (_bitshift64Shl(($532|0),0,29)|0);
           $534 = tempRet0;
           $535 = (_i64Add(($533|0),($534|0),($carry1$0$us$i|0),0)|0);
           $536 = tempRet0;
           $537 = ($536>>>0)>(0);
           $538 = ($535>>>0)>(1000000000);
           $539 = ($536|0)==(0);
           $540 = $539 & $538;
           $541 = $537 | $540;
           if ($541) {
            $542 = (___udivdi3(($535|0),($536|0),1000000000,0)|0);
            $543 = tempRet0;
            $544 = (___uremdi3(($535|0),($536|0),1000000000,0)|0);
            $545 = tempRet0;
            $$sink$off0$us$i = $544;$carry1$1$us$i = $542;
           } else {
            $$sink$off0$us$i = $535;$carry1$1$us$i = 0;
           }
           HEAP32[$531>>2] = $$sink$off0$us$i;
           $546 = (($z$2$us$i) + 127)|0;
           $547 = $546 & 127;
           $548 = ($k$5$us$i|0)!=($547|0);
           $549 = ($k$5$us$i|0)==($a$2$ph38$i|0);
           $or$cond17$us$i = $548 | $549;
           $550 = ($$sink$off0$us$i|0)==(0);
           $k$5$z$2$us$i = $550 ? $k$5$us$i : $z$2$us$i;
           $z$3$us$i = $or$cond17$us$i ? $z$2$us$i : $k$5$z$2$us$i;
           $551 = (($k$5$us$i) + -1)|0;
           if ($549) {
            $carry1$1$us$i$lcssa = $carry1$1$us$i;$z$3$us$i$lcssa = $z$3$us$i;
            break;
           } else {
            $carry1$0$us$i = $carry1$1$us$i;$k$5$in$us$i = $551;$z$2$us$i = $z$3$us$i;
           }
          }
          $552 = (($e2$0$us$i) + -29)|0;
          $553 = ($carry1$1$us$i$lcssa|0)==(0);
          if ($553) {
           $e2$0$us$i = $552;$z$1$us$i = $z$3$us$i$lcssa;
          } else {
           $$lcssa50$i = $552;$carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa;$z$3$lcssa$lcssa$i = $z$3$us$i$lcssa;
           break;
          }
         }
        } else {
         $529 = ($rp$2$ph36$i|0)==(18);
         if ($529) {
          $e2$0$us84$i = $e2$0$ph$i;$z$1$us85$i = $z$1$ph37$i;
         } else {
          $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$ph$i;$rp$3$ph34$i = $rp$2$ph36$i;$z$5$ph$i = $z$1$ph37$i;
          break;
         }
         while(1) {
          $554 = HEAP32[$528>>2]|0;
          $555 = ($554>>>0)<(9007199);
          if (!($555)) {
           $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$us84$i;$rp$3$ph34$i = 18;$z$5$ph$i = $z$1$us85$i;
           break L296;
          }
          $556 = (($z$1$us85$i) + 127)|0;
          $carry1$0$us89$i = 0;$k$5$in$us88$i = $556;$z$2$us87$i = $z$1$us85$i;
          while(1) {
           $k$5$us90$i = $k$5$in$us88$i & 127;
           $557 = (($x$i) + ($k$5$us90$i<<2)|0);
           $558 = HEAP32[$557>>2]|0;
           $559 = (_bitshift64Shl(($558|0),0,29)|0);
           $560 = tempRet0;
           $561 = (_i64Add(($559|0),($560|0),($carry1$0$us89$i|0),0)|0);
           $562 = tempRet0;
           $563 = ($562>>>0)>(0);
           $564 = ($561>>>0)>(1000000000);
           $565 = ($562|0)==(0);
           $566 = $565 & $564;
           $567 = $563 | $566;
           if ($567) {
            $568 = (___udivdi3(($561|0),($562|0),1000000000,0)|0);
            $569 = tempRet0;
            $570 = (___uremdi3(($561|0),($562|0),1000000000,0)|0);
            $571 = tempRet0;
            $$sink$off0$us93$i = $570;$carry1$1$us94$i = $568;
           } else {
            $$sink$off0$us93$i = $561;$carry1$1$us94$i = 0;
           }
           HEAP32[$557>>2] = $$sink$off0$us93$i;
           $572 = (($z$2$us87$i) + 127)|0;
           $573 = $572 & 127;
           $574 = ($k$5$us90$i|0)!=($573|0);
           $575 = ($k$5$us90$i|0)==($a$2$ph38$i|0);
           $or$cond17$us95$i = $574 | $575;
           $576 = ($$sink$off0$us93$i|0)==(0);
           $k$5$z$2$us96$i = $576 ? $k$5$us90$i : $z$2$us87$i;
           $z$3$us97$i = $or$cond17$us95$i ? $z$2$us87$i : $k$5$z$2$us96$i;
           $577 = (($k$5$us90$i) + -1)|0;
           if ($575) {
            $carry1$1$us94$i$lcssa = $carry1$1$us94$i;$z$3$us97$i$lcssa = $z$3$us97$i;
            break;
           } else {
            $carry1$0$us89$i = $carry1$1$us94$i;$k$5$in$us88$i = $577;$z$2$us87$i = $z$3$us97$i;
           }
          }
          $578 = (($e2$0$us84$i) + -29)|0;
          $579 = ($carry1$1$us94$i$lcssa|0)==(0);
          if ($579) {
           $e2$0$us84$i = $578;$z$1$us85$i = $z$3$us97$i$lcssa;
          } else {
           $$lcssa50$i = $578;$carry1$1$lcssa$lcssa$i = $carry1$1$us94$i$lcssa;$z$3$lcssa$lcssa$i = $z$3$us97$i$lcssa;
           break;
          }
         }
        }
        $580 = (($rp$2$ph36$i) + 9)|0;
        $581 = (($a$2$ph38$i) + 127)|0;
        $582 = $581 & 127;
        $583 = ($582|0)==($z$3$lcssa$lcssa$i|0);
        if ($583) {
         $584 = (($z$3$lcssa$lcssa$i) + 127)|0;
         $585 = $584 & 127;
         $586 = (($x$i) + ($585<<2)|0);
         $587 = HEAP32[$586>>2]|0;
         $588 = (($z$3$lcssa$lcssa$i) + 126)|0;
         $589 = $588 & 127;
         $590 = (($x$i) + ($589<<2)|0);
         $591 = HEAP32[$590>>2]|0;
         $592 = $591 | $587;
         HEAP32[$590>>2] = $592;
         $z$4$i = $585;
        } else {
         $z$4$i = $z$3$lcssa$lcssa$i;
        }
        $593 = (($x$i) + ($582<<2)|0);
        HEAP32[$593>>2] = $carry1$1$lcssa$lcssa$i;
        $a$2$ph38$i = $582;$e2$0$ph$i = $$lcssa50$i;$rp$2$ph36$i = $580;$z$1$ph37$i = $z$4$i;
       }
       L321: while(1) {
        $624 = (($z$5$ph$i) + 1)|0;
        $621 = $624 & 127;
        $625 = (($z$5$ph$i) + 127)|0;
        $626 = $625 & 127;
        $627 = (($x$i) + ($626<<2)|0);
        $a$3$ph183$i = $a$3$ph$i;$e2$1$ph182$i = $e2$1$ph$i;$rp$3$ph$i = $rp$3$ph34$i;
        while(1) {
         $628 = ($rp$3$ph$i|0)==(18);
         $629 = ($rp$3$ph$i|0)>(27);
         $$18$i = $629 ? 9 : 1;
         $$not$i = $628 ^ 1;
         $a$3$i = $a$3$ph183$i;$e2$1$i = $e2$1$ph182$i;
         while(1) {
          $594 = $a$3$i & 127;
          $595 = ($594|0)==($z$5$ph$i|0);
          do {
           if ($595) {
            label = 220;
           } else {
            $596 = (($x$i) + ($594<<2)|0);
            $597 = HEAP32[$596>>2]|0;
            $598 = ($597>>>0)<(9007199);
            if ($598) {
             label = 220;
             break;
            }
            $599 = ($597>>>0)>(9007199);
            if ($599) {
             break;
            }
            $600 = (($a$3$i) + 1)|0;
            $601 = $600 & 127;
            $602 = ($601|0)==($z$5$ph$i|0);
            if ($602) {
             label = 220;
             break;
            }
            $708 = (($x$i) + ($601<<2)|0);
            $709 = HEAP32[$708>>2]|0;
            $710 = ($709>>>0)<(254740991);
            if ($710) {
             label = 220;
             break;
            }
            $711 = ($709>>>0)>(254740991);
            $brmerge$i26 = $711 | $$not$i;
            if (!($brmerge$i26)) {
             $635 = $594;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $z$5$ph$i;
             break L321;
            }
           }
          } while(0);
          if ((label|0) == 220) {
           label = 0;
           if ($628) {
            label = 221;
            break L321;
           }
          }
          $603 = (($e2$1$i) + ($$18$i))|0;
          $604 = ($a$3$i|0)==($z$5$ph$i|0);
          if ($604) {
           $a$3$i = $z$5$ph$i;$e2$1$i = $603;
          } else {
           $$lcssa308 = $603;$a$3$i$lcssa300 = $a$3$i;
           break;
          }
         }
         $605 = 1 << $$18$i;
         $606 = (($605) + -1)|0;
         $607 = 1000000000 >>> $$18$i;
         $a$478$i = $a$3$i$lcssa300;$carry3$081$i = 0;$k$679$i = $a$3$i$lcssa300;$rp$477$i = $rp$3$ph$i;
         while(1) {
          $608 = (($x$i) + ($k$679$i<<2)|0);
          $609 = HEAP32[$608>>2]|0;
          $610 = $609 & $606;
          $611 = $609 >>> $$18$i;
          $612 = (($611) + ($carry3$081$i))|0;
          HEAP32[$608>>2] = $612;
          $613 = Math_imul($610, $607)|0;
          $614 = ($k$679$i|0)==($a$478$i|0);
          $615 = ($612|0)==(0);
          $or$cond19$i = $614 & $615;
          $616 = (($k$679$i) + 1)|0;
          $617 = $616 & 127;
          $618 = (($rp$477$i) + -9)|0;
          $rp$5$i = $or$cond19$i ? $618 : $rp$477$i;
          $a$5$i = $or$cond19$i ? $617 : $a$478$i;
          $619 = ($617|0)==($z$5$ph$i|0);
          if ($619) {
           $$lcssa309 = $613;$a$5$i$lcssa = $a$5$i;$rp$5$i$lcssa = $rp$5$i;
           break;
          } else {
           $a$478$i = $a$5$i;$carry3$081$i = $613;$k$679$i = $617;$rp$477$i = $rp$5$i;
          }
         }
         $620 = ($$lcssa309|0)==(0);
         if ($620) {
          $a$3$ph183$i = $a$5$i$lcssa;$e2$1$ph182$i = $$lcssa308;$rp$3$ph$i = $rp$5$i$lcssa;
          continue;
         }
         $622 = ($621|0)==($a$5$i$lcssa|0);
         if (!($622)) {
          $$lcssa308$lcssa = $$lcssa308;$$lcssa309$lcssa = $$lcssa309;$a$5$i$lcssa$lcssa = $a$5$i$lcssa;$rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
          break;
         }
         $630 = HEAP32[$627>>2]|0;
         $631 = $630 | 1;
         HEAP32[$627>>2] = $631;
         $a$3$ph183$i = $a$5$i$lcssa;$e2$1$ph182$i = $$lcssa308;$rp$3$ph$i = $rp$5$i$lcssa;
        }
        $623 = (($x$i) + ($z$5$ph$i<<2)|0);
        HEAP32[$623>>2] = $$lcssa309$lcssa;
        $a$3$ph$i = $a$5$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa308$lcssa;$rp$3$ph34$i = $rp$5$i$lcssa$lcssa;$z$5$ph$i = $621;
       }
       if ((label|0) == 221) {
        if ($595) {
         $632 = (($621) + -1)|0;
         $633 = (($x$i) + ($632<<2)|0);
         HEAP32[$633>>2] = 0;
         $635 = $z$5$ph$i;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $621;
        } else {
         $635 = $594;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $z$5$ph$i;
        }
       }
       $634 = (($x$i) + ($635<<2)|0);
       $636 = HEAP32[$634>>2]|0;
       $637 = (+($636>>>0));
       $638 = (($a$3$i301) + 1)|0;
       $639 = $638 & 127;
       $640 = ($639|0)==($z$7$i|0);
       if ($640) {
        $697 = (($a$3$i301) + 2)|0;
        $698 = $697 & 127;
        $699 = (($698) + -1)|0;
        $700 = (($x$i) + ($699<<2)|0);
        HEAP32[$700>>2] = 0;
        $z$7$1$i = $698;
       } else {
        $z$7$1$i = $z$7$i;
       }
       $701 = $637 * 1.0E+9;
       $702 = (($x$i) + ($639<<2)|0);
       $703 = HEAP32[$702>>2]|0;
       $704 = (+($703>>>0));
       $705 = $701 + $704;
       $661 = (+($sign$0|0));
       $643 = $661 * $705;
       $681 = (($e2$1$i298) + 53)|0;
       $687 = (($681) - ($emin$0$ph))|0;
       $688 = ($687|0)<($bits$0$ph|0);
       $706 = ($687|0)<(0);
       $$$i = $706 ? 0 : $687;
       $denormal$0$i = $688&1;
       $$010$i = $688 ? $$$i : $bits$0$ph;
       $707 = ($$010$i|0)<(53);
       if ($707) {
        $641 = (105 - ($$010$i))|0;
        $642 = (+_scalbn(1.0,$641));
        $644 = (+_copysignl($642,$643));
        $645 = (53 - ($$010$i))|0;
        $646 = (+_scalbn(1.0,$645));
        $647 = (+_fmodl($643,$646));
        $648 = $643 - $647;
        $649 = $644 + $648;
        $bias$0$i23 = $644;$frac$0$i = $647;$y$1$i22 = $649;
       } else {
        $bias$0$i23 = 0.0;$frac$0$i = 0.0;$y$1$i22 = $643;
       }
       $650 = (($a$3$i301) + 2)|0;
       $651 = $650 & 127;
       $652 = ($651|0)==($z$7$1$i|0);
       do {
        if ($652) {
         $frac$2$i = $frac$0$i;
        } else {
         $653 = (($x$i) + ($651<<2)|0);
         $654 = HEAP32[$653>>2]|0;
         $655 = ($654>>>0)<(500000000);
         do {
          if ($655) {
           $656 = ($654|0)==(0);
           if ($656) {
            $657 = (($a$3$i301) + 3)|0;
            $658 = $657 & 127;
            $659 = ($658|0)==($z$7$1$i|0);
            if ($659) {
             $frac$1$i = $frac$0$i;
             break;
            }
           }
           $660 = $661 * 0.25;
           $662 = $660 + $frac$0$i;
           $frac$1$i = $662;
          } else {
           $663 = ($654>>>0)>(500000000);
           if ($663) {
            $664 = $661 * 0.75;
            $665 = $664 + $frac$0$i;
            $frac$1$i = $665;
            break;
           }
           $666 = (($a$3$i301) + 3)|0;
           $667 = $666 & 127;
           $668 = ($667|0)==($z$7$1$i|0);
           if ($668) {
            $669 = $661 * 0.5;
            $670 = $669 + $frac$0$i;
            $frac$1$i = $670;
            break;
           } else {
            $671 = $661 * 0.75;
            $672 = $671 + $frac$0$i;
            $frac$1$i = $672;
            break;
           }
          }
         } while(0);
         $673 = (53 - ($$010$i))|0;
         $674 = ($673|0)>(1);
         if (!($674)) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $675 = (+_fmodl($frac$1$i,1.0));
         $676 = $675 != 0.0;
         if ($676) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $677 = $frac$1$i + 1.0;
         $frac$2$i = $677;
        }
       } while(0);
       $678 = $y$1$i22 + $frac$2$i;
       $679 = $678 - $bias$0$i23;
       $680 = $681 & 2147483647;
       $682 = (-2 - ($sum$i))|0;
       $683 = ($680|0)>($682|0);
       do {
        if ($683) {
         $684 = (+Math_abs((+$679)));
         $685 = !($684 >= 9007199254740992.0);
         if ($685) {
          $denormal$2$i = $denormal$0$i;$e2$2$i = $e2$1$i298;$y$2$i24 = $679;
         } else {
          $686 = ($$010$i|0)==($687|0);
          $or$cond20$i = $688 & $686;
          $denormal$1$i = $or$cond20$i ? 0 : $denormal$0$i;
          $689 = $679 * 0.5;
          $690 = (($e2$1$i298) + 1)|0;
          $denormal$2$i = $denormal$1$i;$e2$2$i = $690;$y$2$i24 = $689;
         }
         $691 = (($e2$2$i) + 50)|0;
         $692 = ($691|0)>($324|0);
         if (!($692)) {
          $693 = ($denormal$2$i|0)!=(0);
          $694 = $frac$2$i != 0.0;
          $or$cond8$i = $694 & $693;
          if (!($or$cond8$i)) {
           $e2$3$i = $e2$2$i;$y$3$i = $y$2$i24;
           break;
          }
         }
         $695 = (___errno_location()|0);
         HEAP32[$695>>2] = 34;
         $e2$3$i = $e2$2$i;$y$3$i = $y$2$i24;
        } else {
         $e2$3$i = $e2$1$i298;$y$3$i = $679;
        }
       } while(0);
       $696 = (+_scalbnl($y$3$i,$e2$3$i));
       $$0$i25 = $696;
      }
     } while(0);
     $$0 = $$0$i25;
     STACKTOP = sp;return (+$$0);
    }
   } while(0);
   $103 = HEAP32[$1>>2]|0;
   $104 = ($103|0)==(0|0);
   if (!($104)) {
    $105 = HEAP32[$0>>2]|0;
    $106 = ((($105)) + -1|0);
    HEAP32[$0>>2] = $106;
   }
   $107 = (___errno_location()|0);
   HEAP32[$107>>2] = 22;
   ___shlim($f,0);
   $$0 = 0.0;
   STACKTOP = sp;return (+$$0);
  }
 } while(0);
 if ((label|0) == 23) {
  $41 = HEAP32[$1>>2]|0;
  $42 = ($41|0)==(0|0);
  if (!($42)) {
   $43 = HEAP32[$0>>2]|0;
   $44 = ((($43)) + -1|0);
   HEAP32[$0>>2] = $44;
  }
  $notlhs = ($pok|0)==(0);
  $notrhs = ($i$0$lcssa>>>0)<(4);
  $or$cond9$not = $notrhs | $notlhs;
  $brmerge = $or$cond9$not | $42;
  if (!($brmerge)) {
   $$promoted = HEAP32[$0>>2]|0;
   $46 = $$promoted;$i$1 = $i$0$lcssa;
   while(1) {
    $45 = ((($46)) + -1|0);
    $47 = (($i$1) + -1)|0;
    $$old8 = ($47>>>0)>(3);
    if ($$old8) {
     $46 = $45;$i$1 = $47;
    } else {
     $$lcssa = $45;
     break;
    }
   }
   HEAP32[$0>>2] = $$lcssa;
  }
 }
 $48 = (+($sign$0|0));
 $49 = $48 * inf;
 $50 = $49;
 $$0 = $50;
 STACKTOP = sp;return (+$$0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = ((($f)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($f)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ((($f)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if ($or$cond) {
  $11 = (($4) + ($lim)|0);
  $12 = ((($f)) + 100|0);
  HEAP32[$12>>2] = $11;
  return;
 } else {
  $13 = ((($f)) + 100|0);
  HEAP32[$13>>2] = $5;
  return;
 }
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert3 = 0, $$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = ((($f)) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = ((($f)) + 8|0);
   if ($10) {
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $11 = $$pre;
    $26 = $$pre;$41 = $11;
    label = 9;
   } else {
    $12 = HEAP32[$$phi$trans$insert>>2]|0;
    $13 = ((($f)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $12;
    $16 = $14;
    $17 = (($15) - ($16))|0;
    $18 = ((($f)) + 108|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (($9) - ($19))|0;
    $21 = (($20) + -1)|0;
    $22 = ($17|0)>($21|0);
    if ($22) {
     $23 = (($14) + ($21)|0);
     $24 = ((($f)) + 100|0);
     HEAP32[$24>>2] = $23;
     $27 = $12;
    } else {
     $26 = $15;$41 = $12;
     label = 9;
    }
   }
   if ((label|0) == 9) {
    $25 = ((($f)) + 100|0);
    HEAP32[$25>>2] = $26;
    $27 = $41;
   }
   $28 = ($27|0)==(0|0);
   $$phi$trans$insert3 = ((($f)) + 4|0);
   $$pre4 = HEAP32[$$phi$trans$insert3>>2]|0;
   if (!($28)) {
    $29 = $27;
    $30 = $$pre4;
    $31 = ((($f)) + 108|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (($29) + 1)|0;
    $34 = (($33) - ($30))|0;
    $35 = (($34) + ($32))|0;
    HEAP32[$31>>2] = $35;
   }
   $36 = ((($$pre4)) + -1|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($38|0)==($6|0);
   if ($39) {
    $$0 = $6;
    return ($$0|0);
   }
   $40 = $6&255;
   HEAP8[$36>>0] = $40;
   $$0 = $6;
   return ($$0|0);
  }
 }
 $8 = ((($f)) + 100|0);
 HEAP32[$8>>2] = 0;
 $$0 = -1;
 return ($$0|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & -2147483648;
 $6 = $5 | $4;
 HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $6;$7 = +HEAPF64[tempDoublePtr>>3];
 return (+$7);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $$x = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0;
 var $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 if (!($15)) {
  $16 = $3 & 2147483647;
  $17 = ($16>>>0)>(2146435072);
  $18 = ($2>>>0)>(0);
  $19 = ($16|0)==(2146435072);
  $20 = $19 & $18;
  $21 = $17 | $20;
  $22 = ($6|0)==(2047);
  $or$cond = $21 | $22;
  if (!($or$cond)) {
   $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
   $26 = tempRet0;
   $27 = ($26>>>0)>($12>>>0);
   $28 = ($25>>>0)>($11>>>0);
   $29 = ($26|0)==($12|0);
   $30 = $29 & $28;
   $31 = $27 | $30;
   if (!($31)) {
    $32 = ($25|0)==($11|0);
    $33 = ($26|0)==($12|0);
    $34 = $32 & $33;
    $35 = $x * 0.0;
    $$x = $34 ? $35 : $x;
    return (+$$x);
   }
   $36 = ($6|0)==(0);
   if ($36) {
    $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
    $38 = tempRet0;
    $39 = ($38|0)>(-1);
    $40 = ($37>>>0)>(4294967295);
    $41 = ($38|0)==(-1);
    $42 = $41 & $40;
    $43 = $39 | $42;
    if ($43) {
     $45 = $37;$46 = $38;$ex$026 = 0;
     while(1) {
      $44 = (($ex$026) + -1)|0;
      $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
      $48 = tempRet0;
      $49 = ($48|0)>(-1);
      $50 = ($47>>>0)>(4294967295);
      $51 = ($48|0)==(-1);
      $52 = $51 & $50;
      $53 = $49 | $52;
      if ($53) {
       $45 = $47;$46 = $48;$ex$026 = $44;
      } else {
       $ex$0$lcssa = $44;
       break;
      }
     }
    } else {
     $ex$0$lcssa = 0;
    }
    $54 = (1 - ($ex$0$lcssa))|0;
    $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
    $56 = tempRet0;
    $83 = $55;$84 = $56;$ex$1 = $ex$0$lcssa;
   } else {
    $57 = $1 & 1048575;
    $58 = $57 | 1048576;
    $83 = $0;$84 = $58;$ex$1 = $6;
   }
   $59 = ($9|0)==(0);
   if ($59) {
    $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
    $61 = tempRet0;
    $62 = ($61|0)>(-1);
    $63 = ($60>>>0)>(4294967295);
    $64 = ($61|0)==(-1);
    $65 = $64 & $63;
    $66 = $62 | $65;
    if ($66) {
     $68 = $60;$69 = $61;$ey$020 = 0;
     while(1) {
      $67 = (($ey$020) + -1)|0;
      $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
      $71 = tempRet0;
      $72 = ($71|0)>(-1);
      $73 = ($70>>>0)>(4294967295);
      $74 = ($71|0)==(-1);
      $75 = $74 & $73;
      $76 = $72 | $75;
      if ($76) {
       $68 = $70;$69 = $71;$ey$020 = $67;
      } else {
       $ey$0$lcssa = $67;
       break;
      }
     }
    } else {
     $ey$0$lcssa = 0;
    }
    $77 = (1 - ($ey$0$lcssa))|0;
    $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
    $79 = tempRet0;
    $85 = $78;$86 = $79;$ey$1$ph = $ey$0$lcssa;
   } else {
    $80 = $3 & 1048575;
    $81 = $80 | 1048576;
    $85 = $2;$86 = $81;$ey$1$ph = $9;
   }
   $82 = ($ex$1|0)>($ey$1$ph|0);
   $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
   $88 = tempRet0;
   $89 = ($88|0)>(-1);
   $90 = ($87>>>0)>(4294967295);
   $91 = ($88|0)==(-1);
   $92 = $91 & $90;
   $93 = $89 | $92;
   L23: do {
    if ($82) {
     $152 = $93;$153 = $87;$154 = $88;$94 = $83;$96 = $84;$ex$212 = $ex$1;
     while(1) {
      if ($152) {
       $95 = ($94|0)==($85|0);
       $97 = ($96|0)==($86|0);
       $98 = $95 & $97;
       if ($98) {
        break;
       } else {
        $100 = $153;$101 = $154;
       }
      } else {
       $100 = $94;$101 = $96;
      }
      $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
      $103 = tempRet0;
      $104 = (($ex$212) + -1)|0;
      $105 = ($104|0)>($ey$1$ph|0);
      $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
      $107 = tempRet0;
      $108 = ($107|0)>(-1);
      $109 = ($106>>>0)>(4294967295);
      $110 = ($107|0)==(-1);
      $111 = $110 & $109;
      $112 = $108 | $111;
      if ($105) {
       $152 = $112;$153 = $106;$154 = $107;$94 = $102;$96 = $103;$ex$212 = $104;
      } else {
       $$lcssa7 = $112;$113 = $102;$115 = $103;$155 = $106;$156 = $107;$ex$2$lcssa = $104;
       break L23;
      }
     }
     $99 = $x * 0.0;
     $$0 = $99;
     return (+$$0);
    } else {
     $$lcssa7 = $93;$113 = $83;$115 = $84;$155 = $87;$156 = $88;$ex$2$lcssa = $ex$1;
    }
   } while(0);
   if ($$lcssa7) {
    $114 = ($113|0)==($85|0);
    $116 = ($115|0)==($86|0);
    $117 = $114 & $116;
    if ($117) {
     $125 = $x * 0.0;
     $$0 = $125;
     return (+$$0);
    } else {
     $118 = $156;$120 = $155;
    }
   } else {
    $118 = $115;$120 = $113;
   }
   $119 = ($118>>>0)<(1048576);
   $121 = ($120>>>0)<(0);
   $122 = ($118|0)==(1048576);
   $123 = $122 & $121;
   $124 = $119 | $123;
   if ($124) {
    $126 = $120;$127 = $118;$ex$39 = $ex$2$lcssa;
    while(1) {
     $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
     $129 = tempRet0;
     $130 = (($ex$39) + -1)|0;
     $131 = ($129>>>0)<(1048576);
     $132 = ($128>>>0)<(0);
     $133 = ($129|0)==(1048576);
     $134 = $133 & $132;
     $135 = $131 | $134;
     if ($135) {
      $126 = $128;$127 = $129;$ex$39 = $130;
     } else {
      $137 = $128;$138 = $129;$ex$3$lcssa = $130;
      break;
     }
    }
   } else {
    $137 = $120;$138 = $118;$ex$3$lcssa = $ex$2$lcssa;
   }
   $136 = ($ex$3$lcssa|0)>(0);
   if ($136) {
    $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
    $140 = tempRet0;
    $141 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
    $142 = tempRet0;
    $143 = $139 | $141;
    $144 = $140 | $142;
    $149 = $144;$151 = $143;
   } else {
    $145 = (1 - ($ex$3$lcssa))|0;
    $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
    $147 = tempRet0;
    $149 = $147;$151 = $146;
   }
   $148 = $149 | $10;
   HEAP32[tempDoublePtr>>2] = $151;HEAP32[tempDoublePtr+4>>2] = $148;$150 = +HEAPF64[tempDoublePtr>>3];
   $$0 = $150;
   return (+$$0);
  }
 }
 $23 = $x * $y;
 $24 = $23 / $23;
 $$0 = $24;
 return (+$$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 if ((($4|0) == 0)) {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  return (+$$0);
 } else if ((($4|0) == 2047)) {
  $$0 = $x;
  return (+$$0);
 } else {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
  return (+$$0);
 }
 return +(0.0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 1;
  return ($$0|0);
 }
 $1 = ($wc>>>0)<(128);
 if ($1) {
  $2 = $wc&255;
  HEAP8[$s>>0] = $2;
  $$0 = 1;
  return ($$0|0);
 }
 $3 = ($wc>>>0)<(2048);
 if ($3) {
  $4 = $wc >>> 6;
  $5 = $4 | 192;
  $6 = $5&255;
  $7 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $6;
  $8 = $wc & 63;
  $9 = $8 | 128;
  $10 = $9&255;
  HEAP8[$7>>0] = $10;
  $$0 = 2;
  return ($$0|0);
 }
 $11 = ($wc>>>0)<(55296);
 $12 = $wc & -8192;
 $13 = ($12|0)==(57344);
 $or$cond = $11 | $13;
 if ($or$cond) {
  $14 = $wc >>> 12;
  $15 = $14 | 224;
  $16 = $15&255;
  $17 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $16;
  $18 = $wc >>> 6;
  $19 = $18 & 63;
  $20 = $19 | 128;
  $21 = $20&255;
  $22 = ((($s)) + 2|0);
  HEAP8[$17>>0] = $21;
  $23 = $wc & 63;
  $24 = $23 | 128;
  $25 = $24&255;
  HEAP8[$22>>0] = $25;
  $$0 = 3;
  return ($$0|0);
 }
 $26 = (($wc) + -65536)|0;
 $27 = ($26>>>0)<(1048576);
 if ($27) {
  $28 = $wc >>> 18;
  $29 = $28 | 240;
  $30 = $29&255;
  $31 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $30;
  $32 = $wc >>> 12;
  $33 = $32 & 63;
  $34 = $33 | 128;
  $35 = $34&255;
  $36 = ((($s)) + 2|0);
  HEAP8[$31>>0] = $35;
  $37 = $wc >>> 6;
  $38 = $37 & 63;
  $39 = $38 | 128;
  $40 = $39&255;
  $41 = ((($s)) + 3|0);
  HEAP8[$36>>0] = $40;
  $42 = $wc & 63;
  $43 = $42 | 128;
  $44 = $43&255;
  HEAP8[$41>>0] = $44;
  $$0 = 4;
  return ($$0|0);
 } else {
  $45 = (___errno_location()|0);
  HEAP32[$45>>2] = 84;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = ((($f)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($f)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = ((($f)) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 31]($f,0,0)|0);
 }
 $13 = ((($f)) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($f)) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = ((($f)) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = ((($f)) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
  return ($$0|0);
 }
 $18 = $15 & 4;
 $19 = ($18|0)==(0);
 if ($19) {
  $$0 = -1;
  return ($$0|0);
 }
 $20 = $15 | 32;
 HEAP32[$f>>2] = $20;
 $$0 = -1;
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = ((($f)) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($f)) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($f)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($f)) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = ((($f)) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = $13;
  $17 = ((($f)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + ($18)|0);
  $20 = ((($f)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
  return ($$0|0);
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $c = sp;
 $0 = ((($f)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = ((($f)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 31]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa10 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $3 = (___towrite($f)|0);
   $4 = ($3|0)==(0);
   if ($4) {
    $$pre = HEAP32[$0>>2]|0;
    $7 = $$pre;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $7 = $1;
  }
 } while(0);
 $5 = ((($f)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $8 = $7;
 $9 = $6;
 $10 = (($8) - ($9))|0;
 $11 = ($10>>>0)<($l>>>0);
 if ($11) {
  $12 = ((($f)) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iiii[$13 & 31]($f,$s,$l)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = ((($f)) + 75|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)>(-1);
 L11: do {
  if ($17) {
   $i$0 = $l;
   while(1) {
    $18 = ($i$0|0)==(0);
    if ($18) {
     $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
     break L11;
    }
    $19 = (($i$0) + -1)|0;
    $20 = (($s) + ($19)|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = ($21<<24>>24)==(10);
    if ($22) {
     $i$0$lcssa10 = $i$0;
     break;
    } else {
     $i$0 = $19;
    }
   }
   $23 = ((($f)) + 36|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (FUNCTION_TABLE_iiii[$24 & 31]($f,$s,$i$0$lcssa10)|0);
   $26 = ($25>>>0)<($i$0$lcssa10>>>0);
   if ($26) {
    $$0 = $i$0$lcssa10;
    return ($$0|0);
   } else {
    $27 = (($s) + ($i$0$lcssa10)|0);
    $28 = (($l) - ($i$0$lcssa10))|0;
    $$pre6 = HEAP32[$5>>2]|0;
    $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa10;
    break;
   }
  } else {
   $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
  }
 } while(0);
 _memcpy(($29|0),($$02|0),($$01|0))|0;
 $30 = HEAP32[$5>>2]|0;
 $31 = (($30) + ($$01)|0);
 HEAP32[$5>>2] = $31;
 $32 = (($i$1) + ($$01))|0;
 $$0 = $32;
 return ($$0|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _MUSL_vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ((($f)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $6 = ((($f)) + 44|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$6>>2] = $internal_buf;
  $8 = ((($f)) + 28|0);
  HEAP32[$8>>2] = $internal_buf;
  $9 = ((($f)) + 20|0);
  HEAP32[$9>>2] = $internal_buf;
  HEAP32[$2>>2] = 80;
  $10 = ((($internal_buf)) + 80|0);
  $11 = ((($f)) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $13 = ($7|0)==(0|0);
  if ($13) {
   $ret$1 = $12;
  } else {
   $14 = ((($f)) + 36|0);
   $15 = HEAP32[$14>>2]|0;
   (FUNCTION_TABLE_iiii[$15 & 31]($f,0,0)|0);
   $16 = HEAP32[$9>>2]|0;
   $17 = ($16|0)==(0|0);
   $$ = $17 ? -1 : $12;
   HEAP32[$6>>2] = $7;
   HEAP32[$2>>2] = 0;
   HEAP32[$11>>2] = 0;
   HEAP32[$8>>2] = 0;
   HEAP32[$9>>2] = 0;
   $ret$1 = $$;
  }
 } else {
  $5 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $ret$1 = $5;
 }
 $$0 = $ret$1;
 STACKTOP = sp;return ($$0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $b = sp + 112|0;
 $f = sp;
 dest=$f; src=3848; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $$01 = $s;$$02 = $n;
 }
 $4 = $$01;
 $5 = (-2 - ($4))|0;
 $6 = ($$02>>>0)>($5>>>0);
 $$$02 = $6 ? $5 : $$02;
 $7 = ((($f)) + 48|0);
 HEAP32[$7>>2] = $$$02;
 $8 = ((($f)) + 20|0);
 HEAP32[$8>>2] = $$01;
 $9 = ((($f)) + 44|0);
 HEAP32[$9>>2] = $$01;
 $10 = (($$01) + ($$$02)|0);
 $11 = ((($f)) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = ((($f)) + 28|0);
 HEAP32[$12>>2] = $10;
 $13 = (_MUSL_vfprintf($f,$fmt,$ap)|0);
 $14 = ($$$02|0)==(0);
 if ($14) {
  $$0 = $13;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = HEAP32[$8>>2]|0;
 $16 = HEAP32[$11>>2]|0;
 $17 = ($15|0)==($16|0);
 $18 = $17 << 31 >> 31;
 $19 = (($15) + ($18)|0);
 HEAP8[$19>>0] = 0;
 $$0 = $13;
 STACKTOP = sp;return ($$0|0);
}
function _atof($s) {
 $s = $s|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtod($s,0));
 return (+$0);
}
function _strtod($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 dest=$f$i; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f$i)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f$i)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i,0);
 $4 = (+___floatscan($f$i,1,1));
 $5 = ((($f$i)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)!=(0);
 $15 = (($s) + ($12)|0);
 $16 = $14 ? $15 : $s;
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtold_l($s,$p,$loc) {
 $s = $s|0;
 $p = $p|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i$i = sp;
 dest=$f$i$i; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f$i$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i$i)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f$i$i)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f$i$i)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i$i,0);
 $4 = (+___floatscan($f$i$i,2,1));
 $5 = ((($f$i$i)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)!=(0);
 $15 = (($s) + ($12)|0);
 $16 = $14 ? $15 : $s;
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = ((($s)) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = ((($f$i)) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = ((($f$i)) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,-1,-1)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = ($7);
  STACKTOP = sp;return ($6|0);
 }
 $9 = ((($f$i)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = ($7);
 STACKTOP = sp;return ($6|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = ((($s)) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = ((($f$i)) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = ((($f$i)) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,0,-2147483648)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = ($7);
  STACKTOP = sp;return ($6|0);
 }
 $9 = ((($f$i)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = ($7);
 STACKTOP = sp;return ($6|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 L1: do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$0$lcssa44 = $$019;$s$0$lcssa43 = $s$020;
     label = 6;
     break L1;
    }
    $8 = ((($s$020)) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$0$lcssa = $9;$$lcssa = $13;$s$0$lcssa = $8;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
   label = 6;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $14 = HEAP8[$s$0$lcssa43>>0]|0;
   $15 = $c&255;
   $16 = ($14<<24>>24)==($15<<24>>24);
   if ($16) {
    $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
   } else {
    $17 = Math_imul($0, 16843009)|0;
    $18 = ($$0$lcssa44>>>0)>(3);
    L11: do {
     if ($18) {
      $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
      while(1) {
       $19 = HEAP32[$w$011>>2]|0;
       $20 = $19 ^ $17;
       $21 = (($20) + -16843009)|0;
       $22 = $20 & -2139062144;
       $23 = $22 ^ -2139062144;
       $24 = $23 & $21;
       $25 = ($24|0)==(0);
       if (!($25)) {
        $$110$lcssa = $$110;$w$011$lcssa = $w$011;
        break;
       }
       $26 = ((($w$011)) + 4|0);
       $27 = (($$110) + -4)|0;
       $28 = ($27>>>0)>(3);
       if ($28) {
        $$110 = $27;$w$011 = $26;
       } else {
        $$1$lcssa = $27;$w$0$lcssa = $26;
        label = 11;
        break L11;
       }
      }
      $$24 = $$110$lcssa;$s$15 = $w$011$lcssa;
     } else {
      $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $29 = ($$1$lcssa|0)==(0);
     if ($29) {
      $$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $$24 = $$1$lcssa;$s$15 = $w$0$lcssa;
     }
    }
    while(1) {
     $30 = HEAP8[$s$15>>0]|0;
     $31 = ($30<<24>>24)==($15<<24>>24);
     if ($31) {
      $$3 = $$24;$s$2 = $s$15;
      break L8;
     }
     $32 = ((($s$15)) + 1|0);
     $33 = (($$24) + -1)|0;
     $34 = ($33|0)==(0);
     if ($34) {
      $$3 = 0;$s$2 = $32;
      break;
     } else {
      $$24 = $33;$s$15 = $32;
     }
    }
   }
  }
 } while(0);
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $cond = 0, $newp$0 = 0, $notlhs = 0;
 var $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[(3040)>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if (!($or$cond30)) {
  _abort();
  // unreachable;
 }
 $$sum2728 = $2 | 4;
 $7 = (($p) + ($$sum2728)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[(3504)>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$0 = $p;
    return ($newp$0|0);
   }
  }
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$0 = $p;
   return ($newp$0|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $$sum23 = (($nb) + 4)|0;
  $26 = (($p) + ($$sum23)|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = HEAP32[$7>>2]|0;
  $29 = $28 | 1;
  HEAP32[$7>>2] = $29;
  _dispose_chunk($22,$20);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $30 = HEAP32[(3048)>>2]|0;
 $31 = ($3|0)==($30|0);
 if ($31) {
  $32 = HEAP32[(3036)>>2]|0;
  $33 = (($32) + ($2))|0;
  $34 = ($33>>>0)>($nb>>>0);
  if (!($34)) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $35 = (($33) - ($nb))|0;
  $36 = (($p) + ($nb)|0);
  $37 = $1 & 1;
  $38 = $37 | $nb;
  $39 = $38 | 2;
  HEAP32[$0>>2] = $39;
  $$sum22 = (($nb) + 4)|0;
  $40 = (($p) + ($$sum22)|0);
  $41 = $35 | 1;
  HEAP32[$40>>2] = $41;
  HEAP32[(3048)>>2] = $36;
  HEAP32[(3036)>>2] = $35;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $42 = HEAP32[(3044)>>2]|0;
 $43 = ($3|0)==($42|0);
 if ($43) {
  $44 = HEAP32[(3032)>>2]|0;
  $45 = (($44) + ($2))|0;
  $46 = ($45>>>0)<($nb>>>0);
  if ($46) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $47 = (($45) - ($nb))|0;
  $48 = ($47>>>0)>(15);
  if ($48) {
   $49 = (($p) + ($nb)|0);
   $50 = (($p) + ($45)|0);
   $51 = $1 & 1;
   $52 = $51 | $nb;
   $53 = $52 | 2;
   HEAP32[$0>>2] = $53;
   $$sum19 = (($nb) + 4)|0;
   $54 = (($p) + ($$sum19)|0);
   $55 = $47 | 1;
   HEAP32[$54>>2] = $55;
   HEAP32[$50>>2] = $47;
   $$sum20 = (($45) + 4)|0;
   $56 = (($p) + ($$sum20)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $57 & -2;
   HEAP32[$56>>2] = $58;
   $storemerge = $49;$storemerge21 = $47;
  } else {
   $59 = $1 & 1;
   $60 = $59 | $45;
   $61 = $60 | 2;
   HEAP32[$0>>2] = $61;
   $$sum17 = (($45) + 4)|0;
   $62 = (($p) + ($$sum17)|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 | 1;
   HEAP32[$62>>2] = $64;
   $storemerge = 0;$storemerge21 = 0;
  }
  HEAP32[(3032)>>2] = $storemerge21;
  HEAP32[(3044)>>2] = $storemerge;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $65 = $8 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $67 = $8 & -8;
 $68 = (($67) + ($2))|0;
 $69 = ($68>>>0)<($nb>>>0);
 if ($69) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $70 = (($68) - ($nb))|0;
 $71 = $8 >>> 3;
 $72 = ($8>>>0)<(256);
 do {
  if ($72) {
   $$sum15 = (($2) + 8)|0;
   $73 = (($p) + ($$sum15)|0);
   $74 = HEAP32[$73>>2]|0;
   $$sum16 = (($2) + 12)|0;
   $75 = (($p) + ($$sum16)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $71 << 1;
   $78 = (3064 + ($77<<2)|0);
   $79 = ($74|0)==($78|0);
   if (!($79)) {
    $80 = ($74>>>0)<($4>>>0);
    if ($80) {
     _abort();
     // unreachable;
    }
    $81 = ((($74)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($3|0);
    if (!($83)) {
     _abort();
     // unreachable;
    }
   }
   $84 = ($76|0)==($74|0);
   if ($84) {
    $85 = 1 << $71;
    $86 = $85 ^ -1;
    $87 = HEAP32[3024>>2]|0;
    $88 = $87 & $86;
    HEAP32[3024>>2] = $88;
    break;
   }
   $89 = ($76|0)==($78|0);
   if ($89) {
    $$pre = ((($76)) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $90 = ($76>>>0)<($4>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = ((($76)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==($3|0);
    if ($93) {
     $$pre$phiZ2D = $91;
    } else {
     _abort();
     // unreachable;
    }
   }
   $94 = ((($74)) + 12|0);
   HEAP32[$94>>2] = $76;
   HEAP32[$$pre$phiZ2D>>2] = $74;
  } else {
   $$sum = (($2) + 24)|0;
   $95 = (($p) + ($$sum)|0);
   $96 = HEAP32[$95>>2]|0;
   $$sum2 = (($2) + 12)|0;
   $97 = (($p) + ($$sum2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($3|0);
   do {
    if ($99) {
     $$sum4 = (($2) + 20)|0;
     $109 = (($p) + ($$sum4)|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$sum3 = (($2) + 16)|0;
      $112 = (($p) + ($$sum3)|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ($113|0)==(0|0);
      if ($114) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $113;$RP$0 = $112;
      }
     } else {
      $R$0 = $110;$RP$0 = $109;
     }
     while(1) {
      $115 = ((($R$0)) + 20|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($116|0)==(0|0);
      if (!($117)) {
       $R$0 = $116;$RP$0 = $115;
       continue;
      }
      $118 = ((($R$0)) + 16|0);
      $119 = HEAP32[$118>>2]|0;
      $120 = ($119|0)==(0|0);
      if ($120) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $119;$RP$0 = $118;
      }
     }
     $121 = ($RP$0$lcssa>>>0)<($4>>>0);
     if ($121) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum14 = (($2) + 8)|0;
     $100 = (($p) + ($$sum14)|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = ($101>>>0)<($4>>>0);
     if ($102) {
      _abort();
      // unreachable;
     }
     $103 = ((($101)) + 12|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104|0)==($3|0);
     if (!($105)) {
      _abort();
      // unreachable;
     }
     $106 = ((($98)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if ($108) {
      HEAP32[$103>>2] = $98;
      HEAP32[$106>>2] = $101;
      $R$1 = $98;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $122 = ($96|0)==(0|0);
   if (!($122)) {
    $$sum11 = (($2) + 28)|0;
    $123 = (($p) + ($$sum11)|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (3328 + ($124<<2)|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($3|0)==($126|0);
    if ($127) {
     HEAP32[$125>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $128 = 1 << $124;
      $129 = $128 ^ -1;
      $130 = HEAP32[(3028)>>2]|0;
      $131 = $130 & $129;
      HEAP32[(3028)>>2] = $131;
      break;
     }
    } else {
     $132 = HEAP32[(3040)>>2]|0;
     $133 = ($96>>>0)<($132>>>0);
     if ($133) {
      _abort();
      // unreachable;
     }
     $134 = ((($96)) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($135|0)==($3|0);
     if ($136) {
      HEAP32[$134>>2] = $R$1;
     } else {
      $137 = ((($96)) + 20|0);
      HEAP32[$137>>2] = $R$1;
     }
     $138 = ($R$1|0)==(0|0);
     if ($138) {
      break;
     }
    }
    $139 = HEAP32[(3040)>>2]|0;
    $140 = ($R$1>>>0)<($139>>>0);
    if ($140) {
     _abort();
     // unreachable;
    }
    $141 = ((($R$1)) + 24|0);
    HEAP32[$141>>2] = $96;
    $$sum12 = (($2) + 16)|0;
    $142 = (($p) + ($$sum12)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)==(0|0);
    do {
     if (!($144)) {
      $145 = ($143>>>0)<($139>>>0);
      if ($145) {
       _abort();
       // unreachable;
      } else {
       $146 = ((($R$1)) + 16|0);
       HEAP32[$146>>2] = $143;
       $147 = ((($143)) + 24|0);
       HEAP32[$147>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum13 = (($2) + 20)|0;
    $148 = (($p) + ($$sum13)|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $151 = HEAP32[(3040)>>2]|0;
     $152 = ($149>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     } else {
      $153 = ((($R$1)) + 20|0);
      HEAP32[$153>>2] = $149;
      $154 = ((($149)) + 24|0);
      HEAP32[$154>>2] = $R$1;
      break;
     }
    }
   }
  }
 } while(0);
 $155 = ($70>>>0)<(16);
 if ($155) {
  $156 = $1 & 1;
  $157 = $68 | $156;
  $158 = $157 | 2;
  HEAP32[$0>>2] = $158;
  $$sum910 = $68 | 4;
  $159 = (($p) + ($$sum910)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160 | 1;
  HEAP32[$159>>2] = $161;
  $newp$0 = $p;
  return ($newp$0|0);
 } else {
  $162 = (($p) + ($nb)|0);
  $163 = $1 & 1;
  $164 = $163 | $nb;
  $165 = $164 | 2;
  HEAP32[$0>>2] = $165;
  $$sum5 = (($nb) + 4)|0;
  $166 = (($p) + ($$sum5)|0);
  $167 = $70 | 3;
  HEAP32[$166>>2] = $167;
  $$sum78 = $68 | 4;
  $168 = (($p) + ($$sum78)|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 | 1;
  HEAP32[$168>>2] = $170;
  _dispose_chunk($162,$70);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$pre = 0, $$pre$phi50Z2D = 0, $$pre$phi52Z2D = 0, $$pre$phiZ2D = 0, $$pre48 = 0, $$pre49 = 0, $$pre51 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$043 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$042 = 0, $T$042$lcssa = 0, $cond = 0;
 var $cond39 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = ((($p)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[(3040)>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[(3044)>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[(3032)>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum14 = (4 - ($5))|0;
    $105 = (($p) + ($$sum14)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum24 = (8 - ($5))|0;
    $17 = (($p) + ($$sum24)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum25 = (12 - ($5))|0;
    $19 = (($p) + ($$sum25)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = (3064 + ($21<<2)|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = ((($18)) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[3024>>2]|0;
     $32 = $31 & $30;
     HEAP32[3024>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre51 = ((($20)) + 8|0);
     $$pre$phi52Z2D = $$pre51;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = ((($20)) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi52Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = ((($18)) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi52Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum16 = (24 - ($5))|0;
   $39 = (($p) + ($$sum16)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum17 = (12 - ($5))|0;
   $41 = (($p) + ($$sum17)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum18 = (16 - ($5))|0;
     $$sum19 = (($$sum18) + 4)|0;
     $53 = (($p) + ($$sum19)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum18)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $57;$RP$0 = $56;
      }
     } else {
      $R$0 = $54;$RP$0 = $53;
     }
     while(1) {
      $59 = ((($R$0)) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       $R$0 = $60;$RP$0 = $59;
       continue;
      }
      $62 = ((($R$0)) + 16|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $63;$RP$0 = $62;
      }
     }
     $65 = ($RP$0$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum23 = (8 - ($5))|0;
     $44 = (($p) + ($$sum23)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = ((($45)) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = ((($42)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum20 = (28 - ($5))|0;
    $67 = (($p) + ($$sum20)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = (3328 + ($68<<2)|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[(3028)>>2]|0;
      $75 = $74 & $73;
      HEAP32[(3028)>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[(3040)>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = ((($40)) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = ((($40)) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[(3040)>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = ((($R$1)) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum21 = (16 - ($5))|0;
    $86 = (($p) + ($$sum21)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = ((($R$1)) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = ((($87)) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum22 = (($$sum21) + 4)|0;
    $92 = (($p) + ($$sum22)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[(3040)>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = ((($R$1)) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = ((($93)) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[(3040)>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[(3048)>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[(3036)>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[(3036)>>2] = $115;
   HEAP32[(3048)>>2] = $$0;
   $116 = $115 | 1;
   $117 = ((($$0)) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[(3044)>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    return;
   }
   HEAP32[(3044)>>2] = 0;
   HEAP32[(3032)>>2] = 0;
   return;
  }
  $120 = HEAP32[(3044)>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[(3032)>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[(3032)>>2] = $123;
   HEAP32[(3044)>>2] = $$0;
   $124 = $123 | 1;
   $125 = ((($$0)) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum12 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum12)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum13 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum13)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = (3064 + ($135<<2)|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = ((($132)) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[3024>>2]|0;
     $146 = $145 & $144;
     HEAP32[3024>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre49 = ((($134)) + 8|0);
     $$pre$phi50Z2D = $$pre49;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = ((($134)) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi50Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = ((($132)) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi50Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $171;$RP9$0 = $170;
       }
      } else {
       $R7$0 = $168;$RP9$0 = $167;
      }
      while(1) {
       $173 = ((($R7$0)) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if (!($175)) {
        $R7$0 = $174;$RP9$0 = $173;
        continue;
       }
       $176 = ((($R7$0)) + 16|0);
       $177 = HEAP32[$176>>2]|0;
       $178 = ($177|0)==(0|0);
       if ($178) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $177;$RP9$0 = $176;
       }
      }
      $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $$sum11 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum11)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = ((($159)) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = ((($156)) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum8 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum8)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = (3328 + ($182<<2)|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond39 = ($R7$1|0)==(0|0);
      if ($cond39) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[(3028)>>2]|0;
       $189 = $188 & $187;
       HEAP32[(3028)>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[(3040)>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = ((($154)) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = ((($154)) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[(3040)>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = ((($R7$1)) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum9 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum9)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = ((($R7$1)) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = ((($201)) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum10 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum10)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[(3040)>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = ((($R7$1)) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = ((($207)) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = ((($$0)) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[(3044)>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[(3032)>>2] = $128;
   return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = ((($$0)) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = (3064 + ($224<<2)|0);
  $226 = HEAP32[3024>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[3024>>2] = $230;
   $$pre = (($224) + 2)|0;
   $$pre48 = (3064 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre48;$F16$0 = $225;
  } else {
   $$sum7 = (($224) + 2)|0;
   $231 = (3064 + ($$sum7<<2)|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[(3040)>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = ((($F16$0)) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = ((($$0)) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = ((($$0)) + 12|0);
  HEAP32[$237>>2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = (3328 + ($I19$0<<2)|0);
 $264 = ((($$0)) + 28|0);
 HEAP32[$264>>2] = $I19$0;
 $265 = ((($$0)) + 16|0);
 $266 = ((($$0)) + 20|0);
 HEAP32[$266>>2] = 0;
 HEAP32[$265>>2] = 0;
 $267 = HEAP32[(3028)>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[(3028)>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = ((($$0)) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = ((($$0)) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = ((($$0)) + 8|0);
  HEAP32[$274>>2] = $$0;
  return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ((($275)) + 4|0);
 $277 = HEAP32[$276>>2]|0;
 $278 = $277 & -8;
 $279 = ($278|0)==($$1|0);
 L191: do {
  if ($279) {
   $T$0$lcssa = $275;
  } else {
   $280 = ($I19$0|0)==(31);
   $281 = $I19$0 >>> 1;
   $282 = (25 - ($281))|0;
   $283 = $280 ? 0 : $282;
   $284 = $$1 << $283;
   $K20$043 = $284;$T$042 = $275;
   while(1) {
    $291 = $K20$043 >>> 31;
    $292 = (((($T$042)) + 16|0) + ($291<<2)|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     $$lcssa = $292;$T$042$lcssa = $T$042;
     break;
    }
    $285 = $K20$043 << 1;
    $286 = ((($287)) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $T$0$lcssa = $287;
     break L191;
    } else {
     $K20$043 = $285;$T$042 = $287;
    }
   }
   $294 = HEAP32[(3040)>>2]|0;
   $295 = ($$lcssa>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$$lcssa>>2] = $$0;
   $296 = ((($$0)) + 24|0);
   HEAP32[$296>>2] = $T$042$lcssa;
   $297 = ((($$0)) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = ((($$0)) + 8|0);
   HEAP32[$298>>2] = $$0;
   return;
  }
 } while(0);
 $299 = ((($T$0$lcssa)) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[(3040)>>2]|0;
 $302 = ($300>>>0)>=($301>>>0);
 $not$ = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = $302 & $not$;
 if (!($303)) {
  _abort();
  // unreachable;
 }
 $304 = ((($300)) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = ((($$0)) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = ((($$0)) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = ((($$0)) + 24|0);
 HEAP32[$307>>2] = 0;
 return;
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $x$013 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = ((($1)) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $9 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $9 = $8;
 }
 $10 = ($9|0)==(45);
 if ((($9|0) == 43) | (($9|0) == 45)) {
  $11 = $10&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = ((($12)) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
 } else {
  $c$0 = $9;$neg$0 = 0;
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $98 = -2147483648;$99 = 0;
   tempRet0 = ($98);
   return ($99|0);
  }
  $31 = HEAP32[$0>>2]|0;
  $32 = ((($31)) + -1|0);
  HEAP32[$0>>2] = $32;
  $98 = -2147483648;$99 = 0;
  tempRet0 = ($98);
  return ($99|0);
 } else {
  $c$112 = $c$0;$x$013 = 0;
 }
 while(1) {
  $33 = ($x$013*10)|0;
  $34 = (($c$112) + -48)|0;
  $35 = (($34) + ($33))|0;
  $36 = HEAP32[$0>>2]|0;
  $37 = HEAP32[$2>>2]|0;
  $38 = ($36>>>0)<($37>>>0);
  if ($38) {
   $39 = ((($36)) + 1|0);
   HEAP32[$0>>2] = $39;
   $40 = HEAP8[$36>>0]|0;
   $41 = $40&255;
   $c$1$be = $41;
  } else {
   $42 = (___shgetc($f)|0);
   $c$1$be = $42;
  }
  $43 = (($c$1$be) + -48)|0;
  $44 = ($43>>>0)<(10);
  $45 = ($35|0)<(214748364);
  $46 = $44 & $45;
  if ($46) {
   $c$112 = $c$1$be;$x$013 = $35;
  } else {
   $$lcssa22 = $35;$c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $47 = ($$lcssa22|0)<(0);
 $48 = $47 << 31 >> 31;
 $49 = (($c$1$be$lcssa) + -48)|0;
 $50 = ($49>>>0)<(10);
 if ($50) {
  $53 = $$lcssa22;$54 = $48;$c$27 = $c$1$be$lcssa;
  while(1) {
   $55 = (___muldi3(($53|0),($54|0),10,0)|0);
   $56 = tempRet0;
   $57 = ($c$27|0)<(0);
   $58 = $57 << 31 >> 31;
   $59 = (_i64Add(($c$27|0),($58|0),-48,-1)|0);
   $60 = tempRet0;
   $61 = (_i64Add(($59|0),($60|0),($55|0),($56|0))|0);
   $62 = tempRet0;
   $63 = HEAP32[$0>>2]|0;
   $64 = HEAP32[$2>>2]|0;
   $65 = ($63>>>0)<($64>>>0);
   if ($65) {
    $66 = ((($63)) + 1|0);
    HEAP32[$0>>2] = $66;
    $67 = HEAP8[$63>>0]|0;
    $68 = $67&255;
    $c$2$be = $68;
   } else {
    $69 = (___shgetc($f)|0);
    $c$2$be = $69;
   }
   $70 = (($c$2$be) + -48)|0;
   $71 = ($70>>>0)<(10);
   $72 = ($62|0)<(21474836);
   $73 = ($61>>>0)<(2061584302);
   $74 = ($62|0)==(21474836);
   $75 = $74 & $73;
   $76 = $72 | $75;
   $77 = $71 & $76;
   if ($77) {
    $53 = $61;$54 = $62;$c$27 = $c$2$be;
   } else {
    $92 = $61;$93 = $62;$c$2$lcssa = $c$2$be;
    break;
   }
  }
 } else {
  $92 = $$lcssa22;$93 = $48;$c$2$lcssa = $c$1$be$lcssa;
 }
 $51 = (($c$2$lcssa) + -48)|0;
 $52 = ($51>>>0)<(10);
 if ($52) {
  while(1) {
   $78 = HEAP32[$0>>2]|0;
   $79 = HEAP32[$2>>2]|0;
   $80 = ($78>>>0)<($79>>>0);
   if ($80) {
    $81 = ((($78)) + 1|0);
    HEAP32[$0>>2] = $81;
    $82 = HEAP8[$78>>0]|0;
    $83 = $82&255;
    $c$3$be = $83;
   } else {
    $84 = (___shgetc($f)|0);
    $c$3$be = $84;
   }
   $85 = (($c$3$be) + -48)|0;
   $86 = ($85>>>0)<(10);
   if (!($86)) {
    break;
   }
  }
 }
 $87 = HEAP32[$2>>2]|0;
 $88 = ($87|0)==(0|0);
 if (!($88)) {
  $89 = HEAP32[$0>>2]|0;
  $90 = ((($89)) + -1|0);
  HEAP32[$0>>2] = $90;
 }
 $91 = ($neg$0|0)!=(0);
 $94 = (_i64Subtract(0,0,($92|0),($93|0))|0);
 $95 = tempRet0;
 $96 = $91 ? $94 : $92;
 $97 = $91 ? $95 : $93;
 $98 = $97;$99 = $96;
 tempRet0 = ($98);
 return ($99|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i104$i = 0, $$0$lcssa$i128$i = 0, $$0$lcssa$i143$i = 0, $$0$lcssa$i39$i = 0, $$0$lcssa$i46 = 0, $$0$lcssa$i46$i = 0, $$0$lcssa$i48$i = 0, $$0$lcssa$i51 = 0, $$0$lcssa$i53 = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i61 = 0, $$0$lcssa$i63$i = 0, $$0$lcssa$i68 = 0, $$0$lcssa$i69$i = 0;
 var $$0$lcssa$i75 = 0, $$0$lcssa$i76$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i85 = 0, $$0$lcssa$i97$i = 0, $$01$i = 0, $$01$i$i = 0, $$01$i102$i = 0, $$01$i126$i = 0, $$01$i141$i = 0, $$01$i37$i = 0, $$01$i44 = 0, $$01$i44$i = 0, $$01$i54$i = 0, $$01$i59 = 0, $$01$i61$i = 0, $$01$i66 = 0, $$01$i67$i = 0, $$01$i73 = 0, $$01$i74$i = 0;
 var $$01$i83 = 0, $$01$i95$i = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i85$i = 0, $$012$i = 0, $$013$i = 0, $$03$i48 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i79$i = 0, $$07$i = 0.0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i112$i = 0, $$114$i = 0, $$12$i = 0, $$12$i$i = 0, $$12$i110$i = 0, $$12$i119$i = 0;
 var $$12$i134$i = 0, $$12$i134$i$lcssa = 0, $$12$i87$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$$22$i = 0, $$210$$24$i = 0, $$210$i = 0, $$23$i = 0, $$24 = 0, $$25 = 0, $$3$i = 0.0, $$31$i = 0, $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$412184$i = 0;
 var $$5196$i = 0, $$92 = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us303$i = 0, $$a$3$us304$i = 0, $$a$3305$i = 0, $$a$3306$i = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa106 = 0, $$lcssa275$i = 0, $$lcssa450 = 0, $$lcssa451 = 0, $$lcssa455 = 0, $$lcssa457 = 0, $$lcssa458 = 0, $$lcssa459 = 0, $$lcssa460 = 0, $$lcssa461 = 0;
 var $$lcssa463 = 0, $$lcssa464 = 0, $$lcssa470 = 0, $$lcssa474 = 0, $$lcssa476 = 0, $$lcssa479 = 0, $$lcssa480 = 0, $$lcssa483 = 0.0, $$lcssa484 = 0, $$lcssa487 = 0, $$lcssa491 = 0, $$mask$i = 0, $$mask$i38 = 0, $$mask1$i = 0, $$mask1$i37 = 0, $$neg151$i = 0, $$neg152$i = 0, $$p$$i = 0, $$p$5 = 0, $$p$i = 0;
 var $$pn$i = 0, $$pr$i = 0, $$pr146$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi302$iZ2D = 0, $$pre270 = 0, $$pre300$i = 0, $$pre301$i = 0, $$sum$i = 0, $$sum15$i = 0, $$sum16$i = 0, $$z$3$i = 0, $$z$4$i = 0, $$z$4$us$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0;
 var $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0;
 var $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0;
 var $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0;
 var $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0;
 var $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0;
 var $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0;
 var $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0;
 var $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0;
 var $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0.0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0.0, $1162 = 0, $1163 = 0;
 var $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $1169$phi = 0, $117 = 0, $1170 = 0, $1170$phi = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0;
 var $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0.0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0.0, $431 = 0, $432 = 0.0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0.0;
 var $472 = 0.0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0.0, $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0.0, $496 = 0.0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0.0, $545 = 0.0, $546 = 0.0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0.0, $56 = 0, $560 = 0.0, $561 = 0.0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0.0, $575 = 0.0, $576 = 0.0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0.0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0.0, $64 = 0, $640 = 0.0, $641 = 0.0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0.0, $781 = 0.0, $782 = 0, $783 = 0.0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1253$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3240$i = 0, $a$3240$us$i = 0, $a$5$lcssa$i = 0, $a$5215$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arglist_current = 0;
 var $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0, $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0, $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0, $arglist_next48 = 0, $arglist_next51 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0;
 var $arglist_next60 = 0, $arglist_next63 = 0, $arglist_next9 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0246$i = 0, $carry3$0234$i = 0, $carry3$0234$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0245$i = 0, $d$0247$i = 0, $d$1233$i = 0, $d$1233$us$i = 0, $d$2$lcssa$i = 0, $d$2214$i = 0;
 var $d$3$i = 0, $d$4191$i = 0, $d$5183$i = 0, $d$6195$i = 0, $e$0229$i = 0, $e$1$i = 0, $e$2210$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1201$i = 0, $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded101 = 0, $expanded102 = 0;
 var $expanded103 = 0, $expanded105 = 0, $expanded106 = 0, $expanded108 = 0, $expanded109 = 0, $expanded110 = 0, $expanded112 = 0, $expanded113 = 0, $expanded115 = 0, $expanded116 = 0, $expanded117 = 0, $expanded119 = 0, $expanded120 = 0, $expanded122 = 0, $expanded123 = 0, $expanded124 = 0, $expanded126 = 0, $expanded127 = 0, $expanded129 = 0, $expanded130 = 0;
 var $expanded131 = 0, $expanded133 = 0, $expanded134 = 0, $expanded136 = 0, $expanded137 = 0, $expanded138 = 0, $expanded140 = 0, $expanded141 = 0, $expanded143 = 0, $expanded144 = 0, $expanded145 = 0, $expanded147 = 0, $expanded148 = 0, $expanded150 = 0, $expanded151 = 0, $expanded152 = 0, $expanded154 = 0, $expanded155 = 0, $expanded157 = 0, $expanded158 = 0;
 var $expanded159 = 0, $expanded161 = 0, $expanded162 = 0, $expanded164 = 0, $expanded165 = 0, $expanded166 = 0, $expanded168 = 0, $expanded169 = 0, $expanded171 = 0, $expanded172 = 0, $expanded173 = 0, $expanded175 = 0, $expanded176 = 0, $expanded178 = 0, $expanded179 = 0, $expanded180 = 0, $expanded182 = 0, $expanded183 = 0, $expanded185 = 0, $expanded186 = 0;
 var $expanded187 = 0, $expanded189 = 0, $expanded190 = 0, $expanded192 = 0, $expanded193 = 0, $expanded194 = 0, $expanded196 = 0, $expanded197 = 0, $expanded199 = 0, $expanded200 = 0, $expanded201 = 0, $expanded203 = 0, $expanded204 = 0, $expanded206 = 0, $expanded207 = 0, $expanded208 = 0, $expanded210 = 0, $expanded211 = 0, $expanded213 = 0, $expanded214 = 0;
 var $expanded215 = 0, $expanded64 = 0, $expanded66 = 0, $expanded67 = 0, $expanded68 = 0, $expanded70 = 0, $expanded71 = 0, $expanded73 = 0, $expanded74 = 0, $expanded75 = 0, $expanded77 = 0, $expanded78 = 0, $expanded80 = 0, $expanded81 = 0, $expanded82 = 0, $expanded84 = 0, $expanded85 = 0, $expanded87 = 0, $expanded88 = 0, $expanded89 = 0;
 var $expanded91 = 0, $expanded92 = 0, $expanded94 = 0, $expanded95 = 0, $expanded96 = 0, $expanded98 = 0, $expanded99 = 0, $fl$0110 = 0, $fl$0170 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa273 = 0, $i$0175 = 0, $i$0228$i = 0, $i$03$i = 0, $i$03$i30 = 0;
 var $i$1$lcssa$i = 0, $i$1186 = 0, $i$1222$i = 0, $i$2162 = 0, $i$2162$lcssa = 0, $i$2209$i = 0, $i$3160 = 0, $i$3205$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i32 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0, $isdigit2$i28 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i31 = 0, $isdigittmp1$i = 0;
 var $isdigittmp1$i27 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i29 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0221$i = 0, $j$0223$i = 0, $j$1206$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1174 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$0$phi = 0, $l10n$1 = 0, $l10n$2 = 0;
 var $l10n$3 = 0, $mb = 0, $notlhs$us$us$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i100$i = 0, $or$cond$i35$i = 0, $or$cond$i42$i = 0, $or$cond$i52$i = 0, $or$cond$i57 = 0, $or$cond$i59$i = 0, $or$cond$i64 = 0, $or$cond$i71 = 0, $or$cond$i72$i = 0, $or$cond$i79 = 0, $or$cond$i81 = 0, $or$cond$i93$i = 0, $or$cond15 = 0;
 var $or$cond19 = 0, $or$cond22 = 0, $or$cond29$i = 0, $or$cond332 = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$3 = 0, $p$4272 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0;
 var $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1179$i = 0, $round$0178$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0, $s$1$i = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$us$i = 0, $s1$0$i = 0, $s7$0188$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0180$i = 0, $s9$0$i = 0;
 var $s9$1192$i = 0, $s9$2$i = 0, $sext = 0, $sext93 = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa456 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8108 = 0, $storemerge8169 = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $w$30$i = 0, $wc = 0;
 var $ws$0176 = 0, $ws$1187 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i109$i = 0, $y$03$i118$i = 0, $y$03$i133$i = 0, $y$03$i86$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0163 = 0, $z$1 = 0, $z$1$lcssa$i = 0, $z$1252$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3239$i = 0, $z$3239$us$i = 0;
 var $z$4$i = 0, $z$4$us$i = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0;
 $big$i = sp + 16|0;
 $e2$i = sp + 8|0;
 $buf$i = sp + 836|0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824|0;
 $pad$i = sp + 568|0;
 $buf = sp + 528|0;
 $wc = sp;
 $mb = sp + 520|0;
 $1 = ($f|0)!=(0|0);
 $2 = ((($buf)) + 40|0);
 $3 = $2;
 $4 = ((($buf)) + 39|0);
 $5 = ((($wc)) + 4|0);
 $6 = $wc;
 $7 = ((($ebuf0$i)) + 12|0);
 $8 = ((($ebuf0$i)) + 11|0);
 $9 = $7;
 $10 = (($9) - ($0))|0;
 $11 = (-2 - ($0))|0;
 $12 = (($9) + 2)|0;
 $13 = ((($big$i)) + 288|0);
 $14 = ((($buf$i)) + 9|0);
 $15 = $14;
 $16 = ((($buf$i)) + 8|0);
 $1169 = 0;$1170 = 0;$23 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $17 = ($cnt$0|0)>(-1);
  do {
   if ($17) {
    $18 = (2147483647 - ($cnt$0))|0;
    $19 = ($l$0|0)>($18|0);
    if ($19) {
     $20 = (___errno_location()|0);
     HEAP32[$20>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $21 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $21;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $22 = HEAP8[$23>>0]|0;
  $24 = ($22<<24>>24)==(0);
  if ($24) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 344;
   break;
  } else {
   $1171 = $22;$26 = $23;
  }
  while(1) {
   if ((($1171<<24>>24) == 37)) {
    $28 = $26;$z$0163 = $26;
    label = 9;
    break;
   } else if ((($1171<<24>>24) == 0)) {
    $$lcssa106 = $26;$z$0$lcssa = $26;
    break;
   }
   $25 = ((($26)) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $1171 = $$pre;$26 = $25;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $27 = ((($28)) + 1|0);
     $29 = HEAP8[$27>>0]|0;
     $30 = ($29<<24>>24)==(37);
     if (!($30)) {
      $$lcssa106 = $28;$z$0$lcssa = $z$0163;
      break L12;
     }
     $31 = ((($z$0163)) + 1|0);
     $32 = ((($28)) + 2|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = ($33<<24>>24)==(37);
     if ($34) {
      $28 = $32;$z$0163 = $31;
      label = 9;
     } else {
      $$lcssa106 = $32;$z$0$lcssa = $31;
      break;
     }
    }
   }
  } while(0);
  $35 = $z$0$lcssa;
  $36 = $23;
  $37 = (($35) - ($36))|0;
  if ($1) {
   (___fwritex($23,$37,$f)|0);
  }
  $38 = ($z$0$lcssa|0)==($23|0);
  if (!($38)) {
   $l10n$0$phi = $l10n$0;$1170$phi = $1170;$1169$phi = $1169;$23 = $$lcssa106;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$0$phi;$1170 = $1170$phi;$1169 = $1169$phi;
   continue;
  }
  $39 = ((($$lcssa106)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $isdigittmp = (($41) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $42 = ((($$lcssa106)) + 2|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(36);
   $45 = ((($$lcssa106)) + 3|0);
   $$92 = $44 ? $45 : $39;
   $$l10n$0 = $44 ? 1 : $l10n$0;
   $isdigittmp$ = $44 ? $isdigittmp : -1;
   $$pre270 = HEAP8[$$92>>0]|0;
   $47 = $$pre270;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$92;
  } else {
   $47 = $40;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $39;
  }
  $46 = $47 << 24 >> 24;
  $48 = $46 & -32;
  $49 = ($48|0)==(32);
  L24: do {
   if ($49) {
    $51 = $46;$56 = $47;$fl$0170 = 0;$storemerge8169 = $storemerge;
    while(1) {
     $50 = (($51) + -32)|0;
     $52 = 1 << $50;
     $53 = $52 & 75913;
     $54 = ($53|0)==(0);
     if ($54) {
      $65 = $56;$fl$0110 = $fl$0170;$storemerge8108 = $storemerge8169;
      break L24;
     }
     $55 = $56 << 24 >> 24;
     $57 = (($55) + -32)|0;
     $58 = 1 << $57;
     $59 = $58 | $fl$0170;
     $60 = ((($storemerge8169)) + 1|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61 << 24 >> 24;
     $63 = $62 & -32;
     $64 = ($63|0)==(32);
     if ($64) {
      $51 = $62;$56 = $61;$fl$0170 = $59;$storemerge8169 = $60;
     } else {
      $65 = $61;$fl$0110 = $59;$storemerge8108 = $60;
      break;
     }
    }
   } else {
    $65 = $47;$fl$0110 = 0;$storemerge8108 = $storemerge;
   }
  } while(0);
  $66 = ($65<<24>>24)==(42);
  do {
   if ($66) {
    $67 = ((($storemerge8108)) + 1|0);
    $68 = HEAP8[$67>>0]|0;
    $69 = $68 << 24 >> 24;
    $isdigittmp11 = (($69) + -48)|0;
    $isdigit12 = ($isdigittmp11>>>0)<(10);
    if ($isdigit12) {
     $70 = ((($storemerge8108)) + 2|0);
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(36);
     if ($72) {
      $73 = (($nl_type) + ($isdigittmp11<<2)|0);
      HEAP32[$73>>2] = 10;
      $74 = HEAP8[$67>>0]|0;
      $75 = $74 << 24 >> 24;
      $76 = (($75) + -48)|0;
      $77 = (($nl_arg) + ($76<<3)|0);
      $78 = $77;
      $79 = $78;
      $80 = HEAP32[$79>>2]|0;
      $81 = (($78) + 4)|0;
      $82 = $81;
      $83 = HEAP32[$82>>2]|0;
      $84 = ((($storemerge8108)) + 3|0);
      $l10n$2 = 1;$storemerge13 = $84;$w$0 = $80;
     } else {
      label = 23;
     }
    } else {
     label = 23;
    }
    if ((label|0) == 23) {
     label = 0;
     $85 = ($l10n$1|0)==(0);
     if (!($85)) {
      $$0 = -1;
      label = 363;
      break L1;
     }
     if (!($1)) {
      $105 = $67;$fl$1 = $fl$0110;$l10n$3 = 0;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $86 = $arglist_current;
     $87 = ((0) + 4|0);
     $expanded64 = $87;
     $expanded = (($expanded64) - 1)|0;
     $88 = (($86) + ($expanded))|0;
     $89 = ((0) + 4|0);
     $expanded68 = $89;
     $expanded67 = (($expanded68) - 1)|0;
     $expanded66 = $expanded67 ^ -1;
     $90 = $88 & $expanded66;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $arglist_next = ((($91)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge13 = $67;$w$0 = $92;
    }
    $93 = ($w$0|0)<(0);
    if ($93) {
     $94 = $fl$0110 | 8192;
     $95 = (0 - ($w$0))|0;
     $105 = $storemerge13;$fl$1 = $94;$l10n$3 = $l10n$2;$w$1 = $95;
    } else {
     $105 = $storemerge13;$fl$1 = $fl$0110;$l10n$3 = $l10n$2;$w$1 = $w$0;
    }
   } else {
    $96 = $65 << 24 >> 24;
    $isdigittmp1$i = (($96) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $100 = $storemerge8108;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
     while(1) {
      $97 = ($i$03$i*10)|0;
      $98 = (($97) + ($isdigittmp4$i))|0;
      $99 = ((($100)) + 1|0);
      $101 = HEAP8[$99>>0]|0;
      $102 = $101 << 24 >> 24;
      $isdigittmp$i = (($102) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $100 = $99;$i$03$i = $98;$isdigittmp4$i = $isdigittmp$i;
      } else {
       $$lcssa450 = $98;$$lcssa451 = $99;
       break;
      }
     }
     $103 = ($$lcssa450|0)<(0);
     if ($103) {
      $$0 = -1;
      label = 363;
      break L1;
     } else {
      $105 = $$lcssa451;$fl$1 = $fl$0110;$l10n$3 = $l10n$1;$w$1 = $$lcssa450;
     }
    } else {
     $105 = $storemerge8108;$fl$1 = $fl$0110;$l10n$3 = $l10n$1;$w$1 = 0;
    }
   }
  } while(0);
  $104 = HEAP8[$105>>0]|0;
  $106 = ($104<<24>>24)==(46);
  L45: do {
   if ($106) {
    $107 = ((($105)) + 1|0);
    $108 = HEAP8[$107>>0]|0;
    $109 = ($108<<24>>24)==(42);
    if (!($109)) {
     $136 = $108 << 24 >> 24;
     $isdigittmp1$i27 = (($136) + -48)|0;
     $isdigit2$i28 = ($isdigittmp1$i27>>>0)<(10);
     if ($isdigit2$i28) {
      $140 = $107;$i$03$i30 = 0;$isdigittmp4$i29 = $isdigittmp1$i27;
     } else {
      $1172 = $107;$p$0 = 0;
      break;
     }
     while(1) {
      $137 = ($i$03$i30*10)|0;
      $138 = (($137) + ($isdigittmp4$i29))|0;
      $139 = ((($140)) + 1|0);
      $141 = HEAP8[$139>>0]|0;
      $142 = $141 << 24 >> 24;
      $isdigittmp$i31 = (($142) + -48)|0;
      $isdigit$i32 = ($isdigittmp$i31>>>0)<(10);
      if ($isdigit$i32) {
       $140 = $139;$i$03$i30 = $138;$isdigittmp4$i29 = $isdigittmp$i31;
      } else {
       $1172 = $139;$p$0 = $138;
       break L45;
      }
     }
    }
    $110 = ((($105)) + 2|0);
    $111 = HEAP8[$110>>0]|0;
    $112 = $111 << 24 >> 24;
    $isdigittmp9 = (($112) + -48)|0;
    $isdigit10 = ($isdigittmp9>>>0)<(10);
    if ($isdigit10) {
     $113 = ((($105)) + 3|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)==(36);
     if ($115) {
      $116 = (($nl_type) + ($isdigittmp9<<2)|0);
      HEAP32[$116>>2] = 10;
      $117 = HEAP8[$110>>0]|0;
      $118 = $117 << 24 >> 24;
      $119 = (($118) + -48)|0;
      $120 = (($nl_arg) + ($119<<3)|0);
      $121 = $120;
      $122 = $121;
      $123 = HEAP32[$122>>2]|0;
      $124 = (($121) + 4)|0;
      $125 = $124;
      $126 = HEAP32[$125>>2]|0;
      $127 = ((($105)) + 4|0);
      $1172 = $127;$p$0 = $123;
      break;
     }
    }
    $128 = ($l10n$3|0)==(0);
    if (!($128)) {
     $$0 = -1;
     label = 363;
     break L1;
    }
    if ($1) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $129 = $arglist_current2;
     $130 = ((0) + 4|0);
     $expanded71 = $130;
     $expanded70 = (($expanded71) - 1)|0;
     $131 = (($129) + ($expanded70))|0;
     $132 = ((0) + 4|0);
     $expanded75 = $132;
     $expanded74 = (($expanded75) - 1)|0;
     $expanded73 = $expanded74 ^ -1;
     $133 = $131 & $expanded73;
     $134 = $133;
     $135 = HEAP32[$134>>2]|0;
     $arglist_next3 = ((($134)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $1172 = $110;$p$0 = $135;
    } else {
     $1172 = $110;$p$0 = 0;
    }
   } else {
    $1172 = $105;$p$0 = -1;
   }
  } while(0);
  $144 = $1172;$st$0 = 0;
  while(1) {
   $143 = HEAP8[$144>>0]|0;
   $145 = $143 << 24 >> 24;
   $146 = (($145) + -65)|0;
   $147 = ($146>>>0)>(57);
   if ($147) {
    $$0 = -1;
    label = 363;
    break L1;
   }
   $148 = ((($144)) + 1|0);
   $149 = ((3960 + (($st$0*58)|0)|0) + ($146)|0);
   $150 = HEAP8[$149>>0]|0;
   $151 = $150&255;
   $152 = (($151) + -1)|0;
   $153 = ($152>>>0)<(8);
   if ($153) {
    $144 = $148;$st$0 = $151;
   } else {
    $$lcssa455 = $144;$$lcssa457 = $148;$$lcssa458 = $150;$$lcssa459 = $151;$st$0$lcssa456 = $st$0;
    break;
   }
  }
  $154 = ($$lcssa458<<24>>24)==(0);
  if ($154) {
   $$0 = -1;
   label = 363;
   break;
  }
  $155 = ($$lcssa458<<24>>24)==(19);
  $156 = ($argpos$0|0)>(-1);
  L64: do {
   if ($155) {
    if ($156) {
     $$0 = -1;
     label = 363;
     break L1;
    } else {
     $1173 = $1169;$1174 = $1170;
     label = 62;
    }
   } else {
    if ($156) {
     $157 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$157>>2] = $$lcssa459;
     $158 = (($nl_arg) + ($argpos$0<<3)|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ((($158)) + 4|0);
     $161 = HEAP32[$160>>2]|0;
     $1173 = $161;$1174 = $159;
     label = 62;
     break;
    }
    if (!($1)) {
     $$0 = 0;
     label = 363;
     break L1;
    }
    $162 = ($$lcssa458&255)>(20);
    if ($162) {
     $264 = $1170;$291 = $1169;
    } else {
     do {
      switch ($$lcssa459|0) {
      case 10:  {
       $arglist_current8 = HEAP32[$ap>>2]|0;
       $171 = $arglist_current8;
       $172 = ((0) + 4|0);
       $expanded85 = $172;
       $expanded84 = (($expanded85) - 1)|0;
       $173 = (($171) + ($expanded84))|0;
       $174 = ((0) + 4|0);
       $expanded89 = $174;
       $expanded88 = (($expanded89) - 1)|0;
       $expanded87 = $expanded88 ^ -1;
       $175 = $173 & $expanded87;
       $176 = $175;
       $177 = HEAP32[$176>>2]|0;
       $arglist_next9 = ((($176)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next9;
       $178 = ($177|0)<(0);
       $179 = $178 << 31 >> 31;
       $264 = $177;$291 = $179;
       break L64;
       break;
      }
      case 12:  {
       $arglist_current14 = HEAP32[$ap>>2]|0;
       $187 = $arglist_current14;
       $188 = ((0) + 8|0);
       $expanded99 = $188;
       $expanded98 = (($expanded99) - 1)|0;
       $189 = (($187) + ($expanded98))|0;
       $190 = ((0) + 8|0);
       $expanded103 = $190;
       $expanded102 = (($expanded103) - 1)|0;
       $expanded101 = $expanded102 ^ -1;
       $191 = $189 & $expanded101;
       $192 = $191;
       $193 = $192;
       $194 = $193;
       $195 = HEAP32[$194>>2]|0;
       $196 = (($193) + 4)|0;
       $197 = $196;
       $198 = HEAP32[$197>>2]|0;
       $arglist_next15 = ((($192)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next15;
       $264 = $195;$291 = $198;
       break L64;
       break;
      }
      case 15:  {
       $arglist_current23 = HEAP32[$ap>>2]|0;
       $218 = $arglist_current23;
       $219 = ((0) + 4|0);
       $expanded120 = $219;
       $expanded119 = (($expanded120) - 1)|0;
       $220 = (($218) + ($expanded119))|0;
       $221 = ((0) + 4|0);
       $expanded124 = $221;
       $expanded123 = (($expanded124) - 1)|0;
       $expanded122 = $expanded123 ^ -1;
       $222 = $220 & $expanded122;
       $223 = $222;
       $224 = HEAP32[$223>>2]|0;
       $arglist_next24 = ((($223)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next24;
       $225 = $224&255;
       $226 = $225 << 24 >> 24;
       $227 = ($226|0)<(0);
       $228 = $227 << 31 >> 31;
       $sext = $224 << 24;
       $229 = $sext >> 24;
       $264 = $229;$291 = $228;
       break L64;
       break;
      }
      case 9:  {
       $arglist_current5 = HEAP32[$ap>>2]|0;
       $163 = $arglist_current5;
       $164 = ((0) + 4|0);
       $expanded78 = $164;
       $expanded77 = (($expanded78) - 1)|0;
       $165 = (($163) + ($expanded77))|0;
       $166 = ((0) + 4|0);
       $expanded82 = $166;
       $expanded81 = (($expanded82) - 1)|0;
       $expanded80 = $expanded81 ^ -1;
       $167 = $165 & $expanded80;
       $168 = $167;
       $169 = HEAP32[$168>>2]|0;
       $arglist_next6 = ((($168)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next6;
       $170 = $169;
       $264 = $170;$291 = $1169;
       break L64;
       break;
      }
      case 18:  {
       $arglist_current32 = HEAP32[$ap>>2]|0;
       $246 = $arglist_current32;
       $247 = ((0) + 8|0);
       $expanded141 = $247;
       $expanded140 = (($expanded141) - 1)|0;
       $248 = (($246) + ($expanded140))|0;
       $249 = ((0) + 8|0);
       $expanded145 = $249;
       $expanded144 = (($expanded145) - 1)|0;
       $expanded143 = $expanded144 ^ -1;
       $250 = $248 & $expanded143;
       $251 = $250;
       $252 = +HEAPF64[$251>>3];
       $arglist_next33 = ((($251)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next33;
       HEAPF64[tempDoublePtr>>3] = $252;$253 = HEAP32[tempDoublePtr>>2]|0;
       $254 = HEAP32[tempDoublePtr+4>>2]|0;
       $264 = $253;$291 = $254;
       break L64;
       break;
      }
      case 16:  {
       $arglist_current26 = HEAP32[$ap>>2]|0;
       $230 = $arglist_current26;
       $231 = ((0) + 4|0);
       $expanded127 = $231;
       $expanded126 = (($expanded127) - 1)|0;
       $232 = (($230) + ($expanded126))|0;
       $233 = ((0) + 4|0);
       $expanded131 = $233;
       $expanded130 = (($expanded131) - 1)|0;
       $expanded129 = $expanded130 ^ -1;
       $234 = $232 & $expanded129;
       $235 = $234;
       $236 = HEAP32[$235>>2]|0;
       $arglist_next27 = ((($235)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next27;
       $$mask$i38 = $236 & 255;
       $264 = $$mask$i38;$291 = 0;
       break L64;
       break;
      }
      case 14:  {
       $arglist_current20 = HEAP32[$ap>>2]|0;
       $211 = $arglist_current20;
       $212 = ((0) + 4|0);
       $expanded113 = $212;
       $expanded112 = (($expanded113) - 1)|0;
       $213 = (($211) + ($expanded112))|0;
       $214 = ((0) + 4|0);
       $expanded117 = $214;
       $expanded116 = (($expanded117) - 1)|0;
       $expanded115 = $expanded116 ^ -1;
       $215 = $213 & $expanded115;
       $216 = $215;
       $217 = HEAP32[$216>>2]|0;
       $arglist_next21 = ((($216)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next21;
       $$mask1$i37 = $217 & 65535;
       $264 = $$mask1$i37;$291 = 0;
       break L64;
       break;
      }
      case 13:  {
       $arglist_current17 = HEAP32[$ap>>2]|0;
       $199 = $arglist_current17;
       $200 = ((0) + 4|0);
       $expanded106 = $200;
       $expanded105 = (($expanded106) - 1)|0;
       $201 = (($199) + ($expanded105))|0;
       $202 = ((0) + 4|0);
       $expanded110 = $202;
       $expanded109 = (($expanded110) - 1)|0;
       $expanded108 = $expanded109 ^ -1;
       $203 = $201 & $expanded108;
       $204 = $203;
       $205 = HEAP32[$204>>2]|0;
       $arglist_next18 = ((($204)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next18;
       $206 = $205&65535;
       $207 = $206 << 16 >> 16;
       $208 = ($207|0)<(0);
       $209 = $208 << 31 >> 31;
       $sext93 = $205 << 16;
       $210 = $sext93 >> 16;
       $264 = $210;$291 = $209;
       break L64;
       break;
      }
      case 11:  {
       $arglist_current11 = HEAP32[$ap>>2]|0;
       $180 = $arglist_current11;
       $181 = ((0) + 4|0);
       $expanded92 = $181;
       $expanded91 = (($expanded92) - 1)|0;
       $182 = (($180) + ($expanded91))|0;
       $183 = ((0) + 4|0);
       $expanded96 = $183;
       $expanded95 = (($expanded96) - 1)|0;
       $expanded94 = $expanded95 ^ -1;
       $184 = $182 & $expanded94;
       $185 = $184;
       $186 = HEAP32[$185>>2]|0;
       $arglist_next12 = ((($185)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next12;
       $264 = $186;$291 = 0;
       break L64;
       break;
      }
      case 17:  {
       $arglist_current29 = HEAP32[$ap>>2]|0;
       $237 = $arglist_current29;
       $238 = ((0) + 8|0);
       $expanded134 = $238;
       $expanded133 = (($expanded134) - 1)|0;
       $239 = (($237) + ($expanded133))|0;
       $240 = ((0) + 8|0);
       $expanded138 = $240;
       $expanded137 = (($expanded138) - 1)|0;
       $expanded136 = $expanded137 ^ -1;
       $241 = $239 & $expanded136;
       $242 = $241;
       $243 = +HEAPF64[$242>>3];
       $arglist_next30 = ((($242)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next30;
       HEAPF64[tempDoublePtr>>3] = $243;$244 = HEAP32[tempDoublePtr>>2]|0;
       $245 = HEAP32[tempDoublePtr+4>>2]|0;
       $264 = $244;$291 = $245;
       break L64;
       break;
      }
      default: {
       $264 = $1170;$291 = $1169;
       break L64;
      }
      }
     } while(0);
    }
   }
  } while(0);
  if ((label|0) == 62) {
   label = 0;
   if ($1) {
    $264 = $1174;$291 = $1173;
   } else {
    $1169 = $1173;$1170 = $1174;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $255 = HEAP8[$$lcssa455>>0]|0;
  $256 = $255 << 24 >> 24;
  $257 = ($st$0$lcssa456|0)!=(0);
  $258 = $256 & 15;
  $259 = ($258|0)==(3);
  $or$cond15 = $257 & $259;
  $260 = $256 & -33;
  $t$0 = $or$cond15 ? $260 : $256;
  $261 = $fl$1 & 8192;
  $262 = ($261|0)==(0);
  $263 = $fl$1 & -65537;
  $fl$1$ = $262 ? $fl$1 : $263;
  L86: do {
   switch ($t$0|0) {
   case 105: case 100:  {
    $329 = ($291|0)<(0);
    if ($329) {
     $330 = (_i64Subtract(0,0,($264|0),($291|0))|0);
     $331 = tempRet0;
     $336 = $331;$338 = $330;$pl$0 = 1;$prefix$0 = 4440;
     label = 84;
     break L86;
    }
    $332 = $fl$1$ & 2048;
    $333 = ($332|0)==(0);
    if ($333) {
     $334 = $fl$1$ & 1;
     $335 = ($334|0)==(0);
     $$ = $335 ? 4440 : (4442);
     $336 = $291;$338 = $264;$pl$0 = $334;$prefix$0 = $$;
     label = 84;
    } else {
     $336 = $291;$338 = $264;$pl$0 = 1;$prefix$0 = (4441);
     label = 84;
    }
    break;
   }
   case 110:  {
    switch ($st$0$lcssa456|0) {
    case 0:  {
     $265 = $264;
     HEAP32[$265>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $266 = $264;
     HEAP32[$266>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $267 = ($cnt$1|0)<(0);
     $268 = $267 << 31 >> 31;
     $269 = $264;
     $270 = $269;
     $271 = $270;
     HEAP32[$271>>2] = $cnt$1;
     $272 = (($270) + 4)|0;
     $273 = $272;
     HEAP32[$273>>2] = $268;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $274 = $cnt$1&65535;
     $275 = $264;
     HEAP16[$275>>1] = $274;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $276 = $cnt$1&255;
     $277 = $264;
     HEAP8[$277>>0] = $276;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $278 = $264;
     HEAP32[$278>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $279 = ($cnt$1|0)<(0);
     $280 = $279 << 31 >> 31;
     $281 = $264;
     $282 = $281;
     $283 = $282;
     HEAP32[$283>>2] = $cnt$1;
     $284 = (($282) + 4)|0;
     $285 = $284;
     HEAP32[$285>>2] = $280;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 111:  {
    $312 = ($264|0)==(0);
    $313 = ($291|0)==(0);
    $314 = $312 & $313;
    if ($314) {
     $$0$lcssa$i51 = $2;
    } else {
     $$03$i48 = $2;$316 = $264;$320 = $291;
     while(1) {
      $315 = $316 & 7;
      $317 = $315 | 48;
      $318 = $317&255;
      $319 = ((($$03$i48)) + -1|0);
      HEAP8[$319>>0] = $318;
      $321 = (_bitshift64Lshr(($316|0),($320|0),3)|0);
      $322 = tempRet0;
      $323 = ($321|0)==(0);
      $324 = ($322|0)==(0);
      $325 = $323 & $324;
      if ($325) {
       $$0$lcssa$i51 = $319;
       break;
      } else {
       $$03$i48 = $319;$316 = $321;$320 = $322;
      }
     }
    }
    $326 = $fl$1$ & 8;
    $327 = ($326|0)==(0);
    $or$cond19 = $327 | $314;
    $$24 = $or$cond19 ? 4440 : (4445);
    $328 = $or$cond19&1;
    $$25 = $328 ^ 1;
    $366 = $264;$368 = $291;$a$0 = $$0$lcssa$i51;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $$25;$prefix$1 = $$24;
    label = 89;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 73;
    break;
   }
   case 99:  {
    $378 = $264&255;
    HEAP8[$4>>0] = $378;
    $1175 = $291;$1176 = $264;$a$2 = $4;$fl$6 = $263;$p$5 = 1;$pl$2 = 0;$prefix$2 = 4440;$z$2 = $2;
    break;
   }
   case 109:  {
    $379 = (___errno_location()|0);
    $380 = HEAP32[$379>>2]|0;
    $381 = (_strerror(($380|0))|0);
    $a$1 = $381;
    label = 94;
    break;
   }
   case 115:  {
    $382 = $264;
    $383 = ($264|0)!=(0);
    $384 = $383 ? $382 : 4456;
    $a$1 = $384;
    label = 94;
    break;
   }
   case 117:  {
    $336 = $291;$338 = $264;$pl$0 = 0;$prefix$0 = 4440;
    label = 84;
    break;
   }
   case 112:  {
    $286 = ($p$0>>>0)>(8);
    $287 = $286 ? $p$0 : 8;
    $288 = $fl$1$ | 8;
    $fl$3 = $288;$p$1 = $287;$t$1 = 120;
    label = 73;
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    HEAP32[tempDoublePtr>>2] = $264;HEAP32[tempDoublePtr+4>>2] = $291;$430 = +HEAPF64[tempDoublePtr>>3];
    HEAP32[$e2$i>>2] = 0;
    $431 = ($291|0)<(0);
    if ($431) {
     $432 = -$430;
     $$07$i = $432;$pl$0$i = 1;$prefix$0$i = 4464;
    } else {
     $433 = $fl$1$ & 2048;
     $434 = ($433|0)==(0);
     if ($434) {
      $435 = $fl$1$ & 1;
      $436 = ($435|0)==(0);
      $$$i = $436 ? (4465) : (4470);
      $$07$i = $430;$pl$0$i = $435;$prefix$0$i = $$$i;
     } else {
      $$07$i = $430;$pl$0$i = 1;$prefix$0$i = (4467);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$07$i;$437 = HEAP32[tempDoublePtr>>2]|0;
    $438 = HEAP32[tempDoublePtr+4>>2]|0;
    $439 = $438 & 2146435072;
    $440 = ($439>>>0)<(2146435072);
    $441 = (0)<(0);
    $442 = ($439|0)==(2146435072);
    $443 = $442 & $441;
    $444 = $440 | $443;
    do {
     if ($444) {
      $471 = (+_frexpl($$07$i,$e2$i));
      $472 = $471 * 2.0;
      $473 = $472 != 0.0;
      if ($473) {
       $474 = HEAP32[$e2$i>>2]|0;
       $475 = (($474) + -1)|0;
       HEAP32[$e2$i>>2] = $475;
      }
      $476 = $t$0 | 32;
      $477 = ($476|0)==(97);
      if ($477) {
       $478 = $t$0 & 32;
       $479 = ($478|0)==(0);
       $480 = ((($prefix$0$i)) + 9|0);
       $prefix$0$$i = $479 ? $prefix$0$i : $480;
       $481 = $pl$0$i | 2;
       $482 = ($p$0>>>0)>(11);
       $483 = (12 - ($p$0))|0;
       $484 = ($483|0)==(0);
       $485 = $482 | $484;
       do {
        if ($485) {
         $$1$i = $472;
        } else {
         $re$1179$i = $483;$round$0178$i = 8.0;
         while(1) {
          $486 = (($re$1179$i) + -1)|0;
          $487 = $round$0178$i * 16.0;
          $488 = ($486|0)==(0);
          if ($488) {
           $$lcssa483 = $487;
           break;
          } else {
           $re$1179$i = $486;$round$0178$i = $487;
          }
         }
         $489 = HEAP8[$prefix$0$$i>>0]|0;
         $490 = ($489<<24>>24)==(45);
         if ($490) {
          $491 = -$472;
          $492 = $491 - $$lcssa483;
          $493 = $$lcssa483 + $492;
          $494 = -$493;
          $$1$i = $494;
          break;
         } else {
          $495 = $472 + $$lcssa483;
          $496 = $495 - $$lcssa483;
          $$1$i = $496;
          break;
         }
        }
       } while(0);
       $497 = HEAP32[$e2$i>>2]|0;
       $498 = ($497|0)<(0);
       $499 = (0 - ($497))|0;
       $500 = $498 ? $499 : $497;
       $501 = ($500|0)<(0);
       if ($501) {
        $502 = ($500|0)<(0);
        $503 = $502 << 31 >> 31;
        $$05$i$i = $7;$504 = $500;$505 = $503;
        while(1) {
         $506 = (___uremdi3(($504|0),($505|0),10,0)|0);
         $507 = tempRet0;
         $508 = $506 | 48;
         $509 = $508&255;
         $510 = ((($$05$i$i)) + -1|0);
         HEAP8[$510>>0] = $509;
         $511 = (___udivdi3(($504|0),($505|0),10,0)|0);
         $512 = tempRet0;
         $513 = ($505>>>0)>(9);
         $514 = ($504>>>0)>(4294967295);
         $515 = ($505|0)==(9);
         $516 = $515 & $514;
         $517 = $513 | $516;
         if ($517) {
          $$05$i$i = $510;$504 = $511;$505 = $512;
         } else {
          $$lcssa484 = $510;$1183 = $511;$1184 = $512;
          break;
         }
        }
        $$0$lcssa$i48$i = $$lcssa484;$$01$lcssa$off0$i$i = $1183;
       } else {
        $$0$lcssa$i48$i = $7;$$01$lcssa$off0$i$i = $500;
       }
       $518 = ($$01$lcssa$off0$i$i|0)==(0);
       if ($518) {
        $$1$lcssa$i$i = $$0$lcssa$i48$i;
       } else {
        $$12$i$i = $$0$lcssa$i48$i;$y$03$i$i = $$01$lcssa$off0$i$i;
        while(1) {
         $519 = (($y$03$i$i>>>0) % 10)&-1;
         $520 = $519 | 48;
         $521 = $520&255;
         $522 = ((($$12$i$i)) + -1|0);
         HEAP8[$522>>0] = $521;
         $523 = (($y$03$i$i>>>0) / 10)&-1;
         $524 = ($y$03$i$i>>>0)<(10);
         if ($524) {
          $$1$lcssa$i$i = $522;
          break;
         } else {
          $$12$i$i = $522;$y$03$i$i = $523;
         }
        }
       }
       $525 = ($$1$lcssa$i$i|0)==($7|0);
       if ($525) {
        HEAP8[$8>>0] = 48;
        $estr$0$i = $8;
       } else {
        $estr$0$i = $$1$lcssa$i$i;
       }
       $526 = HEAP32[$e2$i>>2]|0;
       $527 = $526 >> 31;
       $528 = $527 & 2;
       $529 = (($528) + 43)|0;
       $530 = $529&255;
       $531 = ((($estr$0$i)) + -1|0);
       HEAP8[$531>>0] = $530;
       $532 = (($t$0) + 15)|0;
       $533 = $532&255;
       $534 = ((($estr$0$i)) + -2|0);
       HEAP8[$534>>0] = $533;
       $535 = $fl$1$ & 8;
       $536 = ($535|0)==(0);
       if ($536) {
        $notrhs$i = ($p$0|0)<(1);
        if ($notrhs$i) {
         $$2$us$us$i = $$1$i;$s$0$us$us$i = $buf$i;
         while(1) {
          $537 = (~~(($$2$us$us$i)));
          $538 = (4424 + ($537)|0);
          $539 = HEAP8[$538>>0]|0;
          $540 = $539&255;
          $541 = $540 | $478;
          $542 = $541&255;
          $543 = ((($s$0$us$us$i)) + 1|0);
          HEAP8[$s$0$us$us$i>>0] = $542;
          $544 = (+($537|0));
          $545 = $$2$us$us$i - $544;
          $546 = $545 * 16.0;
          $547 = $543;
          $548 = (($547) - ($0))|0;
          $549 = ($548|0)!=(1);
          $notlhs$us$us$i = $546 == 0.0;
          $or$cond$i79 = $549 | $notlhs$us$us$i;
          if ($or$cond$i79) {
           $s$1$us$us$i = $543;
          } else {
           $550 = ((($s$0$us$us$i)) + 2|0);
           HEAP8[$543>>0] = 46;
           $s$1$us$us$i = $550;
          }
          $551 = $546 != 0.0;
          if ($551) {
           $$2$us$us$i = $546;$s$0$us$us$i = $s$1$us$us$i;
          } else {
           $s$1$lcssa$i = $s$1$us$us$i;
           break;
          }
         }
        } else {
         $$2$us$i = $$1$i;$s$0$us$i = $buf$i;
         while(1) {
          $552 = (~~(($$2$us$i)));
          $553 = (4424 + ($552)|0);
          $554 = HEAP8[$553>>0]|0;
          $555 = $554&255;
          $556 = $555 | $478;
          $557 = $556&255;
          $558 = ((($s$0$us$i)) + 1|0);
          HEAP8[$s$0$us$i>>0] = $557;
          $559 = (+($552|0));
          $560 = $$2$us$i - $559;
          $561 = $560 * 16.0;
          $562 = $558;
          $563 = (($562) - ($0))|0;
          $564 = ($563|0)==(1);
          if ($564) {
           $565 = ((($s$0$us$i)) + 2|0);
           HEAP8[$558>>0] = 46;
           $s$1$us$i = $565;
          } else {
           $s$1$us$i = $558;
          }
          $566 = $561 != 0.0;
          if ($566) {
           $$2$us$i = $561;$s$0$us$i = $s$1$us$i;
          } else {
           $s$1$lcssa$i = $s$1$us$i;
           break;
          }
         }
        }
       } else {
        $$2$i = $$1$i;$s$0$i = $buf$i;
        while(1) {
         $567 = (~~(($$2$i)));
         $568 = (4424 + ($567)|0);
         $569 = HEAP8[$568>>0]|0;
         $570 = $569&255;
         $571 = $570 | $478;
         $572 = $571&255;
         $573 = ((($s$0$i)) + 1|0);
         HEAP8[$s$0$i>>0] = $572;
         $574 = (+($567|0));
         $575 = $$2$i - $574;
         $576 = $575 * 16.0;
         $577 = $573;
         $578 = (($577) - ($0))|0;
         $579 = ($578|0)==(1);
         if ($579) {
          $580 = ((($s$0$i)) + 2|0);
          HEAP8[$573>>0] = 46;
          $s$1$i = $580;
         } else {
          $s$1$i = $573;
         }
         $581 = $576 != 0.0;
         if ($581) {
          $$2$i = $576;$s$0$i = $s$1$i;
         } else {
          $s$1$lcssa$i = $s$1$i;
          break;
         }
        }
       }
       $582 = ($p$0|0)!=(0);
       $$pre300$i = $s$1$lcssa$i;
       $583 = (($11) + ($$pre300$i))|0;
       $584 = ($583|0)<($p$0|0);
       $or$cond332 = $582 & $584;
       $585 = $534;
       $586 = (($12) + ($p$0))|0;
       $587 = (($586) - ($585))|0;
       $588 = $534;
       $589 = (($10) - ($588))|0;
       $590 = (($589) + ($$pre300$i))|0;
       $l$0$i = $or$cond332 ? $587 : $590;
       $591 = (($l$0$i) + ($481))|0;
       $592 = $fl$1$ & 73728;
       $593 = ($592|0)==(0);
       $594 = ($w$1|0)>($591|0);
       $or$cond$i52$i = $593 & $594;
       if ($or$cond$i52$i) {
        $595 = (($w$1) - ($591))|0;
        $596 = ($595>>>0)>(256);
        $597 = $596 ? 256 : $595;
        _memset(($pad$i|0),32,($597|0))|0;
        $598 = ($595>>>0)>(255);
        if ($598) {
         $$01$i54$i = $595;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $599 = (($$01$i54$i) + -256)|0;
          $600 = ($599>>>0)>(255);
          if ($600) {
           $$01$i54$i = $599;
          } else {
           break;
          }
         }
         $601 = $595 & 255;
         $$0$lcssa$i56$i = $601;
        } else {
         $$0$lcssa$i56$i = $595;
        }
        (___fwritex($pad$i,$$0$lcssa$i56$i,$f)|0);
       }
       (___fwritex($prefix$0$$i,$481,$f)|0);
       $602 = ($592|0)==(65536);
       $or$cond$i59$i = $602 & $594;
       if ($or$cond$i59$i) {
        $603 = (($w$1) - ($591))|0;
        $604 = ($603>>>0)>(256);
        $605 = $604 ? 256 : $603;
        _memset(($pad$i|0),48,($605|0))|0;
        $606 = ($603>>>0)>(255);
        if ($606) {
         $$01$i61$i = $603;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $607 = (($$01$i61$i) + -256)|0;
          $608 = ($607>>>0)>(255);
          if ($608) {
           $$01$i61$i = $607;
          } else {
           break;
          }
         }
         $609 = $603 & 255;
         $$0$lcssa$i63$i = $609;
        } else {
         $$0$lcssa$i63$i = $603;
        }
        (___fwritex($pad$i,$$0$lcssa$i63$i,$f)|0);
       }
       $610 = (($$pre300$i) - ($0))|0;
       (___fwritex($buf$i,$610,$f)|0);
       $611 = $534;
       $612 = (($9) - ($611))|0;
       $613 = (($l$0$i) - ($612))|0;
       $614 = (($613) - ($610))|0;
       $615 = ($614|0)>(0);
       if ($615) {
        $616 = ($614>>>0)>(256);
        $617 = $616 ? 256 : $614;
        _memset(($pad$i|0),48,($617|0))|0;
        $618 = ($614>>>0)>(255);
        if ($618) {
         $$01$i67$i = $614;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $619 = (($$01$i67$i) + -256)|0;
          $620 = ($619>>>0)>(255);
          if ($620) {
           $$01$i67$i = $619;
          } else {
           break;
          }
         }
         $621 = $614 & 255;
         $$0$lcssa$i69$i = $621;
        } else {
         $$0$lcssa$i69$i = $614;
        }
        (___fwritex($pad$i,$$0$lcssa$i69$i,$f)|0);
       }
       (___fwritex($534,$612,$f)|0);
       $622 = ($592|0)==(8192);
       $or$cond$i72$i = $622 & $594;
       if ($or$cond$i72$i) {
        $623 = (($w$1) - ($591))|0;
        $624 = ($623>>>0)>(256);
        $625 = $624 ? 256 : $623;
        _memset(($pad$i|0),32,($625|0))|0;
        $626 = ($623>>>0)>(255);
        if ($626) {
         $$01$i74$i = $623;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $627 = (($$01$i74$i) + -256)|0;
          $628 = ($627>>>0)>(255);
          if ($628) {
           $$01$i74$i = $627;
          } else {
           break;
          }
         }
         $629 = $623 & 255;
         $$0$lcssa$i76$i = $629;
        } else {
         $$0$lcssa$i76$i = $623;
        }
        (___fwritex($pad$i,$$0$lcssa$i76$i,$f)|0);
       }
       $w$$i = $594 ? $w$1 : $591;
       $$0$i = $w$$i;
       break;
      }
      $630 = ($p$0|0)<(0);
      $$p$i = $630 ? 6 : $p$0;
      if ($473) {
       $631 = $472 * 268435456.0;
       $632 = HEAP32[$e2$i>>2]|0;
       $633 = (($632) + -28)|0;
       HEAP32[$e2$i>>2] = $633;
       $$3$i = $631;$634 = $633;
      } else {
       $$pre$i = HEAP32[$e2$i>>2]|0;
       $$3$i = $472;$634 = $$pre$i;
      }
      $635 = ($634|0)<(0);
      $$31$i = $635 ? $big$i : $13;
      $636 = $$31$i;
      $$4$i = $$3$i;$z$0$i = $$31$i;
      while(1) {
       $637 = (~~(($$4$i))>>>0);
       HEAP32[$z$0$i>>2] = $637;
       $638 = ((($z$0$i)) + 4|0);
       $639 = (+($637>>>0));
       $640 = $$4$i - $639;
       $641 = $640 * 1.0E+9;
       $642 = $641 != 0.0;
       if ($642) {
        $$4$i = $641;$z$0$i = $638;
       } else {
        $$lcssa460 = $638;
        break;
       }
      }
      $$pr$i = HEAP32[$e2$i>>2]|0;
      $643 = ($$pr$i|0)>(0);
      if ($643) {
       $644 = $$pr$i;$a$1253$i = $$31$i;$z$1252$i = $$lcssa460;
       while(1) {
        $645 = ($644|0)>(29);
        $646 = $645 ? 29 : $644;
        $d$0245$i = ((($z$1252$i)) + -4|0);
        $647 = ($d$0245$i>>>0)<($a$1253$i>>>0);
        do {
         if ($647) {
          $a$2$ph$i = $a$1253$i;
         } else {
          $carry$0246$i = 0;$d$0247$i = $d$0245$i;
          while(1) {
           $648 = HEAP32[$d$0247$i>>2]|0;
           $649 = (_bitshift64Shl(($648|0),0,($646|0))|0);
           $650 = tempRet0;
           $651 = (_i64Add(($649|0),($650|0),($carry$0246$i|0),0)|0);
           $652 = tempRet0;
           $653 = (___uremdi3(($651|0),($652|0),1000000000,0)|0);
           $654 = tempRet0;
           HEAP32[$d$0247$i>>2] = $653;
           $655 = (___udivdi3(($651|0),($652|0),1000000000,0)|0);
           $656 = tempRet0;
           $d$0$i = ((($d$0247$i)) + -4|0);
           $657 = ($d$0$i>>>0)<($a$1253$i>>>0);
           if ($657) {
            $$lcssa461 = $655;
            break;
           } else {
            $carry$0246$i = $655;$d$0247$i = $d$0$i;
           }
          }
          $658 = ($$lcssa461|0)==(0);
          if ($658) {
           $a$2$ph$i = $a$1253$i;
           break;
          }
          $659 = ((($a$1253$i)) + -4|0);
          HEAP32[$659>>2] = $$lcssa461;
          $a$2$ph$i = $659;
         }
        } while(0);
        $z$2$i = $z$1252$i;
        while(1) {
         $660 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
         if (!($660)) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $661 = ((($z$2$i)) + -4|0);
         $662 = HEAP32[$661>>2]|0;
         $663 = ($662|0)==(0);
         if ($663) {
          $z$2$i = $661;
         } else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $664 = HEAP32[$e2$i>>2]|0;
        $665 = (($664) - ($646))|0;
        HEAP32[$e2$i>>2] = $665;
        $666 = ($665|0)>(0);
        if ($666) {
         $644 = $665;$a$1253$i = $a$2$ph$i;$z$1252$i = $z$2$i$lcssa;
        } else {
         $$pr146$i = $665;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i$lcssa;
         break;
        }
       }
      } else {
       $$pr146$i = $$pr$i;$a$1$lcssa$i = $$31$i;$z$1$lcssa$i = $$lcssa460;
      }
      $667 = ($$pr146$i|0)<(0);
      L235: do {
       if ($667) {
        $668 = (($$p$i) + 25)|0;
        $669 = (($668|0) / 9)&-1;
        $670 = (($669) + 1)|0;
        $671 = ($476|0)==(102);
        if (!($671)) {
         $704 = $$pr146$i;$a$3240$i = $a$1$lcssa$i;$z$3239$i = $z$1$lcssa$i;
         while(1) {
          $703 = (0 - ($704))|0;
          $705 = ($703|0)>(9);
          $706 = $705 ? 9 : $703;
          $707 = ($a$3240$i>>>0)<($z$3239$i>>>0);
          do {
           if ($707) {
            $711 = 1 << $706;
            $712 = (($711) + -1)|0;
            $713 = 1000000000 >>> $706;
            $carry3$0234$i = 0;$d$1233$i = $a$3240$i;
            while(1) {
             $714 = HEAP32[$d$1233$i>>2]|0;
             $715 = $714 & $712;
             $716 = $714 >>> $706;
             $717 = (($716) + ($carry3$0234$i))|0;
             HEAP32[$d$1233$i>>2] = $717;
             $718 = Math_imul($715, $713)|0;
             $719 = ((($d$1233$i)) + 4|0);
             $720 = ($719>>>0)<($z$3239$i>>>0);
             if ($720) {
              $carry3$0234$i = $718;$d$1233$i = $719;
             } else {
              $$lcssa463 = $718;
              break;
             }
            }
            $721 = HEAP32[$a$3240$i>>2]|0;
            $722 = ($721|0)==(0);
            $723 = ((($a$3240$i)) + 4|0);
            $$a$3$i = $722 ? $723 : $a$3240$i;
            $724 = ($$lcssa463|0)==(0);
            if ($724) {
             $$a$3306$i = $$a$3$i;$z$4$i = $z$3239$i;
             break;
            }
            $725 = ((($z$3239$i)) + 4|0);
            HEAP32[$z$3239$i>>2] = $$lcssa463;
            $$a$3306$i = $$a$3$i;$z$4$i = $725;
           } else {
            $708 = HEAP32[$a$3240$i>>2]|0;
            $709 = ($708|0)==(0);
            $710 = ((($a$3240$i)) + 4|0);
            $$a$3305$i = $709 ? $710 : $a$3240$i;
            $$a$3306$i = $$a$3305$i;$z$4$i = $z$3239$i;
           }
          } while(0);
          $726 = $z$4$i;
          $727 = $$a$3306$i;
          $728 = (($726) - ($727))|0;
          $729 = $728 >> 2;
          $730 = ($729|0)>($670|0);
          $731 = (($$a$3306$i) + ($670<<2)|0);
          $$z$4$i = $730 ? $731 : $z$4$i;
          $732 = HEAP32[$e2$i>>2]|0;
          $733 = (($732) + ($706))|0;
          HEAP32[$e2$i>>2] = $733;
          $734 = ($733|0)<(0);
          if ($734) {
           $704 = $733;$a$3240$i = $$a$3306$i;$z$3239$i = $$z$4$i;
          } else {
           $a$3$lcssa$i = $$a$3306$i;$z$3$lcssa$i = $$z$4$i;
           break L235;
          }
         }
        }
        $672 = (($$31$i) + ($670<<2)|0);
        $674 = $$pr146$i;$a$3240$us$i = $a$1$lcssa$i;$z$3239$us$i = $z$1$lcssa$i;
        while(1) {
         $673 = (0 - ($674))|0;
         $675 = ($673|0)>(9);
         $676 = $675 ? 9 : $673;
         $677 = ($a$3240$us$i>>>0)<($z$3239$us$i>>>0);
         do {
          if ($677) {
           $702 = 1 << $676;
           $695 = (($702) + -1)|0;
           $699 = 1000000000 >>> $676;
           $carry3$0234$us$i = 0;$d$1233$us$i = $a$3240$us$i;
           while(1) {
            $693 = HEAP32[$d$1233$us$i>>2]|0;
            $694 = $693 & $695;
            $696 = $693 >>> $676;
            $697 = (($696) + ($carry3$0234$us$i))|0;
            HEAP32[$d$1233$us$i>>2] = $697;
            $698 = Math_imul($694, $699)|0;
            $700 = ((($d$1233$us$i)) + 4|0);
            $701 = ($700>>>0)<($z$3239$us$i>>>0);
            if ($701) {
             $carry3$0234$us$i = $698;$d$1233$us$i = $700;
            } else {
             $$lcssa464 = $698;
             break;
            }
           }
           $681 = HEAP32[$a$3240$us$i>>2]|0;
           $682 = ($681|0)==(0);
           $683 = ((($a$3240$us$i)) + 4|0);
           $$a$3$us$i = $682 ? $683 : $a$3240$us$i;
           $684 = ($$lcssa464|0)==(0);
           if ($684) {
            $$a$3$us304$i = $$a$3$us$i;$z$4$us$i = $z$3239$us$i;
            break;
           }
           $685 = ((($z$3239$us$i)) + 4|0);
           HEAP32[$z$3239$us$i>>2] = $$lcssa464;
           $$a$3$us304$i = $$a$3$us$i;$z$4$us$i = $685;
          } else {
           $678 = HEAP32[$a$3240$us$i>>2]|0;
           $679 = ($678|0)==(0);
           $680 = ((($a$3240$us$i)) + 4|0);
           $$a$3$us303$i = $679 ? $680 : $a$3240$us$i;
           $$a$3$us304$i = $$a$3$us303$i;$z$4$us$i = $z$3239$us$i;
          }
         } while(0);
         $686 = $z$4$us$i;
         $687 = (($686) - ($636))|0;
         $688 = $687 >> 2;
         $689 = ($688|0)>($670|0);
         $$z$4$us$i = $689 ? $672 : $z$4$us$i;
         $690 = HEAP32[$e2$i>>2]|0;
         $691 = (($690) + ($676))|0;
         HEAP32[$e2$i>>2] = $691;
         $692 = ($691|0)<(0);
         if ($692) {
          $674 = $691;$a$3240$us$i = $$a$3$us304$i;$z$3239$us$i = $$z$4$us$i;
         } else {
          $a$3$lcssa$i = $$a$3$us304$i;$z$3$lcssa$i = $$z$4$us$i;
          break;
         }
        }
       } else {
        $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
       }
      } while(0);
      $735 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
      do {
       if ($735) {
        $736 = $a$3$lcssa$i;
        $737 = (($636) - ($736))|0;
        $738 = $737 >> 2;
        $739 = ($738*9)|0;
        $740 = HEAP32[$a$3$lcssa$i>>2]|0;
        $741 = ($740>>>0)<(10);
        if ($741) {
         $e$1$i = $739;
         break;
        } else {
         $e$0229$i = $739;$i$0228$i = 10;
        }
        while(1) {
         $742 = ($i$0228$i*10)|0;
         $743 = (($e$0229$i) + 1)|0;
         $744 = ($740>>>0)<($742>>>0);
         if ($744) {
          $e$1$i = $743;
          break;
         } else {
          $e$0229$i = $743;$i$0228$i = $742;
         }
        }
       } else {
        $e$1$i = 0;
       }
      } while(0);
      $745 = ($476|0)!=(102);
      $746 = $745 ? $e$1$i : 0;
      $747 = (($$p$i) - ($746))|0;
      $748 = ($476|0)==(103);
      $749 = ($$p$i|0)!=(0);
      $750 = $749 & $748;
      $$neg151$i = $750 << 31 >> 31;
      $751 = (($747) + ($$neg151$i))|0;
      $752 = $z$3$lcssa$i;
      $753 = (($752) - ($636))|0;
      $754 = $753 >> 2;
      $755 = ($754*9)|0;
      $756 = (($755) + -9)|0;
      $757 = ($751|0)<($756|0);
      if ($757) {
       $758 = (($751) + 9216)|0;
       $759 = (($758|0) / 9)&-1;
       $$sum$i = (($759) + -1023)|0;
       $760 = (($$31$i) + ($$sum$i<<2)|0);
       $761 = (($758|0) % 9)&-1;
       $j$0221$i = (($761) + 1)|0;
       $762 = ($j$0221$i|0)<(9);
       if ($762) {
        $i$1222$i = 10;$j$0223$i = $j$0221$i;
        while(1) {
         $763 = ($i$1222$i*10)|0;
         $j$0$i = (($j$0223$i) + 1)|0;
         $exitcond$i = ($j$0$i|0)==(9);
         if ($exitcond$i) {
          $i$1$lcssa$i = $763;
          break;
         } else {
          $i$1222$i = $763;$j$0223$i = $j$0$i;
         }
        }
       } else {
        $i$1$lcssa$i = 10;
       }
       $764 = HEAP32[$760>>2]|0;
       $765 = (($764>>>0) % ($i$1$lcssa$i>>>0))&-1;
       $766 = ($765|0)==(0);
       if ($766) {
        $$sum15$i = (($759) + -1022)|0;
        $767 = (($$31$i) + ($$sum15$i<<2)|0);
        $768 = ($767|0)==($z$3$lcssa$i|0);
        if ($768) {
         $a$7$i = $a$3$lcssa$i;$d$3$i = $760;$e$3$i = $e$1$i;
        } else {
         label = 221;
        }
       } else {
        label = 221;
       }
       do {
        if ((label|0) == 221) {
         label = 0;
         $769 = (($764>>>0) / ($i$1$lcssa$i>>>0))&-1;
         $770 = $769 & 1;
         $771 = ($770|0)==(0);
         $$20$i = $771 ? 9007199254740992.0 : 9007199254740994.0;
         $772 = (($i$1$lcssa$i|0) / 2)&-1;
         $773 = ($765>>>0)<($772>>>0);
         do {
          if ($773) {
           $small$0$i = 0.5;
          } else {
           $774 = ($765|0)==($772|0);
           if ($774) {
            $$sum16$i = (($759) + -1022)|0;
            $775 = (($$31$i) + ($$sum16$i<<2)|0);
            $776 = ($775|0)==($z$3$lcssa$i|0);
            if ($776) {
             $small$0$i = 1.0;
             break;
            }
           }
           $small$0$i = 1.5;
          }
         } while(0);
         $777 = ($pl$0$i|0)==(0);
         do {
          if ($777) {
           $round6$1$i = $$20$i;$small$1$i = $small$0$i;
          } else {
           $778 = HEAP8[$prefix$0$i>>0]|0;
           $779 = ($778<<24>>24)==(45);
           if (!($779)) {
            $round6$1$i = $$20$i;$small$1$i = $small$0$i;
            break;
           }
           $780 = -$$20$i;
           $781 = -$small$0$i;
           $round6$1$i = $780;$small$1$i = $781;
          }
         } while(0);
         $782 = (($764) - ($765))|0;
         HEAP32[$760>>2] = $782;
         $783 = $round6$1$i + $small$1$i;
         $784 = $783 != $round6$1$i;
         if (!($784)) {
          $a$7$i = $a$3$lcssa$i;$d$3$i = $760;$e$3$i = $e$1$i;
          break;
         }
         $785 = (($782) + ($i$1$lcssa$i))|0;
         HEAP32[$760>>2] = $785;
         $786 = ($785>>>0)>(999999999);
         if ($786) {
          $a$5215$i = $a$3$lcssa$i;$d$2214$i = $760;
          while(1) {
           $787 = ((($d$2214$i)) + -4|0);
           HEAP32[$d$2214$i>>2] = 0;
           $788 = ($787>>>0)<($a$5215$i>>>0);
           if ($788) {
            $789 = ((($a$5215$i)) + -4|0);
            HEAP32[$789>>2] = 0;
            $a$6$i = $789;
           } else {
            $a$6$i = $a$5215$i;
           }
           $790 = HEAP32[$787>>2]|0;
           $791 = (($790) + 1)|0;
           HEAP32[$787>>2] = $791;
           $792 = ($791>>>0)>(999999999);
           if ($792) {
            $a$5215$i = $a$6$i;$d$2214$i = $787;
           } else {
            $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $787;
            break;
           }
          }
         } else {
          $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $760;
         }
         $793 = $a$5$lcssa$i;
         $794 = (($636) - ($793))|0;
         $795 = $794 >> 2;
         $796 = ($795*9)|0;
         $797 = HEAP32[$a$5$lcssa$i>>2]|0;
         $798 = ($797>>>0)<(10);
         if ($798) {
          $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $796;
          break;
         } else {
          $e$2210$i = $796;$i$2209$i = 10;
         }
         while(1) {
          $799 = ($i$2209$i*10)|0;
          $800 = (($e$2210$i) + 1)|0;
          $801 = ($797>>>0)<($799>>>0);
          if ($801) {
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $800;
           break;
          } else {
           $e$2210$i = $800;$i$2209$i = $799;
          }
         }
        }
       } while(0);
       $802 = ((($d$3$i)) + 4|0);
       $803 = ($z$3$lcssa$i>>>0)>($802>>>0);
       $$z$3$i = $803 ? $802 : $z$3$lcssa$i;
       $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
      }
      $804 = (0 - ($e$4$ph$i))|0;
      $z$6$i = $z$6$ph$i;
      while(1) {
       $805 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
       if (!($805)) {
        $$lcssa275$i = 0;$z$6$i$lcssa = $z$6$i;
        break;
       }
       $806 = ((($z$6$i)) + -4|0);
       $807 = HEAP32[$806>>2]|0;
       $808 = ($807|0)==(0);
       if ($808) {
        $z$6$i = $806;
       } else {
        $$lcssa275$i = 1;$z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do {
       if ($748) {
        $809 = $749&1;
        $810 = $809 ^ 1;
        $$p$$i = (($810) + ($$p$i))|0;
        $811 = ($$p$$i|0)>($e$4$ph$i|0);
        $812 = ($e$4$ph$i|0)>(-5);
        $or$cond6$i = $811 & $812;
        if ($or$cond6$i) {
         $813 = (($t$0) + -1)|0;
         $$neg152$i = (($$p$$i) + -1)|0;
         $814 = (($$neg152$i) - ($e$4$ph$i))|0;
         $$013$i = $813;$$210$i = $814;
        } else {
         $815 = (($t$0) + -2)|0;
         $816 = (($$p$$i) + -1)|0;
         $$013$i = $815;$$210$i = $816;
        }
        $817 = $fl$1$ & 8;
        $818 = ($817|0)==(0);
        if (!($818)) {
         $$114$i = $$013$i;$$311$i = $$210$i;$$pre$phi302$iZ2D = $817;
         break;
        }
        do {
         if ($$lcssa275$i) {
          $819 = ((($z$6$i$lcssa)) + -4|0);
          $820 = HEAP32[$819>>2]|0;
          $821 = ($820|0)==(0);
          if ($821) {
           $j$2$i = 9;
           break;
          }
          $822 = (($820>>>0) % 10)&-1;
          $823 = ($822|0)==(0);
          if ($823) {
           $i$3205$i = 10;$j$1206$i = 0;
          } else {
           $j$2$i = 0;
           break;
          }
          while(1) {
           $824 = ($i$3205$i*10)|0;
           $825 = (($j$1206$i) + 1)|0;
           $826 = (($820>>>0) % ($824>>>0))&-1;
           $827 = ($826|0)==(0);
           if ($827) {
            $i$3205$i = $824;$j$1206$i = $825;
           } else {
            $j$2$i = $825;
            break;
           }
          }
         } else {
          $j$2$i = 9;
         }
        } while(0);
        $828 = $$013$i | 32;
        $829 = ($828|0)==(102);
        $830 = $z$6$i$lcssa;
        $831 = (($830) - ($636))|0;
        $832 = $831 >> 2;
        $833 = ($832*9)|0;
        $834 = (($833) + -9)|0;
        if ($829) {
         $835 = (($834) - ($j$2$i))|0;
         $836 = ($835|0)<(0);
         $$21$i = $836 ? 0 : $835;
         $837 = ($$210$i|0)<($$21$i|0);
         $$210$$22$i = $837 ? $$210$i : $$21$i;
         $$114$i = $$013$i;$$311$i = $$210$$22$i;$$pre$phi302$iZ2D = 0;
         break;
        } else {
         $838 = (($834) + ($e$4$ph$i))|0;
         $839 = (($838) - ($j$2$i))|0;
         $840 = ($839|0)<(0);
         $$23$i = $840 ? 0 : $839;
         $841 = ($$210$i|0)<($$23$i|0);
         $$210$$24$i = $841 ? $$210$i : $$23$i;
         $$114$i = $$013$i;$$311$i = $$210$$24$i;$$pre$phi302$iZ2D = 0;
         break;
        }
       } else {
        $$pre301$i = $fl$1$ & 8;
        $$114$i = $t$0;$$311$i = $$p$i;$$pre$phi302$iZ2D = $$pre301$i;
       }
      } while(0);
      $842 = $$311$i | $$pre$phi302$iZ2D;
      $843 = ($842|0)!=(0);
      $844 = $843&1;
      $845 = $$114$i | 32;
      $846 = ($845|0)==(102);
      if ($846) {
       $847 = ($e$4$ph$i|0)>(0);
       $848 = $847 ? $e$4$ph$i : 0;
       $$pn$i = $848;$estr$2$i = 0;
      } else {
       $849 = ($e$4$ph$i|0)<(0);
       $850 = $849 ? $804 : $e$4$ph$i;
       $851 = ($850|0)<(0);
       if ($851) {
        $852 = ($850|0)<(0);
        $853 = $852 << 31 >> 31;
        $$05$i79$i = $7;$854 = $850;$855 = $853;
        while(1) {
         $856 = (___uremdi3(($854|0),($855|0),10,0)|0);
         $857 = tempRet0;
         $858 = $856 | 48;
         $859 = $858&255;
         $860 = ((($$05$i79$i)) + -1|0);
         HEAP8[$860>>0] = $859;
         $861 = (___udivdi3(($854|0),($855|0),10,0)|0);
         $862 = tempRet0;
         $863 = ($855>>>0)>(9);
         $864 = ($854>>>0)>(4294967295);
         $865 = ($855|0)==(9);
         $866 = $865 & $864;
         $867 = $863 | $866;
         if ($867) {
          $$05$i79$i = $860;$854 = $861;$855 = $862;
         } else {
          $$lcssa470 = $860;$1185 = $861;$1186 = $862;
          break;
         }
        }
        $$0$lcssa$i84$i = $$lcssa470;$$01$lcssa$off0$i85$i = $1185;
       } else {
        $$0$lcssa$i84$i = $7;$$01$lcssa$off0$i85$i = $850;
       }
       $868 = ($$01$lcssa$off0$i85$i|0)==(0);
       if ($868) {
        $estr$1$ph$i = $$0$lcssa$i84$i;
       } else {
        $$12$i87$i = $$0$lcssa$i84$i;$y$03$i86$i = $$01$lcssa$off0$i85$i;
        while(1) {
         $869 = (($y$03$i86$i>>>0) % 10)&-1;
         $870 = $869 | 48;
         $871 = $870&255;
         $872 = ((($$12$i87$i)) + -1|0);
         HEAP8[$872>>0] = $871;
         $873 = (($y$03$i86$i>>>0) / 10)&-1;
         $874 = ($y$03$i86$i>>>0)<(10);
         if ($874) {
          $estr$1$ph$i = $872;
          break;
         } else {
          $$12$i87$i = $872;$y$03$i86$i = $873;
         }
        }
       }
       $875 = $estr$1$ph$i;
       $876 = (($9) - ($875))|0;
       $877 = ($876|0)<(2);
       if ($877) {
        $estr$1201$i = $estr$1$ph$i;
        while(1) {
         $878 = ((($estr$1201$i)) + -1|0);
         HEAP8[$878>>0] = 48;
         $879 = $878;
         $880 = (($9) - ($879))|0;
         $881 = ($880|0)<(2);
         if ($881) {
          $estr$1201$i = $878;
         } else {
          $estr$1$lcssa$i = $878;
          break;
         }
        }
       } else {
        $estr$1$lcssa$i = $estr$1$ph$i;
       }
       $882 = $e$4$ph$i >> 31;
       $883 = $882 & 2;
       $884 = (($883) + 43)|0;
       $885 = $884&255;
       $886 = ((($estr$1$lcssa$i)) + -1|0);
       HEAP8[$886>>0] = $885;
       $887 = $$114$i&255;
       $888 = ((($estr$1$lcssa$i)) + -2|0);
       HEAP8[$888>>0] = $887;
       $889 = $888;
       $890 = (($9) - ($889))|0;
       $$pn$i = $890;$estr$2$i = $888;
      }
      $891 = (($pl$0$i) + 1)|0;
      $892 = (($891) + ($$311$i))|0;
      $l$1$i = (($892) + ($844))|0;
      $893 = (($l$1$i) + ($$pn$i))|0;
      $894 = $fl$1$ & 73728;
      $895 = ($894|0)==(0);
      $896 = ($w$1|0)>($893|0);
      $or$cond$i93$i = $895 & $896;
      if ($or$cond$i93$i) {
       $897 = (($w$1) - ($893))|0;
       $898 = ($897>>>0)>(256);
       $899 = $898 ? 256 : $897;
       _memset(($pad$i|0),32,($899|0))|0;
       $900 = ($897>>>0)>(255);
       if ($900) {
        $$01$i95$i = $897;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $901 = (($$01$i95$i) + -256)|0;
         $902 = ($901>>>0)>(255);
         if ($902) {
          $$01$i95$i = $901;
         } else {
          break;
         }
        }
        $903 = $897 & 255;
        $$0$lcssa$i97$i = $903;
       } else {
        $$0$lcssa$i97$i = $897;
       }
       (___fwritex($pad$i,$$0$lcssa$i97$i,$f)|0);
      }
      (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
      $904 = ($894|0)==(65536);
      $or$cond$i100$i = $904 & $896;
      if ($or$cond$i100$i) {
       $905 = (($w$1) - ($893))|0;
       $906 = ($905>>>0)>(256);
       $907 = $906 ? 256 : $905;
       _memset(($pad$i|0),48,($907|0))|0;
       $908 = ($905>>>0)>(255);
       if ($908) {
        $$01$i102$i = $905;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $909 = (($$01$i102$i) + -256)|0;
         $910 = ($909>>>0)>(255);
         if ($910) {
          $$01$i102$i = $909;
         } else {
          break;
         }
        }
        $911 = $905 & 255;
        $$0$lcssa$i104$i = $911;
       } else {
        $$0$lcssa$i104$i = $905;
       }
       (___fwritex($pad$i,$$0$lcssa$i104$i,$f)|0);
      }
      if ($846) {
       $912 = ($a$8$ph$i>>>0)>($$31$i>>>0);
       $r$0$a$8$i = $912 ? $$31$i : $a$8$ph$i;
       $d$4191$i = $r$0$a$8$i;
       while(1) {
        $913 = HEAP32[$d$4191$i>>2]|0;
        $914 = ($913|0)==(0);
        if ($914) {
         $$1$lcssa$i112$i = $14;
        } else {
         $$12$i110$i = $14;$y$03$i109$i = $913;
         while(1) {
          $915 = (($y$03$i109$i>>>0) % 10)&-1;
          $916 = $915 | 48;
          $917 = $916&255;
          $918 = ((($$12$i110$i)) + -1|0);
          HEAP8[$918>>0] = $917;
          $919 = (($y$03$i109$i>>>0) / 10)&-1;
          $920 = ($y$03$i109$i>>>0)<(10);
          if ($920) {
           $$1$lcssa$i112$i = $918;
           break;
          } else {
           $$12$i110$i = $918;$y$03$i109$i = $919;
          }
         }
        }
        $921 = ($d$4191$i|0)==($r$0$a$8$i|0);
        do {
         if ($921) {
          $925 = ($$1$lcssa$i112$i|0)==($14|0);
          if (!($925)) {
           $s7$1$i = $$1$lcssa$i112$i;
           break;
          }
          HEAP8[$16>>0] = 48;
          $s7$1$i = $16;
         } else {
          $922 = ($$1$lcssa$i112$i>>>0)>($buf$i>>>0);
          if ($922) {
           $s7$0188$i = $$1$lcssa$i112$i;
          } else {
           $s7$1$i = $$1$lcssa$i112$i;
           break;
          }
          while(1) {
           $923 = ((($s7$0188$i)) + -1|0);
           HEAP8[$923>>0] = 48;
           $924 = ($923>>>0)>($buf$i>>>0);
           if ($924) {
            $s7$0188$i = $923;
           } else {
            $s7$1$i = $923;
            break;
           }
          }
         }
        } while(0);
        $926 = $s7$1$i;
        $927 = (($15) - ($926))|0;
        (___fwritex($s7$1$i,$927,$f)|0);
        $928 = ((($d$4191$i)) + 4|0);
        $929 = ($928>>>0)>($$31$i>>>0);
        if ($929) {
         $$lcssa479 = $928;
         break;
        } else {
         $d$4191$i = $928;
        }
       }
       $930 = ($842|0)==(0);
       if (!($930)) {
        (___fwritex(4520,1,$f)|0);
       }
       $931 = ($$lcssa479>>>0)<($z$6$i$lcssa>>>0);
       $932 = ($$311$i|0)>(0);
       $933 = $932 & $931;
       if ($933) {
        $$412184$i = $$311$i;$d$5183$i = $$lcssa479;
        while(1) {
         $934 = HEAP32[$d$5183$i>>2]|0;
         $935 = ($934|0)==(0);
         if ($935) {
          $s8$0180$i = $14;
          label = 289;
         } else {
          $$12$i119$i = $14;$y$03$i118$i = $934;
          while(1) {
           $936 = (($y$03$i118$i>>>0) % 10)&-1;
           $937 = $936 | 48;
           $938 = $937&255;
           $939 = ((($$12$i119$i)) + -1|0);
           HEAP8[$939>>0] = $938;
           $940 = (($y$03$i118$i>>>0) / 10)&-1;
           $941 = ($y$03$i118$i>>>0)<(10);
           if ($941) {
            $$lcssa480 = $939;
            break;
           } else {
            $$12$i119$i = $939;$y$03$i118$i = $940;
           }
          }
          $942 = ($$lcssa480>>>0)>($buf$i>>>0);
          if ($942) {
           $s8$0180$i = $$lcssa480;
           label = 289;
          } else {
           $s8$0$lcssa$i = $$lcssa480;
          }
         }
         if ((label|0) == 289) {
          while(1) {
           label = 0;
           $943 = ((($s8$0180$i)) + -1|0);
           HEAP8[$943>>0] = 48;
           $944 = ($943>>>0)>($buf$i>>>0);
           if ($944) {
            $s8$0180$i = $943;
            label = 289;
           } else {
            $s8$0$lcssa$i = $943;
            break;
           }
          }
         }
         $945 = ($$412184$i|0)>(9);
         $946 = $945 ? 9 : $$412184$i;
         (___fwritex($s8$0$lcssa$i,$946,$f)|0);
         $947 = ((($d$5183$i)) + 4|0);
         $948 = (($$412184$i) + -9)|0;
         $949 = ($947>>>0)<($z$6$i$lcssa>>>0);
         $950 = $945 & $949;
         if ($950) {
          $$412184$i = $948;$d$5183$i = $947;
         } else {
          $$412$lcssa$i = $948;
          break;
         }
        }
       } else {
        $$412$lcssa$i = $$311$i;
       }
       $951 = ($$412$lcssa$i|0)>(0);
       if ($951) {
        $952 = ($$412$lcssa$i>>>0)>(256);
        $953 = $952 ? 256 : $$412$lcssa$i;
        _memset(($pad$i|0),48,($953|0))|0;
        $954 = ($$412$lcssa$i>>>0)>(255);
        if ($954) {
         $$01$i126$i = $$412$lcssa$i;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $955 = (($$01$i126$i) + -256)|0;
          $956 = ($955>>>0)>(255);
          if ($956) {
           $$01$i126$i = $955;
          } else {
           break;
          }
         }
         $957 = $$412$lcssa$i & 255;
         $$0$lcssa$i128$i = $957;
        } else {
         $$0$lcssa$i128$i = $$412$lcssa$i;
        }
        (___fwritex($pad$i,$$0$lcssa$i128$i,$f)|0);
       }
      } else {
       $958 = ((($a$8$ph$i)) + 4|0);
       $z$6$$i = $$lcssa275$i ? $z$6$i$lcssa : $958;
       $959 = ($$311$i|0)>(-1);
       do {
        if ($959) {
         $960 = ($$pre$phi302$iZ2D|0)==(0);
         $$5196$i = $$311$i;$d$6195$i = $a$8$ph$i;
         while(1) {
          $961 = HEAP32[$d$6195$i>>2]|0;
          $962 = ($961|0)==(0);
          if ($962) {
           label = 303;
          } else {
           $$12$i134$i = $14;$y$03$i133$i = $961;
           while(1) {
            $963 = (($y$03$i133$i>>>0) % 10)&-1;
            $964 = $963 | 48;
            $965 = $964&255;
            $966 = ((($$12$i134$i)) + -1|0);
            HEAP8[$966>>0] = $965;
            $967 = (($y$03$i133$i>>>0) / 10)&-1;
            $968 = ($y$03$i133$i>>>0)<(10);
            if ($968) {
             $$12$i134$i$lcssa = $$12$i134$i;$$lcssa474 = $966;
             break;
            } else {
             $$12$i134$i = $966;$y$03$i133$i = $967;
            }
           }
           $969 = ($$lcssa474|0)==($14|0);
           if ($969) {
            label = 303;
           } else {
            $1187 = $$12$i134$i$lcssa;$s9$0$i = $$lcssa474;
           }
          }
          if ((label|0) == 303) {
           label = 0;
           HEAP8[$16>>0] = 48;
           $1187 = $14;$s9$0$i = $16;
          }
          $970 = ($d$6195$i|0)==($a$8$ph$i|0);
          do {
           if ($970) {
            (___fwritex($s9$0$i,1,$f)|0);
            $974 = ($$5196$i|0)<(1);
            $or$cond29$i = $960 & $974;
            if ($or$cond29$i) {
             $s9$2$i = $1187;
             break;
            }
            (___fwritex(4520,1,$f)|0);
            $s9$2$i = $1187;
           } else {
            $971 = ($s9$0$i>>>0)>($buf$i>>>0);
            if ($971) {
             $s9$1192$i = $s9$0$i;
            } else {
             $s9$2$i = $s9$0$i;
             break;
            }
            while(1) {
             $972 = ((($s9$1192$i)) + -1|0);
             HEAP8[$972>>0] = 48;
             $973 = ($972>>>0)>($buf$i>>>0);
             if ($973) {
              $s9$1192$i = $972;
             } else {
              $s9$2$i = $972;
              break;
             }
            }
           }
          } while(0);
          $975 = $s9$2$i;
          $976 = (($15) - ($975))|0;
          $977 = ($$5196$i|0)>($976|0);
          $978 = $977 ? $976 : $$5196$i;
          (___fwritex($s9$2$i,$978,$f)|0);
          $979 = (($$5196$i) - ($976))|0;
          $980 = ((($d$6195$i)) + 4|0);
          $981 = ($980>>>0)<($z$6$$i>>>0);
          $982 = ($979|0)>(-1);
          $983 = $981 & $982;
          if ($983) {
           $$5196$i = $979;$d$6195$i = $980;
          } else {
           $$lcssa476 = $979;
           break;
          }
         }
         $984 = ($$lcssa476|0)>(0);
         if (!($984)) {
          break;
         }
         $985 = ($$lcssa476>>>0)>(256);
         $986 = $985 ? 256 : $$lcssa476;
         _memset(($pad$i|0),48,($986|0))|0;
         $987 = ($$lcssa476>>>0)>(255);
         if ($987) {
          $$01$i141$i = $$lcssa476;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $988 = (($$01$i141$i) + -256)|0;
           $989 = ($988>>>0)>(255);
           if ($989) {
            $$01$i141$i = $988;
           } else {
            break;
           }
          }
          $990 = $$lcssa476 & 255;
          $$0$lcssa$i143$i = $990;
         } else {
          $$0$lcssa$i143$i = $$lcssa476;
         }
         (___fwritex($pad$i,$$0$lcssa$i143$i,$f)|0);
        } else {
        }
       } while(0);
       $991 = $estr$2$i;
       $992 = (($9) - ($991))|0;
       (___fwritex($estr$2$i,$992,$f)|0);
      }
      $993 = ($894|0)==(8192);
      $or$cond$i$i = $993 & $896;
      if ($or$cond$i$i) {
       $994 = (($w$1) - ($893))|0;
       $995 = ($994>>>0)>(256);
       $996 = $995 ? 256 : $994;
       _memset(($pad$i|0),32,($996|0))|0;
       $997 = ($994>>>0)>(255);
       if ($997) {
        $$01$i$i = $994;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $998 = (($$01$i$i) + -256)|0;
         $999 = ($998>>>0)>(255);
         if ($999) {
          $$01$i$i = $998;
         } else {
          break;
         }
        }
        $1000 = $994 & 255;
        $$0$lcssa$i$i = $1000;
       } else {
        $$0$lcssa$i$i = $994;
       }
       (___fwritex($pad$i,$$0$lcssa$i$i,$f)|0);
      }
      $w$30$i = $896 ? $w$1 : $893;
      $$0$i = $w$30$i;
     } else {
      $445 = $t$0 & 32;
      $446 = ($445|0)!=(0);
      $447 = $446 ? 4488 : 4496;
      $448 = ($$07$i != $$07$i) | (0.0 != 0.0);
      $449 = $446 ? 4504 : 4512;
      $pl$1$i = $448 ? 0 : $pl$0$i;
      $s1$0$i = $448 ? $449 : $447;
      $450 = (($pl$1$i) + 3)|0;
      $451 = $fl$1$ & 8192;
      $452 = ($451|0)==(0);
      $453 = ($w$1|0)>($450|0);
      $or$cond$i35$i = $452 & $453;
      if ($or$cond$i35$i) {
       $454 = (($w$1) - ($450))|0;
       $455 = ($454>>>0)>(256);
       $456 = $455 ? 256 : $454;
       _memset(($pad$i|0),32,($456|0))|0;
       $457 = ($454>>>0)>(255);
       if ($457) {
        $$01$i37$i = $454;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $458 = (($$01$i37$i) + -256)|0;
         $459 = ($458>>>0)>(255);
         if ($459) {
          $$01$i37$i = $458;
         } else {
          break;
         }
        }
        $460 = $454 & 255;
        $$0$lcssa$i39$i = $460;
       } else {
        $$0$lcssa$i39$i = $454;
       }
       (___fwritex($pad$i,$$0$lcssa$i39$i,$f)|0);
      }
      (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
      (___fwritex($s1$0$i,3,$f)|0);
      $461 = $fl$1$ & 73728;
      $462 = ($461|0)==(8192);
      $or$cond$i42$i = $462 & $453;
      if ($or$cond$i42$i) {
       $463 = (($w$1) - ($450))|0;
       $464 = ($463>>>0)>(256);
       $465 = $464 ? 256 : $463;
       _memset(($pad$i|0),32,($465|0))|0;
       $466 = ($463>>>0)>(255);
       if ($466) {
        $$01$i44$i = $463;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $467 = (($$01$i44$i) + -256)|0;
         $468 = ($467>>>0)>(255);
         if ($468) {
          $$01$i44$i = $467;
         } else {
          break;
         }
        }
        $469 = $463 & 255;
        $$0$lcssa$i46$i = $469;
       } else {
        $$0$lcssa$i46$i = $463;
       }
       (___fwritex($pad$i,$$0$lcssa$i46$i,$f)|0);
      }
      $470 = $453 ? $w$1 : $450;
      $$0$i = $470;
     }
    } while(0);
    $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $$0$i;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   case 67:  {
    HEAP32[$wc>>2] = $264;
    HEAP32[$5>>2] = 0;
    $1179 = $wc;$1180 = $6;$p$4272 = -1;
    label = 97;
    break;
   }
   case 83:  {
    $391 = $264;
    $392 = ($p$0|0)==(0);
    if ($392) {
     $1181 = $264;$1182 = $391;$i$0$lcssa273 = 0;
     label = 102;
    } else {
     $1179 = $391;$1180 = $264;$p$4272 = $p$0;
     label = 97;
    }
    break;
   }
   default: {
    $1175 = $291;$1176 = $264;$a$2 = $23;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4440;$z$2 = $2;
   }
   }
  } while(0);
  if ((label|0) == 73) {
   label = 0;
   $289 = $t$1 & 32;
   $290 = ($264|0)==(0);
   $292 = ($291|0)==(0);
   $293 = $290 & $292;
   if ($293) {
    $366 = $264;$368 = $291;$a$0 = $2;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4440;
    label = 89;
   } else {
    $$012$i = $2;$295 = $264;$302 = $291;
    while(1) {
     $294 = $295 & 15;
     $296 = (4424 + ($294)|0);
     $297 = HEAP8[$296>>0]|0;
     $298 = $297&255;
     $299 = $298 | $289;
     $300 = $299&255;
     $301 = ((($$012$i)) + -1|0);
     HEAP8[$301>>0] = $300;
     $303 = (_bitshift64Lshr(($295|0),($302|0),4)|0);
     $304 = tempRet0;
     $305 = ($303|0)==(0);
     $306 = ($304|0)==(0);
     $307 = $305 & $306;
     if ($307) {
      $$lcssa491 = $301;
      break;
     } else {
      $$012$i = $301;$295 = $303;$302 = $304;
     }
    }
    $308 = $fl$3 & 8;
    $309 = ($308|0)==(0);
    if ($309) {
     $366 = $264;$368 = $291;$a$0 = $$lcssa491;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4440;
     label = 89;
    } else {
     $310 = $t$1 >> 4;
     $311 = (4440 + ($310)|0);
     $366 = $264;$368 = $291;$a$0 = $$lcssa491;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $311;
     label = 89;
    }
   }
  }
  else if ((label|0) == 84) {
   label = 0;
   $337 = ($336>>>0)>(0);
   $339 = ($338>>>0)>(4294967295);
   $340 = ($336|0)==(0);
   $341 = $340 & $339;
   $342 = $337 | $341;
   if ($342) {
    $$05$i = $2;$343 = $338;$344 = $336;
    while(1) {
     $345 = (___uremdi3(($343|0),($344|0),10,0)|0);
     $346 = tempRet0;
     $347 = $345 | 48;
     $348 = $347&255;
     $349 = ((($$05$i)) + -1|0);
     HEAP8[$349>>0] = $348;
     $350 = (___udivdi3(($343|0),($344|0),10,0)|0);
     $351 = tempRet0;
     $352 = ($344>>>0)>(9);
     $353 = ($343>>>0)>(4294967295);
     $354 = ($344|0)==(9);
     $355 = $354 & $353;
     $356 = $352 | $355;
     if ($356) {
      $$05$i = $349;$343 = $350;$344 = $351;
     } else {
      $$lcssa487 = $349;$1177 = $350;$1178 = $351;
      break;
     }
    }
    $$0$lcssa$i53 = $$lcssa487;$$01$lcssa$off0$i = $1177;
   } else {
    $$0$lcssa$i53 = $2;$$01$lcssa$off0$i = $338;
   }
   $357 = ($$01$lcssa$off0$i|0)==(0);
   if ($357) {
    $366 = $338;$368 = $336;$a$0 = $$0$lcssa$i53;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 89;
   } else {
    $$12$i = $$0$lcssa$i53;$y$03$i = $$01$lcssa$off0$i;
    while(1) {
     $358 = (($y$03$i>>>0) % 10)&-1;
     $359 = $358 | 48;
     $360 = $359&255;
     $361 = ((($$12$i)) + -1|0);
     HEAP8[$361>>0] = $360;
     $362 = (($y$03$i>>>0) / 10)&-1;
     $363 = ($y$03$i>>>0)<(10);
     if ($363) {
      $366 = $338;$368 = $336;$a$0 = $361;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
      label = 89;
      break;
     } else {
      $$12$i = $361;$y$03$i = $362;
     }
    }
   }
  }
  else if ((label|0) == 94) {
   label = 0;
   $385 = (_memchr($a$1,0,$p$0)|0);
   $386 = ($385|0)==(0|0);
   $387 = $385;
   $388 = $a$1;
   $389 = (($387) - ($388))|0;
   $390 = (($a$1) + ($p$0)|0);
   $z$1 = $386 ? $390 : $385;
   $p$3 = $386 ? $p$0 : $389;
   $1175 = $291;$1176 = $264;$a$2 = $a$1;$fl$6 = $263;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 4440;$z$2 = $z$1;
  }
  else if ((label|0) == 97) {
   label = 0;
   $i$0175 = 0;$l$1174 = 0;$ws$0176 = $1179;
   while(1) {
    $393 = HEAP32[$ws$0176>>2]|0;
    $394 = ($393|0)==(0);
    if ($394) {
     $i$0$lcssa = $i$0175;$l$2 = $l$1174;
     break;
    }
    $395 = (_wctomb($mb,$393)|0);
    $396 = ($395|0)<(0);
    $397 = (($p$4272) - ($i$0175))|0;
    $398 = ($395>>>0)>($397>>>0);
    $or$cond22 = $396 | $398;
    if ($or$cond22) {
     $i$0$lcssa = $i$0175;$l$2 = $395;
     break;
    }
    $399 = ((($ws$0176)) + 4|0);
    $400 = (($395) + ($i$0175))|0;
    $401 = ($p$4272>>>0)>($400>>>0);
    if ($401) {
     $i$0175 = $400;$l$1174 = $395;$ws$0176 = $399;
    } else {
     $i$0$lcssa = $400;$l$2 = $395;
     break;
    }
   }
   $402 = ($l$2|0)<(0);
   if ($402) {
    $$0 = -1;
    label = 363;
    break;
   } else {
    $1181 = $1180;$1182 = $1179;$i$0$lcssa273 = $i$0$lcssa;
    label = 102;
   }
  }
  if ((label|0) == 89) {
   label = 0;
   $364 = ($p$2|0)>(-1);
   $365 = $fl$4 & -65537;
   $$fl$4 = $364 ? $365 : $fl$4;
   $367 = ($366|0)!=(0);
   $369 = ($368|0)!=(0);
   $370 = $367 | $369;
   $371 = ($p$2|0)!=(0);
   $or$cond = $370 | $371;
   if ($or$cond) {
    $372 = $a$0;
    $373 = (($3) - ($372))|0;
    $374 = $370&1;
    $375 = $374 ^ 1;
    $376 = (($375) + ($373))|0;
    $377 = ($p$2|0)>($376|0);
    $p$2$ = $377 ? $p$2 : $376;
    $1175 = $368;$1176 = $366;$a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   } else {
    $1175 = $368;$1176 = $366;$a$2 = $2;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   }
  }
  else if ((label|0) == 102) {
   label = 0;
   $403 = $fl$1$ & 73728;
   $404 = ($403|0)==(0);
   $405 = ($w$1|0)>($i$0$lcssa273|0);
   $or$cond$i64 = $404 & $405;
   if ($or$cond$i64) {
    $406 = (($w$1) - ($i$0$lcssa273))|0;
    $407 = ($406>>>0)>(256);
    $408 = $407 ? 256 : $406;
    _memset(($pad$i|0),32,($408|0))|0;
    $409 = ($406>>>0)>(255);
    if ($409) {
     $$01$i66 = $406;
     while(1) {
      (___fwritex($pad$i,256,$f)|0);
      $410 = (($$01$i66) + -256)|0;
      $411 = ($410>>>0)>(255);
      if ($411) {
       $$01$i66 = $410;
      } else {
       break;
      }
     }
     $412 = $406 & 255;
     $$0$lcssa$i68 = $412;
    } else {
     $$0$lcssa$i68 = $406;
    }
    (___fwritex($pad$i,$$0$lcssa$i68,$f)|0);
   }
   $413 = ($i$0$lcssa273|0)==(0);
   L465: do {
    if (!($413)) {
     $i$1186 = 0;$ws$1187 = $1182;
     while(1) {
      $414 = HEAP32[$ws$1187>>2]|0;
      $415 = ($414|0)==(0);
      if ($415) {
       break L465;
      }
      $416 = (_wctomb($mb,$414)|0);
      $417 = (($416) + ($i$1186))|0;
      $418 = ($417|0)>($i$0$lcssa273|0);
      if ($418) {
       break L465;
      }
      $419 = ((($ws$1187)) + 4|0);
      (___fwritex($mb,$416,$f)|0);
      $420 = ($417>>>0)<($i$0$lcssa273>>>0);
      if ($420) {
       $i$1186 = $417;$ws$1187 = $419;
      } else {
       break;
      }
     }
    }
   } while(0);
   $421 = ($403|0)==(8192);
   $or$cond$i71 = $421 & $405;
   if ($or$cond$i71) {
    $422 = (($w$1) - ($i$0$lcssa273))|0;
    $423 = ($422>>>0)>(256);
    $424 = $423 ? 256 : $422;
    _memset(($pad$i|0),32,($424|0))|0;
    $425 = ($422>>>0)>(255);
    if ($425) {
     $$01$i73 = $422;
     while(1) {
      (___fwritex($pad$i,256,$f)|0);
      $426 = (($$01$i73) + -256)|0;
      $427 = ($426>>>0)>(255);
      if ($427) {
       $$01$i73 = $426;
      } else {
       break;
      }
     }
     $428 = $422 & 255;
     $$0$lcssa$i75 = $428;
    } else {
     $$0$lcssa$i75 = $422;
    }
    (___fwritex($pad$i,$$0$lcssa$i75,$f)|0);
   }
   $429 = $405 ? $w$1 : $i$0$lcssa273;
   $1169 = $291;$1170 = $1181;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $429;$l10n$0 = $l10n$3;
   continue;
  }
  $1001 = $z$2;
  $1002 = $a$2;
  $1003 = (($1001) - ($1002))|0;
  $1004 = ($p$5|0)<($1003|0);
  $$p$5 = $1004 ? $1003 : $p$5;
  $1005 = (($pl$2) + ($$p$5))|0;
  $1006 = ($w$1|0)<($1005|0);
  $w$2 = $1006 ? $1005 : $w$1;
  $1007 = $fl$6 & 73728;
  $1008 = ($1007|0)==(0);
  $1009 = ($w$2|0)>($1005|0);
  $or$cond$i81 = $1008 & $1009;
  if ($or$cond$i81) {
   $1010 = (($w$2) - ($1005))|0;
   $1011 = ($1010>>>0)>(256);
   $1012 = $1011 ? 256 : $1010;
   _memset(($pad$i|0),32,($1012|0))|0;
   $1013 = ($1010>>>0)>(255);
   if ($1013) {
    $$01$i83 = $1010;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1014 = (($$01$i83) + -256)|0;
     $1015 = ($1014>>>0)>(255);
     if ($1015) {
      $$01$i83 = $1014;
     } else {
      break;
     }
    }
    $1016 = $1010 & 255;
    $$0$lcssa$i85 = $1016;
   } else {
    $$0$lcssa$i85 = $1010;
   }
   (___fwritex($pad$i,$$0$lcssa$i85,$f)|0);
  }
  (___fwritex($prefix$2,$pl$2,$f)|0);
  $1017 = ($1007|0)==(65536);
  $or$cond$i57 = $1017 & $1009;
  if ($or$cond$i57) {
   $1018 = (($w$2) - ($1005))|0;
   $1019 = ($1018>>>0)>(256);
   $1020 = $1019 ? 256 : $1018;
   _memset(($pad$i|0),48,($1020|0))|0;
   $1021 = ($1018>>>0)>(255);
   if ($1021) {
    $$01$i59 = $1018;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1022 = (($$01$i59) + -256)|0;
     $1023 = ($1022>>>0)>(255);
     if ($1023) {
      $$01$i59 = $1022;
     } else {
      break;
     }
    }
    $1024 = $1018 & 255;
    $$0$lcssa$i61 = $1024;
   } else {
    $$0$lcssa$i61 = $1018;
   }
   (___fwritex($pad$i,$$0$lcssa$i61,$f)|0);
  }
  $1025 = ($$p$5|0)>($1003|0);
  if ($1025) {
   $1026 = (($$p$5) - ($1003))|0;
   $1027 = ($1026>>>0)>(256);
   $1028 = $1027 ? 256 : $1026;
   _memset(($pad$i|0),48,($1028|0))|0;
   $1029 = ($1026>>>0)>(255);
   if ($1029) {
    $$01$i44 = $1026;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1030 = (($$01$i44) + -256)|0;
     $1031 = ($1030>>>0)>(255);
     if ($1031) {
      $$01$i44 = $1030;
     } else {
      break;
     }
    }
    $1032 = $1026 & 255;
    $$0$lcssa$i46 = $1032;
   } else {
    $$0$lcssa$i46 = $1026;
   }
   (___fwritex($pad$i,$$0$lcssa$i46,$f)|0);
  }
  (___fwritex($a$2,$1003,$f)|0);
  $1033 = ($1007|0)==(8192);
  $or$cond$i = $1033 & $1009;
  if ($or$cond$i) {
   $1034 = (($w$2) - ($1005))|0;
   $1035 = ($1034>>>0)>(256);
   $1036 = $1035 ? 256 : $1034;
   _memset(($pad$i|0),32,($1036|0))|0;
   $1037 = ($1034>>>0)>(255);
   if ($1037) {
    $$01$i = $1034;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1038 = (($$01$i) + -256)|0;
     $1039 = ($1038>>>0)>(255);
     if ($1039) {
      $$01$i = $1038;
     } else {
      break;
     }
    }
    $1040 = $1034 & 255;
    $$0$lcssa$i = $1040;
   } else {
    $$0$lcssa$i = $1034;
   }
   (___fwritex($pad$i,$$0$lcssa$i,$f)|0);
  }
  $1169 = $1175;$1170 = $1176;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 if ((label|0) == 344) {
  $1041 = ($f|0)==(0|0);
  if (!($1041)) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;return ($$0|0);
  }
  $1042 = ($l10n$0$lcssa|0)==(0);
  if ($1042) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $i$2162 = 1;
  }
  while(1) {
   $1043 = (($nl_type) + ($i$2162<<2)|0);
   $1044 = HEAP32[$1043>>2]|0;
   $1045 = ($1044|0)==(0);
   if ($1045) {
    $i$2162$lcssa = $i$2162;
    break;
   }
   $1047 = (($nl_arg) + ($i$2162<<3)|0);
   $1048 = ($1044>>>0)>(20);
   L522: do {
    if (!($1048)) {
     do {
      switch ($1044|0) {
      case 9:  {
       $arglist_current35 = HEAP32[$ap>>2]|0;
       $1049 = $arglist_current35;
       $1050 = ((0) + 4|0);
       $expanded148 = $1050;
       $expanded147 = (($expanded148) - 1)|0;
       $1051 = (($1049) + ($expanded147))|0;
       $1052 = ((0) + 4|0);
       $expanded152 = $1052;
       $expanded151 = (($expanded152) - 1)|0;
       $expanded150 = $expanded151 ^ -1;
       $1053 = $1051 & $expanded150;
       $1054 = $1053;
       $1055 = HEAP32[$1054>>2]|0;
       $arglist_next36 = ((($1054)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next36;
       HEAP32[$1047>>2] = $1055;
       break L522;
       break;
      }
      case 10:  {
       $arglist_current38 = HEAP32[$ap>>2]|0;
       $1056 = $arglist_current38;
       $1057 = ((0) + 4|0);
       $expanded155 = $1057;
       $expanded154 = (($expanded155) - 1)|0;
       $1058 = (($1056) + ($expanded154))|0;
       $1059 = ((0) + 4|0);
       $expanded159 = $1059;
       $expanded158 = (($expanded159) - 1)|0;
       $expanded157 = $expanded158 ^ -1;
       $1060 = $1058 & $expanded157;
       $1061 = $1060;
       $1062 = HEAP32[$1061>>2]|0;
       $arglist_next39 = ((($1061)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next39;
       $1063 = ($1062|0)<(0);
       $1064 = $1063 << 31 >> 31;
       $1065 = $1047;
       $1066 = $1065;
       HEAP32[$1066>>2] = $1062;
       $1067 = (($1065) + 4)|0;
       $1068 = $1067;
       HEAP32[$1068>>2] = $1064;
       break L522;
       break;
      }
      case 11:  {
       $arglist_current41 = HEAP32[$ap>>2]|0;
       $1069 = $arglist_current41;
       $1070 = ((0) + 4|0);
       $expanded162 = $1070;
       $expanded161 = (($expanded162) - 1)|0;
       $1071 = (($1069) + ($expanded161))|0;
       $1072 = ((0) + 4|0);
       $expanded166 = $1072;
       $expanded165 = (($expanded166) - 1)|0;
       $expanded164 = $expanded165 ^ -1;
       $1073 = $1071 & $expanded164;
       $1074 = $1073;
       $1075 = HEAP32[$1074>>2]|0;
       $arglist_next42 = ((($1074)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next42;
       $1076 = $1047;
       $1077 = $1076;
       HEAP32[$1077>>2] = $1075;
       $1078 = (($1076) + 4)|0;
       $1079 = $1078;
       HEAP32[$1079>>2] = 0;
       break L522;
       break;
      }
      case 12:  {
       $arglist_current44 = HEAP32[$ap>>2]|0;
       $1080 = $arglist_current44;
       $1081 = ((0) + 8|0);
       $expanded169 = $1081;
       $expanded168 = (($expanded169) - 1)|0;
       $1082 = (($1080) + ($expanded168))|0;
       $1083 = ((0) + 8|0);
       $expanded173 = $1083;
       $expanded172 = (($expanded173) - 1)|0;
       $expanded171 = $expanded172 ^ -1;
       $1084 = $1082 & $expanded171;
       $1085 = $1084;
       $1086 = $1085;
       $1087 = $1086;
       $1088 = HEAP32[$1087>>2]|0;
       $1089 = (($1086) + 4)|0;
       $1090 = $1089;
       $1091 = HEAP32[$1090>>2]|0;
       $arglist_next45 = ((($1085)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next45;
       $1092 = $1047;
       $1093 = $1092;
       HEAP32[$1093>>2] = $1088;
       $1094 = (($1092) + 4)|0;
       $1095 = $1094;
       HEAP32[$1095>>2] = $1091;
       break L522;
       break;
      }
      case 13:  {
       $arglist_current47 = HEAP32[$ap>>2]|0;
       $1096 = $arglist_current47;
       $1097 = ((0) + 4|0);
       $expanded176 = $1097;
       $expanded175 = (($expanded176) - 1)|0;
       $1098 = (($1096) + ($expanded175))|0;
       $1099 = ((0) + 4|0);
       $expanded180 = $1099;
       $expanded179 = (($expanded180) - 1)|0;
       $expanded178 = $expanded179 ^ -1;
       $1100 = $1098 & $expanded178;
       $1101 = $1100;
       $1102 = HEAP32[$1101>>2]|0;
       $arglist_next48 = ((($1101)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next48;
       $1103 = $1102&65535;
       $1104 = $1103 << 16 >> 16;
       $1105 = ($1104|0)<(0);
       $1106 = $1105 << 31 >> 31;
       $1107 = $1047;
       $1108 = $1107;
       HEAP32[$1108>>2] = $1104;
       $1109 = (($1107) + 4)|0;
       $1110 = $1109;
       HEAP32[$1110>>2] = $1106;
       break L522;
       break;
      }
      case 14:  {
       $arglist_current50 = HEAP32[$ap>>2]|0;
       $1111 = $arglist_current50;
       $1112 = ((0) + 4|0);
       $expanded183 = $1112;
       $expanded182 = (($expanded183) - 1)|0;
       $1113 = (($1111) + ($expanded182))|0;
       $1114 = ((0) + 4|0);
       $expanded187 = $1114;
       $expanded186 = (($expanded187) - 1)|0;
       $expanded185 = $expanded186 ^ -1;
       $1115 = $1113 & $expanded185;
       $1116 = $1115;
       $1117 = HEAP32[$1116>>2]|0;
       $arglist_next51 = ((($1116)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next51;
       $$mask1$i = $1117 & 65535;
       $1118 = $1047;
       $1119 = $1118;
       HEAP32[$1119>>2] = $$mask1$i;
       $1120 = (($1118) + 4)|0;
       $1121 = $1120;
       HEAP32[$1121>>2] = 0;
       break L522;
       break;
      }
      case 15:  {
       $arglist_current53 = HEAP32[$ap>>2]|0;
       $1122 = $arglist_current53;
       $1123 = ((0) + 4|0);
       $expanded190 = $1123;
       $expanded189 = (($expanded190) - 1)|0;
       $1124 = (($1122) + ($expanded189))|0;
       $1125 = ((0) + 4|0);
       $expanded194 = $1125;
       $expanded193 = (($expanded194) - 1)|0;
       $expanded192 = $expanded193 ^ -1;
       $1126 = $1124 & $expanded192;
       $1127 = $1126;
       $1128 = HEAP32[$1127>>2]|0;
       $arglist_next54 = ((($1127)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next54;
       $1129 = $1128&255;
       $1130 = $1129 << 24 >> 24;
       $1131 = ($1130|0)<(0);
       $1132 = $1131 << 31 >> 31;
       $1133 = $1047;
       $1134 = $1133;
       HEAP32[$1134>>2] = $1130;
       $1135 = (($1133) + 4)|0;
       $1136 = $1135;
       HEAP32[$1136>>2] = $1132;
       break L522;
       break;
      }
      case 16:  {
       $arglist_current56 = HEAP32[$ap>>2]|0;
       $1137 = $arglist_current56;
       $1138 = ((0) + 4|0);
       $expanded197 = $1138;
       $expanded196 = (($expanded197) - 1)|0;
       $1139 = (($1137) + ($expanded196))|0;
       $1140 = ((0) + 4|0);
       $expanded201 = $1140;
       $expanded200 = (($expanded201) - 1)|0;
       $expanded199 = $expanded200 ^ -1;
       $1141 = $1139 & $expanded199;
       $1142 = $1141;
       $1143 = HEAP32[$1142>>2]|0;
       $arglist_next57 = ((($1142)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next57;
       $$mask$i = $1143 & 255;
       $1144 = $1047;
       $1145 = $1144;
       HEAP32[$1145>>2] = $$mask$i;
       $1146 = (($1144) + 4)|0;
       $1147 = $1146;
       HEAP32[$1147>>2] = 0;
       break L522;
       break;
      }
      case 17:  {
       $arglist_current59 = HEAP32[$ap>>2]|0;
       $1148 = $arglist_current59;
       $1149 = ((0) + 8|0);
       $expanded204 = $1149;
       $expanded203 = (($expanded204) - 1)|0;
       $1150 = (($1148) + ($expanded203))|0;
       $1151 = ((0) + 8|0);
       $expanded208 = $1151;
       $expanded207 = (($expanded208) - 1)|0;
       $expanded206 = $expanded207 ^ -1;
       $1152 = $1150 & $expanded206;
       $1153 = $1152;
       $1154 = +HEAPF64[$1153>>3];
       $arglist_next60 = ((($1153)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next60;
       HEAPF64[$1047>>3] = $1154;
       break L522;
       break;
      }
      case 18:  {
       $arglist_current62 = HEAP32[$ap>>2]|0;
       $1155 = $arglist_current62;
       $1156 = ((0) + 8|0);
       $expanded211 = $1156;
       $expanded210 = (($expanded211) - 1)|0;
       $1157 = (($1155) + ($expanded210))|0;
       $1158 = ((0) + 8|0);
       $expanded215 = $1158;
       $expanded214 = (($expanded215) - 1)|0;
       $expanded213 = $expanded214 ^ -1;
       $1159 = $1157 & $expanded213;
       $1160 = $1159;
       $1161 = +HEAPF64[$1160>>3];
       $arglist_next63 = ((($1160)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next63;
       HEAPF64[$1047>>3] = $1161;
       break L522;
       break;
      }
      default: {
       break L522;
      }
      }
     } while(0);
    }
   } while(0);
   $1162 = (($i$2162) + 1)|0;
   $1163 = ($1162|0)<(10);
   if ($1163) {
    $i$2162 = $1162;
   } else {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label|0) == 363) {
   STACKTOP = sp;return ($$0|0);
  }
  $1046 = ($i$2162$lcssa|0)<(10);
  if ($1046) {
   $i$3160 = $i$2162$lcssa;
  } else {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  while(1) {
   $1166 = (($nl_type) + ($i$3160<<2)|0);
   $1167 = HEAP32[$1166>>2]|0;
   $1168 = ($1167|0)==(0);
   $1164 = (($i$3160) + 1)|0;
   if (!($1168)) {
    $$0 = -1;
    label = 363;
    break;
   }
   $1165 = ($1164|0)<(10);
   if ($1165) {
    $i$3160 = $1164;
   } else {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label|0) == 363) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 else if ((label|0) == 363) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1912);
 $0 = ((($this)) + 4|0);
 $1 = HEAP8[$msg>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($msg)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($msg)) + 1|0);
 $7 = $3 ? $6 : $5;
 __ZNSt3__118__libcpp_refstringC2EPKc($0,$7);
 return;
}
function __ZNSt13runtime_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1912);
 $0 = ((($this)) + 4|0);
 __ZNSt3__118__libcpp_refstringC2EPKc($0,$msg);
 return;
}
function __ZNSt3__118__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($msg|0))|0);
 $1 = (($0) + 13)|0;
 $2 = (__Znwj($1)|0);
 HEAP32[$2>>2] = $0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($2)) + 12|0);
 $6 = (($0) + 1)|0;
 _memcpy(($5|0),($msg|0),($6|0))|0;
 HEAP32[$this>>2] = $5;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this>>2]=HEAP32[$__str>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = ((($__str)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ((($__str)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(11);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__n;
  $__p$0 = $7;
 }
 _memset(($__p$0|0),($__c|0),($__n|0))|0;
 $11 = (($__p$0) + ($__n)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if (!($0)) {
  $1 = HEAP8[$__str>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  $4 = ((($__str)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($__str)) + 1|0);
  $7 = $3 ? $6 : $5;
  $8 = ((($__str)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $1&255;
  $11 = $10 >>> 1;
  $12 = $3 ? $11 : $9;
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$7,$12)|0);
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 1|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__n>>>0);
 do {
  if ($8) {
   $9 = (($__n) - ($7))|0;
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$9,$__c)|0);
  } else {
   if ($2) {
    $14 = (((($this)) + 1|0) + ($__n)|0);
    HEAP8[$14>>0] = 0;
    $15 = $__n << 1;
    $16 = $15&255;
    HEAP8[$this>>0] = $16;
    break;
   } else {
    $10 = ((($this)) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($11) + ($__n)|0);
    HEAP8[$12>>0] = 0;
    $13 = ((($this)) + 4|0);
    HEAP32[$13>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)==(0);
 if (!($0)) {
  $1 = HEAP8[$this>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $16 = 10;$8 = $1;
  } else {
   $4 = HEAP32[$this>>2]|0;
   $5 = $4 & -2;
   $phitmp$i = (($5) + -1)|0;
   $6 = $4&255;
   $16 = $phitmp$i;$8 = $6;
  }
  $7 = $8 & 1;
  $9 = ($7<<24>>24)==(0);
  if ($9) {
   $12 = $8&255;
   $13 = $12 >>> 1;
   $15 = $13;
  } else {
   $10 = ((($this)) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   $15 = $11;
  }
  $14 = (($16) - ($15))|0;
  $17 = ($14>>>0)<($__n>>>0);
  if ($17) {
   $18 = (($__n) - ($16))|0;
   $19 = (($18) + ($15))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
   $$pre = HEAP8[$this>>0]|0;
   $21 = $$pre;
  } else {
   $21 = $8;
  }
  $20 = $21 & 1;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   $25 = ((($this)) + 1|0);
   $27 = $25;
  } else {
   $23 = ((($this)) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $27 = $24;
  }
  $26 = (($27) + ($15)|0);
  _memset(($26|0),($__c|0),($__n|0))|0;
  $28 = (($15) + ($__n))|0;
  $29 = HEAP8[$this>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $33 = $28 << 1;
   $34 = $33&255;
   HEAP8[$this>>0] = $34;
  } else {
   $32 = ((($this)) + 4|0);
   HEAP32[$32>>2] = $28;
  }
  $35 = (($27) + ($28)|0);
  HEAP8[$35>>0] = 0;
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0, $phitmp$i3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 10;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(11);
 if ($17) {
  $20 = 10;
 } else {
  $18 = (($16) + 16)|0;
  $19 = $18 & -16;
  $phitmp$i3 = (($19) + -1)|0;
  $20 = $phitmp$i3;
 }
 $21 = ($20|0)==($22|0);
 do {
  if (!($21)) {
   $23 = ($20|0)==(10);
   do {
    if ($23) {
     $24 = ((($this)) + 1|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$0 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = (($20) + 1)|0;
     $28 = (__Znwj($27)|0);
     $29 = $8 & 1;
     $30 = ($29<<24>>24)==(0);
     if ($30) {
      $33 = ((($this)) + 1|0);
      $__new_data$0 = $28;$__now_long$0$off0 = 1;$__p$0 = $33;$__was_long$0$off0 = 0;
      break;
     } else {
      $31 = ((($this)) + 8|0);
      $32 = HEAP32[$31>>2]|0;
      $__new_data$0 = $28;$__now_long$0$off0 = 1;$__p$0 = $32;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $34 = $8 & 1;
   $35 = ($34<<24>>24)==(0);
   if ($35) {
    $38 = $8&255;
    $39 = $38 >>> 1;
    $41 = $39;
   } else {
    $36 = ((($this)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $41 = $37;
   }
   $40 = (($41) + 1)|0;
   _memcpy(($__new_data$0|0),($__p$0|0),($40|0))|0;
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $42 = (($20) + 1)|0;
    $43 = $42 | 1;
    HEAP32[$this>>2] = $43;
    $44 = ((($this)) + 4|0);
    HEAP32[$44>>2] = $14;
    $45 = ((($this)) + 8|0);
    HEAP32[$45>>2] = $__new_data$0;
    break;
   } else {
    $46 = $14 << 1;
    $47 = $46&255;
    HEAP8[$this>>0] = $47;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy)|0);
  _memcpy(($22|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $26 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $27 = (($20) + ($$sum1)|0);
  _memcpy(($26|0),($27|0),($25|0))|0;
 }
 $28 = ($__old_cap|0)==(10);
 if (!($28)) {
  __ZdlPv($20);
 }
 $29 = ((($this)) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 $31 = (($23) + ($__n_add))|0;
 $32 = ((($this)) + 4|0);
 HEAP32[$32>>2] = $31;
 $33 = (($18) + ($31)|0);
 HEAP8[$33>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = (($__old_sz) - ($__n_del))|0;
 $22 = ($21|0)==($__n_copy|0);
 if (!($22)) {
  $23 = (($21) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $24 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $25 = (($20) + ($$sum1)|0);
  _memcpy(($24|0),($25|0),($23|0))|0;
 }
 $26 = ($__old_cap|0)==(10);
 if (!($26)) {
  __ZdlPv($20);
 }
 $27 = ((($this)) + 8|0);
 HEAP32[$27>>2] = $18;
 $28 = $17 | 1;
 HEAP32[$this>>2] = $28;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 (_wmemcpy($__p$0,$__s,$__sz)|0);
 $12 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 (_wmemset($__p$0,$__c,$__n)|0);
 $12 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 1;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 4|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   (_wmemmove($14,$__s,$__n)|0);
   $15 = (($14) + ($__n<<2)|0);
   HEAP32[$15>>2] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0, $phitmp$i3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 1;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $20 = 1;
 } else {
  $18 = (($16) + 4)|0;
  $19 = $18 & -4;
  $phitmp$i3 = (($19) + -1)|0;
  $20 = $phitmp$i3;
 }
 $21 = ($20|0)==($22|0);
 do {
  if (!($21)) {
   $23 = ($20|0)==(1);
   do {
    if ($23) {
     $24 = ((($this)) + 4|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$0 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = $20 << 2;
     $28 = (($27) + 4)|0;
     $29 = (__Znwj($28)|0);
     $30 = $8 & 1;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $34 = ((($this)) + 4|0);
      $__new_data$0 = $29;$__now_long$0$off0 = 1;$__p$0 = $34;$__was_long$0$off0 = 0;
      break;
     } else {
      $32 = ((($this)) + 8|0);
      $33 = HEAP32[$32>>2]|0;
      $__new_data$0 = $29;$__now_long$0$off0 = 1;$__p$0 = $33;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $35 = $8 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $39 = $8&255;
    $40 = $39 >>> 1;
    $42 = $40;
   } else {
    $37 = ((($this)) + 4|0);
    $38 = HEAP32[$37>>2]|0;
    $42 = $38;
   }
   $41 = (($42) + 1)|0;
   (_wmemcpy($__new_data$0,$__p$0,$41)|0);
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $43 = (($20) + 1)|0;
    $44 = $43 | 1;
    HEAP32[$this>>2] = $44;
    $45 = ((($this)) + 4|0);
    HEAP32[$45>>2] = $14;
    $46 = ((($this)) + 8|0);
    HEAP32[$46>>2] = $__new_data$0;
    break;
   } else {
    $47 = $14 << 1;
    $48 = $47&255;
    HEAP8[$this>>0] = $48;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0<<2)|0);
 HEAP32[$__p$0>>2] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
 HEAP32[$22>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741806 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = ($__n_add|0)==(0);
 if (!($22)) {
  $23 = (($19) + ($__n_copy<<2)|0);
  (_wmemcpy($23,$__p_new_stuff,$__n_add)|0);
 }
 $24 = (($__old_sz) - ($__n_del))|0;
 $25 = ($24|0)==($__n_copy|0);
 if (!($25)) {
  $26 = (($24) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $27 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $28 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($27,$28,$26)|0);
 }
 $29 = ($__old_cap|0)==(1);
 if (!($29)) {
  __ZdlPv($21);
 }
 $30 = ((($this)) + 8|0);
 HEAP32[$30>>2] = $19;
 $31 = $18 | 1;
 HEAP32[$this>>2] = $31;
 $32 = (($24) + ($__n_add))|0;
 $33 = ((($this)) + 4|0);
 HEAP32[$33>>2] = $32;
 $34 = (($19) + ($32<<2)|0);
 HEAP32[$34>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($25,$26,$24)|0);
 }
 $27 = ($__old_cap|0)==(1);
 if (!($27)) {
  __ZdlPv($21);
 }
 $28 = ((($this)) + 8|0);
 HEAP32[$28>>2] = $19;
 $29 = $18 | 1;
 HEAP32[$this>>2] = $29;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = ((($this)) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = ((($this)) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = ((($this)) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = $__last;
 $15 = (($14) - ($0))|0;
 $16 = ($__first|0)==($__last|0);
 if (!($16)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $17 = HEAP8[$$04>>0]|0;
   HEAP8[$__p$03>>0] = $17;
   $18 = ((($$04)) + 1|0);
   $19 = ((($__p$03)) + 1|0);
   $20 = ($18|0)==($__last|0);
   if ($20) {
    break;
   } else {
    $$04 = $18;$__p$03 = $19;
   }
  }
 }
 $scevgep2 = (($__p$0$ph) + ($15)|0);
 HEAP8[$scevgep2>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = ((($this)) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = ((($this)) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $18 = $17 >>> 2;
 $19 = ($__first|0)==($__last|0);
 if (!($19)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $20 = HEAP32[$$04>>2]|0;
   HEAP32[$__p$03>>2] = $20;
   $21 = ((($$04)) + 4|0);
   $22 = ((($__p$03)) + 4|0);
   $23 = ($21|0)==($__last|0);
   if ($23) {
    break;
   } else {
    $$04 = $21;$__p$03 = $22;
   }
  }
 }
 $scevgep = (($__p$0$ph) + ($18<<2)|0);
 HEAP32[$scevgep>>2] = 0;
 return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $$state = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 $3 = $2&1;
 $$state = $3 | $state;
 $4 = ((($this)) + 16|0);
 HEAP32[$4>>2] = $$state;
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4600);
 __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,0);
 $0 = ((($this)) + 28|0);
 __ZNSt3__16localeD2Ev($0);
 $1 = ((($this)) + 32|0);
 $2 = HEAP32[$1>>2]|0;
 _free($2);
 $3 = ((($this)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 _free($4);
 $5 = ((($this)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 _free($6);
 $7 = ((($this)) + 60|0);
 $8 = HEAP32[$7>>2]|0;
 _free($8);
 return;
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 32|0);
 $3 = ((($this)) + 36|0);
 $4 = ($1|0)==(0);
 if (!($4)) {
  $i$01 = $1;
  while(1) {
   $5 = (($i$01) + -1)|0;
   $6 = HEAP32[$2>>2]|0;
   $7 = (($6) + ($5<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$3>>2]|0;
   $10 = (($9) + ($5<<2)|0);
   $11 = HEAP32[$10>>2]|0;
   FUNCTION_TABLE_viii[$8 & 3]($ev,$this,$11);
   $12 = ($5|0)==(0);
   if ($12) {
    break;
   } else {
    $i$01 = $5;
   }
  }
 }
 return;
}
function __ZNKSt3__18ios_base6getlocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = ((($this)) + 28|0);
 __ZNSt3__16localeC2ERKS0_($0,$1);
 $2 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__18ios_base4initEPv($this,$sb) {
 $this = $this|0;
 $sb = $sb|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 HEAP32[$0>>2] = $sb;
 $not$ = ($sb|0)==(0|0);
 $1 = $not$&1;
 $2 = ((($this)) + 16|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($this)) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($this)) + 4|0);
 HEAP32[$4>>2] = 4098;
 $5 = ((($this)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($this)) + 8|0);
 HEAP32[$6>>2] = 6;
 $7 = ((($this)) + 32|0);
 $8 = ((($this)) + 28|0);
 dest=$7; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev($8);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4536);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4536);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4536);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = ((($this)) + 8|0);
 ;HEAP32[$1>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($agg$result)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($agg$result)) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$02 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = ((($this)) + 16|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$01 = $__s;$__i$02 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $6;
     $7 = HEAP8[$3>>0]|0;
     $storemerge = $7;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 40|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 63]($this)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      $__i$0$lcssa = $__i$02;
      break L1;
     }
     $13 = $11&255;
     $storemerge = $13;
    }
    HEAP8[$$01>>0] = $storemerge;
    $14 = (($__i$02) + 1)|0;
    $15 = ((($$01)) + 1|0);
    $16 = ($14|0)<($__n|0);
    if ($16) {
     $$01 = $15;$__i$02 = $14;
    } else {
     $__i$0$lcssa = $14;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = ((($this)) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 1|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP8[$6>>0]|0;
  $9 = $8&255;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0;
 var $__i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = ((($this)) + 28|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$02 = $__s;$__i$01 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = HEAP8[$$02>>0]|0;
     $7 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $7;
     HEAP8[$3>>0] = $6;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 52|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = HEAP8[$$02>>0]|0;
     $12 = $11&255;
     $13 = (FUNCTION_TABLE_iii[$10 & 15]($this,$12)|0);
     $14 = ($13|0)==(-1);
     if ($14) {
      $__i$0$lcssa = $__i$01;
      break L1;
     }
    }
    $15 = ((($$02)) + 1|0);
    $16 = (($__i$01) + 1)|0;
    $17 = ($16|0)<($__n|0);
    if ($17) {
     $$02 = $15;$__i$01 = $16;
    } else {
     $__i$0$lcssa = $16;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$this);
  $6 = HEAP8[$__s>>0]|0;
  $7 = ($6<<24>>24)==(0);
  if (!($7)) {
   $8 = HEAP32[$this>>2]|0;
   $9 = ((($8)) + -12|0);
   $10 = HEAP32[$9>>2]|0;
   $$sum1 = (($10) + 24)|0;
   $11 = (($this) + ($$sum1)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$12>>2]|0;
   $14 = ((($13)) + 24|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = (FUNCTION_TABLE_ii[$15 & 63]($12)|0);
   $17 = ($16|0)==(-1);
   if ($17) {
    $18 = HEAP32[$this>>2]|0;
    $19 = ((($18)) + -12|0);
    $20 = HEAP32[$19>>2]|0;
    $$sum2 = (($20) + 16)|0;
    $21 = (($this) + ($$sum2)|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = $22 | 1;
    HEAP32[$21>>2] = $23;
   }
  }
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 }
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $$sum = (($3) + 16)|0;
 $4 = (($__os) + ($$sum)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$sum1 = (($3) + 72)|0;
  $7 = (($__os) + ($$sum1)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  $$sum1 = (($4) + 16)|0;
  $8 = (($1) + ($$sum1)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0);
  if ($10) {
   $$sum2 = (($4) + 4)|0;
   $11 = (($1) + ($$sum2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = $12 & 8192;
   $14 = ($13|0)==(0);
   if (!($14)) {
    $15 = (__ZSt18uncaught_exceptionv()|0);
    if (!($15)) {
     $16 = HEAP32[$0>>2]|0;
     $17 = HEAP32[$16>>2]|0;
     $18 = ((($17)) + -12|0);
     $19 = HEAP32[$18>>2]|0;
     $$sum3 = (($19) + 24)|0;
     $20 = (($16) + ($$sum3)|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($22)) + 24|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_ii[$24 & 63]($21)|0);
     $26 = ($25|0)==(-1);
     if ($26) {
      $27 = HEAP32[$0>>2]|0;
      $28 = HEAP32[$27>>2]|0;
      $29 = ((($28)) + -12|0);
      $30 = HEAP32[$29>>2]|0;
      $$sum4 = (($30) + 16)|0;
      $31 = (($27) + ($$sum4)|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = $32 | 1;
      HEAP32[$31>>2] = $33;
     }
    }
   }
  }
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $$sum = 0, $$sum$i = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $__s = sp + 8|0;
 $1 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$this);
 $2 = HEAP8[$__s>>0]|0;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = HEAP32[$this>>2]|0;
  $5 = ((($4)) + -12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($this) + ($6)|0);
  $8 = (__ZNKSt3__18ios_base6getlocEv($7)|0);
  HEAP32[$1>>2] = $8;
  $9 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,5312)|0);
  __ZNSt3__16localeD2Ev($1);
  $10 = HEAP32[$this>>2]|0;
  $11 = ((($10)) + -12|0);
  $12 = HEAP32[$11>>2]|0;
  $$sum$i = (($12) + 24)|0;
  $13 = (($this) + ($$sum$i)|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($this) + ($12)|0);
  $$sum = (($12) + 76)|0;
  $16 = (($this) + ($$sum)|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)==(-1);
  if ($18) {
   $19 = (__ZNKSt3__18ios_base6getlocEv($15)|0);
   HEAP32[$$byval_copy>>2] = $19;
   $20 = (__ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy,6176)|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($21)) + 28|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (FUNCTION_TABLE_iii[$23 & 15]($20,32)|0);
   __ZNSt3__16localeD2Ev($$byval_copy);
   $25 = $24 << 24 >> 24;
   HEAP32[$16>>2] = $25;
   $27 = $25;
  } else {
   $27 = $17;
  }
  $26 = $27&255;
  $28 = HEAP32[$9>>2]|0;
  $29 = ((($28)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  HEAP32[$0>>2] = $14;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $31 = (FUNCTION_TABLE_iiiiii[$30 & 31]($9,$$byval_copy,$15,$26,$__n)|0);
  $32 = ($31|0)==(0|0);
  if ($32) {
   $33 = HEAP32[$this>>2]|0;
   $34 = ((($33)) + -12|0);
   $35 = HEAP32[$34>>2]|0;
   $$sum4 = (($35) + 16)|0;
   $36 = (($this) + ($$sum4)|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = $37 | 5;
   HEAP32[$36>>2] = $38;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 $1 = ((($0)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($1);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 12)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 return;
}
function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP8[$$027>>0]|0;
    $3 = HEAP8[$$018>>0]|0;
    $4 = ($2<<24>>24)<($3<<24>>24);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3<<24>>24)<($2<<24>>24);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 1|0);
    $7 = ((($$018)) + 1|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP8[$__p$01>>0]|0;
   $3 = $2 << 24 >> 24;
   $4 = (($3) + ($1))|0;
   $5 = $4 & -268435456;
   $6 = $5 >>> 24;
   $7 = $6 | $5;
   $8 = $7 ^ $4;
   $9 = ((($__p$01)) + 1|0);
   $10 = ($9|0)==($__hi|0);
   if ($10) {
    $__h$0$lcssa = $8;
    break;
   } else {
    $__h$02 = $8;$__p$01 = $9;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP32[$$027>>2]|0;
    $3 = HEAP32[$$018>>2]|0;
    $4 = ($2|0)<($3|0);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3|0)<($2|0);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 4|0);
    $7 = ((($$018)) + 4|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP32[$__p$01>>2]|0;
   $3 = (($2) + ($1))|0;
   $4 = $3 & -268435456;
   $5 = $4 >>> 24;
   $6 = $5 | $4;
   $7 = $6 ^ $3;
   $8 = ((($__p$01)) + 4|0);
   $9 = ($8|0)==($__hi|0);
   if ($9) {
    $__h$0$lcssa = $7;
    break;
   } else {
    $__h$02 = $7;$__p$01 = $8;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy2 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 63]($this,$$byval_copy,$$byval_copy2,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   if ((($15|0) == 0)) {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break;
   } else if ((($15|0) == 1)) {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break;
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   $17 = (__ZNKSt3__16locale9use_facetERNS0_2idE($2,6176)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
   $18 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$3>>2] = $18;
   $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($3,6320)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($18)|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   FUNCTION_TABLE_vii[$22 & 63]($__names,$19);
   $23 = ((($__names)) + 12|0);
   $24 = HEAP32[$19>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_vii[$26 & 63]($23,$19);
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$4>>2] = $27;
   $28 = ((($__names)) + 24|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy2,$__names,$28,$17,$__err,1)|0);
   $30 = ($29|0)==($__names|0);
   $31 = $30&1;
   HEAP8[$__v>>0] = $31;
   $32 = HEAP32[$__b>>2]|0;
   $33 = ((($__names)) + 12|0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
   $$sroa$01$0 = $32;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $phitmp$i = 0, $phitmp$i14 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6176)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 (FUNCTION_TABLE_iiiii[$7 & 7]($4,5144,(5170),$__atoms)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__buf>>2] = 0;
 $8 = ((($__buf)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__buf)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = HEAP8[$__buf>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = 10;
 } else {
  $13 = HEAP32[$__buf>>2]|0;
  $14 = $13 & -2;
  $phitmp$i = (($14) + -1)|0;
  $15 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$15,0);
 $16 = HEAP8[$__buf>>0]|0;
 $17 = $16 & 1;
 $18 = ($17<<24>>24)==(0);
 $19 = ((($__buf)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($__buf)) + 1|0);
 $22 = $18 ? $21 : $20;
 HEAP32[$__a_end>>2] = $22;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $23 = ((($__buf)) + 4|0);
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i5 = $$pre;$__a$0 = $22;
 L4: while(1) {
  $24 = ($$pre$i$i$i5|0)==(0|0);
  if ($24) {
   $$pre$i$i$i = 0;
  } else {
   $25 = ((($$pre$i$i$i5)) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($$pre$i$i$i5)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$pre$i$i$i5>>2]|0;
    $31 = ((($30)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($$pre$i$i$i5)|0);
    $34 = ($33|0)==(-1);
    if ($34) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i5;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i5;
   }
  }
  $35 = ($$pre$i$i$i|0)==(0|0);
  $36 = HEAP32[$__e>>2]|0;
  $37 = ($36|0)==(0|0);
  do {
   if ($37) {
    label = 13;
   } else {
    $38 = ((($36)) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($36)) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($39|0)==($41|0);
    if (!($42)) {
     if ($35) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
    $43 = HEAP32[$36>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
    $47 = ($46|0)==(-1);
    if ($47) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($35) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($35) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $48 = HEAP32[$__a_end>>2]|0;
  $49 = HEAP8[$__buf>>0]|0;
  $50 = $49 & 1;
  $51 = ($50<<24>>24)==(0);
  $52 = HEAP32[$23>>2]|0;
  $53 = $49&255;
  $54 = $53 >>> 1;
  $55 = $51 ? $54 : $52;
  $56 = (($__a$0) + ($55)|0);
  $57 = ($48|0)==($56|0);
  if ($57) {
   $58 = $55 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = 10;
   } else {
    $62 = HEAP32[$__buf>>2]|0;
    $63 = $62 & -2;
    $phitmp$i14 = (($63) + -1)|0;
    $64 = $phitmp$i14;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$64,0);
   $65 = HEAP8[$__buf>>0]|0;
   $66 = $65 & 1;
   $67 = ($66<<24>>24)==(0);
   $68 = HEAP32[$19>>2]|0;
   $69 = $67 ? $21 : $68;
   $70 = (($69) + ($55)|0);
   HEAP32[$__a_end>>2] = $70;
   $__a$1 = $69;
  } else {
   $__a$1 = $__a$0;
  }
  $71 = ((($$pre$i$i$i)) + 12|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = ((($$pre$i$i$i)) + 16|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = ($72|0)==($74|0);
  if ($75) {
   $76 = HEAP32[$$pre$i$i$i>>2]|0;
   $77 = ((($76)) + 36|0);
   $78 = HEAP32[$77>>2]|0;
   $79 = (FUNCTION_TABLE_ii[$78 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $79;
  } else {
   $80 = HEAP8[$72>>0]|0;
   $81 = $80&255;
   $$0$i$i = $81;
  }
  $82 = $$0$i$i&255;
  $83 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($82,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
  $84 = ($83|0)==(0);
  if (!($84)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $85 = HEAP32[$71>>2]|0;
  $86 = HEAP32[$73>>2]|0;
  $87 = ($85|0)==($86|0);
  if ($87) {
   $88 = HEAP32[$$pre$i$i$i>>2]|0;
   $89 = ((($88)) + 40|0);
   $90 = HEAP32[$89>>2]|0;
   (FUNCTION_TABLE_ii[$90 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $91 = ((($85)) + 1|0);
   HEAP32[$71>>2] = $91;
   $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $92 = HEAP32[$__a_end>>2]|0;
 $93 = $92;
 $94 = $__a$2;
 $95 = (($93) - ($94))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$95,0);
 $96 = HEAP8[$__buf>>0]|0;
 $97 = $96 & 1;
 $98 = ($97<<24>>24)==(0);
 $99 = HEAP32[$19>>2]|0;
 $100 = $98 ? $21 : $99;
 $101 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $102 = (__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($100,$101,9136,$vararg_buffer)|0);
 $103 = ($102|0)==(1);
 if (!($103)) {
  HEAP32[$__err>>2] = 4;
 }
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 37;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 37;
     break;
    }
   }
   if (!($116)) {
    label = 38;
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($116) {
   label = 38;
  }
 }
 if ((label|0) == 38) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = ((($__atoms)) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 26|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP8[$$0$i2>>0]|0;
    $29 = ($28<<24>>24)==($__ct<<24>>24);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 1|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = ($34|0)>(23);
   if ($35) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $37 = ($34|0)<(22);
     if (!($37)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $38 = $0;
      $39 = $__a;
      $40 = (($38) - ($39))|0;
      $41 = ($40|0)<(3);
      if (!($41)) {
       $$0 = -1;
       break;
      }
      $42 = ((($0)) + -1|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(48);
      if (!($44)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $45 = (5144 + ($34)|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $47;
      HEAP8[$0>>0] = $46;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $36 = ($34|0)<($__base|0);
     if (!($36)) {
      $$0 = -1;
      break;
     }
    }
    $48 = (5144 + ($34)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $50;
    HEAP8[$0>>0] = $49;
    $51 = HEAP32[$__dc>>2]|0;
    $52 = (($51) + 1)|0;
    HEAP32[$__dc>>2] = $52;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[9144>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((9144|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_newlocale(2147483647,(9152|0),(0|0))|0);
   HEAP32[9160>>2] = $4;
   ___cxa_guard_release((9144|0));
  }
 }
 $5 = HEAP32[9160>>2]|0;
 return ($5|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy2 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 63]($this,$$byval_copy,$$byval_copy2,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   if ((($15|0) == 0)) {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break;
   } else if ((($15|0) == 1)) {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break;
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   $17 = (__ZNKSt3__16locale9use_facetERNS0_2idE($2,6168)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
   $18 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$3>>2] = $18;
   $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($3,6328)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($18)|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   FUNCTION_TABLE_vii[$22 & 63]($__names,$19);
   $23 = ((($__names)) + 12|0);
   $24 = HEAP32[$19>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_vii[$26 & 63]($23,$19);
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$4>>2] = $27;
   $28 = ((($__names)) + 24|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy2,$__names,$28,$17,$__err,1)|0);
   $30 = ($29|0)==($__names|0);
   $31 = $30&1;
   HEAP8[$__v>>0] = $31;
   $32 = HEAP32[$__b>>2]|0;
   $33 = ((($__names)) + 12|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($33);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
   $$sroa$01$0 = $32;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $phitmp$i = 0, $phitmp$i18 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0;
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 (FUNCTION_TABLE_iiiii[$7 & 7]($4,5144,(5170),$__atoms)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__buf>>2] = 0;
 $8 = ((($__buf)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__buf)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = HEAP8[$__buf>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = 10;
 } else {
  $13 = HEAP32[$__buf>>2]|0;
  $14 = $13 & -2;
  $phitmp$i = (($14) + -1)|0;
  $15 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$15,0);
 $16 = HEAP8[$__buf>>0]|0;
 $17 = $16 & 1;
 $18 = ($17<<24>>24)==(0);
 $19 = ((($__buf)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($__buf)) + 1|0);
 $22 = $18 ? $21 : $20;
 HEAP32[$__a_end>>2] = $22;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $23 = ((($__buf)) + 4|0);
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i6 = $$pre;$__a$0 = $22;
 L4: while(1) {
  $24 = ($$pre$i$i$i6|0)==(0|0);
  if ($24) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $25 = ((($$pre$i$i$i6)) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($$pre$i$i$i6)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$pre$i$i$i6>>2]|0;
    $31 = ((($30)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($$pre$i$i$i6)|0);
    $$0$i$i$i$i4 = $33;
   } else {
    $34 = HEAP32[$26>>2]|0;
    $$0$i$i$i$i4 = $34;
   }
   $35 = ($$0$i$i$i$i4|0)==(-1);
   if ($35) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i6;$130 = 0;
   }
  }
  $36 = HEAP32[$__e>>2]|0;
  $37 = ($36|0)==(0|0);
  do {
   if ($37) {
    label = 16;
   } else {
    $38 = ((($36)) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($36)) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($39|0)==($41|0);
    if ($42) {
     $43 = HEAP32[$36>>2]|0;
     $44 = ((($43)) + 36|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
     $$0$i$i1$i$i10 = $46;
    } else {
     $47 = HEAP32[$39>>2]|0;
     $$0$i$i1$i$i10 = $47;
    }
    $48 = ($$0$i$i1$i$i10|0)==(-1);
    if ($48) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $49 = HEAP32[$__a_end>>2]|0;
  $50 = HEAP8[$__buf>>0]|0;
  $51 = $50 & 1;
  $52 = ($51<<24>>24)==(0);
  $53 = HEAP32[$23>>2]|0;
  $54 = $50&255;
  $55 = $54 >>> 1;
  $56 = $52 ? $55 : $53;
  $57 = (($__a$0) + ($56)|0);
  $58 = ($49|0)==($57|0);
  if ($58) {
   $59 = $56 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   if ($62) {
    $65 = 10;
   } else {
    $63 = HEAP32[$__buf>>2]|0;
    $64 = $63 & -2;
    $phitmp$i18 = (($64) + -1)|0;
    $65 = $phitmp$i18;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$65,0);
   $66 = HEAP8[$__buf>>0]|0;
   $67 = $66 & 1;
   $68 = ($67<<24>>24)==(0);
   $69 = HEAP32[$19>>2]|0;
   $70 = $68 ? $21 : $69;
   $71 = (($70) + ($56)|0);
   HEAP32[$__a_end>>2] = $71;
   $__a$1 = $70;
  } else {
   $__a$1 = $__a$0;
  }
  $72 = ((($$pre$i$i$i)) + 12|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ((($$pre$i$i$i)) + 16|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = ($73|0)==($75|0);
  if ($76) {
   $77 = HEAP32[$$pre$i$i$i>>2]|0;
   $78 = ((($77)) + 36|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = (FUNCTION_TABLE_ii[$79 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $80;
  } else {
   $81 = HEAP32[$73>>2]|0;
   $$0$i$i = $81;
  }
  $82 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
  $83 = ($82|0)==(0);
  if (!($83)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $84 = HEAP32[$72>>2]|0;
  $85 = HEAP32[$74>>2]|0;
  $86 = ($84|0)==($85|0);
  if ($86) {
   $87 = HEAP32[$$pre$i$i$i>>2]|0;
   $88 = ((($87)) + 40|0);
   $89 = HEAP32[$88>>2]|0;
   (FUNCTION_TABLE_ii[$89 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $90 = ((($84)) + 4|0);
   HEAP32[$72>>2] = $90;
   $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $91 = HEAP32[$__a_end>>2]|0;
 $92 = $91;
 $93 = $__a$2;
 $94 = (($92) - ($93))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$94,0);
 $95 = HEAP8[$__buf>>0]|0;
 $96 = $95 & 1;
 $97 = ($96<<24>>24)==(0);
 $98 = HEAP32[$19>>2]|0;
 $99 = $97 ? $21 : $98;
 $100 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $101 = (__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($99,$100,9136,$vararg_buffer)|0);
 $102 = ($101|0)==(1);
 if (!($102)) {
  HEAP32[$__err>>2] = 4;
 }
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 43;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 43;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 45;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 43) {
  if ($132) {
   label = 45;
  }
 }
 if ((label|0) == 45) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = ((($__atoms)) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct|0)==($__thousands_sep|0);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 104|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP32[$$0$i2>>2]|0;
    $29 = ($28|0)==($__ct|0);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 4|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = $34 >> 2;
   $36 = ($34|0)>(92);
   if ($36) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $38 = ($34|0)<(88);
     if (!($38)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $39 = $0;
      $40 = $__a;
      $41 = (($39) - ($40))|0;
      $42 = ($41|0)<(3);
      if (!($42)) {
       $$0 = -1;
       break;
      }
      $43 = ((($0)) + -1|0);
      $44 = HEAP8[$43>>0]|0;
      $45 = ($44<<24>>24)==(48);
      if (!($45)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $46 = (5144 + ($35)|0);
      $47 = HEAP8[$46>>0]|0;
      $48 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $48;
      HEAP8[$0>>0] = $47;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $37 = ($35|0)<($__base|0);
     if (!($37)) {
      $$0 = -1;
      break;
     }
    }
    $49 = (5144 + ($35)|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $51;
    HEAP8[$0>>0] = $50;
    $52 = HEAP32[$__dc>>2]|0;
    $53 = (($52) + 1)|0;
    HEAP32[$__dc>>2] = $53;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6176)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5144,(5170),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6320)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP8[$__thousands_sep>>0] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6176)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5144,(5176),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6320)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP8[$__decimal_point>>0] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 63]($5)|0);
 HEAP8[$__thousands_sep>>0] = $13;
 $14 = HEAP32[$5>>2]|0;
 $15 = ((($14)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 FUNCTION_TABLE_vii[$16 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 32|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP8[$$0$i3>>0]|0;
    $42 = ($41<<24>>24)==($__ct<<24>>24);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 1|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = ($47|0)>(31);
   if ($48) {
    $$0 = -1;
   } else {
    $49 = (5144 + ($47)|0);
    $50 = HEAP8[$49>>0]|0;
    if ((($47|0) == 23) | (($47|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
     $62 = HEAP32[$__a_end>>2]|0;
     $63 = ((($62)) + 1|0);
     HEAP32[$__a_end>>2] = $63;
     HEAP8[$62>>0] = $50;
     $$0 = 0;
     break;
    } else if ((($47|0) == 24) | (($47|0) == 25)) {
     $51 = HEAP32[$__a_end>>2]|0;
     $52 = ($51|0)==($__a|0);
     if (!($52)) {
      $53 = ((($51)) + -1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54&255;
      $56 = $55 & 95;
      $57 = HEAP8[$__exp>>0]|0;
      $58 = $57&255;
      $59 = $58 & 127;
      $60 = ($56|0)==($59|0);
      if (!($60)) {
       $$0 = -1;
       break;
      }
     }
     $61 = ((($51)) + 1|0);
     HEAP32[$__a_end>>2] = $61;
     HEAP8[$51>>0] = $50;
     $$0 = 0;
     break;
    } else {
     $64 = $50&255;
     $65 = $64 & 95;
     $66 = HEAP8[$__exp>>0]|0;
     $67 = $66 << 24 >> 24;
     $68 = ($65|0)==($67|0);
     if ($68) {
      $69 = $65 | 128;
      $70 = $69&255;
      HEAP8[$__exp>>0] = $70;
      $71 = HEAP8[$__in_units>>0]|0;
      $72 = ($71<<24>>24)==(0);
      if (!($72)) {
       HEAP8[$__in_units>>0] = 0;
       $73 = HEAP8[$__grouping>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       $76 = ((($__grouping)) + 4|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = $73&255;
       $79 = $78 >>> 1;
       $80 = $75 ? $79 : $77;
       $81 = ($80|0)==(0);
       if (!($81)) {
        $82 = HEAP32[$__g_end>>2]|0;
        $83 = $82;
        $84 = $__g;
        $85 = (($83) - ($84))|0;
        $86 = ($85|0)<(160);
        if ($86) {
         $87 = HEAP32[$__dc>>2]|0;
         $88 = ((($82)) + 4|0);
         HEAP32[$__g_end>>2] = $88;
         HEAP32[$82>>2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end>>2]|0;
     $90 = ((($89)) + 1|0);
     HEAP32[$__a_end>>2] = $90;
     HEAP8[$89>>0] = $50;
     $91 = ($47|0)>(21);
     if ($91) {
      $$0 = 0;
      break;
     }
     $92 = HEAP32[$__dc>>2]|0;
     $93 = (($92) + 1)|0;
     HEAP32[$__dc>>2] = $93;
     $$0 = 0;
     break;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5144,(5170),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6328)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP32[$__thousands_sep>>2] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5144,(5176),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6328)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP32[$__decimal_point>>2] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 63]($5)|0);
 HEAP32[$__thousands_sep>>2] = $13;
 $14 = HEAP32[$5>>2]|0;
 $15 = ((($14)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 FUNCTION_TABLE_vii[$16 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct|0)==($__thousands_sep|0);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 128|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP32[$$0$i3>>2]|0;
    $42 = ($41|0)==($__ct|0);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 4|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = $47 >> 2;
   $49 = ($47|0)>(124);
   if ($49) {
    $$0 = -1;
   } else {
    $50 = (5144 + ($48)|0);
    $51 = HEAP8[$50>>0]|0;
    if ((($48|0) == 23) | (($48|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
    } else if ((($48|0) == 24) | (($48|0) == 25)) {
     $52 = HEAP32[$__a_end>>2]|0;
     $53 = ($52|0)==($__a|0);
     if (!($53)) {
      $54 = ((($52)) + -1|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55&255;
      $57 = $56 & 95;
      $58 = HEAP8[$__exp>>0]|0;
      $59 = $58&255;
      $60 = $59 & 127;
      $61 = ($57|0)==($60|0);
      if (!($61)) {
       $$0 = -1;
       break;
      }
     }
     $62 = ((($52)) + 1|0);
     HEAP32[$__a_end>>2] = $62;
     HEAP8[$52>>0] = $51;
     $$0 = 0;
     break;
    } else {
     $63 = $51&255;
     $64 = $63 & 95;
     $65 = HEAP8[$__exp>>0]|0;
     $66 = $65 << 24 >> 24;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = $64 | 128;
      $69 = $68&255;
      HEAP8[$__exp>>0] = $69;
      $70 = HEAP8[$__in_units>>0]|0;
      $71 = ($70<<24>>24)==(0);
      if (!($71)) {
       HEAP8[$__in_units>>0] = 0;
       $72 = HEAP8[$__grouping>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       $75 = ((($__grouping)) + 4|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = $72&255;
       $78 = $77 >>> 1;
       $79 = $74 ? $78 : $76;
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = HEAP32[$__g_end>>2]|0;
        $82 = $81;
        $83 = $__g;
        $84 = (($82) - ($83))|0;
        $85 = ($84|0)<(160);
        if ($85) {
         $86 = HEAP32[$__dc>>2]|0;
         $87 = ((($81)) + 4|0);
         HEAP32[$__g_end>>2] = $87;
         HEAP32[$81>>2] = $86;
        }
       }
      }
     }
    }
    $88 = HEAP32[$__a_end>>2]|0;
    $89 = ((($88)) + 1|0);
    HEAP32[$__a_end>>2] = $89;
    HEAP8[$88>>0] = $51;
    $90 = ($47|0)>(84);
    if ($90) {
     $$0 = 0;
    } else {
     $91 = HEAP32[$__dc>>2]|0;
     $92 = (($91) + 1)|0;
     HEAP32[$__dc>>2] = $92;
     $$0 = 0;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi5Z2D = 0, $$pre1 = 0, $$pre1$val = 0, $$pre1$val6 = 0, $$pre4 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$this>>2]|0;
  $7 = ((($6)) + 24|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$__s>>2]|0;
  HEAP32[$0>>2] = $9;
  $10 = $__v&1;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $11 = (FUNCTION_TABLE_iiiiii[$8 & 31]($this,$$byval_copy,$__iob,$__fl,$10)|0);
  $$sroa$0$0 = $11;
 } else {
  $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
  HEAP32[$1>>2] = $12;
  $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6320)|0);
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $14 = HEAP32[$13>>2]|0;
  if ($__v) {
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_vii[$16 & 63]($__nm,$13);
  } else {
   $17 = ((($14)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   FUNCTION_TABLE_vii[$18 & 63]($__nm,$13);
  }
  $19 = HEAP8[$__nm>>0]|0;
  $20 = $19 & 1;
  $21 = ($20<<24>>24)==(0);
  $22 = ((($__nm)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $$pre4 = ((($__nm)) + 1|0);
  $24 = ((($__nm)) + 1|0);
  $$pre1 = ((($__nm)) + 8|0);
  $$pre$phi5Z2D = $21 ? $24 : $$pre4;
  $$ph = $21 ? $24 : $23;
  $25 = ((($__nm)) + 4|0);
  $26 = $19 & 1;
  $27 = ($26<<24>>24)==(0);
  $$pre1$val6 = HEAP32[$$pre1>>2]|0;
  $28 = HEAP32[$25>>2]|0;
  $29 = $19&255;
  $30 = $29 >>> 1;
  $31 = $27 ? $$pre$phi5Z2D : $$pre1$val6;
  $32 = $27 ? $30 : $28;
  $33 = (($31) + ($32)|0);
  $34 = ($$ph|0)==($33|0);
  if (!($34)) {
   $36 = $$ph;
   while(1) {
    $35 = HEAP8[$36>>0]|0;
    $37 = HEAP32[$__s>>2]|0;
    $38 = ($37|0)==(0|0);
    do {
     if (!($38)) {
      $39 = ((($37)) + 24|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ((($37)) + 28|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = ($40|0)==($42|0);
      if (!($43)) {
       $44 = ((($40)) + 1|0);
       HEAP32[$39>>2] = $44;
       HEAP8[$40>>0] = $35;
       break;
      }
      $45 = HEAP32[$37>>2]|0;
      $46 = ((($45)) + 52|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = $35&255;
      $49 = (FUNCTION_TABLE_iii[$47 & 15]($37,$48)|0);
      $50 = ($49|0)==(-1);
      if ($50) {
       HEAP32[$__s>>2] = 0;
      }
     }
    } while(0);
    $51 = ((($36)) + 1|0);
    $$pre = HEAP8[$__nm>>0]|0;
    $52 = $$pre & 1;
    $53 = ($52<<24>>24)==(0);
    $$pre1$val = HEAP32[$$pre1>>2]|0;
    $54 = HEAP32[$25>>2]|0;
    $55 = $$pre&255;
    $56 = $55 >>> 1;
    $57 = $53 ? $$pre$phi5Z2D : $$pre1$val;
    $58 = $53 ? $56 : $54;
    $59 = (($57) + ($58)|0);
    $60 = ($51|0)==($59|0);
    if ($60) {
     break;
    } else {
     $36 = $51;
    }
   }
  }
  $61 = HEAP32[$__s>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
  $$sroa$0$0 = $61;
 }
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy = sp;
 $__fmt = sp + 56|0;
 $__nar = sp + 44|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9168>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9168+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9168+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9168+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9168+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9168+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9176,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1$lcssa = 0, $$1$ph = 0, $$13 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1$ph = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1$ph = $5;
 }
 $6 = HEAP8[$__len>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $$1$lcssa = $$1$ph;
 } else {
  $$012 = $__len;$$13 = $$1$ph;$10 = $6;
  while(1) {
   $8 = ((($$012)) + 1|0);
   $9 = ((($$13)) + 1|0);
   HEAP8[$$13>>0] = $10;
   $11 = HEAP8[$8>>0]|0;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $$1$lcssa = $9;
    break;
   } else {
    $$012 = $8;$$13 = $9;$10 = $11;
   }
  }
 }
 $13 = $__flags & 74;
 do {
  if ((($13|0) == 64)) {
   HEAP8[$$1$lcssa>>0] = 111;
  } else if ((($13|0) == 8)) {
   $14 = $__flags & 16384;
   $15 = ($14|0)==(0);
   if ($15) {
    HEAP8[$$1$lcssa>>0] = 120;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 88;
    break;
   }
  } else {
   if ($__signd) {
    HEAP8[$$1$lcssa>>0] = 100;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 117;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb,$__ne,$__iob) {
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__iob = $__iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 176;
 do {
  if ((($2|0) == 32)) {
   $$0 = $__ne;
  } else if ((($2|0) == 16)) {
   $3 = HEAP8[$__nb>>0]|0;
   if ((($3<<24>>24) == 43) | (($3<<24>>24) == 45)) {
    $4 = ((($__nb)) + 1|0);
    $$0 = $4;
    break;
   }
   $5 = $__ne;
   $6 = $__nb;
   $7 = (($5) - ($6))|0;
   $8 = ($7|0)>(1);
   $9 = ($3<<24>>24)==(48);
   $or$cond = $8 & $9;
   if ($or$cond) {
    $10 = ((($__nb)) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    if ((($11<<24>>24) == 88) | (($11<<24>>24) == 120)) {
     $12 = ((($__nb)) + 2|0);
     $$0 = $12;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $__nb;
 }
 return ($$0|0);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i111 = 0, $$01$i$i7 = 0, $$__dg$0 = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__dc$08 = 0, $__dc$1 = 0, $__dg$09 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$010 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6176)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6320)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $15 = ((($14)) + 32|0);
  $16 = HEAP32[$15>>2]|0;
  (FUNCTION_TABLE_iiiii[$16 & 7]($0,$__nb,$__ne,$__ob)|0);
  $17 = $__ne;
  $18 = $__nb;
  $19 = (($17) - ($18))|0;
  $20 = (($__ob) + ($19)|0);
  HEAP32[$__oe>>2] = $20;
  $$pre$phiZ2D = $18;$117 = $20;
 } else {
  HEAP32[$__oe>>2] = $__ob;
  $21 = HEAP8[$__nb>>0]|0;
  if ((($21<<24>>24) == 43) | (($21<<24>>24) == 45)) {
   $22 = ((($__nb)) + 1|0);
   $23 = HEAP32[$0>>2]|0;
   $24 = ((($23)) + 28|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 15]($0,$21)|0);
   $27 = HEAP32[$__oe>>2]|0;
   $28 = ((($27)) + 1|0);
   HEAP32[$__oe>>2] = $28;
   HEAP8[$27>>0] = $26;
   $__nf$0 = $22;
  } else {
   $__nf$0 = $__nb;
  }
  $29 = $__ne;
  $30 = $__nf$0;
  $31 = (($29) - ($30))|0;
  $32 = ($31|0)>(1);
  if ($32) {
   $33 = HEAP8[$__nf$0>>0]|0;
   $34 = ($33<<24>>24)==(48);
   if ($34) {
    $35 = ((($__nf$0)) + 1|0);
    $36 = HEAP8[$35>>0]|0;
    if ((($36<<24>>24) == 88) | (($36<<24>>24) == 120)) {
     $37 = HEAP32[$0>>2]|0;
     $38 = ((($37)) + 28|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_iii[$39 & 15]($0,48)|0);
     $41 = HEAP32[$__oe>>2]|0;
     $42 = ((($41)) + 1|0);
     HEAP32[$__oe>>2] = $42;
     HEAP8[$41>>0] = $40;
     $43 = ((($__nf$0)) + 2|0);
     $44 = HEAP8[$35>>0]|0;
     $45 = HEAP32[$0>>2]|0;
     $46 = ((($45)) + 28|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = (FUNCTION_TABLE_iii[$47 & 15]($0,$44)|0);
     $49 = HEAP32[$__oe>>2]|0;
     $50 = ((($49)) + 1|0);
     HEAP32[$__oe>>2] = $50;
     HEAP8[$49>>0] = $48;
     $__nf$1 = $43;
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
  } else {
   $__nf$1 = $__nf$0;
  }
  $51 = ($__nf$1|0)==($__ne|0);
  if (!($51)) {
   $52 = ((($__ne)) + -1|0);
   $53 = ($__nf$1>>>0)<($52>>>0);
   if ($53) {
    $$01$i$i111 = $__nf$1;$56 = $52;
    while(1) {
     $54 = HEAP8[$$01$i$i111>>0]|0;
     $55 = HEAP8[$56>>0]|0;
     HEAP8[$$01$i$i111>>0] = $55;
     HEAP8[$56>>0] = $54;
     $57 = ((($$01$i$i111)) + 1|0);
     $58 = ((($56)) + -1|0);
     $59 = ($57>>>0)<($58>>>0);
     if ($59) {
      $$01$i$i111 = $57;$56 = $58;
     } else {
      break;
     }
    }
   }
  }
  $60 = HEAP32[$1>>2]|0;
  $61 = ((($60)) + 16|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = (FUNCTION_TABLE_ii[$62 & 63]($1)|0);
  $64 = ((($__grouping)) + 8|0);
  $65 = ((($__grouping)) + 1|0);
  $66 = ($__nf$1>>>0)<($__ne>>>0);
  if ($66) {
   $__dc$08 = 0;$__dg$09 = 0;$__p$010 = $__nf$1;
   while(1) {
    $67 = HEAP8[$__grouping>>0]|0;
    $68 = $67 & 1;
    $69 = ($68<<24>>24)==(0);
    $70 = HEAP32[$64>>2]|0;
    $71 = $69 ? $65 : $70;
    $72 = (($71) + ($__dg$09)|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = ($73<<24>>24)!=(0);
    $75 = $73 << 24 >> 24;
    $76 = ($__dc$08|0)==($75|0);
    $or$cond = $74 & $76;
    if ($or$cond) {
     $77 = HEAP32[$__oe>>2]|0;
     $78 = ((($77)) + 1|0);
     HEAP32[$__oe>>2] = $78;
     HEAP8[$77>>0] = $63;
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$8>>2]|0;
     $83 = $79&255;
     $84 = $83 >>> 1;
     $85 = $81 ? $84 : $82;
     $86 = (($85) + -1)|0;
     $87 = ($__dg$09>>>0)<($86>>>0);
     $88 = $87&1;
     $$__dg$0 = (($88) + ($__dg$09))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$08;$__dg$1 = $__dg$09;
    }
    $89 = HEAP8[$__p$010>>0]|0;
    $90 = HEAP32[$0>>2]|0;
    $91 = ((($90)) + 28|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (FUNCTION_TABLE_iii[$92 & 15]($0,$89)|0);
    $94 = HEAP32[$__oe>>2]|0;
    $95 = ((($94)) + 1|0);
    HEAP32[$__oe>>2] = $95;
    HEAP8[$94>>0] = $93;
    $96 = (($__dc$1) + 1)|0;
    $97 = ((($__p$010)) + 1|0);
    $98 = ($97>>>0)<($__ne>>>0);
    if ($98) {
     $__dc$08 = $96;$__dg$09 = $__dg$1;$__p$010 = $97;
    } else {
     break;
    }
   }
  }
  $99 = $__nf$1;
  $100 = $__nb;
  $101 = (($99) - ($100))|0;
  $102 = (($__ob) + ($101)|0);
  $103 = HEAP32[$__oe>>2]|0;
  $104 = ($102|0)==($103|0);
  if ($104) {
   $$pre$phiZ2D = $100;$117 = $102;
  } else {
   $105 = ((($103)) + -1|0);
   $106 = ($102>>>0)<($105>>>0);
   if ($106) {
    $$01$i$i7 = $102;$109 = $105;
    while(1) {
     $107 = HEAP8[$$01$i$i7>>0]|0;
     $108 = HEAP8[$109>>0]|0;
     HEAP8[$$01$i$i7>>0] = $108;
     HEAP8[$109>>0] = $107;
     $110 = ((($$01$i$i7)) + 1|0);
     $111 = ((($109)) + -1|0);
     $112 = ($110>>>0)<($111>>>0);
     if ($112) {
      $$01$i$i7 = $110;$109 = $111;
     } else {
      break;
     }
    }
   }
   $$pre = HEAP32[$__oe>>2]|0;
   $$pre$phiZ2D = $100;$117 = $$pre;
  }
 }
 $113 = ($__np|0)==($__ne|0);
 $114 = $__np;
 $115 = (($114) - ($$pre$phiZ2D))|0;
 $116 = (($__ob) + ($115)|0);
 $storemerge = $113 ? $117 : $116;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 74|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9184,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy = sp;
 $__fmt = sp + 56|0;
 $__nar = sp + 44|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9168>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9168+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9168+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9168+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9168+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9168+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9176,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 75|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9184,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0;
 $$byval_copy = sp + 68|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 130|0;
 $__nb = sp + 64|0;
 $__o = sp + 72|0;
 $__op = sp + 60|0;
 $__oe = sp + 56|0;
 $0 = sp + 52|0;
 $1 = sp + 48|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9192,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  $17 = ((($__iob)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $18;
  $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
  HEAPF64[$vararg_ptr8>>3] = $__v;
  $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
  $20 = HEAP32[$__nb>>2]|0;
  $21 = ($20|0)==(0|0);
  if ($21) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $23 = $20;$36 = $20;$__nc$1 = $19;
  }
 } else {
  $$pre4 = HEAP32[$__nb>>2]|0;
  $23 = $$pre4;$36 = 0;$__nc$1 = $__nc$0;
 }
 $22 = (($23) + ($__nc$1)|0);
 $24 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23,$22,$__iob)|0);
 $25 = ($23|0)==($__nar|0);
 if ($25) {
  $30 = $__nar;$35 = 0;$__ob$0 = $__o;
 } else {
  $26 = $__nc$1 << 1;
  $27 = (_malloc($26)|0);
  $28 = ($27|0)==(0|0);
  if ($28) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $30 = $23;$35 = $27;$__ob$0 = $27;
  }
 }
 $29 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $29;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($30,$24,$22,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($29)|0);
 $31 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $31;
 $32 = HEAP32[$__op>>2]|0;
 $33 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $34 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$32,$33,$__iob,$__fl)|0);
 _free($35);
 _free($36);
 STACKTOP = sp;return ($34|0);
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1 = 0, $$2$lcssa = 0, $$2$ph = 0, $$23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = ((($$1)) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = ((($$1)) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $11 = HEAP8[$__len>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $$2$lcssa = $$2$ph;
 } else {
  $$012 = $__len;$$23 = $$2$ph;$15 = $11;
  while(1) {
   $13 = ((($$012)) + 1|0);
   $14 = ((($$23)) + 1|0);
   HEAP8[$$23>>0] = $15;
   $16 = HEAP8[$13>>0]|0;
   $17 = ($16<<24>>24)==(0);
   if ($17) {
    $$2$lcssa = $14;
    break;
   } else {
    $$012 = $13;$$23 = $14;$15 = $16;
   }
  }
 }
 do {
  if ((($6|0) == 256)) {
   $20 = $7 & 1;
   $21 = ($20|0)==(0);
   if ($21) {
    HEAP8[$$2$lcssa>>0] = 101;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break;
   }
  } else if ((($6|0) == 4)) {
   $18 = $7 & 1;
   $19 = ($18|0)==(0);
   if ($19) {
    HEAP8[$$2$lcssa>>0] = 102;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break;
   }
  } else {
   $22 = $7 & 1;
   $23 = ($22|0)!=(0);
   if ($8) {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 65;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break;
    }
   } else {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 71;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break;
    }
   }
  }
 } while(0);
 return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i20 = 0, $$01$i$i215 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$017 = 0, $__dc$1 = 0, $__dg$018 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$214 = 0, $__nf$214$lcssa = 0, $__nf$3 = 0, $__ns$026 = 0, $__ns$122 = 0, $__ns$2 = 0, $__p$019 = 0;
 var $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6176)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6320)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = ((($__nb)) + 1|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ((($7)) + 28|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iii[$9 & 15]($0,$5)|0);
  $11 = HEAP32[$__oe>>2]|0;
  $12 = ((($11)) + 1|0);
  HEAP32[$__oe>>2] = $12;
  HEAP8[$11>>0] = $10;
  $__nf$0 = $6;
 } else {
  $__nf$0 = $__nb;
 }
 $13 = $__ne;
 $14 = $__nf$0;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(1);
 L4: do {
  if ($16) {
   $18 = HEAP8[$__nf$0>>0]|0;
   $19 = ($18<<24>>24)==(48);
   if ($19) {
    $20 = ((($__nf$0)) + 1|0);
    $21 = HEAP8[$20>>0]|0;
    if ((($21<<24>>24) == 88) | (($21<<24>>24) == 120)) {
     $22 = HEAP32[$0>>2]|0;
     $23 = ((($22)) + 28|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iii[$24 & 15]($0,48)|0);
     $26 = HEAP32[$__oe>>2]|0;
     $27 = ((($26)) + 1|0);
     HEAP32[$__oe>>2] = $27;
     HEAP8[$26>>0] = $25;
     $28 = ((($__nf$0)) + 2|0);
     $29 = HEAP8[$20>>0]|0;
     $30 = HEAP32[$0>>2]|0;
     $31 = ((($30)) + 28|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = (FUNCTION_TABLE_iii[$32 & 15]($0,$29)|0);
     $34 = HEAP32[$__oe>>2]|0;
     $35 = ((($34)) + 1|0);
     HEAP32[$__oe>>2] = $35;
     HEAP8[$34>>0] = $33;
     $36 = ($28>>>0)<($__ne>>>0);
     if ($36) {
      $__ns$026 = $28;
      while(1) {
       $37 = HEAP8[$__ns$026>>0]|0;
       $38 = $37 << 24 >> 24;
       $39 = (__ZNSt3__16__clocEv()|0);
       $40 = (_isxdigit_l($38,$39)|0);
       $41 = ($40|0)==(0);
       if ($41) {
        $__nf$1 = $28;$__ns$2 = $__ns$026;
        break L4;
       }
       $42 = ((($__ns$026)) + 1|0);
       $43 = ($42>>>0)<($__ne>>>0);
       if ($43) {
        $__ns$026 = $42;
       } else {
        $__nf$1 = $28;$__ns$2 = $42;
        break;
       }
      }
     } else {
      $__nf$1 = $28;$__ns$2 = $28;
     }
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L11: do {
  if ((label|0) == 4) {
   $17 = ($__nf$0>>>0)<($__ne>>>0);
   if ($17) {
    $__ns$122 = $__nf$0;
    while(1) {
     $44 = HEAP8[$__ns$122>>0]|0;
     $45 = $44 << 24 >> 24;
     $46 = (__ZNSt3__16__clocEv()|0);
     $47 = (_isdigit_l($45,$46)|0);
     $48 = ($47|0)==(0);
     if ($48) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$122;
      break L11;
     }
     $49 = ((($__ns$122)) + 1|0);
     $50 = ($49>>>0)<($__ne>>>0);
     if ($50) {
      $__ns$122 = $49;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $49;
      break;
     }
    }
   } else {
    $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
   }
  }
 } while(0);
 $51 = HEAP8[$__grouping>>0]|0;
 $52 = $51 & 1;
 $53 = ($52<<24>>24)==(0);
 $54 = ((($__grouping)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = $51&255;
 $57 = $56 >>> 1;
 $58 = $53 ? $57 : $55;
 $59 = ($58|0)==(0);
 if ($59) {
  $60 = HEAP32[$__oe>>2]|0;
  $61 = HEAP32[$0>>2]|0;
  $62 = ((($61)) + 32|0);
  $63 = HEAP32[$62>>2]|0;
  (FUNCTION_TABLE_iiiii[$63 & 7]($0,$__nf$1,$__ns$2,$60)|0);
  $64 = $__ns$2;
  $65 = $__nf$1;
  $66 = (($64) - ($65))|0;
  $67 = HEAP32[$__oe>>2]|0;
  $68 = (($67) + ($66)|0);
  HEAP32[$__oe>>2] = $68;
  $$pre$phiZ2D = $0;
 } else {
  $69 = ($__nf$1|0)==($__ns$2|0);
  if (!($69)) {
   $70 = ((($__ns$2)) + -1|0);
   $71 = ($__nf$1>>>0)<($70>>>0);
   if ($71) {
    $$01$i$i20 = $__nf$1;$74 = $70;
    while(1) {
     $72 = HEAP8[$$01$i$i20>>0]|0;
     $73 = HEAP8[$74>>0]|0;
     HEAP8[$$01$i$i20>>0] = $73;
     HEAP8[$74>>0] = $72;
     $75 = ((($$01$i$i20)) + 1|0);
     $76 = ((($74)) + -1|0);
     $77 = ($75>>>0)<($76>>>0);
     if ($77) {
      $$01$i$i20 = $75;$74 = $76;
     } else {
      break;
     }
    }
   }
  }
  $78 = HEAP32[$1>>2]|0;
  $79 = ((($78)) + 16|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (FUNCTION_TABLE_ii[$80 & 63]($1)|0);
  $82 = ((($__grouping)) + 8|0);
  $83 = ((($__grouping)) + 1|0);
  $84 = ($__nf$1>>>0)<($__ns$2>>>0);
  if ($84) {
   $__dc$017 = 0;$__dg$018 = 0;$__p$019 = $__nf$1;
   while(1) {
    $85 = HEAP8[$__grouping>>0]|0;
    $86 = $85 & 1;
    $87 = ($86<<24>>24)==(0);
    $88 = HEAP32[$82>>2]|0;
    $89 = $87 ? $83 : $88;
    $90 = (($89) + ($__dg$018)|0);
    $91 = HEAP8[$90>>0]|0;
    $92 = ($91<<24>>24)>(0);
    $93 = $91 << 24 >> 24;
    $94 = ($__dc$017|0)==($93|0);
    $or$cond = $92 & $94;
    if ($or$cond) {
     $95 = HEAP32[$__oe>>2]|0;
     $96 = ((($95)) + 1|0);
     HEAP32[$__oe>>2] = $96;
     HEAP8[$95>>0] = $81;
     $97 = HEAP8[$__grouping>>0]|0;
     $98 = $97 & 1;
     $99 = ($98<<24>>24)==(0);
     $100 = HEAP32[$54>>2]|0;
     $101 = $97&255;
     $102 = $101 >>> 1;
     $103 = $99 ? $102 : $100;
     $104 = (($103) + -1)|0;
     $105 = ($__dg$018>>>0)<($104>>>0);
     $106 = $105&1;
     $$__dg$0 = (($106) + ($__dg$018))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$017;$__dg$1 = $__dg$018;
    }
    $107 = HEAP8[$__p$019>>0]|0;
    $108 = HEAP32[$0>>2]|0;
    $109 = ((($108)) + 28|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (FUNCTION_TABLE_iii[$110 & 15]($0,$107)|0);
    $112 = HEAP32[$__oe>>2]|0;
    $113 = ((($112)) + 1|0);
    HEAP32[$__oe>>2] = $113;
    HEAP8[$112>>0] = $111;
    $114 = (($__dc$1) + 1)|0;
    $115 = ((($__p$019)) + 1|0);
    $116 = ($115>>>0)<($__ns$2>>>0);
    if ($116) {
     $__dc$017 = $114;$__dg$018 = $__dg$1;$__p$019 = $115;
    } else {
     break;
    }
   }
  }
  $117 = $__nf$1;
  $118 = $__nb;
  $119 = (($117) - ($118))|0;
  $120 = (($__ob) + ($119)|0);
  $121 = HEAP32[$__oe>>2]|0;
  $122 = ($120|0)==($121|0);
  if ($122) {
   $$pre$phiZ2D = $0;
  } else {
   $123 = ((($121)) + -1|0);
   $124 = ($120>>>0)<($123>>>0);
   if ($124) {
    $$01$i$i215 = $120;$128 = $123;
    while(1) {
     $126 = HEAP8[$$01$i$i215>>0]|0;
     $127 = HEAP8[$128>>0]|0;
     HEAP8[$$01$i$i215>>0] = $127;
     HEAP8[$128>>0] = $126;
     $129 = ((($$01$i$i215)) + 1|0);
     $130 = ((($128)) + -1|0);
     $131 = ($129>>>0)<($130>>>0);
     if ($131) {
      $$01$i$i215 = $129;$128 = $130;
     } else {
      $$pre$phiZ2D = $0;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $0;
   }
  }
 }
 $125 = ($__ns$2>>>0)<($__ne>>>0);
 L36: do {
  if ($125) {
   $__nf$214 = $__ns$2;
   while(1) {
    $132 = HEAP8[$__nf$214>>0]|0;
    $133 = ($132<<24>>24)==(46);
    if ($133) {
     $__nf$214$lcssa = $__nf$214;
     break;
    }
    $141 = HEAP32[$$pre$phiZ2D>>2]|0;
    $142 = ((($141)) + 28|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = (FUNCTION_TABLE_iii[$143 & 15]($0,$132)|0);
    $145 = HEAP32[$__oe>>2]|0;
    $146 = ((($145)) + 1|0);
    HEAP32[$__oe>>2] = $146;
    HEAP8[$145>>0] = $144;
    $147 = ((($__nf$214)) + 1|0);
    $148 = ($147>>>0)<($__ne>>>0);
    if ($148) {
     $__nf$214 = $147;
    } else {
     $__nf$3 = $147;
     break L36;
    }
   }
   $134 = HEAP32[$1>>2]|0;
   $135 = ((($134)) + 12|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = (FUNCTION_TABLE_ii[$136 & 63]($1)|0);
   $138 = HEAP32[$__oe>>2]|0;
   $139 = ((($138)) + 1|0);
   HEAP32[$__oe>>2] = $139;
   HEAP8[$138>>0] = $137;
   $140 = ((($__nf$214$lcssa)) + 1|0);
   $__nf$3 = $140;
  } else {
   $__nf$3 = $__ns$2;
  }
 } while(0);
 $149 = HEAP32[$__oe>>2]|0;
 $150 = HEAP32[$0>>2]|0;
 $151 = ((($150)) + 32|0);
 $152 = HEAP32[$151>>2]|0;
 (FUNCTION_TABLE_iiiii[$152 & 7]($0,$__nf$3,$__ne,$149)|0);
 $153 = $__nf$3;
 $154 = (($13) - ($153))|0;
 $155 = HEAP32[$__oe>>2]|0;
 $156 = (($155) + ($154)|0);
 HEAP32[$__oe>>2] = $156;
 $157 = ($__np|0)==($__ne|0);
 $158 = $__np;
 $159 = $__nb;
 $160 = (($158) - ($159))|0;
 $161 = (($__ob) + ($160)|0);
 $storemerge = $157 ? $156 : $161;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $$byval_copy = sp + 76|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 138|0;
 $__nb = sp + 72|0;
 $__o = sp + 80|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9200,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  if ($9) {
   $17 = ((($__iob)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $18;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $__v;
   $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
   $__nc$1 = $19;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $__v;
   $20 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $20;
  }
  $21 = HEAP32[$__nb>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $24 = $21;$37 = $21;$__nc$2 = $__nc$1;
  }
 } else {
  $$pre4 = HEAP32[$__nb>>2]|0;
  $24 = $$pre4;$37 = 0;$__nc$2 = $__nc$0;
 }
 $23 = (($24) + ($__nc$2)|0);
 $25 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($24,$23,$__iob)|0);
 $26 = ($24|0)==($__nar|0);
 if ($26) {
  $31 = $__nar;$36 = 0;$__ob$0 = $__o;
 } else {
  $27 = $__nc$2 << 1;
  $28 = (_malloc($27)|0);
  $29 = ($28|0)==(0|0);
  if ($29) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $31 = $24;$36 = $28;$__ob$0 = $28;
  }
 }
 $30 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $30;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($31,$25,$23,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($30)|0);
 $32 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $32;
 $33 = HEAP32[$__op>>2]|0;
 $34 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $35 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$33,$34,$__iob,$__fl)|0);
 _free($36);
 _free($37);
 STACKTOP = sp;return ($35|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $$byval_copy = sp;
 $__fmt = sp + 72|0;
 $__nar = sp + 52|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9208>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9208+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9208+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9208+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9208+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9208+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$$byval_copy)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 $7 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6176)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 32|0);
 $10 = HEAP32[$9>>2]|0;
 (FUNCTION_TABLE_iiiii[$10 & 7]($7,$__nar,$4,$__o)|0);
 $11 = (($__o) + ($3)|0);
 $12 = ($5|0)==($4|0);
 $13 = $__nar;
 $14 = $5;
 $15 = (($14) - ($13))|0;
 $16 = (($__o) + ($15)|0);
 $__op$0 = $12 ? $11 : $16;
 $17 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $17;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $18 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$11,$__iob,$__fl)|0);
 STACKTOP = sp;return ($18|0);
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi3Z2D = 0, $$pre1 = 0, $$pre1$val = 0, $$pre1$val4 = 0, $$pre2 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$this>>2]|0;
  $7 = ((($6)) + 24|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$__s>>2]|0;
  HEAP32[$0>>2] = $9;
  $10 = $__v&1;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $11 = (FUNCTION_TABLE_iiiiii[$8 & 31]($this,$$byval_copy,$__iob,$__fl,$10)|0);
  $$sroa$0$0 = $11;
 } else {
  $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
  HEAP32[$1>>2] = $12;
  $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6328)|0);
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $14 = HEAP32[$13>>2]|0;
  if ($__v) {
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_vii[$16 & 63]($__nm,$13);
  } else {
   $17 = ((($14)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   FUNCTION_TABLE_vii[$18 & 63]($__nm,$13);
  }
  $19 = HEAP8[$__nm>>0]|0;
  $20 = $19 & 1;
  $21 = ($20<<24>>24)==(0);
  $22 = ((($__nm)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $$pre2 = ((($__nm)) + 4|0);
  $24 = ((($__nm)) + 4|0);
  $$pre1 = ((($__nm)) + 8|0);
  $$pre$phi3Z2D = $21 ? $24 : $$pre2;
  $$ph = $21 ? $24 : $23;
  $25 = $19 & 1;
  $26 = ($25<<24>>24)==(0);
  $$pre1$val4 = HEAP32[$$pre1>>2]|0;
  $27 = HEAP32[$$pre$phi3Z2D>>2]|0;
  $28 = $19&255;
  $29 = $28 >>> 1;
  $30 = $26 ? $$pre$phi3Z2D : $$pre1$val4;
  $31 = $26 ? $29 : $27;
  $32 = (($30) + ($31<<2)|0);
  $33 = ($$ph|0)==($32|0);
  if (!($33)) {
   $35 = $$ph;
   while(1) {
    $34 = HEAP32[$35>>2]|0;
    $36 = HEAP32[$__s>>2]|0;
    $37 = ($36|0)==(0|0);
    if (!($37)) {
     $38 = ((($36)) + 24|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ((($36)) + 28|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = ($39|0)==($41|0);
     if ($42) {
      $43 = HEAP32[$36>>2]|0;
      $44 = ((($43)) + 52|0);
      $45 = HEAP32[$44>>2]|0;
      $46 = (FUNCTION_TABLE_iii[$45 & 15]($36,$34)|0);
      $$0$i$i = $46;
     } else {
      $47 = ((($39)) + 4|0);
      HEAP32[$38>>2] = $47;
      HEAP32[$39>>2] = $34;
      $$0$i$i = $34;
     }
     $48 = ($$0$i$i|0)==(-1);
     if ($48) {
      HEAP32[$__s>>2] = 0;
     }
    }
    $49 = ((($35)) + 4|0);
    $$pre = HEAP8[$__nm>>0]|0;
    $50 = $$pre & 1;
    $51 = ($50<<24>>24)==(0);
    $$pre1$val = HEAP32[$$pre1>>2]|0;
    $52 = HEAP32[$$pre$phi3Z2D>>2]|0;
    $53 = $$pre&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $$pre$phi3Z2D : $$pre1$val;
    $56 = $51 ? $54 : $52;
    $57 = (($55) + ($56<<2)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     break;
    } else {
     $35 = $49;
    }
   }
  }
  $59 = HEAP32[$__s>>2]|0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
  $$sroa$0$0 = $59;
 }
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $$byval_copy = sp;
 $__fmt = sp + 116|0;
 $__nar = sp + 104|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9168>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9168+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9168+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9168+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9168+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9168+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9176,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i110 = 0, $$01$i$i6 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dc$07 = 0, $__dc$1 = 0, $__dg$08 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$09 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6328)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $15 = ((($14)) + 48|0);
  $16 = HEAP32[$15>>2]|0;
  (FUNCTION_TABLE_iiiii[$16 & 7]($0,$__nb,$__ne,$__ob)|0);
  $17 = $__ne;
  $18 = $__nb;
  $19 = (($17) - ($18))|0;
  $20 = (($__ob) + ($19<<2)|0);
  HEAP32[$__oe>>2] = $20;
  $$pre$phiZ2D = $18;$117 = $20;
 } else {
  HEAP32[$__oe>>2] = $__ob;
  $21 = HEAP8[$__nb>>0]|0;
  if ((($21<<24>>24) == 43) | (($21<<24>>24) == 45)) {
   $22 = ((($__nb)) + 1|0);
   $23 = HEAP32[$0>>2]|0;
   $24 = ((($23)) + 44|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 15]($0,$21)|0);
   $27 = HEAP32[$__oe>>2]|0;
   $28 = ((($27)) + 4|0);
   HEAP32[$__oe>>2] = $28;
   HEAP32[$27>>2] = $26;
   $__nf$0 = $22;
  } else {
   $__nf$0 = $__nb;
  }
  $29 = $__ne;
  $30 = $__nf$0;
  $31 = (($29) - ($30))|0;
  $32 = ($31|0)>(1);
  if ($32) {
   $33 = HEAP8[$__nf$0>>0]|0;
   $34 = ($33<<24>>24)==(48);
   if ($34) {
    $35 = ((($__nf$0)) + 1|0);
    $36 = HEAP8[$35>>0]|0;
    if ((($36<<24>>24) == 88) | (($36<<24>>24) == 120)) {
     $37 = HEAP32[$0>>2]|0;
     $38 = ((($37)) + 44|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_iii[$39 & 15]($0,48)|0);
     $41 = HEAP32[$__oe>>2]|0;
     $42 = ((($41)) + 4|0);
     HEAP32[$__oe>>2] = $42;
     HEAP32[$41>>2] = $40;
     $43 = ((($__nf$0)) + 2|0);
     $44 = HEAP8[$35>>0]|0;
     $45 = HEAP32[$0>>2]|0;
     $46 = ((($45)) + 44|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = (FUNCTION_TABLE_iii[$47 & 15]($0,$44)|0);
     $49 = HEAP32[$__oe>>2]|0;
     $50 = ((($49)) + 4|0);
     HEAP32[$__oe>>2] = $50;
     HEAP32[$49>>2] = $48;
     $__nf$1 = $43;
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
  } else {
   $__nf$1 = $__nf$0;
  }
  $51 = ($__nf$1|0)==($__ne|0);
  if (!($51)) {
   $52 = ((($__ne)) + -1|0);
   $53 = ($__nf$1>>>0)<($52>>>0);
   if ($53) {
    $$01$i$i110 = $__nf$1;$56 = $52;
    while(1) {
     $54 = HEAP8[$$01$i$i110>>0]|0;
     $55 = HEAP8[$56>>0]|0;
     HEAP8[$$01$i$i110>>0] = $55;
     HEAP8[$56>>0] = $54;
     $57 = ((($$01$i$i110)) + 1|0);
     $58 = ((($56)) + -1|0);
     $59 = ($57>>>0)<($58>>>0);
     if ($59) {
      $$01$i$i110 = $57;$56 = $58;
     } else {
      break;
     }
    }
   }
  }
  $60 = HEAP32[$1>>2]|0;
  $61 = ((($60)) + 16|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = (FUNCTION_TABLE_ii[$62 & 63]($1)|0);
  $64 = ((($__grouping)) + 8|0);
  $65 = ((($__grouping)) + 1|0);
  $66 = ($__nf$1>>>0)<($__ne>>>0);
  if ($66) {
   $__dc$07 = 0;$__dg$08 = 0;$__p$09 = $__nf$1;
   while(1) {
    $67 = HEAP8[$__grouping>>0]|0;
    $68 = $67 & 1;
    $69 = ($68<<24>>24)==(0);
    $70 = HEAP32[$64>>2]|0;
    $71 = $69 ? $65 : $70;
    $72 = (($71) + ($__dg$08)|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = ($73<<24>>24)!=(0);
    $75 = $73 << 24 >> 24;
    $76 = ($__dc$07|0)==($75|0);
    $or$cond = $74 & $76;
    if ($or$cond) {
     $77 = HEAP32[$__oe>>2]|0;
     $78 = ((($77)) + 4|0);
     HEAP32[$__oe>>2] = $78;
     HEAP32[$77>>2] = $63;
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$8>>2]|0;
     $83 = $79&255;
     $84 = $83 >>> 1;
     $85 = $81 ? $84 : $82;
     $86 = (($85) + -1)|0;
     $87 = ($__dg$08>>>0)<($86>>>0);
     $88 = $87&1;
     $$__dg$0 = (($88) + ($__dg$08))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$07;$__dg$1 = $__dg$08;
    }
    $89 = HEAP8[$__p$09>>0]|0;
    $90 = HEAP32[$0>>2]|0;
    $91 = ((($90)) + 44|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (FUNCTION_TABLE_iii[$92 & 15]($0,$89)|0);
    $94 = HEAP32[$__oe>>2]|0;
    $95 = ((($94)) + 4|0);
    HEAP32[$__oe>>2] = $95;
    HEAP32[$94>>2] = $93;
    $96 = (($__dc$1) + 1)|0;
    $97 = ((($__p$09)) + 1|0);
    $98 = ($97>>>0)<($__ne>>>0);
    if ($98) {
     $__dc$07 = $96;$__dg$08 = $__dg$1;$__p$09 = $97;
    } else {
     break;
    }
   }
  }
  $99 = $__nf$1;
  $100 = $__nb;
  $101 = (($99) - ($100))|0;
  $102 = (($__ob) + ($101<<2)|0);
  $103 = HEAP32[$__oe>>2]|0;
  $104 = ($102|0)==($103|0);
  if ($104) {
   $$pre$phiZ2D = $100;$117 = $102;
  } else {
   $105 = ((($103)) + -4|0);
   $106 = ($102>>>0)<($105>>>0);
   if ($106) {
    $$01$i$i6 = $102;$109 = $105;
    while(1) {
     $107 = HEAP32[$$01$i$i6>>2]|0;
     $108 = HEAP32[$109>>2]|0;
     HEAP32[$$01$i$i6>>2] = $108;
     HEAP32[$109>>2] = $107;
     $110 = ((($$01$i$i6)) + 4|0);
     $111 = ((($109)) + -4|0);
     $112 = ($110>>>0)<($111>>>0);
     if ($112) {
      $$01$i$i6 = $110;$109 = $111;
     } else {
      $$pre$phiZ2D = $100;$117 = $103;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $100;$117 = $103;
   }
  }
 }
 $113 = ($__np|0)==($__ne|0);
 $114 = $__np;
 $115 = (($114) - ($$pre$phiZ2D))|0;
 $116 = (($__ob) + ($115<<2)|0);
 $storemerge = $113 ? $117 : $116;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 196|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9184,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $$byval_copy = sp;
 $__fmt = sp + 116|0;
 $__nar = sp + 104|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9168>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9168+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9168+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9168+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9168+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9168+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9176,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 204|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9184,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0;
 $$byval_copy = sp + 296|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 300|0;
 $__nb = sp + 292|0;
 $__o = sp + 64|0;
 $__op = sp + 60|0;
 $__oe = sp + 56|0;
 $0 = sp + 52|0;
 $1 = sp + 48|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9192,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  $17 = ((($__iob)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $18;
  $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
  HEAPF64[$vararg_ptr8>>3] = $__v;
  $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
  $20 = HEAP32[$__nb>>2]|0;
  $21 = ($20|0)==(0|0);
  if ($21) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $23 = $20;$37 = $20;$__nc$1 = $19;
  }
 } else {
  $$pre3 = HEAP32[$__nb>>2]|0;
  $23 = $$pre3;$37 = 0;$__nc$1 = $__nc$0;
 }
 $22 = (($23) + ($__nc$1)|0);
 $24 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23,$22,$__iob)|0);
 $25 = ($23|0)==($__nar|0);
 if ($25) {
  $30 = $__nar;$35 = 0;$__ob$0 = $__o;
 } else {
  $26 = $__nc$1 << 3;
  $27 = (_malloc($26)|0);
  $28 = ($27|0)==(0|0);
  if ($28) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $30 = $23;$35 = $27;$__ob$0 = $27;
  }
 }
 $29 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $29;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($30,$24,$22,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($29)|0);
 $31 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $31;
 $32 = HEAP32[$__op>>2]|0;
 $33 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $34 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$32,$33,$__iob,$__fl)|0);
 HEAP32[$__s>>2] = $34;
 $36 = ($35|0)==(0|0);
 if (!($36)) {
  _free($35);
 }
 _free($37);
 STACKTOP = sp;return ($34|0);
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i217 = 0, $$01$i$i22 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$019 = 0, $__dc$1 = 0, $__dg$020 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$215 = 0, $__nf$215$lcssa = 0, $__nf$3 = 0, $__ns$028 = 0, $__ns$124 = 0, $__ns$2 = 0;
 var $__p$021 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6328)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = ((($__nb)) + 1|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ((($7)) + 44|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iii[$9 & 15]($0,$5)|0);
  $11 = HEAP32[$__oe>>2]|0;
  $12 = ((($11)) + 4|0);
  HEAP32[$__oe>>2] = $12;
  HEAP32[$11>>2] = $10;
  $__nf$0 = $6;
 } else {
  $__nf$0 = $__nb;
 }
 $13 = $__ne;
 $14 = $__nf$0;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(1);
 L4: do {
  if ($16) {
   $18 = HEAP8[$__nf$0>>0]|0;
   $19 = ($18<<24>>24)==(48);
   if ($19) {
    $20 = ((($__nf$0)) + 1|0);
    $21 = HEAP8[$20>>0]|0;
    if ((($21<<24>>24) == 88) | (($21<<24>>24) == 120)) {
     $22 = HEAP32[$0>>2]|0;
     $23 = ((($22)) + 44|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iii[$24 & 15]($0,48)|0);
     $26 = HEAP32[$__oe>>2]|0;
     $27 = ((($26)) + 4|0);
     HEAP32[$__oe>>2] = $27;
     HEAP32[$26>>2] = $25;
     $28 = ((($__nf$0)) + 2|0);
     $29 = HEAP8[$20>>0]|0;
     $30 = HEAP32[$0>>2]|0;
     $31 = ((($30)) + 44|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = (FUNCTION_TABLE_iii[$32 & 15]($0,$29)|0);
     $34 = HEAP32[$__oe>>2]|0;
     $35 = ((($34)) + 4|0);
     HEAP32[$__oe>>2] = $35;
     HEAP32[$34>>2] = $33;
     $36 = ($28>>>0)<($__ne>>>0);
     if ($36) {
      $__ns$028 = $28;
      while(1) {
       $37 = HEAP8[$__ns$028>>0]|0;
       $38 = $37 << 24 >> 24;
       $39 = (__ZNSt3__16__clocEv()|0);
       $40 = (_isxdigit_l($38,$39)|0);
       $41 = ($40|0)==(0);
       if ($41) {
        $__nf$1 = $28;$__ns$2 = $__ns$028;
        break L4;
       }
       $42 = ((($__ns$028)) + 1|0);
       $43 = ($42>>>0)<($__ne>>>0);
       if ($43) {
        $__ns$028 = $42;
       } else {
        $__nf$1 = $28;$__ns$2 = $42;
        break;
       }
      }
     } else {
      $__nf$1 = $28;$__ns$2 = $28;
     }
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L11: do {
  if ((label|0) == 4) {
   $17 = ($__nf$0>>>0)<($__ne>>>0);
   if ($17) {
    $__ns$124 = $__nf$0;
    while(1) {
     $44 = HEAP8[$__ns$124>>0]|0;
     $45 = $44 << 24 >> 24;
     $46 = (__ZNSt3__16__clocEv()|0);
     $47 = (_isdigit_l($45,$46)|0);
     $48 = ($47|0)==(0);
     if ($48) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$124;
      break L11;
     }
     $49 = ((($__ns$124)) + 1|0);
     $50 = ($49>>>0)<($__ne>>>0);
     if ($50) {
      $__ns$124 = $49;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $49;
      break;
     }
    }
   } else {
    $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
   }
  }
 } while(0);
 $51 = HEAP8[$__grouping>>0]|0;
 $52 = $51 & 1;
 $53 = ($52<<24>>24)==(0);
 $54 = ((($__grouping)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = $51&255;
 $57 = $56 >>> 1;
 $58 = $53 ? $57 : $55;
 $59 = ($58|0)==(0);
 if ($59) {
  $60 = HEAP32[$__oe>>2]|0;
  $61 = HEAP32[$0>>2]|0;
  $62 = ((($61)) + 48|0);
  $63 = HEAP32[$62>>2]|0;
  (FUNCTION_TABLE_iiiii[$63 & 7]($0,$__nf$1,$__ns$2,$60)|0);
  $64 = $__ns$2;
  $65 = $__nf$1;
  $66 = (($64) - ($65))|0;
  $67 = HEAP32[$__oe>>2]|0;
  $68 = (($67) + ($66<<2)|0);
  HEAP32[$__oe>>2] = $68;
  $$pre$phiZ2D = $0;$162 = $68;
 } else {
  $69 = ($__nf$1|0)==($__ns$2|0);
  if (!($69)) {
   $70 = ((($__ns$2)) + -1|0);
   $71 = ($__nf$1>>>0)<($70>>>0);
   if ($71) {
    $$01$i$i22 = $__nf$1;$74 = $70;
    while(1) {
     $72 = HEAP8[$$01$i$i22>>0]|0;
     $73 = HEAP8[$74>>0]|0;
     HEAP8[$$01$i$i22>>0] = $73;
     HEAP8[$74>>0] = $72;
     $75 = ((($$01$i$i22)) + 1|0);
     $76 = ((($74)) + -1|0);
     $77 = ($75>>>0)<($76>>>0);
     if ($77) {
      $$01$i$i22 = $75;$74 = $76;
     } else {
      break;
     }
    }
   }
  }
  $78 = HEAP32[$1>>2]|0;
  $79 = ((($78)) + 16|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (FUNCTION_TABLE_ii[$80 & 63]($1)|0);
  $82 = ((($__grouping)) + 8|0);
  $83 = ((($__grouping)) + 1|0);
  $84 = ($__nf$1>>>0)<($__ns$2>>>0);
  if ($84) {
   $__dc$019 = 0;$__dg$020 = 0;$__p$021 = $__nf$1;
   while(1) {
    $85 = HEAP8[$__grouping>>0]|0;
    $86 = $85 & 1;
    $87 = ($86<<24>>24)==(0);
    $88 = HEAP32[$82>>2]|0;
    $89 = $87 ? $83 : $88;
    $90 = (($89) + ($__dg$020)|0);
    $91 = HEAP8[$90>>0]|0;
    $92 = ($91<<24>>24)>(0);
    $93 = $91 << 24 >> 24;
    $94 = ($__dc$019|0)==($93|0);
    $or$cond = $92 & $94;
    if ($or$cond) {
     $95 = HEAP32[$__oe>>2]|0;
     $96 = ((($95)) + 4|0);
     HEAP32[$__oe>>2] = $96;
     HEAP32[$95>>2] = $81;
     $97 = HEAP8[$__grouping>>0]|0;
     $98 = $97 & 1;
     $99 = ($98<<24>>24)==(0);
     $100 = HEAP32[$54>>2]|0;
     $101 = $97&255;
     $102 = $101 >>> 1;
     $103 = $99 ? $102 : $100;
     $104 = (($103) + -1)|0;
     $105 = ($__dg$020>>>0)<($104>>>0);
     $106 = $105&1;
     $$__dg$0 = (($106) + ($__dg$020))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$019;$__dg$1 = $__dg$020;
    }
    $107 = HEAP8[$__p$021>>0]|0;
    $108 = HEAP32[$0>>2]|0;
    $109 = ((($108)) + 44|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (FUNCTION_TABLE_iii[$110 & 15]($0,$107)|0);
    $112 = HEAP32[$__oe>>2]|0;
    $113 = ((($112)) + 4|0);
    HEAP32[$__oe>>2] = $113;
    HEAP32[$112>>2] = $111;
    $114 = (($__dc$1) + 1)|0;
    $115 = ((($__p$021)) + 1|0);
    $116 = ($115>>>0)<($__ns$2>>>0);
    if ($116) {
     $__dc$019 = $114;$__dg$020 = $__dg$1;$__p$021 = $115;
    } else {
     break;
    }
   }
  }
  $117 = $__nf$1;
  $118 = $__nb;
  $119 = (($117) - ($118))|0;
  $120 = (($__ob) + ($119<<2)|0);
  $121 = HEAP32[$__oe>>2]|0;
  $122 = ($120|0)==($121|0);
  if ($122) {
   $$pre$phiZ2D = $0;$162 = $120;
  } else {
   $123 = ((($121)) + -4|0);
   $124 = ($120>>>0)<($123>>>0);
   if ($124) {
    $$01$i$i217 = $120;$128 = $123;
    while(1) {
     $126 = HEAP32[$$01$i$i217>>2]|0;
     $127 = HEAP32[$128>>2]|0;
     HEAP32[$$01$i$i217>>2] = $127;
     HEAP32[$128>>2] = $126;
     $129 = ((($$01$i$i217)) + 4|0);
     $130 = ((($128)) + -4|0);
     $131 = ($129>>>0)<($130>>>0);
     if ($131) {
      $$01$i$i217 = $129;$128 = $130;
     } else {
      $$pre$phiZ2D = $0;$162 = $121;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $0;$162 = $121;
   }
  }
 }
 $125 = ($__ns$2>>>0)<($__ne>>>0);
 L36: do {
  if ($125) {
   $__nf$215 = $__ns$2;
   while(1) {
    $132 = HEAP8[$__nf$215>>0]|0;
    $133 = ($132<<24>>24)==(46);
    if ($133) {
     $__nf$215$lcssa = $__nf$215;
     break;
    }
    $141 = HEAP32[$$pre$phiZ2D>>2]|0;
    $142 = ((($141)) + 44|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = (FUNCTION_TABLE_iii[$143 & 15]($0,$132)|0);
    $145 = HEAP32[$__oe>>2]|0;
    $146 = ((($145)) + 4|0);
    HEAP32[$__oe>>2] = $146;
    HEAP32[$145>>2] = $144;
    $147 = ((($__nf$215)) + 1|0);
    $148 = ($147>>>0)<($__ne>>>0);
    if ($148) {
     $__nf$215 = $147;
    } else {
     $152 = $146;$__nf$3 = $147;
     break L36;
    }
   }
   $134 = HEAP32[$1>>2]|0;
   $135 = ((($134)) + 12|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = (FUNCTION_TABLE_ii[$136 & 63]($1)|0);
   $138 = HEAP32[$__oe>>2]|0;
   $139 = ((($138)) + 4|0);
   HEAP32[$__oe>>2] = $139;
   HEAP32[$138>>2] = $137;
   $140 = ((($__nf$215$lcssa)) + 1|0);
   $152 = $139;$__nf$3 = $140;
  } else {
   $152 = $162;$__nf$3 = $__ns$2;
  }
 } while(0);
 $149 = HEAP32[$0>>2]|0;
 $150 = ((($149)) + 48|0);
 $151 = HEAP32[$150>>2]|0;
 (FUNCTION_TABLE_iiiii[$151 & 7]($0,$__nf$3,$__ne,$152)|0);
 $153 = $__nf$3;
 $154 = (($13) - ($153))|0;
 $155 = HEAP32[$__oe>>2]|0;
 $156 = (($155) + ($154<<2)|0);
 HEAP32[$__oe>>2] = $156;
 $157 = ($__np|0)==($__ne|0);
 $158 = $__np;
 $159 = $__nb;
 $160 = (($158) - ($159))|0;
 $161 = (($__ob) + ($160<<2)|0);
 $storemerge = $157 ? $156 : $161;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $$byval_copy = sp + 304|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 308|0;
 $__nb = sp + 300|0;
 $__o = sp + 72|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9200,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  if ($9) {
   $17 = ((($__iob)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $18;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $__v;
   $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
   $__nc$1 = $19;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $__v;
   $20 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $20;
  }
  $21 = HEAP32[$__nb>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $24 = $21;$38 = $21;$__nc$2 = $__nc$1;
  }
 } else {
  $$pre3 = HEAP32[$__nb>>2]|0;
  $24 = $$pre3;$38 = 0;$__nc$2 = $__nc$0;
 }
 $23 = (($24) + ($__nc$2)|0);
 $25 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($24,$23,$__iob)|0);
 $26 = ($24|0)==($__nar|0);
 if ($26) {
  $31 = $__nar;$36 = 0;$__ob$0 = $__o;
 } else {
  $27 = $__nc$2 << 3;
  $28 = (_malloc($27)|0);
  $29 = ($28|0)==(0|0);
  if ($29) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $31 = $24;$36 = $28;$__ob$0 = $28;
  }
 }
 $30 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $30;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($31,$25,$23,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($30)|0);
 $32 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $32;
 $33 = HEAP32[$__op>>2]|0;
 $34 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $35 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$33,$34,$__iob,$__fl)|0);
 HEAP32[$__s>>2] = $35;
 $37 = ($36|0)==(0|0);
 if (!($37)) {
  _free($36);
 }
 _free($38);
 STACKTOP = sp;return ($35|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $$byval_copy = sp;
 $__fmt = sp + 180|0;
 $__nar = sp + 160|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9208>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9208+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9208+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9208+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9208+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9208+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$$byval_copy)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 $7 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 (FUNCTION_TABLE_iiiii[$10 & 7]($7,$__nar,$4,$__o)|0);
 $11 = (($__o) + ($3<<2)|0);
 $12 = ($5|0)==($4|0);
 $13 = $__nar;
 $14 = $5;
 $15 = (($14) - ($13))|0;
 $16 = (($__o) + ($15<<2)|0);
 $__op$0 = $12 ? $11 : $16;
 $17 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $17;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $18 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$11,$__iob,$__fl)|0);
 STACKTOP = sp;return ($18|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i26 = 0, $$0$ph$be = 0, $$0$ph86 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa94 = 0, $$lcssa95 = 0, $$pre$i$i$i17 = 0, $$pre$i$i$i8 = 0, $$pre$i2$i$i21 = 0, $$pre$i2$i$i2139 = 0, $$pre$i2$i$i2140 = 0, $$pre$pre = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i24 = 0, $isascii1$i5 = 0, $or$cond84 = 0, $sext = 0, $tmp$i$i23 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6176)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $5 = ((($4)) + 8|0);
 $6 = ($__fmtb|0)==($__fmte|0);
 $7 = HEAP32[$__b>>2]|0;
 L1: do {
  if ($6) {
   $$pre$i$i$i8 = $7;
  } else {
   $$0$ph86 = $__fmtb;$8 = $7;
   L2: while(1) {
    $9 = ($8|0)==(0|0);
    $10 = $8;
    if ($9) {
     $21 = 0;$59 = $10;
    } else {
     $11 = ((($8)) + 12|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($8)) + 16|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($12|0)==($14|0);
     if ($15) {
      $16 = HEAP32[$8>>2]|0;
      $17 = ((($16)) + 36|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (FUNCTION_TABLE_ii[$18 & 63]($8)|0);
      $20 = ($19|0)==(-1);
      if ($20) {
       HEAP32[$__b>>2] = 0;
       $21 = 0;$59 = 0;
      } else {
       $21 = $8;$59 = $10;
      }
     } else {
      $21 = $8;$59 = $10;
     }
    }
    $22 = ($21|0)==(0|0);
    $23 = HEAP32[$__e>>2]|0;
    $24 = ($23|0)==(0|0);
    $25 = $23;
    do {
     if ($24) {
      $190 = $25;
      label = 11;
     } else {
      $26 = ((($23)) + 12|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ((($23)) + 16|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = ($27|0)==($29|0);
      if ($30) {
       $31 = HEAP32[$23>>2]|0;
       $32 = ((($31)) + 36|0);
       $33 = HEAP32[$32>>2]|0;
       $34 = (FUNCTION_TABLE_ii[$33 & 63]($23)|0);
       $35 = ($34|0)==(-1);
       if ($35) {
        HEAP32[$__e>>2] = 0;
        $190 = 0;
        label = 11;
        break;
       }
      }
      if ($22) {
       $191 = $23;$60 = $25;
      } else {
       $$lcssa = $21;
       label = 12;
       break L2;
      }
     }
    } while(0);
    if ((label|0) == 11) {
     label = 0;
     if ($22) {
      $$lcssa = $21;
      label = 12;
      break;
     } else {
      $191 = 0;$60 = $190;
     }
    }
    $36 = HEAP8[$$0$ph86>>0]|0;
    $37 = HEAP32[$4>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_iiii[$39 & 31]($4,$36,0)|0);
    $41 = ($40<<24>>24)==(37);
    L18: do {
     if ($41) {
      $42 = ((($$0$ph86)) + 1|0);
      $43 = ($42|0)==($__fmte|0);
      if ($43) {
       $$lcssa94 = $21;
       label = 15;
       break L2;
      }
      $44 = HEAP8[$42>>0]|0;
      $45 = HEAP32[$4>>2]|0;
      $46 = ((($45)) + 36|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = (FUNCTION_TABLE_iiii[$47 & 31]($4,$44,0)|0);
      if ((($48<<24>>24) == 48) | (($48<<24>>24) == 69)) {
       $49 = ((($$0$ph86)) + 2|0);
       $50 = ($49|0)==($__fmte|0);
       if ($50) {
        $$lcssa95 = $21;
        label = 18;
        break L2;
       }
       $51 = HEAP8[$49>>0]|0;
       $52 = HEAP32[$4>>2]|0;
       $53 = ((($52)) + 36|0);
       $54 = HEAP32[$53>>2]|0;
       $55 = (FUNCTION_TABLE_iiii[$54 & 31]($4,$51,0)|0);
       $63 = $42;$__cmd$0 = $55;$__opt$0 = $48;
      } else {
       $63 = $$0$ph86;$__cmd$0 = $48;$__opt$0 = 0;
      }
      $56 = HEAP32[$this>>2]|0;
      $57 = ((($56)) + 36|0);
      $58 = HEAP32[$57>>2]|0;
      HEAP32[$1>>2] = $59;
      HEAP32[$2>>2] = $60;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $61 = (FUNCTION_TABLE_iiiiiiiii[$58 & 15]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $61;
      $62 = ((($63)) + 2|0);
      $$0$ph$be = $62;
     } else {
      $67 = HEAP8[$$0$ph86>>0]|0;
      $isascii1$i = ($67<<24>>24)>(-1);
      if ($isascii1$i) {
       $68 = $67 << 24 >> 24;
       $69 = HEAP32[$5>>2]|0;
       $70 = (($69) + ($68<<1)|0);
       $71 = HEAP16[$70>>1]|0;
       $72 = $71 & 8192;
       $73 = ($72<<16>>16)==(0);
       if (!($73)) {
        $$0$pn = $$0$ph86;
        while(1) {
         $$2 = ((($$0$pn)) + 1|0);
         $74 = ($$2|0)==($__fmte|0);
         if ($74) {
          $$2$lcssa = $__fmte;
          break;
         }
         $75 = HEAP8[$$2>>0]|0;
         $isascii1$i5 = ($75<<24>>24)>(-1);
         if (!($isascii1$i5)) {
          $$2$lcssa = $$2;
          break;
         }
         $76 = $75 << 24 >> 24;
         $77 = (($69) + ($76<<1)|0);
         $78 = HEAP16[$77>>1]|0;
         $79 = $78 & 8192;
         $80 = ($79<<16>>16)==(0);
         if ($80) {
          $$2$lcssa = $$2;
          break;
         } else {
          $$0$pn = $$2;
         }
        }
        $$pre$i$i$i17 = $21;$$pre$i2$i$i21 = $191;$94 = $191;
        while(1) {
         $81 = ($$pre$i$i$i17|0)==(0|0);
         if ($81) {
          $92 = 0;
         } else {
          $82 = ((($$pre$i$i$i17)) + 12|0);
          $83 = HEAP32[$82>>2]|0;
          $84 = ((($$pre$i$i$i17)) + 16|0);
          $85 = HEAP32[$84>>2]|0;
          $86 = ($83|0)==($85|0);
          if ($86) {
           $87 = HEAP32[$$pre$i$i$i17>>2]|0;
           $88 = ((($87)) + 36|0);
           $89 = HEAP32[$88>>2]|0;
           $90 = (FUNCTION_TABLE_ii[$89 & 63]($$pre$i$i$i17)|0);
           $91 = ($90|0)==(-1);
           if ($91) {
            HEAP32[$__b>>2] = 0;
            $92 = 0;
           } else {
            $92 = $$pre$i$i$i17;
           }
          } else {
           $92 = $$pre$i$i$i17;
          }
         }
         $93 = ($92|0)==(0|0);
         $95 = ($94|0)==(0|0);
         do {
          if ($95) {
           $$pre$i2$i$i2140 = $$pre$i2$i$i21;
           label = 37;
          } else {
           $96 = ((($94)) + 12|0);
           $97 = HEAP32[$96>>2]|0;
           $98 = ((($94)) + 16|0);
           $99 = HEAP32[$98>>2]|0;
           $100 = ($97|0)==($99|0);
           if (!($100)) {
            if ($93) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$192 = $94;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L18;
            }
           }
           $101 = HEAP32[$94>>2]|0;
           $102 = ((($101)) + 36|0);
           $103 = HEAP32[$102>>2]|0;
           $104 = (FUNCTION_TABLE_ii[$103 & 63]($94)|0);
           $105 = ($104|0)==(-1);
           if ($105) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i2140 = 0;
            label = 37;
            break;
           } else {
            $106 = ($$pre$i2$i$i21|0)==(0|0);
            $tmp$i$i23 = $93 ^ $106;
            if ($tmp$i$i23) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$192 = $$pre$i2$i$i21;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L18;
            }
           }
          }
         } while(0);
         if ((label|0) == 37) {
          label = 0;
          if ($93) {
           $$0$ph$be = $$2$lcssa;
           break L18;
          } else {
           $$pre$i2$i$i2139 = $$pre$i2$i$i2140;$192 = 0;
          }
         }
         $107 = ((($92)) + 12|0);
         $108 = HEAP32[$107>>2]|0;
         $109 = ((($92)) + 16|0);
         $110 = HEAP32[$109>>2]|0;
         $111 = ($108|0)==($110|0);
         if ($111) {
          $112 = HEAP32[$92>>2]|0;
          $113 = ((($112)) + 36|0);
          $114 = HEAP32[$113>>2]|0;
          $115 = (FUNCTION_TABLE_ii[$114 & 63]($92)|0);
          $$0$i$i = $115;
         } else {
          $116 = HEAP8[$108>>0]|0;
          $117 = $116&255;
          $$0$i$i = $117;
         }
         $118 = $$0$i$i&255;
         $isascii1$i24 = ($118<<24>>24)>(-1);
         if (!($isascii1$i24)) {
          $$0$ph$be = $$2$lcssa;
          break L18;
         }
         $sext = $$0$i$i << 24;
         $119 = $sext >> 24;
         $120 = HEAP32[$5>>2]|0;
         $121 = (($120) + ($119<<1)|0);
         $122 = HEAP16[$121>>1]|0;
         $123 = $122 & 8192;
         $124 = ($123<<16>>16)==(0);
         if ($124) {
          $$0$ph$be = $$2$lcssa;
          break L18;
         }
         $125 = HEAP32[$107>>2]|0;
         $126 = HEAP32[$109>>2]|0;
         $127 = ($125|0)==($126|0);
         if ($127) {
          $128 = HEAP32[$92>>2]|0;
          $129 = ((($128)) + 40|0);
          $130 = HEAP32[$129>>2]|0;
          (FUNCTION_TABLE_ii[$130 & 63]($92)|0);
          $$pre$i$i$i17 = $92;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$94 = $192;
          continue;
         } else {
          $131 = ((($125)) + 1|0);
          HEAP32[$107>>2] = $131;
          $$pre$i$i$i17 = $92;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$94 = $192;
          continue;
         }
        }
       }
      }
      $132 = ((($21)) + 12|0);
      $133 = HEAP32[$132>>2]|0;
      $134 = ((($21)) + 16|0);
      $135 = HEAP32[$134>>2]|0;
      $136 = ($133|0)==($135|0);
      if ($136) {
       $137 = HEAP32[$21>>2]|0;
       $138 = ((($137)) + 36|0);
       $139 = HEAP32[$138>>2]|0;
       $140 = (FUNCTION_TABLE_ii[$139 & 63]($21)|0);
       $$0$i$i26 = $140;
      } else {
       $141 = HEAP8[$133>>0]|0;
       $142 = $141&255;
       $$0$i$i26 = $142;
      }
      $143 = $$0$i$i26&255;
      $144 = HEAP32[$4>>2]|0;
      $145 = ((($144)) + 12|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = (FUNCTION_TABLE_iii[$146 & 15]($4,$143)|0);
      $148 = HEAP8[$$0$ph86>>0]|0;
      $149 = HEAP32[$4>>2]|0;
      $150 = ((($149)) + 12|0);
      $151 = HEAP32[$150>>2]|0;
      $152 = (FUNCTION_TABLE_iii[$151 & 15]($4,$148)|0);
      $153 = ($147<<24>>24)==($152<<24>>24);
      if (!($153)) {
       label = 55;
       break L2;
      }
      $154 = HEAP32[$132>>2]|0;
      $155 = HEAP32[$134>>2]|0;
      $156 = ($154|0)==($155|0);
      if ($156) {
       $157 = HEAP32[$21>>2]|0;
       $158 = ((($157)) + 40|0);
       $159 = HEAP32[$158>>2]|0;
       (FUNCTION_TABLE_ii[$159 & 63]($21)|0);
      } else {
       $160 = ((($154)) + 1|0);
       HEAP32[$132>>2] = $160;
      }
      $161 = ((($$0$ph86)) + 1|0);
      $$0$ph$be = $161;
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $64 = ($$0$ph$be|0)!=($__fmte|0);
    $65 = ($$pre$pre|0)==(0);
    $or$cond84 = $64 & $65;
    $66 = HEAP32[$__b>>2]|0;
    if ($or$cond84) {
     $$0$ph86 = $$0$ph$be;$8 = $66;
    } else {
     $$pre$i$i$i8 = $66;
     break L1;
    }
   }
   if ((label|0) == 12) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa;
    break;
   }
   else if ((label|0) == 15) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa94;
    break;
   }
   else if ((label|0) == 18) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa95;
    break;
   }
   else if ((label|0) == 55) {
    HEAP32[$__err>>2] = 4;
    $162 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i8 = $162;
    break;
   }
  }
 } while(0);
 $163 = ($$pre$i$i$i8|0)==(0|0);
 if ($163) {
  $174 = 0;
 } else {
  $164 = ((($$pre$i$i$i8)) + 12|0);
  $165 = HEAP32[$164>>2]|0;
  $166 = ((($$pre$i$i$i8)) + 16|0);
  $167 = HEAP32[$166>>2]|0;
  $168 = ($165|0)==($167|0);
  if ($168) {
   $169 = HEAP32[$$pre$i$i$i8>>2]|0;
   $170 = ((($169)) + 36|0);
   $171 = HEAP32[$170>>2]|0;
   $172 = (FUNCTION_TABLE_ii[$171 & 63]($$pre$i$i$i8)|0);
   $173 = ($172|0)==(-1);
   if ($173) {
    HEAP32[$__b>>2] = 0;
    $174 = 0;
   } else {
    $174 = $$pre$i$i$i8;
   }
  } else {
   $174 = $$pre$i$i$i8;
  }
 }
 $175 = ($174|0)==(0|0);
 $176 = HEAP32[$__e>>2]|0;
 $177 = ($176|0)==(0|0);
 do {
  if ($177) {
   label = 65;
  } else {
   $178 = ((($176)) + 12|0);
   $179 = HEAP32[$178>>2]|0;
   $180 = ((($176)) + 16|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = ($179|0)==($181|0);
   if ($182) {
    $183 = HEAP32[$176>>2]|0;
    $184 = ((($183)) + 36|0);
    $185 = HEAP32[$184>>2]|0;
    $186 = (FUNCTION_TABLE_ii[$185 & 63]($176)|0);
    $187 = ($186|0)==(-1);
    if ($187) {
     HEAP32[$__e>>2] = 0;
     label = 65;
     break;
    }
   }
   if (!($175)) {
    label = 66;
   }
  }
 } while(0);
 if ((label|0) == 65) {
  if ($175) {
   label = 66;
  }
 }
 if ((label|0) == 66) {
  $188 = HEAP32[$__err>>2]|0;
  $189 = $188 | 2;
  HEAP32[$__err>>2] = $189;
 }
 STACKTOP = sp;return ($174|0);
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,9216,(9224))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 63]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 1|0);
 $15 = $11 ? $14 : $13;
 $16 = ((($6)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $9&255;
 $19 = $18 >>> 1;
 $20 = $11 ? $19 : $17;
 $21 = (($15) + ($20)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $22 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$21)|0);
 STACKTOP = sp;return ($22|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6176)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 24|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 63]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6176)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 16|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6176)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 20|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy30 = sp + 132|0;
 $$byval_copy26 = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 $34 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6176)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $35 = $__fmt << 24 >> 24;
 do {
  switch ($35|0) {
  case 65: case 97:  {
   $36 = ((($__tm)) + 24|0);
   $37 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $37;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$36,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 101: case 100:  {
   $61 = ((($__tm)) + 12|0);
   $62 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $62;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$61,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 89:  {
   $123 = ((($__tm)) + 20|0);
   $124 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $124;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$123,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 112:  {
   $80 = ((($__tm)) + 8|0);
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $81;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$80,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 37:  {
   $125 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $125;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 68:  {
   $63 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $63;
   $64 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $64;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$8>>2]|0;
   $65 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9224,(9232))|0);
   HEAP32[$__b>>2] = $65;
   label = 26;
   break;
  }
  case 83:  {
   $88 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $88;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__tm,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 88:  {
   $100 = ((($this)) + 8|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = ((($101)) + 24|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = (FUNCTION_TABLE_ii[$103 & 63]($100)|0);
   $105 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $105;
   $106 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $106;
   $107 = HEAP8[$104>>0]|0;
   $108 = $107 & 1;
   $109 = ($108<<24>>24)==(0);
   $110 = ((($104)) + 8|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = ((($104)) + 1|0);
   $113 = $109 ? $112 : $111;
   $114 = ((($104)) + 4|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = $107&255;
   $117 = $116 >>> 1;
   $118 = $109 ? $117 : $115;
   $119 = (($113) + ($118)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$29>>2]|0;
   $120 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$113,$119)|0);
   HEAP32[$__b>>2] = $120;
   label = 26;
   break;
  }
  case 84:  {
   $89 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $89;
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $90;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$24>>2]|0;
   $91 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9264,(9272))|0);
   HEAP32[$__b>>2] = $91;
   label = 26;
   break;
  }
  case 77:  {
   $77 = ((($__tm)) + 4|0);
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $78;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$77,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 99:  {
   $40 = ((($this)) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($41)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_ii[$43 & 63]($40)|0);
   $45 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $45;
   $46 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $46;
   $47 = HEAP8[$44>>0]|0;
   $48 = $47 & 1;
   $49 = ($48<<24>>24)==(0);
   $50 = ((($44)) + 8|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($44)) + 1|0);
   $53 = $49 ? $52 : $51;
   $54 = ((($44)) + 4|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = $47&255;
   $57 = $56 >>> 1;
   $58 = $49 ? $57 : $55;
   $59 = (($53) + ($58)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$5>>2]|0;
   $60 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$53,$59)|0);
   HEAP32[$__b>>2] = $60;
   label = 26;
   break;
  }
  case 72:  {
   $69 = ((($__tm)) + 8|0);
   $70 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $70;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$69,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 119:  {
   $92 = ((($__tm)) + 24|0);
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $93;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$92,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 73:  {
   $71 = ((($__tm)) + 8|0);
   $72 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $72;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$71,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 121:  {
   $121 = ((($__tm)) + 20|0);
   $122 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $122;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$121,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 114:  {
   $82 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $82;
   $83 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $83;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$19>>2]|0;
   $84 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9240,(9251))|0);
   HEAP32[$__b>>2] = $84;
   label = 26;
   break;
  }
  case 82:  {
   $85 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $85;
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $86;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$21>>2]|0;
   $87 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9256,(9261))|0);
   HEAP32[$__b>>2] = $87;
   label = 26;
   break;
  }
  case 70:  {
   $66 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $66;
   $67 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $67;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$10>>2]|0;
   $68 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9232,(9240))|0);
   HEAP32[$__b>>2] = $68;
   label = 26;
   break;
  }
  case 106:  {
   $73 = ((($__tm)) + 28|0);
   $74 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $74;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$73,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 116: case 110:  {
   $79 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $79;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 120:  {
   $94 = HEAP32[$this>>2]|0;
   $95 = ((($94)) + 20|0);
   $96 = HEAP32[$95>>2]|0;
   $97 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $97;
   $98 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $98;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$27>>2]|0;
   $99 = (FUNCTION_TABLE_iiiiiii[$96 & 63]($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $99;
   break;
  }
  case 104: case 66: case 98:  {
   $38 = ((($__tm)) + 16|0);
   $39 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $39;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$38,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 109:  {
   $75 = ((($__tm)) + 16|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $76;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$75,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  default: {
   $126 = HEAP32[$__err>>2]|0;
   $127 = $126 | 4;
   HEAP32[$__err>>2] = $127;
   label = 26;
  }
  }
 } while(0);
 if ((label|0) == 26) {
  $128 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $128;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__ct)) + 8|0);
 L1: while(1) {
  $1 = HEAP32[$__b>>2]|0;
  $2 = ($1|0)==(0|0);
  do {
   if ($2) {
    $13 = 0;
   } else {
    $3 = ((($1)) + 12|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = ((($1)) + 16|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($4|0)==($6|0);
    if ($7) {
     $8 = HEAP32[$1>>2]|0;
     $9 = ((($8)) + 36|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 63]($1)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      HEAP32[$__b>>2] = 0;
      $13 = 0;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $13 = $$pre$i$i$i;
      break;
     }
    } else {
     $13 = $1;
    }
   }
  } while(0);
  $14 = ($13|0)==(0|0);
  $15 = HEAP32[$__e>>2]|0;
  $16 = ($15|0)==(0|0);
  do {
   if ($16) {
    label = 12;
   } else {
    $17 = ((($15)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($15)) + 16|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($18|0)==($20|0);
    if (!($21)) {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
    $22 = HEAP32[$15>>2]|0;
    $23 = ((($22)) + 36|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (FUNCTION_TABLE_ii[$24 & 63]($15)|0);
    $26 = ($25|0)==(-1);
    if ($26) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else {
    $83 = 0;
   }
  }
  $27 = HEAP32[$__b>>2]|0;
  $28 = ((($27)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($27)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $33 = HEAP32[$27>>2]|0;
   $34 = ((($33)) + 36|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (FUNCTION_TABLE_ii[$35 & 63]($27)|0);
   $$0$i$i = $36;
  } else {
   $37 = HEAP8[$29>>0]|0;
   $38 = $37&255;
   $$0$i$i = $38;
  }
  $39 = $$0$i$i&255;
  $isascii1$i = ($39<<24>>24)>(-1);
  if (!($isascii1$i)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = HEAP32[$0>>2]|0;
  $42 = (($41) + ($40<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 8192;
  $45 = ($44<<16>>16)==(0);
  if ($45) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b>>2]|0;
  $47 = ((($46)) + 12|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($46)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($48|0)==($50|0);
  if ($51) {
   $52 = HEAP32[$46>>2]|0;
   $53 = ((($52)) + 40|0);
   $54 = HEAP32[$53>>2]|0;
   (FUNCTION_TABLE_ii[$54 & 63]($46)|0);
   continue;
  } else {
   $55 = ((($48)) + 1|0);
   HEAP32[$47>>2] = $55;
   continue;
  }
 }
 $56 = HEAP32[$__b>>2]|0;
 $57 = ($56|0)==(0|0);
 do {
  if ($57) {
   $68 = 0;
  } else {
   $58 = ((($56)) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($56)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$56>>2]|0;
    $64 = ((($63)) + 36|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_ii[$65 & 63]($56)|0);
    $67 = ($66|0)==(-1);
    if ($67) {
     HEAP32[$__b>>2] = 0;
     $68 = 0;
     break;
    } else {
     $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
     $68 = $$pre$i$i$i2;
     break;
    }
   } else {
    $68 = $56;
   }
  }
 } while(0);
 $69 = ($68|0)==(0|0);
 $70 = ($$pre$i2$i$i6|0)==(0|0);
 do {
  if ($70) {
   label = 32;
  } else {
   $71 = ((($$pre$i2$i$i6)) + 12|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ((($$pre$i2$i$i6)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($72|0)==($74|0);
   if ($75) {
    $76 = HEAP32[$$pre$i2$i$i6>>2]|0;
    $77 = ((($76)) + 36|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_ii[$78 & 63]($$pre$i2$i$i6)|0);
    $80 = ($79|0)==(-1);
    if ($80) {
     HEAP32[$__e>>2] = 0;
     label = 32;
     break;
    }
   }
   if (!($69)) {
    label = 33;
   }
  }
 } while(0);
 if ((label|0) == 32) {
  if ($69) {
   label = 33;
  }
 }
 if ((label|0) == 33) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i611 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 63]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $$pre$i2$i$i611 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $$pre$i2$i$i611 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $41 = HEAP32[$__ct>>2]|0;
   $42 = ((($41)) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 31]($__ct,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if (!($45)) {
    $46 = HEAP32[$__err>>2]|0;
    $47 = $46 | 4;
    HEAP32[$__err>>2] = $47;
    break;
   }
   $48 = HEAP32[$__b>>2]|0;
   $49 = ((($48)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($48)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $55 = HEAP32[$48>>2]|0;
    $56 = ((($55)) + 40|0);
    $57 = HEAP32[$56>>2]|0;
    (FUNCTION_TABLE_ii[$57 & 63]($48)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $58 = ($$pre|0)==(0|0);
    if ($58) {
     $70 = 0;
    } else {
     $60 = $$pre;
     label = 21;
    }
   } else {
    $54 = ((($50)) + 1|0);
    HEAP32[$49>>2] = $54;
    $60 = $48;
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     $59 = ((($60)) + 12|0);
     $61 = HEAP32[$59>>2]|0;
     $62 = ((($60)) + 16|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($61|0)==($63|0);
     if ($64) {
      $65 = HEAP32[$60>>2]|0;
      $66 = ((($65)) + 36|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (FUNCTION_TABLE_ii[$67 & 63]($60)|0);
      $69 = ($68|0)==(-1);
      if ($69) {
       HEAP32[$__b>>2] = 0;
       $70 = 0;
       break;
      } else {
       $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
       $70 = $$pre$i$i$i2;
       break;
      }
     } else {
      $70 = $60;
     }
    }
   } while(0);
   $71 = ($70|0)==(0|0);
   $72 = ($$pre$i2$i$i611|0)==(0|0);
   do {
    if ($72) {
     label = 30;
    } else {
     $73 = ((($$pre$i2$i$i611)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($$pre$i2$i$i611)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$$pre$i2$i$i611>>2]|0;
      $79 = ((($78)) + 36|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 63]($$pre$i2$i$i611)|0);
      $82 = ($81|0)==(-1);
      if ($82) {
       HEAP32[$__e>>2] = 0;
       label = 30;
       break;
      }
     }
     if ($71) {
      break L16;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    if (!($71)) {
     break;
    }
   }
   $83 = HEAP32[$__err>>2]|0;
   $84 = $83 | 2;
   HEAP32[$__err>>2] = $84;
  }
 } while(0);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i$i$i5 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i11 = 0, $$0$i$i1$i$i26 = 0, $$0$i$i17 = 0, $$0$ph$be = 0, $$0$ph89 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$ph = 0, $$pre$i$i$i22 = 0;
 var $$pre$i$i$i7 = 0, $$pre$i3$i$i13 = 0, $$pre$i3$i$i1344 = 0, $$pre$i3$i$i1345 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $or$cond87 = 0, $phitmp$i4$i$i14 = 0, $tmp$i$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $5 = ($__fmtb|0)==($__fmte|0);
 $6 = HEAP32[$__b>>2]|0;
 L1: do {
  if ($5) {
   $$pre$i$i$i22 = $6;
  } else {
   $$0$ph89 = $__fmtb;$7 = $6;
   L2: while(1) {
    $8 = ($7|0)==(0|0);
    $9 = $7;
    if ($8) {
     $126 = 0;$183 = 1;$58 = $9;
    } else {
     $10 = ((($7)) + 12|0);
     $11 = HEAP32[$10>>2]|0;
     $12 = ((($7)) + 16|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ($11|0)==($13|0);
     if ($14) {
      $15 = HEAP32[$7>>2]|0;
      $16 = ((($15)) + 36|0);
      $17 = HEAP32[$16>>2]|0;
      $18 = (FUNCTION_TABLE_ii[$17 & 63]($7)|0);
      $$0$i$i$i$i = $18;
     } else {
      $19 = HEAP32[$11>>2]|0;
      $$0$i$i$i$i = $19;
     }
     $20 = ($$0$i$i$i$i|0)==(-1);
     if ($20) {
      HEAP32[$__b>>2] = 0;
      $126 = 0;$183 = 1;$58 = 0;
     } else {
      $126 = $7;$183 = 0;$58 = $9;
     }
    }
    $21 = HEAP32[$__e>>2]|0;
    $22 = ($21|0)==(0|0);
    $23 = $21;
    do {
     if ($22) {
      $$ph = $23;
      label = 14;
     } else {
      $24 = ((($21)) + 12|0);
      $25 = HEAP32[$24>>2]|0;
      $26 = ((($21)) + 16|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ($25|0)==($27|0);
      if ($28) {
       $29 = HEAP32[$21>>2]|0;
       $30 = ((($29)) + 36|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = (FUNCTION_TABLE_ii[$31 & 63]($21)|0);
       $$0$i$i1$i$i = $32;
      } else {
       $33 = HEAP32[$25>>2]|0;
       $$0$i$i1$i$i = $33;
      }
      $34 = ($$0$i$i1$i$i|0)==(-1);
      if ($34) {
       HEAP32[$__e>>2] = 0;
       $$ph = 0;
       label = 14;
       break;
      } else {
       if ($183) {
        $184 = $21;$59 = $23;
        break;
       } else {
        $$lcssa = $126;
        label = 16;
        break L2;
       }
      }
     }
    } while(0);
    if ((label|0) == 14) {
     label = 0;
     if ($183) {
      $$lcssa = $126;
      label = 16;
      break;
     } else {
      $184 = 0;$59 = $$ph;
     }
    }
    $35 = HEAP32[$$0$ph89>>2]|0;
    $36 = HEAP32[$4>>2]|0;
    $37 = ((($36)) + 52|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = (FUNCTION_TABLE_iiii[$38 & 31]($4,$35,0)|0);
    $40 = ($39<<24>>24)==(37);
    L24: do {
     if ($40) {
      $41 = ((($$0$ph89)) + 4|0);
      $42 = ($41|0)==($__fmte|0);
      if ($42) {
       $$lcssa97 = $126;
       label = 19;
       break L2;
      }
      $43 = HEAP32[$41>>2]|0;
      $44 = HEAP32[$4>>2]|0;
      $45 = ((($44)) + 52|0);
      $46 = HEAP32[$45>>2]|0;
      $47 = (FUNCTION_TABLE_iiii[$46 & 31]($4,$43,0)|0);
      if ((($47<<24>>24) == 48) | (($47<<24>>24) == 69)) {
       $48 = ((($$0$ph89)) + 8|0);
       $49 = ($48|0)==($__fmte|0);
       if ($49) {
        $$lcssa98 = $126;
        label = 22;
        break L2;
       }
       $50 = HEAP32[$48>>2]|0;
       $51 = HEAP32[$4>>2]|0;
       $52 = ((($51)) + 52|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = (FUNCTION_TABLE_iiii[$53 & 31]($4,$50,0)|0);
       $62 = $41;$__cmd$0 = $54;$__opt$0 = $47;
      } else {
       $62 = $$0$ph89;$__cmd$0 = $47;$__opt$0 = 0;
      }
      $55 = HEAP32[$this>>2]|0;
      $56 = ((($55)) + 36|0);
      $57 = HEAP32[$56>>2]|0;
      HEAP32[$1>>2] = $58;
      HEAP32[$2>>2] = $59;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $60 = (FUNCTION_TABLE_iiiiiiiii[$57 & 15]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $60;
      $61 = ((($62)) + 8|0);
      $$0$ph$be = $61;
     } else {
      $66 = HEAP32[$$0$ph89>>2]|0;
      $67 = HEAP32[$4>>2]|0;
      $68 = ((($67)) + 12|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = (FUNCTION_TABLE_iiii[$69 & 31]($4,8192,$66)|0);
      if ($70) {
       $$0$pn = $$0$ph89;
      } else {
       $125 = ((($126)) + 12|0);
       $127 = HEAP32[$125>>2]|0;
       $128 = ((($126)) + 16|0);
       $129 = HEAP32[$128>>2]|0;
       $130 = ($127|0)==($129|0);
       if ($130) {
        $131 = HEAP32[$126>>2]|0;
        $132 = ((($131)) + 36|0);
        $133 = HEAP32[$132>>2]|0;
        $134 = (FUNCTION_TABLE_ii[$133 & 63]($126)|0);
        $$0$i$i17 = $134;
       } else {
        $135 = HEAP32[$127>>2]|0;
        $$0$i$i17 = $135;
       }
       $136 = HEAP32[$4>>2]|0;
       $137 = ((($136)) + 28|0);
       $138 = HEAP32[$137>>2]|0;
       $139 = (FUNCTION_TABLE_iii[$138 & 15]($4,$$0$i$i17)|0);
       $140 = HEAP32[$$0$ph89>>2]|0;
       $141 = HEAP32[$4>>2]|0;
       $142 = ((($141)) + 28|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = (FUNCTION_TABLE_iii[$143 & 15]($4,$140)|0);
       $145 = ($139|0)==($144|0);
       if (!($145)) {
        label = 59;
        break L2;
       }
       $146 = HEAP32[$125>>2]|0;
       $147 = HEAP32[$128>>2]|0;
       $148 = ($146|0)==($147|0);
       if ($148) {
        $149 = HEAP32[$126>>2]|0;
        $150 = ((($149)) + 40|0);
        $151 = HEAP32[$150>>2]|0;
        (FUNCTION_TABLE_ii[$151 & 63]($126)|0);
       } else {
        $152 = ((($146)) + 4|0);
        HEAP32[$125>>2] = $152;
       }
       $153 = ((($$0$ph89)) + 4|0);
       $$0$ph$be = $153;
       break;
      }
      while(1) {
       $$2 = ((($$0$pn)) + 4|0);
       $71 = ($$2|0)==($__fmte|0);
       if ($71) {
        $$2$lcssa = $__fmte;
        break;
       }
       $72 = HEAP32[$$2>>2]|0;
       $73 = HEAP32[$4>>2]|0;
       $74 = ((($73)) + 12|0);
       $75 = HEAP32[$74>>2]|0;
       $76 = (FUNCTION_TABLE_iiii[$75 & 31]($4,8192,$72)|0);
       if ($76) {
        $$0$pn = $$2;
       } else {
        $$2$lcssa = $$2;
        break;
       }
      }
      $$pre$i$i$i7 = $126;$$pre$i3$i$i13 = $184;$89 = $184;
      while(1) {
       $77 = ($$pre$i$i$i7|0)==(0|0);
       if ($77) {
        $102 = 1;$104 = 0;
       } else {
        $78 = ((($$pre$i$i$i7)) + 12|0);
        $79 = HEAP32[$78>>2]|0;
        $80 = ((($$pre$i$i$i7)) + 16|0);
        $81 = HEAP32[$80>>2]|0;
        $82 = ($79|0)==($81|0);
        if ($82) {
         $83 = HEAP32[$$pre$i$i$i7>>2]|0;
         $84 = ((($83)) + 36|0);
         $85 = HEAP32[$84>>2]|0;
         $86 = (FUNCTION_TABLE_ii[$85 & 63]($$pre$i$i$i7)|0);
         $$0$i$i$i$i5 = $86;
        } else {
         $87 = HEAP32[$79>>2]|0;
         $$0$i$i$i$i5 = $87;
        }
        $88 = ($$0$i$i$i$i5|0)==(-1);
        if ($88) {
         HEAP32[$__b>>2] = 0;
         $102 = 1;$104 = 0;
        } else {
         $102 = 0;$104 = $$pre$i$i$i7;
        }
       }
       $90 = ($89|0)==(0|0);
       do {
        if ($90) {
         $$pre$i3$i$i1345 = $$pre$i3$i$i13;
         label = 42;
        } else {
         $91 = ((($89)) + 12|0);
         $92 = HEAP32[$91>>2]|0;
         $93 = ((($89)) + 16|0);
         $94 = HEAP32[$93>>2]|0;
         $95 = ($92|0)==($94|0);
         if ($95) {
          $96 = HEAP32[$89>>2]|0;
          $97 = ((($96)) + 36|0);
          $98 = HEAP32[$97>>2]|0;
          $99 = (FUNCTION_TABLE_ii[$98 & 63]($89)|0);
          $$0$i$i1$i$i11 = $99;
         } else {
          $100 = HEAP32[$92>>2]|0;
          $$0$i$i1$i$i11 = $100;
         }
         $101 = ($$0$i$i1$i$i11|0)==(-1);
         if ($101) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i1345 = 0;
          label = 42;
          break;
         } else {
          $phitmp$i4$i$i14 = ($$pre$i3$i$i13|0)==(0|0);
          $tmp$i$i16 = $102 ^ $phitmp$i4$i$i14;
          if ($tmp$i$i16) {
           $$pre$i3$i$i1344 = $$pre$i3$i$i13;$185 = $$pre$i3$i$i13;
           break;
          } else {
           $$0$ph$be = $$2$lcssa;
           break L24;
          }
         }
        }
       } while(0);
       if ((label|0) == 42) {
        label = 0;
        if ($102) {
         $$0$ph$be = $$2$lcssa;
         break L24;
        } else {
         $$pre$i3$i$i1344 = $$pre$i3$i$i1345;$185 = 0;
        }
       }
       $103 = ((($104)) + 12|0);
       $105 = HEAP32[$103>>2]|0;
       $106 = ((($104)) + 16|0);
       $107 = HEAP32[$106>>2]|0;
       $108 = ($105|0)==($107|0);
       if ($108) {
        $109 = HEAP32[$104>>2]|0;
        $110 = ((($109)) + 36|0);
        $111 = HEAP32[$110>>2]|0;
        $112 = (FUNCTION_TABLE_ii[$111 & 63]($104)|0);
        $$0$i$i = $112;
       } else {
        $113 = HEAP32[$105>>2]|0;
        $$0$i$i = $113;
       }
       $114 = HEAP32[$4>>2]|0;
       $115 = ((($114)) + 12|0);
       $116 = HEAP32[$115>>2]|0;
       $117 = (FUNCTION_TABLE_iiii[$116 & 31]($4,8192,$$0$i$i)|0);
       if (!($117)) {
        $$0$ph$be = $$2$lcssa;
        break L24;
       }
       $118 = HEAP32[$103>>2]|0;
       $119 = HEAP32[$106>>2]|0;
       $120 = ($118|0)==($119|0);
       if ($120) {
        $121 = HEAP32[$104>>2]|0;
        $122 = ((($121)) + 40|0);
        $123 = HEAP32[$122>>2]|0;
        (FUNCTION_TABLE_ii[$123 & 63]($104)|0);
        $$pre$i$i$i7 = $104;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$89 = $185;
        continue;
       } else {
        $124 = ((($118)) + 4|0);
        HEAP32[$103>>2] = $124;
        $$pre$i$i$i7 = $104;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$89 = $185;
        continue;
       }
      }
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $63 = ($$0$ph$be|0)!=($__fmte|0);
    $64 = ($$pre$pre|0)==(0);
    $or$cond87 = $63 & $64;
    $65 = HEAP32[$__b>>2]|0;
    if ($or$cond87) {
     $$0$ph89 = $$0$ph$be;$7 = $65;
    } else {
     $$pre$i$i$i22 = $65;
     break L1;
    }
   }
   if ((label|0) == 16) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa;
    break;
   }
   else if ((label|0) == 19) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa97;
    break;
   }
   else if ((label|0) == 22) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa98;
    break;
   }
   else if ((label|0) == 59) {
    HEAP32[$__err>>2] = 4;
    $154 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i22 = $154;
    break;
   }
  }
 } while(0);
 $155 = ($$pre$i$i$i22|0)==(0|0);
 if ($155) {
  $182 = 0;$186 = 1;
 } else {
  $156 = ((($$pre$i$i$i22)) + 12|0);
  $157 = HEAP32[$156>>2]|0;
  $158 = ((($$pre$i$i$i22)) + 16|0);
  $159 = HEAP32[$158>>2]|0;
  $160 = ($157|0)==($159|0);
  if ($160) {
   $161 = HEAP32[$$pre$i$i$i22>>2]|0;
   $162 = ((($161)) + 36|0);
   $163 = HEAP32[$162>>2]|0;
   $164 = (FUNCTION_TABLE_ii[$163 & 63]($$pre$i$i$i22)|0);
   $$0$i$i$i$i20 = $164;
  } else {
   $165 = HEAP32[$157>>2]|0;
   $$0$i$i$i$i20 = $165;
  }
  $166 = ($$0$i$i$i$i20|0)==(-1);
  if ($166) {
   HEAP32[$__b>>2] = 0;
   $182 = 0;$186 = 1;
  } else {
   $182 = $$pre$i$i$i22;$186 = 0;
  }
 }
 $167 = HEAP32[$__e>>2]|0;
 $168 = ($167|0)==(0|0);
 do {
  if ($168) {
   label = 72;
  } else {
   $169 = ((($167)) + 12|0);
   $170 = HEAP32[$169>>2]|0;
   $171 = ((($167)) + 16|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = ($170|0)==($172|0);
   if ($173) {
    $174 = HEAP32[$167>>2]|0;
    $175 = ((($174)) + 36|0);
    $176 = HEAP32[$175>>2]|0;
    $177 = (FUNCTION_TABLE_ii[$176 & 63]($167)|0);
    $$0$i$i1$i$i26 = $177;
   } else {
    $178 = HEAP32[$170>>2]|0;
    $$0$i$i1$i$i26 = $178;
   }
   $179 = ($$0$i$i1$i$i26|0)==(-1);
   if ($179) {
    HEAP32[$__e>>2] = 0;
    label = 72;
    break;
   } else {
    if ($186) {
     break;
    } else {
     label = 74;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 72) {
  if ($186) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $180 = HEAP32[$__err>>2]|0;
  $181 = $180 | 2;
  HEAP32[$__err>>2] = $181;
 }
 STACKTOP = sp;return ($182|0);
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,9272,(9304))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 63]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 4|0);
 $15 = $11 ? $14 : $13;
 $16 = HEAP32[$14>>2]|0;
 $17 = $9&255;
 $18 = $17 >>> 1;
 $19 = $11 ? $18 : $16;
 $20 = (($15) + ($19<<2)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $21 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$20)|0);
 STACKTOP = sp;return ($21|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 24|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 63]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 16|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 20|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy30 = sp + 132|0;
 $$byval_copy26 = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 $34 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $35 = $__fmt << 24 >> 24;
 do {
  switch ($35|0) {
  case 121:  {
   $119 = ((($__tm)) + 20|0);
   $120 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $120;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$119,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 89:  {
   $121 = ((($__tm)) + 20|0);
   $122 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $122;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$121,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 120:  {
   $93 = HEAP32[$this>>2]|0;
   $94 = ((($93)) + 20|0);
   $95 = HEAP32[$94>>2]|0;
   $96 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $96;
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $97;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$27>>2]|0;
   $98 = (FUNCTION_TABLE_iiiiiii[$95 & 63]($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $98;
   break;
  }
  case 114:  {
   $81 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $81;
   $82 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $82;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$19>>2]|0;
   $83 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9368,(9412))|0);
   HEAP32[$__b>>2] = $83;
   label = 26;
   break;
  }
  case 37:  {
   $123 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $123;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 106:  {
   $72 = ((($__tm)) + 28|0);
   $73 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $73;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$72,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 119:  {
   $91 = ((($__tm)) + 24|0);
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $92;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$91,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 83:  {
   $87 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $87;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__tm,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 65: case 97:  {
   $36 = ((($__tm)) + 24|0);
   $37 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $37;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$36,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 68:  {
   $62 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $62;
   $63 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $63;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$8>>2]|0;
   $64 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9304,(9336))|0);
   HEAP32[$__b>>2] = $64;
   label = 26;
   break;
  }
  case 88:  {
   $99 = ((($this)) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = ((($100)) + 24|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = (FUNCTION_TABLE_ii[$102 & 63]($99)|0);
   $104 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $104;
   $105 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $105;
   $106 = HEAP8[$103>>0]|0;
   $107 = $106 & 1;
   $108 = ($107<<24>>24)==(0);
   $109 = ((($103)) + 8|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = ((($103)) + 4|0);
   $112 = $108 ? $111 : $110;
   $113 = HEAP32[$111>>2]|0;
   $114 = $106&255;
   $115 = $114 >>> 1;
   $116 = $108 ? $115 : $113;
   $117 = (($112) + ($116<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$29>>2]|0;
   $118 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$112,$117)|0);
   HEAP32[$__b>>2] = $118;
   label = 26;
   break;
  }
  case 73:  {
   $70 = ((($__tm)) + 8|0);
   $71 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $71;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$70,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 116: case 110:  {
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $78;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 84:  {
   $88 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $88;
   $89 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $89;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$24>>2]|0;
   $90 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9440,(9472))|0);
   HEAP32[$__b>>2] = $90;
   label = 26;
   break;
  }
  case 77:  {
   $76 = ((($__tm)) + 4|0);
   $77 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $77;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$76,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 112:  {
   $79 = ((($__tm)) + 8|0);
   $80 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $80;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$79,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 70:  {
   $65 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $65;
   $66 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $66;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$10>>2]|0;
   $67 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9336,(9368))|0);
   HEAP32[$__b>>2] = $67;
   label = 26;
   break;
  }
  case 104: case 66: case 98:  {
   $38 = ((($__tm)) + 16|0);
   $39 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $39;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$38,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 109:  {
   $74 = ((($__tm)) + 16|0);
   $75 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $75;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$74,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 82:  {
   $84 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $84;
   $85 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $85;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$21>>2]|0;
   $86 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9416,(9436))|0);
   HEAP32[$__b>>2] = $86;
   label = 26;
   break;
  }
  case 72:  {
   $68 = ((($__tm)) + 8|0);
   $69 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $69;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$68,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 99:  {
   $40 = ((($this)) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($41)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_ii[$43 & 63]($40)|0);
   $45 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $45;
   $46 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $46;
   $47 = HEAP8[$44>>0]|0;
   $48 = $47 & 1;
   $49 = ($48<<24>>24)==(0);
   $50 = ((($44)) + 8|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($44)) + 4|0);
   $53 = $49 ? $52 : $51;
   $54 = HEAP32[$52>>2]|0;
   $55 = $47&255;
   $56 = $55 >>> 1;
   $57 = $49 ? $56 : $54;
   $58 = (($53) + ($57<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$5>>2]|0;
   $59 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$53,$58)|0);
   HEAP32[$__b>>2] = $59;
   label = 26;
   break;
  }
  case 101: case 100:  {
   $60 = ((($__tm)) + 12|0);
   $61 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $61;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$60,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  default: {
   $124 = HEAP32[$__err>>2]|0;
   $125 = $124 | 4;
   HEAP32[$__err>>2] = $125;
   label = 26;
  }
  }
 } while(0);
 if ((label|0) == 26) {
  $126 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $126;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $0 = HEAP32[$__b>>2]|0;
  $1 = ($0|0)==(0|0);
  do {
   if ($1) {
    $78 = 1;
   } else {
    $2 = ((($0)) + 12|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = ((($0)) + 16|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($3|0)==($5|0);
    if ($6) {
     $7 = HEAP32[$0>>2]|0;
     $8 = ((($7)) + 36|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
     $$0$i$i$i$i = $10;
    } else {
     $11 = HEAP32[$3>>2]|0;
     $$0$i$i$i$i = $11;
    }
    $12 = ($$0$i$i$i$i|0)==(-1);
    if ($12) {
     HEAP32[$__b>>2] = 0;
     $78 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $78 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $13 = HEAP32[$__e>>2]|0;
  $14 = ($13|0)==(0|0);
  do {
   if ($14) {
    label = 15;
   } else {
    $15 = ((($13)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($13)) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)==($18|0);
    if ($19) {
     $20 = HEAP32[$13>>2]|0;
     $21 = ((($20)) + 36|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
     $$0$i$i1$i$i = $23;
    } else {
     $24 = HEAP32[$16>>2]|0;
     $$0$i$i1$i$i = $24;
    }
    $25 = ($$0$i$i1$i$i|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($78) {
      $79 = $13;
      break;
     } else {
      $$pre$i3$i$i9 = $13;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else {
    $79 = 0;
   }
  }
  $26 = HEAP32[$__b>>2]|0;
  $27 = ((($26)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ((($26)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($28|0)==($30|0);
  if ($31) {
   $32 = HEAP32[$26>>2]|0;
   $33 = ((($32)) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_ii[$34 & 63]($26)|0);
   $$0$i$i = $35;
  } else {
   $36 = HEAP32[$28>>2]|0;
   $$0$i$i = $36;
  }
  $37 = HEAP32[$__ct>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 31]($__ct,8192,$$0$i$i)|0);
  if (!($40)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b>>2]|0;
  $42 = ((($41)) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ((($41)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43|0)==($45|0);
  if ($46) {
   $47 = HEAP32[$41>>2]|0;
   $48 = ((($47)) + 40|0);
   $49 = HEAP32[$48>>2]|0;
   (FUNCTION_TABLE_ii[$49 & 63]($41)|0);
   continue;
  } else {
   $50 = ((($43)) + 4|0);
   HEAP32[$42>>2] = $50;
   continue;
  }
 }
 $51 = HEAP32[$__b>>2]|0;
 $52 = ($51|0)==(0|0);
 do {
  if ($52) {
   $80 = 1;
  } else {
   $53 = ((($51)) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($51)) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($54|0)==($56|0);
   if ($57) {
    $58 = HEAP32[$51>>2]|0;
    $59 = ((($58)) + 36|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_ii[$60 & 63]($51)|0);
    $$0$i$i$i$i1 = $61;
   } else {
    $62 = HEAP32[$54>>2]|0;
    $$0$i$i$i$i1 = $62;
   }
   $63 = ($$0$i$i$i$i1|0)==(-1);
   if ($63) {
    HEAP32[$__b>>2] = 0;
    $80 = 1;
    break;
   } else {
    $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
    $80 = $phitmp$i$i$i4;
    break;
   }
  }
 } while(0);
 $64 = ($$pre$i3$i$i9|0)==(0|0);
 do {
  if ($64) {
   label = 37;
  } else {
   $65 = ((($$pre$i3$i$i9)) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ((($$pre$i3$i$i9)) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$$pre$i3$i$i9>>2]|0;
    $71 = ((($70)) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i3$i$i9)|0);
    $$0$i$i1$i$i7 = $73;
   } else {
    $74 = HEAP32[$66>>2]|0;
    $$0$i$i1$i$i7 = $74;
   }
   $75 = ($$0$i$i1$i$i7|0)==(-1);
   if ($75) {
    HEAP32[$__e>>2] = 0;
    label = 37;
    break;
   } else {
    if ($80) {
     break;
    } else {
     label = 39;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($80) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $76 = HEAP32[$__err>>2]|0;
  $77 = $76 | 2;
  HEAP32[$__err>>2] = $77;
 }
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $83 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($83) {
     $$pre$i3$i$i915 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($83) {
   label = 16;
  } else {
   $$pre$i3$i$i915 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 52|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 31]($__ct,$$0$i$i,0)|0);
   $43 = ($42<<24>>24)==(37);
   if (!($43)) {
    $44 = HEAP32[$__err>>2]|0;
    $45 = $44 | 4;
    HEAP32[$__err>>2] = $45;
    break;
   }
   $46 = HEAP32[$__b>>2]|0;
   $47 = ((($46)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($46)) + 16|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)==($50|0);
   if ($51) {
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 40|0);
    $55 = HEAP32[$54>>2]|0;
    (FUNCTION_TABLE_ii[$55 & 63]($46)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $56 = ($$pre|0)==(0|0);
    if ($56) {
     $84 = 1;
    } else {
     $58 = $$pre;
     label = 25;
    }
   } else {
    $52 = ((($48)) + 4|0);
    HEAP32[$47>>2] = $52;
    $58 = $46;
    label = 25;
   }
   do {
    if ((label|0) == 25) {
     $57 = ((($58)) + 12|0);
     $59 = HEAP32[$57>>2]|0;
     $60 = ((($58)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$58>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 63]($58)|0);
      $$0$i$i$i$i1 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i$i$i1 = $67;
     }
     $68 = ($$0$i$i$i$i1|0)==(-1);
     if ($68) {
      HEAP32[$__b>>2] = 0;
      $84 = 1;
      break;
     } else {
      $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
      $84 = $phitmp$i$i$i4;
      break;
     }
    }
   } while(0);
   $69 = ($$pre$i3$i$i915|0)==(0|0);
   do {
    if ($69) {
     label = 37;
    } else {
     $70 = ((($$pre$i3$i$i915)) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($$pre$i3$i$i915)) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$$pre$i3$i$i915>>2]|0;
      $76 = ((($75)) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 63]($$pre$i3$i$i915)|0);
      $$0$i$i1$i$i7 = $78;
     } else {
      $79 = HEAP32[$71>>2]|0;
      $$0$i$i1$i$i7 = $79;
     }
     $80 = ($$0$i$i1$i$i7|0)==(-1);
     if ($80) {
      HEAP32[$__e>>2] = 0;
      label = 37;
      break;
     } else {
      if ($84) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 37) {
    if (!($84)) {
     break;
    }
   }
   $81 = HEAP32[$__err>>2]|0;
   $82 = $81 | 2;
   HEAP32[$__err>>2] = $82;
  }
 } while(0);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16__clocEv()|0);
 $2 = ($0|0)==($1|0);
 if (!($2)) {
  $3 = HEAP32[$this>>2]|0;
  _freelocale(($3|0));
 }
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$9 = $6;
  while(1) {
   $8 = HEAP8[$$0$i$i2>>0]|0;
   $10 = ($9|0)==(0|0);
   do {
    if ($10) {
     $25 = 0;
    } else {
     $11 = ((($9)) + 24|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($9)) + 28|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($12|0)==($14|0);
     if ($15) {
      $17 = HEAP32[$9>>2]|0;
      $18 = ((($17)) + 52|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = $8&255;
      $21 = (FUNCTION_TABLE_iii[$19 & 15]($9,$20)|0);
      $22 = ($21|0)==(-1);
      $$$i = $22 ? 0 : $9;
      $25 = $$$i;
      break;
     } else {
      $16 = ((($12)) + 1|0);
      HEAP32[$11>>2] = $16;
      HEAP8[$12>>0] = $8;
      $25 = $9;
      break;
     }
    }
   } while(0);
   $23 = ((($$0$i$i2)) + 1|0);
   $24 = ($23|0)==($4|0);
   if ($24) {
    $$lcssa = $25;
    break;
   } else {
    $$0$i$i2 = $23;$9 = $25;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = ((($fmt)) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = ((($fmt)) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = ((($fmt)) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $4;
 $6 = $__nb;
 $7 = (($5) - ($6))|0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (_strftime_l(($__nb|0),($7|0),($fmt|0),($__tm|0),($8|0))|0);
 $10 = (($__nb) + ($9)|0);
 HEAP32[$__ne>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i$i$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0;
 $__nar = sp + 8|0;
 $__ne = sp;
 $2 = ((($__nar)) + 400|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$9 = $6;
  while(1) {
   $8 = HEAP32[$$0$i$i2>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $24 = 0;
   } else {
    $11 = ((($9)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($9)) + 28|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($12|0)==($14|0);
    if ($15) {
     $16 = HEAP32[$9>>2]|0;
     $17 = ((($16)) + 52|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = (FUNCTION_TABLE_iii[$18 & 15]($9,$8)|0);
     $$0$i$i$i$i = $19;
    } else {
     $20 = ((($12)) + 4|0);
     HEAP32[$11>>2] = $20;
     HEAP32[$12>>2] = $8;
     $$0$i$i$i$i = $8;
    }
    $21 = ($$0$i$i$i$i|0)==(-1);
    $$$i = $21 ? 0 : $9;
    $24 = $$$i;
   }
   $22 = ((($$0$i$i2)) + 4|0);
   $23 = ($22|0)==($4|0);
   if ($23) {
    $$lcssa = $24;
    break;
   } else {
    $$0$i$i2 = $22;$9 = $24;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__wb = $__wb|0;
 $__we = $__we|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $__nar = sp + 16|0;
 $__ne = sp + 12|0;
 $mb = sp;
 $__nb = sp + 8|0;
 $0 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $0;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $1 = $mb;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[$__nb>>2] = $__nar;
 $5 = HEAP32[$__we>>2]|0;
 $6 = $5;
 $7 = $__wb;
 $8 = (($6) - ($7))|0;
 $9 = $8 >> 2;
 $10 = HEAP32[$this>>2]|0;
 $11 = (_uselocale(($10|0))|0);
 $12 = (_mbsrtowcs($__wb,$__nb,$9,$mb)|0);
 $13 = ($11|0)==(0|0);
 if (!($13)) {
  (_uselocale(($11|0))|0);
 }
 $14 = (($__wb) + ($12<<2)|0);
 HEAP32[$__we>>2] = $14;
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0$lcssa$i = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$25 = 0, $__neg = 0, $__w$04 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $$byval_copy = sp + 24|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 136|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 134|0;
 $0 = sp + 4|0;
 $__atoms = sp + 124|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 100|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6176)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 if ($9) {
  $10 = HEAP32[$5>>2]|0;
  $11 = ((($10)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 7]($5,9472,(9482),$__atoms)|0);
  $13 = HEAP32[$__wn>>2]|0;
  $14 = HEAP32[$__wb>>2]|0;
  $15 = $13;
  $16 = $14;
  $17 = (($15) - ($16))|0;
  $18 = ($17|0)>(98);
  if ($18) {
   $19 = (($17) + 2)|0;
   $20 = (_malloc($19)|0);
   $21 = $20;
   $22 = ($20|0)==(0|0);
   if ($22) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $50 = $21;$__nc$0 = $20;
   }
  } else {
   $50 = 0;$__nc$0 = $$byval_copy;
  }
  $23 = HEAP8[$__neg>>0]|0;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $__nc$1 = $__nc$0;
  } else {
   $25 = ((($__nc$0)) + 1|0);
   HEAP8[$__nc$0>>0] = 45;
   $__nc$1 = $25;
  }
  $26 = ((($__atoms)) + 10|0);
  $27 = $__atoms;
  $28 = ($14>>>0)<($13>>>0);
  if ($28) {
   $29 = ((($__atoms)) + 1|0);
   $30 = ((($29)) + 1|0);
   $31 = ((($30)) + 1|0);
   $32 = ((($31)) + 1|0);
   $33 = ((($32)) + 1|0);
   $34 = ((($33)) + 1|0);
   $35 = ((($34)) + 1|0);
   $36 = ((($35)) + 1|0);
   $37 = ((($36)) + 1|0);
   $__nc$25 = $__nc$1;$__w$04 = $14;
   while(1) {
    $38 = HEAP8[$__w$04>>0]|0;
    $39 = HEAP8[$__atoms>>0]|0;
    $40 = ($39<<24>>24)==($38<<24>>24);
    if ($40) {
     $$0$lcssa$i = $__atoms;
    } else {
     $41 = HEAP8[$29>>0]|0;
     $42 = ($41<<24>>24)==($38<<24>>24);
     if ($42) {
      $$0$lcssa$i = $29;
     } else {
      $86 = HEAP8[$30>>0]|0;
      $87 = ($86<<24>>24)==($38<<24>>24);
      if ($87) {
       $$0$lcssa$i = $30;
      } else {
       $88 = HEAP8[$31>>0]|0;
       $89 = ($88<<24>>24)==($38<<24>>24);
       if ($89) {
        $$0$lcssa$i = $31;
       } else {
        $90 = HEAP8[$32>>0]|0;
        $91 = ($90<<24>>24)==($38<<24>>24);
        if ($91) {
         $$0$lcssa$i = $32;
        } else {
         $92 = HEAP8[$33>>0]|0;
         $93 = ($92<<24>>24)==($38<<24>>24);
         if ($93) {
          $$0$lcssa$i = $33;
         } else {
          $94 = HEAP8[$34>>0]|0;
          $95 = ($94<<24>>24)==($38<<24>>24);
          if ($95) {
           $$0$lcssa$i = $34;
          } else {
           $96 = HEAP8[$35>>0]|0;
           $97 = ($96<<24>>24)==($38<<24>>24);
           if ($97) {
            $$0$lcssa$i = $35;
           } else {
            $98 = HEAP8[$36>>0]|0;
            $99 = ($98<<24>>24)==($38<<24>>24);
            if ($99) {
             $$0$lcssa$i = $36;
            } else {
             $100 = HEAP8[$37>>0]|0;
             $101 = ($100<<24>>24)==($38<<24>>24);
             $$ = $101 ? $37 : $26;
             $$0$lcssa$i = $$;
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $43 = $$0$lcssa$i;
    $44 = (($43) - ($27))|0;
    $45 = (9472 + ($44)|0);
    $46 = HEAP8[$45>>0]|0;
    HEAP8[$__nc$25>>0] = $46;
    $47 = ((($__w$04)) + 1|0);
    $48 = ((($__nc$25)) + 1|0);
    $$pre = HEAP32[$__wn>>2]|0;
    $49 = ($47>>>0)<($$pre>>>0);
    if ($49) {
     $__nc$25 = $48;$__w$04 = $47;
    } else {
     $__nc$2$lcssa = $48;
     break;
    }
   }
  } else {
   $__nc$2$lcssa = $__nc$1;
  }
  HEAP8[$__nc$2$lcssa>>0] = 0;
  HEAP32[$vararg_buffer>>2] = $__v;
  (_sscanf($$byval_copy,9488,$vararg_buffer)|0);
  $51 = ($50|0)==(0);
  if (!($51)) {
   $52 = $50;
   _free($52);
  }
 }
 $53 = HEAP32[$__b>>2]|0;
 $54 = ($53|0)==(0|0);
 do {
  if ($54) {
   $65 = 0;
  } else {
   $55 = ((($53)) + 12|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ((($53)) + 16|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ($56|0)==($58|0);
   if ($59) {
    $60 = HEAP32[$53>>2]|0;
    $61 = ((($60)) + 36|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = (FUNCTION_TABLE_ii[$62 & 63]($53)|0);
    $64 = ($63|0)==(-1);
    if ($64) {
     HEAP32[$__b>>2] = 0;
     $65 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $65 = $$pre$i$i$i;
     break;
    }
   } else {
    $65 = $53;
   }
  }
 } while(0);
 $66 = ($65|0)==(0|0);
 $67 = HEAP32[$__e>>2]|0;
 $68 = ($67|0)==(0|0);
 do {
  if ($68) {
   label = 25;
  } else {
   $69 = ((($67)) + 12|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ((($67)) + 16|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ($70|0)==($72|0);
   if ($73) {
    $74 = HEAP32[$67>>2]|0;
    $75 = ((($74)) + 36|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (FUNCTION_TABLE_ii[$76 & 63]($67)|0);
    $78 = ($77|0)==(-1);
    if ($78) {
     HEAP32[$__e>>2] = 0;
     label = 25;
     break;
    }
   }
   if (!($66)) {
    label = 26;
   }
  }
 } while(0);
 if ((label|0) == 25) {
  if ($66) {
   label = 26;
  }
 }
 if ((label|0) == 26) {
  $79 = HEAP32[$__err>>2]|0;
  $80 = $79 | 2;
  HEAP32[$__err>>2] = $80;
 }
 $81 = HEAP32[$__b>>2]|0;
 $82 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($82)|0);
 $83 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $84 = ($83|0)==(0|0);
 if (!($84)) {
  $85 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$85 & 127]($83);
 }
 STACKTOP = sp;return ($81|0);
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i103 = 0, $$0$i$i105 = 0, $$0$i$i120 = 0, $$0$i$i27 = 0, $$0$i$i37 = 0, $$0$i$i39 = 0, $$0$i$i49 = 0, $$0$i$i55 = 0, $$0$i$i59 = 0, $$0$i$i75 = 0, $$0$i$i87 = 0, $$0$i$i95 = 0, $$in241 = 0, $$lcssa = 0, $$lcssa176 = 0, $$lcssa223 = 0, $$lcssa224 = 0, $$ph = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert198 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i109 = 0, $$pre$i$i$i124 = 0, $$pre$i$i$i30 = 0, $$pre$i$i$i41 = 0, $$pre$i$i$i63 = 0, $$pre$i$i$i79 = 0, $$pre$i2$i$i113 = 0, $$pre$i2$i$i113183 = 0, $$pre$i2$i$i113185 = 0, $$pre$i2$i$i128192 = 0, $$pre$i2$i$i128193 = 0, $$pre$i2$i$i128246 = 0, $$pre$i2$i$i45 = 0, $$pre$i2$i$i45200 = 0, $$pre$i2$i$i45202 = 0, $$pre$i2$i$i67188$ph = 0;
 var $$pre$i2$i$i67188205 = 0, $$pre$i2$i$i67237 = 0, $$pre$i2$i$i83 = 0, $$pre186 = 0, $$pre187 = 0, $$pre190 = 0, $$pre191 = 0, $$pre195 = 0, $$pre196 = 0, $$pre197 = 0, $$pre199 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0;
 var $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0253 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0255 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0;
 var $cond = 0, $isascii1$i = 0, $isascii1$i101 = 0, $isascii1$i140 = 0, $isascii1$i51 = 0, $isascii1$i57 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond222 = 0, $or$cond7 = 0, $or$cond9 = 0, $sext = 0, $sext165 = 0, $sext166 = 0, $sext167 = 0, $switch = 0, $tmp$i$i115 = 0, $tmp$i$i130 = 0, $tmp$i$i47 = 0, $tmp$i$i69 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $0 = sp + 488|0;
 $__gbuf = sp + 88|0;
 $__gb = sp + 80|0;
 $__gn = sp + 72|0;
 $__ge = sp + 68|0;
 $__pat = sp + 496|0;
 $__dp = sp + 493|0;
 $__ts = sp + 492|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (107);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd);
 $14 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wn>>2] = $14;
 $15 = ((($__ct)) + 8|0);
 $16 = ((($__psn)) + 4|0);
 $17 = ((($__nsn)) + 4|0);
 $18 = ((($__nsn)) + 8|0);
 $19 = ((($__nsn)) + 1|0);
 $20 = ((($__psn)) + 8|0);
 $21 = ((($__psn)) + 1|0);
 $22 = $__flags & 512;
 $23 = ($22|0)!=(0);
 $24 = ((($__sym)) + 8|0);
 $25 = ((($__sym)) + 1|0);
 $26 = ((($__sym)) + 4|0);
 $27 = ((($__spaces)) + 4|0);
 $28 = ((($__spaces)) + 8|0);
 $29 = ((($__spaces)) + 1|0);
 $30 = ((($__pat)) + 3|0);
 $31 = ((($__grp)) + 4|0);
 $750 = $__gbuf;$__p$0253 = 0;$__trailing_sign$0255 = 0;
 L1: while(1) {
  $32 = HEAP32[$__b>>2]|0;
  $33 = ($32|0)==(0|0);
  do {
   if ($33) {
    $44 = 0;
   } else {
    $34 = ((($32)) + 12|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ((($32)) + 16|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($35|0)==($37|0);
    if ($38) {
     $39 = HEAP32[$32>>2]|0;
     $40 = ((($39)) + 36|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = (FUNCTION_TABLE_ii[$41 & 63]($32)|0);
     $43 = ($42|0)==(-1);
     if ($43) {
      HEAP32[$__b>>2] = 0;
      $44 = 0;
      break;
     } else {
      $$pre$i$i$i30 = HEAP32[$__b>>2]|0;
      $44 = $$pre$i$i$i30;
      break;
     }
    } else {
     $44 = $32;
    }
   }
  } while(0);
  $45 = ($44|0)==(0|0);
  $46 = HEAP32[$__e>>2]|0;
  $47 = ($46|0)==(0|0);
  do {
   if ($47) {
    label = 12;
   } else {
    $48 = ((($46)) + 12|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ((($46)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if (!($52)) {
     if ($45) {
      $751 = $46;
      break;
     } else {
      $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
      label = 202;
      break L1;
     }
    }
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 36|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (FUNCTION_TABLE_ii[$55 & 63]($46)|0);
    $57 = ($56|0)==(-1);
    if ($57) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($45) {
      $751 = $46;
      break;
     } else {
      $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
      label = 202;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($45) {
    $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
    label = 202;
    break;
   } else {
    $751 = 0;
   }
  }
  $58 = (($__pat) + ($__p$0253)|0);
  $59 = HEAP8[$58>>0]|0;
  $60 = $59 << 24 >> 24;
  L21: do {
   switch ($60|0) {
   case 2:  {
    $304 = ($__trailing_sign$0255|0)!=(0|0);
    $305 = ($__p$0253>>>0)<(2);
    $or$cond = $305 | $304;
    if (!($or$cond)) {
     $306 = ($__p$0253|0)==(2);
     $307 = HEAP8[$30>>0]|0;
     $308 = ($307<<24>>24)!=(0);
     $309 = $306 & $308;
     $brmerge = $23 | $309;
     if (!($brmerge)) {
      $752 = $750;$__trailing_sign$1 = 0;
      break L21;
     }
    }
    $310 = HEAP8[$__sym>>0]|0;
    $311 = $310 & 1;
    $312 = ($311<<24>>24)==(0);
    $313 = HEAP32[$24>>2]|0;
    $314 = $312 ? $25 : $313;
    $315 = $314;
    $316 = ($__p$0253|0)==(0);
    L26: do {
     if ($316) {
      $$ph = $315;
     } else {
      $327 = (($__p$0253) + -1)|0;
      $328 = (($__pat) + ($327)|0);
      $329 = HEAP8[$328>>0]|0;
      $switch = ($329&255)<(2);
      if ($switch) {
       $330 = HEAP32[$26>>2]|0;
       $331 = $310&255;
       $332 = $331 >>> 1;
       $333 = $312 ? $332 : $330;
       $334 = (($314) + ($333)|0);
       $335 = HEAP32[$15>>2]|0;
       $336 = ($333|0)==(0);
       L29: do {
        if ($336) {
         $$lcssa223 = $315;
        } else {
         $338 = $314;$754 = $315;
         while(1) {
          $337 = HEAP8[$338>>0]|0;
          $isascii1$i140 = ($337<<24>>24)>(-1);
          if (!($isascii1$i140)) {
           $$lcssa223 = $754;
           break L29;
          }
          $339 = $337 << 24 >> 24;
          $340 = (($335) + ($339<<1)|0);
          $341 = HEAP16[$340>>1]|0;
          $342 = $341 & 8192;
          $343 = ($342<<16>>16)==(0);
          if ($343) {
           $$lcssa223 = $754;
           break L29;
          }
          $344 = ((($338)) + 1|0);
          $345 = $344;
          $346 = ($344|0)==($334|0);
          if ($346) {
           $$lcssa223 = $345;
           break;
          } else {
           $338 = $344;$754 = $345;
          }
         }
        }
       } while(0);
       $347 = (($$lcssa223) - ($315))|0;
       $348 = HEAP8[$__spaces>>0]|0;
       $349 = $348 & 1;
       $350 = ($349<<24>>24)==(0);
       $351 = HEAP32[$27>>2]|0;
       $352 = $348&255;
       $353 = $352 >>> 1;
       $354 = $350 ? $353 : $351;
       $355 = ($354>>>0)<($347>>>0);
       if ($355) {
        $$ph = $315;
       } else {
        $356 = HEAP32[$28>>2]|0;
        $357 = $350 ? $29 : $356;
        $358 = (($357) + ($354)|0);
        $359 = ($$lcssa223|0)==($315|0);
        if ($359) {
         $$ph = $$lcssa223;
        } else {
         $$sum = (($354) - ($347))|0;
         $360 = (($357) + ($$sum)|0);
         $$in241 = $314;$362 = $360;
         while(1) {
          $361 = HEAP8[$362>>0]|0;
          $363 = HEAP8[$$in241>>0]|0;
          $364 = ($361<<24>>24)==($363<<24>>24);
          if (!($364)) {
           $$ph = $315;
           break L26;
          }
          $365 = ((($362)) + 1|0);
          $366 = ((($$in241)) + 1|0);
          $367 = ($365|0)==($358|0);
          if ($367) {
           $$ph = $$lcssa223;
           break;
          } else {
           $$in241 = $366;$362 = $365;
          }
         }
        }
       }
      } else {
       $$ph = $315;
      }
     }
    } while(0);
    $317 = $310 & 1;
    $318 = ($317<<24>>24)==(0);
    $319 = HEAP32[$26>>2]|0;
    $320 = $310&255;
    $321 = $320 >>> 1;
    $322 = $318 ? $25 : $313;
    $323 = $318 ? $321 : $319;
    $324 = (($322) + ($323)|0);
    $325 = $$ph;
    $326 = ($325|0)==($324|0);
    L41: do {
     if ($326) {
      $$lcssa176 = $324;
     } else {
      $$pre$i2$i$i128246 = $751;$382 = $751;$409 = $325;
      while(1) {
       $368 = HEAP32[$__b>>2]|0;
       $369 = ($368|0)==(0|0);
       do {
        if ($369) {
         $380 = 0;
        } else {
         $370 = ((($368)) + 12|0);
         $371 = HEAP32[$370>>2]|0;
         $372 = ((($368)) + 16|0);
         $373 = HEAP32[$372>>2]|0;
         $374 = ($371|0)==($373|0);
         if ($374) {
          $375 = HEAP32[$368>>2]|0;
          $376 = ((($375)) + 36|0);
          $377 = HEAP32[$376>>2]|0;
          $378 = (FUNCTION_TABLE_ii[$377 & 63]($368)|0);
          $379 = ($378|0)==(-1);
          if ($379) {
           HEAP32[$__b>>2] = 0;
           $380 = 0;
           break;
          } else {
           $$pre$i$i$i124 = HEAP32[$__b>>2]|0;
           $380 = $$pre$i$i$i124;
           break;
          }
         } else {
          $380 = $368;
         }
        }
       } while(0);
       $381 = ($380|0)==(0|0);
       $383 = ($382|0)==(0|0);
       do {
        if ($383) {
         $$pre$i2$i$i128193 = $$pre$i2$i$i128246;
         label = 107;
        } else {
         $384 = ((($382)) + 12|0);
         $385 = HEAP32[$384>>2]|0;
         $386 = ((($382)) + 16|0);
         $387 = HEAP32[$386>>2]|0;
         $388 = ($385|0)==($387|0);
         if (!($388)) {
          if ($381) {
           $$pre$i2$i$i128192 = $$pre$i2$i$i128246;$755 = $382;
           break;
          } else {
           $$lcssa176 = $409;
           break L41;
          }
         }
         $389 = HEAP32[$382>>2]|0;
         $390 = ((($389)) + 36|0);
         $391 = HEAP32[$390>>2]|0;
         $392 = (FUNCTION_TABLE_ii[$391 & 63]($382)|0);
         $393 = ($392|0)==(-1);
         if ($393) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i128193 = 0;
          label = 107;
          break;
         } else {
          $394 = ($$pre$i2$i$i128246|0)==(0|0);
          $tmp$i$i130 = $381 ^ $394;
          if ($tmp$i$i130) {
           $$pre$i2$i$i128192 = $$pre$i2$i$i128246;$755 = $$pre$i2$i$i128246;
           break;
          } else {
           $$lcssa176 = $409;
           break L41;
          }
         }
        }
       } while(0);
       if ((label|0) == 107) {
        label = 0;
        if ($381) {
         $$lcssa176 = $409;
         break L41;
        } else {
         $$pre$i2$i$i128192 = $$pre$i2$i$i128193;$755 = 0;
        }
       }
       $395 = HEAP32[$__b>>2]|0;
       $396 = ((($395)) + 12|0);
       $397 = HEAP32[$396>>2]|0;
       $398 = ((($395)) + 16|0);
       $399 = HEAP32[$398>>2]|0;
       $400 = ($397|0)==($399|0);
       if ($400) {
        $401 = HEAP32[$395>>2]|0;
        $402 = ((($401)) + 36|0);
        $403 = HEAP32[$402>>2]|0;
        $404 = (FUNCTION_TABLE_ii[$403 & 63]($395)|0);
        $$0$i$i120 = $404;
       } else {
        $405 = HEAP8[$397>>0]|0;
        $406 = $405&255;
        $$0$i$i120 = $406;
       }
       $407 = $$0$i$i120&255;
       $408 = HEAP8[$409>>0]|0;
       $410 = ($407<<24>>24)==($408<<24>>24);
       if (!($410)) {
        $$lcssa176 = $409;
        break L41;
       }
       $411 = HEAP32[$__b>>2]|0;
       $412 = ((($411)) + 12|0);
       $413 = HEAP32[$412>>2]|0;
       $414 = ((($411)) + 16|0);
       $415 = HEAP32[$414>>2]|0;
       $416 = ($413|0)==($415|0);
       if ($416) {
        $417 = HEAP32[$411>>2]|0;
        $418 = ((($417)) + 40|0);
        $419 = HEAP32[$418>>2]|0;
        (FUNCTION_TABLE_ii[$419 & 63]($411)|0);
       } else {
        $420 = ((($413)) + 1|0);
        HEAP32[$412>>2] = $420;
       }
       $421 = ((($409)) + 1|0);
       $$pre190 = HEAP8[$__sym>>0]|0;
       $$pre191 = HEAP32[$24>>2]|0;
       $422 = $$pre190 & 1;
       $423 = ($422<<24>>24)==(0);
       $424 = HEAP32[$26>>2]|0;
       $425 = $$pre190&255;
       $426 = $425 >>> 1;
       $427 = $423 ? $25 : $$pre191;
       $428 = $423 ? $426 : $424;
       $429 = (($427) + ($428)|0);
       $430 = ($421|0)==($429|0);
       if ($430) {
        $$lcssa176 = $429;
        break;
       } else {
        $$pre$i2$i$i128246 = $$pre$i2$i$i128192;$382 = $755;$409 = $421;
       }
      }
     }
    } while(0);
    if ($23) {
     $431 = HEAP8[$__sym>>0]|0;
     $432 = $431 & 1;
     $433 = ($432<<24>>24)==(0);
     $434 = HEAP32[$24>>2]|0;
     $435 = HEAP32[$26>>2]|0;
     $436 = $431&255;
     $437 = $436 >>> 1;
     $438 = $433 ? $25 : $434;
     $439 = $433 ? $437 : $435;
     $440 = (($438) + ($439)|0);
     $441 = ($$lcssa176|0)==($440|0);
     if ($441) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
     } else {
      label = 119;
      break L1;
     }
    } else {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    }
    break;
   }
   case 0:  {
    $97 = ($__p$0253|0)==(3);
    if ($97) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $$pre$i2$i$i45 = $751;$112 = $751;
     label = 28;
    }
    break;
   }
   case 4:  {
    $61 = HEAP8[$__ts>>0]|0;
    $$pre$i2$i$i113 = $751;$458 = $751;$507 = $750;$__ng$0 = 0;
    L75: while(1) {
     $444 = HEAP32[$__b>>2]|0;
     $445 = ($444|0)==(0|0);
     do {
      if ($445) {
       $456 = 0;
      } else {
       $446 = ((($444)) + 12|0);
       $447 = HEAP32[$446>>2]|0;
       $448 = ((($444)) + 16|0);
       $449 = HEAP32[$448>>2]|0;
       $450 = ($447|0)==($449|0);
       if ($450) {
        $451 = HEAP32[$444>>2]|0;
        $452 = ((($451)) + 36|0);
        $453 = HEAP32[$452>>2]|0;
        $454 = (FUNCTION_TABLE_ii[$453 & 63]($444)|0);
        $455 = ($454|0)==(-1);
        if ($455) {
         HEAP32[$__b>>2] = 0;
         $456 = 0;
         break;
        } else {
         $$pre$i$i$i109 = HEAP32[$__b>>2]|0;
         $456 = $$pre$i$i$i109;
         break;
        }
       } else {
        $456 = $444;
       }
      }
     } while(0);
     $457 = ($456|0)==(0|0);
     $459 = ($458|0)==(0|0);
     do {
      if ($459) {
       $$pre$i2$i$i113183 = $$pre$i2$i$i113;
       label = 130;
      } else {
       $460 = ((($458)) + 12|0);
       $461 = HEAP32[$460>>2]|0;
       $462 = ((($458)) + 16|0);
       $463 = HEAP32[$462>>2]|0;
       $464 = ($461|0)==($463|0);
       if (!($464)) {
        if ($457) {
         $$pre$i2$i$i113185 = $$pre$i2$i$i113;$756 = $458;
         break;
        } else {
         $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113;$__ng$0$lcssa = $__ng$0;
         break L75;
        }
       }
       $465 = HEAP32[$458>>2]|0;
       $466 = ((($465)) + 36|0);
       $467 = HEAP32[$466>>2]|0;
       $468 = (FUNCTION_TABLE_ii[$467 & 63]($458)|0);
       $469 = ($468|0)==(-1);
       if ($469) {
        HEAP32[$__e>>2] = 0;
        $$pre$i2$i$i113183 = 0;
        label = 130;
        break;
       } else {
        $470 = ($$pre$i2$i$i113|0)==(0|0);
        $tmp$i$i115 = $457 ^ $470;
        if ($tmp$i$i115) {
         $$pre$i2$i$i113185 = $$pre$i2$i$i113;$756 = $$pre$i2$i$i113;
         break;
        } else {
         $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113;$__ng$0$lcssa = $__ng$0;
         break L75;
        }
       }
      }
     } while(0);
     if ((label|0) == 130) {
      label = 0;
      if ($457) {
       $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113183;$__ng$0$lcssa = $__ng$0;
       break;
      } else {
       $$pre$i2$i$i113185 = $$pre$i2$i$i113183;$756 = 0;
      }
     }
     $471 = HEAP32[$__b>>2]|0;
     $472 = ((($471)) + 12|0);
     $473 = HEAP32[$472>>2]|0;
     $474 = ((($471)) + 16|0);
     $475 = HEAP32[$474>>2]|0;
     $476 = ($473|0)==($475|0);
     if ($476) {
      $477 = HEAP32[$471>>2]|0;
      $478 = ((($477)) + 36|0);
      $479 = HEAP32[$478>>2]|0;
      $480 = (FUNCTION_TABLE_ii[$479 & 63]($471)|0);
      $$0$i$i103 = $480;
     } else {
      $481 = HEAP8[$473>>0]|0;
      $482 = $481&255;
      $$0$i$i103 = $482;
     }
     $483 = $$0$i$i103&255;
     $isascii1$i101 = ($483<<24>>24)>(-1);
     if ($isascii1$i101) {
      $sext165 = $$0$i$i103 << 24;
      $484 = $sext165 >> 24;
      $485 = HEAP32[$15>>2]|0;
      $486 = (($485) + ($484<<1)|0);
      $487 = HEAP16[$486>>1]|0;
      $488 = $487 & 2048;
      $489 = ($488<<16>>16)==(0);
      if ($489) {
       label = 140;
      } else {
       $490 = HEAP32[$__wn>>2]|0;
       $491 = HEAP32[$0>>2]|0;
       $492 = ($490|0)==($491|0);
       if ($492) {
        __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
        $$pre = HEAP32[$__wn>>2]|0;
        $494 = $$pre;
       } else {
        $494 = $490;
       }
       $493 = ((($494)) + 1|0);
       HEAP32[$__wn>>2] = $493;
       HEAP8[$494>>0] = $483;
       $495 = (($__ng$0) + 1)|0;
       $757 = $507;$__ng$1 = $495;
      }
     } else {
      label = 140;
     }
     if ((label|0) == 140) {
      label = 0;
      $496 = HEAP8[$__grp>>0]|0;
      $497 = $496 & 1;
      $498 = ($497<<24>>24)==(0);
      $499 = HEAP32[$31>>2]|0;
      $500 = $496&255;
      $501 = $500 >>> 1;
      $502 = $498 ? $501 : $499;
      $503 = ($502|0)!=(0);
      $504 = ($__ng$0|0)!=(0);
      $or$cond7 = $504 & $503;
      $505 = ($483<<24>>24)==($61<<24>>24);
      $or$cond13 = $505 & $or$cond7;
      if (!($or$cond13)) {
       $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113185;$__ng$0$lcssa = $__ng$0;
       break;
      }
      $506 = HEAP32[$__ge>>2]|0;
      $508 = ($507|0)==($506|0);
      if ($508) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
       $$pre186 = HEAP32[$__gn>>2]|0;
       $510 = $$pre186;
      } else {
       $510 = $507;
      }
      $509 = ((($510)) + 4|0);
      HEAP32[$__gn>>2] = $509;
      HEAP32[$510>>2] = $__ng$0;
      $757 = $509;$__ng$1 = 0;
     }
     $511 = HEAP32[$__b>>2]|0;
     $512 = ((($511)) + 12|0);
     $513 = HEAP32[$512>>2]|0;
     $514 = ((($511)) + 16|0);
     $515 = HEAP32[$514>>2]|0;
     $516 = ($513|0)==($515|0);
     if ($516) {
      $517 = HEAP32[$511>>2]|0;
      $518 = ((($517)) + 40|0);
      $519 = HEAP32[$518>>2]|0;
      (FUNCTION_TABLE_ii[$519 & 63]($511)|0);
      $$pre$i2$i$i113 = $$pre$i2$i$i113185;$458 = $756;$507 = $757;$__ng$0 = $__ng$1;
      continue;
     } else {
      $520 = ((($513)) + 1|0);
      HEAP32[$512>>2] = $520;
      $$pre$i2$i$i113 = $$pre$i2$i$i113185;$458 = $756;$507 = $757;$__ng$0 = $__ng$1;
      continue;
     }
    }
    $521 = HEAP32[$__gb>>2]|0;
    $522 = ($521|0)!=($$lcssa|0);
    $523 = ($__ng$0$lcssa|0)!=(0);
    $or$cond9 = $523 & $522;
    if ($or$cond9) {
     $524 = HEAP32[$__ge>>2]|0;
     $525 = ($$lcssa|0)==($524|0);
     if ($525) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
      $$pre187 = HEAP32[$__gn>>2]|0;
      $527 = $$pre187;
     } else {
      $527 = $$lcssa;
     }
     $526 = ((($527)) + 4|0);
     HEAP32[$__gn>>2] = $526;
     HEAP32[$527>>2] = $__ng$0$lcssa;
     $758 = $526;
    } else {
     $758 = $$lcssa;
    }
    $528 = HEAP32[$__fd>>2]|0;
    $529 = ($528|0)>(0);
    if ($529) {
     $530 = HEAP32[$__b>>2]|0;
     $531 = ($530|0)==(0|0);
     do {
      if ($531) {
       $542 = 0;
      } else {
       $532 = ((($530)) + 12|0);
       $533 = HEAP32[$532>>2]|0;
       $534 = ((($530)) + 16|0);
       $535 = HEAP32[$534>>2]|0;
       $536 = ($533|0)==($535|0);
       if ($536) {
        $537 = HEAP32[$530>>2]|0;
        $538 = ((($537)) + 36|0);
        $539 = HEAP32[$538>>2]|0;
        $540 = (FUNCTION_TABLE_ii[$539 & 63]($530)|0);
        $541 = ($540|0)==(-1);
        if ($541) {
         HEAP32[$__b>>2] = 0;
         $542 = 0;
         break;
        } else {
         $$pre$i$i$i79 = HEAP32[$__b>>2]|0;
         $542 = $$pre$i$i$i79;
         break;
        }
       } else {
        $542 = $530;
       }
      }
     } while(0);
     $543 = ($542|0)==(0|0);
     $544 = ($$pre$i2$i$i83|0)==(0|0);
     do {
      if ($544) {
       label = 162;
      } else {
       $545 = ((($$pre$i2$i$i83)) + 12|0);
       $546 = HEAP32[$545>>2]|0;
       $547 = ((($$pre$i2$i$i83)) + 16|0);
       $548 = HEAP32[$547>>2]|0;
       $549 = ($546|0)==($548|0);
       if ($549) {
        $550 = HEAP32[$$pre$i2$i$i83>>2]|0;
        $551 = ((($550)) + 36|0);
        $552 = HEAP32[$551>>2]|0;
        $553 = (FUNCTION_TABLE_ii[$552 & 63]($$pre$i2$i$i83)|0);
        $554 = ($553|0)==(-1);
        if ($554) {
         HEAP32[$__e>>2] = 0;
         label = 162;
         break;
        }
       }
       if ($543) {
        $759 = $$pre$i2$i$i83;
       } else {
        label = 167;
        break L1;
       }
      }
     } while(0);
     if ((label|0) == 162) {
      label = 0;
      if ($543) {
       label = 167;
       break L1;
      } else {
       $759 = 0;
      }
     }
     $555 = HEAP32[$__b>>2]|0;
     $556 = ((($555)) + 12|0);
     $557 = HEAP32[$556>>2]|0;
     $558 = ((($555)) + 16|0);
     $559 = HEAP32[$558>>2]|0;
     $560 = ($557|0)==($559|0);
     if ($560) {
      $561 = HEAP32[$555>>2]|0;
      $562 = ((($561)) + 36|0);
      $563 = HEAP32[$562>>2]|0;
      $564 = (FUNCTION_TABLE_ii[$563 & 63]($555)|0);
      $$0$i$i75 = $564;
     } else {
      $565 = HEAP8[$557>>0]|0;
      $566 = $565&255;
      $$0$i$i75 = $566;
     }
     $567 = $$0$i$i75&255;
     $568 = HEAP8[$__dp>>0]|0;
     $569 = ($567<<24>>24)==($568<<24>>24);
     if (!($569)) {
      label = 167;
      break L1;
     }
     $572 = HEAP32[$__b>>2]|0;
     $573 = ((($572)) + 12|0);
     $574 = HEAP32[$573>>2]|0;
     $575 = ((($572)) + 16|0);
     $576 = HEAP32[$575>>2]|0;
     $577 = ($574|0)==($576|0);
     if ($577) {
      $578 = HEAP32[$572>>2]|0;
      $579 = ((($578)) + 40|0);
      $580 = HEAP32[$579>>2]|0;
      (FUNCTION_TABLE_ii[$580 & 63]($572)|0);
     } else {
      $581 = ((($574)) + 1|0);
      HEAP32[$573>>2] = $581;
     }
     $582 = ($528|0)>(0);
     if ($582) {
      $$pre$i2$i$i67237 = $759;$597 = $759;$650 = $528;
      while(1) {
       $583 = HEAP32[$__b>>2]|0;
       $584 = ($583|0)==(0|0);
       do {
        if ($584) {
         $595 = 0;
        } else {
         $585 = ((($583)) + 12|0);
         $586 = HEAP32[$585>>2]|0;
         $587 = ((($583)) + 16|0);
         $588 = HEAP32[$587>>2]|0;
         $589 = ($586|0)==($588|0);
         if ($589) {
          $590 = HEAP32[$583>>2]|0;
          $591 = ((($590)) + 36|0);
          $592 = HEAP32[$591>>2]|0;
          $593 = (FUNCTION_TABLE_ii[$592 & 63]($583)|0);
          $594 = ($593|0)==(-1);
          if ($594) {
           HEAP32[$__b>>2] = 0;
           $595 = 0;
           break;
          } else {
           $$pre$i$i$i63 = HEAP32[$__b>>2]|0;
           $595 = $$pre$i$i$i63;
           break;
          }
         } else {
          $595 = $583;
         }
        }
       } while(0);
       $596 = ($595|0)==(0|0);
       $598 = ($597|0)==(0|0);
       do {
        if ($598) {
         $$pre$i2$i$i67188$ph = $$pre$i2$i$i67237;
         label = 182;
        } else {
         $599 = ((($597)) + 12|0);
         $600 = HEAP32[$599>>2]|0;
         $601 = ((($597)) + 16|0);
         $602 = HEAP32[$601>>2]|0;
         $603 = ($600|0)==($602|0);
         if (!($603)) {
          if ($596) {
           $$pre$i2$i$i67188205 = $$pre$i2$i$i67237;$760 = $597;
           break;
          } else {
           label = 189;
           break L1;
          }
         }
         $604 = HEAP32[$597>>2]|0;
         $605 = ((($604)) + 36|0);
         $606 = HEAP32[$605>>2]|0;
         $607 = (FUNCTION_TABLE_ii[$606 & 63]($597)|0);
         $608 = ($607|0)==(-1);
         if ($608) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i67188$ph = 0;
          label = 182;
          break;
         } else {
          $609 = ($$pre$i2$i$i67237|0)==(0|0);
          $tmp$i$i69 = $596 ^ $609;
          if ($tmp$i$i69) {
           $$pre$i2$i$i67188205 = $$pre$i2$i$i67237;$760 = $$pre$i2$i$i67237;
           break;
          } else {
           label = 189;
           break L1;
          }
         }
        }
       } while(0);
       if ((label|0) == 182) {
        label = 0;
        if ($596) {
         label = 189;
         break L1;
        } else {
         $$pre$i2$i$i67188205 = $$pre$i2$i$i67188$ph;$760 = 0;
        }
       }
       $610 = HEAP32[$__b>>2]|0;
       $611 = ((($610)) + 12|0);
       $612 = HEAP32[$611>>2]|0;
       $613 = ((($610)) + 16|0);
       $614 = HEAP32[$613>>2]|0;
       $615 = ($612|0)==($614|0);
       if ($615) {
        $616 = HEAP32[$610>>2]|0;
        $617 = ((($616)) + 36|0);
        $618 = HEAP32[$617>>2]|0;
        $619 = (FUNCTION_TABLE_ii[$618 & 63]($610)|0);
        $$0$i$i59 = $619;
       } else {
        $620 = HEAP8[$612>>0]|0;
        $621 = $620&255;
        $$0$i$i59 = $621;
       }
       $622 = $$0$i$i59&255;
       $isascii1$i57 = ($622<<24>>24)>(-1);
       if (!($isascii1$i57)) {
        label = 189;
        break L1;
       }
       $sext = $$0$i$i59 << 24;
       $623 = $sext >> 24;
       $624 = HEAP32[$15>>2]|0;
       $625 = (($624) + ($623<<1)|0);
       $626 = HEAP16[$625>>1]|0;
       $627 = $626 & 2048;
       $628 = ($627<<16>>16)==(0);
       if ($628) {
        label = 189;
        break L1;
       }
       $631 = HEAP32[$__wn>>2]|0;
       $632 = HEAP32[$0>>2]|0;
       $633 = ($631|0)==($632|0);
       if ($633) {
        __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       }
       $634 = HEAP32[$__b>>2]|0;
       $635 = ((($634)) + 12|0);
       $636 = HEAP32[$635>>2]|0;
       $637 = ((($634)) + 16|0);
       $638 = HEAP32[$637>>2]|0;
       $639 = ($636|0)==($638|0);
       if ($639) {
        $640 = HEAP32[$634>>2]|0;
        $641 = ((($640)) + 36|0);
        $642 = HEAP32[$641>>2]|0;
        $643 = (FUNCTION_TABLE_ii[$642 & 63]($634)|0);
        $$0$i$i27 = $643;
       } else {
        $644 = HEAP8[$636>>0]|0;
        $645 = $644&255;
        $$0$i$i27 = $645;
       }
       $646 = $$0$i$i27&255;
       $647 = HEAP32[$__wn>>2]|0;
       $648 = ((($647)) + 1|0);
       HEAP32[$__wn>>2] = $648;
       HEAP8[$647>>0] = $646;
       $649 = (($650) + -1)|0;
       HEAP32[$__fd>>2] = $649;
       $651 = HEAP32[$__b>>2]|0;
       $652 = ((($651)) + 12|0);
       $653 = HEAP32[$652>>2]|0;
       $654 = ((($651)) + 16|0);
       $655 = HEAP32[$654>>2]|0;
       $656 = ($653|0)==($655|0);
       if ($656) {
        $657 = HEAP32[$651>>2]|0;
        $658 = ((($657)) + 40|0);
        $659 = HEAP32[$658>>2]|0;
        (FUNCTION_TABLE_ii[$659 & 63]($651)|0);
       } else {
        $661 = ((($653)) + 1|0);
        HEAP32[$652>>2] = $661;
       }
       $660 = ($650|0)>(1);
       if ($660) {
        $$pre$i2$i$i67237 = $$pre$i2$i$i67188205;$597 = $760;$650 = $649;
       } else {
        break;
       }
      }
     }
    }
    $662 = HEAP32[$__wn>>2]|0;
    $663 = HEAP32[$__wb>>2]|0;
    $664 = ($662|0)==($663|0);
    if ($664) {
     label = 200;
     break L1;
    } else {
     $752 = $758;$__trailing_sign$1 = $__trailing_sign$0255;
    }
    break;
   }
   case 3:  {
    $158 = HEAP8[$__psn>>0]|0;
    $159 = $158 & 1;
    $160 = ($159<<24>>24)==(0);
    $161 = HEAP32[$16>>2]|0;
    $162 = $158&255;
    $163 = $162 >>> 1;
    $164 = $160 ? $163 : $161;
    $165 = HEAP8[$__nsn>>0]|0;
    $166 = $165 & 1;
    $167 = ($166<<24>>24)==(0);
    $168 = HEAP32[$17>>2]|0;
    $169 = $165&255;
    $170 = $169 >>> 1;
    $171 = $167 ? $170 : $168;
    $172 = (0 - ($171))|0;
    $173 = ($164|0)==($172|0);
    if ($173) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $174 = ($164|0)==(0);
     $175 = ($171|0)==(0);
     $or$cond222 = $174 | $175;
     $176 = HEAP32[$__b>>2]|0;
     $177 = ((($176)) + 12|0);
     $178 = HEAP32[$177>>2]|0;
     $179 = ((($176)) + 16|0);
     $180 = HEAP32[$179>>2]|0;
     $181 = ($178|0)==($180|0);
     if ($or$cond222) {
      if ($181) {
       $182 = HEAP32[$176>>2]|0;
       $183 = ((($182)) + 36|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = (FUNCTION_TABLE_ii[$184 & 63]($176)|0);
       $$0$i$i87 = $185;
      } else {
       $186 = HEAP8[$178>>0]|0;
       $187 = $186&255;
       $$0$i$i87 = $187;
      }
      $188 = $$0$i$i87&255;
      if ($174) {
       $214 = HEAP8[$__nsn>>0]|0;
       $215 = $214 & 1;
       $216 = ($215<<24>>24)==(0);
       $217 = HEAP32[$18>>2]|0;
       $218 = $216 ? $19 : $217;
       $219 = HEAP8[$218>>0]|0;
       $220 = ($188<<24>>24)==($219<<24>>24);
       if (!($220)) {
        $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
        break L21;
       }
       $221 = HEAP32[$__b>>2]|0;
       $222 = ((($221)) + 12|0);
       $223 = HEAP32[$222>>2]|0;
       $224 = ((($221)) + 16|0);
       $225 = HEAP32[$224>>2]|0;
       $226 = ($223|0)==($225|0);
       if ($226) {
        $227 = HEAP32[$221>>2]|0;
        $228 = ((($227)) + 40|0);
        $229 = HEAP32[$228>>2]|0;
        (FUNCTION_TABLE_ii[$229 & 63]($221)|0);
       } else {
        $230 = ((($223)) + 1|0);
        HEAP32[$222>>2] = $230;
       }
       HEAP8[$__neg>>0] = 1;
       $231 = HEAP8[$__nsn>>0]|0;
       $232 = $231 & 1;
       $233 = ($232<<24>>24)==(0);
       $234 = HEAP32[$17>>2]|0;
       $235 = $231&255;
       $236 = $235 >>> 1;
       $237 = $233 ? $236 : $234;
       $238 = ($237>>>0)>(1);
       $__nsn$__trailing_sign$0 = $238 ? $__nsn : $__trailing_sign$0255;
       $752 = $750;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
       break L21;
      }
      $189 = HEAP8[$__psn>>0]|0;
      $190 = $189 & 1;
      $191 = ($190<<24>>24)==(0);
      $192 = HEAP32[$20>>2]|0;
      $193 = $191 ? $21 : $192;
      $194 = HEAP8[$193>>0]|0;
      $195 = ($188<<24>>24)==($194<<24>>24);
      if (!($195)) {
       HEAP8[$__neg>>0] = 1;
       $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
       break L21;
      }
      $196 = HEAP32[$__b>>2]|0;
      $197 = ((($196)) + 12|0);
      $198 = HEAP32[$197>>2]|0;
      $199 = ((($196)) + 16|0);
      $200 = HEAP32[$199>>2]|0;
      $201 = ($198|0)==($200|0);
      if ($201) {
       $202 = HEAP32[$196>>2]|0;
       $203 = ((($202)) + 40|0);
       $204 = HEAP32[$203>>2]|0;
       (FUNCTION_TABLE_ii[$204 & 63]($196)|0);
      } else {
       $205 = ((($198)) + 1|0);
       HEAP32[$197>>2] = $205;
      }
      $206 = HEAP8[$__psn>>0]|0;
      $207 = $206 & 1;
      $208 = ($207<<24>>24)==(0);
      $209 = HEAP32[$16>>2]|0;
      $210 = $206&255;
      $211 = $210 >>> 1;
      $212 = $208 ? $211 : $209;
      $213 = ($212>>>0)>(1);
      $__psn$__trailing_sign$0 = $213 ? $__psn : $__trailing_sign$0255;
      $752 = $750;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      break L21;
     }
     if ($181) {
      $239 = HEAP32[$176>>2]|0;
      $240 = ((($239)) + 36|0);
      $241 = HEAP32[$240>>2]|0;
      $242 = (FUNCTION_TABLE_ii[$241 & 63]($176)|0);
      $$pre195 = HEAP8[$__psn>>0]|0;
      $$pre196 = HEAP32[$__b>>2]|0;
      $$phi$trans$insert = ((($$pre196)) + 12|0);
      $$pre197 = HEAP32[$$phi$trans$insert>>2]|0;
      $$phi$trans$insert198 = ((($$pre196)) + 16|0);
      $$pre199 = HEAP32[$$phi$trans$insert198>>2]|0;
      $$0$i$i95 = $242;$247 = $$pre195;$254 = $$pre196;$255 = $$pre197;$257 = $$pre199;
     } else {
      $243 = HEAP8[$178>>0]|0;
      $244 = $243&255;
      $$0$i$i95 = $244;$247 = $158;$254 = $176;$255 = $178;$257 = $180;
     }
     $245 = $$0$i$i95&255;
     $246 = $247 & 1;
     $248 = ($246<<24>>24)==(0);
     $249 = HEAP32[$20>>2]|0;
     $250 = $248 ? $21 : $249;
     $251 = HEAP8[$250>>0]|0;
     $252 = ($245<<24>>24)==($251<<24>>24);
     $253 = ((($254)) + 12|0);
     $256 = ($255|0)==($257|0);
     if ($252) {
      if ($256) {
       $258 = HEAP32[$254>>2]|0;
       $259 = ((($258)) + 40|0);
       $260 = HEAP32[$259>>2]|0;
       (FUNCTION_TABLE_ii[$260 & 63]($254)|0);
      } else {
       $261 = ((($255)) + 1|0);
       HEAP32[$253>>2] = $261;
      }
      $262 = HEAP8[$__psn>>0]|0;
      $263 = $262 & 1;
      $264 = ($263<<24>>24)==(0);
      $265 = HEAP32[$16>>2]|0;
      $266 = $262&255;
      $267 = $266 >>> 1;
      $268 = $264 ? $267 : $265;
      $269 = ($268>>>0)>(1);
      $__psn$__trailing_sign$010 = $269 ? $__psn : $__trailing_sign$0255;
      $752 = $750;$__trailing_sign$1 = $__psn$__trailing_sign$010;
      break L21;
     }
     if ($256) {
      $270 = HEAP32[$254>>2]|0;
      $271 = ((($270)) + 36|0);
      $272 = HEAP32[$271>>2]|0;
      $273 = (FUNCTION_TABLE_ii[$272 & 63]($254)|0);
      $$0$i$i105 = $273;
     } else {
      $274 = HEAP8[$255>>0]|0;
      $275 = $274&255;
      $$0$i$i105 = $275;
     }
     $276 = $$0$i$i105&255;
     $277 = HEAP8[$__nsn>>0]|0;
     $278 = $277 & 1;
     $279 = ($278<<24>>24)==(0);
     $280 = HEAP32[$18>>2]|0;
     $281 = $279 ? $19 : $280;
     $282 = HEAP8[$281>>0]|0;
     $283 = ($276<<24>>24)==($282<<24>>24);
     if (!($283)) {
      label = 82;
      break L1;
     }
     $284 = HEAP32[$__b>>2]|0;
     $285 = ((($284)) + 12|0);
     $286 = HEAP32[$285>>2]|0;
     $287 = ((($284)) + 16|0);
     $288 = HEAP32[$287>>2]|0;
     $289 = ($286|0)==($288|0);
     if ($289) {
      $290 = HEAP32[$284>>2]|0;
      $291 = ((($290)) + 40|0);
      $292 = HEAP32[$291>>2]|0;
      (FUNCTION_TABLE_ii[$292 & 63]($284)|0);
     } else {
      $293 = ((($286)) + 1|0);
      HEAP32[$285>>2] = $293;
     }
     HEAP8[$__neg>>0] = 1;
     $294 = HEAP8[$__nsn>>0]|0;
     $295 = $294 & 1;
     $296 = ($295<<24>>24)==(0);
     $297 = HEAP32[$17>>2]|0;
     $298 = $294&255;
     $299 = $298 >>> 1;
     $300 = $296 ? $299 : $297;
     $301 = ($300>>>0)>(1);
     $__nsn$__trailing_sign$011 = $301 ? $__nsn : $__trailing_sign$0255;
     $752 = $750;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
    }
    break;
   }
   case 1:  {
    $cond = ($__p$0253|0)==(3);
    if ($cond) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $62 = HEAP32[$__b>>2]|0;
     $63 = ((($62)) + 12|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = ((($62)) + 16|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = HEAP32[$62>>2]|0;
      $69 = ((($68)) + 36|0);
      $70 = HEAP32[$69>>2]|0;
      $71 = (FUNCTION_TABLE_ii[$70 & 63]($62)|0);
      $$0$i$i37 = $71;
     } else {
      $72 = HEAP8[$64>>0]|0;
      $73 = $72&255;
      $$0$i$i37 = $73;
     }
     $74 = $$0$i$i37&255;
     $isascii1$i = ($74<<24>>24)>(-1);
     if (!($isascii1$i)) {
      label = 26;
      break L1;
     }
     $sext167 = $$0$i$i37 << 24;
     $75 = $sext167 >> 24;
     $76 = HEAP32[$15>>2]|0;
     $77 = (($76) + ($75<<1)|0);
     $78 = HEAP16[$77>>1]|0;
     $79 = $78 & 8192;
     $80 = ($79<<16>>16)==(0);
     if ($80) {
      label = 26;
      break L1;
     }
     $81 = HEAP32[$__b>>2]|0;
     $82 = ((($81)) + 12|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ((($81)) + 16|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ($83|0)==($85|0);
     if ($86) {
      $87 = HEAP32[$81>>2]|0;
      $88 = ((($87)) + 40|0);
      $89 = HEAP32[$88>>2]|0;
      $90 = (FUNCTION_TABLE_ii[$89 & 63]($81)|0);
      $$0$i$i39 = $90;
     } else {
      $91 = ((($83)) + 1|0);
      HEAP32[$82>>2] = $91;
      $92 = HEAP8[$83>>0]|0;
      $93 = $92&255;
      $$0$i$i39 = $93;
     }
     $94 = $$0$i$i39&255;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$94);
     $$pre$i2$i$i45 = $751;$112 = $751;
     label = 28;
    }
    break;
   }
   default: {
    $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
   }
   }
  } while(0);
  L243: do {
   if ((label|0) == 28) {
    while(1) {
     label = 0;
     $98 = HEAP32[$__b>>2]|0;
     $99 = ($98|0)==(0|0);
     do {
      if ($99) {
       $110 = 0;
      } else {
       $100 = ((($98)) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       $102 = ((($98)) + 16|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ($101|0)==($103|0);
       if ($104) {
        $105 = HEAP32[$98>>2]|0;
        $106 = ((($105)) + 36|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = (FUNCTION_TABLE_ii[$107 & 63]($98)|0);
        $109 = ($108|0)==(-1);
        if ($109) {
         HEAP32[$__b>>2] = 0;
         $110 = 0;
         break;
        } else {
         $$pre$i$i$i41 = HEAP32[$__b>>2]|0;
         $110 = $$pre$i$i$i41;
         break;
        }
       } else {
        $110 = $98;
       }
      }
     } while(0);
     $111 = ($110|0)==(0|0);
     $113 = ($112|0)==(0|0);
     do {
      if ($113) {
       $$pre$i2$i$i45200 = $$pre$i2$i$i45;
       label = 38;
      } else {
       $114 = ((($112)) + 12|0);
       $115 = HEAP32[$114>>2]|0;
       $116 = ((($112)) + 16|0);
       $117 = HEAP32[$116>>2]|0;
       $118 = ($115|0)==($117|0);
       if (!($118)) {
        if ($111) {
         $$pre$i2$i$i45202 = $$pre$i2$i$i45;$753 = $112;
         break;
        } else {
         $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
         break L243;
        }
       }
       $119 = HEAP32[$112>>2]|0;
       $120 = ((($119)) + 36|0);
       $121 = HEAP32[$120>>2]|0;
       $122 = (FUNCTION_TABLE_ii[$121 & 63]($112)|0);
       $123 = ($122|0)==(-1);
       if ($123) {
        HEAP32[$__e>>2] = 0;
        $$pre$i2$i$i45200 = 0;
        label = 38;
        break;
       } else {
        $124 = ($$pre$i2$i$i45|0)==(0|0);
        $tmp$i$i47 = $111 ^ $124;
        if ($tmp$i$i47) {
         $$pre$i2$i$i45202 = $$pre$i2$i$i45;$753 = $$pre$i2$i$i45;
         break;
        } else {
         $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
         break L243;
        }
       }
      }
     } while(0);
     if ((label|0) == 38) {
      label = 0;
      if ($111) {
       $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
       break L243;
      } else {
       $$pre$i2$i$i45202 = $$pre$i2$i$i45200;$753 = 0;
      }
     }
     $125 = HEAP32[$__b>>2]|0;
     $126 = ((($125)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($125)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$125>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      $134 = (FUNCTION_TABLE_ii[$133 & 63]($125)|0);
      $$0$i$i49 = $134;
     } else {
      $135 = HEAP8[$127>>0]|0;
      $136 = $135&255;
      $$0$i$i49 = $136;
     }
     $137 = $$0$i$i49&255;
     $isascii1$i51 = ($137<<24>>24)>(-1);
     if (!($isascii1$i51)) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
      break L243;
     }
     $sext166 = $$0$i$i49 << 24;
     $138 = $sext166 >> 24;
     $139 = HEAP32[$15>>2]|0;
     $140 = (($139) + ($138<<1)|0);
     $141 = HEAP16[$140>>1]|0;
     $142 = $141 & 8192;
     $143 = ($142<<16>>16)==(0);
     if ($143) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
      break L243;
     }
     $144 = HEAP32[$__b>>2]|0;
     $145 = ((($144)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ((($144)) + 16|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ($146|0)==($148|0);
     if ($149) {
      $150 = HEAP32[$144>>2]|0;
      $151 = ((($150)) + 40|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (FUNCTION_TABLE_ii[$152 & 63]($144)|0);
      $$0$i$i55 = $153;
     } else {
      $154 = ((($146)) + 1|0);
      HEAP32[$145>>2] = $154;
      $155 = HEAP8[$146>>0]|0;
      $156 = $155&255;
      $$0$i$i55 = $156;
     }
     $157 = $$0$i$i55&255;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$157);
     $$pre$i2$i$i45 = $$pre$i2$i$i45202;$112 = $753;
     label = 28;
    }
   }
  } while(0);
  $667 = (($__p$0253) + 1)|0;
  $668 = ($667>>>0)<(4);
  if ($668) {
   $750 = $752;$__p$0253 = $667;$__trailing_sign$0255 = $__trailing_sign$1;
  } else {
   $$lcssa224 = $752;$__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 202;
   break;
  }
 }
 L275: do {
  if ((label|0) == 26) {
   $95 = HEAP32[$__err>>2]|0;
   $96 = $95 | 4;
   HEAP32[$__err>>2] = $96;
   $$0 = 0;
  }
  else if ((label|0) == 82) {
   $302 = HEAP32[$__err>>2]|0;
   $303 = $302 | 4;
   HEAP32[$__err>>2] = $303;
   $$0 = 0;
  }
  else if ((label|0) == 119) {
   $442 = HEAP32[$__err>>2]|0;
   $443 = $442 | 4;
   HEAP32[$__err>>2] = $443;
   $$0 = 0;
  }
  else if ((label|0) == 167) {
   $570 = HEAP32[$__err>>2]|0;
   $571 = $570 | 4;
   HEAP32[$__err>>2] = $571;
   $$0 = 0;
  }
  else if ((label|0) == 189) {
   $629 = HEAP32[$__err>>2]|0;
   $630 = $629 | 4;
   HEAP32[$__err>>2] = $630;
   $$0 = 0;
  }
  else if ((label|0) == 200) {
   $665 = HEAP32[$__err>>2]|0;
   $666 = $665 | 4;
   HEAP32[$__err>>2] = $666;
   $$0 = 0;
  }
  else if ((label|0) == 202) {
   $669 = ($__trailing_sign$0$lcssa|0)==(0|0);
   L279: do {
    if (!($669)) {
     $670 = ((($__trailing_sign$0$lcssa)) + 1|0);
     $671 = ((($__trailing_sign$0$lcssa)) + 8|0);
     $672 = ((($__trailing_sign$0$lcssa)) + 4|0);
     $__i$0 = 1;
     L281: while(1) {
      $673 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $674 = $673 & 1;
      $675 = ($674<<24>>24)==(0);
      if ($675) {
       $677 = $673&255;
       $678 = $677 >>> 1;
       $680 = $678;
      } else {
       $676 = HEAP32[$672>>2]|0;
       $680 = $676;
      }
      $679 = ($__i$0>>>0)<($680>>>0);
      if (!($679)) {
       break L279;
      }
      $681 = HEAP32[$__b>>2]|0;
      $682 = ($681|0)==(0|0);
      do {
       if ($682) {
        $693 = 0;
       } else {
        $683 = ((($681)) + 12|0);
        $684 = HEAP32[$683>>2]|0;
        $685 = ((($681)) + 16|0);
        $686 = HEAP32[$685>>2]|0;
        $687 = ($684|0)==($686|0);
        if ($687) {
         $688 = HEAP32[$681>>2]|0;
         $689 = ((($688)) + 36|0);
         $690 = HEAP32[$689>>2]|0;
         $691 = (FUNCTION_TABLE_ii[$690 & 63]($681)|0);
         $692 = ($691|0)==(-1);
         if ($692) {
          HEAP32[$__b>>2] = 0;
          $693 = 0;
          break;
         } else {
          $$pre$i$i$i = HEAP32[$__b>>2]|0;
          $693 = $$pre$i$i$i;
          break;
         }
        } else {
         $693 = $681;
        }
       }
      } while(0);
      $694 = ($693|0)==(0|0);
      $695 = HEAP32[$__e>>2]|0;
      $696 = ($695|0)==(0|0);
      do {
       if ($696) {
        label = 218;
       } else {
        $697 = ((($695)) + 12|0);
        $698 = HEAP32[$697>>2]|0;
        $699 = ((($695)) + 16|0);
        $700 = HEAP32[$699>>2]|0;
        $701 = ($698|0)==($700|0);
        if ($701) {
         $702 = HEAP32[$695>>2]|0;
         $703 = ((($702)) + 36|0);
         $704 = HEAP32[$703>>2]|0;
         $705 = (FUNCTION_TABLE_ii[$704 & 63]($695)|0);
         $706 = ($705|0)==(-1);
         if ($706) {
          HEAP32[$__e>>2] = 0;
          label = 218;
          break;
         }
        }
        if (!($694)) {
         break L281;
        }
       }
      } while(0);
      if ((label|0) == 218) {
       label = 0;
       if ($694) {
        break;
       }
      }
      $707 = HEAP32[$__b>>2]|0;
      $708 = ((($707)) + 12|0);
      $709 = HEAP32[$708>>2]|0;
      $710 = ((($707)) + 16|0);
      $711 = HEAP32[$710>>2]|0;
      $712 = ($709|0)==($711|0);
      if ($712) {
       $713 = HEAP32[$707>>2]|0;
       $714 = ((($713)) + 36|0);
       $715 = HEAP32[$714>>2]|0;
       $716 = (FUNCTION_TABLE_ii[$715 & 63]($707)|0);
       $$0$i$i = $716;
      } else {
       $717 = HEAP8[$709>>0]|0;
       $718 = $717&255;
       $$0$i$i = $718;
      }
      $719 = $$0$i$i&255;
      $720 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $721 = $720 & 1;
      $722 = ($721<<24>>24)==(0);
      if ($722) {
       $725 = $670;
      } else {
       $723 = HEAP32[$671>>2]|0;
       $725 = $723;
      }
      $724 = (($725) + ($__i$0)|0);
      $726 = HEAP8[$724>>0]|0;
      $727 = ($719<<24>>24)==($726<<24>>24);
      if (!($727)) {
       break;
      }
      $730 = (($__i$0) + 1)|0;
      $731 = HEAP32[$__b>>2]|0;
      $732 = ((($731)) + 12|0);
      $733 = HEAP32[$732>>2]|0;
      $734 = ((($731)) + 16|0);
      $735 = HEAP32[$734>>2]|0;
      $736 = ($733|0)==($735|0);
      if ($736) {
       $737 = HEAP32[$731>>2]|0;
       $738 = ((($737)) + 40|0);
       $739 = HEAP32[$738>>2]|0;
       (FUNCTION_TABLE_ii[$739 & 63]($731)|0);
       $__i$0 = $730;
       continue;
      } else {
       $740 = ((($733)) + 1|0);
       HEAP32[$732>>2] = $740;
       $__i$0 = $730;
       continue;
      }
     }
     $728 = HEAP32[$__err>>2]|0;
     $729 = $728 | 4;
     HEAP32[$__err>>2] = $729;
     $$0 = 0;
     break L275;
    }
   } while(0);
   $741 = HEAP32[$__gb>>2]|0;
   $742 = ($741|0)==($$lcssa224|0);
   if ($742) {
    $$0 = 1;
   } else {
    HEAP32[$__et>>2] = 0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$741,$$lcssa224,$__et);
    $743 = HEAP32[$__et>>2]|0;
    $744 = ($743|0)==(0);
    if ($744) {
     $$0 = 1;
    } else {
     $745 = HEAP32[$__err>>2]|0;
     $746 = $745 | 4;
     HEAP32[$__err>>2] = $746;
     $$0 = 0;
    }
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $747 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $748 = ($747|0)==(0|0);
 if (!($748)) {
  $749 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$749 & 127]($747);
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$02 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy = sp + 24|0;
 $__wbuf = sp + 32|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 28|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 100|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6176)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 $10 = $6;
 if ($9) {
  $11 = HEAP8[$__v>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   $17 = ((($__v)) + 1|0);
   HEAP8[$17>>0] = 0;
   HEAP8[$__v>>0] = 0;
  } else {
   $14 = ((($__v)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP8[$15>>0] = 0;
   $16 = ((($__v)) + 4|0);
   HEAP32[$16>>2] = 0;
  }
  $18 = HEAP8[$__neg>>0]|0;
  $19 = ($18<<24>>24)==(0);
  if (!($19)) {
   $20 = HEAP32[$5>>2]|0;
   $21 = ((($20)) + 28|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (FUNCTION_TABLE_iii[$22 & 15]($5,45)|0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__v,$23);
  }
  $24 = HEAP32[$5>>2]|0;
  $25 = ((($24)) + 28|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (FUNCTION_TABLE_iii[$26 & 15]($5,48)|0);
  $28 = HEAP32[$__wb>>2]|0;
  $29 = HEAP32[$__wn>>2]|0;
  $30 = ((($29)) + -1|0);
  $31 = ($28>>>0)<($30>>>0);
  L10: do {
   if ($31) {
    $__w$02 = $28;
    while(1) {
     $32 = HEAP8[$__w$02>>0]|0;
     $33 = ($32<<24>>24)==($27<<24>>24);
     if (!($33)) {
      $__w$0$lcssa = $__w$02;
      break L10;
     }
     $34 = ((($__w$02)) + 1|0);
     $35 = ($34>>>0)<($30>>>0);
     if ($35) {
      $__w$02 = $34;
     } else {
      $__w$0$lcssa = $34;
      break;
     }
    }
   } else {
    $__w$0$lcssa = $28;
   }
  } while(0);
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v,$__w$0$lcssa,$29)|0);
 }
 $36 = HEAP32[$__b>>2]|0;
 $37 = ($36|0)==(0|0);
 do {
  if ($37) {
   $48 = 0;
  } else {
   $38 = ((($36)) + 12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($36)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ($39|0)==($41|0);
   if ($42) {
    $43 = HEAP32[$36>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
    $47 = ($46|0)==(-1);
    if ($47) {
     HEAP32[$__b>>2] = 0;
     $48 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $48 = $$pre$i$i$i;
     break;
    }
   } else {
    $48 = $36;
   }
  }
 } while(0);
 $49 = ($48|0)==(0|0);
 $50 = ($6|0)==(0);
 do {
  if ($50) {
   label = 21;
  } else {
   $51 = ((($10)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($10)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = $6;
    $57 = HEAP32[$56>>2]|0;
    $58 = ((($57)) + 36|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (FUNCTION_TABLE_ii[$59 & 63]($10)|0);
    $61 = ($60|0)==(-1);
    if ($61) {
     HEAP32[$__e>>2] = 0;
     label = 21;
     break;
    }
   }
   if (!($49)) {
    label = 22;
   }
  }
 } while(0);
 if ((label|0) == 21) {
  if ($49) {
   label = 22;
  }
 }
 if ((label|0) == 22) {
  $62 = HEAP32[$__err>>2]|0;
  $63 = $62 | 2;
  HEAP32[$__err>>2] = $63;
 }
 $64 = HEAP32[$__b>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
 $65 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $66 = ($65|0)==(0|0);
 if (!($66)) {
  $67 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$67 & 127]($65);
 }
 STACKTOP = sp;return ($64|0);
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5760)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 63]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 63]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   $24 = ((($__nsn)) + 1|0);
   HEAP8[$24>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = ((($__nsn)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP8[$22>>0] = 0;
   $23 = ((($__nsn)) + 4|0);
   HEAP32[$23>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  HEAP32[$1>>2] = 0;
  $25 = ((($1)) + 4|0);
  HEAP32[$25>>2] = 0;
  $26 = ((($1)) + 8|0);
  HEAP32[$26>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $27 = HEAP32[$10>>2]|0;
  $28 = ((($27)) + 28|0);
  $29 = HEAP32[$28>>2]|0;
  FUNCTION_TABLE_vii[$29 & 63]($2,$10);
  $30 = HEAP8[$__psn>>0]|0;
  $31 = $30 & 1;
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $36 = ((($__psn)) + 1|0);
   HEAP8[$36>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $33 = ((($__psn)) + 8|0);
   $34 = HEAP32[$33>>2]|0;
   HEAP8[$34>>0] = 0;
   $35 = ((($__psn)) + 4|0);
   HEAP32[$35>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  HEAP32[$2>>2] = 0;
  $37 = ((($2)) + 4|0);
  HEAP32[$37>>2] = 0;
  $38 = ((($2)) + 8|0);
  HEAP32[$38>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $39 = HEAP32[$10>>2]|0;
  $40 = ((($39)) + 12|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = (FUNCTION_TABLE_ii[$41 & 63]($10)|0);
  HEAP8[$__dp>>0] = $42;
  $43 = HEAP32[$10>>2]|0;
  $44 = ((($43)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = (FUNCTION_TABLE_ii[$45 & 63]($10)|0);
  HEAP8[$__ts>>0] = $46;
  $47 = HEAP32[$10>>2]|0;
  $48 = ((($47)) + 20|0);
  $49 = HEAP32[$48>>2]|0;
  FUNCTION_TABLE_vii[$49 & 63]($3,$10);
  $50 = HEAP8[$__grp>>0]|0;
  $51 = $50 & 1;
  $52 = ($51<<24>>24)==(0);
  if ($52) {
   $56 = ((($__grp)) + 1|0);
   HEAP8[$56>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $53 = ((($__grp)) + 8|0);
   $54 = HEAP32[$53>>2]|0;
   HEAP8[$54>>0] = 0;
   $55 = ((($__grp)) + 4|0);
   HEAP32[$55>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  HEAP32[$3>>2] = 0;
  $57 = ((($3)) + 4|0);
  HEAP32[$57>>2] = 0;
  $58 = ((($3)) + 8|0);
  HEAP32[$58>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $59 = HEAP32[$10>>2]|0;
  $60 = ((($59)) + 24|0);
  $61 = HEAP32[$60>>2]|0;
  FUNCTION_TABLE_vii[$61 & 63]($4,$10);
  $62 = HEAP8[$__sym>>0]|0;
  $63 = $62 & 1;
  $64 = ($63<<24>>24)==(0);
  if ($64) {
   $68 = ((($__sym)) + 1|0);
   HEAP8[$68>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $65 = ((($__sym)) + 8|0);
   $66 = HEAP32[$65>>2]|0;
   HEAP8[$66>>0] = 0;
   $67 = ((($__sym)) + 4|0);
   HEAP32[$67>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $69 = ((($4)) + 4|0);
  HEAP32[$69>>2] = 0;
  $70 = ((($4)) + 8|0);
  HEAP32[$70>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $71 = HEAP32[$10>>2]|0;
  $72 = ((($71)) + 36|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = (FUNCTION_TABLE_ii[$73 & 63]($10)|0);
  $storemerge = $74;
 } else {
  $75 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5696)|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($76)) + 44|0);
  $78 = HEAP32[$77>>2]|0;
  FUNCTION_TABLE_vii[$78 & 63]($5,$75);
  $79 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$79&255;HEAP8[$__pat+1>>0]=($79>>8)&255;HEAP8[$__pat+2>>0]=($79>>16)&255;HEAP8[$__pat+3>>0]=$79>>24;
  $80 = HEAP32[$75>>2]|0;
  $81 = ((($80)) + 32|0);
  $82 = HEAP32[$81>>2]|0;
  FUNCTION_TABLE_vii[$82 & 63]($6,$75);
  $83 = HEAP8[$__nsn>>0]|0;
  $84 = $83 & 1;
  $85 = ($84<<24>>24)==(0);
  if ($85) {
   $89 = ((($__nsn)) + 1|0);
   HEAP8[$89>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $86 = ((($__nsn)) + 8|0);
   $87 = HEAP32[$86>>2]|0;
   HEAP8[$87>>0] = 0;
   $88 = ((($__nsn)) + 4|0);
   HEAP32[$88>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  HEAP32[$6>>2] = 0;
  $90 = ((($6)) + 4|0);
  HEAP32[$90>>2] = 0;
  $91 = ((($6)) + 8|0);
  HEAP32[$91>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $92 = HEAP32[$75>>2]|0;
  $93 = ((($92)) + 28|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_vii[$94 & 63]($7,$75);
  $95 = HEAP8[$__psn>>0]|0;
  $96 = $95 & 1;
  $97 = ($96<<24>>24)==(0);
  if ($97) {
   $101 = ((($__psn)) + 1|0);
   HEAP8[$101>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $98 = ((($__psn)) + 8|0);
   $99 = HEAP32[$98>>2]|0;
   HEAP8[$99>>0] = 0;
   $100 = ((($__psn)) + 4|0);
   HEAP32[$100>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  HEAP32[$7>>2] = 0;
  $102 = ((($7)) + 4|0);
  HEAP32[$102>>2] = 0;
  $103 = ((($7)) + 8|0);
  HEAP32[$103>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  $104 = HEAP32[$75>>2]|0;
  $105 = ((($104)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (FUNCTION_TABLE_ii[$106 & 63]($75)|0);
  HEAP8[$__dp>>0] = $107;
  $108 = HEAP32[$75>>2]|0;
  $109 = ((($108)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = (FUNCTION_TABLE_ii[$110 & 63]($75)|0);
  HEAP8[$__ts>>0] = $111;
  $112 = HEAP32[$75>>2]|0;
  $113 = ((($112)) + 20|0);
  $114 = HEAP32[$113>>2]|0;
  FUNCTION_TABLE_vii[$114 & 63]($8,$75);
  $115 = HEAP8[$__grp>>0]|0;
  $116 = $115 & 1;
  $117 = ($116<<24>>24)==(0);
  if ($117) {
   $121 = ((($__grp)) + 1|0);
   HEAP8[$121>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $118 = ((($__grp)) + 8|0);
   $119 = HEAP32[$118>>2]|0;
   HEAP8[$119>>0] = 0;
   $120 = ((($__grp)) + 4|0);
   HEAP32[$120>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  HEAP32[$8>>2] = 0;
  $122 = ((($8)) + 4|0);
  HEAP32[$122>>2] = 0;
  $123 = ((($8)) + 8|0);
  HEAP32[$123>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $124 = HEAP32[$75>>2]|0;
  $125 = ((($124)) + 24|0);
  $126 = HEAP32[$125>>2]|0;
  FUNCTION_TABLE_vii[$126 & 63]($9,$75);
  $127 = HEAP8[$__sym>>0]|0;
  $128 = $127 & 1;
  $129 = ($128<<24>>24)==(0);
  if ($129) {
   $133 = ((($__sym)) + 1|0);
   HEAP8[$133>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $130 = ((($__sym)) + 8|0);
   $131 = HEAP32[$130>>2]|0;
   HEAP8[$131>>0] = 0;
   $132 = ((($__sym)) + 4|0);
   HEAP32[$132>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  HEAP32[$9>>2] = 0;
  $134 = ((($9)) + 4|0);
  HEAP32[$134>>2] = 0;
  $135 = ((($9)) + 8|0);
  HEAP32[$135>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $136 = HEAP32[$75>>2]|0;
  $137 = ((($136)) + 36|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (FUNCTION_TABLE_ii[$138 & 63]($75)|0);
  $storemerge = $139;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$01$i$i22 = 0, $$__ig$0 = 0, $$lcssa = 0, $$not = 0, $$not16 = 0, $$pre = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$018 = 0, $__r$019 = 0;
 var $or$cond2 = 0, $or$cond2$lcssa = 0, $or$cond217 = 0, $or$cond220 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 $3 = ((($__grouping)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0&255;
 $6 = $5 >>> 1;
 $7 = $2 ? $6 : $4;
 $8 = ($7|0)==(0);
 L1: do {
  if (!($8)) {
   $9 = ($__g|0)==($__g_end|0);
   if ($9) {
    $19 = $0;$27 = $4;
   } else {
    $10 = ((($__g_end)) + -4|0);
    $11 = ($10>>>0)>($__g>>>0);
    if ($11) {
     $$01$i$i22 = $__g;$14 = $10;
     while(1) {
      $12 = HEAP32[$$01$i$i22>>2]|0;
      $13 = HEAP32[$14>>2]|0;
      HEAP32[$$01$i$i22>>2] = $13;
      HEAP32[$14>>2] = $12;
      $15 = ((($$01$i$i22)) + 4|0);
      $16 = ((($14)) + -4|0);
      $17 = ($15>>>0)<($16>>>0);
      if ($17) {
       $$01$i$i22 = $15;$14 = $16;
      } else {
       break;
      }
     }
    }
    $$pre = HEAP8[$__grouping>>0]|0;
    $$pre11 = HEAP32[$3>>2]|0;
    $19 = $$pre;$27 = $$pre11;
   }
   $18 = $19 & 1;
   $20 = ($18<<24>>24)==(0);
   $21 = ((($__grouping)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ((($__grouping)) + 1|0);
   $24 = $20 ? $23 : $22;
   $25 = $19&255;
   $26 = $25 >>> 1;
   $28 = $20 ? $26 : $27;
   $29 = (($24) + ($28)|0);
   $30 = ((($__g_end)) + -4|0);
   $31 = $29;
   $32 = ($30>>>0)>($__g>>>0);
   $33 = HEAP8[$24>>0]|0;
   $$not16 = ($33<<24>>24)<(1);
   $34 = ($33<<24>>24)==(127);
   $or$cond217 = $$not16 | $34;
   L10: do {
    if ($32) {
     $36 = $33;$__ig$018 = $24;$__r$019 = $__g;$or$cond220 = $or$cond217;
     while(1) {
      if (!($or$cond220)) {
       $35 = $36 << 24 >> 24;
       $37 = HEAP32[$__r$019>>2]|0;
       $38 = ($35|0)==($37|0);
       if (!($38)) {
        break;
       }
      }
      $39 = $__ig$018;
      $40 = (($31) - ($39))|0;
      $41 = ($40|0)>(1);
      $42 = ((($__ig$018)) + 1|0);
      $$__ig$0 = $41 ? $42 : $__ig$018;
      $43 = ((($__r$019)) + 4|0);
      $44 = ($43>>>0)<($30>>>0);
      $45 = HEAP8[$$__ig$0>>0]|0;
      $$not = ($45<<24>>24)<(1);
      $46 = ($45<<24>>24)==(127);
      $or$cond2 = $$not | $46;
      if ($44) {
       $36 = $45;$__ig$018 = $$__ig$0;$__r$019 = $43;$or$cond220 = $or$cond2;
      } else {
       $$lcssa = $45;$or$cond2$lcssa = $or$cond2;
       break L10;
      }
     }
     HEAP32[$__err>>2] = 4;
     break L1;
    } else {
     $$lcssa = $33;$or$cond2$lcssa = $or$cond217;
    }
   } while(0);
   if (!($or$cond2$lcssa)) {
    $47 = $$lcssa << 24 >> 24;
    $48 = HEAP32[$30>>2]|0;
    $49 = (($48) + -1)|0;
    $50 = ($49>>>0)<($47>>>0);
    if (!($50)) {
     HEAP32[$__err>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$24 = 0, $__neg = 0, $__w$03 = 0;
 var $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576|0;
 $$byval_copy = sp + 424|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 564|0;
 $0 = sp + 4|0;
 $__nbuf = sp + 464|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 400|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 if ($9) {
  $10 = HEAP32[$5>>2]|0;
  $11 = ((($10)) + 48|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 7]($5,9496,(9506),$$byval_copy)|0);
  $13 = HEAP32[$__wn>>2]|0;
  $14 = HEAP32[$__wb>>2]|0;
  $15 = $13;
  $16 = $14;
  $17 = (($15) - ($16))|0;
  $18 = ($17|0)>(392);
  if ($18) {
   $19 = $17 >> 2;
   $20 = (($19) + 2)|0;
   $21 = (_malloc($20)|0);
   $22 = $21;
   $23 = ($21|0)==(0|0);
   if ($23) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $52 = $22;$__nc$0 = $21;
   }
  } else {
   $52 = 0;$__nc$0 = $__nbuf;
  }
  $24 = HEAP8[$__neg>>0]|0;
  $25 = ($24<<24>>24)==(0);
  if ($25) {
   $__nc$1 = $__nc$0;
  } else {
   $26 = ((($__nc$0)) + 1|0);
   HEAP8[$__nc$0>>0] = 45;
   $__nc$1 = $26;
  }
  $27 = ((($$byval_copy)) + 40|0);
  $28 = $$byval_copy;
  $29 = ($14>>>0)<($13>>>0);
  if ($29) {
   $30 = ((($$byval_copy)) + 4|0);
   $31 = ((($30)) + 4|0);
   $32 = ((($31)) + 4|0);
   $33 = ((($32)) + 4|0);
   $34 = ((($33)) + 4|0);
   $35 = ((($34)) + 4|0);
   $36 = ((($35)) + 4|0);
   $37 = ((($36)) + 4|0);
   $38 = ((($37)) + 4|0);
   $__nc$24 = $__nc$1;$__w$03 = $14;
   while(1) {
    $39 = HEAP32[$__w$03>>2]|0;
    $40 = HEAP32[$$byval_copy>>2]|0;
    $41 = ($40|0)==($39|0);
    if ($41) {
     $$0$lcssa$i = $$byval_copy;
    } else {
     $42 = HEAP32[$30>>2]|0;
     $43 = ($42|0)==($39|0);
     if ($43) {
      $$0$lcssa$i = $30;
     } else {
      $88 = HEAP32[$31>>2]|0;
      $89 = ($88|0)==($39|0);
      if ($89) {
       $$0$lcssa$i = $31;
      } else {
       $90 = HEAP32[$32>>2]|0;
       $91 = ($90|0)==($39|0);
       if ($91) {
        $$0$lcssa$i = $32;
       } else {
        $92 = HEAP32[$33>>2]|0;
        $93 = ($92|0)==($39|0);
        if ($93) {
         $$0$lcssa$i = $33;
        } else {
         $94 = HEAP32[$34>>2]|0;
         $95 = ($94|0)==($39|0);
         if ($95) {
          $$0$lcssa$i = $34;
         } else {
          $96 = HEAP32[$35>>2]|0;
          $97 = ($96|0)==($39|0);
          if ($97) {
           $$0$lcssa$i = $35;
          } else {
           $98 = HEAP32[$36>>2]|0;
           $99 = ($98|0)==($39|0);
           if ($99) {
            $$0$lcssa$i = $36;
           } else {
            $100 = HEAP32[$37>>2]|0;
            $101 = ($100|0)==($39|0);
            if ($101) {
             $$0$lcssa$i = $37;
            } else {
             $102 = HEAP32[$38>>2]|0;
             $103 = ($102|0)==($39|0);
             $$ = $103 ? $38 : $27;
             $$0$lcssa$i = $$;
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $44 = $$0$lcssa$i;
    $45 = (($44) - ($28))|0;
    $46 = $45 >> 2;
    $47 = (9496 + ($46)|0);
    $48 = HEAP8[$47>>0]|0;
    HEAP8[$__nc$24>>0] = $48;
    $49 = ((($__w$03)) + 4|0);
    $50 = ((($__nc$24)) + 1|0);
    $$pre = HEAP32[$__wn>>2]|0;
    $51 = ($49>>>0)<($$pre>>>0);
    if ($51) {
     $__nc$24 = $50;$__w$03 = $49;
    } else {
     $__nc$2$lcssa = $50;
     break;
    }
   }
  } else {
   $__nc$2$lcssa = $__nc$1;
  }
  HEAP8[$__nc$2$lcssa>>0] = 0;
  HEAP32[$vararg_buffer>>2] = $__v;
  (_sscanf($__nbuf,9488,$vararg_buffer)|0);
  $53 = ($52|0)==(0);
  if (!($53)) {
   $54 = $52;
   _free($54);
  }
 }
 $55 = HEAP32[$__b>>2]|0;
 $56 = ($55|0)==(0|0);
 do {
  if ($56) {
   $104 = 1;
  } else {
   $57 = ((($55)) + 12|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ((($55)) + 16|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = ($58|0)==($60|0);
   if ($61) {
    $62 = HEAP32[$55>>2]|0;
    $63 = ((($62)) + 36|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = (FUNCTION_TABLE_ii[$64 & 63]($55)|0);
    $$0$i$i$i$i = $65;
   } else {
    $66 = HEAP32[$58>>2]|0;
    $$0$i$i$i$i = $66;
   }
   $67 = ($$0$i$i$i$i|0)==(-1);
   if ($67) {
    HEAP32[$__b>>2] = 0;
    $104 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $104 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $68 = HEAP32[$__e>>2]|0;
 $69 = ($68|0)==(0|0);
 do {
  if ($69) {
   label = 28;
  } else {
   $70 = ((($68)) + 12|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = ((($68)) + 16|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = ($71|0)==($73|0);
   if ($74) {
    $75 = HEAP32[$68>>2]|0;
    $76 = ((($75)) + 36|0);
    $77 = HEAP32[$76>>2]|0;
    $78 = (FUNCTION_TABLE_ii[$77 & 63]($68)|0);
    $$0$i$i1$i$i = $78;
   } else {
    $79 = HEAP32[$71>>2]|0;
    $$0$i$i1$i$i = $79;
   }
   $80 = ($$0$i$i1$i$i|0)==(-1);
   if ($80) {
    HEAP32[$__e>>2] = 0;
    label = 28;
    break;
   } else {
    if ($104) {
     break;
    } else {
     label = 30;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 28) {
  if ($104) {
   label = 30;
  }
 }
 if ((label|0) == 30) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 $83 = HEAP32[$__b>>2]|0;
 $84 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($84)|0);
 $85 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $86 = ($85|0)==(0|0);
 if (!($86)) {
  $87 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$87 & 127]($85);
 }
 STACKTOP = sp;return ($83|0);
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i118 = 0, $$0$i$i$i$i136 = 0, $$0$i$i$i$i28 = 0, $$0$i$i$i$i43 = 0, $$0$i$i$i$i68 = 0, $$0$i$i$i$i90 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i124 = 0, $$0$i$i1$i$i142 = 0, $$0$i$i1$i$i34 = 0, $$0$i$i1$i$i49 = 0, $$0$i$i1$i$i74 = 0, $$0$i$i1$i$i96 = 0, $$0$i$i105 = 0, $$0$i$i111 = 0, $$0$i$i116 = 0, $$0$i$i133 = 0;
 var $$0$i$i26 = 0, $$0$i$i40 = 0, $$0$i$i42 = 0, $$0$i$i56 = 0, $$0$i$i60 = 0, $$0$i$i65 = 0, $$0$i$i82 = 0, $$0$i$i87 = 0, $$in265 = 0, $$lcssa = 0, $$lcssa183 = 0, $$lcssa248 = 0, $$lcssa294 = 0, $$ph = 0, $$ph240 = 0, $$ph241 = 0, $$phi$trans$insert = 0, $$phi$trans$insert209 = 0, $$pre = 0, $$pre$i$i$i = 0;
 var $$pre$i$i$i120 = 0, $$pre$i$i$i138 = 0, $$pre$i$i$i30 = 0, $$pre$i$i$i45 = 0, $$pre$i$i$i70 = 0, $$pre$i$i$i92 = 0, $$pre$i3$i$i126 = 0, $$pre$i3$i$i126190 = 0, $$pre$i3$i$i126192 = 0, $$pre$i3$i$i144203 = 0, $$pre$i3$i$i144204 = 0, $$pre$i3$i$i144270 = 0, $$pre$i3$i$i51 = 0, $$pre$i3$i$i51211 = 0, $$pre$i3$i$i51213 = 0, $$pre$i3$i$i76195$ph = 0, $$pre$i3$i$i76195216 = 0, $$pre$i3$i$i76261 = 0, $$pre$i3$i$i98 = 0, $$pre193 = 0;
 var $$pre194 = 0, $$pre197 = 0, $$pre198 = 0, $$pre199 = 0, $$pre200 = 0, $$pre201 = 0, $$pre202 = 0, $$pre206 = 0, $$pre207 = 0, $$pre208 = 0, $$pre210 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0;
 var $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0276 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0278 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0;
 var $cond = 0, $or$cond = 0, $or$cond13 = 0, $or$cond239 = 0, $or$cond7 = 0, $or$cond9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i121 = 0, $phitmp$i$i$i139 = 0, $phitmp$i$i$i31 = 0, $phitmp$i$i$i46 = 0, $phitmp$i$i$i71 = 0, $phitmp$i$i$i93 = 0, $phitmp$i4$i$i127 = 0, $phitmp$i4$i$i145 = 0, $phitmp$i4$i$i52 = 0, $phitmp$i4$i$i77 = 0, $switch = 0, $tmp$i$i129 = 0, $tmp$i$i147 = 0;
 var $tmp$i$i54 = 0, $tmp$i$i79 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $0 = sp + 496|0;
 $__gbuf = sp + 96|0;
 $__gb = sp + 88|0;
 $__gn = sp + 80|0;
 $__ge = sp + 76|0;
 $__pat = sp + 500|0;
 $__dp = sp + 72|0;
 $__ts = sp + 68|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (107);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd);
 $14 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wn>>2] = $14;
 $15 = ((($__psn)) + 4|0);
 $16 = ((($__nsn)) + 4|0);
 $17 = ((($__nsn)) + 8|0);
 $18 = ((($__psn)) + 8|0);
 $19 = $__flags & 512;
 $20 = ($19|0)!=(0);
 $21 = ((($__sym)) + 8|0);
 $22 = ((($__sym)) + 4|0);
 $23 = ((($__spaces)) + 4|0);
 $24 = ((($__spaces)) + 8|0);
 $25 = ((($__pat)) + 3|0);
 $26 = ((($__grp)) + 4|0);
 $727 = $__gbuf;$__p$0276 = 0;$__trailing_sign$0278 = 0;
 L1: while(1) {
  $27 = HEAP32[$__b>>2]|0;
  $28 = ($27|0)==(0|0);
  do {
   if ($28) {
    $728 = 1;
   } else {
    $29 = ((($27)) + 12|0);
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($27)) + 16|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ($30|0)==($32|0);
    if ($33) {
     $34 = HEAP32[$27>>2]|0;
     $35 = ((($34)) + 36|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (FUNCTION_TABLE_ii[$36 & 63]($27)|0);
     $$0$i$i$i$i28 = $37;
    } else {
     $38 = HEAP32[$30>>2]|0;
     $$0$i$i$i$i28 = $38;
    }
    $39 = ($$0$i$i$i$i28|0)==(-1);
    if ($39) {
     HEAP32[$__b>>2] = 0;
     $728 = 1;
     break;
    } else {
     $$pre$i$i$i30 = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i31 = ($$pre$i$i$i30|0)==(0|0);
     $728 = $phitmp$i$i$i31;
     break;
    }
   }
  } while(0);
  $40 = HEAP32[$__e>>2]|0;
  $41 = ($40|0)==(0|0);
  do {
   if ($41) {
    label = 15;
   } else {
    $42 = ((($40)) + 12|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = ((($40)) + 16|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = ($43|0)==($45|0);
    if ($46) {
     $47 = HEAP32[$40>>2]|0;
     $48 = ((($47)) + 36|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = (FUNCTION_TABLE_ii[$49 & 63]($40)|0);
     $$0$i$i1$i$i34 = $50;
    } else {
     $51 = HEAP32[$43>>2]|0;
     $$0$i$i1$i$i34 = $51;
    }
    $52 = ($$0$i$i1$i$i34|0)==(-1);
    if ($52) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($728) {
      $729 = $40;
      break;
     } else {
      $$lcssa248 = $727;$__trailing_sign$0$lcssa = $__trailing_sign$0278;
      label = 217;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($728) {
    $$lcssa248 = $727;$__trailing_sign$0$lcssa = $__trailing_sign$0278;
    label = 217;
    break;
   } else {
    $729 = 0;
   }
  }
  $53 = (($__pat) + ($__p$0276)|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = $54 << 24 >> 24;
  L25: do {
   switch ($55|0) {
   case 3:  {
    $141 = HEAP8[$__psn>>0]|0;
    $142 = $141 & 1;
    $143 = ($142<<24>>24)==(0);
    $144 = HEAP32[$15>>2]|0;
    $145 = $141&255;
    $146 = $145 >>> 1;
    $147 = $143 ? $146 : $144;
    $148 = HEAP8[$__nsn>>0]|0;
    $149 = $148 & 1;
    $150 = ($149<<24>>24)==(0);
    $151 = HEAP32[$16>>2]|0;
    $152 = $148&255;
    $153 = $152 >>> 1;
    $154 = $150 ? $153 : $151;
    $155 = (0 - ($154))|0;
    $156 = ($147|0)==($155|0);
    if ($156) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $157 = ($147|0)==(0);
     $158 = ($154|0)==(0);
     $or$cond239 = $157 | $158;
     $159 = HEAP32[$__b>>2]|0;
     $160 = ((($159)) + 12|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = ((($159)) + 16|0);
     $163 = HEAP32[$162>>2]|0;
     $164 = ($161|0)==($163|0);
     if ($or$cond239) {
      if ($164) {
       $165 = HEAP32[$159>>2]|0;
       $166 = ((($165)) + 36|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = (FUNCTION_TABLE_ii[$167 & 63]($159)|0);
       $$0$i$i82 = $168;
      } else {
       $169 = HEAP32[$161>>2]|0;
       $$0$i$i82 = $169;
      }
      if ($157) {
       $195 = HEAP8[$__nsn>>0]|0;
       $196 = $195 & 1;
       $197 = ($196<<24>>24)==(0);
       $198 = HEAP32[$17>>2]|0;
       $199 = $197 ? $16 : $198;
       $200 = HEAP32[$199>>2]|0;
       $201 = ($$0$i$i82|0)==($200|0);
       if (!($201)) {
        $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
        break L25;
       }
       $202 = HEAP32[$__b>>2]|0;
       $203 = ((($202)) + 12|0);
       $204 = HEAP32[$203>>2]|0;
       $205 = ((($202)) + 16|0);
       $206 = HEAP32[$205>>2]|0;
       $207 = ($204|0)==($206|0);
       if ($207) {
        $208 = HEAP32[$202>>2]|0;
        $209 = ((($208)) + 40|0);
        $210 = HEAP32[$209>>2]|0;
        (FUNCTION_TABLE_ii[$210 & 63]($202)|0);
       } else {
        $211 = ((($204)) + 4|0);
        HEAP32[$203>>2] = $211;
       }
       HEAP8[$__neg>>0] = 1;
       $212 = HEAP8[$__nsn>>0]|0;
       $213 = $212 & 1;
       $214 = ($213<<24>>24)==(0);
       $215 = HEAP32[$16>>2]|0;
       $216 = $212&255;
       $217 = $216 >>> 1;
       $218 = $214 ? $217 : $215;
       $219 = ($218>>>0)>(1);
       $__nsn$__trailing_sign$0 = $219 ? $__nsn : $__trailing_sign$0278;
       $730 = $727;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
       break L25;
      }
      $170 = HEAP8[$__psn>>0]|0;
      $171 = $170 & 1;
      $172 = ($171<<24>>24)==(0);
      $173 = HEAP32[$18>>2]|0;
      $174 = $172 ? $15 : $173;
      $175 = HEAP32[$174>>2]|0;
      $176 = ($$0$i$i82|0)==($175|0);
      if (!($176)) {
       HEAP8[$__neg>>0] = 1;
       $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
       break L25;
      }
      $177 = HEAP32[$__b>>2]|0;
      $178 = ((($177)) + 12|0);
      $179 = HEAP32[$178>>2]|0;
      $180 = ((($177)) + 16|0);
      $181 = HEAP32[$180>>2]|0;
      $182 = ($179|0)==($181|0);
      if ($182) {
       $183 = HEAP32[$177>>2]|0;
       $184 = ((($183)) + 40|0);
       $185 = HEAP32[$184>>2]|0;
       (FUNCTION_TABLE_ii[$185 & 63]($177)|0);
      } else {
       $186 = ((($179)) + 4|0);
       HEAP32[$178>>2] = $186;
      }
      $187 = HEAP8[$__psn>>0]|0;
      $188 = $187 & 1;
      $189 = ($188<<24>>24)==(0);
      $190 = HEAP32[$15>>2]|0;
      $191 = $187&255;
      $192 = $191 >>> 1;
      $193 = $189 ? $192 : $190;
      $194 = ($193>>>0)>(1);
      $__psn$__trailing_sign$0 = $194 ? $__psn : $__trailing_sign$0278;
      $730 = $727;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      break L25;
     }
     if ($164) {
      $220 = HEAP32[$159>>2]|0;
      $221 = ((($220)) + 36|0);
      $222 = HEAP32[$221>>2]|0;
      $223 = (FUNCTION_TABLE_ii[$222 & 63]($159)|0);
      $$pre206 = HEAP8[$__psn>>0]|0;
      $$pre207 = HEAP32[$__b>>2]|0;
      $$phi$trans$insert = ((($$pre207)) + 12|0);
      $$pre208 = HEAP32[$$phi$trans$insert>>2]|0;
      $$phi$trans$insert209 = ((($$pre207)) + 16|0);
      $$pre210 = HEAP32[$$phi$trans$insert209>>2]|0;
      $$0$i$i105 = $223;$226 = $$pre206;$233 = $$pre207;$234 = $$pre208;$236 = $$pre210;
     } else {
      $224 = HEAP32[$161>>2]|0;
      $$0$i$i105 = $224;$226 = $141;$233 = $159;$234 = $161;$236 = $163;
     }
     $225 = $226 & 1;
     $227 = ($225<<24>>24)==(0);
     $228 = HEAP32[$18>>2]|0;
     $229 = $227 ? $15 : $228;
     $230 = HEAP32[$229>>2]|0;
     $231 = ($$0$i$i105|0)==($230|0);
     $232 = ((($233)) + 12|0);
     $235 = ($234|0)==($236|0);
     if ($231) {
      if ($235) {
       $237 = HEAP32[$233>>2]|0;
       $238 = ((($237)) + 40|0);
       $239 = HEAP32[$238>>2]|0;
       (FUNCTION_TABLE_ii[$239 & 63]($233)|0);
      } else {
       $240 = ((($234)) + 4|0);
       HEAP32[$232>>2] = $240;
      }
      $241 = HEAP8[$__psn>>0]|0;
      $242 = $241 & 1;
      $243 = ($242<<24>>24)==(0);
      $244 = HEAP32[$15>>2]|0;
      $245 = $241&255;
      $246 = $245 >>> 1;
      $247 = $243 ? $246 : $244;
      $248 = ($247>>>0)>(1);
      $__psn$__trailing_sign$010 = $248 ? $__psn : $__trailing_sign$0278;
      $730 = $727;$__trailing_sign$1 = $__psn$__trailing_sign$010;
      break L25;
     }
     if ($235) {
      $249 = HEAP32[$233>>2]|0;
      $250 = ((($249)) + 36|0);
      $251 = HEAP32[$250>>2]|0;
      $252 = (FUNCTION_TABLE_ii[$251 & 63]($233)|0);
      $$0$i$i111 = $252;
     } else {
      $253 = HEAP32[$234>>2]|0;
      $$0$i$i111 = $253;
     }
     $254 = HEAP8[$__nsn>>0]|0;
     $255 = $254 & 1;
     $256 = ($255<<24>>24)==(0);
     $257 = HEAP32[$17>>2]|0;
     $258 = $256 ? $16 : $257;
     $259 = HEAP32[$258>>2]|0;
     $260 = ($$0$i$i111|0)==($259|0);
     if (!($260)) {
      label = 86;
      break L1;
     }
     $261 = HEAP32[$__b>>2]|0;
     $262 = ((($261)) + 12|0);
     $263 = HEAP32[$262>>2]|0;
     $264 = ((($261)) + 16|0);
     $265 = HEAP32[$264>>2]|0;
     $266 = ($263|0)==($265|0);
     if ($266) {
      $267 = HEAP32[$261>>2]|0;
      $268 = ((($267)) + 40|0);
      $269 = HEAP32[$268>>2]|0;
      (FUNCTION_TABLE_ii[$269 & 63]($261)|0);
     } else {
      $270 = ((($263)) + 4|0);
      HEAP32[$262>>2] = $270;
     }
     HEAP8[$__neg>>0] = 1;
     $271 = HEAP8[$__nsn>>0]|0;
     $272 = $271 & 1;
     $273 = ($272<<24>>24)==(0);
     $274 = HEAP32[$16>>2]|0;
     $275 = $271&255;
     $276 = $275 >>> 1;
     $277 = $273 ? $276 : $274;
     $278 = ($277>>>0)>(1);
     $__nsn$__trailing_sign$011 = $278 ? $__nsn : $__trailing_sign$0278;
     $730 = $727;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
    }
    break;
   }
   case 4:  {
    $56 = HEAP32[$__ts>>2]|0;
    $$pre$i3$i$i126 = $729;$449 = $729;$495 = $727;$__ng$0 = 0;
    L71: while(1) {
     $436 = HEAP32[$__b>>2]|0;
     $437 = ($436|0)==(0|0);
     do {
      if ($437) {
       $462 = 1;
      } else {
       $438 = ((($436)) + 12|0);
       $439 = HEAP32[$438>>2]|0;
       $440 = ((($436)) + 16|0);
       $441 = HEAP32[$440>>2]|0;
       $442 = ($439|0)==($441|0);
       if ($442) {
        $443 = HEAP32[$436>>2]|0;
        $444 = ((($443)) + 36|0);
        $445 = HEAP32[$444>>2]|0;
        $446 = (FUNCTION_TABLE_ii[$445 & 63]($436)|0);
        $$0$i$i$i$i118 = $446;
       } else {
        $447 = HEAP32[$439>>2]|0;
        $$0$i$i$i$i118 = $447;
       }
       $448 = ($$0$i$i$i$i118|0)==(-1);
       if ($448) {
        HEAP32[$__b>>2] = 0;
        $462 = 1;
        break;
       } else {
        $$pre$i$i$i120 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i121 = ($$pre$i$i$i120|0)==(0|0);
        $462 = $phitmp$i$i$i121;
        break;
       }
      }
     } while(0);
     $450 = ($449|0)==(0|0);
     do {
      if ($450) {
       $$pre$i3$i$i126190 = $$pre$i3$i$i126;
       label = 140;
      } else {
       $451 = ((($449)) + 12|0);
       $452 = HEAP32[$451>>2]|0;
       $453 = ((($449)) + 16|0);
       $454 = HEAP32[$453>>2]|0;
       $455 = ($452|0)==($454|0);
       if ($455) {
        $456 = HEAP32[$449>>2]|0;
        $457 = ((($456)) + 36|0);
        $458 = HEAP32[$457>>2]|0;
        $459 = (FUNCTION_TABLE_ii[$458 & 63]($449)|0);
        $$0$i$i1$i$i124 = $459;
       } else {
        $460 = HEAP32[$452>>2]|0;
        $$0$i$i1$i$i124 = $460;
       }
       $461 = ($$0$i$i1$i$i124|0)==(-1);
       if ($461) {
        HEAP32[$__e>>2] = 0;
        $$pre$i3$i$i126190 = 0;
        label = 140;
        break;
       } else {
        $phitmp$i4$i$i127 = ($$pre$i3$i$i126|0)==(0|0);
        $tmp$i$i129 = $462 ^ $phitmp$i4$i$i127;
        if ($tmp$i$i129) {
         $$pre$i3$i$i126192 = $$pre$i3$i$i126;$734 = $$pre$i3$i$i126;
         break;
        } else {
         $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126;$__ng$0$lcssa = $__ng$0;
         break L71;
        }
       }
      }
     } while(0);
     if ((label|0) == 140) {
      label = 0;
      if ($462) {
       $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126190;$__ng$0$lcssa = $__ng$0;
       break;
      } else {
       $$pre$i3$i$i126192 = $$pre$i3$i$i126190;$734 = 0;
      }
     }
     $463 = HEAP32[$__b>>2]|0;
     $464 = ((($463)) + 12|0);
     $465 = HEAP32[$464>>2]|0;
     $466 = ((($463)) + 16|0);
     $467 = HEAP32[$466>>2]|0;
     $468 = ($465|0)==($467|0);
     if ($468) {
      $469 = HEAP32[$463>>2]|0;
      $470 = ((($469)) + 36|0);
      $471 = HEAP32[$470>>2]|0;
      $472 = (FUNCTION_TABLE_ii[$471 & 63]($463)|0);
      $$0$i$i116 = $472;
     } else {
      $473 = HEAP32[$465>>2]|0;
      $$0$i$i116 = $473;
     }
     $474 = HEAP32[$__ct>>2]|0;
     $475 = ((($474)) + 12|0);
     $476 = HEAP32[$475>>2]|0;
     $477 = (FUNCTION_TABLE_iiii[$476 & 31]($__ct,2048,$$0$i$i116)|0);
     if ($477) {
      $478 = HEAP32[$__wn>>2]|0;
      $479 = HEAP32[$0>>2]|0;
      $480 = ($478|0)==($479|0);
      if ($480) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       $$pre193 = HEAP32[$__wn>>2]|0;
       $482 = $$pre193;
      } else {
       $482 = $478;
      }
      $481 = ((($482)) + 4|0);
      HEAP32[$__wn>>2] = $481;
      HEAP32[$482>>2] = $$0$i$i116;
      $483 = (($__ng$0) + 1)|0;
      $735 = $495;$__ng$1 = $483;
     } else {
      $484 = HEAP8[$__grp>>0]|0;
      $485 = $484 & 1;
      $486 = ($485<<24>>24)==(0);
      $487 = HEAP32[$26>>2]|0;
      $488 = $484&255;
      $489 = $488 >>> 1;
      $490 = $486 ? $489 : $487;
      $491 = ($490|0)!=(0);
      $492 = ($__ng$0|0)!=(0);
      $or$cond7 = $492 & $491;
      $493 = ($$0$i$i116|0)==($56|0);
      $or$cond13 = $493 & $or$cond7;
      if (!($or$cond13)) {
       $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126192;$__ng$0$lcssa = $__ng$0;
       break;
      }
      $494 = HEAP32[$__ge>>2]|0;
      $496 = ($495|0)==($494|0);
      if ($496) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
       $$pre = HEAP32[$__gn>>2]|0;
       $498 = $$pre;
      } else {
       $498 = $495;
      }
      $497 = ((($498)) + 4|0);
      HEAP32[$__gn>>2] = $497;
      HEAP32[$498>>2] = $__ng$0;
      $735 = $497;$__ng$1 = 0;
     }
     $499 = HEAP32[$__b>>2]|0;
     $500 = ((($499)) + 12|0);
     $501 = HEAP32[$500>>2]|0;
     $502 = ((($499)) + 16|0);
     $503 = HEAP32[$502>>2]|0;
     $504 = ($501|0)==($503|0);
     if ($504) {
      $505 = HEAP32[$499>>2]|0;
      $506 = ((($505)) + 40|0);
      $507 = HEAP32[$506>>2]|0;
      (FUNCTION_TABLE_ii[$507 & 63]($499)|0);
      $$pre$i3$i$i126 = $$pre$i3$i$i126192;$449 = $734;$495 = $735;$__ng$0 = $__ng$1;
      continue;
     } else {
      $508 = ((($501)) + 4|0);
      HEAP32[$500>>2] = $508;
      $$pre$i3$i$i126 = $$pre$i3$i$i126192;$449 = $734;$495 = $735;$__ng$0 = $__ng$1;
      continue;
     }
    }
    $509 = HEAP32[$__gb>>2]|0;
    $510 = ($509|0)!=($$lcssa|0);
    $511 = ($__ng$0$lcssa|0)!=(0);
    $or$cond9 = $511 & $510;
    if ($or$cond9) {
     $512 = HEAP32[$__ge>>2]|0;
     $513 = ($$lcssa|0)==($512|0);
     if ($513) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
      $$pre194 = HEAP32[$__gn>>2]|0;
      $515 = $$pre194;
     } else {
      $515 = $$lcssa;
     }
     $514 = ((($515)) + 4|0);
     HEAP32[$__gn>>2] = $514;
     HEAP32[$515>>2] = $__ng$0$lcssa;
     $736 = $514;
    } else {
     $736 = $$lcssa;
    }
    $516 = HEAP32[$__fd>>2]|0;
    $517 = ($516|0)>(0);
    if ($517) {
     $518 = HEAP32[$__b>>2]|0;
     $519 = ($518|0)==(0|0);
     do {
      if ($519) {
       $737 = 1;
      } else {
       $520 = ((($518)) + 12|0);
       $521 = HEAP32[$520>>2]|0;
       $522 = ((($518)) + 16|0);
       $523 = HEAP32[$522>>2]|0;
       $524 = ($521|0)==($523|0);
       if ($524) {
        $525 = HEAP32[$518>>2]|0;
        $526 = ((($525)) + 36|0);
        $527 = HEAP32[$526>>2]|0;
        $528 = (FUNCTION_TABLE_ii[$527 & 63]($518)|0);
        $$0$i$i$i$i90 = $528;
       } else {
        $529 = HEAP32[$521>>2]|0;
        $$0$i$i$i$i90 = $529;
       }
       $530 = ($$0$i$i$i$i90|0)==(-1);
       if ($530) {
        HEAP32[$__b>>2] = 0;
        $737 = 1;
        break;
       } else {
        $$pre$i$i$i92 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i93 = ($$pre$i$i$i92|0)==(0|0);
        $737 = $phitmp$i$i$i93;
        break;
       }
      }
     } while(0);
     $531 = ($$pre$i3$i$i98|0)==(0|0);
     do {
      if ($531) {
       label = 174;
      } else {
       $532 = ((($$pre$i3$i$i98)) + 12|0);
       $533 = HEAP32[$532>>2]|0;
       $534 = ((($$pre$i3$i$i98)) + 16|0);
       $535 = HEAP32[$534>>2]|0;
       $536 = ($533|0)==($535|0);
       if ($536) {
        $537 = HEAP32[$$pre$i3$i$i98>>2]|0;
        $538 = ((($537)) + 36|0);
        $539 = HEAP32[$538>>2]|0;
        $540 = (FUNCTION_TABLE_ii[$539 & 63]($$pre$i3$i$i98)|0);
        $$0$i$i1$i$i96 = $540;
       } else {
        $541 = HEAP32[$533>>2]|0;
        $$0$i$i1$i$i96 = $541;
       }
       $542 = ($$0$i$i1$i$i96|0)==(-1);
       if ($542) {
        HEAP32[$__e>>2] = 0;
        label = 174;
        break;
       } else {
        if ($737) {
         $738 = $$pre$i3$i$i98;
         break;
        } else {
         label = 180;
         break L1;
        }
       }
      }
     } while(0);
     if ((label|0) == 174) {
      label = 0;
      if ($737) {
       label = 180;
       break L1;
      } else {
       $738 = 0;
      }
     }
     $543 = HEAP32[$__b>>2]|0;
     $544 = ((($543)) + 12|0);
     $545 = HEAP32[$544>>2]|0;
     $546 = ((($543)) + 16|0);
     $547 = HEAP32[$546>>2]|0;
     $548 = ($545|0)==($547|0);
     if ($548) {
      $549 = HEAP32[$543>>2]|0;
      $550 = ((($549)) + 36|0);
      $551 = HEAP32[$550>>2]|0;
      $552 = (FUNCTION_TABLE_ii[$551 & 63]($543)|0);
      $$0$i$i87 = $552;
     } else {
      $553 = HEAP32[$545>>2]|0;
      $$0$i$i87 = $553;
     }
     $554 = HEAP32[$__dp>>2]|0;
     $555 = ($$0$i$i87|0)==($554|0);
     if (!($555)) {
      label = 180;
      break L1;
     }
     $558 = HEAP32[$__b>>2]|0;
     $559 = ((($558)) + 12|0);
     $560 = HEAP32[$559>>2]|0;
     $561 = ((($558)) + 16|0);
     $562 = HEAP32[$561>>2]|0;
     $563 = ($560|0)==($562|0);
     if ($563) {
      $564 = HEAP32[$558>>2]|0;
      $565 = ((($564)) + 40|0);
      $566 = HEAP32[$565>>2]|0;
      (FUNCTION_TABLE_ii[$566 & 63]($558)|0);
     } else {
      $567 = ((($560)) + 4|0);
      HEAP32[$559>>2] = $567;
     }
     $568 = ($516|0)>(0);
     if ($568) {
      $$pre$i3$i$i76261 = $738;$582 = $738;$630 = $516;
      while(1) {
       $569 = HEAP32[$__b>>2]|0;
       $570 = ($569|0)==(0|0);
       do {
        if ($570) {
         $595 = 1;
        } else {
         $571 = ((($569)) + 12|0);
         $572 = HEAP32[$571>>2]|0;
         $573 = ((($569)) + 16|0);
         $574 = HEAP32[$573>>2]|0;
         $575 = ($572|0)==($574|0);
         if ($575) {
          $576 = HEAP32[$569>>2]|0;
          $577 = ((($576)) + 36|0);
          $578 = HEAP32[$577>>2]|0;
          $579 = (FUNCTION_TABLE_ii[$578 & 63]($569)|0);
          $$0$i$i$i$i68 = $579;
         } else {
          $580 = HEAP32[$572>>2]|0;
          $$0$i$i$i$i68 = $580;
         }
         $581 = ($$0$i$i$i$i68|0)==(-1);
         if ($581) {
          HEAP32[$__b>>2] = 0;
          $595 = 1;
          break;
         } else {
          $$pre$i$i$i70 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i71 = ($$pre$i$i$i70|0)==(0|0);
          $595 = $phitmp$i$i$i71;
          break;
         }
        }
       } while(0);
       $583 = ($582|0)==(0|0);
       do {
        if ($583) {
         $$pre$i3$i$i76195$ph = $$pre$i3$i$i76261;
         label = 198;
        } else {
         $584 = ((($582)) + 12|0);
         $585 = HEAP32[$584>>2]|0;
         $586 = ((($582)) + 16|0);
         $587 = HEAP32[$586>>2]|0;
         $588 = ($585|0)==($587|0);
         if ($588) {
          $589 = HEAP32[$582>>2]|0;
          $590 = ((($589)) + 36|0);
          $591 = HEAP32[$590>>2]|0;
          $592 = (FUNCTION_TABLE_ii[$591 & 63]($582)|0);
          $$0$i$i1$i$i74 = $592;
         } else {
          $593 = HEAP32[$585>>2]|0;
          $$0$i$i1$i$i74 = $593;
         }
         $594 = ($$0$i$i1$i$i74|0)==(-1);
         if ($594) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i76195$ph = 0;
          label = 198;
          break;
         } else {
          $phitmp$i4$i$i77 = ($$pre$i3$i$i76261|0)==(0|0);
          $tmp$i$i79 = $595 ^ $phitmp$i4$i$i77;
          if ($tmp$i$i79) {
           $$pre$i3$i$i76195216 = $$pre$i3$i$i76261;$739 = $$pre$i3$i$i76261;
           break;
          } else {
           label = 204;
           break L1;
          }
         }
        }
       } while(0);
       if ((label|0) == 198) {
        label = 0;
        if ($595) {
         label = 204;
         break L1;
        } else {
         $$pre$i3$i$i76195216 = $$pre$i3$i$i76195$ph;$739 = 0;
        }
       }
       $596 = HEAP32[$__b>>2]|0;
       $597 = ((($596)) + 12|0);
       $598 = HEAP32[$597>>2]|0;
       $599 = ((($596)) + 16|0);
       $600 = HEAP32[$599>>2]|0;
       $601 = ($598|0)==($600|0);
       if ($601) {
        $602 = HEAP32[$596>>2]|0;
        $603 = ((($602)) + 36|0);
        $604 = HEAP32[$603>>2]|0;
        $605 = (FUNCTION_TABLE_ii[$604 & 63]($596)|0);
        $$0$i$i65 = $605;
       } else {
        $606 = HEAP32[$598>>2]|0;
        $$0$i$i65 = $606;
       }
       $607 = HEAP32[$__ct>>2]|0;
       $608 = ((($607)) + 12|0);
       $609 = HEAP32[$608>>2]|0;
       $610 = (FUNCTION_TABLE_iiii[$609 & 31]($__ct,2048,$$0$i$i65)|0);
       if (!($610)) {
        label = 204;
        break L1;
       }
       $613 = HEAP32[$__wn>>2]|0;
       $614 = HEAP32[$0>>2]|0;
       $615 = ($613|0)==($614|0);
       if ($615) {
        __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       }
       $616 = HEAP32[$__b>>2]|0;
       $617 = ((($616)) + 12|0);
       $618 = HEAP32[$617>>2]|0;
       $619 = ((($616)) + 16|0);
       $620 = HEAP32[$619>>2]|0;
       $621 = ($618|0)==($620|0);
       if ($621) {
        $622 = HEAP32[$616>>2]|0;
        $623 = ((($622)) + 36|0);
        $624 = HEAP32[$623>>2]|0;
        $625 = (FUNCTION_TABLE_ii[$624 & 63]($616)|0);
        $$0$i$i26 = $625;
       } else {
        $626 = HEAP32[$618>>2]|0;
        $$0$i$i26 = $626;
       }
       $627 = HEAP32[$__wn>>2]|0;
       $628 = ((($627)) + 4|0);
       HEAP32[$__wn>>2] = $628;
       HEAP32[$627>>2] = $$0$i$i26;
       $629 = (($630) + -1)|0;
       HEAP32[$__fd>>2] = $629;
       $631 = HEAP32[$__b>>2]|0;
       $632 = ((($631)) + 12|0);
       $633 = HEAP32[$632>>2]|0;
       $634 = ((($631)) + 16|0);
       $635 = HEAP32[$634>>2]|0;
       $636 = ($633|0)==($635|0);
       if ($636) {
        $637 = HEAP32[$631>>2]|0;
        $638 = ((($637)) + 40|0);
        $639 = HEAP32[$638>>2]|0;
        (FUNCTION_TABLE_ii[$639 & 63]($631)|0);
       } else {
        $641 = ((($633)) + 4|0);
        HEAP32[$632>>2] = $641;
       }
       $640 = ($630|0)>(1);
       if ($640) {
        $$pre$i3$i$i76261 = $$pre$i3$i$i76195216;$582 = $739;$630 = $629;
       } else {
        break;
       }
      }
     }
    }
    $642 = HEAP32[$__wn>>2]|0;
    $643 = HEAP32[$__wb>>2]|0;
    $644 = ($642|0)==($643|0);
    if ($644) {
     label = 215;
     break L1;
    } else {
     $730 = $736;$__trailing_sign$1 = $__trailing_sign$0278;
    }
    break;
   }
   case 0:  {
    $86 = ($__p$0276|0)==(3);
    if ($86) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $$pre$i3$i$i51 = $729;$100 = $729;
     label = 30;
    }
    break;
   }
   case 2:  {
    $281 = ($__trailing_sign$0278|0)!=(0|0);
    $282 = ($__p$0276>>>0)<(2);
    $or$cond = $282 | $281;
    if (!($or$cond)) {
     $283 = ($__p$0276|0)==(2);
     $284 = HEAP8[$25>>0]|0;
     $285 = ($284<<24>>24)!=(0);
     $286 = $283 & $285;
     $brmerge = $20 | $286;
     if (!($brmerge)) {
      $730 = $727;$__trailing_sign$1 = 0;
      break L25;
     }
    }
    $287 = HEAP8[$__sym>>0]|0;
    $288 = $287 & 1;
    $289 = ($288<<24>>24)==(0);
    $290 = HEAP32[$21>>2]|0;
    $291 = $289 ? $22 : $290;
    $292 = $291;
    $293 = ($__p$0276|0)==(0);
    L199: do {
     if ($293) {
      $$ph = $290;$$ph240 = $287;$$ph241 = $292;
     } else {
      $304 = (($__p$0276) + -1)|0;
      $305 = (($__pat) + ($304)|0);
      $306 = HEAP8[$305>>0]|0;
      $switch = ($306&255)<(2);
      if ($switch) {
       $307 = $287 & 1;
       $308 = ($307<<24>>24)==(0);
       $309 = HEAP32[$22>>2]|0;
       $310 = $287&255;
       $311 = $310 >>> 1;
       $312 = $308 ? $22 : $290;
       $313 = $308 ? $311 : $309;
       $314 = (($312) + ($313<<2)|0);
       $315 = ($291|0)==($314|0);
       L202: do {
        if ($315) {
         $334 = $287;$336 = $290;$340 = $292;
        } else {
         $317 = $291;$732 = $292;
         while(1) {
          $316 = HEAP32[$317>>2]|0;
          $318 = HEAP32[$__ct>>2]|0;
          $319 = ((($318)) + 12|0);
          $320 = HEAP32[$319>>2]|0;
          $321 = (FUNCTION_TABLE_iiii[$320 & 31]($__ct,8192,$316)|0);
          if (!($321)) {
           $$lcssa294 = $732;
           break;
          }
          $322 = ((($317)) + 4|0);
          $323 = $322;
          $$pre197 = HEAP8[$__sym>>0]|0;
          $$pre198 = HEAP32[$21>>2]|0;
          $324 = $$pre197 & 1;
          $325 = ($324<<24>>24)==(0);
          $326 = HEAP32[$22>>2]|0;
          $327 = $$pre197&255;
          $328 = $327 >>> 1;
          $329 = $325 ? $22 : $$pre198;
          $330 = $325 ? $328 : $326;
          $331 = (($329) + ($330<<2)|0);
          $332 = ($322|0)==($331|0);
          if ($332) {
           $334 = $$pre197;$336 = $$pre198;$340 = $323;
           break L202;
          } else {
           $317 = $322;$732 = $323;
          }
         }
         $$pre199 = HEAP8[$__sym>>0]|0;
         $$pre200 = HEAP32[$21>>2]|0;
         $334 = $$pre199;$336 = $$pre200;$340 = $$lcssa294;
        }
       } while(0);
       $333 = $334 & 1;
       $335 = ($333<<24>>24)==(0);
       $337 = $335 ? $22 : $336;
       $338 = $337;
       $339 = (($340) - ($338))|0;
       $341 = $339 >> 2;
       $342 = HEAP8[$__spaces>>0]|0;
       $343 = $342 & 1;
       $344 = ($343<<24>>24)==(0);
       $345 = HEAP32[$23>>2]|0;
       $346 = $342&255;
       $347 = $346 >>> 1;
       $348 = $344 ? $347 : $345;
       $349 = ($348>>>0)<($341>>>0);
       if ($349) {
        $$ph = $336;$$ph240 = $334;$$ph241 = $338;
       } else {
        $350 = HEAP32[$24>>2]|0;
        $351 = $344 ? $23 : $350;
        $352 = (($351) + ($348<<2)|0);
        $353 = ($341|0)==(0);
        if ($353) {
         $$ph = $336;$$ph240 = $334;$$ph241 = $340;
        } else {
         $$sum = (($348) - ($341))|0;
         $354 = (($351) + ($$sum<<2)|0);
         $$in265 = $337;$356 = $354;
         while(1) {
          $355 = HEAP32[$356>>2]|0;
          $357 = HEAP32[$$in265>>2]|0;
          $358 = ($355|0)==($357|0);
          if (!($358)) {
           $$ph = $336;$$ph240 = $334;$$ph241 = $338;
           break L199;
          }
          $359 = ((($356)) + 4|0);
          $360 = ((($$in265)) + 4|0);
          $361 = ($359|0)==($352|0);
          if ($361) {
           $$ph = $336;$$ph240 = $334;$$ph241 = $340;
           break;
          } else {
           $$in265 = $360;$356 = $359;
          }
         }
        }
       }
      } else {
       $$ph = $290;$$ph240 = $287;$$ph241 = $292;
      }
     }
    } while(0);
    $294 = $$ph240 & 1;
    $295 = ($294<<24>>24)==(0);
    $296 = HEAP32[$22>>2]|0;
    $297 = $$ph240&255;
    $298 = $297 >>> 1;
    $299 = $295 ? $22 : $$ph;
    $300 = $295 ? $298 : $296;
    $301 = (($299) + ($300<<2)|0);
    $302 = $$ph241;
    $303 = ($302|0)==($301|0);
    L214: do {
     if ($303) {
      $$lcssa183 = $301;
     } else {
      $$pre$i3$i$i144270 = $729;$375 = $729;$401 = $302;
      while(1) {
       $362 = HEAP32[$__b>>2]|0;
       $363 = ($362|0)==(0|0);
       do {
        if ($363) {
         $388 = 1;
        } else {
         $364 = ((($362)) + 12|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ((($362)) + 16|0);
         $367 = HEAP32[$366>>2]|0;
         $368 = ($365|0)==($367|0);
         if ($368) {
          $369 = HEAP32[$362>>2]|0;
          $370 = ((($369)) + 36|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = (FUNCTION_TABLE_ii[$371 & 63]($362)|0);
          $$0$i$i$i$i136 = $372;
         } else {
          $373 = HEAP32[$365>>2]|0;
          $$0$i$i$i$i136 = $373;
         }
         $374 = ($$0$i$i$i$i136|0)==(-1);
         if ($374) {
          HEAP32[$__b>>2] = 0;
          $388 = 1;
          break;
         } else {
          $$pre$i$i$i138 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i139 = ($$pre$i$i$i138|0)==(0|0);
          $388 = $phitmp$i$i$i139;
          break;
         }
        }
       } while(0);
       $376 = ($375|0)==(0|0);
       do {
        if ($376) {
         $$pre$i3$i$i144204 = $$pre$i3$i$i144270;
         label = 114;
        } else {
         $377 = ((($375)) + 12|0);
         $378 = HEAP32[$377>>2]|0;
         $379 = ((($375)) + 16|0);
         $380 = HEAP32[$379>>2]|0;
         $381 = ($378|0)==($380|0);
         if ($381) {
          $382 = HEAP32[$375>>2]|0;
          $383 = ((($382)) + 36|0);
          $384 = HEAP32[$383>>2]|0;
          $385 = (FUNCTION_TABLE_ii[$384 & 63]($375)|0);
          $$0$i$i1$i$i142 = $385;
         } else {
          $386 = HEAP32[$378>>2]|0;
          $$0$i$i1$i$i142 = $386;
         }
         $387 = ($$0$i$i1$i$i142|0)==(-1);
         if ($387) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i144204 = 0;
          label = 114;
          break;
         } else {
          $phitmp$i4$i$i145 = ($$pre$i3$i$i144270|0)==(0|0);
          $tmp$i$i147 = $388 ^ $phitmp$i4$i$i145;
          if ($tmp$i$i147) {
           $$pre$i3$i$i144203 = $$pre$i3$i$i144270;$733 = $$pre$i3$i$i144270;
           break;
          } else {
           $$lcssa183 = $401;
           break L214;
          }
         }
        }
       } while(0);
       if ((label|0) == 114) {
        label = 0;
        if ($388) {
         $$lcssa183 = $401;
         break L214;
        } else {
         $$pre$i3$i$i144203 = $$pre$i3$i$i144204;$733 = 0;
        }
       }
       $389 = HEAP32[$__b>>2]|0;
       $390 = ((($389)) + 12|0);
       $391 = HEAP32[$390>>2]|0;
       $392 = ((($389)) + 16|0);
       $393 = HEAP32[$392>>2]|0;
       $394 = ($391|0)==($393|0);
       if ($394) {
        $395 = HEAP32[$389>>2]|0;
        $396 = ((($395)) + 36|0);
        $397 = HEAP32[$396>>2]|0;
        $398 = (FUNCTION_TABLE_ii[$397 & 63]($389)|0);
        $$0$i$i133 = $398;
       } else {
        $399 = HEAP32[$391>>2]|0;
        $$0$i$i133 = $399;
       }
       $400 = HEAP32[$401>>2]|0;
       $402 = ($$0$i$i133|0)==($400|0);
       if (!($402)) {
        $$lcssa183 = $401;
        break L214;
       }
       $403 = HEAP32[$__b>>2]|0;
       $404 = ((($403)) + 12|0);
       $405 = HEAP32[$404>>2]|0;
       $406 = ((($403)) + 16|0);
       $407 = HEAP32[$406>>2]|0;
       $408 = ($405|0)==($407|0);
       if ($408) {
        $409 = HEAP32[$403>>2]|0;
        $410 = ((($409)) + 40|0);
        $411 = HEAP32[$410>>2]|0;
        (FUNCTION_TABLE_ii[$411 & 63]($403)|0);
       } else {
        $412 = ((($405)) + 4|0);
        HEAP32[$404>>2] = $412;
       }
       $413 = ((($401)) + 4|0);
       $$pre201 = HEAP8[$__sym>>0]|0;
       $$pre202 = HEAP32[$21>>2]|0;
       $414 = $$pre201 & 1;
       $415 = ($414<<24>>24)==(0);
       $416 = HEAP32[$22>>2]|0;
       $417 = $$pre201&255;
       $418 = $417 >>> 1;
       $419 = $415 ? $22 : $$pre202;
       $420 = $415 ? $418 : $416;
       $421 = (($419) + ($420<<2)|0);
       $422 = ($413|0)==($421|0);
       if ($422) {
        $$lcssa183 = $421;
        break;
       } else {
        $$pre$i3$i$i144270 = $$pre$i3$i$i144203;$375 = $733;$401 = $413;
       }
      }
     }
    } while(0);
    if ($20) {
     $423 = HEAP8[$__sym>>0]|0;
     $424 = $423 & 1;
     $425 = ($424<<24>>24)==(0);
     $426 = HEAP32[$21>>2]|0;
     $427 = HEAP32[$22>>2]|0;
     $428 = $423&255;
     $429 = $428 >>> 1;
     $430 = $425 ? $22 : $426;
     $431 = $425 ? $429 : $427;
     $432 = (($430) + ($431<<2)|0);
     $433 = ($$lcssa183|0)==($432|0);
     if ($433) {
      $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
     } else {
      label = 126;
      break L1;
     }
    } else {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    }
    break;
   }
   case 1:  {
    $cond = ($__p$0276|0)==(3);
    if ($cond) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $57 = HEAP32[$__b>>2]|0;
     $58 = ((($57)) + 12|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ((($57)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$57>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 63]($57)|0);
      $$0$i$i40 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i40 = $67;
     }
     $68 = HEAP32[$__ct>>2]|0;
     $69 = ((($68)) + 12|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = (FUNCTION_TABLE_iiii[$70 & 31]($__ct,8192,$$0$i$i40)|0);
     if (!($71)) {
      label = 28;
      break L1;
     }
     $72 = HEAP32[$__b>>2]|0;
     $73 = ((($72)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($72)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$72>>2]|0;
      $79 = ((($78)) + 40|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 63]($72)|0);
      $$0$i$i42 = $81;
     } else {
      $82 = ((($74)) + 4|0);
      HEAP32[$73>>2] = $82;
      $83 = HEAP32[$74>>2]|0;
      $$0$i$i42 = $83;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$$0$i$i42);
     $$pre$i3$i$i51 = $729;$100 = $729;
     label = 30;
    }
    break;
   }
   default: {
    $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
   }
   }
  } while(0);
  L261: do {
   if ((label|0) == 30) {
    while(1) {
     label = 0;
     $87 = HEAP32[$__b>>2]|0;
     $88 = ($87|0)==(0|0);
     do {
      if ($88) {
       $113 = 1;
      } else {
       $89 = ((($87)) + 12|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ((($87)) + 16|0);
       $92 = HEAP32[$91>>2]|0;
       $93 = ($90|0)==($92|0);
       if ($93) {
        $94 = HEAP32[$87>>2]|0;
        $95 = ((($94)) + 36|0);
        $96 = HEAP32[$95>>2]|0;
        $97 = (FUNCTION_TABLE_ii[$96 & 63]($87)|0);
        $$0$i$i$i$i43 = $97;
       } else {
        $98 = HEAP32[$90>>2]|0;
        $$0$i$i$i$i43 = $98;
       }
       $99 = ($$0$i$i$i$i43|0)==(-1);
       if ($99) {
        HEAP32[$__b>>2] = 0;
        $113 = 1;
        break;
       } else {
        $$pre$i$i$i45 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i46 = ($$pre$i$i$i45|0)==(0|0);
        $113 = $phitmp$i$i$i46;
        break;
       }
      }
     } while(0);
     $101 = ($100|0)==(0|0);
     do {
      if ($101) {
       $$pre$i3$i$i51211 = $$pre$i3$i$i51;
       label = 43;
      } else {
       $102 = ((($100)) + 12|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ((($100)) + 16|0);
       $105 = HEAP32[$104>>2]|0;
       $106 = ($103|0)==($105|0);
       if ($106) {
        $107 = HEAP32[$100>>2]|0;
        $108 = ((($107)) + 36|0);
        $109 = HEAP32[$108>>2]|0;
        $110 = (FUNCTION_TABLE_ii[$109 & 63]($100)|0);
        $$0$i$i1$i$i49 = $110;
       } else {
        $111 = HEAP32[$103>>2]|0;
        $$0$i$i1$i$i49 = $111;
       }
       $112 = ($$0$i$i1$i$i49|0)==(-1);
       if ($112) {
        HEAP32[$__e>>2] = 0;
        $$pre$i3$i$i51211 = 0;
        label = 43;
        break;
       } else {
        $phitmp$i4$i$i52 = ($$pre$i3$i$i51|0)==(0|0);
        $tmp$i$i54 = $113 ^ $phitmp$i4$i$i52;
        if ($tmp$i$i54) {
         $$pre$i3$i$i51213 = $$pre$i3$i$i51;$731 = $$pre$i3$i$i51;
         break;
        } else {
         $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
         break L261;
        }
       }
      }
     } while(0);
     if ((label|0) == 43) {
      label = 0;
      if ($113) {
       $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
       break L261;
      } else {
       $$pre$i3$i$i51213 = $$pre$i3$i$i51211;$731 = 0;
      }
     }
     $114 = HEAP32[$__b>>2]|0;
     $115 = ((($114)) + 12|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ((($114)) + 16|0);
     $118 = HEAP32[$117>>2]|0;
     $119 = ($116|0)==($118|0);
     if ($119) {
      $120 = HEAP32[$114>>2]|0;
      $121 = ((($120)) + 36|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = (FUNCTION_TABLE_ii[$122 & 63]($114)|0);
      $$0$i$i56 = $123;
     } else {
      $124 = HEAP32[$116>>2]|0;
      $$0$i$i56 = $124;
     }
     $125 = HEAP32[$__ct>>2]|0;
     $126 = ((($125)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = (FUNCTION_TABLE_iiii[$127 & 31]($__ct,8192,$$0$i$i56)|0);
     if (!($128)) {
      $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
      break L261;
     }
     $129 = HEAP32[$__b>>2]|0;
     $130 = ((($129)) + 12|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ((($129)) + 16|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ($131|0)==($133|0);
     if ($134) {
      $135 = HEAP32[$129>>2]|0;
      $136 = ((($135)) + 40|0);
      $137 = HEAP32[$136>>2]|0;
      $138 = (FUNCTION_TABLE_ii[$137 & 63]($129)|0);
      $$0$i$i60 = $138;
     } else {
      $139 = ((($131)) + 4|0);
      HEAP32[$130>>2] = $139;
      $140 = HEAP32[$131>>2]|0;
      $$0$i$i60 = $140;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$$0$i$i60);
     $$pre$i3$i$i51 = $$pre$i3$i$i51213;$100 = $731;
     label = 30;
    }
   }
  } while(0);
  $647 = (($__p$0276) + 1)|0;
  $648 = ($647>>>0)<(4);
  if ($648) {
   $727 = $730;$__p$0276 = $647;$__trailing_sign$0278 = $__trailing_sign$1;
  } else {
   $$lcssa248 = $730;$__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 217;
   break;
  }
 }
 L296: do {
  if ((label|0) == 28) {
   $84 = HEAP32[$__err>>2]|0;
   $85 = $84 | 4;
   HEAP32[$__err>>2] = $85;
   $$0 = 0;
  }
  else if ((label|0) == 86) {
   $279 = HEAP32[$__err>>2]|0;
   $280 = $279 | 4;
   HEAP32[$__err>>2] = $280;
   $$0 = 0;
  }
  else if ((label|0) == 126) {
   $434 = HEAP32[$__err>>2]|0;
   $435 = $434 | 4;
   HEAP32[$__err>>2] = $435;
   $$0 = 0;
  }
  else if ((label|0) == 180) {
   $556 = HEAP32[$__err>>2]|0;
   $557 = $556 | 4;
   HEAP32[$__err>>2] = $557;
   $$0 = 0;
  }
  else if ((label|0) == 204) {
   $611 = HEAP32[$__err>>2]|0;
   $612 = $611 | 4;
   HEAP32[$__err>>2] = $612;
   $$0 = 0;
  }
  else if ((label|0) == 215) {
   $645 = HEAP32[$__err>>2]|0;
   $646 = $645 | 4;
   HEAP32[$__err>>2] = $646;
   $$0 = 0;
  }
  else if ((label|0) == 217) {
   $649 = ($__trailing_sign$0$lcssa|0)==(0|0);
   L300: do {
    if (!($649)) {
     $650 = ((($__trailing_sign$0$lcssa)) + 4|0);
     $651 = ((($__trailing_sign$0$lcssa)) + 8|0);
     $__i$0 = 1;
     L302: while(1) {
      $652 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $653 = $652 & 1;
      $654 = ($653<<24>>24)==(0);
      if ($654) {
       $656 = $652&255;
       $657 = $656 >>> 1;
       $659 = $657;
      } else {
       $655 = HEAP32[$650>>2]|0;
       $659 = $655;
      }
      $658 = ($__i$0>>>0)<($659>>>0);
      if (!($658)) {
       break L300;
      }
      $660 = HEAP32[$__b>>2]|0;
      $661 = ($660|0)==(0|0);
      do {
       if ($661) {
        $740 = 1;
       } else {
        $662 = ((($660)) + 12|0);
        $663 = HEAP32[$662>>2]|0;
        $664 = ((($660)) + 16|0);
        $665 = HEAP32[$664>>2]|0;
        $666 = ($663|0)==($665|0);
        if ($666) {
         $667 = HEAP32[$660>>2]|0;
         $668 = ((($667)) + 36|0);
         $669 = HEAP32[$668>>2]|0;
         $670 = (FUNCTION_TABLE_ii[$669 & 63]($660)|0);
         $$0$i$i$i$i = $670;
        } else {
         $671 = HEAP32[$663>>2]|0;
         $$0$i$i$i$i = $671;
        }
        $672 = ($$0$i$i$i$i|0)==(-1);
        if ($672) {
         HEAP32[$__b>>2] = 0;
         $740 = 1;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
         $740 = $phitmp$i$i$i;
         break;
        }
       }
      } while(0);
      $673 = HEAP32[$__e>>2]|0;
      $674 = ($673|0)==(0|0);
      do {
       if ($674) {
        label = 236;
       } else {
        $675 = ((($673)) + 12|0);
        $676 = HEAP32[$675>>2]|0;
        $677 = ((($673)) + 16|0);
        $678 = HEAP32[$677>>2]|0;
        $679 = ($676|0)==($678|0);
        if ($679) {
         $680 = HEAP32[$673>>2]|0;
         $681 = ((($680)) + 36|0);
         $682 = HEAP32[$681>>2]|0;
         $683 = (FUNCTION_TABLE_ii[$682 & 63]($673)|0);
         $$0$i$i1$i$i = $683;
        } else {
         $684 = HEAP32[$676>>2]|0;
         $$0$i$i1$i$i = $684;
        }
        $685 = ($$0$i$i1$i$i|0)==(-1);
        if ($685) {
         HEAP32[$__e>>2] = 0;
         label = 236;
         break;
        } else {
         if ($740) {
          break;
         } else {
          break L302;
         }
        }
       }
      } while(0);
      if ((label|0) == 236) {
       label = 0;
       if ($740) {
        break;
       }
      }
      $686 = HEAP32[$__b>>2]|0;
      $687 = ((($686)) + 12|0);
      $688 = HEAP32[$687>>2]|0;
      $689 = ((($686)) + 16|0);
      $690 = HEAP32[$689>>2]|0;
      $691 = ($688|0)==($690|0);
      if ($691) {
       $692 = HEAP32[$686>>2]|0;
       $693 = ((($692)) + 36|0);
       $694 = HEAP32[$693>>2]|0;
       $695 = (FUNCTION_TABLE_ii[$694 & 63]($686)|0);
       $$0$i$i = $695;
      } else {
       $696 = HEAP32[$688>>2]|0;
       $$0$i$i = $696;
      }
      $697 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $698 = $697 & 1;
      $699 = ($698<<24>>24)==(0);
      if ($699) {
       $702 = $650;
      } else {
       $700 = HEAP32[$651>>2]|0;
       $702 = $700;
      }
      $701 = (($702) + ($__i$0<<2)|0);
      $703 = HEAP32[$701>>2]|0;
      $704 = ($$0$i$i|0)==($703|0);
      if (!($704)) {
       break;
      }
      $707 = (($__i$0) + 1)|0;
      $708 = HEAP32[$__b>>2]|0;
      $709 = ((($708)) + 12|0);
      $710 = HEAP32[$709>>2]|0;
      $711 = ((($708)) + 16|0);
      $712 = HEAP32[$711>>2]|0;
      $713 = ($710|0)==($712|0);
      if ($713) {
       $714 = HEAP32[$708>>2]|0;
       $715 = ((($714)) + 40|0);
       $716 = HEAP32[$715>>2]|0;
       (FUNCTION_TABLE_ii[$716 & 63]($708)|0);
       $__i$0 = $707;
       continue;
      } else {
       $717 = ((($710)) + 4|0);
       HEAP32[$709>>2] = $717;
       $__i$0 = $707;
       continue;
      }
     }
     $705 = HEAP32[$__err>>2]|0;
     $706 = $705 | 4;
     HEAP32[$__err>>2] = $706;
     $$0 = 0;
     break L296;
    }
   } while(0);
   $718 = HEAP32[$__gb>>2]|0;
   $719 = ($718|0)==($$lcssa248|0);
   if ($719) {
    $$0 = 1;
   } else {
    HEAP32[$__et>>2] = 0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$718,$$lcssa248,$__et);
    $720 = HEAP32[$__et>>2]|0;
    $721 = ($720|0)==(0);
    if ($721) {
     $$0 = 1;
    } else {
     $722 = HEAP32[$__err>>2]|0;
     $723 = $722 | 4;
     HEAP32[$__err>>2] = $723;
     $$0 = 0;
    }
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $724 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $725 = ($724|0)==(0|0);
 if (!($725)) {
  $726 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$726 & 127]($724);
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$byval_copy = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$02 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0;
 $$byval_copy = sp + 424|0;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 428|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 400|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 $10 = $6;
 if ($9) {
  $11 = HEAP8[$__v>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   HEAP8[$__v>>0] = 0;
  } else {
   $14 = ((($__v)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$15>>2] = 0;
  }
  $16 = ((($__v)) + 4|0);
  HEAP32[$16>>2] = 0;
  $17 = HEAP8[$__neg>>0]|0;
  $18 = ($17<<24>>24)==(0);
  if (!($18)) {
   $19 = HEAP32[$5>>2]|0;
   $20 = ((($19)) + 44|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_iii[$21 & 15]($5,45)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__v,$22);
  }
  $23 = HEAP32[$5>>2]|0;
  $24 = ((($23)) + 44|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = (FUNCTION_TABLE_iii[$25 & 15]($5,48)|0);
  $27 = HEAP32[$__wb>>2]|0;
  $28 = HEAP32[$__wn>>2]|0;
  $29 = ((($28)) + -4|0);
  $30 = ($27>>>0)<($29>>>0);
  L10: do {
   if ($30) {
    $__w$02 = $27;
    while(1) {
     $31 = HEAP32[$__w$02>>2]|0;
     $32 = ($31|0)==($26|0);
     if (!($32)) {
      $__w$0$lcssa = $__w$02;
      break L10;
     }
     $33 = ((($__w$02)) + 4|0);
     $34 = ($33>>>0)<($29>>>0);
     if ($34) {
      $__w$02 = $33;
     } else {
      $__w$0$lcssa = $33;
      break;
     }
    }
   } else {
    $__w$0$lcssa = $27;
   }
  } while(0);
  (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v,$__w$0$lcssa,$28)|0);
 }
 $35 = HEAP32[$__b>>2]|0;
 $36 = ($35|0)==(0|0);
 do {
  if ($36) {
   $67 = 1;
  } else {
   $37 = ((($35)) + 12|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ((($35)) + 16|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ($38|0)==($40|0);
   if ($41) {
    $42 = HEAP32[$35>>2]|0;
    $43 = ((($42)) + 36|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = (FUNCTION_TABLE_ii[$44 & 63]($35)|0);
    $$0$i$i$i$i = $45;
   } else {
    $46 = HEAP32[$38>>2]|0;
    $$0$i$i$i$i = $46;
   }
   $47 = ($$0$i$i$i$i|0)==(-1);
   if ($47) {
    HEAP32[$__b>>2] = 0;
    $67 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $67 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $48 = ($6|0)==(0);
 do {
  if ($48) {
   label = 24;
  } else {
   $49 = ((($10)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($10)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $54 = $6;
    $55 = HEAP32[$54>>2]|0;
    $56 = ((($55)) + 36|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = (FUNCTION_TABLE_ii[$57 & 63]($10)|0);
    $$0$i$i1$i$i = $58;
   } else {
    $59 = HEAP32[$50>>2]|0;
    $$0$i$i1$i$i = $59;
   }
   $60 = ($$0$i$i1$i$i|0)==(-1);
   if ($60) {
    HEAP32[$__e>>2] = 0;
    label = 24;
    break;
   } else {
    if ($67) {
     break;
    } else {
     label = 26;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 24) {
  if ($67) {
   label = 26;
  }
 }
 if ((label|0) == 26) {
  $61 = HEAP32[$__err>>2]|0;
  $62 = $61 | 2;
  HEAP32[$__err>>2] = $62;
 }
 $63 = HEAP32[$__b>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
 $64 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $65 = ($64|0)==(0|0);
 if (!($65)) {
  $66 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$66 & 127]($64);
 }
 STACKTOP = sp;return ($63|0);
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5888)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 63]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 63]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = ((($__nsn)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP32[$22>>2] = 0;
  }
  $23 = ((($__nsn)) + 4|0);
  HEAP32[$23>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  HEAP32[$1>>2] = 0;
  $24 = ((($1)) + 4|0);
  HEAP32[$24>>2] = 0;
  $25 = ((($1)) + 8|0);
  HEAP32[$25>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  $26 = HEAP32[$10>>2]|0;
  $27 = ((($26)) + 28|0);
  $28 = HEAP32[$27>>2]|0;
  FUNCTION_TABLE_vii[$28 & 63]($2,$10);
  $29 = HEAP8[$__psn>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $32 = ((($__psn)) + 8|0);
   $33 = HEAP32[$32>>2]|0;
   HEAP32[$33>>2] = 0;
  }
  $34 = ((($__psn)) + 4|0);
  HEAP32[$34>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  HEAP32[$2>>2] = 0;
  $35 = ((($2)) + 4|0);
  HEAP32[$35>>2] = 0;
  $36 = ((($2)) + 8|0);
  HEAP32[$36>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  $37 = HEAP32[$10>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_ii[$39 & 63]($10)|0);
  HEAP32[$__dp>>2] = $40;
  $41 = HEAP32[$10>>2]|0;
  $42 = ((($41)) + 16|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (FUNCTION_TABLE_ii[$43 & 63]($10)|0);
  HEAP32[$__ts>>2] = $44;
  $45 = HEAP32[$10>>2]|0;
  $46 = ((($45)) + 20|0);
  $47 = HEAP32[$46>>2]|0;
  FUNCTION_TABLE_vii[$47 & 63]($3,$10);
  $48 = HEAP8[$__grp>>0]|0;
  $49 = $48 & 1;
  $50 = ($49<<24>>24)==(0);
  if ($50) {
   $54 = ((($__grp)) + 1|0);
   HEAP8[$54>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $51 = ((($__grp)) + 8|0);
   $52 = HEAP32[$51>>2]|0;
   HEAP8[$52>>0] = 0;
   $53 = ((($__grp)) + 4|0);
   HEAP32[$53>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  HEAP32[$3>>2] = 0;
  $55 = ((($3)) + 4|0);
  HEAP32[$55>>2] = 0;
  $56 = ((($3)) + 8|0);
  HEAP32[$56>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $57 = HEAP32[$10>>2]|0;
  $58 = ((($57)) + 24|0);
  $59 = HEAP32[$58>>2]|0;
  FUNCTION_TABLE_vii[$59 & 63]($4,$10);
  $60 = HEAP8[$__sym>>0]|0;
  $61 = $60 & 1;
  $62 = ($61<<24>>24)==(0);
  if ($62) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $63 = ((($__sym)) + 8|0);
   $64 = HEAP32[$63>>2]|0;
   HEAP32[$64>>2] = 0;
  }
  $65 = ((($__sym)) + 4|0);
  HEAP32[$65>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $66 = ((($4)) + 4|0);
  HEAP32[$66>>2] = 0;
  $67 = ((($4)) + 8|0);
  HEAP32[$67>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $68 = HEAP32[$10>>2]|0;
  $69 = ((($68)) + 36|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = (FUNCTION_TABLE_ii[$70 & 63]($10)|0);
  $storemerge = $71;
 } else {
  $72 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5824)|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ((($73)) + 44|0);
  $75 = HEAP32[$74>>2]|0;
  FUNCTION_TABLE_vii[$75 & 63]($5,$72);
  $76 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$76&255;HEAP8[$__pat+1>>0]=($76>>8)&255;HEAP8[$__pat+2>>0]=($76>>16)&255;HEAP8[$__pat+3>>0]=$76>>24;
  $77 = HEAP32[$72>>2]|0;
  $78 = ((($77)) + 32|0);
  $79 = HEAP32[$78>>2]|0;
  FUNCTION_TABLE_vii[$79 & 63]($6,$72);
  $80 = HEAP8[$__nsn>>0]|0;
  $81 = $80 & 1;
  $82 = ($81<<24>>24)==(0);
  if ($82) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $83 = ((($__nsn)) + 8|0);
   $84 = HEAP32[$83>>2]|0;
   HEAP32[$84>>2] = 0;
  }
  $85 = ((($__nsn)) + 4|0);
  HEAP32[$85>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  HEAP32[$6>>2] = 0;
  $86 = ((($6)) + 4|0);
  HEAP32[$86>>2] = 0;
  $87 = ((($6)) + 8|0);
  HEAP32[$87>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  $88 = HEAP32[$72>>2]|0;
  $89 = ((($88)) + 28|0);
  $90 = HEAP32[$89>>2]|0;
  FUNCTION_TABLE_vii[$90 & 63]($7,$72);
  $91 = HEAP8[$__psn>>0]|0;
  $92 = $91 & 1;
  $93 = ($92<<24>>24)==(0);
  if ($93) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $94 = ((($__psn)) + 8|0);
   $95 = HEAP32[$94>>2]|0;
   HEAP32[$95>>2] = 0;
  }
  $96 = ((($__psn)) + 4|0);
  HEAP32[$96>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  HEAP32[$7>>2] = 0;
  $97 = ((($7)) + 4|0);
  HEAP32[$97>>2] = 0;
  $98 = ((($7)) + 8|0);
  HEAP32[$98>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  $99 = HEAP32[$72>>2]|0;
  $100 = ((($99)) + 12|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = (FUNCTION_TABLE_ii[$101 & 63]($72)|0);
  HEAP32[$__dp>>2] = $102;
  $103 = HEAP32[$72>>2]|0;
  $104 = ((($103)) + 16|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = (FUNCTION_TABLE_ii[$105 & 63]($72)|0);
  HEAP32[$__ts>>2] = $106;
  $107 = HEAP32[$72>>2]|0;
  $108 = ((($107)) + 20|0);
  $109 = HEAP32[$108>>2]|0;
  FUNCTION_TABLE_vii[$109 & 63]($8,$72);
  $110 = HEAP8[$__grp>>0]|0;
  $111 = $110 & 1;
  $112 = ($111<<24>>24)==(0);
  if ($112) {
   $116 = ((($__grp)) + 1|0);
   HEAP8[$116>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $113 = ((($__grp)) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   HEAP8[$114>>0] = 0;
   $115 = ((($__grp)) + 4|0);
   HEAP32[$115>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  HEAP32[$8>>2] = 0;
  $117 = ((($8)) + 4|0);
  HEAP32[$117>>2] = 0;
  $118 = ((($8)) + 8|0);
  HEAP32[$118>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $119 = HEAP32[$72>>2]|0;
  $120 = ((($119)) + 24|0);
  $121 = HEAP32[$120>>2]|0;
  FUNCTION_TABLE_vii[$121 & 63]($9,$72);
  $122 = HEAP8[$__sym>>0]|0;
  $123 = $122 & 1;
  $124 = ($123<<24>>24)==(0);
  if ($124) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $125 = ((($__sym)) + 8|0);
   $126 = HEAP32[$125>>2]|0;
   HEAP32[$126>>2] = 0;
  }
  $127 = ((($__sym)) + 4|0);
  HEAP32[$127>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  HEAP32[$9>>2] = 0;
  $128 = ((($9)) + 4|0);
  HEAP32[$128>>2] = 0;
  $129 = ((($9)) + 8|0);
  HEAP32[$129>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $130 = HEAP32[$72>>2]|0;
  $131 = ((($130)) + 36|0);
  $132 = HEAP32[$131>>2]|0;
  $133 = (FUNCTION_TABLE_ii[$132 & 63]($72)|0);
  $storemerge = $133;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$byval_copy = 0, $$pre14 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__bb = 0, $__buf = 0;
 var $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384|0;
 $$byval_copy = sp + 8|0;
 $vararg_buffer1 = sp;
 $__buf = sp + 284|0;
 $__bb = sp + 72|0;
 $__digits = sp + 184|0;
 $__loc = sp + 68|0;
 $__pat = sp + 180|0;
 $__dp = sp + 177|0;
 $__ts = sp + 176|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__sn = sp + 32|0;
 $__fd = sp + 28|0;
 $__mbuf = sp + 76|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$$byval_copy>>3] = $__units;
 $1 = (_snprintf($__buf,100,9512,$$byval_copy)|0);
 $2 = ($1>>>0)>(99);
 if ($2) {
  $3 = (__ZNSt3__16__clocEv()|0);
  HEAPF64[$vararg_buffer1>>3] = $__units;
  $4 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$3,9512,$vararg_buffer1)|0);
  $5 = HEAP32[$__bb>>2]|0;
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  }
  $7 = $5;
  $8 = (_malloc($4)|0);
  $9 = $8;
  $10 = ($8|0)==(0|0);
  if ($10) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $90 = $9;$93 = $7;$__db$0 = $8;$__n$0 = $4;
  }
 } else {
  $90 = 0;$93 = 0;$__db$0 = $__digits;$__n$0 = $1;
 }
 $11 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $11;
 $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6176)|0);
 $13 = HEAP32[$__bb>>2]|0;
 $14 = (($13) + ($__n$0)|0);
 $15 = HEAP32[$12>>2]|0;
 $16 = ((($15)) + 32|0);
 $17 = HEAP32[$16>>2]|0;
 (FUNCTION_TABLE_iiiii[$17 & 7]($12,$13,$14,$__db$0)|0);
 $18 = ($__n$0|0)==(0);
 if ($18) {
  $28 = 0;
 } else {
  $19 = HEAP32[$__bb>>2]|0;
  $20 = HEAP8[$19>>0]|0;
  $21 = ($20<<24>>24)==(45);
  $28 = $21;
 }
 HEAP32[$__grp>>2] = 0;
 $22 = ((($__grp)) + 4|0);
 HEAP32[$22>>2] = 0;
 $23 = ((($__grp)) + 8|0);
 HEAP32[$23>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $24 = ((($__sym)) + 4|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($__sym)) + 8|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $26 = ((($__sn)) + 4|0);
 HEAP32[$26>>2] = 0;
 $27 = ((($__sn)) + 8|0);
 HEAP32[$27>>2] = 0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$28,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $29 = HEAP32[$__fd>>2]|0;
 $30 = ($__n$0|0)>($29|0);
 if ($30) {
  $31 = (($__n$0) - ($29))|0;
  $32 = $31 << 1;
  $33 = HEAP8[$__sn>>0]|0;
  $34 = $33 & 1;
  $35 = ($34<<24>>24)==(0);
  $36 = ((($__sn)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = $33&255;
  $39 = $38 >>> 1;
  $40 = $35 ? $39 : $37;
  $41 = HEAP8[$__sym>>0]|0;
  $42 = $41 & 1;
  $43 = ($42<<24>>24)==(0);
  $44 = ((($__sym)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = $41&255;
  $47 = $46 >>> 1;
  $48 = $43 ? $47 : $45;
  $49 = $32 | 1;
  $50 = (($49) + ($29))|0;
  $51 = (($50) + ($40))|0;
  $52 = (($51) + ($48))|0;
  $72 = $52;
 } else {
  $53 = HEAP8[$__sn>>0]|0;
  $54 = $53 & 1;
  $55 = ($54<<24>>24)==(0);
  $56 = ((($__sn)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = $53&255;
  $59 = $58 >>> 1;
  $60 = $55 ? $59 : $57;
  $61 = HEAP8[$__sym>>0]|0;
  $62 = $61 & 1;
  $63 = ($62<<24>>24)==(0);
  $64 = ((($__sym)) + 4|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = $61&255;
  $67 = $66 >>> 1;
  $68 = $63 ? $67 : $65;
  $69 = (($29) + 2)|0;
  $70 = (($69) + ($60))|0;
  $71 = (($70) + ($68))|0;
  $72 = $71;
 }
 $73 = ($72>>>0)>(100);
 if ($73) {
  $74 = (_malloc($72)|0);
  $75 = $74;
  $76 = ($74|0)==(0|0);
  if ($76) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $86 = $75;$__mb$0 = $74;
  }
 } else {
  $86 = 0;$__mb$0 = $__mbuf;
 }
 $77 = ((($__iob)) + 4|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = (($__db$0) + ($__n$0)|0);
 $80 = HEAP8[$__dp>>0]|0;
 $81 = HEAP8[$__ts>>0]|0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0,$__mi,$__me,$78,$__db$0,$79,$12,$28,$__pat,$80,$81,$__grp,$__sym,$__sn,$29);
 $82 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $82;
 $83 = HEAP32[$__mi>>2]|0;
 $84 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $85 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$83,$84,$__iob,$__fl)|0);
 $87 = ($86|0)==(0);
 if ($87) {
  $89 = $11;
 } else {
  $88 = $86;
  _free($88);
  $$pre14 = HEAP32[$__loc>>2]|0;
  $89 = $$pre14;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($89)|0);
 $91 = ($90|0)==(0);
 if (!($91)) {
  $92 = $90;
  _free($92);
 }
 $94 = ($93|0)==(0);
 if (!($94)) {
  $95 = $93;
  _free($95);
 }
 STACKTOP = sp;return ($85|0);
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$pre$phi32Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5760)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = ((($13)) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 63]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = ((($17)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 63]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $26 = ((($__sn)) + 1|0);
    HEAP8[$26>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = ((($__sn)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP8[$24>>0] = 0;
    $25 = ((($__sn)) + 4|0);
    HEAP32[$25>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $27 = ((($1)) + 4|0);
   HEAP32[$27>>2] = 0;
   $28 = ((($1)) + 8|0);
   HEAP32[$28>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$pre$phiZ2D = $12;
  } else {
   $29 = ((($13)) + 40|0);
   $30 = HEAP32[$29>>2]|0;
   FUNCTION_TABLE_vii[$30 & 63]($2,$12);
   $31 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$31&255;HEAP8[$__pat+1>>0]=($31>>8)&255;HEAP8[$__pat+2>>0]=($31>>16)&255;HEAP8[$__pat+3>>0]=$31>>24;
   $32 = HEAP32[$12>>2]|0;
   $33 = ((($32)) + 28|0);
   $34 = HEAP32[$33>>2]|0;
   FUNCTION_TABLE_vii[$34 & 63]($3,$12);
   $35 = HEAP8[$__sn>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $41 = ((($__sn)) + 1|0);
    HEAP8[$41>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $38 = ((($__sn)) + 8|0);
    $39 = HEAP32[$38>>2]|0;
    HEAP8[$39>>0] = 0;
    $40 = ((($__sn)) + 4|0);
    HEAP32[$40>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $42 = ((($3)) + 4|0);
   HEAP32[$42>>2] = 0;
   $43 = ((($3)) + 8|0);
   HEAP32[$43>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$pre$phiZ2D = $12;
  }
  $44 = HEAP32[$12>>2]|0;
  $45 = ((($44)) + 12|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = (FUNCTION_TABLE_ii[$46 & 63]($12)|0);
  HEAP8[$__dp>>0] = $47;
  $48 = HEAP32[$12>>2]|0;
  $49 = ((($48)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = (FUNCTION_TABLE_ii[$50 & 63]($12)|0);
  HEAP8[$__ts>>0] = $51;
  $52 = HEAP32[$$pre$phiZ2D>>2]|0;
  $53 = ((($52)) + 20|0);
  $54 = HEAP32[$53>>2]|0;
  FUNCTION_TABLE_vii[$54 & 63]($4,$12);
  $55 = HEAP8[$__grp>>0]|0;
  $56 = $55 & 1;
  $57 = ($56<<24>>24)==(0);
  if ($57) {
   $61 = ((($__grp)) + 1|0);
   HEAP8[$61>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $58 = ((($__grp)) + 8|0);
   $59 = HEAP32[$58>>2]|0;
   HEAP8[$59>>0] = 0;
   $60 = ((($__grp)) + 4|0);
   HEAP32[$60>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $62 = ((($4)) + 4|0);
  HEAP32[$62>>2] = 0;
  $63 = ((($4)) + 8|0);
  HEAP32[$63>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $64 = HEAP32[$$pre$phiZ2D>>2]|0;
  $65 = ((($64)) + 24|0);
  $66 = HEAP32[$65>>2]|0;
  FUNCTION_TABLE_vii[$66 & 63]($5,$12);
  $67 = HEAP8[$__sym>>0]|0;
  $68 = $67 & 1;
  $69 = ($68<<24>>24)==(0);
  if ($69) {
   $73 = ((($__sym)) + 1|0);
   HEAP8[$73>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $70 = ((($__sym)) + 8|0);
   $71 = HEAP32[$70>>2]|0;
   HEAP8[$71>>0] = 0;
   $72 = ((($__sym)) + 4|0);
   HEAP32[$72>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  HEAP32[$5>>2] = 0;
  $74 = ((($5)) + 4|0);
  HEAP32[$74>>2] = 0;
  $75 = ((($5)) + 8|0);
  HEAP32[$75>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $76 = HEAP32[$12>>2]|0;
  $77 = ((($76)) + 36|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (FUNCTION_TABLE_ii[$78 & 63]($12)|0);
  $storemerge = $79;
 } else {
  $80 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5696)|0);
  $81 = HEAP32[$80>>2]|0;
  if ($__neg) {
   $82 = ((($81)) + 44|0);
   $83 = HEAP32[$82>>2]|0;
   FUNCTION_TABLE_vii[$83 & 63]($6,$80);
   $84 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$84&255;HEAP8[$__pat+1>>0]=($84>>8)&255;HEAP8[$__pat+2>>0]=($84>>16)&255;HEAP8[$__pat+3>>0]=$84>>24;
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 32|0);
   $87 = HEAP32[$86>>2]|0;
   FUNCTION_TABLE_vii[$87 & 63]($7,$80);
   $88 = HEAP8[$__sn>>0]|0;
   $89 = $88 & 1;
   $90 = ($89<<24>>24)==(0);
   if ($90) {
    $94 = ((($__sn)) + 1|0);
    HEAP8[$94>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $91 = ((($__sn)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    HEAP8[$92>>0] = 0;
    $93 = ((($__sn)) + 4|0);
    HEAP32[$93>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $95 = ((($7)) + 4|0);
   HEAP32[$95>>2] = 0;
   $96 = ((($7)) + 8|0);
   HEAP32[$96>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   $$pre$phi32Z2D = $80;
  } else {
   $97 = ((($81)) + 40|0);
   $98 = HEAP32[$97>>2]|0;
   FUNCTION_TABLE_vii[$98 & 63]($8,$80);
   $99 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$99&255;HEAP8[$__pat+1>>0]=($99>>8)&255;HEAP8[$__pat+2>>0]=($99>>16)&255;HEAP8[$__pat+3>>0]=$99>>24;
   $100 = HEAP32[$80>>2]|0;
   $101 = ((($100)) + 28|0);
   $102 = HEAP32[$101>>2]|0;
   FUNCTION_TABLE_vii[$102 & 63]($9,$80);
   $103 = HEAP8[$__sn>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   if ($105) {
    $109 = ((($__sn)) + 1|0);
    HEAP8[$109>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $106 = ((($__sn)) + 8|0);
    $107 = HEAP32[$106>>2]|0;
    HEAP8[$107>>0] = 0;
    $108 = ((($__sn)) + 4|0);
    HEAP32[$108>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   HEAP32[$9>>2] = 0;
   $110 = ((($9)) + 4|0);
   HEAP32[$110>>2] = 0;
   $111 = ((($9)) + 8|0);
   HEAP32[$111>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   $$pre$phi32Z2D = $80;
  }
  $112 = HEAP32[$80>>2]|0;
  $113 = ((($112)) + 12|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = (FUNCTION_TABLE_ii[$114 & 63]($80)|0);
  HEAP8[$__dp>>0] = $115;
  $116 = HEAP32[$80>>2]|0;
  $117 = ((($116)) + 16|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (FUNCTION_TABLE_ii[$118 & 63]($80)|0);
  HEAP8[$__ts>>0] = $119;
  $120 = HEAP32[$$pre$phi32Z2D>>2]|0;
  $121 = ((($120)) + 20|0);
  $122 = HEAP32[$121>>2]|0;
  FUNCTION_TABLE_vii[$122 & 63]($10,$80);
  $123 = HEAP8[$__grp>>0]|0;
  $124 = $123 & 1;
  $125 = ($124<<24>>24)==(0);
  if ($125) {
   $129 = ((($__grp)) + 1|0);
   HEAP8[$129>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $126 = ((($__grp)) + 8|0);
   $127 = HEAP32[$126>>2]|0;
   HEAP8[$127>>0] = 0;
   $128 = ((($__grp)) + 4|0);
   HEAP32[$128>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  HEAP32[$10>>2] = 0;
  $130 = ((($10)) + 4|0);
  HEAP32[$130>>2] = 0;
  $131 = ((($10)) + 8|0);
  HEAP32[$131>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $132 = HEAP32[$$pre$phi32Z2D>>2]|0;
  $133 = ((($132)) + 24|0);
  $134 = HEAP32[$133>>2]|0;
  FUNCTION_TABLE_vii[$134 & 63]($11,$80);
  $135 = HEAP8[$__sym>>0]|0;
  $136 = $135 & 1;
  $137 = ($136<<24>>24)==(0);
  if ($137) {
   $141 = ((($__sym)) + 1|0);
   HEAP8[$141>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $138 = ((($__sym)) + 8|0);
   $139 = HEAP32[$138>>2]|0;
   HEAP8[$139>>0] = 0;
   $140 = ((($__sym)) + 4|0);
   HEAP32[$140>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  HEAP32[$11>>2] = 0;
  $142 = ((($11)) + 4|0);
  HEAP32[$142>>2] = 0;
  $143 = ((($11)) + 8|0);
  HEAP32[$143>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $144 = HEAP32[$80>>2]|0;
  $145 = ((($144)) + 36|0);
  $146 = HEAP32[$145>>2]|0;
  $147 = (FUNCTION_TABLE_ii[$146 & 63]($80)|0);
  $storemerge = $147;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$$027 = 0, $$0$i$i$lcssa = 0, $$0$i$i35 = 0, $$0$i$i9$lcssa = 0, $$0$i$i958 = 0, $$01$i$i56 = 0, $$062 = 0, $$2 = 0, $$lcssa = 0, $$lcssa34 = 0, $$op = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0, $__d$0$lcssa26 = 0, $__d$036 = 0, $__d$142 = 0, $__d$2 = 0, $__d$351 = 0, $__f$043 = 0, $__f$146 = 0;
 var $__gl$0$ph = 0, $__gl$054 = 0, $__gl$1 = 0, $__ig$053 = 0, $__ig$1 = 0, $__ng$052 = 0, $__ng$1 = 0, $__p$061 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0, $scevgep$sum = 0, $scevgep29 = 0, $umax28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sn)) + 1|0);
 $3 = ((($__sym)) + 4|0);
 $4 = $__flags & 512;
 $5 = ($4|0)==(0);
 $6 = ((($__sym)) + 8|0);
 $7 = ((($__sym)) + 1|0);
 $8 = ((($__ct)) + 8|0);
 $9 = ($__fd|0)>(0);
 $10 = ((($__grp)) + 4|0);
 $11 = ((($__grp)) + 8|0);
 $12 = ((($__grp)) + 1|0);
 $13 = (($__fd) + 1)|0;
 $14 = (-2 - ($__fd))|0;
 $15 = ($__fd|0)<(0);
 $$op = $__fd ^ -1;
 $16 = $15 ? $$op : -1;
 $17 = (($14) - ($16))|0;
 $18 = ($__fd|0)>(0);
 $$062 = $__db;$__p$061 = 0;
 while(1) {
  $19 = (($__pat) + ($__p$061)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20 << 24 >> 24;
  switch ($21|0) {
  case 1:  {
   $23 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $23;
   $24 = HEAP32[$__ct>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (FUNCTION_TABLE_iii[$26 & 15]($__ct,32)|0);
   $28 = HEAP32[$__me>>2]|0;
   $29 = ((($28)) + 1|0);
   HEAP32[$__me>>2] = $29;
   HEAP8[$28>>0] = $27;
   $$2 = $$062;
   break;
  }
  case 4:  {
   $61 = HEAP32[$__me>>2]|0;
   $62 = ((($$062)) + 1|0);
   $$$0 = $__neg ? $62 : $$062;
   $$$027 = $$$0;
   $63 = HEAP32[$8>>2]|0;
   $64 = ($$$0>>>0)<($__de>>>0);
   L6: do {
    if ($64) {
     $__d$036 = $$$0;
     while(1) {
      $65 = HEAP8[$__d$036>>0]|0;
      $isascii1$i = ($65<<24>>24)>(-1);
      if (!($isascii1$i)) {
       $__d$0$lcssa = $__d$036;
       break L6;
      }
      $66 = $65 << 24 >> 24;
      $67 = (($63) + ($66<<1)|0);
      $68 = HEAP16[$67>>1]|0;
      $69 = $68 & 2048;
      $70 = ($69<<16>>16)==(0);
      if ($70) {
       $__d$0$lcssa = $__d$036;
       break L6;
      }
      $71 = ((($__d$036)) + 1|0);
      $72 = ($71>>>0)<($__de>>>0);
      if ($72) {
       $__d$036 = $71;
      } else {
       $__d$0$lcssa = $71;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   $__d$0$lcssa26 = $__d$0$lcssa;
   if ($9) {
    $73 = (-2 - ($__d$0$lcssa26))|0;
    $74 = ($__d$0$lcssa26>>>0)>($$$027>>>0);
    $75 = $74 ? $$$027 : $__d$0$lcssa26;
    $76 = $75 ^ -1;
    $77 = (($73) - ($76))|0;
    $78 = ($17>>>0)>($77>>>0);
    $umax28 = $78 ? $17 : $77;
    $79 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $80 = $79 & $18;
    if ($80) {
     $__d$142 = $__d$0$lcssa;$__f$043 = $__fd;
     while(1) {
      $81 = ((($__d$142)) + -1|0);
      $82 = HEAP8[$81>>0]|0;
      $83 = HEAP32[$__me>>2]|0;
      $84 = ((($83)) + 1|0);
      HEAP32[$__me>>2] = $84;
      HEAP8[$83>>0] = $82;
      $85 = (($__f$043) + -1)|0;
      $86 = ($81>>>0)>($$$0>>>0);
      $87 = ($__f$043|0)>(1);
      $88 = $86 & $87;
      if ($88) {
       $__d$142 = $81;$__f$043 = $85;
      } else {
       $$lcssa = $87;
       break;
      }
     }
    } else {
     $$lcssa = $18;
    }
    $89 = (($13) + ($umax28))|0;
    $scevgep$sum = (($umax28) + 1)|0;
    $scevgep29 = (($__d$0$lcssa) + ($scevgep$sum)|0);
    if ($$lcssa) {
     $90 = HEAP32[$__ct>>2]|0;
     $91 = ((($90)) + 28|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = (FUNCTION_TABLE_iii[$92 & 15]($__ct,48)|0);
     $97 = $93;
    } else {
     $97 = 0;
    }
    $94 = ($89|0)>(0);
    $95 = HEAP32[$__me>>2]|0;
    $96 = ((($95)) + 1|0);
    HEAP32[$__me>>2] = $96;
    if ($94) {
     $98 = $95;$__f$146 = $89;
     while(1) {
      HEAP8[$98>>0] = $97;
      $99 = (($__f$146) + -1)|0;
      $100 = ($__f$146|0)>(1);
      $101 = HEAP32[$__me>>2]|0;
      $102 = ((($101)) + 1|0);
      HEAP32[$__me>>2] = $102;
      if ($100) {
       $98 = $101;$__f$146 = $99;
      } else {
       $$lcssa34 = $101;
       break;
      }
     }
    } else {
     $$lcssa34 = $95;
    }
    HEAP8[$$lcssa34>>0] = $__dp;
    $__d$2 = $scevgep29;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $103 = ($__d$2|0)==($$$0|0);
   if ($103) {
    $104 = HEAP32[$__ct>>2]|0;
    $105 = ((($104)) + 28|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = (FUNCTION_TABLE_iii[$106 & 15]($__ct,48)|0);
    $108 = HEAP32[$__me>>2]|0;
    $109 = ((($108)) + 1|0);
    HEAP32[$__me>>2] = $109;
    HEAP8[$108>>0] = $107;
   } else {
    $110 = HEAP8[$__grp>>0]|0;
    $111 = $110 & 1;
    $112 = ($111<<24>>24)==(0);
    $113 = HEAP32[$10>>2]|0;
    $114 = $110&255;
    $115 = $114 >>> 1;
    $116 = $112 ? $115 : $113;
    $117 = ($116|0)==(0);
    if ($117) {
     $__gl$0$ph = -1;
    } else {
     $118 = HEAP32[$11>>2]|0;
     $119 = $112 ? $12 : $118;
     $120 = HEAP8[$119>>0]|0;
     $121 = $120 << 24 >> 24;
     $__gl$0$ph = $121;
    }
    $122 = ($__d$2|0)==($$$0|0);
    if (!($122)) {
     $__d$351 = $__d$2;$__gl$054 = $__gl$0$ph;$__ig$053 = 0;$__ng$052 = 0;
     while(1) {
      $123 = ($__ng$052|0)==($__gl$054|0);
      if ($123) {
       $124 = HEAP32[$__me>>2]|0;
       $125 = ((($124)) + 1|0);
       HEAP32[$__me>>2] = $125;
       HEAP8[$124>>0] = $__ts;
       $126 = (($__ig$053) + 1)|0;
       $127 = HEAP8[$__grp>>0]|0;
       $128 = $127 & 1;
       $129 = ($128<<24>>24)==(0);
       $130 = HEAP32[$10>>2]|0;
       $131 = $127&255;
       $132 = $131 >>> 1;
       $133 = $129 ? $132 : $130;
       $134 = ($126>>>0)<($133>>>0);
       if ($134) {
        $135 = HEAP32[$11>>2]|0;
        $136 = $129 ? $12 : $135;
        $137 = (($136) + ($126)|0);
        $138 = HEAP8[$137>>0]|0;
        $139 = ($138<<24>>24)==(127);
        $140 = $138 << 24 >> 24;
        $$ = $139 ? -1 : $140;
        $__gl$1 = $$;$__ig$1 = $126;$__ng$1 = 0;
       } else {
        $__gl$1 = $__ng$052;$__ig$1 = $126;$__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__gl$054;$__ig$1 = $__ig$053;$__ng$1 = $__ng$052;
      }
      $141 = ((($__d$351)) + -1|0);
      $142 = HEAP8[$141>>0]|0;
      $143 = HEAP32[$__me>>2]|0;
      $144 = ((($143)) + 1|0);
      HEAP32[$__me>>2] = $144;
      HEAP8[$143>>0] = $142;
      $145 = (($__ng$1) + 1)|0;
      $146 = ($141|0)==($$$0|0);
      if ($146) {
       break;
      } else {
       $__d$351 = $141;$__gl$054 = $__gl$1;$__ig$053 = $__ig$1;$__ng$052 = $145;
      }
     }
    }
   }
   $147 = HEAP32[$__me>>2]|0;
   $148 = ($61|0)==($147|0);
   if ($148) {
    $$2 = $$$0;
   } else {
    $149 = ((($147)) + -1|0);
    $150 = ($61>>>0)<($149>>>0);
    if ($150) {
     $$01$i$i56 = $61;$153 = $149;
     while(1) {
      $151 = HEAP8[$$01$i$i56>>0]|0;
      $152 = HEAP8[$153>>0]|0;
      HEAP8[$$01$i$i56>>0] = $152;
      HEAP8[$153>>0] = $151;
      $154 = ((($$01$i$i56)) + 1|0);
      $155 = ((($153)) + -1|0);
      $156 = ($154>>>0)<($155>>>0);
      if ($156) {
       $$01$i$i56 = $154;$153 = $155;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 2:  {
   $43 = HEAP8[$__sym>>0]|0;
   $44 = $43 & 1;
   $45 = ($44<<24>>24)==(0);
   $46 = HEAP32[$3>>2]|0;
   $47 = $43&255;
   $48 = $47 >>> 1;
   $49 = $45 ? $48 : $46;
   $50 = ($49|0)==(0);
   $or$cond = $5 | $50;
   if ($or$cond) {
    $$2 = $$062;
   } else {
    $51 = HEAP32[$6>>2]|0;
    $52 = $45 ? $7 : $51;
    $53 = (($52) + ($49)|0);
    $54 = HEAP32[$__me>>2]|0;
    $55 = ($49|0)==(0);
    if ($55) {
     $$0$i$i9$lcssa = $54;
    } else {
     $$0$i$i958 = $54;$57 = $52;
     while(1) {
      $56 = HEAP8[$57>>0]|0;
      HEAP8[$$0$i$i958>>0] = $56;
      $58 = ((($57)) + 1|0);
      $59 = ((($$0$i$i958)) + 1|0);
      $60 = ($58|0)==($53|0);
      if ($60) {
       $$0$i$i9$lcssa = $59;
       break;
      } else {
       $$0$i$i958 = $59;$57 = $58;
      }
     }
    }
    HEAP32[$__me>>2] = $$0$i$i9$lcssa;
    $$2 = $$062;
   }
   break;
  }
  case 0:  {
   $22 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $22;
   $$2 = $$062;
   break;
  }
  case 3:  {
   $30 = HEAP8[$__sn>>0]|0;
   $31 = $30 & 1;
   $32 = ($31<<24>>24)==(0);
   $33 = HEAP32[$0>>2]|0;
   $34 = $30&255;
   $35 = $34 >>> 1;
   $36 = $32 ? $35 : $33;
   $37 = ($36|0)==(0);
   if ($37) {
    $$2 = $$062;
   } else {
    $38 = HEAP32[$1>>2]|0;
    $39 = $32 ? $2 : $38;
    $40 = HEAP8[$39>>0]|0;
    $41 = HEAP32[$__me>>2]|0;
    $42 = ((($41)) + 1|0);
    HEAP32[$__me>>2] = $42;
    HEAP8[$41>>0] = $40;
    $$2 = $$062;
   }
   break;
  }
  default: {
   $$2 = $$062;
  }
  }
  $157 = (($__p$061) + 1)|0;
  $exitcond = ($157|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$062 = $$2;$__p$061 = $157;
  }
 }
 $158 = HEAP8[$__sn>>0]|0;
 $159 = $158 & 1;
 $160 = ($159<<24>>24)==(0);
 $161 = HEAP32[$0>>2]|0;
 $162 = $158&255;
 $163 = $162 >>> 1;
 $164 = $160 ? $163 : $161;
 $165 = ($164>>>0)>(1);
 if ($165) {
  $166 = HEAP32[$1>>2]|0;
  $167 = $160 ? $2 : $166;
  $168 = (($167) + ($164)|0);
  $169 = HEAP32[$__me>>2]|0;
  $170 = ($164|0)==(1);
  if ($170) {
   $$0$i$i$lcssa = $169;
  } else {
   $171 = ((($167)) + 1|0);
   $$0$i$i35 = $169;$173 = $171;
   while(1) {
    $172 = HEAP8[$173>>0]|0;
    HEAP8[$$0$i$i35>>0] = $172;
    $174 = ((($$0$i$i35)) + 1|0);
    $175 = ((($173)) + 1|0);
    $176 = ($175|0)==($168|0);
    if ($176) {
     $$0$i$i$lcssa = $174;
     break;
    } else {
     $$0$i$i35 = $174;$173 = $175;
    }
   }
  }
  HEAP32[$__me>>2] = $$0$i$i$lcssa;
 }
 $177 = $__flags & 176;
 if ((($177|0) == 32)) {
  $178 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $178;
 } else if (!((($177|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$byval_copy = 0, $$pre16 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $$byval_copy = sp + 56|0;
 $__loc = sp + 52|0;
 $__pat = sp + 164|0;
 $__dp = sp + 161|0;
 $__ts = sp + 160|0;
 $__grp = sp + 40|0;
 $__sym = sp + 28|0;
 $__sn = sp + 16|0;
 $__fd = sp + 12|0;
 $__mbuf = sp + 60|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 $2 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6176)|0);
 $3 = HEAP8[$__digits>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 $6 = ((($__digits)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3&255;
 $9 = $8 >>> 1;
 $10 = $5 ? $9 : $7;
 $11 = ($10|0)==(0);
 if ($11) {
  $28 = 0;
 } else {
  $12 = ((($__digits)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($__digits)) + 1|0);
  $15 = $5 ? $14 : $13;
  $16 = HEAP8[$15>>0]|0;
  $17 = HEAP32[$2>>2]|0;
  $18 = ((($17)) + 28|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (FUNCTION_TABLE_iii[$19 & 15]($2,45)|0);
  $21 = ($16<<24>>24)==($20<<24>>24);
  $28 = $21;
 }
 HEAP32[$__grp>>2] = 0;
 $22 = ((($__grp)) + 4|0);
 HEAP32[$22>>2] = 0;
 $23 = ((($__grp)) + 8|0);
 HEAP32[$23>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $24 = ((($__sym)) + 4|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($__sym)) + 8|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $26 = ((($__sn)) + 4|0);
 HEAP32[$26>>2] = 0;
 $27 = ((($__sn)) + 8|0);
 HEAP32[$27>>2] = 0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$28,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $29 = HEAP8[$__digits>>0]|0;
 $30 = $29 & 1;
 $31 = ($30<<24>>24)==(0);
 $32 = HEAP32[$6>>2]|0;
 $33 = $29&255;
 $34 = $33 >>> 1;
 $35 = $31 ? $34 : $32;
 $36 = HEAP32[$__fd>>2]|0;
 $37 = ($35|0)>($36|0);
 if ($37) {
  $38 = (($35) - ($36))|0;
  $39 = $38 << 1;
  $40 = HEAP8[$__sn>>0]|0;
  $41 = $40 & 1;
  $42 = ($41<<24>>24)==(0);
  $43 = ((($__sn)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = $40&255;
  $46 = $45 >>> 1;
  $47 = $42 ? $46 : $44;
  $48 = HEAP8[$__sym>>0]|0;
  $49 = $48 & 1;
  $50 = ($49<<24>>24)==(0);
  $51 = ((($__sym)) + 4|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = $48&255;
  $54 = $53 >>> 1;
  $55 = $50 ? $54 : $52;
  $56 = $39 | 1;
  $57 = (($56) + ($36))|0;
  $58 = (($57) + ($47))|0;
  $59 = (($58) + ($55))|0;
  $79 = $59;
 } else {
  $60 = HEAP8[$__sn>>0]|0;
  $61 = $60 & 1;
  $62 = ($61<<24>>24)==(0);
  $63 = ((($__sn)) + 4|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = $60&255;
  $66 = $65 >>> 1;
  $67 = $62 ? $66 : $64;
  $68 = HEAP8[$__sym>>0]|0;
  $69 = $68 & 1;
  $70 = ($69<<24>>24)==(0);
  $71 = ((($__sym)) + 4|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = $68&255;
  $74 = $73 >>> 1;
  $75 = $70 ? $74 : $72;
  $76 = (($36) + 2)|0;
  $77 = (($76) + ($67))|0;
  $78 = (($77) + ($75))|0;
  $79 = $78;
 }
 $80 = ($79>>>0)>(100);
 if ($80) {
  $81 = (_malloc($79)|0);
  $82 = $81;
  $83 = ($81|0)==(0|0);
  if ($83) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $102 = $82;$__mb$0 = $81;
  }
 } else {
  $102 = 0;$__mb$0 = $__mbuf;
 }
 $84 = ((($__iob)) + 4|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = $29 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__digits)) + 8|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = ((($__digits)) + 1|0);
 $91 = $87 ? $90 : $89;
 $92 = $29&255;
 $93 = $92 >>> 1;
 $94 = $87 ? $93 : $32;
 $95 = (($91) + ($94)|0);
 $96 = HEAP8[$__dp>>0]|0;
 $97 = HEAP8[$__ts>>0]|0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0,$__mi,$__me,$85,$91,$95,$2,$28,$__pat,$96,$97,$__grp,$__sym,$__sn,$36);
 $98 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $98;
 $99 = HEAP32[$__mi>>2]|0;
 $100 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $101 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$99,$100,$__iob,$__fl)|0);
 $103 = ($102|0)==(0);
 if ($103) {
  $105 = $1;
 } else {
  $104 = $102;
  _free($104);
  $$pre16 = HEAP32[$__loc>>2]|0;
  $105 = $$pre16;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($105)|0);
 STACKTOP = sp;return ($101|0);
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$byval_copy = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0;
 $$byval_copy = sp + 8|0;
 $vararg_buffer1 = sp;
 $__buf = sp + 896|0;
 $__bb = sp + 888|0;
 $__digits = sp + 488|0;
 $__loc = sp + 480|0;
 $__pat = sp + 892|0;
 $__dp = sp + 476|0;
 $__ts = sp + 472|0;
 $__grp = sp + 460|0;
 $__sym = sp + 448|0;
 $__sn = sp + 436|0;
 $__fd = sp + 432|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$$byval_copy>>3] = $__units;
 $1 = (_snprintf($__buf,100,9512,$$byval_copy)|0);
 $2 = ($1>>>0)>(99);
 if ($2) {
  $3 = (__ZNSt3__16__clocEv()|0);
  HEAPF64[$vararg_buffer1>>3] = $__units;
  $4 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$3,9512,$vararg_buffer1)|0);
  $5 = HEAP32[$__bb>>2]|0;
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  }
  $7 = $5;
  $8 = $4 << 2;
  $9 = (_malloc($8)|0);
  $10 = $9;
  $11 = ($9|0)==(0|0);
  if ($11) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $92 = $10;$95 = $7;$__db$0 = $9;$__n$0 = $4;
  }
 } else {
  $92 = 0;$95 = 0;$__db$0 = $__digits;$__n$0 = $1;
 }
 $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $12;
 $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $14 = HEAP32[$__bb>>2]|0;
 $15 = (($14) + ($__n$0)|0);
 $16 = HEAP32[$13>>2]|0;
 $17 = ((($16)) + 48|0);
 $18 = HEAP32[$17>>2]|0;
 (FUNCTION_TABLE_iiiii[$18 & 7]($13,$14,$15,$__db$0)|0);
 $19 = ($__n$0|0)==(0);
 if ($19) {
  $29 = 0;
 } else {
  $20 = HEAP32[$__bb>>2]|0;
  $21 = HEAP8[$20>>0]|0;
  $22 = ($21<<24>>24)==(45);
  $29 = $22;
 }
 HEAP32[$__grp>>2] = 0;
 $23 = ((($__grp)) + 4|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($__grp)) + 8|0);
 HEAP32[$24>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $25 = ((($__sym)) + 4|0);
 HEAP32[$25>>2] = 0;
 $26 = ((($__sym)) + 8|0);
 HEAP32[$26>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $27 = ((($__sn)) + 4|0);
 HEAP32[$27>>2] = 0;
 $28 = ((($__sn)) + 8|0);
 HEAP32[$28>>2] = 0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$29,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $30 = HEAP32[$__fd>>2]|0;
 $31 = ($__n$0|0)>($30|0);
 if ($31) {
  $32 = (($__n$0) - ($30))|0;
  $33 = $32 << 1;
  $34 = HEAP8[$__sn>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  $37 = ((($__sn)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = $34&255;
  $40 = $39 >>> 1;
  $41 = $36 ? $40 : $38;
  $42 = HEAP8[$__sym>>0]|0;
  $43 = $42 & 1;
  $44 = ($43<<24>>24)==(0);
  $45 = ((($__sym)) + 4|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = $42&255;
  $48 = $47 >>> 1;
  $49 = $44 ? $48 : $46;
  $50 = $33 | 1;
  $51 = (($50) + ($30))|0;
  $52 = (($51) + ($41))|0;
  $53 = (($52) + ($49))|0;
  $73 = $53;
 } else {
  $54 = HEAP8[$__sn>>0]|0;
  $55 = $54 & 1;
  $56 = ($55<<24>>24)==(0);
  $57 = ((($__sn)) + 4|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = $54&255;
  $60 = $59 >>> 1;
  $61 = $56 ? $60 : $58;
  $62 = HEAP8[$__sym>>0]|0;
  $63 = $62 & 1;
  $64 = ($63<<24>>24)==(0);
  $65 = ((($__sym)) + 4|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = $62&255;
  $68 = $67 >>> 1;
  $69 = $64 ? $68 : $66;
  $70 = (($30) + 2)|0;
  $71 = (($70) + ($61))|0;
  $72 = (($71) + ($69))|0;
  $73 = $72;
 }
 $74 = ($73>>>0)>(100);
 if ($74) {
  $75 = $73 << 2;
  $76 = (_malloc($75)|0);
  $77 = $76;
  $78 = ($76|0)==(0|0);
  if ($78) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $88 = $77;$__mb$0 = $76;
  }
 } else {
  $88 = 0;$__mb$0 = $__mbuf;
 }
 $79 = ((($__iob)) + 4|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = (($__db$0) + ($__n$0<<2)|0);
 $82 = HEAP32[$__dp>>2]|0;
 $83 = HEAP32[$__ts>>2]|0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0,$__mi,$__me,$80,$__db$0,$81,$13,$29,$__pat,$82,$83,$__grp,$__sym,$__sn,$30);
 $84 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $84;
 $85 = HEAP32[$__mi>>2]|0;
 $86 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $87 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$85,$86,$__iob,$__fl)|0);
 $89 = ($88|0)==(0);
 if ($89) {
  $91 = $12;
 } else {
  $90 = $88;
  _free($90);
  $$pre11 = HEAP32[$__loc>>2]|0;
  $91 = $$pre11;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($91)|0);
 $93 = ($92|0)==(0);
 if (!($93)) {
  $94 = $92;
  _free($94);
 }
 $96 = ($95|0)==(0);
 if (!($96)) {
  $97 = $95;
  _free($97);
 }
 STACKTOP = sp;return ($87|0);
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5888)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = ((($13)) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 63]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = ((($17)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 63]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = ((($__sn)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP32[$24>>2] = 0;
   }
   $25 = ((($__sn)) + 4|0);
   HEAP32[$25>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $26 = ((($1)) + 4|0);
   HEAP32[$26>>2] = 0;
   $27 = ((($1)) + 8|0);
   HEAP32[$27>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   $28 = ((($13)) + 40|0);
   $29 = HEAP32[$28>>2]|0;
   FUNCTION_TABLE_vii[$29 & 63]($2,$12);
   $30 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$30&255;HEAP8[$__pat+1>>0]=($30>>8)&255;HEAP8[$__pat+2>>0]=($30>>16)&255;HEAP8[$__pat+3>>0]=$30>>24;
   $31 = HEAP32[$12>>2]|0;
   $32 = ((($31)) + 28|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 63]($3,$12);
   $34 = HEAP8[$__sn>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $37 = ((($__sn)) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    HEAP32[$38>>2] = 0;
   }
   $39 = ((($__sn)) + 4|0);
   HEAP32[$39>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $40 = ((($3)) + 4|0);
   HEAP32[$40>>2] = 0;
   $41 = ((($3)) + 8|0);
   HEAP32[$41>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  $42 = HEAP32[$12>>2]|0;
  $43 = ((($42)) + 12|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = (FUNCTION_TABLE_ii[$44 & 63]($12)|0);
  HEAP32[$__dp>>2] = $45;
  $46 = HEAP32[$12>>2]|0;
  $47 = ((($46)) + 16|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = (FUNCTION_TABLE_ii[$48 & 63]($12)|0);
  HEAP32[$__ts>>2] = $49;
  $50 = HEAP32[$12>>2]|0;
  $51 = ((($50)) + 20|0);
  $52 = HEAP32[$51>>2]|0;
  FUNCTION_TABLE_vii[$52 & 63]($4,$12);
  $53 = HEAP8[$__grp>>0]|0;
  $54 = $53 & 1;
  $55 = ($54<<24>>24)==(0);
  if ($55) {
   $59 = ((($__grp)) + 1|0);
   HEAP8[$59>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $56 = ((($__grp)) + 8|0);
   $57 = HEAP32[$56>>2]|0;
   HEAP8[$57>>0] = 0;
   $58 = ((($__grp)) + 4|0);
   HEAP32[$58>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $60 = ((($4)) + 4|0);
  HEAP32[$60>>2] = 0;
  $61 = ((($4)) + 8|0);
  HEAP32[$61>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $62 = HEAP32[$12>>2]|0;
  $63 = ((($62)) + 24|0);
  $64 = HEAP32[$63>>2]|0;
  FUNCTION_TABLE_vii[$64 & 63]($5,$12);
  $65 = HEAP8[$__sym>>0]|0;
  $66 = $65 & 1;
  $67 = ($66<<24>>24)==(0);
  if ($67) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $68 = ((($__sym)) + 8|0);
   $69 = HEAP32[$68>>2]|0;
   HEAP32[$69>>2] = 0;
  }
  $70 = ((($__sym)) + 4|0);
  HEAP32[$70>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  HEAP32[$5>>2] = 0;
  $71 = ((($5)) + 4|0);
  HEAP32[$71>>2] = 0;
  $72 = ((($5)) + 8|0);
  HEAP32[$72>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $73 = HEAP32[$12>>2]|0;
  $74 = ((($73)) + 36|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = (FUNCTION_TABLE_ii[$75 & 63]($12)|0);
  $storemerge = $76;
 } else {
  $77 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5824)|0);
  $78 = HEAP32[$77>>2]|0;
  if ($__neg) {
   $79 = ((($78)) + 44|0);
   $80 = HEAP32[$79>>2]|0;
   FUNCTION_TABLE_vii[$80 & 63]($6,$77);
   $81 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$81&255;HEAP8[$__pat+1>>0]=($81>>8)&255;HEAP8[$__pat+2>>0]=($81>>16)&255;HEAP8[$__pat+3>>0]=$81>>24;
   $82 = HEAP32[$77>>2]|0;
   $83 = ((($82)) + 32|0);
   $84 = HEAP32[$83>>2]|0;
   FUNCTION_TABLE_vii[$84 & 63]($7,$77);
   $85 = HEAP8[$__sn>>0]|0;
   $86 = $85 & 1;
   $87 = ($86<<24>>24)==(0);
   if ($87) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $88 = ((($__sn)) + 8|0);
    $89 = HEAP32[$88>>2]|0;
    HEAP32[$89>>2] = 0;
   }
   $90 = ((($__sn)) + 4|0);
   HEAP32[$90>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $91 = ((($7)) + 4|0);
   HEAP32[$91>>2] = 0;
   $92 = ((($7)) + 8|0);
   HEAP32[$92>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   $93 = ((($78)) + 40|0);
   $94 = HEAP32[$93>>2]|0;
   FUNCTION_TABLE_vii[$94 & 63]($8,$77);
   $95 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$95&255;HEAP8[$__pat+1>>0]=($95>>8)&255;HEAP8[$__pat+2>>0]=($95>>16)&255;HEAP8[$__pat+3>>0]=$95>>24;
   $96 = HEAP32[$77>>2]|0;
   $97 = ((($96)) + 28|0);
   $98 = HEAP32[$97>>2]|0;
   FUNCTION_TABLE_vii[$98 & 63]($9,$77);
   $99 = HEAP8[$__sn>>0]|0;
   $100 = $99 & 1;
   $101 = ($100<<24>>24)==(0);
   if ($101) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $102 = ((($__sn)) + 8|0);
    $103 = HEAP32[$102>>2]|0;
    HEAP32[$103>>2] = 0;
   }
   $104 = ((($__sn)) + 4|0);
   HEAP32[$104>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   HEAP32[$9>>2] = 0;
   $105 = ((($9)) + 4|0);
   HEAP32[$105>>2] = 0;
   $106 = ((($9)) + 8|0);
   HEAP32[$106>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  $107 = HEAP32[$77>>2]|0;
  $108 = ((($107)) + 12|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = (FUNCTION_TABLE_ii[$109 & 63]($77)|0);
  HEAP32[$__dp>>2] = $110;
  $111 = HEAP32[$77>>2]|0;
  $112 = ((($111)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = (FUNCTION_TABLE_ii[$113 & 63]($77)|0);
  HEAP32[$__ts>>2] = $114;
  $115 = HEAP32[$77>>2]|0;
  $116 = ((($115)) + 20|0);
  $117 = HEAP32[$116>>2]|0;
  FUNCTION_TABLE_vii[$117 & 63]($10,$77);
  $118 = HEAP8[$__grp>>0]|0;
  $119 = $118 & 1;
  $120 = ($119<<24>>24)==(0);
  if ($120) {
   $124 = ((($__grp)) + 1|0);
   HEAP8[$124>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $121 = ((($__grp)) + 8|0);
   $122 = HEAP32[$121>>2]|0;
   HEAP8[$122>>0] = 0;
   $123 = ((($__grp)) + 4|0);
   HEAP32[$123>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  HEAP32[$10>>2] = 0;
  $125 = ((($10)) + 4|0);
  HEAP32[$125>>2] = 0;
  $126 = ((($10)) + 8|0);
  HEAP32[$126>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $127 = HEAP32[$77>>2]|0;
  $128 = ((($127)) + 24|0);
  $129 = HEAP32[$128>>2]|0;
  FUNCTION_TABLE_vii[$129 & 63]($11,$77);
  $130 = HEAP8[$__sym>>0]|0;
  $131 = $130 & 1;
  $132 = ($131<<24>>24)==(0);
  if ($132) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $133 = ((($__sym)) + 8|0);
   $134 = HEAP32[$133>>2]|0;
   HEAP32[$134>>2] = 0;
  }
  $135 = ((($__sym)) + 4|0);
  HEAP32[$135>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  HEAP32[$11>>2] = 0;
  $136 = ((($11)) + 4|0);
  HEAP32[$136>>2] = 0;
  $137 = ((($11)) + 8|0);
  HEAP32[$137>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $138 = HEAP32[$77>>2]|0;
  $139 = ((($138)) + 36|0);
  $140 = HEAP32[$139>>2]|0;
  $141 = (FUNCTION_TABLE_ii[$140 & 63]($77)|0);
  $storemerge = $141;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0$i$i30 = 0, $$0$i$i954 = 0, $$01$i$i52 = 0, $$057 = 0, $$2 = 0, $$lcssa = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa67 = 0, $$op = 0, $$pre29 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0;
 var $__d$031 = 0, $__d$1$lcssa = 0, $__d$137 = 0, $__d$2 = 0, $__d$347 = 0, $__f$0$lcssa = 0, $__f$038 = 0, $__f$143 = 0, $__gl$0$ph = 0, $__gl$050 = 0, $__gl$1 = 0, $__ig$049 = 0, $__ig$1 = 0, $__me$promoted = 0, $__me$promoted66 = 0, $__ng$048 = 0, $__ng$1 = 0, $__p$056 = 0, $exitcond = 0, $or$cond = 0;
 var $scevgep$i = 0, $scevgep$i10 = 0, $scevgep$sum = 0, $scevgep26 = 0, $scevgep27$sum = 0, $scevgep28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sym)) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = ((($__sym)) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = ((($__grp)) + 4|0);
 $8 = ((($__grp)) + 8|0);
 $9 = ((($__grp)) + 1|0);
 $10 = ($__fd|0)>(0);
 $$057 = $__db;$__p$056 = 0;
 while(1) {
  $11 = (($__pat) + ($__p$056)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  switch ($13|0) {
  case 0:  {
   $14 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $14;
   $$2 = $$057;
   break;
  }
  case 2:  {
   $35 = HEAP8[$__sym>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   $38 = HEAP32[$2>>2]|0;
   $39 = $35&255;
   $40 = $39 >>> 1;
   $41 = $37 ? $40 : $38;
   $42 = ($41|0)==(0);
   $or$cond = $4 | $42;
   if ($or$cond) {
    $$2 = $$057;
   } else {
    $43 = HEAP32[$5>>2]|0;
    $44 = $37 ? $2 : $43;
    $45 = (($44) + ($41<<2)|0);
    $46 = HEAP32[$__me>>2]|0;
    $47 = ($41|0)==(0);
    if (!($47)) {
     $$0$i$i954 = $46;$49 = $44;
     while(1) {
      $48 = HEAP32[$49>>2]|0;
      HEAP32[$$0$i$i954>>2] = $48;
      $50 = ((($49)) + 4|0);
      $51 = ((($$0$i$i954)) + 4|0);
      $52 = ($50|0)==($45|0);
      if ($52) {
       break;
      } else {
       $$0$i$i954 = $51;$49 = $50;
      }
     }
    }
    $scevgep$i10 = (($46) + ($41<<2)|0);
    HEAP32[$__me>>2] = $scevgep$i10;
    $$2 = $$057;
   }
   break;
  }
  case 3:  {
   $22 = HEAP8[$__sn>>0]|0;
   $23 = $22 & 1;
   $24 = ($23<<24>>24)==(0);
   $25 = HEAP32[$0>>2]|0;
   $26 = $22&255;
   $27 = $26 >>> 1;
   $28 = $24 ? $27 : $25;
   $29 = ($28|0)==(0);
   if ($29) {
    $$2 = $$057;
   } else {
    $30 = HEAP32[$1>>2]|0;
    $31 = $24 ? $0 : $30;
    $32 = HEAP32[$31>>2]|0;
    $33 = HEAP32[$__me>>2]|0;
    $34 = ((($33)) + 4|0);
    HEAP32[$__me>>2] = $34;
    HEAP32[$33>>2] = $32;
    $$2 = $$057;
   }
   break;
  }
  case 4:  {
   $53 = HEAP32[$__me>>2]|0;
   $54 = ((($$057)) + 4|0);
   $$$0 = $__neg ? $54 : $$057;
   $55 = ($$$0>>>0)<($__de>>>0);
   L14: do {
    if ($55) {
     $__d$031 = $$$0;
     while(1) {
      $56 = HEAP32[$__d$031>>2]|0;
      $57 = HEAP32[$__ct>>2]|0;
      $58 = ((($57)) + 12|0);
      $59 = HEAP32[$58>>2]|0;
      $60 = (FUNCTION_TABLE_iiii[$59 & 31]($__ct,2048,$56)|0);
      if (!($60)) {
       $__d$0$lcssa = $__d$031;
       break L14;
      }
      $61 = ((($__d$031)) + 4|0);
      $62 = ($61>>>0)<($__de>>>0);
      if ($62) {
       $__d$031 = $61;
      } else {
       $__d$0$lcssa = $61;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   if ($6) {
    $63 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $64 = $63 & $10;
    if ($64) {
     $__me$promoted66 = HEAP32[$__me>>2]|0;
     $68 = $__me$promoted66;$__d$137 = $__d$0$lcssa;$__f$038 = $__fd;
     while(1) {
      $65 = ((($__d$137)) + -4|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ((($68)) + 4|0);
      HEAP32[$68>>2] = $66;
      $69 = (($__f$038) + -1)|0;
      $70 = ($65>>>0)>($$$0>>>0);
      $71 = ($__f$038|0)>(1);
      $72 = $70 & $71;
      if ($72) {
       $68 = $67;$__d$137 = $65;$__f$038 = $69;
      } else {
       $$lcssa63 = $65;$$lcssa64 = $69;$$lcssa65 = $71;$$lcssa67 = $67;
       break;
      }
     }
     HEAP32[$__me>>2] = $$lcssa67;
     $$lcssa = $$lcssa65;$__d$1$lcssa = $$lcssa63;$__f$0$lcssa = $$lcssa64;
    } else {
     $$lcssa = $10;$__d$1$lcssa = $__d$0$lcssa;$__f$0$lcssa = $__fd;
    }
    if ($$lcssa) {
     $73 = HEAP32[$__ct>>2]|0;
     $74 = ((($73)) + 44|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (FUNCTION_TABLE_iii[$75 & 15]($__ct,48)|0);
     $83 = $76;
    } else {
     $83 = 0;
    }
    $__me$promoted = HEAP32[$__me>>2]|0;
    $77 = ($__f$0$lcssa|0)<(0);
    $$op = $__f$0$lcssa ^ -1;
    $78 = $77 ? $$op : -1;
    $79 = (($__f$0$lcssa) + ($78))|0;
    $80 = ($__f$0$lcssa|0)>(0);
    if ($80) {
     $82 = $__me$promoted;$__f$143 = $__f$0$lcssa;
     while(1) {
      $81 = ((($82)) + 4|0);
      HEAP32[$82>>2] = $83;
      $84 = (($__f$143) + -1)|0;
      $85 = ($__f$143|0)>(1);
      if ($85) {
       $82 = $81;$__f$143 = $84;
      } else {
       break;
      }
     }
    }
    $scevgep$sum = (($79) + 2)|0;
    $scevgep26 = (($__me$promoted) + ($scevgep$sum<<2)|0);
    $scevgep27$sum = (($79) + 1)|0;
    $scevgep28 = (($__me$promoted) + ($scevgep27$sum<<2)|0);
    HEAP32[$__me>>2] = $scevgep26;
    HEAP32[$scevgep28>>2] = $__dp;
    $__d$2 = $__d$1$lcssa;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $86 = ($__d$2|0)==($$$0|0);
   if ($86) {
    $87 = HEAP32[$__ct>>2]|0;
    $88 = ((($87)) + 44|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = (FUNCTION_TABLE_iii[$89 & 15]($__ct,48)|0);
    $91 = HEAP32[$__me>>2]|0;
    $92 = ((($91)) + 4|0);
    HEAP32[$__me>>2] = $92;
    HEAP32[$91>>2] = $90;
    $130 = $92;
   } else {
    $93 = HEAP8[$__grp>>0]|0;
    $94 = $93 & 1;
    $95 = ($94<<24>>24)==(0);
    $96 = HEAP32[$7>>2]|0;
    $97 = $93&255;
    $98 = $97 >>> 1;
    $99 = $95 ? $98 : $96;
    $100 = ($99|0)==(0);
    if ($100) {
     $__gl$0$ph = -1;
    } else {
     $101 = HEAP32[$8>>2]|0;
     $102 = $95 ? $9 : $101;
     $103 = HEAP8[$102>>0]|0;
     $104 = $103 << 24 >> 24;
     $__gl$0$ph = $104;
    }
    $105 = ($__d$2|0)==($$$0|0);
    if (!($105)) {
     $__d$347 = $__d$2;$__gl$050 = $__gl$0$ph;$__ig$049 = 0;$__ng$048 = 0;
     while(1) {
      $106 = ($__ng$048|0)==($__gl$050|0);
      $107 = HEAP32[$__me>>2]|0;
      if ($106) {
       $108 = ((($107)) + 4|0);
       HEAP32[$__me>>2] = $108;
       HEAP32[$107>>2] = $__ts;
       $109 = (($__ig$049) + 1)|0;
       $110 = HEAP8[$__grp>>0]|0;
       $111 = $110 & 1;
       $112 = ($111<<24>>24)==(0);
       $113 = $110&255;
       $114 = $113 >>> 1;
       $115 = $112 ? $114 : $96;
       $116 = ($109>>>0)<($115>>>0);
       if ($116) {
        $117 = HEAP32[$8>>2]|0;
        $118 = $112 ? $9 : $117;
        $119 = (($118) + ($109)|0);
        $120 = HEAP8[$119>>0]|0;
        $121 = ($120<<24>>24)==(127);
        $122 = $120 << 24 >> 24;
        $$ = $121 ? -1 : $122;
        $126 = $108;$__gl$1 = $$;$__ig$1 = $109;$__ng$1 = 0;
       } else {
        $126 = $108;$__gl$1 = $__ng$048;$__ig$1 = $109;$__ng$1 = 0;
       }
      } else {
       $126 = $107;$__gl$1 = $__gl$050;$__ig$1 = $__ig$049;$__ng$1 = $__ng$048;
      }
      $123 = ((($__d$347)) + -4|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ((($126)) + 4|0);
      HEAP32[$__me>>2] = $125;
      HEAP32[$126>>2] = $124;
      $127 = (($__ng$1) + 1)|0;
      $128 = ($123|0)==($$$0|0);
      if ($128) {
       break;
      } else {
       $__d$347 = $123;$__gl$050 = $__gl$1;$__ig$049 = $__ig$1;$__ng$048 = $127;
      }
     }
    }
    $$pre29 = HEAP32[$__me>>2]|0;
    $130 = $$pre29;
   }
   $129 = ($53|0)==($130|0);
   if ($129) {
    $$2 = $$$0;
   } else {
    $131 = ((($130)) + -4|0);
    $132 = ($53>>>0)<($131>>>0);
    if ($132) {
     $$01$i$i52 = $53;$135 = $131;
     while(1) {
      $133 = HEAP32[$$01$i$i52>>2]|0;
      $134 = HEAP32[$135>>2]|0;
      HEAP32[$$01$i$i52>>2] = $134;
      HEAP32[$135>>2] = $133;
      $136 = ((($$01$i$i52)) + 4|0);
      $137 = ((($135)) + -4|0);
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $$01$i$i52 = $136;$135 = $137;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 1:  {
   $15 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $15;
   $16 = HEAP32[$__ct>>2]|0;
   $17 = ((($16)) + 44|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (FUNCTION_TABLE_iii[$18 & 15]($__ct,32)|0);
   $20 = HEAP32[$__me>>2]|0;
   $21 = ((($20)) + 4|0);
   HEAP32[$__me>>2] = $21;
   HEAP32[$20>>2] = $19;
   $$2 = $$057;
   break;
  }
  default: {
   $$2 = $$057;
  }
  }
  $139 = (($__p$056) + 1)|0;
  $exitcond = ($139|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$057 = $$2;$__p$056 = $139;
  }
 }
 $140 = HEAP8[$__sn>>0]|0;
 $141 = $140 & 1;
 $142 = ($141<<24>>24)==(0);
 $143 = HEAP32[$0>>2]|0;
 $144 = $140&255;
 $145 = $144 >>> 1;
 $146 = $142 ? $145 : $143;
 $147 = ($146>>>0)>(1);
 if ($147) {
  $148 = HEAP32[$1>>2]|0;
  $149 = $142 ? $0 : $148;
  $150 = ((($149)) + 4|0);
  $151 = (($149) + ($146<<2)|0);
  $152 = HEAP32[$__me>>2]|0;
  $153 = $150;
  $154 = $151;
  $155 = (($154) - ($153))|0;
  $156 = ($146|0)==(1);
  if (!($156)) {
   $$0$i$i30 = $152;$158 = $150;
   while(1) {
    $157 = HEAP32[$158>>2]|0;
    HEAP32[$$0$i$i30>>2] = $157;
    $159 = ((($158)) + 4|0);
    $160 = ((($$0$i$i30)) + 4|0);
    $161 = ($159|0)==($151|0);
    if ($161) {
     break;
    } else {
     $$0$i$i30 = $160;$158 = $159;
    }
   }
  }
  $162 = $155 >>> 2;
  $scevgep$i = (($152) + ($162<<2)|0);
  HEAP32[$__me>>2] = $scevgep$i;
 }
 $163 = $__flags & 176;
 if ((($163|0) == 32)) {
  $164 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $164;
 } else if (!((($163|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$byval_copy = 0, $$pre15 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0;
 $$byval_copy = sp + 468|0;
 $__loc = sp + 464|0;
 $__pat = sp + 472|0;
 $__dp = sp + 460|0;
 $__ts = sp + 456|0;
 $__grp = sp + 444|0;
 $__sym = sp + 432|0;
 $__sn = sp + 420|0;
 $__fd = sp + 416|0;
 $__mbuf = sp + 16|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 $2 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $3 = HEAP8[$__digits>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 $6 = ((($__digits)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3&255;
 $9 = $8 >>> 1;
 $10 = $5 ? $9 : $7;
 $11 = ($10|0)==(0);
 if ($11) {
  $27 = 0;
 } else {
  $12 = ((($__digits)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $5 ? $6 : $13;
  $15 = HEAP32[$14>>2]|0;
  $16 = HEAP32[$2>>2]|0;
  $17 = ((($16)) + 44|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (FUNCTION_TABLE_iii[$18 & 15]($2,45)|0);
  $20 = ($15|0)==($19|0);
  $27 = $20;
 }
 HEAP32[$__grp>>2] = 0;
 $21 = ((($__grp)) + 4|0);
 HEAP32[$21>>2] = 0;
 $22 = ((($__grp)) + 8|0);
 HEAP32[$22>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $23 = ((($__sym)) + 4|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($__sym)) + 8|0);
 HEAP32[$24>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $25 = ((($__sn)) + 4|0);
 HEAP32[$25>>2] = 0;
 $26 = ((($__sn)) + 8|0);
 HEAP32[$26>>2] = 0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$27,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $28 = HEAP8[$__digits>>0]|0;
 $29 = $28 & 1;
 $30 = ($29<<24>>24)==(0);
 $31 = HEAP32[$6>>2]|0;
 $32 = $28&255;
 $33 = $32 >>> 1;
 $34 = $30 ? $33 : $31;
 $35 = HEAP32[$__fd>>2]|0;
 $36 = ($34|0)>($35|0);
 if ($36) {
  $37 = (($34) - ($35))|0;
  $38 = $37 << 1;
  $39 = HEAP8[$__sn>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  $42 = ((($__sn)) + 4|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = $39&255;
  $45 = $44 >>> 1;
  $46 = $41 ? $45 : $43;
  $47 = HEAP8[$__sym>>0]|0;
  $48 = $47 & 1;
  $49 = ($48<<24>>24)==(0);
  $50 = ((($__sym)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = $47&255;
  $53 = $52 >>> 1;
  $54 = $49 ? $53 : $51;
  $55 = $38 | 1;
  $56 = (($55) + ($35))|0;
  $57 = (($56) + ($46))|0;
  $58 = (($57) + ($54))|0;
  $78 = $58;
 } else {
  $59 = HEAP8[$__sn>>0]|0;
  $60 = $59 & 1;
  $61 = ($60<<24>>24)==(0);
  $62 = ((($__sn)) + 4|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = $59&255;
  $65 = $64 >>> 1;
  $66 = $61 ? $65 : $63;
  $67 = HEAP8[$__sym>>0]|0;
  $68 = $67 & 1;
  $69 = ($68<<24>>24)==(0);
  $70 = ((($__sym)) + 4|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = $67&255;
  $73 = $72 >>> 1;
  $74 = $69 ? $73 : $71;
  $75 = (($35) + 2)|0;
  $76 = (($75) + ($66))|0;
  $77 = (($76) + ($74))|0;
  $78 = $77;
 }
 $79 = ($78>>>0)>(100);
 if ($79) {
  $80 = $78 << 2;
  $81 = (_malloc($80)|0);
  $82 = $81;
  $83 = ($81|0)==(0|0);
  if ($83) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $101 = $82;$__mb$0 = $81;
  }
 } else {
  $101 = 0;$__mb$0 = $__mbuf;
 }
 $84 = ((($__iob)) + 4|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = $28 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__digits)) + 8|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $87 ? $6 : $89;
 $91 = $28&255;
 $92 = $91 >>> 1;
 $93 = $87 ? $92 : $31;
 $94 = (($90) + ($93<<2)|0);
 $95 = HEAP32[$__dp>>2]|0;
 $96 = HEAP32[$__ts>>2]|0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0,$__mi,$__me,$85,$90,$94,$2,$27,$__pat,$95,$96,$__grp,$__sym,$__sn,$35);
 $97 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $97;
 $98 = HEAP32[$__mi>>2]|0;
 $99 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $100 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$98,$99,$__iob,$__fl)|0);
 $102 = ($101|0)==(0);
 if ($102) {
  $104 = $1;
 } else {
  $103 = $101;
  _free($103);
  $$pre15 = HEAP32[$__loc>>2]|0;
  $104 = $$pre15;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($104)|0);
 STACKTOP = sp;return ($100|0);
}
function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i12 = 0, $$0$i614 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ndflt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__ndflt = sp;
 HEAP32[$__ndflt>>2] = 0;
 $0 = ((($__ndflt)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__ndflt)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__dflt>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 $5 = ((($__dflt)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($__dflt)) + 1|0);
 $8 = $4 ? $7 : $6;
 $9 = ((($__dflt)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $2&255;
 $12 = $11 >>> 1;
 $13 = $4 ? $12 : $10;
 $14 = (($8) + ($13)|0);
 $15 = ($13|0)>(0);
 if ($15) {
  $$0$i614 = $8;
  while(1) {
   $16 = HEAP8[$$0$i614>>0]|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$16);
   $17 = ((($$0$i614)) + 1|0);
   $18 = ($17>>>0)<($14>>>0);
   if ($18) {
    $$0$i614 = $17;
   } else {
    break;
   }
  }
 }
 $19 = ($__c|0)==(-1);
 $20 = $__c << 1;
 $21 = $20;
 $22 = $19 ? (-1) : $21;
 $23 = HEAP8[$__ndflt>>0]|0;
 $24 = $23 & 1;
 $25 = ($24<<24>>24)==(0);
 $26 = ((($__ndflt)) + 8|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($__ndflt)) + 1|0);
 $29 = $25 ? $28 : $27;
 $30 = (_catgets(($22|0),($__set|0),($__msgid|0),($29|0))|0);
 HEAP32[$agg$result>>2] = 0;
 $31 = ((($agg$result)) + 4|0);
 HEAP32[$31>>2] = 0;
 $32 = ((($agg$result)) + 8|0);
 HEAP32[$32>>2] = 0;
 $33 = (_strlen(($30|0))|0);
 $34 = (($30) + ($33)|0);
 $35 = ($33|0)>(0);
 if ($35) {
  $$0$i12 = $30;
  while(1) {
   $36 = HEAP8[$$0$i12>>0]|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($agg$result,$36);
   $37 = ((($$0$i12)) + 1|0);
   $38 = ($37>>>0)<($34>>>0);
   if ($38) {
    $$0$i12 = $37;
   } else {
    break;
   }
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i15 = 0, $$0$i922 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $__bn$i7 = 0, $__buf$i6 = 0, $__mb$i5 = 0, $__ndflt = 0, $__p$0$i1018 = 0, $__p$0$i14 = 0;
 var $__wn$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $__mb$i5 = sp + 168|0;
 $__buf$i6 = sp + 40|0;
 $__bn$i7 = sp + 32|0;
 $__wn$i = sp + 28|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp;
 HEAP32[$__ndflt>>2] = 0;
 $2 = ((($__ndflt)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($__ndflt)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$0>>2] = (6976);
 $5 = HEAP8[$__dflt>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__dflt)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($__dflt)) + 4|0);
 $11 = $7 ? $10 : $9;
 $12 = HEAP32[$10>>2]|0;
 $13 = $5&255;
 $14 = $13 >>> 1;
 $15 = $7 ? $14 : $12;
 $16 = (($11) + ($15<<2)|0);
 $17 = ((($__buf$i6)) + 32|0);
 $18 = ($15|0)>(0);
 if ($18) {
  $$0$i922 = $11;
  while(1) {
   HEAP32[$__wn$i>>2] = $$0$i922;
   $19 = HEAP32[$0>>2]|0;
   $20 = ((($19)) + 12|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_iiiiiiiii[$21 & 15]($0,$__mb$i5,$$0$i922,$16,$__wn$i,$__buf$i6,$17,$__bn$i7)|0);
   $23 = HEAP32[$__bn$i7>>2]|0;
   $24 = ($__buf$i6>>>0)<($23>>>0);
   if ($24) {
    $__p$0$i1018 = $__buf$i6;
    while(1) {
     $25 = HEAP8[$__p$0$i1018>>0]|0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$25);
     $26 = ((($__p$0$i1018)) + 1|0);
     $27 = HEAP32[$__bn$i7>>2]|0;
     $28 = ($26>>>0)<($27>>>0);
     if ($28) {
      $__p$0$i1018 = $26;
     } else {
      break;
     }
    }
   }
   $29 = HEAP32[$__wn$i>>2]|0;
   $30 = ($29>>>0)<($16>>>0);
   $31 = ($22|0)!=(2);
   $32 = $31 & $30;
   if ($32) {
    $$0$i922 = $29;
   } else {
    break;
   }
  }
 }
 $33 = ($__c|0)==(-1);
 $34 = $__c << 1;
 $35 = $34;
 $36 = $33 ? (-1) : $35;
 $37 = HEAP8[$__ndflt>>0]|0;
 $38 = $37 & 1;
 $39 = ($38<<24>>24)==(0);
 $40 = ((($__ndflt)) + 8|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($__ndflt)) + 1|0);
 $43 = $39 ? $42 : $41;
 $44 = (_catgets(($36|0),($__set|0),($__msgid|0),($43|0))|0);
 HEAP32[$agg$result>>2] = 0;
 $45 = ((($agg$result)) + 4|0);
 HEAP32[$45>>2] = 0;
 $46 = ((($agg$result)) + 8|0);
 HEAP32[$46>>2] = 0;
 $47 = ((($1)) + 4|0);
 HEAP32[$47>>2] = 0;
 HEAP32[$1>>2] = (7080);
 $48 = (_strlen(($44|0))|0);
 $49 = (($44) + ($48)|0);
 $50 = $49;
 $51 = ((($__buf$i6)) + 128|0);
 $52 = ($48|0)>(0);
 if ($52) {
  $$0$i15 = $44;
  while(1) {
   HEAP32[$__wn$i>>2] = $$0$i15;
   $53 = HEAP32[$1>>2]|0;
   $54 = ((($53)) + 16|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = $$0$i15;
   $57 = (($50) - ($56))|0;
   $58 = ($57|0)>(32);
   $59 = ((($$0$i15)) + 32|0);
   $60 = $58 ? $59 : $49;
   $61 = (FUNCTION_TABLE_iiiiiiiii[$55 & 15]($1,$__mb$i5,$$0$i15,$60,$__wn$i,$__buf$i6,$51,$__bn$i7)|0);
   $62 = HEAP32[$__bn$i7>>2]|0;
   $63 = ($__buf$i6>>>0)<($62>>>0);
   if ($63) {
    $__p$0$i14 = $__buf$i6;
    while(1) {
     $64 = HEAP32[$__p$0$i14>>2]|0;
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($agg$result,$64);
     $65 = ((($__p$0$i14)) + 4|0);
     $66 = HEAP32[$__bn$i7>>2]|0;
     $67 = ($65>>>0)<($66>>>0);
     if ($67) {
      $__p$0$i14 = $65;
     } else {
      break;
     }
    }
   }
   $68 = HEAP32[$__wn$i>>2]|0;
   $69 = ($68>>>0)<($49>>>0);
   $70 = ($61|0)!=(2);
   $71 = $70 & $69;
   if ($71) {
    $$0$i15 = $68;
   } else {
    break;
   }
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((9520|0),(9544|0),314,(9632|0));
 // unreachable;
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6144);
 $2 = ((($this)) + 8|0);
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($2,28);
 $3 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3,9152,1);
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($this)) + 12|0);
 $$pre$i$i$i = HEAP32[$5>>2]|0;
 $6 = ($$pre$i$i$i|0)==($4|0);
 if (!($6)) {
  $8 = $$pre$i$i$i;
  while(1) {
   $7 = ((($8)) + -4|0);
   $9 = ($7|0)==($4|0);
   if ($9) {
    $$lcssa = $7;
    break;
   } else {
    $8 = $7;
   }
  }
  HEAP32[$5>>2] = $$lcssa;
 }
 HEAP32[(9660)>>2] = 0;
 HEAP32[9656>>2] = (5000);
 __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,9656);
 HEAP32[(9668)>>2] = 0;
 HEAP32[9664>>2] = (5040);
 __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,9664);
 __ZNSt3__15ctypeIcEC2EPKtbj(9672,0,0,1);
 __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,9672);
 HEAP32[(9692)>>2] = 0;
 HEAP32[9688>>2] = (6488);
 __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,9688);
 HEAP32[(9700)>>2] = 0;
 HEAP32[9696>>2] = (6616);
 __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,9696);
 HEAP32[(9708)>>2] = 0;
 HEAP32[9704>>2] = (6264);
 $10 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(9712)>>2] = $10;
 __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,9704);
 HEAP32[(9724)>>2] = 0;
 HEAP32[9720>>2] = (6736);
 __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,9720);
 HEAP32[(9732)>>2] = 0;
 HEAP32[9728>>2] = (6856);
 __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,9728);
 __ZNSt3__18numpunctIcEC2Ej(9736,1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,9736);
 __ZNSt3__18numpunctIwEC2Ej(9760,1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,9760);
 HEAP32[(9796)>>2] = 0;
 HEAP32[9792>>2] = (5080);
 __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9792);
 HEAP32[(9804)>>2] = 0;
 HEAP32[9800>>2] = (5192);
 __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9800);
 HEAP32[(9812)>>2] = 0;
 HEAP32[9808>>2] = (5264);
 __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9808);
 HEAP32[(9820)>>2] = 0;
 HEAP32[9816>>2] = (5328);
 __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9816);
 HEAP32[(9828)>>2] = 0;
 HEAP32[9824>>2] = (5648);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,9824);
 HEAP32[(9836)>>2] = 0;
 HEAP32[9832>>2] = (5712);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,9832);
 HEAP32[(9844)>>2] = 0;
 HEAP32[9840>>2] = (5776);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,9840);
 HEAP32[(9852)>>2] = 0;
 HEAP32[9848>>2] = (5840);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,9848);
 HEAP32[(9860)>>2] = 0;
 HEAP32[9856>>2] = (5904);
 __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9856);
 HEAP32[(9868)>>2] = 0;
 HEAP32[9864>>2] = (5944);
 __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9864);
 HEAP32[(9876)>>2] = 0;
 HEAP32[9872>>2] = (5984);
 __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9872);
 HEAP32[(9884)>>2] = 0;
 HEAP32[9880>>2] = (6024);
 __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9880);
 HEAP32[(9892)>>2] = 0;
 HEAP32[9888>>2] = (5392);
 HEAP32[(9896)>>2] = (5440);
 __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9888);
 HEAP32[(9908)>>2] = 0;
 HEAP32[9904>>2] = (5488);
 HEAP32[(9912)>>2] = (5536);
 __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9904);
 HEAP32[(9924)>>2] = 0;
 HEAP32[9920>>2] = (6424);
 $11 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(9928)>>2] = $11;
 HEAP32[9920>>2] = (5584);
 __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9920);
 HEAP32[(9940)>>2] = 0;
 HEAP32[9936>>2] = (6424);
 $12 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(9944)>>2] = $12;
 HEAP32[9936>>2] = (5616);
 __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9936);
 HEAP32[(9956)>>2] = 0;
 HEAP32[9952>>2] = (6064);
 __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,9952);
 HEAP32[(9964)>>2] = 0;
 HEAP32[9960>>2] = (6104);
 __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,9960);
 return;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[9968>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((9968|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   (__ZNSt3__16locale5__imp12make_classicEv()|0);
   HEAP32[9984>>2] = 9976;
   ___cxa_guard_release((9968|0));
  }
 }
 $4 = HEAP32[9984>>2]|0;
 return ($4|0);
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 if ($8) {
  $11 = $3;
 } else {
  $9 = (($id) + 1)|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($0,$9);
  $$pre = HEAP32[$0>>2]|0;
  $11 = $$pre;
 }
 $10 = (($11) + ($id<<2)|0);
 $12 = HEAP32[$10>>2]|0;
 $13 = ($12|0)==(0|0);
 if ($13) {
  $15 = $11;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $$pre1 = HEAP32[$0>>2]|0;
  $15 = $$pre1;
 }
 $14 = (($15) + ($id<<2)|0);
 HEAP32[$14>>2] = $f;
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6144);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($2|0)==($3|0);
 if (!($4)) {
  $6 = $3;$i$01 = 0;
  while(1) {
   $5 = (($6) + ($i$01<<2)|0);
   $7 = HEAP32[$5>>2]|0;
   $8 = ($7|0)==(0|0);
   if (!($8)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
   }
   $9 = (($i$01) + 1)|0;
   $10 = HEAP32[$1>>2]|0;
   $11 = HEAP32[$0>>2]|0;
   $12 = $10;
   $13 = $11;
   $14 = (($12) - ($13))|0;
   $15 = $14 >> 2;
   $16 = ($9>>>0)<($15>>>0);
   if ($16) {
    $6 = $11;$i$01 = $9;
   } else {
    break;
   }
  }
 }
 $17 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(9992,1);
 HEAP32[9976>>2] = 9992;
 return (9976|0);
}
function __ZNSt3__16locale5__imp11make_globalEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale7classicEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[10152>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return (10152|0);
}
function __ZNSt3__16locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10160>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10160|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   (__ZNSt3__16locale5__imp11make_globalEv()|0);
   HEAP32[10168>>2] = 10152;
   ___cxa_guard_release((10160|0));
  }
 }
 $4 = HEAP32[10168>>2]|0;
 return ($4|0);
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale8__globalEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$this>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return;
}
function __ZNSt3__16localeC2ERKS0_($this,$l) {
 $this = $this|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l>>2]|0;
 HEAP32[$this>>2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}
function __ZNSt3__16localeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 return;
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__p$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p$i = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 if (!($1)) {
  HEAP32[$__p$i>>2] = $this;
  $2 = ((($__p$i)) + 4|0);
  HEAP32[$2>>2] = (108);
  $3 = ((($__p$i)) + 8|0);
  HEAP32[$3>>2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this,$__p$i,109);
 }
 $4 = ((($this)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x) {
 $this = $this|0;
 $x = $x|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv($x)|0);
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + ($1<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 return ($5|0);
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if (!($0)) {
  $1 = HEAP32[$this>>2]|0;
  $2 = ((($1)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$3 & 127]($this);
 }
 return;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[6160>>2]|0;HEAP32[6160>>2] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = ((($this)) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_b_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<1)|0);
  $3 = HEAP16[$2>>1]|0;
  $4 = $3 & $m;
  $5 = ($4<<16>>16)!=(0);
  $6 = $5;
 } else {
  $6 = 0;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$015 = 0, $$06 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $vec;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_b_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<1)|0);
    $8 = HEAP16[$7>>1]|0;
    $9 = $8&65535;
    $11 = $9;
   } else {
    $11 = 0;
   }
   $10 = $11&65535;
   HEAP16[$$06>>1] = $10;
   $12 = ((($$015)) + 4|0);
   $13 = ((($$06)) + 2|0);
   $14 = ($12|0)==($high|0);
   if ($14) {
    break;
   } else {
    $$015 = $12;$$06 = $13;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if ($isascii) {
     $2 = (___ctype_b_loc()|0);
     $3 = HEAP32[$2>>2]|0;
     $4 = (($3) + ($1<<1)|0);
     $5 = HEAP16[$4>>1]|0;
     $6 = $5 & $m;
     $7 = ($6<<16>>16)==(0);
     if (!($7)) {
      $$0$lcssa = $$01;
      break L1;
     }
    }
    $8 = ((($$01)) + 4|0);
    $9 = ($8|0)==($high|0);
    if ($9) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $8;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if (!($isascii)) {
     $$0$lcssa = $$01;
     break L1;
    }
    $2 = (___ctype_b_loc()|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = (($3) + ($1<<1)|0);
    $5 = HEAP16[$4>>1]|0;
    $6 = $5 & $m;
    $7 = ($6<<16>>16)==(0);
    if ($7) {
     $$0$lcssa = $$01;
     break L1;
    }
    $8 = ((($$01)) + 4|0);
    $9 = ($8|0)==($high|0);
    if ($9) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $8;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_toupper_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3;
 } else {
  $4 = $c;
 }
 return ($4|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_toupper_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<2)|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = $8;
   } else {
    $9 = $4;
   }
   HEAP32[$$04>>2] = $9;
   $10 = ((($$04)) + 4|0);
   $11 = ($10|0)==($high|0);
   if ($11) {
    break;
   } else {
    $$04 = $10;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_tolower_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3;
 } else {
  $4 = $c;
 }
 return ($4|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_tolower_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<2)|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = $8;
   } else {
    $9 = $4;
   }
   HEAP32[$$04>>2] = $9;
   $10 = ((($$04)) + 4|0);
   $11 = ($10|0)==($high|0);
   if ($11) {
    break;
   } else {
    $$04 = $10;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   $2 = $1 << 24 >> 24;
   HEAP32[$$03>>2] = $2;
   $3 = ((($$012)) + 1|0);
   $4 = ((($$03)) + 4|0);
   $5 = ($3|0)==($high|0);
   if ($5) {
    break;
   } else {
    $$012 = $3;$$03 = $4;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$015 = 0, $$06 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $dest;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   $5 = $4&255;
   $$dfault = $isascii ? $5 : $dfault;
   HEAP8[$$06>>0] = $$dfault;
   $6 = ((($$015)) + 4|0);
   $7 = ((($$06)) + 1|0);
   $8 = ($6|0)==($high|0);
   if ($8) {
    break;
   } else {
    $$015 = $6;$$06 = $7;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__15ctypeIcEC2EPKtbj($this,$tab,$del,$refs) {
 $this = $this|0;
 $tab = $tab|0;
 $del = $del|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6192);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = $tab;
 $3 = ((($this)) + 12|0);
 $4 = $del&1;
 HEAP8[$3>>0] = $4;
 $5 = ($tab|0)==(0|0);
 if ($5) {
  $6 = (___ctype_b_loc()|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$2>>2] = $7;
 }
 return;
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6192);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = ((($this)) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   __ZdaPv($1);
  }
 }
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c&255;
  $1 = (___ctype_toupper_loc()|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = (($2) + ($0<<2)|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $4&255;
  $6 = $5;
 } else {
  $6 = $c;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (___ctype_toupper_loc()|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($4) + ($2<<2)|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = $6&255;
    $8 = $7;
   } else {
    $8 = $1;
   }
   HEAP8[$$02>>0] = $8;
   $9 = ((($$02)) + 1|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$02 = $9;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c << 24 >> 24;
  $1 = (___ctype_tolower_loc()|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = (($2) + ($0<<2)|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $4&255;
  $6 = $5;
 } else {
  $6 = $c;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (___ctype_tolower_loc()|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($4) + ($2<<2)|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = $6&255;
    $8 = $7;
   } else {
    $8 = $1;
   }
   HEAP8[$$02>>0] = $8;
   $9 = ((($$02)) + 1|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$02 = $9;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   HEAP8[$$03>>0] = $1;
   $2 = ((($$012)) + 1|0);
   $3 = ((($$03)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$012 = $2;$$03 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$013 = 0, $$04 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$013 = $low;$$04 = $dest;
  while(1) {
   $1 = HEAP8[$$013>>0]|0;
   $isascii2 = ($1<<24>>24)>(-1);
   $$dfault = $isascii2 ? $1 : $dfault;
   HEAP8[$$04>>0] = $$dfault;
   $2 = ((($$013)) + 1|0);
   $3 = ((($$04)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$013 = $2;$$04 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$0143 = 0, $$0143$lcssa = 0, $$02$be = 0, $$0242 = 0, $$0242$lcssa = 0, $$1$lcssa = 0, $$128 = 0, $$pre = 0, $$pre14 = 0, $$pre15 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $fend$0$lcssa = 0, $fend$048 = 0, $fend$1$be = 0, $fend$144 = 0, $fend$2$lcssa = 0, $fend$235 = 0, $n$032 = 0, $not$ = 0, $or$cond = 0, $or$cond41 = 0, $p$033 = 0, $save_state = 0, $tmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $save_state = sp;
 $tmp = sp + 8|0;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$048 = $frm;
   while(1) {
    $1 = HEAP32[$fend$048>>2]|0;
    $2 = ($1|0)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$048;
     break L1;
    }
    $3 = ((($fend$048)) + 4|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$048 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond41 = $8 | $7;
 L6: do {
  if ($or$cond41) {
   $72 = $frm;
   label = 29;
  } else {
   $$0143 = $frm;$$0242 = $to;$fend$144 = $fend$0$lcssa;
   while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$144;
    $20 = $$0143;
    $21 = (($19) - ($20))|0;
    $22 = $21 >> 2;
    $23 = $$0242;
    $24 = (($5) - ($23))|0;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale(($25|0))|0);
    $27 = (_wcsnrtombs($$0242,$frm_nxt,$22,$24,$st)|0);
    $28 = ($26|0)==(0|0);
    if (!($28)) {
     (_uselocale(($26|0))|0);
    }
    if ((($27|0) == 0)) {
     $$0 = 1;
     break L6;
    } else if ((($27|0) == -1)) {
     $$0143$lcssa = $$0143;$$0242$lcssa = $$0242;
     break;
    }
    $43 = HEAP32[$to_nxt>>2]|0;
    $44 = (($43) + ($27)|0);
    HEAP32[$to_nxt>>2] = $44;
    $45 = ($44|0)==($to_end|0);
    if ($45) {
     label = 15;
     break;
    }
    $46 = ($fend$144|0)==($frm_end|0);
    if ($46) {
     $$pre = HEAP32[$frm_nxt>>2]|0;
     $$01$be = $$pre;$$02$be = $44;$fend$1$be = $frm_end;
    } else {
     $49 = HEAP32[$6>>2]|0;
     $50 = (_uselocale(($49|0))|0);
     $51 = (_wcrtomb($tmp,0,$st)|0);
     $52 = ($50|0)==(0|0);
     if (!($52)) {
      (_uselocale(($50|0))|0);
     }
     $53 = ($51|0)==(-1);
     if ($53) {
      $$0 = 2;
      break L6;
     }
     $54 = HEAP32[$to_nxt>>2]|0;
     $55 = $54;
     $56 = (($5) - ($55))|0;
     $57 = ($51>>>0)>($56>>>0);
     if ($57) {
      $$0 = 1;
      break L6;
     }
     $58 = ($51|0)==(0);
     if (!($58)) {
      $n$032 = $51;$p$033 = $tmp;
      while(1) {
       $59 = ((($p$033)) + 1|0);
       $60 = HEAP8[$p$033>>0]|0;
       $61 = HEAP32[$to_nxt>>2]|0;
       $62 = ((($61)) + 1|0);
       HEAP32[$to_nxt>>2] = $62;
       HEAP8[$61>>0] = $60;
       $63 = (($n$032) + -1)|0;
       $64 = ($63|0)==(0);
       if ($64) {
        break;
       } else {
        $n$032 = $63;$p$033 = $59;
       }
      }
     }
     $65 = HEAP32[$frm_nxt>>2]|0;
     $66 = ((($65)) + 4|0);
     HEAP32[$frm_nxt>>2] = $66;
     $67 = ($66|0)==($frm_end|0);
     L26: do {
      if ($67) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$235 = $66;
       while(1) {
        $68 = HEAP32[$fend$235>>2]|0;
        $69 = ($68|0)==(0);
        if ($69) {
         $fend$2$lcssa = $fend$235;
         break L26;
        }
        $70 = ((($fend$235)) + 4|0);
        $71 = ($70|0)==($frm_end|0);
        if ($71) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$235 = $70;
        }
       }
      }
     } while(0);
     $$pre14 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $66;$$02$be = $$pre14;$fend$1$be = $fend$2$lcssa;
    }
    $47 = ($$01$be|0)==($frm_end|0);
    $48 = ($$02$be|0)==($to_end|0);
    $or$cond = $48 | $47;
    if ($or$cond) {
     $72 = $$01$be;
     label = 29;
     break L6;
    } else {
     $$0143 = $$01$be;$$0242 = $$02$be;$fend$144 = $fend$1$be;
    }
   }
   if ((label|0) == 15) {
    $$pre15 = HEAP32[$frm_nxt>>2]|0;
    $72 = $$pre15;
    label = 29;
    break;
   }
   HEAP32[$to_nxt>>2] = $$0242$lcssa;
   $29 = HEAP32[$frm_nxt>>2]|0;
   $30 = ($$0143$lcssa|0)==($29|0);
   L35: do {
    if ($30) {
     $$1$lcssa = $$0143$lcssa;
    } else {
     $$128 = $$0143$lcssa;$34 = $$0242$lcssa;
     while(1) {
      $31 = HEAP32[$$128>>2]|0;
      $32 = HEAP32[$6>>2]|0;
      $33 = (_uselocale(($32|0))|0);
      $35 = (_wcrtomb($34,$31,$save_state)|0);
      $36 = ($33|0)==(0|0);
      if (!($36)) {
       (_uselocale(($33|0))|0);
      }
      $37 = ($35|0)==(-1);
      if ($37) {
       $$1$lcssa = $$128;
       break L35;
      }
      $38 = HEAP32[$to_nxt>>2]|0;
      $39 = (($38) + ($35)|0);
      HEAP32[$to_nxt>>2] = $39;
      $40 = ((($$128)) + 4|0);
      $41 = HEAP32[$frm_nxt>>2]|0;
      $42 = ($40|0)==($41|0);
      if ($42) {
       $$1$lcssa = $40;
       break;
      } else {
       $$128 = $40;$34 = $39;
      }
     }
    }
   } while(0);
   HEAP32[$frm_nxt>>2] = $$1$lcssa;
   $$0 = 2;
  }
 } while(0);
 if ((label|0) == 29) {
  $not$ = ($72|0)!=($frm_end|0);
  $73 = $not$&1;
  $$0 = $73;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$0153 = 0, $$0153$lcssa = 0, $$02$be = 0, $$0252 = 0, $$0252$lcssa = 0, $$1$lcssa = 0, $$145 = 0, $$145$lcssa = 0, $$145$lcssa73 = 0, $$2 = 0, $$lcssa = 0, $$pre = 0, $$pre22 = 0, $$pre23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $fend$0$lcssa = 0, $fend$057 = 0, $fend$1$be = 0, $fend$154 = 0, $fend$2$lcssa = 0, $fend$246 = 0, $not$ = 0, $not$3 = 0, $or$cond = 0, $or$cond51 = 0, $save_state = 0, $storemerge44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $save_state = sp;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$057 = $frm;
   while(1) {
    $1 = HEAP8[$fend$057>>0]|0;
    $2 = ($1<<24>>24)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$057;
     break L1;
    }
    $3 = ((($fend$057)) + 1|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$057 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond51 = $8 | $7;
 L6: do {
  if ($or$cond51) {
   $64 = $frm;
   label = 29;
  } else {
   $$0153 = $frm;$$0252 = $to;$fend$154 = $fend$0$lcssa;
   while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$154;
    $20 = $$0153;
    $21 = (($19) - ($20))|0;
    $22 = $$0252;
    $23 = (($5) - ($22))|0;
    $24 = $23 >> 2;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale(($25|0))|0);
    $27 = (_mbsnrtowcs($$0252,$frm_nxt,$21,$24,$st)|0);
    $28 = ($26|0)==(0|0);
    if (!($28)) {
     (_uselocale(($26|0))|0);
    }
    if ((($27|0) == 0)) {
     $$0 = 2;
     break L6;
    } else if ((($27|0) == -1)) {
     $$0153$lcssa = $$0153;$$0252$lcssa = $$0252;$$lcssa = $19;
     break;
    }
    $44 = HEAP32[$to_nxt>>2]|0;
    $45 = (($44) + ($27<<2)|0);
    HEAP32[$to_nxt>>2] = $45;
    $46 = ($45|0)==($to_end|0);
    if ($46) {
     label = 19;
     break;
    }
    $47 = ($fend$154|0)==($frm_end|0);
    $$pre = HEAP32[$frm_nxt>>2]|0;
    if ($47) {
     $$01$be = $$pre;$$02$be = $45;$fend$1$be = $frm_end;
    } else {
     $50 = HEAP32[$6>>2]|0;
     $51 = (_uselocale(($50|0))|0);
     $52 = (_mbrtowc($45,$$pre,1,$st)|0);
     $53 = ($51|0)==(0|0);
     if (!($53)) {
      (_uselocale(($51|0))|0);
     }
     $54 = ($52|0)==(0);
     if (!($54)) {
      $$0 = 2;
      break L6;
     }
     $55 = HEAP32[$to_nxt>>2]|0;
     $56 = ((($55)) + 4|0);
     HEAP32[$to_nxt>>2] = $56;
     $57 = HEAP32[$frm_nxt>>2]|0;
     $58 = ((($57)) + 1|0);
     HEAP32[$frm_nxt>>2] = $58;
     $59 = ($58|0)==($frm_end|0);
     L20: do {
      if ($59) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$246 = $58;
       while(1) {
        $60 = HEAP8[$fend$246>>0]|0;
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         $fend$2$lcssa = $fend$246;
         break L20;
        }
        $62 = ((($fend$246)) + 1|0);
        $63 = ($62|0)==($frm_end|0);
        if ($63) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$246 = $62;
        }
       }
      }
     } while(0);
     $$pre22 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $58;$$02$be = $$pre22;$fend$1$be = $fend$2$lcssa;
    }
    $48 = ($$01$be|0)==($frm_end|0);
    $49 = ($$02$be|0)==($to_end|0);
    $or$cond = $49 | $48;
    if ($or$cond) {
     $64 = $$01$be;
     label = 29;
     break L6;
    } else {
     $$0153 = $$01$be;$$0252 = $$02$be;$fend$154 = $fend$1$be;
    }
   }
   if ((label|0) == 19) {
    $$pre23 = HEAP32[$frm_nxt>>2]|0;
    $64 = $$pre23;
    label = 29;
    break;
   }
   HEAP32[$to_nxt>>2] = $$0252$lcssa;
   $29 = HEAP32[$frm_nxt>>2]|0;
   $30 = ($$0153$lcssa|0)==($29|0);
   L29: do {
    if ($30) {
     $$1$lcssa = $$0153$lcssa;
    } else {
     $$145 = $$0153$lcssa;$storemerge44 = $$0252$lcssa;
     while(1) {
      $31 = $$145;
      $32 = (($$lcssa) - ($31))|0;
      $33 = HEAP32[$6>>2]|0;
      $34 = (_uselocale(($33|0))|0);
      $35 = (_mbrtowc($storemerge44,$$145,$32,$save_state)|0);
      $36 = ($34|0)==(0|0);
      if (!($36)) {
       (_uselocale(($34|0))|0);
      }
      if ((($35|0) == -2)) {
       $$145$lcssa73 = $$145;
       label = 14;
       break;
      } else if ((($35|0) == -1)) {
       $$145$lcssa = $$145;
       label = 13;
       break;
      } else if ((($35|0) == 0)) {
       $37 = ((($$145)) + 1|0);
       $$2 = $37;
      } else {
       $38 = (($$145) + ($35)|0);
       $$2 = $38;
      }
      $39 = HEAP32[$to_nxt>>2]|0;
      $40 = ((($39)) + 4|0);
      HEAP32[$to_nxt>>2] = $40;
      $41 = HEAP32[$frm_nxt>>2]|0;
      $42 = ($$2|0)==($41|0);
      if ($42) {
       $$1$lcssa = $$2;
       break L29;
      } else {
       $$145 = $$2;$storemerge44 = $40;
      }
     }
     if ((label|0) == 13) {
      HEAP32[$frm_nxt>>2] = $$145$lcssa;
      $$0 = 2;
      break L6;
     }
     else if ((label|0) == 14) {
      HEAP32[$frm_nxt>>2] = $$145$lcssa73;
      $$0 = 1;
      break L6;
     }
    }
   } while(0);
   HEAP32[$frm_nxt>>2] = $$1$lcssa;
   $not$3 = ($$1$lcssa|0)!=($frm_end|0);
   $43 = $not$3&1;
   $$0 = $43;
  }
 } while(0);
 if ((label|0) == 29) {
  $not$ = ($64|0)!=($frm_end|0);
  $65 = $not$&1;
  $$0 = $65;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n$02 = 0;
 var $p$03 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $tmp = sp;
 HEAP32[$to_nxt>>2] = $to;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 $3 = (_wcrtomb($tmp,0,$st)|0);
 $4 = ($2|0)==(0|0);
 if (!($4)) {
  (_uselocale(($2|0))|0);
 }
 if ((($3|0) == 0) | (($3|0) == -1)) {
  $$0 = 2;
 } else {
  $5 = (($3) + -1)|0;
  $6 = HEAP32[$to_nxt>>2]|0;
  $7 = $to_end;
  $8 = $6;
  $9 = (($7) - ($8))|0;
  $10 = ($5>>>0)>($9>>>0);
  if ($10) {
   $$0 = 1;
  } else {
   $11 = ($5|0)==(0);
   if ($11) {
    $$0 = 0;
   } else {
    $n$02 = $5;$p$03 = $tmp;
    while(1) {
     $12 = ((($p$03)) + 1|0);
     $13 = HEAP8[$p$03>>0]|0;
     $14 = HEAP32[$to_nxt>>2]|0;
     $15 = ((($14)) + 1|0);
     HEAP32[$to_nxt>>2] = $15;
     HEAP8[$14>>0] = $13;
     $16 = (($n$02) + -1)|0;
     $17 = ($16|0)==(0);
     if ($17) {
      $$0 = 0;
      break;
     } else {
      $n$02 = $16;$p$03 = $12;
     }
    }
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 $3 = (_mbtowc(0,0,4)|0);
 $4 = ($2|0)==(0|0);
 if (!($4)) {
  (_uselocale(($2|0))|0);
 }
 $5 = ($3|0)==(0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = ($6|0)==(0|0);
  if ($7) {
   $$0 = 1;
  } else {
   $8 = (_uselocale(($6|0))|0);
   $9 = ($8|0)==(0|0);
   if ($9) {
    $$0 = 0;
   } else {
    (_uselocale(($8|0))|0);
    $$0 = 0;
   }
  }
 } else {
  $$0 = -1;
 }
 return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$013 = 0, $$1 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0$lcssa = 0, $nbytes$04 = 0;
 var $nbytes$1 = 0, $nwchar_t$05 = 0, $or$cond = 0, $or$cond2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $frm_end;
 $1 = ((($this)) + 8|0);
 $2 = ($mx|0)==(0);
 $3 = ($frm|0)==($frm_end|0);
 $or$cond2 = $3 | $2;
 L1: do {
  if ($or$cond2) {
   $nbytes$0$lcssa = 0;
  } else {
   $$013 = $frm;$nbytes$04 = 0;$nwchar_t$05 = 0;
   while(1) {
    $4 = $$013;
    $5 = (($0) - ($4))|0;
    $6 = HEAP32[$1>>2]|0;
    $7 = (_uselocale(($6|0))|0);
    $8 = (_mbrlen($$013,$5,$st)|0);
    $9 = ($7|0)==(0|0);
    if (!($9)) {
     (_uselocale(($7|0))|0);
    }
    if ((($8|0) == -2) | (($8|0) == -1)) {
     $nbytes$0$lcssa = $nbytes$04;
     break L1;
    } else if ((($8|0) == 0)) {
     $10 = ((($$013)) + 1|0);
     $$1 = $10;$$pn = 1;
    } else {
     $11 = (($$013) + ($8)|0);
     $$1 = $11;$$pn = $8;
    }
    $nbytes$1 = (($$pn) + ($nbytes$04))|0;
    $12 = (($nwchar_t$05) + 1)|0;
    $13 = ($12>>>0)>=($mx>>>0);
    $14 = ($$1|0)==($frm_end|0);
    $or$cond = $14 | $13;
    if ($or$cond) {
     $nbytes$0$lcssa = $nbytes$1;
     break;
    } else {
     $$013 = $$1;$nbytes$04 = $nbytes$1;$nwchar_t$05 = $12;
    }
   }
  }
 } while(0);
 return ($nbytes$0$lcssa|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $5 = 1;
 } else {
  $3 = (_uselocale(($1|0))|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   $5 = 4;
  } else {
   (_uselocale(($3|0))|0);
   $5 = 4;
  }
 }
 return ($5|0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIcEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6344);
 $2 = ((($this)) + 8|0);
 HEAP8[$2>>0] = 46;
 $3 = ((($this)) + 9|0);
 HEAP8[$3>>0] = 44;
 $4 = ((($this)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIwEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6384);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = 46;
 $3 = ((($this)) + 12|0);
 HEAP32[$3>>2] = 44;
 $4 = ((($this)) + 16|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6344);
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6384);
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,10176,4);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10184)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10184,$0);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,10208,5);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10216)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10216,$0);
 return;
}
function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 if ((($2|0) == 64)) {
  $$0 = 8;
 } else if ((($2|0) == 8)) {
  $$0 = 16;
 } else if ((($2|0) == 0)) {
  $$0 = 0;
 } else {
  $$0 = 10;
 }
 return ($$0|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10240>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10240|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[10248>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((10248|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 10256;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((10424)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((10248|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10256,10424)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10268),10432)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10280),10440)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10292),10448)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10304),10464)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10316),10480)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10328),10488)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10340),10504)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10352),10512)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10364),10520)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10376),10528)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10388),10536)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10400),10544)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10412),10552)|0);
   HEAP32[10560>>2] = 10256;
   ___cxa_guard_release((10240|0));
  }
 }
 $13 = HEAP32[10560>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10568>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10568|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[10576>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((10576|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 10584;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((10752)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((10576|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10584,10752)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10596),10784)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10608),10816)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10620),10848)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10632),10888)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10644),10928)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10656),10960)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10668),11000)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10680),11016)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10692),11032)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10704),11048)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10716),11064)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10728),11080)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10740),11096)|0);
   HEAP32[11112>>2] = 10584;
   ___cxa_guard_release((10568|0));
  }
 }
 $13 = HEAP32[11112>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[11120>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((11120|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[11128>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((11128|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 11136;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((11424)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((11128|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11136,11424)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11148),11432)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11160),11448)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11172),11456)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11184),11464)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11196),11472)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11208),11480)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11220),11488)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11232),11496)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11244),11512)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11256),11520)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11268),11536)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11280),11552)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11292),11560)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11304),11568)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11316),11576)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11328),11464)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11340),11584)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11352),11592)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11364),11600)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11376),11608)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11388),11616)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11400),11624)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11412),11632)|0);
   HEAP32[11640>>2] = 11136;
   ___cxa_guard_release((11120|0));
  }
 }
 $13 = HEAP32[11640>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[11648>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((11648|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[11656>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((11656|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 11664;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((11952)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((11656|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11664,11952)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11676),11984)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11688),12024)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11700),12048)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11712),12072)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11724),12088)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11736),12112)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11748),12136)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11760),12168)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11772),12208)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11784),12240)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11796),12280)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11808),12320)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11820),12336)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11832),12352)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11844),12368)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11856),12072)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11868),12384)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11880),12400)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11892),12416)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11904),12432)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11916),12448)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11928),12464)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11940),12480)|0);
   HEAP32[12496>>2] = 11664;
   ___cxa_guard_release((11648|0));
  }
 }
 $13 = HEAP32[12496>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[12504>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((12504|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[12512>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((12512|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 12520;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((12808)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((12512|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(12520,12808)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((12532),12816)|0);
   HEAP32[12824>>2] = 12520;
   ___cxa_guard_release((12504|0));
  }
 }
 $13 = HEAP32[12824>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[12832>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((12832|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[12840>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((12840|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 12848;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((13136)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((12840|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12848,13136)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((12860),13152)|0);
   HEAP32[13168>>2] = 12848;
   ___cxa_guard_release((12832|0));
  }
 }
 $13 = HEAP32[13168>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13176>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13176|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13184,13200,8);
   ___cxa_guard_release((13176|0));
  }
 }
 return (13184|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13216>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13216|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13224)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13264,13224,$4);
   ___cxa_guard_release((13216|0));
  }
 }
 return (13264|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13280>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13280|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13288,13304,8);
   ___cxa_guard_release((13280|0));
  }
 }
 return (13288|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13320>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13320|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13328)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13368,13328,$4);
   ___cxa_guard_release((13320|0));
  }
 }
 return (13368|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13384>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13384|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13392,13408,20);
   ___cxa_guard_release((13384|0));
  }
 }
 return (13392|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13432>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13432|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13440)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13528,13440,$4);
   ___cxa_guard_release((13432|0));
  }
 }
 return (13528|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13544>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13544|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13552,13568,11);
   ___cxa_guard_release((13544|0));
  }
 }
 return (13552|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13584>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13584|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13592)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13640,13592,$4);
   ___cxa_guard_release((13584|0));
  }
 }
 return (13640|0);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6264);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 $3 = ($1|0)==($2|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  _freelocale(($4|0));
 }
 return;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$021 = 0, $$033 = 0, $$lcssa = 0, $$lcssa59 = 0, $$pre$i$i$i = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$i2$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off038 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$052 = 0, $__ky1$039 = 0;
 var $__ky2$046 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$050 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$335 = 0, $__n_does_match$4 = 0, $__n_does_match$544 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$049 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$334 = 0, $__n_might_match$4 = 0, $__st$051 = 0, $__st$136 = 0, $__st$245 = 0;
 var $__st$332 = 0, $__statbuf = 0, $__status$0 = 0, $or$cond = 0, $tmp$i$i10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $162 = $5;$__status$0 = $5;
  }
 } else {
  $162 = 0;$__status$0 = $__statbuf;
 }
 $7 = ($__kb|0)==($__ke|0);
 if ($7) {
  $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
 } else {
  $__ky$052 = $__kb;$__n_does_match$050 = 0;$__n_might_match$049 = $3;$__st$051 = $__status$0;
  while(1) {
   $10 = HEAP8[$__ky$052>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = ((($__ky$052)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$__st$051>>0] = 2;
    $19 = (($__n_might_match$049) + -1)|0;
    $20 = (($__n_does_match$050) + 1)|0;
    $__n_does_match$1 = $20;$__n_might_match$1 = $19;
   } else {
    HEAP8[$__st$051>>0] = 1;
    $__n_does_match$1 = $__n_does_match$050;$__n_might_match$1 = $__n_might_match$049;
   }
   $21 = ((($__ky$052)) + 12|0);
   $22 = ((($__st$051)) + 1|0);
   $23 = ($21|0)==($__ke|0);
   if ($23) {
    $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__ky$052 = $21;$__n_does_match$050 = $__n_does_match$1;$__n_might_match$049 = $__n_might_match$1;$__st$051 = $22;
   }
  }
 }
 $8 = ($__kb|0)==($__ke|0);
 $9 = ($__kb|0)==($__ke|0);
 $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
 L17: while(1) {
  $24 = HEAP32[$__b>>2]|0;
  $25 = ($24|0)==(0|0);
  do {
   if ($25) {
    $36 = 0;
   } else {
    $26 = ((($24)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($24)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if ($30) {
     $31 = HEAP32[$24>>2]|0;
     $32 = ((($31)) + 36|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = (FUNCTION_TABLE_ii[$33 & 63]($24)|0);
     $35 = ($34|0)==(-1);
     if ($35) {
      HEAP32[$__b>>2] = 0;
      $36 = 0;
      break;
     } else {
      $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
      $36 = $$pre$i$i$i4;
      break;
     }
    } else {
     $36 = $24;
    }
   }
  } while(0);
  $37 = ($36|0)==(0|0);
  $38 = HEAP32[$__e>>2]|0;
  $39 = ($38|0)==(0|0);
  if ($39) {
   $$pre$i2$i$i = 0;
  } else {
   $40 = ((($38)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($38)) + 16|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ($41|0)==($43|0);
   if ($44) {
    $45 = HEAP32[$38>>2]|0;
    $46 = ((($45)) + 36|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = (FUNCTION_TABLE_ii[$47 & 63]($38)|0);
    $49 = ($48|0)==(-1);
    if ($49) {
     HEAP32[$__e>>2] = 0;
     $$pre$i2$i$i = 0;
    } else {
     $$pre$i2$i$i = $38;
    }
   } else {
    $$pre$i2$i$i = $38;
   }
  }
  $50 = ($$pre$i2$i$i|0)==(0|0);
  $tmp$i$i10 = $37 ^ $50;
  $51 = ($__n_might_match$2|0)!=(0);
  $52 = $51 & $tmp$i$i10;
  $53 = HEAP32[$__b>>2]|0;
  if (!($52)) {
   $$lcssa = $50;$$lcssa59 = $53;$$pre$i2$i$i$lcssa = $$pre$i2$i$i;
   break;
  }
  $54 = ((($53)) + 12|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ((($53)) + 16|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = ($55|0)==($57|0);
  if ($58) {
   $59 = HEAP32[$53>>2]|0;
   $60 = ((($59)) + 36|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = (FUNCTION_TABLE_ii[$61 & 63]($53)|0);
   $$0$i$i = $62;
  } else {
   $63 = HEAP8[$55>>0]|0;
   $64 = $63&255;
   $$0$i$i = $64;
  }
  $65 = $$0$i$i&255;
  if ($__case_sensitive) {
   $__c$0 = $65;
  } else {
   $66 = HEAP32[$__ct>>2]|0;
   $67 = ((($66)) + 12|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = (FUNCTION_TABLE_iii[$68 & 15]($__ct,$65)|0);
   $__c$0 = $69;
  }
  $70 = (($__indx$0) + 1)|0;
  if ($8) {
   $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
  } else {
   $__consume$0$off038 = 0;$__ky1$039 = $__kb;$__n_does_match$335 = $__n_does_match$2;$__n_might_match$334 = $__n_might_match$2;$__st$136 = $__status$0;
   while(1) {
    $71 = HEAP8[$__st$136>>0]|0;
    $72 = ($71<<24>>24)==(1);
    do {
     if ($72) {
      $73 = HEAP8[$__ky1$039>>0]|0;
      $74 = $73 & 1;
      $75 = ($74<<24>>24)==(0);
      if ($75) {
       $78 = ((($__ky1$039)) + 1|0);
       $80 = $78;
      } else {
       $76 = ((($__ky1$039)) + 8|0);
       $77 = HEAP32[$76>>2]|0;
       $80 = $77;
      }
      $79 = (($80) + ($__indx$0)|0);
      $81 = HEAP8[$79>>0]|0;
      if ($__case_sensitive) {
       $__kc$0 = $81;
      } else {
       $82 = HEAP32[$__ct>>2]|0;
       $83 = ((($82)) + 12|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = (FUNCTION_TABLE_iii[$84 & 15]($__ct,$81)|0);
       $__kc$0 = $85;
      }
      $86 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
      if (!($86)) {
       HEAP8[$__st$136>>0] = 0;
       $98 = (($__n_might_match$334) + -1)|0;
       $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $98;
       break;
      }
      $87 = HEAP8[$__ky1$039>>0]|0;
      $88 = $87 & 1;
      $89 = ($88<<24>>24)==(0);
      if ($89) {
       $92 = $87&255;
       $93 = $92 >>> 1;
       $94 = $93;
      } else {
       $90 = ((($__ky1$039)) + 4|0);
       $91 = HEAP32[$90>>2]|0;
       $94 = $91;
      }
      $95 = ($94|0)==($70|0);
      if ($95) {
       HEAP8[$__st$136>>0] = 2;
       $96 = (($__n_might_match$334) + -1)|0;
       $97 = (($__n_does_match$335) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $97;$__n_might_match$4 = $96;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
     }
    } while(0);
    $99 = ((($__ky1$039)) + 12|0);
    $100 = ((($__st$136)) + 1|0);
    $101 = ($99|0)==($__ke|0);
    if ($101) {
     $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
     break;
    } else {
     $__consume$0$off038 = $__consume$1$off0;$__ky1$039 = $99;$__n_does_match$335 = $__n_does_match$4;$__n_might_match$334 = $__n_might_match$4;$__st$136 = $100;
    }
   }
  }
  if (!($__consume$0$off0$lcssa)) {
   $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  }
  $102 = HEAP32[$__b>>2]|0;
  $103 = ((($102)) + 12|0);
  $104 = HEAP32[$103>>2]|0;
  $105 = ((($102)) + 16|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ($104|0)==($106|0);
  if ($107) {
   $108 = HEAP32[$102>>2]|0;
   $109 = ((($108)) + 40|0);
   $110 = HEAP32[$109>>2]|0;
   (FUNCTION_TABLE_ii[$110 & 63]($102)|0);
  } else {
   $111 = ((($104)) + 1|0);
   HEAP32[$103>>2] = $111;
  }
  $112 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
  $113 = ($112>>>0)<(2);
  $or$cond = $113 | $9;
  if ($or$cond) {
   $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  } else {
   $__ky2$046 = $__kb;$__n_does_match$544 = $__n_does_match$3$lcssa;$__st$245 = $__status$0;
  }
  while(1) {
   $114 = HEAP8[$__st$245>>0]|0;
   $115 = ($114<<24>>24)==(2);
   if ($115) {
    $116 = HEAP8[$__ky2$046>>0]|0;
    $117 = $116 & 1;
    $118 = ($117<<24>>24)==(0);
    if ($118) {
     $121 = $116&255;
     $122 = $121 >>> 1;
     $123 = $122;
    } else {
     $119 = ((($__ky2$046)) + 4|0);
     $120 = HEAP32[$119>>2]|0;
     $123 = $120;
    }
    $124 = ($123|0)==($70|0);
    if ($124) {
     $__n_does_match$6 = $__n_does_match$544;
    } else {
     HEAP8[$__st$245>>0] = 0;
     $125 = (($__n_does_match$544) + -1)|0;
     $__n_does_match$6 = $125;
    }
   } else {
    $__n_does_match$6 = $__n_does_match$544;
   }
   $126 = ((($__ky2$046)) + 12|0);
   $127 = ((($__st$245)) + 1|0);
   $128 = ($126|0)==($__ke|0);
   if ($128) {
    $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
    continue L17;
   } else {
    $__ky2$046 = $126;$__n_does_match$544 = $__n_does_match$6;$__st$245 = $127;
   }
  }
 }
 $129 = ($$lcssa59|0)==(0|0);
 do {
  if ($129) {
   $140 = 0;
  } else {
   $130 = ((($$lcssa59)) + 12|0);
   $131 = HEAP32[$130>>2]|0;
   $132 = ((($$lcssa59)) + 16|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = ($131|0)==($133|0);
   if ($134) {
    $135 = HEAP32[$$lcssa59>>2]|0;
    $136 = ((($135)) + 36|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = (FUNCTION_TABLE_ii[$137 & 63]($$lcssa59)|0);
    $139 = ($138|0)==(-1);
    if ($139) {
     HEAP32[$__b>>2] = 0;
     $140 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $140 = $$pre$i$i$i;
     break;
    }
   } else {
    $140 = $$lcssa59;
   }
  }
 } while(0);
 $141 = ($140|0)==(0|0);
 do {
  if ($$lcssa) {
   label = 65;
  } else {
   $142 = ((($$pre$i2$i$i$lcssa)) + 12|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ((($$pre$i2$i$i$lcssa)) + 16|0);
   $145 = HEAP32[$144>>2]|0;
   $146 = ($143|0)==($145|0);
   if ($146) {
    $147 = HEAP32[$$pre$i2$i$i$lcssa>>2]|0;
    $148 = ((($147)) + 36|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (FUNCTION_TABLE_ii[$149 & 63]($$pre$i2$i$i$lcssa)|0);
    $151 = ($150|0)==(-1);
    if ($151) {
     HEAP32[$__e>>2] = 0;
     label = 65;
     break;
    }
   }
   if (!($141)) {
    label = 66;
   }
  }
 } while(0);
 if ((label|0) == 65) {
  if ($141) {
   label = 66;
  }
 }
 if ((label|0) == 66) {
  $152 = HEAP32[$__err>>2]|0;
  $153 = $152 | 2;
  HEAP32[$__err>>2] = $153;
 }
 $154 = ($__kb|0)==($__ke|0);
 L95: do {
  if ($154) {
   label = 70;
  } else {
   $$033 = $__kb;$__st$332 = $__status$0;
   while(1) {
    $155 = HEAP8[$__st$332>>0]|0;
    $156 = ($155<<24>>24)==(2);
    if ($156) {
     $$021 = $$033;
     break L95;
    }
    $157 = ((($$033)) + 12|0);
    $158 = ((($__st$332)) + 1|0);
    $159 = ($157|0)==($__ke|0);
    if ($159) {
     label = 70;
     break;
    } else {
     $$033 = $157;$__st$332 = $158;
    }
   }
  }
 } while(0);
 if ((label|0) == 70) {
  $160 = HEAP32[$__err>>2]|0;
  $161 = $160 | 4;
  HEAP32[$__err>>2] = $161;
  $$021 = $__ke;
 }
 _free($162);
 STACKTOP = sp;return ($$021|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $108 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $108 = $100;
  } else {
   $108 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 $103 = tempRet0;
 $104 = $__v;
 $105 = $104;
 HEAP32[$105>>2] = $102;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$108,$__err);
 $109 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($109) {
  $120 = 0;
 } else {
  $110 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $116 = ((($115)) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 63]($$pre$i$i$i$lcssa)|0);
   $119 = ($118|0)==(-1);
   if ($119) {
    HEAP32[$__b>>2] = 0;
    $120 = 0;
   } else {
    $120 = $$pre$i$i$i$lcssa;
   }
  } else {
   $120 = $$pre$i$i$i$lcssa;
  }
 }
 $121 = ($120|0)==(0|0);
 $122 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($122) {
   label = 38;
  } else {
   $123 = ((($$pre$i2$i$i)) + 12|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ((($$pre$i2$i$i)) + 16|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($124|0)==($126|0);
   if ($127) {
    $128 = HEAP32[$$pre$i2$i$i>>2]|0;
    $129 = ((($128)) + 36|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = (FUNCTION_TABLE_ii[$130 & 63]($$pre$i2$i$i)|0);
    $132 = ($131|0)==(-1);
    if ($132) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($121)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($121) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 $135 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($135|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP16[$__v>>1] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $108 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $108 = $100;
  } else {
   $108 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 $103 = tempRet0;
 $104 = $__v;
 $105 = $104;
 HEAP32[$105>>2] = $102;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$108,$__err);
 $109 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($109) {
  $120 = 0;
 } else {
  $110 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $116 = ((($115)) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 63]($$pre$i$i$i$lcssa)|0);
   $119 = ($118|0)==(-1);
   if ($119) {
    HEAP32[$__b>>2] = 0;
    $120 = 0;
   } else {
    $120 = $$pre$i$i$i$lcssa;
   }
  } else {
   $120 = $$pre$i$i$i$lcssa;
  }
 }
 $121 = ($120|0)==(0|0);
 $122 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($122) {
   label = 38;
  } else {
   $123 = ((($$pre$i2$i$i)) + 12|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ((($$pre$i2$i$i)) + 16|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($124|0)==($126|0);
   if ($127) {
    $128 = HEAP32[$$pre$i2$i$i>>2]|0;
    $129 = ((($128)) + 36|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = (FUNCTION_TABLE_ii[$130 & 63]($$pre$i2$i$i)|0);
    $132 = ($131|0)==(-1);
    if ($132) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($121)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($121) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 $135 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($135|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF32[$__v>>2] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF64[$__v>>3] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF64[$__v>>3] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsscanf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$025 = 0, $$033 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$i3$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off038 = 0, $__consume$1$off0 = 0;
 var $__indx$0 = 0, $__kc$0 = 0, $__ky$052 = 0, $__ky1$039 = 0, $__ky2$046 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$050 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$335 = 0, $__n_does_match$4 = 0, $__n_does_match$544 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$049 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$334 = 0;
 var $__n_might_match$4 = 0, $__st$051 = 0, $__st$136 = 0, $__st$245 = 0, $__st$332 = 0, $__statbuf = 0, $__status$0 = 0, $or$cond = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i6 = 0, $tmp$i$i14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $162 = $5;$__status$0 = $5;
  }
 } else {
  $162 = 0;$__status$0 = $__statbuf;
 }
 $7 = ($__kb|0)==($__ke|0);
 if ($7) {
  $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
 } else {
  $__ky$052 = $__kb;$__n_does_match$050 = 0;$__n_might_match$049 = $3;$__st$051 = $__status$0;
  while(1) {
   $10 = HEAP8[$__ky$052>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = ((($__ky$052)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$__st$051>>0] = 2;
    $19 = (($__n_might_match$049) + -1)|0;
    $20 = (($__n_does_match$050) + 1)|0;
    $__n_does_match$1 = $20;$__n_might_match$1 = $19;
   } else {
    HEAP8[$__st$051>>0] = 1;
    $__n_does_match$1 = $__n_does_match$050;$__n_might_match$1 = $__n_might_match$049;
   }
   $21 = ((($__ky$052)) + 12|0);
   $22 = ((($__st$051)) + 1|0);
   $23 = ($21|0)==($__ke|0);
   if ($23) {
    $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__ky$052 = $21;$__n_does_match$050 = $__n_does_match$1;$__n_might_match$049 = $__n_might_match$1;$__st$051 = $22;
   }
  }
 }
 $8 = ($__kb|0)==($__ke|0);
 $9 = ($__kb|0)==($__ke|0);
 $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
 L17: while(1) {
  $24 = HEAP32[$__b>>2]|0;
  $25 = ($24|0)==(0|0);
  do {
   if ($25) {
    $51 = 1;
   } else {
    $26 = ((($24)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($24)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if ($30) {
     $31 = HEAP32[$24>>2]|0;
     $32 = ((($31)) + 36|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = (FUNCTION_TABLE_ii[$33 & 63]($24)|0);
     $$0$i$i$i$i3 = $34;
    } else {
     $35 = HEAP32[$27>>2]|0;
     $$0$i$i$i$i3 = $35;
    }
    $36 = ($$0$i$i$i$i3|0)==(-1);
    if ($36) {
     HEAP32[$__b>>2] = 0;
     $51 = 1;
     break;
    } else {
     $$pre$i$i$i5 = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i6 = ($$pre$i$i$i5|0)==(0|0);
     $51 = $phitmp$i$i$i6;
     break;
    }
   }
  } while(0);
  $37 = HEAP32[$__e>>2]|0;
  $38 = ($37|0)==(0|0);
  if ($38) {
   $$pre$i3$i$i = 0;$50 = 1;
  } else {
   $39 = ((($37)) + 12|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($37)) + 16|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($40|0)==($42|0);
   if ($43) {
    $44 = HEAP32[$37>>2]|0;
    $45 = ((($44)) + 36|0);
    $46 = HEAP32[$45>>2]|0;
    $47 = (FUNCTION_TABLE_ii[$46 & 63]($37)|0);
    $$0$i$i1$i$i9 = $47;
   } else {
    $48 = HEAP32[$40>>2]|0;
    $$0$i$i1$i$i9 = $48;
   }
   $49 = ($$0$i$i1$i$i9|0)==(-1);
   if ($49) {
    HEAP32[$__e>>2] = 0;
    $$pre$i3$i$i = 0;$50 = 1;
   } else {
    $$pre$i3$i$i = $37;$50 = 0;
   }
  }
  $tmp$i$i14 = $51 ^ $50;
  $52 = ($__n_might_match$2|0)!=(0);
  $53 = $52 & $tmp$i$i14;
  $54 = HEAP32[$__b>>2]|0;
  if (!($53)) {
   $$lcssa = $54;$$pre$i3$i$i$lcssa = $$pre$i3$i$i;
   break;
  }
  $55 = ((($54)) + 12|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($54)) + 16|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ($56|0)==($58|0);
  if ($59) {
   $60 = HEAP32[$54>>2]|0;
   $61 = ((($60)) + 36|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (FUNCTION_TABLE_ii[$62 & 63]($54)|0);
   $$0$i$i = $63;
  } else {
   $64 = HEAP32[$56>>2]|0;
   $$0$i$i = $64;
  }
  if ($__case_sensitive) {
   $__c$0 = $$0$i$i;
  } else {
   $65 = HEAP32[$__ct>>2]|0;
   $66 = ((($65)) + 28|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = (FUNCTION_TABLE_iii[$67 & 15]($__ct,$$0$i$i)|0);
   $__c$0 = $68;
  }
  $69 = (($__indx$0) + 1)|0;
  if ($8) {
   $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
  } else {
   $__consume$0$off038 = 0;$__ky1$039 = $__kb;$__n_does_match$335 = $__n_does_match$2;$__n_might_match$334 = $__n_might_match$2;$__st$136 = $__status$0;
   while(1) {
    $70 = HEAP8[$__st$136>>0]|0;
    $71 = ($70<<24>>24)==(1);
    do {
     if ($71) {
      $72 = HEAP8[$__ky1$039>>0]|0;
      $73 = $72 & 1;
      $74 = ($73<<24>>24)==(0);
      if ($74) {
       $77 = ((($__ky1$039)) + 4|0);
       $79 = $77;
      } else {
       $75 = ((($__ky1$039)) + 8|0);
       $76 = HEAP32[$75>>2]|0;
       $79 = $76;
      }
      $78 = (($79) + ($__indx$0<<2)|0);
      $80 = HEAP32[$78>>2]|0;
      if ($__case_sensitive) {
       $__kc$0 = $80;
      } else {
       $81 = HEAP32[$__ct>>2]|0;
       $82 = ((($81)) + 28|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = (FUNCTION_TABLE_iii[$83 & 15]($__ct,$80)|0);
       $__kc$0 = $84;
      }
      $85 = ($__c$0|0)==($__kc$0|0);
      if (!($85)) {
       HEAP8[$__st$136>>0] = 0;
       $97 = (($__n_might_match$334) + -1)|0;
       $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $97;
       break;
      }
      $86 = HEAP8[$__ky1$039>>0]|0;
      $87 = $86 & 1;
      $88 = ($87<<24>>24)==(0);
      if ($88) {
       $91 = $86&255;
       $92 = $91 >>> 1;
       $93 = $92;
      } else {
       $89 = ((($__ky1$039)) + 4|0);
       $90 = HEAP32[$89>>2]|0;
       $93 = $90;
      }
      $94 = ($93|0)==($69|0);
      if ($94) {
       HEAP8[$__st$136>>0] = 2;
       $95 = (($__n_might_match$334) + -1)|0;
       $96 = (($__n_does_match$335) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $96;$__n_might_match$4 = $95;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
     }
    } while(0);
    $98 = ((($__ky1$039)) + 12|0);
    $99 = ((($__st$136)) + 1|0);
    $100 = ($98|0)==($__ke|0);
    if ($100) {
     $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
     break;
    } else {
     $__consume$0$off038 = $__consume$1$off0;$__ky1$039 = $98;$__n_does_match$335 = $__n_does_match$4;$__n_might_match$334 = $__n_might_match$4;$__st$136 = $99;
    }
   }
  }
  if (!($__consume$0$off0$lcssa)) {
   $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  }
  $101 = HEAP32[$__b>>2]|0;
  $102 = ((($101)) + 12|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = ((($101)) + 16|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ($103|0)==($105|0);
  if ($106) {
   $107 = HEAP32[$101>>2]|0;
   $108 = ((($107)) + 40|0);
   $109 = HEAP32[$108>>2]|0;
   (FUNCTION_TABLE_ii[$109 & 63]($101)|0);
  } else {
   $110 = ((($103)) + 4|0);
   HEAP32[$102>>2] = $110;
  }
  $111 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
  $112 = ($111>>>0)<(2);
  $or$cond = $112 | $9;
  if ($or$cond) {
   $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  } else {
   $__ky2$046 = $__kb;$__n_does_match$544 = $__n_does_match$3$lcssa;$__st$245 = $__status$0;
  }
  while(1) {
   $113 = HEAP8[$__st$245>>0]|0;
   $114 = ($113<<24>>24)==(2);
   if ($114) {
    $115 = HEAP8[$__ky2$046>>0]|0;
    $116 = $115 & 1;
    $117 = ($116<<24>>24)==(0);
    if ($117) {
     $120 = $115&255;
     $121 = $120 >>> 1;
     $122 = $121;
    } else {
     $118 = ((($__ky2$046)) + 4|0);
     $119 = HEAP32[$118>>2]|0;
     $122 = $119;
    }
    $123 = ($122|0)==($69|0);
    if ($123) {
     $__n_does_match$6 = $__n_does_match$544;
    } else {
     HEAP8[$__st$245>>0] = 0;
     $124 = (($__n_does_match$544) + -1)|0;
     $__n_does_match$6 = $124;
    }
   } else {
    $__n_does_match$6 = $__n_does_match$544;
   }
   $125 = ((($__ky2$046)) + 12|0);
   $126 = ((($__st$245)) + 1|0);
   $127 = ($125|0)==($__ke|0);
   if ($127) {
    $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
    continue L17;
   } else {
    $__ky2$046 = $125;$__n_does_match$544 = $__n_does_match$6;$__st$245 = $126;
   }
  }
 }
 $128 = ($$lcssa|0)==(0|0);
 do {
  if ($128) {
   $163 = 1;
  } else {
   $129 = ((($$lcssa)) + 12|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ((($$lcssa)) + 16|0);
   $132 = HEAP32[$131>>2]|0;
   $133 = ($130|0)==($132|0);
   if ($133) {
    $134 = HEAP32[$$lcssa>>2]|0;
    $135 = ((($134)) + 36|0);
    $136 = HEAP32[$135>>2]|0;
    $137 = (FUNCTION_TABLE_ii[$136 & 63]($$lcssa)|0);
    $$0$i$i$i$i = $137;
   } else {
    $138 = HEAP32[$130>>2]|0;
    $$0$i$i$i$i = $138;
   }
   $139 = ($$0$i$i$i$i|0)==(-1);
   if ($139) {
    HEAP32[$__b>>2] = 0;
    $163 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $163 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $140 = ($$pre$i3$i$i$lcssa|0)==(0|0);
 do {
  if ($140) {
   label = 72;
  } else {
   $141 = ((($$pre$i3$i$i$lcssa)) + 12|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = ((($$pre$i3$i$i$lcssa)) + 16|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = ($142|0)==($144|0);
   if ($145) {
    $146 = HEAP32[$$pre$i3$i$i$lcssa>>2]|0;
    $147 = ((($146)) + 36|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = (FUNCTION_TABLE_ii[$148 & 63]($$pre$i3$i$i$lcssa)|0);
    $$0$i$i1$i$i = $149;
   } else {
    $150 = HEAP32[$142>>2]|0;
    $$0$i$i1$i$i = $150;
   }
   $151 = ($$0$i$i1$i$i|0)==(-1);
   if ($151) {
    HEAP32[$__e>>2] = 0;
    label = 72;
    break;
   } else {
    if ($163) {
     break;
    } else {
     label = 74;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 72) {
  if ($163) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $152 = HEAP32[$__err>>2]|0;
  $153 = $152 | 2;
  HEAP32[$__err>>2] = $153;
 }
 $154 = ($__kb|0)==($__ke|0);
 L107: do {
  if ($154) {
   label = 78;
  } else {
   $$033 = $__kb;$__st$332 = $__status$0;
   while(1) {
    $155 = HEAP8[$__st$332>>0]|0;
    $156 = ($155<<24>>24)==(2);
    if ($156) {
     $$025 = $$033;
     break L107;
    }
    $157 = ((($$033)) + 12|0);
    $158 = ((($__st$332)) + 1|0);
    $159 = ($157|0)==($__ke|0);
    if ($159) {
     label = 78;
     break;
    } else {
     $$033 = $157;$__st$332 = $158;
    }
   }
  }
 } while(0);
 if ((label|0) == 78) {
  $160 = HEAP32[$__err>>2]|0;
  $161 = $160 | 4;
  HEAP32[$__err>>2] = $161;
  $$025 = $__ke;
 }
 _free($162);
 STACKTOP = sp;return ($$025|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0;
 var $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$135 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$135 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$135 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($135) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($135) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $107 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $107 = $99;
  } else {
   $107 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 $102 = tempRet0;
 $103 = $__v;
 $104 = $103;
 HEAP32[$104>>2] = $101;
 $105 = (($103) + 4)|0;
 $106 = $105;
 HEAP32[$106>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$107,$__err);
 $108 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($108) {
  $137 = 1;
 } else {
  $109 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = ($110|0)==($112|0);
  if ($113) {
   $114 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $115 = ((($114)) + 36|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $117;
  } else {
   $118 = HEAP32[$110>>2]|0;
   $$0$i$i$i$i = $118;
  }
  $119 = ($$0$i$i$i$i|0)==(-1);
  if ($119) {
   HEAP32[$__b>>2] = 0;
   $137 = 1;
  } else {
   $137 = 0;
  }
 }
 $120 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($120) {
   label = 44;
  } else {
   $121 = ((($$pre$i3$i$i)) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ((($$pre$i3$i$i)) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122|0)==($124|0);
   if ($125) {
    $126 = HEAP32[$$pre$i3$i$i>>2]|0;
    $127 = ((($126)) + 36|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = (FUNCTION_TABLE_ii[$128 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $129;
   } else {
    $130 = HEAP32[$122>>2]|0;
    $$0$i$i1$i$i = $130;
   }
   $131 = ($$0$i$i1$i$i|0)==(-1);
   if ($131) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($137) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($137) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $132 = HEAP32[$__err>>2]|0;
  $133 = $132 | 2;
  HEAP32[$__err>>2] = $133;
 }
 $134 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($134|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP16[$__v>>1] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0;
 var $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$135 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$135 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$135 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($135) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($135) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $107 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $107 = $99;
  } else {
   $107 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 $102 = tempRet0;
 $103 = $__v;
 $104 = $103;
 HEAP32[$104>>2] = $101;
 $105 = (($103) + 4)|0;
 $106 = $105;
 HEAP32[$106>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$107,$__err);
 $108 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($108) {
  $137 = 1;
 } else {
  $109 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = ($110|0)==($112|0);
  if ($113) {
   $114 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $115 = ((($114)) + 36|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $117;
  } else {
   $118 = HEAP32[$110>>2]|0;
   $$0$i$i$i$i = $118;
  }
  $119 = ($$0$i$i$i$i|0)==(-1);
  if ($119) {
   HEAP32[$__b>>2] = 0;
   $137 = 1;
  } else {
   $137 = 0;
  }
 }
 $120 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($120) {
   label = 44;
  } else {
   $121 = ((($$pre$i3$i$i)) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ((($$pre$i3$i$i)) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122|0)==($124|0);
   if ($125) {
    $126 = HEAP32[$$pre$i3$i$i>>2]|0;
    $127 = ((($126)) + 36|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = (FUNCTION_TABLE_ii[$128 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $129;
   } else {
    $130 = HEAP32[$122>>2]|0;
    $$0$i$i1$i$i = $130;
   }
   $131 = ($$0$i$i1$i$i|0)==(-1);
   if ($131) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($137) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($137) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $132 = HEAP32[$__err>>2]|0;
  $133 = $132 | 2;
  HEAP32[$__err>>2] = $133;
 }
 $134 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($134|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF32[$__v>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF64[$__v>>3] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF64[$__v>>3] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vasprintf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$sroa$0$1 = 0;
  } else {
   $2 = $__oe;
   $3 = $__ob;
   $4 = (($2) - ($3))|0;
   $5 = $4 >> 2;
   $6 = ((($__iob)) + 12|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)>($5|0);
   $9 = (($7) - ($5))|0;
   $__ns$0 = $8 ? $9 : 0;
   $10 = $__op;
   $11 = (($10) - ($3))|0;
   $12 = $11 >> 2;
   $13 = ($11|0)>(0);
   if ($13) {
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 31]($0,$__ob,$12)|0);
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   $19 = ($__ns$0|0)>(0);
   do {
    if ($19) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
     $20 = HEAP8[$__sp>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     $23 = ((($__sp)) + 8|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($__sp)) + 4|0);
     $26 = $22 ? $25 : $24;
     $27 = HEAP32[$0>>2]|0;
     $28 = ((($27)) + 48|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = (FUNCTION_TABLE_iiii[$29 & 31]($0,$26,$__ns$0)|0);
     $31 = ($30|0)==($__ns$0|0);
     if ($31) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break;
     } else {
      HEAP32[$__s>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      $$sroa$0$1 = 0;
      break L1;
     }
    }
   } while(0);
   $32 = (($2) - ($10))|0;
   $33 = $32 >> 2;
   $34 = ($32|0)>(0);
   if ($34) {
    $35 = HEAP32[$0>>2]|0;
    $36 = ((($35)) + 48|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (FUNCTION_TABLE_iiii[$37 & 31]($0,$__op,$33)|0);
    $39 = ($38|0)==($33|0);
    if (!($39)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   HEAP32[$6>>2] = 0;
   $$sroa$0$1 = $0;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$1|0);
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $isascii1$i = 0, $isascii1$i12 = 0, $sext = 0, $sext24 = 0, $tmp$i$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 63]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $157 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $157 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $isascii1$i = ($40<<24>>24)>(-1);
   if ($isascii1$i) {
    $sext = $$0$i$i << 24;
    $41 = $sext >> 24;
    $42 = ((($__ct)) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (($43) + ($41<<1)|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 & 2048;
    $47 = ($46<<16>>16)==(0);
    if (!($47)) {
     $50 = HEAP32[$__ct>>2]|0;
     $51 = ((($50)) + 36|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (FUNCTION_TABLE_iiii[$52 & 31]($__ct,$40,0)|0);
     $54 = $53 << 24 >> 24;
     $55 = HEAP32[$__b>>2]|0;
     $56 = ((($55)) + 12|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ((($55)) + 16|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($57|0)==($59|0);
     if ($60) {
      $61 = HEAP32[$55>>2]|0;
      $62 = ((($61)) + 40|0);
      $63 = HEAP32[$62>>2]|0;
      (FUNCTION_TABLE_ii[$63 & 63]($55)|0);
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     } else {
      $64 = ((($57)) + 1|0);
      HEAP32[$56>>2] = $64;
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     }
     while(1) {
      $__r$0 = (($__r$0$in) + -48)|0;
      $$0 = (($$0$in) + -1)|0;
      $65 = HEAP32[$__b>>2]|0;
      $66 = ($65|0)==(0|0);
      do {
       if ($66) {
        $77 = 0;
       } else {
        $67 = ((($65)) + 12|0);
        $68 = HEAP32[$67>>2]|0;
        $69 = ((($65)) + 16|0);
        $70 = HEAP32[$69>>2]|0;
        $71 = ($68|0)==($70|0);
        if ($71) {
         $72 = HEAP32[$65>>2]|0;
         $73 = ((($72)) + 36|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (FUNCTION_TABLE_ii[$74 & 63]($65)|0);
         $76 = ($75|0)==(-1);
         if ($76) {
          HEAP32[$__b>>2] = 0;
          $77 = 0;
          break;
         } else {
          $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
          $77 = $$pre$i$i$i3;
          break;
         }
        } else {
         $77 = $65;
        }
       }
      } while(0);
      $78 = ($77|0)==(0|0);
      $80 = ($79|0)==(0|0);
      if ($80) {
       $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = 0;
      } else {
       $81 = ((($79)) + 12|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ((($79)) + 16|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($82|0)==($84|0);
       if ($85) {
        $86 = HEAP32[$79>>2]|0;
        $87 = ((($86)) + 36|0);
        $88 = HEAP32[$87>>2]|0;
        $89 = (FUNCTION_TABLE_ii[$88 & 63]($79)|0);
        $90 = ($89|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i20 = 0;$91 = 0;
        } else {
         $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $$pre$i2$i$i7;
        }
       } else {
        $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $79;
       }
      }
      $92 = ($91|0)==(0|0);
      $tmp$i$i9 = $78 ^ $92;
      $93 = ($$0$in|0)>(1);
      $94 = $93 & $tmp$i$i9;
      $95 = HEAP32[$__b>>2]|0;
      if (!($94)) {
       $$lcssa = $95;$$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;$__r$0$lcssa = $__r$0;
       break;
      }
      $96 = ((($95)) + 12|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = ((($95)) + 16|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = ($97|0)==($99|0);
      if ($100) {
       $101 = HEAP32[$95>>2]|0;
       $102 = ((($101)) + 36|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = (FUNCTION_TABLE_ii[$103 & 63]($95)|0);
       $$0$i$i10 = $104;
      } else {
       $105 = HEAP8[$97>>0]|0;
       $106 = $105&255;
       $$0$i$i10 = $106;
      }
      $107 = $$0$i$i10&255;
      $isascii1$i12 = ($107<<24>>24)>(-1);
      if (!($isascii1$i12)) {
       $$01 = $__r$0;
       break L16;
      }
      $sext24 = $$0$i$i10 << 24;
      $108 = $sext24 >> 24;
      $109 = HEAP32[$42>>2]|0;
      $110 = (($109) + ($108<<1)|0);
      $111 = HEAP16[$110>>1]|0;
      $112 = $111 & 2048;
      $113 = ($112<<16>>16)==(0);
      if ($113) {
       $$01 = $__r$0;
       break L16;
      }
      $114 = ($__r$0*10)|0;
      $115 = HEAP32[$__ct>>2]|0;
      $116 = ((($115)) + 36|0);
      $117 = HEAP32[$116>>2]|0;
      $118 = (FUNCTION_TABLE_iiii[$117 & 31]($__ct,$107,0)|0);
      $119 = $118 << 24 >> 24;
      $120 = (($119) + ($114))|0;
      $121 = HEAP32[$__b>>2]|0;
      $122 = ((($121)) + 12|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = ((($121)) + 16|0);
      $125 = HEAP32[$124>>2]|0;
      $126 = ($123|0)==($125|0);
      if ($126) {
       $127 = HEAP32[$121>>2]|0;
       $128 = ((($127)) + 40|0);
       $129 = HEAP32[$128>>2]|0;
       (FUNCTION_TABLE_ii[$129 & 63]($121)|0);
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      } else {
       $130 = ((($123)) + 1|0);
       HEAP32[$122>>2] = $130;
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      }
     }
     $131 = ($$lcssa|0)==(0|0);
     do {
      if ($131) {
       $142 = 0;
      } else {
       $132 = ((($$lcssa)) + 12|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ((($$lcssa)) + 16|0);
       $135 = HEAP32[$134>>2]|0;
       $136 = ($133|0)==($135|0);
       if ($136) {
        $137 = HEAP32[$$lcssa>>2]|0;
        $138 = ((($137)) + 36|0);
        $139 = HEAP32[$138>>2]|0;
        $140 = (FUNCTION_TABLE_ii[$139 & 63]($$lcssa)|0);
        $141 = ($140|0)==(-1);
        if ($141) {
         HEAP32[$__b>>2] = 0;
         $142 = 0;
         break;
        } else {
         $$pre$i$i$i16 = HEAP32[$__b>>2]|0;
         $142 = $$pre$i$i$i16;
         break;
        }
       } else {
        $142 = $$lcssa;
       }
      }
     } while(0);
     $143 = ($142|0)==(0|0);
     $144 = ($$pre$i2$i$i20$lcssa|0)==(0|0);
     do {
      if ($144) {
       label = 50;
      } else {
       $145 = ((($$pre$i2$i$i20$lcssa)) + 12|0);
       $146 = HEAP32[$145>>2]|0;
       $147 = ((($$pre$i2$i$i20$lcssa)) + 16|0);
       $148 = HEAP32[$147>>2]|0;
       $149 = ($146|0)==($148|0);
       if ($149) {
        $150 = HEAP32[$$pre$i2$i$i20$lcssa>>2]|0;
        $151 = ((($150)) + 36|0);
        $152 = HEAP32[$151>>2]|0;
        $153 = (FUNCTION_TABLE_ii[$152 & 63]($$pre$i2$i$i20$lcssa)|0);
        $154 = ($153|0)==(-1);
        if ($154) {
         HEAP32[$__e>>2] = 0;
         label = 50;
         break;
        }
       }
       if ($143) {
        $$01 = $__r$0$lcssa;
        break L16;
       }
      }
     } while(0);
     if ((label|0) == 50) {
      if (!($143)) {
       $$01 = $__r$0$lcssa;
       break;
      }
     }
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $48 = HEAP32[$__err>>2]|0;
   $49 = $48 | 4;
   HEAP32[$__err>>2] = $49;
   $$01 = 0;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i19 = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i20 = 0, $phitmp$i$i$i5 = 0, $phitmp$i4$i$i11 = 0, $tmp$i$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $148 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $148 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $148 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($148) {
     $149 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($148) {
   label = 16;
  } else {
   $149 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 31]($__ct,2048,$$0$i$i)|0);
   if (!($42)) {
    $43 = HEAP32[$__err>>2]|0;
    $44 = $43 | 4;
    HEAP32[$__err>>2] = $44;
    $$01 = 0;
    break;
   }
   $45 = HEAP32[$__ct>>2]|0;
   $46 = ((($45)) + 52|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_iiii[$47 & 31]($__ct,$$0$i$i,0)|0);
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$__b>>2]|0;
   $51 = ((($50)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($50)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = ((($56)) + 40|0);
    $58 = HEAP32[$57>>2]|0;
    (FUNCTION_TABLE_ii[$58 & 63]($50)|0);
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   } else {
    $59 = ((($52)) + 4|0);
    HEAP32[$51>>2] = $59;
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   }
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $60 = HEAP32[$__b>>2]|0;
    $61 = ($60|0)==(0|0);
    do {
     if ($61) {
      $87 = 1;
     } else {
      $62 = ((($60)) + 12|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ((($60)) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($63|0)==($65|0);
      if ($66) {
       $67 = HEAP32[$60>>2]|0;
       $68 = ((($67)) + 36|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = (FUNCTION_TABLE_ii[$69 & 63]($60)|0);
       $$0$i$i$i$i2 = $70;
      } else {
       $71 = HEAP32[$63>>2]|0;
       $$0$i$i$i$i2 = $71;
      }
      $72 = ($$0$i$i$i$i2|0)==(-1);
      if ($72) {
       HEAP32[$__b>>2] = 0;
       $87 = 1;
       break;
      } else {
       $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i5 = ($$pre$i$i$i4|0)==(0|0);
       $87 = $phitmp$i$i$i5;
       break;
      }
     }
    } while(0);
    $74 = ($73|0)==(0|0);
    do {
     if ($74) {
      $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = 0;$86 = 1;
     } else {
      $75 = ((($73)) + 12|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ((($73)) + 16|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($76|0)==($78|0);
      if ($79) {
       $80 = HEAP32[$73>>2]|0;
       $81 = ((($80)) + 36|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (FUNCTION_TABLE_ii[$82 & 63]($73)|0);
       $$0$i$i1$i$i8 = $83;
      } else {
       $84 = HEAP32[$76>>2]|0;
       $$0$i$i1$i$i8 = $84;
      }
      $85 = ($$0$i$i1$i$i8|0)==(-1);
      if ($85) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i25 = 0;$150 = 0;$86 = 1;
       break;
      } else {
       $phitmp$i4$i$i11 = ($$pre$i3$i$i10|0)==(0|0);
       $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = $$pre$i3$i$i10;$86 = $phitmp$i4$i$i11;
       break;
      }
     }
    } while(0);
    $tmp$i$i13 = $87 ^ $86;
    $88 = ($$0$in|0)>(1);
    $89 = $88 & $tmp$i$i13;
    $90 = HEAP32[$__b>>2]|0;
    if (!($89)) {
     $$lcssa = $90;$$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;$__r$0$lcssa = $__r$0;
     break;
    }
    $91 = ((($90)) + 12|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ((($90)) + 16|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = ($92|0)==($94|0);
    if ($95) {
     $96 = HEAP32[$90>>2]|0;
     $97 = ((($96)) + 36|0);
     $98 = HEAP32[$97>>2]|0;
     $99 = (FUNCTION_TABLE_ii[$98 & 63]($90)|0);
     $$0$i$i14 = $99;
    } else {
     $100 = HEAP32[$92>>2]|0;
     $$0$i$i14 = $100;
    }
    $101 = HEAP32[$__ct>>2]|0;
    $102 = ((($101)) + 12|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = (FUNCTION_TABLE_iiii[$103 & 31]($__ct,2048,$$0$i$i14)|0);
    if (!($104)) {
     $$01 = $__r$0;
     break L22;
    }
    $105 = ($__r$0*10)|0;
    $106 = HEAP32[$__ct>>2]|0;
    $107 = ((($106)) + 52|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = (FUNCTION_TABLE_iiii[$108 & 31]($__ct,$$0$i$i14,0)|0);
    $110 = $109 << 24 >> 24;
    $111 = (($110) + ($105))|0;
    $112 = HEAP32[$__b>>2]|0;
    $113 = ((($112)) + 12|0);
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($112)) + 16|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ($114|0)==($116|0);
    if ($117) {
     $118 = HEAP32[$112>>2]|0;
     $119 = ((($118)) + 40|0);
     $120 = HEAP32[$119>>2]|0;
     (FUNCTION_TABLE_ii[$120 & 63]($112)|0);
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    } else {
     $121 = ((($114)) + 4|0);
     HEAP32[$113>>2] = $121;
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    }
   }
   $122 = ($$lcssa|0)==(0|0);
   do {
    if ($122) {
     $151 = 1;
    } else {
     $123 = ((($$lcssa)) + 12|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($$lcssa)) + 16|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ($124|0)==($126|0);
     if ($127) {
      $128 = HEAP32[$$lcssa>>2]|0;
      $129 = ((($128)) + 36|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = (FUNCTION_TABLE_ii[$130 & 63]($$lcssa)|0);
      $$0$i$i$i$i17 = $131;
     } else {
      $132 = HEAP32[$124>>2]|0;
      $$0$i$i$i$i17 = $132;
     }
     $133 = ($$0$i$i$i$i17|0)==(-1);
     if ($133) {
      HEAP32[$__b>>2] = 0;
      $151 = 1;
      break;
     } else {
      $$pre$i$i$i19 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i20 = ($$pre$i$i$i19|0)==(0|0);
      $151 = $phitmp$i$i$i20;
      break;
     }
    }
   } while(0);
   $134 = ($$pre$i3$i$i25$lcssa|0)==(0|0);
   do {
    if ($134) {
     label = 60;
    } else {
     $135 = ((($$pre$i3$i$i25$lcssa)) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ((($$pre$i3$i$i25$lcssa)) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$pre$i3$i$i25$lcssa>>2]|0;
      $141 = ((($140)) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = (FUNCTION_TABLE_ii[$142 & 63]($$pre$i3$i$i25$lcssa)|0);
      $$0$i$i1$i$i23 = $143;
     } else {
      $144 = HEAP32[$136>>2]|0;
      $$0$i$i1$i$i23 = $144;
     }
     $145 = ($$0$i$i1$i$i23|0)==(-1);
     if ($145) {
      HEAP32[$__e>>2] = 0;
      label = 60;
      break;
     } else {
      if ($151) {
       $$01 = $__r$0$lcssa;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 60) {
    if (!($151)) {
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $146 = HEAP32[$__err>>2]|0;
   $147 = $146 | 2;
   HEAP32[$__err>>2] = $147;
   $$01 = $__r$0$lcssa;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $2 ? $4 : 0;
 $14 = (_realloc($13,$$)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $16 = $14;
  HEAP32[$__b>>2] = $16;
  $21 = $14;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $17 = $14;
  HEAP32[$__b>>2] = $17;
  $18 = ($$pr|0)==(0|0);
  if ($18) {
   $21 = $14;
  } else {
   $19 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$19 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $21 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $20 = (($21) + ($12)|0);
 HEAP32[$__n>>2] = $20;
 $22 = HEAP32[$__b>>2]|0;
 $23 = (($22) + ($$)|0);
 HEAP32[$__e>>2] = $23;
 return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $17 = $15;
  HEAP32[$__b>>2] = $17;
  $23 = $15;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $18 = $15;
  HEAP32[$__b>>2] = $18;
  $19 = ($$pr|0)==(0|0);
  if ($19) {
   $23 = $15;
  } else {
   $20 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$20 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $23 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $21 = $$ >>> 2;
 $22 = (($23) + ($13<<2)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($21<<2)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = $5;$16 = 10;$41 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $7;$16 = $phitmp$i;$41 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($16) - ($15))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($15) + ($12))|0;
    $19 = (($18) - ($16))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $41;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = ((($this)) + 1|0);
    $29 = $25;
   } else {
    $23 = ((($this)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $29 = $24;
   }
   $26 = (($15) - ($0))|0;
   $scevgep = (($__last) + ($26)|0);
   $scevgep1 = $scevgep;
   $27 = ($__first|0)==($__last|0);
   if (!($27)) {
    $28 = (($29) + ($15)|0);
    $$03 = $__first;$__p$04 = $28;
    while(1) {
     $30 = HEAP8[$$03>>0]|0;
     HEAP8[$__p$04>>0] = $30;
     $31 = ((($__p$04)) + 1|0);
     $32 = ((($$03)) + 1|0);
     $33 = ($32|0)==($__last|0);
     if ($33) {
      break;
     } else {
      $$03 = $32;$__p$04 = $31;
     }
    }
   }
   $scevgep2 = (($29) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $34 = (($15) + ($12))|0;
   $35 = HEAP8[$this>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $39 = $34 << 1;
    $40 = $39&255;
    HEAP8[$this>>0] = $40;
    break;
   } else {
    $38 = ((($this)) + 4|0);
    HEAP32[$38>>2] = $34;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $17 = $15;
  HEAP32[$__b>>2] = $17;
  $23 = $15;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $18 = $15;
  HEAP32[$__b>>2] = $18;
  $19 = ($$pr|0)==(0|0);
  if ($19) {
   $23 = $15;
  } else {
   $20 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$20 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $23 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $21 = $$ >>> 2;
 $22 = (($23) + ($13<<2)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($21<<2)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $16 = $5;$17 = 1;$45 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $16 = $7;$17 = $phitmp$i;$45 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = $12 >> 2;
 $14 = ($13|0)==(0);
 do {
  if (!($14)) {
   $15 = (($17) - ($16))|0;
   $18 = ($15>>>0)<($13>>>0);
   if ($18) {
    $19 = (($16) + ($13))|0;
    $20 = (($19) - ($17))|0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$17,$20,$16,$16,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $22 = $$pre;
   } else {
    $22 = $45;
   }
   $21 = $22 & 1;
   $23 = ($21<<24>>24)==(0);
   if ($23) {
    $26 = ((($this)) + 4|0);
    $33 = $26;
   } else {
    $24 = ((($this)) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $33 = $25;
   }
   $27 = $__last;
   $28 = (($27) - ($0))|0;
   $29 = $28 >>> 2;
   $30 = (($16) + ($29))|0;
   $31 = ($__first|0)==($__last|0);
   if (!($31)) {
    $32 = (($33) + ($16<<2)|0);
    $$03 = $__first;$__p$04 = $32;
    while(1) {
     $34 = HEAP32[$$03>>2]|0;
     HEAP32[$__p$04>>2] = $34;
     $35 = ((($__p$04)) + 4|0);
     $36 = ((($$03)) + 4|0);
     $37 = ($36|0)==($__last|0);
     if ($37) {
      break;
     } else {
      $$03 = $36;$__p$04 = $35;
     }
    }
   }
   $scevgep = (($33) + ($30<<2)|0);
   HEAP32[$scevgep>>2] = 0;
   $38 = (($16) + ($13))|0;
   $39 = HEAP8[$this>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $43 = $38 << 1;
    $44 = $43&255;
    HEAP8[$this>>0] = $44;
    break;
   } else {
    $42 = ((($this)) + 4|0);
    HEAP32[$42>>2] = $38;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 if (!($3)) {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5024)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5064)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6176)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6168)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6240)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6248)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6304)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6312)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6320)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6328)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5136)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5248)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5312)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5376)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5696)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5760)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5824)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5888)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5928)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5968)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6008)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6048)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5472)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5568)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5600)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5632)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6088)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6128)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$8);
 } else {
  $9 = ($6>>>0)>($__sz>>>0);
  if ($9) {
   $10 = (($2) + ($__sz<<2)|0);
   $11 = ($1|0)==($10|0);
   if (!($11)) {
    $13 = $1;
    while(1) {
     $12 = ((($13)) + -4|0);
     $14 = ($12|0)==($10|0);
     if ($14) {
      $$lcssa = $12;
      break;
     } else {
      $13 = $12;
     }
    }
    HEAP32[$0>>2] = $$lcssa;
   }
  }
 }
 return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if (!($1)) {
   $2 = ((($this)) + 4|0);
   $$pre$i$i = HEAP32[$2>>2]|0;
   $3 = ($$pre$i$i|0)==($0|0);
   if (!($3)) {
    $5 = $$pre$i$i;
    while(1) {
     $4 = ((($5)) + -4|0);
     $6 = ($4|0)==($0|0);
     if ($6) {
      $$lcssa = $4;
      break;
     } else {
      $5 = $4;
     }
    }
    HEAP32[$2>>2] = $$lcssa;
   }
   $7 = ((($this)) + 16|0);
   $8 = ($7|0)==($0|0);
   if ($8) {
    $9 = ((($this)) + 128|0);
    HEAP8[$9>>0] = 0;
    break;
   } else {
    __ZdlPv($0);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__vp)) + 4|0);
 $$field = HEAP32[$0>>2]|0;
 $$index1 = ((($0)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $1 = HEAP32[$__vp>>2]|0;
 $2 = $$field2 >> 1;
 $3 = (($1) + ($2)|0);
 $4 = $$field2 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $9 = $$field;
  $10 = $9;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (($6) + ($$field)|0);
  $8 = HEAP32[$7>>2]|0;
  $10 = $8;
 }
 FUNCTION_TABLE_vi[$10 & 127]($3);
 return;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $10 = $frm_end;
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $11 = ($$pre>>>0)<($frm_end>>>0);
   if ($11) {
    $13 = $$pre;
    while(1) {
     $12 = HEAP16[$13>>1]|0;
     $14 = $12&65535;
     $15 = ($14>>>0)>($Maxcode>>>0);
     if ($15) {
      $$0 = 2;
      break L4;
     }
     $16 = ($12&65535)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $12&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($12&65535)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $14 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $14 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($12&65535)<(55296);
       if ($37) {
        $38 = HEAP32[$to_nxt>>2]|0;
        $39 = $38;
        $40 = (($$pre1) - ($39))|0;
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $14 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $14 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $14 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       }
       $57 = ($12&65535)<(56320);
       if (!($57)) {
        $109 = ($12&65535)<(57344);
        if ($109) {
         $$0 = 2;
         break L4;
        }
        $110 = HEAP32[$to_nxt>>2]|0;
        $111 = $110;
        $112 = (($$pre1) - ($111))|0;
        $113 = ($112|0)<(3);
        if ($113) {
         $$0 = 1;
         break L4;
        }
        $114 = $14 >>> 12;
        $115 = $114 | 224;
        $116 = $115&255;
        $117 = ((($110)) + 1|0);
        HEAP32[$to_nxt>>2] = $117;
        HEAP8[$110>>0] = $116;
        $118 = $14 >>> 6;
        $119 = $118 & 63;
        $120 = $119 | 128;
        $121 = $120&255;
        $122 = HEAP32[$to_nxt>>2]|0;
        $123 = ((($122)) + 1|0);
        HEAP32[$to_nxt>>2] = $123;
        HEAP8[$122>>0] = $121;
        $124 = $14 & 63;
        $125 = $124 | 128;
        $126 = $125&255;
        $127 = HEAP32[$to_nxt>>2]|0;
        $128 = ((($127)) + 1|0);
        HEAP32[$to_nxt>>2] = $128;
        HEAP8[$127>>0] = $126;
        break;
       }
       $58 = $13;
       $59 = (($10) - ($58))|0;
       $60 = ($59|0)<(4);
       if ($60) {
        $$0 = 1;
        break L4;
       }
       $61 = ((($13)) + 2|0);
       $62 = HEAP16[$61>>1]|0;
       $63 = $62&65535;
       $64 = $63 & 64512;
       $65 = ($64|0)==(56320);
       if (!($65)) {
        $$0 = 2;
        break L4;
       }
       $66 = HEAP32[$to_nxt>>2]|0;
       $67 = $66;
       $68 = (($$pre1) - ($67))|0;
       $69 = ($68|0)<(4);
       if ($69) {
        $$0 = 1;
        break L4;
       }
       $70 = $14 & 960;
       $71 = $70 << 10;
       $72 = (($71) + 65536)|0;
       $73 = $14 << 10;
       $74 = $73 & 64512;
       $75 = $72 | $74;
       $76 = $63 & 1023;
       $77 = $75 | $76;
       $78 = ($77>>>0)>($Maxcode>>>0);
       if ($78) {
        $$0 = 2;
        break L4;
       }
       HEAP32[$frm_nxt>>2] = $61;
       $79 = $70 >>> 6;
       $80 = (($79) + 1)|0;
       $81 = $80 >>> 2;
       $82 = $81 | 240;
       $83 = $82&255;
       $84 = HEAP32[$to_nxt>>2]|0;
       $85 = ((($84)) + 1|0);
       HEAP32[$to_nxt>>2] = $85;
       HEAP8[$84>>0] = $83;
       $86 = $80 << 4;
       $87 = $86 & 48;
       $88 = $14 >>> 2;
       $89 = $88 & 15;
       $90 = $89 | $87;
       $91 = $90 | 128;
       $92 = $91&255;
       $93 = HEAP32[$to_nxt>>2]|0;
       $94 = ((($93)) + 1|0);
       HEAP32[$to_nxt>>2] = $94;
       HEAP8[$93>>0] = $92;
       $95 = $14 << 4;
       $96 = $95 & 48;
       $97 = $63 >>> 6;
       $98 = $97 & 15;
       $99 = $96 | $98;
       $100 = $99 | 128;
       $101 = $100&255;
       $102 = HEAP32[$to_nxt>>2]|0;
       $103 = ((($102)) + 1|0);
       HEAP32[$to_nxt>>2] = $103;
       HEAP8[$102>>0] = $101;
       $104 = $63 & 63;
       $105 = $104 | 128;
       $106 = $105&255;
       $107 = HEAP32[$to_nxt>>2]|0;
       $108 = ((($107)) + 1|0);
       HEAP32[$to_nxt>>2] = $108;
       HEAP8[$107>>0] = $106;
      }
     } while(0);
     $129 = HEAP32[$frm_nxt>>2]|0;
     $130 = ((($129)) + 2|0);
     HEAP32[$frm_nxt>>2] = $130;
     $131 = ($130>>>0)<($frm_end>>>0);
     if ($131) {
      $13 = $130;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 $17 = HEAP32[$frm_nxt>>2]|0;
 $18 = ($17>>>0)<($frm_end>>>0);
 $19 = ($$pre>>>0)<($to_end>>>0);
 $20 = $18 & $19;
 L9: do {
  if ($20) {
   $22 = $17;$27 = $$pre;
   while(1) {
    $21 = HEAP8[$22>>0]|0;
    $23 = $21&255;
    $24 = ($23>>>0)>($Maxcode>>>0);
    if ($24) {
     $$0 = 2;
     break L9;
    }
    $25 = ($21<<24>>24)>(-1);
    do {
     if ($25) {
      $26 = $21&255;
      HEAP16[$27>>1] = $26;
      $28 = ((($22)) + 1|0);
      HEAP32[$frm_nxt>>2] = $28;
     } else {
      $29 = ($21&255)<(194);
      if ($29) {
       $$0 = 2;
       break L9;
      }
      $30 = ($21&255)<(224);
      if ($30) {
       $31 = $22;
       $32 = (($$pre$phiZ2D) - ($31))|0;
       $33 = ($32|0)<(2);
       if ($33) {
        $$0 = 1;
        break L9;
       }
       $34 = ((($22)) + 1|0);
       $35 = HEAP8[$34>>0]|0;
       $36 = $35&255;
       $37 = $36 & 192;
       $38 = ($37|0)==(128);
       if (!($38)) {
        $$0 = 2;
        break L9;
       }
       $39 = $23 << 6;
       $40 = $39 & 1984;
       $41 = $36 & 63;
       $42 = $41 | $40;
       $43 = ($42>>>0)>($Maxcode>>>0);
       if ($43) {
        $$0 = 2;
        break L9;
       }
       $44 = $42&65535;
       HEAP16[$27>>1] = $44;
       $45 = ((($22)) + 2|0);
       HEAP32[$frm_nxt>>2] = $45;
       break;
      }
      $46 = ($21&255)<(240);
      if ($46) {
       $47 = $22;
       $48 = (($$pre$phiZ2D) - ($47))|0;
       $49 = ($48|0)<(3);
       if ($49) {
        $$0 = 1;
        break L9;
       }
       $50 = ((($22)) + 1|0);
       $51 = HEAP8[$50>>0]|0;
       $52 = ((($22)) + 2|0);
       $53 = HEAP8[$52>>0]|0;
       if ((($23|0) == 237)) {
        $56 = $51 & -32;
        $57 = ($56<<24>>24)==(-128);
        if (!($57)) {
         $$0 = 2;
         break L9;
        }
       } else if ((($23|0) == 224)) {
        $54 = $51 & -32;
        $55 = ($54<<24>>24)==(-96);
        if (!($55)) {
         $$0 = 2;
         break L9;
        }
       } else {
        $58 = $51 & -64;
        $59 = ($58<<24>>24)==(-128);
        if (!($59)) {
         $$0 = 2;
         break L9;
        }
       }
       $60 = $53&255;
       $61 = $60 & 192;
       $62 = ($61|0)==(128);
       if (!($62)) {
        $$0 = 2;
        break L9;
       }
       $63 = $23 << 12;
       $64 = $51&255;
       $65 = $64 << 6;
       $66 = $65 & 4032;
       $67 = $66 | $63;
       $68 = $60 & 63;
       $69 = $67 | $68;
       $70 = $69 & 65535;
       $71 = ($70>>>0)>($Maxcode>>>0);
       if ($71) {
        $$0 = 2;
        break L9;
       }
       $72 = $69&65535;
       HEAP16[$27>>1] = $72;
       $73 = ((($22)) + 3|0);
       HEAP32[$frm_nxt>>2] = $73;
       break;
      }
      $74 = ($21&255)<(245);
      if (!($74)) {
       $$0 = 2;
       break L9;
      }
      $75 = $22;
      $76 = (($$pre$phiZ2D) - ($75))|0;
      $77 = ($76|0)<(4);
      if ($77) {
       $$0 = 1;
       break L9;
      }
      $78 = ((($22)) + 1|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($22)) + 2|0);
      $81 = HEAP8[$80>>0]|0;
      $82 = ((($22)) + 3|0);
      $83 = HEAP8[$82>>0]|0;
      if ((($23|0) == 240)) {
       $$off = (($79) + 112)<<24>>24;
       $84 = ($$off&255)<(48);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      } else if ((($23|0) == 244)) {
       $85 = $79 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$0 = 2;
        break L9;
       }
      } else {
       $87 = $79 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$0 = 2;
        break L9;
       }
      }
      $89 = $81&255;
      $90 = $89 & 192;
      $91 = ($90|0)==(128);
      if (!($91)) {
       $$0 = 2;
       break L9;
      }
      $92 = $83&255;
      $93 = $92 & 192;
      $94 = ($93|0)==(128);
      if (!($94)) {
       $$0 = 2;
       break L9;
      }
      $95 = $27;
      $96 = (($16) - ($95))|0;
      $97 = ($96|0)<(4);
      if ($97) {
       $$0 = 1;
       break L9;
      }
      $98 = $23 & 7;
      $99 = $98 << 18;
      $100 = $79&255;
      $101 = $100 << 12;
      $102 = $101 & 258048;
      $103 = $102 | $99;
      $104 = $89 << 6;
      $105 = $104 & 4032;
      $106 = $103 | $105;
      $107 = $92 & 63;
      $108 = $106 | $107;
      $109 = ($108>>>0)>($Maxcode>>>0);
      if ($109) {
       $$0 = 2;
       break L9;
      }
      $110 = $98 << 2;
      $111 = $100 >>> 4;
      $112 = $111 & 3;
      $113 = $112 | $110;
      $114 = $113 << 6;
      $115 = (($114) + 16320)|0;
      $116 = $100 << 2;
      $117 = $116 & 60;
      $118 = $89 >>> 4;
      $119 = $118 & 3;
      $120 = $117 | $119;
      $121 = $120 | $115;
      $122 = $121 | 55296;
      $123 = $122&65535;
      HEAP16[$27>>1] = $123;
      $124 = $104 & 960;
      $125 = $107 | $124;
      $126 = $125 | 56320;
      $127 = $126&65535;
      $128 = ((($27)) + 2|0);
      HEAP32[$to_nxt>>2] = $128;
      HEAP16[$128>>1] = $127;
      $129 = HEAP32[$frm_nxt>>2]|0;
      $130 = ((($129)) + 4|0);
      HEAP32[$frm_nxt>>2] = $130;
     }
    } while(0);
    $131 = HEAP32[$to_nxt>>2]|0;
    $132 = ((($131)) + 2|0);
    HEAP32[$to_nxt>>2] = $132;
    $133 = HEAP32[$frm_nxt>>2]|0;
    $134 = ($133>>>0)<($frm_end>>>0);
    $135 = ($132>>>0)<($to_end>>>0);
    $136 = $134 & $135;
    if ($136) {
     $22 = $133;$27 = $132;
    } else {
     $$lcssa = $134;
     label = 39;
     break;
    }
   }
  } else {
   $$lcssa = $18;
   label = 39;
  }
 } while(0);
 if ((label|0) == 39) {
  $137 = $$lcssa&1;
  $$0 = $137;
 }
 return ($$0|0);
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$lcssa85 = 0, $$lcssa86 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$150 = 0, $frm_nxt$2 = 0, $nchar16_t$049 = 0, $nchar16_t$1 = 0, $or$cond = 0, $or$cond2 = 0, $or$cond48 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond48 = $15 & $14;
 L7: do {
  if ($or$cond48) {
   $frm_nxt$150 = $frm_nxt$1$ph;$nchar16_t$049 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$150>>0]|0;
    $17 = $16&255;
    $18 = ($17>>>0)>($Maxcode>>>0);
    if ($18) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $19 = ($16<<24>>24)>(-1);
    do {
     if ($19) {
      $20 = ((($frm_nxt$150)) + 1|0);
      $frm_nxt$2 = $20;$nchar16_t$1 = $nchar16_t$049;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$150;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$150)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$150)) + 2|0);
       $frm_nxt$2 = $36;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$150;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$150)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$150)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       if ((($17|0) == 237)) {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa84 = $38;
         label = 22;
         break L8;
        }
       } else if ((($17|0) == 224)) {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa85 = $38;
         label = 20;
         break L8;
        }
       } else {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa86 = $38;
         label = 24;
         break L8;
        }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$150)) + 3|0);
       $frm_nxt$2 = $69;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$150;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      $74 = (($mx) - ($nchar16_t$049))|0;
      $75 = ($74>>>0)<(2);
      $or$cond2 = $75 | $73;
      if ($or$cond2) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $76 = ((($frm_nxt$150)) + 1|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$150)) + 2|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($frm_nxt$150)) + 3|0);
      $81 = HEAP8[$80>>0]|0;
      if ((($17|0) == 240)) {
       $$off = (($77) + 112)<<24>>24;
       $82 = ($$off&255)<(48);
       if (!($82)) {
        $$lcssa82 = $71;
        label = 32;
        break L8;
       }
      } else if ((($17|0) == 244)) {
       $85 = $77 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
      } else {
       $89 = $77 & -64;
       $90 = ($89<<24>>24)==(-128);
       if (!($90)) {
        $$lcssa83 = $71;
        label = 36;
        break L8;
       }
      }
      $93 = $79&255;
      $94 = $93 & 192;
      $95 = ($94|0)==(128);
      if (!($95)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $96 = $81&255;
      $97 = $96 & 192;
      $98 = ($97|0)==(128);
      if (!($98)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $99 = $17 << 18;
      $100 = $99 & 1835008;
      $101 = $77&255;
      $102 = $101 << 12;
      $103 = $102 & 258048;
      $104 = $103 | $100;
      $105 = $93 << 6;
      $106 = $105 & 4032;
      $107 = $104 | $106;
      $108 = $96 & 63;
      $109 = $107 | $108;
      $110 = ($109>>>0)>($Maxcode>>>0);
      if ($110) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $111 = (($nchar16_t$049) + 1)|0;
      $112 = ((($frm_nxt$150)) + 4|0);
      $frm_nxt$2 = $112;$nchar16_t$1 = $111;
     }
    } while(0);
    $113 = (($nchar16_t$1) + 1)|0;
    $114 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $115 = ($113>>>0)<($mx>>>0);
    $or$cond = $115 & $114;
    if ($or$cond) {
     $frm_nxt$150 = $frm_nxt$2;$nchar16_t$049 = $113;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa85) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa84) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa86) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $83 = $frm;
    $84 = (($$lcssa82) - ($83))|0;
    $$0 = $84;
    break;
   }
   else if ((label|0) == 34) {
    $87 = $frm;
    $88 = (($$lcssa) - ($87))|0;
    $$0 = $88;
    break;
   }
   else if ((label|0) == 36) {
    $91 = $frm;
    $92 = (($$lcssa83) - ($91))|0;
    $$0 = $92;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $116 = $frm_nxt$1$lcssa;
  $117 = $frm;
  $118 = (($116) - ($117))|0;
  $$0 = $118;
 }
 return ($$0|0);
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $10 = ($$pre>>>0)<($frm_end>>>0);
   if ($10) {
    $12 = $$pre;
    while(1) {
     $11 = HEAP32[$12>>2]|0;
     $13 = $11 & -2048;
     $14 = ($13|0)==(55296);
     $15 = ($11>>>0)>($Maxcode>>>0);
     $or$cond = $15 | $14;
     if ($or$cond) {
      $$0 = 2;
      break L4;
     }
     $16 = ($11>>>0)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $11&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($11>>>0)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $11 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $11 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($11>>>0)<(65536);
       $38 = HEAP32[$to_nxt>>2]|0;
       $39 = $38;
       $40 = (($$pre1) - ($39))|0;
       if ($37) {
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $11 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $11 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $11 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       } else {
        $57 = ($40|0)<(4);
        if ($57) {
         $$0 = 1;
         break L4;
        }
        $58 = $11 >>> 18;
        $59 = $58 | 240;
        $60 = $59&255;
        $61 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $61;
        HEAP8[$38>>0] = $60;
        $62 = $11 >>> 12;
        $63 = $62 & 63;
        $64 = $63 | 128;
        $65 = $64&255;
        $66 = HEAP32[$to_nxt>>2]|0;
        $67 = ((($66)) + 1|0);
        HEAP32[$to_nxt>>2] = $67;
        HEAP8[$66>>0] = $65;
        $68 = $11 >>> 6;
        $69 = $68 & 63;
        $70 = $69 | 128;
        $71 = $70&255;
        $72 = HEAP32[$to_nxt>>2]|0;
        $73 = ((($72)) + 1|0);
        HEAP32[$to_nxt>>2] = $73;
        HEAP8[$72>>0] = $71;
        $74 = $11 & 63;
        $75 = $74 | 128;
        $76 = $75&255;
        $77 = HEAP32[$to_nxt>>2]|0;
        $78 = ((($77)) + 1|0);
        HEAP32[$to_nxt>>2] = $78;
        HEAP8[$77>>0] = $76;
        break;
       }
      }
     } while(0);
     $79 = HEAP32[$frm_nxt>>2]|0;
     $80 = ((($79)) + 4|0);
     HEAP32[$frm_nxt>>2] = $80;
     $81 = ($80>>>0)<($frm_end>>>0);
     if ($81) {
      $12 = $80;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = HEAP32[$frm_nxt>>2]|0;
 $17 = ($16>>>0)<($frm_end>>>0);
 $18 = ($$pre>>>0)<($to_end>>>0);
 $19 = $17 & $18;
 L9: do {
  if ($19) {
   $21 = $16;$25 = $$pre;
   while(1) {
    $20 = HEAP8[$21>>0]|0;
    $22 = $20&255;
    $23 = ($20<<24>>24)>(-1);
    do {
     if ($23) {
      $24 = ($22>>>0)>($Maxcode>>>0);
      if ($24) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $22;
      $26 = ((($21)) + 1|0);
      HEAP32[$frm_nxt>>2] = $26;
     } else {
      $27 = ($20&255)<(194);
      if ($27) {
       $$0 = 2;
       break L9;
      }
      $28 = ($20&255)<(224);
      if ($28) {
       $29 = $21;
       $30 = (($$pre$phiZ2D) - ($29))|0;
       $31 = ($30|0)<(2);
       if ($31) {
        $$0 = 1;
        break L9;
       }
       $32 = ((($21)) + 1|0);
       $33 = HEAP8[$32>>0]|0;
       $34 = $33&255;
       $35 = $34 & 192;
       $36 = ($35|0)==(128);
       if (!($36)) {
        $$0 = 2;
        break L9;
       }
       $37 = $22 << 6;
       $38 = $37 & 1984;
       $39 = $34 & 63;
       $40 = $39 | $38;
       $41 = ($40>>>0)>($Maxcode>>>0);
       if ($41) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $40;
       $42 = ((($21)) + 2|0);
       HEAP32[$frm_nxt>>2] = $42;
       break;
      }
      $43 = ($20&255)<(240);
      if ($43) {
       $44 = $21;
       $45 = (($$pre$phiZ2D) - ($44))|0;
       $46 = ($45|0)<(3);
       if ($46) {
        $$0 = 1;
        break L9;
       }
       $47 = ((($21)) + 1|0);
       $48 = HEAP8[$47>>0]|0;
       $49 = ((($21)) + 2|0);
       $50 = HEAP8[$49>>0]|0;
       if ((($22|0) == 224)) {
        $51 = $48 & -32;
        $52 = ($51<<24>>24)==(-96);
        if (!($52)) {
         $$0 = 2;
         break L9;
        }
       } else if ((($22|0) == 237)) {
        $53 = $48 & -32;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$0 = 2;
         break L9;
        }
       } else {
        $55 = $48 & -64;
        $56 = ($55<<24>>24)==(-128);
        if (!($56)) {
         $$0 = 2;
         break L9;
        }
       }
       $57 = $50&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $$0 = 2;
        break L9;
       }
       $60 = $22 << 12;
       $61 = $60 & 61440;
       $62 = $48&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $67;
       $69 = ((($21)) + 3|0);
       HEAP32[$frm_nxt>>2] = $69;
       break;
      }
      $70 = ($20&255)<(245);
      if (!($70)) {
       $$0 = 2;
       break L9;
      }
      $71 = $21;
      $72 = (($$pre$phiZ2D) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $$0 = 1;
       break L9;
      }
      $74 = ((($21)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($21)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($21)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      if ((($22|0) == 244)) {
       $81 = $75 & -16;
       $82 = ($81<<24>>24)==(-128);
       if (!($82)) {
        $$0 = 2;
        break L9;
       }
      } else if ((($22|0) == 240)) {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$0 = 2;
        break L9;
       }
      } else {
       $83 = $75 & -64;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      }
      $85 = $77&255;
      $86 = $85 & 192;
      $87 = ($86|0)==(128);
      if (!($87)) {
       $$0 = 2;
       break L9;
      }
      $88 = $79&255;
      $89 = $88 & 192;
      $90 = ($89|0)==(128);
      if (!($90)) {
       $$0 = 2;
       break L9;
      }
      $91 = $22 << 18;
      $92 = $91 & 1835008;
      $93 = $75&255;
      $94 = $93 << 12;
      $95 = $94 & 258048;
      $96 = $95 | $92;
      $97 = $85 << 6;
      $98 = $97 & 4032;
      $99 = $96 | $98;
      $100 = $88 & 63;
      $101 = $99 | $100;
      $102 = ($101>>>0)>($Maxcode>>>0);
      if ($102) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $101;
      $103 = ((($21)) + 4|0);
      HEAP32[$frm_nxt>>2] = $103;
     }
    } while(0);
    $104 = HEAP32[$to_nxt>>2]|0;
    $105 = ((($104)) + 4|0);
    HEAP32[$to_nxt>>2] = $105;
    $106 = HEAP32[$frm_nxt>>2]|0;
    $107 = ($106>>>0)<($frm_end>>>0);
    $108 = ($105>>>0)<($to_end>>>0);
    $109 = $107 & $108;
    if ($109) {
     $21 = $106;$25 = $105;
    } else {
     $$lcssa = $107;
     label = 38;
     break;
    }
   }
  } else {
   $$lcssa = $17;
   label = 38;
  }
 } while(0);
 if ((label|0) == 38) {
  $110 = $$lcssa&1;
  $$0 = $110;
 }
 return ($$0|0);
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa80 = 0, $$lcssa81 = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$148 = 0, $frm_nxt$2 = 0, $nchar32_t$047 = 0, $or$cond = 0, $or$cond46 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond46 = $15 & $14;
 L7: do {
  if ($or$cond46) {
   $frm_nxt$148 = $frm_nxt$1$ph;$nchar32_t$047 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$148>>0]|0;
    $17 = $16&255;
    $18 = ($16<<24>>24)>(-1);
    do {
     if ($18) {
      $19 = ($17>>>0)>($Maxcode>>>0);
      if ($19) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $20 = ((($frm_nxt$148)) + 1|0);
      $frm_nxt$2 = $20;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$148;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$148)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$148)) + 2|0);
       $frm_nxt$2 = $36;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$148;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$148)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$148)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       if ((($17|0) == 224)) {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa83 = $38;
         label = 20;
         break L8;
        }
       } else if ((($17|0) == 237)) {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa82 = $38;
         label = 22;
         break L8;
        }
       } else {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa84 = $38;
         label = 24;
         break L8;
        }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$148)) + 3|0);
       $frm_nxt$2 = $69;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$148;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $74 = ((($frm_nxt$148)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($frm_nxt$148)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$148)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      if ((($17|0) == 240)) {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$lcssa80 = $71;
        label = 32;
        break L8;
       }
      } else if ((($17|0) == 244)) {
       $83 = $75 & -16;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
      } else {
       $87 = $75 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$lcssa81 = $71;
        label = 36;
        break L8;
       }
      }
      $91 = $77&255;
      $92 = $91 & 192;
      $93 = ($92|0)==(128);
      if (!($93)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $94 = $79&255;
      $95 = $94 & 192;
      $96 = ($95|0)==(128);
      if (!($96)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $97 = $17 << 18;
      $98 = $97 & 1835008;
      $99 = $75&255;
      $100 = $99 << 12;
      $101 = $100 & 258048;
      $102 = $101 | $98;
      $103 = $91 << 6;
      $104 = $103 & 4032;
      $105 = $102 | $104;
      $106 = $94 & 63;
      $107 = $105 | $106;
      $108 = ($107>>>0)>($Maxcode>>>0);
      if ($108) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $109 = ((($frm_nxt$148)) + 4|0);
      $frm_nxt$2 = $109;
     }
    } while(0);
    $110 = (($nchar32_t$047) + 1)|0;
    $111 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $112 = ($110>>>0)<($mx>>>0);
    $or$cond = $112 & $111;
    if ($or$cond) {
     $frm_nxt$148 = $frm_nxt$2;$nchar32_t$047 = $110;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa83) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa82) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa84) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $81 = $frm;
    $82 = (($$lcssa80) - ($81))|0;
    $$0 = $82;
    break;
   }
   else if ((label|0) == 34) {
    $85 = $frm;
    $86 = (($$lcssa) - ($85))|0;
    $$0 = $86;
    break;
   }
   else if ((label|0) == 36) {
    $89 = $frm;
    $90 = (($$lcssa81) - ($89))|0;
    $$0 = $90;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $113 = $frm_nxt$1$lcssa;
  $114 = $frm;
  $115 = (($113) - ($114))|0;
  $$0 = $115;
 }
 return ($$0|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i1 = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if ($8) {
  $9 = ((($this)) + 16|0);
  $10 = HEAP32[$this>>2]|0;
  $11 = $10;
  $12 = (($5) - ($11))|0;
  $13 = $12 >> 2;
  $14 = (($13) + ($__n))|0;
  $15 = ($14>>>0)>(1073741823);
  if ($15) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $16 = (($4) - ($11))|0;
  $17 = $16 >> 2;
  $18 = ($17>>>0)<(536870911);
  if ($18) {
   $19 = $16 >> 1;
   $20 = ($19>>>0)<($14>>>0);
   $21 = $20 ? $14 : $19;
   $$0$i1 = $21;
  } else {
   $$0$i1 = 1073741823;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v,$$0$i1,$13,$9);
  $22 = ((($__v)) + 8|0);
  $$pre$i = HEAP32[$22>>2]|0;
  $23 = $__n << 2;
  _memset(($$pre$i|0),0,($23|0))|0;
  $scevgep = (($$pre$i) + ($__n<<2)|0);
  HEAP32[$22>>2] = $scevgep;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  HEAP32[$1>>2] = 0;
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 4|0);
  HEAP32[$0>>2] = $3;
  $4 = (($$0) + -1)|0;
  $5 = ($4|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$not$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 do {
  if ($2) {
   $8 = 0;
  } else {
   $3 = ((($__a)) + 112|0);
   $4 = HEAP8[$3>>0]|0;
   $$not$i$i = ($4<<24>>24)==(0);
   $5 = ($__cap>>>0)<(29);
   $or$cond$i$i = $5 & $$not$i$i;
   if ($or$cond$i$i) {
    HEAP8[$3>>0] = 1;
    $8 = $__a;
    break;
   } else {
    $6 = $__cap << 2;
    $7 = (__Znwj($6)|0);
    $8 = $7;
    break;
   }
  }
 } while(0);
 HEAP32[$this>>2] = $8;
 $9 = (($8) + ($__start<<2)|0);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($this)) + 4|0);
 HEAP32[$11>>2] = $9;
 $12 = (($8) + ($__cap<<2)|0);
 $13 = ((($this)) + 12|0);
 HEAP32[$13>>2] = $12;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $$pre$i$i$i = HEAP32[$2>>2]|0;
 $3 = ($$pre$i$i$i|0)==($1|0);
 if (!($3)) {
  $5 = $$pre$i$i$i;
  while(1) {
   $4 = ((($5)) + -4|0);
   $6 = ($4|0)==($1|0);
   if ($6) {
    $$lcssa = $4;
    break;
   } else {
    $5 = $4;
   }
  }
  HEAP32[$2>>2] = $$lcssa;
 }
 $7 = HEAP32[$this>>2]|0;
 $8 = ($7|0)==(0|0);
 do {
  if (!($8)) {
   $9 = ((($this)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==($7|0);
   if ($11) {
    $12 = ((($10)) + 112|0);
    HEAP8[$12>>0] = 0;
    break;
   } else {
    __ZdlPv($7);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ((($this)) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $3 & $$not$i$i;
 if ($or$cond$i$i) {
  $4 = ((($this)) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = ((($this)) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = ((($this)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
   }
   $10 = $4;
   $$0 = $10;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $13 = 0;$14 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   if ($12) {
    HEAP32[$__err>>2] = 4;
    $13 = -1;$14 = -1;
   } else {
    $13 = $7;$14 = $6;
   }
  }
 } while(0);
 tempRet0 = ($13);
 STACKTOP = sp;return ($14|0);
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(65535);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $18 = $6&65535;
    $$0 = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $18 = 0;$19 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $18 = 0;$19 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   if ($10) {
    HEAP32[$__err>>2] = 4;
    $11 = ($5|0)>(0);
    $12 = ($4>>>0)>(0);
    $13 = ($5|0)==(0);
    $14 = $13 & $12;
    $15 = $11 | $14;
    $16 = $15 ? -1 : 0;
    $17 = $15 ? 2147483647 : -2147483648;
    tempRet0 = ($17);
    STACKTOP = sp;return ($16|0);
   } else {
    $18 = $5;$19 = $4;
   }
  }
 } while(0);
 tempRet0 = ($18);
 STACKTOP = sp;return ($19|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 L1: do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   do {
    if ($10) {
     HEAP32[$__err>>2] = 4;
     $21 = ($5|0)>(0);
     $22 = ($4>>>0)>(0);
     $23 = ($5|0)==(0);
     $24 = $23 & $22;
     $25 = $21 | $24;
     if ($25) {
      $$0 = 2147483647;
      break L1;
     }
    } else {
     $11 = ($5|0)<(-1);
     $12 = ($4>>>0)<(2147483648);
     $13 = ($5|0)==(-1);
     $14 = $13 & $12;
     $15 = $11 | $14;
     if ($15) {
      HEAP32[$__err>>2] = 4;
      break;
     }
     $16 = ($5|0)>(0);
     $17 = ($4>>>0)>(2147483647);
     $18 = ($5|0)==(0);
     $19 = $18 & $17;
     $20 = $16 | $19;
     if ($20) {
      HEAP32[$__err>>2] = 4;
      $$0 = 2147483647;
      break L1;
     } else {
      $$0 = $4;
      break L1;
     }
    }
   } while(0);
   $$0 = -2147483648;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+-1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = HEAP32[$this>>2]|0;
  $4 = ((($3)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 127]($this);
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func) {
 $flag = $flag|0;
 $arg = $arg|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock((14416|0))|0);
 $0 = HEAP32[$flag>>2]|0;
 $1 = ($0|0)==(1);
 if ($1) {
  while(1) {
   (_pthread_cond_wait((14440|0),(14416|0))|0);
   $2 = HEAP32[$flag>>2]|0;
   $3 = ($2|0)==(1);
   if (!($3)) {
    break;
   }
  }
 }
 $4 = HEAP32[$flag>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  HEAP32[$flag>>2] = 1;
  (_pthread_mutex_unlock((14416|0))|0);
  FUNCTION_TABLE_vi[$func & 127]($arg);
  (_pthread_mutex_lock((14416|0))|0);
  HEAP32[$flag>>2] = -1;
  (_pthread_mutex_unlock((14416|0))|0);
  (_pthread_cond_broadcast((14440|0))|0);
 } else {
  (_pthread_mutex_unlock((14416|0))|0);
 }
 return;
}
function runPostSets() {

}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[((curr)>>0)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&7](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&31](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&3](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  return FUNCTION_TABLE_iiiiiid[index&3](a1|0,a2|0,a3|0,a4|0,a5|0,+a6)|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&127](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&63](a1|0,a2|0);
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&63](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_iiiiid(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
  return FUNCTION_TABLE_iiiiid[index&7](a1|0,a2|0,a3|0,a4|0,+a5)|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&63](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&3](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&3]();
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&7](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&7](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&15](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&7](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; abort(0);return 0; }
function b1(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(1);return 0; }
function b2(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(2); }
function b3(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; abort(3);return 0; }
function b4(p0) { p0 = p0|0; abort(4); }
function b5(p0,p1) { p0 = p0|0;p1 = p1|0; abort(5); }
function b6(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(6);return 0; }
function b7(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = +p4; abort(7);return 0; }
function b8(p0) { p0 = p0|0; abort(8);return 0; }
function b9(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(9); }
function b10() { ; abort(10); }
function ___cxa_pure_virtual__wrapper() { ; ___cxa_pure_virtual(); }
function b11(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; abort(11);return 0; }
function b12(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(12);return 0; }
function b13(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(13); }
function b14(p0,p1) { p0 = p0|0;p1 = p1|0; abort(14);return 0; }
function b15(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(15);return 0; }
function b16(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(16); }

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0];
var FUNCTION_TABLE_iiii = [b1,__ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_sn_write,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,_do_read,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1];
var FUNCTION_TABLE_viiiii = [b2,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
var FUNCTION_TABLE_iiiiiid = [b3,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b3];
var FUNCTION_TABLE_vi = [b4,__ZN6ikfast14IkSolutionListIdED2Ev,__ZN6ikfast14IkSolutionListIdED0Ev,__ZN6ikfast14IkSolutionListIdE5ClearEv,__ZN6ikfast10IkSolutionIdED2Ev,__ZN6ikfast10IkSolutionIdED0Ev,__ZNK6ikfast10IkSolutionIdE8ValidateEv,__ZN6ikfast14IkSolutionBaseIdED2Ev,__ZN6ikfast14IkSolutionBaseIdED0Ev,__ZN6ikfast18IkSolutionListBaseIdED2Ev,__ZN6ikfast18IkSolutionListBaseIdED0Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5__impD2Ev
,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,__ZNSt3__112__do_nothingEPv,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,_free,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_vii = [b5,__ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi
,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiii = [b6,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiiid = [b7,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b7,b7,b7];
var FUNCTION_TABLE_ii = [b8,__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv,__ZNK6ikfast10IkSolutionIdE7GetFreeEv,__ZNK6ikfast10IkSolutionIdE6GetDOFEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt13runtime_error4whatEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv
,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_viii = [b9,__ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd,__ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,__ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_];
var FUNCTION_TABLE_v = [b10,___cxa_pure_virtual__wrapper,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev];
var FUNCTION_TABLE_iiiiiiiii = [b11,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_iiiii = [b12,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b12,b12];
var FUNCTION_TABLE_viiiiii = [b13,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE];
var FUNCTION_TABLE_iii = [b14,__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw,__ZNKSt3__15ctypeIwE8do_widenEc,b14,b14,b14,b14];
var FUNCTION_TABLE_iiiiii = [b15,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15];
var FUNCTION_TABLE_viiii = [b16,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strlen: _strlen, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiii: dynCall_viiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }
    var request = Module['memoryInitializerRequest'];
    if (request) {
      // a network request has already been created, just use that
      if (request.response) {
        setTimeout(function() {
          applyMemoryInitializer(request.response);
        }, 0); // it's already here; but, apply it asynchronously
      } else {
        request.addEventListener('load', function() { // wait for it
          if (request.status !== 200 && request.status !== 0) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status);
          }
          if (!request.response || typeof request.response !== 'object' || !request.response.byteLength) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): ' + request.response);
          }
          applyMemoryInitializer(request.response);
        });
      }
    } else {
      // fetch it from the network ourselves
      Browser.asyncLoad(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {
    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = false;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



module.exports = Module;

