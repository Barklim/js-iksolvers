// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB;
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (typeof _sbrk !== 'undefined' && !_sbrk.called) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the a given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);

HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;

// === Body ===

var ASM_CONSTS = [];





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 14480;
  /* global initializers */ __ATINIT__.push();
  

/* memory initializer */ allocate([10,75,65,75,65,75,65,75,32,85,115,97,103,101,58,32,46,47,105,107,32,114,48,48,32,114,48,49,32,114,48,50,32,116,48,32,114,49,48,32,114,49,49,32,114,49,50,32,116,49,32,114,50,48,32,114,50,49,32,114,50,50,32,116,50,32,102,114,101,101,48,32,46,46,46,10,10,82,101,116,117,114,110,115,32,116,104,101,32,105,107,32,115,111,108,117,116,105,111,110,115,32,103,105,118,101,110,32,116,104,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,32,111,102,32,116,104,101,32,101,110,100,32,101,102,102,101,99,116,111,114,32,115,112,101,99,105,102,105,101,100,32,98,121,10,97,32,51,120,51,32,114,111,116,97,116,105,111,110,32,82,32,40,114,88,88,41,44,32,97,110,100,32,97,32,51,120,49,32,116,114,97,110,115,108,97,116,105,111,110,32,40,116,88,41,46,10,84,104,101,114,101,32,97,114,101,32,37,100,32,102,114,101,101,32,112,97,114,97,109,101,116,101,114,115,32,116,104,97,116,32,104,97,118,101,32,116,111,32,98,101,32,115,112,101,99,105,102,105,101,100,46,10,10,0,0,0,70,97,105,108,101,100,32,116,111,32,103,101,116,32,105,107,32,115,111,108,117,116,105,111,110,10,0,0,0,0,0,0,70,111,117,110,100,32,37,100,32,105,107,32,115,111,108,117,116,105,111,110,115,58,10,0,115,111,108,37,100,32,40,102,114,101,101,61,37,100,41,58,32,0,0,0,0,0,0,0,37,46,49,53,102,44,32,0,0,0,0,0,144,1,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,208,8,0,0,208,2,0,0,240,2,0,0,0,0,0,0,0,0,0,0,200,1,0,0,4,0,0,0,5,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,6,0,0,0,1,0,0,0,208,8,0,0,104,2,0,0,136,2,0,0,0,0,0,0,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,0,0,0,0,50,110,100,32,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,102,111,102,102,115,101,116,32,119,97,115,32,110,111,116,32,102,105,110,105,116,101,0,0,78,54,105,107,102,97,115,116,49,48,73,107,83,111,108,117,116,105,111,110,73,100,69,69,0,0,0,0,0,0,0,0,168,8,0,0,144,2,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,136,2,0,0,7,0,0,0,8,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,76,105,115,116,73,100,69,69,0,0,0,0,168,8,0,0,248,2,0,0,78,54,105,107,102,97,115,116,49,56,73,107,83,111,108,117,116,105,111,110,76,105,115,116,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,71,101,116,83,111,108,117,116,105,111,110,32,105,110,100,101,120,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,0,240,2,0,0,9,0,0,0,10,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,64,0,0,0,0,0,0,0,128,5,0,0,11,0,0,0,12,0,0,0,56,0,0,0,248,255,255,255,128,5,0,0,13,0,0,0,14,0,0,0,192,255,255,255,192,255,255,255,128,5,0,0,15,0,0,0,16,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,200,18,0,0,17,0,0,0,18,0,0,0,192,255,255,255,192,255,255,255,200,18,0,0,19,0,0,0,20,0,0,0,0,0,0,0,40,5,0,0,21,0,0,0,22,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,6,0,0,0,7,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,108,3,0,0,204,4,0,0,172,3,0,0,192,3,0,0,12,5,0,0,32,5,0,0,244,4,0,0,224,4,0,0,148,3,0,0,128,3,0,0,105,107,102,97,115,116,32,101,120,99,101,112,116,105,111,110,58,32,0,0,0,0,0,0,46,47,115,111,108,118,101,114,115,47,100,97,114,112,97,95,97,114,109,95,114,111,98,111,116,45,114,105,103,104,116,97,114,109,46,116,109,112,46,99,112,112,0,0,0,0,0,0,58,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,73,75,97,116,97,110,50,0,58,32,65,115,115,101,114,116,105,111,110,32,39,0,0,0,33,105,115,110,97,110,40,102,120,41,0,0,0,0,0,0,39,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,88,19,0,0,23,0,0,0,24,0,0,0,56,0,0,0,248,255,255,255,88,19,0,0,25,0,0,0,26,0,0,0,192,255,255,255,192,255,255,255,88,19,0,0,27,0,0,0,28,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,16,19,0,0,29,0,0,0,30,0,0,0,200,255,255,255,200,255,255,255,16,19,0,0,31,0,0,0,32,0,0,0,208,8,0,0,56,5,0,0,144,18,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,208,8,0,0,144,5,0,0,88,19,0,0,0,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,73,75,97,99,111,115,0,0,102,32,62,32,45,49,45,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,32,38,38,32,102,32,60,32,49,43,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,0,0,0,0,0,0,0,73,75,97,115,105,110,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,56,7,0,0,33,0,0,0,34,0,0,0,8,0,0,0,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,208,8,0,0,40,7,0,0,96,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,168,8,0,0,80,7,0,0,0,0,0,0,152,7,0,0,35,0,0,0,36,0,0,0,9,0,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,208,8,0,0,128,7,0,0,96,7,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,168,8,0,0,168,7,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,208,8,0,0,192,7,0,0,184,7,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,208,8,0,0,248,7,0,0,232,7,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,208,8,0,0,88,8,0,0,232,7,0,0,0,0,0,0,208,8,0,0,48,8,0,0,128,8,0,0,0,0,0,0,0,0,0,0,32,8,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,24,9,0,0,37,0,0,0,41,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,208,8,0,0,240,8,0,0,32,8,0,0,0,0,0,0,0,0,0,0,120,9,0,0,37,0,0,0,42,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,208,8,0,0,80,9,0,0,32,8,0,0,0,0,0,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,0,0,47,104,111,109,101,47,108,100,47,106,115,45,105,107,115,111,108,118,101,114,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,109,97,115,116,101,114,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,115,116,114,105,110,103,0,0,0,0,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,144,18,0,0,43,0,0,0,44,0,0,0,2,0,0,0,2,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,16,18,0,0,45,0,0,0,46,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,168,8,0,0,248,17,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,208,8,0,0,24,18,0,0,16,18,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,168,8,0,0,88,18,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,48,9,0,0,152,18,0,0,0,0,0,0,1,0,0,0,72,18,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,48,9,0,0,224,18,0,0,0,0,0,0,1,0,0,0,72,18,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,48,9,0,0,40,19,0,0,3,0,0,0,2,0,0,0,200,18,0,0,2,0,0,0,16,19,0,0,2,8,0,0,0,0,0,0,136,28,0,0,47,0,0,0,48,0,0,0,49,0,0,0,1,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,28,0,0,50,0,0,0,51,0,0,0,49,0,0,0,2,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,29,0,0,52,0,0,0,53,0,0,0,49,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,0,0,0,0,248,29,0,0,54,0,0,0,55,0,0,0,49,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,30,0,0,56,0,0,0,57,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,23,0,0,0,5,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,30,0,0,58,0,0,0,59,0,0,0,49,0,0,0,7,0,0,0,8,0,0,0,25,0,0,0,9,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,31,0,0,60,0,0,0,61,0,0,0,49,0,0,0,11,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,48,31,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,31,0,0,62,0,0,0,63,0,0,0,49,0,0,0,19,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,160,31,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,32,0,0,64,0,0,0,65,0,0,0,49,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,32,0,0,66,0,0,0,67,0,0,0,49,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,32,0,0,68,0,0,0,69,0,0,0,49,0,0,0,27,0,0,0,28,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,29,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,32,0,0,70,0,0,0,71,0,0,0,49,0,0,0,30,0,0,0,31,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,32,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,33,0,0,72,0,0,0,73,0,0,0,49,0,0,0,33,0,0,0,34,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,35,0,0,0,19,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,33,0,0,74,0,0,0,75,0,0,0,49,0,0,0,36,0,0,0,37,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,38,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,33,0,0,76,0,0,0,77,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,34,0,0,78,0,0,0,79,0,0,0,49,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,34,0,0,80,0,0,0,81,0,0,0,49,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,35,0,0,82,0,0,0,83,0,0,0,49,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,35,0,0,84,0,0,0,85,0,0,0,49,0,0,0,9,0,0,0,6,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,35,0,0,86,0,0,0,87,0,0,0,49,0,0,0,10,0,0,0,7,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,28,0,0,88,0,0,0,89,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,28,0,0,90,0,0,0,91,0,0,0,49,0,0,0,6,0,0,0,11,0,0,0,7,0,0,0,12,0,0,0,8,0,0,0,1,0,0,0,13,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,28,0,0,92,0,0,0,93,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,12,0,0,0,39,0,0,0,40,0,0,0,13,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,29,0,0,94,0,0,0,95,0,0,0,49,0,0,0,42,0,0,0,43,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,56,29,0,0,96,0,0,0,97,0,0,0,49,0,0,0,44,0,0,0,45,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,0,0,0,0,56,25,0,0,98,0,0,0,99,0,0,0,49,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,208,8,0,0,32,25,0,0,64,56,0,0,0,0,0,0,0,0,0,0,168,25,0,0,98,0,0,0,100,0,0,0,49,0,0,0,14,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,9,0,0,0,15,0,0,0,10,0,0,0,16,0,0,0,11,0,0,0,5,0,0,0,17,0,0,0,14,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,48,9,0,0,144,25,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,80,53,0,0,2,0,0,0,0,0,0,0,32,26,0,0,98,0,0,0,101,0,0,0,49,0,0,0,5,0,0,0,6,0,0,0,15,0,0,0,46,0,0,0,47,0,0,0,16,0,0,0,48,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,48,9,0,0,248,25,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,88,53,0,0,2,0,0,0,0,0,0,0,152,26,0,0,98,0,0,0,102,0,0,0,49,0,0,0,7,0,0,0,8,0,0,0,17,0,0,0,49,0,0,0,50,0,0,0,18,0,0,0,51,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,48,9,0,0,112,26,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,88,53,0,0,2,0,0,0,0,0,0,0,16,27,0,0,98,0,0,0,103,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,48,9,0,0,232,26,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,88,53,0,0,2,0,0,0,0,0,0,0,136,27,0,0,98,0,0,0,104,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,208,8,0,0,96,27,0,0,16,27,0,0,0,0,0,0,0,0,0,0,240,27,0,0,98,0,0,0,105,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,208,8,0,0,200,27,0,0,16,27,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,48,9,0,0,0,28,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,88,53,0,0,2,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,208,8,0,0,72,28,0,0,56,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,208,8,0,0,112,28,0,0,56,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,208,8,0,0,152,28,0,0,56,25,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,48,9,0,0,192,28,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,80,53,0,0,2,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,208,8,0,0,248,28,0,0,56,25,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,208,8,0,0,32,29,0,0,56,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,48,9,0,0,72,29,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,96,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,48,9,0,0,176,29,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,120,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,48,9,0,0,24,30,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,144,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,48,9,0,0,128,30,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,168,53,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,48,9,0,0,232,30,0,0,0,0,0,0,3,0,0,0,56,25,0,0,2,0,0,0,192,53,0,0,2,0,0,0,200,53,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,48,9,0,0,88,31,0,0,0,0,0,0,3,0,0,0,56,25,0,0,2,0,0,0,192,53,0,0,2,0,0,0,208,53,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,48,9,0,0,200,31,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,216,53,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,48,9,0,0,48,32,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,216,53,0,0,0,8,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,48,9,0,0,152,32,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,224,53,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,48,9,0,0,216,32,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,224,53,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,48,9,0,0,24,33,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,224,53,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,48,9,0,0,88,33,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,224,53,0,0,2,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,48,9,0,0,152,33,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,232,53,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,48,9,0,0,0,34,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,240,53,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,48,9,0,0,104,34,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,248,53,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,48,9,0,0,208,34,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,0,54,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,48,9,0,0,56,35,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,8,54,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,48,9,0,0,112,35,0,0,0,0,0,0,2,0,0,0,56,25,0,0,2,0,0,0,8,54,0,0,2,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,46,48,76,102,0,0,0,33,34,118,101,99,116,111,114,32,111,117,116,95,111,102,95,114,97,110,103,101,34,0,0,47,104,111,109,101,47,108,100,47,106,115,45,105,107,115,111,108,118,101,114,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,109,97,115,116,101,114,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,0,0,0,0,95,95,116,104,114,111,119,95,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,8,0,0,8,56,0,0,168,8,0,0,240,55,0,0,48,9,0,0,216,55,0,0,0,0,0,0,1,0,0,0,176,55,0,0,0,0,0,0,48,9,0,0,152,55,0,0,0,0,0,0,1,0,0,0,176,55,0,0,0,0,0,0,48,9,0,0,128,55,0,0,0,0,0,0,1,0,0,0,88,55,0,0,0,0,0,0,48,9,0,0,64,55,0,0,0,0,0,0,1,0,0,0,88,55,0,0,0,0,0,0,168,8,0,0,40,55,0,0,168,8,0,0,0,55,0,0,168,8,0,0,216,54,0,0,168,8,0,0,192,54,0,0,168,8,0,0,168,54,0,0,168,8,0,0,136,54,0,0,168,8,0,0,104,54,0,0,168,8,0,0,72,54,0,0,168,8,0,0,40,54,0,0,168,8,0,0,16,54,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,168,8,0,0,96,55,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,168,8,0,0,184,55,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,168,8,0,0,32,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10408);




/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_mutex_lock() {}

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }

  
  
  
  var FS=undefined;
  
  
  
  var SOCKFS=undefined;function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 7) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      // extra effort to support printf, even without a filesystem. very partial, very hackish
      var result = __formatString(format, varargs);
      var string = intArrayToString(result);
      if (string[string.length-1] === '\n') string = string.substr(0, string.length-1); // remove a final \n, as Module.print will do that
      Module.print(string);
      return result.length;
    }

  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  var _tan=Math_tan;


  var _asin=Math_asin;

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  var _fabs=Math_abs;


  var _sqrt=Math_sqrt;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _free() {
  }
  Module["_free"] = _free;function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

   
  Module["_i64Add"] = _i64Add;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  var _atan=Math_atan;

  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  var _BDtoIHigh=true;

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _pthread_cond_broadcast() {
      return 0;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_guard_release() {}

  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;


  var _cos=Math_cos;

  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);function _putchar(c) {
      // int putchar(int c);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/putchar.html
      return _fputc(c, HEAP32[((_stdout)>>2)]);
    }

  var _llvm_pow_f64=Math_pow;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  function ___errno_location() {
      return ___errno_state;
    }

  var _BItoD=true;

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  var _atan2=Math_atan2;

  function _pthread_mutex_unlock() {}

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiii": invoke_viiiii, "invoke_iiiiiid": invoke_iiiiiid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_iiiiid": invoke_iiiiid, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "_llvm_pow_f64": _llvm_pow_f64, "_uselocale": _uselocale, "___ctype_b_loc": ___ctype_b_loc, "___cxa_guard_acquire": ___cxa_guard_acquire, "_atan2": _atan2, "___setErrNo": ___setErrNo, "_vfprintf": _vfprintf, "___assert_fail": ___assert_fail, "___cxa_allocate_exception": ___cxa_allocate_exception, "_asin": _asin, "_acos": _acos, "___ctype_toupper_loc": ___ctype_toupper_loc, "_atan": _atan, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "_cos": _cos, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_sbrk": _sbrk, "_send": _send, "_catgets": _catgets, "_newlocale": _newlocale, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_fileno": _fileno, "___resumeException": ___resumeException, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_freelocale": _freelocale, "_pthread_getspecific": _pthread_getspecific, "__arraySum": __arraySum, "_putchar": _putchar, "___ctype_tolower_loc": ___ctype_tolower_loc, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "_printf": _printf, "_pthread_key_create": _pthread_key_create, "_calloc": _calloc, "_tan": _tan, "_write": _write, "__isLeapYear": __isLeapYear, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_sysconf": _sysconf, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_abort": _abort, "_catclose": _catclose, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_strerror": _strerror, "__formatString": __formatString, "_sqrt": _sqrt, "_catopen": _catopen, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "_stderr": _stderr };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var _stderr=env._stderr|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _uselocale=env._uselocale;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _atan2=env._atan2;
  var ___setErrNo=env.___setErrNo;
  var _vfprintf=env._vfprintf;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _asin=env._asin;
  var _acos=env._acos;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var _atan=env._atan;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var _cos=env._cos;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _sbrk=env._sbrk;
  var _send=env._send;
  var _catgets=env._catgets;
  var _newlocale=env._newlocale;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _fileno=env._fileno;
  var ___resumeException=env.___resumeException;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _freelocale=env._freelocale;
  var _pthread_getspecific=env._pthread_getspecific;
  var __arraySum=env.__arraySum;
  var _putchar=env._putchar;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _printf=env._printf;
  var _pthread_key_create=env._pthread_key_create;
  var _calloc=env._calloc;
  var _tan=env._tan;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _sysconf=env._sysconf;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _abort=env._abort;
  var _catclose=env._catclose;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _sqrt=env._sqrt;
  var _catopen=env._catopen;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$pfree,$solutions) {
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $solver = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0;
 $solver = sp;
 $0 = (__ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($solver,$eetrans,$eerot,$pfree,$solutions)|0);
 STACKTOP = sp;return ($0|0);
}
function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $$0 = 0, $$1 = 0, $$6 = 0, $$lcssa = 0, $$lcssa26 = 0, $$lcssa8 = 0, $0 = 0, $1 = 0, $10 = 0.0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0.0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0.0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $eerot = 0, $eetrans = 0, $i$013 = 0, $i1$010 = 0, $j$09 = 0, $phitmp = 0, $phitmp24 = 0, $solutions = 0, $solvalues = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, $vararg_ptr7 = 0, $vfree = 0;
 var $vsolfree = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $vararg_buffer8 = sp + 120|0;
 $vararg_buffer4 = sp + 112|0;
 $vararg_buffer1 = sp + 104|0;
 $vararg_buffer = sp + 96|0;
 $solutions = sp + 168|0;
 $vfree = sp + 152|0;
 $eerot = sp + 24|0;
 $eetrans = sp;
 $solvalues = sp + 140|0;
 $vsolfree = sp + 128|0;
 $0 = ($argc|0)==(14);
 if (!($0)) {
  HEAP32[$vararg_buffer>>2] = 1;
  (_printf((8|0),($vararg_buffer|0))|0);
  $$1 = 1;
  STACKTOP = sp;return ($$1|0);
 }
 __ZN6ikfast14IkSolutionListIdEC2Ev($solutions);
 __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($vfree,1);
 $1 = ((($argv)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (+_atof($2));
 HEAPF64[$eerot>>3] = $3;
 $4 = ((($argv)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (+_atof($5));
 $7 = ((($eerot)) + 8|0);
 HEAPF64[$7>>3] = $6;
 $8 = ((($argv)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (+_atof($9));
 $11 = ((($eerot)) + 16|0);
 HEAPF64[$11>>3] = $10;
 $12 = ((($argv)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (+_atof($13));
 HEAPF64[$eetrans>>3] = $14;
 $15 = ((($argv)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (+_atof($16));
 $18 = ((($eerot)) + 24|0);
 HEAPF64[$18>>3] = $17;
 $19 = ((($argv)) + 24|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (+_atof($20));
 $22 = ((($eerot)) + 32|0);
 HEAPF64[$22>>3] = $21;
 $23 = ((($argv)) + 28|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (+_atof($24));
 $26 = ((($eerot)) + 40|0);
 HEAPF64[$26>>3] = $25;
 $27 = ((($argv)) + 32|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (+_atof($28));
 $30 = ((($eetrans)) + 8|0);
 HEAPF64[$30>>3] = $29;
 $31 = ((($argv)) + 36|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (+_atof($32));
 $34 = ((($eerot)) + 48|0);
 HEAPF64[$34>>3] = $33;
 $35 = ((($argv)) + 40|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (+_atof($36));
 $38 = ((($eerot)) + 56|0);
 HEAPF64[$38>>3] = $37;
 $39 = ((($argv)) + 44|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (+_atof($40));
 $42 = ((($eerot)) + 64|0);
 HEAPF64[$42>>3] = $41;
 $43 = ((($argv)) + 48|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (+_atof($44));
 $46 = ((($eetrans)) + 16|0);
 HEAPF64[$46>>3] = $45;
 $47 = ((($vfree)) + 4|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = HEAP32[$vfree>>2]|0;
 $50 = ($48|0)==($49|0);
 if ($50) {
  $$lcssa8 = 0;
 } else {
  $56 = $49;$i$013 = 0;
  while(1) {
   $51 = (($i$013) + 13)|0;
   $52 = (($argv) + ($51<<2)|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (+_atof($53));
   $55 = (($56) + ($i$013<<3)|0);
   HEAPF64[$55>>3] = $54;
   $57 = (($i$013) + 1)|0;
   $58 = HEAP32[$47>>2]|0;
   $59 = HEAP32[$vfree>>2]|0;
   $60 = $58;
   $61 = $59;
   $62 = (($60) - ($61))|0;
   $63 = $62 >> 3;
   $64 = ($57>>>0)<($63>>>0);
   if ($64) {
    $56 = $59;$i$013 = $57;
   } else {
    $$lcssa = $59;$$lcssa26 = $63;
    break;
   }
  }
  $phitmp = ($$lcssa26|0)==(0);
  $phitmp24 = $phitmp ? 0 : $$lcssa;
  $$lcssa8 = $phitmp24;
 }
 $65 = (__Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$$lcssa8,$solutions)|0);
 if ($65) {
  $67 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
  HEAP32[$vararg_buffer1>>2] = $67;
  (_printf((312|0),($vararg_buffer1|0))|0);
  __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($solvalues,7);
  $68 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
  $69 = ($68|0)==(0);
  if (!($69)) {
   $70 = ((($vsolfree)) + 4|0);
   $71 = ((($solvalues)) + 4|0);
   $i1$010 = 0;
   while(1) {
    $72 = (__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($solutions,$i1$010)|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = ((($73)) + 16|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = (FUNCTION_TABLE_ii[$75 & 63]($72)|0);
    $77 = ((($76)) + 4|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = HEAP32[$76>>2]|0;
    $80 = $78;
    $81 = $79;
    $82 = (($80) - ($81))|0;
    $83 = $82 >> 2;
    HEAP32[$vararg_buffer4>>2] = $i1$010;
    $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
    HEAP32[$vararg_ptr7>>2] = $83;
    (_printf((336|0),($vararg_buffer4|0))|0);
    $84 = HEAP32[$72>>2]|0;
    $85 = ((($84)) + 16|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = (FUNCTION_TABLE_ii[$86 & 63]($72)|0);
    $88 = ((($87)) + 4|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = HEAP32[$87>>2]|0;
    $91 = $89;
    $92 = $90;
    $93 = (($91) - ($92))|0;
    $94 = $93 >> 2;
    __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($vsolfree,$94);
    $95 = HEAP32[$72>>2]|0;
    $96 = ((($95)) + 8|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = HEAP32[$solvalues>>2]|0;
    $99 = HEAP32[$70>>2]|0;
    $100 = HEAP32[$vsolfree>>2]|0;
    $101 = ($99|0)==($100|0);
    $$6 = $101 ? 0 : $100;
    FUNCTION_TABLE_viii[$97 & 3]($72,$98,$$6);
    $102 = HEAP32[$71>>2]|0;
    $103 = HEAP32[$solvalues>>2]|0;
    $104 = ($102|0)==($103|0);
    if (!($104)) {
     $106 = $103;$j$09 = 0;
     while(1) {
      $105 = (($106) + ($j$09<<3)|0);
      $107 = +HEAPF64[$105>>3];
      HEAPF64[$vararg_buffer8>>3] = $107;
      (_printf((360|0),($vararg_buffer8|0))|0);
      $108 = (($j$09) + 1)|0;
      $109 = HEAP32[$71>>2]|0;
      $110 = HEAP32[$solvalues>>2]|0;
      $111 = $109;
      $112 = $110;
      $113 = (($111) - ($112))|0;
      $114 = $113 >> 3;
      $115 = ($108>>>0)<($114>>>0);
      if ($115) {
       $106 = $110;$j$09 = $108;
      } else {
       break;
      }
     }
    }
    (_putchar(10)|0);
    __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($vsolfree);
    $116 = (($i1$010) + 1)|0;
    $117 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
    $118 = ($116>>>0)<($117>>>0);
    if ($118) {
     $i1$010 = $116;
    } else {
     break;
    }
   }
  }
  __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($solvalues);
  $$0 = 0;
 } else {
  $66 = HEAP32[_stderr>>2]|0;
  (_fwrite((280|0),26,1,($66|0))|0);
  $$0 = -1;
 }
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($vfree);
 __ZN6ikfast14IkSolutionListIdED2Ev($solutions);
 $$1 = $$0;
 STACKTOP = sp;return ($$1|0);
}
function __Z5IKcosd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_cos((+$f)));
 return (+$0);
}
function __Z5IKsind($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_sin((+$f)));
 return (+$0);
}
function __ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($this,$eetrans,$eerot,$pfree,$solutions) {
 $this = $this|0;
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $$ = 0, $$1887 = 0, $$1888 = 0, $$1889 = 0, $$1890 = 0, $$1891 = 0, $$1892 = 0, $$1893 = 0, $$1894 = 0, $$1895 = 0, $$lcssa = 0, $$lcssa2035 = 0, $$lcssa2038 = 0, $$lcssa2041 = 0, $$lcssa2044 = 0, $$lcssa2047 = 0, $$lcssa2050 = 0, $$lcssa2053 = 0, $$lcssa2056 = 0, $$lcssa2059 = 0;
 var $$v = 0.0, $$v48 = 0.0, $$v52 = 0.0, $$v54 = 0.0, $$v56 = 0.0, $$v59 = 0.0, $$v61 = 0.0, $$v63 = 0.0, $$v65 = 0.0, $$v68 = 0.0, $$v70 = 0.0, $$v74 = 0.0, $$v76 = 0.0, $$v80 = 0.0, $$v82 = 0.0, $$v84 = 0.0, $$v87 = 0.0, $$v89 = 0.0, $$v91 = 0.0, $$v93 = 0.0;
 var $$v96 = 0.0, $$v98 = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0.0, $10000 = 0.0, $10001 = 0.0, $10002 = 0.0, $10003 = 0.0, $10004 = 0, $10005 = 0.0, $10006 = 0.0, $10007 = 0.0, $10008 = 0.0, $10009 = 0.0, $1001 = 0.0, $10010 = 0.0, $10011 = 0.0;
 var $10012 = 0.0, $10013 = 0.0, $10014 = 0.0, $10015 = 0.0, $10016 = 0.0, $10017 = 0.0, $10018 = 0.0, $10019 = 0.0, $1002 = 0.0, $10020 = 0.0, $10021 = 0.0, $10022 = 0.0, $10023 = 0.0, $10024 = 0.0, $10025 = 0.0, $10026 = 0.0, $10027 = 0.0, $10028 = 0.0, $10029 = 0.0, $1003 = 0.0;
 var $10030 = 0.0, $10031 = 0.0, $10032 = 0.0, $10033 = 0, $10034 = 0.0, $10035 = 0, $10036 = 0.0, $10037 = 0.0, $10038 = 0.0, $10039 = 0.0, $1004 = 0.0, $10040 = 0.0, $10041 = 0.0, $10042 = 0.0, $10043 = 0.0, $10044 = 0.0, $10045 = 0.0, $10046 = 0.0, $10047 = 0.0, $10048 = 0.0;
 var $10049 = 0.0, $1005 = 0.0, $10050 = 0.0, $10051 = 0.0, $10052 = 0.0, $10053 = 0.0, $10054 = 0.0, $10055 = 0.0, $10056 = 0.0, $10057 = 0.0, $10058 = 0.0, $10059 = 0.0, $1006 = 0.0, $10060 = 0.0, $10061 = 0.0, $10062 = 0.0, $10063 = 0.0, $10064 = 0.0, $10065 = 0.0, $10066 = 0.0;
 var $10067 = 0.0, $10068 = 0.0, $10069 = 0.0, $1007 = 0.0, $10070 = 0.0, $10071 = 0.0, $10072 = 0.0, $10073 = 0.0, $10074 = 0.0, $10075 = 0.0, $10076 = 0.0, $10077 = 0.0, $10078 = 0.0, $10079 = 0.0, $1008 = 0, $10080 = 0.0, $10081 = 0.0, $10082 = 0.0, $10083 = 0.0, $10084 = 0.0;
 var $10085 = 0.0, $10086 = 0.0, $10087 = 0, $10088 = 0.0, $10089 = 0.0, $1009 = 0.0, $10090 = 0.0, $10091 = 0.0, $10092 = 0.0, $10093 = 0.0, $10094 = 0.0, $10095 = 0.0, $10096 = 0.0, $10097 = 0.0, $10098 = 0, $10099 = 0.0, $101 = 0, $1010 = 0.0, $10100 = 0, $10101 = 0.0;
 var $10102 = 0, $10103 = 0.0, $10104 = 0, $10105 = 0.0, $10106 = 0.0, $10107 = 0.0, $10108 = 0.0, $10109 = 0.0, $1011 = 0.0, $10110 = 0.0, $10111 = 0.0, $10112 = 0.0, $10113 = 0.0, $10114 = 0.0, $10115 = 0.0, $10116 = 0.0, $10117 = 0.0, $10118 = 0.0, $10119 = 0.0, $1012 = 0.0;
 var $10120 = 0.0, $10121 = 0.0, $10122 = 0.0, $10123 = 0.0, $10124 = 0.0, $10125 = 0, $10126 = 0.0, $10127 = 0.0, $10128 = 0.0, $10129 = 0.0, $1013 = 0.0, $10130 = 0.0, $10131 = 0, $10132 = 0.0, $10133 = 0, $10134 = 0.0, $10135 = 0.0, $10136 = 0.0, $10137 = 0.0, $10138 = 0.0;
 var $10139 = 0.0, $1014 = 0.0, $10140 = 0.0, $10141 = 0.0, $10142 = 0.0, $10143 = 0.0, $10144 = 0.0, $10145 = 0.0, $10146 = 0.0, $10147 = 0, $10148 = 0, $10149 = 0.0, $1015 = 0.0, $10150 = 0.0, $10151 = 0.0, $10152 = 0.0, $10153 = 0.0, $10154 = 0, $10155 = 0.0, $10156 = 0.0;
 var $10157 = 0.0, $10158 = 0, $10159 = 0, $1016 = 0.0, $10160 = 0, $10161 = 0, $10162 = 0, $10163 = 0, $10164 = 0, $10165 = 0, $10166 = 0, $10167 = 0, $10168 = 0, $10169 = 0, $1017 = 0.0, $10170 = 0, $10171 = 0, $10172 = 0, $10173 = 0, $10174 = 0;
 var $10175 = 0, $10176 = 0.0, $10177 = 0, $10178 = 0.0, $10179 = 0.0, $1018 = 0.0, $10180 = 0.0, $10181 = 0, $10182 = 0.0, $10183 = 0, $10184 = 0.0, $10185 = 0.0, $10186 = 0.0, $10187 = 0, $10188 = 0, $10189 = 0, $1019 = 0.0, $10190 = 0.0, $10191 = 0, $10192 = 0.0;
 var $10193 = 0, $10194 = 0.0, $10195 = 0.0, $10196 = 0.0, $10197 = 0.0, $10198 = 0.0, $10199 = 0.0, $102 = 0, $1020 = 0.0, $10200 = 0.0, $10201 = 0.0, $10202 = 0.0, $10203 = 0.0, $10204 = 0.0, $10205 = 0.0, $10206 = 0.0, $10207 = 0.0, $10208 = 0.0, $10209 = 0.0, $1021 = 0.0;
 var $10210 = 0.0, $10211 = 0.0, $10212 = 0.0, $10213 = 0.0, $10214 = 0.0, $10215 = 0.0, $10216 = 0.0, $10217 = 0.0, $10218 = 0.0, $10219 = 0.0, $1022 = 0.0, $10220 = 0.0, $10221 = 0.0, $10222 = 0.0, $10223 = 0.0, $10224 = 0.0, $10225 = 0.0, $10226 = 0.0, $10227 = 0.0, $10228 = 0.0;
 var $10229 = 0.0, $1023 = 0.0, $10230 = 0.0, $10231 = 0.0, $10232 = 0.0, $10233 = 0.0, $10234 = 0.0, $10235 = 0.0, $10236 = 0, $10237 = 0.0, $10238 = 0.0, $10239 = 0.0, $1024 = 0.0, $10240 = 0.0, $10241 = 0.0, $10242 = 0.0, $10243 = 0.0, $10244 = 0.0, $10245 = 0, $10246 = 0.0;
 var $10247 = 0, $10248 = 0.0, $10249 = 0, $1025 = 0.0, $10250 = 0, $10251 = 0.0, $10252 = 0.0, $10253 = 0.0, $10254 = 0.0, $10255 = 0.0, $10256 = 0.0, $10257 = 0.0, $10258 = 0.0, $10259 = 0.0, $1026 = 0.0, $10260 = 0.0, $10261 = 0.0, $10262 = 0.0, $10263 = 0.0, $10264 = 0.0;
 var $10265 = 0.0, $10266 = 0.0, $10267 = 0.0, $10268 = 0.0, $10269 = 0.0, $1027 = 0.0, $10270 = 0.0, $10271 = 0.0, $10272 = 0, $10273 = 0.0, $10274 = 0.0, $10275 = 0.0, $10276 = 0.0, $10277 = 0.0, $10278 = 0, $10279 = 0.0, $1028 = 0.0, $10280 = 0, $10281 = 0.0, $10282 = 0;
 var $10283 = 0.0, $10284 = 0.0, $10285 = 0.0, $10286 = 0.0, $10287 = 0.0, $10288 = 0.0, $10289 = 0.0, $1029 = 0.0, $10290 = 0.0, $10291 = 0.0, $10292 = 0.0, $10293 = 0.0, $10294 = 0.0, $10295 = 0.0, $10296 = 0, $10297 = 0, $10298 = 0.0, $10299 = 0.0, $103 = 0, $1030 = 0.0;
 var $10300 = 0.0, $10301 = 0.0, $10302 = 0.0, $10303 = 0, $10304 = 0.0, $10305 = 0.0, $10306 = 0.0, $10307 = 0, $10308 = 0, $10309 = 0, $1031 = 0.0, $10310 = 0, $10311 = 0, $10312 = 0, $10313 = 0, $10314 = 0, $10315 = 0, $10316 = 0, $10317 = 0, $10318 = 0;
 var $10319 = 0, $1032 = 0.0, $10320 = 0, $10321 = 0, $10322 = 0, $10323 = 0, $10324 = 0, $10325 = 0.0, $10326 = 0, $10327 = 0.0, $10328 = 0.0, $10329 = 0.0, $1033 = 0.0, $10330 = 0, $10331 = 0.0, $10332 = 0, $10333 = 0.0, $10334 = 0.0, $10335 = 0.0, $10336 = 0;
 var $10337 = 0, $10338 = 0, $10339 = 0.0, $1034 = 0.0, $10340 = 0, $10341 = 0.0, $10342 = 0, $10343 = 0.0, $10344 = 0.0, $10345 = 0.0, $10346 = 0.0, $10347 = 0.0, $10348 = 0.0, $10349 = 0.0, $1035 = 0.0, $10350 = 0.0, $10351 = 0.0, $10352 = 0.0, $10353 = 0.0, $10354 = 0.0;
 var $10355 = 0.0, $10356 = 0.0, $10357 = 0.0, $10358 = 0.0, $10359 = 0.0, $1036 = 0.0, $10360 = 0.0, $10361 = 0.0, $10362 = 0.0, $10363 = 0.0, $10364 = 0.0, $10365 = 0.0, $10366 = 0.0, $10367 = 0.0, $10368 = 0.0, $10369 = 0.0, $1037 = 0.0, $10370 = 0.0, $10371 = 0.0, $10372 = 0.0;
 var $10373 = 0.0, $10374 = 0.0, $10375 = 0.0, $10376 = 0.0, $10377 = 0.0, $10378 = 0.0, $10379 = 0.0, $1038 = 0.0, $10380 = 0.0, $10381 = 0.0, $10382 = 0.0, $10383 = 0.0, $10384 = 0.0, $10385 = 0, $10386 = 0.0, $10387 = 0.0, $10388 = 0.0, $10389 = 0.0, $1039 = 0.0, $10390 = 0.0;
 var $10391 = 0.0, $10392 = 0.0, $10393 = 0.0, $10394 = 0.0, $10395 = 0, $10396 = 0.0, $10397 = 0, $10398 = 0.0, $10399 = 0, $104 = 0, $1040 = 0, $10400 = 0, $10401 = 0.0, $10402 = 0.0, $10403 = 0.0, $10404 = 0.0, $10405 = 0.0, $10406 = 0.0, $10407 = 0, $10408 = 0.0;
 var $10409 = 0, $1041 = 0, $10410 = 0.0, $10411 = 0, $10412 = 0.0, $10413 = 0, $10414 = 0.0, $10415 = 0, $10416 = 0.0, $10417 = 0, $10418 = 0, $10419 = 0, $1042 = 0.0, $10420 = 0, $10421 = 0, $10422 = 0, $10423 = 0.0, $10424 = 0.0, $10425 = 0.0, $10426 = 0.0;
 var $10427 = 0, $10428 = 0, $10429 = 0.0, $1043 = 0.0, $10430 = 0, $10431 = 0.0, $10432 = 0.0, $10433 = 0, $10434 = 0.0, $10435 = 0.0, $10436 = 0, $10437 = 0, $10438 = 0, $10439 = 0, $1044 = 0.0, $10440 = 0, $10441 = 0, $10442 = 0, $10443 = 0.0, $10444 = 0;
 var $10445 = 0.0, $10446 = 0, $10447 = 0.0, $10448 = 0.0, $10449 = 0.0, $1045 = 0.0, $10450 = 0.0, $10451 = 0, $10452 = 0, $10453 = 0, $10454 = 0, $10455 = 0, $10456 = 0, $10457 = 0.0, $10458 = 0, $10459 = 0.0, $1046 = 0, $10460 = 0.0, $10461 = 0.0, $10462 = 0;
 var $10463 = 0.0, $10464 = 0, $10465 = 0.0, $10466 = 0.0, $10467 = 0.0, $10468 = 0, $10469 = 0, $1047 = 0.0, $10470 = 0, $10471 = 0.0, $10472 = 0.0, $10473 = 0.0, $10474 = 0.0, $10475 = 0.0, $10476 = 0.0, $10477 = 0.0, $10478 = 0.0, $10479 = 0.0, $1048 = 0.0, $10480 = 0.0;
 var $10481 = 0.0, $10482 = 0.0, $10483 = 0.0, $10484 = 0.0, $10485 = 0.0, $10486 = 0.0, $10487 = 0.0, $10488 = 0.0, $10489 = 0.0, $1049 = 0, $10490 = 0, $10491 = 0, $10492 = 0.0, $10493 = 0.0, $10494 = 0.0, $10495 = 0.0, $10496 = 0.0, $10497 = 0.0, $10498 = 0.0, $10499 = 0;
 var $105 = 0, $1050 = 0, $10500 = 0, $10501 = 0.0, $10502 = 0.0, $10503 = 0.0, $10504 = 0, $10505 = 0.0, $10506 = 0.0, $10507 = 0.0, $10508 = 0.0, $10509 = 0.0, $1051 = 0.0, $10510 = 0.0, $10511 = 0.0, $10512 = 0.0, $10513 = 0.0, $10514 = 0.0, $10515 = 0.0, $10516 = 0;
 var $10517 = 0.0, $10518 = 0.0, $10519 = 0.0, $1052 = 0.0, $10520 = 0.0, $10521 = 0.0, $10522 = 0, $10523 = 0.0, $10524 = 0.0, $10525 = 0.0, $10526 = 0.0, $10527 = 0.0, $10528 = 0.0, $10529 = 0.0, $1053 = 0.0, $10530 = 0.0, $10531 = 0.0, $10532 = 0.0, $10533 = 0.0, $10534 = 0.0;
 var $10535 = 0.0, $10536 = 0.0, $10537 = 0.0, $10538 = 0, $10539 = 0.0, $1054 = 0.0, $10540 = 0, $10541 = 0.0, $10542 = 0.0, $10543 = 0.0, $10544 = 0.0, $10545 = 0.0, $10546 = 0.0, $10547 = 0.0, $10548 = 0.0, $10549 = 0.0, $1055 = 0.0, $10550 = 0.0, $10551 = 0.0, $10552 = 0.0;
 var $10553 = 0.0, $10554 = 0.0, $10555 = 0.0, $10556 = 0.0, $10557 = 0.0, $10558 = 0.0, $10559 = 0.0, $1056 = 0.0, $10560 = 0.0, $10561 = 0.0, $10562 = 0.0, $10563 = 0.0, $10564 = 0.0, $10565 = 0.0, $10566 = 0.0, $10567 = 0.0, $10568 = 0.0, $10569 = 0.0, $1057 = 0.0, $10570 = 0.0;
 var $10571 = 0.0, $10572 = 0.0, $10573 = 0.0, $10574 = 0.0, $10575 = 0.0, $10576 = 0.0, $10577 = 0.0, $10578 = 0.0, $10579 = 0.0, $1058 = 0.0, $10580 = 0.0, $10581 = 0.0, $10582 = 0.0, $10583 = 0.0, $10584 = 0.0, $10585 = 0.0, $10586 = 0.0, $10587 = 0.0, $10588 = 0.0, $10589 = 0.0;
 var $1059 = 0.0, $10590 = 0.0, $10591 = 0.0, $10592 = 0.0, $10593 = 0.0, $10594 = 0.0, $10595 = 0.0, $10596 = 0.0, $10597 = 0.0, $10598 = 0.0, $10599 = 0.0, $106 = 0, $1060 = 0.0, $10600 = 0.0, $10601 = 0.0, $10602 = 0.0, $10603 = 0.0, $10604 = 0.0, $10605 = 0.0, $10606 = 0.0;
 var $10607 = 0.0, $10608 = 0.0, $10609 = 0.0, $1061 = 0.0, $10610 = 0.0, $10611 = 0.0, $10612 = 0.0, $10613 = 0.0, $10614 = 0.0, $10615 = 0.0, $10616 = 0.0, $10617 = 0.0, $10618 = 0.0, $10619 = 0.0, $1062 = 0.0, $10620 = 0.0, $10621 = 0.0, $10622 = 0.0, $10623 = 0.0, $10624 = 0.0;
 var $10625 = 0.0, $10626 = 0.0, $10627 = 0.0, $10628 = 0.0, $10629 = 0.0, $1063 = 0.0, $10630 = 0.0, $10631 = 0.0, $10632 = 0.0, $10633 = 0.0, $10634 = 0.0, $10635 = 0.0, $10636 = 0.0, $10637 = 0.0, $10638 = 0.0, $10639 = 0.0, $1064 = 0.0, $10640 = 0, $10641 = 0.0, $10642 = 0.0;
 var $10643 = 0.0, $10644 = 0.0, $10645 = 0.0, $10646 = 0.0, $10647 = 0.0, $10648 = 0.0, $10649 = 0.0, $1065 = 0.0, $10650 = 0, $10651 = 0.0, $10652 = 0, $10653 = 0.0, $10654 = 0, $10655 = 0.0, $10656 = 0, $10657 = 0.0, $10658 = 0, $10659 = 0.0, $1066 = 0, $10660 = 0.0;
 var $10661 = 0.0, $10662 = 0.0, $10663 = 0.0, $10664 = 0.0, $10665 = 0.0, $10666 = 0.0, $10667 = 0.0, $10668 = 0.0, $10669 = 0.0, $1067 = 0, $10670 = 0.0, $10671 = 0.0, $10672 = 0.0, $10673 = 0.0, $10674 = 0.0, $10675 = 0.0, $10676 = 0.0, $10677 = 0.0, $10678 = 0.0, $10679 = 0.0;
 var $1068 = 0.0, $10680 = 0, $10681 = 0, $10682 = 0.0, $10683 = 0.0, $10684 = 0.0, $10685 = 0.0, $10686 = 0.0, $10687 = 0.0, $10688 = 0.0, $10689 = 0.0, $1069 = 0.0, $10690 = 0.0, $10691 = 0.0, $10692 = 0, $10693 = 0.0, $10694 = 0.0, $10695 = 0.0, $10696 = 0.0, $10697 = 0.0;
 var $10698 = 0.0, $10699 = 0.0, $107 = 0, $1070 = 0.0, $10700 = 0.0, $10701 = 0.0, $10702 = 0.0, $10703 = 0.0, $10704 = 0.0, $10705 = 0.0, $10706 = 0, $10707 = 0.0, $10708 = 0.0, $10709 = 0.0, $1071 = 0.0, $10710 = 0.0, $10711 = 0.0, $10712 = 0, $10713 = 0.0, $10714 = 0.0;
 var $10715 = 0.0, $10716 = 0.0, $10717 = 0.0, $10718 = 0.0, $10719 = 0.0, $1072 = 0.0, $10720 = 0.0, $10721 = 0.0, $10722 = 0.0, $10723 = 0.0, $10724 = 0.0, $10725 = 0.0, $10726 = 0.0, $10727 = 0.0, $10728 = 0.0, $10729 = 0.0, $1073 = 0.0, $10730 = 0.0, $10731 = 0.0, $10732 = 0.0;
 var $10733 = 0.0, $10734 = 0.0, $10735 = 0.0, $10736 = 0.0, $10737 = 0, $10738 = 0.0, $10739 = 0, $1074 = 0.0, $10740 = 0.0, $10741 = 0.0, $10742 = 0.0, $10743 = 0.0, $10744 = 0.0, $10745 = 0.0, $10746 = 0.0, $10747 = 0.0, $10748 = 0.0, $10749 = 0.0, $1075 = 0.0, $10750 = 0.0;
 var $10751 = 0.0, $10752 = 0.0, $10753 = 0.0, $10754 = 0.0, $10755 = 0.0, $10756 = 0.0, $10757 = 0.0, $10758 = 0.0, $10759 = 0.0, $1076 = 0.0, $10760 = 0.0, $10761 = 0.0, $10762 = 0.0, $10763 = 0.0, $10764 = 0.0, $10765 = 0.0, $10766 = 0.0, $10767 = 0.0, $10768 = 0.0, $10769 = 0.0;
 var $1077 = 0.0, $10770 = 0.0, $10771 = 0.0, $10772 = 0.0, $10773 = 0.0, $10774 = 0.0, $10775 = 0.0, $10776 = 0.0, $10777 = 0.0, $10778 = 0.0, $10779 = 0.0, $1078 = 0.0, $10780 = 0.0, $10781 = 0.0, $10782 = 0.0, $10783 = 0.0, $10784 = 0.0, $10785 = 0.0, $10786 = 0.0, $10787 = 0.0;
 var $10788 = 0.0, $10789 = 0.0, $1079 = 0, $10790 = 0.0, $10791 = 0.0, $10792 = 0.0, $10793 = 0.0, $10794 = 0.0, $10795 = 0.0, $10796 = 0.0, $10797 = 0.0, $10798 = 0.0, $10799 = 0.0, $108 = 0, $1080 = 0.0, $10800 = 0.0, $10801 = 0.0, $10802 = 0.0, $10803 = 0.0, $10804 = 0.0;
 var $10805 = 0.0, $10806 = 0.0, $10807 = 0.0, $10808 = 0.0, $10809 = 0.0, $1081 = 0, $10810 = 0.0, $10811 = 0.0, $10812 = 0.0, $10813 = 0.0, $10814 = 0.0, $10815 = 0.0, $10816 = 0.0, $10817 = 0.0, $10818 = 0.0, $10819 = 0.0, $1082 = 0.0, $10820 = 0.0, $10821 = 0.0, $10822 = 0.0;
 var $10823 = 0.0, $10824 = 0.0, $10825 = 0.0, $10826 = 0.0, $10827 = 0.0, $10828 = 0.0, $10829 = 0.0, $1083 = 0.0, $10830 = 0.0, $10831 = 0.0, $10832 = 0.0, $10833 = 0.0, $10834 = 0.0, $10835 = 0.0, $10836 = 0.0, $10837 = 0.0, $10838 = 0.0, $10839 = 0, $1084 = 0, $10840 = 0.0;
 var $10841 = 0.0, $10842 = 0.0, $10843 = 0.0, $10844 = 0.0, $10845 = 0.0, $10846 = 0.0, $10847 = 0.0, $10848 = 0.0, $10849 = 0, $1085 = 0.0, $10850 = 0.0, $10851 = 0, $10852 = 0.0, $10853 = 0, $10854 = 0.0, $10855 = 0, $10856 = 0.0, $10857 = 0, $10858 = 0.0, $10859 = 0.0;
 var $1086 = 0, $10860 = 0.0, $10861 = 0.0, $10862 = 0.0, $10863 = 0.0, $10864 = 0.0, $10865 = 0.0, $10866 = 0.0, $10867 = 0.0, $10868 = 0.0, $10869 = 0.0, $1087 = 0.0, $10870 = 0.0, $10871 = 0.0, $10872 = 0.0, $10873 = 0.0, $10874 = 0.0, $10875 = 0.0, $10876 = 0.0, $10877 = 0.0;
 var $10878 = 0.0, $10879 = 0, $1088 = 0, $10880 = 0, $10881 = 0.0, $10882 = 0.0, $10883 = 0.0, $10884 = 0.0, $10885 = 0.0, $10886 = 0.0, $10887 = 0.0, $10888 = 0.0, $10889 = 0.0, $1089 = 0, $10890 = 0.0, $10891 = 0, $10892 = 0.0, $10893 = 0.0, $10894 = 0.0, $10895 = 0.0;
 var $10896 = 0.0, $10897 = 0.0, $10898 = 0.0, $10899 = 0.0, $109 = 0, $1090 = 0, $10900 = 0.0, $10901 = 0.0, $10902 = 0.0, $10903 = 0, $10904 = 0.0, $10905 = 0.0, $10906 = 0.0, $10907 = 0.0, $10908 = 0.0, $10909 = 0, $1091 = 0, $10910 = 0.0, $10911 = 0.0, $10912 = 0.0;
 var $10913 = 0.0, $10914 = 0.0, $10915 = 0.0, $10916 = 0.0, $10917 = 0.0, $10918 = 0.0, $10919 = 0.0, $1092 = 0, $10920 = 0.0, $10921 = 0.0, $10922 = 0.0, $10923 = 0.0, $10924 = 0.0, $10925 = 0.0, $10926 = 0.0, $10927 = 0.0, $10928 = 0.0, $10929 = 0.0, $1093 = 0, $10930 = 0.0;
 var $10931 = 0.0, $10932 = 0, $10933 = 0.0, $10934 = 0, $10935 = 0.0, $10936 = 0.0, $10937 = 0.0, $10938 = 0.0, $10939 = 0.0, $1094 = 0, $10940 = 0.0, $10941 = 0.0, $10942 = 0.0, $10943 = 0.0, $10944 = 0.0, $10945 = 0.0, $10946 = 0.0, $10947 = 0.0, $10948 = 0.0, $10949 = 0.0;
 var $1095 = 0, $10950 = 0.0, $10951 = 0.0, $10952 = 0.0, $10953 = 0.0, $10954 = 0.0, $10955 = 0.0, $10956 = 0.0, $10957 = 0.0, $10958 = 0.0, $10959 = 0.0, $1096 = 0, $10960 = 0.0, $10961 = 0.0, $10962 = 0.0, $10963 = 0.0, $10964 = 0.0, $10965 = 0.0, $10966 = 0.0, $10967 = 0.0;
 var $10968 = 0.0, $10969 = 0.0, $1097 = 0, $10970 = 0.0, $10971 = 0.0, $10972 = 0.0, $10973 = 0.0, $10974 = 0.0, $10975 = 0.0, $10976 = 0.0, $10977 = 0.0, $10978 = 0.0, $10979 = 0.0, $1098 = 0.0, $10980 = 0.0, $10981 = 0.0, $10982 = 0.0, $10983 = 0.0, $10984 = 0.0, $10985 = 0.0;
 var $10986 = 0.0, $10987 = 0.0, $10988 = 0.0, $10989 = 0.0, $1099 = 0, $10990 = 0.0, $10991 = 0.0, $10992 = 0.0, $10993 = 0.0, $10994 = 0.0, $10995 = 0.0, $10996 = 0.0, $10997 = 0.0, $10998 = 0.0, $10999 = 0.0, $11 = 0, $110 = 0, $1100 = 0.0, $11000 = 0.0, $11001 = 0.0;
 var $11002 = 0.0, $11003 = 0.0, $11004 = 0.0, $11005 = 0.0, $11006 = 0.0, $11007 = 0.0, $11008 = 0.0, $11009 = 0.0, $1101 = 0.0, $11010 = 0.0, $11011 = 0.0, $11012 = 0.0, $11013 = 0.0, $11014 = 0.0, $11015 = 0.0, $11016 = 0.0, $11017 = 0.0, $11018 = 0.0, $11019 = 0.0, $1102 = 0.0;
 var $11020 = 0.0, $11021 = 0.0, $11022 = 0.0, $11023 = 0.0, $11024 = 0.0, $11025 = 0.0, $11026 = 0.0, $11027 = 0.0, $11028 = 0.0, $11029 = 0.0, $1103 = 0, $11030 = 0.0, $11031 = 0.0, $11032 = 0.0, $11033 = 0.0, $11034 = 0, $11035 = 0.0, $11036 = 0.0, $11037 = 0.0, $11038 = 0.0;
 var $11039 = 0.0, $1104 = 0.0, $11040 = 0.0, $11041 = 0.0, $11042 = 0.0, $11043 = 0.0, $11044 = 0, $11045 = 0.0, $11046 = 0, $11047 = 0.0, $11048 = 0, $11049 = 0.0, $1105 = 0, $11050 = 0, $11051 = 0.0, $11052 = 0, $11053 = 0.0, $11054 = 0.0, $11055 = 0.0, $11056 = 0.0;
 var $11057 = 0.0, $11058 = 0.0, $11059 = 0.0, $1106 = 0.0, $11060 = 0.0, $11061 = 0.0, $11062 = 0.0, $11063 = 0.0, $11064 = 0.0, $11065 = 0.0, $11066 = 0.0, $11067 = 0.0, $11068 = 0.0, $11069 = 0.0, $1107 = 0.0, $11070 = 0.0, $11071 = 0.0, $11072 = 0.0, $11073 = 0.0, $11074 = 0.0;
 var $11075 = 0.0, $11076 = 0.0, $11077 = 0.0, $11078 = 0.0, $11079 = 0.0, $1108 = 0.0, $11080 = 0.0, $11081 = 0.0, $11082 = 0.0, $11083 = 0.0, $11084 = 0.0, $11085 = 0.0, $11086 = 0.0, $11087 = 0.0, $11088 = 0.0, $11089 = 0.0, $1109 = 0, $11090 = 0.0, $11091 = 0.0, $11092 = 0.0;
 var $11093 = 0.0, $11094 = 0.0, $11095 = 0.0, $11096 = 0.0, $11097 = 0.0, $11098 = 0.0, $11099 = 0, $111 = 0, $1110 = 0, $11100 = 0, $11101 = 0.0, $11102 = 0.0, $11103 = 0.0, $11104 = 0.0, $11105 = 0.0, $11106 = 0.0, $11107 = 0.0, $11108 = 0.0, $11109 = 0.0, $1111 = 0;
 var $11110 = 0.0, $11111 = 0.0, $11112 = 0.0, $11113 = 0.0, $11114 = 0.0, $11115 = 0.0, $11116 = 0.0, $11117 = 0.0, $11118 = 0.0, $11119 = 0.0, $1112 = 0.0, $11120 = 0.0, $11121 = 0.0, $11122 = 0.0, $11123 = 0.0, $11124 = 0.0, $11125 = 0.0, $11126 = 0.0, $11127 = 0.0, $11128 = 0.0;
 var $11129 = 0.0, $1113 = 0, $11130 = 0.0, $11131 = 0.0, $11132 = 0.0, $11133 = 0.0, $11134 = 0.0, $11135 = 0.0, $11136 = 0.0, $11137 = 0.0, $11138 = 0.0, $11139 = 0.0, $1114 = 0.0, $11140 = 0.0, $11141 = 0.0, $11142 = 0.0, $11143 = 0.0, $11144 = 0.0, $11145 = 0.0, $11146 = 0.0;
 var $11147 = 0.0, $11148 = 0.0, $11149 = 0.0, $1115 = 0, $11150 = 0.0, $11151 = 0.0, $11152 = 0.0, $11153 = 0.0, $11154 = 0.0, $11155 = 0.0, $11156 = 0.0, $11157 = 0.0, $11158 = 0.0, $11159 = 0.0, $1116 = 0.0, $11160 = 0.0, $11161 = 0.0, $11162 = 0.0, $11163 = 0.0, $11164 = 0.0;
 var $11165 = 0.0, $11166 = 0.0, $11167 = 0.0, $11168 = 0.0, $11169 = 0.0, $1117 = 0.0, $11170 = 0.0, $11171 = 0.0, $11172 = 0.0, $11173 = 0.0, $11174 = 0.0, $11175 = 0.0, $11176 = 0.0, $11177 = 0.0, $11178 = 0, $11179 = 0, $1118 = 0.0, $11180 = 0.0, $11181 = 0.0, $11182 = 0.0;
 var $11183 = 0.0, $11184 = 0.0, $11185 = 0.0, $11186 = 0.0, $11187 = 0, $11188 = 0.0, $11189 = 0, $1119 = 0.0, $11190 = 0.0, $11191 = 0.0, $11192 = 0.0, $11193 = 0.0, $11194 = 0.0, $11195 = 0.0, $11196 = 0.0, $11197 = 0.0, $11198 = 0.0, $11199 = 0.0, $112 = 0, $1120 = 0.0;
 var $11200 = 0.0, $11201 = 0.0, $11202 = 0.0, $11203 = 0.0, $11204 = 0.0, $11205 = 0.0, $11206 = 0.0, $11207 = 0.0, $11208 = 0.0, $11209 = 0.0, $1121 = 0.0, $11210 = 0.0, $11211 = 0.0, $11212 = 0.0, $11213 = 0.0, $11214 = 0.0, $11215 = 0.0, $11216 = 0.0, $11217 = 0.0, $11218 = 0.0;
 var $11219 = 0.0, $1122 = 0.0, $11220 = 0.0, $11221 = 0.0, $11222 = 0.0, $11223 = 0.0, $11224 = 0.0, $11225 = 0.0, $11226 = 0.0, $11227 = 0.0, $11228 = 0.0, $11229 = 0.0, $1123 = 0.0, $11230 = 0.0, $11231 = 0.0, $11232 = 0.0, $11233 = 0.0, $11234 = 0.0, $11235 = 0.0, $11236 = 0.0;
 var $11237 = 0.0, $11238 = 0.0, $11239 = 0.0, $1124 = 0.0, $11240 = 0.0, $11241 = 0.0, $11242 = 0.0, $11243 = 0.0, $11244 = 0.0, $11245 = 0.0, $11246 = 0.0, $11247 = 0.0, $11248 = 0.0, $11249 = 0.0, $1125 = 0.0, $11250 = 0.0, $11251 = 0.0, $11252 = 0.0, $11253 = 0.0, $11254 = 0.0;
 var $11255 = 0.0, $11256 = 0.0, $11257 = 0.0, $11258 = 0.0, $11259 = 0.0, $1126 = 0.0, $11260 = 0.0, $11261 = 0.0, $11262 = 0.0, $11263 = 0.0, $11264 = 0.0, $11265 = 0.0, $11266 = 0.0, $11267 = 0.0, $11268 = 0.0, $11269 = 0.0, $1127 = 0.0, $11270 = 0.0, $11271 = 0.0, $11272 = 0.0;
 var $11273 = 0.0, $11274 = 0.0, $11275 = 0.0, $11276 = 0.0, $11277 = 0.0, $11278 = 0.0, $11279 = 0.0, $1128 = 0.0, $11280 = 0.0, $11281 = 0.0, $11282 = 0.0, $11283 = 0.0, $11284 = 0.0, $11285 = 0.0, $11286 = 0.0, $11287 = 0.0, $11288 = 0.0, $11289 = 0.0, $1129 = 0.0, $11290 = 0.0;
 var $11291 = 0.0, $11292 = 0.0, $11293 = 0.0, $11294 = 0.0, $11295 = 0.0, $11296 = 0.0, $11297 = 0.0, $11298 = 0.0, $11299 = 0.0, $113 = 0, $1130 = 0.0, $11300 = 0.0, $11301 = 0.0, $11302 = 0.0, $11303 = 0.0, $11304 = 0.0, $11305 = 0.0, $11306 = 0.0, $11307 = 0.0, $11308 = 0.0;
 var $11309 = 0.0, $1131 = 0.0, $11310 = 0.0, $11311 = 0.0, $11312 = 0.0, $11313 = 0.0, $11314 = 0.0, $11315 = 0.0, $11316 = 0.0, $11317 = 0.0, $11318 = 0.0, $11319 = 0.0, $1132 = 0.0, $11320 = 0.0, $11321 = 0.0, $11322 = 0.0, $11323 = 0.0, $11324 = 0.0, $11325 = 0.0, $11326 = 0.0;
 var $11327 = 0.0, $11328 = 0.0, $11329 = 0.0, $1133 = 0.0, $11330 = 0.0, $11331 = 0.0, $11332 = 0.0, $11333 = 0.0, $11334 = 0.0, $11335 = 0.0, $11336 = 0.0, $11337 = 0.0, $11338 = 0.0, $11339 = 0.0, $1134 = 0.0, $11340 = 0.0, $11341 = 0.0, $11342 = 0.0, $11343 = 0.0, $11344 = 0.0;
 var $11345 = 0.0, $11346 = 0.0, $11347 = 0.0, $11348 = 0.0, $11349 = 0.0, $1135 = 0.0, $11350 = 0, $11351 = 0.0, $11352 = 0.0, $11353 = 0.0, $11354 = 0.0, $11355 = 0.0, $11356 = 0.0, $11357 = 0.0, $11358 = 0.0, $11359 = 0.0, $1136 = 0.0, $11360 = 0.0, $11361 = 0.0, $11362 = 0.0;
 var $11363 = 0.0, $11364 = 0.0, $11365 = 0, $11366 = 0.0, $11367 = 0, $11368 = 0.0, $11369 = 0, $1137 = 0.0, $11370 = 0.0, $11371 = 0, $11372 = 0.0, $11373 = 0, $11374 = 0.0, $11375 = 0.0, $11376 = 0.0, $11377 = 0.0, $11378 = 0.0, $11379 = 0.0, $1138 = 0.0, $11380 = 0.0;
 var $11381 = 0.0, $11382 = 0.0, $11383 = 0.0, $11384 = 0.0, $11385 = 0.0, $11386 = 0.0, $11387 = 0.0, $11388 = 0.0, $11389 = 0.0, $1139 = 0.0, $11390 = 0.0, $11391 = 0.0, $11392 = 0.0, $11393 = 0.0, $11394 = 0.0, $11395 = 0.0, $11396 = 0.0, $11397 = 0.0, $11398 = 0.0, $11399 = 0.0;
 var $114 = 0, $1140 = 0.0, $11400 = 0.0, $11401 = 0.0, $11402 = 0.0, $11403 = 0.0, $11404 = 0.0, $11405 = 0.0, $11406 = 0.0, $11407 = 0.0, $11408 = 0.0, $11409 = 0.0, $1141 = 0.0, $11410 = 0.0, $11411 = 0.0, $11412 = 0.0, $11413 = 0.0, $11414 = 0.0, $11415 = 0.0, $11416 = 0.0;
 var $11417 = 0.0, $11418 = 0.0, $11419 = 0.0, $1142 = 0.0, $11420 = 0.0, $11421 = 0.0, $11422 = 0.0, $11423 = 0.0, $11424 = 0.0, $11425 = 0.0, $11426 = 0.0, $11427 = 0.0, $11428 = 0.0, $11429 = 0.0, $1143 = 0.0, $11430 = 0.0, $11431 = 0, $11432 = 0, $11433 = 0.0, $11434 = 0.0;
 var $11435 = 0.0, $11436 = 0.0, $11437 = 0.0, $11438 = 0.0, $11439 = 0.0, $1144 = 0.0, $11440 = 0.0, $11441 = 0.0, $11442 = 0.0, $11443 = 0.0, $11444 = 0.0, $11445 = 0.0, $11446 = 0.0, $11447 = 0.0, $11448 = 0.0, $11449 = 0.0, $1145 = 0.0, $11450 = 0.0, $11451 = 0.0, $11452 = 0.0;
 var $11453 = 0.0, $11454 = 0.0, $11455 = 0.0, $11456 = 0.0, $11457 = 0.0, $11458 = 0.0, $11459 = 0.0, $1146 = 0.0, $11460 = 0.0, $11461 = 0.0, $11462 = 0.0, $11463 = 0.0, $11464 = 0.0, $11465 = 0.0, $11466 = 0.0, $11467 = 0.0, $11468 = 0.0, $11469 = 0.0, $1147 = 0.0, $11470 = 0.0;
 var $11471 = 0.0, $11472 = 0.0, $11473 = 0.0, $11474 = 0.0, $11475 = 0.0, $11476 = 0.0, $11477 = 0.0, $11478 = 0, $11479 = 0, $1148 = 0.0, $11480 = 0.0, $11481 = 0.0, $11482 = 0.0, $11483 = 0.0, $11484 = 0.0, $11485 = 0.0, $11486 = 0.0, $11487 = 0, $11488 = 0.0, $11489 = 0;
 var $1149 = 0.0, $11490 = 0.0, $11491 = 0.0, $11492 = 0.0, $11493 = 0.0, $11494 = 0.0, $11495 = 0.0, $11496 = 0.0, $11497 = 0.0, $11498 = 0.0, $11499 = 0.0, $115 = 0, $1150 = 0.0, $11500 = 0.0, $11501 = 0.0, $11502 = 0.0, $11503 = 0.0, $11504 = 0.0, $11505 = 0.0, $11506 = 0.0;
 var $11507 = 0.0, $11508 = 0.0, $11509 = 0.0, $1151 = 0.0, $11510 = 0.0, $11511 = 0.0, $11512 = 0.0, $11513 = 0.0, $11514 = 0.0, $11515 = 0.0, $11516 = 0.0, $11517 = 0.0, $11518 = 0.0, $11519 = 0.0, $1152 = 0.0, $11520 = 0.0, $11521 = 0.0, $11522 = 0.0, $11523 = 0.0, $11524 = 0.0;
 var $11525 = 0.0, $11526 = 0.0, $11527 = 0.0, $11528 = 0.0, $11529 = 0.0, $1153 = 0.0, $11530 = 0.0, $11531 = 0.0, $11532 = 0.0, $11533 = 0.0, $11534 = 0.0, $11535 = 0.0, $11536 = 0.0, $11537 = 0.0, $11538 = 0.0, $11539 = 0.0, $1154 = 0.0, $11540 = 0.0, $11541 = 0.0, $11542 = 0.0;
 var $11543 = 0.0, $11544 = 0.0, $11545 = 0.0, $11546 = 0.0, $11547 = 0.0, $11548 = 0.0, $11549 = 0.0, $1155 = 0.0, $11550 = 0.0, $11551 = 0.0, $11552 = 0.0, $11553 = 0.0, $11554 = 0.0, $11555 = 0.0, $11556 = 0.0, $11557 = 0.0, $11558 = 0.0, $11559 = 0.0, $1156 = 0.0, $11560 = 0.0;
 var $11561 = 0.0, $11562 = 0.0, $11563 = 0.0, $11564 = 0.0, $11565 = 0.0, $11566 = 0.0, $11567 = 0.0, $11568 = 0.0, $11569 = 0.0, $1157 = 0.0, $11570 = 0.0, $11571 = 0.0, $11572 = 0.0, $11573 = 0.0, $11574 = 0.0, $11575 = 0.0, $11576 = 0.0, $11577 = 0.0, $11578 = 0.0, $11579 = 0.0;
 var $1158 = 0, $11580 = 0.0, $11581 = 0.0, $11582 = 0.0, $11583 = 0.0, $11584 = 0.0, $11585 = 0.0, $11586 = 0.0, $11587 = 0.0, $11588 = 0.0, $11589 = 0.0, $1159 = 0.0, $11590 = 0.0, $11591 = 0.0, $11592 = 0.0, $11593 = 0.0, $11594 = 0.0, $11595 = 0.0, $11596 = 0.0, $11597 = 0.0;
 var $11598 = 0.0, $11599 = 0.0, $116 = 0, $1160 = 0.0, $11600 = 0.0, $11601 = 0.0, $11602 = 0.0, $11603 = 0.0, $11604 = 0.0, $11605 = 0.0, $11606 = 0.0, $11607 = 0.0, $11608 = 0.0, $11609 = 0.0, $1161 = 0.0, $11610 = 0.0, $11611 = 0.0, $11612 = 0.0, $11613 = 0.0, $11614 = 0.0;
 var $11615 = 0.0, $11616 = 0.0, $11617 = 0.0, $11618 = 0.0, $11619 = 0.0, $1162 = 0.0, $11620 = 0.0, $11621 = 0.0, $11622 = 0.0, $11623 = 0.0, $11624 = 0.0, $11625 = 0.0, $11626 = 0.0, $11627 = 0.0, $11628 = 0.0, $11629 = 0.0, $1163 = 0.0, $11630 = 0.0, $11631 = 0.0, $11632 = 0.0;
 var $11633 = 0.0, $11634 = 0.0, $11635 = 0.0, $11636 = 0.0, $11637 = 0.0, $11638 = 0.0, $11639 = 0.0, $1164 = 0.0, $11640 = 0.0, $11641 = 0.0, $11642 = 0.0, $11643 = 0.0, $11644 = 0.0, $11645 = 0.0, $11646 = 0.0, $11647 = 0.0, $11648 = 0.0, $11649 = 0.0, $1165 = 0.0, $11650 = 0;
 var $11651 = 0.0, $11652 = 0.0, $11653 = 0.0, $11654 = 0.0, $11655 = 0.0, $11656 = 0.0, $11657 = 0.0, $11658 = 0.0, $11659 = 0.0, $1166 = 0.0, $11660 = 0.0, $11661 = 0.0, $11662 = 0.0, $11663 = 0.0, $11664 = 0.0, $11665 = 0, $11666 = 0.0, $11667 = 0, $11668 = 0.0, $11669 = 0;
 var $1167 = 0.0, $11670 = 0.0, $11671 = 0, $11672 = 0.0, $11673 = 0, $11674 = 0.0, $11675 = 0.0, $11676 = 0.0, $11677 = 0.0, $11678 = 0.0, $11679 = 0.0, $1168 = 0.0, $11680 = 0.0, $11681 = 0.0, $11682 = 0.0, $11683 = 0.0, $11684 = 0.0, $11685 = 0.0, $11686 = 0.0, $11687 = 0.0;
 var $11688 = 0.0, $11689 = 0.0, $1169 = 0.0, $11690 = 0.0, $11691 = 0.0, $11692 = 0.0, $11693 = 0.0, $11694 = 0.0, $11695 = 0.0, $11696 = 0.0, $11697 = 0.0, $11698 = 0.0, $11699 = 0.0, $117 = 0, $1170 = 0.0, $11700 = 0.0, $11701 = 0.0, $11702 = 0.0, $11703 = 0.0, $11704 = 0.0;
 var $11705 = 0.0, $11706 = 0.0, $11707 = 0.0, $11708 = 0.0, $11709 = 0.0, $1171 = 0.0, $11710 = 0.0, $11711 = 0.0, $11712 = 0.0, $11713 = 0.0, $11714 = 0.0, $11715 = 0.0, $11716 = 0.0, $11717 = 0.0, $11718 = 0.0, $11719 = 0.0, $1172 = 0.0, $11720 = 0.0, $11721 = 0.0, $11722 = 0.0;
 var $11723 = 0.0, $11724 = 0.0, $11725 = 0, $11726 = 0, $11727 = 0.0, $11728 = 0.0, $11729 = 0.0, $1173 = 0.0, $11730 = 0.0, $11731 = 0.0, $11732 = 0.0, $11733 = 0.0, $11734 = 0.0, $11735 = 0.0, $11736 = 0.0, $11737 = 0.0, $11738 = 0.0, $11739 = 0.0, $1174 = 0.0, $11740 = 0.0;
 var $11741 = 0.0, $11742 = 0.0, $11743 = 0.0, $11744 = 0.0, $11745 = 0.0, $11746 = 0.0, $11747 = 0.0, $11748 = 0.0, $11749 = 0.0, $1175 = 0.0, $11750 = 0.0, $11751 = 0.0, $11752 = 0.0, $11753 = 0.0, $11754 = 0.0, $11755 = 0.0, $11756 = 0.0, $11757 = 0.0, $11758 = 0.0, $11759 = 0.0;
 var $1176 = 0.0, $11760 = 0.0, $11761 = 0, $11762 = 0, $11763 = 0.0, $11764 = 0.0, $11765 = 0.0, $11766 = 0.0, $11767 = 0.0, $11768 = 0.0, $11769 = 0.0, $1177 = 0.0, $11770 = 0, $11771 = 0.0, $11772 = 0, $11773 = 0.0, $11774 = 0.0, $11775 = 0.0, $11776 = 0.0, $11777 = 0.0;
 var $11778 = 0.0, $11779 = 0.0, $1178 = 0.0, $11780 = 0.0, $11781 = 0.0, $11782 = 0.0, $11783 = 0.0, $11784 = 0.0, $11785 = 0.0, $11786 = 0.0, $11787 = 0.0, $11788 = 0.0, $11789 = 0.0, $1179 = 0.0, $11790 = 0.0, $11791 = 0.0, $11792 = 0.0, $11793 = 0.0, $11794 = 0.0, $11795 = 0.0;
 var $11796 = 0.0, $11797 = 0.0, $11798 = 0.0, $11799 = 0.0, $118 = 0, $1180 = 0.0, $11800 = 0.0, $11801 = 0.0, $11802 = 0.0, $11803 = 0.0, $11804 = 0.0, $11805 = 0.0, $11806 = 0.0, $11807 = 0.0, $11808 = 0.0, $11809 = 0.0, $1181 = 0.0, $11810 = 0.0, $11811 = 0.0, $11812 = 0.0;
 var $11813 = 0.0, $11814 = 0.0, $11815 = 0.0, $11816 = 0.0, $11817 = 0.0, $11818 = 0.0, $11819 = 0.0, $1182 = 0, $11820 = 0.0, $11821 = 0.0, $11822 = 0.0, $11823 = 0.0, $11824 = 0.0, $11825 = 0.0, $11826 = 0.0, $11827 = 0.0, $11828 = 0.0, $11829 = 0.0, $1183 = 0.0, $11830 = 0.0;
 var $11831 = 0.0, $11832 = 0.0, $11833 = 0.0, $11834 = 0.0, $11835 = 0.0, $11836 = 0.0, $11837 = 0.0, $11838 = 0.0, $11839 = 0.0, $1184 = 0.0, $11840 = 0.0, $11841 = 0.0, $11842 = 0.0, $11843 = 0.0, $11844 = 0.0, $11845 = 0.0, $11846 = 0.0, $11847 = 0.0, $11848 = 0.0, $11849 = 0.0;
 var $1185 = 0.0, $11850 = 0.0, $11851 = 0.0, $11852 = 0.0, $11853 = 0.0, $11854 = 0.0, $11855 = 0.0, $11856 = 0.0, $11857 = 0.0, $11858 = 0.0, $11859 = 0.0, $1186 = 0.0, $11860 = 0.0, $11861 = 0.0, $11862 = 0.0, $11863 = 0.0, $11864 = 0.0, $11865 = 0.0, $11866 = 0.0, $11867 = 0.0;
 var $11868 = 0.0, $11869 = 0.0, $1187 = 0.0, $11870 = 0.0, $11871 = 0.0, $11872 = 0.0, $11873 = 0.0, $11874 = 0.0, $11875 = 0.0, $11876 = 0.0, $11877 = 0.0, $11878 = 0.0, $11879 = 0.0, $1188 = 0.0, $11880 = 0.0, $11881 = 0.0, $11882 = 0.0, $11883 = 0.0, $11884 = 0.0, $11885 = 0.0;
 var $11886 = 0.0, $11887 = 0.0, $11888 = 0.0, $11889 = 0.0, $1189 = 0.0, $11890 = 0.0, $11891 = 0.0, $11892 = 0.0, $11893 = 0.0, $11894 = 0.0, $11895 = 0.0, $11896 = 0.0, $11897 = 0.0, $11898 = 0.0, $11899 = 0.0, $119 = 0, $1190 = 0.0, $11900 = 0.0, $11901 = 0.0, $11902 = 0.0;
 var $11903 = 0.0, $11904 = 0.0, $11905 = 0.0, $11906 = 0.0, $11907 = 0.0, $11908 = 0.0, $11909 = 0.0, $1191 = 0.0, $11910 = 0.0, $11911 = 0.0, $11912 = 0.0, $11913 = 0.0, $11914 = 0.0, $11915 = 0.0, $11916 = 0.0, $11917 = 0.0, $11918 = 0.0, $11919 = 0.0, $1192 = 0.0, $11920 = 0.0;
 var $11921 = 0.0, $11922 = 0.0, $11923 = 0.0, $11924 = 0.0, $11925 = 0.0, $11926 = 0.0, $11927 = 0.0, $11928 = 0.0, $11929 = 0.0, $1193 = 0.0, $11930 = 0.0, $11931 = 0.0, $11932 = 0.0, $11933 = 0, $11934 = 0.0, $11935 = 0.0, $11936 = 0.0, $11937 = 0.0, $11938 = 0.0, $11939 = 0.0;
 var $1194 = 0.0, $11940 = 0.0, $11941 = 0.0, $11942 = 0.0, $11943 = 0.0, $11944 = 0.0, $11945 = 0.0, $11946 = 0.0, $11947 = 0.0, $11948 = 0, $11949 = 0.0, $1195 = 0.0, $11950 = 0, $11951 = 0.0, $11952 = 0, $11953 = 0.0, $11954 = 0, $11955 = 0.0, $11956 = 0, $11957 = 0;
 var $11958 = 0.0, $11959 = 0.0, $1196 = 0.0, $11960 = 0.0, $11961 = 0.0, $11962 = 0.0, $11963 = 0.0, $11964 = 0.0, $11965 = 0.0, $11966 = 0.0, $11967 = 0.0, $11968 = 0.0, $11969 = 0.0, $1197 = 0.0, $11970 = 0.0, $11971 = 0, $11972 = 0, $11973 = 0.0, $11974 = 0.0, $11975 = 0.0;
 var $11976 = 0.0, $11977 = 0, $11978 = 0.0, $11979 = 0.0, $1198 = 0.0, $11980 = 0, $11981 = 0, $11982 = 0.0, $11983 = 0.0, $11984 = 0.0, $11985 = 0, $11986 = 0, $11987 = 0.0, $11988 = 0.0, $11989 = 0.0, $1199 = 0.0, $11990 = 0.0, $11991 = 0.0, $11992 = 0.0, $11993 = 0.0;
 var $11994 = 0.0, $11995 = 0.0, $11996 = 0.0, $11997 = 0.0, $11998 = 0, $11999 = 0.0, $12 = 0, $120 = 0, $1200 = 0.0, $12000 = 0, $12001 = 0.0, $12002 = 0.0, $12003 = 0, $12004 = 0.0, $12005 = 0, $12006 = 0.0, $12007 = 0, $12008 = 0, $12009 = 0, $1201 = 0.0;
 var $12010 = 0, $12011 = 0, $12012 = 0, $12013 = 0, $12014 = 0, $12015 = 0, $12016 = 0, $12017 = 0.0, $12018 = 0, $12019 = 0.0, $1202 = 0.0, $12020 = 0.0, $12021 = 0.0, $12022 = 0, $12023 = 0.0, $12024 = 0, $12025 = 0.0, $12026 = 0.0, $12027 = 0.0, $12028 = 0;
 var $12029 = 0, $1203 = 0.0, $12030 = 0, $12031 = 0.0, $12032 = 0, $12033 = 0.0, $12034 = 0, $12035 = 0.0, $12036 = 0.0, $12037 = 0.0, $12038 = 0.0, $12039 = 0.0, $1204 = 0.0, $12040 = 0.0, $12041 = 0.0, $12042 = 0.0, $12043 = 0, $12044 = 0.0, $12045 = 0.0, $12046 = 0;
 var $12047 = 0.0, $12048 = 0.0, $12049 = 0.0, $1205 = 0.0, $12050 = 0.0, $12051 = 0.0, $12052 = 0.0, $12053 = 0.0, $12054 = 0.0, $12055 = 0.0, $12056 = 0.0, $12057 = 0, $12058 = 0.0, $12059 = 0.0, $1206 = 0.0, $12060 = 0, $12061 = 0.0, $12062 = 0.0, $12063 = 0.0, $12064 = 0.0;
 var $12065 = 0.0, $12066 = 0, $12067 = 0.0, $12068 = 0.0, $12069 = 0, $1207 = 0.0, $12070 = 0.0, $12071 = 0.0, $12072 = 0.0, $12073 = 0.0, $12074 = 0.0, $12075 = 0.0, $12076 = 0.0, $12077 = 0.0, $12078 = 0.0, $12079 = 0.0, $1208 = 0.0, $12080 = 0.0, $12081 = 0.0, $12082 = 0.0;
 var $12083 = 0.0, $12084 = 0.0, $12085 = 0.0, $12086 = 0.0, $12087 = 0.0, $12088 = 0.0, $12089 = 0, $1209 = 0.0, $12090 = 0.0, $12091 = 0.0, $12092 = 0.0, $12093 = 0.0, $12094 = 0.0, $12095 = 0.0, $12096 = 0.0, $12097 = 0, $12098 = 0.0, $12099 = 0, $121 = 0, $1210 = 0.0;
 var $12100 = 0.0, $12101 = 0.0, $12102 = 0.0, $12103 = 0.0, $12104 = 0.0, $12105 = 0.0, $12106 = 0.0, $12107 = 0.0, $12108 = 0, $12109 = 0.0, $1211 = 0.0, $12110 = 0.0, $12111 = 0.0, $12112 = 0.0, $12113 = 0.0, $12114 = 0, $12115 = 0.0, $12116 = 0.0, $12117 = 0.0, $12118 = 0.0;
 var $12119 = 0.0, $1212 = 0.0, $12120 = 0, $12121 = 0.0, $12122 = 0.0, $12123 = 0, $12124 = 0.0, $12125 = 0.0, $12126 = 0.0, $12127 = 0.0, $12128 = 0.0, $12129 = 0.0, $1213 = 0.0, $12130 = 0.0, $12131 = 0.0, $12132 = 0, $12133 = 0.0, $12134 = 0.0, $12135 = 0, $12136 = 0.0;
 var $12137 = 0.0, $12138 = 0.0, $12139 = 0.0, $1214 = 0.0, $12140 = 0.0, $12141 = 0.0, $12142 = 0.0, $12143 = 0.0, $12144 = 0.0, $12145 = 0.0, $12146 = 0.0, $12147 = 0.0, $12148 = 0.0, $12149 = 0.0, $1215 = 0.0, $12150 = 0, $12151 = 0.0, $12152 = 0.0, $12153 = 0.0, $12154 = 0.0;
 var $12155 = 0.0, $12156 = 0.0, $12157 = 0.0, $12158 = 0, $12159 = 0.0, $1216 = 0.0, $12160 = 0, $12161 = 0.0, $12162 = 0.0, $12163 = 0.0, $12164 = 0.0, $12165 = 0.0, $12166 = 0.0, $12167 = 0.0, $12168 = 0.0, $12169 = 0.0, $1217 = 0.0, $12170 = 0.0, $12171 = 0.0, $12172 = 0.0;
 var $12173 = 0.0, $12174 = 0.0, $12175 = 0.0, $12176 = 0.0, $12177 = 0, $12178 = 0.0, $12179 = 0.0, $1218 = 0.0, $12180 = 0.0, $12181 = 0.0, $12182 = 0.0, $12183 = 0.0, $12184 = 0.0, $12185 = 0.0, $12186 = 0.0, $12187 = 0.0, $12188 = 0.0, $12189 = 0.0, $1219 = 0.0, $12190 = 0.0;
 var $12191 = 0.0, $12192 = 0.0, $12193 = 0.0, $12194 = 0.0, $12195 = 0.0, $12196 = 0.0, $12197 = 0.0, $12198 = 0, $12199 = 0.0, $122 = 0, $1220 = 0.0, $12200 = 0, $12201 = 0.0, $12202 = 0.0, $12203 = 0.0, $12204 = 0.0, $12205 = 0.0, $12206 = 0.0, $12207 = 0.0, $12208 = 0.0;
 var $12209 = 0.0, $1221 = 0.0, $12210 = 0.0, $12211 = 0.0, $12212 = 0.0, $12213 = 0.0, $12214 = 0.0, $12215 = 0.0, $12216 = 0.0, $12217 = 0.0, $12218 = 0.0, $12219 = 0.0, $1222 = 0.0, $12220 = 0.0, $12221 = 0.0, $12222 = 0.0, $12223 = 0.0, $12224 = 0.0, $12225 = 0.0, $12226 = 0.0;
 var $12227 = 0.0, $12228 = 0.0, $12229 = 0.0, $1223 = 0.0, $12230 = 0.0, $12231 = 0.0, $12232 = 0.0, $12233 = 0.0, $12234 = 0, $12235 = 0.0, $12236 = 0.0, $12237 = 0.0, $12238 = 0.0, $12239 = 0.0, $1224 = 0.0, $12240 = 0, $12241 = 0.0, $12242 = 0, $12243 = 0.0, $12244 = 0.0;
 var $12245 = 0.0, $12246 = 0.0, $12247 = 0.0, $12248 = 0.0, $12249 = 0.0, $1225 = 0.0, $12250 = 0.0, $12251 = 0, $12252 = 0.0, $12253 = 0.0, $12254 = 0.0, $12255 = 0, $12256 = 0.0, $12257 = 0, $12258 = 0.0, $12259 = 0.0, $1226 = 0.0, $12260 = 0.0, $12261 = 0.0, $12262 = 0.0;
 var $12263 = 0, $12264 = 0.0, $12265 = 0.0, $12266 = 0.0, $12267 = 0.0, $12268 = 0.0, $12269 = 0.0, $1227 = 0.0, $12270 = 0, $12271 = 0, $12272 = 0.0, $12273 = 0.0, $12274 = 0.0, $12275 = 0.0, $12276 = 0.0, $12277 = 0.0, $12278 = 0.0, $12279 = 0.0, $1228 = 0.0, $12280 = 0.0;
 var $12281 = 0, $12282 = 0.0, $12283 = 0, $12284 = 0.0, $12285 = 0.0, $12286 = 0, $12287 = 0.0, $12288 = 0, $12289 = 0.0, $1229 = 0.0, $12290 = 0, $12291 = 0, $12292 = 0, $12293 = 0, $12294 = 0, $12295 = 0, $12296 = 0, $12297 = 0, $12298 = 0, $12299 = 0;
 var $123 = 0, $1230 = 0.0, $12300 = 0.0, $12301 = 0, $12302 = 0.0, $12303 = 0.0, $12304 = 0.0, $12305 = 0, $12306 = 0.0, $12307 = 0, $12308 = 0.0, $12309 = 0.0, $1231 = 0.0, $12310 = 0.0, $12311 = 0, $12312 = 0, $12313 = 0, $12314 = 0.0, $12315 = 0, $12316 = 0.0;
 var $12317 = 0, $12318 = 0.0, $12319 = 0.0, $1232 = 0.0, $12320 = 0.0, $12321 = 0.0, $12322 = 0.0, $12323 = 0.0, $12324 = 0.0, $12325 = 0.0, $12326 = 0.0, $12327 = 0.0, $12328 = 0.0, $12329 = 0.0, $1233 = 0.0, $12330 = 0.0, $12331 = 0.0, $12332 = 0.0, $12333 = 0.0, $12334 = 0.0;
 var $12335 = 0.0, $12336 = 0.0, $12337 = 0.0, $12338 = 0, $12339 = 0.0, $1234 = 0.0, $12340 = 0.0, $12341 = 0.0, $12342 = 0.0, $12343 = 0.0, $12344 = 0.0, $12345 = 0.0, $12346 = 0.0, $12347 = 0, $12348 = 0, $12349 = 0.0, $1235 = 0, $12350 = 0.0, $12351 = 0.0, $12352 = 0.0;
 var $12353 = 0.0, $12354 = 0.0, $12355 = 0.0, $12356 = 0.0, $12357 = 0.0, $12358 = 0.0, $12359 = 0.0, $1236 = 0.0, $12360 = 0.0, $12361 = 0.0, $12362 = 0.0, $12363 = 0.0, $12364 = 0.0, $12365 = 0.0, $12366 = 0.0, $12367 = 0, $12368 = 0, $12369 = 0.0, $1237 = 0.0, $12370 = 0.0;
 var $12371 = 0.0, $12372 = 0.0, $12373 = 0.0, $12374 = 0.0, $12375 = 0.0, $12376 = 0.0, $12377 = 0.0, $12378 = 0, $12379 = 0, $1238 = 0.0, $12380 = 0.0, $12381 = 0.0, $12382 = 0.0, $12383 = 0.0, $12384 = 0.0, $12385 = 0.0, $12386 = 0.0, $12387 = 0, $12388 = 0.0, $12389 = 0;
 var $1239 = 0.0, $12390 = 0.0, $12391 = 0.0, $12392 = 0.0, $12393 = 0.0, $12394 = 0.0, $12395 = 0.0, $12396 = 0.0, $12397 = 0.0, $12398 = 0.0, $12399 = 0.0, $124 = 0, $1240 = 0.0, $12400 = 0.0, $12401 = 0.0, $12402 = 0.0, $12403 = 0.0, $12404 = 0.0, $12405 = 0.0, $12406 = 0.0;
 var $12407 = 0.0, $12408 = 0.0, $12409 = 0.0, $1241 = 0.0, $12410 = 0.0, $12411 = 0.0, $12412 = 0.0, $12413 = 0.0, $12414 = 0.0, $12415 = 0.0, $12416 = 0.0, $12417 = 0.0, $12418 = 0.0, $12419 = 0.0, $1242 = 0.0, $12420 = 0.0, $12421 = 0.0, $12422 = 0.0, $12423 = 0.0, $12424 = 0;
 var $12425 = 0.0, $12426 = 0.0, $12427 = 0.0, $12428 = 0.0, $12429 = 0.0, $1243 = 0.0, $12430 = 0.0, $12431 = 0.0, $12432 = 0.0, $12433 = 0.0, $12434 = 0.0, $12435 = 0, $12436 = 0.0, $12437 = 0, $12438 = 0.0, $12439 = 0.0, $1244 = 0.0, $12440 = 0.0, $12441 = 0.0, $12442 = 0.0;
 var $12443 = 0.0, $12444 = 0.0, $12445 = 0.0, $12446 = 0.0, $12447 = 0.0, $12448 = 0.0, $12449 = 0.0, $1245 = 0.0, $12450 = 0.0, $12451 = 0.0, $12452 = 0.0, $12453 = 0.0, $12454 = 0, $12455 = 0, $12456 = 0.0, $12457 = 0.0, $12458 = 0.0, $12459 = 0.0, $1246 = 0.0, $12460 = 0.0;
 var $12461 = 0.0, $12462 = 0.0, $12463 = 0.0, $12464 = 0.0, $12465 = 0.0, $12466 = 0, $12467 = 0, $12468 = 0.0, $12469 = 0.0, $1247 = 0.0, $12470 = 0.0, $12471 = 0.0, $12472 = 0.0, $12473 = 0.0, $12474 = 0.0, $12475 = 0, $12476 = 0.0, $12477 = 0, $12478 = 0.0, $12479 = 0.0;
 var $1248 = 0.0, $12480 = 0.0, $12481 = 0.0, $12482 = 0.0, $12483 = 0.0, $12484 = 0.0, $12485 = 0.0, $12486 = 0.0, $12487 = 0.0, $12488 = 0.0, $12489 = 0.0, $1249 = 0.0, $12490 = 0.0, $12491 = 0.0, $12492 = 0.0, $12493 = 0.0, $12494 = 0.0, $12495 = 0.0, $12496 = 0.0, $12497 = 0.0;
 var $12498 = 0.0, $12499 = 0.0, $125 = 0, $1250 = 0.0, $12500 = 0.0, $12501 = 0.0, $12502 = 0.0, $12503 = 0.0, $12504 = 0.0, $12505 = 0.0, $12506 = 0.0, $12507 = 0.0, $12508 = 0.0, $12509 = 0.0, $1251 = 0.0, $12510 = 0.0, $12511 = 0, $12512 = 0.0, $12513 = 0.0, $12514 = 0.0;
 var $12515 = 0.0, $12516 = 0.0, $12517 = 0.0, $12518 = 0.0, $12519 = 0.0, $1252 = 0.0, $12520 = 0.0, $12521 = 0.0, $12522 = 0, $12523 = 0.0, $12524 = 0, $12525 = 0.0, $12526 = 0.0, $12527 = 0.0, $12528 = 0.0, $12529 = 0.0, $1253 = 0.0, $12530 = 0.0, $12531 = 0.0, $12532 = 0.0;
 var $12533 = 0.0, $12534 = 0.0, $12535 = 0.0, $12536 = 0.0, $12537 = 0.0, $12538 = 0.0, $12539 = 0.0, $1254 = 0.0, $12540 = 0.0, $12541 = 0.0, $12542 = 0, $12543 = 0.0, $12544 = 0.0, $12545 = 0.0, $12546 = 0.0, $12547 = 0.0, $12548 = 0.0, $12549 = 0.0, $1255 = 0.0, $12550 = 0;
 var $12551 = 0.0, $12552 = 0, $12553 = 0.0, $12554 = 0, $12555 = 0.0, $12556 = 0.0, $12557 = 0.0, $12558 = 0.0, $12559 = 0.0, $1256 = 0.0, $12560 = 0.0, $12561 = 0.0, $12562 = 0.0, $12563 = 0.0, $12564 = 0.0, $12565 = 0.0, $12566 = 0.0, $12567 = 0.0, $12568 = 0.0, $12569 = 0.0;
 var $1257 = 0.0, $12570 = 0.0, $12571 = 0, $12572 = 0.0, $12573 = 0.0, $12574 = 0.0, $12575 = 0.0, $12576 = 0.0, $12577 = 0.0, $12578 = 0.0, $12579 = 0.0, $1258 = 0.0, $12580 = 0.0, $12581 = 0.0, $12582 = 0.0, $12583 = 0.0, $12584 = 0.0, $12585 = 0.0, $12586 = 0.0, $12587 = 0.0;
 var $12588 = 0.0, $12589 = 0.0, $1259 = 0.0, $12590 = 0.0, $12591 = 0.0, $12592 = 0, $12593 = 0.0, $12594 = 0, $12595 = 0.0, $12596 = 0.0, $12597 = 0.0, $12598 = 0.0, $12599 = 0.0, $126 = 0, $1260 = 0.0, $12600 = 0.0, $12601 = 0.0, $12602 = 0.0, $12603 = 0.0, $12604 = 0.0;
 var $12605 = 0.0, $12606 = 0.0, $12607 = 0.0, $12608 = 0.0, $12609 = 0.0, $1261 = 0.0, $12610 = 0.0, $12611 = 0.0, $12612 = 0.0, $12613 = 0.0, $12614 = 0.0, $12615 = 0.0, $12616 = 0.0, $12617 = 0.0, $12618 = 0.0, $12619 = 0.0, $1262 = 0.0, $12620 = 0.0, $12621 = 0.0, $12622 = 0.0;
 var $12623 = 0.0, $12624 = 0.0, $12625 = 0.0, $12626 = 0.0, $12627 = 0.0, $12628 = 0, $12629 = 0.0, $1263 = 0.0, $12630 = 0.0, $12631 = 0.0, $12632 = 0.0, $12633 = 0.0, $12634 = 0, $12635 = 0.0, $12636 = 0, $12637 = 0.0, $12638 = 0.0, $12639 = 0.0, $1264 = 0.0, $12640 = 0.0;
 var $12641 = 0.0, $12642 = 0.0, $12643 = 0.0, $12644 = 0.0, $12645 = 0, $12646 = 0.0, $12647 = 0.0, $12648 = 0.0, $12649 = 0, $1265 = 0.0, $12650 = 0.0, $12651 = 0, $12652 = 0.0, $12653 = 0.0, $12654 = 0.0, $12655 = 0.0, $12656 = 0.0, $12657 = 0, $12658 = 0.0, $12659 = 0.0;
 var $1266 = 0.0, $12660 = 0.0, $12661 = 0.0, $12662 = 0.0, $12663 = 0.0, $12664 = 0, $12665 = 0, $12666 = 0.0, $12667 = 0.0, $12668 = 0.0, $12669 = 0.0, $1267 = 0.0, $12670 = 0.0, $12671 = 0.0, $12672 = 0.0, $12673 = 0.0, $12674 = 0.0, $12675 = 0, $12676 = 0.0, $12677 = 0;
 var $12678 = 0.0, $12679 = 0.0, $1268 = 0.0, $12680 = 0, $12681 = 0.0, $12682 = 0, $12683 = 0.0, $12684 = 0, $12685 = 0, $12686 = 0, $12687 = 0, $12688 = 0, $12689 = 0, $1269 = 0, $12690 = 0, $12691 = 0, $12692 = 0, $12693 = 0, $12694 = 0.0, $12695 = 0;
 var $12696 = 0.0, $12697 = 0.0, $12698 = 0.0, $12699 = 0, $127 = 0, $1270 = 0.0, $12700 = 0.0, $12701 = 0, $12702 = 0.0, $12703 = 0.0, $12704 = 0.0, $12705 = 0, $12706 = 0, $12707 = 0, $12708 = 0.0, $12709 = 0, $1271 = 0.0, $12710 = 0.0, $12711 = 0, $12712 = 0.0;
 var $12713 = 0.0, $12714 = 0.0, $12715 = 0.0, $12716 = 0.0, $12717 = 0.0, $12718 = 0.0, $12719 = 0.0, $1272 = 0.0, $12720 = 0.0, $12721 = 0.0, $12722 = 0.0, $12723 = 0.0, $12724 = 0.0, $12725 = 0.0, $12726 = 0.0, $12727 = 0.0, $12728 = 0.0, $12729 = 0.0, $1273 = 0.0, $12730 = 0.0;
 var $12731 = 0.0, $12732 = 0, $12733 = 0.0, $12734 = 0.0, $12735 = 0.0, $12736 = 0.0, $12737 = 0.0, $12738 = 0.0, $12739 = 0.0, $1274 = 0.0, $12740 = 0.0, $12741 = 0, $12742 = 0, $12743 = 0.0, $12744 = 0.0, $12745 = 0.0, $12746 = 0.0, $12747 = 0.0, $12748 = 0.0, $12749 = 0.0;
 var $1275 = 0.0, $12750 = 0.0, $12751 = 0.0, $12752 = 0.0, $12753 = 0.0, $12754 = 0.0, $12755 = 0.0, $12756 = 0.0, $12757 = 0.0, $12758 = 0.0, $12759 = 0.0, $1276 = 0.0, $12760 = 0.0, $12761 = 0.0, $12762 = 0.0, $12763 = 0.0, $12764 = 0, $12765 = 0, $12766 = 0.0, $12767 = 0.0;
 var $12768 = 0, $12769 = 0, $1277 = 0.0, $12770 = 0.0, $12771 = 0.0, $12772 = 0.0, $12773 = 0.0, $12774 = 0.0, $12775 = 0.0, $12776 = 0.0, $12777 = 0, $12778 = 0.0, $12779 = 0, $1278 = 0.0, $12780 = 0.0, $12781 = 0.0, $12782 = 0.0, $12783 = 0.0, $12784 = 0.0, $12785 = 0.0;
 var $12786 = 0.0, $12787 = 0.0, $12788 = 0.0, $12789 = 0.0, $1279 = 0.0, $12790 = 0.0, $12791 = 0.0, $12792 = 0.0, $12793 = 0.0, $12794 = 0.0, $12795 = 0.0, $12796 = 0.0, $12797 = 0.0, $12798 = 0.0, $12799 = 0.0, $128 = 0, $1280 = 0.0, $12800 = 0.0, $12801 = 0.0, $12802 = 0.0;
 var $12803 = 0.0, $12804 = 0.0, $12805 = 0.0, $12806 = 0.0, $12807 = 0.0, $12808 = 0.0, $12809 = 0.0, $1281 = 0.0, $12810 = 0.0, $12811 = 0.0, $12812 = 0.0, $12813 = 0.0, $12814 = 0, $12815 = 0.0, $12816 = 0.0, $12817 = 0.0, $12818 = 0.0, $12819 = 0.0, $1282 = 0.0, $12820 = 0.0;
 var $12821 = 0.0, $12822 = 0.0, $12823 = 0.0, $12824 = 0.0, $12825 = 0, $12826 = 0.0, $12827 = 0, $12828 = 0.0, $12829 = 0.0, $1283 = 0.0, $12830 = 0.0, $12831 = 0.0, $12832 = 0.0, $12833 = 0.0, $12834 = 0.0, $12835 = 0.0, $12836 = 0.0, $12837 = 0.0, $12838 = 0.0, $12839 = 0.0;
 var $1284 = 0.0, $12840 = 0.0, $12841 = 0.0, $12842 = 0.0, $12843 = 0.0, $12844 = 0.0, $12845 = 0.0, $12846 = 0.0, $12847 = 0, $12848 = 0, $12849 = 0.0, $1285 = 0.0, $12850 = 0.0, $12851 = 0.0, $12852 = 0.0, $12853 = 0.0, $12854 = 0, $12855 = 0, $12856 = 0.0, $12857 = 0.0;
 var $12858 = 0.0, $12859 = 0.0, $1286 = 0.0, $12860 = 0.0, $12861 = 0.0, $12862 = 0.0, $12863 = 0, $12864 = 0.0, $12865 = 0, $12866 = 0.0, $12867 = 0.0, $12868 = 0.0, $12869 = 0.0, $1287 = 0.0, $12870 = 0.0, $12871 = 0.0, $12872 = 0.0, $12873 = 0.0, $12874 = 0.0, $12875 = 0.0;
 var $12876 = 0.0, $12877 = 0.0, $12878 = 0.0, $12879 = 0.0, $1288 = 0.0, $12880 = 0.0, $12881 = 0.0, $12882 = 0.0, $12883 = 0.0, $12884 = 0.0, $12885 = 0.0, $12886 = 0.0, $12887 = 0.0, $12888 = 0.0, $12889 = 0.0, $1289 = 0.0, $12890 = 0.0, $12891 = 0.0, $12892 = 0.0, $12893 = 0.0;
 var $12894 = 0.0, $12895 = 0.0, $12896 = 0.0, $12897 = 0.0, $12898 = 0.0, $12899 = 0, $129 = 0, $1290 = 0.0, $12900 = 0.0, $12901 = 0.0, $12902 = 0.0, $12903 = 0.0, $12904 = 0.0, $12905 = 0.0, $12906 = 0.0, $12907 = 0.0, $12908 = 0.0, $12909 = 0.0, $1291 = 0.0, $12910 = 0;
 var $12911 = 0.0, $12912 = 0, $12913 = 0.0, $12914 = 0.0, $12915 = 0.0, $12916 = 0.0, $12917 = 0.0, $12918 = 0.0, $12919 = 0.0, $1292 = 0.0, $12920 = 0.0, $12921 = 0, $12922 = 0.0, $12923 = 0.0, $12924 = 0.0, $12925 = 0.0, $12926 = 0.0, $12927 = 0.0, $12928 = 0.0, $12929 = 0.0;
 var $1293 = 0.0, $12930 = 0.0, $12931 = 0, $12932 = 0.0, $12933 = 0, $12934 = 0.0, $12935 = 0.0, $12936 = 0.0, $12937 = 0.0, $12938 = 0.0, $12939 = 0.0, $1294 = 0.0, $12940 = 0.0, $12941 = 0.0, $12942 = 0.0, $12943 = 0.0, $12944 = 0.0, $12945 = 0.0, $12946 = 0.0, $12947 = 0.0;
 var $12948 = 0, $12949 = 0.0, $1295 = 0.0, $12950 = 0.0, $12951 = 0.0, $12952 = 0.0, $12953 = 0.0, $12954 = 0.0, $12955 = 0.0, $12956 = 0.0, $12957 = 0.0, $12958 = 0.0, $12959 = 0.0, $1296 = 0.0, $12960 = 0.0, $12961 = 0.0, $12962 = 0.0, $12963 = 0.0, $12964 = 0.0, $12965 = 0.0;
 var $12966 = 0.0, $12967 = 0.0, $12968 = 0.0, $12969 = 0, $1297 = 0.0, $12970 = 0.0, $12971 = 0, $12972 = 0.0, $12973 = 0.0, $12974 = 0.0, $12975 = 0.0, $12976 = 0.0, $12977 = 0, $12978 = 0.0, $12979 = 0.0, $1298 = 0.0, $12980 = 0.0, $12981 = 0.0, $12982 = 0.0, $12983 = 0;
 var $12984 = 0.0, $12985 = 0.0, $12986 = 0.0, $12987 = 0.0, $12988 = 0.0, $12989 = 0.0, $1299 = 0.0, $12990 = 0.0, $12991 = 0.0, $12992 = 0.0, $12993 = 0.0, $12994 = 0.0, $12995 = 0.0, $12996 = 0.0, $12997 = 0.0, $12998 = 0.0, $12999 = 0.0, $13 = 0, $130 = 0, $1300 = 0.0;
 var $13000 = 0.0, $13001 = 0.0, $13002 = 0.0, $13003 = 0.0, $13004 = 0.0, $13005 = 0.0, $13006 = 0.0, $13007 = 0.0, $13008 = 0.0, $13009 = 0.0, $1301 = 0.0, $13010 = 0.0, $13011 = 0.0, $13012 = 0.0, $13013 = 0.0, $13014 = 0.0, $13015 = 0.0, $13016 = 0.0, $13017 = 0.0, $13018 = 0.0;
 var $13019 = 0.0, $1302 = 0.0, $13020 = 0.0, $13021 = 0.0, $13022 = 0, $13023 = 0, $13024 = 0.0, $13025 = 0.0, $13026 = 0.0, $13027 = 0.0, $13028 = 0.0, $13029 = 0.0, $1303 = 0.0, $13030 = 0.0, $13031 = 0, $13032 = 0, $13033 = 0.0, $13034 = 0.0, $13035 = 0.0, $13036 = 0.0;
 var $13037 = 0.0, $13038 = 0.0, $13039 = 0.0, $1304 = 0.0, $13040 = 0, $13041 = 0.0, $13042 = 0, $13043 = 0.0, $13044 = 0.0, $13045 = 0.0, $13046 = 0.0, $13047 = 0.0, $13048 = 0.0, $13049 = 0.0, $1305 = 0.0, $13050 = 0.0, $13051 = 0.0, $13052 = 0.0, $13053 = 0.0, $13054 = 0.0;
 var $13055 = 0.0, $13056 = 0.0, $13057 = 0.0, $13058 = 0.0, $13059 = 0.0, $1306 = 0.0, $13060 = 0.0, $13061 = 0.0, $13062 = 0.0, $13063 = 0.0, $13064 = 0.0, $13065 = 0.0, $13066 = 0.0, $13067 = 0.0, $13068 = 0.0, $13069 = 0.0, $1307 = 0.0, $13070 = 0.0, $13071 = 0.0, $13072 = 0.0;
 var $13073 = 0.0, $13074 = 0.0, $13075 = 0.0, $13076 = 0.0, $13077 = 0.0, $13078 = 0.0, $13079 = 0.0, $1308 = 0.0, $13080 = 0, $13081 = 0.0, $13082 = 0.0, $13083 = 0.0, $13084 = 0.0, $13085 = 0.0, $13086 = 0.0, $13087 = 0.0, $13088 = 0.0, $13089 = 0, $1309 = 0.0, $13090 = 0.0;
 var $13091 = 0, $13092 = 0.0, $13093 = 0.0, $13094 = 0.0, $13095 = 0.0, $13096 = 0.0, $13097 = 0.0, $13098 = 0.0, $13099 = 0.0, $131 = 0, $1310 = 0.0, $13100 = 0.0, $13101 = 0.0, $13102 = 0.0, $13103 = 0.0, $13104 = 0.0, $13105 = 0, $13106 = 0, $13107 = 0.0, $13108 = 0.0;
 var $13109 = 0.0, $1311 = 0.0, $13110 = 0.0, $13111 = 0.0, $13112 = 0.0, $13113 = 0.0, $13114 = 0.0, $13115 = 0.0, $13116 = 0.0, $13117 = 0.0, $13118 = 0.0, $13119 = 0.0, $1312 = 0.0, $13120 = 0.0, $13121 = 0.0, $13122 = 0.0, $13123 = 0.0, $13124 = 0.0, $13125 = 0.0, $13126 = 0.0;
 var $13127 = 0.0, $13128 = 0.0, $13129 = 0.0, $1313 = 0.0, $13130 = 0.0, $13131 = 0.0, $13132 = 0, $13133 = 0, $13134 = 0.0, $13135 = 0.0, $13136 = 0.0, $13137 = 0.0, $13138 = 0.0, $13139 = 0.0, $1314 = 0.0, $13140 = 0.0, $13141 = 0, $13142 = 0.0, $13143 = 0, $13144 = 0.0;
 var $13145 = 0.0, $13146 = 0.0, $13147 = 0.0, $13148 = 0.0, $13149 = 0.0, $1315 = 0.0, $13150 = 0.0, $13151 = 0.0, $13152 = 0.0, $13153 = 0.0, $13154 = 0.0, $13155 = 0.0, $13156 = 0.0, $13157 = 0.0, $13158 = 0.0, $13159 = 0.0, $1316 = 0.0, $13160 = 0.0, $13161 = 0.0, $13162 = 0.0;
 var $13163 = 0.0, $13164 = 0.0, $13165 = 0.0, $13166 = 0.0, $13167 = 0.0, $13168 = 0.0, $13169 = 0.0, $1317 = 0.0, $13170 = 0.0, $13171 = 0.0, $13172 = 0.0, $13173 = 0.0, $13174 = 0.0, $13175 = 0.0, $13176 = 0.0, $13177 = 0.0, $13178 = 0.0, $13179 = 0.0, $1318 = 0.0, $13180 = 0.0;
 var $13181 = 0, $13182 = 0.0, $13183 = 0.0, $13184 = 0.0, $13185 = 0.0, $13186 = 0.0, $13187 = 0.0, $13188 = 0.0, $13189 = 0.0, $1319 = 0.0, $13190 = 0, $13191 = 0.0, $13192 = 0, $13193 = 0.0, $13194 = 0.0, $13195 = 0.0, $13196 = 0.0, $13197 = 0.0, $13198 = 0.0, $13199 = 0.0;
 var $132 = 0, $1320 = 0.0, $13200 = 0.0, $13201 = 0, $13202 = 0.0, $13203 = 0.0, $13204 = 0.0, $13205 = 0.0, $13206 = 0.0, $13207 = 0.0, $13208 = 0.0, $13209 = 0.0, $1321 = 0.0, $13210 = 0.0, $13211 = 0, $13212 = 0.0, $13213 = 0, $13214 = 0.0, $13215 = 0.0, $13216 = 0.0;
 var $13217 = 0.0, $13218 = 0.0, $13219 = 0.0, $1322 = 0.0, $13220 = 0.0, $13221 = 0.0, $13222 = 0.0, $13223 = 0.0, $13224 = 0.0, $13225 = 0.0, $13226 = 0.0, $13227 = 0.0, $13228 = 0, $13229 = 0.0, $1323 = 0.0, $13230 = 0.0, $13231 = 0.0, $13232 = 0.0, $13233 = 0.0, $13234 = 0.0;
 var $13235 = 0.0, $13236 = 0.0, $13237 = 0.0, $13238 = 0.0, $13239 = 0.0, $1324 = 0.0, $13240 = 0.0, $13241 = 0.0, $13242 = 0.0, $13243 = 0.0, $13244 = 0.0, $13245 = 0.0, $13246 = 0.0, $13247 = 0.0, $13248 = 0.0, $13249 = 0, $1325 = 0, $13250 = 0.0, $13251 = 0, $13252 = 0.0;
 var $13253 = 0.0, $13254 = 0.0, $13255 = 0.0, $13256 = 0.0, $13257 = 0, $13258 = 0.0, $13259 = 0.0, $1326 = 0.0, $13260 = 0.0, $13261 = 0.0, $13262 = 0.0, $13263 = 0, $13264 = 0.0, $13265 = 0.0, $13266 = 0.0, $13267 = 0.0, $13268 = 0.0, $13269 = 0.0, $1327 = 0.0, $13270 = 0.0;
 var $13271 = 0.0, $13272 = 0.0, $13273 = 0.0, $13274 = 0.0, $13275 = 0.0, $13276 = 0.0, $13277 = 0.0, $13278 = 0.0, $13279 = 0.0, $1328 = 0.0, $13280 = 0.0, $13281 = 0.0, $13282 = 0, $13283 = 0, $13284 = 0.0, $13285 = 0.0, $13286 = 0.0, $13287 = 0.0, $13288 = 0.0, $13289 = 0.0;
 var $1329 = 0.0, $13290 = 0.0, $13291 = 0.0, $13292 = 0.0, $13293 = 0.0, $13294 = 0.0, $13295 = 0.0, $13296 = 0.0, $13297 = 0.0, $13298 = 0.0, $13299 = 0.0, $133 = 0, $1330 = 0.0, $13300 = 0.0, $13301 = 0.0, $13302 = 0.0, $13303 = 0.0, $13304 = 0.0, $13305 = 0.0, $13306 = 0.0;
 var $13307 = 0.0, $13308 = 0.0, $13309 = 0.0, $1331 = 0.0, $13310 = 0.0, $13311 = 0.0, $13312 = 0.0, $13313 = 0, $13314 = 0, $13315 = 0.0, $13316 = 0.0, $13317 = 0.0, $13318 = 0.0, $13319 = 0.0, $1332 = 0.0, $13320 = 0.0, $13321 = 0.0, $13322 = 0, $13323 = 0.0, $13324 = 0;
 var $13325 = 0.0, $13326 = 0.0, $13327 = 0.0, $13328 = 0.0, $13329 = 0.0, $1333 = 0.0, $13330 = 0.0, $13331 = 0.0, $13332 = 0.0, $13333 = 0.0, $13334 = 0.0, $13335 = 0.0, $13336 = 0.0, $13337 = 0.0, $13338 = 0.0, $13339 = 0.0, $1334 = 0.0, $13340 = 0.0, $13341 = 0.0, $13342 = 0.0;
 var $13343 = 0.0, $13344 = 0.0, $13345 = 0.0, $13346 = 0.0, $13347 = 0.0, $13348 = 0.0, $13349 = 0.0, $1335 = 0.0, $13350 = 0.0, $13351 = 0.0, $13352 = 0.0, $13353 = 0.0, $13354 = 0.0, $13355 = 0.0, $13356 = 0.0, $13357 = 0.0, $13358 = 0.0, $13359 = 0.0, $1336 = 0.0, $13360 = 0.0;
 var $13361 = 0.0, $13362 = 0, $13363 = 0.0, $13364 = 0.0, $13365 = 0.0, $13366 = 0.0, $13367 = 0.0, $13368 = 0.0, $13369 = 0.0, $1337 = 0.0, $13370 = 0.0, $13371 = 0, $13372 = 0.0, $13373 = 0, $13374 = 0.0, $13375 = 0.0, $13376 = 0.0, $13377 = 0.0, $13378 = 0.0, $13379 = 0.0;
 var $1338 = 0.0, $13380 = 0.0, $13381 = 0.0, $13382 = 0.0, $13383 = 0.0, $13384 = 0.0, $13385 = 0.0, $13386 = 0.0, $13387 = 0, $13388 = 0, $13389 = 0.0, $1339 = 0.0, $13390 = 0.0, $13391 = 0.0, $13392 = 0.0, $13393 = 0.0, $13394 = 0.0, $13395 = 0.0, $13396 = 0.0, $13397 = 0.0;
 var $13398 = 0.0, $13399 = 0.0, $134 = 0, $1340 = 0.0, $13400 = 0.0, $13401 = 0.0, $13402 = 0.0, $13403 = 0.0, $13404 = 0.0, $13405 = 0.0, $13406 = 0.0, $13407 = 0.0, $13408 = 0.0, $13409 = 0.0, $1341 = 0.0, $13410 = 0.0, $13411 = 0.0, $13412 = 0.0, $13413 = 0.0, $13414 = 0.0;
 var $13415 = 0.0, $13416 = 0, $13417 = 0, $13418 = 0.0, $13419 = 0.0, $1342 = 0.0, $13420 = 0.0, $13421 = 0.0, $13422 = 0.0, $13423 = 0.0, $13424 = 0.0, $13425 = 0, $13426 = 0.0, $13427 = 0, $13428 = 0.0, $13429 = 0.0, $1343 = 0.0, $13430 = 0.0, $13431 = 0.0, $13432 = 0.0;
 var $13433 = 0.0, $13434 = 0.0, $13435 = 0.0, $13436 = 0.0, $13437 = 0.0, $13438 = 0.0, $13439 = 0.0, $1344 = 0.0, $13440 = 0.0, $13441 = 0.0, $13442 = 0.0, $13443 = 0.0, $13444 = 0.0, $13445 = 0.0, $13446 = 0.0, $13447 = 0.0, $13448 = 0.0, $13449 = 0.0, $1345 = 0.0, $13450 = 0.0;
 var $13451 = 0.0, $13452 = 0.0, $13453 = 0.0, $13454 = 0.0, $13455 = 0.0, $13456 = 0.0, $13457 = 0.0, $13458 = 0.0, $13459 = 0.0, $1346 = 0.0, $13460 = 0.0, $13461 = 0.0, $13462 = 0.0, $13463 = 0.0, $13464 = 0.0, $13465 = 0, $13466 = 0.0, $13467 = 0.0, $13468 = 0.0, $13469 = 0.0;
 var $1347 = 0.0, $13470 = 0.0, $13471 = 0.0, $13472 = 0.0, $13473 = 0.0, $13474 = 0, $13475 = 0.0, $13476 = 0, $13477 = 0.0, $13478 = 0.0, $13479 = 0.0, $1348 = 0.0, $13480 = 0.0, $13481 = 0.0, $13482 = 0.0, $13483 = 0.0, $13484 = 0.0, $13485 = 0.0, $13486 = 0.0, $13487 = 0.0;
 var $13488 = 0.0, $13489 = 0.0, $1349 = 0.0, $13490 = 0.0, $13491 = 0.0, $13492 = 0.0, $13493 = 0.0, $13494 = 0.0, $13495 = 0.0, $13496 = 0.0, $13497 = 0.0, $13498 = 0.0, $13499 = 0.0, $135 = 0, $1350 = 0.0, $13500 = 0.0, $13501 = 0.0, $13502 = 0.0, $13503 = 0.0, $13504 = 0.0;
 var $13505 = 0.0, $13506 = 0.0, $13507 = 0.0, $13508 = 0.0, $13509 = 0.0, $1351 = 0.0, $13510 = 0.0, $13511 = 0.0, $13512 = 0.0, $13513 = 0.0, $13514 = 0, $13515 = 0, $13516 = 0.0, $13517 = 0.0, $13518 = 0.0, $13519 = 0.0, $1352 = 0.0, $13520 = 0.0, $13521 = 0.0, $13522 = 0.0;
 var $13523 = 0.0, $13524 = 0.0, $13525 = 0.0, $13526 = 0.0, $13527 = 0.0, $13528 = 0.0, $13529 = 0, $1353 = 0.0, $13530 = 0, $13531 = 0.0, $13532 = 0.0, $13533 = 0.0, $13534 = 0.0, $13535 = 0.0, $13536 = 0.0, $13537 = 0.0, $13538 = 0, $13539 = 0.0, $1354 = 0.0, $13540 = 0;
 var $13541 = 0.0, $13542 = 0.0, $13543 = 0.0, $13544 = 0.0, $13545 = 0.0, $13546 = 0.0, $13547 = 0.0, $13548 = 0.0, $13549 = 0.0, $1355 = 0.0, $13550 = 0.0, $13551 = 0.0, $13552 = 0.0, $13553 = 0.0, $13554 = 0.0, $13555 = 0.0, $13556 = 0.0, $13557 = 0.0, $13558 = 0.0, $13559 = 0.0;
 var $1356 = 0.0, $13560 = 0.0, $13561 = 0.0, $13562 = 0.0, $13563 = 0.0, $13564 = 0.0, $13565 = 0.0, $13566 = 0.0, $13567 = 0.0, $13568 = 0.0, $13569 = 0.0, $1357 = 0, $13570 = 0.0, $13571 = 0.0, $13572 = 0.0, $13573 = 0.0, $13574 = 0.0, $13575 = 0.0, $13576 = 0.0, $13577 = 0.0;
 var $13578 = 0.0, $13579 = 0.0, $1358 = 0.0, $13580 = 0.0, $13581 = 0.0, $13582 = 0.0, $13583 = 0.0, $13584 = 0.0, $13585 = 0.0, $13586 = 0.0, $13587 = 0.0, $13588 = 0.0, $13589 = 0.0, $1359 = 0.0, $13590 = 0.0, $13591 = 0.0, $13592 = 0.0, $13593 = 0.0, $13594 = 0.0, $13595 = 0.0;
 var $13596 = 0.0, $13597 = 0.0, $13598 = 0.0, $13599 = 0.0, $136 = 0, $1360 = 0.0, $13600 = 0.0, $13601 = 0.0, $13602 = 0.0, $13603 = 0.0, $13604 = 0.0, $13605 = 0.0, $13606 = 0.0, $13607 = 0.0, $13608 = 0.0, $13609 = 0.0, $1361 = 0.0, $13610 = 0.0, $13611 = 0.0, $13612 = 0.0;
 var $13613 = 0.0, $13614 = 0.0, $13615 = 0.0, $13616 = 0.0, $13617 = 0.0, $13618 = 0.0, $13619 = 0.0, $1362 = 0.0, $13620 = 0, $13621 = 0.0, $13622 = 0.0, $13623 = 0.0, $13624 = 0.0, $13625 = 0.0, $13626 = 0.0, $13627 = 0.0, $13628 = 0.0, $13629 = 0.0, $1363 = 0.0, $13630 = 0.0;
 var $13631 = 0, $13632 = 0.0, $13633 = 0, $13634 = 0.0, $13635 = 0, $13636 = 0.0, $13637 = 0, $13638 = 0.0, $13639 = 0.0, $1364 = 0.0, $13640 = 0.0, $13641 = 0.0, $13642 = 0.0, $13643 = 0.0, $13644 = 0.0, $13645 = 0.0, $13646 = 0.0, $13647 = 0.0, $13648 = 0.0, $13649 = 0.0;
 var $1365 = 0.0, $13650 = 0.0, $13651 = 0.0, $13652 = 0.0, $13653 = 0.0, $13654 = 0.0, $13655 = 0.0, $13656 = 0.0, $13657 = 0.0, $13658 = 0.0, $13659 = 0.0, $1366 = 0.0, $13660 = 0.0, $13661 = 0.0, $13662 = 0.0, $13663 = 0.0, $13664 = 0.0, $13665 = 0.0, $13666 = 0.0, $13667 = 0.0;
 var $13668 = 0.0, $13669 = 0.0, $1367 = 0.0, $13670 = 0.0, $13671 = 0.0, $13672 = 0.0, $13673 = 0.0, $13674 = 0.0, $13675 = 0, $13676 = 0, $13677 = 0.0, $13678 = 0.0, $13679 = 0.0, $1368 = 0.0, $13680 = 0.0, $13681 = 0.0, $13682 = 0, $13683 = 0, $13684 = 0.0, $13685 = 0.0;
 var $13686 = 0.0, $13687 = 0.0, $13688 = 0.0, $13689 = 0.0, $1369 = 0.0, $13690 = 0.0, $13691 = 0, $13692 = 0.0, $13693 = 0, $13694 = 0.0, $13695 = 0.0, $13696 = 0.0, $13697 = 0.0, $13698 = 0.0, $13699 = 0.0, $137 = 0, $1370 = 0.0, $13700 = 0.0, $13701 = 0.0, $13702 = 0.0;
 var $13703 = 0.0, $13704 = 0.0, $13705 = 0.0, $13706 = 0.0, $13707 = 0.0, $13708 = 0.0, $13709 = 0.0, $1371 = 0.0, $13710 = 0.0, $13711 = 0.0, $13712 = 0.0, $13713 = 0.0, $13714 = 0.0, $13715 = 0.0, $13716 = 0.0, $13717 = 0.0, $13718 = 0.0, $13719 = 0.0, $1372 = 0.0, $13720 = 0.0;
 var $13721 = 0.0, $13722 = 0.0, $13723 = 0.0, $13724 = 0.0, $13725 = 0.0, $13726 = 0.0, $13727 = 0.0, $13728 = 0.0, $13729 = 0.0, $1373 = 0.0, $13730 = 0.0, $13731 = 0.0, $13732 = 0.0, $13733 = 0.0, $13734 = 0.0, $13735 = 0.0, $13736 = 0.0, $13737 = 0.0, $13738 = 0.0, $13739 = 0.0;
 var $1374 = 0.0, $13740 = 0.0, $13741 = 0.0, $13742 = 0.0, $13743 = 0.0, $13744 = 0.0, $13745 = 0.0, $13746 = 0.0, $13747 = 0.0, $13748 = 0.0, $13749 = 0.0, $1375 = 0.0, $13750 = 0.0, $13751 = 0.0, $13752 = 0.0, $13753 = 0.0, $13754 = 0.0, $13755 = 0.0, $13756 = 0.0, $13757 = 0.0;
 var $13758 = 0.0, $13759 = 0.0, $1376 = 0.0, $13760 = 0.0, $13761 = 0.0, $13762 = 0.0, $13763 = 0.0, $13764 = 0.0, $13765 = 0.0, $13766 = 0.0, $13767 = 0.0, $13768 = 0.0, $13769 = 0.0, $1377 = 0.0, $13770 = 0.0, $13771 = 0.0, $13772 = 0.0, $13773 = 0, $13774 = 0.0, $13775 = 0.0;
 var $13776 = 0.0, $13777 = 0.0, $13778 = 0.0, $13779 = 0.0, $1378 = 0.0, $13780 = 0.0, $13781 = 0.0, $13782 = 0.0, $13783 = 0.0, $13784 = 0, $13785 = 0.0, $13786 = 0, $13787 = 0.0, $13788 = 0, $13789 = 0.0, $1379 = 0.0, $13790 = 0, $13791 = 0.0, $13792 = 0.0, $13793 = 0.0;
 var $13794 = 0.0, $13795 = 0.0, $13796 = 0.0, $13797 = 0.0, $13798 = 0.0, $13799 = 0.0, $138 = 0, $1380 = 0.0, $13800 = 0.0, $13801 = 0.0, $13802 = 0.0, $13803 = 0.0, $13804 = 0.0, $13805 = 0.0, $13806 = 0.0, $13807 = 0.0, $13808 = 0.0, $13809 = 0.0, $1381 = 0.0, $13810 = 0.0;
 var $13811 = 0.0, $13812 = 0.0, $13813 = 0.0, $13814 = 0.0, $13815 = 0.0, $13816 = 0.0, $13817 = 0.0, $13818 = 0.0, $13819 = 0.0, $1382 = 0.0, $13820 = 0.0, $13821 = 0.0, $13822 = 0, $13823 = 0, $13824 = 0.0, $13825 = 0.0, $13826 = 0.0, $13827 = 0.0, $13828 = 0.0, $13829 = 0.0;
 var $1383 = 0.0, $13830 = 0.0, $13831 = 0, $13832 = 0, $13833 = 0.0, $13834 = 0.0, $13835 = 0.0, $13836 = 0.0, $13837 = 0.0, $13838 = 0.0, $13839 = 0.0, $1384 = 0.0, $13840 = 0, $13841 = 0.0, $13842 = 0, $13843 = 0.0, $13844 = 0.0, $13845 = 0.0, $13846 = 0.0, $13847 = 0.0;
 var $13848 = 0.0, $13849 = 0.0, $1385 = 0.0, $13850 = 0.0, $13851 = 0.0, $13852 = 0.0, $13853 = 0.0, $13854 = 0.0, $13855 = 0.0, $13856 = 0.0, $13857 = 0.0, $13858 = 0.0, $13859 = 0.0, $1386 = 0.0, $13860 = 0.0, $13861 = 0.0, $13862 = 0.0, $13863 = 0.0, $13864 = 0.0, $13865 = 0.0;
 var $13866 = 0.0, $13867 = 0.0, $13868 = 0.0, $13869 = 0.0, $1387 = 0, $13870 = 0.0, $13871 = 0.0, $13872 = 0.0, $13873 = 0.0, $13874 = 0.0, $13875 = 0.0, $13876 = 0.0, $13877 = 0.0, $13878 = 0.0, $13879 = 0.0, $1388 = 0.0, $13880 = 0.0, $13881 = 0.0, $13882 = 0.0, $13883 = 0.0;
 var $13884 = 0.0, $13885 = 0.0, $13886 = 0.0, $13887 = 0.0, $13888 = 0.0, $13889 = 0.0, $1389 = 0.0, $13890 = 0.0, $13891 = 0.0, $13892 = 0.0, $13893 = 0.0, $13894 = 0.0, $13895 = 0.0, $13896 = 0.0, $13897 = 0.0, $13898 = 0.0, $13899 = 0.0, $139 = 0, $1390 = 0.0, $13900 = 0.0;
 var $13901 = 0.0, $13902 = 0.0, $13903 = 0.0, $13904 = 0.0, $13905 = 0.0, $13906 = 0.0, $13907 = 0.0, $13908 = 0.0, $13909 = 0.0, $1391 = 0.0, $13910 = 0.0, $13911 = 0.0, $13912 = 0.0, $13913 = 0.0, $13914 = 0.0, $13915 = 0.0, $13916 = 0.0, $13917 = 0.0, $13918 = 0.0, $13919 = 0.0;
 var $1392 = 0.0, $13920 = 0.0, $13921 = 0.0, $13922 = 0, $13923 = 0.0, $13924 = 0.0, $13925 = 0.0, $13926 = 0.0, $13927 = 0.0, $13928 = 0.0, $13929 = 0.0, $1393 = 0.0, $13930 = 0.0, $13931 = 0.0, $13932 = 0.0, $13933 = 0, $13934 = 0.0, $13935 = 0, $13936 = 0.0, $13937 = 0;
 var $13938 = 0.0, $13939 = 0, $1394 = 0.0, $13940 = 0.0, $13941 = 0.0, $13942 = 0.0, $13943 = 0.0, $13944 = 0.0, $13945 = 0.0, $13946 = 0.0, $13947 = 0.0, $13948 = 0.0, $13949 = 0.0, $1395 = 0.0, $13950 = 0.0, $13951 = 0.0, $13952 = 0.0, $13953 = 0.0, $13954 = 0.0, $13955 = 0.0;
 var $13956 = 0.0, $13957 = 0.0, $13958 = 0.0, $13959 = 0, $1396 = 0.0, $13960 = 0.0, $13961 = 0.0, $13962 = 0.0, $13963 = 0.0, $13964 = 0.0, $13965 = 0.0, $13966 = 0.0, $13967 = 0, $13968 = 0.0, $13969 = 0, $1397 = 0.0, $13970 = 0.0, $13971 = 0.0, $13972 = 0.0, $13973 = 0.0;
 var $13974 = 0.0, $13975 = 0.0, $13976 = 0.0, $13977 = 0.0, $13978 = 0, $13979 = 0.0, $1398 = 0.0, $13980 = 0.0, $13981 = 0.0, $13982 = 0.0, $13983 = 0.0, $13984 = 0, $13985 = 0.0, $13986 = 0.0, $13987 = 0.0, $13988 = 0.0, $13989 = 0.0, $1399 = 0.0, $13990 = 0, $13991 = 0.0;
 var $13992 = 0.0, $13993 = 0, $13994 = 0.0, $13995 = 0.0, $13996 = 0.0, $13997 = 0.0, $13998 = 0.0, $13999 = 0.0, $14 = 0, $140 = 0, $1400 = 0.0, $14000 = 0.0, $14001 = 0.0, $14002 = 0, $14003 = 0.0, $14004 = 0.0, $14005 = 0, $14006 = 0.0, $14007 = 0.0, $14008 = 0.0;
 var $14009 = 0.0, $1401 = 0.0, $14010 = 0.0, $14011 = 0.0, $14012 = 0.0, $14013 = 0.0, $14014 = 0.0, $14015 = 0.0, $14016 = 0.0, $14017 = 0.0, $14018 = 0.0, $14019 = 0.0, $1402 = 0.0, $14020 = 0, $14021 = 0.0, $14022 = 0.0, $14023 = 0.0, $14024 = 0.0, $14025 = 0.0, $14026 = 0.0;
 var $14027 = 0.0, $14028 = 0, $14029 = 0.0, $1403 = 0.0, $14030 = 0, $14031 = 0.0, $14032 = 0.0, $14033 = 0.0, $14034 = 0.0, $14035 = 0.0, $14036 = 0.0, $14037 = 0.0, $14038 = 0.0, $14039 = 0.0, $1404 = 0.0, $14040 = 0.0, $14041 = 0.0, $14042 = 0.0, $14043 = 0.0, $14044 = 0.0;
 var $14045 = 0.0, $14046 = 0.0, $14047 = 0.0, $14048 = 0.0, $14049 = 0.0, $1405 = 0.0, $14050 = 0.0, $14051 = 0.0, $14052 = 0.0, $14053 = 0.0, $14054 = 0.0, $14055 = 0.0, $14056 = 0.0, $14057 = 0.0, $14058 = 0.0, $14059 = 0.0, $1406 = 0.0, $14060 = 0.0, $14061 = 0.0, $14062 = 0.0;
 var $14063 = 0.0, $14064 = 0.0, $14065 = 0, $14066 = 0.0, $14067 = 0.0, $14068 = 0, $14069 = 0.0, $1407 = 0, $14070 = 0, $14071 = 0.0, $14072 = 0.0, $14073 = 0.0, $14074 = 0.0, $14075 = 0.0, $14076 = 0.0, $14077 = 0.0, $14078 = 0.0, $14079 = 0.0, $1408 = 0.0, $14080 = 0.0;
 var $14081 = 0.0, $14082 = 0.0, $14083 = 0.0, $14084 = 0.0, $14085 = 0.0, $14086 = 0.0, $14087 = 0.0, $14088 = 0.0, $14089 = 0.0, $1409 = 0.0, $14090 = 0.0, $14091 = 0.0, $14092 = 0.0, $14093 = 0.0, $14094 = 0.0, $14095 = 0.0, $14096 = 0.0, $14097 = 0.0, $14098 = 0.0, $14099 = 0.0;
 var $141 = 0, $1410 = 0.0, $14100 = 0.0, $14101 = 0.0, $14102 = 0.0, $14103 = 0.0, $14104 = 0, $14105 = 0.0, $14106 = 0.0, $14107 = 0.0, $14108 = 0.0, $14109 = 0.0, $1411 = 0.0, $14110 = 0, $14111 = 0.0, $14112 = 0, $14113 = 0.0, $14114 = 0.0, $14115 = 0.0, $14116 = 0.0;
 var $14117 = 0.0, $14118 = 0.0, $14119 = 0.0, $1412 = 0.0, $14120 = 0.0, $14121 = 0, $14122 = 0.0, $14123 = 0.0, $14124 = 0.0, $14125 = 0, $14126 = 0.0, $14127 = 0, $14128 = 0.0, $14129 = 0.0, $1413 = 0.0, $14130 = 0.0, $14131 = 0.0, $14132 = 0.0, $14133 = 0, $14134 = 0.0;
 var $14135 = 0.0, $14136 = 0.0, $14137 = 0.0, $14138 = 0.0, $14139 = 0.0, $1414 = 0.0, $14140 = 0, $14141 = 0, $14142 = 0.0, $14143 = 0.0, $14144 = 0.0, $14145 = 0.0, $14146 = 0.0, $14147 = 0.0, $14148 = 0.0, $14149 = 0.0, $1415 = 0.0, $14150 = 0.0, $14151 = 0, $14152 = 0.0;
 var $14153 = 0, $14154 = 0.0, $14155 = 0.0, $14156 = 0, $14157 = 0.0, $14158 = 0, $14159 = 0.0, $1416 = 0.0, $14160 = 0, $14161 = 0, $14162 = 0, $14163 = 0, $14164 = 0, $14165 = 0, $14166 = 0, $14167 = 0, $14168 = 0, $14169 = 0, $1417 = 0.0, $14170 = 0.0;
 var $14171 = 0, $14172 = 0.0, $14173 = 0.0, $14174 = 0.0, $14175 = 0, $14176 = 0.0, $14177 = 0, $14178 = 0.0, $14179 = 0.0, $1418 = 0.0, $14180 = 0.0, $14181 = 0, $14182 = 0, $14183 = 0, $14184 = 0.0, $14185 = 0, $14186 = 0.0, $14187 = 0, $14188 = 0.0, $14189 = 0.0;
 var $1419 = 0.0, $14190 = 0.0, $14191 = 0.0, $14192 = 0.0, $14193 = 0.0, $14194 = 0.0, $14195 = 0.0, $14196 = 0.0, $14197 = 0.0, $14198 = 0.0, $14199 = 0.0, $142 = 0, $1420 = 0.0, $14200 = 0.0, $14201 = 0.0, $14202 = 0.0, $14203 = 0.0, $14204 = 0.0, $14205 = 0.0, $14206 = 0.0;
 var $14207 = 0, $14208 = 0.0, $14209 = 0.0, $1421 = 0.0, $14210 = 0.0, $14211 = 0.0, $14212 = 0.0, $14213 = 0.0, $14214 = 0.0, $14215 = 0.0, $14216 = 0, $14217 = 0, $14218 = 0.0, $14219 = 0.0, $1422 = 0.0, $14220 = 0.0, $14221 = 0.0, $14222 = 0.0, $14223 = 0.0, $14224 = 0.0;
 var $14225 = 0.0, $14226 = 0.0, $14227 = 0.0, $14228 = 0.0, $14229 = 0.0, $1423 = 0.0, $14230 = 0.0, $14231 = 0.0, $14232 = 0.0, $14233 = 0.0, $14234 = 0.0, $14235 = 0.0, $14236 = 0.0, $14237 = 0.0, $14238 = 0, $14239 = 0, $1424 = 0.0, $14240 = 0.0, $14241 = 0.0, $14242 = 0.0;
 var $14243 = 0.0, $14244 = 0.0, $14245 = 0.0, $14246 = 0.0, $14247 = 0, $14248 = 0, $14249 = 0.0, $1425 = 0.0, $14250 = 0.0, $14251 = 0.0, $14252 = 0.0, $14253 = 0.0, $14254 = 0.0, $14255 = 0.0, $14256 = 0, $14257 = 0.0, $14258 = 0, $14259 = 0.0, $1426 = 0.0, $14260 = 0.0;
 var $14261 = 0.0, $14262 = 0.0, $14263 = 0.0, $14264 = 0.0, $14265 = 0.0, $14266 = 0.0, $14267 = 0.0, $14268 = 0.0, $14269 = 0.0, $1427 = 0.0, $14270 = 0.0, $14271 = 0.0, $14272 = 0.0, $14273 = 0.0, $14274 = 0.0, $14275 = 0.0, $14276 = 0.0, $14277 = 0.0, $14278 = 0.0, $14279 = 0.0;
 var $1428 = 0.0, $14280 = 0.0, $14281 = 0.0, $14282 = 0.0, $14283 = 0.0, $14284 = 0.0, $14285 = 0.0, $14286 = 0.0, $14287 = 0.0, $14288 = 0.0, $14289 = 0.0, $1429 = 0.0, $14290 = 0.0, $14291 = 0.0, $14292 = 0, $14293 = 0.0, $14294 = 0.0, $14295 = 0.0, $14296 = 0.0, $14297 = 0.0;
 var $14298 = 0.0, $14299 = 0.0, $143 = 0, $1430 = 0.0, $14300 = 0.0, $14301 = 0.0, $14302 = 0.0, $14303 = 0, $14304 = 0.0, $14305 = 0, $14306 = 0.0, $14307 = 0.0, $14308 = 0.0, $14309 = 0.0, $1431 = 0.0, $14310 = 0.0, $14311 = 0.0, $14312 = 0.0, $14313 = 0.0, $14314 = 0.0;
 var $14315 = 0.0, $14316 = 0.0, $14317 = 0.0, $14318 = 0.0, $14319 = 0.0, $1432 = 0.0, $14320 = 0.0, $14321 = 0.0, $14322 = 0.0, $14323 = 0.0, $14324 = 0.0, $14325 = 0, $14326 = 0, $14327 = 0.0, $14328 = 0.0, $14329 = 0.0, $1433 = 0.0, $14330 = 0.0, $14331 = 0.0, $14332 = 0;
 var $14333 = 0, $14334 = 0.0, $14335 = 0.0, $14336 = 0.0, $14337 = 0.0, $14338 = 0.0, $14339 = 0.0, $1434 = 0.0, $14340 = 0.0, $14341 = 0, $14342 = 0.0, $14343 = 0, $14344 = 0.0, $14345 = 0.0, $14346 = 0.0, $14347 = 0.0, $14348 = 0.0, $14349 = 0.0, $1435 = 0.0, $14350 = 0.0;
 var $14351 = 0.0, $14352 = 0.0, $14353 = 0.0, $14354 = 0.0, $14355 = 0.0, $14356 = 0.0, $14357 = 0.0, $14358 = 0.0, $14359 = 0.0, $1436 = 0.0, $14360 = 0.0, $14361 = 0.0, $14362 = 0.0, $14363 = 0.0, $14364 = 0.0, $14365 = 0.0, $14366 = 0.0, $14367 = 0.0, $14368 = 0.0, $14369 = 0.0;
 var $1437 = 0, $14370 = 0.0, $14371 = 0.0, $14372 = 0.0, $14373 = 0.0, $14374 = 0.0, $14375 = 0.0, $14376 = 0.0, $14377 = 0, $14378 = 0.0, $14379 = 0.0, $1438 = 0.0, $14380 = 0.0, $14381 = 0.0, $14382 = 0.0, $14383 = 0.0, $14384 = 0.0, $14385 = 0.0, $14386 = 0.0, $14387 = 0.0;
 var $14388 = 0, $14389 = 0.0, $1439 = 0.0, $14390 = 0, $14391 = 0.0, $14392 = 0.0, $14393 = 0.0, $14394 = 0.0, $14395 = 0.0, $14396 = 0.0, $14397 = 0.0, $14398 = 0.0, $14399 = 0.0, $144 = 0, $1440 = 0.0, $14400 = 0.0, $14401 = 0.0, $14402 = 0.0, $14403 = 0.0, $14404 = 0.0;
 var $14405 = 0.0, $14406 = 0.0, $14407 = 0.0, $14408 = 0, $14409 = 0.0, $1441 = 0.0, $14410 = 0.0, $14411 = 0.0, $14412 = 0.0, $14413 = 0.0, $14414 = 0.0, $14415 = 0.0, $14416 = 0, $14417 = 0.0, $14418 = 0, $14419 = 0.0, $1442 = 0.0, $14420 = 0, $14421 = 0.0, $14422 = 0.0;
 var $14423 = 0.0, $14424 = 0.0, $14425 = 0.0, $14426 = 0.0, $14427 = 0.0, $14428 = 0.0, $14429 = 0.0, $1443 = 0.0, $14430 = 0.0, $14431 = 0.0, $14432 = 0.0, $14433 = 0.0, $14434 = 0.0, $14435 = 0.0, $14436 = 0.0, $14437 = 0.0, $14438 = 0.0, $14439 = 0.0, $1444 = 0.0, $14440 = 0.0;
 var $14441 = 0.0, $14442 = 0.0, $14443 = 0.0, $14444 = 0.0, $14445 = 0.0, $14446 = 0.0, $14447 = 0.0, $14448 = 0.0, $14449 = 0.0, $1445 = 0, $14450 = 0.0, $14451 = 0.0, $14452 = 0.0, $14453 = 0.0, $14454 = 0.0, $14455 = 0.0, $14456 = 0, $14457 = 0.0, $14458 = 0.0, $14459 = 0;
 var $1446 = 0.0, $14460 = 0.0, $14461 = 0, $14462 = 0.0, $14463 = 0.0, $14464 = 0.0, $14465 = 0.0, $14466 = 0.0, $14467 = 0.0, $14468 = 0.0, $14469 = 0.0, $1447 = 0, $14470 = 0.0, $14471 = 0.0, $14472 = 0.0, $14473 = 0.0, $14474 = 0.0, $14475 = 0.0, $14476 = 0.0, $14477 = 0.0;
 var $14478 = 0.0, $14479 = 0.0, $1448 = 0.0, $14480 = 0.0, $14481 = 0.0, $14482 = 0.0, $14483 = 0.0, $14484 = 0.0, $14485 = 0.0, $14486 = 0.0, $14487 = 0.0, $14488 = 0.0, $14489 = 0.0, $1449 = 0.0, $14490 = 0.0, $14491 = 0.0, $14492 = 0.0, $14493 = 0.0, $14494 = 0.0, $14495 = 0;
 var $14496 = 0.0, $14497 = 0.0, $14498 = 0.0, $14499 = 0.0, $145 = 0, $1450 = 0.0, $14500 = 0.0, $14501 = 0, $14502 = 0.0, $14503 = 0, $14504 = 0.0, $14505 = 0.0, $14506 = 0.0, $14507 = 0.0, $14508 = 0.0, $14509 = 0.0, $1451 = 0.0, $14510 = 0.0, $14511 = 0.0, $14512 = 0;
 var $14513 = 0.0, $14514 = 0.0, $14515 = 0.0, $14516 = 0, $14517 = 0.0, $14518 = 0, $14519 = 0.0, $1452 = 0.0, $14520 = 0.0, $14521 = 0.0, $14522 = 0.0, $14523 = 0.0, $14524 = 0, $14525 = 0.0, $14526 = 0.0, $14527 = 0.0, $14528 = 0.0, $14529 = 0.0, $1453 = 0.0, $14530 = 0.0;
 var $14531 = 0, $14532 = 0, $14533 = 0.0, $14534 = 0.0, $14535 = 0.0, $14536 = 0.0, $14537 = 0.0, $14538 = 0.0, $14539 = 0.0, $1454 = 0.0, $14540 = 0.0, $14541 = 0.0, $14542 = 0, $14543 = 0.0, $14544 = 0, $14545 = 0.0, $14546 = 0.0, $14547 = 0, $14548 = 0.0, $14549 = 0;
 var $1455 = 0.0, $14550 = 0.0, $14551 = 0, $14552 = 0, $14553 = 0, $14554 = 0, $14555 = 0, $14556 = 0, $14557 = 0, $14558 = 0, $14559 = 0, $1456 = 0.0, $14560 = 0, $14561 = 0.0, $14562 = 0, $14563 = 0.0, $14564 = 0.0, $14565 = 0.0, $14566 = 0, $14567 = 0.0;
 var $14568 = 0, $14569 = 0.0, $1457 = 0.0, $14570 = 0.0, $14571 = 0.0, $14572 = 0, $14573 = 0, $14574 = 0, $14575 = 0.0, $14576 = 0, $14577 = 0.0, $14578 = 0, $14579 = 0.0, $1458 = 0.0, $14580 = 0.0, $14581 = 0.0, $14582 = 0.0, $14583 = 0.0, $14584 = 0.0, $14585 = 0.0;
 var $14586 = 0.0, $14587 = 0.0, $14588 = 0.0, $14589 = 0.0, $1459 = 0.0, $14590 = 0.0, $14591 = 0.0, $14592 = 0.0, $14593 = 0.0, $14594 = 0.0, $14595 = 0.0, $14596 = 0.0, $14597 = 0.0, $14598 = 0, $14599 = 0.0, $146 = 0, $1460 = 0.0, $14600 = 0.0, $14601 = 0.0, $14602 = 0.0;
 var $14603 = 0.0, $14604 = 0.0, $14605 = 0.0, $14606 = 0.0, $14607 = 0, $14608 = 0, $14609 = 0.0, $1461 = 0.0, $14610 = 0.0, $14611 = 0.0, $14612 = 0.0, $14613 = 0.0, $14614 = 0.0, $14615 = 0.0, $14616 = 0.0, $14617 = 0.0, $14618 = 0.0, $14619 = 0.0, $1462 = 0.0, $14620 = 0.0;
 var $14621 = 0.0, $14622 = 0.0, $14623 = 0.0, $14624 = 0.0, $14625 = 0.0, $14626 = 0.0, $14627 = 0, $14628 = 0, $14629 = 0.0, $1463 = 0.0, $14630 = 0.0, $14631 = 0.0, $14632 = 0.0, $14633 = 0.0, $14634 = 0.0, $14635 = 0.0, $14636 = 0, $14637 = 0, $14638 = 0.0, $14639 = 0.0;
 var $1464 = 0.0, $14640 = 0.0, $14641 = 0.0, $14642 = 0.0, $14643 = 0.0, $14644 = 0.0, $14645 = 0, $14646 = 0.0, $14647 = 0, $14648 = 0.0, $14649 = 0.0, $1465 = 0.0, $14650 = 0.0, $14651 = 0.0, $14652 = 0.0, $14653 = 0.0, $14654 = 0.0, $14655 = 0.0, $14656 = 0.0, $14657 = 0.0;
 var $14658 = 0.0, $14659 = 0.0, $1466 = 0.0, $14660 = 0.0, $14661 = 0.0, $14662 = 0.0, $14663 = 0.0, $14664 = 0.0, $14665 = 0.0, $14666 = 0.0, $14667 = 0.0, $14668 = 0.0, $14669 = 0.0, $1467 = 0.0, $14670 = 0.0, $14671 = 0.0, $14672 = 0.0, $14673 = 0.0, $14674 = 0.0, $14675 = 0.0;
 var $14676 = 0.0, $14677 = 0.0, $14678 = 0.0, $14679 = 0.0, $1468 = 0.0, $14680 = 0.0, $14681 = 0, $14682 = 0.0, $14683 = 0.0, $14684 = 0.0, $14685 = 0.0, $14686 = 0.0, $14687 = 0.0, $14688 = 0.0, $14689 = 0.0, $1469 = 0.0, $14690 = 0.0, $14691 = 0.0, $14692 = 0, $14693 = 0.0;
 var $14694 = 0, $14695 = 0.0, $14696 = 0.0, $14697 = 0.0, $14698 = 0.0, $14699 = 0.0, $147 = 0, $1470 = 0.0, $14700 = 0.0, $14701 = 0.0, $14702 = 0.0, $14703 = 0.0, $14704 = 0.0, $14705 = 0.0, $14706 = 0.0, $14707 = 0.0, $14708 = 0.0, $14709 = 0.0, $1471 = 0.0, $14710 = 0.0;
 var $14711 = 0.0, $14712 = 0.0, $14713 = 0.0, $14714 = 0, $14715 = 0, $14716 = 0.0, $14717 = 0.0, $14718 = 0.0, $14719 = 0.0, $1472 = 0.0, $14720 = 0.0, $14721 = 0, $14722 = 0, $14723 = 0.0, $14724 = 0.0, $14725 = 0.0, $14726 = 0.0, $14727 = 0.0, $14728 = 0.0, $14729 = 0.0;
 var $1473 = 0.0, $14730 = 0, $14731 = 0.0, $14732 = 0, $14733 = 0.0, $14734 = 0.0, $14735 = 0.0, $14736 = 0.0, $14737 = 0.0, $14738 = 0.0, $14739 = 0.0, $1474 = 0.0, $14740 = 0.0, $14741 = 0.0, $14742 = 0.0, $14743 = 0.0, $14744 = 0.0, $14745 = 0.0, $14746 = 0.0, $14747 = 0.0;
 var $14748 = 0.0, $14749 = 0.0, $1475 = 0.0, $14750 = 0.0, $14751 = 0.0, $14752 = 0.0, $14753 = 0.0, $14754 = 0.0, $14755 = 0.0, $14756 = 0.0, $14757 = 0.0, $14758 = 0.0, $14759 = 0.0, $1476 = 0.0, $14760 = 0.0, $14761 = 0.0, $14762 = 0.0, $14763 = 0.0, $14764 = 0.0, $14765 = 0.0;
 var $14766 = 0, $14767 = 0.0, $14768 = 0.0, $14769 = 0.0, $1477 = 0.0, $14770 = 0.0, $14771 = 0.0, $14772 = 0.0, $14773 = 0.0, $14774 = 0.0, $14775 = 0.0, $14776 = 0.0, $14777 = 0, $14778 = 0.0, $14779 = 0, $1478 = 0.0, $14780 = 0.0, $14781 = 0.0, $14782 = 0.0, $14783 = 0.0;
 var $14784 = 0.0, $14785 = 0.0, $14786 = 0.0, $14787 = 0.0, $14788 = 0, $14789 = 0.0, $1479 = 0.0, $14790 = 0.0, $14791 = 0.0, $14792 = 0.0, $14793 = 0.0, $14794 = 0.0, $14795 = 0.0, $14796 = 0.0, $14797 = 0.0, $14798 = 0, $14799 = 0.0, $148 = 0, $1480 = 0.0, $14800 = 0;
 var $14801 = 0.0, $14802 = 0.0, $14803 = 0.0, $14804 = 0.0, $14805 = 0.0, $14806 = 0.0, $14807 = 0.0, $14808 = 0.0, $14809 = 0.0, $1481 = 0.0, $14810 = 0.0, $14811 = 0.0, $14812 = 0.0, $14813 = 0.0, $14814 = 0.0, $14815 = 0, $14816 = 0.0, $14817 = 0.0, $14818 = 0.0, $14819 = 0.0;
 var $1482 = 0.0, $14820 = 0.0, $14821 = 0.0, $14822 = 0.0, $14823 = 0.0, $14824 = 0.0, $14825 = 0.0, $14826 = 0.0, $14827 = 0.0, $14828 = 0.0, $14829 = 0.0, $1483 = 0.0, $14830 = 0.0, $14831 = 0.0, $14832 = 0.0, $14833 = 0.0, $14834 = 0.0, $14835 = 0.0, $14836 = 0, $14837 = 0.0;
 var $14838 = 0, $14839 = 0.0, $1484 = 0.0, $14840 = 0.0, $14841 = 0.0, $14842 = 0.0, $14843 = 0.0, $14844 = 0, $14845 = 0.0, $14846 = 0.0, $14847 = 0.0, $14848 = 0.0, $14849 = 0.0, $1485 = 0.0, $14850 = 0, $14851 = 0.0, $14852 = 0.0, $14853 = 0.0, $14854 = 0.0, $14855 = 0.0;
 var $14856 = 0.0, $14857 = 0.0, $14858 = 0.0, $14859 = 0.0, $1486 = 0.0, $14860 = 0.0, $14861 = 0.0, $14862 = 0.0, $14863 = 0.0, $14864 = 0.0, $14865 = 0.0, $14866 = 0.0, $14867 = 0.0, $14868 = 0.0, $14869 = 0.0, $1487 = 0.0, $14870 = 0.0, $14871 = 0.0, $14872 = 0.0, $14873 = 0.0;
 var $14874 = 0.0, $14875 = 0.0, $14876 = 0.0, $14877 = 0.0, $14878 = 0.0, $14879 = 0.0, $1488 = 0.0, $14880 = 0.0, $14881 = 0.0, $14882 = 0.0, $14883 = 0.0, $14884 = 0.0, $14885 = 0.0, $14886 = 0.0, $14887 = 0.0, $14888 = 0.0, $14889 = 0.0, $1489 = 0.0, $14890 = 0, $14891 = 0;
 var $14892 = 0.0, $14893 = 0.0, $14894 = 0.0, $14895 = 0.0, $14896 = 0.0, $14897 = 0.0, $14898 = 0.0, $14899 = 0, $149 = 0, $1490 = 0.0, $14900 = 0, $14901 = 0.0, $14902 = 0.0, $14903 = 0.0, $14904 = 0.0, $14905 = 0.0, $14906 = 0.0, $14907 = 0.0, $14908 = 0, $14909 = 0.0;
 var $1491 = 0.0, $14910 = 0, $14911 = 0.0, $14912 = 0.0, $14913 = 0.0, $14914 = 0.0, $14915 = 0.0, $14916 = 0.0, $14917 = 0.0, $14918 = 0.0, $14919 = 0.0, $1492 = 0.0, $14920 = 0.0, $14921 = 0.0, $14922 = 0.0, $14923 = 0.0, $14924 = 0.0, $14925 = 0.0, $14926 = 0.0, $14927 = 0.0;
 var $14928 = 0.0, $14929 = 0.0, $1493 = 0.0, $14930 = 0.0, $14931 = 0.0, $14932 = 0.0, $14933 = 0.0, $14934 = 0.0, $14935 = 0.0, $14936 = 0.0, $14937 = 0.0, $14938 = 0.0, $14939 = 0.0, $1494 = 0.0, $14940 = 0.0, $14941 = 0.0, $14942 = 0.0, $14943 = 0.0, $14944 = 0.0, $14945 = 0.0;
 var $14946 = 0.0, $14947 = 0.0, $14948 = 0.0, $14949 = 0, $1495 = 0.0, $14950 = 0.0, $14951 = 0.0, $14952 = 0.0, $14953 = 0.0, $14954 = 0.0, $14955 = 0.0, $14956 = 0.0, $14957 = 0.0, $14958 = 0, $14959 = 0.0, $1496 = 0.0, $14960 = 0, $14961 = 0.0, $14962 = 0.0, $14963 = 0.0;
 var $14964 = 0.0, $14965 = 0.0, $14966 = 0.0, $14967 = 0.0, $14968 = 0.0, $14969 = 0.0, $1497 = 0.0, $14970 = 0.0, $14971 = 0.0, $14972 = 0.0, $14973 = 0.0, $14974 = 0.0, $14975 = 0.0, $14976 = 0.0, $14977 = 0.0, $14978 = 0.0, $14979 = 0.0, $1498 = 0.0, $14980 = 0.0, $14981 = 0.0;
 var $14982 = 0.0, $14983 = 0.0, $14984 = 0.0, $14985 = 0.0, $14986 = 0.0, $14987 = 0.0, $14988 = 0.0, $14989 = 0.0, $1499 = 0.0, $14990 = 0.0, $14991 = 0.0, $14992 = 0, $14993 = 0, $14994 = 0.0, $14995 = 0.0, $14996 = 0.0, $14997 = 0.0, $14998 = 0.0, $14999 = 0, $15 = 0;
 var $150 = 0, $1500 = 0.0, $15000 = 0, $15001 = 0.0, $15002 = 0.0, $15003 = 0.0, $15004 = 0.0, $15005 = 0.0, $15006 = 0.0, $15007 = 0.0, $15008 = 0, $15009 = 0.0, $1501 = 0.0, $15010 = 0, $15011 = 0.0, $15012 = 0.0, $15013 = 0.0, $15014 = 0.0, $15015 = 0.0, $15016 = 0.0;
 var $15017 = 0.0, $15018 = 0.0, $15019 = 0.0, $1502 = 0, $15020 = 0.0, $15021 = 0.0, $15022 = 0.0, $15023 = 0.0, $15024 = 0.0, $15025 = 0.0, $15026 = 0.0, $15027 = 0.0, $15028 = 0.0, $15029 = 0.0, $1503 = 0.0, $15030 = 0.0, $15031 = 0.0, $15032 = 0.0, $15033 = 0.0, $15034 = 0.0;
 var $15035 = 0.0, $15036 = 0.0, $15037 = 0.0, $15038 = 0.0, $15039 = 0.0, $1504 = 0.0, $15040 = 0.0, $15041 = 0.0, $15042 = 0.0, $15043 = 0.0, $15044 = 0.0, $15045 = 0.0, $15046 = 0.0, $15047 = 0.0, $15048 = 0.0, $15049 = 0, $1505 = 0.0, $15050 = 0.0, $15051 = 0.0, $15052 = 0.0;
 var $15053 = 0.0, $15054 = 0.0, $15055 = 0.0, $15056 = 0.0, $15057 = 0.0, $15058 = 0, $15059 = 0.0, $1506 = 0.0, $15060 = 0, $15061 = 0.0, $15062 = 0.0, $15063 = 0.0, $15064 = 0.0, $15065 = 0.0, $15066 = 0.0, $15067 = 0.0, $15068 = 0.0, $15069 = 0, $1507 = 0.0, $15070 = 0.0;
 var $15071 = 0.0, $15072 = 0.0, $15073 = 0.0, $15074 = 0.0, $15075 = 0.0, $15076 = 0.0, $15077 = 0.0, $15078 = 0.0, $15079 = 0, $1508 = 0.0, $15080 = 0.0, $15081 = 0, $15082 = 0.0, $15083 = 0.0, $15084 = 0.0, $15085 = 0.0, $15086 = 0.0, $15087 = 0.0, $15088 = 0.0, $15089 = 0.0;
 var $1509 = 0.0, $15090 = 0.0, $15091 = 0.0, $15092 = 0.0, $15093 = 0.0, $15094 = 0.0, $15095 = 0.0, $15096 = 0, $15097 = 0.0, $15098 = 0.0, $15099 = 0.0, $151 = 0, $1510 = 0.0, $15100 = 0.0, $15101 = 0.0, $15102 = 0.0, $15103 = 0.0, $15104 = 0.0, $15105 = 0.0, $15106 = 0.0;
 var $15107 = 0.0, $15108 = 0.0, $15109 = 0.0, $1511 = 0.0, $15110 = 0.0, $15111 = 0.0, $15112 = 0.0, $15113 = 0.0, $15114 = 0.0, $15115 = 0.0, $15116 = 0.0, $15117 = 0, $15118 = 0.0, $15119 = 0, $1512 = 0.0, $15120 = 0.0, $15121 = 0.0, $15122 = 0.0, $15123 = 0.0, $15124 = 0.0;
 var $15125 = 0, $15126 = 0.0, $15127 = 0.0, $15128 = 0.0, $15129 = 0.0, $1513 = 0.0, $15130 = 0.0, $15131 = 0, $15132 = 0.0, $15133 = 0.0, $15134 = 0.0, $15135 = 0.0, $15136 = 0.0, $15137 = 0.0, $15138 = 0.0, $15139 = 0.0, $1514 = 0.0, $15140 = 0.0, $15141 = 0.0, $15142 = 0.0;
 var $15143 = 0.0, $15144 = 0.0, $15145 = 0.0, $15146 = 0.0, $15147 = 0.0, $15148 = 0.0, $15149 = 0.0, $1515 = 0.0, $15150 = 0.0, $15151 = 0.0, $15152 = 0.0, $15153 = 0.0, $15154 = 0.0, $15155 = 0.0, $15156 = 0.0, $15157 = 0.0, $15158 = 0.0, $15159 = 0.0, $1516 = 0.0, $15160 = 0.0;
 var $15161 = 0.0, $15162 = 0.0, $15163 = 0.0, $15164 = 0.0, $15165 = 0.0, $15166 = 0.0, $15167 = 0.0, $15168 = 0.0, $15169 = 0.0, $1517 = 0.0, $15170 = 0.0, $15171 = 0.0, $15172 = 0, $15173 = 0, $15174 = 0.0, $15175 = 0.0, $15176 = 0.0, $15177 = 0.0, $15178 = 0.0, $15179 = 0.0;
 var $1518 = 0.0, $15180 = 0.0, $15181 = 0, $15182 = 0, $15183 = 0.0, $15184 = 0.0, $15185 = 0.0, $15186 = 0.0, $15187 = 0.0, $15188 = 0.0, $15189 = 0.0, $1519 = 0.0, $15190 = 0, $15191 = 0.0, $15192 = 0, $15193 = 0.0, $15194 = 0.0, $15195 = 0.0, $15196 = 0.0, $15197 = 0.0;
 var $15198 = 0.0, $15199 = 0.0, $152 = 0, $1520 = 0.0, $15200 = 0.0, $15201 = 0.0, $15202 = 0.0, $15203 = 0.0, $15204 = 0.0, $15205 = 0.0, $15206 = 0.0, $15207 = 0.0, $15208 = 0.0, $15209 = 0.0, $1521 = 0.0, $15210 = 0.0, $15211 = 0.0, $15212 = 0.0, $15213 = 0.0, $15214 = 0.0;
 var $15215 = 0.0, $15216 = 0.0, $15217 = 0.0, $15218 = 0.0, $15219 = 0.0, $1522 = 0.0, $15220 = 0.0, $15221 = 0.0, $15222 = 0.0, $15223 = 0.0, $15224 = 0.0, $15225 = 0.0, $15226 = 0.0, $15227 = 0.0, $15228 = 0.0, $15229 = 0.0, $1523 = 0.0, $15230 = 0, $15231 = 0.0, $15232 = 0.0;
 var $15233 = 0.0, $15234 = 0.0, $15235 = 0.0, $15236 = 0.0, $15237 = 0.0, $15238 = 0.0, $15239 = 0, $1524 = 0.0, $15240 = 0.0, $15241 = 0, $15242 = 0.0, $15243 = 0.0, $15244 = 0.0, $15245 = 0.0, $15246 = 0.0, $15247 = 0.0, $15248 = 0.0, $15249 = 0.0, $1525 = 0.0, $15250 = 0.0;
 var $15251 = 0.0, $15252 = 0.0, $15253 = 0.0, $15254 = 0.0, $15255 = 0, $15256 = 0, $15257 = 0.0, $15258 = 0.0, $15259 = 0.0, $1526 = 0.0, $15260 = 0.0, $15261 = 0.0, $15262 = 0.0, $15263 = 0.0, $15264 = 0.0, $15265 = 0.0, $15266 = 0.0, $15267 = 0.0, $15268 = 0.0, $15269 = 0.0;
 var $1527 = 0.0, $15270 = 0.0, $15271 = 0.0, $15272 = 0.0, $15273 = 0.0, $15274 = 0.0, $15275 = 0.0, $15276 = 0.0, $15277 = 0.0, $15278 = 0.0, $15279 = 0.0, $1528 = 0.0, $15280 = 0.0, $15281 = 0.0, $15282 = 0, $15283 = 0, $15284 = 0.0, $15285 = 0.0, $15286 = 0.0, $15287 = 0.0;
 var $15288 = 0.0, $15289 = 0.0, $1529 = 0.0, $15290 = 0.0, $15291 = 0, $15292 = 0.0, $15293 = 0, $15294 = 0.0, $15295 = 0.0, $15296 = 0.0, $15297 = 0.0, $15298 = 0.0, $15299 = 0.0, $153 = 0, $1530 = 0.0, $15300 = 0.0, $15301 = 0.0, $15302 = 0.0, $15303 = 0.0, $15304 = 0.0;
 var $15305 = 0.0, $15306 = 0.0, $15307 = 0.0, $15308 = 0.0, $15309 = 0.0, $1531 = 0.0, $15310 = 0.0, $15311 = 0.0, $15312 = 0.0, $15313 = 0.0, $15314 = 0.0, $15315 = 0.0, $15316 = 0.0, $15317 = 0.0, $15318 = 0.0, $15319 = 0.0, $1532 = 0.0, $15320 = 0.0, $15321 = 0.0, $15322 = 0.0;
 var $15323 = 0.0, $15324 = 0.0, $15325 = 0.0, $15326 = 0.0, $15327 = 0.0, $15328 = 0.0, $15329 = 0.0, $1533 = 0.0, $15330 = 0.0, $15331 = 0, $15332 = 0.0, $15333 = 0.0, $15334 = 0.0, $15335 = 0.0, $15336 = 0.0, $15337 = 0.0, $15338 = 0.0, $15339 = 0.0, $1534 = 0.0, $15340 = 0;
 var $15341 = 0.0, $15342 = 0, $15343 = 0.0, $15344 = 0.0, $15345 = 0.0, $15346 = 0.0, $15347 = 0.0, $15348 = 0.0, $15349 = 0.0, $1535 = 0.0, $15350 = 0.0, $15351 = 0.0, $15352 = 0.0, $15353 = 0.0, $15354 = 0.0, $15355 = 0.0, $15356 = 0.0, $15357 = 0.0, $15358 = 0.0, $15359 = 0.0;
 var $1536 = 0.0, $15360 = 0.0, $15361 = 0.0, $15362 = 0.0, $15363 = 0.0, $15364 = 0.0, $15365 = 0.0, $15366 = 0.0, $15367 = 0.0, $15368 = 0.0, $15369 = 0.0, $1537 = 0.0, $15370 = 0.0, $15371 = 0.0, $15372 = 0.0, $15373 = 0.0, $15374 = 0.0, $15375 = 0.0, $15376 = 0.0, $15377 = 0.0;
 var $15378 = 0.0, $15379 = 0, $1538 = 0.0, $15380 = 0, $15381 = 0.0, $15382 = 0.0, $15383 = 0.0, $15384 = 0.0, $15385 = 0.0, $15386 = 0.0, $15387 = 0.0, $15388 = 0.0, $15389 = 0.0, $1539 = 0.0, $15390 = 0.0, $15391 = 0.0, $15392 = 0.0, $15393 = 0.0, $15394 = 0.0, $15395 = 0;
 var $15396 = 0, $15397 = 0.0, $15398 = 0.0, $15399 = 0.0, $154 = 0, $1540 = 0.0, $15400 = 0.0, $15401 = 0.0, $15402 = 0.0, $15403 = 0.0, $15404 = 0, $15405 = 0.0, $15406 = 0, $15407 = 0.0, $15408 = 0.0, $15409 = 0.0, $1541 = 0.0, $15410 = 0.0, $15411 = 0.0, $15412 = 0.0;
 var $15413 = 0.0, $15414 = 0.0, $15415 = 0.0, $15416 = 0.0, $15417 = 0.0, $15418 = 0.0, $15419 = 0.0, $1542 = 0.0, $15420 = 0.0, $15421 = 0.0, $15422 = 0.0, $15423 = 0.0, $15424 = 0.0, $15425 = 0.0, $15426 = 0.0, $15427 = 0.0, $15428 = 0.0, $15429 = 0.0, $1543 = 0.0, $15430 = 0.0;
 var $15431 = 0.0, $15432 = 0.0, $15433 = 0.0, $15434 = 0.0, $15435 = 0.0, $15436 = 0.0, $15437 = 0.0, $15438 = 0.0, $15439 = 0.0, $1544 = 0.0, $15440 = 0.0, $15441 = 0.0, $15442 = 0.0, $15443 = 0.0, $15444 = 0.0, $15445 = 0.0, $15446 = 0.0, $15447 = 0.0, $15448 = 0.0, $15449 = 0.0;
 var $1545 = 0.0, $15450 = 0.0, $15451 = 0.0, $15452 = 0.0, $15453 = 0.0, $15454 = 0.0, $15455 = 0.0, $15456 = 0.0, $15457 = 0.0, $15458 = 0.0, $15459 = 0.0, $1546 = 0.0, $15460 = 0.0, $15461 = 0.0, $15462 = 0.0, $15463 = 0.0, $15464 = 0.0, $15465 = 0.0, $15466 = 0.0, $15467 = 0.0;
 var $15468 = 0.0, $15469 = 0.0, $1547 = 0.0, $15470 = 0.0, $15471 = 0.0, $15472 = 0.0, $15473 = 0.0, $15474 = 0.0, $15475 = 0.0, $15476 = 0.0, $15477 = 0.0, $15478 = 0.0, $15479 = 0.0, $1548 = 0.0, $15480 = 0.0, $15481 = 0.0, $15482 = 0.0, $15483 = 0.0, $15484 = 0.0, $15485 = 0.0;
 var $15486 = 0, $15487 = 0.0, $15488 = 0.0, $15489 = 0.0, $1549 = 0.0, $15490 = 0.0, $15491 = 0.0, $15492 = 0.0, $15493 = 0.0, $15494 = 0.0, $15495 = 0.0, $15496 = 0.0, $15497 = 0, $15498 = 0.0, $15499 = 0, $155 = 0, $1550 = 0.0, $15500 = 0.0, $15501 = 0, $15502 = 0.0;
 var $15503 = 0, $15504 = 0.0, $15505 = 0.0, $15506 = 0.0, $15507 = 0.0, $15508 = 0.0, $15509 = 0.0, $1551 = 0, $15510 = 0.0, $15511 = 0.0, $15512 = 0.0, $15513 = 0.0, $15514 = 0.0, $15515 = 0.0, $15516 = 0.0, $15517 = 0.0, $15518 = 0.0, $15519 = 0.0, $1552 = 0.0, $15520 = 0.0;
 var $15521 = 0.0, $15522 = 0.0, $15523 = 0.0, $15524 = 0.0, $15525 = 0.0, $15526 = 0.0, $15527 = 0.0, $15528 = 0.0, $15529 = 0.0, $1553 = 0.0, $15530 = 0.0, $15531 = 0.0, $15532 = 0.0, $15533 = 0.0, $15534 = 0.0, $15535 = 0.0, $15536 = 0.0, $15537 = 0.0, $15538 = 0.0, $15539 = 0.0;
 var $1554 = 0.0, $15540 = 0, $15541 = 0, $15542 = 0.0, $15543 = 0.0, $15544 = 0.0, $15545 = 0.0, $15546 = 0.0, $15547 = 0.0, $15548 = 0.0, $15549 = 0, $1555 = 0.0, $15550 = 0, $15551 = 0.0, $15552 = 0.0, $15553 = 0.0, $15554 = 0.0, $15555 = 0.0, $15556 = 0.0, $15557 = 0.0;
 var $15558 = 0, $15559 = 0.0, $1556 = 0.0, $15560 = 0, $15561 = 0.0, $15562 = 0.0, $15563 = 0.0, $15564 = 0.0, $15565 = 0.0, $15566 = 0.0, $15567 = 0.0, $15568 = 0.0, $15569 = 0.0, $1557 = 0.0, $15570 = 0.0, $15571 = 0.0, $15572 = 0.0, $15573 = 0.0, $15574 = 0.0, $15575 = 0.0;
 var $15576 = 0.0, $15577 = 0.0, $15578 = 0.0, $15579 = 0.0, $1558 = 0.0, $15580 = 0.0, $15581 = 0.0, $15582 = 0.0, $15583 = 0.0, $15584 = 0.0, $15585 = 0.0, $15586 = 0.0, $15587 = 0.0, $15588 = 0.0, $15589 = 0.0, $1559 = 0.0, $15590 = 0.0, $15591 = 0.0, $15592 = 0.0, $15593 = 0.0;
 var $15594 = 0.0, $15595 = 0.0, $15596 = 0.0, $15597 = 0.0, $15598 = 0.0, $15599 = 0.0, $156 = 0, $1560 = 0, $15600 = 0.0, $15601 = 0.0, $15602 = 0.0, $15603 = 0.0, $15604 = 0.0, $15605 = 0.0, $15606 = 0.0, $15607 = 0.0, $15608 = 0.0, $15609 = 0.0, $1561 = 0.0, $15610 = 0.0;
 var $15611 = 0.0, $15612 = 0.0, $15613 = 0.0, $15614 = 0.0, $15615 = 0.0, $15616 = 0.0, $15617 = 0.0, $15618 = 0.0, $15619 = 0.0, $1562 = 0, $15620 = 0.0, $15621 = 0.0, $15622 = 0.0, $15623 = 0.0, $15624 = 0.0, $15625 = 0.0, $15626 = 0.0, $15627 = 0.0, $15628 = 0.0, $15629 = 0.0;
 var $1563 = 0, $15630 = 0.0, $15631 = 0.0, $15632 = 0.0, $15633 = 0.0, $15634 = 0.0, $15635 = 0.0, $15636 = 0.0, $15637 = 0.0, $15638 = 0.0, $15639 = 0.0, $1564 = 0.0, $15640 = 0, $15641 = 0.0, $15642 = 0.0, $15643 = 0.0, $15644 = 0.0, $15645 = 0.0, $15646 = 0.0, $15647 = 0.0;
 var $15648 = 0.0, $15649 = 0.0, $1565 = 0.0, $15650 = 0.0, $15651 = 0, $15652 = 0.0, $15653 = 0, $15654 = 0.0, $15655 = 0, $15656 = 0.0, $15657 = 0, $15658 = 0.0, $15659 = 0.0, $1566 = 0.0, $15660 = 0.0, $15661 = 0.0, $15662 = 0.0, $15663 = 0.0, $15664 = 0.0, $15665 = 0.0;
 var $15666 = 0.0, $15667 = 0.0, $15668 = 0.0, $15669 = 0.0, $1567 = 0.0, $15670 = 0.0, $15671 = 0.0, $15672 = 0.0, $15673 = 0.0, $15674 = 0.0, $15675 = 0.0, $15676 = 0.0, $15677 = 0.0, $15678 = 0.0, $15679 = 0.0, $1568 = 0.0, $15680 = 0.0, $15681 = 0.0, $15682 = 0.0, $15683 = 0.0;
 var $15684 = 0.0, $15685 = 0.0, $15686 = 0.0, $15687 = 0.0, $15688 = 0.0, $15689 = 0, $1569 = 0.0, $15690 = 0, $15691 = 0.0, $15692 = 0.0, $15693 = 0.0, $15694 = 0.0, $15695 = 0.0, $15696 = 0.0, $15697 = 0.0, $15698 = 0, $15699 = 0, $157 = 0, $1570 = 0.0, $15700 = 0.0;
 var $15701 = 0.0, $15702 = 0.0, $15703 = 0.0, $15704 = 0.0, $15705 = 0.0, $15706 = 0.0, $15707 = 0, $15708 = 0.0, $15709 = 0, $1571 = 0.0, $15710 = 0.0, $15711 = 0.0, $15712 = 0.0, $15713 = 0.0, $15714 = 0.0, $15715 = 0.0, $15716 = 0.0, $15717 = 0.0, $15718 = 0.0, $15719 = 0.0;
 var $1572 = 0.0, $15720 = 0.0, $15721 = 0.0, $15722 = 0.0, $15723 = 0.0, $15724 = 0.0, $15725 = 0.0, $15726 = 0.0, $15727 = 0.0, $15728 = 0.0, $15729 = 0.0, $1573 = 0.0, $15730 = 0.0, $15731 = 0.0, $15732 = 0.0, $15733 = 0.0, $15734 = 0.0, $15735 = 0.0, $15736 = 0.0, $15737 = 0.0;
 var $15738 = 0.0, $15739 = 0.0, $1574 = 0, $15740 = 0.0, $15741 = 0.0, $15742 = 0.0, $15743 = 0.0, $15744 = 0.0, $15745 = 0.0, $15746 = 0.0, $15747 = 0.0, $15748 = 0.0, $15749 = 0.0, $1575 = 0, $15750 = 0.0, $15751 = 0.0, $15752 = 0.0, $15753 = 0.0, $15754 = 0.0, $15755 = 0.0;
 var $15756 = 0.0, $15757 = 0.0, $15758 = 0.0, $15759 = 0.0, $1576 = 0.0, $15760 = 0.0, $15761 = 0.0, $15762 = 0.0, $15763 = 0.0, $15764 = 0.0, $15765 = 0.0, $15766 = 0.0, $15767 = 0.0, $15768 = 0.0, $15769 = 0.0, $1577 = 0.0, $15770 = 0.0, $15771 = 0.0, $15772 = 0.0, $15773 = 0.0;
 var $15774 = 0.0, $15775 = 0.0, $15776 = 0.0, $15777 = 0.0, $15778 = 0.0, $15779 = 0.0, $1578 = 0.0, $15780 = 0.0, $15781 = 0.0, $15782 = 0.0, $15783 = 0.0, $15784 = 0.0, $15785 = 0.0, $15786 = 0.0, $15787 = 0.0, $15788 = 0.0, $15789 = 0, $1579 = 0.0, $15790 = 0.0, $15791 = 0.0;
 var $15792 = 0.0, $15793 = 0.0, $15794 = 0.0, $15795 = 0.0, $15796 = 0.0, $15797 = 0.0, $15798 = 0.0, $15799 = 0.0, $158 = 0, $1580 = 0.0, $15800 = 0, $15801 = 0.0, $15802 = 0, $15803 = 0.0, $15804 = 0, $15805 = 0.0, $15806 = 0, $15807 = 0.0, $15808 = 0.0, $15809 = 0.0;
 var $1581 = 0.0, $15810 = 0.0, $15811 = 0.0, $15812 = 0.0, $15813 = 0.0, $15814 = 0.0, $15815 = 0.0, $15816 = 0.0, $15817 = 0.0, $15818 = 0.0, $15819 = 0.0, $1582 = 0.0, $15820 = 0.0, $15821 = 0, $15822 = 0.0, $15823 = 0.0, $15824 = 0.0, $15825 = 0.0, $15826 = 0.0, $15827 = 0.0;
 var $15828 = 0.0, $15829 = 0, $1583 = 0.0, $15830 = 0.0, $15831 = 0, $15832 = 0.0, $15833 = 0.0, $15834 = 0.0, $15835 = 0.0, $15836 = 0.0, $15837 = 0, $15838 = 0.0, $15839 = 0.0, $1584 = 0.0, $15840 = 0, $15841 = 0.0, $15842 = 0.0, $15843 = 0.0, $15844 = 0.0, $15845 = 0.0;
 var $15846 = 0.0, $15847 = 0.0, $15848 = 0.0, $15849 = 0, $1585 = 0.0, $15850 = 0.0, $15851 = 0.0, $15852 = 0, $15853 = 0.0, $15854 = 0.0, $15855 = 0.0, $15856 = 0.0, $15857 = 0.0, $15858 = 0.0, $15859 = 0.0, $1586 = 0.0, $15860 = 0.0, $15861 = 0, $15862 = 0.0, $15863 = 0.0;
 var $15864 = 0, $15865 = 0.0, $15866 = 0.0, $15867 = 0.0, $15868 = 0.0, $15869 = 0.0, $1587 = 0.0, $15870 = 0.0, $15871 = 0, $15872 = 0.0, $15873 = 0.0, $15874 = 0.0, $15875 = 0.0, $15876 = 0.0, $15877 = 0.0, $15878 = 0.0, $15879 = 0.0, $1588 = 0.0, $15880 = 0.0, $15881 = 0;
 var $15882 = 0.0, $15883 = 0.0, $15884 = 0.0, $15885 = 0.0, $15886 = 0.0, $15887 = 0.0, $15888 = 0.0, $15889 = 0.0, $1589 = 0.0, $15890 = 0.0, $15891 = 0.0, $15892 = 0.0, $15893 = 0.0, $15894 = 0.0, $15895 = 0.0, $15896 = 0.0, $15897 = 0.0, $15898 = 0, $15899 = 0.0, $159 = 0;
 var $1590 = 0.0, $15900 = 0.0, $15901 = 0.0, $15902 = 0.0, $15903 = 0.0, $15904 = 0.0, $15905 = 0.0, $15906 = 0.0, $15907 = 0.0, $15908 = 0.0, $15909 = 0.0, $1591 = 0.0, $15910 = 0.0, $15911 = 0.0, $15912 = 0.0, $15913 = 0.0, $15914 = 0.0, $15915 = 0.0, $15916 = 0.0, $15917 = 0.0;
 var $15918 = 0.0, $15919 = 0, $1592 = 0.0, $15920 = 0.0, $15921 = 0, $15922 = 0.0, $15923 = 0.0, $15924 = 0.0, $15925 = 0.0, $15926 = 0.0, $15927 = 0.0, $15928 = 0.0, $15929 = 0.0, $1593 = 0.0, $15930 = 0.0, $15931 = 0.0, $15932 = 0.0, $15933 = 0.0, $15934 = 0.0, $15935 = 0.0;
 var $15936 = 0.0, $15937 = 0.0, $15938 = 0.0, $15939 = 0.0, $1594 = 0.0, $15940 = 0.0, $15941 = 0.0, $15942 = 0.0, $15943 = 0.0, $15944 = 0.0, $15945 = 0.0, $15946 = 0.0, $15947 = 0.0, $15948 = 0.0, $15949 = 0.0, $1595 = 0.0, $15950 = 0.0, $15951 = 0.0, $15952 = 0.0, $15953 = 0.0;
 var $15954 = 0.0, $15955 = 0, $15956 = 0.0, $15957 = 0.0, $15958 = 0.0, $15959 = 0.0, $1596 = 0.0, $15960 = 0.0, $15961 = 0, $15962 = 0.0, $15963 = 0, $15964 = 0.0, $15965 = 0.0, $15966 = 0.0, $15967 = 0.0, $15968 = 0.0, $15969 = 0.0, $1597 = 0.0, $15970 = 0.0, $15971 = 0.0;
 var $15972 = 0, $15973 = 0.0, $15974 = 0.0, $15975 = 0.0, $15976 = 0, $15977 = 0.0, $15978 = 0, $15979 = 0.0, $1598 = 0.0, $15980 = 0.0, $15981 = 0.0, $15982 = 0.0, $15983 = 0.0, $15984 = 0, $15985 = 0.0, $15986 = 0.0, $15987 = 0.0, $15988 = 0.0, $15989 = 0.0, $1599 = 0.0;
 var $15990 = 0.0, $15991 = 0, $15992 = 0, $15993 = 0.0, $15994 = 0.0, $15995 = 0.0, $15996 = 0.0, $15997 = 0.0, $15998 = 0.0, $15999 = 0.0, $16 = 0, $160 = 0, $1600 = 0.0, $16000 = 0.0, $16001 = 0.0, $16002 = 0, $16003 = 0.0, $16004 = 0, $16005 = 0.0, $16006 = 0.0;
 var $16007 = 0, $16008 = 0.0, $16009 = 0, $1601 = 0, $16010 = 0.0, $16011 = 0, $16012 = 0, $16013 = 0, $16014 = 0, $16015 = 0, $16016 = 0, $16017 = 0, $16018 = 0, $16019 = 0, $1602 = 0.0, $16020 = 0, $16021 = 0.0, $16022 = 0, $16023 = 0.0, $16024 = 0.0;
 var $16025 = 0.0, $16026 = 0, $16027 = 0.0, $16028 = 0, $16029 = 0.0, $1603 = 0.0, $16030 = 0.0, $16031 = 0.0, $16032 = 0, $16033 = 0, $16034 = 0, $16035 = 0.0, $16036 = 0, $16037 = 0.0, $16038 = 0, $16039 = 0.0, $1604 = 0.0, $16040 = 0.0, $16041 = 0.0, $16042 = 0.0;
 var $16043 = 0.0, $16044 = 0.0, $16045 = 0.0, $16046 = 0.0, $16047 = 0.0, $16048 = 0.0, $16049 = 0.0, $1605 = 0.0, $16050 = 0.0, $16051 = 0.0, $16052 = 0.0, $16053 = 0.0, $16054 = 0.0, $16055 = 0.0, $16056 = 0.0, $16057 = 0.0, $16058 = 0, $16059 = 0.0, $1606 = 0.0, $16060 = 0.0;
 var $16061 = 0.0, $16062 = 0.0, $16063 = 0.0, $16064 = 0.0, $16065 = 0.0, $16066 = 0.0, $16067 = 0, $16068 = 0, $16069 = 0.0, $1607 = 0, $16070 = 0.0, $16071 = 0.0, $16072 = 0.0, $16073 = 0.0, $16074 = 0.0, $16075 = 0.0, $16076 = 0.0, $16077 = 0.0, $16078 = 0.0, $16079 = 0.0;
 var $1608 = 0.0, $16080 = 0.0, $16081 = 0.0, $16082 = 0.0, $16083 = 0.0, $16084 = 0.0, $16085 = 0.0, $16086 = 0.0, $16087 = 0.0, $16088 = 0.0, $16089 = 0.0, $1609 = 0.0, $16090 = 0.0, $16091 = 0, $16092 = 0, $16093 = 0.0, $16094 = 0.0, $16095 = 0.0, $16096 = 0.0, $16097 = 0.0;
 var $16098 = 0.0, $16099 = 0.0, $161 = 0, $1610 = 0.0, $16100 = 0, $16101 = 0, $16102 = 0.0, $16103 = 0.0, $16104 = 0.0, $16105 = 0.0, $16106 = 0.0, $16107 = 0.0, $16108 = 0.0, $16109 = 0, $1611 = 0.0, $16110 = 0.0, $16111 = 0, $16112 = 0.0, $16113 = 0.0, $16114 = 0.0;
 var $16115 = 0.0, $16116 = 0.0, $16117 = 0.0, $16118 = 0.0, $16119 = 0.0, $1612 = 0.0, $16120 = 0.0, $16121 = 0.0, $16122 = 0.0, $16123 = 0.0, $16124 = 0.0, $16125 = 0.0, $16126 = 0.0, $16127 = 0.0, $16128 = 0.0, $16129 = 0.0, $1613 = 0.0, $16130 = 0.0, $16131 = 0.0, $16132 = 0.0;
 var $16133 = 0.0, $16134 = 0.0, $16135 = 0.0, $16136 = 0.0, $16137 = 0.0, $16138 = 0.0, $16139 = 0.0, $1614 = 0.0, $16140 = 0.0, $16141 = 0.0, $16142 = 0.0, $16143 = 0.0, $16144 = 0, $16145 = 0.0, $16146 = 0.0, $16147 = 0.0, $16148 = 0.0, $16149 = 0.0, $1615 = 0.0, $16150 = 0.0;
 var $16151 = 0.0, $16152 = 0.0, $16153 = 0.0, $16154 = 0.0, $16155 = 0, $16156 = 0.0, $16157 = 0, $16158 = 0.0, $16159 = 0.0, $1616 = 0.0, $16160 = 0.0, $16161 = 0.0, $16162 = 0.0, $16163 = 0.0, $16164 = 0.0, $16165 = 0.0, $16166 = 0.0, $16167 = 0.0, $16168 = 0.0, $16169 = 0.0;
 var $1617 = 0, $16170 = 0.0, $16171 = 0.0, $16172 = 0.0, $16173 = 0.0, $16174 = 0.0, $16175 = 0.0, $16176 = 0.0, $16177 = 0.0, $16178 = 0.0, $16179 = 0, $1618 = 0.0, $16180 = 0, $16181 = 0.0, $16182 = 0.0, $16183 = 0.0, $16184 = 0.0, $16185 = 0.0, $16186 = 0, $16187 = 0;
 var $16188 = 0.0, $16189 = 0.0, $1619 = 0, $16190 = 0.0, $16191 = 0.0, $16192 = 0.0, $16193 = 0.0, $16194 = 0.0, $16195 = 0, $16196 = 0.0, $16197 = 0, $16198 = 0.0, $16199 = 0.0, $162 = 0, $1620 = 0.0, $16200 = 0.0, $16201 = 0.0, $16202 = 0.0, $16203 = 0.0, $16204 = 0.0;
 var $16205 = 0.0, $16206 = 0.0, $16207 = 0.0, $16208 = 0.0, $16209 = 0.0, $1621 = 0.0, $16210 = 0.0, $16211 = 0.0, $16212 = 0.0, $16213 = 0.0, $16214 = 0.0, $16215 = 0.0, $16216 = 0.0, $16217 = 0.0, $16218 = 0.0, $16219 = 0.0, $1622 = 0.0, $16220 = 0.0, $16221 = 0.0, $16222 = 0.0;
 var $16223 = 0.0, $16224 = 0.0, $16225 = 0.0, $16226 = 0.0, $16227 = 0.0, $16228 = 0.0, $16229 = 0.0, $1623 = 0.0, $16230 = 0, $16231 = 0.0, $16232 = 0.0, $16233 = 0.0, $16234 = 0.0, $16235 = 0.0, $16236 = 0.0, $16237 = 0.0, $16238 = 0.0, $16239 = 0.0, $1624 = 0.0, $16240 = 0.0;
 var $16241 = 0, $16242 = 0.0, $16243 = 0, $16244 = 0.0, $16245 = 0.0, $16246 = 0.0, $16247 = 0.0, $16248 = 0.0, $16249 = 0.0, $1625 = 0.0, $16250 = 0.0, $16251 = 0, $16252 = 0.0, $16253 = 0.0, $16254 = 0.0, $16255 = 0.0, $16256 = 0.0, $16257 = 0.0, $16258 = 0.0, $16259 = 0.0;
 var $1626 = 0.0, $16260 = 0.0, $16261 = 0, $16262 = 0.0, $16263 = 0.0, $16264 = 0.0, $16265 = 0.0, $16266 = 0.0, $16267 = 0.0, $16268 = 0.0, $16269 = 0.0, $1627 = 0.0, $16270 = 0.0, $16271 = 0.0, $16272 = 0.0, $16273 = 0.0, $16274 = 0.0, $16275 = 0.0, $16276 = 0.0, $16277 = 0.0;
 var $16278 = 0, $16279 = 0.0, $1628 = 0.0, $16280 = 0.0, $16281 = 0.0, $16282 = 0.0, $16283 = 0.0, $16284 = 0.0, $16285 = 0.0, $16286 = 0.0, $16287 = 0.0, $16288 = 0.0, $16289 = 0.0, $1629 = 0.0, $16290 = 0.0, $16291 = 0.0, $16292 = 0.0, $16293 = 0.0, $16294 = 0.0, $16295 = 0.0;
 var $16296 = 0.0, $16297 = 0.0, $16298 = 0.0, $16299 = 0, $163 = 0, $1630 = 0.0, $16300 = 0.0, $16301 = 0, $16302 = 0.0, $16303 = 0.0, $16304 = 0.0, $16305 = 0.0, $16306 = 0.0, $16307 = 0.0, $16308 = 0.0, $16309 = 0.0, $1631 = 0, $16310 = 0.0, $16311 = 0.0, $16312 = 0.0;
 var $16313 = 0.0, $16314 = 0.0, $16315 = 0.0, $16316 = 0.0, $16317 = 0.0, $16318 = 0.0, $16319 = 0.0, $1632 = 0, $16320 = 0.0, $16321 = 0.0, $16322 = 0.0, $16323 = 0.0, $16324 = 0.0, $16325 = 0.0, $16326 = 0.0, $16327 = 0.0, $16328 = 0.0, $16329 = 0.0, $1633 = 0.0, $16330 = 0.0;
 var $16331 = 0.0, $16332 = 0.0, $16333 = 0.0, $16334 = 0.0, $16335 = 0, $16336 = 0.0, $16337 = 0.0, $16338 = 0.0, $16339 = 0.0, $1634 = 0.0, $16340 = 0.0, $16341 = 0, $16342 = 0.0, $16343 = 0, $16344 = 0.0, $16345 = 0.0, $16346 = 0.0, $16347 = 0.0, $16348 = 0.0, $16349 = 0.0;
 var $1635 = 0.0, $16350 = 0.0, $16351 = 0.0, $16352 = 0, $16353 = 0.0, $16354 = 0.0, $16355 = 0.0, $16356 = 0, $16357 = 0.0, $16358 = 0, $16359 = 0.0, $1636 = 0.0, $16360 = 0.0, $16361 = 0.0, $16362 = 0.0, $16363 = 0.0, $16364 = 0, $16365 = 0.0, $16366 = 0.0, $16367 = 0.0;
 var $16368 = 0.0, $16369 = 0.0, $1637 = 0.0, $16370 = 0.0, $16371 = 0, $16372 = 0, $16373 = 0.0, $16374 = 0.0, $16375 = 0.0, $16376 = 0.0, $16377 = 0.0, $16378 = 0.0, $16379 = 0.0, $1638 = 0.0, $16380 = 0.0, $16381 = 0.0, $16382 = 0, $16383 = 0.0, $16384 = 0, $16385 = 0.0;
 var $16386 = 0.0, $16387 = 0, $16388 = 0.0, $16389 = 0, $1639 = 0.0, $16390 = 0.0, $16391 = 0, $16392 = 0, $16393 = 0, $16394 = 0, $16395 = 0, $16396 = 0, $16397 = 0, $16398 = 0, $16399 = 0, $164 = 0, $1640 = 0.0, $16400 = 0, $16401 = 0.0, $16402 = 0;
 var $16403 = 0.0, $16404 = 0.0, $16405 = 0.0, $16406 = 0, $16407 = 0.0, $16408 = 0, $16409 = 0.0, $1641 = 0.0, $16410 = 0.0, $16411 = 0.0, $16412 = 0, $16413 = 0, $16414 = 0, $16415 = 0.0, $16416 = 0, $16417 = 0.0, $16418 = 0, $16419 = 0.0, $1642 = 0.0, $16420 = 0.0;
 var $16421 = 0.0, $16422 = 0.0, $16423 = 0.0, $16424 = 0.0, $16425 = 0.0, $16426 = 0.0, $16427 = 0.0, $16428 = 0.0, $16429 = 0.0, $1643 = 0, $16430 = 0.0, $16431 = 0.0, $16432 = 0.0, $16433 = 0.0, $16434 = 0.0, $16435 = 0.0, $16436 = 0.0, $16437 = 0.0, $16438 = 0.0, $16439 = 0;
 var $1644 = 0, $16440 = 0.0, $16441 = 0.0, $16442 = 0.0, $16443 = 0.0, $16444 = 0.0, $16445 = 0.0, $16446 = 0.0, $16447 = 0.0, $16448 = 0, $16449 = 0, $1645 = 0.0, $16450 = 0.0, $16451 = 0.0, $16452 = 0.0, $16453 = 0.0, $16454 = 0.0, $16455 = 0.0, $16456 = 0.0, $16457 = 0.0;
 var $16458 = 0.0, $16459 = 0.0, $1646 = 0.0, $16460 = 0.0, $16461 = 0.0, $16462 = 0.0, $16463 = 0.0, $16464 = 0.0, $16465 = 0.0, $16466 = 0.0, $16467 = 0.0, $16468 = 0, $16469 = 0, $1647 = 0.0, $16470 = 0.0, $16471 = 0.0, $16472 = 0.0, $16473 = 0.0, $16474 = 0.0, $16475 = 0.0;
 var $16476 = 0.0, $16477 = 0, $16478 = 0, $16479 = 0.0, $1648 = 0.0, $16480 = 0.0, $16481 = 0.0, $16482 = 0.0, $16483 = 0.0, $16484 = 0.0, $16485 = 0.0, $16486 = 0, $16487 = 0.0, $16488 = 0, $16489 = 0.0, $1649 = 0.0, $16490 = 0.0, $16491 = 0.0, $16492 = 0.0, $16493 = 0.0;
 var $16494 = 0.0, $16495 = 0.0, $16496 = 0.0, $16497 = 0.0, $16498 = 0.0, $16499 = 0.0, $165 = 0, $1650 = 0, $16500 = 0.0, $16501 = 0.0, $16502 = 0.0, $16503 = 0.0, $16504 = 0.0, $16505 = 0.0, $16506 = 0.0, $16507 = 0.0, $16508 = 0.0, $16509 = 0.0, $1651 = 0.0, $16510 = 0.0;
 var $16511 = 0.0, $16512 = 0.0, $16513 = 0.0, $16514 = 0.0, $16515 = 0.0, $16516 = 0.0, $16517 = 0.0, $16518 = 0.0, $16519 = 0.0, $1652 = 0.0, $16520 = 0.0, $16521 = 0.0, $16522 = 0, $16523 = 0.0, $16524 = 0.0, $16525 = 0.0, $16526 = 0.0, $16527 = 0.0, $16528 = 0.0, $16529 = 0.0;
 var $1653 = 0.0, $16530 = 0.0, $16531 = 0.0, $16532 = 0.0, $16533 = 0, $16534 = 0.0, $16535 = 0, $16536 = 0.0, $16537 = 0.0, $16538 = 0.0, $16539 = 0.0, $1654 = 0, $16540 = 0.0, $16541 = 0.0, $16542 = 0.0, $16543 = 0.0, $16544 = 0.0, $16545 = 0.0, $16546 = 0.0, $16547 = 0.0;
 var $16548 = 0.0, $16549 = 0.0, $1655 = 0, $16550 = 0.0, $16551 = 0.0, $16552 = 0.0, $16553 = 0.0, $16554 = 0.0, $16555 = 0, $16556 = 0, $16557 = 0.0, $16558 = 0.0, $16559 = 0.0, $1656 = 0, $16560 = 0.0, $16561 = 0.0, $16562 = 0, $16563 = 0, $16564 = 0.0, $16565 = 0.0;
 var $16566 = 0.0, $16567 = 0.0, $16568 = 0.0, $16569 = 0.0, $1657 = 0, $16570 = 0.0, $16571 = 0, $16572 = 0.0, $16573 = 0, $16574 = 0.0, $16575 = 0.0, $16576 = 0.0, $16577 = 0.0, $16578 = 0.0, $16579 = 0.0, $1658 = 0, $16580 = 0.0, $16581 = 0.0, $16582 = 0.0, $16583 = 0.0;
 var $16584 = 0.0, $16585 = 0.0, $16586 = 0.0, $16587 = 0.0, $16588 = 0.0, $16589 = 0.0, $1659 = 0, $16590 = 0.0, $16591 = 0.0, $16592 = 0.0, $16593 = 0.0, $16594 = 0.0, $16595 = 0.0, $16596 = 0.0, $16597 = 0.0, $16598 = 0.0, $16599 = 0.0, $166 = 0, $1660 = 0, $16600 = 0.0;
 var $16601 = 0.0, $16602 = 0.0, $16603 = 0.0, $16604 = 0.0, $16605 = 0.0, $16606 = 0.0, $16607 = 0, $16608 = 0.0, $16609 = 0.0, $1661 = 0, $16610 = 0.0, $16611 = 0.0, $16612 = 0.0, $16613 = 0.0, $16614 = 0.0, $16615 = 0.0, $16616 = 0.0, $16617 = 0.0, $16618 = 0, $16619 = 0.0;
 var $1662 = 0, $16620 = 0, $16621 = 0.0, $16622 = 0.0, $16623 = 0.0, $16624 = 0.0, $16625 = 0.0, $16626 = 0.0, $16627 = 0.0, $16628 = 0.0, $16629 = 0.0, $1663 = 0, $16630 = 0.0, $16631 = 0.0, $16632 = 0.0, $16633 = 0.0, $16634 = 0.0, $16635 = 0.0, $16636 = 0.0, $16637 = 0.0;
 var $16638 = 0.0, $16639 = 0.0, $1664 = 0, $16640 = 0.0, $16641 = 0.0, $16642 = 0.0, $16643 = 0.0, $16644 = 0.0, $16645 = 0.0, $16646 = 0.0, $16647 = 0.0, $16648 = 0.0, $16649 = 0.0, $1665 = 0, $16650 = 0.0, $16651 = 0.0, $16652 = 0.0, $16653 = 0.0, $16654 = 0.0, $16655 = 0.0;
 var $16656 = 0.0, $16657 = 0.0, $16658 = 0.0, $16659 = 0.0, $1666 = 0, $16660 = 0.0, $16661 = 0, $16662 = 0, $16663 = 0.0, $16664 = 0.0, $16665 = 0.0, $16666 = 0.0, $16667 = 0.0, $16668 = 0.0, $16669 = 0.0, $1667 = 0, $16670 = 0.0, $16671 = 0.0, $16672 = 0.0, $16673 = 0.0;
 var $16674 = 0.0, $16675 = 0.0, $16676 = 0.0, $16677 = 0.0, $16678 = 0, $16679 = 0, $1668 = 0, $16680 = 0.0, $16681 = 0.0, $16682 = 0.0, $16683 = 0.0, $16684 = 0.0, $16685 = 0.0, $16686 = 0.0, $16687 = 0, $16688 = 0.0, $16689 = 0, $1669 = 0, $16690 = 0.0, $16691 = 0.0;
 var $16692 = 0.0, $16693 = 0.0, $16694 = 0.0, $16695 = 0.0, $16696 = 0.0, $16697 = 0.0, $16698 = 0.0, $16699 = 0.0, $167 = 0, $1670 = 0, $16700 = 0.0, $16701 = 0.0, $16702 = 0.0, $16703 = 0.0, $16704 = 0.0, $16705 = 0.0, $16706 = 0.0, $16707 = 0.0, $16708 = 0.0, $16709 = 0.0;
 var $1671 = 0, $16710 = 0.0, $16711 = 0.0, $16712 = 0.0, $16713 = 0.0, $16714 = 0.0, $16715 = 0.0, $16716 = 0.0, $16717 = 0.0, $16718 = 0.0, $16719 = 0.0, $1672 = 0.0, $16720 = 0.0, $16721 = 0.0, $16722 = 0.0, $16723 = 0.0, $16724 = 0.0, $16725 = 0.0, $16726 = 0.0, $16727 = 0.0;
 var $16728 = 0.0, $16729 = 0.0, $1673 = 0, $16730 = 0.0, $16731 = 0.0, $16732 = 0.0, $16733 = 0.0, $16734 = 0.0, $16735 = 0.0, $16736 = 0.0, $16737 = 0.0, $16738 = 0.0, $16739 = 0.0, $1674 = 0.0, $16740 = 0.0, $16741 = 0.0, $16742 = 0.0, $16743 = 0.0, $16744 = 0.0, $16745 = 0.0;
 var $16746 = 0.0, $16747 = 0.0, $16748 = 0.0, $16749 = 0.0, $1675 = 0.0, $16750 = 0.0, $16751 = 0.0, $16752 = 0.0, $16753 = 0.0, $16754 = 0.0, $16755 = 0.0, $16756 = 0.0, $16757 = 0.0, $16758 = 0.0, $16759 = 0.0, $1676 = 0.0, $16760 = 0.0, $16761 = 0.0, $16762 = 0.0, $16763 = 0.0;
 var $16764 = 0.0, $16765 = 0.0, $16766 = 0.0, $16767 = 0.0, $16768 = 0.0, $16769 = 0, $1677 = 0, $16770 = 0.0, $16771 = 0.0, $16772 = 0.0, $16773 = 0.0, $16774 = 0.0, $16775 = 0.0, $16776 = 0.0, $16777 = 0.0, $16778 = 0, $16779 = 0.0, $1678 = 0.0, $16780 = 0, $16781 = 0.0;
 var $16782 = 0, $16783 = 0.0, $16784 = 0, $16785 = 0.0, $16786 = 0.0, $16787 = 0.0, $16788 = 0.0, $16789 = 0.0, $1679 = 0, $16790 = 0.0, $16791 = 0.0, $16792 = 0.0, $16793 = 0.0, $16794 = 0.0, $16795 = 0.0, $16796 = 0.0, $16797 = 0.0, $16798 = 0.0, $16799 = 0.0, $168 = 0;
 var $1680 = 0.0, $16800 = 0.0, $16801 = 0.0, $16802 = 0.0, $16803 = 0.0, $16804 = 0.0, $16805 = 0.0, $16806 = 0.0, $16807 = 0.0, $16808 = 0.0, $16809 = 0.0, $1681 = 0.0, $16810 = 0.0, $16811 = 0.0, $16812 = 0.0, $16813 = 0.0, $16814 = 0.0, $16815 = 0.0, $16816 = 0.0, $16817 = 0.0;
 var $16818 = 0.0, $16819 = 0.0, $1682 = 0.0, $16820 = 0.0, $16821 = 0.0, $16822 = 0.0, $16823 = 0.0, $16824 = 0.0, $16825 = 0.0, $16826 = 0.0, $16827 = 0, $16828 = 0, $16829 = 0.0, $1683 = 0, $16830 = 0.0, $16831 = 0.0, $16832 = 0.0, $16833 = 0.0, $16834 = 0.0, $16835 = 0.0;
 var $16836 = 0.0, $16837 = 0, $16838 = 0, $16839 = 0.0, $1684 = 0, $16840 = 0.0, $16841 = 0.0, $16842 = 0.0, $16843 = 0.0, $16844 = 0.0, $16845 = 0.0, $16846 = 0, $16847 = 0.0, $16848 = 0, $16849 = 0.0, $1685 = 0, $16850 = 0.0, $16851 = 0.0, $16852 = 0.0, $16853 = 0.0;
 var $16854 = 0.0, $16855 = 0.0, $16856 = 0.0, $16857 = 0.0, $16858 = 0.0, $16859 = 0.0, $1686 = 0.0, $16860 = 0.0, $16861 = 0.0, $16862 = 0.0, $16863 = 0.0, $16864 = 0.0, $16865 = 0.0, $16866 = 0.0, $16867 = 0.0, $16868 = 0.0, $16869 = 0.0, $1687 = 0, $16870 = 0.0, $16871 = 0.0;
 var $16872 = 0.0, $16873 = 0.0, $16874 = 0.0, $16875 = 0.0, $16876 = 0.0, $16877 = 0.0, $16878 = 0.0, $16879 = 0.0, $1688 = 0.0, $16880 = 0.0, $16881 = 0.0, $16882 = 0.0, $16883 = 0.0, $16884 = 0.0, $16885 = 0.0, $16886 = 0.0, $16887 = 0.0, $16888 = 0.0, $16889 = 0.0, $1689 = 0;
 var $16890 = 0.0, $16891 = 0.0, $16892 = 0.0, $16893 = 0.0, $16894 = 0.0, $16895 = 0.0, $16896 = 0.0, $16897 = 0.0, $16898 = 0.0, $16899 = 0.0, $169 = 0, $1690 = 0.0, $16900 = 0.0, $16901 = 0.0, $16902 = 0.0, $16903 = 0.0, $16904 = 0.0, $16905 = 0.0, $16906 = 0.0, $16907 = 0.0;
 var $16908 = 0.0, $16909 = 0.0, $1691 = 0.0, $16910 = 0.0, $16911 = 0.0, $16912 = 0.0, $16913 = 0.0, $16914 = 0.0, $16915 = 0.0, $16916 = 0.0, $16917 = 0.0, $16918 = 0.0, $16919 = 0.0, $1692 = 0.0, $16920 = 0.0, $16921 = 0.0, $16922 = 0.0, $16923 = 0.0, $16924 = 0.0, $16925 = 0.0;
 var $16926 = 0.0, $16927 = 0, $16928 = 0.0, $16929 = 0.0, $1693 = 0.0, $16930 = 0.0, $16931 = 0.0, $16932 = 0.0, $16933 = 0.0, $16934 = 0.0, $16935 = 0.0, $16936 = 0.0, $16937 = 0, $16938 = 0.0, $16939 = 0, $1694 = 0.0, $16940 = 0.0, $16941 = 0, $16942 = 0.0, $16943 = 0;
 var $16944 = 0.0, $16945 = 0.0, $16946 = 0.0, $16947 = 0.0, $16948 = 0.0, $16949 = 0.0, $1695 = 0.0, $16950 = 0.0, $16951 = 0.0, $16952 = 0.0, $16953 = 0.0, $16954 = 0.0, $16955 = 0.0, $16956 = 0.0, $16957 = 0.0, $16958 = 0.0, $16959 = 0.0, $1696 = 0.0, $16960 = 0.0, $16961 = 0.0;
 var $16962 = 0.0, $16963 = 0.0, $16964 = 0.0, $16965 = 0.0, $16966 = 0.0, $16967 = 0.0, $16968 = 0.0, $16969 = 0.0, $1697 = 0.0, $16970 = 0.0, $16971 = 0.0, $16972 = 0.0, $16973 = 0.0, $16974 = 0.0, $16975 = 0.0, $16976 = 0.0, $16977 = 0, $16978 = 0, $16979 = 0.0, $1698 = 0.0;
 var $16980 = 0.0, $16981 = 0.0, $16982 = 0.0, $16983 = 0.0, $16984 = 0.0, $16985 = 0.0, $16986 = 0.0, $16987 = 0.0, $16988 = 0.0, $16989 = 0.0, $1699 = 0.0, $16990 = 0.0, $16991 = 0.0, $16992 = 0, $16993 = 0, $16994 = 0.0, $16995 = 0.0, $16996 = 0.0, $16997 = 0.0, $16998 = 0.0;
 var $16999 = 0.0, $17 = 0, $170 = 0, $1700 = 0.0, $17000 = 0.0, $17001 = 0, $17002 = 0.0, $17003 = 0, $17004 = 0.0, $17005 = 0.0, $17006 = 0.0, $17007 = 0.0, $17008 = 0.0, $17009 = 0.0, $1701 = 0.0, $17010 = 0.0, $17011 = 0.0, $17012 = 0.0, $17013 = 0.0, $17014 = 0.0;
 var $17015 = 0.0, $17016 = 0.0, $17017 = 0.0, $17018 = 0.0, $17019 = 0.0, $1702 = 0.0, $17020 = 0.0, $17021 = 0.0, $17022 = 0.0, $17023 = 0.0, $17024 = 0.0, $17025 = 0.0, $17026 = 0.0, $17027 = 0.0, $17028 = 0.0, $17029 = 0.0, $1703 = 0.0, $17030 = 0.0, $17031 = 0.0, $17032 = 0.0;
 var $17033 = 0.0, $17034 = 0.0, $17035 = 0.0, $17036 = 0.0, $17037 = 0.0, $17038 = 0.0, $17039 = 0.0, $1704 = 0.0, $17040 = 0.0, $17041 = 0.0, $17042 = 0.0, $17043 = 0.0, $17044 = 0.0, $17045 = 0.0, $17046 = 0.0, $17047 = 0.0, $17048 = 0.0, $17049 = 0.0, $1705 = 0.0, $17050 = 0.0;
 var $17051 = 0.0, $17052 = 0.0, $17053 = 0.0, $17054 = 0.0, $17055 = 0.0, $17056 = 0.0, $17057 = 0.0, $17058 = 0.0, $17059 = 0.0, $1706 = 0.0, $17060 = 0.0, $17061 = 0.0, $17062 = 0.0, $17063 = 0.0, $17064 = 0.0, $17065 = 0.0, $17066 = 0.0, $17067 = 0.0, $17068 = 0.0, $17069 = 0.0;
 var $1707 = 0.0, $17070 = 0.0, $17071 = 0.0, $17072 = 0.0, $17073 = 0.0, $17074 = 0.0, $17075 = 0.0, $17076 = 0.0, $17077 = 0.0, $17078 = 0.0, $17079 = 0.0, $1708 = 0.0, $17080 = 0.0, $17081 = 0.0, $17082 = 0.0, $17083 = 0, $17084 = 0.0, $17085 = 0.0, $17086 = 0.0, $17087 = 0.0;
 var $17088 = 0.0, $17089 = 0.0, $1709 = 0.0, $17090 = 0.0, $17091 = 0.0, $17092 = 0.0, $17093 = 0, $17094 = 0.0, $17095 = 0, $17096 = 0.0, $17097 = 0, $17098 = 0.0, $17099 = 0, $171 = 0, $1710 = 0.0, $17100 = 0.0, $17101 = 0.0, $17102 = 0.0, $17103 = 0.0, $17104 = 0.0;
 var $17105 = 0.0, $17106 = 0.0, $17107 = 0.0, $17108 = 0.0, $17109 = 0.0, $1711 = 0.0, $17110 = 0.0, $17111 = 0.0, $17112 = 0.0, $17113 = 0.0, $17114 = 0.0, $17115 = 0.0, $17116 = 0.0, $17117 = 0, $17118 = 0.0, $17119 = 0.0, $1712 = 0.0, $17120 = 0.0, $17121 = 0.0, $17122 = 0.0;
 var $17123 = 0.0, $17124 = 0.0, $17125 = 0, $17126 = 0.0, $17127 = 0, $17128 = 0.0, $17129 = 0, $1713 = 0.0, $17130 = 0.0, $17131 = 0.0, $17132 = 0.0, $17133 = 0.0, $17134 = 0.0, $17135 = 0, $17136 = 0.0, $17137 = 0.0, $17138 = 0, $17139 = 0.0, $1714 = 0.0, $17140 = 0.0;
 var $17141 = 0.0, $17142 = 0.0, $17143 = 0.0, $17144 = 0.0, $17145 = 0.0, $17146 = 0.0, $17147 = 0, $17148 = 0.0, $17149 = 0.0, $1715 = 0.0, $17150 = 0, $17151 = 0.0, $17152 = 0.0, $17153 = 0.0, $17154 = 0.0, $17155 = 0.0, $17156 = 0.0, $17157 = 0.0, $17158 = 0.0, $17159 = 0;
 var $1716 = 0.0, $17160 = 0.0, $17161 = 0.0, $17162 = 0, $17163 = 0.0, $17164 = 0.0, $17165 = 0.0, $17166 = 0.0, $17167 = 0.0, $17168 = 0.0, $17169 = 0.0, $1717 = 0.0, $17170 = 0.0, $17171 = 0.0, $17172 = 0.0, $17173 = 0.0, $17174 = 0.0, $17175 = 0.0, $17176 = 0.0, $17177 = 0.0;
 var $17178 = 0.0, $17179 = 0, $1718 = 0.0, $17180 = 0.0, $17181 = 0.0, $17182 = 0.0, $17183 = 0.0, $17184 = 0.0, $17185 = 0.0, $17186 = 0.0, $17187 = 0, $17188 = 0.0, $17189 = 0, $1719 = 0.0, $17190 = 0.0, $17191 = 0, $17192 = 0.0, $17193 = 0.0, $17194 = 0.0, $17195 = 0.0;
 var $17196 = 0.0, $17197 = 0.0, $17198 = 0.0, $17199 = 0.0, $172 = 0, $1720 = 0.0, $17200 = 0.0, $17201 = 0.0, $17202 = 0.0, $17203 = 0.0, $17204 = 0.0, $17205 = 0.0, $17206 = 0.0, $17207 = 0.0, $17208 = 0, $17209 = 0.0, $1721 = 0.0, $17210 = 0.0, $17211 = 0.0, $17212 = 0.0;
 var $17213 = 0.0, $17214 = 0.0, $17215 = 0.0, $17216 = 0.0, $17217 = 0.0, $17218 = 0.0, $17219 = 0.0, $1722 = 0.0, $17220 = 0.0, $17221 = 0.0, $17222 = 0.0, $17223 = 0.0, $17224 = 0.0, $17225 = 0.0, $17226 = 0.0, $17227 = 0.0, $17228 = 0.0, $17229 = 0, $1723 = 0.0, $17230 = 0.0;
 var $17231 = 0, $17232 = 0.0, $17233 = 0.0, $17234 = 0.0, $17235 = 0.0, $17236 = 0.0, $17237 = 0.0, $17238 = 0.0, $17239 = 0.0, $1724 = 0.0, $17240 = 0.0, $17241 = 0.0, $17242 = 0.0, $17243 = 0, $17244 = 0.0, $17245 = 0.0, $17246 = 0.0, $17247 = 0.0, $17248 = 0.0, $17249 = 0.0;
 var $1725 = 0.0, $17250 = 0.0, $17251 = 0.0, $17252 = 0.0, $17253 = 0.0, $17254 = 0.0, $17255 = 0.0, $17256 = 0.0, $17257 = 0.0, $17258 = 0.0, $17259 = 0.0, $1726 = 0.0, $17260 = 0.0, $17261 = 0.0, $17262 = 0.0, $17263 = 0.0, $17264 = 0.0, $17265 = 0.0, $17266 = 0.0, $17267 = 0.0;
 var $17268 = 0.0, $17269 = 0.0, $1727 = 0.0, $17270 = 0.0, $17271 = 0, $17272 = 0.0, $17273 = 0, $17274 = 0.0, $17275 = 0.0, $17276 = 0.0, $17277 = 0.0, $17278 = 0.0, $17279 = 0.0, $1728 = 0.0, $17280 = 0.0, $17281 = 0.0, $17282 = 0, $17283 = 0.0, $17284 = 0.0, $17285 = 0.0;
 var $17286 = 0, $17287 = 0.0, $17288 = 0, $17289 = 0.0, $1729 = 0.0, $17290 = 0.0, $17291 = 0.0, $17292 = 0.0, $17293 = 0.0, $17294 = 0, $17295 = 0.0, $17296 = 0.0, $17297 = 0.0, $17298 = 0.0, $17299 = 0.0, $173 = 0, $1730 = 0.0, $17300 = 0.0, $17301 = 0, $17302 = 0;
 var $17303 = 0.0, $17304 = 0.0, $17305 = 0.0, $17306 = 0.0, $17307 = 0.0, $17308 = 0.0, $17309 = 0.0, $1731 = 0.0, $17310 = 0.0, $17311 = 0.0, $17312 = 0, $17313 = 0.0, $17314 = 0, $17315 = 0.0, $17316 = 0.0, $17317 = 0, $17318 = 0.0, $17319 = 0, $1732 = 0.0, $17320 = 0.0;
 var $17321 = 0, $17322 = 0, $17323 = 0, $17324 = 0, $17325 = 0, $17326 = 0, $17327 = 0, $17328 = 0, $17329 = 0, $1733 = 0.0, $17330 = 0, $17331 = 0.0, $17332 = 0, $17333 = 0.0, $17334 = 0.0, $17335 = 0.0, $17336 = 0, $17337 = 0.0, $17338 = 0, $17339 = 0.0;
 var $1734 = 0.0, $17340 = 0.0, $17341 = 0.0, $17342 = 0, $17343 = 0, $17344 = 0, $17345 = 0.0, $17346 = 0, $17347 = 0.0, $17348 = 0, $17349 = 0.0, $1735 = 0.0, $17350 = 0.0, $17351 = 0.0, $17352 = 0.0, $17353 = 0.0, $17354 = 0.0, $17355 = 0.0, $17356 = 0.0, $17357 = 0.0;
 var $17358 = 0.0, $17359 = 0.0, $1736 = 0.0, $17360 = 0.0, $17361 = 0.0, $17362 = 0.0, $17363 = 0.0, $17364 = 0.0, $17365 = 0.0, $17366 = 0.0, $17367 = 0.0, $17368 = 0.0, $17369 = 0, $1737 = 0.0, $17370 = 0.0, $17371 = 0.0, $17372 = 0.0, $17373 = 0.0, $17374 = 0.0, $17375 = 0.0;
 var $17376 = 0.0, $17377 = 0.0, $17378 = 0, $17379 = 0, $1738 = 0.0, $17380 = 0.0, $17381 = 0.0, $17382 = 0.0, $17383 = 0.0, $17384 = 0.0, $17385 = 0.0, $17386 = 0.0, $17387 = 0.0, $17388 = 0.0, $17389 = 0.0, $1739 = 0.0, $17390 = 0.0, $17391 = 0.0, $17392 = 0.0, $17393 = 0.0;
 var $17394 = 0.0, $17395 = 0.0, $17396 = 0.0, $17397 = 0.0, $17398 = 0.0, $17399 = 0.0, $174 = 0, $1740 = 0.0, $17400 = 0.0, $17401 = 0, $17402 = 0, $17403 = 0.0, $17404 = 0.0, $17405 = 0, $17406 = 0, $17407 = 0.0, $17408 = 0.0, $17409 = 0.0, $1741 = 0.0, $17410 = 0.0;
 var $17411 = 0.0, $17412 = 0.0, $17413 = 0.0, $17414 = 0, $17415 = 0.0, $17416 = 0, $17417 = 0.0, $17418 = 0.0, $17419 = 0.0, $1742 = 0.0, $17420 = 0.0, $17421 = 0.0, $17422 = 0.0, $17423 = 0.0, $17424 = 0.0, $17425 = 0.0, $17426 = 0.0, $17427 = 0.0, $17428 = 0.0, $17429 = 0.0;
 var $1743 = 0.0, $17430 = 0.0, $17431 = 0.0, $17432 = 0.0, $17433 = 0.0, $17434 = 0.0, $17435 = 0.0, $17436 = 0.0, $17437 = 0.0, $17438 = 0.0, $17439 = 0.0, $1744 = 0.0, $17440 = 0.0, $17441 = 0.0, $17442 = 0.0, $17443 = 0.0, $17444 = 0.0, $17445 = 0.0, $17446 = 0.0, $17447 = 0.0;
 var $17448 = 0.0, $17449 = 0.0, $1745 = 0.0, $17450 = 0, $17451 = 0.0, $17452 = 0.0, $17453 = 0.0, $17454 = 0.0, $17455 = 0.0, $17456 = 0.0, $17457 = 0.0, $17458 = 0.0, $17459 = 0.0, $1746 = 0.0, $17460 = 0.0, $17461 = 0, $17462 = 0.0, $17463 = 0, $17464 = 0.0, $17465 = 0.0;
 var $17466 = 0.0, $17467 = 0.0, $17468 = 0.0, $17469 = 0.0, $1747 = 0.0, $17470 = 0.0, $17471 = 0.0, $17472 = 0.0, $17473 = 0.0, $17474 = 0.0, $17475 = 0.0, $17476 = 0.0, $17477 = 0.0, $17478 = 0.0, $17479 = 0.0, $1748 = 0.0, $17480 = 0.0, $17481 = 0.0, $17482 = 0.0, $17483 = 0.0;
 var $17484 = 0.0, $17485 = 0, $17486 = 0, $17487 = 0.0, $17488 = 0.0, $17489 = 0.0, $1749 = 0.0, $17490 = 0.0, $17491 = 0.0, $17492 = 0, $17493 = 0, $17494 = 0.0, $17495 = 0.0, $17496 = 0.0, $17497 = 0.0, $17498 = 0.0, $17499 = 0.0, $175 = 0, $1750 = 0, $17500 = 0.0;
 var $17501 = 0, $17502 = 0.0, $17503 = 0, $17504 = 0.0, $17505 = 0.0, $17506 = 0.0, $17507 = 0.0, $17508 = 0.0, $17509 = 0.0, $1751 = 0.0, $17510 = 0.0, $17511 = 0.0, $17512 = 0.0, $17513 = 0.0, $17514 = 0.0, $17515 = 0.0, $17516 = 0.0, $17517 = 0.0, $17518 = 0.0, $17519 = 0.0;
 var $1752 = 0.0, $17520 = 0.0, $17521 = 0.0, $17522 = 0.0, $17523 = 0.0, $17524 = 0.0, $17525 = 0.0, $17526 = 0.0, $17527 = 0.0, $17528 = 0.0, $17529 = 0.0, $1753 = 0.0, $17530 = 0.0, $17531 = 0.0, $17532 = 0.0, $17533 = 0.0, $17534 = 0.0, $17535 = 0.0, $17536 = 0.0, $17537 = 0;
 var $17538 = 0.0, $17539 = 0.0, $1754 = 0.0, $17540 = 0.0, $17541 = 0.0, $17542 = 0.0, $17543 = 0.0, $17544 = 0.0, $17545 = 0.0, $17546 = 0.0, $17547 = 0.0, $17548 = 0, $17549 = 0.0, $1755 = 0.0, $17550 = 0, $17551 = 0.0, $17552 = 0.0, $17553 = 0.0, $17554 = 0.0, $17555 = 0.0;
 var $17556 = 0.0, $17557 = 0.0, $17558 = 0.0, $17559 = 0.0, $1756 = 0.0, $17560 = 0.0, $17561 = 0.0, $17562 = 0.0, $17563 = 0.0, $17564 = 0.0, $17565 = 0.0, $17566 = 0.0, $17567 = 0.0, $17568 = 0, $17569 = 0.0, $1757 = 0.0, $17570 = 0.0, $17571 = 0.0, $17572 = 0.0, $17573 = 0.0;
 var $17574 = 0.0, $17575 = 0.0, $17576 = 0, $17577 = 0.0, $17578 = 0, $17579 = 0.0, $1758 = 0.0, $17580 = 0, $17581 = 0.0, $17582 = 0.0, $17583 = 0.0, $17584 = 0.0, $17585 = 0.0, $17586 = 0.0, $17587 = 0.0, $17588 = 0.0, $17589 = 0.0, $1759 = 0, $17590 = 0.0, $17591 = 0.0;
 var $17592 = 0.0, $17593 = 0.0, $17594 = 0.0, $17595 = 0.0, $17596 = 0.0, $17597 = 0, $17598 = 0.0, $17599 = 0.0, $176 = 0, $1760 = 0.0, $17600 = 0.0, $17601 = 0.0, $17602 = 0.0, $17603 = 0.0, $17604 = 0.0, $17605 = 0.0, $17606 = 0.0, $17607 = 0.0, $17608 = 0.0, $17609 = 0.0;
 var $1761 = 0, $17610 = 0.0, $17611 = 0.0, $17612 = 0.0, $17613 = 0.0, $17614 = 0.0, $17615 = 0.0, $17616 = 0.0, $17617 = 0.0, $17618 = 0, $17619 = 0.0, $1762 = 0.0, $17620 = 0, $17621 = 0.0, $17622 = 0.0, $17623 = 0.0, $17624 = 0.0, $17625 = 0.0, $17626 = 0.0, $17627 = 0.0;
 var $17628 = 0.0, $17629 = 0.0, $1763 = 0, $17630 = 0.0, $17631 = 0.0, $17632 = 0.0, $17633 = 0.0, $17634 = 0.0, $17635 = 0.0, $17636 = 0.0, $17637 = 0.0, $17638 = 0.0, $17639 = 0.0, $1764 = 0, $17640 = 0.0, $17641 = 0.0, $17642 = 0.0, $17643 = 0.0, $17644 = 0.0, $17645 = 0.0;
 var $17646 = 0.0, $17647 = 0.0, $17648 = 0.0, $17649 = 0.0, $1765 = 0.0, $17650 = 0.0, $17651 = 0.0, $17652 = 0.0, $17653 = 0.0, $17654 = 0, $17655 = 0.0, $17656 = 0.0, $17657 = 0.0, $17658 = 0.0, $17659 = 0.0, $1766 = 0.0, $17660 = 0, $17661 = 0.0, $17662 = 0, $17663 = 0.0;
 var $17664 = 0.0, $17665 = 0.0, $17666 = 0.0, $17667 = 0.0, $17668 = 0.0, $17669 = 0.0, $1767 = 0.0, $17670 = 0.0, $17671 = 0, $17672 = 0.0, $17673 = 0.0, $17674 = 0.0, $17675 = 0, $17676 = 0.0, $17677 = 0, $17678 = 0.0, $17679 = 0.0, $1768 = 0.0, $17680 = 0.0, $17681 = 0.0;
 var $17682 = 0.0, $17683 = 0, $17684 = 0.0, $17685 = 0.0, $17686 = 0.0, $17687 = 0.0, $17688 = 0.0, $17689 = 0.0, $1769 = 0.0, $17690 = 0, $17691 = 0, $17692 = 0.0, $17693 = 0.0, $17694 = 0.0, $17695 = 0.0, $17696 = 0.0, $17697 = 0.0, $17698 = 0.0, $17699 = 0.0, $177 = 0;
 var $1770 = 0.0, $17700 = 0.0, $17701 = 0, $17702 = 0.0, $17703 = 0, $17704 = 0.0, $17705 = 0.0, $17706 = 0, $17707 = 0.0, $17708 = 0, $17709 = 0.0, $1771 = 0.0, $17710 = 0, $17711 = 0, $17712 = 0, $17713 = 0, $17714 = 0, $17715 = 0, $17716 = 0, $17717 = 0;
 var $17718 = 0, $17719 = 0, $1772 = 0.0, $17720 = 0.0, $17721 = 0, $17722 = 0.0, $17723 = 0.0, $17724 = 0.0, $17725 = 0, $17726 = 0.0, $17727 = 0, $17728 = 0.0, $17729 = 0.0, $1773 = 0, $17730 = 0.0, $17731 = 0, $17732 = 0, $17733 = 0, $17734 = 0.0, $17735 = 0;
 var $17736 = 0.0, $17737 = 0, $17738 = 0.0, $17739 = 0.0, $1774 = 0.0, $17740 = 0.0, $17741 = 0.0, $17742 = 0.0, $17743 = 0.0, $17744 = 0.0, $17745 = 0.0, $17746 = 0.0, $17747 = 0.0, $17748 = 0.0, $17749 = 0.0, $1775 = 0, $17750 = 0.0, $17751 = 0.0, $17752 = 0.0, $17753 = 0.0;
 var $17754 = 0.0, $17755 = 0.0, $17756 = 0.0, $17757 = 0, $17758 = 0.0, $17759 = 0.0, $1776 = 0, $17760 = 0.0, $17761 = 0.0, $17762 = 0.0, $17763 = 0.0, $17764 = 0.0, $17765 = 0.0, $17766 = 0, $17767 = 0, $17768 = 0.0, $17769 = 0.0, $1777 = 0.0, $17770 = 0.0, $17771 = 0.0;
 var $17772 = 0.0, $17773 = 0.0, $17774 = 0.0, $17775 = 0.0, $17776 = 0.0, $17777 = 0.0, $17778 = 0.0, $17779 = 0.0, $1778 = 0.0, $17780 = 0.0, $17781 = 0.0, $17782 = 0.0, $17783 = 0.0, $17784 = 0.0, $17785 = 0.0, $17786 = 0.0, $17787 = 0.0, $17788 = 0.0, $17789 = 0, $1779 = 0.0;
 var $17790 = 0, $17791 = 0.0, $17792 = 0.0, $17793 = 0, $17794 = 0, $17795 = 0.0, $17796 = 0.0, $17797 = 0.0, $17798 = 0.0, $17799 = 0.0, $178 = 0, $1780 = 0.0, $17800 = 0.0, $17801 = 0.0, $17802 = 0, $17803 = 0.0, $17804 = 0, $17805 = 0.0, $17806 = 0.0, $17807 = 0.0;
 var $17808 = 0.0, $17809 = 0.0, $1781 = 0.0, $17810 = 0.0, $17811 = 0.0, $17812 = 0.0, $17813 = 0.0, $17814 = 0.0, $17815 = 0.0, $17816 = 0.0, $17817 = 0.0, $17818 = 0.0, $17819 = 0.0, $1782 = 0.0, $17820 = 0.0, $17821 = 0.0, $17822 = 0.0, $17823 = 0.0, $17824 = 0.0, $17825 = 0.0;
 var $17826 = 0.0, $17827 = 0.0, $17828 = 0.0, $17829 = 0.0, $1783 = 0.0, $17830 = 0.0, $17831 = 0.0, $17832 = 0.0, $17833 = 0.0, $17834 = 0.0, $17835 = 0.0, $17836 = 0.0, $17837 = 0, $17838 = 0.0, $17839 = 0.0, $1784 = 0.0, $17840 = 0.0, $17841 = 0.0, $17842 = 0.0, $17843 = 0.0;
 var $17844 = 0.0, $17845 = 0.0, $17846 = 0.0, $17847 = 0.0, $17848 = 0, $17849 = 0.0, $1785 = 0.0, $17850 = 0, $17851 = 0.0, $17852 = 0.0, $17853 = 0.0, $17854 = 0.0, $17855 = 0.0, $17856 = 0.0, $17857 = 0.0, $17858 = 0.0, $17859 = 0.0, $1786 = 0.0, $17860 = 0.0, $17861 = 0.0;
 var $17862 = 0.0, $17863 = 0.0, $17864 = 0.0, $17865 = 0.0, $17866 = 0.0, $17867 = 0, $17868 = 0, $17869 = 0.0, $1787 = 0, $17870 = 0.0, $17871 = 0.0, $17872 = 0.0, $17873 = 0.0, $17874 = 0.0, $17875 = 0.0, $17876 = 0.0, $17877 = 0, $17878 = 0, $17879 = 0.0, $1788 = 0;
 var $17880 = 0.0, $17881 = 0.0, $17882 = 0.0, $17883 = 0.0, $17884 = 0.0, $17885 = 0.0, $17886 = 0, $17887 = 0.0, $17888 = 0, $17889 = 0.0, $1789 = 0.0, $17890 = 0.0, $17891 = 0.0, $17892 = 0.0, $17893 = 0.0, $17894 = 0.0, $17895 = 0.0, $17896 = 0.0, $17897 = 0.0, $17898 = 0.0;
 var $17899 = 0.0, $179 = 0, $1790 = 0.0, $17900 = 0.0, $17901 = 0.0, $17902 = 0.0, $17903 = 0.0, $17904 = 0.0, $17905 = 0.0, $17906 = 0.0, $17907 = 0.0, $17908 = 0.0, $17909 = 0.0, $1791 = 0.0, $17910 = 0.0, $17911 = 0.0, $17912 = 0.0, $17913 = 0.0, $17914 = 0.0, $17915 = 0.0;
 var $17916 = 0.0, $17917 = 0.0, $17918 = 0.0, $17919 = 0.0, $1792 = 0.0, $17920 = 0.0, $17921 = 0, $17922 = 0.0, $17923 = 0.0, $17924 = 0.0, $17925 = 0.0, $17926 = 0.0, $17927 = 0.0, $17928 = 0.0, $17929 = 0.0, $1793 = 0.0, $17930 = 0.0, $17931 = 0.0, $17932 = 0, $17933 = 0.0;
 var $17934 = 0, $17935 = 0.0, $17936 = 0.0, $17937 = 0.0, $17938 = 0.0, $17939 = 0.0, $1794 = 0.0, $17940 = 0.0, $17941 = 0.0, $17942 = 0.0, $17943 = 0.0, $17944 = 0.0, $17945 = 0.0, $17946 = 0.0, $17947 = 0.0, $17948 = 0.0, $17949 = 0.0, $1795 = 0.0, $17950 = 0.0, $17951 = 0.0;
 var $17952 = 0.0, $17953 = 0.0, $17954 = 0.0, $17955 = 0.0, $17956 = 0.0, $17957 = 0.0, $17958 = 0.0, $17959 = 0.0, $1796 = 0.0, $17960 = 0.0, $17961 = 0.0, $17962 = 0.0, $17963 = 0.0, $17964 = 0.0, $17965 = 0.0, $17966 = 0.0, $17967 = 0.0, $17968 = 0.0, $17969 = 0.0, $1797 = 0.0;
 var $17970 = 0.0, $17971 = 0.0, $17972 = 0.0, $17973 = 0.0, $17974 = 0.0, $17975 = 0.0, $17976 = 0, $17977 = 0, $17978 = 0.0, $17979 = 0.0, $1798 = 0.0, $17980 = 0.0, $17981 = 0.0, $17982 = 0.0, $17983 = 0.0, $17984 = 0.0, $17985 = 0.0, $17986 = 0.0, $17987 = 0.0, $17988 = 0.0;
 var $17989 = 0.0, $1799 = 0.0, $17990 = 0.0, $17991 = 0.0, $17992 = 0.0, $17993 = 0, $17994 = 0, $17995 = 0.0, $17996 = 0.0, $17997 = 0.0, $17998 = 0.0, $17999 = 0.0, $18 = 0, $180 = 0, $1800 = 0.0, $18000 = 0.0, $18001 = 0.0, $18002 = 0, $18003 = 0.0, $18004 = 0;
 var $18005 = 0.0, $18006 = 0.0, $18007 = 0.0, $18008 = 0.0, $18009 = 0.0, $1801 = 0.0, $18010 = 0.0, $18011 = 0.0, $18012 = 0.0, $18013 = 0.0, $18014 = 0.0, $18015 = 0.0, $18016 = 0.0, $18017 = 0.0, $18018 = 0.0, $18019 = 0.0, $1802 = 0.0, $18020 = 0.0, $18021 = 0.0, $18022 = 0.0;
 var $18023 = 0.0, $18024 = 0.0, $18025 = 0.0, $18026 = 0.0, $18027 = 0.0, $18028 = 0.0, $18029 = 0.0, $1803 = 0.0, $18030 = 0.0, $18031 = 0.0, $18032 = 0.0, $18033 = 0.0, $18034 = 0.0, $18035 = 0.0, $18036 = 0.0, $18037 = 0.0, $18038 = 0.0, $18039 = 0.0, $1804 = 0.0, $18040 = 0.0;
 var $18041 = 0.0, $18042 = 0.0, $18043 = 0.0, $18044 = 0.0, $18045 = 0.0, $18046 = 0.0, $18047 = 0.0, $18048 = 0.0, $18049 = 0.0, $1805 = 0.0, $18050 = 0.0, $18051 = 0.0, $18052 = 0.0, $18053 = 0.0, $18054 = 0.0, $18055 = 0.0, $18056 = 0.0, $18057 = 0.0, $18058 = 0.0, $18059 = 0.0;
 var $1806 = 0.0, $18060 = 0.0, $18061 = 0.0, $18062 = 0.0, $18063 = 0.0, $18064 = 0.0, $18065 = 0.0, $18066 = 0.0, $18067 = 0.0, $18068 = 0.0, $18069 = 0.0, $1807 = 0.0, $18070 = 0.0, $18071 = 0.0, $18072 = 0.0, $18073 = 0.0, $18074 = 0.0, $18075 = 0.0, $18076 = 0.0, $18077 = 0.0;
 var $18078 = 0.0, $18079 = 0.0, $1808 = 0.0, $18080 = 0.0, $18081 = 0.0, $18082 = 0.0, $18083 = 0.0, $18084 = 0, $18085 = 0.0, $18086 = 0.0, $18087 = 0.0, $18088 = 0.0, $18089 = 0.0, $1809 = 0.0, $18090 = 0.0, $18091 = 0.0, $18092 = 0.0, $18093 = 0.0, $18094 = 0, $18095 = 0.0;
 var $18096 = 0, $18097 = 0.0, $18098 = 0, $18099 = 0.0, $181 = 0, $1810 = 0.0, $18100 = 0, $18101 = 0.0, $18102 = 0.0, $18103 = 0.0, $18104 = 0.0, $18105 = 0.0, $18106 = 0.0, $18107 = 0.0, $18108 = 0.0, $18109 = 0.0, $1811 = 0.0, $18110 = 0.0, $18111 = 0.0, $18112 = 0.0;
 var $18113 = 0.0, $18114 = 0.0, $18115 = 0.0, $18116 = 0.0, $18117 = 0.0, $18118 = 0.0, $18119 = 0.0, $1812 = 0.0, $18120 = 0.0, $18121 = 0.0, $18122 = 0.0, $18123 = 0.0, $18124 = 0.0, $18125 = 0.0, $18126 = 0.0, $18127 = 0.0, $18128 = 0.0, $18129 = 0.0, $1813 = 0.0, $18130 = 0.0;
 var $18131 = 0.0, $18132 = 0.0, $18133 = 0.0, $18134 = 0.0, $18135 = 0.0, $18136 = 0.0, $18137 = 0.0, $18138 = 0.0, $18139 = 0.0, $1814 = 0.0, $18140 = 0.0, $18141 = 0.0, $18142 = 0, $18143 = 0, $18144 = 0.0, $18145 = 0.0, $18146 = 0.0, $18147 = 0.0, $18148 = 0.0, $18149 = 0.0;
 var $1815 = 0.0, $18150 = 0.0, $18151 = 0.0, $18152 = 0, $18153 = 0, $18154 = 0.0, $18155 = 0.0, $18156 = 0.0, $18157 = 0.0, $18158 = 0.0, $18159 = 0.0, $1816 = 0.0, $18160 = 0.0, $18161 = 0, $18162 = 0.0, $18163 = 0, $18164 = 0.0, $18165 = 0.0, $18166 = 0.0, $18167 = 0.0;
 var $18168 = 0.0, $18169 = 0.0, $1817 = 0.0, $18170 = 0.0, $18171 = 0.0, $18172 = 0.0, $18173 = 0.0, $18174 = 0.0, $18175 = 0.0, $18176 = 0.0, $18177 = 0.0, $18178 = 0.0, $18179 = 0.0, $1818 = 0.0, $18180 = 0.0, $18181 = 0.0, $18182 = 0.0, $18183 = 0.0, $18184 = 0.0, $18185 = 0.0;
 var $18186 = 0.0, $18187 = 0.0, $18188 = 0.0, $18189 = 0.0, $1819 = 0.0, $18190 = 0.0, $18191 = 0.0, $18192 = 0.0, $18193 = 0.0, $18194 = 0.0, $18195 = 0.0, $18196 = 0.0, $18197 = 0.0, $18198 = 0.0, $18199 = 0.0, $182 = 0, $1820 = 0.0, $18200 = 0.0, $18201 = 0.0, $18202 = 0.0;
 var $18203 = 0.0, $18204 = 0.0, $18205 = 0.0, $18206 = 0.0, $18207 = 0.0, $18208 = 0.0, $18209 = 0.0, $1821 = 0.0, $18210 = 0.0, $18211 = 0.0, $18212 = 0.0, $18213 = 0.0, $18214 = 0.0, $18215 = 0.0, $18216 = 0.0, $18217 = 0.0, $18218 = 0.0, $18219 = 0.0, $1822 = 0, $18220 = 0.0;
 var $18221 = 0.0, $18222 = 0.0, $18223 = 0.0, $18224 = 0.0, $18225 = 0.0, $18226 = 0.0, $18227 = 0.0, $18228 = 0.0, $18229 = 0.0, $1823 = 0.0, $18230 = 0.0, $18231 = 0.0, $18232 = 0.0, $18233 = 0.0, $18234 = 0.0, $18235 = 0.0, $18236 = 0.0, $18237 = 0.0, $18238 = 0.0, $18239 = 0.0;
 var $1824 = 0.0, $18240 = 0.0, $18241 = 0.0, $18242 = 0.0, $18243 = 0, $18244 = 0.0, $18245 = 0.0, $18246 = 0.0, $18247 = 0.0, $18248 = 0.0, $18249 = 0.0, $1825 = 0.0, $18250 = 0.0, $18251 = 0.0, $18252 = 0, $18253 = 0.0, $18254 = 0, $18255 = 0.0, $18256 = 0, $18257 = 0.0;
 var $18258 = 0, $18259 = 0.0, $1826 = 0.0, $18260 = 0.0, $18261 = 0.0, $18262 = 0.0, $18263 = 0.0, $18264 = 0.0, $18265 = 0.0, $18266 = 0.0, $18267 = 0.0, $18268 = 0.0, $18269 = 0.0, $1827 = 0.0, $18270 = 0.0, $18271 = 0.0, $18272 = 0.0, $18273 = 0.0, $18274 = 0.0, $18275 = 0.0;
 var $18276 = 0.0, $18277 = 0.0, $18278 = 0.0, $18279 = 0.0, $1828 = 0, $18280 = 0.0, $18281 = 0.0, $18282 = 0.0, $18283 = 0.0, $18284 = 0.0, $18285 = 0.0, $18286 = 0.0, $18287 = 0.0, $18288 = 0.0, $18289 = 0.0, $1829 = 0.0, $18290 = 0.0, $18291 = 0.0, $18292 = 0.0, $18293 = 0.0;
 var $18294 = 0.0, $18295 = 0.0, $18296 = 0.0, $18297 = 0.0, $18298 = 0, $18299 = 0, $183 = 0, $1830 = 0.0, $18300 = 0.0, $18301 = 0.0, $18302 = 0.0, $18303 = 0.0, $18304 = 0.0, $18305 = 0, $18306 = 0, $18307 = 0.0, $18308 = 0.0, $18309 = 0.0, $1831 = 0.0, $18310 = 0.0;
 var $18311 = 0.0, $18312 = 0.0, $18313 = 0.0, $18314 = 0, $18315 = 0.0, $18316 = 0, $18317 = 0.0, $18318 = 0.0, $18319 = 0.0, $1832 = 0.0, $18320 = 0.0, $18321 = 0.0, $18322 = 0.0, $18323 = 0.0, $18324 = 0.0, $18325 = 0.0, $18326 = 0.0, $18327 = 0.0, $18328 = 0.0, $18329 = 0.0;
 var $1833 = 0.0, $18330 = 0.0, $18331 = 0.0, $18332 = 0.0, $18333 = 0.0, $18334 = 0.0, $18335 = 0.0, $18336 = 0.0, $18337 = 0.0, $18338 = 0.0, $18339 = 0.0, $1834 = 0.0, $18340 = 0.0, $18341 = 0.0, $18342 = 0.0, $18343 = 0.0, $18344 = 0.0, $18345 = 0.0, $18346 = 0.0, $18347 = 0.0;
 var $18348 = 0.0, $18349 = 0.0, $1835 = 0.0, $18350 = 0.0, $18351 = 0.0, $18352 = 0.0, $18353 = 0.0, $18354 = 0.0, $18355 = 0.0, $18356 = 0.0, $18357 = 0.0, $18358 = 0.0, $18359 = 0.0, $1836 = 0.0, $18360 = 0.0, $18361 = 0.0, $18362 = 0.0, $18363 = 0.0, $18364 = 0.0, $18365 = 0.0;
 var $18366 = 0.0, $18367 = 0.0, $18368 = 0.0, $18369 = 0.0, $1837 = 0.0, $18370 = 0.0, $18371 = 0.0, $18372 = 0.0, $18373 = 0.0, $18374 = 0.0, $18375 = 0.0, $18376 = 0.0, $18377 = 0.0, $18378 = 0.0, $18379 = 0.0, $1838 = 0, $18380 = 0.0, $18381 = 0.0, $18382 = 0.0, $18383 = 0.0;
 var $18384 = 0.0, $18385 = 0.0, $18386 = 0.0, $18387 = 0.0, $18388 = 0.0, $18389 = 0.0, $1839 = 0.0, $18390 = 0.0, $18391 = 0.0, $18392 = 0.0, $18393 = 0.0, $18394 = 0.0, $18395 = 0.0, $18396 = 0, $18397 = 0.0, $18398 = 0.0, $18399 = 0.0, $184 = 0, $1840 = 0, $18400 = 0.0;
 var $18401 = 0.0, $18402 = 0.0, $18403 = 0.0, $18404 = 0.0, $18405 = 0.0, $18406 = 0, $18407 = 0.0, $18408 = 0, $18409 = 0.0, $1841 = 0.0, $18410 = 0, $18411 = 0.0, $18412 = 0, $18413 = 0.0, $18414 = 0.0, $18415 = 0.0, $18416 = 0.0, $18417 = 0.0, $18418 = 0.0, $18419 = 0.0;
 var $1842 = 0.0, $18420 = 0.0, $18421 = 0.0, $18422 = 0.0, $18423 = 0.0, $18424 = 0.0, $18425 = 0.0, $18426 = 0.0, $18427 = 0.0, $18428 = 0.0, $18429 = 0.0, $1843 = 0.0, $18430 = 0.0, $18431 = 0.0, $18432 = 0.0, $18433 = 0.0, $18434 = 0.0, $18435 = 0.0, $18436 = 0.0, $18437 = 0.0;
 var $18438 = 0.0, $18439 = 0.0, $1844 = 0.0, $18440 = 0.0, $18441 = 0.0, $18442 = 0.0, $18443 = 0.0, $18444 = 0.0, $18445 = 0.0, $18446 = 0.0, $18447 = 0.0, $18448 = 0.0, $18449 = 0.0, $1845 = 0.0, $18450 = 0.0, $18451 = 0.0, $18452 = 0.0, $18453 = 0.0, $18454 = 0.0, $18455 = 0.0;
 var $18456 = 0.0, $18457 = 0.0, $18458 = 0.0, $18459 = 0.0, $1846 = 0.0, $18460 = 0.0, $18461 = 0.0, $18462 = 0.0, $18463 = 0.0, $18464 = 0.0, $18465 = 0.0, $18466 = 0.0, $18467 = 0.0, $18468 = 0.0, $18469 = 0.0, $1847 = 0.0, $18470 = 0.0, $18471 = 0.0, $18472 = 0.0, $18473 = 0;
 var $18474 = 0, $18475 = 0.0, $18476 = 0.0, $18477 = 0.0, $18478 = 0.0, $18479 = 0.0, $1848 = 0.0, $18480 = 0, $18481 = 0, $18482 = 0.0, $18483 = 0.0, $18484 = 0.0, $18485 = 0.0, $18486 = 0.0, $18487 = 0.0, $18488 = 0.0, $18489 = 0, $1849 = 0.0, $18490 = 0.0, $18491 = 0;
 var $18492 = 0.0, $18493 = 0.0, $18494 = 0.0, $18495 = 0.0, $18496 = 0.0, $18497 = 0.0, $18498 = 0.0, $18499 = 0.0, $185 = 0, $1850 = 0, $18500 = 0.0, $18501 = 0.0, $18502 = 0.0, $18503 = 0.0, $18504 = 0.0, $18505 = 0.0, $18506 = 0.0, $18507 = 0.0, $18508 = 0.0, $18509 = 0.0;
 var $1851 = 0, $18510 = 0.0, $18511 = 0.0, $18512 = 0.0, $18513 = 0.0, $18514 = 0.0, $18515 = 0.0, $18516 = 0.0, $18517 = 0.0, $18518 = 0.0, $18519 = 0.0, $1852 = 0.0, $18520 = 0.0, $18521 = 0.0, $18522 = 0.0, $18523 = 0.0, $18524 = 0.0, $18525 = 0.0, $18526 = 0.0, $18527 = 0.0;
 var $18528 = 0.0, $18529 = 0.0, $1853 = 0.0, $18530 = 0.0, $18531 = 0.0, $18532 = 0.0, $18533 = 0.0, $18534 = 0.0, $18535 = 0.0, $18536 = 0.0, $18537 = 0.0, $18538 = 0.0, $18539 = 0.0, $1854 = 0.0, $18540 = 0.0, $18541 = 0.0, $18542 = 0.0, $18543 = 0.0, $18544 = 0.0, $18545 = 0.0;
 var $18546 = 0.0, $18547 = 0.0, $18548 = 0.0, $18549 = 0.0, $1855 = 0.0, $18550 = 0.0, $18551 = 0.0, $18552 = 0.0, $18553 = 0.0, $18554 = 0.0, $18555 = 0.0, $18556 = 0.0, $18557 = 0.0, $18558 = 0.0, $18559 = 0.0, $1856 = 0.0, $18560 = 0.0, $18561 = 0.0, $18562 = 0.0, $18563 = 0.0;
 var $18564 = 0.0, $18565 = 0.0, $18566 = 0.0, $18567 = 0.0, $18568 = 0.0, $18569 = 0.0, $1857 = 0.0, $18570 = 0.0, $18571 = 0.0, $18572 = 0.0, $18573 = 0.0, $18574 = 0.0, $18575 = 0.0, $18576 = 0.0, $18577 = 0.0, $18578 = 0.0, $18579 = 0.0, $1858 = 0.0, $18580 = 0.0, $18581 = 0.0;
 var $18582 = 0.0, $18583 = 0.0, $18584 = 0.0, $18585 = 0.0, $18586 = 0.0, $18587 = 0.0, $18588 = 0.0, $18589 = 0.0, $1859 = 0.0, $18590 = 0.0, $18591 = 0.0, $18592 = 0.0, $18593 = 0.0, $18594 = 0.0, $18595 = 0.0, $18596 = 0.0, $18597 = 0.0, $18598 = 0.0, $18599 = 0.0, $186 = 0;
 var $1860 = 0.0, $18600 = 0.0, $18601 = 0.0, $18602 = 0.0, $18603 = 0.0, $18604 = 0.0, $18605 = 0.0, $18606 = 0.0, $18607 = 0.0, $18608 = 0.0, $18609 = 0.0, $1861 = 0.0, $18610 = 0.0, $18611 = 0.0, $18612 = 0.0, $18613 = 0.0, $18614 = 0.0, $18615 = 0.0, $18616 = 0.0, $18617 = 0.0;
 var $18618 = 0.0, $18619 = 0.0, $1862 = 0, $18620 = 0.0, $18621 = 0.0, $18622 = 0.0, $18623 = 0.0, $18624 = 0.0, $18625 = 0.0, $18626 = 0.0, $18627 = 0.0, $18628 = 0.0, $18629 = 0.0, $1863 = 0, $18630 = 0, $18631 = 0.0, $18632 = 0.0, $18633 = 0.0, $18634 = 0.0, $18635 = 0.0;
 var $18636 = 0.0, $18637 = 0.0, $18638 = 0.0, $18639 = 0.0, $1864 = 0.0, $18640 = 0.0, $18641 = 0.0, $18642 = 0.0, $18643 = 0, $18644 = 0.0, $18645 = 0, $18646 = 0.0, $18647 = 0, $18648 = 0.0, $18649 = 0, $1865 = 0.0, $18650 = 0.0, $18651 = 0, $18652 = 0.0, $18653 = 0.0;
 var $18654 = 0.0, $18655 = 0.0, $18656 = 0.0, $18657 = 0.0, $18658 = 0.0, $18659 = 0.0, $1866 = 0.0, $18660 = 0.0, $18661 = 0.0, $18662 = 0.0, $18663 = 0.0, $18664 = 0.0, $18665 = 0.0, $18666 = 0.0, $18667 = 0.0, $18668 = 0.0, $18669 = 0.0, $1867 = 0.0, $18670 = 0.0, $18671 = 0.0;
 var $18672 = 0.0, $18673 = 0.0, $18674 = 0.0, $18675 = 0.0, $18676 = 0.0, $18677 = 0.0, $18678 = 0.0, $18679 = 0.0, $1868 = 0.0, $18680 = 0.0, $18681 = 0.0, $18682 = 0.0, $18683 = 0.0, $18684 = 0.0, $18685 = 0.0, $18686 = 0.0, $18687 = 0.0, $18688 = 0.0, $18689 = 0.0, $1869 = 0;
 var $18690 = 0.0, $18691 = 0.0, $18692 = 0.0, $18693 = 0.0, $18694 = 0.0, $18695 = 0.0, $18696 = 0.0, $18697 = 0.0, $18698 = 0.0, $18699 = 0.0, $187 = 0, $1870 = 0.0, $18700 = 0.0, $18701 = 0.0, $18702 = 0.0, $18703 = 0.0, $18704 = 0.0, $18705 = 0.0, $18706 = 0.0, $18707 = 0.0;
 var $18708 = 0.0, $18709 = 0.0, $1871 = 0.0, $18710 = 0.0, $18711 = 0.0, $18712 = 0, $18713 = 0, $18714 = 0.0, $18715 = 0.0, $18716 = 0.0, $18717 = 0.0, $18718 = 0.0, $18719 = 0.0, $1872 = 0.0, $18720 = 0.0, $18721 = 0, $18722 = 0, $18723 = 0.0, $18724 = 0.0, $18725 = 0.0;
 var $18726 = 0.0, $18727 = 0.0, $18728 = 0.0, $18729 = 0.0, $1873 = 0, $18730 = 0, $18731 = 0.0, $18732 = 0, $18733 = 0.0, $18734 = 0.0, $18735 = 0.0, $18736 = 0.0, $18737 = 0.0, $18738 = 0.0, $18739 = 0.0, $1874 = 0, $18740 = 0.0, $18741 = 0.0, $18742 = 0.0, $18743 = 0.0;
 var $18744 = 0.0, $18745 = 0.0, $18746 = 0.0, $18747 = 0.0, $18748 = 0.0, $18749 = 0.0, $1875 = 0, $18750 = 0.0, $18751 = 0.0, $18752 = 0.0, $18753 = 0.0, $18754 = 0.0, $18755 = 0.0, $18756 = 0.0, $18757 = 0.0, $18758 = 0.0, $18759 = 0.0, $1876 = 0, $18760 = 0.0, $18761 = 0.0;
 var $18762 = 0.0, $18763 = 0.0, $18764 = 0.0, $18765 = 0.0, $18766 = 0.0, $18767 = 0.0, $18768 = 0.0, $18769 = 0.0, $1877 = 0, $18770 = 0.0, $18771 = 0.0, $18772 = 0.0, $18773 = 0.0, $18774 = 0.0, $18775 = 0.0, $18776 = 0.0, $18777 = 0.0, $18778 = 0.0, $18779 = 0.0, $1878 = 0;
 var $18780 = 0.0, $18781 = 0.0, $18782 = 0.0, $18783 = 0.0, $18784 = 0.0, $18785 = 0.0, $18786 = 0.0, $18787 = 0.0, $18788 = 0.0, $18789 = 0.0, $1879 = 0, $18790 = 0.0, $18791 = 0.0, $18792 = 0.0, $18793 = 0.0, $18794 = 0.0, $18795 = 0.0, $18796 = 0.0, $18797 = 0.0, $18798 = 0.0;
 var $18799 = 0.0, $188 = 0, $1880 = 0, $18800 = 0.0, $18801 = 0.0, $18802 = 0.0, $18803 = 0.0, $18804 = 0.0, $18805 = 0.0, $18806 = 0.0, $18807 = 0.0, $18808 = 0.0, $18809 = 0.0, $1881 = 0, $18810 = 0.0, $18811 = 0.0, $18812 = 0.0, $18813 = 0.0, $18814 = 0.0, $18815 = 0.0;
 var $18816 = 0.0, $18817 = 0.0, $18818 = 0.0, $18819 = 0.0, $1882 = 0, $18820 = 0.0, $18821 = 0.0, $18822 = 0.0, $18823 = 0.0, $18824 = 0.0, $18825 = 0.0, $18826 = 0.0, $18827 = 0.0, $18828 = 0.0, $18829 = 0.0, $1883 = 0, $18830 = 0.0, $18831 = 0.0, $18832 = 0.0, $18833 = 0.0;
 var $18834 = 0.0, $18835 = 0.0, $18836 = 0.0, $18837 = 0.0, $18838 = 0.0, $18839 = 0.0, $1884 = 0, $18840 = 0.0, $18841 = 0.0, $18842 = 0.0, $18843 = 0.0, $18844 = 0.0, $18845 = 0.0, $18846 = 0.0, $18847 = 0.0, $18848 = 0.0, $18849 = 0.0, $1885 = 0, $18850 = 0.0, $18851 = 0.0;
 var $18852 = 0.0, $18853 = 0.0, $18854 = 0.0, $18855 = 0.0, $18856 = 0.0, $18857 = 0.0, $18858 = 0.0, $18859 = 0.0, $1886 = 0, $18860 = 0.0, $18861 = 0.0, $18862 = 0.0, $18863 = 0.0, $18864 = 0.0, $18865 = 0.0, $18866 = 0.0, $18867 = 0.0, $18868 = 0.0, $18869 = 0.0, $1887 = 0;
 var $18870 = 0.0, $18871 = 0, $18872 = 0.0, $18873 = 0.0, $18874 = 0.0, $18875 = 0.0, $18876 = 0.0, $18877 = 0.0, $18878 = 0.0, $18879 = 0.0, $1888 = 0, $18880 = 0.0, $18881 = 0.0, $18882 = 0.0, $18883 = 0.0, $18884 = 0, $18885 = 0.0, $18886 = 0, $18887 = 0.0, $18888 = 0;
 var $18889 = 0.0, $1889 = 0, $18890 = 0, $18891 = 0.0, $18892 = 0, $18893 = 0.0, $18894 = 0.0, $18895 = 0.0, $18896 = 0.0, $18897 = 0.0, $18898 = 0.0, $18899 = 0.0, $189 = 0, $1890 = 0, $18900 = 0.0, $18901 = 0.0, $18902 = 0.0, $18903 = 0.0, $18904 = 0.0, $18905 = 0.0;
 var $18906 = 0.0, $18907 = 0.0, $18908 = 0.0, $18909 = 0.0, $1891 = 0.0, $18910 = 0.0, $18911 = 0.0, $18912 = 0.0, $18913 = 0.0, $18914 = 0.0, $18915 = 0.0, $18916 = 0.0, $18917 = 0.0, $18918 = 0.0, $18919 = 0.0, $1892 = 0, $18920 = 0.0, $18921 = 0.0, $18922 = 0.0, $18923 = 0.0;
 var $18924 = 0.0, $18925 = 0.0, $18926 = 0.0, $18927 = 0.0, $18928 = 0.0, $18929 = 0.0, $1893 = 0.0, $18930 = 0.0, $18931 = 0.0, $18932 = 0.0, $18933 = 0, $18934 = 0, $18935 = 0.0, $18936 = 0.0, $18937 = 0.0, $18938 = 0.0, $18939 = 0.0, $1894 = 0.0, $18940 = 0.0, $18941 = 0.0;
 var $18942 = 0.0, $18943 = 0.0, $18944 = 0.0, $18945 = 0.0, $18946 = 0.0, $18947 = 0.0, $18948 = 0.0, $18949 = 0.0, $1895 = 0.0, $18950 = 0.0, $18951 = 0, $18952 = 0, $18953 = 0.0, $18954 = 0.0, $18955 = 0.0, $18956 = 0.0, $18957 = 0.0, $18958 = 0.0, $18959 = 0.0, $1896 = 0;
 var $18960 = 0, $18961 = 0.0, $18962 = 0, $18963 = 0.0, $18964 = 0.0, $18965 = 0.0, $18966 = 0.0, $18967 = 0.0, $18968 = 0.0, $18969 = 0.0, $1897 = 0.0, $18970 = 0.0, $18971 = 0.0, $18972 = 0.0, $18973 = 0.0, $18974 = 0.0, $18975 = 0.0, $18976 = 0.0, $18977 = 0.0, $18978 = 0.0;
 var $18979 = 0.0, $1898 = 0, $18980 = 0.0, $18981 = 0.0, $18982 = 0.0, $18983 = 0.0, $18984 = 0.0, $18985 = 0.0, $18986 = 0.0, $18987 = 0.0, $18988 = 0.0, $18989 = 0.0, $1899 = 0.0, $18990 = 0.0, $18991 = 0.0, $18992 = 0.0, $18993 = 0.0, $18994 = 0.0, $18995 = 0.0, $18996 = 0.0;
 var $18997 = 0.0, $18998 = 0.0, $18999 = 0.0, $19 = 0, $190 = 0, $1900 = 0.0, $19000 = 0.0, $19001 = 0.0, $19002 = 0.0, $19003 = 0.0, $19004 = 0.0, $19005 = 0.0, $19006 = 0.0, $19007 = 0.0, $19008 = 0.0, $19009 = 0.0, $1901 = 0.0, $19010 = 0.0, $19011 = 0.0, $19012 = 0.0;
 var $19013 = 0.0, $19014 = 0.0, $19015 = 0.0, $19016 = 0.0, $19017 = 0.0, $19018 = 0.0, $19019 = 0.0, $1902 = 0, $19020 = 0.0, $19021 = 0.0, $19022 = 0.0, $19023 = 0.0, $19024 = 0.0, $19025 = 0.0, $19026 = 0.0, $19027 = 0.0, $19028 = 0.0, $19029 = 0.0, $1903 = 0, $19030 = 0.0;
 var $19031 = 0.0, $19032 = 0.0, $19033 = 0.0, $19034 = 0.0, $19035 = 0.0, $19036 = 0.0, $19037 = 0.0, $19038 = 0.0, $19039 = 0.0, $1904 = 0, $19040 = 0.0, $19041 = 0.0, $19042 = 0.0, $19043 = 0.0, $19044 = 0.0, $19045 = 0.0, $19046 = 0.0, $19047 = 0.0, $19048 = 0.0, $19049 = 0.0;
 var $1905 = 0.0, $19050 = 0.0, $19051 = 0.0, $19052 = 0.0, $19053 = 0.0, $19054 = 0.0, $19055 = 0.0, $19056 = 0.0, $19057 = 0.0, $19058 = 0.0, $19059 = 0.0, $1906 = 0, $19060 = 0.0, $19061 = 0.0, $19062 = 0.0, $19063 = 0.0, $19064 = 0.0, $19065 = 0.0, $19066 = 0.0, $19067 = 0.0;
 var $19068 = 0.0, $19069 = 0.0, $1907 = 0.0, $19070 = 0.0, $19071 = 0.0, $19072 = 0.0, $19073 = 0.0, $19074 = 0.0, $19075 = 0.0, $19076 = 0.0, $19077 = 0.0, $19078 = 0.0, $19079 = 0.0, $1908 = 0, $19080 = 0.0, $19081 = 0.0, $19082 = 0.0, $19083 = 0.0, $19084 = 0.0, $19085 = 0.0;
 var $19086 = 0.0, $19087 = 0.0, $19088 = 0.0, $19089 = 0.0, $1909 = 0.0, $19090 = 0.0, $19091 = 0.0, $19092 = 0.0, $19093 = 0.0, $19094 = 0.0, $19095 = 0.0, $19096 = 0.0, $19097 = 0.0, $19098 = 0.0, $19099 = 0.0, $191 = 0, $1910 = 0.0, $19100 = 0.0, $19101 = 0, $19102 = 0.0;
 var $19103 = 0.0, $19104 = 0.0, $19105 = 0.0, $19106 = 0.0, $19107 = 0.0, $19108 = 0.0, $19109 = 0.0, $1911 = 0.0, $19110 = 0.0, $19111 = 0.0, $19112 = 0.0, $19113 = 0.0, $19114 = 0, $19115 = 0.0, $19116 = 0, $19117 = 0.0, $19118 = 0, $19119 = 0.0, $1912 = 0.0, $19120 = 0;
 var $19121 = 0.0, $19122 = 0, $19123 = 0, $19124 = 0, $19125 = 0, $19126 = 0, $19127 = 0, $19128 = 0, $19129 = 0, $1913 = 0.0, $1914 = 0.0, $1915 = 0.0, $1916 = 0.0, $1917 = 0.0, $1918 = 0.0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $1921 = 0.0, $1922 = 0.0;
 var $1923 = 0.0, $1924 = 0.0, $1925 = 0.0, $1926 = 0.0, $1927 = 0.0, $1928 = 0.0, $1929 = 0.0, $193 = 0, $1930 = 0.0, $1931 = 0.0, $1932 = 0.0, $1933 = 0.0, $1934 = 0.0, $1935 = 0.0, $1936 = 0.0, $1937 = 0.0, $1938 = 0.0, $1939 = 0.0, $194 = 0, $1940 = 0.0;
 var $1941 = 0.0, $1942 = 0.0, $1943 = 0.0, $1944 = 0.0, $1945 = 0.0, $1946 = 0.0, $1947 = 0.0, $1948 = 0.0, $1949 = 0.0, $195 = 0, $1950 = 0.0, $1951 = 0.0, $1952 = 0.0, $1953 = 0.0, $1954 = 0.0, $1955 = 0.0, $1956 = 0.0, $1957 = 0.0, $1958 = 0.0, $1959 = 0.0;
 var $196 = 0, $1960 = 0.0, $1961 = 0.0, $1962 = 0.0, $1963 = 0.0, $1964 = 0.0, $1965 = 0.0, $1966 = 0.0, $1967 = 0.0, $1968 = 0.0, $1969 = 0.0, $197 = 0, $1970 = 0, $1971 = 0.0, $1972 = 0.0, $1973 = 0.0, $1974 = 0.0, $1975 = 0.0, $1976 = 0.0, $1977 = 0.0;
 var $1978 = 0.0, $1979 = 0, $198 = 0, $1980 = 0.0, $1981 = 0, $1982 = 0.0, $1983 = 0, $1984 = 0, $1985 = 0.0, $1986 = 0.0, $1987 = 0.0, $1988 = 0.0, $1989 = 0.0, $199 = 0, $1990 = 0.0, $1991 = 0.0, $1992 = 0.0, $1993 = 0.0, $1994 = 0.0, $1995 = 0.0;
 var $1996 = 0.0, $1997 = 0.0, $1998 = 0.0, $1999 = 0.0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0.0, $2001 = 0, $2002 = 0.0, $2003 = 0.0, $2004 = 0.0, $2005 = 0.0, $2006 = 0.0, $2007 = 0, $2008 = 0.0, $2009 = 0, $201 = 0, $2010 = 0.0, $2011 = 0;
 var $2012 = 0.0, $2013 = 0, $2014 = 0.0, $2015 = 0, $2016 = 0.0, $2017 = 0.0, $2018 = 0.0, $2019 = 0.0, $202 = 0, $2020 = 0, $2021 = 0.0, $2022 = 0.0, $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0.0, $2029 = 0.0, $203 = 0;
 var $2030 = 0.0, $2031 = 0.0, $2032 = 0, $2033 = 0, $2034 = 0.0, $2035 = 0, $2036 = 0.0, $2037 = 0.0, $2038 = 0, $2039 = 0.0, $204 = 0, $2040 = 0.0, $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0.0;
 var $2049 = 0, $205 = 0, $2050 = 0.0, $2051 = 0, $2052 = 0.0, $2053 = 0.0, $2054 = 0.0, $2055 = 0.0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0.0, $2063 = 0, $2064 = 0.0, $2065 = 0.0, $2066 = 0.0;
 var $2067 = 0, $2068 = 0.0, $2069 = 0, $207 = 0, $2070 = 0.0, $2071 = 0.0, $2072 = 0.0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0.0, $2077 = 0.0, $2078 = 0.0, $2079 = 0.0, $208 = 0, $2080 = 0.0, $2081 = 0.0, $2082 = 0, $2083 = 0, $2084 = 0.0;
 var $2085 = 0.0, $2086 = 0.0, $2087 = 0.0, $2088 = 0.0, $2089 = 0.0, $209 = 0, $2090 = 0.0, $2091 = 0.0, $2092 = 0.0, $2093 = 0.0, $2094 = 0.0, $2095 = 0.0, $2096 = 0.0, $2097 = 0.0, $2098 = 0.0, $2099 = 0.0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0;
 var $2102 = 0.0, $2103 = 0.0, $2104 = 0.0, $2105 = 0.0, $2106 = 0.0, $2107 = 0, $2108 = 0.0, $2109 = 0.0, $211 = 0, $2110 = 0.0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0;
 var $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0.0, $213 = 0, $2130 = 0, $2131 = 0.0, $2132 = 0.0, $2133 = 0.0, $2134 = 0, $2135 = 0.0, $2136 = 0, $2137 = 0.0, $2138 = 0.0;
 var $2139 = 0.0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0.0, $2144 = 0, $2145 = 0.0, $2146 = 0, $2147 = 0.0, $2148 = 0.0, $2149 = 0.0, $215 = 0, $2150 = 0.0, $2151 = 0.0, $2152 = 0.0, $2153 = 0.0, $2154 = 0.0, $2155 = 0.0, $2156 = 0.0;
 var $2157 = 0.0, $2158 = 0.0, $2159 = 0.0, $216 = 0, $2160 = 0.0, $2161 = 0.0, $2162 = 0.0, $2163 = 0.0, $2164 = 0.0, $2165 = 0.0, $2166 = 0.0, $2167 = 0.0, $2168 = 0.0, $2169 = 0.0, $217 = 0, $2170 = 0.0, $2171 = 0.0, $2172 = 0.0, $2173 = 0.0, $2174 = 0.0;
 var $2175 = 0.0, $2176 = 0.0, $2177 = 0.0, $2178 = 0.0, $2179 = 0.0, $218 = 0, $2180 = 0.0, $2181 = 0.0, $2182 = 0.0, $2183 = 0.0, $2184 = 0.0, $2185 = 0.0, $2186 = 0.0, $2187 = 0.0, $2188 = 0.0, $2189 = 0.0, $219 = 0, $2190 = 0.0, $2191 = 0.0, $2192 = 0.0;
 var $2193 = 0.0, $2194 = 0.0, $2195 = 0.0, $2196 = 0.0, $2197 = 0.0, $2198 = 0.0, $2199 = 0.0, $22 = 0, $220 = 0, $2200 = 0.0, $2201 = 0.0, $2202 = 0.0, $2203 = 0.0, $2204 = 0.0, $2205 = 0.0, $2206 = 0.0, $2207 = 0.0, $2208 = 0.0, $2209 = 0.0, $221 = 0;
 var $2210 = 0.0, $2211 = 0, $2212 = 0.0, $2213 = 0.0, $2214 = 0.0, $2215 = 0.0, $2216 = 0.0, $2217 = 0.0, $2218 = 0.0, $2219 = 0.0, $222 = 0, $2220 = 0.0, $2221 = 0.0, $2222 = 0, $2223 = 0.0, $2224 = 0, $2225 = 0.0, $2226 = 0, $2227 = 0, $2228 = 0.0;
 var $2229 = 0.0, $223 = 0, $2230 = 0.0, $2231 = 0.0, $2232 = 0.0, $2233 = 0.0, $2234 = 0.0, $2235 = 0.0, $2236 = 0.0, $2237 = 0.0, $2238 = 0.0, $2239 = 0.0, $224 = 0, $2240 = 0.0, $2241 = 0, $2242 = 0, $2243 = 0.0, $2244 = 0.0, $2245 = 0.0, $2246 = 0.0;
 var $2247 = 0.0, $2248 = 0.0, $2249 = 0.0, $225 = 0, $2250 = 0.0, $2251 = 0.0, $2252 = 0.0, $2253 = 0, $2254 = 0, $2255 = 0.0, $2256 = 0.0, $2257 = 0.0, $2258 = 0.0, $2259 = 0.0, $226 = 0, $2260 = 0, $2261 = 0.0, $2262 = 0.0, $2263 = 0.0, $2264 = 0;
 var $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0.0;
 var $2283 = 0, $2284 = 0.0, $2285 = 0.0, $2286 = 0.0, $2287 = 0, $2288 = 0.0, $2289 = 0, $229 = 0, $2290 = 0.0, $2291 = 0.0, $2292 = 0.0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0.0, $2297 = 0, $2298 = 0.0, $2299 = 0, $23 = 0, $230 = 0;
 var $2300 = 0.0, $2301 = 0.0, $2302 = 0.0, $2303 = 0.0, $2304 = 0.0, $2305 = 0.0, $2306 = 0.0, $2307 = 0.0, $2308 = 0.0, $2309 = 0.0, $231 = 0, $2310 = 0.0, $2311 = 0.0, $2312 = 0.0, $2313 = 0.0, $2314 = 0.0, $2315 = 0.0, $2316 = 0.0, $2317 = 0.0, $2318 = 0.0;
 var $2319 = 0.0, $232 = 0, $2320 = 0.0, $2321 = 0.0, $2322 = 0.0, $2323 = 0.0, $2324 = 0.0, $2325 = 0.0, $2326 = 0.0, $2327 = 0.0, $2328 = 0.0, $2329 = 0.0, $233 = 0, $2330 = 0.0, $2331 = 0.0, $2332 = 0.0, $2333 = 0.0, $2334 = 0.0, $2335 = 0.0, $2336 = 0.0;
 var $2337 = 0.0, $2338 = 0.0, $2339 = 0.0, $234 = 0, $2340 = 0.0, $2341 = 0.0, $2342 = 0.0, $2343 = 0.0, $2344 = 0.0, $2345 = 0.0, $2346 = 0.0, $2347 = 0.0, $2348 = 0.0, $2349 = 0.0, $235 = 0, $2350 = 0.0, $2351 = 0.0, $2352 = 0.0, $2353 = 0.0, $2354 = 0.0;
 var $2355 = 0.0, $2356 = 0.0, $2357 = 0.0, $2358 = 0.0, $2359 = 0.0, $236 = 0, $2360 = 0.0, $2361 = 0.0, $2362 = 0.0, $2363 = 0, $2364 = 0.0, $2365 = 0.0, $2366 = 0.0, $2367 = 0.0, $2368 = 0.0, $2369 = 0.0, $237 = 0, $2370 = 0.0, $2371 = 0.0, $2372 = 0;
 var $2373 = 0.0, $2374 = 0, $2375 = 0.0, $2376 = 0, $2377 = 0, $2378 = 0.0, $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0.0, $2382 = 0.0, $2383 = 0.0, $2384 = 0.0, $2385 = 0.0, $2386 = 0.0, $2387 = 0.0, $2388 = 0.0, $2389 = 0.0, $239 = 0, $2390 = 0.0;
 var $2391 = 0.0, $2392 = 0.0, $2393 = 0.0, $2394 = 0.0, $2395 = 0.0, $2396 = 0.0, $2397 = 0.0, $2398 = 0.0, $2399 = 0.0, $24 = 0, $240 = 0, $2400 = 0.0, $2401 = 0.0, $2402 = 0.0, $2403 = 0.0, $2404 = 0.0, $2405 = 0.0, $2406 = 0.0, $2407 = 0.0, $2408 = 0.0;
 var $2409 = 0, $241 = 0, $2410 = 0.0, $2411 = 0.0, $2412 = 0.0, $2413 = 0.0, $2414 = 0.0, $2415 = 0.0, $2416 = 0.0, $2417 = 0, $2418 = 0.0, $2419 = 0, $242 = 0, $2420 = 0.0, $2421 = 0, $2422 = 0.0, $2423 = 0.0, $2424 = 0.0, $2425 = 0.0, $2426 = 0.0;
 var $2427 = 0.0, $2428 = 0.0, $2429 = 0.0, $243 = 0, $2430 = 0.0, $2431 = 0.0, $2432 = 0.0, $2433 = 0.0, $2434 = 0.0, $2435 = 0.0, $2436 = 0.0, $2437 = 0.0, $2438 = 0.0, $2439 = 0.0, $244 = 0, $2440 = 0.0, $2441 = 0.0, $2442 = 0.0, $2443 = 0.0, $2444 = 0.0;
 var $2445 = 0.0, $2446 = 0.0, $2447 = 0.0, $2448 = 0.0, $2449 = 0.0, $245 = 0, $2450 = 0.0, $2451 = 0.0, $2452 = 0.0, $2453 = 0.0, $2454 = 0.0, $2455 = 0.0, $2456 = 0.0, $2457 = 0.0, $2458 = 0.0, $2459 = 0.0, $246 = 0, $2460 = 0.0, $2461 = 0.0, $2462 = 0.0;
 var $2463 = 0.0, $2464 = 0.0, $2465 = 0.0, $2466 = 0.0, $2467 = 0.0, $2468 = 0.0, $2469 = 0.0, $247 = 0, $2470 = 0.0, $2471 = 0.0, $2472 = 0.0, $2473 = 0.0, $2474 = 0.0, $2475 = 0.0, $2476 = 0, $2477 = 0.0, $2478 = 0.0, $2479 = 0.0, $248 = 0, $2480 = 0.0;
 var $2481 = 0.0, $2482 = 0.0, $2483 = 0.0, $2484 = 0.0, $2485 = 0.0, $2486 = 0.0, $2487 = 0.0, $2488 = 0.0, $2489 = 0.0, $249 = 0, $2490 = 0.0, $2491 = 0.0, $2492 = 0.0, $2493 = 0.0, $2494 = 0.0, $2495 = 0.0, $2496 = 0.0, $2497 = 0.0, $2498 = 0.0, $2499 = 0.0;
 var $25 = 0, $250 = 0, $2500 = 0.0, $2501 = 0.0, $2502 = 0.0, $2503 = 0.0, $2504 = 0.0, $2505 = 0.0, $2506 = 0.0, $2507 = 0.0, $2508 = 0.0, $2509 = 0.0, $251 = 0, $2510 = 0.0, $2511 = 0.0, $2512 = 0.0, $2513 = 0.0, $2514 = 0.0, $2515 = 0.0, $2516 = 0.0;
 var $2517 = 0.0, $2518 = 0.0, $2519 = 0.0, $252 = 0, $2520 = 0.0, $2521 = 0.0, $2522 = 0.0, $2523 = 0.0, $2524 = 0.0, $2525 = 0, $2526 = 0.0, $2527 = 0.0, $2528 = 0.0, $2529 = 0.0, $253 = 0, $2530 = 0.0, $2531 = 0.0, $2532 = 0.0, $2533 = 0.0, $2534 = 0;
 var $2535 = 0.0, $2536 = 0, $2537 = 0, $2538 = 0.0, $2539 = 0.0, $254 = 0, $2540 = 0.0, $2541 = 0.0, $2542 = 0.0, $2543 = 0.0, $2544 = 0.0, $2545 = 0.0, $2546 = 0.0, $2547 = 0.0, $2548 = 0.0, $2549 = 0.0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0.0;
 var $2553 = 0.0, $2554 = 0.0, $2555 = 0.0, $2556 = 0.0, $2557 = 0.0, $2558 = 0.0, $2559 = 0.0, $256 = 0, $2560 = 0.0, $2561 = 0.0, $2562 = 0.0, $2563 = 0.0, $2564 = 0.0, $2565 = 0.0, $2566 = 0.0, $2567 = 0.0, $2568 = 0.0, $2569 = 0.0, $257 = 0, $2570 = 0.0;
 var $2571 = 0, $2572 = 0.0, $2573 = 0.0, $2574 = 0.0, $2575 = 0.0, $2576 = 0.0, $2577 = 0.0, $2578 = 0.0, $2579 = 0.0, $258 = 0, $2580 = 0.0, $2581 = 0.0, $2582 = 0.0, $2583 = 0, $2584 = 0.0, $2585 = 0.0, $2586 = 0.0, $2587 = 0.0, $2588 = 0.0, $2589 = 0.0;
 var $259 = 0, $2590 = 0.0, $2591 = 0.0, $2592 = 0.0, $2593 = 0.0, $2594 = 0.0, $2595 = 0, $2596 = 0.0, $2597 = 0, $2598 = 0.0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0.0, $2601 = 0.0, $2602 = 0.0, $2603 = 0.0, $2604 = 0.0, $2605 = 0.0, $2606 = 0.0;
 var $2607 = 0.0, $2608 = 0.0, $2609 = 0.0, $261 = 0, $2610 = 0.0, $2611 = 0, $2612 = 0, $2613 = 0.0, $2614 = 0.0, $2615 = 0.0, $2616 = 0.0, $2617 = 0.0, $2618 = 0.0, $2619 = 0.0, $262 = 0, $2620 = 0.0, $2621 = 0.0, $2622 = 0.0, $2623 = 0, $2624 = 0;
 var $2625 = 0.0, $2626 = 0.0, $2627 = 0.0, $2628 = 0.0, $2629 = 0.0, $263 = 0, $2630 = 0, $2631 = 0.0, $2632 = 0.0, $2633 = 0.0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0, $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0.0;
 var $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0.0, $2654 = 0, $2655 = 0.0, $2656 = 0.0, $2657 = 0.0, $2658 = 0, $2659 = 0.0, $266 = 0, $2660 = 0;
 var $2661 = 0.0, $2662 = 0.0, $2663 = 0.0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0.0, $2668 = 0, $2669 = 0.0, $267 = 0, $2670 = 0, $2671 = 0.0, $2672 = 0.0, $2673 = 0.0, $2674 = 0.0, $2675 = 0.0, $2676 = 0.0, $2677 = 0.0, $2678 = 0.0, $2679 = 0.0;
 var $268 = 0, $2680 = 0.0, $2681 = 0.0, $2682 = 0.0, $2683 = 0.0, $2684 = 0.0, $2685 = 0.0, $2686 = 0.0, $2687 = 0.0, $2688 = 0.0, $2689 = 0.0, $269 = 0, $2690 = 0.0, $2691 = 0.0, $2692 = 0.0, $2693 = 0.0, $2694 = 0.0, $2695 = 0.0, $2696 = 0.0, $2697 = 0.0;
 var $2698 = 0.0, $2699 = 0.0, $27 = 0, $270 = 0, $2700 = 0.0, $2701 = 0.0, $2702 = 0.0, $2703 = 0.0, $2704 = 0.0, $2705 = 0.0, $2706 = 0.0, $2707 = 0.0, $2708 = 0.0, $2709 = 0.0, $271 = 0, $2710 = 0.0, $2711 = 0.0, $2712 = 0.0, $2713 = 0.0, $2714 = 0.0;
 var $2715 = 0.0, $2716 = 0.0, $2717 = 0.0, $2718 = 0.0, $2719 = 0.0, $272 = 0, $2720 = 0.0, $2721 = 0.0, $2722 = 0.0, $2723 = 0.0, $2724 = 0.0, $2725 = 0.0, $2726 = 0.0, $2727 = 0.0, $2728 = 0.0, $2729 = 0.0, $273 = 0, $2730 = 0.0, $2731 = 0.0, $2732 = 0;
 var $2733 = 0.0, $2734 = 0.0, $2735 = 0.0, $2736 = 0.0, $2737 = 0.0, $2738 = 0.0, $2739 = 0.0, $274 = 0, $2740 = 0.0, $2741 = 0, $2742 = 0.0, $2743 = 0, $2744 = 0.0, $2745 = 0, $2746 = 0, $2747 = 0.0, $2748 = 0.0, $2749 = 0.0, $275 = 0, $2750 = 0.0;
 var $2751 = 0.0, $2752 = 0.0, $2753 = 0.0, $2754 = 0.0, $2755 = 0, $2756 = 0.0, $2757 = 0, $2758 = 0, $2759 = 0.0, $276 = 0, $2760 = 0.0, $2761 = 0.0, $2762 = 0.0, $2763 = 0.0, $2764 = 0.0, $2765 = 0.0, $2766 = 0.0, $2767 = 0.0, $2768 = 0.0, $2769 = 0.0;
 var $277 = 0, $2770 = 0.0, $2771 = 0, $2772 = 0, $2773 = 0.0, $2774 = 0.0, $2775 = 0.0, $2776 = 0.0, $2777 = 0.0, $2778 = 0.0, $2779 = 0.0, $278 = 0, $2780 = 0.0, $2781 = 0.0, $2782 = 0.0, $2783 = 0.0, $2784 = 0.0, $2785 = 0.0, $2786 = 0.0, $2787 = 0.0;
 var $2788 = 0.0, $2789 = 0.0, $279 = 0, $2790 = 0.0, $2791 = 0.0, $2792 = 0.0, $2793 = 0.0, $2794 = 0.0, $2795 = 0.0, $2796 = 0.0, $2797 = 0.0, $2798 = 0.0, $2799 = 0.0, $28 = 0, $280 = 0, $2800 = 0, $2801 = 0.0, $2802 = 0.0, $2803 = 0.0, $2804 = 0.0;
 var $2805 = 0.0, $2806 = 0.0, $2807 = 0.0, $2808 = 0.0, $2809 = 0.0, $281 = 0, $2810 = 0.0, $2811 = 0.0, $2812 = 0, $2813 = 0.0, $2814 = 0.0, $2815 = 0.0, $2816 = 0.0, $2817 = 0.0, $2818 = 0.0, $2819 = 0.0, $282 = 0, $2820 = 0.0, $2821 = 0.0, $2822 = 0.0;
 var $2823 = 0.0, $2824 = 0, $2825 = 0.0, $2826 = 0, $2827 = 0.0, $2828 = 0, $2829 = 0.0, $283 = 0, $2830 = 0.0, $2831 = 0.0, $2832 = 0.0, $2833 = 0.0, $2834 = 0.0, $2835 = 0.0, $2836 = 0.0, $2837 = 0.0, $2838 = 0.0, $2839 = 0.0, $284 = 0, $2840 = 0;
 var $2841 = 0, $2842 = 0.0, $2843 = 0.0, $2844 = 0.0, $2845 = 0.0, $2846 = 0.0, $2847 = 0.0, $2848 = 0.0, $2849 = 0.0, $285 = 0, $2850 = 0.0, $2851 = 0.0, $2852 = 0, $2853 = 0, $2854 = 0.0, $2855 = 0.0, $2856 = 0.0, $2857 = 0.0, $2858 = 0.0, $2859 = 0;
 var $286 = 0, $2860 = 0.0, $2861 = 0.0, $2862 = 0.0, $2863 = 0, $2864 = 0, $2865 = 0, $2866 = 0, $2867 = 0, $2868 = 0, $2869 = 0, $287 = 0, $2870 = 0, $2871 = 0, $2872 = 0, $2873 = 0, $2874 = 0, $2875 = 0, $2876 = 0, $2877 = 0;
 var $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0.0, $2882 = 0, $2883 = 0.0, $2884 = 0.0, $2885 = 0.0, $2886 = 0, $2887 = 0.0, $2888 = 0, $2889 = 0.0, $289 = 0, $2890 = 0.0, $2891 = 0.0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0.0;
 var $2896 = 0, $2897 = 0.0, $2898 = 0, $2899 = 0.0, $29 = 0, $290 = 0, $2900 = 0.0, $2901 = 0.0, $2902 = 0.0, $2903 = 0.0, $2904 = 0.0, $2905 = 0.0, $2906 = 0.0, $2907 = 0.0, $2908 = 0.0, $2909 = 0.0, $291 = 0, $2910 = 0.0, $2911 = 0.0, $2912 = 0.0;
 var $2913 = 0.0, $2914 = 0.0, $2915 = 0.0, $2916 = 0.0, $2917 = 0.0, $2918 = 0.0, $2919 = 0.0, $292 = 0, $2920 = 0.0, $2921 = 0.0, $2922 = 0.0, $2923 = 0.0, $2924 = 0.0, $2925 = 0.0, $2926 = 0.0, $2927 = 0.0, $2928 = 0.0, $2929 = 0.0, $293 = 0, $2930 = 0.0;
 var $2931 = 0.0, $2932 = 0.0, $2933 = 0.0, $2934 = 0.0, $2935 = 0.0, $2936 = 0.0, $2937 = 0.0, $2938 = 0.0, $2939 = 0.0, $294 = 0, $2940 = 0.0, $2941 = 0.0, $2942 = 0.0, $2943 = 0.0, $2944 = 0.0, $2945 = 0.0, $2946 = 0.0, $2947 = 0.0, $2948 = 0.0, $2949 = 0.0;
 var $295 = 0, $2950 = 0.0, $2951 = 0.0, $2952 = 0.0, $2953 = 0.0, $2954 = 0.0, $2955 = 0.0, $2956 = 0.0, $2957 = 0.0, $2958 = 0, $2959 = 0.0, $296 = 0, $2960 = 0.0, $2961 = 0.0, $2962 = 0.0, $2963 = 0.0, $2964 = 0.0, $2965 = 0.0, $2966 = 0.0, $2967 = 0;
 var $2968 = 0.0, $2969 = 0, $297 = 0, $2970 = 0.0, $2971 = 0, $2972 = 0, $2973 = 0.0, $2974 = 0.0, $2975 = 0.0, $2976 = 0.0, $2977 = 0.0, $2978 = 0.0, $2979 = 0.0, $298 = 0, $2980 = 0.0, $2981 = 0.0, $2982 = 0.0, $2983 = 0.0, $2984 = 0.0, $2985 = 0.0;
 var $2986 = 0.0, $2987 = 0.0, $2988 = 0.0, $2989 = 0.0, $299 = 0, $2990 = 0.0, $2991 = 0, $2992 = 0.0, $2993 = 0.0, $2994 = 0.0, $2995 = 0.0, $2996 = 0.0, $2997 = 0, $2998 = 0.0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0.0, $3001 = 0;
 var $3002 = 0.0, $3003 = 0, $3004 = 0.0, $3005 = 0, $3006 = 0.0, $3007 = 0, $3008 = 0.0, $3009 = 0.0, $301 = 0, $3010 = 0.0, $3011 = 0.0, $3012 = 0, $3013 = 0.0, $3014 = 0.0, $3015 = 0, $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0;
 var $3020 = 0.0, $3021 = 0.0, $3022 = 0.0, $3023 = 0.0, $3024 = 0, $3025 = 0, $3026 = 0.0, $3027 = 0, $3028 = 0.0, $3029 = 0.0, $303 = 0, $3030 = 0, $3031 = 0.0, $3032 = 0.0, $3033 = 0, $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0;
 var $3039 = 0, $304 = 0, $3040 = 0.0, $3041 = 0, $3042 = 0.0, $3043 = 0, $3044 = 0.0, $3045 = 0.0, $3046 = 0.0, $3047 = 0.0, $3048 = 0, $3049 = 0, $305 = 0, $3050 = 0, $3051 = 0, $3052 = 0, $3053 = 0, $3054 = 0.0, $3055 = 0, $3056 = 0.0;
 var $3057 = 0.0, $3058 = 0.0, $3059 = 0, $306 = 0, $3060 = 0.0, $3061 = 0, $3062 = 0.0, $3063 = 0.0, $3064 = 0.0, $3065 = 0, $3066 = 0, $3067 = 0, $3068 = 0.0, $3069 = 0.0, $307 = 0, $3070 = 0.0, $3071 = 0.0, $3072 = 0.0, $3073 = 0.0, $3074 = 0;
 var $3075 = 0, $3076 = 0.0, $3077 = 0.0, $3078 = 0.0, $3079 = 0.0, $308 = 0, $3080 = 0.0, $3081 = 0.0, $3082 = 0.0, $3083 = 0.0, $3084 = 0.0, $3085 = 0.0, $3086 = 0.0, $3087 = 0.0, $3088 = 0.0, $3089 = 0.0, $309 = 0, $3090 = 0.0, $3091 = 0.0, $3092 = 0;
 var $3093 = 0, $3094 = 0.0, $3095 = 0.0, $3096 = 0.0, $3097 = 0.0, $3098 = 0.0, $3099 = 0, $31 = 0, $310 = 0, $3100 = 0.0, $3101 = 0.0, $3102 = 0.0, $3103 = 0, $3104 = 0, $3105 = 0, $3106 = 0, $3107 = 0, $3108 = 0, $3109 = 0, $311 = 0;
 var $3110 = 0, $3111 = 0, $3112 = 0, $3113 = 0, $3114 = 0, $3115 = 0, $3116 = 0, $3117 = 0, $3118 = 0, $3119 = 0, $312 = 0, $3120 = 0, $3121 = 0.0, $3122 = 0, $3123 = 0.0, $3124 = 0.0, $3125 = 0.0, $3126 = 0, $3127 = 0.0, $3128 = 0;
 var $3129 = 0.0, $313 = 0, $3130 = 0.0, $3131 = 0.0, $3132 = 0, $3133 = 0, $3134 = 0, $3135 = 0.0, $3136 = 0, $3137 = 0.0, $3138 = 0, $3139 = 0.0, $314 = 0, $3140 = 0.0, $3141 = 0.0, $3142 = 0.0, $3143 = 0.0, $3144 = 0.0, $3145 = 0.0, $3146 = 0.0;
 var $3147 = 0.0, $3148 = 0.0, $3149 = 0.0, $315 = 0, $3150 = 0.0, $3151 = 0.0, $3152 = 0.0, $3153 = 0.0, $3154 = 0.0, $3155 = 0.0, $3156 = 0.0, $3157 = 0.0, $3158 = 0.0, $3159 = 0.0, $316 = 0, $3160 = 0.0, $3161 = 0.0, $3162 = 0.0, $3163 = 0.0, $3164 = 0.0;
 var $3165 = 0.0, $3166 = 0.0, $3167 = 0.0, $3168 = 0.0, $3169 = 0.0, $317 = 0, $3170 = 0.0, $3171 = 0.0, $3172 = 0.0, $3173 = 0.0, $3174 = 0.0, $3175 = 0.0, $3176 = 0.0, $3177 = 0.0, $3178 = 0.0, $3179 = 0.0, $318 = 0, $3180 = 0.0, $3181 = 0.0, $3182 = 0.0;
 var $3183 = 0.0, $3184 = 0.0, $3185 = 0.0, $3186 = 0.0, $3187 = 0.0, $3188 = 0.0, $3189 = 0.0, $319 = 0, $3190 = 0.0, $3191 = 0.0, $3192 = 0.0, $3193 = 0.0, $3194 = 0.0, $3195 = 0.0, $3196 = 0.0, $3197 = 0.0, $3198 = 0.0, $3199 = 0.0, $32 = 0, $320 = 0;
 var $3200 = 0.0, $3201 = 0.0, $3202 = 0, $3203 = 0.0, $3204 = 0.0, $3205 = 0.0, $3206 = 0.0, $3207 = 0.0, $3208 = 0.0, $3209 = 0.0, $321 = 0, $3210 = 0.0, $3211 = 0.0, $3212 = 0.0, $3213 = 0, $3214 = 0.0, $3215 = 0, $3216 = 0.0, $3217 = 0, $3218 = 0;
 var $3219 = 0.0, $322 = 0, $3220 = 0.0, $3221 = 0.0, $3222 = 0.0, $3223 = 0.0, $3224 = 0.0, $3225 = 0.0, $3226 = 0.0, $3227 = 0.0, $3228 = 0.0, $3229 = 0.0, $323 = 0, $3230 = 0.0, $3231 = 0.0, $3232 = 0, $3233 = 0, $3234 = 0.0, $3235 = 0.0, $3236 = 0.0;
 var $3237 = 0.0, $3238 = 0.0, $3239 = 0.0, $324 = 0, $3240 = 0.0, $3241 = 0.0, $3242 = 0.0, $3243 = 0.0, $3244 = 0, $3245 = 0, $3246 = 0.0, $3247 = 0.0, $3248 = 0.0, $3249 = 0.0, $325 = 0, $3250 = 0.0, $3251 = 0, $3252 = 0.0, $3253 = 0.0, $3254 = 0.0;
 var $3255 = 0, $3256 = 0, $3257 = 0, $3258 = 0, $3259 = 0, $326 = 0, $3260 = 0, $3261 = 0, $3262 = 0, $3263 = 0, $3264 = 0, $3265 = 0, $3266 = 0, $3267 = 0, $3268 = 0, $3269 = 0, $327 = 0, $3270 = 0, $3271 = 0, $3272 = 0;
 var $3273 = 0.0, $3274 = 0, $3275 = 0.0, $3276 = 0.0, $3277 = 0.0, $3278 = 0, $3279 = 0.0, $328 = 0, $3280 = 0, $3281 = 0.0, $3282 = 0.0, $3283 = 0.0, $3284 = 0, $3285 = 0, $3286 = 0, $3287 = 0.0, $3288 = 0, $3289 = 0.0, $329 = 0, $3290 = 0;
 var $3291 = 0.0, $3292 = 0.0, $3293 = 0.0, $3294 = 0.0, $3295 = 0.0, $3296 = 0.0, $3297 = 0.0, $3298 = 0.0, $3299 = 0.0, $33 = 0, $330 = 0, $3300 = 0.0, $3301 = 0.0, $3302 = 0.0, $3303 = 0.0, $3304 = 0.0, $3305 = 0.0, $3306 = 0.0, $3307 = 0.0, $3308 = 0.0;
 var $3309 = 0.0, $331 = 0, $3310 = 0.0, $3311 = 0.0, $3312 = 0.0, $3313 = 0.0, $3314 = 0.0, $3315 = 0.0, $3316 = 0.0, $3317 = 0.0, $3318 = 0.0, $3319 = 0.0, $332 = 0, $3320 = 0.0, $3321 = 0.0, $3322 = 0.0, $3323 = 0.0, $3324 = 0.0, $3325 = 0.0, $3326 = 0.0;
 var $3327 = 0.0, $3328 = 0.0, $3329 = 0.0, $333 = 0, $3330 = 0.0, $3331 = 0.0, $3332 = 0.0, $3333 = 0.0, $3334 = 0.0, $3335 = 0.0, $3336 = 0.0, $3337 = 0.0, $3338 = 0.0, $3339 = 0.0, $334 = 0, $3340 = 0.0, $3341 = 0.0, $3342 = 0.0, $3343 = 0.0, $3344 = 0.0;
 var $3345 = 0.0, $3346 = 0.0, $3347 = 0.0, $3348 = 0.0, $3349 = 0.0, $335 = 0, $3350 = 0.0, $3351 = 0.0, $3352 = 0, $3353 = 0.0, $3354 = 0.0, $3355 = 0.0, $3356 = 0.0, $3357 = 0.0, $3358 = 0.0, $3359 = 0.0, $336 = 0, $3360 = 0.0, $3361 = 0, $3362 = 0.0;
 var $3363 = 0, $3364 = 0.0, $3365 = 0, $3366 = 0, $3367 = 0.0, $3368 = 0.0, $3369 = 0.0, $337 = 0, $3370 = 0.0, $3371 = 0.0, $3372 = 0.0, $3373 = 0.0, $3374 = 0.0, $3375 = 0.0, $3376 = 0.0, $3377 = 0.0, $3378 = 0.0, $3379 = 0.0, $338 = 0, $3380 = 0.0;
 var $3381 = 0.0, $3382 = 0.0, $3383 = 0.0, $3384 = 0.0, $3385 = 0.0, $3386 = 0.0, $3387 = 0.0, $3388 = 0.0, $3389 = 0, $339 = 0, $3390 = 0.0, $3391 = 0.0, $3392 = 0.0, $3393 = 0, $3394 = 0.0, $3395 = 0, $3396 = 0.0, $3397 = 0.0, $3398 = 0.0, $3399 = 0.0;
 var $34 = 0, $340 = 0, $3400 = 0.0, $3401 = 0.0, $3402 = 0.0, $3403 = 0.0, $3404 = 0.0, $3405 = 0.0, $3406 = 0.0, $3407 = 0.0, $3408 = 0.0, $3409 = 0.0, $341 = 0, $3410 = 0.0, $3411 = 0.0, $3412 = 0.0, $3413 = 0.0, $3414 = 0.0, $3415 = 0.0, $3416 = 0.0;
 var $3417 = 0.0, $3418 = 0.0, $3419 = 0.0, $342 = 0, $3420 = 0.0, $3421 = 0.0, $3422 = 0.0, $3423 = 0.0, $3424 = 0.0, $3425 = 0.0, $3426 = 0.0, $3427 = 0.0, $3428 = 0.0, $3429 = 0.0, $343 = 0, $3430 = 0.0, $3431 = 0.0, $3432 = 0.0, $3433 = 0.0, $3434 = 0.0;
 var $3435 = 0.0, $3436 = 0.0, $3437 = 0.0, $3438 = 0.0, $3439 = 0.0, $344 = 0, $3440 = 0.0, $3441 = 0.0, $3442 = 0.0, $3443 = 0.0, $3444 = 0.0, $3445 = 0.0, $3446 = 0.0, $3447 = 0.0, $3448 = 0.0, $3449 = 0.0, $345 = 0, $3450 = 0.0, $3451 = 0.0, $3452 = 0.0;
 var $3453 = 0, $3454 = 0.0, $3455 = 0.0, $3456 = 0.0, $3457 = 0.0, $3458 = 0.0, $3459 = 0.0, $346 = 0, $3460 = 0.0, $3461 = 0.0, $3462 = 0.0, $3463 = 0.0, $3464 = 0.0, $3465 = 0.0, $3466 = 0.0, $3467 = 0.0, $3468 = 0.0, $3469 = 0.0, $347 = 0, $3470 = 0.0;
 var $3471 = 0.0, $3472 = 0.0, $3473 = 0.0, $3474 = 0.0, $3475 = 0.0, $3476 = 0.0, $3477 = 0.0, $3478 = 0.0, $3479 = 0.0, $348 = 0, $3480 = 0.0, $3481 = 0.0, $3482 = 0.0, $3483 = 0.0, $3484 = 0.0, $3485 = 0.0, $3486 = 0.0, $3487 = 0.0, $3488 = 0.0, $3489 = 0.0;
 var $349 = 0, $3490 = 0.0, $3491 = 0.0, $3492 = 0.0, $3493 = 0.0, $3494 = 0.0, $3495 = 0.0, $3496 = 0.0, $3497 = 0.0, $3498 = 0.0, $3499 = 0.0, $35 = 0, $350 = 0, $3500 = 0.0, $3501 = 0.0, $3502 = 0.0, $3503 = 0.0, $3504 = 0.0, $3505 = 0.0, $3506 = 0.0;
 var $3507 = 0.0, $3508 = 0.0, $3509 = 0.0, $351 = 0, $3510 = 0.0, $3511 = 0, $3512 = 0.0, $3513 = 0.0, $3514 = 0.0, $3515 = 0.0, $3516 = 0.0, $3517 = 0.0, $3518 = 0.0, $3519 = 0.0, $352 = 0, $3520 = 0.0, $3521 = 0.0, $3522 = 0.0, $3523 = 0.0, $3524 = 0.0;
 var $3525 = 0.0, $3526 = 0.0, $3527 = 0.0, $3528 = 0.0, $3529 = 0.0, $353 = 0, $3530 = 0.0, $3531 = 0.0, $3532 = 0.0, $3533 = 0.0, $3534 = 0.0, $3535 = 0.0, $3536 = 0.0, $3537 = 0.0, $3538 = 0.0, $3539 = 0.0, $354 = 0, $3540 = 0.0, $3541 = 0.0, $3542 = 0.0;
 var $3543 = 0.0, $3544 = 0.0, $3545 = 0.0, $3546 = 0.0, $3547 = 0.0, $3548 = 0.0, $3549 = 0.0, $355 = 0, $3550 = 0.0, $3551 = 0.0, $3552 = 0.0, $3553 = 0.0, $3554 = 0.0, $3555 = 0.0, $3556 = 0.0, $3557 = 0.0, $3558 = 0.0, $3559 = 0.0, $356 = 0, $3560 = 0.0;
 var $3561 = 0.0, $3562 = 0.0, $3563 = 0.0, $3564 = 0.0, $3565 = 0.0, $3566 = 0.0, $3567 = 0.0, $3568 = 0, $3569 = 0.0, $357 = 0, $3570 = 0.0, $3571 = 0.0, $3572 = 0.0, $3573 = 0.0, $3574 = 0.0, $3575 = 0.0, $3576 = 0.0, $3577 = 0, $3578 = 0.0, $3579 = 0.0;
 var $358 = 0, $3580 = 0.0, $3581 = 0.0, $3582 = 0.0, $3583 = 0.0, $3584 = 0.0, $3585 = 0.0, $3586 = 0, $3587 = 0.0, $3588 = 0, $3589 = 0, $359 = 0, $3590 = 0.0, $3591 = 0.0, $3592 = 0.0, $3593 = 0.0, $3594 = 0.0, $3595 = 0.0, $3596 = 0.0, $3597 = 0.0;
 var $3598 = 0.0, $3599 = 0.0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0, $3602 = 0.0, $3603 = 0.0, $3604 = 0.0, $3605 = 0.0, $3606 = 0.0, $3607 = 0.0, $3608 = 0.0, $3609 = 0.0, $361 = 0, $3610 = 0.0, $3611 = 0, $3612 = 0.0, $3613 = 0.0, $3614 = 0.0;
 var $3615 = 0.0, $3616 = 0.0, $3617 = 0.0, $3618 = 0.0, $3619 = 0.0, $362 = 0, $3620 = 0.0, $3621 = 0.0, $3622 = 0.0, $3623 = 0.0, $3624 = 0.0, $3625 = 0.0, $3626 = 0, $3627 = 0.0, $3628 = 0.0, $3629 = 0.0, $363 = 0, $3630 = 0.0, $3631 = 0.0, $3632 = 0;
 var $3633 = 0.0, $3634 = 0, $3635 = 0.0, $3636 = 0.0, $3637 = 0.0, $3638 = 0.0, $3639 = 0.0, $364 = 0, $3640 = 0.0, $3641 = 0.0, $3642 = 0.0, $3643 = 0.0, $3644 = 0.0, $3645 = 0.0, $3646 = 0, $3647 = 0, $3648 = 0.0, $3649 = 0.0, $365 = 0, $3650 = 0.0;
 var $3651 = 0.0, $3652 = 0.0, $3653 = 0, $3654 = 0.0, $3655 = 0.0, $3656 = 0.0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0, $3662 = 0, $3663 = 0, $3664 = 0, $3665 = 0, $3666 = 0, $3667 = 0, $3668 = 0, $3669 = 0;
 var $367 = 0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0.0, $3676 = 0, $3677 = 0.0, $3678 = 0.0, $3679 = 0.0, $368 = 0, $3680 = 0, $3681 = 0.0, $3682 = 0, $3683 = 0.0, $3684 = 0.0, $3685 = 0.0, $3686 = 0, $3687 = 0;
 var $3688 = 0, $3689 = 0.0, $369 = 0, $3690 = 0, $3691 = 0.0, $3692 = 0, $3693 = 0.0, $3694 = 0.0, $3695 = 0.0, $3696 = 0.0, $3697 = 0.0, $3698 = 0.0, $3699 = 0.0, $37 = 0, $370 = 0, $3700 = 0.0, $3701 = 0.0, $3702 = 0.0, $3703 = 0.0, $3704 = 0.0;
 var $3705 = 0.0, $3706 = 0.0, $3707 = 0.0, $3708 = 0.0, $3709 = 0.0, $371 = 0, $3710 = 0.0, $3711 = 0.0, $3712 = 0.0, $3713 = 0.0, $3714 = 0.0, $3715 = 0.0, $3716 = 0.0, $3717 = 0.0, $3718 = 0.0, $3719 = 0.0, $372 = 0, $3720 = 0.0, $3721 = 0.0, $3722 = 0.0;
 var $3723 = 0.0, $3724 = 0.0, $3725 = 0.0, $3726 = 0.0, $3727 = 0.0, $3728 = 0.0, $3729 = 0.0, $373 = 0, $3730 = 0.0, $3731 = 0.0, $3732 = 0.0, $3733 = 0.0, $3734 = 0.0, $3735 = 0.0, $3736 = 0.0, $3737 = 0.0, $3738 = 0.0, $3739 = 0.0, $374 = 0, $3740 = 0.0;
 var $3741 = 0.0, $3742 = 0.0, $3743 = 0.0, $3744 = 0.0, $3745 = 0.0, $3746 = 0.0, $3747 = 0.0, $3748 = 0.0, $3749 = 0.0, $375 = 0, $3750 = 0.0, $3751 = 0.0, $3752 = 0.0, $3753 = 0.0, $3754 = 0.0, $3755 = 0.0, $3756 = 0.0, $3757 = 0.0, $3758 = 0.0, $3759 = 0.0;
 var $376 = 0, $3760 = 0.0, $3761 = 0.0, $3762 = 0.0, $3763 = 0.0, $3764 = 0.0, $3765 = 0.0, $3766 = 0.0, $3767 = 0.0, $3768 = 0.0, $3769 = 0.0, $377 = 0, $3770 = 0.0, $3771 = 0.0, $3772 = 0.0, $3773 = 0.0, $3774 = 0.0, $3775 = 0.0, $3776 = 0, $3777 = 0.0;
 var $3778 = 0.0, $3779 = 0.0, $378 = 0, $3780 = 0.0, $3781 = 0.0, $3782 = 0.0, $3783 = 0.0, $3784 = 0.0, $3785 = 0.0, $3786 = 0, $3787 = 0.0, $3788 = 0, $3789 = 0.0, $379 = 0, $3790 = 0, $3791 = 0.0, $3792 = 0, $3793 = 0, $3794 = 0.0, $3795 = 0.0;
 var $3796 = 0.0, $3797 = 0.0, $3798 = 0.0, $3799 = 0.0, $38 = 0, $380 = 0, $3800 = 0.0, $3801 = 0.0, $3802 = 0, $3803 = 0.0, $3804 = 0, $3805 = 0, $3806 = 0.0, $3807 = 0.0, $3808 = 0.0, $3809 = 0.0, $381 = 0, $3810 = 0.0, $3811 = 0.0, $3812 = 0.0;
 var $3813 = 0.0, $3814 = 0.0, $3815 = 0.0, $3816 = 0, $3817 = 0, $3818 = 0.0, $3819 = 0.0, $382 = 0, $3820 = 0.0, $3821 = 0.0, $3822 = 0.0, $3823 = 0.0, $3824 = 0.0, $3825 = 0.0, $3826 = 0.0, $3827 = 0.0, $3828 = 0.0, $3829 = 0.0, $383 = 0, $3830 = 0.0;
 var $3831 = 0.0, $3832 = 0.0, $3833 = 0.0, $3834 = 0.0, $3835 = 0, $3836 = 0.0, $3837 = 0.0, $3838 = 0.0, $3839 = 0.0, $384 = 0, $3840 = 0.0, $3841 = 0.0, $3842 = 0.0, $3843 = 0.0, $3844 = 0.0, $3845 = 0.0, $3846 = 0.0, $3847 = 0.0, $3848 = 0.0, $3849 = 0.0;
 var $385 = 0, $3850 = 0, $3851 = 0.0, $3852 = 0.0, $3853 = 0.0, $3854 = 0.0, $3855 = 0.0, $3856 = 0, $3857 = 0.0, $3858 = 0, $3859 = 0.0, $386 = 0, $3860 = 0.0, $3861 = 0.0, $3862 = 0.0, $3863 = 0.0, $3864 = 0.0, $3865 = 0.0, $3866 = 0.0, $3867 = 0.0;
 var $3868 = 0.0, $3869 = 0.0, $387 = 0, $3870 = 0.0, $3871 = 0.0, $3872 = 0.0, $3873 = 0.0, $3874 = 0.0, $3875 = 0.0, $3876 = 0.0, $3877 = 0.0, $3878 = 0.0, $3879 = 0.0, $388 = 0, $3880 = 0, $3881 = 0, $3882 = 0.0, $3883 = 0.0, $3884 = 0.0, $3885 = 0.0;
 var $3886 = 0.0, $3887 = 0.0, $3888 = 0.0, $3889 = 0.0, $389 = 0, $3890 = 0, $3891 = 0.0, $3892 = 0.0, $3893 = 0.0, $3894 = 0.0, $3895 = 0.0, $3896 = 0.0, $3897 = 0.0, $3898 = 0.0, $3899 = 0.0, $39 = 0, $390 = 0, $3900 = 0.0, $3901 = 0.0, $3902 = 0.0;
 var $3903 = 0.0, $3904 = 0, $3905 = 0.0, $3906 = 0.0, $3907 = 0.0, $3908 = 0.0, $3909 = 0.0, $391 = 0, $3910 = 0, $3911 = 0.0, $3912 = 0.0, $3913 = 0.0, $3914 = 0.0, $3915 = 0.0, $3916 = 0.0, $3917 = 0.0, $3918 = 0.0, $3919 = 0.0, $392 = 0, $3920 = 0.0;
 var $3921 = 0.0, $3922 = 0.0, $3923 = 0.0, $3924 = 0.0, $3925 = 0.0, $3926 = 0, $3927 = 0.0, $3928 = 0, $3929 = 0.0, $393 = 0, $3930 = 0.0, $3931 = 0.0, $3932 = 0.0, $3933 = 0.0, $3934 = 0.0, $3935 = 0.0, $3936 = 0.0, $3937 = 0.0, $3938 = 0.0, $3939 = 0.0;
 var $394 = 0, $3940 = 0.0, $3941 = 0.0, $3942 = 0.0, $3943 = 0.0, $3944 = 0.0, $3945 = 0.0, $3946 = 0.0, $3947 = 0.0, $3948 = 0.0, $3949 = 0.0, $395 = 0, $3950 = 0.0, $3951 = 0.0, $3952 = 0.0, $3953 = 0.0, $3954 = 0.0, $3955 = 0.0, $3956 = 0.0, $3957 = 0.0;
 var $3958 = 0.0, $3959 = 0.0, $396 = 0, $3960 = 0.0, $3961 = 0.0, $3962 = 0.0, $3963 = 0.0, $3964 = 0.0, $3965 = 0.0, $3966 = 0.0, $3967 = 0.0, $3968 = 0.0, $3969 = 0.0, $397 = 0, $3970 = 0.0, $3971 = 0.0, $3972 = 0.0, $3973 = 0.0, $3974 = 0.0, $3975 = 0.0;
 var $3976 = 0.0, $3977 = 0.0, $3978 = 0.0, $3979 = 0.0, $398 = 0, $3980 = 0.0, $3981 = 0.0, $3982 = 0.0, $3983 = 0.0, $3984 = 0.0, $3985 = 0.0, $3986 = 0.0, $3987 = 0.0, $3988 = 0.0, $3989 = 0.0, $399 = 0, $3990 = 0.0, $3991 = 0.0, $3992 = 0.0, $3993 = 0.0;
 var $3994 = 0.0, $3995 = 0.0, $3996 = 0.0, $3997 = 0.0, $3998 = 0.0, $3999 = 0.0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0.0, $4001 = 0.0, $4002 = 0.0, $4003 = 0.0, $4004 = 0.0, $4005 = 0.0, $4006 = 0.0, $4007 = 0.0, $4008 = 0.0, $4009 = 0.0, $401 = 0;
 var $4010 = 0.0, $4011 = 0.0, $4012 = 0.0, $4013 = 0.0, $4014 = 0.0, $4015 = 0.0, $4016 = 0.0, $4017 = 0.0, $4018 = 0.0, $4019 = 0.0, $402 = 0, $4020 = 0.0, $4021 = 0.0, $4022 = 0.0, $4023 = 0.0, $4024 = 0.0, $4025 = 0.0, $4026 = 0.0, $4027 = 0.0, $4028 = 0.0;
 var $4029 = 0.0, $403 = 0, $4030 = 0.0, $4031 = 0.0, $4032 = 0.0, $4033 = 0.0, $4034 = 0, $4035 = 0.0, $4036 = 0.0, $4037 = 0.0, $4038 = 0.0, $4039 = 0.0, $404 = 0, $4040 = 0.0, $4041 = 0.0, $4042 = 0.0, $4043 = 0, $4044 = 0.0, $4045 = 0, $4046 = 0.0;
 var $4047 = 0, $4048 = 0.0, $4049 = 0, $405 = 0, $4050 = 0.0, $4051 = 0, $4052 = 0.0, $4053 = 0.0, $4054 = 0.0, $4055 = 0.0, $4056 = 0.0, $4057 = 0.0, $4058 = 0.0, $4059 = 0.0, $406 = 0, $4060 = 0.0, $4061 = 0.0, $4062 = 0.0, $4063 = 0.0, $4064 = 0.0;
 var $4065 = 0.0, $4066 = 0.0, $4067 = 0.0, $4068 = 0.0, $4069 = 0.0, $407 = 0, $4070 = 0.0, $4071 = 0, $4072 = 0.0, $4073 = 0.0, $4074 = 0.0, $4075 = 0.0, $4076 = 0.0, $4077 = 0, $4078 = 0.0, $4079 = 0, $408 = 0, $4080 = 0.0, $4081 = 0.0, $4082 = 0.0;
 var $4083 = 0.0, $4084 = 0.0, $4085 = 0.0, $4086 = 0.0, $4087 = 0.0, $4088 = 0.0, $4089 = 0.0, $409 = 0, $4090 = 0.0, $4091 = 0.0, $4092 = 0.0, $4093 = 0.0, $4094 = 0.0, $4095 = 0.0, $4096 = 0.0, $4097 = 0.0, $4098 = 0.0, $4099 = 0.0, $41 = 0, $410 = 0;
 var $4100 = 0.0, $4101 = 0.0, $4102 = 0.0, $4103 = 0.0, $4104 = 0.0, $4105 = 0.0, $4106 = 0.0, $4107 = 0.0, $4108 = 0.0, $4109 = 0.0, $411 = 0, $4110 = 0.0, $4111 = 0.0, $4112 = 0.0, $4113 = 0.0, $4114 = 0.0, $4115 = 0.0, $4116 = 0.0, $4117 = 0.0, $4118 = 0.0;
 var $4119 = 0.0, $412 = 0, $4120 = 0.0, $4121 = 0.0, $4122 = 0.0, $4123 = 0.0, $4124 = 0.0, $4125 = 0.0, $4126 = 0.0, $4127 = 0.0, $4128 = 0.0, $4129 = 0.0, $413 = 0, $4130 = 0.0, $4131 = 0.0, $4132 = 0.0, $4133 = 0.0, $4134 = 0, $4135 = 0.0, $4136 = 0.0;
 var $4137 = 0.0, $4138 = 0.0, $4139 = 0, $414 = 0, $4140 = 0.0, $4141 = 0, $4142 = 0.0, $4143 = 0, $4144 = 0.0, $4145 = 0, $4146 = 0.0, $4147 = 0, $4148 = 0.0, $4149 = 0, $415 = 0, $4150 = 0, $4151 = 0, $4152 = 0, $4153 = 0, $4154 = 0;
 var $4155 = 0.0, $4156 = 0.0, $4157 = 0.0, $4158 = 0.0, $4159 = 0, $416 = 0, $4160 = 0, $4161 = 0.0, $4162 = 0, $4163 = 0.0, $4164 = 0.0, $4165 = 0, $4166 = 0.0, $4167 = 0.0, $4168 = 0, $4169 = 0, $417 = 0, $4170 = 0, $4171 = 0, $4172 = 0;
 var $4173 = 0, $4174 = 0, $4175 = 0.0, $4176 = 0, $4177 = 0.0, $4178 = 0, $4179 = 0.0, $418 = 0, $4180 = 0.0, $4181 = 0.0, $4182 = 0.0, $4183 = 0, $4184 = 0, $4185 = 0, $4186 = 0, $4187 = 0, $4188 = 0, $4189 = 0.0, $419 = 0, $4190 = 0;
 var $4191 = 0.0, $4192 = 0.0, $4193 = 0.0, $4194 = 0, $4195 = 0.0, $4196 = 0, $4197 = 0.0, $4198 = 0.0, $4199 = 0.0, $42 = 0, $420 = 0, $4200 = 0, $4201 = 0, $4202 = 0, $4203 = 0.0, $4204 = 0.0, $4205 = 0.0, $4206 = 0.0, $4207 = 0.0, $4208 = 0.0;
 var $4209 = 0.0, $421 = 0, $4210 = 0.0, $4211 = 0.0, $4212 = 0.0, $4213 = 0.0, $4214 = 0.0, $4215 = 0.0, $4216 = 0.0, $4217 = 0.0, $4218 = 0.0, $4219 = 0.0, $422 = 0, $4220 = 0.0, $4221 = 0.0, $4222 = 0.0, $4223 = 0, $4224 = 0, $4225 = 0.0, $4226 = 0.0;
 var $4227 = 0.0, $4228 = 0.0, $4229 = 0.0, $423 = 0, $4230 = 0.0, $4231 = 0.0, $4232 = 0.0, $4233 = 0.0, $4234 = 0.0, $4235 = 0, $4236 = 0.0, $4237 = 0.0, $4238 = 0.0, $4239 = 0.0, $424 = 0, $4240 = 0.0, $4241 = 0.0, $4242 = 0.0, $4243 = 0.0, $4244 = 0.0;
 var $4245 = 0.0, $4246 = 0.0, $4247 = 0.0, $4248 = 0.0, $4249 = 0.0, $425 = 0, $4250 = 0.0, $4251 = 0.0, $4252 = 0.0, $4253 = 0, $4254 = 0.0, $4255 = 0.0, $4256 = 0.0, $4257 = 0.0, $4258 = 0.0, $4259 = 0, $426 = 0, $4260 = 0.0, $4261 = 0.0, $4262 = 0.0;
 var $4263 = 0.0, $4264 = 0.0, $4265 = 0.0, $4266 = 0.0, $4267 = 0.0, $4268 = 0.0, $4269 = 0.0, $427 = 0, $4270 = 0.0, $4271 = 0.0, $4272 = 0.0, $4273 = 0.0, $4274 = 0.0, $4275 = 0.0, $4276 = 0.0, $4277 = 0.0, $4278 = 0.0, $4279 = 0.0, $428 = 0, $4280 = 0.0;
 var $4281 = 0.0, $4282 = 0.0, $4283 = 0.0, $4284 = 0.0, $4285 = 0.0, $4286 = 0.0, $4287 = 0.0, $4288 = 0, $4289 = 0.0, $429 = 0, $4290 = 0, $4291 = 0.0, $4292 = 0.0, $4293 = 0.0, $4294 = 0.0, $4295 = 0.0, $4296 = 0.0, $4297 = 0.0, $4298 = 0.0, $4299 = 0.0;
 var $43 = 0, $430 = 0, $4300 = 0.0, $4301 = 0.0, $4302 = 0.0, $4303 = 0.0, $4304 = 0.0, $4305 = 0.0, $4306 = 0.0, $4307 = 0.0, $4308 = 0.0, $4309 = 0.0, $431 = 0, $4310 = 0.0, $4311 = 0.0, $4312 = 0.0, $4313 = 0.0, $4314 = 0.0, $4315 = 0.0, $4316 = 0.0;
 var $4317 = 0.0, $4318 = 0.0, $4319 = 0.0, $432 = 0, $4320 = 0.0, $4321 = 0.0, $4322 = 0.0, $4323 = 0.0, $4324 = 0.0, $4325 = 0.0, $4326 = 0.0, $4327 = 0.0, $4328 = 0.0, $4329 = 0.0, $433 = 0, $4330 = 0.0, $4331 = 0.0, $4332 = 0.0, $4333 = 0.0, $4334 = 0.0;
 var $4335 = 0.0, $4336 = 0.0, $4337 = 0.0, $4338 = 0.0, $4339 = 0.0, $434 = 0, $4340 = 0.0, $4341 = 0.0, $4342 = 0.0, $4343 = 0, $4344 = 0.0, $4345 = 0.0, $4346 = 0.0, $4347 = 0.0, $4348 = 0.0, $4349 = 0.0, $435 = 0, $4350 = 0.0, $4351 = 0.0, $4352 = 0.0;
 var $4353 = 0.0, $4354 = 0, $4355 = 0.0, $4356 = 0, $4357 = 0.0, $4358 = 0, $4359 = 0.0, $436 = 0, $4360 = 0, $4361 = 0.0, $4362 = 0.0, $4363 = 0.0, $4364 = 0.0, $4365 = 0.0, $4366 = 0.0, $4367 = 0.0, $4368 = 0.0, $4369 = 0.0, $437 = 0, $4370 = 0.0;
 var $4371 = 0.0, $4372 = 0.0, $4373 = 0.0, $4374 = 0.0, $4375 = 0.0, $4376 = 0.0, $4377 = 0.0, $4378 = 0.0, $4379 = 0.0, $438 = 0, $4380 = 0.0, $4381 = 0.0, $4382 = 0, $4383 = 0.0, $4384 = 0.0, $4385 = 0.0, $4386 = 0.0, $4387 = 0.0, $4388 = 0, $4389 = 0.0;
 var $439 = 0, $4390 = 0, $4391 = 0.0, $4392 = 0, $4393 = 0.0, $4394 = 0.0, $4395 = 0.0, $4396 = 0.0, $4397 = 0.0, $4398 = 0.0, $4399 = 0.0, $44 = 0, $440 = 0, $4400 = 0.0, $4401 = 0.0, $4402 = 0.0, $4403 = 0.0, $4404 = 0.0, $4405 = 0.0, $4406 = 0.0;
 var $4407 = 0.0, $4408 = 0.0, $4409 = 0.0, $441 = 0, $4410 = 0.0, $4411 = 0.0, $4412 = 0.0, $4413 = 0.0, $4414 = 0.0, $4415 = 0.0, $4416 = 0.0, $4417 = 0.0, $4418 = 0.0, $4419 = 0.0, $442 = 0, $4420 = 0.0, $4421 = 0.0, $4422 = 0.0, $4423 = 0.0, $4424 = 0.0;
 var $4425 = 0.0, $4426 = 0.0, $4427 = 0.0, $4428 = 0.0, $4429 = 0.0, $443 = 0, $4430 = 0.0, $4431 = 0.0, $4432 = 0.0, $4433 = 0.0, $4434 = 0.0, $4435 = 0.0, $4436 = 0.0, $4437 = 0.0, $4438 = 0.0, $4439 = 0.0, $444 = 0, $4440 = 0.0, $4441 = 0.0, $4442 = 0.0;
 var $4443 = 0.0, $4444 = 0.0, $4445 = 0.0, $4446 = 0.0, $4447 = 0.0, $4448 = 0, $4449 = 0.0, $445 = 0, $4450 = 0.0, $4451 = 0.0, $4452 = 0.0, $4453 = 0, $4454 = 0.0, $4455 = 0, $4456 = 0.0, $4457 = 0, $4458 = 0.0, $4459 = 0, $446 = 0, $4460 = 0.0;
 var $4461 = 0, $4462 = 0.0, $4463 = 0, $4464 = 0, $4465 = 0, $4466 = 0, $4467 = 0, $4468 = 0, $4469 = 0.0, $447 = 0, $4470 = 0.0, $4471 = 0.0, $4472 = 0.0, $4473 = 0, $4474 = 0, $4475 = 0.0, $4476 = 0, $4477 = 0.0, $4478 = 0.0, $4479 = 0;
 var $448 = 0, $4480 = 0.0, $4481 = 0.0, $4482 = 0, $4483 = 0, $4484 = 0, $4485 = 0, $4486 = 0, $4487 = 0, $4488 = 0, $4489 = 0.0, $449 = 0, $4490 = 0, $4491 = 0.0, $4492 = 0, $4493 = 0.0, $4494 = 0.0, $4495 = 0.0, $4496 = 0.0, $4497 = 0;
 var $4498 = 0, $4499 = 0, $45 = 0, $450 = 0, $4500 = 0, $4501 = 0, $4502 = 0, $4503 = 0.0, $4504 = 0, $4505 = 0.0, $4506 = 0.0, $4507 = 0.0, $4508 = 0, $4509 = 0.0, $451 = 0, $4510 = 0, $4511 = 0.0, $4512 = 0.0, $4513 = 0.0, $4514 = 0;
 var $4515 = 0, $4516 = 0, $4517 = 0.0, $4518 = 0.0, $4519 = 0.0, $452 = 0, $4520 = 0.0, $4521 = 0.0, $4522 = 0.0, $4523 = 0.0, $4524 = 0.0, $4525 = 0.0, $4526 = 0.0, $4527 = 0.0, $4528 = 0.0, $4529 = 0.0, $453 = 0, $4530 = 0.0, $4531 = 0.0, $4532 = 0.0;
 var $4533 = 0.0, $4534 = 0.0, $4535 = 0.0, $4536 = 0.0, $4537 = 0.0, $4538 = 0, $4539 = 0, $454 = 0, $4540 = 0.0, $4541 = 0.0, $4542 = 0.0, $4543 = 0.0, $4544 = 0.0, $4545 = 0.0, $4546 = 0.0, $4547 = 0.0, $4548 = 0.0, $4549 = 0.0, $455 = 0, $4550 = 0;
 var $4551 = 0.0, $4552 = 0.0, $4553 = 0.0, $4554 = 0.0, $4555 = 0.0, $4556 = 0.0, $4557 = 0.0, $4558 = 0.0, $4559 = 0.0, $456 = 0, $4560 = 0.0, $4561 = 0.0, $4562 = 0.0, $4563 = 0.0, $4564 = 0.0, $4565 = 0.0, $4566 = 0.0, $4567 = 0.0, $4568 = 0, $4569 = 0.0;
 var $457 = 0, $4570 = 0.0, $4571 = 0.0, $4572 = 0.0, $4573 = 0.0, $4574 = 0, $4575 = 0.0, $4576 = 0.0, $4577 = 0.0, $4578 = 0.0, $4579 = 0.0, $458 = 0, $4580 = 0.0, $4581 = 0.0, $4582 = 0.0, $4583 = 0.0, $4584 = 0.0, $4585 = 0.0, $4586 = 0.0, $4587 = 0.0;
 var $4588 = 0.0, $4589 = 0.0, $459 = 0, $4590 = 0.0, $4591 = 0.0, $4592 = 0.0, $4593 = 0.0, $4594 = 0.0, $4595 = 0.0, $4596 = 0.0, $4597 = 0.0, $4598 = 0.0, $4599 = 0.0, $46 = 0, $460 = 0, $4600 = 0.0, $4601 = 0.0, $4602 = 0.0, $4603 = 0, $4604 = 0.0;
 var $4605 = 0, $4606 = 0.0, $4607 = 0.0, $4608 = 0.0, $4609 = 0.0, $461 = 0, $4610 = 0.0, $4611 = 0.0, $4612 = 0.0, $4613 = 0.0, $4614 = 0.0, $4615 = 0.0, $4616 = 0.0, $4617 = 0.0, $4618 = 0.0, $4619 = 0.0, $462 = 0, $4620 = 0.0, $4621 = 0.0, $4622 = 0.0;
 var $4623 = 0.0, $4624 = 0.0, $4625 = 0.0, $4626 = 0.0, $4627 = 0.0, $4628 = 0.0, $4629 = 0.0, $463 = 0, $4630 = 0.0, $4631 = 0.0, $4632 = 0.0, $4633 = 0.0, $4634 = 0.0, $4635 = 0.0, $4636 = 0.0, $4637 = 0.0, $4638 = 0.0, $4639 = 0.0, $464 = 0, $4640 = 0.0;
 var $4641 = 0.0, $4642 = 0.0, $4643 = 0.0, $4644 = 0.0, $4645 = 0.0, $4646 = 0.0, $4647 = 0.0, $4648 = 0.0, $4649 = 0.0, $465 = 0, $4650 = 0.0, $4651 = 0.0, $4652 = 0.0, $4653 = 0.0, $4654 = 0.0, $4655 = 0.0, $4656 = 0.0, $4657 = 0, $4658 = 0.0, $4659 = 0.0;
 var $466 = 0, $4660 = 0.0, $4661 = 0.0, $4662 = 0.0, $4663 = 0.0, $4664 = 0.0, $4665 = 0.0, $4666 = 0.0, $4667 = 0.0, $4668 = 0, $4669 = 0.0, $467 = 0, $4670 = 0, $4671 = 0.0, $4672 = 0, $4673 = 0.0, $4674 = 0, $4675 = 0.0, $4676 = 0.0, $4677 = 0.0;
 var $4678 = 0.0, $4679 = 0.0, $468 = 0, $4680 = 0.0, $4681 = 0.0, $4682 = 0.0, $4683 = 0.0, $4684 = 0.0, $4685 = 0.0, $4686 = 0.0, $4687 = 0.0, $4688 = 0.0, $4689 = 0.0, $469 = 0, $4690 = 0.0, $4691 = 0.0, $4692 = 0.0, $4693 = 0.0, $4694 = 0.0, $4695 = 0;
 var $4696 = 0.0, $4697 = 0.0, $4698 = 0.0, $4699 = 0.0, $47 = 0, $470 = 0, $4700 = 0.0, $4701 = 0, $4702 = 0.0, $4703 = 0, $4704 = 0.0, $4705 = 0.0, $4706 = 0.0, $4707 = 0.0, $4708 = 0.0, $4709 = 0.0, $471 = 0, $4710 = 0.0, $4711 = 0.0, $4712 = 0.0;
 var $4713 = 0.0, $4714 = 0.0, $4715 = 0.0, $4716 = 0.0, $4717 = 0, $4718 = 0, $4719 = 0.0, $472 = 0, $4720 = 0.0, $4721 = 0.0, $4722 = 0.0, $4723 = 0.0, $4724 = 0, $4725 = 0.0, $4726 = 0.0, $4727 = 0.0, $4728 = 0, $4729 = 0, $473 = 0, $4730 = 0;
 var $4731 = 0, $4732 = 0, $4733 = 0, $4734 = 0, $4735 = 0, $4736 = 0, $4737 = 0, $4738 = 0, $4739 = 0, $474 = 0, $4740 = 0, $4741 = 0, $4742 = 0, $4743 = 0, $4744 = 0, $4745 = 0, $4746 = 0.0, $4747 = 0, $4748 = 0.0, $4749 = 0.0;
 var $475 = 0, $4750 = 0.0, $4751 = 0, $4752 = 0.0, $4753 = 0, $4754 = 0.0, $4755 = 0.0, $4756 = 0.0, $4757 = 0, $4758 = 0, $4759 = 0, $476 = 0, $4760 = 0.0, $4761 = 0, $4762 = 0.0, $4763 = 0, $4764 = 0.0, $4765 = 0.0, $4766 = 0.0, $4767 = 0.0;
 var $4768 = 0.0, $4769 = 0.0, $477 = 0, $4770 = 0.0, $4771 = 0.0, $4772 = 0.0, $4773 = 0.0, $4774 = 0.0, $4775 = 0.0, $4776 = 0.0, $4777 = 0.0, $4778 = 0.0, $4779 = 0.0, $478 = 0, $4780 = 0.0, $4781 = 0.0, $4782 = 0.0, $4783 = 0.0, $4784 = 0.0, $4785 = 0.0;
 var $4786 = 0.0, $4787 = 0.0, $4788 = 0.0, $4789 = 0.0, $479 = 0, $4790 = 0.0, $4791 = 0.0, $4792 = 0.0, $4793 = 0.0, $4794 = 0.0, $4795 = 0.0, $4796 = 0.0, $4797 = 0.0, $4798 = 0.0, $4799 = 0.0, $48 = 0, $480 = 0, $4800 = 0.0, $4801 = 0.0, $4802 = 0.0;
 var $4803 = 0.0, $4804 = 0.0, $4805 = 0.0, $4806 = 0, $4807 = 0.0, $4808 = 0.0, $4809 = 0.0, $481 = 0, $4810 = 0.0, $4811 = 0.0, $4812 = 0.0, $4813 = 0.0, $4814 = 0.0, $4815 = 0, $4816 = 0.0, $4817 = 0, $4818 = 0.0, $4819 = 0, $482 = 0, $4820 = 0;
 var $4821 = 0.0, $4822 = 0.0, $4823 = 0.0, $4824 = 0.0, $4825 = 0.0, $4826 = 0.0, $4827 = 0.0, $4828 = 0.0, $4829 = 0.0, $483 = 0, $4830 = 0.0, $4831 = 0.0, $4832 = 0.0, $4833 = 0.0, $4834 = 0.0, $4835 = 0.0, $4836 = 0.0, $4837 = 0.0, $4838 = 0.0, $4839 = 0.0;
 var $484 = 0, $4840 = 0.0, $4841 = 0.0, $4842 = 0, $4843 = 0.0, $4844 = 0.0, $4845 = 0.0, $4846 = 0.0, $4847 = 0.0, $4848 = 0, $4849 = 0.0, $485 = 0, $4850 = 0, $4851 = 0.0, $4852 = 0, $4853 = 0.0, $4854 = 0.0, $4855 = 0.0, $4856 = 0.0, $4857 = 0.0;
 var $4858 = 0.0, $4859 = 0.0, $486 = 0, $4860 = 0.0, $4861 = 0.0, $4862 = 0.0, $4863 = 0.0, $4864 = 0.0, $4865 = 0.0, $4866 = 0, $4867 = 0, $4868 = 0.0, $4869 = 0.0, $487 = 0, $4870 = 0.0, $4871 = 0.0, $4872 = 0.0, $4873 = 0, $4874 = 0.0, $4875 = 0.0;
 var $4876 = 0.0, $4877 = 0, $4878 = 0, $4879 = 0, $488 = 0, $4880 = 0, $4881 = 0, $4882 = 0, $4883 = 0, $4884 = 0, $4885 = 0, $4886 = 0, $4887 = 0, $4888 = 0, $4889 = 0, $489 = 0, $4890 = 0, $4891 = 0, $4892 = 0, $4893 = 0;
 var $4894 = 0, $4895 = 0.0, $4896 = 0, $4897 = 0.0, $4898 = 0.0, $4899 = 0.0, $49 = 0, $490 = 0, $4900 = 0, $4901 = 0.0, $4902 = 0, $4903 = 0.0, $4904 = 0.0, $4905 = 0.0, $4906 = 0, $4907 = 0, $4908 = 0, $4909 = 0.0, $491 = 0, $4910 = 0;
 var $4911 = 0.0, $4912 = 0, $4913 = 0.0, $4914 = 0.0, $4915 = 0.0, $4916 = 0.0, $4917 = 0.0, $4918 = 0.0, $4919 = 0.0, $492 = 0, $4920 = 0.0, $4921 = 0.0, $4922 = 0.0, $4923 = 0.0, $4924 = 0.0, $4925 = 0.0, $4926 = 0.0, $4927 = 0.0, $4928 = 0.0, $4929 = 0.0;
 var $493 = 0, $4930 = 0.0, $4931 = 0.0, $4932 = 0.0, $4933 = 0.0, $4934 = 0.0, $4935 = 0.0, $4936 = 0.0, $4937 = 0.0, $4938 = 0.0, $4939 = 0.0, $494 = 0, $4940 = 0.0, $4941 = 0.0, $4942 = 0.0, $4943 = 0.0, $4944 = 0.0, $4945 = 0.0, $4946 = 0.0, $4947 = 0.0;
 var $4948 = 0.0, $4949 = 0.0, $495 = 0, $4950 = 0.0, $4951 = 0.0, $4952 = 0.0, $4953 = 0.0, $4954 = 0.0, $4955 = 0, $4956 = 0.0, $4957 = 0.0, $4958 = 0.0, $4959 = 0.0, $496 = 0, $4960 = 0.0, $4961 = 0.0, $4962 = 0.0, $4963 = 0.0, $4964 = 0.0, $4965 = 0;
 var $4966 = 0.0, $4967 = 0, $4968 = 0.0, $4969 = 0, $497 = 0, $4970 = 0, $4971 = 0.0, $4972 = 0.0, $4973 = 0.0, $4974 = 0.0, $4975 = 0.0, $4976 = 0.0, $4977 = 0, $4978 = 0.0, $4979 = 0, $498 = 0, $4980 = 0.0, $4981 = 0, $4982 = 0.0, $4983 = 0;
 var $4984 = 0.0, $4985 = 0, $4986 = 0.0, $4987 = 0, $4988 = 0, $4989 = 0, $499 = 0, $4990 = 0, $4991 = 0, $4992 = 0, $4993 = 0.0, $4994 = 0.0, $4995 = 0.0, $4996 = 0.0, $4997 = 0, $4998 = 0, $4999 = 0.0, $5 = 0, $50 = 0, $500 = 0;
 var $5000 = 0, $5001 = 0.0, $5002 = 0.0, $5003 = 0, $5004 = 0.0, $5005 = 0.0, $5006 = 0, $5007 = 0, $5008 = 0, $5009 = 0, $501 = 0, $5010 = 0, $5011 = 0, $5012 = 0, $5013 = 0.0, $5014 = 0, $5015 = 0.0, $5016 = 0, $5017 = 0.0, $5018 = 0.0;
 var $5019 = 0.0, $502 = 0, $5020 = 0.0, $5021 = 0, $5022 = 0, $5023 = 0, $5024 = 0, $5025 = 0, $5026 = 0, $5027 = 0.0, $5028 = 0, $5029 = 0.0, $503 = 0, $5030 = 0.0, $5031 = 0.0, $5032 = 0, $5033 = 0.0, $5034 = 0, $5035 = 0.0, $5036 = 0.0;
 var $5037 = 0.0, $5038 = 0, $5039 = 0, $504 = 0, $5040 = 0, $5041 = 0.0, $5042 = 0.0, $5043 = 0.0, $5044 = 0.0, $5045 = 0.0, $5046 = 0.0, $5047 = 0.0, $5048 = 0.0, $5049 = 0.0, $505 = 0, $5050 = 0.0, $5051 = 0.0, $5052 = 0.0, $5053 = 0.0, $5054 = 0.0;
 var $5055 = 0.0, $5056 = 0.0, $5057 = 0.0, $5058 = 0.0, $5059 = 0.0, $506 = 0, $5060 = 0, $5061 = 0, $5062 = 0.0, $5063 = 0.0, $5064 = 0.0, $5065 = 0.0, $5066 = 0.0, $5067 = 0.0, $5068 = 0.0, $5069 = 0, $507 = 0, $5070 = 0, $5071 = 0.0, $5072 = 0.0;
 var $5073 = 0.0, $5074 = 0, $5075 = 0.0, $5076 = 0.0, $5077 = 0.0, $5078 = 0.0, $5079 = 0.0, $508 = 0, $5080 = 0.0, $5081 = 0.0, $5082 = 0.0, $5083 = 0.0, $5084 = 0.0, $5085 = 0.0, $5086 = 0, $5087 = 0.0, $5088 = 0.0, $5089 = 0.0, $509 = 0, $5090 = 0.0;
 var $5091 = 0.0, $5092 = 0, $5093 = 0.0, $5094 = 0.0, $5095 = 0.0, $5096 = 0.0, $5097 = 0.0, $5098 = 0.0, $5099 = 0.0, $51 = 0, $510 = 0, $5100 = 0.0, $5101 = 0.0, $5102 = 0.0, $5103 = 0.0, $5104 = 0.0, $5105 = 0.0, $5106 = 0.0, $5107 = 0.0, $5108 = 0;
 var $5109 = 0.0, $511 = 0, $5110 = 0, $5111 = 0.0, $5112 = 0.0, $5113 = 0.0, $5114 = 0.0, $5115 = 0.0, $5116 = 0.0, $5117 = 0.0, $5118 = 0.0, $5119 = 0.0, $512 = 0, $5120 = 0.0, $5121 = 0.0, $5122 = 0.0, $5123 = 0.0, $5124 = 0.0, $5125 = 0.0, $5126 = 0.0;
 var $5127 = 0.0, $5128 = 0.0, $5129 = 0.0, $513 = 0, $5130 = 0.0, $5131 = 0.0, $5132 = 0.0, $5133 = 0.0, $5134 = 0.0, $5135 = 0.0, $5136 = 0.0, $5137 = 0.0, $5138 = 0.0, $5139 = 0.0, $514 = 0, $5140 = 0.0, $5141 = 0.0, $5142 = 0.0, $5143 = 0.0, $5144 = 0.0;
 var $5145 = 0.0, $5146 = 0.0, $5147 = 0.0, $5148 = 0.0, $5149 = 0.0, $515 = 0, $5150 = 0.0, $5151 = 0.0, $5152 = 0.0, $5153 = 0.0, $5154 = 0.0, $5155 = 0.0, $5156 = 0.0, $5157 = 0.0, $5158 = 0.0, $5159 = 0.0, $516 = 0, $5160 = 0.0, $5161 = 0.0, $5162 = 0.0;
 var $5163 = 0.0, $5164 = 0.0, $5165 = 0.0, $5166 = 0.0, $5167 = 0.0, $5168 = 0.0, $5169 = 0.0, $517 = 0, $5170 = 0.0, $5171 = 0.0, $5172 = 0.0, $5173 = 0.0, $5174 = 0.0, $5175 = 0.0, $5176 = 0.0, $5177 = 0.0, $5178 = 0.0, $5179 = 0.0, $518 = 0, $5180 = 0.0;
 var $5181 = 0.0, $5182 = 0.0, $5183 = 0.0, $5184 = 0.0, $5185 = 0.0, $5186 = 0.0, $5187 = 0.0, $5188 = 0.0, $5189 = 0.0, $519 = 0, $5190 = 0.0, $5191 = 0.0, $5192 = 0.0, $5193 = 0.0, $5194 = 0.0, $5195 = 0.0, $5196 = 0.0, $5197 = 0.0, $5198 = 0.0, $5199 = 0.0;
 var $52 = 0, $520 = 0, $5200 = 0.0, $5201 = 0.0, $5202 = 0.0, $5203 = 0.0, $5204 = 0.0, $5205 = 0.0, $5206 = 0.0, $5207 = 0.0, $5208 = 0.0, $5209 = 0.0, $521 = 0, $5210 = 0, $5211 = 0.0, $5212 = 0.0, $5213 = 0.0, $5214 = 0.0, $5215 = 0.0, $5216 = 0.0;
 var $5217 = 0.0, $5218 = 0.0, $5219 = 0.0, $522 = 0, $5220 = 0, $5221 = 0.0, $5222 = 0, $5223 = 0.0, $5224 = 0, $5225 = 0.0, $5226 = 0, $5227 = 0.0, $5228 = 0, $5229 = 0.0, $523 = 0, $5230 = 0.0, $5231 = 0.0, $5232 = 0.0, $5233 = 0.0, $5234 = 0.0;
 var $5235 = 0.0, $5236 = 0.0, $5237 = 0.0, $5238 = 0.0, $5239 = 0.0, $524 = 0, $5240 = 0.0, $5241 = 0.0, $5242 = 0.0, $5243 = 0.0, $5244 = 0.0, $5245 = 0.0, $5246 = 0.0, $5247 = 0.0, $5248 = 0.0, $5249 = 0.0, $525 = 0, $5250 = 0, $5251 = 0, $5252 = 0.0;
 var $5253 = 0.0, $5254 = 0.0, $5255 = 0.0, $5256 = 0.0, $5257 = 0.0, $5258 = 0.0, $5259 = 0.0, $526 = 0, $5260 = 0.0, $5261 = 0.0, $5262 = 0, $5263 = 0.0, $5264 = 0.0, $5265 = 0.0, $5266 = 0.0, $5267 = 0.0, $5268 = 0.0, $5269 = 0.0, $527 = 0, $5270 = 0.0;
 var $5271 = 0.0, $5272 = 0.0, $5273 = 0.0, $5274 = 0.0, $5275 = 0.0, $5276 = 0, $5277 = 0.0, $5278 = 0.0, $5279 = 0.0, $528 = 0, $5280 = 0.0, $5281 = 0.0, $5282 = 0, $5283 = 0.0, $5284 = 0.0, $5285 = 0.0, $5286 = 0.0, $5287 = 0.0, $5288 = 0.0, $5289 = 0.0;
 var $529 = 0, $5290 = 0.0, $5291 = 0.0, $5292 = 0.0, $5293 = 0.0, $5294 = 0.0, $5295 = 0.0, $5296 = 0.0, $5297 = 0.0, $5298 = 0.0, $5299 = 0.0, $53 = 0, $530 = 0, $5300 = 0.0, $5301 = 0.0, $5302 = 0.0, $5303 = 0.0, $5304 = 0.0, $5305 = 0.0, $5306 = 0.0;
 var $5307 = 0, $5308 = 0.0, $5309 = 0, $531 = 0, $5310 = 0.0, $5311 = 0.0, $5312 = 0.0, $5313 = 0.0, $5314 = 0.0, $5315 = 0.0, $5316 = 0.0, $5317 = 0.0, $5318 = 0.0, $5319 = 0.0, $532 = 0, $5320 = 0.0, $5321 = 0.0, $5322 = 0.0, $5323 = 0.0, $5324 = 0.0;
 var $5325 = 0.0, $5326 = 0.0, $5327 = 0.0, $5328 = 0.0, $5329 = 0.0, $533 = 0, $5330 = 0.0, $5331 = 0.0, $5332 = 0.0, $5333 = 0.0, $5334 = 0.0, $5335 = 0.0, $5336 = 0.0, $5337 = 0.0, $5338 = 0.0, $5339 = 0.0, $534 = 0, $5340 = 0.0, $5341 = 0.0, $5342 = 0.0;
 var $5343 = 0.0, $5344 = 0.0, $5345 = 0.0, $5346 = 0.0, $5347 = 0.0, $5348 = 0.0, $5349 = 0.0, $535 = 0, $5350 = 0.0, $5351 = 0.0, $5352 = 0.0, $5353 = 0.0, $5354 = 0.0, $5355 = 0.0, $5356 = 0.0, $5357 = 0.0, $5358 = 0.0, $5359 = 0.0, $536 = 0, $5360 = 0.0;
 var $5361 = 0.0, $5362 = 0.0, $5363 = 0.0, $5364 = 0.0, $5365 = 0.0, $5366 = 0.0, $5367 = 0.0, $5368 = 0.0, $5369 = 0.0, $537 = 0, $5370 = 0.0, $5371 = 0.0, $5372 = 0.0, $5373 = 0.0, $5374 = 0.0, $5375 = 0.0, $5376 = 0.0, $5377 = 0.0, $5378 = 0.0, $5379 = 0.0;
 var $538 = 0, $5380 = 0.0, $5381 = 0.0, $5382 = 0.0, $5383 = 0.0, $5384 = 0.0, $5385 = 0.0, $5386 = 0.0, $5387 = 0.0, $5388 = 0.0, $5389 = 0.0, $539 = 0, $5390 = 0.0, $5391 = 0.0, $5392 = 0.0, $5393 = 0.0, $5394 = 0.0, $5395 = 0.0, $5396 = 0.0, $5397 = 0.0;
 var $5398 = 0.0, $5399 = 0.0, $54 = 0, $540 = 0, $5400 = 0.0, $5401 = 0.0, $5402 = 0.0, $5403 = 0.0, $5404 = 0.0, $5405 = 0.0, $5406 = 0.0, $5407 = 0.0, $5408 = 0.0, $5409 = 0, $541 = 0, $5410 = 0.0, $5411 = 0.0, $5412 = 0.0, $5413 = 0.0, $5414 = 0.0;
 var $5415 = 0.0, $5416 = 0.0, $5417 = 0.0, $5418 = 0.0, $5419 = 0, $542 = 0, $5420 = 0.0, $5421 = 0, $5422 = 0.0, $5423 = 0, $5424 = 0.0, $5425 = 0, $5426 = 0.0, $5427 = 0, $5428 = 0.0, $5429 = 0.0, $543 = 0, $5430 = 0.0, $5431 = 0.0, $5432 = 0.0;
 var $5433 = 0.0, $5434 = 0.0, $5435 = 0.0, $5436 = 0.0, $5437 = 0.0, $5438 = 0.0, $5439 = 0.0, $544 = 0, $5440 = 0.0, $5441 = 0.0, $5442 = 0.0, $5443 = 0.0, $5444 = 0.0, $5445 = 0.0, $5446 = 0.0, $5447 = 0.0, $5448 = 0.0, $5449 = 0, $545 = 0, $5450 = 0;
 var $5451 = 0.0, $5452 = 0.0, $5453 = 0.0, $5454 = 0.0, $5455 = 0.0, $5456 = 0.0, $5457 = 0.0, $5458 = 0.0, $5459 = 0.0, $546 = 0, $5460 = 0.0, $5461 = 0, $5462 = 0.0, $5463 = 0.0, $5464 = 0.0, $5465 = 0.0, $5466 = 0.0, $5467 = 0.0, $5468 = 0.0, $5469 = 0.0;
 var $547 = 0, $5470 = 0.0, $5471 = 0.0, $5472 = 0, $5473 = 0.0, $5474 = 0.0, $5475 = 0.0, $5476 = 0.0, $5477 = 0.0, $5478 = 0, $5479 = 0.0, $548 = 0, $5480 = 0.0, $5481 = 0.0, $5482 = 0.0, $5483 = 0.0, $5484 = 0.0, $5485 = 0.0, $5486 = 0.0, $5487 = 0.0;
 var $5488 = 0.0, $5489 = 0.0, $549 = 0, $5490 = 0.0, $5491 = 0.0, $5492 = 0.0, $5493 = 0.0, $5494 = 0.0, $5495 = 0.0, $5496 = 0.0, $5497 = 0.0, $5498 = 0.0, $5499 = 0.0, $55 = 0, $550 = 0, $5500 = 0, $5501 = 0.0, $5502 = 0, $5503 = 0.0, $5504 = 0.0;
 var $5505 = 0.0, $5506 = 0.0, $5507 = 0.0, $5508 = 0.0, $5509 = 0.0, $551 = 0, $5510 = 0.0, $5511 = 0.0, $5512 = 0.0, $5513 = 0.0, $5514 = 0.0, $5515 = 0.0, $5516 = 0.0, $5517 = 0.0, $5518 = 0.0, $5519 = 0.0, $552 = 0, $5520 = 0.0, $5521 = 0.0, $5522 = 0.0;
 var $5523 = 0.0, $5524 = 0.0, $5525 = 0.0, $5526 = 0.0, $5527 = 0.0, $5528 = 0.0, $5529 = 0.0, $553 = 0, $5530 = 0.0, $5531 = 0.0, $5532 = 0.0, $5533 = 0.0, $5534 = 0.0, $5535 = 0.0, $5536 = 0.0, $5537 = 0.0, $5538 = 0.0, $5539 = 0.0, $554 = 0, $5540 = 0.0;
 var $5541 = 0.0, $5542 = 0.0, $5543 = 0.0, $5544 = 0.0, $5545 = 0.0, $5546 = 0.0, $5547 = 0.0, $5548 = 0.0, $5549 = 0.0, $555 = 0, $5550 = 0.0, $5551 = 0.0, $5552 = 0.0, $5553 = 0.0, $5554 = 0.0, $5555 = 0.0, $5556 = 0.0, $5557 = 0.0, $5558 = 0.0, $5559 = 0.0;
 var $556 = 0, $5560 = 0.0, $5561 = 0.0, $5562 = 0.0, $5563 = 0.0, $5564 = 0.0, $5565 = 0.0, $5566 = 0.0, $5567 = 0.0, $5568 = 0.0, $5569 = 0.0, $557 = 0, $5570 = 0.0, $5571 = 0.0, $5572 = 0.0, $5573 = 0.0, $5574 = 0.0, $5575 = 0.0, $5576 = 0.0, $5577 = 0.0;
 var $5578 = 0.0, $5579 = 0.0, $558 = 0, $5580 = 0.0, $5581 = 0.0, $5582 = 0.0, $5583 = 0.0, $5584 = 0.0, $5585 = 0.0, $5586 = 0.0, $5587 = 0.0, $5588 = 0.0, $5589 = 0.0, $559 = 0, $5590 = 0.0, $5591 = 0.0, $5592 = 0.0, $5593 = 0.0, $5594 = 0.0, $5595 = 0.0;
 var $5596 = 0.0, $5597 = 0.0, $5598 = 0.0, $5599 = 0.0, $56 = 0, $560 = 0, $5600 = 0.0, $5601 = 0.0, $5602 = 0, $5603 = 0.0, $5604 = 0.0, $5605 = 0.0, $5606 = 0.0, $5607 = 0.0, $5608 = 0.0, $5609 = 0.0, $561 = 0, $5610 = 0.0, $5611 = 0.0, $5612 = 0;
 var $5613 = 0.0, $5614 = 0, $5615 = 0.0, $5616 = 0, $5617 = 0.0, $5618 = 0, $5619 = 0.0, $562 = 0, $5620 = 0, $5621 = 0.0, $5622 = 0.0, $5623 = 0.0, $5624 = 0.0, $5625 = 0.0, $5626 = 0.0, $5627 = 0.0, $5628 = 0.0, $5629 = 0.0, $563 = 0, $5630 = 0.0;
 var $5631 = 0.0, $5632 = 0.0, $5633 = 0.0, $5634 = 0.0, $5635 = 0.0, $5636 = 0.0, $5637 = 0.0, $5638 = 0.0, $5639 = 0.0, $564 = 0, $5640 = 0.0, $5641 = 0.0, $5642 = 0.0, $5643 = 0.0, $5644 = 0.0, $5645 = 0.0, $5646 = 0.0, $5647 = 0.0, $5648 = 0.0, $5649 = 0.0;
 var $565 = 0, $5650 = 0.0, $5651 = 0.0, $5652 = 0.0, $5653 = 0.0, $5654 = 0.0, $5655 = 0.0, $5656 = 0.0, $5657 = 0.0, $5658 = 0.0, $5659 = 0.0, $566 = 0, $5660 = 0.0, $5661 = 0.0, $5662 = 0.0, $5663 = 0.0, $5664 = 0.0, $5665 = 0.0, $5666 = 0.0, $5667 = 0;
 var $5668 = 0, $5669 = 0.0, $567 = 0, $5670 = 0.0, $5671 = 0.0, $5672 = 0.0, $5673 = 0.0, $5674 = 0.0, $5675 = 0.0, $5676 = 0.0, $5677 = 0.0, $5678 = 0.0, $5679 = 0.0, $568 = 0, $5680 = 0.0, $5681 = 0.0, $5682 = 0.0, $5683 = 0.0, $5684 = 0.0, $5685 = 0.0;
 var $5686 = 0.0, $5687 = 0.0, $5688 = 0.0, $5689 = 0.0, $569 = 0, $5690 = 0.0, $5691 = 0.0, $5692 = 0.0, $5693 = 0.0, $5694 = 0.0, $5695 = 0.0, $5696 = 0.0, $5697 = 0.0, $5698 = 0.0, $5699 = 0.0, $57 = 0, $570 = 0, $5700 = 0.0, $5701 = 0.0, $5702 = 0.0;
 var $5703 = 0.0, $5704 = 0.0, $5705 = 0.0, $5706 = 0.0, $5707 = 0.0, $5708 = 0.0, $5709 = 0.0, $571 = 0, $5710 = 0.0, $5711 = 0.0, $5712 = 0.0, $5713 = 0.0, $5714 = 0.0, $5715 = 0.0, $5716 = 0.0, $5717 = 0.0, $5718 = 0.0, $5719 = 0.0, $572 = 0, $5720 = 0.0;
 var $5721 = 0.0, $5722 = 0.0, $5723 = 0.0, $5724 = 0.0, $5725 = 0.0, $5726 = 0.0, $5727 = 0.0, $5728 = 0.0, $5729 = 0.0, $573 = 0, $5730 = 0.0, $5731 = 0.0, $5732 = 0.0, $5733 = 0.0, $5734 = 0.0, $5735 = 0.0, $5736 = 0.0, $5737 = 0.0, $5738 = 0.0, $5739 = 0.0;
 var $574 = 0, $5740 = 0.0, $5741 = 0.0, $5742 = 0.0, $5743 = 0.0, $5744 = 0.0, $5745 = 0.0, $5746 = 0, $5747 = 0, $5748 = 0.0, $5749 = 0.0, $575 = 0, $5750 = 0.0, $5751 = 0.0, $5752 = 0.0, $5753 = 0.0, $5754 = 0.0, $5755 = 0, $5756 = 0.0, $5757 = 0;
 var $5758 = 0.0, $5759 = 0.0, $576 = 0, $5760 = 0.0, $5761 = 0.0, $5762 = 0.0, $5763 = 0.0, $5764 = 0.0, $5765 = 0.0, $5766 = 0.0, $5767 = 0.0, $5768 = 0.0, $5769 = 0.0, $577 = 0, $5770 = 0.0, $5771 = 0.0, $5772 = 0.0, $5773 = 0.0, $5774 = 0.0, $5775 = 0.0;
 var $5776 = 0.0, $5777 = 0.0, $5778 = 0.0, $5779 = 0.0, $578 = 0, $5780 = 0.0, $5781 = 0.0, $5782 = 0.0, $5783 = 0.0, $5784 = 0.0, $5785 = 0.0, $5786 = 0.0, $5787 = 0.0, $5788 = 0.0, $5789 = 0.0, $579 = 0, $5790 = 0.0, $5791 = 0.0, $5792 = 0.0, $5793 = 0.0;
 var $5794 = 0.0, $5795 = 0.0, $5796 = 0.0, $5797 = 0.0, $5798 = 0.0, $5799 = 0.0, $58 = 0, $580 = 0, $5800 = 0.0, $5801 = 0.0, $5802 = 0.0, $5803 = 0.0, $5804 = 0.0, $5805 = 0.0, $5806 = 0.0, $5807 = 0.0, $5808 = 0.0, $5809 = 0.0, $581 = 0, $5810 = 0.0;
 var $5811 = 0.0, $5812 = 0.0, $5813 = 0.0, $5814 = 0.0, $5815 = 0.0, $5816 = 0.0, $5817 = 0.0, $5818 = 0.0, $5819 = 0.0, $582 = 0, $5820 = 0.0, $5821 = 0.0, $5822 = 0.0, $5823 = 0.0, $5824 = 0.0, $5825 = 0.0, $5826 = 0.0, $5827 = 0.0, $5828 = 0.0, $5829 = 0.0;
 var $583 = 0, $5830 = 0.0, $5831 = 0.0, $5832 = 0.0, $5833 = 0.0, $5834 = 0.0, $5835 = 0.0, $5836 = 0.0, $5837 = 0.0, $5838 = 0.0, $5839 = 0.0, $584 = 0, $5840 = 0.0, $5841 = 0.0, $5842 = 0.0, $5843 = 0.0, $5844 = 0.0, $5845 = 0.0, $5846 = 0.0, $5847 = 0.0;
 var $5848 = 0.0, $5849 = 0.0, $585 = 0, $5850 = 0.0, $5851 = 0.0, $5852 = 0.0, $5853 = 0.0, $5854 = 0.0, $5855 = 0.0, $5856 = 0.0, $5857 = 0.0, $5858 = 0.0, $5859 = 0.0, $586 = 0, $5860 = 0.0, $5861 = 0.0, $5862 = 0.0, $5863 = 0.0, $5864 = 0.0, $5865 = 0.0;
 var $5866 = 0.0, $5867 = 0.0, $5868 = 0.0, $5869 = 0.0, $587 = 0, $5870 = 0.0, $5871 = 0.0, $5872 = 0.0, $5873 = 0.0, $5874 = 0.0, $5875 = 0.0, $5876 = 0.0, $5877 = 0.0, $5878 = 0.0, $5879 = 0.0, $588 = 0, $5880 = 0.0, $5881 = 0.0, $5882 = 0.0, $5883 = 0.0;
 var $5884 = 0.0, $5885 = 0.0, $5886 = 0.0, $5887 = 0.0, $5888 = 0.0, $5889 = 0.0, $589 = 0, $5890 = 0.0, $5891 = 0.0, $5892 = 0.0, $5893 = 0.0, $5894 = 0.0, $5895 = 0.0, $5896 = 0.0, $5897 = 0.0, $5898 = 0.0, $5899 = 0.0, $59 = 0, $590 = 0, $5900 = 0.0;
 var $5901 = 0.0, $5902 = 0.0, $5903 = 0.0, $5904 = 0.0, $5905 = 0.0, $5906 = 0.0, $5907 = 0.0, $5908 = 0.0, $5909 = 0.0, $591 = 0, $5910 = 0.0, $5911 = 0.0, $5912 = 0.0, $5913 = 0.0, $5914 = 0.0, $5915 = 0.0, $5916 = 0.0, $5917 = 0.0, $5918 = 0, $5919 = 0.0;
 var $592 = 0, $5920 = 0.0, $5921 = 0.0, $5922 = 0.0, $5923 = 0.0, $5924 = 0.0, $5925 = 0.0, $5926 = 0.0, $5927 = 0.0, $5928 = 0.0, $5929 = 0.0, $593 = 0, $5930 = 0.0, $5931 = 0.0, $5932 = 0.0, $5933 = 0, $5934 = 0.0, $5935 = 0, $5936 = 0.0, $5937 = 0;
 var $5938 = 0.0, $5939 = 0, $594 = 0, $5940 = 0.0, $5941 = 0, $5942 = 0.0, $5943 = 0.0, $5944 = 0.0, $5945 = 0.0, $5946 = 0.0, $5947 = 0.0, $5948 = 0.0, $5949 = 0.0, $595 = 0, $5950 = 0.0, $5951 = 0.0, $5952 = 0.0, $5953 = 0.0, $5954 = 0.0, $5955 = 0.0;
 var $5956 = 0.0, $5957 = 0.0, $5958 = 0.0, $5959 = 0.0, $596 = 0, $5960 = 0.0, $5961 = 0.0, $5962 = 0.0, $5963 = 0.0, $5964 = 0.0, $5965 = 0.0, $5966 = 0.0, $5967 = 0.0, $5968 = 0.0, $5969 = 0.0, $597 = 0, $5970 = 0.0, $5971 = 0.0, $5972 = 0.0, $5973 = 0.0;
 var $5974 = 0.0, $5975 = 0.0, $5976 = 0.0, $5977 = 0.0, $5978 = 0.0, $5979 = 0.0, $598 = 0, $5980 = 0.0, $5981 = 0.0, $5982 = 0.0, $5983 = 0.0, $5984 = 0.0, $5985 = 0.0, $5986 = 0.0, $5987 = 0.0, $5988 = 0.0, $5989 = 0.0, $599 = 0, $5990 = 0.0, $5991 = 0.0;
 var $5992 = 0.0, $5993 = 0.0, $5994 = 0.0, $5995 = 0.0, $5996 = 0.0, $5997 = 0.0, $5998 = 0.0, $5999 = 0.0, $6 = 0, $60 = 0, $600 = 0.0, $6000 = 0.0, $6001 = 0.0, $6002 = 0.0, $6003 = 0.0, $6004 = 0, $6005 = 0, $6006 = 0.0, $6007 = 0.0, $6008 = 0.0;
 var $6009 = 0.0, $601 = 0.0, $6010 = 0.0, $6011 = 0.0, $6012 = 0.0, $6013 = 0.0, $6014 = 0.0, $6015 = 0.0, $6016 = 0.0, $6017 = 0.0, $6018 = 0.0, $6019 = 0.0, $602 = 0.0, $6020 = 0.0, $6021 = 0.0, $6022 = 0.0, $6023 = 0.0, $6024 = 0.0, $6025 = 0.0, $6026 = 0.0;
 var $6027 = 0.0, $6028 = 0.0, $6029 = 0.0, $603 = 0.0, $6030 = 0.0, $6031 = 0.0, $6032 = 0.0, $6033 = 0.0, $6034 = 0.0, $6035 = 0.0, $6036 = 0.0, $6037 = 0.0, $6038 = 0.0, $6039 = 0.0, $604 = 0.0, $6040 = 0.0, $6041 = 0.0, $6042 = 0.0, $6043 = 0.0, $6044 = 0.0;
 var $6045 = 0.0, $6046 = 0, $6047 = 0, $6048 = 0.0, $6049 = 0.0, $605 = 0.0, $6050 = 0.0, $6051 = 0.0, $6052 = 0.0, $6053 = 0.0, $6054 = 0.0, $6055 = 0, $6056 = 0.0, $6057 = 0, $6058 = 0.0, $6059 = 0.0, $606 = 0.0, $6060 = 0.0, $6061 = 0.0, $6062 = 0.0;
 var $6063 = 0.0, $6064 = 0.0, $6065 = 0.0, $6066 = 0.0, $6067 = 0.0, $6068 = 0.0, $6069 = 0.0, $607 = 0.0, $6070 = 0.0, $6071 = 0.0, $6072 = 0.0, $6073 = 0.0, $6074 = 0.0, $6075 = 0.0, $6076 = 0.0, $6077 = 0.0, $6078 = 0.0, $6079 = 0.0, $608 = 0.0, $6080 = 0.0;
 var $6081 = 0.0, $6082 = 0.0, $6083 = 0.0, $6084 = 0.0, $6085 = 0.0, $6086 = 0.0, $6087 = 0.0, $6088 = 0.0, $6089 = 0.0, $609 = 0.0, $6090 = 0.0, $6091 = 0.0, $6092 = 0.0, $6093 = 0.0, $6094 = 0.0, $6095 = 0.0, $6096 = 0.0, $6097 = 0.0, $6098 = 0.0, $6099 = 0.0;
 var $61 = 0, $610 = 0.0, $6100 = 0.0, $6101 = 0.0, $6102 = 0.0, $6103 = 0.0, $6104 = 0.0, $6105 = 0.0, $6106 = 0.0, $6107 = 0.0, $6108 = 0.0, $6109 = 0.0, $611 = 0.0, $6110 = 0.0, $6111 = 0.0, $6112 = 0.0, $6113 = 0.0, $6114 = 0.0, $6115 = 0.0, $6116 = 0.0;
 var $6117 = 0.0, $6118 = 0.0, $6119 = 0.0, $612 = 0.0, $6120 = 0.0, $6121 = 0.0, $6122 = 0.0, $6123 = 0.0, $6124 = 0.0, $6125 = 0.0, $6126 = 0.0, $6127 = 0.0, $6128 = 0.0, $6129 = 0.0, $613 = 0.0, $6130 = 0.0, $6131 = 0.0, $6132 = 0.0, $6133 = 0.0, $6134 = 0.0;
 var $6135 = 0.0, $6136 = 0.0, $6137 = 0.0, $6138 = 0.0, $6139 = 0.0, $614 = 0.0, $6140 = 0.0, $6141 = 0.0, $6142 = 0.0, $6143 = 0.0, $6144 = 0.0, $6145 = 0.0, $6146 = 0.0, $6147 = 0.0, $6148 = 0.0, $6149 = 0.0, $615 = 0.0, $6150 = 0.0, $6151 = 0.0, $6152 = 0.0;
 var $6153 = 0.0, $6154 = 0.0, $6155 = 0.0, $6156 = 0.0, $6157 = 0.0, $6158 = 0.0, $6159 = 0.0, $616 = 0.0, $6160 = 0.0, $6161 = 0.0, $6162 = 0.0, $6163 = 0.0, $6164 = 0.0, $6165 = 0.0, $6166 = 0.0, $6167 = 0.0, $6168 = 0.0, $6169 = 0.0, $617 = 0.0, $6170 = 0.0;
 var $6171 = 0.0, $6172 = 0.0, $6173 = 0.0, $6174 = 0.0, $6175 = 0.0, $6176 = 0.0, $6177 = 0.0, $6178 = 0.0, $6179 = 0.0, $618 = 0.0, $6180 = 0.0, $6181 = 0.0, $6182 = 0.0, $6183 = 0.0, $6184 = 0.0, $6185 = 0.0, $6186 = 0.0, $6187 = 0.0, $6188 = 0.0, $6189 = 0.0;
 var $619 = 0.0, $6190 = 0.0, $6191 = 0.0, $6192 = 0.0, $6193 = 0.0, $6194 = 0.0, $6195 = 0.0, $6196 = 0.0, $6197 = 0.0, $6198 = 0.0, $6199 = 0.0, $62 = 0, $620 = 0.0, $6200 = 0.0, $6201 = 0.0, $6202 = 0.0, $6203 = 0.0, $6204 = 0.0, $6205 = 0.0, $6206 = 0.0;
 var $6207 = 0.0, $6208 = 0.0, $6209 = 0.0, $621 = 0.0, $6210 = 0.0, $6211 = 0.0, $6212 = 0.0, $6213 = 0.0, $6214 = 0.0, $6215 = 0.0, $6216 = 0.0, $6217 = 0.0, $6218 = 0, $6219 = 0.0, $622 = 0.0, $6220 = 0.0, $6221 = 0.0, $6222 = 0.0, $6223 = 0.0, $6224 = 0.0;
 var $6225 = 0.0, $6226 = 0.0, $6227 = 0.0, $6228 = 0.0, $6229 = 0.0, $623 = 0.0, $6230 = 0.0, $6231 = 0.0, $6232 = 0.0, $6233 = 0, $6234 = 0.0, $6235 = 0, $6236 = 0.0, $6237 = 0, $6238 = 0.0, $6239 = 0, $624 = 0.0, $6240 = 0.0, $6241 = 0, $6242 = 0.0;
 var $6243 = 0.0, $6244 = 0.0, $6245 = 0.0, $6246 = 0.0, $6247 = 0.0, $6248 = 0.0, $6249 = 0.0, $625 = 0.0, $6250 = 0.0, $6251 = 0.0, $6252 = 0.0, $6253 = 0.0, $6254 = 0.0, $6255 = 0.0, $6256 = 0.0, $6257 = 0.0, $6258 = 0.0, $6259 = 0.0, $626 = 0.0, $6260 = 0.0;
 var $6261 = 0.0, $6262 = 0.0, $6263 = 0.0, $6264 = 0.0, $6265 = 0.0, $6266 = 0.0, $6267 = 0.0, $6268 = 0.0, $6269 = 0.0, $627 = 0.0, $6270 = 0.0, $6271 = 0.0, $6272 = 0.0, $6273 = 0.0, $6274 = 0.0, $6275 = 0.0, $6276 = 0.0, $6277 = 0.0, $6278 = 0.0, $6279 = 0.0;
 var $628 = 0.0, $6280 = 0.0, $6281 = 0.0, $6282 = 0.0, $6283 = 0.0, $6284 = 0.0, $6285 = 0.0, $6286 = 0.0, $6287 = 0.0, $6288 = 0.0, $6289 = 0.0, $629 = 0.0, $6290 = 0.0, $6291 = 0.0, $6292 = 0.0, $6293 = 0.0, $6294 = 0, $6295 = 0, $6296 = 0.0, $6297 = 0.0;
 var $6298 = 0.0, $6299 = 0.0, $63 = 0, $630 = 0.0, $6300 = 0.0, $6301 = 0.0, $6302 = 0.0, $6303 = 0.0, $6304 = 0.0, $6305 = 0.0, $6306 = 0.0, $6307 = 0.0, $6308 = 0.0, $6309 = 0.0, $631 = 0.0, $6310 = 0.0, $6311 = 0.0, $6312 = 0.0, $6313 = 0.0, $6314 = 0.0;
 var $6315 = 0.0, $6316 = 0.0, $6317 = 0.0, $6318 = 0.0, $6319 = 0.0, $632 = 0.0, $6320 = 0.0, $6321 = 0.0, $6322 = 0.0, $6323 = 0.0, $6324 = 0.0, $6325 = 0.0, $6326 = 0.0, $6327 = 0.0, $6328 = 0.0, $6329 = 0.0, $633 = 0.0, $6330 = 0.0, $6331 = 0, $6332 = 0;
 var $6333 = 0.0, $6334 = 0.0, $6335 = 0.0, $6336 = 0.0, $6337 = 0.0, $6338 = 0.0, $6339 = 0.0, $634 = 0.0, $6340 = 0, $6341 = 0.0, $6342 = 0, $6343 = 0.0, $6344 = 0.0, $6345 = 0.0, $6346 = 0.0, $6347 = 0.0, $6348 = 0.0, $6349 = 0.0, $635 = 0.0, $6350 = 0.0;
 var $6351 = 0.0, $6352 = 0.0, $6353 = 0.0, $6354 = 0.0, $6355 = 0.0, $6356 = 0.0, $6357 = 0.0, $6358 = 0.0, $6359 = 0.0, $636 = 0.0, $6360 = 0.0, $6361 = 0.0, $6362 = 0.0, $6363 = 0.0, $6364 = 0.0, $6365 = 0.0, $6366 = 0.0, $6367 = 0.0, $6368 = 0.0, $6369 = 0.0;
 var $637 = 0.0, $6370 = 0.0, $6371 = 0.0, $6372 = 0.0, $6373 = 0.0, $6374 = 0.0, $6375 = 0.0, $6376 = 0.0, $6377 = 0.0, $6378 = 0.0, $6379 = 0.0, $638 = 0.0, $6380 = 0.0, $6381 = 0.0, $6382 = 0.0, $6383 = 0.0, $6384 = 0.0, $6385 = 0.0, $6386 = 0.0, $6387 = 0.0;
 var $6388 = 0.0, $6389 = 0.0, $639 = 0.0, $6390 = 0.0, $6391 = 0.0, $6392 = 0.0, $6393 = 0.0, $6394 = 0.0, $6395 = 0.0, $6396 = 0.0, $6397 = 0.0, $6398 = 0.0, $6399 = 0.0, $64 = 0, $640 = 0.0, $6400 = 0.0, $6401 = 0.0, $6402 = 0.0, $6403 = 0.0, $6404 = 0.0;
 var $6405 = 0.0, $6406 = 0.0, $6407 = 0.0, $6408 = 0.0, $6409 = 0.0, $641 = 0.0, $6410 = 0.0, $6411 = 0.0, $6412 = 0.0, $6413 = 0.0, $6414 = 0.0, $6415 = 0.0, $6416 = 0.0, $6417 = 0.0, $6418 = 0.0, $6419 = 0.0, $642 = 0.0, $6420 = 0.0, $6421 = 0.0, $6422 = 0.0;
 var $6423 = 0.0, $6424 = 0.0, $6425 = 0.0, $6426 = 0.0, $6427 = 0.0, $6428 = 0.0, $6429 = 0.0, $643 = 0.0, $6430 = 0.0, $6431 = 0.0, $6432 = 0.0, $6433 = 0.0, $6434 = 0.0, $6435 = 0.0, $6436 = 0.0, $6437 = 0.0, $6438 = 0.0, $6439 = 0.0, $644 = 0.0, $6440 = 0.0;
 var $6441 = 0.0, $6442 = 0.0, $6443 = 0.0, $6444 = 0.0, $6445 = 0.0, $6446 = 0.0, $6447 = 0.0, $6448 = 0.0, $6449 = 0.0, $645 = 0.0, $6450 = 0.0, $6451 = 0.0, $6452 = 0.0, $6453 = 0.0, $6454 = 0.0, $6455 = 0.0, $6456 = 0.0, $6457 = 0.0, $6458 = 0.0, $6459 = 0.0;
 var $646 = 0.0, $6460 = 0.0, $6461 = 0.0, $6462 = 0.0, $6463 = 0.0, $6464 = 0.0, $6465 = 0.0, $6466 = 0.0, $6467 = 0.0, $6468 = 0.0, $6469 = 0.0, $647 = 0.0, $6470 = 0.0, $6471 = 0.0, $6472 = 0.0, $6473 = 0.0, $6474 = 0.0, $6475 = 0.0, $6476 = 0.0, $6477 = 0.0;
 var $6478 = 0.0, $6479 = 0.0, $648 = 0.0, $6480 = 0.0, $6481 = 0.0, $6482 = 0.0, $6483 = 0.0, $6484 = 0.0, $6485 = 0.0, $6486 = 0.0, $6487 = 0.0, $6488 = 0.0, $6489 = 0.0, $649 = 0.0, $6490 = 0.0, $6491 = 0.0, $6492 = 0.0, $6493 = 0.0, $6494 = 0.0, $6495 = 0.0;
 var $6496 = 0.0, $6497 = 0.0, $6498 = 0.0, $6499 = 0.0, $65 = 0, $650 = 0.0, $6500 = 0.0, $6501 = 0.0, $6502 = 0.0, $6503 = 0, $6504 = 0.0, $6505 = 0.0, $6506 = 0.0, $6507 = 0.0, $6508 = 0.0, $6509 = 0.0, $651 = 0.0, $6510 = 0.0, $6511 = 0.0, $6512 = 0.0;
 var $6513 = 0.0, $6514 = 0.0, $6515 = 0.0, $6516 = 0.0, $6517 = 0.0, $6518 = 0, $6519 = 0.0, $652 = 0.0, $6520 = 0, $6521 = 0.0, $6522 = 0, $6523 = 0.0, $6524 = 0, $6525 = 0.0, $6526 = 0, $6527 = 0, $6528 = 0.0, $6529 = 0.0, $653 = 0.0, $6530 = 0.0;
 var $6531 = 0.0, $6532 = 0.0, $6533 = 0.0, $6534 = 0.0, $6535 = 0.0, $6536 = 0, $6537 = 0, $6538 = 0.0, $6539 = 0.0, $654 = 0.0, $6540 = 0.0, $6541 = 0.0, $6542 = 0, $6543 = 0.0, $6544 = 0.0, $6545 = 0, $6546 = 0, $6547 = 0.0, $6548 = 0.0, $6549 = 0.0;
 var $655 = 0.0, $6550 = 0.0, $6551 = 0.0, $6552 = 0.0, $6553 = 0.0, $6554 = 0.0, $6555 = 0.0, $6556 = 0.0, $6557 = 0, $6558 = 0, $6559 = 0.0, $656 = 0.0, $6560 = 0.0, $6561 = 0.0, $6562 = 0.0, $6563 = 0.0, $6564 = 0.0, $6565 = 0.0, $6566 = 0.0, $6567 = 0.0;
 var $6568 = 0.0, $6569 = 0.0, $657 = 0.0, $6570 = 0, $6571 = 0.0, $6572 = 0, $6573 = 0.0, $6574 = 0.0, $6575 = 0, $6576 = 0.0, $6577 = 0, $6578 = 0.0, $6579 = 0, $658 = 0.0, $6580 = 0, $6581 = 0, $6582 = 0, $6583 = 0, $6584 = 0, $6585 = 0;
 var $6586 = 0, $6587 = 0, $6588 = 0, $6589 = 0.0, $659 = 0.0, $6590 = 0, $6591 = 0.0, $6592 = 0.0, $6593 = 0.0, $6594 = 0, $6595 = 0.0, $6596 = 0, $6597 = 0.0, $6598 = 0.0, $6599 = 0.0, $66 = 0, $660 = 0.0, $6600 = 0, $6601 = 0, $6602 = 0;
 var $6603 = 0.0, $6604 = 0, $6605 = 0.0, $6606 = 0, $6607 = 0.0, $6608 = 0.0, $6609 = 0.0, $661 = 0.0, $6610 = 0.0, $6611 = 0.0, $6612 = 0.0, $6613 = 0.0, $6614 = 0.0, $6615 = 0.0, $6616 = 0.0, $6617 = 0.0, $6618 = 0.0, $6619 = 0.0, $662 = 0.0, $6620 = 0.0;
 var $6621 = 0.0, $6622 = 0.0, $6623 = 0.0, $6624 = 0.0, $6625 = 0.0, $6626 = 0.0, $6627 = 0.0, $6628 = 0.0, $6629 = 0.0, $663 = 0.0, $6630 = 0.0, $6631 = 0.0, $6632 = 0.0, $6633 = 0.0, $6634 = 0.0, $6635 = 0.0, $6636 = 0.0, $6637 = 0.0, $6638 = 0.0, $6639 = 0.0;
 var $664 = 0.0, $6640 = 0.0, $6641 = 0.0, $6642 = 0.0, $6643 = 0.0, $6644 = 0.0, $6645 = 0.0, $6646 = 0.0, $6647 = 0.0, $6648 = 0.0, $6649 = 0.0, $665 = 0.0, $6650 = 0.0, $6651 = 0.0, $6652 = 0.0, $6653 = 0.0, $6654 = 0.0, $6655 = 0.0, $6656 = 0.0, $6657 = 0.0;
 var $6658 = 0.0, $6659 = 0.0, $666 = 0.0, $6660 = 0.0, $6661 = 0.0, $6662 = 0.0, $6663 = 0.0, $6664 = 0.0, $6665 = 0, $6666 = 0.0, $6667 = 0.0, $6668 = 0.0, $6669 = 0.0, $667 = 0.0, $6670 = 0.0, $6671 = 0.0, $6672 = 0.0, $6673 = 0.0, $6674 = 0.0, $6675 = 0.0;
 var $6676 = 0.0, $6677 = 0.0, $6678 = 0.0, $6679 = 0.0, $668 = 0.0, $6680 = 0.0, $6681 = 0.0, $6682 = 0.0, $6683 = 0.0, $6684 = 0.0, $6685 = 0.0, $6686 = 0.0, $6687 = 0.0, $6688 = 0.0, $6689 = 0.0, $669 = 0.0, $6690 = 0.0, $6691 = 0.0, $6692 = 0.0, $6693 = 0.0;
 var $6694 = 0.0, $6695 = 0.0, $6696 = 0.0, $6697 = 0.0, $6698 = 0.0, $6699 = 0, $67 = 0, $670 = 0.0, $6700 = 0.0, $6701 = 0.0, $6702 = 0.0, $6703 = 0.0, $6704 = 0.0, $6705 = 0.0, $6706 = 0.0, $6707 = 0.0, $6708 = 0.0, $6709 = 0.0, $671 = 0.0, $6710 = 0.0;
 var $6711 = 0.0, $6712 = 0.0, $6713 = 0.0, $6714 = 0.0, $6715 = 0.0, $6716 = 0.0, $6717 = 0.0, $6718 = 0.0, $6719 = 0.0, $672 = 0.0, $6720 = 0.0, $6721 = 0.0, $6722 = 0.0, $6723 = 0.0, $6724 = 0.0, $6725 = 0.0, $6726 = 0.0, $6727 = 0.0, $6728 = 0.0, $6729 = 0.0;
 var $673 = 0.0, $6730 = 0.0, $6731 = 0.0, $6732 = 0.0, $6733 = 0.0, $6734 = 0.0, $6735 = 0.0, $6736 = 0.0, $6737 = 0.0, $6738 = 0.0, $6739 = 0.0, $674 = 0.0, $6740 = 0.0, $6741 = 0.0, $6742 = 0.0, $6743 = 0.0, $6744 = 0.0, $6745 = 0.0, $6746 = 0.0, $6747 = 0.0;
 var $6748 = 0.0, $6749 = 0.0, $675 = 0.0, $6750 = 0.0, $6751 = 0.0, $6752 = 0.0, $6753 = 0.0, $6754 = 0.0, $6755 = 0, $6756 = 0.0, $6757 = 0.0, $6758 = 0.0, $6759 = 0.0, $676 = 0.0, $6760 = 0.0, $6761 = 0.0, $6762 = 0.0, $6763 = 0.0, $6764 = 0.0, $6765 = 0.0;
 var $6766 = 0.0, $6767 = 0.0, $6768 = 0.0, $6769 = 0.0, $677 = 0.0, $6770 = 0.0, $6771 = 0.0, $6772 = 0.0, $6773 = 0.0, $6774 = 0.0, $6775 = 0.0, $6776 = 0.0, $6777 = 0.0, $6778 = 0.0, $6779 = 0.0, $678 = 0.0, $6780 = 0.0, $6781 = 0.0, $6782 = 0.0, $6783 = 0.0;
 var $6784 = 0.0, $6785 = 0.0, $6786 = 0.0, $6787 = 0, $6788 = 0.0, $6789 = 0.0, $679 = 0.0, $6790 = 0.0, $6791 = 0.0, $6792 = 0.0, $6793 = 0.0, $6794 = 0.0, $6795 = 0.0, $6796 = 0.0, $6797 = 0.0, $6798 = 0.0, $6799 = 0.0, $68 = 0, $680 = 0.0, $6800 = 0.0;
 var $6801 = 0.0, $6802 = 0.0, $6803 = 0.0, $6804 = 0.0, $6805 = 0.0, $6806 = 0.0, $6807 = 0.0, $6808 = 0.0, $6809 = 0.0, $681 = 0.0, $6810 = 0.0, $6811 = 0.0, $6812 = 0.0, $6813 = 0.0, $6814 = 0.0, $6815 = 0.0, $6816 = 0.0, $6817 = 0, $6818 = 0.0, $6819 = 0.0;
 var $682 = 0.0, $6820 = 0.0, $6821 = 0.0, $6822 = 0.0, $6823 = 0.0, $6824 = 0.0, $6825 = 0.0, $6826 = 0.0, $6827 = 0.0, $6828 = 0.0, $6829 = 0.0, $683 = 0.0, $6830 = 0.0, $6831 = 0.0, $6832 = 0.0, $6833 = 0.0, $6834 = 0.0, $6835 = 0.0, $6836 = 0.0, $6837 = 0;
 var $6838 = 0.0, $6839 = 0.0, $684 = 0.0, $6840 = 0.0, $6841 = 0.0, $6842 = 0.0, $6843 = 0.0, $6844 = 0.0, $6845 = 0.0, $6846 = 0.0, $6847 = 0.0, $6848 = 0.0, $6849 = 0.0, $685 = 0.0, $6850 = 0.0, $6851 = 0.0, $6852 = 0.0, $6853 = 0.0, $6854 = 0.0, $6855 = 0.0;
 var $6856 = 0.0, $6857 = 0.0, $6858 = 0.0, $6859 = 0.0, $686 = 0.0, $6860 = 0.0, $6861 = 0.0, $6862 = 0.0, $6863 = 0.0, $6864 = 0.0, $6865 = 0.0, $6866 = 0.0, $6867 = 0, $6868 = 0.0, $6869 = 0.0, $687 = 0.0, $6870 = 0.0, $6871 = 0.0, $6872 = 0.0, $6873 = 0.0;
 var $6874 = 0.0, $6875 = 0, $6876 = 0.0, $6877 = 0, $6878 = 0.0, $6879 = 0.0, $688 = 0.0, $6880 = 0.0, $6881 = 0.0, $6882 = 0.0, $6883 = 0.0, $6884 = 0.0, $6885 = 0.0, $6886 = 0.0, $6887 = 0.0, $6888 = 0.0, $6889 = 0.0, $689 = 0.0, $6890 = 0.0, $6891 = 0.0;
 var $6892 = 0.0, $6893 = 0.0, $6894 = 0.0, $6895 = 0.0, $6896 = 0.0, $6897 = 0.0, $6898 = 0.0, $6899 = 0.0, $69 = 0, $690 = 0.0, $6900 = 0.0, $6901 = 0.0, $6902 = 0.0, $6903 = 0.0, $6904 = 0.0, $6905 = 0.0, $6906 = 0.0, $6907 = 0.0, $6908 = 0.0, $6909 = 0.0;
 var $691 = 0.0, $6910 = 0.0, $6911 = 0.0, $6912 = 0.0, $6913 = 0.0, $6914 = 0.0, $6915 = 0.0, $6916 = 0.0, $6917 = 0.0, $6918 = 0.0, $6919 = 0.0, $692 = 0.0, $6920 = 0.0, $6921 = 0.0, $6922 = 0.0, $6923 = 0.0, $6924 = 0.0, $6925 = 0.0, $6926 = 0.0, $6927 = 0.0;
 var $6928 = 0.0, $6929 = 0.0, $693 = 0.0, $6930 = 0.0, $6931 = 0.0, $6932 = 0, $6933 = 0.0, $6934 = 0.0, $6935 = 0.0, $6936 = 0.0, $6937 = 0.0, $6938 = 0.0, $6939 = 0.0, $694 = 0.0, $6940 = 0.0, $6941 = 0.0, $6942 = 0.0, $6943 = 0.0, $6944 = 0.0, $6945 = 0.0;
 var $6946 = 0.0, $6947 = 0.0, $6948 = 0.0, $6949 = 0.0, $695 = 0.0, $6950 = 0.0, $6951 = 0.0, $6952 = 0.0, $6953 = 0.0, $6954 = 0.0, $6955 = 0.0, $6956 = 0.0, $6957 = 0.0, $6958 = 0.0, $6959 = 0.0, $696 = 0.0, $6960 = 0.0, $6961 = 0.0, $6962 = 0.0, $6963 = 0.0;
 var $6964 = 0.0, $6965 = 0.0, $6966 = 0.0, $6967 = 0.0, $6968 = 0.0, $6969 = 0.0, $697 = 0.0, $6970 = 0.0, $6971 = 0.0, $6972 = 0.0, $6973 = 0.0, $6974 = 0.0, $6975 = 0.0, $6976 = 0.0, $6977 = 0.0, $6978 = 0.0, $6979 = 0.0, $698 = 0.0, $6980 = 0.0, $6981 = 0;
 var $6982 = 0.0, $6983 = 0.0, $6984 = 0.0, $6985 = 0.0, $6986 = 0.0, $6987 = 0.0, $6988 = 0.0, $6989 = 0.0, $699 = 0.0, $6990 = 0, $6991 = 0.0, $6992 = 0, $6993 = 0, $6994 = 0.0, $6995 = 0.0, $6996 = 0.0, $6997 = 0.0, $6998 = 0.0, $6999 = 0.0, $7 = 0;
 var $70 = 0, $700 = 0.0, $7000 = 0.0, $7001 = 0.0, $7002 = 0.0, $7003 = 0.0, $7004 = 0, $7005 = 0, $7006 = 0.0, $7007 = 0.0, $7008 = 0.0, $7009 = 0.0, $701 = 0.0, $7010 = 0.0, $7011 = 0.0, $7012 = 0.0, $7013 = 0.0, $7014 = 0.0, $7015 = 0.0, $7016 = 0.0;
 var $7017 = 0.0, $7018 = 0.0, $7019 = 0.0, $702 = 0.0, $7020 = 0.0, $7021 = 0.0, $7022 = 0.0, $7023 = 0.0, $7024 = 0.0, $7025 = 0.0, $7026 = 0.0, $7027 = 0.0, $7028 = 0.0, $7029 = 0.0, $703 = 0.0, $7030 = 0.0, $7031 = 0, $7032 = 0.0, $7033 = 0.0, $7034 = 0.0;
 var $7035 = 0.0, $7036 = 0.0, $7037 = 0, $7038 = 0.0, $7039 = 0.0, $704 = 0.0, $7040 = 0.0, $7041 = 0.0, $7042 = 0.0, $7043 = 0.0, $7044 = 0.0, $7045 = 0.0, $7046 = 0.0, $7047 = 0, $7048 = 0.0, $7049 = 0, $705 = 0.0, $7050 = 0.0, $7051 = 0.0, $7052 = 0.0;
 var $7053 = 0.0, $7054 = 0.0, $7055 = 0.0, $7056 = 0.0, $7057 = 0.0, $7058 = 0.0, $7059 = 0.0, $706 = 0.0, $7060 = 0.0, $7061 = 0, $7062 = 0, $7063 = 0.0, $7064 = 0.0, $7065 = 0.0, $7066 = 0.0, $7067 = 0.0, $7068 = 0.0, $7069 = 0.0, $707 = 0.0, $7070 = 0.0;
 var $7071 = 0.0, $7072 = 0.0, $7073 = 0, $7074 = 0, $7075 = 0.0, $7076 = 0.0, $7077 = 0.0, $7078 = 0.0, $7079 = 0.0, $708 = 0.0, $7080 = 0, $7081 = 0.0, $7082 = 0.0, $7083 = 0.0, $7084 = 0, $7085 = 0, $7086 = 0, $7087 = 0, $7088 = 0, $7089 = 0;
 var $709 = 0.0, $7090 = 0, $7091 = 0, $7092 = 0, $7093 = 0, $7094 = 0, $7095 = 0, $7096 = 0, $7097 = 0, $7098 = 0, $7099 = 0, $71 = 0, $710 = 0.0, $7100 = 0, $7101 = 0, $7102 = 0.0, $7103 = 0, $7104 = 0.0, $7105 = 0.0, $7106 = 0.0;
 var $7107 = 0, $7108 = 0.0, $7109 = 0, $711 = 0.0, $7110 = 0.0, $7111 = 0.0, $7112 = 0.0, $7113 = 0, $7114 = 0, $7115 = 0, $7116 = 0.0, $7117 = 0, $7118 = 0.0, $7119 = 0, $712 = 0.0, $7120 = 0.0, $7121 = 0.0, $7122 = 0.0, $7123 = 0.0, $7124 = 0.0;
 var $7125 = 0.0, $7126 = 0.0, $7127 = 0.0, $7128 = 0.0, $7129 = 0.0, $713 = 0.0, $7130 = 0.0, $7131 = 0.0, $7132 = 0.0, $7133 = 0.0, $7134 = 0.0, $7135 = 0.0, $7136 = 0.0, $7137 = 0.0, $7138 = 0.0, $7139 = 0.0, $714 = 0.0, $7140 = 0.0, $7141 = 0.0, $7142 = 0.0;
 var $7143 = 0.0, $7144 = 0.0, $7145 = 0.0, $7146 = 0.0, $7147 = 0.0, $7148 = 0.0, $7149 = 0.0, $715 = 0.0, $7150 = 0.0, $7151 = 0.0, $7152 = 0.0, $7153 = 0.0, $7154 = 0.0, $7155 = 0.0, $7156 = 0.0, $7157 = 0.0, $7158 = 0.0, $7159 = 0.0, $716 = 0.0, $7160 = 0.0;
 var $7161 = 0.0, $7162 = 0.0, $7163 = 0.0, $7164 = 0.0, $7165 = 0.0, $7166 = 0.0, $7167 = 0.0, $7168 = 0.0, $7169 = 0.0, $717 = 0.0, $7170 = 0.0, $7171 = 0.0, $7172 = 0.0, $7173 = 0.0, $7174 = 0.0, $7175 = 0.0, $7176 = 0.0, $7177 = 0.0, $7178 = 0.0, $7179 = 0.0;
 var $718 = 0.0, $7180 = 0, $7181 = 0.0, $7182 = 0.0, $7183 = 0.0, $7184 = 0.0, $7185 = 0.0, $7186 = 0.0, $7187 = 0.0, $7188 = 0.0, $7189 = 0, $719 = 0.0, $7190 = 0.0, $7191 = 0, $7192 = 0.0, $7193 = 0, $7194 = 0, $7195 = 0.0, $7196 = 0.0, $7197 = 0.0;
 var $7198 = 0.0, $7199 = 0.0, $72 = 0, $720 = 0.0, $7200 = 0.0, $7201 = 0.0, $7202 = 0.0, $7203 = 0, $7204 = 0.0, $7205 = 0, $7206 = 0, $7207 = 0.0, $7208 = 0.0, $7209 = 0.0, $721 = 0.0, $7210 = 0.0, $7211 = 0.0, $7212 = 0.0, $7213 = 0.0, $7214 = 0.0;
 var $7215 = 0.0, $7216 = 0.0, $7217 = 0, $7218 = 0, $7219 = 0.0, $722 = 0.0, $7220 = 0.0, $7221 = 0.0, $7222 = 0.0, $7223 = 0.0, $7224 = 0.0, $7225 = 0.0, $7226 = 0.0, $7227 = 0.0, $7228 = 0.0, $7229 = 0.0, $723 = 0.0, $7230 = 0.0, $7231 = 0.0, $7232 = 0.0;
 var $7233 = 0.0, $7234 = 0.0, $7235 = 0.0, $7236 = 0.0, $7237 = 0.0, $7238 = 0.0, $7239 = 0.0, $724 = 0.0, $7240 = 0.0, $7241 = 0.0, $7242 = 0.0, $7243 = 0.0, $7244 = 0.0, $7245 = 0.0, $7246 = 0.0, $7247 = 0.0, $7248 = 0.0, $7249 = 0.0, $725 = 0.0, $7250 = 0.0;
 var $7251 = 0.0, $7252 = 0, $7253 = 0.0, $7254 = 0.0, $7255 = 0.0, $7256 = 0.0, $7257 = 0.0, $7258 = 0, $7259 = 0.0, $726 = 0.0, $7260 = 0.0, $7261 = 0.0, $7262 = 0.0, $7263 = 0.0, $7264 = 0.0, $7265 = 0.0, $7266 = 0.0, $7267 = 0.0, $7268 = 0, $7269 = 0.0;
 var $727 = 0.0, $7270 = 0, $7271 = 0.0, $7272 = 0.0, $7273 = 0.0, $7274 = 0.0, $7275 = 0.0, $7276 = 0.0, $7277 = 0.0, $7278 = 0.0, $7279 = 0.0, $728 = 0.0, $7280 = 0, $7281 = 0, $7282 = 0.0, $7283 = 0.0, $7284 = 0.0, $7285 = 0.0, $7286 = 0.0, $7287 = 0.0;
 var $7288 = 0.0, $7289 = 0.0, $729 = 0.0, $7290 = 0.0, $7291 = 0.0, $7292 = 0, $7293 = 0, $7294 = 0.0, $7295 = 0.0, $7296 = 0.0, $7297 = 0.0, $7298 = 0.0, $7299 = 0, $73 = 0, $730 = 0.0, $7300 = 0.0, $7301 = 0.0, $7302 = 0.0, $7303 = 0, $7304 = 0;
 var $7305 = 0, $7306 = 0, $7307 = 0, $7308 = 0, $7309 = 0, $731 = 0.0, $7310 = 0, $7311 = 0, $7312 = 0, $7313 = 0, $7314 = 0, $7315 = 0, $7316 = 0, $7317 = 0, $7318 = 0, $7319 = 0, $732 = 0.0, $7320 = 0, $7321 = 0.0, $7322 = 0;
 var $7323 = 0.0, $7324 = 0.0, $7325 = 0.0, $7326 = 0, $7327 = 0.0, $7328 = 0, $7329 = 0.0, $733 = 0.0, $7330 = 0.0, $7331 = 0.0, $7332 = 0, $7333 = 0, $7334 = 0, $7335 = 0.0, $7336 = 0, $7337 = 0.0, $7338 = 0, $7339 = 0.0, $734 = 0.0, $7340 = 0.0;
 var $7341 = 0.0, $7342 = 0.0, $7343 = 0.0, $7344 = 0.0, $7345 = 0.0, $7346 = 0.0, $7347 = 0.0, $7348 = 0.0, $7349 = 0.0, $735 = 0.0, $7350 = 0.0, $7351 = 0.0, $7352 = 0.0, $7353 = 0.0, $7354 = 0.0, $7355 = 0.0, $7356 = 0.0, $7357 = 0.0, $7358 = 0.0, $7359 = 0.0;
 var $736 = 0.0, $7360 = 0.0, $7361 = 0.0, $7362 = 0.0, $7363 = 0.0, $7364 = 0.0, $7365 = 0.0, $7366 = 0.0, $7367 = 0.0, $7368 = 0.0, $7369 = 0.0, $737 = 0.0, $7370 = 0.0, $7371 = 0.0, $7372 = 0.0, $7373 = 0.0, $7374 = 0.0, $7375 = 0.0, $7376 = 0.0, $7377 = 0.0;
 var $7378 = 0.0, $7379 = 0.0, $738 = 0.0, $7380 = 0.0, $7381 = 0.0, $7382 = 0.0, $7383 = 0.0, $7384 = 0.0, $7385 = 0.0, $7386 = 0.0, $7387 = 0.0, $7388 = 0.0, $7389 = 0.0, $739 = 0.0, $7390 = 0.0, $7391 = 0.0, $7392 = 0.0, $7393 = 0.0, $7394 = 0.0, $7395 = 0.0;
 var $7396 = 0.0, $7397 = 0.0, $7398 = 0.0, $7399 = 0.0, $74 = 0, $740 = 0.0, $7400 = 0, $7401 = 0.0, $7402 = 0.0, $7403 = 0.0, $7404 = 0.0, $7405 = 0.0, $7406 = 0.0, $7407 = 0.0, $7408 = 0.0, $7409 = 0, $741 = 0.0, $7410 = 0.0, $7411 = 0, $7412 = 0.0;
 var $7413 = 0, $7414 = 0, $7415 = 0.0, $7416 = 0.0, $7417 = 0.0, $7418 = 0.0, $7419 = 0.0, $742 = 0.0, $7420 = 0.0, $7421 = 0.0, $7422 = 0.0, $7423 = 0.0, $7424 = 0.0, $7425 = 0.0, $7426 = 0.0, $7427 = 0.0, $7428 = 0.0, $7429 = 0.0, $743 = 0.0, $7430 = 0.0;
 var $7431 = 0, $7432 = 0.0, $7433 = 0.0, $7434 = 0.0, $7435 = 0.0, $7436 = 0.0, $7437 = 0, $7438 = 0.0, $7439 = 0, $744 = 0.0, $7440 = 0.0, $7441 = 0, $7442 = 0.0, $7443 = 0, $7444 = 0.0, $7445 = 0, $7446 = 0.0, $7447 = 0.0, $7448 = 0.0, $7449 = 0.0;
 var $745 = 0.0, $7450 = 0, $7451 = 0.0, $7452 = 0.0, $7453 = 0, $7454 = 0, $7455 = 0, $7456 = 0, $7457 = 0, $7458 = 0.0, $7459 = 0.0, $746 = 0.0, $7460 = 0.0, $7461 = 0.0, $7462 = 0, $7463 = 0, $7464 = 0.0, $7465 = 0, $7466 = 0.0, $7467 = 0.0;
 var $7468 = 0, $7469 = 0.0, $747 = 0.0, $7470 = 0.0, $7471 = 0, $7472 = 0, $7473 = 0, $7474 = 0, $7475 = 0, $7476 = 0, $7477 = 0, $7478 = 0.0, $7479 = 0, $748 = 0.0, $7480 = 0.0, $7481 = 0, $7482 = 0.0, $7483 = 0.0, $7484 = 0.0, $7485 = 0.0;
 var $7486 = 0, $7487 = 0, $7488 = 0, $7489 = 0, $749 = 0.0, $7490 = 0, $7491 = 0, $7492 = 0.0, $7493 = 0, $7494 = 0.0, $7495 = 0.0, $7496 = 0.0, $7497 = 0, $7498 = 0.0, $7499 = 0, $75 = 0, $750 = 0.0, $7500 = 0.0, $7501 = 0.0, $7502 = 0.0;
 var $7503 = 0, $7504 = 0, $7505 = 0, $7506 = 0.0, $7507 = 0.0, $7508 = 0.0, $7509 = 0.0, $751 = 0.0, $7510 = 0.0, $7511 = 0.0, $7512 = 0, $7513 = 0, $7514 = 0.0, $7515 = 0.0, $7516 = 0.0, $7517 = 0.0, $7518 = 0.0, $7519 = 0.0, $752 = 0.0, $7520 = 0.0;
 var $7521 = 0.0, $7522 = 0.0, $7523 = 0.0, $7524 = 0.0, $7525 = 0.0, $7526 = 0.0, $7527 = 0.0, $7528 = 0.0, $7529 = 0.0, $753 = 0.0, $7530 = 0, $7531 = 0, $7532 = 0.0, $7533 = 0.0, $7534 = 0.0, $7535 = 0.0, $7536 = 0.0, $7537 = 0, $7538 = 0.0, $7539 = 0.0;
 var $754 = 0.0, $7540 = 0.0, $7541 = 0, $7542 = 0, $7543 = 0, $7544 = 0, $7545 = 0, $7546 = 0, $7547 = 0, $7548 = 0, $7549 = 0, $755 = 0.0, $7550 = 0, $7551 = 0, $7552 = 0, $7553 = 0, $7554 = 0, $7555 = 0, $7556 = 0, $7557 = 0;
 var $7558 = 0, $7559 = 0.0, $756 = 0.0, $7560 = 0, $7561 = 0.0, $7562 = 0.0, $7563 = 0.0, $7564 = 0, $7565 = 0.0, $7566 = 0, $7567 = 0.0, $7568 = 0.0, $7569 = 0.0, $757 = 0.0, $7570 = 0, $7571 = 0, $7572 = 0, $7573 = 0.0, $7574 = 0, $7575 = 0.0;
 var $7576 = 0, $7577 = 0.0, $7578 = 0.0, $7579 = 0.0, $758 = 0.0, $7580 = 0.0, $7581 = 0.0, $7582 = 0.0, $7583 = 0.0, $7584 = 0.0, $7585 = 0.0, $7586 = 0.0, $7587 = 0.0, $7588 = 0.0, $7589 = 0.0, $759 = 0.0, $7590 = 0.0, $7591 = 0.0, $7592 = 0.0, $7593 = 0.0;
 var $7594 = 0.0, $7595 = 0.0, $7596 = 0.0, $7597 = 0.0, $7598 = 0.0, $7599 = 0.0, $76 = 0, $760 = 0.0, $7600 = 0.0, $7601 = 0.0, $7602 = 0.0, $7603 = 0.0, $7604 = 0.0, $7605 = 0.0, $7606 = 0.0, $7607 = 0.0, $7608 = 0.0, $7609 = 0.0, $761 = 0.0, $7610 = 0.0;
 var $7611 = 0.0, $7612 = 0.0, $7613 = 0.0, $7614 = 0.0, $7615 = 0.0, $7616 = 0.0, $7617 = 0.0, $7618 = 0.0, $7619 = 0.0, $762 = 0.0, $7620 = 0.0, $7621 = 0.0, $7622 = 0.0, $7623 = 0.0, $7624 = 0.0, $7625 = 0.0, $7626 = 0.0, $7627 = 0.0, $7628 = 0.0, $7629 = 0.0;
 var $763 = 0.0, $7630 = 0.0, $7631 = 0.0, $7632 = 0.0, $7633 = 0.0, $7634 = 0.0, $7635 = 0.0, $7636 = 0.0, $7637 = 0.0, $7638 = 0.0, $7639 = 0.0, $764 = 0.0, $7640 = 0.0, $7641 = 0, $7642 = 0.0, $7643 = 0.0, $7644 = 0.0, $7645 = 0.0, $7646 = 0.0, $7647 = 0.0;
 var $7648 = 0.0, $7649 = 0.0, $765 = 0.0, $7650 = 0.0, $7651 = 0.0, $7652 = 0, $7653 = 0.0, $7654 = 0, $7655 = 0.0, $7656 = 0, $7657 = 0, $7658 = 0.0, $7659 = 0.0, $766 = 0.0, $7660 = 0.0, $7661 = 0.0, $7662 = 0.0, $7663 = 0.0, $7664 = 0.0, $7665 = 0.0;
 var $7666 = 0.0, $7667 = 0.0, $7668 = 0.0, $7669 = 0.0, $767 = 0.0, $7670 = 0.0, $7671 = 0, $7672 = 0, $7673 = 0.0, $7674 = 0.0, $7675 = 0.0, $7676 = 0.0, $7677 = 0.0, $7678 = 0.0, $7679 = 0.0, $768 = 0.0, $7680 = 0.0, $7681 = 0.0, $7682 = 0.0, $7683 = 0;
 var $7684 = 0, $7685 = 0.0, $7686 = 0.0, $7687 = 0.0, $7688 = 0.0, $7689 = 0.0, $769 = 0.0, $7690 = 0, $7691 = 0.0, $7692 = 0.0, $7693 = 0.0, $7694 = 0, $7695 = 0, $7696 = 0, $7697 = 0, $7698 = 0, $7699 = 0, $77 = 0, $770 = 0.0, $7700 = 0;
 var $7701 = 0, $7702 = 0, $7703 = 0, $7704 = 0, $7705 = 0, $7706 = 0, $7707 = 0, $7708 = 0, $7709 = 0, $771 = 0.0, $7710 = 0, $7711 = 0, $7712 = 0.0, $7713 = 0, $7714 = 0.0, $7715 = 0.0, $7716 = 0.0, $7717 = 0, $7718 = 0.0, $7719 = 0;
 var $772 = 0.0, $7720 = 0.0, $7721 = 0.0, $7722 = 0.0, $7723 = 0, $7724 = 0, $7725 = 0, $7726 = 0.0, $7727 = 0, $7728 = 0.0, $7729 = 0, $773 = 0.0, $7730 = 0.0, $7731 = 0.0, $7732 = 0.0, $7733 = 0.0, $7734 = 0.0, $7735 = 0.0, $7736 = 0.0, $7737 = 0.0;
 var $7738 = 0.0, $7739 = 0.0, $774 = 0.0, $7740 = 0.0, $7741 = 0.0, $7742 = 0.0, $7743 = 0.0, $7744 = 0.0, $7745 = 0.0, $7746 = 0.0, $7747 = 0.0, $7748 = 0.0, $7749 = 0.0, $775 = 0.0, $7750 = 0.0, $7751 = 0.0, $7752 = 0.0, $7753 = 0.0, $7754 = 0.0, $7755 = 0.0;
 var $7756 = 0.0, $7757 = 0.0, $7758 = 0.0, $7759 = 0.0, $776 = 0.0, $7760 = 0.0, $7761 = 0.0, $7762 = 0.0, $7763 = 0.0, $7764 = 0.0, $7765 = 0.0, $7766 = 0.0, $7767 = 0.0, $7768 = 0.0, $7769 = 0.0, $777 = 0.0, $7770 = 0.0, $7771 = 0.0, $7772 = 0.0, $7773 = 0.0;
 var $7774 = 0.0, $7775 = 0.0, $7776 = 0.0, $7777 = 0.0, $7778 = 0.0, $7779 = 0.0, $778 = 0.0, $7780 = 0.0, $7781 = 0.0, $7782 = 0.0, $7783 = 0.0, $7784 = 0.0, $7785 = 0.0, $7786 = 0.0, $7787 = 0.0, $7788 = 0.0, $7789 = 0.0, $779 = 0.0, $7790 = 0.0, $7791 = 0.0;
 var $7792 = 0, $7793 = 0.0, $7794 = 0.0, $7795 = 0.0, $7796 = 0.0, $7797 = 0.0, $7798 = 0.0, $7799 = 0.0, $78 = 0, $780 = 0.0, $7800 = 0.0, $7801 = 0, $7802 = 0.0, $7803 = 0, $7804 = 0.0, $7805 = 0, $7806 = 0, $7807 = 0.0, $7808 = 0.0, $7809 = 0.0;
 var $781 = 0.0, $7810 = 0.0, $7811 = 0.0, $7812 = 0.0, $7813 = 0.0, $7814 = 0.0, $7815 = 0.0, $7816 = 0.0, $7817 = 0.0, $7818 = 0.0, $7819 = 0.0, $782 = 0.0, $7820 = 0.0, $7821 = 0.0, $7822 = 0.0, $7823 = 0.0, $7824 = 0.0, $7825 = 0.0, $7826 = 0.0, $7827 = 0.0;
 var $7828 = 0.0, $7829 = 0.0, $783 = 0.0, $7830 = 0.0, $7831 = 0.0, $7832 = 0.0, $7833 = 0.0, $7834 = 0.0, $7835 = 0.0, $7836 = 0.0, $7837 = 0.0, $7838 = 0, $7839 = 0.0, $784 = 0.0, $7840 = 0.0, $7841 = 0.0, $7842 = 0.0, $7843 = 0.0, $7844 = 0.0, $7845 = 0.0;
 var $7846 = 0, $7847 = 0.0, $7848 = 0, $7849 = 0.0, $785 = 0.0, $7850 = 0, $7851 = 0.0, $7852 = 0.0, $7853 = 0.0, $7854 = 0.0, $7855 = 0.0, $7856 = 0.0, $7857 = 0.0, $7858 = 0.0, $7859 = 0.0, $786 = 0.0, $7860 = 0.0, $7861 = 0.0, $7862 = 0.0, $7863 = 0.0;
 var $7864 = 0.0, $7865 = 0.0, $7866 = 0.0, $7867 = 0.0, $7868 = 0.0, $7869 = 0.0, $787 = 0.0, $7870 = 0.0, $7871 = 0.0, $7872 = 0.0, $7873 = 0.0, $7874 = 0.0, $7875 = 0.0, $7876 = 0.0, $7877 = 0.0, $7878 = 0.0, $7879 = 0.0, $788 = 0.0, $7880 = 0.0, $7881 = 0.0;
 var $7882 = 0.0, $7883 = 0.0, $7884 = 0.0, $7885 = 0.0, $7886 = 0.0, $7887 = 0.0, $7888 = 0.0, $7889 = 0.0, $789 = 0.0, $7890 = 0.0, $7891 = 0.0, $7892 = 0.0, $7893 = 0.0, $7894 = 0.0, $7895 = 0.0, $7896 = 0.0, $7897 = 0.0, $7898 = 0.0, $7899 = 0.0, $79 = 0;
 var $790 = 0.0, $7900 = 0.0, $7901 = 0.0, $7902 = 0.0, $7903 = 0.0, $7904 = 0.0, $7905 = 0, $7906 = 0.0, $7907 = 0.0, $7908 = 0.0, $7909 = 0.0, $791 = 0.0, $7910 = 0.0, $7911 = 0.0, $7912 = 0.0, $7913 = 0.0, $7914 = 0.0, $7915 = 0.0, $7916 = 0.0, $7917 = 0.0;
 var $7918 = 0.0, $7919 = 0.0, $792 = 0.0, $7920 = 0.0, $7921 = 0.0, $7922 = 0.0, $7923 = 0.0, $7924 = 0.0, $7925 = 0.0, $7926 = 0.0, $7927 = 0.0, $7928 = 0.0, $7929 = 0.0, $793 = 0.0, $7930 = 0.0, $7931 = 0.0, $7932 = 0.0, $7933 = 0.0, $7934 = 0.0, $7935 = 0.0;
 var $7936 = 0.0, $7937 = 0.0, $7938 = 0.0, $7939 = 0.0, $794 = 0.0, $7940 = 0.0, $7941 = 0.0, $7942 = 0.0, $7943 = 0.0, $7944 = 0.0, $7945 = 0.0, $7946 = 0.0, $7947 = 0.0, $7948 = 0.0, $7949 = 0.0, $795 = 0.0, $7950 = 0.0, $7951 = 0.0, $7952 = 0.0, $7953 = 0.0;
 var $7954 = 0, $7955 = 0.0, $7956 = 0.0, $7957 = 0.0, $7958 = 0.0, $7959 = 0.0, $796 = 0.0, $7960 = 0.0, $7961 = 0.0, $7962 = 0.0, $7963 = 0, $7964 = 0.0, $7965 = 0, $7966 = 0, $7967 = 0.0, $7968 = 0.0, $7969 = 0.0, $797 = 0.0, $7970 = 0.0, $7971 = 0.0;
 var $7972 = 0.0, $7973 = 0.0, $7974 = 0.0, $7975 = 0.0, $7976 = 0.0, $7977 = 0.0, $7978 = 0.0, $7979 = 0, $798 = 0.0, $7980 = 0, $7981 = 0.0, $7982 = 0.0, $7983 = 0.0, $7984 = 0.0, $7985 = 0.0, $7986 = 0.0, $7987 = 0.0, $7988 = 0.0, $7989 = 0.0, $799 = 0.0;
 var $7990 = 0.0, $7991 = 0.0, $7992 = 0.0, $7993 = 0.0, $7994 = 0.0, $7995 = 0.0, $7996 = 0.0, $7997 = 0.0, $7998 = 0.0, $7999 = 0.0, $8 = 0, $80 = 0, $800 = 0.0, $8000 = 0, $8001 = 0.0, $8002 = 0.0, $8003 = 0.0, $8004 = 0.0, $8005 = 0.0, $8006 = 0.0;
 var $8007 = 0.0, $8008 = 0.0, $8009 = 0.0, $801 = 0.0, $8010 = 0.0, $8011 = 0.0, $8012 = 0, $8013 = 0.0, $8014 = 0.0, $8015 = 0.0, $8016 = 0.0, $8017 = 0.0, $8018 = 0.0, $8019 = 0.0, $802 = 0.0, $8020 = 0.0, $8021 = 0.0, $8022 = 0.0, $8023 = 0.0, $8024 = 0;
 var $8025 = 0.0, $8026 = 0, $8027 = 0.0, $8028 = 0, $8029 = 0.0, $803 = 0.0, $8030 = 0.0, $8031 = 0.0, $8032 = 0.0, $8033 = 0.0, $8034 = 0.0, $8035 = 0.0, $8036 = 0.0, $8037 = 0.0, $8038 = 0.0, $8039 = 0.0, $804 = 0.0, $8040 = 0, $8041 = 0, $8042 = 0.0;
 var $8043 = 0.0, $8044 = 0.0, $8045 = 0.0, $8046 = 0.0, $8047 = 0.0, $8048 = 0.0, $8049 = 0.0, $805 = 0.0, $8050 = 0.0, $8051 = 0.0, $8052 = 0, $8053 = 0, $8054 = 0.0, $8055 = 0.0, $8056 = 0.0, $8057 = 0.0, $8058 = 0.0, $8059 = 0, $806 = 0.0, $8060 = 0.0;
 var $8061 = 0.0, $8062 = 0.0, $8063 = 0, $8064 = 0, $8065 = 0, $8066 = 0, $8067 = 0, $8068 = 0, $8069 = 0, $807 = 0.0, $8070 = 0, $8071 = 0.0, $8072 = 0, $8073 = 0, $8074 = 0, $8075 = 0, $8076 = 0, $8077 = 0, $8078 = 0, $8079 = 0;
 var $808 = 0.0, $8080 = 0, $8081 = 0, $8082 = 0.0, $8083 = 0, $8084 = 0.0, $8085 = 0.0, $8086 = 0.0, $8087 = 0, $8088 = 0.0, $8089 = 0, $809 = 0.0, $8090 = 0.0, $8091 = 0.0, $8092 = 0.0, $8093 = 0, $8094 = 0, $8095 = 0, $8096 = 0.0, $8097 = 0;
 var $8098 = 0.0, $8099 = 0, $81 = 0, $810 = 0.0, $8100 = 0.0, $8101 = 0.0, $8102 = 0.0, $8103 = 0.0, $8104 = 0.0, $8105 = 0.0, $8106 = 0.0, $8107 = 0.0, $8108 = 0.0, $8109 = 0.0, $811 = 0.0, $8110 = 0.0, $8111 = 0.0, $8112 = 0.0, $8113 = 0.0, $8114 = 0.0;
 var $8115 = 0.0, $8116 = 0.0, $8117 = 0.0, $8118 = 0.0, $8119 = 0.0, $812 = 0.0, $8120 = 0.0, $8121 = 0.0, $8122 = 0.0, $8123 = 0.0, $8124 = 0.0, $8125 = 0.0, $8126 = 0.0, $8127 = 0.0, $8128 = 0.0, $8129 = 0.0, $813 = 0.0, $8130 = 0.0, $8131 = 0.0, $8132 = 0.0;
 var $8133 = 0.0, $8134 = 0.0, $8135 = 0.0, $8136 = 0.0, $8137 = 0.0, $8138 = 0.0, $8139 = 0.0, $814 = 0.0, $8140 = 0.0, $8141 = 0.0, $8142 = 0.0, $8143 = 0.0, $8144 = 0.0, $8145 = 0.0, $8146 = 0.0, $8147 = 0.0, $8148 = 0.0, $8149 = 0.0, $815 = 0.0, $8150 = 0.0;
 var $8151 = 0.0, $8152 = 0.0, $8153 = 0.0, $8154 = 0.0, $8155 = 0.0, $8156 = 0.0, $8157 = 0.0, $8158 = 0.0, $8159 = 0.0, $816 = 0.0, $8160 = 0.0, $8161 = 0, $8162 = 0.0, $8163 = 0.0, $8164 = 0.0, $8165 = 0.0, $8166 = 0.0, $8167 = 0.0, $8168 = 0.0, $8169 = 0.0;
 var $817 = 0.0, $8170 = 0, $8171 = 0.0, $8172 = 0, $8173 = 0.0, $8174 = 0, $8175 = 0, $8176 = 0.0, $8177 = 0.0, $8178 = 0.0, $8179 = 0.0, $818 = 0.0, $8180 = 0.0, $8181 = 0.0, $8182 = 0.0, $8183 = 0.0, $8184 = 0, $8185 = 0.0, $8186 = 0, $8187 = 0;
 var $8188 = 0.0, $8189 = 0.0, $819 = 0.0, $8190 = 0.0, $8191 = 0.0, $8192 = 0.0, $8193 = 0.0, $8194 = 0.0, $8195 = 0.0, $8196 = 0.0, $8197 = 0.0, $8198 = 0.0, $8199 = 0.0, $82 = 0, $820 = 0.0, $8200 = 0, $8201 = 0, $8202 = 0.0, $8203 = 0.0, $8204 = 0.0;
 var $8205 = 0.0, $8206 = 0.0, $8207 = 0.0, $8208 = 0.0, $8209 = 0.0, $821 = 0.0, $8210 = 0.0, $8211 = 0.0, $8212 = 0.0, $8213 = 0.0, $8214 = 0.0, $8215 = 0.0, $8216 = 0.0, $8217 = 0.0, $8218 = 0.0, $8219 = 0.0, $822 = 0.0, $8220 = 0.0, $8221 = 0.0, $8222 = 0.0;
 var $8223 = 0.0, $8224 = 0.0, $8225 = 0.0, $8226 = 0.0, $8227 = 0.0, $8228 = 0.0, $8229 = 0, $823 = 0.0, $8230 = 0.0, $8231 = 0.0, $8232 = 0.0, $8233 = 0.0, $8234 = 0.0, $8235 = 0.0, $8236 = 0.0, $8237 = 0.0, $8238 = 0.0, $8239 = 0.0, $824 = 0.0, $8240 = 0.0;
 var $8241 = 0, $8242 = 0.0, $8243 = 0.0, $8244 = 0.0, $8245 = 0.0, $8246 = 0.0, $8247 = 0.0, $8248 = 0.0, $8249 = 0.0, $825 = 0.0, $8250 = 0.0, $8251 = 0.0, $8252 = 0.0, $8253 = 0, $8254 = 0.0, $8255 = 0, $8256 = 0.0, $8257 = 0, $8258 = 0.0, $8259 = 0.0;
 var $826 = 0.0, $8260 = 0.0, $8261 = 0.0, $8262 = 0.0, $8263 = 0.0, $8264 = 0.0, $8265 = 0.0, $8266 = 0.0, $8267 = 0.0, $8268 = 0.0, $8269 = 0, $827 = 0.0, $8270 = 0, $8271 = 0.0, $8272 = 0.0, $8273 = 0.0, $8274 = 0.0, $8275 = 0.0, $8276 = 0.0, $8277 = 0.0;
 var $8278 = 0.0, $8279 = 0.0, $828 = 0.0, $8280 = 0.0, $8281 = 0, $8282 = 0, $8283 = 0.0, $8284 = 0.0, $8285 = 0.0, $8286 = 0.0, $8287 = 0.0, $8288 = 0, $8289 = 0.0, $829 = 0.0, $8290 = 0.0, $8291 = 0.0, $8292 = 0, $8293 = 0, $8294 = 0, $8295 = 0;
 var $8296 = 0, $8297 = 0, $8298 = 0, $8299 = 0, $83 = 0, $830 = 0.0, $8300 = 0, $8301 = 0, $8302 = 0, $8303 = 0, $8304 = 0, $8305 = 0, $8306 = 0, $8307 = 0, $8308 = 0, $8309 = 0, $831 = 0.0, $8310 = 0.0, $8311 = 0, $8312 = 0.0;
 var $8313 = 0.0, $8314 = 0.0, $8315 = 0, $8316 = 0.0, $8317 = 0, $8318 = 0.0, $8319 = 0.0, $832 = 0.0, $8320 = 0.0, $8321 = 0, $8322 = 0, $8323 = 0, $8324 = 0.0, $8325 = 0, $8326 = 0.0, $8327 = 0, $8328 = 0.0, $8329 = 0.0, $833 = 0.0, $8330 = 0.0;
 var $8331 = 0.0, $8332 = 0.0, $8333 = 0.0, $8334 = 0.0, $8335 = 0.0, $8336 = 0.0, $8337 = 0.0, $8338 = 0.0, $8339 = 0.0, $834 = 0.0, $8340 = 0.0, $8341 = 0.0, $8342 = 0.0, $8343 = 0.0, $8344 = 0.0, $8345 = 0.0, $8346 = 0.0, $8347 = 0.0, $8348 = 0.0, $8349 = 0.0;
 var $835 = 0.0, $8350 = 0.0, $8351 = 0.0, $8352 = 0.0, $8353 = 0.0, $8354 = 0.0, $8355 = 0.0, $8356 = 0.0, $8357 = 0.0, $8358 = 0.0, $8359 = 0.0, $836 = 0.0, $8360 = 0.0, $8361 = 0.0, $8362 = 0.0, $8363 = 0.0, $8364 = 0.0, $8365 = 0.0, $8366 = 0.0, $8367 = 0.0;
 var $8368 = 0.0, $8369 = 0.0, $837 = 0.0, $8370 = 0.0, $8371 = 0.0, $8372 = 0.0, $8373 = 0.0, $8374 = 0.0, $8375 = 0.0, $8376 = 0.0, $8377 = 0.0, $8378 = 0.0, $8379 = 0.0, $838 = 0.0, $8380 = 0.0, $8381 = 0.0, $8382 = 0.0, $8383 = 0.0, $8384 = 0.0, $8385 = 0.0;
 var $8386 = 0.0, $8387 = 0, $8388 = 0.0, $8389 = 0.0, $839 = 0.0, $8390 = 0.0, $8391 = 0.0, $8392 = 0.0, $8393 = 0.0, $8394 = 0.0, $8395 = 0.0, $8396 = 0, $8397 = 0.0, $8398 = 0, $8399 = 0.0, $84 = 0, $840 = 0, $8400 = 0, $8401 = 0, $8402 = 0.0;
 var $8403 = 0.0, $8404 = 0.0, $8405 = 0.0, $8406 = 0.0, $8407 = 0.0, $8408 = 0.0, $8409 = 0.0, $841 = 0, $8410 = 0.0, $8411 = 0.0, $8412 = 0.0, $8413 = 0.0, $8414 = 0.0, $8415 = 0.0, $8416 = 0.0, $8417 = 0.0, $8418 = 0.0, $8419 = 0.0, $842 = 0, $8420 = 0;
 var $8421 = 0.0, $8422 = 0.0, $8423 = 0.0, $8424 = 0.0, $8425 = 0.0, $8426 = 0, $8427 = 0.0, $8428 = 0, $8429 = 0.0, $843 = 0, $8430 = 0, $8431 = 0.0, $8432 = 0, $8433 = 0.0, $8434 = 0, $8435 = 0.0, $8436 = 0, $8437 = 0.0, $8438 = 0.0, $8439 = 0.0;
 var $844 = 0.0, $8440 = 0.0, $8441 = 0, $8442 = 0.0, $8443 = 0.0, $8444 = 0, $8445 = 0, $8446 = 0, $8447 = 0, $8448 = 0, $8449 = 0.0, $845 = 0.0, $8450 = 0.0, $8451 = 0.0, $8452 = 0.0, $8453 = 0, $8454 = 0, $8455 = 0.0, $8456 = 0, $8457 = 0.0;
 var $8458 = 0.0, $8459 = 0, $846 = 0.0, $8460 = 0.0, $8461 = 0.0, $8462 = 0, $8463 = 0, $8464 = 0, $8465 = 0, $8466 = 0, $8467 = 0, $8468 = 0, $8469 = 0.0, $847 = 0.0, $8470 = 0, $8471 = 0.0, $8472 = 0, $8473 = 0.0, $8474 = 0.0, $8475 = 0.0;
 var $8476 = 0.0, $8477 = 0, $8478 = 0, $8479 = 0, $848 = 0.0, $8480 = 0, $8481 = 0, $8482 = 0, $8483 = 0.0, $8484 = 0, $8485 = 0.0, $8486 = 0.0, $8487 = 0.0, $8488 = 0, $8489 = 0.0, $849 = 0.0, $8490 = 0, $8491 = 0.0, $8492 = 0.0, $8493 = 0.0;
 var $8494 = 0, $8495 = 0, $8496 = 0, $8497 = 0.0, $8498 = 0.0, $8499 = 0.0, $85 = 0, $850 = 0.0, $8500 = 0.0, $8501 = 0.0, $8502 = 0.0, $8503 = 0, $8504 = 0, $8505 = 0.0, $8506 = 0.0, $8507 = 0.0, $8508 = 0.0, $8509 = 0.0, $851 = 0.0, $8510 = 0.0;
 var $8511 = 0.0, $8512 = 0.0, $8513 = 0.0, $8514 = 0.0, $8515 = 0.0, $8516 = 0.0, $8517 = 0.0, $8518 = 0.0, $8519 = 0.0, $852 = 0.0, $8520 = 0.0, $8521 = 0, $8522 = 0, $8523 = 0.0, $8524 = 0.0, $8525 = 0.0, $8526 = 0.0, $8527 = 0.0, $8528 = 0, $8529 = 0.0;
 var $853 = 0, $8530 = 0.0, $8531 = 0.0, $8532 = 0, $8533 = 0, $8534 = 0, $8535 = 0, $8536 = 0, $8537 = 0, $8538 = 0, $8539 = 0, $854 = 0.0, $8540 = 0, $8541 = 0, $8542 = 0, $8543 = 0, $8544 = 0, $8545 = 0, $8546 = 0, $8547 = 0;
 var $8548 = 0, $8549 = 0, $855 = 0, $8550 = 0.0, $8551 = 0, $8552 = 0.0, $8553 = 0.0, $8554 = 0.0, $8555 = 0, $8556 = 0.0, $8557 = 0, $8558 = 0.0, $8559 = 0.0, $856 = 0.0, $8560 = 0.0, $8561 = 0, $8562 = 0, $8563 = 0, $8564 = 0.0, $8565 = 0;
 var $8566 = 0.0, $8567 = 0, $8568 = 0.0, $8569 = 0.0, $857 = 0.0, $8570 = 0.0, $8571 = 0.0, $8572 = 0.0, $8573 = 0.0, $8574 = 0.0, $8575 = 0.0, $8576 = 0.0, $8577 = 0.0, $8578 = 0.0, $8579 = 0.0, $858 = 0, $8580 = 0.0, $8581 = 0.0, $8582 = 0.0, $8583 = 0.0;
 var $8584 = 0.0, $8585 = 0.0, $8586 = 0.0, $8587 = 0.0, $8588 = 0.0, $8589 = 0.0, $859 = 0.0, $8590 = 0.0, $8591 = 0.0, $8592 = 0.0, $8593 = 0.0, $8594 = 0.0, $8595 = 0.0, $8596 = 0.0, $8597 = 0.0, $8598 = 0.0, $8599 = 0.0, $86 = 0, $860 = 0, $8600 = 0.0;
 var $8601 = 0.0, $8602 = 0.0, $8603 = 0.0, $8604 = 0.0, $8605 = 0.0, $8606 = 0.0, $8607 = 0.0, $8608 = 0.0, $8609 = 0.0, $861 = 0.0, $8610 = 0.0, $8611 = 0.0, $8612 = 0.0, $8613 = 0.0, $8614 = 0.0, $8615 = 0.0, $8616 = 0.0, $8617 = 0.0, $8618 = 0.0, $8619 = 0.0;
 var $862 = 0, $8620 = 0.0, $8621 = 0.0, $8622 = 0.0, $8623 = 0.0, $8624 = 0.0, $8625 = 0.0, $8626 = 0.0, $8627 = 0.0, $8628 = 0.0, $8629 = 0.0, $863 = 0, $8630 = 0.0, $8631 = 0, $8632 = 0.0, $8633 = 0.0, $8634 = 0.0, $8635 = 0.0, $8636 = 0.0, $8637 = 0.0;
 var $8638 = 0.0, $8639 = 0.0, $864 = 0, $8640 = 0.0, $8641 = 0.0, $8642 = 0, $8643 = 0.0, $8644 = 0, $8645 = 0.0, $8646 = 0, $8647 = 0, $8648 = 0.0, $8649 = 0.0, $865 = 0, $8650 = 0.0, $8651 = 0.0, $8652 = 0.0, $8653 = 0.0, $8654 = 0.0, $8655 = 0.0;
 var $8656 = 0.0, $8657 = 0.0, $8658 = 0.0, $8659 = 0.0, $866 = 0, $8660 = 0.0, $8661 = 0, $8662 = 0, $8663 = 0.0, $8664 = 0.0, $8665 = 0.0, $8666 = 0.0, $8667 = 0.0, $8668 = 0.0, $8669 = 0.0, $867 = 0, $8670 = 0.0, $8671 = 0.0, $8672 = 0.0, $8673 = 0;
 var $8674 = 0, $8675 = 0.0, $8676 = 0.0, $8677 = 0.0, $8678 = 0.0, $8679 = 0.0, $868 = 0, $8680 = 0, $8681 = 0.0, $8682 = 0.0, $8683 = 0.0, $8684 = 0, $8685 = 0, $8686 = 0, $8687 = 0, $8688 = 0, $8689 = 0, $869 = 0, $8690 = 0, $8691 = 0;
 var $8692 = 0, $8693 = 0, $8694 = 0, $8695 = 0, $8696 = 0, $8697 = 0, $8698 = 0, $8699 = 0, $87 = 0, $870 = 0, $8700 = 0, $8701 = 0, $8702 = 0.0, $8703 = 0, $8704 = 0.0, $8705 = 0.0, $8706 = 0.0, $8707 = 0, $8708 = 0.0, $8709 = 0;
 var $871 = 0, $8710 = 0.0, $8711 = 0.0, $8712 = 0.0, $8713 = 0, $8714 = 0, $8715 = 0, $8716 = 0.0, $8717 = 0, $8718 = 0.0, $8719 = 0, $872 = 0.0, $8720 = 0.0, $8721 = 0.0, $8722 = 0.0, $8723 = 0.0, $8724 = 0.0, $8725 = 0.0, $8726 = 0.0, $8727 = 0.0;
 var $8728 = 0.0, $8729 = 0.0, $873 = 0, $8730 = 0.0, $8731 = 0.0, $8732 = 0.0, $8733 = 0.0, $8734 = 0.0, $8735 = 0.0, $8736 = 0.0, $8737 = 0.0, $8738 = 0.0, $8739 = 0.0, $874 = 0.0, $8740 = 0.0, $8741 = 0.0, $8742 = 0.0, $8743 = 0.0, $8744 = 0.0, $8745 = 0.0;
 var $8746 = 0.0, $8747 = 0.0, $8748 = 0.0, $8749 = 0.0, $875 = 0.0, $8750 = 0.0, $8751 = 0.0, $8752 = 0.0, $8753 = 0.0, $8754 = 0.0, $8755 = 0.0, $8756 = 0.0, $8757 = 0.0, $8758 = 0.0, $8759 = 0.0, $876 = 0.0, $8760 = 0.0, $8761 = 0.0, $8762 = 0.0, $8763 = 0.0;
 var $8764 = 0.0, $8765 = 0.0, $8766 = 0.0, $8767 = 0.0, $8768 = 0.0, $8769 = 0.0, $877 = 0, $8770 = 0.0, $8771 = 0.0, $8772 = 0.0, $8773 = 0.0, $8774 = 0.0, $8775 = 0.0, $8776 = 0.0, $8777 = 0.0, $8778 = 0.0, $8779 = 0.0, $878 = 0.0, $8780 = 0.0, $8781 = 0;
 var $8782 = 0.0, $8783 = 0.0, $8784 = 0.0, $8785 = 0.0, $8786 = 0.0, $8787 = 0.0, $8788 = 0.0, $8789 = 0.0, $879 = 0, $8790 = 0.0, $8791 = 0, $8792 = 0.0, $8793 = 0, $8794 = 0.0, $8795 = 0, $8796 = 0, $8797 = 0.0, $8798 = 0.0, $8799 = 0.0, $88 = 0;
 var $880 = 0.0, $8800 = 0.0, $8801 = 0.0, $8802 = 0.0, $8803 = 0.0, $8804 = 0.0, $8805 = 0.0, $8806 = 0.0, $8807 = 0.0, $8808 = 0.0, $8809 = 0.0, $881 = 0.0, $8810 = 0.0, $8811 = 0.0, $8812 = 0.0, $8813 = 0.0, $8814 = 0.0, $8815 = 0.0, $8816 = 0.0, $8817 = 0.0;
 var $8818 = 0.0, $8819 = 0, $882 = 0.0, $8820 = 0.0, $8821 = 0.0, $8822 = 0.0, $8823 = 0, $8824 = 0.0, $8825 = 0, $8826 = 0.0, $8827 = 0.0, $8828 = 0.0, $8829 = 0.0, $883 = 0, $8830 = 0.0, $8831 = 0.0, $8832 = 0.0, $8833 = 0.0, $8834 = 0.0, $8835 = 0.0;
 var $8836 = 0.0, $8837 = 0.0, $8838 = 0.0, $8839 = 0.0, $884 = 0, $8840 = 0.0, $8841 = 0.0, $8842 = 0.0, $8843 = 0.0, $8844 = 0.0, $8845 = 0.0, $8846 = 0.0, $8847 = 0.0, $8848 = 0.0, $8849 = 0.0, $885 = 0, $8850 = 0.0, $8851 = 0.0, $8852 = 0.0, $8853 = 0.0;
 var $8854 = 0.0, $8855 = 0.0, $8856 = 0.0, $8857 = 0.0, $8858 = 0.0, $8859 = 0.0, $886 = 0.0, $8860 = 0.0, $8861 = 0.0, $8862 = 0.0, $8863 = 0.0, $8864 = 0.0, $8865 = 0.0, $8866 = 0.0, $8867 = 0.0, $8868 = 0.0, $8869 = 0.0, $887 = 0, $8870 = 0.0, $8871 = 0.0;
 var $8872 = 0.0, $8873 = 0.0, $8874 = 0.0, $8875 = 0.0, $8876 = 0.0, $8877 = 0.0, $8878 = 0.0, $8879 = 0.0, $888 = 0.0, $8880 = 0.0, $8881 = 0.0, $8882 = 0.0, $8883 = 0, $8884 = 0.0, $8885 = 0.0, $8886 = 0.0, $8887 = 0.0, $8888 = 0.0, $8889 = 0.0, $889 = 0;
 var $8890 = 0.0, $8891 = 0.0, $8892 = 0.0, $8893 = 0.0, $8894 = 0.0, $8895 = 0.0, $8896 = 0.0, $8897 = 0.0, $8898 = 0.0, $8899 = 0.0, $89 = 0, $890 = 0.0, $8900 = 0.0, $8901 = 0.0, $8902 = 0.0, $8903 = 0.0, $8904 = 0.0, $8905 = 0.0, $8906 = 0.0, $8907 = 0.0;
 var $8908 = 0.0, $8909 = 0.0, $891 = 0.0, $8910 = 0.0, $8911 = 0.0, $8912 = 0.0, $8913 = 0.0, $8914 = 0.0, $8915 = 0.0, $8916 = 0.0, $8917 = 0.0, $8918 = 0.0, $8919 = 0.0, $892 = 0.0, $8920 = 0.0, $8921 = 0.0, $8922 = 0.0, $8923 = 0.0, $8924 = 0.0, $8925 = 0.0;
 var $8926 = 0.0, $8927 = 0.0, $8928 = 0.0, $8929 = 0.0, $893 = 0.0, $8930 = 0.0, $8931 = 0.0, $8932 = 0.0, $8933 = 0.0, $8934 = 0.0, $8935 = 0.0, $8936 = 0.0, $8937 = 0.0, $8938 = 0.0, $8939 = 0.0, $894 = 0.0, $8940 = 0.0, $8941 = 0, $8942 = 0.0, $8943 = 0.0;
 var $8944 = 0.0, $8945 = 0.0, $8946 = 0.0, $8947 = 0.0, $8948 = 0.0, $8949 = 0.0, $895 = 0.0, $8950 = 0.0, $8951 = 0.0, $8952 = 0.0, $8953 = 0.0, $8954 = 0.0, $8955 = 0.0, $8956 = 0.0, $8957 = 0.0, $8958 = 0.0, $8959 = 0.0, $896 = 0.0, $8960 = 0.0, $8961 = 0.0;
 var $8962 = 0.0, $8963 = 0.0, $8964 = 0.0, $8965 = 0.0, $8966 = 0.0, $8967 = 0.0, $8968 = 0.0, $8969 = 0.0, $897 = 0.0, $8970 = 0.0, $8971 = 0.0, $8972 = 0.0, $8973 = 0.0, $8974 = 0.0, $8975 = 0.0, $8976 = 0.0, $8977 = 0.0, $8978 = 0.0, $8979 = 0.0, $898 = 0.0;
 var $8980 = 0.0, $8981 = 0.0, $8982 = 0.0, $8983 = 0.0, $8984 = 0.0, $8985 = 0.0, $8986 = 0.0, $8987 = 0.0, $8988 = 0.0, $8989 = 0.0, $899 = 0.0, $8990 = 0.0, $8991 = 0.0, $8992 = 0.0, $8993 = 0.0, $8994 = 0.0, $8995 = 0.0, $8996 = 0.0, $8997 = 0.0, $8998 = 0;
 var $8999 = 0.0, $9 = 0, $90 = 0, $900 = 0.0, $9000 = 0.0, $9001 = 0.0, $9002 = 0.0, $9003 = 0.0, $9004 = 0.0, $9005 = 0.0, $9006 = 0.0, $9007 = 0, $9008 = 0.0, $9009 = 0.0, $901 = 0.0, $9010 = 0.0, $9011 = 0.0, $9012 = 0.0, $9013 = 0.0, $9014 = 0.0;
 var $9015 = 0.0, $9016 = 0, $9017 = 0.0, $9018 = 0, $9019 = 0, $902 = 0.0, $9020 = 0.0, $9021 = 0.0, $9022 = 0.0, $9023 = 0.0, $9024 = 0.0, $9025 = 0.0, $9026 = 0.0, $9027 = 0.0, $9028 = 0.0, $9029 = 0.0, $903 = 0.0, $9030 = 0, $9031 = 0, $9032 = 0.0;
 var $9033 = 0.0, $9034 = 0.0, $9035 = 0.0, $9036 = 0.0, $9037 = 0.0, $9038 = 0.0, $9039 = 0.0, $904 = 0.0, $9040 = 0.0, $9041 = 0, $9042 = 0.0, $9043 = 0.0, $9044 = 0.0, $9045 = 0.0, $9046 = 0.0, $9047 = 0.0, $9048 = 0.0, $9049 = 0.0, $905 = 0.0, $9050 = 0.0;
 var $9051 = 0.0, $9052 = 0.0, $9053 = 0.0, $9054 = 0.0, $9055 = 0.0, $9056 = 0, $9057 = 0.0, $9058 = 0.0, $9059 = 0.0, $906 = 0.0, $9060 = 0.0, $9061 = 0.0, $9062 = 0, $9063 = 0.0, $9064 = 0, $9065 = 0.0, $9066 = 0.0, $9067 = 0.0, $9068 = 0.0, $9069 = 0.0;
 var $907 = 0.0, $9070 = 0.0, $9071 = 0.0, $9072 = 0.0, $9073 = 0.0, $9074 = 0.0, $9075 = 0.0, $9076 = 0, $9077 = 0, $9078 = 0.0, $9079 = 0.0, $908 = 0.0, $9080 = 0.0, $9081 = 0.0, $9082 = 0.0, $9083 = 0, $9084 = 0.0, $9085 = 0.0, $9086 = 0.0, $9087 = 0;
 var $9088 = 0, $9089 = 0, $909 = 0.0, $9090 = 0, $9091 = 0, $9092 = 0, $9093 = 0, $9094 = 0, $9095 = 0, $9096 = 0, $9097 = 0, $9098 = 0, $9099 = 0, $91 = 0, $910 = 0.0, $9100 = 0, $9101 = 0, $9102 = 0, $9103 = 0, $9104 = 0;
 var $9105 = 0.0, $9106 = 0, $9107 = 0.0, $9108 = 0.0, $9109 = 0.0, $911 = 0.0, $9110 = 0, $9111 = 0.0, $9112 = 0, $9113 = 0.0, $9114 = 0.0, $9115 = 0.0, $9116 = 0, $9117 = 0, $9118 = 0, $9119 = 0.0, $912 = 0.0, $9120 = 0, $9121 = 0.0, $9122 = 0;
 var $9123 = 0.0, $9124 = 0.0, $9125 = 0.0, $9126 = 0.0, $9127 = 0.0, $9128 = 0.0, $9129 = 0.0, $913 = 0.0, $9130 = 0.0, $9131 = 0.0, $9132 = 0.0, $9133 = 0.0, $9134 = 0.0, $9135 = 0.0, $9136 = 0.0, $9137 = 0.0, $9138 = 0.0, $9139 = 0.0, $914 = 0.0, $9140 = 0.0;
 var $9141 = 0.0, $9142 = 0.0, $9143 = 0.0, $9144 = 0.0, $9145 = 0.0, $9146 = 0.0, $9147 = 0.0, $9148 = 0.0, $9149 = 0.0, $915 = 0.0, $9150 = 0.0, $9151 = 0.0, $9152 = 0.0, $9153 = 0.0, $9154 = 0.0, $9155 = 0.0, $9156 = 0.0, $9157 = 0.0, $9158 = 0.0, $9159 = 0.0;
 var $916 = 0.0, $9160 = 0.0, $9161 = 0.0, $9162 = 0.0, $9163 = 0.0, $9164 = 0.0, $9165 = 0.0, $9166 = 0.0, $9167 = 0.0, $9168 = 0.0, $9169 = 0.0, $917 = 0.0, $9170 = 0.0, $9171 = 0.0, $9172 = 0.0, $9173 = 0.0, $9174 = 0.0, $9175 = 0.0, $9176 = 0.0, $9177 = 0.0;
 var $9178 = 0.0, $9179 = 0.0, $918 = 0.0, $9180 = 0.0, $9181 = 0.0, $9182 = 0.0, $9183 = 0.0, $9184 = 0.0, $9185 = 0.0, $9186 = 0.0, $9187 = 0.0, $9188 = 0.0, $9189 = 0.0, $919 = 0.0, $9190 = 0.0, $9191 = 0.0, $9192 = 0.0, $9193 = 0.0, $9194 = 0.0, $9195 = 0.0;
 var $9196 = 0.0, $9197 = 0.0, $9198 = 0.0, $9199 = 0.0, $92 = 0, $920 = 0.0, $9200 = 0.0, $9201 = 0.0, $9202 = 0.0, $9203 = 0.0, $9204 = 0.0, $9205 = 0.0, $9206 = 0, $9207 = 0.0, $9208 = 0.0, $9209 = 0.0, $921 = 0.0, $9210 = 0.0, $9211 = 0.0, $9212 = 0.0;
 var $9213 = 0.0, $9214 = 0.0, $9215 = 0.0, $9216 = 0, $9217 = 0.0, $9218 = 0, $9219 = 0.0, $922 = 0.0, $9220 = 0, $9221 = 0.0, $9222 = 0, $9223 = 0, $9224 = 0.0, $9225 = 0.0, $9226 = 0.0, $9227 = 0.0, $9228 = 0.0, $9229 = 0.0, $923 = 0, $9230 = 0.0;
 var $9231 = 0.0, $9232 = 0, $9233 = 0.0, $9234 = 0, $9235 = 0, $9236 = 0.0, $9237 = 0.0, $9238 = 0.0, $9239 = 0.0, $924 = 0.0, $9240 = 0.0, $9241 = 0.0, $9242 = 0.0, $9243 = 0.0, $9244 = 0.0, $9245 = 0.0, $9246 = 0, $9247 = 0, $9248 = 0.0, $9249 = 0.0;
 var $925 = 0.0, $9250 = 0.0, $9251 = 0.0, $9252 = 0.0, $9253 = 0.0, $9254 = 0.0, $9255 = 0.0, $9256 = 0.0, $9257 = 0.0, $9258 = 0.0, $9259 = 0.0, $926 = 0.0, $9260 = 0.0, $9261 = 0.0, $9262 = 0.0, $9263 = 0.0, $9264 = 0.0, $9265 = 0, $9266 = 0.0, $9267 = 0.0;
 var $9268 = 0.0, $9269 = 0.0, $927 = 0.0, $9270 = 0.0, $9271 = 0.0, $9272 = 0.0, $9273 = 0.0, $9274 = 0.0, $9275 = 0.0, $9276 = 0.0, $9277 = 0.0, $9278 = 0.0, $9279 = 0.0, $928 = 0.0, $9280 = 0, $9281 = 0.0, $9282 = 0.0, $9283 = 0.0, $9284 = 0.0, $9285 = 0.0;
 var $9286 = 0, $9287 = 0.0, $9288 = 0, $9289 = 0.0, $929 = 0.0, $9290 = 0.0, $9291 = 0.0, $9292 = 0.0, $9293 = 0.0, $9294 = 0.0, $9295 = 0.0, $9296 = 0.0, $9297 = 0.0, $9298 = 0.0, $9299 = 0.0, $93 = 0, $930 = 0.0, $9300 = 0.0, $9301 = 0.0, $9302 = 0.0;
 var $9303 = 0.0, $9304 = 0.0, $9305 = 0.0, $9306 = 0.0, $9307 = 0.0, $9308 = 0.0, $9309 = 0.0, $931 = 0.0, $9310 = 0, $9311 = 0, $9312 = 0.0, $9313 = 0.0, $9314 = 0.0, $9315 = 0.0, $9316 = 0.0, $9317 = 0.0, $9318 = 0.0, $9319 = 0.0, $932 = 0.0, $9320 = 0;
 var $9321 = 0.0, $9322 = 0.0, $9323 = 0.0, $9324 = 0.0, $9325 = 0.0, $9326 = 0.0, $9327 = 0.0, $9328 = 0.0, $9329 = 0.0, $933 = 0.0, $9330 = 0.0, $9331 = 0.0, $9332 = 0.0, $9333 = 0.0, $9334 = 0, $9335 = 0.0, $9336 = 0.0, $9337 = 0.0, $9338 = 0.0, $9339 = 0.0;
 var $934 = 0.0, $9340 = 0, $9341 = 0.0, $9342 = 0.0, $9343 = 0.0, $9344 = 0.0, $9345 = 0.0, $9346 = 0.0, $9347 = 0.0, $9348 = 0.0, $9349 = 0.0, $935 = 0.0, $9350 = 0.0, $9351 = 0.0, $9352 = 0.0, $9353 = 0.0, $9354 = 0.0, $9355 = 0.0, $9356 = 0, $9357 = 0.0;
 var $9358 = 0, $9359 = 0.0, $936 = 0.0, $9360 = 0.0, $9361 = 0.0, $9362 = 0.0, $9363 = 0.0, $9364 = 0.0, $9365 = 0.0, $9366 = 0.0, $9367 = 0.0, $9368 = 0.0, $9369 = 0.0, $937 = 0.0, $9370 = 0.0, $9371 = 0.0, $9372 = 0.0, $9373 = 0.0, $9374 = 0.0, $9375 = 0.0;
 var $9376 = 0.0, $9377 = 0.0, $9378 = 0.0, $9379 = 0.0, $938 = 0, $9380 = 0.0, $9381 = 0.0, $9382 = 0.0, $9383 = 0.0, $9384 = 0.0, $9385 = 0.0, $9386 = 0.0, $9387 = 0.0, $9388 = 0.0, $9389 = 0.0, $939 = 0.0, $9390 = 0.0, $9391 = 0.0, $9392 = 0.0, $9393 = 0.0;
 var $9394 = 0.0, $9395 = 0.0, $9396 = 0.0, $9397 = 0.0, $9398 = 0.0, $9399 = 0.0, $94 = 0, $940 = 0.0, $9400 = 0.0, $9401 = 0.0, $9402 = 0.0, $9403 = 0.0, $9404 = 0.0, $9405 = 0.0, $9406 = 0.0, $9407 = 0.0, $9408 = 0.0, $9409 = 0.0, $941 = 0.0, $9410 = 0.0;
 var $9411 = 0.0, $9412 = 0.0, $9413 = 0.0, $9414 = 0.0, $9415 = 0.0, $9416 = 0.0, $9417 = 0.0, $9418 = 0.0, $9419 = 0.0, $942 = 0.0, $9420 = 0.0, $9421 = 0.0, $9422 = 0.0, $9423 = 0.0, $9424 = 0.0, $9425 = 0.0, $9426 = 0.0, $9427 = 0.0, $9428 = 0.0, $9429 = 0.0;
 var $943 = 0.0, $9430 = 0.0, $9431 = 0.0, $9432 = 0.0, $9433 = 0.0, $9434 = 0.0, $9435 = 0.0, $9436 = 0.0, $9437 = 0.0, $9438 = 0.0, $9439 = 0.0, $944 = 0.0, $9440 = 0.0, $9441 = 0.0, $9442 = 0.0, $9443 = 0.0, $9444 = 0.0, $9445 = 0.0, $9446 = 0.0, $9447 = 0.0;
 var $9448 = 0.0, $9449 = 0.0, $945 = 0.0, $9450 = 0.0, $9451 = 0.0, $9452 = 0.0, $9453 = 0.0, $9454 = 0.0, $9455 = 0.0, $9456 = 0.0, $9457 = 0.0, $9458 = 0.0, $9459 = 0.0, $946 = 0, $9460 = 0.0, $9461 = 0.0, $9462 = 0.0, $9463 = 0.0, $9464 = 0, $9465 = 0.0;
 var $9466 = 0.0, $9467 = 0.0, $9468 = 0.0, $9469 = 0.0, $947 = 0.0, $9470 = 0.0, $9471 = 0.0, $9472 = 0.0, $9473 = 0, $9474 = 0.0, $9475 = 0, $9476 = 0.0, $9477 = 0, $9478 = 0.0, $9479 = 0, $948 = 0.0, $9480 = 0.0, $9481 = 0, $9482 = 0.0, $9483 = 0.0;
 var $9484 = 0.0, $9485 = 0.0, $9486 = 0.0, $9487 = 0.0, $9488 = 0.0, $9489 = 0.0, $949 = 0.0, $9490 = 0.0, $9491 = 0.0, $9492 = 0.0, $9493 = 0.0, $9494 = 0.0, $9495 = 0.0, $9496 = 0.0, $9497 = 0.0, $9498 = 0.0, $9499 = 0.0, $95 = 0, $950 = 0.0, $9500 = 0.0;
 var $9501 = 0, $9502 = 0.0, $9503 = 0.0, $9504 = 0.0, $9505 = 0.0, $9506 = 0.0, $9507 = 0, $9508 = 0.0, $9509 = 0, $951 = 0, $9510 = 0.0, $9511 = 0.0, $9512 = 0.0, $9513 = 0.0, $9514 = 0.0, $9515 = 0.0, $9516 = 0.0, $9517 = 0.0, $9518 = 0.0, $9519 = 0.0;
 var $952 = 0.0, $9520 = 0.0, $9521 = 0.0, $9522 = 0.0, $9523 = 0.0, $9524 = 0.0, $9525 = 0.0, $9526 = 0.0, $9527 = 0.0, $9528 = 0.0, $9529 = 0.0, $953 = 0.0, $9530 = 0.0, $9531 = 0.0, $9532 = 0.0, $9533 = 0.0, $9534 = 0.0, $9535 = 0.0, $9536 = 0.0, $9537 = 0.0;
 var $9538 = 0.0, $9539 = 0.0, $954 = 0.0, $9540 = 0.0, $9541 = 0.0, $9542 = 0.0, $9543 = 0.0, $9544 = 0.0, $9545 = 0.0, $9546 = 0.0, $9547 = 0.0, $9548 = 0.0, $9549 = 0.0, $955 = 0.0, $9550 = 0.0, $9551 = 0.0, $9552 = 0.0, $9553 = 0.0, $9554 = 0.0, $9555 = 0.0;
 var $9556 = 0.0, $9557 = 0.0, $9558 = 0.0, $9559 = 0.0, $956 = 0.0, $9560 = 0.0, $9561 = 0.0, $9562 = 0.0, $9563 = 0.0, $9564 = 0, $9565 = 0.0, $9566 = 0.0, $9567 = 0.0, $9568 = 0.0, $9569 = 0, $957 = 0.0, $9570 = 0.0, $9571 = 0, $9572 = 0.0, $9573 = 0;
 var $9574 = 0.0, $9575 = 0, $9576 = 0.0, $9577 = 0, $9578 = 0.0, $9579 = 0, $958 = 0.0, $9580 = 0, $9581 = 0, $9582 = 0, $9583 = 0, $9584 = 0, $9585 = 0.0, $9586 = 0.0, $9587 = 0.0, $9588 = 0.0, $9589 = 0, $959 = 0.0, $9590 = 0, $9591 = 0.0;
 var $9592 = 0, $9593 = 0.0, $9594 = 0.0, $9595 = 0, $9596 = 0.0, $9597 = 0.0, $9598 = 0, $9599 = 0, $96 = 0, $960 = 0.0, $9600 = 0, $9601 = 0, $9602 = 0, $9603 = 0, $9604 = 0, $9605 = 0.0, $9606 = 0, $9607 = 0.0, $9608 = 0, $9609 = 0.0;
 var $961 = 0.0, $9610 = 0.0, $9611 = 0.0, $9612 = 0.0, $9613 = 0, $9614 = 0, $9615 = 0, $9616 = 0, $9617 = 0, $9618 = 0, $9619 = 0.0, $962 = 0.0, $9620 = 0, $9621 = 0.0, $9622 = 0.0, $9623 = 0.0, $9624 = 0, $9625 = 0.0, $9626 = 0, $9627 = 0.0;
 var $9628 = 0.0, $9629 = 0.0, $963 = 0.0, $9630 = 0, $9631 = 0, $9632 = 0, $9633 = 0.0, $9634 = 0.0, $9635 = 0.0, $9636 = 0.0, $9637 = 0.0, $9638 = 0.0, $9639 = 0.0, $964 = 0.0, $9640 = 0.0, $9641 = 0.0, $9642 = 0.0, $9643 = 0.0, $9644 = 0.0, $9645 = 0.0;
 var $9646 = 0.0, $9647 = 0.0, $9648 = 0.0, $9649 = 0.0, $965 = 0.0, $9650 = 0.0, $9651 = 0.0, $9652 = 0.0, $9653 = 0, $9654 = 0, $9655 = 0.0, $9656 = 0.0, $9657 = 0.0, $9658 = 0.0, $9659 = 0.0, $966 = 0.0, $9660 = 0.0, $9661 = 0.0, $9662 = 0.0, $9663 = 0.0;
 var $9664 = 0.0, $9665 = 0, $9666 = 0.0, $9667 = 0.0, $9668 = 0.0, $9669 = 0.0, $967 = 0.0, $9670 = 0.0, $9671 = 0.0, $9672 = 0.0, $9673 = 0.0, $9674 = 0.0, $9675 = 0.0, $9676 = 0.0, $9677 = 0.0, $9678 = 0.0, $9679 = 0.0, $968 = 0.0, $9680 = 0.0, $9681 = 0.0;
 var $9682 = 0.0, $9683 = 0, $9684 = 0.0, $9685 = 0.0, $9686 = 0.0, $9687 = 0.0, $9688 = 0.0, $9689 = 0, $969 = 0.0, $9690 = 0.0, $9691 = 0.0, $9692 = 0.0, $9693 = 0.0, $9694 = 0.0, $9695 = 0.0, $9696 = 0.0, $9697 = 0.0, $9698 = 0.0, $9699 = 0.0, $97 = 0;
 var $970 = 0.0, $9700 = 0.0, $9701 = 0.0, $9702 = 0.0, $9703 = 0.0, $9704 = 0.0, $9705 = 0.0, $9706 = 0.0, $9707 = 0.0, $9708 = 0.0, $9709 = 0.0, $971 = 0.0, $9710 = 0.0, $9711 = 0.0, $9712 = 0.0, $9713 = 0.0, $9714 = 0.0, $9715 = 0.0, $9716 = 0.0, $9717 = 0.0;
 var $9718 = 0, $9719 = 0.0, $972 = 0.0, $9720 = 0, $9721 = 0.0, $9722 = 0.0, $9723 = 0.0, $9724 = 0.0, $9725 = 0.0, $9726 = 0.0, $9727 = 0.0, $9728 = 0.0, $9729 = 0.0, $973 = 0.0, $9730 = 0.0, $9731 = 0.0, $9732 = 0.0, $9733 = 0.0, $9734 = 0.0, $9735 = 0.0;
 var $9736 = 0.0, $9737 = 0.0, $9738 = 0.0, $9739 = 0.0, $974 = 0.0, $9740 = 0.0, $9741 = 0.0, $9742 = 0.0, $9743 = 0.0, $9744 = 0.0, $9745 = 0.0, $9746 = 0.0, $9747 = 0.0, $9748 = 0.0, $9749 = 0.0, $975 = 0.0, $9750 = 0.0, $9751 = 0.0, $9752 = 0.0, $9753 = 0.0;
 var $9754 = 0.0, $9755 = 0.0, $9756 = 0.0, $9757 = 0.0, $9758 = 0.0, $9759 = 0.0, $976 = 0.0, $9760 = 0.0, $9761 = 0.0, $9762 = 0.0, $9763 = 0.0, $9764 = 0.0, $9765 = 0.0, $9766 = 0.0, $9767 = 0.0, $9768 = 0.0, $9769 = 0.0, $977 = 0.0, $9770 = 0.0, $9771 = 0.0;
 var $9772 = 0.0, $9773 = 0, $9774 = 0.0, $9775 = 0.0, $9776 = 0.0, $9777 = 0.0, $9778 = 0.0, $9779 = 0.0, $978 = 0.0, $9780 = 0.0, $9781 = 0.0, $9782 = 0.0, $9783 = 0.0, $9784 = 0, $9785 = 0.0, $9786 = 0, $9787 = 0.0, $9788 = 0, $9789 = 0.0, $979 = 0.0;
 var $9790 = 0, $9791 = 0.0, $9792 = 0.0, $9793 = 0.0, $9794 = 0.0, $9795 = 0.0, $9796 = 0.0, $9797 = 0.0, $9798 = 0.0, $9799 = 0.0, $98 = 0, $980 = 0.0, $9800 = 0.0, $9801 = 0.0, $9802 = 0.0, $9803 = 0.0, $9804 = 0.0, $9805 = 0.0, $9806 = 0.0, $9807 = 0.0;
 var $9808 = 0.0, $9809 = 0.0, $981 = 0.0, $9810 = 0.0, $9811 = 0.0, $9812 = 0, $9813 = 0.0, $9814 = 0.0, $9815 = 0.0, $9816 = 0.0, $9817 = 0.0, $9818 = 0, $9819 = 0.0, $982 = 0.0, $9820 = 0, $9821 = 0.0, $9822 = 0, $9823 = 0.0, $9824 = 0.0, $9825 = 0.0;
 var $9826 = 0.0, $9827 = 0.0, $9828 = 0.0, $9829 = 0.0, $983 = 0.0, $9830 = 0.0, $9831 = 0.0, $9832 = 0.0, $9833 = 0.0, $9834 = 0.0, $9835 = 0.0, $9836 = 0.0, $9837 = 0.0, $9838 = 0.0, $9839 = 0.0, $984 = 0.0, $9840 = 0.0, $9841 = 0.0, $9842 = 0.0, $9843 = 0.0;
 var $9844 = 0.0, $9845 = 0.0, $9846 = 0.0, $9847 = 0.0, $9848 = 0.0, $9849 = 0.0, $985 = 0.0, $9850 = 0.0, $9851 = 0.0, $9852 = 0.0, $9853 = 0.0, $9854 = 0.0, $9855 = 0.0, $9856 = 0.0, $9857 = 0.0, $9858 = 0.0, $9859 = 0.0, $986 = 0.0, $9860 = 0.0, $9861 = 0.0;
 var $9862 = 0.0, $9863 = 0.0, $9864 = 0.0, $9865 = 0.0, $9866 = 0.0, $9867 = 0.0, $9868 = 0.0, $9869 = 0.0, $987 = 0.0, $9870 = 0.0, $9871 = 0.0, $9872 = 0.0, $9873 = 0.0, $9874 = 0.0, $9875 = 0.0, $9876 = 0.0, $9877 = 0.0, $9878 = 0, $9879 = 0.0, $988 = 0.0;
 var $9880 = 0.0, $9881 = 0.0, $9882 = 0.0, $9883 = 0, $9884 = 0.0, $9885 = 0, $9886 = 0.0, $9887 = 0, $9888 = 0.0, $9889 = 0, $989 = 0.0, $9890 = 0.0, $9891 = 0, $9892 = 0.0, $9893 = 0, $9894 = 0, $9895 = 0, $9896 = 0, $9897 = 0, $9898 = 0;
 var $9899 = 0.0, $99 = 0, $990 = 0.0, $9900 = 0.0, $9901 = 0.0, $9902 = 0.0, $9903 = 0, $9904 = 0, $9905 = 0.0, $9906 = 0, $9907 = 0.0, $9908 = 0.0, $9909 = 0, $991 = 0.0, $9910 = 0.0, $9911 = 0.0, $9912 = 0, $9913 = 0, $9914 = 0, $9915 = 0;
 var $9916 = 0, $9917 = 0, $9918 = 0, $9919 = 0.0, $992 = 0.0, $9920 = 0, $9921 = 0.0, $9922 = 0, $9923 = 0.0, $9924 = 0.0, $9925 = 0.0, $9926 = 0.0, $9927 = 0, $9928 = 0, $9929 = 0, $993 = 0.0, $9930 = 0, $9931 = 0, $9932 = 0, $9933 = 0.0;
 var $9934 = 0, $9935 = 0.0, $9936 = 0.0, $9937 = 0.0, $9938 = 0, $9939 = 0.0, $994 = 0.0, $9940 = 0, $9941 = 0.0, $9942 = 0.0, $9943 = 0.0, $9944 = 0, $9945 = 0, $9946 = 0, $9947 = 0.0, $9948 = 0.0, $9949 = 0.0, $995 = 0.0, $9950 = 0.0, $9951 = 0.0;
 var $9952 = 0.0, $9953 = 0.0, $9954 = 0.0, $9955 = 0.0, $9956 = 0.0, $9957 = 0.0, $9958 = 0.0, $9959 = 0.0, $996 = 0.0, $9960 = 0.0, $9961 = 0.0, $9962 = 0.0, $9963 = 0.0, $9964 = 0.0, $9965 = 0.0, $9966 = 0.0, $9967 = 0.0, $9968 = 0, $9969 = 0, $997 = 0.0;
 var $9970 = 0.0, $9971 = 0.0, $9972 = 0.0, $9973 = 0.0, $9974 = 0.0, $9975 = 0.0, $9976 = 0.0, $9977 = 0.0, $9978 = 0.0, $9979 = 0.0, $998 = 0.0, $9980 = 0, $9981 = 0.0, $9982 = 0.0, $9983 = 0.0, $9984 = 0.0, $9985 = 0.0, $9986 = 0.0, $9987 = 0.0, $9988 = 0.0;
 var $9989 = 0.0, $999 = 0.0, $9990 = 0.0, $9991 = 0.0, $9992 = 0.0, $9993 = 0.0, $9994 = 0.0, $9995 = 0.0, $9996 = 0.0, $9997 = 0.0, $9998 = 0, $9999 = 0.0, $cj4array = 0, $cj4array255 = 0, $cj4array567 = 0, $cj4array595 = 0, $cj4array687 = 0, $cj4array715 = 0, $cj4array807 = 0, $cj4array835 = 0;
 var $cj4array893 = 0, $cj4array921 = 0, $cj5array = 0, $cj5array101 = 0, $cj5array125 = 0, $cj5array13 = 0, $cj5array153 = 0, $cj5array174 = 0, $cj5array182 = 0, $cj5array194 = 0, $cj5array22 = 0, $cj5array273 = 0, $cj5array284 = 0, $cj5array296 = 0, $cj5array30 = 0, $cj5array308 = 0, $cj5array315 = 0, $cj5array330 = 0, $cj5array341 = 0, $cj5array353 = 0;
 var $cj5array365 = 0, $cj5array37 = 0, $cj5array372 = 0, $cj5array388 = 0, $cj5array416 = 0, $cj5array444 = 0, $cj5array465 = 0, $cj5array473 = 0, $cj5array485 = 0, $cj5array49 = 0, $cj5array546 = 0, $cj5array57 = 0, $cj5array69 = 0, $cj5array81 = 0, $cj5array88 = 0, $cj7array = 0, $exitcond = 0, $exitcond1705 = 0, $exitcond1711 = 0, $exitcond1714 = 0;
 var $exitcond1724 = 0, $exitcond1727 = 0, $exitcond1737 = 0, $exitcond1740 = 0, $exitcond1741 = 0, $exitcond1742 = 0, $exitcond1743 = 0, $exitcond1744 = 0, $exitcond1745 = 0, $exitcond1748 = 0, $exitcond1751 = 0, $exitcond1752 = 0, $exitcond1753 = 0, $exitcond1754 = 0, $exitcond1755 = 0, $exitcond1757 = 0, $exitcond1758 = 0, $exitcond1759 = 0, $exitcond1760 = 0, $exitcond1761 = 0;
 var $exitcond1763 = 0, $exitcond1764 = 0, $exitcond1765 = 0, $exitcond1767 = 0, $exitcond1768 = 0, $exitcond1769 = 0, $exitcond1772 = 0, $exitcond1775 = 0, $exitcond1776 = 0, $exitcond1777 = 0, $exitcond1778 = 0, $exitcond1779 = 0, $exitcond1781 = 0, $exitcond1782 = 0, $exitcond1783 = 0, $exitcond1784 = 0, $exitcond1785 = 0, $exitcond1787 = 0, $exitcond1788 = 0, $exitcond1789 = 0;
 var $iij4$01318 = 0, $iij4259$01150 = 0, $iij4571$01145 = 0, $iij4599$01133 = 0, $iij4691$01093 = 0, $iij4719$01081 = 0, $iij4811$01041 = 0, $iij4839$01029 = 0, $iij4897$01005 = 0, $iij4925$0993 = 0, $iij5$01472 = 0, $iij5105$01352 = 0, $iij5134$0 = 0, $iij5134$01420 = 0, $iij5134$01421 = 0, $iij5134$01421$lcssa = 0, $iij5162$0 = 0, $iij5162$01400 = 0, $iij5162$01401 = 0, $iij5162$01401$lcssa = 0;
 var $iij517$01477 = 0, $iij5178$01382 = 0, $iij5186$01377 = 0, $iij5203$0 = 0, $iij5203$01370 = 0, $iij5203$01371 = 0, $iij5203$01371$lcssa = 0, $iij527$0 = 0, $iij527$01490 = 0, $iij527$01491 = 0, $iij527$01491$lcssa = 0, $iij5277$01292 = 0, $iij5288$01297 = 0, $iij5305$0 = 0, $iij5305$01310 = 0, $iij5305$01311 = 0, $iij5305$01311$lcssa = 0, $iij5312$01287 = 0, $iij5319$01282 = 0, $iij5334$01257 = 0;
 var $iij534$01467 = 0, $iij5345$01262 = 0, $iij5362$0 = 0, $iij5362$01275 = 0, $iij5362$01276 = 0, $iij5362$01276$lcssa = 0, $iij5369$01252 = 0, $iij5376$01247 = 0, $iij5392$01177 = 0, $iij541$01462 = 0, $iij5425$0 = 0, $iij5425$01240 = 0, $iij5425$01241 = 0, $iij5425$01241$lcssa = 0, $iij5453$0 = 0, $iij5453$01220 = 0, $iij5453$01221 = 0, $iij5453$01221$lcssa = 0, $iij5469$01202 = 0, $iij5477$01197 = 0;
 var $iij5494$0 = 0, $iij5494$01190 = 0, $iij5494$01191 = 0, $iij5494$01191$lcssa = 0, $iij553$01437 = 0, $iij5550$0958 = 0, $iij561$01442 = 0, $iij578$0 = 0, $iij578$01455 = 0, $iij578$01456 = 0, $iij578$01456$lcssa = 0, $iij585$01432 = 0, $iij592$01427 = 0, $iij7$0956 = 0, $ij4$01497 = 0, $ij4258$01317 = 0, $ij4570$01148 = 0, $ij4598$01136 = 0, $ij4690$01096 = 0, $ij4718$01084 = 0;
 var $ij4810$01044 = 0, $ij4838$01032 = 0, $ij4896$01008 = 0, $ij4924$0996 = 0, $ij5$01476 = 0, $ij5104$01356 = 0, $ij5133$01424 = 0, $ij516$01481 = 0, $ij5161$01404 = 0, $ij5177$01386 = 0, $ij5185$01381 = 0, $ij5202$01374 = 0, $ij526$01494 = 0, $ij5276$01296 = 0, $ij5287$01301 = 0, $ij5304$01314 = 0, $ij5311$01291 = 0, $ij5318$01286 = 0, $ij533$01471 = 0, $ij5333$01261 = 0;
 var $ij5344$01266 = 0, $ij5361$01279 = 0, $ij5368$01256 = 0, $ij5375$01251 = 0, $ij5391$01180 = 0, $ij540$01466 = 0, $ij5424$01244 = 0, $ij5452$01224 = 0, $ij5468$01206 = 0, $ij5476$01201 = 0, $ij5493$01194 = 0, $ij552$01441 = 0, $ij5549$01149 = 0, $ij560$01446 = 0, $ij577$01459 = 0, $ij584$01436 = 0, $ij591$01431 = 0, $ij7$01498 = 0, $j4array = 0, $j4array254 = 0;
 var $j4array566 = 0, $j4array594 = 0, $j4array686 = 0, $j4array714 = 0, $j4array806 = 0, $j4array834 = 0, $j4array892 = 0, $j4array920 = 0, $j4valid = 0, $j4valid257 = 0, $j4valid569 = 0, $j4valid597 = 0, $j4valid689 = 0, $j4valid717 = 0, $j4valid809 = 0, $j4valid837 = 0, $j4valid895 = 0, $j4valid923 = 0, $j5array = 0, $j5array100 = 0;
 var $j5array12 = 0, $j5array124 = 0, $j5array152 = 0, $j5array173 = 0, $j5array181 = 0, $j5array193 = 0, $j5array21 = 0, $j5array272 = 0, $j5array283 = 0, $j5array29 = 0, $j5array295 = 0, $j5array307 = 0, $j5array314 = 0, $j5array329 = 0, $j5array340 = 0, $j5array352 = 0, $j5array36 = 0, $j5array364 = 0, $j5array371 = 0, $j5array387 = 0;
 var $j5array415 = 0, $j5array443 = 0, $j5array464 = 0, $j5array472 = 0, $j5array48 = 0, $j5array484 = 0, $j5array545 = 0, $j5array56 = 0, $j5array68 = 0, $j5array80 = 0, $j5array87 = 0, $j5valid = 0, $j5valid103 = 0, $j5valid132 = 0, $j5valid15 = 0, $j5valid160 = 0, $j5valid176 = 0, $j5valid184 = 0, $j5valid201 = 0, $j5valid25 = 0;
 var $j5valid275 = 0, $j5valid286 = 0, $j5valid303 = 0, $j5valid310 = 0, $j5valid317 = 0, $j5valid32 = 0, $j5valid332 = 0, $j5valid343 = 0, $j5valid360 = 0, $j5valid367 = 0, $j5valid374 = 0, $j5valid39 = 0, $j5valid390 = 0, $j5valid423 = 0, $j5valid451 = 0, $j5valid467 = 0, $j5valid475 = 0, $j5valid492 = 0, $j5valid51 = 0, $j5valid548 = 0;
 var $j5valid59 = 0, $j5valid76 = 0, $j5valid83 = 0, $j5valid90 = 0, $j7array = 0, $j7valid = 0, $numroots = 0, $numroots123 = 0, $numroots151 = 0, $numroots192 = 0, $numroots294 = 0, $numroots351 = 0, $numroots414 = 0, $numroots442 = 0, $numroots483 = 0, $numroots67 = 0, $numsolutions$01485 = 0, $numsolutions128$01415 = 0, $numsolutions156$01395 = 0, $numsolutions197$01365 = 0;
 var $numsolutions299$01305 = 0, $numsolutions356$01270 = 0, $numsolutions419$01235 = 0, $numsolutions447$01215 = 0, $numsolutions488$01188 = 0, $numsolutions72$01450 = 0, $op = 0, $op121 = 0, $op149 = 0, $op190 = 0, $op292 = 0, $op349 = 0, $op412 = 0, $op440 = 0, $op481 = 0, $op65 = 0, $or$cond = 0, $or$cond100 = 0, $or$cond104 = 0, $or$cond111 = 0;
 var $or$cond112 = 0, $or$cond121 = 0, $or$cond126 = 0, $or$cond133 = 0, $or$cond134 = 0, $or$cond142 = 0, $or$cond172 = 0, $or$cond174 = 0, $or$cond197 = 0, $or$cond198 = 0, $or$cond203 = 0, $or$cond210 = 0, $or$cond211 = 0, $or$cond220 = 0, $or$cond225 = 0, $or$cond232 = 0, $or$cond233 = 0, $or$cond241 = 0, $or$cond271 = 0, $or$cond273 = 0;
 var $or$cond296 = 0, $or$cond99 = 0, $sj4array = 0, $sj4array256 = 0, $sj4array568 = 0, $sj4array596 = 0, $sj4array688 = 0, $sj4array716 = 0, $sj4array808 = 0, $sj4array836 = 0, $sj4array894 = 0, $sj4array922 = 0, $sj5array = 0, $sj5array102 = 0, $sj5array126 = 0, $sj5array14 = 0, $sj5array154 = 0, $sj5array175 = 0, $sj5array183 = 0, $sj5array195 = 0;
 var $sj5array23 = 0, $sj5array274 = 0, $sj5array285 = 0, $sj5array297 = 0, $sj5array309 = 0, $sj5array31 = 0, $sj5array316 = 0, $sj5array331 = 0, $sj5array342 = 0, $sj5array354 = 0, $sj5array366 = 0, $sj5array373 = 0, $sj5array38 = 0, $sj5array389 = 0, $sj5array417 = 0, $sj5array445 = 0, $sj5array466 = 0, $sj5array474 = 0, $sj5array486 = 0, $sj5array50 = 0;
 var $sj5array547 = 0, $sj5array58 = 0, $sj5array70 = 0, $sj5array82 = 0, $sj5array89 = 0, $sj7array = 0, $x1028 = 0, $x1053 = 0, $x1100 = 0, $x1101 = 0, $x1128 = 0, $x1155 = 0, $x1194 = 0, $x1195 = 0, $x1233 = 0, $x1234 = 0, $x1272 = 0, $x1273 = 0, $x1305 = 0, $x1306 = 0;
 var $x1351 = 0, $x1358 = 0, $x1362 = 0, $x1378 = 0, $x1385 = 0, $x1389 = 0, $x1407 = 0, $x1425 = 0, $x1453 = 0, $x1467 = 0, $x1471 = 0, $x1489 = 0, $x1503 = 0, $x1507 = 0, $x1524 = 0, $x1542 = 0, $x1572 = 0, $x1578 = 0, $x1597 = 0, $x1603 = 0;
 var $x1610 = 0, $x163 = 0, $x1639 = 0, $x1664 = 0, $x170 = 0, $x1711 = 0, $x1712 = 0, $x1739 = 0, $x174 = 0, $x1766 = 0, $x1805 = 0, $x1806 = 0, $x1844 = 0, $x1845 = 0, $x1883 = 0, $x1884 = 0, $x1914 = 0, $x1915 = 0, $x1941 = 0, $x1958 = 0;
 var $x1959 = 0, $x1981 = 0, $x1982 = 0, $x2012 = 0, $x2029 = 0, $x2030 = 0, $x2052 = 0, $x2053 = 0, $x2080 = 0, $x2081 = 0, $x2096 = 0, $x2097 = 0, $x2124 = 0, $x2125 = 0, $x2140 = 0, $x2141 = 0, $x2174 = 0, $x2175 = 0, $x2215 = 0, $x2216 = 0;
 var $x2251 = 0, $x2252 = 0, $x2293 = 0, $x2310 = 0, $x2311 = 0, $x2332 = 0, $x2333 = 0, $x2363 = 0, $x2380 = 0, $x2381 = 0, $x2402 = 0, $x2403 = 0, $x2429 = 0, $x2430 = 0, $x2444 = 0, $x2445 = 0, $x2471 = 0, $x2472 = 0, $x2487 = 0, $x2488 = 0;
 var $x2521 = 0, $x2522 = 0, $x2562 = 0, $x2563 = 0, $x2598 = 0, $x2599 = 0, $x2639 = 0, $x2656 = 0, $x2657 = 0, $x2679 = 0, $x2680 = 0, $x2708 = 0, $x2725 = 0, $x2726 = 0, $x2747 = 0, $x2748 = 0, $x2784 = 0, $x2785 = 0, $x2836 = 0, $x2837 = 0;
 var $x2886 = 0, $x2887 = 0, $x2939 = 0, $x2956 = 0, $x2957 = 0, $x2978 = 0, $x2979 = 0, $x3009 = 0, $x3026 = 0, $x3027 = 0, $x3049 = 0, $x3050 = 0, $x3088 = 0, $x3089 = 0, $x3140 = 0, $x3141 = 0, $x3190 = 0, $x3191 = 0, $x3251 = 0, $x3252 = 0;
 var $x3307 = 0, $x3308 = 0, $x3355 = 0, $x3356 = 0, $x767 = 0, $x774 = 0, $x778 = 0, $x796 = 0, $x814 = 0, $x842 = 0, $x856 = 0, $x860 = 0, $x878 = 0, $x892 = 0, $x896 = 0, $x913 = 0, $x931 = 0, $x96 = 0, $x961 = 0, $x967 = 0;
 var $x97 = 0, $x986 = 0, $x992 = 0, $x999 = 0, $zeror = 0, $zeror122 = 0, $zeror150 = 0, $zeror191 = 0, $zeror293 = 0, $zeror350 = 0, $zeror413 = 0, $zeror441 = 0, $zeror482 = 0, $zeror66 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 5168|0;
 $j7array = sp + 5024|0;
 $cj7array = sp + 5008|0;
 $sj7array = sp + 4992|0;
 $j7valid = sp + 5166|0;
 $j4array = sp + 4976|0;
 $cj4array = sp + 4960|0;
 $sj4array = sp + 4944|0;
 $j4valid = sp + 5164|0;
 $x96 = sp + 4928|0;
 $x97 = sp + 4912|0;
 $x163 = sp + 4896|0;
 $x170 = sp + 4880|0;
 $j5array = sp + 4864|0;
 $cj5array = sp + 4848|0;
 $sj5array = sp + 4832|0;
 $j5valid = sp + 5162|0;
 $x174 = sp + 4816|0;
 $x767 = sp + 4800|0;
 $x774 = sp + 4784|0;
 $j5array12 = sp + 4768|0;
 $cj5array13 = sp + 4752|0;
 $sj5array14 = sp + 4736|0;
 $j5valid15 = sp + 5160|0;
 $x778 = sp + 4720|0;
 $op = sp + 4696|0;
 $zeror = sp + 4680|0;
 $numroots = sp + 5076|0;
 $j5array21 = sp + 4664|0;
 $cj5array22 = sp + 4648|0;
 $sj5array23 = sp + 4632|0;
 $j5valid25 = sp + 5158|0;
 $j5array29 = sp + 4616|0;
 $cj5array30 = sp + 4600|0;
 $sj5array31 = sp + 4584|0;
 $j5valid32 = sp + 5156|0;
 $x796 = sp + 4568|0;
 $j5array36 = sp + 4552|0;
 $cj5array37 = sp + 4536|0;
 $sj5array38 = sp + 4520|0;
 $j5valid39 = sp + 5154|0;
 $x814 = sp + 4504|0;
 $x842 = sp + 4488|0;
 $x856 = sp + 4472|0;
 $j5array48 = sp + 4456|0;
 $cj5array49 = sp + 4440|0;
 $sj5array50 = sp + 4424|0;
 $j5valid51 = sp + 5152|0;
 $x860 = sp + 4408|0;
 $x878 = sp + 4392|0;
 $x892 = sp + 4376|0;
 $j5array56 = sp + 4360|0;
 $cj5array57 = sp + 4344|0;
 $sj5array58 = sp + 4328|0;
 $j5valid59 = sp + 5150|0;
 $x896 = sp + 4312|0;
 $op65 = sp + 4288|0;
 $zeror66 = sp + 4272|0;
 $numroots67 = sp + 5072|0;
 $j5array68 = sp + 4256|0;
 $cj5array69 = sp + 4240|0;
 $sj5array70 = sp + 4224|0;
 $j5valid76 = sp + 5148|0;
 $j5array80 = sp + 4208|0;
 $cj5array81 = sp + 4192|0;
 $sj5array82 = sp + 4176|0;
 $j5valid83 = sp + 5146|0;
 $x913 = sp + 4160|0;
 $j5array87 = sp + 4144|0;
 $cj5array88 = sp + 4128|0;
 $sj5array89 = sp + 4112|0;
 $j5valid90 = sp + 5144|0;
 $x931 = sp + 4096|0;
 $x961 = sp + 4080|0;
 $x967 = sp + 4064|0;
 $j5array100 = sp + 4048|0;
 $cj5array101 = sp + 4032|0;
 $sj5array102 = sp + 4016|0;
 $j5valid103 = sp + 5142|0;
 $x986 = sp + 4000|0;
 $x992 = sp + 3984|0;
 $x999 = sp + 3968|0;
 $op121 = sp + 3944|0;
 $zeror122 = sp + 3928|0;
 $numroots123 = sp + 5068|0;
 $j5array124 = sp + 3912|0;
 $cj5array125 = sp + 3896|0;
 $sj5array126 = sp + 3880|0;
 $j5valid132 = sp + 5140|0;
 $x1028 = sp + 3864|0;
 $op149 = sp + 3840|0;
 $zeror150 = sp + 3824|0;
 $numroots151 = sp + 5064|0;
 $j5array152 = sp + 3808|0;
 $cj5array153 = sp + 3792|0;
 $sj5array154 = sp + 3776|0;
 $j5valid160 = sp + 5138|0;
 $x1053 = sp + 3760|0;
 $j5array173 = sp + 3744|0;
 $cj5array174 = sp + 3728|0;
 $sj5array175 = sp + 3712|0;
 $j5valid176 = sp + 5136|0;
 $j5array181 = sp + 3696|0;
 $cj5array182 = sp + 3680|0;
 $sj5array183 = sp + 3664|0;
 $j5valid184 = sp + 5134|0;
 $op190 = sp + 3640|0;
 $zeror191 = sp + 3624|0;
 $numroots192 = sp + 5060|0;
 $j5array193 = sp + 3608|0;
 $cj5array194 = sp + 3592|0;
 $sj5array195 = sp + 3576|0;
 $j5valid201 = sp + 5132|0;
 $x1100 = sp + 3560|0;
 $x1101 = sp + 3544|0;
 $x1128 = sp + 3528|0;
 $x1155 = sp + 3512|0;
 $x1194 = sp + 3496|0;
 $x1195 = sp + 3480|0;
 $x1233 = sp + 3464|0;
 $x1234 = sp + 3448|0;
 $x1272 = sp + 3432|0;
 $x1273 = sp + 3416|0;
 $j4array254 = sp + 3400|0;
 $cj4array255 = sp + 3384|0;
 $sj4array256 = sp + 3368|0;
 $j4valid257 = sp + 5130|0;
 $x1305 = sp + 3352|0;
 $x1306 = sp + 3336|0;
 $x1351 = sp + 3320|0;
 $x1358 = sp + 3304|0;
 $j5array272 = sp + 3288|0;
 $cj5array273 = sp + 3272|0;
 $sj5array274 = sp + 3256|0;
 $j5valid275 = sp + 5128|0;
 $x1362 = sp + 3240|0;
 $x1378 = sp + 3224|0;
 $x1385 = sp + 3208|0;
 $j5array283 = sp + 3192|0;
 $cj5array284 = sp + 3176|0;
 $sj5array285 = sp + 3160|0;
 $j5valid286 = sp + 5126|0;
 $x1389 = sp + 3144|0;
 $op292 = sp + 3120|0;
 $zeror293 = sp + 3104|0;
 $numroots294 = sp + 5056|0;
 $j5array295 = sp + 3088|0;
 $cj5array296 = sp + 3072|0;
 $sj5array297 = sp + 3056|0;
 $j5valid303 = sp + 5124|0;
 $j5array307 = sp + 3040|0;
 $cj5array308 = sp + 3024|0;
 $sj5array309 = sp + 3008|0;
 $j5valid310 = sp + 5122|0;
 $x1407 = sp + 2992|0;
 $j5array314 = sp + 2976|0;
 $cj5array315 = sp + 2960|0;
 $sj5array316 = sp + 2944|0;
 $j5valid317 = sp + 5120|0;
 $x1425 = sp + 2928|0;
 $x1453 = sp + 2912|0;
 $x1467 = sp + 2896|0;
 $j5array329 = sp + 2880|0;
 $cj5array330 = sp + 2864|0;
 $sj5array331 = sp + 2848|0;
 $j5valid332 = sp + 5118|0;
 $x1471 = sp + 2832|0;
 $x1489 = sp + 2816|0;
 $x1503 = sp + 2800|0;
 $j5array340 = sp + 2784|0;
 $cj5array341 = sp + 2768|0;
 $sj5array342 = sp + 2752|0;
 $j5valid343 = sp + 5116|0;
 $x1507 = sp + 2736|0;
 $op349 = sp + 2712|0;
 $zeror350 = sp + 2696|0;
 $numroots351 = sp + 5052|0;
 $j5array352 = sp + 2680|0;
 $cj5array353 = sp + 2664|0;
 $sj5array354 = sp + 2648|0;
 $j5valid360 = sp + 5114|0;
 $j5array364 = sp + 2632|0;
 $cj5array365 = sp + 2616|0;
 $sj5array366 = sp + 2600|0;
 $j5valid367 = sp + 5112|0;
 $x1524 = sp + 2584|0;
 $j5array371 = sp + 2568|0;
 $cj5array372 = sp + 2552|0;
 $sj5array373 = sp + 2536|0;
 $j5valid374 = sp + 5110|0;
 $x1542 = sp + 2520|0;
 $x1572 = sp + 2504|0;
 $x1578 = sp + 2488|0;
 $j5array387 = sp + 2472|0;
 $cj5array388 = sp + 2456|0;
 $sj5array389 = sp + 2440|0;
 $j5valid390 = sp + 5108|0;
 $x1597 = sp + 2424|0;
 $x1603 = sp + 2408|0;
 $x1610 = sp + 2392|0;
 $op412 = sp + 2368|0;
 $zeror413 = sp + 2352|0;
 $numroots414 = sp + 5048|0;
 $j5array415 = sp + 2336|0;
 $cj5array416 = sp + 2320|0;
 $sj5array417 = sp + 2304|0;
 $j5valid423 = sp + 5106|0;
 $x1639 = sp + 2288|0;
 $op440 = sp + 2264|0;
 $zeror441 = sp + 2248|0;
 $numroots442 = sp + 5044|0;
 $j5array443 = sp + 2232|0;
 $cj5array444 = sp + 2216|0;
 $sj5array445 = sp + 2200|0;
 $j5valid451 = sp + 5104|0;
 $x1664 = sp + 2184|0;
 $j5array464 = sp + 2168|0;
 $cj5array465 = sp + 2152|0;
 $sj5array466 = sp + 2136|0;
 $j5valid467 = sp + 5102|0;
 $j5array472 = sp + 2120|0;
 $cj5array473 = sp + 2104|0;
 $sj5array474 = sp + 2088|0;
 $j5valid475 = sp + 5100|0;
 $op481 = sp + 2064|0;
 $zeror482 = sp + 2048|0;
 $numroots483 = sp + 5040|0;
 $j5array484 = sp + 2032|0;
 $cj5array485 = sp + 2016|0;
 $sj5array486 = sp + 2000|0;
 $j5valid492 = sp + 5098|0;
 $x1711 = sp + 1984|0;
 $x1712 = sp + 1968|0;
 $x1739 = sp + 1952|0;
 $x1766 = sp + 1936|0;
 $x1805 = sp + 1920|0;
 $x1806 = sp + 1904|0;
 $x1844 = sp + 1888|0;
 $x1845 = sp + 1872|0;
 $x1883 = sp + 1856|0;
 $x1884 = sp + 1840|0;
 $j5array545 = sp + 1824|0;
 $cj5array546 = sp + 1808|0;
 $sj5array547 = sp + 1792|0;
 $j5valid548 = sp + 5096|0;
 $x1914 = sp + 1776|0;
 $x1915 = sp + 1760|0;
 $j4array566 = sp + 1744|0;
 $cj4array567 = sp + 1728|0;
 $sj4array568 = sp + 1712|0;
 $j4valid569 = sp + 5094|0;
 $x1941 = sp + 1696|0;
 $x1958 = sp + 1680|0;
 $x1959 = sp + 1664|0;
 $x1981 = sp + 1648|0;
 $x1982 = sp + 1632|0;
 $j4array594 = sp + 1616|0;
 $cj4array595 = sp + 1600|0;
 $sj4array596 = sp + 1584|0;
 $j4valid597 = sp + 5092|0;
 $x2012 = sp + 1568|0;
 $x2029 = sp + 1552|0;
 $x2030 = sp + 1536|0;
 $x2052 = sp + 1520|0;
 $x2053 = sp + 1504|0;
 $x2080 = sp + 1488|0;
 $x2081 = sp + 1472|0;
 $x2096 = sp + 1456|0;
 $x2097 = sp + 1440|0;
 $x2124 = sp + 1424|0;
 $x2125 = sp + 1408|0;
 $x2140 = sp + 1392|0;
 $x2141 = sp + 1376|0;
 $x2174 = sp + 1360|0;
 $x2175 = sp + 1344|0;
 $x2215 = sp + 1328|0;
 $x2216 = sp + 1312|0;
 $x2251 = sp + 1296|0;
 $x2252 = sp + 1280|0;
 $j4array686 = sp + 1264|0;
 $cj4array687 = sp + 1248|0;
 $sj4array688 = sp + 1232|0;
 $j4valid689 = sp + 5090|0;
 $x2293 = sp + 1216|0;
 $x2310 = sp + 1200|0;
 $x2311 = sp + 1184|0;
 $x2332 = sp + 1168|0;
 $x2333 = sp + 1152|0;
 $j4array714 = sp + 1136|0;
 $cj4array715 = sp + 1120|0;
 $sj4array716 = sp + 1104|0;
 $j4valid717 = sp + 5088|0;
 $x2363 = sp + 1088|0;
 $x2380 = sp + 1072|0;
 $x2381 = sp + 1056|0;
 $x2402 = sp + 1040|0;
 $x2403 = sp + 1024|0;
 $x2429 = sp + 1008|0;
 $x2430 = sp + 992|0;
 $x2444 = sp + 976|0;
 $x2445 = sp + 960|0;
 $x2471 = sp + 944|0;
 $x2472 = sp + 928|0;
 $x2487 = sp + 912|0;
 $x2488 = sp + 896|0;
 $x2521 = sp + 880|0;
 $x2522 = sp + 864|0;
 $x2562 = sp + 848|0;
 $x2563 = sp + 832|0;
 $x2598 = sp + 816|0;
 $x2599 = sp + 800|0;
 $j4array806 = sp + 784|0;
 $cj4array807 = sp + 768|0;
 $sj4array808 = sp + 752|0;
 $j4valid809 = sp + 5086|0;
 $x2639 = sp + 736|0;
 $x2656 = sp + 720|0;
 $x2657 = sp + 704|0;
 $x2679 = sp + 688|0;
 $x2680 = sp + 672|0;
 $j4array834 = sp + 656|0;
 $cj4array835 = sp + 640|0;
 $sj4array836 = sp + 624|0;
 $j4valid837 = sp + 5084|0;
 $x2708 = sp + 608|0;
 $x2725 = sp + 592|0;
 $x2726 = sp + 576|0;
 $x2747 = sp + 560|0;
 $x2748 = sp + 544|0;
 $x2784 = sp + 528|0;
 $x2785 = sp + 512|0;
 $x2836 = sp + 496|0;
 $x2837 = sp + 480|0;
 $x2886 = sp + 464|0;
 $x2887 = sp + 448|0;
 $j4array892 = sp + 432|0;
 $cj4array893 = sp + 416|0;
 $sj4array894 = sp + 400|0;
 $j4valid895 = sp + 5082|0;
 $x2939 = sp + 384|0;
 $x2956 = sp + 368|0;
 $x2957 = sp + 352|0;
 $x2978 = sp + 336|0;
 $x2979 = sp + 320|0;
 $j4array920 = sp + 304|0;
 $cj4array921 = sp + 288|0;
 $sj4array922 = sp + 272|0;
 $j4valid923 = sp + 5080|0;
 $x3009 = sp + 256|0;
 $x3026 = sp + 240|0;
 $x3027 = sp + 224|0;
 $x3049 = sp + 208|0;
 $x3050 = sp + 192|0;
 $x3088 = sp + 176|0;
 $x3089 = sp + 160|0;
 $x3140 = sp + 144|0;
 $x3141 = sp + 128|0;
 $x3190 = sp + 112|0;
 $x3191 = sp + 96|0;
 $x3251 = sp + 80|0;
 $x3252 = sp + 64|0;
 $x3307 = sp + 48|0;
 $x3308 = sp + 32|0;
 $x3355 = sp + 16|0;
 $x3356 = sp;
 HEAPF64[$this>>3] = nan;
 $0 = ((($this)) + 568|0);
 HEAP8[$0>>0] = -1;
 $1 = ((($this)) + 569|0);
 HEAP8[$1>>0] = -1;
 $2 = ((($this)) + 570|0);
 HEAP8[$2>>0] = -1;
 $3 = ((($this)) + 40|0);
 HEAPF64[$3>>3] = nan;
 $4 = ((($this)) + 571|0);
 HEAP8[$4>>0] = -1;
 $5 = ((($this)) + 572|0);
 HEAP8[$5>>0] = -1;
 $6 = ((($this)) + 573|0);
 HEAP8[$6>>0] = -1;
 $7 = ((($this)) + 80|0);
 HEAPF64[$7>>3] = nan;
 $8 = ((($this)) + 574|0);
 HEAP8[$8>>0] = -1;
 $9 = ((($this)) + 575|0);
 HEAP8[$9>>0] = -1;
 $10 = ((($this)) + 576|0);
 HEAP8[$10>>0] = -1;
 $11 = ((($this)) + 120|0);
 HEAPF64[$11>>3] = nan;
 $12 = ((($this)) + 577|0);
 HEAP8[$12>>0] = -1;
 $13 = ((($this)) + 578|0);
 HEAP8[$13>>0] = -1;
 $14 = ((($this)) + 579|0);
 HEAP8[$14>>0] = -1;
 $15 = ((($this)) + 160|0);
 HEAPF64[$15>>3] = nan;
 $16 = ((($this)) + 580|0);
 HEAP8[$16>>0] = -1;
 $17 = ((($this)) + 581|0);
 HEAP8[$17>>0] = -1;
 $18 = ((($this)) + 582|0);
 HEAP8[$18>>0] = -1;
 $19 = ((($this)) + 200|0);
 HEAPF64[$19>>3] = nan;
 $20 = ((($this)) + 583|0);
 $21 = ((($this)) + 588|0);
 ;HEAP8[$20>>0]=255|0;HEAP8[$20+1>>0]=255|0;HEAP8[$20+2>>0]=255|0;HEAP8[$20+3>>0]=255|0;HEAP8[$20+4>>0]=255|0;
 HEAP8[$21>>0] = 0;
 $22 = ((($this)) + 240|0);
 $23 = ((($this)) + 248|0);
 $24 = ((($this)) + 256|0);
 $25 = ((($this)) + 264|0);
 $26 = ((($this)) + 280|0);
 $27 = ((($eerot)) + 8|0);
 $28 = ((($this)) + 304|0);
 $29 = ((($eerot)) + 16|0);
 $30 = ((($this)) + 328|0);
 $31 = ((($eerot)) + 24|0);
 $32 = ((($this)) + 352|0);
 $33 = ((($eerot)) + 32|0);
 $34 = ((($this)) + 376|0);
 $35 = ((($eerot)) + 40|0);
 $36 = ((($this)) + 400|0);
 $37 = ((($eerot)) + 48|0);
 $38 = ((($this)) + 424|0);
 $39 = ((($eerot)) + 56|0);
 $40 = ((($this)) + 448|0);
 $41 = ((($eerot)) + 64|0);
 $42 = ((($this)) + 472|0);
 $43 = ((($this)) + 496|0);
 $44 = ((($eetrans)) + 8|0);
 $45 = ((($this)) + 520|0);
 $46 = ((($eetrans)) + 16|0);
 $47 = ((($this)) + 544|0);
 $48 = ((($this)) + 272|0);
 $49 = ((($this)) + 296|0);
 $50 = ((($this)) + 320|0);
 $51 = ((($this)) + 488|0);
 $52 = ((($this)) + 344|0);
 $53 = ((($this)) + 368|0);
 $54 = ((($this)) + 392|0);
 $55 = ((($this)) + 512|0);
 $56 = ((($this)) + 416|0);
 $57 = ((($this)) + 440|0);
 $58 = ((($this)) + 464|0);
 $59 = ((($this)) + 536|0);
 $60 = ((($this)) + 560|0);
 $61 = ((($this)) + 504|0);
 $62 = ((($this)) + 528|0);
 $63 = ((($this)) + 552|0);
 $64 = ((($this)) + 288|0);
 $65 = ((($this)) + 312|0);
 $66 = ((($this)) + 336|0);
 $67 = ((($this)) + 360|0);
 $68 = ((($this)) + 384|0);
 $69 = ((($this)) + 408|0);
 $70 = ((($this)) + 432|0);
 $71 = ((($this)) + 456|0);
 $72 = ((($this)) + 480|0);
 $73 = ((($j7array)) + 8|0);
 $74 = ((($j7valid)) + 1|0);
 $75 = ((($this)) + 88|0);
 $76 = ((($this)) + 96|0);
 $77 = ((($x96)) + 8|0);
 $78 = ((($x97)) + 8|0);
 $79 = ((($j4array)) + 8|0);
 $80 = ((($sj4array)) + 8|0);
 $81 = ((($cj4array)) + 8|0);
 $82 = ((($j4valid)) + 1|0);
 $83 = ((($this)) + 8|0);
 $84 = ((($this)) + 16|0);
 $85 = ((($op)) + 8|0);
 $86 = ((($op)) + 16|0);
 $87 = ((($this)) + 48|0);
 $88 = ((($this)) + 56|0);
 $89 = ((($this)) + 64|0);
 $90 = ((($x767)) + 8|0);
 $91 = ((($x774)) + 8|0);
 $92 = ((($x778)) + 8|0);
 $93 = ((($j5valid15)) + 1|0);
 $94 = ((($sj5array14)) + 8|0);
 $95 = ((($j5array12)) + 8|0);
 $96 = ((($cj5array13)) + 8|0);
 $97 = ((($this)) + 48|0);
 $98 = ((($this)) + 56|0);
 $99 = ((($x163)) + 8|0);
 $100 = ((($x170)) + 8|0);
 $101 = ((($x174)) + 8|0);
 $102 = ((($j5valid)) + 1|0);
 $103 = ((($sj5array)) + 8|0);
 $104 = ((($j5array)) + 8|0);
 $105 = ((($cj5array)) + 8|0);
 $106 = ((($this)) + 48|0);
 $107 = ((($this)) + 56|0);
 $108 = ((($x796)) + 8|0);
 $109 = ((($j5valid32)) + 1|0);
 $110 = ((($sj5array31)) + 8|0);
 $111 = ((($j5array29)) + 8|0);
 $112 = ((($cj5array30)) + 8|0);
 $113 = ((($this)) + 48|0);
 $114 = ((($this)) + 56|0);
 $115 = ((($x814)) + 8|0);
 $116 = ((($j5valid39)) + 1|0);
 $117 = ((($sj5array38)) + 8|0);
 $118 = ((($j5array36)) + 8|0);
 $119 = ((($cj5array37)) + 8|0);
 $120 = ((($this)) + 48|0);
 $121 = ((($this)) + 56|0);
 $122 = ((($op65)) + 8|0);
 $123 = ((($op65)) + 16|0);
 $124 = ((($this)) + 48|0);
 $125 = ((($this)) + 56|0);
 $126 = ((($this)) + 64|0);
 $127 = ((($x878)) + 8|0);
 $128 = ((($x892)) + 8|0);
 $129 = ((($x896)) + 8|0);
 $130 = ((($j5valid59)) + 1|0);
 $131 = ((($sj5array58)) + 8|0);
 $132 = ((($j5array56)) + 8|0);
 $133 = ((($cj5array57)) + 8|0);
 $134 = ((($this)) + 48|0);
 $135 = ((($this)) + 56|0);
 $136 = ((($x842)) + 8|0);
 $137 = ((($x856)) + 8|0);
 $138 = ((($x860)) + 8|0);
 $139 = ((($j5valid51)) + 1|0);
 $140 = ((($sj5array50)) + 8|0);
 $141 = ((($j5array48)) + 8|0);
 $142 = ((($cj5array49)) + 8|0);
 $143 = ((($this)) + 48|0);
 $144 = ((($this)) + 56|0);
 $145 = ((($x913)) + 8|0);
 $146 = ((($j5valid83)) + 1|0);
 $147 = ((($sj5array82)) + 8|0);
 $148 = ((($j5array80)) + 8|0);
 $149 = ((($cj5array81)) + 8|0);
 $150 = ((($this)) + 48|0);
 $151 = ((($this)) + 56|0);
 $152 = ((($x931)) + 8|0);
 $153 = ((($j5valid90)) + 1|0);
 $154 = ((($sj5array89)) + 8|0);
 $155 = ((($j5array87)) + 8|0);
 $156 = ((($cj5array88)) + 8|0);
 $157 = ((($this)) + 48|0);
 $158 = ((($this)) + 56|0);
 $159 = ((($op121)) + 8|0);
 $160 = ((($op121)) + 16|0);
 $161 = ((($this)) + 48|0);
 $162 = ((($this)) + 56|0);
 $163 = ((($this)) + 64|0);
 $164 = ((($x1028)) + 8|0);
 $165 = ((($this)) + 48|0);
 $166 = ((($this)) + 56|0);
 $167 = ((($op149)) + 8|0);
 $168 = ((($op149)) + 16|0);
 $169 = ((($this)) + 48|0);
 $170 = ((($this)) + 56|0);
 $171 = ((($this)) + 64|0);
 $172 = ((($x1053)) + 8|0);
 $173 = ((($this)) + 48|0);
 $174 = ((($this)) + 56|0);
 $175 = ((($j5valid176)) + 1|0);
 $176 = ((($sj5array175)) + 8|0);
 $177 = ((($j5array173)) + 8|0);
 $178 = ((($cj5array174)) + 8|0);
 $179 = ((($this)) + 48|0);
 $180 = ((($this)) + 56|0);
 $181 = ((($j5valid184)) + 1|0);
 $182 = ((($sj5array183)) + 8|0);
 $183 = ((($j5array181)) + 8|0);
 $184 = ((($cj5array182)) + 8|0);
 $185 = ((($this)) + 48|0);
 $186 = ((($this)) + 56|0);
 $187 = ((($op190)) + 8|0);
 $188 = ((($op190)) + 16|0);
 $189 = ((($this)) + 48|0);
 $190 = ((($this)) + 56|0);
 $191 = ((($this)) + 64|0);
 $192 = ((($x986)) + 8|0);
 $193 = ((($x992)) + 8|0);
 $194 = ((($x999)) + 8|0);
 $195 = ((($this)) + 48|0);
 $196 = ((($this)) + 56|0);
 $197 = ((($x961)) + 8|0);
 $198 = ((($x967)) + 8|0);
 $199 = ((($j5valid103)) + 1|0);
 $200 = ((($sj5array102)) + 8|0);
 $201 = ((($j5array100)) + 8|0);
 $202 = ((($cj5array101)) + 8|0);
 $203 = ((($this)) + 48|0);
 $204 = ((($this)) + 56|0);
 $205 = ((($x1100)) + 8|0);
 $206 = ((($x1101)) + 8|0);
 $207 = ((($this)) + 48|0);
 $208 = ((($this)) + 56|0);
 $209 = ((($x1128)) + 8|0);
 $210 = ((($this)) + 48|0);
 $211 = ((($this)) + 56|0);
 $212 = ((($x1155)) + 8|0);
 $213 = ((($this)) + 48|0);
 $214 = ((($this)) + 56|0);
 $215 = ((($x1194)) + 8|0);
 $216 = ((($x1195)) + 8|0);
 $217 = ((($this)) + 48|0);
 $218 = ((($this)) + 56|0);
 $219 = ((($x1233)) + 8|0);
 $220 = ((($x1234)) + 8|0);
 $221 = ((($this)) + 48|0);
 $222 = ((($this)) + 56|0);
 $223 = ((($x1272)) + 8|0);
 $224 = ((($x1273)) + 8|0);
 $225 = ((($this)) + 48|0);
 $226 = ((($this)) + 56|0);
 $227 = ((($x1305)) + 8|0);
 $228 = ((($x1306)) + 8|0);
 $229 = ((($j4array254)) + 8|0);
 $230 = ((($sj4array256)) + 8|0);
 $231 = ((($cj4array255)) + 8|0);
 $232 = ((($j4valid257)) + 1|0);
 $233 = ((($this)) + 8|0);
 $234 = ((($this)) + 16|0);
 $235 = ((($op292)) + 8|0);
 $236 = ((($op292)) + 16|0);
 $237 = ((($this)) + 48|0);
 $238 = ((($this)) + 56|0);
 $239 = ((($this)) + 64|0);
 $240 = ((($x1378)) + 8|0);
 $241 = ((($x1385)) + 8|0);
 $242 = ((($x1389)) + 8|0);
 $243 = ((($j5valid286)) + 1|0);
 $244 = ((($sj5array285)) + 8|0);
 $245 = ((($j5array283)) + 8|0);
 $246 = ((($cj5array284)) + 8|0);
 $247 = ((($this)) + 48|0);
 $248 = ((($this)) + 56|0);
 $249 = ((($x1351)) + 8|0);
 $250 = ((($x1358)) + 8|0);
 $251 = ((($x1362)) + 8|0);
 $252 = ((($j5valid275)) + 1|0);
 $253 = ((($sj5array274)) + 8|0);
 $254 = ((($j5array272)) + 8|0);
 $255 = ((($cj5array273)) + 8|0);
 $256 = ((($this)) + 48|0);
 $257 = ((($this)) + 56|0);
 $258 = ((($x1407)) + 8|0);
 $259 = ((($j5valid310)) + 1|0);
 $260 = ((($sj5array309)) + 8|0);
 $261 = ((($j5array307)) + 8|0);
 $262 = ((($cj5array308)) + 8|0);
 $263 = ((($this)) + 48|0);
 $264 = ((($this)) + 56|0);
 $265 = ((($x1425)) + 8|0);
 $266 = ((($j5valid317)) + 1|0);
 $267 = ((($sj5array316)) + 8|0);
 $268 = ((($j5array314)) + 8|0);
 $269 = ((($cj5array315)) + 8|0);
 $270 = ((($this)) + 48|0);
 $271 = ((($this)) + 56|0);
 $272 = ((($op349)) + 8|0);
 $273 = ((($op349)) + 16|0);
 $274 = ((($this)) + 48|0);
 $275 = ((($this)) + 56|0);
 $276 = ((($this)) + 64|0);
 $277 = ((($x1489)) + 8|0);
 $278 = ((($x1503)) + 8|0);
 $279 = ((($x1507)) + 8|0);
 $280 = ((($j5valid343)) + 1|0);
 $281 = ((($sj5array342)) + 8|0);
 $282 = ((($j5array340)) + 8|0);
 $283 = ((($cj5array341)) + 8|0);
 $284 = ((($this)) + 48|0);
 $285 = ((($this)) + 56|0);
 $286 = ((($x1453)) + 8|0);
 $287 = ((($x1467)) + 8|0);
 $288 = ((($x1471)) + 8|0);
 $289 = ((($j5valid332)) + 1|0);
 $290 = ((($sj5array331)) + 8|0);
 $291 = ((($j5array329)) + 8|0);
 $292 = ((($cj5array330)) + 8|0);
 $293 = ((($this)) + 48|0);
 $294 = ((($this)) + 56|0);
 $295 = ((($x1524)) + 8|0);
 $296 = ((($j5valid367)) + 1|0);
 $297 = ((($sj5array366)) + 8|0);
 $298 = ((($j5array364)) + 8|0);
 $299 = ((($cj5array365)) + 8|0);
 $300 = ((($this)) + 48|0);
 $301 = ((($this)) + 56|0);
 $302 = ((($x1542)) + 8|0);
 $303 = ((($j5valid374)) + 1|0);
 $304 = ((($sj5array373)) + 8|0);
 $305 = ((($j5array371)) + 8|0);
 $306 = ((($cj5array372)) + 8|0);
 $307 = ((($this)) + 48|0);
 $308 = ((($this)) + 56|0);
 $309 = ((($op412)) + 8|0);
 $310 = ((($op412)) + 16|0);
 $311 = ((($this)) + 48|0);
 $312 = ((($this)) + 56|0);
 $313 = ((($this)) + 64|0);
 $314 = ((($x1639)) + 8|0);
 $315 = ((($this)) + 48|0);
 $316 = ((($this)) + 56|0);
 $317 = ((($op440)) + 8|0);
 $318 = ((($op440)) + 16|0);
 $319 = ((($this)) + 48|0);
 $320 = ((($this)) + 56|0);
 $321 = ((($this)) + 64|0);
 $322 = ((($x1664)) + 8|0);
 $323 = ((($this)) + 48|0);
 $324 = ((($this)) + 56|0);
 $325 = ((($j5valid467)) + 1|0);
 $326 = ((($sj5array466)) + 8|0);
 $327 = ((($j5array464)) + 8|0);
 $328 = ((($cj5array465)) + 8|0);
 $329 = ((($this)) + 48|0);
 $330 = ((($this)) + 56|0);
 $331 = ((($j5valid475)) + 1|0);
 $332 = ((($sj5array474)) + 8|0);
 $333 = ((($j5array472)) + 8|0);
 $334 = ((($cj5array473)) + 8|0);
 $335 = ((($this)) + 48|0);
 $336 = ((($this)) + 56|0);
 $337 = ((($op481)) + 8|0);
 $338 = ((($op481)) + 16|0);
 $339 = ((($this)) + 48|0);
 $340 = ((($this)) + 56|0);
 $341 = ((($this)) + 64|0);
 $342 = ((($x1597)) + 8|0);
 $343 = ((($x1603)) + 8|0);
 $344 = ((($x1610)) + 8|0);
 $345 = ((($this)) + 48|0);
 $346 = ((($this)) + 56|0);
 $347 = ((($x1572)) + 8|0);
 $348 = ((($x1578)) + 8|0);
 $349 = ((($j5valid390)) + 1|0);
 $350 = ((($sj5array389)) + 8|0);
 $351 = ((($j5array387)) + 8|0);
 $352 = ((($cj5array388)) + 8|0);
 $353 = ((($this)) + 48|0);
 $354 = ((($this)) + 56|0);
 $355 = ((($x1711)) + 8|0);
 $356 = ((($x1712)) + 8|0);
 $357 = ((($this)) + 48|0);
 $358 = ((($this)) + 56|0);
 $359 = ((($x1739)) + 8|0);
 $360 = ((($this)) + 48|0);
 $361 = ((($this)) + 56|0);
 $362 = ((($x1766)) + 8|0);
 $363 = ((($this)) + 48|0);
 $364 = ((($this)) + 56|0);
 $365 = ((($x1805)) + 8|0);
 $366 = ((($x1806)) + 8|0);
 $367 = ((($this)) + 48|0);
 $368 = ((($this)) + 56|0);
 $369 = ((($x1844)) + 8|0);
 $370 = ((($x1845)) + 8|0);
 $371 = ((($this)) + 48|0);
 $372 = ((($this)) + 56|0);
 $373 = ((($x1883)) + 8|0);
 $374 = ((($x1884)) + 8|0);
 $375 = ((($this)) + 48|0);
 $376 = ((($this)) + 56|0);
 $377 = ((($x1914)) + 8|0);
 $378 = ((($x1915)) + 8|0);
 $379 = ((($j5array545)) + 8|0);
 $380 = ((($sj5array547)) + 8|0);
 $381 = ((($cj5array546)) + 8|0);
 $382 = ((($j5valid548)) + 1|0);
 $383 = ((($this)) + 48|0);
 $384 = ((($this)) + 56|0);
 $385 = ((($x1941)) + 8|0);
 $386 = ((($j4array566)) + 8|0);
 $387 = ((($sj4array568)) + 8|0);
 $388 = ((($cj4array567)) + 8|0);
 $389 = ((($j4valid569)) + 1|0);
 $390 = ((($this)) + 8|0);
 $391 = ((($this)) + 16|0);
 $392 = ((($x1958)) + 8|0);
 $393 = ((($x1959)) + 8|0);
 $394 = ((($this)) + 8|0);
 $395 = ((($this)) + 16|0);
 $396 = ((($x1981)) + 8|0);
 $397 = ((($x1982)) + 8|0);
 $398 = ((($this)) + 8|0);
 $399 = ((($this)) + 16|0);
 $400 = ((($x2012)) + 8|0);
 $401 = ((($j4array594)) + 8|0);
 $402 = ((($sj4array596)) + 8|0);
 $403 = ((($cj4array595)) + 8|0);
 $404 = ((($j4valid597)) + 1|0);
 $405 = ((($this)) + 8|0);
 $406 = ((($this)) + 16|0);
 $407 = ((($x2029)) + 8|0);
 $408 = ((($x2030)) + 8|0);
 $409 = ((($this)) + 8|0);
 $410 = ((($this)) + 16|0);
 $411 = ((($x2052)) + 8|0);
 $412 = ((($x2053)) + 8|0);
 $413 = ((($this)) + 8|0);
 $414 = ((($this)) + 16|0);
 $415 = ((($x2080)) + 8|0);
 $416 = ((($x2081)) + 8|0);
 $417 = ((($this)) + 8|0);
 $418 = ((($this)) + 16|0);
 $419 = ((($x2096)) + 8|0);
 $420 = ((($x2097)) + 8|0);
 $421 = ((($this)) + 8|0);
 $422 = ((($this)) + 16|0);
 $423 = ((($x2124)) + 8|0);
 $424 = ((($x2125)) + 8|0);
 $425 = ((($this)) + 8|0);
 $426 = ((($this)) + 16|0);
 $427 = ((($x2140)) + 8|0);
 $428 = ((($x2141)) + 8|0);
 $429 = ((($this)) + 8|0);
 $430 = ((($this)) + 16|0);
 $431 = ((($x2174)) + 8|0);
 $432 = ((($x2175)) + 8|0);
 $433 = ((($this)) + 8|0);
 $434 = ((($this)) + 16|0);
 $435 = ((($x2215)) + 8|0);
 $436 = ((($x2216)) + 8|0);
 $437 = ((($this)) + 8|0);
 $438 = ((($this)) + 16|0);
 $439 = ((($x2251)) + 8|0);
 $440 = ((($x2252)) + 8|0);
 $441 = ((($this)) + 8|0);
 $442 = ((($this)) + 16|0);
 $443 = ((($x2293)) + 8|0);
 $444 = ((($j4array686)) + 8|0);
 $445 = ((($sj4array688)) + 8|0);
 $446 = ((($cj4array687)) + 8|0);
 $447 = ((($j4valid689)) + 1|0);
 $448 = ((($this)) + 8|0);
 $449 = ((($this)) + 16|0);
 $450 = ((($x2310)) + 8|0);
 $451 = ((($x2311)) + 8|0);
 $452 = ((($this)) + 8|0);
 $453 = ((($this)) + 16|0);
 $454 = ((($x2332)) + 8|0);
 $455 = ((($x2333)) + 8|0);
 $456 = ((($this)) + 8|0);
 $457 = ((($this)) + 16|0);
 $458 = ((($x2363)) + 8|0);
 $459 = ((($j4array714)) + 8|0);
 $460 = ((($sj4array716)) + 8|0);
 $461 = ((($cj4array715)) + 8|0);
 $462 = ((($j4valid717)) + 1|0);
 $463 = ((($this)) + 8|0);
 $464 = ((($this)) + 16|0);
 $465 = ((($x2380)) + 8|0);
 $466 = ((($x2381)) + 8|0);
 $467 = ((($this)) + 8|0);
 $468 = ((($this)) + 16|0);
 $469 = ((($x2402)) + 8|0);
 $470 = ((($x2403)) + 8|0);
 $471 = ((($this)) + 8|0);
 $472 = ((($this)) + 16|0);
 $473 = ((($x2429)) + 8|0);
 $474 = ((($x2430)) + 8|0);
 $475 = ((($this)) + 8|0);
 $476 = ((($this)) + 16|0);
 $477 = ((($x2444)) + 8|0);
 $478 = ((($x2445)) + 8|0);
 $479 = ((($this)) + 8|0);
 $480 = ((($this)) + 16|0);
 $481 = ((($x2471)) + 8|0);
 $482 = ((($x2472)) + 8|0);
 $483 = ((($this)) + 8|0);
 $484 = ((($this)) + 16|0);
 $485 = ((($x2487)) + 8|0);
 $486 = ((($x2488)) + 8|0);
 $487 = ((($this)) + 8|0);
 $488 = ((($this)) + 16|0);
 $489 = ((($x2521)) + 8|0);
 $490 = ((($x2522)) + 8|0);
 $491 = ((($this)) + 8|0);
 $492 = ((($this)) + 16|0);
 $493 = ((($x2562)) + 8|0);
 $494 = ((($x2563)) + 8|0);
 $495 = ((($this)) + 8|0);
 $496 = ((($this)) + 16|0);
 $497 = ((($x2598)) + 8|0);
 $498 = ((($x2599)) + 8|0);
 $499 = ((($this)) + 8|0);
 $500 = ((($this)) + 16|0);
 $501 = ((($x2639)) + 8|0);
 $502 = ((($j4array806)) + 8|0);
 $503 = ((($sj4array808)) + 8|0);
 $504 = ((($cj4array807)) + 8|0);
 $505 = ((($j4valid809)) + 1|0);
 $506 = ((($this)) + 8|0);
 $507 = ((($this)) + 16|0);
 $508 = ((($x2656)) + 8|0);
 $509 = ((($x2657)) + 8|0);
 $510 = ((($this)) + 8|0);
 $511 = ((($this)) + 16|0);
 $512 = ((($x2679)) + 8|0);
 $513 = ((($x2680)) + 8|0);
 $514 = ((($this)) + 8|0);
 $515 = ((($this)) + 16|0);
 $516 = ((($x2708)) + 8|0);
 $517 = ((($j4array834)) + 8|0);
 $518 = ((($sj4array836)) + 8|0);
 $519 = ((($cj4array835)) + 8|0);
 $520 = ((($j4valid837)) + 1|0);
 $521 = ((($this)) + 8|0);
 $522 = ((($this)) + 16|0);
 $523 = ((($x2725)) + 8|0);
 $524 = ((($x2726)) + 8|0);
 $525 = ((($this)) + 8|0);
 $526 = ((($this)) + 16|0);
 $527 = ((($x2747)) + 8|0);
 $528 = ((($x2748)) + 8|0);
 $529 = ((($this)) + 8|0);
 $530 = ((($this)) + 16|0);
 $531 = ((($x2784)) + 8|0);
 $532 = ((($x2785)) + 8|0);
 $533 = ((($this)) + 8|0);
 $534 = ((($this)) + 16|0);
 $535 = ((($x2836)) + 8|0);
 $536 = ((($x2837)) + 8|0);
 $537 = ((($this)) + 8|0);
 $538 = ((($this)) + 16|0);
 $539 = ((($x2886)) + 8|0);
 $540 = ((($x2887)) + 8|0);
 $541 = ((($this)) + 8|0);
 $542 = ((($this)) + 16|0);
 $543 = ((($x2939)) + 8|0);
 $544 = ((($j4array892)) + 8|0);
 $545 = ((($sj4array894)) + 8|0);
 $546 = ((($cj4array893)) + 8|0);
 $547 = ((($j4valid895)) + 1|0);
 $548 = ((($this)) + 8|0);
 $549 = ((($this)) + 16|0);
 $550 = ((($x2956)) + 8|0);
 $551 = ((($x2957)) + 8|0);
 $552 = ((($this)) + 8|0);
 $553 = ((($this)) + 16|0);
 $554 = ((($x2978)) + 8|0);
 $555 = ((($x2979)) + 8|0);
 $556 = ((($this)) + 8|0);
 $557 = ((($this)) + 16|0);
 $558 = ((($x3009)) + 8|0);
 $559 = ((($j4array920)) + 8|0);
 $560 = ((($sj4array922)) + 8|0);
 $561 = ((($cj4array921)) + 8|0);
 $562 = ((($j4valid923)) + 1|0);
 $563 = ((($this)) + 8|0);
 $564 = ((($this)) + 16|0);
 $565 = ((($x3026)) + 8|0);
 $566 = ((($x3027)) + 8|0);
 $567 = ((($this)) + 8|0);
 $568 = ((($this)) + 16|0);
 $569 = ((($x3049)) + 8|0);
 $570 = ((($x3050)) + 8|0);
 $571 = ((($this)) + 8|0);
 $572 = ((($this)) + 16|0);
 $573 = ((($x3088)) + 8|0);
 $574 = ((($x3089)) + 8|0);
 $575 = ((($this)) + 8|0);
 $576 = ((($this)) + 16|0);
 $577 = ((($x3140)) + 8|0);
 $578 = ((($x3141)) + 8|0);
 $579 = ((($this)) + 8|0);
 $580 = ((($this)) + 16|0);
 $581 = ((($x3190)) + 8|0);
 $582 = ((($x3191)) + 8|0);
 $583 = ((($this)) + 8|0);
 $584 = ((($this)) + 16|0);
 $585 = ((($x3251)) + 8|0);
 $586 = ((($x3252)) + 8|0);
 $587 = ((($this)) + 8|0);
 $588 = ((($this)) + 16|0);
 $589 = ((($x3307)) + 8|0);
 $590 = ((($x3308)) + 8|0);
 $591 = ((($this)) + 8|0);
 $592 = ((($this)) + 16|0);
 $593 = ((($x3355)) + 8|0);
 $594 = ((($x3356)) + 8|0);
 $595 = ((($this)) + 8|0);
 $596 = ((($this)) + 16|0);
 $597 = HEAP32[$solutions>>2]|0;
 $598 = ((($597)) + 20|0);
 $599 = HEAP32[$598>>2]|0;
 FUNCTION_TABLE_vi[$599 & 127]($solutions);
 $600 = +HEAPF64[$pfree>>3];
 HEAPF64[$22>>3] = $600;
 $601 = +HEAPF64[$pfree>>3];
 $602 = (+Math_cos((+$601)));
 HEAPF64[$23>>3] = $602;
 $603 = +HEAPF64[$pfree>>3];
 $604 = (+Math_sin((+$603)));
 HEAPF64[$24>>3] = $604;
 $605 = +HEAPF64[$pfree>>3];
 $606 = $605 * 0.5;
 $607 = (+Math_tan((+$606)));
 HEAPF64[$25>>3] = $607;
 $608 = +HEAPF64[$eerot>>3];
 HEAPF64[$26>>3] = $608;
 $609 = +HEAPF64[$27>>3];
 HEAPF64[$28>>3] = $609;
 $610 = +HEAPF64[$29>>3];
 HEAPF64[$30>>3] = $610;
 $611 = +HEAPF64[$31>>3];
 HEAPF64[$32>>3] = $611;
 $612 = +HEAPF64[$33>>3];
 HEAPF64[$34>>3] = $612;
 $613 = +HEAPF64[$35>>3];
 HEAPF64[$36>>3] = $613;
 $614 = +HEAPF64[$37>>3];
 HEAPF64[$38>>3] = $614;
 $615 = +HEAPF64[$39>>3];
 HEAPF64[$40>>3] = $615;
 $616 = +HEAPF64[$41>>3];
 HEAPF64[$42>>3] = $616;
 $617 = +HEAPF64[$eetrans>>3];
 HEAPF64[$43>>3] = $617;
 $618 = +HEAPF64[$44>>3];
 HEAPF64[$45>>3] = $618;
 $619 = +HEAPF64[$46>>3];
 HEAPF64[$47>>3] = $619;
 $620 = +HEAPF64[$34>>3];
 $621 = $620 * 0.5;
 $622 = +HEAPF64[$28>>3];
 $623 = $622 * 0.5;
 $624 = $623 - $621;
 $625 = +HEAPF64[$40>>3];
 $626 = $625 * 0.70710678118654802;
 $627 = $624 + $626;
 HEAPF64[$48>>3] = $627;
 $628 = +HEAPF64[$38>>3];
 $629 = $628 * 0.70710678118654802;
 $630 = +HEAPF64[$32>>3];
 $631 = $630 * 0.5;
 $632 = $631 - $629;
 $633 = +HEAPF64[$26>>3];
 $634 = $633 * 0.5;
 $635 = $632 - $634;
 HEAPF64[$49>>3] = $635;
 $636 = +HEAPF64[$36>>3];
 $637 = $636 * 0.5;
 $638 = +HEAPF64[$30>>3];
 $639 = $638 * 0.5;
 $640 = $639 - $637;
 $641 = +HEAPF64[$42>>3];
 $642 = $641 * 0.70710678118654802;
 $643 = $640 + $642;
 HEAPF64[$50>>3] = $643;
 $644 = +HEAPF64[$42>>3];
 $645 = $644 * 0.033905770157894997;
 $646 = -0.26754162883652299 - $645;
 $647 = +HEAPF64[$47>>3];
 $648 = $647 * 0.70710678118654802;
 $649 = $646 + $648;
 $650 = +HEAPF64[$36>>3];
 $651 = $650 * 0.023975;
 $652 = $649 + $651;
 $653 = +HEAPF64[$43>>3];
 $654 = $653 * 0.5;
 $655 = $652 + $654;
 $656 = +HEAPF64[$30>>3];
 $657 = $656 * 0.023975;
 $658 = $655 - $657;
 $659 = +HEAPF64[$45>>3];
 $660 = $659 * 0.5;
 $661 = $658 - $660;
 HEAPF64[$51>>3] = $661;
 $662 = +HEAPF64[$34>>3];
 $663 = $662 * 0.5;
 $664 = +HEAPF64[$28>>3];
 $665 = $664 * 0.5;
 $666 = $663 - $665;
 $667 = +HEAPF64[$40>>3];
 $668 = $667 * 0.70710678118654802;
 $669 = $666 + $668;
 HEAPF64[$52>>3] = $669;
 $670 = +HEAPF64[$38>>3];
 $671 = $670 * 0.70710678118654802;
 $672 = +HEAPF64[$32>>3];
 $673 = $672 * -0.5;
 $674 = $673 - $671;
 $675 = +HEAPF64[$26>>3];
 $676 = $675 * 0.5;
 $677 = $674 + $676;
 HEAPF64[$53>>3] = $677;
 $678 = +HEAPF64[$36>>3];
 $679 = $678 * 0.5;
 $680 = +HEAPF64[$30>>3];
 $681 = $680 * 0.5;
 $682 = $679 - $681;
 $683 = +HEAPF64[$42>>3];
 $684 = $683 * 0.70710678118654802;
 $685 = $682 + $684;
 HEAPF64[$54>>3] = $685;
 $686 = +HEAPF64[$42>>3];
 $687 = $686 * 0.033905770157894997;
 $688 = -0.26754162883652299 - $687;
 $689 = +HEAPF64[$30>>3];
 $690 = $689 * 0.023975;
 $691 = $688 + $690;
 $692 = +HEAPF64[$47>>3];
 $693 = $692 * 0.70710678118654802;
 $694 = $691 + $693;
 $695 = +HEAPF64[$45>>3];
 $696 = $695 * 0.5;
 $697 = $694 + $696;
 $698 = +HEAPF64[$43>>3];
 $699 = $698 * 0.5;
 $700 = $697 - $699;
 $701 = +HEAPF64[$36>>3];
 $702 = $701 * 0.023975;
 $703 = $700 - $702;
 HEAPF64[$55>>3] = $703;
 $704 = +HEAPF64[$28>>3];
 $705 = $704 * 0.70710678118654802;
 $706 = +HEAPF64[$34>>3];
 $707 = $706 * -0.70710678118654802;
 $708 = $707 - $705;
 HEAPF64[$56>>3] = $708;
 $709 = +HEAPF64[$32>>3];
 $710 = $709 * 0.70710678118654802;
 $711 = +HEAPF64[$26>>3];
 $712 = $711 * 0.70710678118654802;
 $713 = $710 + $712;
 HEAPF64[$57>>3] = $713;
 $714 = +HEAPF64[$30>>3];
 $715 = $714 * 0.70710678118654802;
 $716 = +HEAPF64[$36>>3];
 $717 = $716 * -0.70710678118654802;
 $718 = $717 - $715;
 HEAPF64[$58>>3] = $718;
 $719 = +HEAPF64[$30>>3];
 $720 = $719 * 0.033905770157894997;
 $721 = $720 + -0.49522506263112298;
 $722 = +HEAPF64[$36>>3];
 $723 = $722 * 0.033905770157894997;
 $724 = $721 + $723;
 $725 = +HEAPF64[$45>>3];
 $726 = $725 * 0.70710678118654802;
 $727 = $724 - $726;
 $728 = +HEAPF64[$43>>3];
 $729 = $728 * 0.70710678118654802;
 $730 = $727 - $729;
 HEAPF64[$59>>3] = $730;
 $731 = +HEAPF64[$48>>3];
 HEAPF64[$26>>3] = $731;
 $732 = +HEAPF64[$49>>3];
 HEAPF64[$28>>3] = $732;
 $733 = +HEAPF64[$50>>3];
 HEAPF64[$30>>3] = $733;
 $734 = +HEAPF64[$52>>3];
 HEAPF64[$32>>3] = $734;
 $735 = +HEAPF64[$53>>3];
 HEAPF64[$34>>3] = $735;
 $736 = +HEAPF64[$54>>3];
 HEAPF64[$36>>3] = $736;
 $737 = +HEAPF64[$56>>3];
 HEAPF64[$38>>3] = $737;
 $738 = +HEAPF64[$57>>3];
 HEAPF64[$40>>3] = $738;
 $739 = +HEAPF64[$58>>3];
 HEAPF64[$42>>3] = $739;
 $740 = +HEAPF64[$51>>3];
 HEAPF64[$43>>3] = $740;
 $741 = +HEAPF64[$55>>3];
 HEAPF64[$45>>3] = $741;
 $742 = +HEAPF64[$59>>3];
 HEAPF64[$47>>3] = $742;
 $743 = +HEAPF64[$43>>3];
 $744 = +HEAPF64[$45>>3];
 $745 = $743 * $743;
 $746 = $744 * $744;
 $747 = $745 + $746;
 $748 = $742 * $742;
 $749 = $748 + $747;
 HEAPF64[$60>>3] = $749;
 $750 = +HEAPF64[$43>>3];
 $751 = +HEAPF64[$26>>3];
 $752 = $750 * $751;
 $753 = +HEAPF64[$45>>3];
 $754 = +HEAPF64[$32>>3];
 $755 = $753 * $754;
 $756 = $752 + $755;
 $757 = +HEAPF64[$47>>3];
 $758 = +HEAPF64[$38>>3];
 $759 = $757 * $758;
 $760 = $756 + $759;
 HEAPF64[$61>>3] = $760;
 $761 = +HEAPF64[$43>>3];
 $762 = +HEAPF64[$28>>3];
 $763 = $761 * $762;
 $764 = +HEAPF64[$45>>3];
 $765 = +HEAPF64[$34>>3];
 $766 = $764 * $765;
 $767 = $763 + $766;
 $768 = +HEAPF64[$47>>3];
 $769 = +HEAPF64[$40>>3];
 $770 = $768 * $769;
 $771 = $767 + $770;
 HEAPF64[$62>>3] = $771;
 $772 = +HEAPF64[$43>>3];
 $773 = +HEAPF64[$30>>3];
 $774 = $772 * $773;
 $775 = +HEAPF64[$45>>3];
 $776 = +HEAPF64[$36>>3];
 $777 = $775 * $776;
 $778 = $774 + $777;
 $779 = +HEAPF64[$47>>3];
 $780 = +HEAPF64[$42>>3];
 $781 = $779 * $780;
 $782 = $778 + $781;
 HEAPF64[$63>>3] = $782;
 $783 = +HEAPF64[$38>>3];
 $784 = $744 * $783;
 $785 = +HEAPF64[$47>>3];
 $786 = +HEAPF64[$32>>3];
 $787 = $785 * $786;
 $788 = $787 - $784;
 HEAPF64[$64>>3] = $788;
 $789 = +HEAPF64[$43>>3];
 $790 = +HEAPF64[$38>>3];
 $791 = $789 * $790;
 $792 = +HEAPF64[$26>>3];
 $793 = $742 * $792;
 $794 = $791 - $793;
 HEAPF64[$65>>3] = $794;
 $795 = +HEAPF64[$32>>3];
 $796 = $743 * $795;
 $797 = +HEAPF64[$45>>3];
 $798 = +HEAPF64[$26>>3];
 $799 = $797 * $798;
 $800 = $799 - $796;
 HEAPF64[$66>>3] = $800;
 $801 = +HEAPF64[$40>>3];
 $802 = $744 * $801;
 $803 = +HEAPF64[$47>>3];
 $804 = +HEAPF64[$34>>3];
 $805 = $803 * $804;
 $806 = $805 - $802;
 HEAPF64[$67>>3] = $806;
 $807 = +HEAPF64[$43>>3];
 $808 = +HEAPF64[$40>>3];
 $809 = $807 * $808;
 $810 = +HEAPF64[$28>>3];
 $811 = $742 * $810;
 $812 = $809 - $811;
 HEAPF64[$68>>3] = $812;
 $813 = +HEAPF64[$34>>3];
 $814 = $743 * $813;
 $815 = +HEAPF64[$45>>3];
 $816 = +HEAPF64[$28>>3];
 $817 = $815 * $816;
 $818 = $817 - $814;
 HEAPF64[$69>>3] = $818;
 $819 = +HEAPF64[$47>>3];
 $820 = +HEAPF64[$36>>3];
 $821 = $819 * $820;
 $822 = +HEAPF64[$42>>3];
 $823 = $744 * $822;
 $824 = $821 - $823;
 HEAPF64[$70>>3] = $824;
 $825 = +HEAPF64[$43>>3];
 $826 = +HEAPF64[$42>>3];
 $827 = $825 * $826;
 $828 = +HEAPF64[$30>>3];
 $829 = $742 * $828;
 $830 = $827 - $829;
 HEAPF64[$71>>3] = $830;
 $831 = +HEAPF64[$36>>3];
 $832 = $743 * $831;
 $833 = +HEAPF64[$45>>3];
 $834 = +HEAPF64[$30>>3];
 $835 = $833 * $834;
 $836 = $835 - $832;
 HEAPF64[$72>>3] = $836;
 HEAP16[$j7valid>>1] = 0;
 HEAP8[$10>>0] = 2;
 $837 = +HEAPF64[$60>>3];
 $838 = $837 * 2.9867963734810998;
 $839 = 1.18441410190393 - $838;
 $840 = $839 < -1.0000020000000001;
 $841 = $839 > 1.0000020000000001;
 $or$cond = $840 | $841;
 if ($or$cond) {
  $19125 = HEAP32[$solutions>>2]|0;
  $19126 = ((($19125)) + 16|0);
  $19127 = HEAP32[$19126>>2]|0;
  $19128 = (FUNCTION_TABLE_ii[$19127 & 63]($solutions)|0);
  $19129 = ($19128|0)!=(0);
  STACKTOP = sp;return ($19129|0);
 }
 $842 = ((($cj7array)) + 8|0);
 $843 = ((($sj7array)) + 8|0);
 $844 = (+__Z6IKasind($839));
 $845 = -1.3402700370563301 - $844;
 HEAPF64[$j7array>>3] = $845;
 $846 = (+__Z5IKsind($845));
 HEAPF64[$sj7array>>3] = $846;
 $847 = (+__Z5IKcosd($845));
 HEAPF64[$cj7array>>3] = $847;
 $848 = $844 + 1.8013226165334599;
 HEAPF64[$73>>3] = $848;
 $849 = (+__Z5IKsind($848));
 HEAPF64[$843>>3] = $849;
 $850 = +HEAPF64[$73>>3];
 $851 = (+__Z5IKcosd($850));
 HEAPF64[$842>>3] = $851;
 $852 = +HEAPF64[$j7array>>3];
 $853 = $852 > 3.14159265358979;
 if ($853) {
  $854 = $852 + -6.2831853071795898;
  HEAPF64[$j7array>>3] = $854;
 } else {
  $855 = $852 < -3.14159265358979;
  if ($855) {
   $856 = $852 + 6.2831853071795898;
   HEAPF64[$j7array>>3] = $856;
  }
 }
 HEAP8[$j7valid>>0] = 1;
 $857 = +HEAPF64[$73>>3];
 $858 = $857 > 3.14159265358979;
 if ($858) {
  $859 = $857 + -6.2831853071795898;
  HEAPF64[$73>>3] = $859;
 } else {
  $860 = $857 < -3.14159265358979;
  if ($860) {
   $861 = $857 + 6.2831853071795898;
   HEAPF64[$73>>3] = $861;
  }
 }
 HEAP8[$74>>0] = 1;
 $ij7$01498 = 0;
 while(1) {
  $862 = (($j7valid) + ($ij7$01498)|0);
  $863 = HEAP8[$862>>0]|0;
  $864 = ($863<<24>>24)==(0);
  L16: do {
   if (!($864)) {
    $865 = $ij7$01498&255;
    HEAP8[$8>>0] = $865;
    HEAP8[$9>>0] = -1;
    $iij7$0956 = (($ij7$01498) + 1)|0;
    $866 = ($iij7$0956|0)<(2);
    if ($866) {
     $867 = (($sj7array) + ($ij7$01498<<3)|0);
     $868 = (($j7valid) + ($iij7$0956)|0);
     $869 = HEAP8[$868>>0]|0;
     $870 = ($869<<24>>24)==(0);
     if (!($870)) {
      $871 = (($cj7array) + ($ij7$01498<<3)|0);
      $872 = +HEAPF64[$871>>3];
      $873 = (($cj7array) + ($iij7$0956<<3)|0);
      $874 = +HEAPF64[$873>>3];
      $875 = $872 - $874;
      $876 = (+__Z5IKabsd($875));
      $877 = $876 < 9.9999999999999995E-7;
      if ($877) {
       $878 = +HEAPF64[$867>>3];
       $879 = (($sj7array) + ($iij7$0956<<3)|0);
       $880 = +HEAPF64[$879>>3];
       $881 = $878 - $880;
       $882 = (+__Z5IKabsd($881));
       $883 = $882 < 9.9999999999999995E-7;
       if ($883) {
        HEAP8[$868>>0] = 0;
        $884 = $iij7$0956&255;
        HEAP8[$9>>0] = $884;
       }
      }
     }
    }
    $885 = (($j7array) + ($ij7$01498<<3)|0);
    $886 = +HEAPF64[$885>>3];
    HEAPF64[$7>>3] = $886;
    $887 = (($cj7array) + ($ij7$01498<<3)|0);
    $888 = +HEAPF64[$887>>3];
    HEAPF64[$75>>3] = $888;
    $889 = (($sj7array) + ($ij7$01498<<3)|0);
    $890 = +HEAPF64[$889>>3];
    HEAPF64[$76>>3] = $890;
    $891 = +HEAPF64[$23>>3];
    $892 = $891 * $891;
    $893 = $890 * $890;
    $894 = +HEAPF64[$75>>3];
    $895 = $894 * $894;
    $896 = $891 * 3.0;
    $897 = $890 * 13.3333333333333;
    $898 = $897 * $892;
    $899 = $892 * 44.4444444444444;
    $900 = $893 * $899;
    $901 = $900 + 149.38271604938299;
    $902 = $894 * -2.0;
    $903 = $892 * $902;
    $904 = $903 + $901;
    $905 = $890 * 24.4444444444444;
    $906 = $905 + $904;
    $907 = -$894;
    $908 = $898 * $907;
    $909 = $908 + $906;
    $910 = $898 + $909;
    $911 = $893 + $910;
    $912 = $892 + $911;
    $913 = $894 * 13.3333333333333;
    $914 = $890 * $913;
    $915 = $914 + $912;
    $916 = $895 * 44.4444444444444;
    $917 = $916 + $915;
    $918 = $894 * 162.96296296296299;
    $919 = $918 + $917;
    $920 = $892 * $895;
    $921 = $920 + $919;
    $922 = (+__Z5IKabsd($921));
    $923 = $922 < 9.9999999999999995E-7;
    if (!($923)) {
     $924 = $890 * 0.044999999999999998;
     $925 = -0.55000000000000004 - $924;
     $926 = $894 * 0.29999999999999999;
     $927 = $925 - $926;
     $928 = (+__Z5IKabsd($927));
     $929 = $896 * $907;
     $930 = $891 * 20.0;
     $931 = $890 * $930;
     $932 = $929 + $931;
     $933 = $896 + $932;
     $934 = (+__Z5IKabsd($933));
     $935 = $928 * 66.6666666666667;
     $936 = $934 + $935;
     $937 = (+__Z5IKabsd($936));
     $938 = $937 < 9.9999999999999995E-7;
     if (!($938)) {
      HEAP16[$j5valid548>>1] = 0;
      HEAP8[$6>>0] = 2;
      $11958 = +HEAPF64[$23>>3];
      $11959 = $11958 * 0.044999999999999998;
      $11960 = +HEAPF64[$76>>3];
      $11961 = $11960 * 0.044999999999999998;
      $11962 = -0.55000000000000004 - $11961;
      $11963 = +HEAPF64[$75>>3];
      $11964 = $11963 * 0.29999999999999999;
      $11965 = $11962 - $11964;
      $11966 = $11959 * $11963;
      $11967 = $11958 * 0.29999999999999999;
      $11968 = $11967 * $11960;
      $11969 = $11968 - $11966;
      $11970 = $11959 + $11969;
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1914,$11965,$11970,1.9999999999999999E-6);
      $11971 = HEAP8[$377>>0]|0;
      $11972 = ($11971<<24>>24)==(0);
      if ($11972) {
       break;
      }
      $11973 = +HEAPF64[$x1914>>3];
      $11974 = $11965 * $11965;
      $11975 = $11970 * $11970;
      $11976 = $11974 + $11975;
      $11977 = $11976 < -1.0000000000000001E-5;
      if ($11977) {
       break;
      }
      $11978 = (+__Z6IKsqrtd($11976));
      $11979 = (+__Z5IKabsd($11978));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1915,$11979,-1);
      $11980 = HEAP8[$378>>0]|0;
      $11981 = ($11980<<24>>24)==(0);
      if ($11981) {
       break;
      }
      $11982 = +HEAPF64[$47>>3];
      $11983 = +HEAPF64[$x1915>>3];
      $11984 = $11982 * $11983;
      $11985 = $11984 < -1.0000020000000001;
      $11986 = $11984 > 1.0000020000000001;
      $or$cond296 = $11985 | $11986;
      if ($or$cond296) {
       break;
      }
      $11987 = (+__Z6IKasind($11984));
      $11988 = -$11973;
      $11989 = $11988 - $11987;
      HEAPF64[$j5array545>>3] = $11989;
      $11990 = (+__Z5IKsind($11989));
      HEAPF64[$sj5array547>>3] = $11990;
      $11991 = (+__Z5IKcosd($11989));
      HEAPF64[$cj5array546>>3] = $11991;
      $11992 = $11987 + 3.14159265358979;
      $11993 = $11992 - $11973;
      HEAPF64[$379>>3] = $11993;
      $11994 = (+__Z5IKsind($11993));
      HEAPF64[$380>>3] = $11994;
      $11995 = +HEAPF64[$379>>3];
      $11996 = (+__Z5IKcosd($11995));
      HEAPF64[$381>>3] = $11996;
      $11997 = +HEAPF64[$j5array545>>3];
      $11998 = $11997 > 3.14159265358979;
      if ($11998) {
       $11999 = $11997 + -6.2831853071795898;
       HEAPF64[$j5array545>>3] = $11999;
      } else {
       $12000 = $11997 < -3.14159265358979;
       if ($12000) {
        $12001 = $11997 + 6.2831853071795898;
        HEAPF64[$j5array545>>3] = $12001;
       }
      }
      HEAP8[$j5valid548>>0] = 1;
      $12002 = +HEAPF64[$379>>3];
      $12003 = $12002 > 3.14159265358979;
      if ($12003) {
       $12004 = $12002 + -6.2831853071795898;
       HEAPF64[$379>>3] = $12004;
      } else {
       $12005 = $12002 < -3.14159265358979;
       if ($12005) {
        $12006 = $12002 + 6.2831853071795898;
        HEAPF64[$379>>3] = $12006;
       }
      }
      HEAP8[$382>>0] = 1;
      $ij5549$01149 = 0;
      while(1) {
       $12007 = (($j5valid548) + ($ij5549$01149)|0);
       $12008 = HEAP8[$12007>>0]|0;
       $12009 = ($12008<<24>>24)==(0);
       L43: do {
        if (!($12009)) {
         $12010 = $ij5549$01149&255;
         HEAP8[$4>>0] = $12010;
         HEAP8[$5>>0] = -1;
         $iij5550$0958 = (($ij5549$01149) + 1)|0;
         $12011 = ($iij5550$0958|0)<(2);
         do {
          if ($12011) {
           $12012 = (($sj5array547) + ($ij5549$01149<<3)|0);
           $12013 = (($j5valid548) + ($iij5550$0958)|0);
           $12014 = HEAP8[$12013>>0]|0;
           $12015 = ($12014<<24>>24)==(0);
           if ($12015) {
            break;
           }
           $12016 = (($cj5array546) + ($ij5549$01149<<3)|0);
           $12017 = +HEAPF64[$12016>>3];
           $12018 = (($cj5array546) + ($iij5550$0958<<3)|0);
           $12019 = +HEAPF64[$12018>>3];
           $12020 = $12017 - $12019;
           $12021 = (+__Z5IKabsd($12020));
           $12022 = $12021 < 9.9999999999999995E-7;
           if (!($12022)) {
            break;
           }
           $12023 = +HEAPF64[$12012>>3];
           $12024 = (($sj5array547) + ($iij5550$0958<<3)|0);
           $12025 = +HEAPF64[$12024>>3];
           $12026 = $12023 - $12025;
           $12027 = (+__Z5IKabsd($12026));
           $12028 = $12027 < 9.9999999999999995E-7;
           if (!($12028)) {
            break;
           }
           HEAP8[$12013>>0] = 0;
           $12029 = $iij5550$0958&255;
           HEAP8[$5>>0] = $12029;
          }
         } while(0);
         $12030 = (($j5array545) + ($ij5549$01149<<3)|0);
         $12031 = +HEAPF64[$12030>>3];
         HEAPF64[$3>>3] = $12031;
         $12032 = (($cj5array546) + ($ij5549$01149<<3)|0);
         $12033 = +HEAPF64[$12032>>3];
         HEAPF64[$383>>3] = $12033;
         $12034 = (($sj5array547) + ($ij5549$01149<<3)|0);
         $12035 = +HEAPF64[$12034>>3];
         HEAPF64[$384>>3] = $12035;
         $12036 = +HEAPF64[$60>>3];
         $12037 = $12035 * $12036;
         $12038 = +HEAPF64[$47>>3];
         $12039 = $12038 * $12038;
         $12040 = $12035 * $12039;
         $12041 = $12040 - $12037;
         $12042 = (+__Z5IKabsd($12041));
         $12043 = $12042 < 9.9999999999999995E-7;
         do {
          if (!($12043)) {
           $12044 = (+__Z6IKsignd($12041));
           $12045 = (+__Z5IKabsd($12044));
           $12046 = $12045 < 9.9999999999999995E-7;
           if ($12046) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $18893 = +HEAPF64[$45>>3];
           $18894 = +HEAPF64[$43>>3];
           $18895 = $18894 * 0.38890872965260098;
           $18896 = +HEAPF64[$75>>3];
           $18897 = $18894 * $18896;
           $18898 = +HEAPF64[$76>>3];
           $18899 = $18898 * 0.031819805153394602;
           $18900 = $18897 * 0.21213203435596401;
           $18901 = $18894 * $18899;
           $18902 = +HEAPF64[$383>>3];
           $18903 = $18902 * 0.70710678118654802;
           $18904 = +HEAPF64[$47>>3];
           $18905 = $18903 * $18904;
           $18906 = +HEAPF64[$384>>3];
           $18907 = $18906 * 0.031819805153394602;
           $18908 = +HEAPF64[$24>>3];
           $18909 = $18907 * $18908;
           $18910 = $18894 * $18909;
           $18911 = $18894 * $18905;
           $18912 = $18893 * $18905;
           $18913 = $18893 * $18909;
           $18914 = $18906 * 0.21213203435596401;
           $18915 = $18914 * $18908;
           $18916 = $18898 * $18915;
           $18917 = $18894 * $18916;
           $18918 = $18896 * $18913;
           $18919 = $18893 * $18916;
           $18920 = $18911 + $18918;
           $18921 = $18910 + $18917;
           $18922 = $18912 + $18921;
           $18923 = $18913 + $18919;
           $18924 = $18895 + $18923;
           $18925 = $18900 + $18924;
           $18926 = $18901 + $18925;
           $18927 = +HEAPF64[$60>>3];
           $18928 = $18906 * $18927;
           $18929 = $18904 * $18904;
           $18930 = $18906 * $18929;
           $18931 = $18930 - $18928;
           $18932 = (+__Z6IKsignd($18931));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x3355,$18932,-1);
           $18933 = HEAP8[$593>>0]|0;
           $18934 = ($18933<<24>>24)==(0);
           if ($18934) {
            break L43;
           }
           $18935 = $18897 * $18909;
           $18936 = $18893 * 0.38890872965260098;
           $18937 = $18936 + $18935;
           $18938 = $18896 * 0.21213203435596401;
           $18939 = $18893 * $18938;
           $18940 = $18939 + $18937;
           $18941 = $18893 * $18899;
           $18942 = $18941 + $18940;
           $18943 = -$18920;
           $18944 = $18943 - $18942;
           $18945 = $18944 + $18926;
           $18946 = $18922 + $18945;
           $18947 = -$18926;
           $18948 = $18947 - $18942;
           $18949 = $18920 + $18948;
           $18950 = $18922 + $18949;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x3356,$18946,$18950,1.9999999999999999E-6);
           $18951 = HEAP8[$594>>0]|0;
           $18952 = ($18951<<24>>24)==(0);
           if ($18952) {
            break L43;
           }
           $18953 = +HEAPF64[$x3355>>3];
           $18954 = $18953 * 1.5707963267949001;
           $18955 = $18954 + -1.5707963267949001;
           $18956 = +HEAPF64[$x3356>>3];
           $18957 = $18956 + $18955;
           $18958 = (+__Z5IKsind($18957));
           $18959 = (+__Z5IKcosd($18957));
           $18960 = $18957 > 3.14159265358979;
           do {
            if ($18960) {
             $18961 = $18957 + -6.2831853071795898;
             $18964 = $18961;
            } else {
             $18962 = $18957 < -3.14159265358979;
             if (!($18962)) {
              $18964 = $18957;
              break;
             }
             $18963 = $18957 + 6.2831853071795898;
             $18964 = $18963;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $18964;
           HEAPF64[$595>>3] = $18959;
           HEAPF64[$596>>3] = $18958;
           $18965 = +HEAPF64[$this>>3];
           $18966 = (+__Z5IKsind($18965));
           $18967 = (+__Z5IKcosd($18965));
           $18968 = +HEAPF64[$75>>3];
           $18969 = $18968 * 0.044999999999999998;
           $18970 = +HEAPF64[$24>>3];
           $18971 = $18970 * 0.70710678118654802;
           $18972 = +HEAPF64[$384>>3];
           $18973 = $18972 * 0.77781745930520196;
           $18974 = +HEAPF64[$76>>3];
           $18975 = $18974 * 0.29999999999999999;
           $18976 = +HEAPF64[$383>>3];
           $18977 = +HEAPF64[$47>>3];
           $18978 = $18976 * $18977;
           $18979 = +HEAPF64[$23>>3];
           $18980 = $18976 * $18979;
           $18981 = $18974 * 0.044999999999999998;
           $18982 = $18972 * 0.70710678118654802;
           $18983 = $18979 * 0.70710678118654802;
           $18984 = $18968 * 0.29999999999999999;
           $18985 = +HEAPF64[$43>>3];
           $18986 = $18985 * 0.063639610306789302;
           $18987 = $18970 * $18986;
           $18988 = $18966 * $18985;
           $18989 = $18977 * $18979;
           $18990 = $18972 * $18989;
           $18991 = $18967 * $18985;
           $18992 = +HEAPF64[$45>>3];
           $18993 = $18966 * $18992;
           $18994 = $18988 * 0.70710678118654802;
           $18995 = $18991 * 0.70710678118654802;
           $18996 = $18992 * 0.70710678118654802;
           $18997 = $18967 * $18996;
           $18998 = $18993 * 0.70710678118654802;
           $18999 = $18992 * 0.063639610306789302;
           $19000 = $18967 * $18999;
           $19001 = $18995 + $18998;
           $19002 = $18970 * $18969;
           $19003 = $19001 - $19002;
           $19004 = $18994 + $19003;
           $19005 = $18970 * 0.044999999999999998;
           $19006 = $19005 + $19004;
           $19007 = $18970 * $18975;
           $19008 = $19007 + $19006;
           $19009 = $19008 - $18997;
           $19010 = $18967 * $18992;
           $19011 = $18969 * $18980;
           $19012 = $18975 * $18980;
           $19013 = $19012 - $19011;
           $19014 = $18984 * $18972;
           $19015 = $19014 + $19013;
           $19016 = $18972 * $18981;
           $19017 = $19016 + $19015;
           $19018 = $18994 + $19017;
           $19019 = $19018 - $18997;
           $19020 = $19019 - $19001;
           $19021 = $18972 * 0.55000000000000004;
           $19022 = $19021 + $19020;
           $19023 = $18980 * 0.044999999999999998;
           $19024 = $19023 + $19022;
           $19025 = $18976 * $18992;
           $19026 = $18967 * $19025;
           $19027 = $18971 * $19026;
           $19028 = $18971 * $18976;
           $19029 = $19028 * $18988;
           $19030 = $19027 - $19029;
           $19031 = $19028 * $18991;
           $19032 = $19031 + $19030;
           $19033 = $19028 * $18993;
           $19034 = $19033 + $19032;
           $19035 = $18983 * $18993;
           $19036 = $19035 + $19034;
           $19037 = $18983 * $18991;
           $19038 = $19037 + $19036;
           $19039 = $18983 * $18988;
           $19040 = $19039 + $19038;
           $19041 = -$19010;
           $19042 = $18983 * $19041;
           $19043 = $19042 + $19040;
           $19044 = $18972 * $18977;
           $19045 = $18970 * $19044;
           $19046 = $19043 - $19045;
           $19047 = 0.044999999999999998 - $18969;
           $19048 = $18971 * $18988;
           $19049 = $19047 + $19048;
           $19050 = $18971 * $18993;
           $19051 = $19049 + $19050;
           $19052 = $18971 * $18991;
           $19053 = $19052 + $19051;
           $19054 = $18980 * $18994;
           $19055 = $19054 + $19053;
           $19056 = $18990 + $19055;
           $19057 = $18975 + $19056;
           $19058 = $18971 * $19041;
           $19059 = $19058 + $19057;
           $19060 = -$18980;
           $19061 = $18998 * $19060;
           $19062 = $19061 + $19059;
           $19063 = $18997 * $19060;
           $19064 = $19063 + $19062;
           $19065 = $18995 * $19060;
           $19066 = $19065 + $19064;
           $19067 = $18980 * -0.063639610306789302;
           $19068 = $19067 * $18988;
           $19069 = $19068 + -0.21249999999999999;
           $19070 = $18980 * 0.063639610306789302;
           $19071 = $19070 * $18993;
           $19072 = $19069 + $19071;
           $19073 = $19070 * $18991;
           $19074 = $19073 + $19072;
           $19075 = $18978 * 1.1000000000000001;
           $19076 = $19075 + $19074;
           $19077 = $18973 * $18993;
           $19078 = $19077 + $19076;
           $19079 = $18973 * $18991;
           $19080 = $19079 + $19078;
           $19081 = $18980 * $19000;
           $19082 = $19081 + $19080;
           $19083 = $18973 * $19010;
           $19084 = $19083 + $19082;
           $19085 = $18966 * $18987;
           $19086 = $19084 - $19085;
           $19087 = $18973 * $18988;
           $19088 = $19086 - $19087;
           $19089 = $18970 * -0.063639610306789302;
           $19090 = $19089 * $18993;
           $19091 = $19090 + $19088;
           $19092 = +HEAPF64[$60>>3];
           $19093 = $19091 - $19092;
           $19094 = $18990 * 0.089999999999999996;
           $19095 = $19093 - $19094;
           $19096 = $18970 * $19000;
           $19097 = $19096 + $19095;
           $19098 = $18967 * $18987;
           $19099 = $19097 - $19098;
           $19100 = (+__Z5IKabsd($19009));
           $19101 = $19100 > 5.0000000000000004E-6;
           if ($19101) {
            break L43;
           }
           $19102 = $18982 * $18988;
           $19103 = -0.55000000000000004 - $19102;
           $19104 = $18978 + $19103;
           $19105 = $19104 - $18984;
           $19106 = $19105 - $18981;
           $19107 = $18982 * $19010;
           $19108 = $19107 + $19106;
           $19109 = $18982 * $18993;
           $19110 = $19109 + $19108;
           $19111 = $18982 * $18991;
           $19112 = $19111 + $19110;
           $19113 = (+__Z5IKabsd($19112));
           $19114 = $19113 > 5.0000000000000004E-6;
           if ($19114) {
            break L43;
           }
           $19115 = (+__Z5IKabsd($19024));
           $19116 = $19115 > 5.0000000000000004E-6;
           if ($19116) {
            break L43;
           }
           $19117 = (+__Z5IKabsd($19046));
           $19118 = $19117 > 5.0000000000000004E-6;
           if ($19118) {
            break L43;
           }
           $19119 = (+__Z5IKabsd($19066));
           $19120 = $19119 > 5.0000000000000004E-6;
           if ($19120) {
            break L43;
           }
           $19121 = (+__Z5IKabsd($19099));
           $19122 = $19121 > 5.0000000000000004E-6;
           if ($19122) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $12047 = +HEAPF64[$23>>3];
         $12048 = +HEAPF64[$384>>3];
         $12049 = $12047 * $12048;
         $12050 = +HEAPF64[$47>>3];
         $12051 = $12050 * $12050;
         $12052 = $12049 * $12051;
         $12053 = +HEAPF64[$60>>3];
         $12054 = $12049 * $12053;
         $12055 = $12054 - $12052;
         $12056 = (+__Z5IKabsd($12055));
         $12057 = $12056 < 9.9999999999999995E-7;
         do {
          if (!($12057)) {
           $12058 = (+__Z6IKsignd($12055));
           $12059 = (+__Z5IKabsd($12058));
           $12060 = $12059 < 9.9999999999999995E-7;
           if ($12060) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $18652 = +HEAPF64[$43>>3];
           $18653 = $18652 * 0.38890872965260098;
           $18654 = +HEAPF64[$23>>3];
           $18655 = +HEAPF64[$384>>3];
           $18656 = $18654 * $18655;
           $18657 = +HEAPF64[$24>>3];
           $18658 = $18652 * $18657;
           $18659 = +HEAPF64[$47>>3];
           $18660 = $18659 * 0.70710678118654802;
           $18661 = +HEAPF64[$383>>3];
           $18662 = $18657 * $18661;
           $18663 = +HEAPF64[$75>>3];
           $18664 = $18663 * 0.21213203435596401;
           $18665 = $18654 * $18661;
           $18666 = +HEAPF64[$45>>3];
           $18667 = $18654 * $18666;
           $18668 = $18652 * $18654;
           $18669 = +HEAPF64[$76>>3];
           $18670 = $18669 * 0.031819805153394602;
           $18671 = $18667 * 0.38890872965260098;
           $18672 = $18654 * $18653;
           $18673 = $18666 * $18670;
           $18674 = $18666 * 0.38890872965260098;
           $18675 = $18662 * $18674;
           $18676 = $18668 * $18664;
           $18677 = $18664 * $18667;
           $18678 = $18667 * $18670;
           $18679 = $18658 * $18660;
           $18680 = $18668 * $18670;
           $18681 = $18653 * $18662;
           $18682 = $18657 * $18666;
           $18683 = $18660 * $18682;
           $18684 = $18662 * $18673;
           $18685 = $18662 * $18666;
           $18686 = $18664 * $18685;
           $18687 = $18658 * $18661;
           $18688 = $18687 * $18670;
           $18689 = $18660 * $18666;
           $18690 = $18665 * $18689;
           $18691 = $18687 * $18664;
           $18692 = $18652 * $18660;
           $18693 = $18692 * $18665;
           $18694 = $18693 + $18683;
           $18695 = $18677 + $18678;
           $18696 = $18679 + $18695;
           $18697 = $18671 + $18696;
           $18698 = $18691 + $18690;
           $18699 = $18698 + $18688;
           $18700 = $18681 + $18699;
           $18701 = $18686 + $18680;
           $18702 = $18701 + $18684;
           $18703 = $18676 + $18702;
           $18704 = $18675 + $18703;
           $18705 = $18672 + $18704;
           $18706 = $18694 + $18697;
           $18707 = $18706 - $18700;
           $18708 = $18707 - $18705;
           $18709 = $18697 + $18705;
           $18710 = $18709 - $18700;
           $18711 = $18710 - $18694;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x3307,$18708,$18711,1.9999999999999999E-6);
           $18712 = HEAP8[$589>>0]|0;
           $18713 = ($18712<<24>>24)==(0);
           if ($18713) {
            break L43;
           }
           $18714 = +HEAPF64[$47>>3];
           $18715 = $18714 * $18714;
           $18716 = $18656 * $18715;
           $18717 = +HEAPF64[$60>>3];
           $18718 = $18656 * $18717;
           $18719 = $18718 - $18716;
           $18720 = (+__Z6IKsignd($18719));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x3308,$18720,-1);
           $18721 = HEAP8[$590>>0]|0;
           $18722 = ($18721<<24>>24)==(0);
           if ($18722) {
            break L43;
           }
           $18723 = +HEAPF64[$x3307>>3];
           $18724 = $18723 + -1.5707963267949001;
           $18725 = +HEAPF64[$x3308>>3];
           $18726 = $18725 * 1.5707963267949001;
           $18727 = $18724 + $18726;
           $18728 = (+__Z5IKsind($18727));
           $18729 = (+__Z5IKcosd($18727));
           $18730 = $18727 > 3.14159265358979;
           do {
            if ($18730) {
             $18731 = $18727 + -6.2831853071795898;
             $18734 = $18731;
            } else {
             $18732 = $18727 < -3.14159265358979;
             if (!($18732)) {
              $18734 = $18727;
              break;
             }
             $18733 = $18727 + 6.2831853071795898;
             $18734 = $18733;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $18734;
           HEAPF64[$591>>3] = $18729;
           HEAPF64[$592>>3] = $18728;
           $18735 = +HEAPF64[$this>>3];
           $18736 = (+__Z5IKsind($18735));
           $18737 = (+__Z5IKcosd($18735));
           $18738 = +HEAPF64[$75>>3];
           $18739 = $18738 * 0.044999999999999998;
           $18740 = +HEAPF64[$24>>3];
           $18741 = $18740 * 0.70710678118654802;
           $18742 = +HEAPF64[$384>>3];
           $18743 = $18742 * 0.77781745930520196;
           $18744 = +HEAPF64[$76>>3];
           $18745 = $18744 * 0.29999999999999999;
           $18746 = +HEAPF64[$383>>3];
           $18747 = +HEAPF64[$47>>3];
           $18748 = $18746 * $18747;
           $18749 = +HEAPF64[$23>>3];
           $18750 = $18746 * $18749;
           $18751 = $18744 * 0.044999999999999998;
           $18752 = $18742 * 0.70710678118654802;
           $18753 = $18749 * 0.70710678118654802;
           $18754 = $18738 * 0.29999999999999999;
           $18755 = +HEAPF64[$43>>3];
           $18756 = $18755 * 0.063639610306789302;
           $18757 = $18740 * $18756;
           $18758 = $18736 * $18755;
           $18759 = $18747 * $18749;
           $18760 = $18742 * $18759;
           $18761 = $18737 * $18755;
           $18762 = +HEAPF64[$45>>3];
           $18763 = $18736 * $18762;
           $18764 = $18758 * 0.70710678118654802;
           $18765 = $18761 * 0.70710678118654802;
           $18766 = $18762 * 0.70710678118654802;
           $18767 = $18737 * $18766;
           $18768 = $18763 * 0.70710678118654802;
           $18769 = $18762 * 0.063639610306789302;
           $18770 = $18737 * $18769;
           $18771 = $18765 + $18768;
           $18772 = $18740 * $18745;
           $18773 = $18772 - $18767;
           $18774 = $18764 + $18773;
           $18775 = $18771 + $18774;
           $18776 = $18740 * 0.044999999999999998;
           $18777 = $18776 + $18775;
           $18778 = $18740 * $18739;
           $18779 = $18777 - $18778;
           $18780 = $18737 * $18762;
           $18781 = $18764 - $18767;
           $18782 = $18781 - $18771;
           $18783 = $18742 * $18751;
           $18784 = $18783 + $18782;
           $18785 = $18745 * $18750;
           $18786 = $18785 + $18784;
           $18787 = $18742 * 0.55000000000000004;
           $18788 = $18787 + $18786;
           $18789 = $18739 * $18750;
           $18790 = $18788 - $18789;
           $18791 = $18750 * 0.044999999999999998;
           $18792 = $18791 + $18790;
           $18793 = $18754 * $18742;
           $18794 = $18793 + $18792;
           $18795 = $18746 * $18762;
           $18796 = $18737 * $18795;
           $18797 = $18741 * $18796;
           $18798 = $18741 * $18746;
           $18799 = $18798 * $18758;
           $18800 = $18797 - $18799;
           $18801 = $18798 * $18763;
           $18802 = $18801 + $18800;
           $18803 = $18798 * $18761;
           $18804 = $18803 + $18802;
           $18805 = $18742 * $18747;
           $18806 = $18740 * $18805;
           $18807 = $18804 - $18806;
           $18808 = -$18780;
           $18809 = $18753 * $18808;
           $18810 = $18809 + $18807;
           $18811 = $18753 * $18758;
           $18812 = $18811 + $18810;
           $18813 = $18753 * $18763;
           $18814 = $18813 + $18812;
           $18815 = $18753 * $18761;
           $18816 = $18815 + $18814;
           $18817 = $18760 + 0.044999999999999998;
           $18818 = $18745 + $18817;
           $18819 = $18818 - $18739;
           $18820 = $18750 * $18764;
           $18821 = $18820 + $18819;
           $18822 = -$18750;
           $18823 = $18765 * $18822;
           $18824 = $18823 + $18821;
           $18825 = $18767 * $18822;
           $18826 = $18825 + $18824;
           $18827 = $18768 * $18822;
           $18828 = $18827 + $18826;
           $18829 = $18741 * $18763;
           $18830 = $18829 + $18828;
           $18831 = $18741 * $18761;
           $18832 = $18831 + $18830;
           $18833 = $18741 * $18758;
           $18834 = $18833 + $18832;
           $18835 = $18741 * $18808;
           $18836 = $18835 + $18834;
           $18837 = $18748 * 1.1000000000000001;
           $18838 = $18837 + -0.21249999999999999;
           $18839 = $18760 * 0.089999999999999996;
           $18840 = $18838 - $18839;
           $18841 = $18737 * $18757;
           $18842 = $18840 - $18841;
           $18843 = $18750 * 0.063639610306789302;
           $18844 = $18843 * $18763;
           $18845 = $18844 + $18842;
           $18846 = $18843 * $18761;
           $18847 = $18846 + $18845;
           $18848 = $18750 * $18770;
           $18849 = $18848 + $18847;
           $18850 = $18740 * $18770;
           $18851 = $18850 + $18849;
           $18852 = +HEAPF64[$60>>3];
           $18853 = $18851 - $18852;
           $18854 = $18743 * $18780;
           $18855 = $18854 + $18853;
           $18856 = $18743 * $18758;
           $18857 = $18855 - $18856;
           $18858 = $18750 * -0.063639610306789302;
           $18859 = $18858 * $18758;
           $18860 = $18859 + $18857;
           $18861 = $18743 * $18763;
           $18862 = $18861 + $18860;
           $18863 = $18743 * $18761;
           $18864 = $18863 + $18862;
           $18865 = $18740 * -0.063639610306789302;
           $18866 = $18865 * $18763;
           $18867 = $18866 + $18864;
           $18868 = $18736 * $18757;
           $18869 = $18867 - $18868;
           $18870 = (+__Z5IKabsd($18779));
           $18871 = $18870 > 5.0000000000000004E-6;
           if ($18871) {
            break L43;
           }
           $18872 = -0.55000000000000004 - $18754;
           $18873 = $18872 + $18748;
           $18874 = $18873 - $18751;
           $18875 = $18752 * $18758;
           $18876 = $18874 - $18875;
           $18877 = $18752 * $18780;
           $18878 = $18876 + $18877;
           $18879 = $18752 * $18763;
           $18880 = $18879 + $18878;
           $18881 = $18752 * $18761;
           $18882 = $18881 + $18880;
           $18883 = (+__Z5IKabsd($18882));
           $18884 = $18883 > 5.0000000000000004E-6;
           if ($18884) {
            break L43;
           }
           $18885 = (+__Z5IKabsd($18794));
           $18886 = $18885 > 5.0000000000000004E-6;
           if ($18886) {
            break L43;
           }
           $18887 = (+__Z5IKabsd($18816));
           $18888 = $18887 > 5.0000000000000004E-6;
           if ($18888) {
            break L43;
           }
           $18889 = (+__Z5IKabsd($18836));
           $18890 = $18889 > 5.0000000000000004E-6;
           if ($18890) {
            break L43;
           }
           $18891 = (+__Z5IKabsd($18869));
           $18892 = $18891 > 5.0000000000000004E-6;
           if ($18892) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $12061 = +HEAPF64[$60>>3];
         $12062 = +HEAPF64[$47>>3];
         $12063 = $12062 * $12062;
         $12064 = $12061 - $12063;
         $12065 = (+__Z5IKabsd($12064));
         $12066 = $12065 < 9.9999999999999995E-7;
         do {
          if (!($12066)) {
           $12067 = (+__Z6IKsignd($12064));
           $12068 = (+__Z5IKabsd($12067));
           $12069 = $12068 < 9.9999999999999995E-7;
           if ($12069) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $18413 = +HEAPF64[$76>>3];
           $18414 = $18413 * 0.21213203435596401;
           $18415 = +HEAPF64[$75>>3];
           $18416 = $18415 * 0.031819805153394602;
           $18417 = +HEAPF64[$45>>3];
           $18418 = $18417 * 0.031819805153394602;
           $18419 = +HEAPF64[$384>>3];
           $18420 = $18413 * $18419;
           $18421 = $18419 * 0.38890872965260098;
           $18422 = +HEAPF64[$383>>3];
           $18423 = +HEAPF64[$23>>3];
           $18424 = $18422 * $18423;
           $18425 = +HEAPF64[$24>>3];
           $18426 = $18417 * $18425;
           $18427 = +HEAPF64[$43>>3];
           $18428 = $18425 * $18427;
           $18429 = $18421 * $18427;
           $18430 = $18417 * $18421;
           $18431 = $18418 * $18425;
           $18432 = $18428 * 0.031819805153394602;
           $18433 = $18424 * $18427;
           $18434 = $18415 * 0.21213203435596401;
           $18435 = $18434 * $18419;
           $18436 = $18416 * $18428;
           $18437 = $18427 * 0.031819805153394602;
           $18438 = $18420 * $18437;
           $18439 = $18435 * $18427;
           $18440 = $18418 * $18420;
           $18441 = $18433 * 0.031819805153394602;
           $18442 = $18418 * $18424;
           $18443 = $18414 * $18426;
           $18444 = $18417 * $18435;
           $18445 = $18416 * $18426;
           $18446 = $18414 * $18428;
           $18447 = $18414 * $18417;
           $18448 = $18447 * $18424;
           $18449 = $18414 * $18433;
           $18450 = $18416 * $18433;
           $18451 = $18417 * $18416;
           $18452 = $18451 * $18424;
           $18453 = $18445 + $18450;
           $18454 = $18452 + $18446;
           $18455 = $18432 + $18454;
           $18456 = $18444 + $18448;
           $18457 = $18456 + $18436;
           $18458 = $18440 + $18457;
           $18459 = $18442 + $18458;
           $18460 = $18430 + $18459;
           $18461 = $18449 + $18441;
           $18462 = $18438 + $18461;
           $18463 = $18439 + $18462;
           $18464 = $18443 + $18463;
           $18465 = $18431 + $18464;
           $18466 = $18429 + $18465;
           $18467 = $18453 + $18460;
           $18468 = $18467 - $18455;
           $18469 = $18468 - $18466;
           $18470 = $18460 + $18466;
           $18471 = $18470 - $18455;
           $18472 = $18471 - $18453;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x3251,$18469,$18472,1.9999999999999999E-6);
           $18473 = HEAP8[$585>>0]|0;
           $18474 = ($18473<<24>>24)==(0);
           if ($18474) {
            break L43;
           }
           $18475 = +HEAPF64[$60>>3];
           $18476 = +HEAPF64[$47>>3];
           $18477 = $18476 * $18476;
           $18478 = $18475 - $18477;
           $18479 = (+__Z6IKsignd($18478));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x3252,$18479,-1);
           $18480 = HEAP8[$586>>0]|0;
           $18481 = ($18480<<24>>24)==(0);
           if ($18481) {
            break L43;
           }
           $18482 = +HEAPF64[$x3251>>3];
           $18483 = $18482 + -1.5707963267949001;
           $18484 = +HEAPF64[$x3252>>3];
           $18485 = $18484 * 1.5707963267949001;
           $18486 = $18483 + $18485;
           $18487 = (+__Z5IKsind($18486));
           $18488 = (+__Z5IKcosd($18486));
           $18489 = $18486 > 3.14159265358979;
           do {
            if ($18489) {
             $18490 = $18486 + -6.2831853071795898;
             $18493 = $18490;
            } else {
             $18491 = $18486 < -3.14159265358979;
             if (!($18491)) {
              $18493 = $18486;
              break;
             }
             $18492 = $18486 + 6.2831853071795898;
             $18493 = $18492;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $18493;
           HEAPF64[$587>>3] = $18488;
           HEAPF64[$588>>3] = $18487;
           $18494 = +HEAPF64[$this>>3];
           $18495 = (+__Z5IKsind($18494));
           $18496 = (+__Z5IKcosd($18494));
           $18497 = +HEAPF64[$75>>3];
           $18498 = $18497 * 0.044999999999999998;
           $18499 = +HEAPF64[$24>>3];
           $18500 = $18499 * 0.70710678118654802;
           $18501 = +HEAPF64[$384>>3];
           $18502 = $18501 * 0.77781745930520196;
           $18503 = +HEAPF64[$76>>3];
           $18504 = $18503 * 0.29999999999999999;
           $18505 = +HEAPF64[$383>>3];
           $18506 = +HEAPF64[$47>>3];
           $18507 = $18505 * $18506;
           $18508 = +HEAPF64[$23>>3];
           $18509 = $18505 * $18508;
           $18510 = $18503 * 0.044999999999999998;
           $18511 = $18501 * 0.70710678118654802;
           $18512 = $18508 * 0.70710678118654802;
           $18513 = $18497 * 0.29999999999999999;
           $18514 = +HEAPF64[$43>>3];
           $18515 = $18514 * 0.063639610306789302;
           $18516 = $18499 * $18515;
           $18517 = $18495 * $18514;
           $18518 = $18506 * $18508;
           $18519 = $18501 * $18518;
           $18520 = $18496 * $18514;
           $18521 = +HEAPF64[$45>>3];
           $18522 = $18495 * $18521;
           $18523 = $18517 * 0.70710678118654802;
           $18524 = $18520 * 0.70710678118654802;
           $18525 = $18521 * 0.70710678118654802;
           $18526 = $18496 * $18525;
           $18527 = $18522 * 0.70710678118654802;
           $18528 = $18521 * 0.063639610306789302;
           $18529 = $18496 * $18528;
           $18530 = $18524 + $18527;
           $18531 = $18523 + $18530;
           $18532 = $18499 * 0.044999999999999998;
           $18533 = $18532 + $18531;
           $18534 = $18499 * $18498;
           $18535 = $18533 - $18534;
           $18536 = $18535 - $18526;
           $18537 = $18499 * $18504;
           $18538 = $18537 + $18536;
           $18539 = $18496 * $18521;
           $18540 = $18501 * $18510;
           $18541 = $18540 + $18523;
           $18542 = $18513 * $18501;
           $18543 = $18542 + $18541;
           $18544 = $18543 - $18526;
           $18545 = $18544 - $18530;
           $18546 = $18498 * $18509;
           $18547 = $18545 - $18546;
           $18548 = $18509 * 0.044999999999999998;
           $18549 = $18548 + $18547;
           $18550 = $18504 * $18509;
           $18551 = $18550 + $18549;
           $18552 = $18501 * 0.55000000000000004;
           $18553 = $18552 + $18551;
           $18554 = $18512 * $18522;
           $18555 = $18512 * $18517;
           $18556 = $18555 + $18554;
           $18557 = $18512 * $18520;
           $18558 = $18557 + $18556;
           $18559 = $18500 * $18505;
           $18560 = $18559 * $18517;
           $18561 = $18558 - $18560;
           $18562 = $18505 * $18521;
           $18563 = $18496 * $18562;
           $18564 = $18500 * $18563;
           $18565 = $18564 + $18561;
           $18566 = -$18539;
           $18567 = $18512 * $18566;
           $18568 = $18567 + $18565;
           $18569 = $18559 * $18522;
           $18570 = $18569 + $18568;
           $18571 = $18559 * $18520;
           $18572 = $18571 + $18570;
           $18573 = $18501 * $18506;
           $18574 = $18499 * $18573;
           $18575 = $18572 - $18574;
           $18576 = $18500 * $18566;
           $18577 = $18576 + 0.044999999999999998;
           $18578 = $18500 * $18517;
           $18579 = $18578 + $18577;
           $18580 = $18500 * $18522;
           $18581 = $18580 + $18579;
           $18582 = $18500 * $18520;
           $18583 = $18582 + $18581;
           $18584 = $18519 + $18583;
           $18585 = $18504 + $18584;
           $18586 = $18509 * $18523;
           $18587 = $18586 + $18585;
           $18588 = $18587 - $18498;
           $18589 = -$18509;
           $18590 = $18524 * $18589;
           $18591 = $18590 + $18588;
           $18592 = $18527 * $18589;
           $18593 = $18592 + $18591;
           $18594 = $18526 * $18589;
           $18595 = $18594 + $18593;
           $18596 = $18499 * $18529;
           $18597 = $18596 + -0.21249999999999999;
           $18598 = $18502 * $18517;
           $18599 = $18597 - $18598;
           $18600 = $18502 * $18520;
           $18601 = $18600 + $18599;
           $18602 = $18502 * $18522;
           $18603 = $18602 + $18601;
           $18604 = $18509 * -0.063639610306789302;
           $18605 = $18604 * $18517;
           $18606 = $18605 + $18603;
           $18607 = $18519 * 0.089999999999999996;
           $18608 = $18606 - $18607;
           $18609 = +HEAPF64[$60>>3];
           $18610 = $18608 - $18609;
           $18611 = $18509 * 0.063639610306789302;
           $18612 = $18611 * $18522;
           $18613 = $18612 + $18610;
           $18614 = $18611 * $18520;
           $18615 = $18614 + $18613;
           $18616 = $18496 * $18516;
           $18617 = $18615 - $18616;
           $18618 = $18495 * $18516;
           $18619 = $18617 - $18618;
           $18620 = $18499 * -0.063639610306789302;
           $18621 = $18620 * $18522;
           $18622 = $18621 + $18619;
           $18623 = $18509 * $18529;
           $18624 = $18623 + $18622;
           $18625 = $18507 * 1.1000000000000001;
           $18626 = $18625 + $18624;
           $18627 = $18502 * $18539;
           $18628 = $18627 + $18626;
           $18629 = (+__Z5IKabsd($18538));
           $18630 = $18629 > 5.0000000000000004E-6;
           if ($18630) {
            break L43;
           }
           $18631 = $18511 * $18522;
           $18632 = $18631 + -0.55000000000000004;
           $18633 = $18511 * $18520;
           $18634 = $18633 + $18632;
           $18635 = $18511 * $18539;
           $18636 = $18635 + $18634;
           $18637 = $18507 + $18636;
           $18638 = $18637 - $18513;
           $18639 = $18638 - $18510;
           $18640 = $18511 * $18517;
           $18641 = $18639 - $18640;
           $18642 = (+__Z5IKabsd($18641));
           $18643 = $18642 > 5.0000000000000004E-6;
           if ($18643) {
            break L43;
           }
           $18644 = (+__Z5IKabsd($18553));
           $18645 = $18644 > 5.0000000000000004E-6;
           if ($18645) {
            break L43;
           }
           $18646 = (+__Z5IKabsd($18575));
           $18647 = $18646 > 5.0000000000000004E-6;
           if ($18647) {
            break L43;
           }
           $18648 = (+__Z5IKabsd($18595));
           $18649 = $18648 > 5.0000000000000004E-6;
           if ($18649) {
            break L43;
           }
           $18650 = (+__Z5IKabsd($18628));
           $18651 = $18650 > 5.0000000000000004E-6;
           if ($18651) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $12070 = +HEAPF64[$22>>3];
         $12071 = $12070 + -1.5707963267949001;
         $12072 = (+__Z5IKabsd($12071));
         $12073 = $12072 + 3.14159265358979;
         $12074 = (+__Z6IKfmoddd($12073,6.2831853071795898));
         $12075 = $12074 + -3.14159265358979;
         $12076 = +HEAPF64[$76>>3];
         $12077 = +HEAPF64[$75>>3];
         $12078 = +HEAPF64[$383>>3];
         $12079 = $12078 * 0.55000000000000004;
         $12080 = $12078 * -0.29999999999999999;
         $12081 = $12077 * $12080;
         $12082 = $12081 - $12079;
         $12083 = $12078 * -0.044999999999999998;
         $12084 = $12076 * $12083;
         $12085 = $12084 + $12082;
         $12086 = +HEAPF64[$47>>3];
         $12087 = $12086 + $12085;
         $12088 = (+__Z5IKabsd($12075));
         $12089 = $12088 < 9.9999999999999995E-7;
         do {
          if ($12089) {
           $12090 = +HEAPF64[$60>>3];
           $12091 = $12076 * 0.076499999999999999;
           $12092 = $12091 + 0.39655000000000001;
           $12093 = $12092 - $12090;
           $12094 = $12077 * 0.32595000000000002;
           $12095 = $12094 + $12093;
           $12096 = (+__Z5IKabsd($12095));
           $12097 = $12096 < 9.9999999999999995E-7;
           if (!($12097)) {
            break;
           }
           $12098 = (+__Z5IKabsd($12087));
           $12099 = $12098 < 9.9999999999999995E-7;
           if (!($12099)) {
            break;
           }
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           $12100 = +HEAPF64[$47>>3];
           $12101 = $12100 * $12100;
           $12102 = +HEAPF64[$383>>3];
           $12103 = +HEAPF64[$60>>3];
           $12104 = $12102 * $12103;
           $12105 = $12102 * $12101;
           $12106 = $12104 - $12105;
           $12107 = (+__Z5IKabsd($12106));
           $12108 = $12107 < 9.9999999999999995E-7;
           do {
            if (!($12108)) {
             $12109 = $12104 * 0.089999999999999996;
             $12110 = $12105 * 0.089999999999999996;
             $12111 = $12109 - $12110;
             $12112 = (+__Z6IKsignd($12111));
             $12113 = (+__Z5IKabsd($12112));
             $12114 = $12113 < 9.9999999999999995E-7;
             if ($12114) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $13791 = +HEAPF64[$47>>3];
             $13792 = $13791 * 0.77781745930520196;
             $13793 = +HEAPF64[$383>>3];
             $13794 = $13793 * 0.150260191002141;
             $13795 = $13793 * 0.089999999999999996;
             $13796 = +HEAPF64[$45>>3];
             $13797 = $13796 * $13794;
             $13798 = +HEAPF64[$43>>3];
             $13799 = $13792 * $13798;
             $13800 = $13792 * $13796;
             $13801 = $13794 * $13798;
             $13802 = $13791 * 0.063639610306789302;
             $13803 = +HEAPF64[$384>>3];
             $13804 = $13802 * $13803;
             $13805 = $13793 * 0.70710678118654802;
             $13806 = +HEAPF64[$60>>3];
             $13807 = $13805 * $13806;
             $13808 = $13796 * $13804;
             $13809 = $13798 * $13804;
             $13810 = $13796 * $13807;
             $13811 = $13798 * $13807;
             $13812 = $13799 + $13808;
             $13813 = $13801 + $13811;
             $13814 = $13797 + $13809;
             $13815 = $13814 + $13810;
             $13816 = $13800 + $13812;
             $13817 = $13816 - $13815;
             $13818 = $13817 - $13813;
             $13819 = $13812 + $13815;
             $13820 = $13819 - $13813;
             $13821 = $13820 - $13800;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2251,$13818,$13821,1.9999999999999999E-6);
             $13822 = HEAP8[$439>>0]|0;
             $13823 = ($13822<<24>>24)==(0);
             if ($13823) {
              break L43;
             }
             $13824 = +HEAPF64[$47>>3];
             $13825 = $13824 * $13824;
             $13826 = $13795 * $13825;
             $13827 = +HEAPF64[$60>>3];
             $13828 = $13795 * $13827;
             $13829 = $13828 - $13826;
             $13830 = (+__Z6IKsignd($13829));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2252,$13830,-1);
             $13831 = HEAP8[$440>>0]|0;
             $13832 = ($13831<<24>>24)==(0);
             if ($13832) {
              break L43;
             }
             $13833 = +HEAPF64[$x2251>>3];
             $13834 = $13833 + -1.5707963267949001;
             $13835 = +HEAPF64[$x2252>>3];
             $13836 = $13835 * 1.5707963267949001;
             $13837 = $13834 + $13836;
             $13838 = (+__Z5IKsind($13837));
             $13839 = (+__Z5IKcosd($13837));
             $13840 = $13837 > 3.14159265358979;
             do {
              if ($13840) {
               $13841 = $13837 + -6.2831853071795898;
               $13844 = $13841;
              } else {
               $13842 = $13837 < -3.14159265358979;
               if (!($13842)) {
                $13844 = $13837;
                break;
               }
               $13843 = $13837 + 6.2831853071795898;
               $13844 = $13843;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $13844;
             HEAPF64[$441>>3] = $13839;
             HEAPF64[$442>>3] = $13838;
             $13845 = +HEAPF64[$this>>3];
             $13846 = (+__Z5IKsind($13845));
             $13847 = (+__Z5IKcosd($13845));
             $13848 = +HEAPF64[$45>>3];
             $13849 = $13848 * 0.70710678118654802;
             $13850 = +HEAPF64[$383>>3];
             $13851 = +HEAPF64[$47>>3];
             $13852 = $13850 * $13851;
             $13853 = +HEAPF64[$76>>3];
             $13854 = $13853 * 0.044999999999999998;
             $13855 = $13848 * 0.063639610306789302;
             $13856 = +HEAPF64[$43>>3];
             $13857 = $13856 * 0.70710678118654802;
             $13858 = $13848 * 0.77781745930520196;
             $13859 = +HEAPF64[$75>>3];
             $13860 = $13859 * 0.29999999999999999;
             $13861 = $13846 * $13850;
             $13862 = $13847 * $13856;
             $13863 = +HEAPF64[$384>>3];
             $13864 = $13846 * $13863;
             $13865 = $13847 * $13863;
             $13866 = $13846 * $13857;
             $13867 = $13847 * $13857;
             $13868 = $13847 * $13849;
             $13869 = $13846 * $13849;
             $13870 = $13869 + $13867;
             $13871 = $13866 + 0.044999999999999998;
             $13872 = $13871 + $13870;
             $13873 = $13859 * 0.044999999999999998;
             $13874 = $13872 - $13873;
             $13875 = $13853 * 0.29999999999999999;
             $13876 = $13875 + $13874;
             $13877 = $13876 - $13868;
             $13878 = -$13857;
             $13879 = $13854 * $13863;
             $13880 = $13866 + $13879;
             $13881 = $13880 - $13870;
             $13882 = $13863 * 0.55000000000000004;
             $13883 = $13882 + $13881;
             $13884 = $13883 - $13868;
             $13885 = $13863 * $13860;
             $13886 = $13885 + $13884;
             $13887 = $13857 * $13865;
             $13888 = $13887 + -0.55000000000000004;
             $13889 = $13852 + $13888;
             $13890 = $13849 * $13864;
             $13891 = $13890 + $13889;
             $13892 = $13849 * $13865;
             $13893 = $13892 + $13891;
             $13894 = $13864 * $13878;
             $13895 = $13894 + $13893;
             $13896 = $13895 - $13854;
             $13897 = $13896 - $13860;
             $13898 = $13858 * $13864;
             $13899 = $13898 + -0.21249999999999999;
             $13900 = $13858 * $13865;
             $13901 = $13900 + $13899;
             $13902 = $13847 * $13855;
             $13903 = $13902 + $13901;
             $13904 = $13862 * 0.063639610306789302;
             $13905 = $13903 - $13904;
             $13906 = $13846 * $13855;
             $13907 = $13905 - $13906;
             $13908 = +HEAPF64[$60>>3];
             $13909 = $13907 - $13908;
             $13910 = $13852 * 1.1000000000000001;
             $13911 = $13910 + $13909;
             $13912 = $13863 * 0.77781745930520196;
             $13913 = $13862 * $13912;
             $13914 = $13913 + $13911;
             $13915 = $13856 * -0.77781745930520196;
             $13916 = $13915 * $13864;
             $13917 = $13916 + $13914;
             $13918 = $13856 * -0.063639610306789302;
             $13919 = $13846 * $13918;
             $13920 = $13919 + $13917;
             $13921 = (+__Z5IKabsd($13877));
             $13922 = $13921 > 5.0000000000000004E-6;
             if ($13922) {
              break L43;
             }
             $13923 = $13850 * $13867;
             $13924 = $13850 * $13868;
             $13925 = $13924 + $13923;
             $13926 = $13849 * $13861;
             $13927 = $13926 + $13925;
             $13928 = $13861 * $13878;
             $13929 = $13928 + $13927;
             $13930 = $13851 * $13863;
             $13931 = $13929 - $13930;
             $13932 = (+__Z5IKabsd($13931));
             $13933 = $13932 > 5.0000000000000004E-6;
             if ($13933) {
              break L43;
             }
             $13934 = (+__Z5IKabsd($13886));
             $13935 = $13934 > 5.0000000000000004E-6;
             if ($13935) {
              break L43;
             }
             $13936 = (+__Z5IKabsd($13897));
             $13937 = $13936 > 5.0000000000000004E-6;
             if ($13937) {
              break L43;
             }
             $13938 = (+__Z5IKabsd($13920));
             $13939 = $13938 > 5.0000000000000004E-6;
             if ($13939) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           $12115 = +HEAPF64[$60>>3];
           $12116 = +HEAPF64[$47>>3];
           $12117 = $12116 * $12116;
           $12118 = $12115 - $12117;
           $12119 = (+__Z5IKabsd($12118));
           $12120 = $12119 < 9.9999999999999995E-7;
           do {
            if (!($12120)) {
             $12121 = (+__Z6IKsignd($12118));
             $12122 = (+__Z5IKabsd($12121));
             $12123 = $12122 < 9.9999999999999995E-7;
             if ($12123) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $13638 = +HEAPF64[$45>>3];
             $13639 = $13638 * 0.031819805153394602;
             $13640 = +HEAPF64[$43>>3];
             $13641 = $13640 * 0.031819805153394602;
             $13642 = +HEAPF64[$76>>3];
             $13643 = $13638 * $13642;
             $13644 = +HEAPF64[$384>>3];
             $13645 = $13644 * 0.38890872965260098;
             $13646 = +HEAPF64[$75>>3];
             $13647 = $13640 * 0.21213203435596401;
             $13648 = $13644 * $13646;
             $13649 = $13641 * $13646;
             $13650 = $13643 * 0.21213203435596401;
             $13651 = $13640 * $13645;
             $13652 = $13638 * $13645;
             $13653 = $13639 * $13646;
             $13654 = $13642 * $13647;
             $13655 = $13642 * $13644;
             $13656 = $13641 * $13655;
             $13657 = $13647 * $13648;
             $13658 = $13639 * $13655;
             $13659 = $13638 * 0.21213203435596401;
             $13660 = $13659 * $13648;
             $13661 = $13641 + $13654;
             $13662 = $13649 + $13652;
             $13663 = $13662 + $13660;
             $13664 = $13658 + $13663;
             $13665 = $13650 + $13651;
             $13666 = $13656 + $13665;
             $13667 = $13657 + $13666;
             $13668 = $13639 + $13667;
             $13669 = $13653 + $13664;
             $13670 = $13669 - $13668;
             $13671 = $13670 - $13661;
             $13672 = $13664 + $13668;
             $13673 = $13672 - $13661;
             $13674 = $13673 - $13653;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2215,$13671,$13674,1.9999999999999999E-6);
             $13675 = HEAP8[$435>>0]|0;
             $13676 = ($13675<<24>>24)==(0);
             if ($13676) {
              break L43;
             }
             $13677 = +HEAPF64[$60>>3];
             $13678 = +HEAPF64[$47>>3];
             $13679 = $13678 * $13678;
             $13680 = $13677 - $13679;
             $13681 = (+__Z6IKsignd($13680));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2216,$13681,-1);
             $13682 = HEAP8[$436>>0]|0;
             $13683 = ($13682<<24>>24)==(0);
             if ($13683) {
              break L43;
             }
             $13684 = +HEAPF64[$x2215>>3];
             $13685 = $13684 + -1.5707963267949001;
             $13686 = +HEAPF64[$x2216>>3];
             $13687 = $13686 * 1.5707963267949001;
             $13688 = $13685 + $13687;
             $13689 = (+__Z5IKsind($13688));
             $13690 = (+__Z5IKcosd($13688));
             $13691 = $13688 > 3.14159265358979;
             do {
              if ($13691) {
               $13692 = $13688 + -6.2831853071795898;
               $13695 = $13692;
              } else {
               $13693 = $13688 < -3.14159265358979;
               if (!($13693)) {
                $13695 = $13688;
                break;
               }
               $13694 = $13688 + 6.2831853071795898;
               $13695 = $13694;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $13695;
             HEAPF64[$437>>3] = $13690;
             HEAPF64[$438>>3] = $13689;
             $13696 = +HEAPF64[$this>>3];
             $13697 = (+__Z5IKsind($13696));
             $13698 = (+__Z5IKcosd($13696));
             $13699 = +HEAPF64[$45>>3];
             $13700 = $13699 * 0.70710678118654802;
             $13701 = +HEAPF64[$383>>3];
             $13702 = +HEAPF64[$47>>3];
             $13703 = $13701 * $13702;
             $13704 = +HEAPF64[$76>>3];
             $13705 = $13704 * 0.044999999999999998;
             $13706 = $13699 * 0.063639610306789302;
             $13707 = +HEAPF64[$43>>3];
             $13708 = $13707 * 0.70710678118654802;
             $13709 = $13699 * 0.77781745930520196;
             $13710 = +HEAPF64[$75>>3];
             $13711 = $13710 * 0.29999999999999999;
             $13712 = $13697 * $13701;
             $13713 = $13698 * $13707;
             $13714 = +HEAPF64[$384>>3];
             $13715 = $13697 * $13714;
             $13716 = $13698 * $13714;
             $13717 = $13697 * $13708;
             $13718 = $13698 * $13708;
             $13719 = $13698 * $13700;
             $13720 = $13697 * $13700;
             $13721 = $13720 + $13718;
             $13722 = $13717 + 0.044999999999999998;
             $13723 = $13722 + $13721;
             $13724 = $13710 * 0.044999999999999998;
             $13725 = $13723 - $13724;
             $13726 = $13725 - $13719;
             $13727 = $13704 * 0.29999999999999999;
             $13728 = $13727 + $13726;
             $13729 = -$13708;
             $13730 = $13717 - $13721;
             $13731 = $13730 - $13719;
             $13732 = $13714 * $13711;
             $13733 = $13732 + $13731;
             $13734 = $13705 * $13714;
             $13735 = $13734 + $13733;
             $13736 = $13714 * 0.55000000000000004;
             $13737 = $13736 + $13735;
             $13738 = $13703 + -0.55000000000000004;
             $13739 = $13715 * $13729;
             $13740 = $13738 + $13739;
             $13741 = $13740 - $13705;
             $13742 = $13741 - $13711;
             $13743 = $13700 * $13715;
             $13744 = $13743 + $13742;
             $13745 = $13700 * $13716;
             $13746 = $13745 + $13744;
             $13747 = $13708 * $13716;
             $13748 = $13747 + $13746;
             $13749 = $13713 * 0.063639610306789302;
             $13750 = -0.21249999999999999 - $13749;
             $13751 = $13697 * $13706;
             $13752 = $13750 - $13751;
             $13753 = $13703 * 1.1000000000000001;
             $13754 = $13753 + $13752;
             $13755 = $13707 * -0.063639610306789302;
             $13756 = $13697 * $13755;
             $13757 = $13756 + $13754;
             $13758 = $13698 * $13706;
             $13759 = $13758 + $13757;
             $13760 = $13709 * $13715;
             $13761 = $13760 + $13759;
             $13762 = $13709 * $13716;
             $13763 = $13762 + $13761;
             $13764 = +HEAPF64[$60>>3];
             $13765 = $13763 - $13764;
             $13766 = $13714 * 0.77781745930520196;
             $13767 = $13713 * $13766;
             $13768 = $13767 + $13765;
             $13769 = $13707 * -0.77781745930520196;
             $13770 = $13769 * $13715;
             $13771 = $13770 + $13768;
             $13772 = (+__Z5IKabsd($13728));
             $13773 = $13772 > 5.0000000000000004E-6;
             if ($13773) {
              break L43;
             }
             $13774 = $13701 * $13718;
             $13775 = $13701 * $13719;
             $13776 = $13775 + $13774;
             $13777 = $13712 * $13729;
             $13778 = $13777 + $13776;
             $13779 = $13702 * $13714;
             $13780 = $13778 - $13779;
             $13781 = $13700 * $13712;
             $13782 = $13781 + $13780;
             $13783 = (+__Z5IKabsd($13782));
             $13784 = $13783 > 5.0000000000000004E-6;
             if ($13784) {
              break L43;
             }
             $13785 = (+__Z5IKabsd($13737));
             $13786 = $13785 > 5.0000000000000004E-6;
             if ($13786) {
              break L43;
             }
             $13787 = (+__Z5IKabsd($13748));
             $13788 = $13787 > 5.0000000000000004E-6;
             if ($13788) {
              break L43;
             }
             $13789 = (+__Z5IKabsd($13771));
             $13790 = $13789 > 5.0000000000000004E-6;
             if ($13790) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           $12124 = +HEAPF64[$60>>3];
           $12125 = +HEAPF64[$384>>3];
           $12126 = $12124 * $12125;
           $12127 = +HEAPF64[$47>>3];
           $12128 = $12127 * $12127;
           $12129 = $12125 * $12128;
           $12130 = $12129 - $12126;
           $12131 = (+__Z5IKabsd($12130));
           $12132 = $12131 < 9.9999999999999995E-7;
           do {
            if (!($12132)) {
             $12133 = (+__Z6IKsignd($12130));
             $12134 = (+__Z5IKabsd($12133));
             $12135 = $12134 < 9.9999999999999995E-7;
             if ($12135) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $13477 = +HEAPF64[$45>>3];
             $13478 = +HEAPF64[$43>>3];
             $13479 = $13478 * 0.38890872965260098;
             $13480 = $13477 * 0.031819805153394602;
             $13481 = +HEAPF64[$75>>3];
             $13482 = $13481 * 0.21213203435596401;
             $13483 = $13478 * 0.031819805153394602;
             $13484 = +HEAPF64[$384>>3];
             $13485 = $13483 * $13484;
             $13486 = $13478 * $13482;
             $13487 = +HEAPF64[$76>>3];
             $13488 = $13483 * $13487;
             $13489 = $13480 * $13484;
             $13490 = +HEAPF64[$383>>3];
             $13491 = $13490 * 0.70710678118654802;
             $13492 = +HEAPF64[$47>>3];
             $13493 = $13491 * $13492;
             $13494 = $13484 * 0.21213203435596401;
             $13495 = $13494 * $13487;
             $13496 = $13481 * $13489;
             $13497 = $13478 * $13493;
             $13498 = $13478 * $13495;
             $13499 = $13477 * $13493;
             $13500 = $13477 * $13495;
             $13501 = $13496 + $13497;
             $13502 = $13498 + $13499;
             $13503 = $13485 + $13502;
             $13504 = $13489 + $13500;
             $13505 = $13486 + $13504;
             $13506 = $13479 + $13505;
             $13507 = $13488 + $13506;
             $13508 = +HEAPF64[$60>>3];
             $13509 = $13484 * $13508;
             $13510 = $13492 * $13492;
             $13511 = $13484 * $13510;
             $13512 = $13511 - $13509;
             $13513 = (+__Z6IKsignd($13512));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2174,$13513,-1);
             $13514 = HEAP8[$431>>0]|0;
             $13515 = ($13514<<24>>24)==(0);
             if ($13515) {
              break L43;
             }
             $13516 = $13481 * $13485;
             $13517 = $13480 * $13487;
             $13518 = $13516 + $13517;
             $13519 = $13477 * 0.38890872965260098;
             $13520 = $13519 + $13518;
             $13521 = $13477 * $13482;
             $13522 = $13521 + $13520;
             $13523 = $13507 + $13503;
             $13524 = $13523 - $13501;
             $13525 = $13524 - $13522;
             $13526 = $13501 + $13503;
             $13527 = $13526 - $13507;
             $13528 = $13527 - $13522;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2175,$13525,$13528,1.9999999999999999E-6);
             $13529 = HEAP8[$432>>0]|0;
             $13530 = ($13529<<24>>24)==(0);
             if ($13530) {
              break L43;
             }
             $13531 = +HEAPF64[$x2174>>3];
             $13532 = $13531 * 1.5707963267949001;
             $13533 = $13532 + -1.5707963267949001;
             $13534 = +HEAPF64[$x2175>>3];
             $13535 = $13534 + $13533;
             $13536 = (+__Z5IKsind($13535));
             $13537 = (+__Z5IKcosd($13535));
             $13538 = $13535 > 3.14159265358979;
             do {
              if ($13538) {
               $13539 = $13535 + -6.2831853071795898;
               $13542 = $13539;
              } else {
               $13540 = $13535 < -3.14159265358979;
               if (!($13540)) {
                $13542 = $13535;
                break;
               }
               $13541 = $13535 + 6.2831853071795898;
               $13542 = $13541;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $13542;
             HEAPF64[$433>>3] = $13537;
             HEAPF64[$434>>3] = $13536;
             $13543 = +HEAPF64[$this>>3];
             $13544 = (+__Z5IKsind($13543));
             $13545 = (+__Z5IKcosd($13543));
             $13546 = +HEAPF64[$45>>3];
             $13547 = $13546 * 0.70710678118654802;
             $13548 = +HEAPF64[$383>>3];
             $13549 = +HEAPF64[$47>>3];
             $13550 = $13548 * $13549;
             $13551 = +HEAPF64[$76>>3];
             $13552 = $13551 * 0.044999999999999998;
             $13553 = $13546 * 0.063639610306789302;
             $13554 = +HEAPF64[$43>>3];
             $13555 = $13554 * 0.70710678118654802;
             $13556 = $13546 * 0.77781745930520196;
             $13557 = +HEAPF64[$75>>3];
             $13558 = $13557 * 0.29999999999999999;
             $13559 = $13544 * $13548;
             $13560 = $13545 * $13554;
             $13561 = +HEAPF64[$384>>3];
             $13562 = $13544 * $13561;
             $13563 = $13545 * $13561;
             $13564 = $13544 * $13555;
             $13565 = $13545 * $13555;
             $13566 = $13545 * $13547;
             $13567 = $13544 * $13547;
             $13568 = $13567 + $13565;
             $13569 = $13568 + 0.044999999999999998;
             $13570 = $13564 + $13569;
             $13571 = $13557 * 0.044999999999999998;
             $13572 = $13570 - $13571;
             $13573 = $13572 - $13566;
             $13574 = $13551 * 0.29999999999999999;
             $13575 = $13574 + $13573;
             $13576 = -$13555;
             $13577 = $13552 * $13561;
             $13578 = $13561 * $13558;
             $13579 = $13577 + $13578;
             $13580 = $13564 + $13579;
             $13581 = $13580 - $13568;
             $13582 = $13581 - $13566;
             $13583 = $13561 * 0.55000000000000004;
             $13584 = $13583 + $13582;
             $13585 = $13550 + -0.55000000000000004;
             $13586 = $13547 * $13562;
             $13587 = $13585 + $13586;
             $13588 = $13547 * $13563;
             $13589 = $13588 + $13587;
             $13590 = $13555 * $13563;
             $13591 = $13590 + $13589;
             $13592 = $13591 - $13552;
             $13593 = $13592 - $13558;
             $13594 = $13562 * $13576;
             $13595 = $13594 + $13593;
             $13596 = $13554 * -0.77781745930520196;
             $13597 = $13596 * $13562;
             $13598 = $13597 + -0.21249999999999999;
             $13599 = $13560 * 0.063639610306789302;
             $13600 = $13598 - $13599;
             $13601 = $13556 * $13562;
             $13602 = $13601 + $13600;
             $13603 = $13556 * $13563;
             $13604 = $13603 + $13602;
             $13605 = +HEAPF64[$60>>3];
             $13606 = $13604 - $13605;
             $13607 = $13545 * $13553;
             $13608 = $13607 + $13606;
             $13609 = $13561 * 0.77781745930520196;
             $13610 = $13560 * $13609;
             $13611 = $13610 + $13608;
             $13612 = $13550 * 1.1000000000000001;
             $13613 = $13612 + $13611;
             $13614 = $13554 * -0.063639610306789302;
             $13615 = $13544 * $13614;
             $13616 = $13615 + $13613;
             $13617 = $13544 * $13553;
             $13618 = $13616 - $13617;
             $13619 = (+__Z5IKabsd($13575));
             $13620 = $13619 > 5.0000000000000004E-6;
             if ($13620) {
              break L43;
             }
             $13621 = $13547 * $13559;
             $13622 = $13548 * $13565;
             $13623 = $13621 + $13622;
             $13624 = $13548 * $13566;
             $13625 = $13624 + $13623;
             $13626 = $13549 * $13561;
             $13627 = $13625 - $13626;
             $13628 = $13559 * $13576;
             $13629 = $13628 + $13627;
             $13630 = (+__Z5IKabsd($13629));
             $13631 = $13630 > 5.0000000000000004E-6;
             if ($13631) {
              break L43;
             }
             $13632 = (+__Z5IKabsd($13584));
             $13633 = $13632 > 5.0000000000000004E-6;
             if ($13633) {
              break L43;
             }
             $13634 = (+__Z5IKabsd($13595));
             $13635 = $13634 > 5.0000000000000004E-6;
             if ($13635) {
              break L43;
             }
             $13636 = (+__Z5IKabsd($13618));
             $13637 = $13636 > 5.0000000000000004E-6;
             if ($13637) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           $12136 = +HEAPF64[$76>>3];
           $12137 = $12136 * 0.044999999999999998;
           $12138 = -0.55000000000000004 - $12137;
           $12139 = +HEAPF64[$75>>3];
           $12140 = $12139 * 0.29999999999999999;
           $12141 = $12138 - $12140;
           $12142 = +HEAPF64[$47>>3];
           $12143 = $12142 + $12141;
           $12144 = +HEAPF64[$3>>3];
           $12145 = (+__Z5IKabsd($12144));
           $12146 = $12145 + 3.14159265358979;
           $12147 = (+__Z6IKfmoddd($12146,6.2831853071795898));
           $12148 = $12147 + -3.14159265358979;
           $12149 = (+__Z5IKabsd($12148));
           $12150 = $12149 < 9.9999999999999995E-7;
           do {
            if ($12150) {
             $12151 = +HEAPF64[$60>>3];
             $12152 = $12136 * 0.076499999999999999;
             $12153 = $12152 + 0.39655000000000001;
             $12154 = $12153 - $12151;
             $12155 = $12139 * 0.32595000000000002;
             $12156 = $12155 + $12154;
             $12157 = (+__Z5IKabsd($12156));
             $12158 = $12157 < 9.9999999999999995E-7;
             if (!($12158)) {
              break;
             }
             $12159 = (+__Z5IKabsd($12143));
             $12160 = $12159 < 9.9999999999999995E-7;
             if (!($12160)) {
              break;
             }
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             $12161 = +HEAPF64[$47>>3];
             $12162 = $12161 * $12161;
             $12163 = +HEAPF64[$75>>3];
             $12164 = $12163 * $12163;
             $12165 = +HEAPF64[$76>>3];
             $12166 = $12165 * $12165;
             $12167 = $12163 * 2.0;
             $12168 = +HEAPF64[$60>>3];
             $12169 = $12168 - $12162;
             $12170 = $12166 * 44.4444444444444;
             $12171 = $12168 * 13.3333333333333;
             $12172 = $12165 * $12171;
             $12173 = $12165 * 13.3333333333333;
             $12174 = $12162 * $12173;
             $12175 = (+__Z6IKsignd($12169));
             $12176 = (+__Z5IKabsd($12169));
             $12177 = $12176 < 9.9999999999999995E-7;
             do {
              if (!($12177)) {
               $12178 = $12164 * $12168;
               $12179 = $12163 * $12172;
               $12180 = $12178 - $12179;
               $12181 = $12162 * $12170;
               $12182 = $12180 - $12181;
               $12183 = $12172 + $12182;
               $12184 = $12167 * $12168;
               $12185 = $12183 - $12184;
               $12186 = $12168 + $12185;
               $12187 = $12163 * $12174;
               $12188 = $12187 + $12186;
               $12189 = $12162 * $12167;
               $12190 = $12189 + $12188;
               $12191 = $12168 * $12170;
               $12192 = $12191 + $12190;
               $12193 = $12162 * $12164;
               $12194 = $12192 - $12193;
               $12195 = $12194 - $12174;
               $12196 = $12195 - $12162;
               $12197 = (+__Z5IKabsd($12196));
               $12198 = $12197 < 9.9999999999999995E-7;
               if ($12198) {
                break;
               }
               $12199 = (+__Z5IKabsd($12175));
               $12200 = $12199 < 9.9999999999999995E-7;
               if ($12200) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $12438 = +HEAPF64[$45>>3];
               $12439 = $12438 * 0.031819805153394602;
               $12440 = +HEAPF64[$43>>3];
               $12441 = $12440 * 0.031819805153394602;
               $12442 = +HEAPF64[$76>>3];
               $12443 = $12442 * 0.21213203435596401;
               $12444 = +HEAPF64[$75>>3];
               $12445 = $12441 * $12444;
               $12446 = $12438 * $12443;
               $12447 = $12439 * $12444;
               $12448 = $12439 + $12446;
               $12449 = +HEAPF64[$60>>3];
               $12450 = +HEAPF64[$47>>3];
               $12451 = $12450 * $12450;
               $12452 = $12449 - $12451;
               $12453 = (+__Z6IKsignd($12452));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1981,$12453,-1);
               $12454 = HEAP8[$396>>0]|0;
               $12455 = ($12454<<24>>24)==(0);
               if ($12455) {
                break L43;
               }
               $12456 = $12440 * $12443;
               $12457 = $12441 + $12456;
               $12458 = -$12448;
               $12459 = $12458 - $12457;
               $12460 = $12447 + $12459;
               $12461 = $12445 + $12460;
               $12462 = -$12447;
               $12463 = $12462 - $12457;
               $12464 = $12448 + $12463;
               $12465 = $12445 + $12464;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1982,$12461,$12465,1.9999999999999999E-6);
               $12466 = HEAP8[$397>>0]|0;
               $12467 = ($12466<<24>>24)==(0);
               if ($12467) {
                break L43;
               }
               $12468 = +HEAPF64[$x1981>>3];
               $12469 = $12468 * 1.5707963267949001;
               $12470 = $12469 + -1.5707963267949001;
               $12471 = +HEAPF64[$x1982>>3];
               $12472 = $12471 + $12470;
               $12473 = (+__Z5IKsind($12472));
               $12474 = (+__Z5IKcosd($12472));
               $12475 = $12472 > 3.14159265358979;
               do {
                if ($12475) {
                 $12476 = $12472 + -6.2831853071795898;
                 $12479 = $12476;
                } else {
                 $12477 = $12472 < -3.14159265358979;
                 if (!($12477)) {
                  $12479 = $12472;
                  break;
                 }
                 $12478 = $12472 + 6.2831853071795898;
                 $12479 = $12478;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $12479;
               HEAPF64[$398>>3] = $12474;
               HEAPF64[$399>>3] = $12473;
               $12480 = +HEAPF64[$this>>3];
               $12481 = (+__Z5IKcosd($12480));
               $12482 = (+__Z5IKsind($12480));
               $12483 = +HEAPF64[$45>>3];
               $12484 = $12483 * 0.70710678118654802;
               $12485 = +HEAPF64[$43>>3];
               $12486 = $12485 * 0.063639610306789302;
               $12487 = $12483 * 0.063639610306789302;
               $12488 = $12485 * 0.70710678118654802;
               $12489 = $12481 * $12488;
               $12490 = $12482 * $12488;
               $12491 = $12482 * $12484;
               $12492 = $12481 * $12484;
               $12493 = $12491 + $12489;
               $12494 = $12490 - $12492;
               $12495 = $12494 - $12493;
               $12496 = $12481 * $12486;
               $12497 = -0.21249999999999999 - $12496;
               $12498 = -$12482;
               $12499 = $12487 * $12498;
               $12500 = $12499 + $12497;
               $12501 = $12486 * $12498;
               $12502 = $12501 + $12500;
               $12503 = +HEAPF64[$60>>3];
               $12504 = $12502 - $12503;
               $12505 = +HEAPF64[$47>>3];
               $12506 = $12505 * 1.1000000000000001;
               $12507 = $12506 + $12504;
               $12508 = $12481 * $12487;
               $12509 = $12508 + $12507;
               $12510 = (+__Z5IKabsd($12495));
               $12511 = $12510 > 5.0000000000000004E-6;
               if ($12511) {
                break L43;
               }
               $12512 = +HEAPF64[$76>>3];
               $12513 = +HEAPF64[$75>>3];
               $12514 = $12513 * 0.044999999999999998;
               $12515 = 0.044999999999999998 - $12514;
               $12516 = $12490 + $12515;
               $12517 = $12493 + $12516;
               $12518 = $12517 - $12492;
               $12519 = $12512 * 0.29999999999999999;
               $12520 = $12519 + $12518;
               $12521 = (+__Z5IKabsd($12520));
               $12522 = $12521 > 5.0000000000000004E-6;
               if ($12522) {
                break L43;
               }
               $12523 = (+__Z5IKabsd($12509));
               $12524 = $12523 > 5.0000000000000004E-6;
               if ($12524) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             $12201 = +HEAPF64[$47>>3];
             $12202 = $12201 * $12201;
             $12203 = $12201 * $12202;
             $12204 = +HEAPF64[$60>>3];
             $12205 = $12204 * $12204;
             $12206 = $12202 - $12204;
             $12207 = $12202 * -22.145328719723199;
             $12208 = $12207 * $12205;
             $12209 = $12204 * 48.719723183390997;
             $12210 = $12209 * $12203;
             $12211 = $12208 + $12210;
             $12212 = $12211 - $12202;
             $12213 = $12204 * 17.384083044982699;
             $12214 = $12202 * $12213;
             $12215 = $12214 + $12212;
             $12216 = $12204 * $12205;
             $12217 = $12216 * 22.145328719723199;
             $12218 = $12217 + $12215;
             $12219 = $12205 * 9.4117647058823497;
             $12220 = $12219 + $12218;
             $12221 = $12204 * -10.352941176470599;
             $12222 = $12201 * $12221;
             $12223 = $12222 + $12220;
             $12224 = $12204 + $12223;
             $12225 = $12201 * -48.719723183390997;
             $12226 = $12225 * $12205;
             $12227 = $12226 + $12224;
             $12228 = $12203 * 10.352941176470599;
             $12229 = $12228 + $12227;
             $12230 = $12202 * $12202;
             $12231 = $12230 * 26.7958477508651;
             $12232 = $12229 - $12231;
             $12233 = (+__Z5IKabsd($12206));
             $12234 = $12233 < 9.9999999999999995E-7;
             do {
              if (!($12234)) {
               $12235 = $12204 * 0.089999999999999996;
               $12236 = $12202 * 0.089999999999999996;
               $12237 = $12236 - $12235;
               $12238 = (+__Z6IKsignd($12237));
               $12239 = (+__Z5IKabsd($12238));
               $12240 = $12239 < 9.9999999999999995E-7;
               if ($12240) {
                break;
               }
               $12241 = (+__Z5IKabsd($12232));
               $12242 = $12241 < 9.9999999999999995E-7;
               if ($12242) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $12349 = +HEAPF64[$43>>3];
               $12350 = $12349 * 0.150260191002141;
               $12351 = +HEAPF64[$45>>3];
               $12352 = $12351 * 0.150260191002141;
               $12353 = +HEAPF64[$47>>3];
               $12354 = $12353 * 0.77781745930520196;
               $12355 = +HEAPF64[$60>>3];
               $12356 = $12355 * 0.70710678118654802;
               $12357 = $12349 * $12356;
               $12358 = $12351 * $12354;
               $12359 = $12351 * $12356;
               $12360 = $12350 + $12357;
               $12361 = $12352 + $12359;
               $12362 = $12355 * 0.089999999999999996;
               $12363 = $12353 * $12353;
               $12364 = $12363 * 0.089999999999999996;
               $12365 = $12364 - $12362;
               $12366 = (+__Z6IKsignd($12365));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1958,$12366,-1);
               $12367 = HEAP8[$392>>0]|0;
               $12368 = ($12367<<24>>24)==(0);
               if ($12368) {
                break L43;
               }
               $12369 = $12349 * $12354;
               $12370 = -$12369;
               $12371 = -$12358;
               $12372 = $12371 - $12369;
               $12373 = $12372 + $12361;
               $12374 = $12360 + $12373;
               $12375 = $12370 - $12361;
               $12376 = $12360 + $12375;
               $12377 = $12358 + $12376;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1959,$12374,$12377,1.9999999999999999E-6);
               $12378 = HEAP8[$393>>0]|0;
               $12379 = ($12378<<24>>24)==(0);
               if ($12379) {
                break L43;
               }
               $12380 = +HEAPF64[$x1958>>3];
               $12381 = $12380 * 1.5707963267949001;
               $12382 = $12381 + -1.5707963267949001;
               $12383 = +HEAPF64[$x1959>>3];
               $12384 = $12383 + $12382;
               $12385 = (+__Z5IKsind($12384));
               $12386 = (+__Z5IKcosd($12384));
               $12387 = $12384 > 3.14159265358979;
               do {
                if ($12387) {
                 $12388 = $12384 + -6.2831853071795898;
                 $12391 = $12388;
                } else {
                 $12389 = $12384 < -3.14159265358979;
                 if (!($12389)) {
                  $12391 = $12384;
                  break;
                 }
                 $12390 = $12384 + 6.2831853071795898;
                 $12391 = $12390;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $12391;
               HEAPF64[$394>>3] = $12386;
               HEAPF64[$395>>3] = $12385;
               $12392 = +HEAPF64[$this>>3];
               $12393 = (+__Z5IKcosd($12392));
               $12394 = (+__Z5IKsind($12392));
               $12395 = +HEAPF64[$45>>3];
               $12396 = $12395 * 0.70710678118654802;
               $12397 = +HEAPF64[$43>>3];
               $12398 = $12397 * 0.063639610306789302;
               $12399 = $12395 * 0.063639610306789302;
               $12400 = $12397 * 0.70710678118654802;
               $12401 = $12393 * $12400;
               $12402 = $12394 * $12400;
               $12403 = $12394 * $12396;
               $12404 = $12393 * $12396;
               $12405 = $12403 + $12401;
               $12406 = -$12405;
               $12407 = $12406 - $12404;
               $12408 = $12402 + $12407;
               $12409 = +HEAPF64[$60>>3];
               $12410 = -0.21249999999999999 - $12409;
               $12411 = -$12394;
               $12412 = $12398 * $12411;
               $12413 = $12410 + $12412;
               $12414 = $12399 * $12411;
               $12415 = $12414 + $12413;
               $12416 = $12393 * $12398;
               $12417 = $12415 - $12416;
               $12418 = $12393 * $12399;
               $12419 = $12418 + $12417;
               $12420 = +HEAPF64[$47>>3];
               $12421 = $12420 * 1.1000000000000001;
               $12422 = $12421 + $12419;
               $12423 = (+__Z5IKabsd($12408));
               $12424 = $12423 > 5.0000000000000004E-6;
               if ($12424) {
                break L43;
               }
               $12425 = +HEAPF64[$76>>3];
               $12426 = +HEAPF64[$75>>3];
               $12427 = 0.044999999999999998 - $12404;
               $12428 = $12426 * 0.044999999999999998;
               $12429 = $12427 - $12428;
               $12430 = $12402 + $12429;
               $12431 = $12405 + $12430;
               $12432 = $12425 * 0.29999999999999999;
               $12433 = $12432 + $12431;
               $12434 = (+__Z5IKabsd($12433));
               $12435 = $12434 > 5.0000000000000004E-6;
               if ($12435) {
                break L43;
               }
               $12436 = (+__Z5IKabsd($12422));
               $12437 = $12436 > 5.0000000000000004E-6;
               if ($12437) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             $12243 = +HEAPF64[$7>>3];
             $12244 = (+__Z5IKabsd($12243));
             $12245 = $12244 + 3.14159265358979;
             $12246 = (+__Z6IKfmoddd($12245,6.2831853071795898));
             $12247 = $12246 + -3.14159265358979;
             $12248 = +HEAPF64[$47>>3];
             $12249 = $12248 + -0.84999999999999998;
             $12250 = (+__Z5IKabsd($12247));
             $12251 = $12250 < 9.9999999999999995E-7;
             if (!($12251)) {
              break L43;
             }
             $12252 = +HEAPF64[$60>>3];
             $12253 = 0.72250000000000003 - $12252;
             $12254 = (+__Z5IKabsd($12253));
             $12255 = $12254 < 9.9999999999999995E-7;
             if (!($12255)) {
              break L43;
             }
             $12256 = (+__Z5IKabsd($12249));
             $12257 = $12256 < 9.9999999999999995E-7;
             if (!($12257)) {
              break L43;
             }
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $12258 = +HEAPF64[$60>>3];
             $12259 = +HEAPF64[$47>>3];
             $12260 = $12259 * $12259;
             $12261 = $12258 - $12260;
             $12262 = (+__Z5IKabsd($12261));
             $12263 = $12262 < 9.9999999999999995E-7;
             if ($12263) {
              break L43;
             }
             HEAP16[$j4valid569>>1] = 0;
             HEAP8[$2>>0] = 2;
             $12264 = +HEAPF64[$45>>3];
             $12265 = $12264 * 0.70710678118654802;
             $12266 = +HEAPF64[$43>>3];
             $12267 = $12266 * 0.70710678118654802;
             $12268 = $12267 - $12265;
             $12269 = $12265 + $12267;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1941,$12268,$12269,1.9999999999999999E-6);
             $12270 = HEAP8[$385>>0]|0;
             $12271 = ($12270<<24>>24)==(0);
             if ($12271) {
              break L43;
             }
             $12272 = +HEAPF64[$x1941>>3];
             $12273 = -$12272;
             HEAPF64[$j4array566>>3] = $12273;
             $12274 = (+__Z5IKsind($12273));
             HEAPF64[$sj4array568>>3] = $12274;
             $12275 = (+__Z5IKcosd($12273));
             HEAPF64[$cj4array567>>3] = $12275;
             $12276 = 3.14159265358979 - $12272;
             HEAPF64[$386>>3] = $12276;
             $12277 = (+__Z5IKsind($12276));
             HEAPF64[$387>>3] = $12277;
             $12278 = +HEAPF64[$386>>3];
             $12279 = (+__Z5IKcosd($12278));
             HEAPF64[$388>>3] = $12279;
             $12280 = +HEAPF64[$j4array566>>3];
             $12281 = $12280 > 3.14159265358979;
             do {
              if ($12281) {
               $12282 = $12280 + -6.2831853071795898;
               HEAPF64[$j4array566>>3] = $12282;
              } else {
               $12283 = $12280 < -3.14159265358979;
               if (!($12283)) {
                break;
               }
               $12284 = $12280 + 6.2831853071795898;
               HEAPF64[$j4array566>>3] = $12284;
              }
             } while(0);
             HEAP8[$j4valid569>>0] = 1;
             $12285 = +HEAPF64[$386>>3];
             $12286 = $12285 > 3.14159265358979;
             do {
              if ($12286) {
               $12287 = $12285 + -6.2831853071795898;
               HEAPF64[$386>>3] = $12287;
              } else {
               $12288 = $12285 < -3.14159265358979;
               if (!($12288)) {
                break;
               }
               $12289 = $12285 + 6.2831853071795898;
               HEAPF64[$386>>3] = $12289;
              }
             } while(0);
             HEAP8[$389>>0] = 1;
             $ij4570$01148 = 0;
             while(1) {
              $12290 = (($j4valid569) + ($ij4570$01148)|0);
              $12291 = HEAP8[$12290>>0]|0;
              $12292 = ($12291<<24>>24)==(0);
              do {
               if (!($12292)) {
                $12293 = $ij4570$01148&255;
                HEAP8[$0>>0] = $12293;
                HEAP8[$1>>0] = -1;
                $iij4571$01145 = (($ij4570$01148) + 1)|0;
                $12294 = ($iij4571$01145|0)<(2);
                do {
                 if ($12294) {
                  $12295 = (($sj4array568) + ($ij4570$01148<<3)|0);
                  $12296 = (($j4valid569) + ($iij4571$01145)|0);
                  $12297 = HEAP8[$12296>>0]|0;
                  $12298 = ($12297<<24>>24)==(0);
                  if ($12298) {
                   break;
                  }
                  $12299 = (($cj4array567) + ($ij4570$01148<<3)|0);
                  $12300 = +HEAPF64[$12299>>3];
                  $12301 = (($cj4array567) + ($iij4571$01145<<3)|0);
                  $12302 = +HEAPF64[$12301>>3];
                  $12303 = $12300 - $12302;
                  $12304 = (+__Z5IKabsd($12303));
                  $12305 = $12304 < 9.9999999999999995E-7;
                  if (!($12305)) {
                   break;
                  }
                  $12306 = +HEAPF64[$12295>>3];
                  $12307 = (($sj4array568) + ($iij4571$01145<<3)|0);
                  $12308 = +HEAPF64[$12307>>3];
                  $12309 = $12306 - $12308;
                  $12310 = (+__Z5IKabsd($12309));
                  $12311 = $12310 < 9.9999999999999995E-7;
                  if (!($12311)) {
                   break;
                  }
                  HEAP8[$12296>>0] = 0;
                  $12312 = $iij4571$01145&255;
                  HEAP8[$1>>0] = $12312;
                 }
                } while(0);
                $12313 = (($j4array566) + ($ij4570$01148<<3)|0);
                $12314 = +HEAPF64[$12313>>3];
                HEAPF64[$this>>3] = $12314;
                $12315 = (($cj4array567) + ($ij4570$01148<<3)|0);
                $12316 = +HEAPF64[$12315>>3];
                HEAPF64[$390>>3] = $12316;
                $12317 = (($sj4array568) + ($ij4570$01148<<3)|0);
                $12318 = +HEAPF64[$12317>>3];
                HEAPF64[$391>>3] = $12318;
                $12319 = +HEAPF64[$this>>3];
                $12320 = (+__Z5IKcosd($12319));
                $12321 = (+__Z5IKsind($12319));
                $12322 = +HEAPF64[$45>>3];
                $12323 = $12322 * 0.70710678118654802;
                $12324 = +HEAPF64[$43>>3];
                $12325 = $12324 * 0.70710678118654802;
                $12326 = $12321 * 0.063639610306789302;
                $12327 = $12320 * 0.063639610306789302;
                $12328 = $12321 * $12325;
                $12329 = $12321 * $12323;
                $12330 = $12328 - $12329;
                $12331 = -$12320;
                $12332 = $12325 * $12331;
                $12333 = $12332 + $12330;
                $12334 = $12323 * $12331;
                $12335 = $12334 + $12333;
                $12336 = -$12324;
                $12337 = (+__Z5IKabsd($12335));
                $12338 = $12337 > 5.0000000000000004E-6;
                if ($12338) {
                 break;
                }
                $12339 = $12327 * $12322;
                $12340 = $12327 * $12336;
                $12341 = $12339 + $12340;
                $12342 = $12326 * $12336;
                $12343 = $12342 + $12341;
                $12344 = $12322 * $12326;
                $12345 = $12343 - $12344;
                $12346 = (+__Z5IKabsd($12345));
                $12347 = $12346 > 5.0000000000000004E-6;
                if ($12347) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $12348 = (($ij4570$01148) + 1)|0;
              $exitcond1740 = ($12348|0)==(2);
              if ($exitcond1740) {
               break L43;
              } else {
               $ij4570$01148 = $12348;
              }
             }
            }
           } while(0);
           $12525 = +HEAPF64[$76>>3];
           $12526 = $12525 * 0.044999999999999998;
           $12527 = +HEAPF64[$75>>3];
           $12528 = $12527 * 0.29999999999999999;
           $12529 = $12526 + $12528;
           $12530 = +HEAPF64[$3>>3];
           $12531 = $12530 + -3.14159265358979;
           $12532 = (+__Z5IKabsd($12531));
           $12533 = $12532 + 3.14159265358979;
           $12534 = (+__Z6IKfmoddd($12533,6.2831853071795898));
           $12535 = $12534 + -3.14159265358979;
           $12536 = $12529 + 0.55000000000000004;
           $12537 = +HEAPF64[$47>>3];
           $12538 = $12536 + $12537;
           $12539 = -0.55000000000000004 - $12537;
           $12540 = $12539 - $12529;
           $12541 = (+__Z5IKabsd($12535));
           $12542 = $12541 < 9.9999999999999995E-7;
           do {
            if ($12542) {
             $12543 = +HEAPF64[$60>>3];
             $12544 = $12525 * 0.076499999999999999;
             $12545 = $12544 + 0.39655000000000001;
             $12546 = $12545 - $12543;
             $12547 = $12527 * 0.32595000000000002;
             $12548 = $12547 + $12546;
             $12549 = (+__Z5IKabsd($12548));
             $12550 = $12549 < 9.9999999999999995E-7;
             if (!($12550)) {
              break;
             }
             $12551 = (+__Z5IKabsd($12538));
             $12552 = $12551 < 9.9999999999999995E-7;
             if (!($12552)) {
              break;
             }
             $12553 = (+__Z5IKabsd($12540));
             $12554 = $12553 < 9.9999999999999995E-7;
             if (!($12554)) {
              break;
             }
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             $12555 = +HEAPF64[$47>>3];
             $12556 = $12555 * $12555;
             $12557 = +HEAPF64[$75>>3];
             $12558 = $12557 * $12557;
             $12559 = +HEAPF64[$76>>3];
             $12560 = $12559 * $12559;
             $12561 = $12557 * 2.0;
             $12562 = +HEAPF64[$60>>3];
             $12563 = $12562 - $12556;
             $12564 = $12560 * 44.4444444444444;
             $12565 = $12562 * 13.3333333333333;
             $12566 = $12559 * $12565;
             $12567 = $12559 * 13.3333333333333;
             $12568 = $12556 * $12567;
             $12569 = (+__Z6IKsignd($12563));
             $12570 = (+__Z5IKabsd($12563));
             $12571 = $12570 < 9.9999999999999995E-7;
             do {
              if (!($12571)) {
               $12572 = $12556 * $12561;
               $12573 = $12556 * $12558;
               $12574 = $12572 - $12573;
               $12575 = $12574 + $12566;
               $12576 = $12558 * $12562;
               $12577 = $12576 + $12575;
               $12578 = $12557 * $12568;
               $12579 = $12578 + $12577;
               $12580 = $12562 * $12564;
               $12581 = $12580 + $12579;
               $12582 = $12557 * $12566;
               $12583 = $12581 - $12582;
               $12584 = $12562 + $12583;
               $12585 = $12584 - $12556;
               $12586 = $12585 - $12568;
               $12587 = $12561 * $12562;
               $12588 = $12586 - $12587;
               $12589 = $12556 * $12564;
               $12590 = $12588 - $12589;
               $12591 = (+__Z5IKabsd($12590));
               $12592 = $12591 < 9.9999999999999995E-7;
               if ($12592) {
                break;
               }
               $12593 = (+__Z5IKabsd($12569));
               $12594 = $12593 < 9.9999999999999995E-7;
               if ($12594) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $12828 = +HEAPF64[$45>>3];
               $12829 = $12828 * 0.031819805153394602;
               $12830 = +HEAPF64[$43>>3];
               $12831 = $12830 * 0.031819805153394602;
               $12832 = +HEAPF64[$76>>3];
               $12833 = $12832 * 0.21213203435596401;
               $12834 = +HEAPF64[$75>>3];
               $12835 = $12831 * $12834;
               $12836 = $12828 * $12833;
               $12837 = $12829 * $12834;
               $12838 = $12830 * $12833;
               $12839 = $12829 + $12836;
               $12840 = $12831 + $12838;
               $12841 = $12835 + $12837;
               $12842 = $12841 - $12839;
               $12843 = $12842 - $12840;
               $12844 = $12835 - $12837;
               $12845 = $12844 + $12839;
               $12846 = $12845 - $12840;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2052,$12843,$12846,1.9999999999999999E-6);
               $12847 = HEAP8[$411>>0]|0;
               $12848 = ($12847<<24>>24)==(0);
               if ($12848) {
                break L43;
               }
               $12849 = +HEAPF64[$60>>3];
               $12850 = +HEAPF64[$47>>3];
               $12851 = $12850 * $12850;
               $12852 = $12849 - $12851;
               $12853 = (+__Z6IKsignd($12852));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2053,$12853,-1);
               $12854 = HEAP8[$412>>0]|0;
               $12855 = ($12854<<24>>24)==(0);
               if ($12855) {
                break L43;
               }
               $12856 = +HEAPF64[$x2052>>3];
               $12857 = $12856 + -1.5707963267949001;
               $12858 = +HEAPF64[$x2053>>3];
               $12859 = $12858 * 1.5707963267949001;
               $12860 = $12857 + $12859;
               $12861 = (+__Z5IKsind($12860));
               $12862 = (+__Z5IKcosd($12860));
               $12863 = $12860 > 3.14159265358979;
               do {
                if ($12863) {
                 $12864 = $12860 + -6.2831853071795898;
                 $12867 = $12864;
                } else {
                 $12865 = $12860 < -3.14159265358979;
                 if (!($12865)) {
                  $12867 = $12860;
                  break;
                 }
                 $12866 = $12860 + 6.2831853071795898;
                 $12867 = $12866;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $12867;
               HEAPF64[$413>>3] = $12862;
               HEAPF64[$414>>3] = $12861;
               $12868 = +HEAPF64[$this>>3];
               $12869 = (+__Z5IKcosd($12868));
               $12870 = (+__Z5IKsind($12868));
               $12871 = +HEAPF64[$45>>3];
               $12872 = $12871 * 0.70710678118654802;
               $12873 = +HEAPF64[$43>>3];
               $12874 = $12873 * 0.063639610306789302;
               $12875 = $12871 * 0.063639610306789302;
               $12876 = $12873 * 0.70710678118654802;
               $12877 = $12869 * $12876;
               $12878 = $12870 * $12876;
               $12879 = $12870 * $12872;
               $12880 = $12869 * $12872;
               $12881 = $12879 + $12877;
               $12882 = $12878 - $12881;
               $12883 = $12882 - $12880;
               $12884 = $12869 * $12874;
               $12885 = -0.21249999999999999 - $12884;
               $12886 = $12869 * $12875;
               $12887 = $12886 + $12885;
               $12888 = +HEAPF64[$60>>3];
               $12889 = $12887 - $12888;
               $12890 = +HEAPF64[$47>>3];
               $12891 = $12890 * 1.1000000000000001;
               $12892 = $12889 - $12891;
               $12893 = -$12870;
               $12894 = $12875 * $12893;
               $12895 = $12894 + $12892;
               $12896 = $12874 * $12893;
               $12897 = $12896 + $12895;
               $12898 = (+__Z5IKabsd($12883));
               $12899 = $12898 > 5.0000000000000004E-6;
               if ($12899) {
                break L43;
               }
               $12900 = +HEAPF64[$76>>3];
               $12901 = +HEAPF64[$75>>3];
               $12902 = $12878 + 0.044999999999999998;
               $12903 = $12902 + $12881;
               $12904 = $12903 - $12880;
               $12905 = $12901 * 0.044999999999999998;
               $12906 = $12904 - $12905;
               $12907 = $12900 * 0.29999999999999999;
               $12908 = $12907 + $12906;
               $12909 = (+__Z5IKabsd($12908));
               $12910 = $12909 > 5.0000000000000004E-6;
               if ($12910) {
                break L43;
               }
               $12911 = (+__Z5IKabsd($12897));
               $12912 = $12911 > 5.0000000000000004E-6;
               if ($12912) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             $12595 = +HEAPF64[$47>>3];
             $12596 = $12595 * $12595;
             $12597 = +HEAPF64[$60>>3];
             $12598 = $12597 * $12597;
             $12599 = $12595 * $12596;
             $12600 = $12596 - $12597;
             $12601 = $12596 * -22.145328719723199;
             $12602 = $12601 * $12598;
             $12603 = $12598 * 9.4117647058823497;
             $12604 = $12602 + $12603;
             $12605 = $12599 * 10.352941176470599;
             $12606 = $12604 - $12605;
             $12607 = $12596 * $12596;
             $12608 = $12607 * 26.7958477508651;
             $12609 = $12606 - $12608;
             $12610 = $12597 * $12598;
             $12611 = $12610 * 22.145328719723199;
             $12612 = $12611 + $12609;
             $12613 = $12597 * 17.384083044982699;
             $12614 = $12596 * $12613;
             $12615 = $12614 + $12612;
             $12616 = $12597 + $12615;
             $12617 = $12616 - $12596;
             $12618 = $12597 * -48.719723183390997;
             $12619 = $12618 * $12599;
             $12620 = $12619 + $12617;
             $12621 = $12597 * 10.352941176470599;
             $12622 = $12595 * $12621;
             $12623 = $12622 + $12620;
             $12624 = $12595 * 48.719723183390997;
             $12625 = $12624 * $12598;
             $12626 = $12625 + $12623;
             $12627 = (+__Z5IKabsd($12600));
             $12628 = $12627 < 9.9999999999999995E-7;
             do {
              if (!($12628)) {
               $12629 = $12597 * 0.089999999999999996;
               $12630 = $12596 * 0.089999999999999996;
               $12631 = $12630 - $12629;
               $12632 = (+__Z6IKsignd($12631));
               $12633 = (+__Z5IKabsd($12632));
               $12634 = $12633 < 9.9999999999999995E-7;
               if ($12634) {
                break;
               }
               $12635 = (+__Z5IKabsd($12626));
               $12636 = $12635 < 9.9999999999999995E-7;
               if ($12636) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $12743 = +HEAPF64[$43>>3];
               $12744 = $12743 * 0.150260191002141;
               $12745 = +HEAPF64[$45>>3];
               $12746 = $12745 * 0.150260191002141;
               $12747 = +HEAPF64[$47>>3];
               $12748 = $12747 * 0.77781745930520196;
               $12749 = +HEAPF64[$60>>3];
               $12750 = $12749 * 0.70710678118654802;
               $12751 = $12743 * $12750;
               $12752 = $12743 * $12748;
               $12753 = $12745 * $12750;
               $12754 = $12745 * $12748;
               $12755 = $12754 + $12753;
               $12756 = $12746 + $12755;
               $12757 = $12752 + $12751;
               $12758 = $12744 + $12757;
               $12759 = $12749 * 0.089999999999999996;
               $12760 = $12747 * $12747;
               $12761 = $12760 * 0.089999999999999996;
               $12762 = $12761 - $12759;
               $12763 = (+__Z6IKsignd($12762));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2029,$12763,-1);
               $12764 = HEAP8[$407>>0]|0;
               $12765 = ($12764<<24>>24)==(0);
               if ($12765) {
                break L43;
               }
               $12766 = $12756 + $12758;
               $12767 = $12758 - $12756;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2030,$12766,$12767,1.9999999999999999E-6);
               $12768 = HEAP8[$408>>0]|0;
               $12769 = ($12768<<24>>24)==(0);
               if ($12769) {
                break L43;
               }
               $12770 = +HEAPF64[$x2029>>3];
               $12771 = $12770 * 1.5707963267949001;
               $12772 = $12771 + -1.5707963267949001;
               $12773 = +HEAPF64[$x2030>>3];
               $12774 = $12773 + $12772;
               $12775 = (+__Z5IKsind($12774));
               $12776 = (+__Z5IKcosd($12774));
               $12777 = $12774 > 3.14159265358979;
               do {
                if ($12777) {
                 $12778 = $12774 + -6.2831853071795898;
                 $12781 = $12778;
                } else {
                 $12779 = $12774 < -3.14159265358979;
                 if (!($12779)) {
                  $12781 = $12774;
                  break;
                 }
                 $12780 = $12774 + 6.2831853071795898;
                 $12781 = $12780;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $12781;
               HEAPF64[$409>>3] = $12776;
               HEAPF64[$410>>3] = $12775;
               $12782 = +HEAPF64[$this>>3];
               $12783 = (+__Z5IKcosd($12782));
               $12784 = (+__Z5IKsind($12782));
               $12785 = +HEAPF64[$45>>3];
               $12786 = $12785 * 0.70710678118654802;
               $12787 = +HEAPF64[$43>>3];
               $12788 = $12787 * 0.063639610306789302;
               $12789 = $12785 * 0.063639610306789302;
               $12790 = $12787 * 0.70710678118654802;
               $12791 = $12783 * $12790;
               $12792 = $12784 * $12790;
               $12793 = $12784 * $12786;
               $12794 = $12783 * $12786;
               $12795 = $12793 + $12791;
               $12796 = -$12794;
               $12797 = $12796 - $12795;
               $12798 = $12792 + $12797;
               $12799 = $12783 * $12789;
               $12800 = $12799 + -0.21249999999999999;
               $12801 = +HEAPF64[$60>>3];
               $12802 = $12800 - $12801;
               $12803 = +HEAPF64[$47>>3];
               $12804 = $12803 * 1.1000000000000001;
               $12805 = $12802 - $12804;
               $12806 = -$12784;
               $12807 = $12788 * $12806;
               $12808 = $12807 + $12805;
               $12809 = $12789 * $12806;
               $12810 = $12809 + $12808;
               $12811 = $12783 * $12788;
               $12812 = $12810 - $12811;
               $12813 = (+__Z5IKabsd($12798));
               $12814 = $12813 > 5.0000000000000004E-6;
               if ($12814) {
                break L43;
               }
               $12815 = +HEAPF64[$76>>3];
               $12816 = +HEAPF64[$75>>3];
               $12817 = 0.044999999999999998 - $12794;
               $12818 = $12817 + $12795;
               $12819 = $12792 + $12818;
               $12820 = $12816 * 0.044999999999999998;
               $12821 = $12819 - $12820;
               $12822 = $12815 * 0.29999999999999999;
               $12823 = $12822 + $12821;
               $12824 = (+__Z5IKabsd($12823));
               $12825 = $12824 > 5.0000000000000004E-6;
               if ($12825) {
                break L43;
               }
               $12826 = (+__Z5IKabsd($12812));
               $12827 = $12826 > 5.0000000000000004E-6;
               if ($12827) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             $12637 = +HEAPF64[$7>>3];
             $12638 = (+__Z5IKabsd($12637));
             $12639 = $12638 + 3.14159265358979;
             $12640 = (+__Z6IKfmoddd($12639,6.2831853071795898));
             $12641 = $12640 + -3.14159265358979;
             $12642 = +HEAPF64[$47>>3];
             $12643 = $12642 + 0.84999999999999998;
             $12644 = (+__Z5IKabsd($12641));
             $12645 = $12644 < 9.9999999999999995E-7;
             if (!($12645)) {
              break L43;
             }
             $12646 = +HEAPF64[$60>>3];
             $12647 = 0.72250000000000003 - $12646;
             $12648 = (+__Z5IKabsd($12647));
             $12649 = $12648 < 9.9999999999999995E-7;
             if (!($12649)) {
              break L43;
             }
             $12650 = (+__Z5IKabsd($12643));
             $12651 = $12650 < 9.9999999999999995E-7;
             if (!($12651)) {
              break L43;
             }
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $12652 = +HEAPF64[$60>>3];
             $12653 = +HEAPF64[$47>>3];
             $12654 = $12653 * $12653;
             $12655 = $12652 - $12654;
             $12656 = (+__Z5IKabsd($12655));
             $12657 = $12656 < 9.9999999999999995E-7;
             if ($12657) {
              break L43;
             }
             HEAP16[$j4valid597>>1] = 0;
             HEAP8[$2>>0] = 2;
             $12658 = +HEAPF64[$45>>3];
             $12659 = $12658 * 0.70710678118654802;
             $12660 = +HEAPF64[$43>>3];
             $12661 = $12660 * 0.70710678118654802;
             $12662 = $12661 - $12659;
             $12663 = $12659 + $12661;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2012,$12662,$12663,1.9999999999999999E-6);
             $12664 = HEAP8[$400>>0]|0;
             $12665 = ($12664<<24>>24)==(0);
             if ($12665) {
              break L43;
             }
             $12666 = +HEAPF64[$x2012>>3];
             $12667 = -$12666;
             HEAPF64[$j4array594>>3] = $12667;
             $12668 = (+__Z5IKsind($12667));
             HEAPF64[$sj4array596>>3] = $12668;
             $12669 = (+__Z5IKcosd($12667));
             HEAPF64[$cj4array595>>3] = $12669;
             $12670 = 3.14159265358979 - $12666;
             HEAPF64[$401>>3] = $12670;
             $12671 = (+__Z5IKsind($12670));
             HEAPF64[$402>>3] = $12671;
             $12672 = +HEAPF64[$401>>3];
             $12673 = (+__Z5IKcosd($12672));
             HEAPF64[$403>>3] = $12673;
             $12674 = +HEAPF64[$j4array594>>3];
             $12675 = $12674 > 3.14159265358979;
             do {
              if ($12675) {
               $12676 = $12674 + -6.2831853071795898;
               HEAPF64[$j4array594>>3] = $12676;
              } else {
               $12677 = $12674 < -3.14159265358979;
               if (!($12677)) {
                break;
               }
               $12678 = $12674 + 6.2831853071795898;
               HEAPF64[$j4array594>>3] = $12678;
              }
             } while(0);
             HEAP8[$j4valid597>>0] = 1;
             $12679 = +HEAPF64[$401>>3];
             $12680 = $12679 > 3.14159265358979;
             do {
              if ($12680) {
               $12681 = $12679 + -6.2831853071795898;
               HEAPF64[$401>>3] = $12681;
              } else {
               $12682 = $12679 < -3.14159265358979;
               if (!($12682)) {
                break;
               }
               $12683 = $12679 + 6.2831853071795898;
               HEAPF64[$401>>3] = $12683;
              }
             } while(0);
             HEAP8[$404>>0] = 1;
             $ij4598$01136 = 0;
             while(1) {
              $12684 = (($j4valid597) + ($ij4598$01136)|0);
              $12685 = HEAP8[$12684>>0]|0;
              $12686 = ($12685<<24>>24)==(0);
              do {
               if (!($12686)) {
                $12687 = $ij4598$01136&255;
                HEAP8[$0>>0] = $12687;
                HEAP8[$1>>0] = -1;
                $iij4599$01133 = (($ij4598$01136) + 1)|0;
                $12688 = ($iij4599$01133|0)<(2);
                do {
                 if ($12688) {
                  $12689 = (($sj4array596) + ($ij4598$01136<<3)|0);
                  $12690 = (($j4valid597) + ($iij4599$01133)|0);
                  $12691 = HEAP8[$12690>>0]|0;
                  $12692 = ($12691<<24>>24)==(0);
                  if ($12692) {
                   break;
                  }
                  $12693 = (($cj4array595) + ($ij4598$01136<<3)|0);
                  $12694 = +HEAPF64[$12693>>3];
                  $12695 = (($cj4array595) + ($iij4599$01133<<3)|0);
                  $12696 = +HEAPF64[$12695>>3];
                  $12697 = $12694 - $12696;
                  $12698 = (+__Z5IKabsd($12697));
                  $12699 = $12698 < 9.9999999999999995E-7;
                  if (!($12699)) {
                   break;
                  }
                  $12700 = +HEAPF64[$12689>>3];
                  $12701 = (($sj4array596) + ($iij4599$01133<<3)|0);
                  $12702 = +HEAPF64[$12701>>3];
                  $12703 = $12700 - $12702;
                  $12704 = (+__Z5IKabsd($12703));
                  $12705 = $12704 < 9.9999999999999995E-7;
                  if (!($12705)) {
                   break;
                  }
                  HEAP8[$12690>>0] = 0;
                  $12706 = $iij4599$01133&255;
                  HEAP8[$1>>0] = $12706;
                 }
                } while(0);
                $12707 = (($j4array594) + ($ij4598$01136<<3)|0);
                $12708 = +HEAPF64[$12707>>3];
                HEAPF64[$this>>3] = $12708;
                $12709 = (($cj4array595) + ($ij4598$01136<<3)|0);
                $12710 = +HEAPF64[$12709>>3];
                HEAPF64[$405>>3] = $12710;
                $12711 = (($sj4array596) + ($ij4598$01136<<3)|0);
                $12712 = +HEAPF64[$12711>>3];
                HEAPF64[$406>>3] = $12712;
                $12713 = +HEAPF64[$this>>3];
                $12714 = (+__Z5IKcosd($12713));
                $12715 = (+__Z5IKsind($12713));
                $12716 = +HEAPF64[$45>>3];
                $12717 = $12716 * 0.70710678118654802;
                $12718 = +HEAPF64[$43>>3];
                $12719 = $12718 * 0.70710678118654802;
                $12720 = $12715 * 0.063639610306789302;
                $12721 = $12714 * 0.063639610306789302;
                $12722 = -$12714;
                $12723 = $12719 * $12722;
                $12724 = $12717 * $12722;
                $12725 = $12724 + $12723;
                $12726 = $12715 * $12719;
                $12727 = $12726 + $12725;
                $12728 = $12715 * $12717;
                $12729 = $12727 - $12728;
                $12730 = -$12718;
                $12731 = (+__Z5IKabsd($12729));
                $12732 = $12731 > 5.0000000000000004E-6;
                if ($12732) {
                 break;
                }
                $12733 = $12721 * $12716;
                $12734 = $12716 * $12720;
                $12735 = $12733 - $12734;
                $12736 = $12720 * $12730;
                $12737 = $12735 + $12736;
                $12738 = $12721 * $12730;
                $12739 = $12738 + $12737;
                $12740 = (+__Z5IKabsd($12739));
                $12741 = $12740 > 5.0000000000000004E-6;
                if ($12741) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $12742 = (($ij4598$01136) + 1)|0;
              $exitcond1737 = ($12742|0)==(2);
              if ($exitcond1737) {
               break L43;
              } else {
               $ij4598$01136 = $12742;
              }
             }
            }
           } while(0);
           $12913 = +HEAPF64[$3>>3];
           $12914 = $12913 + -1.5707963267949001;
           $12915 = (+__Z5IKabsd($12914));
           $12916 = $12915 + 3.14159265358979;
           $12917 = (+__Z6IKfmoddd($12916,6.2831853071795898));
           $12918 = $12917 + -3.14159265358979;
           $12919 = +HEAPF64[$47>>3];
           $12920 = (+__Z5IKabsd($12918));
           $12921 = $12920 < 9.9999999999999995E-7;
           do {
            if ($12921) {
             $12922 = +HEAPF64[$75>>3];
             $12923 = +HEAPF64[$60>>3];
             $12924 = +HEAPF64[$76>>3];
             $12925 = $12924 * 0.076499999999999999;
             $12926 = $12925 + 0.39655000000000001;
             $12927 = $12926 - $12923;
             $12928 = $12922 * 0.32595000000000002;
             $12929 = $12928 + $12927;
             $12930 = (+__Z5IKabsd($12929));
             $12931 = $12930 < 9.9999999999999995E-7;
             if (!($12931)) {
              break;
             }
             $12932 = (+__Z5IKabsd($12919));
             $12933 = $12932 < 9.9999999999999995E-7;
             if (!($12933)) {
              break;
             }
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$384>>3] = 1.0;
             HEAPF64[$383>>3] = 0.0;
             HEAPF64[$3>>3] = 1.5707963267949001;
             $12934 = +HEAPF64[$47>>3];
             $12935 = $12934 * $12934;
             $12936 = +HEAPF64[$76>>3];
             $12937 = $12936 * $12936;
             $12938 = +HEAPF64[$75>>3];
             $12939 = $12938 * $12938;
             $12940 = $12938 * 4.2607843137254902;
             $12941 = +HEAPF64[$60>>3];
             $12942 = $12935 - $12941;
             $12943 = $12937 * 1.20294117647059;
             $12944 = $12939 * 1.20294117647059;
             $12945 = -$12935;
             $12946 = (+__Z6IKsignd($12942));
             $12947 = (+__Z5IKabsd($12942));
             $12948 = $12947 < 9.9999999999999995E-7;
             do {
              if (!($12948)) {
               $12949 = $12936 * $12941;
               $12950 = $12935 * 3.9807189542483701;
               $12951 = $12949 - $12950;
               $12952 = $12936 * $12935;
               $12953 = $12951 - $12952;
               $12954 = $12940 * $12945;
               $12955 = $12954 + $12953;
               $12956 = $12941 * $12940;
               $12957 = $12956 + $12955;
               $12958 = $12941 * 3.9807189542483701;
               $12959 = $12958 + $12957;
               $12960 = $12944 * $12945;
               $12961 = $12960 + $12959;
               $12962 = $12943 * $12945;
               $12963 = $12962 + $12961;
               $12964 = $12941 * $12944;
               $12965 = $12964 + $12963;
               $12966 = $12941 * $12943;
               $12967 = $12966 + $12965;
               $12968 = (+__Z5IKabsd($12967));
               $12969 = $12968 < 9.9999999999999995E-7;
               if ($12969) {
                break;
               }
               $12970 = (+__Z5IKabsd($12946));
               $12971 = $12970 < 9.9999999999999995E-7;
               if ($12971) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $13092 = +HEAPF64[$75>>3];
               $13093 = $13092 * 0.243951839509359;
               $13094 = +HEAPF64[$43>>3];
               $13095 = +HEAPF64[$76>>3];
               $13096 = $13094 * $13095;
               $13097 = +HEAPF64[$45>>3];
               $13098 = $13095 * $13097;
               $13099 = $13092 * 0.18031222920257001;
               $13100 = +HEAPF64[$60>>3];
               $13101 = +HEAPF64[$47>>3];
               $13102 = $13101 * $13101;
               $13103 = $13102 - $13100;
               $13104 = (+__Z6IKsignd($13103));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2096,$13104,-1);
               $13105 = HEAP8[$419>>0]|0;
               $13106 = ($13105<<24>>24)==(0);
               if ($13106) {
                break L43;
               }
               $13107 = +HEAPF64[$45>>3];
               $13108 = -$13107;
               $13109 = $13093 * $13108;
               $13110 = $13098 * 0.18031222920257001;
               $13111 = $13110 + $13109;
               $13112 = $13096 * 0.243951839509359;
               $13113 = $13112 + $13111;
               $13114 = $13107 * 0.35708892449920698;
               $13115 = $13113 - $13114;
               $13116 = +HEAPF64[$43>>3];
               $13117 = $13099 * $13116;
               $13118 = $13117 + $13115;
               $13119 = $13116 * 0.42072853480599598;
               $13120 = $13119 + $13118;
               $13121 = $13099 * $13108;
               $13122 = $13096 * 0.18031222920257001;
               $13123 = $13122 + $13121;
               $13124 = $13116 * 0.35708892449920698;
               $13125 = $13123 - $13124;
               $13126 = $13107 * 0.42072853480599598;
               $13127 = $13125 - $13126;
               $13128 = $13098 * 0.243951839509359;
               $13129 = $13127 - $13128;
               $13130 = $13093 * $13116;
               $13131 = $13129 - $13130;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2097,$13120,$13131,1.9999999999999999E-6);
               $13132 = HEAP8[$420>>0]|0;
               $13133 = ($13132<<24>>24)==(0);
               if ($13133) {
                break L43;
               }
               $13134 = +HEAPF64[$x2096>>3];
               $13135 = $13134 * 1.5707963267949001;
               $13136 = $13135 + -1.5707963267949001;
               $13137 = +HEAPF64[$x2097>>3];
               $13138 = $13137 + $13136;
               $13139 = (+__Z5IKsind($13138));
               $13140 = (+__Z5IKcosd($13138));
               $13141 = $13138 > 3.14159265358979;
               do {
                if ($13141) {
                 $13142 = $13138 + -6.2831853071795898;
                 $13145 = $13142;
                } else {
                 $13143 = $13138 < -3.14159265358979;
                 if (!($13143)) {
                  $13145 = $13138;
                  break;
                 }
                 $13144 = $13138 + 6.2831853071795898;
                 $13145 = $13144;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $13145;
               HEAPF64[$421>>3] = $13140;
               HEAPF64[$422>>3] = $13139;
               $13146 = +HEAPF64[$this>>3];
               $13147 = (+__Z5IKcosd($13146));
               $13148 = (+__Z5IKsind($13146));
               $13149 = +HEAPF64[$45>>3];
               $13150 = $13149 * 0.70710678118654802;
               $13151 = +HEAPF64[$43>>3];
               $13152 = $13148 * $13151;
               $13153 = $13147 * $13151;
               $13154 = $13153 * 0.70710678118654802;
               $13155 = $13147 * $13150;
               $13156 = $13148 * $13150;
               $13157 = $13152 * 0.70710678118654802;
               $13158 = $13156 + $13154;
               $13159 = $13152 * 0.84145706961199196;
               $13160 = -0.21249999999999999 - $13159;
               $13161 = +HEAPF64[$60>>3];
               $13162 = $13160 - $13161;
               $13163 = $13149 * 0.71417784899841297;
               $13164 = $13148 * $13163;
               $13165 = $13164 + $13162;
               $13166 = $13149 * 0.84145706961199196;
               $13167 = $13147 * $13166;
               $13168 = $13167 + $13165;
               $13169 = $13153 * 0.71417784899841297;
               $13170 = $13169 + $13168;
               $13171 = +HEAPF64[$75>>3];
               $13172 = +HEAPF64[$76>>3];
               $13173 = $13172 * 0.044999999999999998;
               $13174 = -0.55000000000000004 - $13173;
               $13175 = $13171 * 0.29999999999999999;
               $13176 = $13174 - $13175;
               $13177 = $13176 - $13157;
               $13178 = $13158 + $13177;
               $13179 = $13155 + $13178;
               $13180 = (+__Z5IKabsd($13170));
               $13181 = $13180 > 5.0000000000000004E-6;
               if ($13181) {
                break L43;
               }
               $13182 = 0.044999999999999998 - $13155;
               $13183 = $13182 + $13158;
               $13184 = $13157 + $13183;
               $13185 = $13171 * 0.044999999999999998;
               $13186 = $13184 - $13185;
               $13187 = $13172 * 0.29999999999999999;
               $13188 = $13187 + $13186;
               $13189 = (+__Z5IKabsd($13188));
               $13190 = $13189 > 5.0000000000000004E-6;
               if ($13190) {
                break L43;
               }
               $13191 = (+__Z5IKabsd($13179));
               $13192 = $13191 > 5.0000000000000004E-6;
               if ($13192) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             HEAPF64[$24>>3] = 1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = 1.5707963267949001;
             HEAPF64[$384>>3] = 1.0;
             HEAPF64[$383>>3] = 0.0;
             HEAPF64[$3>>3] = 1.5707963267949001;
             $12972 = +HEAPF64[$47>>3];
             $12973 = $12972 * $12972;
             $12974 = +HEAPF64[$60>>3];
             $12975 = $12974 - $12973;
             $12976 = (+__Z5IKabsd($12975));
             $12977 = $12976 < 9.9999999999999995E-7;
             if ($12977) {
              break L43;
             }
             $12978 = $12973 * 1.1000000000000001;
             $12979 = $12974 * 1.1000000000000001;
             $12980 = $12979 - $12978;
             $12981 = (+__Z6IKsignd($12980));
             $12982 = (+__Z5IKabsd($12981));
             $12983 = $12982 < 9.9999999999999995E-7;
             if ($12983) {
              break L43;
             }
             HEAP8[$2>>0] = 1;
             $12984 = +HEAPF64[$75>>3];
             $12985 = $12984 * 0.0378655681325396;
             $12986 = +HEAPF64[$60>>3];
             $12987 = $12986 * 0.70710678118654802;
             $12988 = +HEAPF64[$43>>3];
             $12989 = +HEAPF64[$76>>3];
             $12990 = $12988 * $12989;
             $12991 = $12984 * 0.0321380032049286;
             $12992 = +HEAPF64[$45>>3];
             $12993 = $12989 * $12992;
             $12994 = $12987 * $12992;
             $12995 = $12988 * $12987;
             $12996 = $12992 * 0.112394622869602;
             $12997 = $12996 + $12994;
             $12998 = $12993 * 0.25243712088359699;
             $12999 = $12997 - $12998;
             $13000 = $12999 - $12995;
             $13001 = $12985 * $12992;
             $13002 = $13001 + $13000;
             $13003 = $12991 * $12988;
             $13004 = $13003 + $13002;
             $13005 = $12988 * 0.18239819420707001;
             $13006 = $13004 - $13005;
             $13007 = $12990 * 0.214253354699524;
             $13008 = $13006 - $13007;
             $13009 = $12993 * 0.214253354699524;
             $13010 = $12988 * 0.112394622869602;
             $13011 = $13010 + $13009;
             $13012 = $12995 + $13011;
             $13013 = $12994 + $13012;
             $13014 = $12990 * 0.25243712088359699;
             $13015 = $13013 - $13014;
             $13016 = $12985 * $12988;
             $13017 = $13016 + $13015;
             $13018 = $12992 * 0.18239819420707001;
             $13019 = $13018 + $13017;
             $13020 = $12991 * $12992;
             $13021 = $13019 - $13020;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2080,$13008,$13021,1.9999999999999999E-6);
             $13022 = HEAP8[$415>>0]|0;
             $13023 = ($13022<<24>>24)==(0);
             if ($13023) {
              break L43;
             }
             $13024 = +HEAPF64[$47>>3];
             $13025 = $13024 * $13024;
             $13026 = $13025 * 1.1000000000000001;
             $13027 = +HEAPF64[$60>>3];
             $13028 = $13027 * 1.1000000000000001;
             $13029 = $13028 - $13026;
             $13030 = (+__Z6IKsignd($13029));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2081,$13030,-1);
             $13031 = HEAP8[$416>>0]|0;
             $13032 = ($13031<<24>>24)==(0);
             if ($13032) {
              break L43;
             }
             $13033 = +HEAPF64[$x2080>>3];
             $13034 = $13033 + -1.5707963267949001;
             $13035 = +HEAPF64[$x2081>>3];
             $13036 = $13035 * 1.5707963267949001;
             $13037 = $13034 + $13036;
             $13038 = (+__Z5IKsind($13037));
             $13039 = (+__Z5IKcosd($13037));
             $13040 = $13037 > 3.14159265358979;
             do {
              if ($13040) {
               $13041 = $13037 + -6.2831853071795898;
               $13044 = $13041;
              } else {
               $13042 = $13037 < -3.14159265358979;
               if (!($13042)) {
                $13044 = $13037;
                break;
               }
               $13043 = $13037 + 6.2831853071795898;
               $13044 = $13043;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $13044;
             HEAPF64[$417>>3] = $13039;
             HEAPF64[$418>>3] = $13038;
             $13045 = +HEAPF64[$this>>3];
             $13046 = (+__Z5IKcosd($13045));
             $13047 = (+__Z5IKsind($13045));
             $13048 = +HEAPF64[$45>>3];
             $13049 = $13048 * 0.70710678118654802;
             $13050 = +HEAPF64[$43>>3];
             $13051 = $13047 * $13050;
             $13052 = $13046 * $13050;
             $13053 = $13052 * 0.70710678118654802;
             $13054 = $13046 * $13049;
             $13055 = $13047 * $13049;
             $13056 = $13051 * 0.70710678118654802;
             $13057 = $13055 + $13053;
             $13058 = +HEAPF64[$60>>3];
             $13059 = -0.21249999999999999 - $13058;
             $13060 = $13051 * 0.84145706961199196;
             $13061 = $13059 - $13060;
             $13062 = $13048 * 0.71417784899841297;
             $13063 = $13047 * $13062;
             $13064 = $13063 + $13061;
             $13065 = $13052 * 0.71417784899841297;
             $13066 = $13065 + $13064;
             $13067 = $13048 * 0.84145706961199196;
             $13068 = $13046 * $13067;
             $13069 = $13068 + $13066;
             $13070 = +HEAPF64[$75>>3];
             $13071 = +HEAPF64[$76>>3];
             $13072 = $13071 * 0.044999999999999998;
             $13073 = -0.55000000000000004 - $13072;
             $13074 = $13073 - $13056;
             $13075 = $13070 * 0.29999999999999999;
             $13076 = $13074 - $13075;
             $13077 = $13057 + $13076;
             $13078 = $13054 + $13077;
             $13079 = (+__Z5IKabsd($13069));
             $13080 = $13079 > 5.0000000000000004E-6;
             if ($13080) {
              break L43;
             }
             $13081 = $13057 + 0.044999999999999998;
             $13082 = $13056 + $13081;
             $13083 = $13082 - $13054;
             $13084 = $13070 * 0.044999999999999998;
             $13085 = $13083 - $13084;
             $13086 = $13071 * 0.29999999999999999;
             $13087 = $13086 + $13085;
             $13088 = (+__Z5IKabsd($13087));
             $13089 = $13088 > 5.0000000000000004E-6;
             if ($13089) {
              break L43;
             }
             $13090 = (+__Z5IKabsd($13078));
             $13091 = $13090 > 5.0000000000000004E-6;
             if ($13091) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           $13193 = +HEAPF64[$3>>3];
           $13194 = $13193 + 1.5707963267949001;
           $13195 = (+__Z5IKabsd($13194));
           $13196 = $13195 + 3.14159265358979;
           $13197 = (+__Z6IKfmoddd($13196,6.2831853071795898));
           $13198 = $13197 + -3.14159265358979;
           $13199 = +HEAPF64[$47>>3];
           $13200 = (+__Z5IKabsd($13198));
           $13201 = $13200 < 9.9999999999999995E-7;
           if (!($13201)) {
            break L43;
           }
           $13202 = +HEAPF64[$75>>3];
           $13203 = +HEAPF64[$60>>3];
           $13204 = +HEAPF64[$76>>3];
           $13205 = $13204 * 0.076499999999999999;
           $13206 = $13205 + 0.39655000000000001;
           $13207 = $13206 - $13203;
           $13208 = $13202 * 0.32595000000000002;
           $13209 = $13208 + $13207;
           $13210 = (+__Z5IKabsd($13209));
           $13211 = $13210 < 9.9999999999999995E-7;
           if (!($13211)) {
            break L43;
           }
           $13212 = (+__Z5IKabsd($13199));
           $13213 = $13212 < 9.9999999999999995E-7;
           if (!($13213)) {
            break L43;
           }
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$384>>3] = -1.0;
           HEAPF64[$383>>3] = 0.0;
           HEAPF64[$3>>3] = -1.5707963267949001;
           $13214 = +HEAPF64[$47>>3];
           $13215 = $13214 * $13214;
           $13216 = +HEAPF64[$76>>3];
           $13217 = $13216 * $13216;
           $13218 = +HEAPF64[$75>>3];
           $13219 = $13218 * $13218;
           $13220 = $13218 * 4.2607843137254902;
           $13221 = +HEAPF64[$60>>3];
           $13222 = -$13215;
           $13223 = $13221 - $13215;
           $13224 = $13217 * 1.20294117647059;
           $13225 = $13219 * 1.20294117647059;
           $13226 = (+__Z6IKsignd($13223));
           $13227 = (+__Z5IKabsd($13223));
           $13228 = $13227 < 9.9999999999999995E-7;
           do {
            if (!($13228)) {
             $13229 = $13215 * 3.9807189542483701;
             $13230 = $13221 * $13224;
             $13231 = $13230 - $13229;
             $13232 = $13221 * $13225;
             $13233 = $13231 + $13232;
             $13234 = $13221 * $13220;
             $13235 = $13234 + $13233;
             $13236 = $13216 * $13221;
             $13237 = $13236 + $13235;
             $13238 = $13216 * $13215;
             $13239 = $13237 - $13238;
             $13240 = $13220 * $13222;
             $13241 = $13240 + $13239;
             $13242 = $13225 * $13222;
             $13243 = $13242 + $13241;
             $13244 = $13224 * $13222;
             $13245 = $13244 + $13243;
             $13246 = $13221 * 3.9807189542483701;
             $13247 = $13246 + $13245;
             $13248 = (+__Z5IKabsd($13247));
             $13249 = $13248 < 9.9999999999999995E-7;
             if ($13249) {
              break;
             }
             $13250 = (+__Z5IKabsd($13226));
             $13251 = $13250 < 9.9999999999999995E-7;
             if ($13251) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $13374 = +HEAPF64[$45>>3];
             $13375 = $13374 * 0.243951839509359;
             $13376 = +HEAPF64[$43>>3];
             $13377 = +HEAPF64[$76>>3];
             $13378 = $13376 * $13377;
             $13379 = $13374 * 0.18031222920257001;
             $13380 = +HEAPF64[$75>>3];
             $13381 = $13376 * $13380;
             $13382 = +HEAPF64[$60>>3];
             $13383 = +HEAPF64[$47>>3];
             $13384 = $13383 * $13383;
             $13385 = $13382 - $13384;
             $13386 = (+__Z6IKsignd($13385));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2140,$13386,-1);
             $13387 = HEAP8[$427>>0]|0;
             $13388 = ($13387<<24>>24)==(0);
             if ($13388) {
              break L43;
             }
             $13389 = $13381 * 0.243951839509359;
             $13390 = +HEAPF64[$76>>3];
             $13391 = $13375 * $13390;
             $13392 = $13389 - $13391;
             $13393 = +HEAPF64[$45>>3];
             $13394 = $13393 * 0.42072853480599598;
             $13395 = $13392 - $13394;
             $13396 = $13378 * 0.18031222920257001;
             $13397 = $13395 - $13396;
             $13398 = +HEAPF64[$75>>3];
             $13399 = -$13398;
             $13400 = $13379 * $13399;
             $13401 = $13400 + $13397;
             $13402 = +HEAPF64[$43>>3];
             $13403 = $13402 * 0.35708892449920698;
             $13404 = $13403 + $13401;
             $13405 = $13379 * $13390;
             $13406 = $13393 * 0.35708892449920698;
             $13407 = $13405 - $13406;
             $13408 = $13402 * 0.42072853480599598;
             $13409 = $13407 - $13408;
             $13410 = $13381 * 0.18031222920257001;
             $13411 = $13409 - $13410;
             $13412 = $13375 * $13399;
             $13413 = $13412 + $13411;
             $13414 = $13378 * 0.243951839509359;
             $13415 = $13413 - $13414;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2141,$13404,$13415,1.9999999999999999E-6);
             $13416 = HEAP8[$428>>0]|0;
             $13417 = ($13416<<24>>24)==(0);
             if ($13417) {
              break L43;
             }
             $13418 = +HEAPF64[$x2140>>3];
             $13419 = $13418 * 1.5707963267949001;
             $13420 = $13419 + -1.5707963267949001;
             $13421 = +HEAPF64[$x2141>>3];
             $13422 = $13421 + $13420;
             $13423 = (+__Z5IKsind($13422));
             $13424 = (+__Z5IKcosd($13422));
             $13425 = $13422 > 3.14159265358979;
             do {
              if ($13425) {
               $13426 = $13422 + -6.2831853071795898;
               $13429 = $13426;
              } else {
               $13427 = $13422 < -3.14159265358979;
               if (!($13427)) {
                $13429 = $13422;
                break;
               }
               $13428 = $13422 + 6.2831853071795898;
               $13429 = $13428;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $13429;
             HEAPF64[$429>>3] = $13424;
             HEAPF64[$430>>3] = $13423;
             $13430 = +HEAPF64[$this>>3];
             $13431 = (+__Z5IKsind($13430));
             $13432 = (+__Z5IKcosd($13430));
             $13433 = +HEAPF64[$45>>3];
             $13434 = $13433 * 0.70710678118654802;
             $13435 = +HEAPF64[$43>>3];
             $13436 = $13431 * $13435;
             $13437 = $13432 * $13435;
             $13438 = $13436 * 0.70710678118654802;
             $13439 = $13437 * 0.70710678118654802;
             $13440 = $13432 * $13434;
             $13441 = $13431 * $13434;
             $13442 = $13441 + $13439;
             $13443 = +HEAPF64[$60>>3];
             $13444 = -0.21249999999999999 - $13443;
             $13445 = $13433 * -0.71417784899841297;
             $13446 = $13432 * $13445;
             $13447 = $13446 + $13444;
             $13448 = $13436 * 0.71417784899841297;
             $13449 = $13448 + $13447;
             $13450 = $13437 * 0.84145706961199196;
             $13451 = $13449 - $13450;
             $13452 = $13433 * -0.84145706961199196;
             $13453 = $13431 * $13452;
             $13454 = $13453 + $13451;
             $13455 = +HEAPF64[$75>>3];
             $13456 = +HEAPF64[$76>>3];
             $13457 = $13456 * 0.044999999999999998;
             $13458 = -0.55000000000000004 - $13457;
             $13459 = $13455 * 0.29999999999999999;
             $13460 = $13458 - $13459;
             $13461 = $13438 + $13460;
             $13462 = $13461 - $13440;
             $13463 = $13462 - $13442;
             $13464 = (+__Z5IKabsd($13454));
             $13465 = $13464 > 5.0000000000000004E-6;
             if ($13465) {
              break L43;
             }
             $13466 = $13442 + 0.044999999999999998;
             $13467 = $13438 + $13466;
             $13468 = $13467 - $13440;
             $13469 = $13455 * 0.044999999999999998;
             $13470 = $13468 - $13469;
             $13471 = $13456 * 0.29999999999999999;
             $13472 = $13471 + $13470;
             $13473 = (+__Z5IKabsd($13472));
             $13474 = $13473 > 5.0000000000000004E-6;
             if ($13474) {
              break L43;
             }
             $13475 = (+__Z5IKabsd($13463));
             $13476 = $13475 > 5.0000000000000004E-6;
             if ($13476) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$384>>3] = -1.0;
           HEAPF64[$383>>3] = 0.0;
           HEAPF64[$3>>3] = -1.5707963267949001;
           $13252 = +HEAPF64[$47>>3];
           $13253 = $13252 * $13252;
           $13254 = +HEAPF64[$60>>3];
           $13255 = $13253 - $13254;
           $13256 = (+__Z5IKabsd($13255));
           $13257 = $13256 < 9.9999999999999995E-7;
           if ($13257) {
            break L43;
           }
           $13258 = $13253 * 1.1000000000000001;
           $13259 = $13254 * 1.1000000000000001;
           $13260 = $13258 - $13259;
           $13261 = (+__Z6IKsignd($13260));
           $13262 = (+__Z5IKabsd($13261));
           $13263 = $13262 < 9.9999999999999995E-7;
           if ($13263) {
            break L43;
           }
           HEAP8[$2>>0] = 1;
           $13264 = +HEAPF64[$75>>3];
           $13265 = $13264 * 0.0378655681325396;
           $13266 = +HEAPF64[$43>>3];
           $13267 = +HEAPF64[$76>>3];
           $13268 = $13266 * $13267;
           $13269 = +HEAPF64[$60>>3];
           $13270 = $13269 * 0.70710678118654802;
           $13271 = $13264 * 0.0321380032049286;
           $13272 = +HEAPF64[$45>>3];
           $13273 = $13267 * $13272;
           $13274 = $13272 * $13270;
           $13275 = $13266 * $13270;
           $13276 = $13269 * 1.1000000000000001;
           $13277 = +HEAPF64[$47>>3];
           $13278 = $13277 * $13277;
           $13279 = $13278 * 1.1000000000000001;
           $13280 = $13279 - $13276;
           $13281 = (+__Z6IKsignd($13280));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2124,$13281,-1);
           $13282 = HEAP8[$423>>0]|0;
           $13283 = ($13282<<24>>24)==(0);
           if ($13283) {
            break L43;
           }
           $13284 = $13274 - $13275;
           $13285 = +HEAPF64[$45>>3];
           $13286 = $13285 * 0.18239819420707001;
           $13287 = $13284 + $13286;
           $13288 = +HEAPF64[$43>>3];
           $13289 = $13288 * 0.112394622869602;
           $13290 = $13287 - $13289;
           $13291 = $13271 * $13285;
           $13292 = $13290 - $13291;
           $13293 = $13273 * 0.214253354699524;
           $13294 = $13293 + $13292;
           $13295 = $13268 * 0.25243712088359699;
           $13296 = $13295 + $13294;
           $13297 = -$13288;
           $13298 = $13265 * $13297;
           $13299 = $13298 + $13296;
           $13300 = $13285 * 0.112394622869602;
           $13301 = $13275 + $13300;
           $13302 = $13274 + $13301;
           $13303 = $13273 * 0.25243712088359699;
           $13304 = $13302 - $13303;
           $13305 = $13271 * $13297;
           $13306 = $13305 + $13304;
           $13307 = $13288 * 0.18239819420707001;
           $13308 = $13307 + $13306;
           $13309 = $13265 * $13285;
           $13310 = $13309 + $13308;
           $13311 = $13268 * 0.214253354699524;
           $13312 = $13311 + $13310;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2125,$13299,$13312,1.9999999999999999E-6);
           $13313 = HEAP8[$424>>0]|0;
           $13314 = ($13313<<24>>24)==(0);
           if ($13314) {
            break L43;
           }
           $13315 = +HEAPF64[$x2124>>3];
           $13316 = $13315 * 1.5707963267949001;
           $13317 = $13316 + -1.5707963267949001;
           $13318 = +HEAPF64[$x2125>>3];
           $13319 = $13318 + $13317;
           $13320 = (+__Z5IKsind($13319));
           $13321 = (+__Z5IKcosd($13319));
           $13322 = $13319 > 3.14159265358979;
           do {
            if ($13322) {
             $13323 = $13319 + -6.2831853071795898;
             $13326 = $13323;
            } else {
             $13324 = $13319 < -3.14159265358979;
             if (!($13324)) {
              $13326 = $13319;
              break;
             }
             $13325 = $13319 + 6.2831853071795898;
             $13326 = $13325;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $13326;
           HEAPF64[$425>>3] = $13321;
           HEAPF64[$426>>3] = $13320;
           $13327 = +HEAPF64[$this>>3];
           $13328 = (+__Z5IKsind($13327));
           $13329 = (+__Z5IKcosd($13327));
           $13330 = +HEAPF64[$45>>3];
           $13331 = $13330 * 0.70710678118654802;
           $13332 = +HEAPF64[$43>>3];
           $13333 = $13328 * $13332;
           $13334 = $13329 * $13332;
           $13335 = $13333 * 0.70710678118654802;
           $13336 = $13334 * 0.70710678118654802;
           $13337 = $13329 * $13331;
           $13338 = $13328 * $13331;
           $13339 = $13338 + $13336;
           $13340 = $13334 * 0.84145706961199196;
           $13341 = -0.21249999999999999 - $13340;
           $13342 = $13333 * 0.71417784899841297;
           $13343 = $13342 + $13341;
           $13344 = +HEAPF64[$60>>3];
           $13345 = $13343 - $13344;
           $13346 = $13330 * -0.84145706961199196;
           $13347 = $13328 * $13346;
           $13348 = $13347 + $13345;
           $13349 = $13330 * -0.71417784899841297;
           $13350 = $13329 * $13349;
           $13351 = $13350 + $13348;
           $13352 = +HEAPF64[$75>>3];
           $13353 = +HEAPF64[$76>>3];
           $13354 = $13353 * 0.044999999999999998;
           $13355 = -0.55000000000000004 - $13354;
           $13356 = $13355 - $13337;
           $13357 = $13356 - $13339;
           $13358 = $13352 * 0.29999999999999999;
           $13359 = $13357 - $13358;
           $13360 = $13335 + $13359;
           $13361 = (+__Z5IKabsd($13351));
           $13362 = $13361 > 5.0000000000000004E-6;
           if ($13362) {
            break L43;
           }
           $13363 = 0.044999999999999998 - $13337;
           $13364 = $13363 + $13339;
           $13365 = $13335 + $13364;
           $13366 = $13352 * 0.044999999999999998;
           $13367 = $13365 - $13366;
           $13368 = $13353 * 0.29999999999999999;
           $13369 = $13368 + $13367;
           $13370 = (+__Z5IKabsd($13369));
           $13371 = $13370 > 5.0000000000000004E-6;
           if ($13371) {
            break L43;
           }
           $13372 = (+__Z5IKabsd($13360));
           $13373 = $13372 > 5.0000000000000004E-6;
           if ($13373) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $13940 = +HEAPF64[$22>>3];
         $13941 = $13940 + 1.5707963267949001;
         $13942 = (+__Z5IKabsd($13941));
         $13943 = $13942 + 3.14159265358979;
         $13944 = (+__Z6IKfmoddd($13943,6.2831853071795898));
         $13945 = $13944 + -3.14159265358979;
         $13946 = +HEAPF64[$76>>3];
         $13947 = +HEAPF64[$75>>3];
         $13948 = +HEAPF64[$383>>3];
         $13949 = $13948 * 0.55000000000000004;
         $13950 = $13948 * -0.29999999999999999;
         $13951 = $13947 * $13950;
         $13952 = $13951 - $13949;
         $13953 = $13948 * -0.044999999999999998;
         $13954 = $13946 * $13953;
         $13955 = $13954 + $13952;
         $13956 = +HEAPF64[$47>>3];
         $13957 = $13956 + $13955;
         $13958 = (+__Z5IKabsd($13945));
         $13959 = $13958 < 9.9999999999999995E-7;
         do {
          if ($13959) {
           $13960 = +HEAPF64[$60>>3];
           $13961 = $13946 * 0.076499999999999999;
           $13962 = $13961 + 0.39655000000000001;
           $13963 = $13962 - $13960;
           $13964 = $13947 * 0.32595000000000002;
           $13965 = $13964 + $13963;
           $13966 = (+__Z5IKabsd($13965));
           $13967 = $13966 < 9.9999999999999995E-7;
           if (!($13967)) {
            break;
           }
           $13968 = (+__Z5IKabsd($13957));
           $13969 = $13968 < 9.9999999999999995E-7;
           if (!($13969)) {
            break;
           }
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           $13970 = +HEAPF64[$47>>3];
           $13971 = $13970 * $13970;
           $13972 = +HEAPF64[$383>>3];
           $13973 = +HEAPF64[$60>>3];
           $13974 = $13972 * $13973;
           $13975 = $13972 * $13971;
           $13976 = $13975 - $13974;
           $13977 = (+__Z5IKabsd($13976));
           $13978 = $13977 < 9.9999999999999995E-7;
           do {
            if (!($13978)) {
             $13979 = $13975 * 0.089999999999999996;
             $13980 = $13974 * 0.089999999999999996;
             $13981 = $13979 - $13980;
             $13982 = (+__Z6IKsignd($13981));
             $13983 = (+__Z5IKabsd($13982));
             $13984 = $13983 < 9.9999999999999995E-7;
             if ($13984) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $15658 = +HEAPF64[$47>>3];
             $15659 = $15658 * 0.77781745930520196;
             $15660 = +HEAPF64[$383>>3];
             $15661 = $15660 * 0.150260191002141;
             $15662 = $15660 * 0.089999999999999996;
             $15663 = +HEAPF64[$45>>3];
             $15664 = $15663 * $15661;
             $15665 = +HEAPF64[$43>>3];
             $15666 = $15659 * $15665;
             $15667 = $15659 * $15663;
             $15668 = $15661 * $15665;
             $15669 = $15658 * 0.063639610306789302;
             $15670 = +HEAPF64[$384>>3];
             $15671 = $15669 * $15670;
             $15672 = $15660 * 0.70710678118654802;
             $15673 = +HEAPF64[$60>>3];
             $15674 = $15672 * $15673;
             $15675 = $15663 * $15674;
             $15676 = $15663 * $15671;
             $15677 = $15665 * $15671;
             $15678 = $15665 * $15674;
             $15679 = $15664 + $15675;
             $15680 = $15667 + $15677;
             $15681 = $15676 + $15678;
             $15682 = $15668 + $15681;
             $15683 = $15666 + $15680;
             $15684 = $15683 - $15682;
             $15685 = $15684 - $15679;
             $15686 = $15666 + $15679;
             $15687 = $15686 - $15682;
             $15688 = $15687 - $15680;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2598,$15685,$15688,1.9999999999999999E-6);
             $15689 = HEAP8[$497>>0]|0;
             $15690 = ($15689<<24>>24)==(0);
             if ($15690) {
              break L43;
             }
             $15691 = +HEAPF64[$60>>3];
             $15692 = $15662 * $15691;
             $15693 = +HEAPF64[$47>>3];
             $15694 = $15693 * $15693;
             $15695 = $15662 * $15694;
             $15696 = $15695 - $15692;
             $15697 = (+__Z6IKsignd($15696));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2599,$15697,-1);
             $15698 = HEAP8[$498>>0]|0;
             $15699 = ($15698<<24>>24)==(0);
             if ($15699) {
              break L43;
             }
             $15700 = +HEAPF64[$x2598>>3];
             $15701 = $15700 + -1.5707963267949001;
             $15702 = +HEAPF64[$x2599>>3];
             $15703 = $15702 * 1.5707963267949001;
             $15704 = $15701 + $15703;
             $15705 = (+__Z5IKsind($15704));
             $15706 = (+__Z5IKcosd($15704));
             $15707 = $15704 > 3.14159265358979;
             do {
              if ($15707) {
               $15708 = $15704 + -6.2831853071795898;
               $15711 = $15708;
              } else {
               $15709 = $15704 < -3.14159265358979;
               if (!($15709)) {
                $15711 = $15704;
                break;
               }
               $15710 = $15704 + 6.2831853071795898;
               $15711 = $15710;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $15711;
             HEAPF64[$499>>3] = $15706;
             HEAPF64[$500>>3] = $15705;
             $15712 = +HEAPF64[$this>>3];
             $15713 = (+__Z5IKsind($15712));
             $15714 = (+__Z5IKcosd($15712));
             $15715 = +HEAPF64[$45>>3];
             $15716 = $15715 * 0.70710678118654802;
             $15717 = +HEAPF64[$383>>3];
             $15718 = +HEAPF64[$47>>3];
             $15719 = $15717 * $15718;
             $15720 = +HEAPF64[$76>>3];
             $15721 = $15720 * 0.044999999999999998;
             $15722 = $15715 * 0.063639610306789302;
             $15723 = +HEAPF64[$43>>3];
             $15724 = $15723 * 0.70710678118654802;
             $15725 = $15715 * 0.77781745930520196;
             $15726 = +HEAPF64[$75>>3];
             $15727 = $15726 * 0.29999999999999999;
             $15728 = $15713 * $15717;
             $15729 = $15714 * $15723;
             $15730 = +HEAPF64[$384>>3];
             $15731 = $15713 * $15730;
             $15732 = $15714 * $15730;
             $15733 = $15713 * $15724;
             $15734 = $15714 * $15724;
             $15735 = $15714 * $15716;
             $15736 = $15713 * $15716;
             $15737 = $15736 + $15734;
             $15738 = $15726 * 0.044999999999999998;
             $15739 = $15738 + -0.044999999999999998;
             $15740 = $15739 - $15735;
             $15741 = $15720 * 0.29999999999999999;
             $15742 = $15740 - $15741;
             $15743 = $15737 + $15742;
             $15744 = $15733 + $15743;
             $15745 = -$15717;
             $15746 = $15730 * 0.55000000000000004;
             $15747 = $15746 - $15735;
             $15748 = $15747 - $15737;
             $15749 = $15721 * $15730;
             $15750 = $15749 + $15748;
             $15751 = $15730 * $15727;
             $15752 = $15751 + $15750;
             $15753 = $15733 + $15752;
             $15754 = $15724 * $15731;
             $15755 = -0.55000000000000004 - $15754;
             $15756 = $15716 * $15731;
             $15757 = $15756 + $15755;
             $15758 = $15716 * $15732;
             $15759 = $15758 + $15757;
             $15760 = $15724 * $15732;
             $15761 = $15760 + $15759;
             $15762 = $15761 - $15727;
             $15763 = $15762 - $15721;
             $15764 = $15719 + $15763;
             $15765 = $15714 * $15722;
             $15766 = -0.21249999999999999 - $15765;
             $15767 = $15723 * -0.77781745930520196;
             $15768 = $15767 * $15731;
             $15769 = $15766 + $15768;
             $15770 = $15729 * 0.063639610306789302;
             $15771 = $15770 + $15769;
             $15772 = $15719 * 1.1000000000000001;
             $15773 = $15772 + $15771;
             $15774 = $15730 * 0.77781745930520196;
             $15775 = $15729 * $15774;
             $15776 = $15775 + $15773;
             $15777 = $15713 * $15722;
             $15778 = $15777 + $15776;
             $15779 = +HEAPF64[$60>>3];
             $15780 = $15778 - $15779;
             $15781 = $15723 * 0.063639610306789302;
             $15782 = $15713 * $15781;
             $15783 = $15782 + $15780;
             $15784 = $15725 * $15732;
             $15785 = $15784 + $15783;
             $15786 = $15725 * $15731;
             $15787 = $15786 + $15785;
             $15788 = (+__Z5IKabsd($15744));
             $15789 = $15788 > 5.0000000000000004E-6;
             if ($15789) {
              break L43;
             }
             $15790 = $15734 * $15745;
             $15791 = $15735 * $15745;
             $15792 = $15791 + $15790;
             $15793 = $15728 * $15724;
             $15794 = $15793 + $15792;
             $15795 = $15718 * $15730;
             $15796 = $15795 + $15794;
             $15797 = $15716 * $15728;
             $15798 = $15796 - $15797;
             $15799 = (+__Z5IKabsd($15798));
             $15800 = $15799 > 5.0000000000000004E-6;
             if ($15800) {
              break L43;
             }
             $15801 = (+__Z5IKabsd($15753));
             $15802 = $15801 > 5.0000000000000004E-6;
             if ($15802) {
              break L43;
             }
             $15803 = (+__Z5IKabsd($15764));
             $15804 = $15803 > 5.0000000000000004E-6;
             if ($15804) {
              break L43;
             }
             $15805 = (+__Z5IKabsd($15787));
             $15806 = $15805 > 5.0000000000000004E-6;
             if ($15806) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           $13985 = +HEAPF64[$60>>3];
           $13986 = +HEAPF64[$47>>3];
           $13987 = $13986 * $13986;
           $13988 = $13985 - $13987;
           $13989 = (+__Z5IKabsd($13988));
           $13990 = $13989 < 9.9999999999999995E-7;
           do {
            if (!($13990)) {
             $13991 = (+__Z6IKsignd($13988));
             $13992 = (+__Z5IKabsd($13991));
             $13993 = $13992 < 9.9999999999999995E-7;
             if ($13993) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $15504 = +HEAPF64[$43>>3];
             $15505 = $15504 * 0.031819805153394602;
             $15506 = +HEAPF64[$45>>3];
             $15507 = $15506 * 0.031819805153394602;
             $15508 = +HEAPF64[$76>>3];
             $15509 = $15506 * $15508;
             $15510 = +HEAPF64[$384>>3];
             $15511 = $15510 * 0.38890872965260098;
             $15512 = +HEAPF64[$75>>3];
             $15513 = $15506 * $15512;
             $15514 = $15510 * 0.21213203435596401;
             $15515 = $15504 * $15508;
             $15516 = $15507 * $15512;
             $15517 = $15515 * 0.21213203435596401;
             $15518 = $15504 * $15511;
             $15519 = $15506 * $15511;
             $15520 = $15509 * 0.21213203435596401;
             $15521 = $15508 * $15510;
             $15522 = $15505 * $15521;
             $15523 = $15504 * $15512;
             $15524 = $15514 * $15523;
             $15525 = $15507 * $15521;
             $15526 = $15514 * $15513;
             $15527 = $15507 + $15520;
             $15528 = $15518 + $15522;
             $15529 = $15528 + $15524;
             $15530 = $15516 + $15529;
             $15531 = $15517 + $15519;
             $15532 = $15525 + $15531;
             $15533 = $15526 + $15532;
             $15534 = $15505 + $15533;
             $15535 = +HEAPF64[$60>>3];
             $15536 = +HEAPF64[$47>>3];
             $15537 = $15536 * $15536;
             $15538 = $15535 - $15537;
             $15539 = (+__Z6IKsignd($15538));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2562,$15539,-1);
             $15540 = HEAP8[$493>>0]|0;
             $15541 = ($15540<<24>>24)==(0);
             if ($15541) {
              break L43;
             }
             $15542 = $15505 * $15512;
             $15543 = $15527 + $15534;
             $15544 = $15543 - $15530;
             $15545 = $15544 - $15542;
             $15546 = $15530 + $15534;
             $15547 = $15546 - $15542;
             $15548 = $15547 - $15527;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2563,$15545,$15548,1.9999999999999999E-6);
             $15549 = HEAP8[$494>>0]|0;
             $15550 = ($15549<<24>>24)==(0);
             if ($15550) {
              break L43;
             }
             $15551 = +HEAPF64[$x2562>>3];
             $15552 = $15551 * 1.5707963267949001;
             $15553 = $15552 + -1.5707963267949001;
             $15554 = +HEAPF64[$x2563>>3];
             $15555 = $15554 + $15553;
             $15556 = (+__Z5IKsind($15555));
             $15557 = (+__Z5IKcosd($15555));
             $15558 = $15555 > 3.14159265358979;
             do {
              if ($15558) {
               $15559 = $15555 + -6.2831853071795898;
               $15562 = $15559;
              } else {
               $15560 = $15555 < -3.14159265358979;
               if (!($15560)) {
                $15562 = $15555;
                break;
               }
               $15561 = $15555 + 6.2831853071795898;
               $15562 = $15561;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $15562;
             HEAPF64[$495>>3] = $15557;
             HEAPF64[$496>>3] = $15556;
             $15563 = +HEAPF64[$this>>3];
             $15564 = (+__Z5IKsind($15563));
             $15565 = (+__Z5IKcosd($15563));
             $15566 = +HEAPF64[$45>>3];
             $15567 = $15566 * 0.70710678118654802;
             $15568 = +HEAPF64[$383>>3];
             $15569 = +HEAPF64[$47>>3];
             $15570 = $15568 * $15569;
             $15571 = +HEAPF64[$76>>3];
             $15572 = $15571 * 0.044999999999999998;
             $15573 = $15566 * 0.063639610306789302;
             $15574 = +HEAPF64[$43>>3];
             $15575 = $15574 * 0.70710678118654802;
             $15576 = $15566 * 0.77781745930520196;
             $15577 = +HEAPF64[$75>>3];
             $15578 = $15577 * 0.29999999999999999;
             $15579 = $15564 * $15568;
             $15580 = $15565 * $15574;
             $15581 = +HEAPF64[$384>>3];
             $15582 = $15564 * $15581;
             $15583 = $15565 * $15581;
             $15584 = $15564 * $15575;
             $15585 = $15565 * $15575;
             $15586 = $15565 * $15567;
             $15587 = $15564 * $15567;
             $15588 = $15587 + $15585;
             $15589 = $15588 + -0.044999999999999998;
             $15590 = $15584 + $15589;
             $15591 = $15577 * 0.044999999999999998;
             $15592 = $15591 + $15590;
             $15593 = $15592 - $15586;
             $15594 = $15571 * 0.29999999999999999;
             $15595 = $15593 - $15594;
             $15596 = -$15568;
             $15597 = $15572 * $15581;
             $15598 = $15584 + $15597;
             $15599 = $15598 - $15588;
             $15600 = $15581 * $15578;
             $15601 = $15600 + $15599;
             $15602 = $15601 - $15586;
             $15603 = $15581 * 0.55000000000000004;
             $15604 = $15603 + $15602;
             $15605 = $15570 + -0.55000000000000004;
             $15606 = $15605 - $15572;
             $15607 = $15575 * $15582;
             $15608 = $15606 - $15607;
             $15609 = $15567 * $15583;
             $15610 = $15609 + $15608;
             $15611 = $15567 * $15582;
             $15612 = $15611 + $15610;
             $15613 = $15612 - $15578;
             $15614 = $15575 * $15583;
             $15615 = $15614 + $15613;
             $15616 = $15580 * 0.063639610306789302;
             $15617 = $15616 + -0.21249999999999999;
             $15618 = $15576 * $15583;
             $15619 = $15617 + $15618;
             $15620 = $15576 * $15582;
             $15621 = $15620 + $15619;
             $15622 = $15570 * 1.1000000000000001;
             $15623 = $15622 + $15621;
             $15624 = $15581 * 0.77781745930520196;
             $15625 = $15580 * $15624;
             $15626 = $15625 + $15623;
             $15627 = +HEAPF64[$60>>3];
             $15628 = $15626 - $15627;
             $15629 = $15565 * $15573;
             $15630 = $15628 - $15629;
             $15631 = $15574 * -0.77781745930520196;
             $15632 = $15631 * $15582;
             $15633 = $15632 + $15630;
             $15634 = $15574 * 0.063639610306789302;
             $15635 = $15564 * $15634;
             $15636 = $15635 + $15633;
             $15637 = $15564 * $15573;
             $15638 = $15637 + $15636;
             $15639 = (+__Z5IKabsd($15595));
             $15640 = $15639 > 5.0000000000000004E-6;
             if ($15640) {
              break L43;
             }
             $15641 = $15569 * $15581;
             $15642 = $15567 * $15579;
             $15643 = $15641 - $15642;
             $15644 = $15579 * $15575;
             $15645 = $15644 + $15643;
             $15646 = $15586 * $15596;
             $15647 = $15646 + $15645;
             $15648 = $15585 * $15596;
             $15649 = $15648 + $15647;
             $15650 = (+__Z5IKabsd($15649));
             $15651 = $15650 > 5.0000000000000004E-6;
             if ($15651) {
              break L43;
             }
             $15652 = (+__Z5IKabsd($15604));
             $15653 = $15652 > 5.0000000000000004E-6;
             if ($15653) {
              break L43;
             }
             $15654 = (+__Z5IKabsd($15615));
             $15655 = $15654 > 5.0000000000000004E-6;
             if ($15655) {
              break L43;
             }
             $15656 = (+__Z5IKabsd($15638));
             $15657 = $15656 > 5.0000000000000004E-6;
             if ($15657) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           $13994 = +HEAPF64[$60>>3];
           $13995 = +HEAPF64[$384>>3];
           $13996 = $13994 * $13995;
           $13997 = +HEAPF64[$47>>3];
           $13998 = $13997 * $13997;
           $13999 = $13995 * $13998;
           $14000 = $13999 - $13996;
           $14001 = (+__Z5IKabsd($14000));
           $14002 = $14001 < 9.9999999999999995E-7;
           do {
            if (!($14002)) {
             $14003 = (+__Z6IKsignd($14000));
             $14004 = (+__Z5IKabsd($14003));
             $14005 = $14004 < 9.9999999999999995E-7;
             if ($14005) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $15343 = +HEAPF64[$45>>3];
             $15344 = +HEAPF64[$43>>3];
             $15345 = $15344 * 0.38890872965260098;
             $15346 = $15343 * 0.031819805153394602;
             $15347 = +HEAPF64[$75>>3];
             $15348 = $15347 * 0.21213203435596401;
             $15349 = +HEAPF64[$384>>3];
             $15350 = $15346 * $15349;
             $15351 = $15344 * $15348;
             $15352 = $15344 * 0.031819805153394602;
             $15353 = +HEAPF64[$76>>3];
             $15354 = $15352 * $15353;
             $15355 = $15352 * $15349;
             $15356 = +HEAPF64[$383>>3];
             $15357 = $15356 * 0.70710678118654802;
             $15358 = +HEAPF64[$47>>3];
             $15359 = $15357 * $15358;
             $15360 = $15349 * 0.21213203435596401;
             $15361 = $15360 * $15353;
             $15362 = $15347 * $15355;
             $15363 = $15344 * $15359;
             $15364 = $15343 * $15361;
             $15365 = $15343 * $15359;
             $15366 = $15347 * $15350;
             $15367 = $15362 + $15365;
             $15368 = $15364 + $15363;
             $15369 = $15350 + $15368;
             $15370 = $15366 + $15354;
             $15371 = $15351 + $15370;
             $15372 = $15345 + $15371;
             $15373 = +HEAPF64[$60>>3];
             $15374 = $15349 * $15373;
             $15375 = $15358 * $15358;
             $15376 = $15349 * $15375;
             $15377 = $15376 - $15374;
             $15378 = (+__Z6IKsignd($15377));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2521,$15378,-1);
             $15379 = HEAP8[$489>>0]|0;
             $15380 = ($15379<<24>>24)==(0);
             if ($15380) {
              break L43;
             }
             $15381 = $15344 * $15361;
             $15382 = $15346 * $15353;
             $15383 = $15382 + $15381;
             $15384 = $15355 + $15383;
             $15385 = $15343 * $15348;
             $15386 = $15385 + $15384;
             $15387 = $15343 * 0.38890872965260098;
             $15388 = $15387 + $15386;
             $15389 = $15372 + $15367;
             $15390 = $15389 - $15369;
             $15391 = $15390 - $15388;
             $15392 = $15367 + $15369;
             $15393 = $15392 - $15372;
             $15394 = $15393 - $15388;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2522,$15391,$15394,1.9999999999999999E-6);
             $15395 = HEAP8[$490>>0]|0;
             $15396 = ($15395<<24>>24)==(0);
             if ($15396) {
              break L43;
             }
             $15397 = +HEAPF64[$x2521>>3];
             $15398 = $15397 * 1.5707963267949001;
             $15399 = $15398 + -1.5707963267949001;
             $15400 = +HEAPF64[$x2522>>3];
             $15401 = $15400 + $15399;
             $15402 = (+__Z5IKsind($15401));
             $15403 = (+__Z5IKcosd($15401));
             $15404 = $15401 > 3.14159265358979;
             do {
              if ($15404) {
               $15405 = $15401 + -6.2831853071795898;
               $15408 = $15405;
              } else {
               $15406 = $15401 < -3.14159265358979;
               if (!($15406)) {
                $15408 = $15401;
                break;
               }
               $15407 = $15401 + 6.2831853071795898;
               $15408 = $15407;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $15408;
             HEAPF64[$491>>3] = $15403;
             HEAPF64[$492>>3] = $15402;
             $15409 = +HEAPF64[$this>>3];
             $15410 = (+__Z5IKsind($15409));
             $15411 = (+__Z5IKcosd($15409));
             $15412 = +HEAPF64[$45>>3];
             $15413 = $15412 * 0.70710678118654802;
             $15414 = +HEAPF64[$383>>3];
             $15415 = +HEAPF64[$47>>3];
             $15416 = $15414 * $15415;
             $15417 = +HEAPF64[$76>>3];
             $15418 = $15417 * 0.044999999999999998;
             $15419 = $15412 * 0.063639610306789302;
             $15420 = +HEAPF64[$43>>3];
             $15421 = $15420 * 0.70710678118654802;
             $15422 = $15412 * 0.77781745930520196;
             $15423 = +HEAPF64[$75>>3];
             $15424 = $15423 * 0.29999999999999999;
             $15425 = $15410 * $15414;
             $15426 = $15411 * $15420;
             $15427 = +HEAPF64[$384>>3];
             $15428 = $15410 * $15427;
             $15429 = $15411 * $15427;
             $15430 = $15410 * $15421;
             $15431 = $15411 * $15421;
             $15432 = $15411 * $15413;
             $15433 = $15410 * $15413;
             $15434 = $15433 + $15431;
             $15435 = $15434 + -0.044999999999999998;
             $15436 = $15430 + $15435;
             $15437 = $15423 * 0.044999999999999998;
             $15438 = $15437 + $15436;
             $15439 = $15438 - $15432;
             $15440 = $15417 * 0.29999999999999999;
             $15441 = $15439 - $15440;
             $15442 = -$15414;
             $15443 = $15430 - $15432;
             $15444 = $15418 * $15427;
             $15445 = $15443 + $15444;
             $15446 = $15445 - $15434;
             $15447 = $15427 * 0.55000000000000004;
             $15448 = $15447 + $15446;
             $15449 = $15427 * $15424;
             $15450 = $15449 + $15448;
             $15451 = $15416 + -0.55000000000000004;
             $15452 = $15451 - $15424;
             $15453 = $15413 * $15428;
             $15454 = $15452 + $15453;
             $15455 = $15413 * $15429;
             $15456 = $15455 + $15454;
             $15457 = $15456 - $15418;
             $15458 = $15421 * $15429;
             $15459 = $15458 + $15457;
             $15460 = $15421 * $15428;
             $15461 = $15459 - $15460;
             $15462 = $15411 * $15419;
             $15463 = -0.21249999999999999 - $15462;
             $15464 = $15422 * $15429;
             $15465 = $15463 + $15464;
             $15466 = $15422 * $15428;
             $15467 = $15466 + $15465;
             $15468 = $15420 * 0.063639610306789302;
             $15469 = $15410 * $15468;
             $15470 = $15469 + $15467;
             $15471 = $15426 * 0.063639610306789302;
             $15472 = $15471 + $15470;
             $15473 = $15420 * -0.77781745930520196;
             $15474 = $15473 * $15428;
             $15475 = $15474 + $15472;
             $15476 = +HEAPF64[$60>>3];
             $15477 = $15475 - $15476;
             $15478 = $15410 * $15419;
             $15479 = $15478 + $15477;
             $15480 = $15427 * 0.77781745930520196;
             $15481 = $15426 * $15480;
             $15482 = $15481 + $15479;
             $15483 = $15416 * 1.1000000000000001;
             $15484 = $15483 + $15482;
             $15485 = (+__Z5IKabsd($15441));
             $15486 = $15485 > 5.0000000000000004E-6;
             if ($15486) {
              break L43;
             }
             $15487 = $15432 * $15442;
             $15488 = $15413 * $15425;
             $15489 = $15487 - $15488;
             $15490 = $15431 * $15442;
             $15491 = $15489 + $15490;
             $15492 = $15415 * $15427;
             $15493 = $15492 + $15491;
             $15494 = $15425 * $15421;
             $15495 = $15494 + $15493;
             $15496 = (+__Z5IKabsd($15495));
             $15497 = $15496 > 5.0000000000000004E-6;
             if ($15497) {
              break L43;
             }
             $15498 = (+__Z5IKabsd($15450));
             $15499 = $15498 > 5.0000000000000004E-6;
             if ($15499) {
              break L43;
             }
             $15500 = (+__Z5IKabsd($15461));
             $15501 = $15500 > 5.0000000000000004E-6;
             if ($15501) {
              break L43;
             }
             $15502 = (+__Z5IKabsd($15484));
             $15503 = $15502 > 5.0000000000000004E-6;
             if ($15503) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           $14006 = +HEAPF64[$76>>3];
           $14007 = $14006 * 0.044999999999999998;
           $14008 = -0.55000000000000004 - $14007;
           $14009 = +HEAPF64[$75>>3];
           $14010 = $14009 * 0.29999999999999999;
           $14011 = $14008 - $14010;
           $14012 = +HEAPF64[$47>>3];
           $14013 = $14012 + $14011;
           $14014 = +HEAPF64[$3>>3];
           $14015 = (+__Z5IKabsd($14014));
           $14016 = $14015 + 3.14159265358979;
           $14017 = (+__Z6IKfmoddd($14016,6.2831853071795898));
           $14018 = $14017 + -3.14159265358979;
           $14019 = (+__Z5IKabsd($14018));
           $14020 = $14019 < 9.9999999999999995E-7;
           do {
            if ($14020) {
             $14021 = +HEAPF64[$60>>3];
             $14022 = $14006 * 0.076499999999999999;
             $14023 = $14022 + 0.39655000000000001;
             $14024 = $14023 - $14021;
             $14025 = $14009 * 0.32595000000000002;
             $14026 = $14025 + $14024;
             $14027 = (+__Z5IKabsd($14026));
             $14028 = $14027 < 9.9999999999999995E-7;
             if (!($14028)) {
              break;
             }
             $14029 = (+__Z5IKabsd($14013));
             $14030 = $14029 < 9.9999999999999995E-7;
             if (!($14030)) {
              break;
             }
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             $14031 = +HEAPF64[$47>>3];
             $14032 = $14031 * $14031;
             $14033 = +HEAPF64[$75>>3];
             $14034 = $14033 * $14033;
             $14035 = +HEAPF64[$76>>3];
             $14036 = $14035 * $14035;
             $14037 = $14033 * 2.0;
             $14038 = +HEAPF64[$60>>3];
             $14039 = $14038 - $14032;
             $14040 = $14036 * 44.4444444444444;
             $14041 = $14038 * 13.3333333333333;
             $14042 = $14035 * $14041;
             $14043 = $14035 * 13.3333333333333;
             $14044 = $14032 * $14043;
             $14045 = $14037 * $14038;
             $14046 = $14042 - $14045;
             $14047 = $14032 * $14040;
             $14048 = $14046 - $14047;
             $14049 = $14048 - $14044;
             $14050 = $14049 - $14032;
             $14051 = $14032 * $14037;
             $14052 = $14051 + $14050;
             $14053 = $14034 * $14038;
             $14054 = $14053 + $14052;
             $14055 = $14032 * $14034;
             $14056 = $14054 - $14055;
             $14057 = $14038 + $14056;
             $14058 = $14033 * $14044;
             $14059 = $14058 + $14057;
             $14060 = $14038 * $14040;
             $14061 = $14060 + $14059;
             $14062 = $14033 * $14042;
             $14063 = $14061 - $14062;
             $14064 = (+__Z5IKabsd($14039));
             $14065 = $14064 < 9.9999999999999995E-7;
             do {
              if (!($14065)) {
               $14066 = (+__Z6IKsignd($14039));
               $14067 = (+__Z5IKabsd($14066));
               $14068 = $14067 < 9.9999999999999995E-7;
               if ($14068) {
                break;
               }
               $14069 = (+__Z5IKabsd($14063));
               $14070 = $14069 < 9.9999999999999995E-7;
               if ($14070) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $14306 = +HEAPF64[$43>>3];
               $14307 = $14306 * 0.031819805153394602;
               $14308 = +HEAPF64[$45>>3];
               $14309 = $14308 * 0.031819805153394602;
               $14310 = +HEAPF64[$76>>3];
               $14311 = $14310 * 0.21213203435596401;
               $14312 = +HEAPF64[$75>>3];
               $14313 = $14309 * $14312;
               $14314 = $14306 * $14311;
               $14315 = $14307 * $14312;
               $14316 = $14308 * $14311;
               $14317 = $14307 + $14314;
               $14318 = $14309 + $14316;
               $14319 = $14317 + $14318;
               $14320 = $14319 - $14313;
               $14321 = $14320 - $14315;
               $14322 = $14317 - $14318;
               $14323 = $14313 + $14322;
               $14324 = $14323 - $14315;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2332,$14321,$14324,1.9999999999999999E-6);
               $14325 = HEAP8[$454>>0]|0;
               $14326 = ($14325<<24>>24)==(0);
               if ($14326) {
                break L43;
               }
               $14327 = +HEAPF64[$60>>3];
               $14328 = +HEAPF64[$47>>3];
               $14329 = $14328 * $14328;
               $14330 = $14327 - $14329;
               $14331 = (+__Z6IKsignd($14330));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2333,$14331,-1);
               $14332 = HEAP8[$455>>0]|0;
               $14333 = ($14332<<24>>24)==(0);
               if ($14333) {
                break L43;
               }
               $14334 = +HEAPF64[$x2332>>3];
               $14335 = $14334 + -1.5707963267949001;
               $14336 = +HEAPF64[$x2333>>3];
               $14337 = $14336 * 1.5707963267949001;
               $14338 = $14335 + $14337;
               $14339 = (+__Z5IKsind($14338));
               $14340 = (+__Z5IKcosd($14338));
               $14341 = $14338 > 3.14159265358979;
               do {
                if ($14341) {
                 $14342 = $14338 + -6.2831853071795898;
                 $14345 = $14342;
                } else {
                 $14343 = $14338 < -3.14159265358979;
                 if (!($14343)) {
                  $14345 = $14338;
                  break;
                 }
                 $14344 = $14338 + 6.2831853071795898;
                 $14345 = $14344;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $14345;
               HEAPF64[$456>>3] = $14340;
               HEAPF64[$457>>3] = $14339;
               $14346 = +HEAPF64[$this>>3];
               $14347 = (+__Z5IKcosd($14346));
               $14348 = (+__Z5IKsind($14346));
               $14349 = +HEAPF64[$45>>3];
               $14350 = $14349 * 0.70710678118654802;
               $14351 = $14347 * 0.063639610306789302;
               $14352 = +HEAPF64[$43>>3];
               $14353 = $14348 * $14352;
               $14354 = $14352 * 0.70710678118654802;
               $14355 = $14347 * $14354;
               $14356 = $14353 * 0.70710678118654802;
               $14357 = $14348 * $14350;
               $14358 = $14347 * $14350;
               $14359 = $14357 + $14355;
               $14360 = $14356 - $14358;
               $14361 = $14360 - $14359;
               $14362 = $14353 * 0.063639610306789302;
               $14363 = $14362 + -0.21249999999999999;
               $14364 = $14351 * $14349;
               $14365 = $14363 - $14364;
               $14366 = $14349 * 0.063639610306789302;
               $14367 = $14348 * $14366;
               $14368 = $14367 + $14365;
               $14369 = +HEAPF64[$60>>3];
               $14370 = $14368 - $14369;
               $14371 = +HEAPF64[$47>>3];
               $14372 = $14371 * 1.1000000000000001;
               $14373 = $14372 + $14370;
               $14374 = $14351 * $14352;
               $14375 = $14374 + $14373;
               $14376 = (+__Z5IKabsd($14361));
               $14377 = $14376 > 5.0000000000000004E-6;
               if ($14377) {
                break L43;
               }
               $14378 = +HEAPF64[$76>>3];
               $14379 = +HEAPF64[$75>>3];
               $14380 = $14379 * 0.044999999999999998;
               $14381 = $14380 + -0.044999999999999998;
               $14382 = $14356 + $14381;
               $14383 = $14359 + $14382;
               $14384 = $14383 - $14358;
               $14385 = $14378 * 0.29999999999999999;
               $14386 = $14384 - $14385;
               $14387 = (+__Z5IKabsd($14386));
               $14388 = $14387 > 5.0000000000000004E-6;
               if ($14388) {
                break L43;
               }
               $14389 = (+__Z5IKabsd($14375));
               $14390 = $14389 > 5.0000000000000004E-6;
               if ($14390) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             $14071 = +HEAPF64[$47>>3];
             $14072 = $14071 * $14071;
             $14073 = $14071 * $14072;
             $14074 = +HEAPF64[$60>>3];
             $14075 = $14074 * $14074;
             $14076 = $14074 - $14072;
             $14077 = $14073 * 10.352941176470599;
             $14078 = $14072 * $14072;
             $14079 = $14078 * 26.7958477508651;
             $14080 = $14077 - $14079;
             $14081 = $14080 - $14072;
             $14082 = $14074 * 17.384083044982699;
             $14083 = $14072 * $14082;
             $14084 = $14083 + $14081;
             $14085 = $14074 * $14075;
             $14086 = $14085 * 22.145328719723199;
             $14087 = $14086 + $14084;
             $14088 = $14071 * -48.719723183390997;
             $14089 = $14088 * $14075;
             $14090 = $14089 + $14087;
             $14091 = $14074 * -10.352941176470599;
             $14092 = $14071 * $14091;
             $14093 = $14092 + $14090;
             $14094 = $14072 * -22.145328719723199;
             $14095 = $14094 * $14075;
             $14096 = $14095 + $14093;
             $14097 = $14074 + $14096;
             $14098 = $14075 * 9.4117647058823497;
             $14099 = $14098 + $14097;
             $14100 = $14074 * 48.719723183390997;
             $14101 = $14100 * $14073;
             $14102 = $14101 + $14099;
             $14103 = (+__Z5IKabsd($14076));
             $14104 = $14103 < 9.9999999999999995E-7;
             do {
              if (!($14104)) {
               $14105 = $14072 * 0.089999999999999996;
               $14106 = $14074 * 0.089999999999999996;
               $14107 = $14106 - $14105;
               $14108 = (+__Z6IKsignd($14107));
               $14109 = (+__Z5IKabsd($14108));
               $14110 = $14109 < 9.9999999999999995E-7;
               if ($14110) {
                break;
               }
               $14111 = (+__Z5IKabsd($14102));
               $14112 = $14111 < 9.9999999999999995E-7;
               if ($14112) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $14218 = +HEAPF64[$43>>3];
               $14219 = $14218 * 0.150260191002141;
               $14220 = +HEAPF64[$45>>3];
               $14221 = $14220 * 0.150260191002141;
               $14222 = +HEAPF64[$47>>3];
               $14223 = $14222 * 0.77781745930520196;
               $14224 = +HEAPF64[$60>>3];
               $14225 = $14224 * 0.70710678118654802;
               $14226 = $14218 * $14225;
               $14227 = $14220 * $14223;
               $14228 = $14220 * $14225;
               $14229 = $14218 * $14223;
               $14230 = $14219 + $14226;
               $14231 = $14221 + $14228;
               $14232 = $14231 + $14230;
               $14233 = $14232 - $14229;
               $14234 = $14233 - $14227;
               $14235 = $14227 + $14230;
               $14236 = $14235 - $14229;
               $14237 = $14236 - $14231;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2310,$14234,$14237,1.9999999999999999E-6);
               $14238 = HEAP8[$450>>0]|0;
               $14239 = ($14238<<24>>24)==(0);
               if ($14239) {
                break L43;
               }
               $14240 = +HEAPF64[$47>>3];
               $14241 = $14240 * $14240;
               $14242 = $14241 * 0.089999999999999996;
               $14243 = +HEAPF64[$60>>3];
               $14244 = $14243 * 0.089999999999999996;
               $14245 = $14244 - $14242;
               $14246 = (+__Z6IKsignd($14245));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2311,$14246,-1);
               $14247 = HEAP8[$451>>0]|0;
               $14248 = ($14247<<24>>24)==(0);
               if ($14248) {
                break L43;
               }
               $14249 = +HEAPF64[$x2310>>3];
               $14250 = $14249 + -1.5707963267949001;
               $14251 = +HEAPF64[$x2311>>3];
               $14252 = $14251 * 1.5707963267949001;
               $14253 = $14250 + $14252;
               $14254 = (+__Z5IKsind($14253));
               $14255 = (+__Z5IKcosd($14253));
               $14256 = $14253 > 3.14159265358979;
               do {
                if ($14256) {
                 $14257 = $14253 + -6.2831853071795898;
                 $14260 = $14257;
                } else {
                 $14258 = $14253 < -3.14159265358979;
                 if (!($14258)) {
                  $14260 = $14253;
                  break;
                 }
                 $14259 = $14253 + 6.2831853071795898;
                 $14260 = $14259;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $14260;
               HEAPF64[$452>>3] = $14255;
               HEAPF64[$453>>3] = $14254;
               $14261 = +HEAPF64[$this>>3];
               $14262 = (+__Z5IKcosd($14261));
               $14263 = (+__Z5IKsind($14261));
               $14264 = +HEAPF64[$45>>3];
               $14265 = $14264 * 0.70710678118654802;
               $14266 = $14262 * 0.063639610306789302;
               $14267 = +HEAPF64[$43>>3];
               $14268 = $14263 * $14267;
               $14269 = $14267 * 0.70710678118654802;
               $14270 = $14262 * $14269;
               $14271 = $14268 * 0.70710678118654802;
               $14272 = $14263 * $14265;
               $14273 = $14262 * $14265;
               $14274 = $14272 + $14270;
               $14275 = $14271 - $14273;
               $14276 = $14275 - $14274;
               $14277 = $14266 * $14264;
               $14278 = -0.21249999999999999 - $14277;
               $14279 = $14268 * 0.063639610306789302;
               $14280 = $14278 + $14279;
               $14281 = $14264 * 0.063639610306789302;
               $14282 = $14263 * $14281;
               $14283 = $14282 + $14280;
               $14284 = +HEAPF64[$60>>3];
               $14285 = $14283 - $14284;
               $14286 = +HEAPF64[$47>>3];
               $14287 = $14286 * 1.1000000000000001;
               $14288 = $14287 + $14285;
               $14289 = $14266 * $14267;
               $14290 = $14289 + $14288;
               $14291 = (+__Z5IKabsd($14276));
               $14292 = $14291 > 5.0000000000000004E-6;
               if ($14292) {
                break L43;
               }
               $14293 = +HEAPF64[$76>>3];
               $14294 = +HEAPF64[$75>>3];
               $14295 = $14294 * 0.044999999999999998;
               $14296 = $14295 + -0.044999999999999998;
               $14297 = $14274 + $14296;
               $14298 = $14271 + $14297;
               $14299 = $14293 * 0.29999999999999999;
               $14300 = $14298 - $14299;
               $14301 = $14300 - $14273;
               $14302 = (+__Z5IKabsd($14301));
               $14303 = $14302 > 5.0000000000000004E-6;
               if ($14303) {
                break L43;
               }
               $14304 = (+__Z5IKabsd($14290));
               $14305 = $14304 > 5.0000000000000004E-6;
               if ($14305) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             $14113 = +HEAPF64[$7>>3];
             $14114 = (+__Z5IKabsd($14113));
             $14115 = $14114 + 3.14159265358979;
             $14116 = (+__Z6IKfmoddd($14115,6.2831853071795898));
             $14117 = $14116 + -3.14159265358979;
             $14118 = +HEAPF64[$47>>3];
             $14119 = $14118 + -0.84999999999999998;
             $14120 = (+__Z5IKabsd($14117));
             $14121 = $14120 < 9.9999999999999995E-7;
             if (!($14121)) {
              break L43;
             }
             $14122 = +HEAPF64[$60>>3];
             $14123 = 0.72250000000000003 - $14122;
             $14124 = (+__Z5IKabsd($14123));
             $14125 = $14124 < 9.9999999999999995E-7;
             if (!($14125)) {
              break L43;
             }
             $14126 = (+__Z5IKabsd($14119));
             $14127 = $14126 < 9.9999999999999995E-7;
             if (!($14127)) {
              break L43;
             }
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $14128 = +HEAPF64[$60>>3];
             $14129 = +HEAPF64[$47>>3];
             $14130 = $14129 * $14129;
             $14131 = $14128 - $14130;
             $14132 = (+__Z5IKabsd($14131));
             $14133 = $14132 < 9.9999999999999995E-7;
             if ($14133) {
              break L43;
             }
             HEAP16[$j4valid689>>1] = 0;
             HEAP8[$2>>0] = 2;
             $14134 = +HEAPF64[$45>>3];
             $14135 = $14134 * 0.70710678118654802;
             $14136 = +HEAPF64[$43>>3];
             $14137 = $14136 * 0.70710678118654802;
             $14138 = $14137 - $14135;
             $14139 = $14135 + $14137;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2293,$14138,$14139,1.9999999999999999E-6);
             $14140 = HEAP8[$443>>0]|0;
             $14141 = ($14140<<24>>24)==(0);
             if ($14141) {
              break L43;
             }
             $14142 = +HEAPF64[$x2293>>3];
             $14143 = -$14142;
             HEAPF64[$j4array686>>3] = $14143;
             $14144 = (+__Z5IKsind($14143));
             HEAPF64[$sj4array688>>3] = $14144;
             $14145 = (+__Z5IKcosd($14143));
             HEAPF64[$cj4array687>>3] = $14145;
             $14146 = 3.14159265358979 - $14142;
             HEAPF64[$444>>3] = $14146;
             $14147 = (+__Z5IKsind($14146));
             HEAPF64[$445>>3] = $14147;
             $14148 = +HEAPF64[$444>>3];
             $14149 = (+__Z5IKcosd($14148));
             HEAPF64[$446>>3] = $14149;
             $14150 = +HEAPF64[$j4array686>>3];
             $14151 = $14150 > 3.14159265358979;
             do {
              if ($14151) {
               $14152 = $14150 + -6.2831853071795898;
               HEAPF64[$j4array686>>3] = $14152;
              } else {
               $14153 = $14150 < -3.14159265358979;
               if (!($14153)) {
                break;
               }
               $14154 = $14150 + 6.2831853071795898;
               HEAPF64[$j4array686>>3] = $14154;
              }
             } while(0);
             HEAP8[$j4valid689>>0] = 1;
             $14155 = +HEAPF64[$444>>3];
             $14156 = $14155 > 3.14159265358979;
             do {
              if ($14156) {
               $14157 = $14155 + -6.2831853071795898;
               HEAPF64[$444>>3] = $14157;
              } else {
               $14158 = $14155 < -3.14159265358979;
               if (!($14158)) {
                break;
               }
               $14159 = $14155 + 6.2831853071795898;
               HEAPF64[$444>>3] = $14159;
              }
             } while(0);
             HEAP8[$447>>0] = 1;
             $ij4690$01096 = 0;
             while(1) {
              $14160 = (($j4valid689) + ($ij4690$01096)|0);
              $14161 = HEAP8[$14160>>0]|0;
              $14162 = ($14161<<24>>24)==(0);
              do {
               if (!($14162)) {
                $14163 = $ij4690$01096&255;
                HEAP8[$0>>0] = $14163;
                HEAP8[$1>>0] = -1;
                $iij4691$01093 = (($ij4690$01096) + 1)|0;
                $14164 = ($iij4691$01093|0)<(2);
                do {
                 if ($14164) {
                  $14165 = (($sj4array688) + ($ij4690$01096<<3)|0);
                  $14166 = (($j4valid689) + ($iij4691$01093)|0);
                  $14167 = HEAP8[$14166>>0]|0;
                  $14168 = ($14167<<24>>24)==(0);
                  if ($14168) {
                   break;
                  }
                  $14169 = (($cj4array687) + ($ij4690$01096<<3)|0);
                  $14170 = +HEAPF64[$14169>>3];
                  $14171 = (($cj4array687) + ($iij4691$01093<<3)|0);
                  $14172 = +HEAPF64[$14171>>3];
                  $14173 = $14170 - $14172;
                  $14174 = (+__Z5IKabsd($14173));
                  $14175 = $14174 < 9.9999999999999995E-7;
                  if (!($14175)) {
                   break;
                  }
                  $14176 = +HEAPF64[$14165>>3];
                  $14177 = (($sj4array688) + ($iij4691$01093<<3)|0);
                  $14178 = +HEAPF64[$14177>>3];
                  $14179 = $14176 - $14178;
                  $14180 = (+__Z5IKabsd($14179));
                  $14181 = $14180 < 9.9999999999999995E-7;
                  if (!($14181)) {
                   break;
                  }
                  HEAP8[$14166>>0] = 0;
                  $14182 = $iij4691$01093&255;
                  HEAP8[$1>>0] = $14182;
                 }
                } while(0);
                $14183 = (($j4array686) + ($ij4690$01096<<3)|0);
                $14184 = +HEAPF64[$14183>>3];
                HEAPF64[$this>>3] = $14184;
                $14185 = (($cj4array687) + ($ij4690$01096<<3)|0);
                $14186 = +HEAPF64[$14185>>3];
                HEAPF64[$448>>3] = $14186;
                $14187 = (($sj4array688) + ($ij4690$01096<<3)|0);
                $14188 = +HEAPF64[$14187>>3];
                HEAPF64[$449>>3] = $14188;
                $14189 = +HEAPF64[$this>>3];
                $14190 = (+__Z5IKcosd($14189));
                $14191 = (+__Z5IKsind($14189));
                $14192 = +HEAPF64[$45>>3];
                $14193 = $14192 * 0.70710678118654802;
                $14194 = $14192 * 0.063639610306789302;
                $14195 = +HEAPF64[$43>>3];
                $14196 = $14191 * $14195;
                $14197 = $14190 * $14195;
                $14198 = $14197 * 0.70710678118654802;
                $14199 = $14196 * 0.70710678118654802;
                $14200 = $14199 - $14198;
                $14201 = $14191 * $14193;
                $14202 = $14200 - $14201;
                $14203 = -$14190;
                $14204 = $14193 * $14203;
                $14205 = $14204 + $14202;
                $14206 = (+__Z5IKabsd($14205));
                $14207 = $14206 > 5.0000000000000004E-6;
                if ($14207) {
                 break;
                }
                $14208 = $14191 * $14194;
                $14209 = $14196 * 0.063639610306789302;
                $14210 = $14208 + $14209;
                $14211 = $14197 * 0.063639610306789302;
                $14212 = $14211 + $14210;
                $14213 = $14194 * $14203;
                $14214 = $14213 + $14212;
                $14215 = (+__Z5IKabsd($14214));
                $14216 = $14215 > 5.0000000000000004E-6;
                if ($14216) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $14217 = (($ij4690$01096) + 1)|0;
              $exitcond1727 = ($14217|0)==(2);
              if ($exitcond1727) {
               break L43;
              } else {
               $ij4690$01096 = $14217;
              }
             }
            }
           } while(0);
           $14391 = +HEAPF64[$76>>3];
           $14392 = $14391 * 0.044999999999999998;
           $14393 = +HEAPF64[$75>>3];
           $14394 = $14393 * 0.29999999999999999;
           $14395 = $14392 + $14394;
           $14396 = +HEAPF64[$3>>3];
           $14397 = $14396 + -3.14159265358979;
           $14398 = (+__Z5IKabsd($14397));
           $14399 = $14398 + 3.14159265358979;
           $14400 = (+__Z6IKfmoddd($14399,6.2831853071795898));
           $14401 = $14400 + -3.14159265358979;
           $14402 = $14395 + 0.55000000000000004;
           $14403 = +HEAPF64[$47>>3];
           $14404 = $14402 + $14403;
           $14405 = -0.55000000000000004 - $14403;
           $14406 = $14405 - $14395;
           $14407 = (+__Z5IKabsd($14401));
           $14408 = $14407 < 9.9999999999999995E-7;
           do {
            if ($14408) {
             $14409 = +HEAPF64[$60>>3];
             $14410 = $14391 * 0.076499999999999999;
             $14411 = $14410 + 0.39655000000000001;
             $14412 = $14411 - $14409;
             $14413 = $14393 * 0.32595000000000002;
             $14414 = $14413 + $14412;
             $14415 = (+__Z5IKabsd($14414));
             $14416 = $14415 < 9.9999999999999995E-7;
             if (!($14416)) {
              break;
             }
             $14417 = (+__Z5IKabsd($14404));
             $14418 = $14417 < 9.9999999999999995E-7;
             if (!($14418)) {
              break;
             }
             $14419 = (+__Z5IKabsd($14406));
             $14420 = $14419 < 9.9999999999999995E-7;
             if (!($14420)) {
              break;
             }
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             $14421 = +HEAPF64[$47>>3];
             $14422 = $14421 * $14421;
             $14423 = +HEAPF64[$75>>3];
             $14424 = $14423 * $14423;
             $14425 = +HEAPF64[$76>>3];
             $14426 = $14425 * $14425;
             $14427 = $14423 * 2.0;
             $14428 = +HEAPF64[$60>>3];
             $14429 = $14428 - $14422;
             $14430 = $14426 * 44.4444444444444;
             $14431 = $14428 * 13.3333333333333;
             $14432 = $14425 * $14431;
             $14433 = $14425 * 13.3333333333333;
             $14434 = $14422 * $14433;
             $14435 = $14422 * $14430;
             $14436 = -$14435;
             $14437 = $14423 * $14432;
             $14438 = $14436 - $14437;
             $14439 = $14423 * $14434;
             $14440 = $14439 + $14438;
             $14441 = $14432 + $14440;
             $14442 = $14422 * $14424;
             $14443 = $14441 - $14442;
             $14444 = $14427 * $14428;
             $14445 = $14443 - $14444;
             $14446 = $14428 * $14430;
             $14447 = $14446 + $14445;
             $14448 = $14424 * $14428;
             $14449 = $14448 + $14447;
             $14450 = $14428 + $14449;
             $14451 = $14422 * $14427;
             $14452 = $14451 + $14450;
             $14453 = $14452 - $14422;
             $14454 = $14453 - $14434;
             $14455 = (+__Z5IKabsd($14429));
             $14456 = $14455 < 9.9999999999999995E-7;
             do {
              if (!($14456)) {
               $14457 = (+__Z6IKsignd($14429));
               $14458 = (+__Z5IKabsd($14457));
               $14459 = $14458 < 9.9999999999999995E-7;
               if ($14459) {
                break;
               }
               $14460 = (+__Z5IKabsd($14454));
               $14461 = $14460 < 9.9999999999999995E-7;
               if ($14461) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $14695 = +HEAPF64[$43>>3];
               $14696 = $14695 * 0.031819805153394602;
               $14697 = +HEAPF64[$45>>3];
               $14698 = $14697 * 0.031819805153394602;
               $14699 = +HEAPF64[$76>>3];
               $14700 = $14699 * 0.21213203435596401;
               $14701 = +HEAPF64[$75>>3];
               $14702 = $14698 * $14701;
               $14703 = $14695 * $14700;
               $14704 = $14696 * $14701;
               $14705 = $14697 * $14700;
               $14706 = $14696 + $14703;
               $14707 = $14698 + $14705;
               $14708 = $14706 + $14707;
               $14709 = $14708 - $14702;
               $14710 = $14709 - $14704;
               $14711 = $14706 - $14707;
               $14712 = $14702 + $14711;
               $14713 = $14712 - $14704;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2402,$14710,$14713,1.9999999999999999E-6);
               $14714 = HEAP8[$469>>0]|0;
               $14715 = ($14714<<24>>24)==(0);
               if ($14715) {
                break L43;
               }
               $14716 = +HEAPF64[$60>>3];
               $14717 = +HEAPF64[$47>>3];
               $14718 = $14717 * $14717;
               $14719 = $14716 - $14718;
               $14720 = (+__Z6IKsignd($14719));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2403,$14720,-1);
               $14721 = HEAP8[$470>>0]|0;
               $14722 = ($14721<<24>>24)==(0);
               if ($14722) {
                break L43;
               }
               $14723 = +HEAPF64[$x2402>>3];
               $14724 = $14723 + -1.5707963267949001;
               $14725 = +HEAPF64[$x2403>>3];
               $14726 = $14725 * 1.5707963267949001;
               $14727 = $14724 + $14726;
               $14728 = (+__Z5IKsind($14727));
               $14729 = (+__Z5IKcosd($14727));
               $14730 = $14727 > 3.14159265358979;
               do {
                if ($14730) {
                 $14731 = $14727 + -6.2831853071795898;
                 $14734 = $14731;
                } else {
                 $14732 = $14727 < -3.14159265358979;
                 if (!($14732)) {
                  $14734 = $14727;
                  break;
                 }
                 $14733 = $14727 + 6.2831853071795898;
                 $14734 = $14733;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $14734;
               HEAPF64[$471>>3] = $14729;
               HEAPF64[$472>>3] = $14728;
               $14735 = +HEAPF64[$this>>3];
               $14736 = (+__Z5IKcosd($14735));
               $14737 = (+__Z5IKsind($14735));
               $14738 = +HEAPF64[$45>>3];
               $14739 = $14738 * 0.70710678118654802;
               $14740 = $14736 * 0.063639610306789302;
               $14741 = +HEAPF64[$43>>3];
               $14742 = $14737 * $14741;
               $14743 = $14741 * 0.70710678118654802;
               $14744 = $14736 * $14743;
               $14745 = $14742 * 0.70710678118654802;
               $14746 = $14737 * $14739;
               $14747 = $14736 * $14739;
               $14748 = $14746 + $14744;
               $14749 = $14745 - $14747;
               $14750 = $14749 - $14748;
               $14751 = $14742 * 0.063639610306789302;
               $14752 = $14751 + -0.21249999999999999;
               $14753 = $14738 * 0.063639610306789302;
               $14754 = $14737 * $14753;
               $14755 = $14754 + $14752;
               $14756 = $14740 * $14738;
               $14757 = $14755 - $14756;
               $14758 = +HEAPF64[$60>>3];
               $14759 = $14757 - $14758;
               $14760 = +HEAPF64[$47>>3];
               $14761 = $14760 * 1.1000000000000001;
               $14762 = $14759 - $14761;
               $14763 = $14740 * $14741;
               $14764 = $14763 + $14762;
               $14765 = (+__Z5IKabsd($14750));
               $14766 = $14765 > 5.0000000000000004E-6;
               if ($14766) {
                break L43;
               }
               $14767 = +HEAPF64[$76>>3];
               $14768 = +HEAPF64[$75>>3];
               $14769 = $14745 + -0.044999999999999998;
               $14770 = $14769 + $14748;
               $14771 = $14768 * 0.044999999999999998;
               $14772 = $14770 + $14771;
               $14773 = $14772 - $14747;
               $14774 = $14767 * 0.29999999999999999;
               $14775 = $14773 - $14774;
               $14776 = (+__Z5IKabsd($14775));
               $14777 = $14776 > 5.0000000000000004E-6;
               if ($14777) {
                break L43;
               }
               $14778 = (+__Z5IKabsd($14764));
               $14779 = $14778 > 5.0000000000000004E-6;
               if ($14779) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             $14462 = +HEAPF64[$47>>3];
             $14463 = $14462 * $14462;
             $14464 = +HEAPF64[$60>>3];
             $14465 = $14464 * $14464;
             $14466 = $14462 * $14463;
             $14467 = $14464 - $14463;
             $14468 = $14463 * $14463;
             $14469 = $14468 * 26.7958477508651;
             $14470 = $14465 * 9.4117647058823497;
             $14471 = $14470 - $14469;
             $14472 = $14462 * 48.719723183390997;
             $14473 = $14472 * $14465;
             $14474 = $14473 + $14471;
             $14475 = $14464 * $14465;
             $14476 = $14475 * 22.145328719723199;
             $14477 = $14476 + $14474;
             $14478 = $14463 * -22.145328719723199;
             $14479 = $14478 * $14465;
             $14480 = $14479 + $14477;
             $14481 = $14464 * -48.719723183390997;
             $14482 = $14481 * $14466;
             $14483 = $14482 + $14480;
             $14484 = $14464 + $14483;
             $14485 = $14464 * 10.352941176470599;
             $14486 = $14462 * $14485;
             $14487 = $14486 + $14484;
             $14488 = $14466 * 10.352941176470599;
             $14489 = $14487 - $14488;
             $14490 = $14489 - $14463;
             $14491 = $14464 * 17.384083044982699;
             $14492 = $14463 * $14491;
             $14493 = $14492 + $14490;
             $14494 = (+__Z5IKabsd($14467));
             $14495 = $14494 < 9.9999999999999995E-7;
             do {
              if (!($14495)) {
               $14496 = $14463 * 0.089999999999999996;
               $14497 = $14464 * 0.089999999999999996;
               $14498 = $14497 - $14496;
               $14499 = (+__Z6IKsignd($14498));
               $14500 = (+__Z5IKabsd($14499));
               $14501 = $14500 < 9.9999999999999995E-7;
               if ($14501) {
                break;
               }
               $14502 = (+__Z5IKabsd($14493));
               $14503 = $14502 < 9.9999999999999995E-7;
               if ($14503) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $14609 = +HEAPF64[$43>>3];
               $14610 = $14609 * 0.150260191002141;
               $14611 = +HEAPF64[$45>>3];
               $14612 = $14611 * 0.150260191002141;
               $14613 = +HEAPF64[$47>>3];
               $14614 = $14613 * 0.77781745930520196;
               $14615 = +HEAPF64[$60>>3];
               $14616 = $14615 * 0.70710678118654802;
               $14617 = $14609 * $14616;
               $14618 = $14609 * $14614;
               $14619 = $14611 * $14616;
               $14620 = $14611 * $14614;
               $14621 = $14618 + $14617;
               $14622 = $14610 + $14621;
               $14623 = $14620 + $14619;
               $14624 = $14612 + $14623;
               $14625 = $14622 + $14624;
               $14626 = $14622 - $14624;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2380,$14625,$14626,1.9999999999999999E-6);
               $14627 = HEAP8[$465>>0]|0;
               $14628 = ($14627<<24>>24)==(0);
               if ($14628) {
                break L43;
               }
               $14629 = +HEAPF64[$47>>3];
               $14630 = $14629 * $14629;
               $14631 = $14630 * 0.089999999999999996;
               $14632 = +HEAPF64[$60>>3];
               $14633 = $14632 * 0.089999999999999996;
               $14634 = $14633 - $14631;
               $14635 = (+__Z6IKsignd($14634));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2381,$14635,-1);
               $14636 = HEAP8[$466>>0]|0;
               $14637 = ($14636<<24>>24)==(0);
               if ($14637) {
                break L43;
               }
               $14638 = +HEAPF64[$x2380>>3];
               $14639 = $14638 + -1.5707963267949001;
               $14640 = +HEAPF64[$x2381>>3];
               $14641 = $14640 * 1.5707963267949001;
               $14642 = $14639 + $14641;
               $14643 = (+__Z5IKsind($14642));
               $14644 = (+__Z5IKcosd($14642));
               $14645 = $14642 > 3.14159265358979;
               do {
                if ($14645) {
                 $14646 = $14642 + -6.2831853071795898;
                 $14649 = $14646;
                } else {
                 $14647 = $14642 < -3.14159265358979;
                 if (!($14647)) {
                  $14649 = $14642;
                  break;
                 }
                 $14648 = $14642 + 6.2831853071795898;
                 $14649 = $14648;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $14649;
               HEAPF64[$467>>3] = $14644;
               HEAPF64[$468>>3] = $14643;
               $14650 = +HEAPF64[$this>>3];
               $14651 = (+__Z5IKcosd($14650));
               $14652 = (+__Z5IKsind($14650));
               $14653 = +HEAPF64[$45>>3];
               $14654 = $14653 * 0.70710678118654802;
               $14655 = $14651 * 0.063639610306789302;
               $14656 = +HEAPF64[$43>>3];
               $14657 = $14652 * $14656;
               $14658 = $14656 * 0.70710678118654802;
               $14659 = $14651 * $14658;
               $14660 = $14657 * 0.70710678118654802;
               $14661 = $14652 * $14654;
               $14662 = $14651 * $14654;
               $14663 = $14661 + $14659;
               $14664 = $14660 - $14662;
               $14665 = $14664 - $14663;
               $14666 = $14655 * $14656;
               $14667 = $14666 + -0.21249999999999999;
               $14668 = $14655 * $14653;
               $14669 = $14667 - $14668;
               $14670 = +HEAPF64[$60>>3];
               $14671 = $14669 - $14670;
               $14672 = +HEAPF64[$47>>3];
               $14673 = $14672 * 1.1000000000000001;
               $14674 = $14671 - $14673;
               $14675 = $14657 * 0.063639610306789302;
               $14676 = $14675 + $14674;
               $14677 = $14653 * 0.063639610306789302;
               $14678 = $14652 * $14677;
               $14679 = $14678 + $14676;
               $14680 = (+__Z5IKabsd($14665));
               $14681 = $14680 > 5.0000000000000004E-6;
               if ($14681) {
                break L43;
               }
               $14682 = +HEAPF64[$76>>3];
               $14683 = +HEAPF64[$75>>3];
               $14684 = $14683 * 0.044999999999999998;
               $14685 = $14684 + -0.044999999999999998;
               $14686 = $14663 + $14685;
               $14687 = $14660 + $14686;
               $14688 = $14687 - $14662;
               $14689 = $14682 * 0.29999999999999999;
               $14690 = $14688 - $14689;
               $14691 = (+__Z5IKabsd($14690));
               $14692 = $14691 > 5.0000000000000004E-6;
               if ($14692) {
                break L43;
               }
               $14693 = (+__Z5IKabsd($14679));
               $14694 = $14693 > 5.0000000000000004E-6;
               if ($14694) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             $14504 = +HEAPF64[$7>>3];
             $14505 = (+__Z5IKabsd($14504));
             $14506 = $14505 + 3.14159265358979;
             $14507 = (+__Z6IKfmoddd($14506,6.2831853071795898));
             $14508 = $14507 + -3.14159265358979;
             $14509 = +HEAPF64[$47>>3];
             $14510 = $14509 + 0.84999999999999998;
             $14511 = (+__Z5IKabsd($14508));
             $14512 = $14511 < 9.9999999999999995E-7;
             if (!($14512)) {
              break L43;
             }
             $14513 = +HEAPF64[$60>>3];
             $14514 = 0.72250000000000003 - $14513;
             $14515 = (+__Z5IKabsd($14514));
             $14516 = $14515 < 9.9999999999999995E-7;
             if (!($14516)) {
              break L43;
             }
             $14517 = (+__Z5IKabsd($14510));
             $14518 = $14517 < 9.9999999999999995E-7;
             if (!($14518)) {
              break L43;
             }
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = -1.0;
             HEAPF64[$3>>3] = 3.14159265358979;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $14519 = +HEAPF64[$60>>3];
             $14520 = +HEAPF64[$47>>3];
             $14521 = $14520 * $14520;
             $14522 = $14519 - $14521;
             $14523 = (+__Z5IKabsd($14522));
             $14524 = $14523 < 9.9999999999999995E-7;
             if ($14524) {
              break L43;
             }
             HEAP16[$j4valid717>>1] = 0;
             HEAP8[$2>>0] = 2;
             $14525 = +HEAPF64[$45>>3];
             $14526 = $14525 * 0.70710678118654802;
             $14527 = +HEAPF64[$43>>3];
             $14528 = $14527 * 0.70710678118654802;
             $14529 = $14528 - $14526;
             $14530 = $14526 + $14528;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2363,$14529,$14530,1.9999999999999999E-6);
             $14531 = HEAP8[$458>>0]|0;
             $14532 = ($14531<<24>>24)==(0);
             if ($14532) {
              break L43;
             }
             $14533 = +HEAPF64[$x2363>>3];
             $14534 = -$14533;
             HEAPF64[$j4array714>>3] = $14534;
             $14535 = (+__Z5IKsind($14534));
             HEAPF64[$sj4array716>>3] = $14535;
             $14536 = (+__Z5IKcosd($14534));
             HEAPF64[$cj4array715>>3] = $14536;
             $14537 = 3.14159265358979 - $14533;
             HEAPF64[$459>>3] = $14537;
             $14538 = (+__Z5IKsind($14537));
             HEAPF64[$460>>3] = $14538;
             $14539 = +HEAPF64[$459>>3];
             $14540 = (+__Z5IKcosd($14539));
             HEAPF64[$461>>3] = $14540;
             $14541 = +HEAPF64[$j4array714>>3];
             $14542 = $14541 > 3.14159265358979;
             do {
              if ($14542) {
               $14543 = $14541 + -6.2831853071795898;
               HEAPF64[$j4array714>>3] = $14543;
              } else {
               $14544 = $14541 < -3.14159265358979;
               if (!($14544)) {
                break;
               }
               $14545 = $14541 + 6.2831853071795898;
               HEAPF64[$j4array714>>3] = $14545;
              }
             } while(0);
             HEAP8[$j4valid717>>0] = 1;
             $14546 = +HEAPF64[$459>>3];
             $14547 = $14546 > 3.14159265358979;
             do {
              if ($14547) {
               $14548 = $14546 + -6.2831853071795898;
               HEAPF64[$459>>3] = $14548;
              } else {
               $14549 = $14546 < -3.14159265358979;
               if (!($14549)) {
                break;
               }
               $14550 = $14546 + 6.2831853071795898;
               HEAPF64[$459>>3] = $14550;
              }
             } while(0);
             HEAP8[$462>>0] = 1;
             $ij4718$01084 = 0;
             while(1) {
              $14551 = (($j4valid717) + ($ij4718$01084)|0);
              $14552 = HEAP8[$14551>>0]|0;
              $14553 = ($14552<<24>>24)==(0);
              do {
               if (!($14553)) {
                $14554 = $ij4718$01084&255;
                HEAP8[$0>>0] = $14554;
                HEAP8[$1>>0] = -1;
                $iij4719$01081 = (($ij4718$01084) + 1)|0;
                $14555 = ($iij4719$01081|0)<(2);
                do {
                 if ($14555) {
                  $14556 = (($sj4array716) + ($ij4718$01084<<3)|0);
                  $14557 = (($j4valid717) + ($iij4719$01081)|0);
                  $14558 = HEAP8[$14557>>0]|0;
                  $14559 = ($14558<<24>>24)==(0);
                  if ($14559) {
                   break;
                  }
                  $14560 = (($cj4array715) + ($ij4718$01084<<3)|0);
                  $14561 = +HEAPF64[$14560>>3];
                  $14562 = (($cj4array715) + ($iij4719$01081<<3)|0);
                  $14563 = +HEAPF64[$14562>>3];
                  $14564 = $14561 - $14563;
                  $14565 = (+__Z5IKabsd($14564));
                  $14566 = $14565 < 9.9999999999999995E-7;
                  if (!($14566)) {
                   break;
                  }
                  $14567 = +HEAPF64[$14556>>3];
                  $14568 = (($sj4array716) + ($iij4719$01081<<3)|0);
                  $14569 = +HEAPF64[$14568>>3];
                  $14570 = $14567 - $14569;
                  $14571 = (+__Z5IKabsd($14570));
                  $14572 = $14571 < 9.9999999999999995E-7;
                  if (!($14572)) {
                   break;
                  }
                  HEAP8[$14557>>0] = 0;
                  $14573 = $iij4719$01081&255;
                  HEAP8[$1>>0] = $14573;
                 }
                } while(0);
                $14574 = (($j4array714) + ($ij4718$01084<<3)|0);
                $14575 = +HEAPF64[$14574>>3];
                HEAPF64[$this>>3] = $14575;
                $14576 = (($cj4array715) + ($ij4718$01084<<3)|0);
                $14577 = +HEAPF64[$14576>>3];
                HEAPF64[$463>>3] = $14577;
                $14578 = (($sj4array716) + ($ij4718$01084<<3)|0);
                $14579 = +HEAPF64[$14578>>3];
                HEAPF64[$464>>3] = $14579;
                $14580 = +HEAPF64[$this>>3];
                $14581 = (+__Z5IKcosd($14580));
                $14582 = (+__Z5IKsind($14580));
                $14583 = +HEAPF64[$45>>3];
                $14584 = $14583 * 0.70710678118654802;
                $14585 = $14583 * 0.063639610306789302;
                $14586 = +HEAPF64[$43>>3];
                $14587 = $14582 * $14586;
                $14588 = $14581 * $14586;
                $14589 = $14588 * 0.70710678118654802;
                $14590 = -$14581;
                $14591 = $14584 * $14590;
                $14592 = $14591 - $14589;
                $14593 = $14582 * $14584;
                $14594 = $14592 - $14593;
                $14595 = $14587 * 0.70710678118654802;
                $14596 = $14595 + $14594;
                $14597 = (+__Z5IKabsd($14596));
                $14598 = $14597 > 5.0000000000000004E-6;
                if ($14598) {
                 break;
                }
                $14599 = $14582 * $14585;
                $14600 = $14585 * $14590;
                $14601 = $14599 + $14600;
                $14602 = $14588 * 0.063639610306789302;
                $14603 = $14601 + $14602;
                $14604 = $14587 * 0.063639610306789302;
                $14605 = $14604 + $14603;
                $14606 = (+__Z5IKabsd($14605));
                $14607 = $14606 > 5.0000000000000004E-6;
                if ($14607) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $14608 = (($ij4718$01084) + 1)|0;
              $exitcond1724 = ($14608|0)==(2);
              if ($exitcond1724) {
               break L43;
              } else {
               $ij4718$01084 = $14608;
              }
             }
            }
           } while(0);
           $14780 = +HEAPF64[$3>>3];
           $14781 = $14780 + -1.5707963267949001;
           $14782 = (+__Z5IKabsd($14781));
           $14783 = $14782 + 3.14159265358979;
           $14784 = (+__Z6IKfmoddd($14783,6.2831853071795898));
           $14785 = $14784 + -3.14159265358979;
           $14786 = +HEAPF64[$47>>3];
           $14787 = (+__Z5IKabsd($14785));
           $14788 = $14787 < 9.9999999999999995E-7;
           do {
            if ($14788) {
             $14789 = +HEAPF64[$75>>3];
             $14790 = +HEAPF64[$60>>3];
             $14791 = +HEAPF64[$76>>3];
             $14792 = $14791 * 0.076499999999999999;
             $14793 = $14792 + 0.39655000000000001;
             $14794 = $14793 - $14790;
             $14795 = $14789 * 0.32595000000000002;
             $14796 = $14795 + $14794;
             $14797 = (+__Z5IKabsd($14796));
             $14798 = $14797 < 9.9999999999999995E-7;
             if (!($14798)) {
              break;
             }
             $14799 = (+__Z5IKabsd($14786));
             $14800 = $14799 < 9.9999999999999995E-7;
             if (!($14800)) {
              break;
             }
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$384>>3] = 1.0;
             HEAPF64[$383>>3] = 0.0;
             HEAPF64[$3>>3] = 1.5707963267949001;
             $14801 = +HEAPF64[$47>>3];
             $14802 = $14801 * $14801;
             $14803 = +HEAPF64[$76>>3];
             $14804 = $14803 * $14803;
             $14805 = +HEAPF64[$75>>3];
             $14806 = $14805 * $14805;
             $14807 = $14805 * 4.2607843137254902;
             $14808 = +HEAPF64[$60>>3];
             $14809 = $14802 - $14808;
             $14810 = $14804 * 1.20294117647059;
             $14811 = $14806 * 1.20294117647059;
             $14812 = -$14802;
             $14813 = (+__Z6IKsignd($14809));
             $14814 = (+__Z5IKabsd($14809));
             $14815 = $14814 < 9.9999999999999995E-7;
             do {
              if (!($14815)) {
               $14816 = $14808 * $14810;
               $14817 = $14808 * $14807;
               $14818 = $14816 + $14817;
               $14819 = $14807 * $14812;
               $14820 = $14819 + $14818;
               $14821 = $14810 * $14812;
               $14822 = $14821 + $14820;
               $14823 = $14803 * $14808;
               $14824 = $14823 + $14822;
               $14825 = $14802 * 3.9807189542483701;
               $14826 = $14824 - $14825;
               $14827 = $14803 * $14802;
               $14828 = $14826 - $14827;
               $14829 = $14808 * 3.9807189542483701;
               $14830 = $14829 + $14828;
               $14831 = $14811 * $14812;
               $14832 = $14831 + $14830;
               $14833 = $14808 * $14811;
               $14834 = $14833 + $14832;
               $14835 = (+__Z5IKabsd($14834));
               $14836 = $14835 < 9.9999999999999995E-7;
               if ($14836) {
                break;
               }
               $14837 = (+__Z5IKabsd($14813));
               $14838 = $14837 < 9.9999999999999995E-7;
               if ($14838) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $14961 = +HEAPF64[$75>>3];
               $14962 = $14961 * 0.243951839509359;
               $14963 = +HEAPF64[$43>>3];
               $14964 = +HEAPF64[$76>>3];
               $14965 = $14963 * $14964;
               $14966 = +HEAPF64[$45>>3];
               $14967 = $14964 * $14966;
               $14968 = $14961 * 0.18031222920257001;
               $14969 = $14963 * $14962;
               $14970 = -$14966;
               $14971 = $14968 * $14970;
               $14972 = $14969 + $14971;
               $14973 = $14965 * 0.18031222920257001;
               $14974 = $14972 - $14973;
               $14975 = $14967 * 0.243951839509359;
               $14976 = $14974 - $14975;
               $14977 = $14966 * 0.42072853480599598;
               $14978 = $14976 - $14977;
               $14979 = $14963 * 0.35708892449920698;
               $14980 = $14979 + $14978;
               $14981 = $14962 * $14970;
               $14982 = $14965 * 0.243951839509359;
               $14983 = $14981 - $14982;
               $14984 = $14966 * 0.35708892449920698;
               $14985 = $14983 - $14984;
               $14986 = $14967 * 0.18031222920257001;
               $14987 = $14986 + $14985;
               $14988 = $14963 * 0.42072853480599598;
               $14989 = $14987 - $14988;
               $14990 = $14963 * $14968;
               $14991 = $14989 - $14990;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2444,$14980,$14991,1.9999999999999999E-6);
               $14992 = HEAP8[$477>>0]|0;
               $14993 = ($14992<<24>>24)==(0);
               if ($14993) {
                break L43;
               }
               $14994 = +HEAPF64[$60>>3];
               $14995 = +HEAPF64[$47>>3];
               $14996 = $14995 * $14995;
               $14997 = $14996 - $14994;
               $14998 = (+__Z6IKsignd($14997));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2445,$14998,-1);
               $14999 = HEAP8[$478>>0]|0;
               $15000 = ($14999<<24>>24)==(0);
               if ($15000) {
                break L43;
               }
               $15001 = +HEAPF64[$x2444>>3];
               $15002 = $15001 + -1.5707963267949001;
               $15003 = +HEAPF64[$x2445>>3];
               $15004 = $15003 * 1.5707963267949001;
               $15005 = $15002 + $15004;
               $15006 = (+__Z5IKsind($15005));
               $15007 = (+__Z5IKcosd($15005));
               $15008 = $15005 > 3.14159265358979;
               do {
                if ($15008) {
                 $15009 = $15005 + -6.2831853071795898;
                 $15012 = $15009;
                } else {
                 $15010 = $15005 < -3.14159265358979;
                 if (!($15010)) {
                  $15012 = $15005;
                  break;
                 }
                 $15011 = $15005 + 6.2831853071795898;
                 $15012 = $15011;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $15012;
               HEAPF64[$479>>3] = $15007;
               HEAPF64[$480>>3] = $15006;
               $15013 = +HEAPF64[$this>>3];
               $15014 = (+__Z5IKcosd($15013));
               $15015 = (+__Z5IKsind($15013));
               $15016 = +HEAPF64[$45>>3];
               $15017 = $15016 * 0.70710678118654802;
               $15018 = +HEAPF64[$43>>3];
               $15019 = $15018 * 0.70710678118654802;
               $15020 = $15014 * $15019;
               $15021 = $15014 * $15017;
               $15022 = $15015 * $15017;
               $15023 = $15015 * $15019;
               $15024 = $15022 + $15020;
               $15025 = $15018 * -0.71417784899841297;
               $15026 = $15015 * $15025;
               $15027 = $15026 + -0.21249999999999999;
               $15028 = +HEAPF64[$60>>3];
               $15029 = $15027 - $15028;
               $15030 = $15016 * 0.71417784899841297;
               $15031 = $15014 * $15030;
               $15032 = $15031 + $15029;
               $15033 = $15018 * 0.84145706961199196;
               $15034 = $15014 * $15033;
               $15035 = $15034 + $15032;
               $15036 = $15016 * 0.84145706961199196;
               $15037 = $15015 * $15036;
               $15038 = $15037 + $15035;
               $15039 = +HEAPF64[$75>>3];
               $15040 = +HEAPF64[$76>>3];
               $15041 = $15040 * 0.044999999999999998;
               $15042 = -0.55000000000000004 - $15041;
               $15043 = $15024 + $15042;
               $15044 = $15021 + $15043;
               $15045 = $15039 * 0.29999999999999999;
               $15046 = $15044 - $15045;
               $15047 = $15046 - $15023;
               $15048 = (+__Z5IKabsd($15038));
               $15049 = $15048 > 5.0000000000000004E-6;
               if ($15049) {
                break L43;
               }
               $15050 = $15024 + -0.044999999999999998;
               $15051 = $15023 + $15050;
               $15052 = $15039 * 0.044999999999999998;
               $15053 = $15052 + $15051;
               $15054 = $15053 - $15021;
               $15055 = $15040 * 0.29999999999999999;
               $15056 = $15054 - $15055;
               $15057 = (+__Z5IKabsd($15056));
               $15058 = $15057 > 5.0000000000000004E-6;
               if ($15058) {
                break L43;
               }
               $15059 = (+__Z5IKabsd($15047));
               $15060 = $15059 > 5.0000000000000004E-6;
               if ($15060) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             HEAPF64[$24>>3] = -1.0;
             HEAPF64[$23>>3] = 0.0;
             HEAPF64[$22>>3] = -1.5707963267949001;
             HEAPF64[$384>>3] = 1.0;
             HEAPF64[$383>>3] = 0.0;
             HEAPF64[$3>>3] = 1.5707963267949001;
             $14839 = +HEAPF64[$47>>3];
             $14840 = $14839 * $14839;
             $14841 = +HEAPF64[$60>>3];
             $14842 = $14841 - $14840;
             $14843 = (+__Z5IKabsd($14842));
             $14844 = $14843 < 9.9999999999999995E-7;
             if ($14844) {
              break L43;
             }
             $14845 = $14840 * 1.1000000000000001;
             $14846 = $14841 * 1.1000000000000001;
             $14847 = $14846 - $14845;
             $14848 = (+__Z6IKsignd($14847));
             $14849 = (+__Z5IKabsd($14848));
             $14850 = $14849 < 9.9999999999999995E-7;
             if ($14850) {
              break L43;
             }
             HEAP8[$2>>0] = 1;
             $14851 = +HEAPF64[$75>>3];
             $14852 = $14851 * 0.0378655681325396;
             $14853 = +HEAPF64[$43>>3];
             $14854 = +HEAPF64[$76>>3];
             $14855 = $14853 * $14854;
             $14856 = +HEAPF64[$60>>3];
             $14857 = $14856 * 0.70710678118654802;
             $14858 = $14851 * 0.0321380032049286;
             $14859 = +HEAPF64[$45>>3];
             $14860 = $14854 * $14859;
             $14861 = $14859 * $14857;
             $14862 = $14853 * $14857;
             $14863 = $14860 * 0.214253354699524;
             $14864 = $14861 + $14863;
             $14865 = -$14853;
             $14866 = $14852 * $14865;
             $14867 = $14866 + $14864;
             $14868 = $14859 * 0.18239819420707001;
             $14869 = $14868 + $14867;
             $14870 = $14855 * 0.25243712088359699;
             $14871 = $14870 + $14869;
             $14872 = $14871 - $14862;
             $14873 = $14853 * 0.112394622869602;
             $14874 = $14872 - $14873;
             $14875 = $14858 * $14859;
             $14876 = $14874 - $14875;
             $14877 = $14855 * 0.214253354699524;
             $14878 = $14877 + $14862;
             $14879 = $14861 + $14878;
             $14880 = $14859 * 0.112394622869602;
             $14881 = $14880 + $14879;
             $14882 = $14852 * $14859;
             $14883 = $14882 + $14881;
             $14884 = $14858 * $14865;
             $14885 = $14884 + $14883;
             $14886 = $14860 * 0.25243712088359699;
             $14887 = $14885 - $14886;
             $14888 = $14853 * 0.18239819420707001;
             $14889 = $14888 + $14887;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2429,$14876,$14889,1.9999999999999999E-6);
             $14890 = HEAP8[$473>>0]|0;
             $14891 = ($14890<<24>>24)==(0);
             if ($14891) {
              break L43;
             }
             $14892 = +HEAPF64[$47>>3];
             $14893 = $14892 * $14892;
             $14894 = $14893 * 1.1000000000000001;
             $14895 = +HEAPF64[$60>>3];
             $14896 = $14895 * 1.1000000000000001;
             $14897 = $14896 - $14894;
             $14898 = (+__Z6IKsignd($14897));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2430,$14898,-1);
             $14899 = HEAP8[$474>>0]|0;
             $14900 = ($14899<<24>>24)==(0);
             if ($14900) {
              break L43;
             }
             $14901 = +HEAPF64[$x2429>>3];
             $14902 = $14901 + -1.5707963267949001;
             $14903 = +HEAPF64[$x2430>>3];
             $14904 = $14903 * 1.5707963267949001;
             $14905 = $14902 + $14904;
             $14906 = (+__Z5IKsind($14905));
             $14907 = (+__Z5IKcosd($14905));
             $14908 = $14905 > 3.14159265358979;
             do {
              if ($14908) {
               $14909 = $14905 + -6.2831853071795898;
               $14912 = $14909;
              } else {
               $14910 = $14905 < -3.14159265358979;
               if (!($14910)) {
                $14912 = $14905;
                break;
               }
               $14911 = $14905 + 6.2831853071795898;
               $14912 = $14911;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $14912;
             HEAPF64[$475>>3] = $14907;
             HEAPF64[$476>>3] = $14906;
             $14913 = +HEAPF64[$this>>3];
             $14914 = (+__Z5IKcosd($14913));
             $14915 = (+__Z5IKsind($14913));
             $14916 = +HEAPF64[$45>>3];
             $14917 = $14916 * 0.70710678118654802;
             $14918 = +HEAPF64[$43>>3];
             $14919 = $14918 * 0.70710678118654802;
             $14920 = $14914 * $14919;
             $14921 = $14914 * $14917;
             $14922 = $14915 * $14917;
             $14923 = $14915 * $14919;
             $14924 = $14922 + $14920;
             $14925 = $14916 * 0.71417784899841297;
             $14926 = $14914 * $14925;
             $14927 = $14926 + -0.21249999999999999;
             $14928 = +HEAPF64[$60>>3];
             $14929 = $14927 - $14928;
             $14930 = $14916 * 0.84145706961199196;
             $14931 = $14915 * $14930;
             $14932 = $14931 + $14929;
             $14933 = $14918 * -0.71417784899841297;
             $14934 = $14915 * $14933;
             $14935 = $14934 + $14932;
             $14936 = $14918 * 0.84145706961199196;
             $14937 = $14914 * $14936;
             $14938 = $14937 + $14935;
             $14939 = +HEAPF64[$75>>3];
             $14940 = +HEAPF64[$76>>3];
             $14941 = $14940 * 0.044999999999999998;
             $14942 = -0.55000000000000004 - $14941;
             $14943 = $14924 + $14942;
             $14944 = $14921 + $14943;
             $14945 = $14939 * 0.29999999999999999;
             $14946 = $14944 - $14945;
             $14947 = $14946 - $14923;
             $14948 = (+__Z5IKabsd($14938));
             $14949 = $14948 > 5.0000000000000004E-6;
             if ($14949) {
              break L43;
             }
             $14950 = $14924 + -0.044999999999999998;
             $14951 = $14923 + $14950;
             $14952 = $14939 * 0.044999999999999998;
             $14953 = $14952 + $14951;
             $14954 = $14953 - $14921;
             $14955 = $14940 * 0.29999999999999999;
             $14956 = $14954 - $14955;
             $14957 = (+__Z5IKabsd($14956));
             $14958 = $14957 > 5.0000000000000004E-6;
             if ($14958) {
              break L43;
             }
             $14959 = (+__Z5IKabsd($14947));
             $14960 = $14959 > 5.0000000000000004E-6;
             if ($14960) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           $15061 = +HEAPF64[$3>>3];
           $15062 = $15061 + 1.5707963267949001;
           $15063 = (+__Z5IKabsd($15062));
           $15064 = $15063 + 3.14159265358979;
           $15065 = (+__Z6IKfmoddd($15064,6.2831853071795898));
           $15066 = $15065 + -3.14159265358979;
           $15067 = +HEAPF64[$47>>3];
           $15068 = (+__Z5IKabsd($15066));
           $15069 = $15068 < 9.9999999999999995E-7;
           if (!($15069)) {
            break L43;
           }
           $15070 = +HEAPF64[$75>>3];
           $15071 = +HEAPF64[$60>>3];
           $15072 = +HEAPF64[$76>>3];
           $15073 = $15072 * 0.076499999999999999;
           $15074 = $15073 + 0.39655000000000001;
           $15075 = $15074 - $15071;
           $15076 = $15070 * 0.32595000000000002;
           $15077 = $15076 + $15075;
           $15078 = (+__Z5IKabsd($15077));
           $15079 = $15078 < 9.9999999999999995E-7;
           if (!($15079)) {
            break L43;
           }
           $15080 = (+__Z5IKabsd($15067));
           $15081 = $15080 < 9.9999999999999995E-7;
           if (!($15081)) {
            break L43;
           }
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$384>>3] = -1.0;
           HEAPF64[$383>>3] = 0.0;
           HEAPF64[$3>>3] = -1.5707963267949001;
           $15082 = +HEAPF64[$47>>3];
           $15083 = $15082 * $15082;
           $15084 = +HEAPF64[$76>>3];
           $15085 = $15084 * $15084;
           $15086 = +HEAPF64[$75>>3];
           $15087 = $15086 * $15086;
           $15088 = $15086 * 4.2607843137254902;
           $15089 = -$15083;
           $15090 = +HEAPF64[$60>>3];
           $15091 = $15090 - $15083;
           $15092 = $15085 * 1.20294117647059;
           $15093 = $15087 * 1.20294117647059;
           $15094 = (+__Z6IKsignd($15091));
           $15095 = (+__Z5IKabsd($15091));
           $15096 = $15095 < 9.9999999999999995E-7;
           do {
            if (!($15096)) {
             $15097 = $15083 * 3.9807189542483701;
             $15098 = $15084 * $15090;
             $15099 = $15098 - $15097;
             $15100 = $15090 * $15092;
             $15101 = $15100 + $15099;
             $15102 = $15090 * $15093;
             $15103 = $15102 + $15101;
             $15104 = $15084 * $15083;
             $15105 = $15103 - $15104;
             $15106 = $15092 * $15089;
             $15107 = $15106 + $15105;
             $15108 = $15093 * $15089;
             $15109 = $15108 + $15107;
             $15110 = $15090 * 3.9807189542483701;
             $15111 = $15110 + $15109;
             $15112 = $15088 * $15089;
             $15113 = $15112 + $15111;
             $15114 = $15090 * $15088;
             $15115 = $15114 + $15113;
             $15116 = (+__Z5IKabsd($15115));
             $15117 = $15116 < 9.9999999999999995E-7;
             if ($15117) {
              break;
             }
             $15118 = (+__Z5IKabsd($15094));
             $15119 = $15118 < 9.9999999999999995E-7;
             if ($15119) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $15242 = +HEAPF64[$75>>3];
             $15243 = $15242 * 0.243951839509359;
             $15244 = +HEAPF64[$43>>3];
             $15245 = +HEAPF64[$76>>3];
             $15246 = $15244 * $15245;
             $15247 = +HEAPF64[$45>>3];
             $15248 = $15245 * $15247;
             $15249 = $15242 * 0.18031222920257001;
             $15250 = +HEAPF64[$60>>3];
             $15251 = +HEAPF64[$47>>3];
             $15252 = $15251 * $15251;
             $15253 = $15250 - $15252;
             $15254 = (+__Z6IKsignd($15253));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2487,$15254,-1);
             $15255 = HEAP8[$485>>0]|0;
             $15256 = ($15255<<24>>24)==(0);
             if ($15256) {
              break L43;
             }
             $15257 = $15248 * 0.18031222920257001;
             $15258 = +HEAPF64[$45>>3];
             $15259 = $15258 * 0.35708892449920698;
             $15260 = $15257 - $15259;
             $15261 = $15246 * 0.243951839509359;
             $15262 = $15261 + $15260;
             $15263 = +HEAPF64[$43>>3];
             $15264 = $15249 * $15263;
             $15265 = $15264 + $15262;
             $15266 = -$15258;
             $15267 = $15243 * $15266;
             $15268 = $15267 + $15265;
             $15269 = $15263 * 0.42072853480599598;
             $15270 = $15269 + $15268;
             $15271 = $15243 * $15263;
             $15272 = $15246 * 0.18031222920257001;
             $15273 = $15272 - $15271;
             $15274 = $15263 * 0.35708892449920698;
             $15275 = $15273 - $15274;
             $15276 = $15249 * $15266;
             $15277 = $15276 + $15275;
             $15278 = $15248 * 0.243951839509359;
             $15279 = $15277 - $15278;
             $15280 = $15258 * 0.42072853480599598;
             $15281 = $15279 - $15280;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2488,$15270,$15281,1.9999999999999999E-6);
             $15282 = HEAP8[$486>>0]|0;
             $15283 = ($15282<<24>>24)==(0);
             if ($15283) {
              break L43;
             }
             $15284 = +HEAPF64[$x2487>>3];
             $15285 = $15284 * 1.5707963267949001;
             $15286 = $15285 + -1.5707963267949001;
             $15287 = +HEAPF64[$x2488>>3];
             $15288 = $15287 + $15286;
             $15289 = (+__Z5IKsind($15288));
             $15290 = (+__Z5IKcosd($15288));
             $15291 = $15288 > 3.14159265358979;
             do {
              if ($15291) {
               $15292 = $15288 + -6.2831853071795898;
               $15295 = $15292;
              } else {
               $15293 = $15288 < -3.14159265358979;
               if (!($15293)) {
                $15295 = $15288;
                break;
               }
               $15294 = $15288 + 6.2831853071795898;
               $15295 = $15294;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $15295;
             HEAPF64[$487>>3] = $15290;
             HEAPF64[$488>>3] = $15289;
             $15296 = +HEAPF64[$this>>3];
             $15297 = (+__Z5IKsind($15296));
             $15298 = (+__Z5IKcosd($15296));
             $15299 = +HEAPF64[$45>>3];
             $15300 = $15299 * 0.70710678118654802;
             $15301 = +HEAPF64[$43>>3];
             $15302 = $15297 * $15301;
             $15303 = $15298 * $15301;
             $15304 = $15302 * 0.70710678118654802;
             $15305 = $15303 * 0.70710678118654802;
             $15306 = $15298 * $15300;
             $15307 = $15297 * $15300;
             $15308 = $15307 + $15305;
             $15309 = $15302 * 0.84145706961199196;
             $15310 = $15309 + -0.21249999999999999;
             $15311 = $15303 * 0.71417784899841297;
             $15312 = $15310 - $15311;
             $15313 = $15299 * -0.84145706961199196;
             $15314 = $15298 * $15313;
             $15315 = $15314 + $15312;
             $15316 = +HEAPF64[$60>>3];
             $15317 = $15315 - $15316;
             $15318 = $15299 * -0.71417784899841297;
             $15319 = $15297 * $15318;
             $15320 = $15319 + $15317;
             $15321 = +HEAPF64[$75>>3];
             $15322 = +HEAPF64[$76>>3];
             $15323 = $15322 * 0.044999999999999998;
             $15324 = -0.55000000000000004 - $15323;
             $15325 = $15304 + $15324;
             $15326 = $15321 * 0.29999999999999999;
             $15327 = $15325 - $15326;
             $15328 = $15327 - $15306;
             $15329 = $15328 - $15308;
             $15330 = (+__Z5IKabsd($15320));
             $15331 = $15330 > 5.0000000000000004E-6;
             if ($15331) {
              break L43;
             }
             $15332 = $15308 + -0.044999999999999998;
             $15333 = $15304 + $15332;
             $15334 = $15321 * 0.044999999999999998;
             $15335 = $15334 + $15333;
             $15336 = $15335 - $15306;
             $15337 = $15322 * 0.29999999999999999;
             $15338 = $15336 - $15337;
             $15339 = (+__Z5IKabsd($15338));
             $15340 = $15339 > 5.0000000000000004E-6;
             if ($15340) {
              break L43;
             }
             $15341 = (+__Z5IKabsd($15329));
             $15342 = $15341 > 5.0000000000000004E-6;
             if ($15342) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$384>>3] = -1.0;
           HEAPF64[$383>>3] = 0.0;
           HEAPF64[$3>>3] = -1.5707963267949001;
           $15120 = +HEAPF64[$47>>3];
           $15121 = $15120 * $15120;
           $15122 = +HEAPF64[$60>>3];
           $15123 = $15121 - $15122;
           $15124 = (+__Z5IKabsd($15123));
           $15125 = $15124 < 9.9999999999999995E-7;
           if ($15125) {
            break L43;
           }
           $15126 = $15121 * 1.1000000000000001;
           $15127 = $15122 * 1.1000000000000001;
           $15128 = $15126 - $15127;
           $15129 = (+__Z6IKsignd($15128));
           $15130 = (+__Z5IKabsd($15129));
           $15131 = $15130 < 9.9999999999999995E-7;
           if ($15131) {
            break L43;
           }
           HEAP8[$2>>0] = 1;
           $15132 = +HEAPF64[$75>>3];
           $15133 = $15132 * 0.0378655681325396;
           $15134 = +HEAPF64[$60>>3];
           $15135 = $15134 * 0.70710678118654802;
           $15136 = +HEAPF64[$76>>3];
           $15137 = $15136 * 0.214253354699524;
           $15138 = $15132 * 0.0321380032049286;
           $15139 = $15136 * 0.25243712088359699;
           $15140 = +HEAPF64[$45>>3];
           $15141 = $15135 * $15140;
           $15142 = +HEAPF64[$43>>3];
           $15143 = $15135 * $15142;
           $15144 = $15133 * $15140;
           $15145 = $15141 + $15144;
           $15146 = $15140 * 0.112394622869602;
           $15147 = $15146 + $15145;
           $15148 = -$15140;
           $15149 = $15139 * $15148;
           $15150 = $15149 + $15147;
           $15151 = $15150 - $15143;
           $15152 = $15142 * 0.18239819420707001;
           $15153 = $15151 - $15152;
           $15154 = $15138 * $15142;
           $15155 = $15154 + $15153;
           $15156 = -$15142;
           $15157 = $15137 * $15156;
           $15158 = $15157 + $15155;
           $15159 = $15141 + $15143;
           $15160 = $15140 * $15137;
           $15161 = $15160 + $15159;
           $15162 = $15142 * 0.112394622869602;
           $15163 = $15162 + $15161;
           $15164 = $15138 * $15148;
           $15165 = $15164 + $15163;
           $15166 = $15140 * 0.18239819420707001;
           $15167 = $15166 + $15165;
           $15168 = $15133 * $15142;
           $15169 = $15168 + $15167;
           $15170 = $15139 * $15156;
           $15171 = $15170 + $15169;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2471,$15158,$15171,1.9999999999999999E-6);
           $15172 = HEAP8[$481>>0]|0;
           $15173 = ($15172<<24>>24)==(0);
           if ($15173) {
            break L43;
           }
           $15174 = +HEAPF64[$60>>3];
           $15175 = $15174 * 1.1000000000000001;
           $15176 = +HEAPF64[$47>>3];
           $15177 = $15176 * $15176;
           $15178 = $15177 * 1.1000000000000001;
           $15179 = $15178 - $15175;
           $15180 = (+__Z6IKsignd($15179));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2472,$15180,-1);
           $15181 = HEAP8[$482>>0]|0;
           $15182 = ($15181<<24>>24)==(0);
           if ($15182) {
            break L43;
           }
           $15183 = +HEAPF64[$x2471>>3];
           $15184 = $15183 + -1.5707963267949001;
           $15185 = +HEAPF64[$x2472>>3];
           $15186 = $15185 * 1.5707963267949001;
           $15187 = $15184 + $15186;
           $15188 = (+__Z5IKsind($15187));
           $15189 = (+__Z5IKcosd($15187));
           $15190 = $15187 > 3.14159265358979;
           do {
            if ($15190) {
             $15191 = $15187 + -6.2831853071795898;
             $15194 = $15191;
            } else {
             $15192 = $15187 < -3.14159265358979;
             if (!($15192)) {
              $15194 = $15187;
              break;
             }
             $15193 = $15187 + 6.2831853071795898;
             $15194 = $15193;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $15194;
           HEAPF64[$483>>3] = $15189;
           HEAPF64[$484>>3] = $15188;
           $15195 = +HEAPF64[$this>>3];
           $15196 = (+__Z5IKsind($15195));
           $15197 = (+__Z5IKcosd($15195));
           $15198 = +HEAPF64[$45>>3];
           $15199 = $15198 * 0.70710678118654802;
           $15200 = +HEAPF64[$43>>3];
           $15201 = $15196 * $15200;
           $15202 = $15197 * $15200;
           $15203 = $15201 * 0.70710678118654802;
           $15204 = $15202 * 0.70710678118654802;
           $15205 = $15197 * $15199;
           $15206 = $15196 * $15199;
           $15207 = $15206 + $15204;
           $15208 = $15198 * -0.84145706961199196;
           $15209 = $15197 * $15208;
           $15210 = $15209 + -0.21249999999999999;
           $15211 = $15201 * 0.84145706961199196;
           $15212 = $15210 + $15211;
           $15213 = +HEAPF64[$60>>3];
           $15214 = $15212 - $15213;
           $15215 = $15198 * -0.71417784899841297;
           $15216 = $15196 * $15215;
           $15217 = $15216 + $15214;
           $15218 = $15202 * 0.71417784899841297;
           $15219 = $15217 - $15218;
           $15220 = +HEAPF64[$75>>3];
           $15221 = +HEAPF64[$76>>3];
           $15222 = $15221 * 0.044999999999999998;
           $15223 = -0.55000000000000004 - $15222;
           $15224 = $15203 + $15223;
           $15225 = $15220 * 0.29999999999999999;
           $15226 = $15224 - $15225;
           $15227 = $15226 - $15205;
           $15228 = $15227 - $15207;
           $15229 = (+__Z5IKabsd($15219));
           $15230 = $15229 > 5.0000000000000004E-6;
           if ($15230) {
            break L43;
           }
           $15231 = $15207 + -0.044999999999999998;
           $15232 = $15203 + $15231;
           $15233 = $15220 * 0.044999999999999998;
           $15234 = $15233 + $15232;
           $15235 = $15234 - $15205;
           $15236 = $15221 * 0.29999999999999999;
           $15237 = $15235 - $15236;
           $15238 = (+__Z5IKabsd($15237));
           $15239 = $15238 > 5.0000000000000004E-6;
           if ($15239) {
            break L43;
           }
           $15240 = (+__Z5IKabsd($15228));
           $15241 = $15240 > 5.0000000000000004E-6;
           if ($15241) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $15807 = +HEAPF64[$76>>3];
         $15808 = $15807 * 0.044999999999999998;
         $15809 = -0.55000000000000004 - $15808;
         $15810 = +HEAPF64[$75>>3];
         $15811 = $15810 * 0.29999999999999999;
         $15812 = $15809 - $15811;
         $15813 = +HEAPF64[$47>>3];
         $15814 = $15813 + $15812;
         $15815 = +HEAPF64[$3>>3];
         $15816 = (+__Z5IKabsd($15815));
         $15817 = $15816 + 3.14159265358979;
         $15818 = (+__Z6IKfmoddd($15817,6.2831853071795898));
         $15819 = $15818 + -3.14159265358979;
         $15820 = (+__Z5IKabsd($15819));
         $15821 = $15820 < 9.9999999999999995E-7;
         do {
          if ($15821) {
           $15822 = +HEAPF64[$60>>3];
           $15823 = $15807 * 0.076499999999999999;
           $15824 = $15823 + 0.39655000000000001;
           $15825 = $15824 - $15822;
           $15826 = $15810 * 0.32595000000000002;
           $15827 = $15826 + $15825;
           $15828 = (+__Z5IKabsd($15827));
           $15829 = $15828 < 9.9999999999999995E-7;
           if (!($15829)) {
            break;
           }
           $15830 = (+__Z5IKabsd($15814));
           $15831 = $15830 < 9.9999999999999995E-7;
           if (!($15831)) {
            break;
           }
           HEAPF64[$384>>3] = 0.0;
           HEAPF64[$383>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           $15832 = +HEAPF64[$60>>3];
           $15833 = +HEAPF64[$47>>3];
           $15834 = $15833 * $15833;
           $15835 = $15832 - $15834;
           $15836 = (+__Z5IKabsd($15835));
           $15837 = $15836 < 9.9999999999999995E-7;
           do {
            if (!($15837)) {
             $15838 = (+__Z6IKsignd($15835));
             $15839 = (+__Z5IKabsd($15838));
             $15840 = $15839 < 9.9999999999999995E-7;
             if ($15840) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $16944 = +HEAPF64[$23>>3];
             $16945 = +HEAPF64[$43>>3];
             $16946 = $16944 * $16945;
             $16947 = +HEAPF64[$45>>3];
             $16948 = $16947 * 0.031819805153394602;
             $16949 = +HEAPF64[$76>>3];
             $16950 = $16949 * 0.21213203435596401;
             $16951 = +HEAPF64[$75>>3];
             $16952 = $16951 * 0.031819805153394602;
             $16953 = +HEAPF64[$24>>3];
             $16954 = $16945 * $16953;
             $16955 = $16948 * $16953;
             $16956 = $16946 * 0.031819805153394602;
             $16957 = $16944 * $16948;
             $16958 = $16952 * $16954;
             $16959 = $16944 * $16947;
             $16960 = $16959 * $16950;
             $16961 = $16946 * $16950;
             $16962 = $16947 * $16953;
             $16963 = $16950 * $16962;
             $16964 = $16951 * $16955;
             $16965 = $16946 * $16952;
             $16966 = $16965 + $16964;
             $16967 = $16957 + $16960;
             $16968 = $16967 + $16958;
             $16969 = $16956 + $16955;
             $16970 = $16969 + $16963;
             $16971 = $16961 + $16970;
             $16972 = +HEAPF64[$60>>3];
             $16973 = +HEAPF64[$47>>3];
             $16974 = $16973 * $16973;
             $16975 = $16972 - $16974;
             $16976 = (+__Z6IKsignd($16975));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2886,$16976,-1);
             $16977 = HEAP8[$539>>0]|0;
             $16978 = ($16977<<24>>24)==(0);
             if ($16978) {
              break L43;
             }
             $16979 = $16950 * $16954;
             $16980 = $16954 * 0.031819805153394602;
             $16981 = $16979 + $16980;
             $16982 = $16951 * $16957;
             $16983 = $16982 + $16981;
             $16984 = -$16983;
             $16985 = $16984 - $16971;
             $16986 = $16966 + $16985;
             $16987 = $16968 + $16986;
             $16988 = -$16966;
             $16989 = $16988 - $16983;
             $16990 = $16968 + $16989;
             $16991 = $16971 + $16990;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2887,$16987,$16991,1.9999999999999999E-6);
             $16992 = HEAP8[$540>>0]|0;
             $16993 = ($16992<<24>>24)==(0);
             if ($16993) {
              break L43;
             }
             $16994 = +HEAPF64[$x2886>>3];
             $16995 = $16994 * 1.5707963267949001;
             $16996 = $16995 + -1.5707963267949001;
             $16997 = +HEAPF64[$x2887>>3];
             $16998 = $16997 + $16996;
             $16999 = (+__Z5IKsind($16998));
             $17000 = (+__Z5IKcosd($16998));
             $17001 = $16998 > 3.14159265358979;
             do {
              if ($17001) {
               $17002 = $16998 + -6.2831853071795898;
               $17005 = $17002;
              } else {
               $17003 = $16998 < -3.14159265358979;
               if (!($17003)) {
                $17005 = $16998;
                break;
               }
               $17004 = $16998 + 6.2831853071795898;
               $17005 = $17004;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $17005;
             HEAPF64[$541>>3] = $17000;
             HEAPF64[$542>>3] = $16999;
             $17006 = +HEAPF64[$this>>3];
             $17007 = (+__Z5IKsind($17006));
             $17008 = (+__Z5IKcosd($17006));
             $17009 = +HEAPF64[$75>>3];
             $17010 = $17009 * 0.044999999999999998;
             $17011 = +HEAPF64[$43>>3];
             $17012 = +HEAPF64[$24>>3];
             $17013 = $17011 * $17012;
             $17014 = +HEAPF64[$45>>3];
             $17015 = $17012 * $17014;
             $17016 = +HEAPF64[$76>>3];
             $17017 = $17016 * 0.29999999999999999;
             $17018 = +HEAPF64[$23>>3];
             $17019 = $17014 * $17018;
             $17020 = $17011 * $17018;
             $17021 = $17008 * 0.70710678118654802;
             $17022 = $17008 * 0.063639610306789302;
             $17023 = $17007 * 0.70710678118654802;
             $17024 = $17007 * 0.063639610306789302;
             $17025 = $17023 * $17011;
             $17026 = $17021 * $17011;
             $17027 = $17021 * $17014;
             $17028 = $17023 * $17014;
             $17029 = $17021 * $17013;
             $17030 = $17023 * $17020;
             $17031 = $17023 * $17013;
             $17032 = $17023 * $17015;
             $17033 = $17021 * $17019;
             $17034 = $17021 * $17015;
             $17035 = $17023 * $17019;
             $17036 = $17021 * $17020;
             $17037 = $17026 + $17028;
             $17038 = $17032 + $17030;
             $17039 = $17029 + $17038;
             $17040 = $17035 + $17036;
             $17041 = $17034 + $17040;
             $17042 = $17012 * 0.044999999999999998;
             $17043 = $17012 * $17017;
             $17044 = $17042 + $17043;
             $17045 = $17010 * $17012;
             $17046 = $17044 - $17045;
             $17047 = $17046 - $17027;
             $17048 = $17037 + $17047;
             $17049 = $17025 + $17048;
             $17050 = -$17033;
             $17051 = $17050 - $17031;
             $17052 = $17051 + $17039;
             $17053 = $17041 + $17052;
             $17054 = 0.044999999999999998 - $17033;
             $17055 = $17054 - $17010;
             $17056 = $17017 + $17055;
             $17057 = $17039 + $17056;
             $17058 = $17031 + $17057;
             $17059 = $17058 - $17041;
             $17060 = -$17013;
             $17061 = $17024 * $17060;
             $17062 = $17061 + -0.21249999999999999;
             $17063 = $17022 * $17060;
             $17064 = $17063 + $17062;
             $17065 = $17024 * $17020;
             $17066 = $17064 - $17065;
             $17067 = $17022 * $17020;
             $17068 = $17067 + $17066;
             $17069 = $17024 * $17015;
             $17070 = $17068 - $17069;
             $17071 = $17022 * $17015;
             $17072 = $17071 + $17070;
             $17073 = +HEAPF64[$60>>3];
             $17074 = $17072 - $17073;
             $17075 = +HEAPF64[$47>>3];
             $17076 = $17075 * 1.1000000000000001;
             $17077 = $17076 + $17074;
             $17078 = $17022 * $17019;
             $17079 = $17078 + $17077;
             $17080 = $17024 * $17019;
             $17081 = $17080 + $17079;
             $17082 = (+__Z5IKabsd($17049));
             $17083 = $17082 > 5.0000000000000004E-6;
             if ($17083) {
              break L43;
             }
             $17084 = $17018 * 0.044999999999999998;
             $17085 = $17084 - $17027;
             $17086 = $17010 * $17018;
             $17087 = $17085 - $17086;
             $17088 = $17018 * $17017;
             $17089 = $17088 + $17087;
             $17090 = $17025 + $17089;
             $17091 = $17090 - $17037;
             $17092 = (+__Z5IKabsd($17091));
             $17093 = $17092 > 5.0000000000000004E-6;
             if ($17093) {
              break L43;
             }
             $17094 = (+__Z5IKabsd($17053));
             $17095 = $17094 > 5.0000000000000004E-6;
             if ($17095) {
              break L43;
             }
             $17096 = (+__Z5IKabsd($17059));
             $17097 = $17096 > 5.0000000000000004E-6;
             if ($17097) {
              break L43;
             }
             $17098 = (+__Z5IKabsd($17081));
             $17099 = $17098 > 5.0000000000000004E-6;
             if ($17099) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$384>>3] = 0.0;
           HEAPF64[$383>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           $15841 = +HEAPF64[$23>>3];
           $15842 = +HEAPF64[$47>>3];
           $15843 = $15842 * $15842;
           $15844 = $15841 * $15843;
           $15845 = +HEAPF64[$60>>3];
           $15846 = $15841 * $15845;
           $15847 = $15844 - $15846;
           $15848 = (+__Z5IKabsd($15847));
           $15849 = $15848 < 9.9999999999999995E-7;
           do {
            if (!($15849)) {
             $15850 = (+__Z6IKsignd($15847));
             $15851 = (+__Z5IKabsd($15850));
             $15852 = $15851 < 9.9999999999999995E-7;
             if ($15852) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $16785 = +HEAPF64[$23>>3];
             $16786 = $16785 * $16785;
             $16787 = +HEAPF64[$76>>3];
             $16788 = $16787 * 0.21213203435596401;
             $16789 = +HEAPF64[$75>>3];
             $16790 = $16789 * 0.031819805153394602;
             $16791 = +HEAPF64[$45>>3];
             $16792 = $16785 * $16791;
             $16793 = +HEAPF64[$24>>3];
             $16794 = $16792 * $16793;
             $16795 = +HEAPF64[$43>>3];
             $16796 = $16786 * $16795;
             $16797 = $16785 * $16795;
             $16798 = $16793 * $16797;
             $16799 = $16786 * $16791;
             $16800 = $16798 * 0.031819805153394602;
             $16801 = $16796 * 0.031819805153394602;
             $16802 = $16794 * 0.031819805153394602;
             $16803 = $16799 * 0.031819805153394602;
             $16804 = $16790 * $16799;
             $16805 = $16788 * $16798;
             $16806 = $16790 * $16794;
             $16807 = $16790 * $16796;
             $16808 = $16788 * $16794;
             $16809 = $16788 * $16799;
             $16810 = $16790 * $16798;
             $16811 = $16788 * $16796;
             $16812 = $16806 + $16807;
             $16813 = $16804 + $16805;
             $16814 = $16800 + $16813;
             $16815 = $16809 + $16810;
             $16816 = $16803 + $16815;
             $16817 = $16808 + $16811;
             $16818 = $16801 + $16817;
             $16819 = $16802 + $16818;
             $16820 = -$16816;
             $16821 = $16820 - $16812;
             $16822 = $16819 + $16821;
             $16823 = $16814 + $16822;
             $16824 = $16820 - $16819;
             $16825 = $16814 + $16824;
             $16826 = $16812 + $16825;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2836,$16823,$16826,1.9999999999999999E-6);
             $16827 = HEAP8[$535>>0]|0;
             $16828 = ($16827<<24>>24)==(0);
             if ($16828) {
              break L43;
             }
             $16829 = +HEAPF64[$23>>3];
             $16830 = +HEAPF64[$47>>3];
             $16831 = $16830 * $16830;
             $16832 = $16829 * $16831;
             $16833 = +HEAPF64[$60>>3];
             $16834 = $16829 * $16833;
             $16835 = $16832 - $16834;
             $16836 = (+__Z6IKsignd($16835));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2837,$16836,-1);
             $16837 = HEAP8[$536>>0]|0;
             $16838 = ($16837<<24>>24)==(0);
             if ($16838) {
              break L43;
             }
             $16839 = +HEAPF64[$x2836>>3];
             $16840 = $16839 + -1.5707963267949001;
             $16841 = +HEAPF64[$x2837>>3];
             $16842 = $16841 * 1.5707963267949001;
             $16843 = $16840 + $16842;
             $16844 = (+__Z5IKsind($16843));
             $16845 = (+__Z5IKcosd($16843));
             $16846 = $16843 > 3.14159265358979;
             do {
              if ($16846) {
               $16847 = $16843 + -6.2831853071795898;
               $16850 = $16847;
              } else {
               $16848 = $16843 < -3.14159265358979;
               if (!($16848)) {
                $16850 = $16843;
                break;
               }
               $16849 = $16843 + 6.2831853071795898;
               $16850 = $16849;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $16850;
             HEAPF64[$537>>3] = $16845;
             HEAPF64[$538>>3] = $16844;
             $16851 = +HEAPF64[$this>>3];
             $16852 = (+__Z5IKsind($16851));
             $16853 = (+__Z5IKcosd($16851));
             $16854 = +HEAPF64[$75>>3];
             $16855 = $16854 * 0.044999999999999998;
             $16856 = +HEAPF64[$43>>3];
             $16857 = +HEAPF64[$24>>3];
             $16858 = $16856 * $16857;
             $16859 = +HEAPF64[$45>>3];
             $16860 = $16857 * $16859;
             $16861 = +HEAPF64[$76>>3];
             $16862 = $16861 * 0.29999999999999999;
             $16863 = +HEAPF64[$23>>3];
             $16864 = $16859 * $16863;
             $16865 = $16856 * $16863;
             $16866 = $16853 * 0.70710678118654802;
             $16867 = $16853 * 0.063639610306789302;
             $16868 = $16852 * 0.70710678118654802;
             $16869 = $16852 * 0.063639610306789302;
             $16870 = $16868 * $16856;
             $16871 = $16866 * $16856;
             $16872 = $16866 * $16859;
             $16873 = $16868 * $16859;
             $16874 = $16866 * $16858;
             $16875 = $16868 * $16865;
             $16876 = $16868 * $16858;
             $16877 = $16868 * $16860;
             $16878 = $16866 * $16864;
             $16879 = $16866 * $16860;
             $16880 = $16868 * $16864;
             $16881 = $16866 * $16865;
             $16882 = $16871 + $16873;
             $16883 = $16874 + $16875;
             $16884 = $16877 + $16883;
             $16885 = $16879 + $16880;
             $16886 = $16881 + $16885;
             $16887 = $16855 * $16857;
             $16888 = $16857 * $16862;
             $16889 = $16888 - $16887;
             $16890 = $16857 * 0.044999999999999998;
             $16891 = $16890 + $16889;
             $16892 = $16870 + $16891;
             $16893 = $16882 + $16892;
             $16894 = $16893 - $16872;
             $16895 = $16884 + $16886;
             $16896 = $16895 - $16878;
             $16897 = $16896 - $16876;
             $16898 = 0.044999999999999998 - $16886;
             $16899 = $16862 + $16898;
             $16900 = $16876 + $16899;
             $16901 = $16884 + $16900;
             $16902 = $16901 - $16878;
             $16903 = $16902 - $16855;
             $16904 = $16869 * $16860;
             $16905 = -0.21249999999999999 - $16904;
             $16906 = $16869 * $16864;
             $16907 = $16905 + $16906;
             $16908 = $16867 * $16864;
             $16909 = $16908 + $16907;
             $16910 = $16869 * $16865;
             $16911 = $16909 - $16910;
             $16912 = $16867 * $16860;
             $16913 = $16912 + $16911;
             $16914 = +HEAPF64[$60>>3];
             $16915 = $16913 - $16914;
             $16916 = $16867 * $16865;
             $16917 = $16916 + $16915;
             $16918 = -$16858;
             $16919 = $16867 * $16918;
             $16920 = $16919 + $16917;
             $16921 = $16869 * $16918;
             $16922 = $16921 + $16920;
             $16923 = +HEAPF64[$47>>3];
             $16924 = $16923 * 1.1000000000000001;
             $16925 = $16924 + $16922;
             $16926 = (+__Z5IKabsd($16894));
             $16927 = $16926 > 5.0000000000000004E-6;
             if ($16927) {
              break L43;
             }
             $16928 = $16863 * 0.044999999999999998;
             $16929 = $16855 * $16863;
             $16930 = $16928 - $16929;
             $16931 = $16863 * $16862;
             $16932 = $16931 + $16930;
             $16933 = $16932 - $16882;
             $16934 = $16870 + $16933;
             $16935 = $16934 - $16872;
             $16936 = (+__Z5IKabsd($16935));
             $16937 = $16936 > 5.0000000000000004E-6;
             if ($16937) {
              break L43;
             }
             $16938 = (+__Z5IKabsd($16897));
             $16939 = $16938 > 5.0000000000000004E-6;
             if ($16939) {
              break L43;
             }
             $16940 = (+__Z5IKabsd($16903));
             $16941 = $16940 > 5.0000000000000004E-6;
             if ($16941) {
              break L43;
             }
             $16942 = (+__Z5IKabsd($16925));
             $16943 = $16942 > 5.0000000000000004E-6;
             if ($16943) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$384>>3] = 0.0;
           HEAPF64[$383>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           $15853 = +HEAPF64[$60>>3];
           $15854 = +HEAPF64[$24>>3];
           $15855 = $15853 * $15854;
           $15856 = +HEAPF64[$47>>3];
           $15857 = $15856 * $15856;
           $15858 = $15854 * $15857;
           $15859 = $15858 - $15855;
           $15860 = (+__Z5IKabsd($15859));
           $15861 = $15860 < 9.9999999999999995E-7;
           do {
            if (!($15861)) {
             $15862 = (+__Z6IKsignd($15859));
             $15863 = (+__Z5IKabsd($15862));
             $15864 = $15863 < 9.9999999999999995E-7;
             if ($15864) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $16621 = +HEAPF64[$23>>3];
             $16622 = $16621 * $16621;
             $16623 = +HEAPF64[$43>>3];
             $16624 = $16623 * 0.031819805153394602;
             $16625 = +HEAPF64[$45>>3];
             $16626 = $16625 * 0.031819805153394602;
             $16627 = +HEAPF64[$24>>3];
             $16628 = $16621 * $16627;
             $16629 = +HEAPF64[$76>>3];
             $16630 = $16629 * 0.21213203435596401;
             $16631 = +HEAPF64[$75>>3];
             $16632 = $16626 * $16631;
             $16633 = $16623 * $16630;
             $16634 = $16624 * $16631;
             $16635 = $16625 * $16630;
             $16636 = $16622 * $16626;
             $16637 = $16624 * $16628;
             $16638 = $16622 * $16635;
             $16639 = $16628 * $16632;
             $16640 = $16628 * $16634;
             $16641 = $16622 * $16634;
             $16642 = $16622 * $16632;
             $16643 = $16628 * $16633;
             $16644 = $16639 + $16641;
             $16645 = $16624 + $16644;
             $16646 = $16633 + $16645;
             $16647 = $16638 + $16640;
             $16648 = $16636 + $16647;
             $16649 = $16632 + $16648;
             $16650 = $16637 + $16643;
             $16651 = $16642 + $16650;
             $16652 = $16626 + $16651;
             $16653 = $16635 + $16652;
             $16654 = +HEAPF64[$60>>3];
             $16655 = $16627 * $16654;
             $16656 = +HEAPF64[$47>>3];
             $16657 = $16656 * $16656;
             $16658 = $16627 * $16657;
             $16659 = $16658 - $16655;
             $16660 = (+__Z6IKsignd($16659));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2784,$16660,-1);
             $16661 = HEAP8[$531>>0]|0;
             $16662 = ($16661<<24>>24)==(0);
             if ($16662) {
              break L43;
             }
             $16663 = $16622 * $16633;
             $16664 = $16626 * $16628;
             $16665 = $16664 + $16663;
             $16666 = $16628 * $16635;
             $16667 = $16666 + $16665;
             $16668 = $16622 * $16624;
             $16669 = $16668 + $16667;
             $16670 = $16634 + $16669;
             $16671 = -$16670;
             $16672 = $16671 - $16649;
             $16673 = $16646 + $16672;
             $16674 = $16653 + $16673;
             $16675 = $16671 - $16653;
             $16676 = $16649 + $16675;
             $16677 = $16646 + $16676;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2785,$16674,$16677,1.9999999999999999E-6);
             $16678 = HEAP8[$532>>0]|0;
             $16679 = ($16678<<24>>24)==(0);
             if ($16679) {
              break L43;
             }
             $16680 = +HEAPF64[$x2784>>3];
             $16681 = $16680 * 1.5707963267949001;
             $16682 = $16681 + -1.5707963267949001;
             $16683 = +HEAPF64[$x2785>>3];
             $16684 = $16683 + $16682;
             $16685 = (+__Z5IKsind($16684));
             $16686 = (+__Z5IKcosd($16684));
             $16687 = $16684 > 3.14159265358979;
             do {
              if ($16687) {
               $16688 = $16684 + -6.2831853071795898;
               $16691 = $16688;
              } else {
               $16689 = $16684 < -3.14159265358979;
               if (!($16689)) {
                $16691 = $16684;
                break;
               }
               $16690 = $16684 + 6.2831853071795898;
               $16691 = $16690;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $16691;
             HEAPF64[$533>>3] = $16686;
             HEAPF64[$534>>3] = $16685;
             $16692 = +HEAPF64[$this>>3];
             $16693 = (+__Z5IKsind($16692));
             $16694 = (+__Z5IKcosd($16692));
             $16695 = +HEAPF64[$75>>3];
             $16696 = $16695 * 0.044999999999999998;
             $16697 = +HEAPF64[$43>>3];
             $16698 = +HEAPF64[$24>>3];
             $16699 = $16697 * $16698;
             $16700 = +HEAPF64[$45>>3];
             $16701 = $16698 * $16700;
             $16702 = +HEAPF64[$76>>3];
             $16703 = $16702 * 0.29999999999999999;
             $16704 = +HEAPF64[$23>>3];
             $16705 = $16700 * $16704;
             $16706 = $16697 * $16704;
             $16707 = $16694 * 0.70710678118654802;
             $16708 = $16694 * 0.063639610306789302;
             $16709 = $16693 * 0.70710678118654802;
             $16710 = $16693 * 0.063639610306789302;
             $16711 = $16709 * $16697;
             $16712 = $16707 * $16697;
             $16713 = $16707 * $16700;
             $16714 = $16709 * $16700;
             $16715 = $16707 * $16699;
             $16716 = $16709 * $16706;
             $16717 = $16709 * $16699;
             $16718 = $16709 * $16701;
             $16719 = $16707 * $16705;
             $16720 = $16707 * $16701;
             $16721 = $16709 * $16705;
             $16722 = $16707 * $16706;
             $16723 = $16712 + $16714;
             $16724 = $16715 + $16716;
             $16725 = $16718 + $16724;
             $16726 = $16721 + $16722;
             $16727 = $16720 + $16726;
             $16728 = $16711 - $16713;
             $16729 = $16696 * $16698;
             $16730 = $16728 - $16729;
             $16731 = $16698 * 0.044999999999999998;
             $16732 = $16731 + $16730;
             $16733 = $16698 * $16703;
             $16734 = $16733 + $16732;
             $16735 = $16723 + $16734;
             $16736 = -$16719;
             $16737 = $16736 - $16717;
             $16738 = $16737 + $16725;
             $16739 = $16727 + $16738;
             $16740 = 0.044999999999999998 - $16696;
             $16741 = $16740 + $16703;
             $16742 = $16741 - $16719;
             $16743 = $16742 - $16727;
             $16744 = $16717 + $16743;
             $16745 = $16725 + $16744;
             $16746 = $16710 * $16701;
             $16747 = -0.21249999999999999 - $16746;
             $16748 = -$16699;
             $16749 = $16710 * $16748;
             $16750 = $16749 + $16747;
             $16751 = $16708 * $16748;
             $16752 = $16751 + $16750;
             $16753 = $16710 * $16705;
             $16754 = $16753 + $16752;
             $16755 = $16708 * $16705;
             $16756 = $16755 + $16754;
             $16757 = $16708 * $16701;
             $16758 = $16757 + $16756;
             $16759 = +HEAPF64[$60>>3];
             $16760 = $16758 - $16759;
             $16761 = $16708 * $16706;
             $16762 = $16761 + $16760;
             $16763 = +HEAPF64[$47>>3];
             $16764 = $16763 * 1.1000000000000001;
             $16765 = $16764 + $16762;
             $16766 = $16710 * $16706;
             $16767 = $16765 - $16766;
             $16768 = (+__Z5IKabsd($16735));
             $16769 = $16768 > 5.0000000000000004E-6;
             if ($16769) {
              break L43;
             }
             $16770 = $16704 * $16703;
             $16771 = $16728 + $16770;
             $16772 = $16704 * 0.044999999999999998;
             $16773 = $16772 + $16771;
             $16774 = $16773 - $16723;
             $16775 = $16696 * $16704;
             $16776 = $16774 - $16775;
             $16777 = (+__Z5IKabsd($16776));
             $16778 = $16777 > 5.0000000000000004E-6;
             if ($16778) {
              break L43;
             }
             $16779 = (+__Z5IKabsd($16739));
             $16780 = $16779 > 5.0000000000000004E-6;
             if ($16780) {
              break L43;
             }
             $16781 = (+__Z5IKabsd($16745));
             $16782 = $16781 > 5.0000000000000004E-6;
             if ($16782) {
              break L43;
             }
             $16783 = (+__Z5IKabsd($16767));
             $16784 = $16783 > 5.0000000000000004E-6;
             if ($16784) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           $15865 = +HEAPF64[$22>>3];
           $15866 = (+__Z5IKabsd($15865));
           $15867 = $15866 + 3.14159265358979;
           $15868 = (+__Z6IKfmoddd($15867,6.2831853071795898));
           $15869 = $15868 + -3.14159265358979;
           $15870 = (+__Z5IKabsd($15869));
           $15871 = $15870 < 9.9999999999999995E-7;
           do {
            if ($15871) {
             $15872 = +HEAPF64[$75>>3];
             $15873 = +HEAPF64[$60>>3];
             $15874 = +HEAPF64[$76>>3];
             $15875 = $15874 * 0.076499999999999999;
             $15876 = $15875 + 0.39655000000000001;
             $15877 = $15876 - $15873;
             $15878 = $15872 * 0.32595000000000002;
             $15879 = $15878 + $15877;
             $15880 = (+__Z5IKabsd($15879));
             $15881 = $15880 < 9.9999999999999995E-7;
             if (!($15881)) {
              break;
             }
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             $15882 = +HEAPF64[$47>>3];
             $15883 = $15882 * $15882;
             $15884 = +HEAPF64[$75>>3];
             $15885 = $15884 * $15884;
             $15886 = +HEAPF64[$76>>3];
             $15887 = $15886 * $15886;
             $15888 = $15884 * 2.0;
             $15889 = +HEAPF64[$60>>3];
             $15890 = $15883 - $15889;
             $15891 = $15887 * 44.4444444444444;
             $15892 = $15889 * 13.3333333333333;
             $15893 = $15886 * $15892;
             $15894 = $15886 * 13.3333333333333;
             $15895 = $15883 * $15894;
             $15896 = (+__Z6IKsignd($15890));
             $15897 = (+__Z5IKabsd($15890));
             $15898 = $15897 < 9.9999999999999995E-7;
             do {
              if (!($15898)) {
               $15899 = $15883 * $15891;
               $15900 = $15889 * $15891;
               $15901 = $15900 - $15899;
               $15902 = $15885 * $15889;
               $15903 = $15902 + $15901;
               $15904 = $15884 * $15895;
               $15905 = $15904 + $15903;
               $15906 = $15905 - $15895;
               $15907 = $15883 * $15885;
               $15908 = $15906 - $15907;
               $15909 = $15888 * $15889;
               $15910 = $15908 - $15909;
               $15911 = $15884 * $15893;
               $15912 = $15910 - $15911;
               $15913 = $15889 + $15912;
               $15914 = $15883 * $15888;
               $15915 = $15914 + $15913;
               $15916 = $15915 - $15883;
               $15917 = $15893 + $15916;
               $15918 = (+__Z5IKabsd($15917));
               $15919 = $15918 < 9.9999999999999995E-7;
               if ($15919) {
                break;
               }
               $15920 = (+__Z5IKabsd($15896));
               $15921 = $15920 < 9.9999999999999995E-7;
               if ($15921) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $16158 = +HEAPF64[$45>>3];
               $16159 = $16158 * 0.031819805153394602;
               $16160 = +HEAPF64[$43>>3];
               $16161 = $16160 * 0.031819805153394602;
               $16162 = +HEAPF64[$76>>3];
               $16163 = $16162 * 0.21213203435596401;
               $16164 = +HEAPF64[$75>>3];
               $16165 = $16161 * $16164;
               $16166 = $16159 * $16164;
               $16167 = $16158 * $16163;
               $16168 = $16160 * $16163;
               $16169 = $16161 + $16168;
               $16170 = $16159 + $16167;
               $16171 = -$16170;
               $16172 = $16171 - $16165;
               $16173 = $16166 + $16172;
               $16174 = $16169 + $16173;
               $16175 = -$16169;
               $16176 = $16175 - $16170;
               $16177 = $16165 + $16176;
               $16178 = $16166 + $16177;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2679,$16174,$16178,1.9999999999999999E-6);
               $16179 = HEAP8[$512>>0]|0;
               $16180 = ($16179<<24>>24)==(0);
               if ($16180) {
                break L43;
               }
               $16181 = +HEAPF64[$60>>3];
               $16182 = +HEAPF64[$47>>3];
               $16183 = $16182 * $16182;
               $16184 = $16183 - $16181;
               $16185 = (+__Z6IKsignd($16184));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2680,$16185,-1);
               $16186 = HEAP8[$513>>0]|0;
               $16187 = ($16186<<24>>24)==(0);
               if ($16187) {
                break L43;
               }
               $16188 = +HEAPF64[$x2679>>3];
               $16189 = $16188 + -1.5707963267949001;
               $16190 = +HEAPF64[$x2680>>3];
               $16191 = $16190 * 1.5707963267949001;
               $16192 = $16189 + $16191;
               $16193 = (+__Z5IKsind($16192));
               $16194 = (+__Z5IKcosd($16192));
               $16195 = $16192 > 3.14159265358979;
               do {
                if ($16195) {
                 $16196 = $16192 + -6.2831853071795898;
                 $16199 = $16196;
                } else {
                 $16197 = $16192 < -3.14159265358979;
                 if (!($16197)) {
                  $16199 = $16192;
                  break;
                 }
                 $16198 = $16192 + 6.2831853071795898;
                 $16199 = $16198;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $16199;
               HEAPF64[$514>>3] = $16194;
               HEAPF64[$515>>3] = $16193;
               $16200 = +HEAPF64[$this>>3];
               $16201 = (+__Z5IKsind($16200));
               $16202 = (+__Z5IKcosd($16200));
               $16203 = +HEAPF64[$45>>3];
               $16204 = $16203 * 0.70710678118654802;
               $16205 = +HEAPF64[$43>>3];
               $16206 = $16205 * 0.063639610306789302;
               $16207 = $16203 * 0.063639610306789302;
               $16208 = $16205 * 0.70710678118654802;
               $16209 = $16201 * $16208;
               $16210 = $16202 * $16208;
               $16211 = $16202 * $16204;
               $16212 = $16201 * $16204;
               $16213 = $16212 + $16210;
               $16214 = $16209 - $16211;
               $16215 = $16214 + $16213;
               $16216 = +HEAPF64[$60>>3];
               $16217 = -0.21249999999999999 - $16216;
               $16218 = $16201 * $16206;
               $16219 = $16217 - $16218;
               $16220 = +HEAPF64[$47>>3];
               $16221 = $16220 * 1.1000000000000001;
               $16222 = $16219 + $16221;
               $16223 = $16201 * $16207;
               $16224 = $16223 + $16222;
               $16225 = $16202 * $16206;
               $16226 = $16225 + $16224;
               $16227 = $16202 * $16207;
               $16228 = $16227 + $16226;
               $16229 = (+__Z5IKabsd($16215));
               $16230 = $16229 > 5.0000000000000004E-6;
               if ($16230) {
                break L43;
               }
               $16231 = +HEAPF64[$76>>3];
               $16232 = +HEAPF64[$75>>3];
               $16233 = $16232 * 0.044999999999999998;
               $16234 = 0.044999999999999998 - $16233;
               $16235 = $16234 - $16213;
               $16236 = $16235 - $16211;
               $16237 = $16231 * 0.29999999999999999;
               $16238 = $16237 + $16236;
               $16239 = $16209 + $16238;
               $16240 = (+__Z5IKabsd($16239));
               $16241 = $16240 > 5.0000000000000004E-6;
               if ($16241) {
                break L43;
               }
               $16242 = (+__Z5IKabsd($16228));
               $16243 = $16242 > 5.0000000000000004E-6;
               if ($16243) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             $15922 = +HEAPF64[$47>>3];
             $15923 = $15922 * $15922;
             $15924 = $15922 * $15923;
             $15925 = +HEAPF64[$60>>3];
             $15926 = $15925 * $15925;
             $15927 = $15925 - $15923;
             $15928 = $15923 * $15923;
             $15929 = $15928 * 26.7958477508651;
             $15930 = $15923 * -22.145328719723199;
             $15931 = $15930 * $15926;
             $15932 = $15931 - $15929;
             $15933 = $15932 - $15923;
             $15934 = $15925 * 17.384083044982699;
             $15935 = $15923 * $15934;
             $15936 = $15935 + $15933;
             $15937 = $15925 * $15926;
             $15938 = $15937 * 22.145328719723199;
             $15939 = $15938 + $15936;
             $15940 = $15925 * -10.352941176470599;
             $15941 = $15922 * $15940;
             $15942 = $15941 + $15939;
             $15943 = $15922 * -48.719723183390997;
             $15944 = $15943 * $15926;
             $15945 = $15944 + $15942;
             $15946 = $15925 + $15945;
             $15947 = $15925 * 48.719723183390997;
             $15948 = $15947 * $15924;
             $15949 = $15948 + $15946;
             $15950 = $15926 * 9.4117647058823497;
             $15951 = $15950 + $15949;
             $15952 = $15924 * 10.352941176470599;
             $15953 = $15952 + $15951;
             $15954 = (+__Z5IKabsd($15927));
             $15955 = $15954 < 9.9999999999999995E-7;
             do {
              if (!($15955)) {
               $15956 = $15923 * 0.089999999999999996;
               $15957 = $15925 * 0.089999999999999996;
               $15958 = $15957 - $15956;
               $15959 = (+__Z6IKsignd($15958));
               $15960 = (+__Z5IKabsd($15959));
               $15961 = $15960 < 9.9999999999999995E-7;
               if ($15961) {
                break;
               }
               $15962 = (+__Z5IKabsd($15953));
               $15963 = $15962 < 9.9999999999999995E-7;
               if ($15963) {
                break;
               }
               HEAP8[$2>>0] = 1;
               $16069 = +HEAPF64[$45>>3];
               $16070 = $16069 * 0.150260191002141;
               $16071 = +HEAPF64[$43>>3];
               $16072 = $16071 * 0.150260191002141;
               $16073 = +HEAPF64[$47>>3];
               $16074 = $16073 * 0.77781745930520196;
               $16075 = +HEAPF64[$60>>3];
               $16076 = $16075 * 0.70710678118654802;
               $16077 = $16069 * $16076;
               $16078 = $16071 * $16076;
               $16079 = $16069 * $16074;
               $16080 = $16071 * $16074;
               $16081 = $16072 + $16078;
               $16082 = $16070 + $16077;
               $16083 = -$16079;
               $16084 = $16083 - $16081;
               $16085 = $16080 + $16084;
               $16086 = $16082 + $16085;
               $16087 = -$16080;
               $16088 = $16087 - $16079;
               $16089 = $16088 + $16082;
               $16090 = $16081 + $16089;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2656,$16086,$16090,1.9999999999999999E-6);
               $16091 = HEAP8[$508>>0]|0;
               $16092 = ($16091<<24>>24)==(0);
               if ($16092) {
                break L43;
               }
               $16093 = +HEAPF64[$47>>3];
               $16094 = $16093 * $16093;
               $16095 = $16094 * 0.089999999999999996;
               $16096 = +HEAPF64[$60>>3];
               $16097 = $16096 * 0.089999999999999996;
               $16098 = $16097 - $16095;
               $16099 = (+__Z6IKsignd($16098));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2657,$16099,-1);
               $16100 = HEAP8[$509>>0]|0;
               $16101 = ($16100<<24>>24)==(0);
               if ($16101) {
                break L43;
               }
               $16102 = +HEAPF64[$x2656>>3];
               $16103 = $16102 + -1.5707963267949001;
               $16104 = +HEAPF64[$x2657>>3];
               $16105 = $16104 * 1.5707963267949001;
               $16106 = $16103 + $16105;
               $16107 = (+__Z5IKsind($16106));
               $16108 = (+__Z5IKcosd($16106));
               $16109 = $16106 > 3.14159265358979;
               do {
                if ($16109) {
                 $16110 = $16106 + -6.2831853071795898;
                 $16113 = $16110;
                } else {
                 $16111 = $16106 < -3.14159265358979;
                 if (!($16111)) {
                  $16113 = $16106;
                  break;
                 }
                 $16112 = $16106 + 6.2831853071795898;
                 $16113 = $16112;
                }
               } while(0);
               HEAP8[$0>>0] = 0;
               HEAP8[$1>>0] = -1;
               HEAPF64[$this>>3] = $16113;
               HEAPF64[$510>>3] = $16108;
               HEAPF64[$511>>3] = $16107;
               $16114 = +HEAPF64[$this>>3];
               $16115 = (+__Z5IKsind($16114));
               $16116 = (+__Z5IKcosd($16114));
               $16117 = +HEAPF64[$45>>3];
               $16118 = $16117 * 0.70710678118654802;
               $16119 = +HEAPF64[$43>>3];
               $16120 = $16119 * 0.063639610306789302;
               $16121 = $16117 * 0.063639610306789302;
               $16122 = $16119 * 0.70710678118654802;
               $16123 = $16115 * $16122;
               $16124 = $16116 * $16122;
               $16125 = $16116 * $16118;
               $16126 = $16115 * $16118;
               $16127 = $16126 + $16124;
               $16128 = $16123 - $16125;
               $16129 = $16128 + $16127;
               $16130 = $16116 * $16120;
               $16131 = $16130 + -0.21249999999999999;
               $16132 = $16116 * $16121;
               $16133 = $16132 + $16131;
               $16134 = $16115 * $16121;
               $16135 = $16134 + $16133;
               $16136 = +HEAPF64[$60>>3];
               $16137 = $16135 - $16136;
               $16138 = +HEAPF64[$47>>3];
               $16139 = $16138 * 1.1000000000000001;
               $16140 = $16139 + $16137;
               $16141 = $16115 * $16120;
               $16142 = $16140 - $16141;
               $16143 = (+__Z5IKabsd($16129));
               $16144 = $16143 > 5.0000000000000004E-6;
               if ($16144) {
                break L43;
               }
               $16145 = +HEAPF64[$76>>3];
               $16146 = +HEAPF64[$75>>3];
               $16147 = $16146 * 0.044999999999999998;
               $16148 = 0.044999999999999998 - $16147;
               $16149 = $16148 - $16125;
               $16150 = $16149 - $16127;
               $16151 = $16145 * 0.29999999999999999;
               $16152 = $16151 + $16150;
               $16153 = $16123 + $16152;
               $16154 = (+__Z5IKabsd($16153));
               $16155 = $16154 > 5.0000000000000004E-6;
               if ($16155) {
                break L43;
               }
               $16156 = (+__Z5IKabsd($16142));
               $16157 = $16156 > 5.0000000000000004E-6;
               if ($16157) {
                break L43;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L43;
              }
             } while(0);
             $15964 = +HEAPF64[$7>>3];
             $15965 = (+__Z5IKabsd($15964));
             $15966 = $15965 + 3.14159265358979;
             $15967 = (+__Z6IKfmoddd($15966,6.2831853071795898));
             $15968 = $15967 + -3.14159265358979;
             $15969 = +HEAPF64[$47>>3];
             $15970 = $15969 + -0.84999999999999998;
             $15971 = (+__Z5IKabsd($15968));
             $15972 = $15971 < 9.9999999999999995E-7;
             if (!($15972)) {
              break L43;
             }
             $15973 = +HEAPF64[$60>>3];
             $15974 = 0.72250000000000003 - $15973;
             $15975 = (+__Z5IKabsd($15974));
             $15976 = $15975 < 9.9999999999999995E-7;
             if (!($15976)) {
              break L43;
             }
             $15977 = (+__Z5IKabsd($15970));
             $15978 = $15977 < 9.9999999999999995E-7;
             if (!($15978)) {
              break L43;
             }
             HEAPF64[$384>>3] = 0.0;
             HEAPF64[$383>>3] = 1.0;
             HEAPF64[$3>>3] = 0.0;
             HEAPF64[$24>>3] = 0.0;
             HEAPF64[$23>>3] = 1.0;
             HEAPF64[$22>>3] = 0.0;
             HEAPF64[$76>>3] = 0.0;
             HEAPF64[$75>>3] = 1.0;
             HEAPF64[$7>>3] = 0.0;
             $15979 = +HEAPF64[$60>>3];
             $15980 = +HEAPF64[$47>>3];
             $15981 = $15980 * $15980;
             $15982 = $15979 - $15981;
             $15983 = (+__Z5IKabsd($15982));
             $15984 = $15983 < 9.9999999999999995E-7;
             if ($15984) {
              break L43;
             }
             HEAP16[$j4valid809>>1] = 0;
             HEAP8[$2>>0] = 2;
             $15985 = +HEAPF64[$45>>3];
             $15986 = $15985 * 0.70710678118654802;
             $15987 = +HEAPF64[$43>>3];
             $15988 = $15987 * 0.70710678118654802;
             $15989 = $15988 - $15986;
             $15990 = $15986 + $15988;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2639,$15989,$15990,1.9999999999999999E-6);
             $15991 = HEAP8[$501>>0]|0;
             $15992 = ($15991<<24>>24)==(0);
             if ($15992) {
              break L43;
             }
             $15993 = +HEAPF64[$x2639>>3];
             $15994 = -$15993;
             HEAPF64[$j4array806>>3] = $15994;
             $15995 = (+__Z5IKsind($15994));
             HEAPF64[$sj4array808>>3] = $15995;
             $15996 = (+__Z5IKcosd($15994));
             HEAPF64[$cj4array807>>3] = $15996;
             $15997 = 3.14159265358979 - $15993;
             HEAPF64[$502>>3] = $15997;
             $15998 = (+__Z5IKsind($15997));
             HEAPF64[$503>>3] = $15998;
             $15999 = +HEAPF64[$502>>3];
             $16000 = (+__Z5IKcosd($15999));
             HEAPF64[$504>>3] = $16000;
             $16001 = +HEAPF64[$j4array806>>3];
             $16002 = $16001 > 3.14159265358979;
             do {
              if ($16002) {
               $16003 = $16001 + -6.2831853071795898;
               HEAPF64[$j4array806>>3] = $16003;
              } else {
               $16004 = $16001 < -3.14159265358979;
               if (!($16004)) {
                break;
               }
               $16005 = $16001 + 6.2831853071795898;
               HEAPF64[$j4array806>>3] = $16005;
              }
             } while(0);
             HEAP8[$j4valid809>>0] = 1;
             $16006 = +HEAPF64[$502>>3];
             $16007 = $16006 > 3.14159265358979;
             do {
              if ($16007) {
               $16008 = $16006 + -6.2831853071795898;
               HEAPF64[$502>>3] = $16008;
              } else {
               $16009 = $16006 < -3.14159265358979;
               if (!($16009)) {
                break;
               }
               $16010 = $16006 + 6.2831853071795898;
               HEAPF64[$502>>3] = $16010;
              }
             } while(0);
             HEAP8[$505>>0] = 1;
             $ij4810$01044 = 0;
             while(1) {
              $16011 = (($j4valid809) + ($ij4810$01044)|0);
              $16012 = HEAP8[$16011>>0]|0;
              $16013 = ($16012<<24>>24)==(0);
              do {
               if (!($16013)) {
                $16014 = $ij4810$01044&255;
                HEAP8[$0>>0] = $16014;
                HEAP8[$1>>0] = -1;
                $iij4811$01041 = (($ij4810$01044) + 1)|0;
                $16015 = ($iij4811$01041|0)<(2);
                do {
                 if ($16015) {
                  $16016 = (($sj4array808) + ($ij4810$01044<<3)|0);
                  $16017 = (($j4valid809) + ($iij4811$01041)|0);
                  $16018 = HEAP8[$16017>>0]|0;
                  $16019 = ($16018<<24>>24)==(0);
                  if ($16019) {
                   break;
                  }
                  $16020 = (($cj4array807) + ($ij4810$01044<<3)|0);
                  $16021 = +HEAPF64[$16020>>3];
                  $16022 = (($cj4array807) + ($iij4811$01041<<3)|0);
                  $16023 = +HEAPF64[$16022>>3];
                  $16024 = $16021 - $16023;
                  $16025 = (+__Z5IKabsd($16024));
                  $16026 = $16025 < 9.9999999999999995E-7;
                  if (!($16026)) {
                   break;
                  }
                  $16027 = +HEAPF64[$16016>>3];
                  $16028 = (($sj4array808) + ($iij4811$01041<<3)|0);
                  $16029 = +HEAPF64[$16028>>3];
                  $16030 = $16027 - $16029;
                  $16031 = (+__Z5IKabsd($16030));
                  $16032 = $16031 < 9.9999999999999995E-7;
                  if (!($16032)) {
                   break;
                  }
                  HEAP8[$16017>>0] = 0;
                  $16033 = $iij4811$01041&255;
                  HEAP8[$1>>0] = $16033;
                 }
                } while(0);
                $16034 = (($j4array806) + ($ij4810$01044<<3)|0);
                $16035 = +HEAPF64[$16034>>3];
                HEAPF64[$this>>3] = $16035;
                $16036 = (($cj4array807) + ($ij4810$01044<<3)|0);
                $16037 = +HEAPF64[$16036>>3];
                HEAPF64[$506>>3] = $16037;
                $16038 = (($sj4array808) + ($ij4810$01044<<3)|0);
                $16039 = +HEAPF64[$16038>>3];
                HEAPF64[$507>>3] = $16039;
                $16040 = +HEAPF64[$this>>3];
                $16041 = (+__Z5IKcosd($16040));
                $16042 = (+__Z5IKsind($16040));
                $16043 = +HEAPF64[$45>>3];
                $16044 = $16043 * 0.70710678118654802;
                $16045 = +HEAPF64[$43>>3];
                $16046 = $16045 * 0.70710678118654802;
                $16047 = $16042 * 0.063639610306789302;
                $16048 = $16041 * 0.063639610306789302;
                $16049 = -$16041;
                $16050 = $16044 * $16049;
                $16051 = $16046 * $16049;
                $16052 = $16050 + $16051;
                $16053 = $16042 * $16044;
                $16054 = $16052 - $16053;
                $16055 = $16042 * $16046;
                $16056 = $16055 + $16054;
                $16057 = (+__Z5IKabsd($16056));
                $16058 = $16057 > 5.0000000000000004E-6;
                if ($16058) {
                 break;
                }
                $16059 = $16048 * $16045;
                $16060 = $16047 * $16045;
                $16061 = $16059 - $16060;
                $16062 = $16048 * $16043;
                $16063 = $16062 + $16061;
                $16064 = $16043 * $16047;
                $16065 = $16064 + $16063;
                $16066 = (+__Z5IKabsd($16065));
                $16067 = $16066 > 5.0000000000000004E-6;
                if ($16067) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $16068 = (($ij4810$01044) + 1)|0;
              $exitcond1714 = ($16068|0)==(2);
              if ($exitcond1714) {
               break L43;
              } else {
               $ij4810$01044 = $16068;
              }
             }
            }
           } while(0);
           $16244 = +HEAPF64[$22>>3];
           $16245 = $16244 + -3.14159265358979;
           $16246 = (+__Z5IKabsd($16245));
           $16247 = $16246 + 3.14159265358979;
           $16248 = (+__Z6IKfmoddd($16247,6.2831853071795898));
           $16249 = $16248 + -3.14159265358979;
           $16250 = (+__Z5IKabsd($16249));
           $16251 = $16250 < 9.9999999999999995E-7;
           if (!($16251)) {
            break L43;
           }
           $16252 = +HEAPF64[$75>>3];
           $16253 = +HEAPF64[$60>>3];
           $16254 = +HEAPF64[$76>>3];
           $16255 = $16254 * 0.076499999999999999;
           $16256 = $16255 + 0.39655000000000001;
           $16257 = $16256 - $16253;
           $16258 = $16252 * 0.32595000000000002;
           $16259 = $16258 + $16257;
           $16260 = (+__Z5IKabsd($16259));
           $16261 = $16260 < 9.9999999999999995E-7;
           if (!($16261)) {
            break L43;
           }
           HEAPF64[$384>>3] = 0.0;
           HEAPF64[$383>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           $16262 = +HEAPF64[$47>>3];
           $16263 = $16262 * $16262;
           $16264 = +HEAPF64[$75>>3];
           $16265 = $16264 * $16264;
           $16266 = +HEAPF64[$76>>3];
           $16267 = $16266 * $16266;
           $16268 = $16264 * 2.0;
           $16269 = +HEAPF64[$60>>3];
           $16270 = $16263 - $16269;
           $16271 = $16267 * 44.4444444444444;
           $16272 = $16269 * 13.3333333333333;
           $16273 = $16266 * $16272;
           $16274 = $16266 * 13.3333333333333;
           $16275 = $16263 * $16274;
           $16276 = (+__Z6IKsignd($16270));
           $16277 = (+__Z5IKabsd($16270));
           $16278 = $16277 < 9.9999999999999995E-7;
           do {
            if (!($16278)) {
             $16279 = $16268 * $16269;
             $16280 = $16273 - $16279;
             $16281 = $16264 * $16273;
             $16282 = $16280 - $16281;
             $16283 = $16265 * $16269;
             $16284 = $16283 + $16282;
             $16285 = $16269 * $16271;
             $16286 = $16285 + $16284;
             $16287 = $16286 - $16263;
             $16288 = $16263 * $16268;
             $16289 = $16288 + $16287;
             $16290 = $16264 * $16275;
             $16291 = $16290 + $16289;
             $16292 = $16269 + $16291;
             $16293 = $16292 - $16275;
             $16294 = $16263 * $16271;
             $16295 = $16293 - $16294;
             $16296 = $16263 * $16265;
             $16297 = $16295 - $16296;
             $16298 = (+__Z5IKabsd($16297));
             $16299 = $16298 < 9.9999999999999995E-7;
             if ($16299) {
              break;
             }
             $16300 = (+__Z5IKabsd($16276));
             $16301 = $16300 < 9.9999999999999995E-7;
             if ($16301) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $16536 = +HEAPF64[$45>>3];
             $16537 = $16536 * 0.031819805153394602;
             $16538 = +HEAPF64[$43>>3];
             $16539 = $16538 * 0.031819805153394602;
             $16540 = +HEAPF64[$76>>3];
             $16541 = $16540 * 0.21213203435596401;
             $16542 = +HEAPF64[$75>>3];
             $16543 = $16536 * $16541;
             $16544 = $16538 * $16541;
             $16545 = $16539 * $16542;
             $16546 = $16537 * $16542;
             $16547 = $16539 + $16544;
             $16548 = $16537 + $16543;
             $16549 = $16545 + $16548;
             $16550 = $16549 - $16546;
             $16551 = $16550 - $16547;
             $16552 = $16547 + $16548;
             $16553 = $16552 - $16546;
             $16554 = $16553 - $16545;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2747,$16551,$16554,1.9999999999999999E-6);
             $16555 = HEAP8[$527>>0]|0;
             $16556 = ($16555<<24>>24)==(0);
             if ($16556) {
              break L43;
             }
             $16557 = +HEAPF64[$60>>3];
             $16558 = +HEAPF64[$47>>3];
             $16559 = $16558 * $16558;
             $16560 = $16559 - $16557;
             $16561 = (+__Z6IKsignd($16560));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2748,$16561,-1);
             $16562 = HEAP8[$528>>0]|0;
             $16563 = ($16562<<24>>24)==(0);
             if ($16563) {
              break L43;
             }
             $16564 = +HEAPF64[$x2747>>3];
             $16565 = $16564 + -1.5707963267949001;
             $16566 = +HEAPF64[$x2748>>3];
             $16567 = $16566 * 1.5707963267949001;
             $16568 = $16565 + $16567;
             $16569 = (+__Z5IKsind($16568));
             $16570 = (+__Z5IKcosd($16568));
             $16571 = $16568 > 3.14159265358979;
             do {
              if ($16571) {
               $16572 = $16568 + -6.2831853071795898;
               $16575 = $16572;
              } else {
               $16573 = $16568 < -3.14159265358979;
               if (!($16573)) {
                $16575 = $16568;
                break;
               }
               $16574 = $16568 + 6.2831853071795898;
               $16575 = $16574;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $16575;
             HEAPF64[$529>>3] = $16570;
             HEAPF64[$530>>3] = $16569;
             $16576 = +HEAPF64[$this>>3];
             $16577 = (+__Z5IKsind($16576));
             $16578 = (+__Z5IKcosd($16576));
             $16579 = +HEAPF64[$45>>3];
             $16580 = $16579 * 0.70710678118654802;
             $16581 = $16578 * 0.063639610306789302;
             $16582 = +HEAPF64[$43>>3];
             $16583 = $16577 * $16582;
             $16584 = $16583 * 0.70710678118654802;
             $16585 = $16582 * 0.70710678118654802;
             $16586 = $16578 * $16585;
             $16587 = $16578 * $16580;
             $16588 = $16577 * $16580;
             $16589 = $16588 + $16586;
             $16590 = $16584 + $16589;
             $16591 = $16590 - $16587;
             $16592 = $16579 * $16581;
             $16593 = -0.21249999999999999 - $16592;
             $16594 = $16583 * 0.063639610306789302;
             $16595 = $16593 + $16594;
             $16596 = +HEAPF64[$60>>3];
             $16597 = $16595 - $16596;
             $16598 = +HEAPF64[$47>>3];
             $16599 = $16598 * 1.1000000000000001;
             $16600 = $16599 + $16597;
             $16601 = $16581 * $16582;
             $16602 = $16600 - $16601;
             $16603 = $16579 * -0.063639610306789302;
             $16604 = $16577 * $16603;
             $16605 = $16604 + $16602;
             $16606 = (+__Z5IKabsd($16591));
             $16607 = $16606 > 5.0000000000000004E-6;
             if ($16607) {
              break L43;
             }
             $16608 = +HEAPF64[$76>>3];
             $16609 = +HEAPF64[$75>>3];
             $16610 = $16584 + -0.044999999999999998;
             $16611 = $16609 * 0.044999999999999998;
             $16612 = $16610 + $16611;
             $16613 = $16612 - $16587;
             $16614 = $16613 - $16589;
             $16615 = $16608 * 0.29999999999999999;
             $16616 = $16614 - $16615;
             $16617 = (+__Z5IKabsd($16616));
             $16618 = $16617 > 5.0000000000000004E-6;
             if ($16618) {
              break L43;
             }
             $16619 = (+__Z5IKabsd($16605));
             $16620 = $16619 > 5.0000000000000004E-6;
             if ($16620) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$384>>3] = 0.0;
           HEAPF64[$383>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           $16302 = +HEAPF64[$47>>3];
           $16303 = $16302 * $16302;
           $16304 = $16302 * $16303;
           $16305 = +HEAPF64[$60>>3];
           $16306 = $16305 * $16305;
           $16307 = $16303 - $16305;
           $16308 = $16305 * 17.384083044982699;
           $16309 = $16303 * $16308;
           $16310 = $16302 * -48.719723183390997;
           $16311 = $16310 * $16306;
           $16312 = $16309 + $16311;
           $16313 = $16303 * $16303;
           $16314 = $16313 * 26.7958477508651;
           $16315 = $16312 - $16314;
           $16316 = $16306 * 9.4117647058823497;
           $16317 = $16316 + $16315;
           $16318 = $16305 * $16306;
           $16319 = $16318 * 22.145328719723199;
           $16320 = $16319 + $16317;
           $16321 = $16305 * -10.352941176470599;
           $16322 = $16302 * $16321;
           $16323 = $16322 + $16320;
           $16324 = $16303 * -22.145328719723199;
           $16325 = $16324 * $16306;
           $16326 = $16325 + $16323;
           $16327 = $16305 + $16326;
           $16328 = $16305 * 48.719723183390997;
           $16329 = $16328 * $16304;
           $16330 = $16329 + $16327;
           $16331 = $16304 * 10.352941176470599;
           $16332 = $16331 + $16330;
           $16333 = $16332 - $16303;
           $16334 = (+__Z5IKabsd($16307));
           $16335 = $16334 < 9.9999999999999995E-7;
           do {
            if (!($16335)) {
             $16336 = $16305 * 0.089999999999999996;
             $16337 = $16303 * 0.089999999999999996;
             $16338 = $16337 - $16336;
             $16339 = (+__Z6IKsignd($16338));
             $16340 = (+__Z5IKabsd($16339));
             $16341 = $16340 < 9.9999999999999995E-7;
             if ($16341) {
              break;
             }
             $16342 = (+__Z5IKabsd($16333));
             $16343 = $16342 < 9.9999999999999995E-7;
             if ($16343) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $16450 = +HEAPF64[$45>>3];
             $16451 = $16450 * 0.150260191002141;
             $16452 = +HEAPF64[$43>>3];
             $16453 = $16452 * 0.150260191002141;
             $16454 = +HEAPF64[$47>>3];
             $16455 = $16454 * 0.77781745930520196;
             $16456 = +HEAPF64[$60>>3];
             $16457 = $16456 * 0.70710678118654802;
             $16458 = $16450 * $16457;
             $16459 = $16452 * $16457;
             $16460 = $16452 * $16455;
             $16461 = $16451 + $16458;
             $16462 = $16453 + $16459;
             $16463 = $16456 * 0.089999999999999996;
             $16464 = $16454 * $16454;
             $16465 = $16464 * 0.089999999999999996;
             $16466 = $16465 - $16463;
             $16467 = (+__Z6IKsignd($16466));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2725,$16467,-1);
             $16468 = HEAP8[$523>>0]|0;
             $16469 = ($16468<<24>>24)==(0);
             if ($16469) {
              break L43;
             }
             $16470 = $16450 * $16455;
             $16471 = $16460 + $16461;
             $16472 = $16471 - $16462;
             $16473 = $16472 - $16470;
             $16474 = $16462 + $16461;
             $16475 = $16474 - $16470;
             $16476 = $16475 - $16460;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2726,$16473,$16476,1.9999999999999999E-6);
             $16477 = HEAP8[$524>>0]|0;
             $16478 = ($16477<<24>>24)==(0);
             if ($16478) {
              break L43;
             }
             $16479 = +HEAPF64[$x2725>>3];
             $16480 = $16479 * 1.5707963267949001;
             $16481 = $16480 + -1.5707963267949001;
             $16482 = +HEAPF64[$x2726>>3];
             $16483 = $16482 + $16481;
             $16484 = (+__Z5IKsind($16483));
             $16485 = (+__Z5IKcosd($16483));
             $16486 = $16483 > 3.14159265358979;
             do {
              if ($16486) {
               $16487 = $16483 + -6.2831853071795898;
               $16490 = $16487;
              } else {
               $16488 = $16483 < -3.14159265358979;
               if (!($16488)) {
                $16490 = $16483;
                break;
               }
               $16489 = $16483 + 6.2831853071795898;
               $16490 = $16489;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $16490;
             HEAPF64[$525>>3] = $16485;
             HEAPF64[$526>>3] = $16484;
             $16491 = +HEAPF64[$this>>3];
             $16492 = (+__Z5IKsind($16491));
             $16493 = (+__Z5IKcosd($16491));
             $16494 = +HEAPF64[$45>>3];
             $16495 = $16494 * 0.70710678118654802;
             $16496 = $16493 * 0.063639610306789302;
             $16497 = +HEAPF64[$43>>3];
             $16498 = $16492 * $16497;
             $16499 = $16498 * 0.70710678118654802;
             $16500 = $16497 * 0.70710678118654802;
             $16501 = $16493 * $16500;
             $16502 = $16493 * $16495;
             $16503 = $16492 * $16495;
             $16504 = $16503 + $16501;
             $16505 = $16499 + $16504;
             $16506 = $16505 - $16502;
             $16507 = $16494 * $16496;
             $16508 = -0.21249999999999999 - $16507;
             $16509 = $16494 * -0.063639610306789302;
             $16510 = $16492 * $16509;
             $16511 = $16508 + $16510;
             $16512 = $16496 * $16497;
             $16513 = $16511 - $16512;
             $16514 = $16498 * 0.063639610306789302;
             $16515 = $16514 + $16513;
             $16516 = +HEAPF64[$60>>3];
             $16517 = $16515 - $16516;
             $16518 = +HEAPF64[$47>>3];
             $16519 = $16518 * 1.1000000000000001;
             $16520 = $16519 + $16517;
             $16521 = (+__Z5IKabsd($16506));
             $16522 = $16521 > 5.0000000000000004E-6;
             if ($16522) {
              break L43;
             }
             $16523 = +HEAPF64[$76>>3];
             $16524 = +HEAPF64[$75>>3];
             $16525 = $16499 + -0.044999999999999998;
             $16526 = $16524 * 0.044999999999999998;
             $16527 = $16525 + $16526;
             $16528 = $16527 - $16504;
             $16529 = $16528 - $16502;
             $16530 = $16523 * 0.29999999999999999;
             $16531 = $16529 - $16530;
             $16532 = (+__Z5IKabsd($16531));
             $16533 = $16532 > 5.0000000000000004E-6;
             if ($16533) {
              break L43;
             }
             $16534 = (+__Z5IKabsd($16520));
             $16535 = $16534 > 5.0000000000000004E-6;
             if ($16535) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           $16344 = +HEAPF64[$7>>3];
           $16345 = (+__Z5IKabsd($16344));
           $16346 = $16345 + 3.14159265358979;
           $16347 = (+__Z6IKfmoddd($16346,6.2831853071795898));
           $16348 = $16347 + -3.14159265358979;
           $16349 = +HEAPF64[$47>>3];
           $16350 = $16349 + -0.84999999999999998;
           $16351 = (+__Z5IKabsd($16348));
           $16352 = $16351 < 9.9999999999999995E-7;
           if (!($16352)) {
            break L43;
           }
           $16353 = +HEAPF64[$60>>3];
           $16354 = 0.72250000000000003 - $16353;
           $16355 = (+__Z5IKabsd($16354));
           $16356 = $16355 < 9.9999999999999995E-7;
           if (!($16356)) {
            break L43;
           }
           $16357 = (+__Z5IKabsd($16350));
           $16358 = $16357 < 9.9999999999999995E-7;
           if (!($16358)) {
            break L43;
           }
           HEAPF64[$384>>3] = 0.0;
           HEAPF64[$383>>3] = 1.0;
           HEAPF64[$3>>3] = 0.0;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $16359 = +HEAPF64[$60>>3];
           $16360 = +HEAPF64[$47>>3];
           $16361 = $16360 * $16360;
           $16362 = $16359 - $16361;
           $16363 = (+__Z5IKabsd($16362));
           $16364 = $16363 < 9.9999999999999995E-7;
           if ($16364) {
            break L43;
           }
           HEAP16[$j4valid837>>1] = 0;
           HEAP8[$2>>0] = 2;
           $16365 = +HEAPF64[$45>>3];
           $16366 = $16365 * 0.70710678118654802;
           $16367 = +HEAPF64[$43>>3];
           $16368 = $16367 * 0.70710678118654802;
           $16369 = $16368 - $16366;
           $16370 = $16366 + $16368;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2708,$16369,$16370,1.9999999999999999E-6);
           $16371 = HEAP8[$516>>0]|0;
           $16372 = ($16371<<24>>24)==(0);
           if ($16372) {
            break L43;
           }
           $16373 = +HEAPF64[$x2708>>3];
           $16374 = -$16373;
           HEAPF64[$j4array834>>3] = $16374;
           $16375 = (+__Z5IKsind($16374));
           HEAPF64[$sj4array836>>3] = $16375;
           $16376 = (+__Z5IKcosd($16374));
           HEAPF64[$cj4array835>>3] = $16376;
           $16377 = 3.14159265358979 - $16373;
           HEAPF64[$517>>3] = $16377;
           $16378 = (+__Z5IKsind($16377));
           HEAPF64[$518>>3] = $16378;
           $16379 = +HEAPF64[$517>>3];
           $16380 = (+__Z5IKcosd($16379));
           HEAPF64[$519>>3] = $16380;
           $16381 = +HEAPF64[$j4array834>>3];
           $16382 = $16381 > 3.14159265358979;
           do {
            if ($16382) {
             $16383 = $16381 + -6.2831853071795898;
             HEAPF64[$j4array834>>3] = $16383;
            } else {
             $16384 = $16381 < -3.14159265358979;
             if (!($16384)) {
              break;
             }
             $16385 = $16381 + 6.2831853071795898;
             HEAPF64[$j4array834>>3] = $16385;
            }
           } while(0);
           HEAP8[$j4valid837>>0] = 1;
           $16386 = +HEAPF64[$517>>3];
           $16387 = $16386 > 3.14159265358979;
           do {
            if ($16387) {
             $16388 = $16386 + -6.2831853071795898;
             HEAPF64[$517>>3] = $16388;
            } else {
             $16389 = $16386 < -3.14159265358979;
             if (!($16389)) {
              break;
             }
             $16390 = $16386 + 6.2831853071795898;
             HEAPF64[$517>>3] = $16390;
            }
           } while(0);
           HEAP8[$520>>0] = 1;
           $ij4838$01032 = 0;
           while(1) {
            $16391 = (($j4valid837) + ($ij4838$01032)|0);
            $16392 = HEAP8[$16391>>0]|0;
            $16393 = ($16392<<24>>24)==(0);
            do {
             if (!($16393)) {
              $16394 = $ij4838$01032&255;
              HEAP8[$0>>0] = $16394;
              HEAP8[$1>>0] = -1;
              $iij4839$01029 = (($ij4838$01032) + 1)|0;
              $16395 = ($iij4839$01029|0)<(2);
              do {
               if ($16395) {
                $16396 = (($sj4array836) + ($ij4838$01032<<3)|0);
                $16397 = (($j4valid837) + ($iij4839$01029)|0);
                $16398 = HEAP8[$16397>>0]|0;
                $16399 = ($16398<<24>>24)==(0);
                if ($16399) {
                 break;
                }
                $16400 = (($cj4array835) + ($ij4838$01032<<3)|0);
                $16401 = +HEAPF64[$16400>>3];
                $16402 = (($cj4array835) + ($iij4839$01029<<3)|0);
                $16403 = +HEAPF64[$16402>>3];
                $16404 = $16401 - $16403;
                $16405 = (+__Z5IKabsd($16404));
                $16406 = $16405 < 9.9999999999999995E-7;
                if (!($16406)) {
                 break;
                }
                $16407 = +HEAPF64[$16396>>3];
                $16408 = (($sj4array836) + ($iij4839$01029<<3)|0);
                $16409 = +HEAPF64[$16408>>3];
                $16410 = $16407 - $16409;
                $16411 = (+__Z5IKabsd($16410));
                $16412 = $16411 < 9.9999999999999995E-7;
                if (!($16412)) {
                 break;
                }
                HEAP8[$16397>>0] = 0;
                $16413 = $iij4839$01029&255;
                HEAP8[$1>>0] = $16413;
               }
              } while(0);
              $16414 = (($j4array834) + ($ij4838$01032<<3)|0);
              $16415 = +HEAPF64[$16414>>3];
              HEAPF64[$this>>3] = $16415;
              $16416 = (($cj4array835) + ($ij4838$01032<<3)|0);
              $16417 = +HEAPF64[$16416>>3];
              HEAPF64[$521>>3] = $16417;
              $16418 = (($sj4array836) + ($ij4838$01032<<3)|0);
              $16419 = +HEAPF64[$16418>>3];
              HEAPF64[$522>>3] = $16419;
              $16420 = +HEAPF64[$this>>3];
              $16421 = (+__Z5IKcosd($16420));
              $16422 = (+__Z5IKsind($16420));
              $16423 = +HEAPF64[$45>>3];
              $16424 = $16423 * 0.70710678118654802;
              $16425 = $16423 * 0.063639610306789302;
              $16426 = +HEAPF64[$43>>3];
              $16427 = $16422 * $16426;
              $16428 = $16421 * $16426;
              $16429 = $16427 * 0.70710678118654802;
              $16430 = $16428 * 0.70710678118654802;
              $16431 = $16429 - $16430;
              $16432 = -$16421;
              $16433 = $16424 * $16432;
              $16434 = $16433 + $16431;
              $16435 = -$16422;
              $16436 = $16424 * $16435;
              $16437 = $16436 + $16434;
              $16438 = (+__Z5IKabsd($16437));
              $16439 = $16438 > 5.0000000000000004E-6;
              if ($16439) {
               break;
              }
              $16440 = $16427 * 0.063639610306789302;
              $16441 = $16428 * 0.063639610306789302;
              $16442 = $16440 - $16441;
              $16443 = $16425 * $16432;
              $16444 = $16443 + $16442;
              $16445 = $16425 * $16435;
              $16446 = $16445 + $16444;
              $16447 = (+__Z5IKabsd($16446));
              $16448 = $16447 > 5.0000000000000004E-6;
              if ($16448) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $16449 = (($ij4838$01032) + 1)|0;
            $exitcond1711 = ($16449|0)==(2);
            if ($exitcond1711) {
             break L43;
            } else {
             $ij4838$01032 = $16449;
            }
           }
          }
         } while(0);
         $17100 = +HEAPF64[$76>>3];
         $17101 = $17100 * 0.044999999999999998;
         $17102 = +HEAPF64[$75>>3];
         $17103 = $17102 * 0.29999999999999999;
         $17104 = $17101 + $17103;
         $17105 = +HEAPF64[$3>>3];
         $17106 = $17105 + -3.14159265358979;
         $17107 = (+__Z5IKabsd($17106));
         $17108 = $17107 + 3.14159265358979;
         $17109 = (+__Z6IKfmoddd($17108,6.2831853071795898));
         $17110 = $17109 + -3.14159265358979;
         $17111 = +HEAPF64[$47>>3];
         $17112 = $17111 + 0.55000000000000004;
         $17113 = $17104 + $17112;
         $17114 = -0.55000000000000004 - $17111;
         $17115 = $17114 - $17104;
         $17116 = (+__Z5IKabsd($17110));
         $17117 = $17116 < 9.9999999999999995E-7;
         if (!($17117)) {
          break;
         }
         $17118 = +HEAPF64[$60>>3];
         $17119 = $17100 * 0.076499999999999999;
         $17120 = $17119 + 0.39655000000000001;
         $17121 = $17120 - $17118;
         $17122 = $17102 * 0.32595000000000002;
         $17123 = $17122 + $17121;
         $17124 = (+__Z5IKabsd($17123));
         $17125 = $17124 < 9.9999999999999995E-7;
         if (!($17125)) {
          break;
         }
         $17126 = (+__Z5IKabsd($17113));
         $17127 = $17126 < 9.9999999999999995E-7;
         if (!($17127)) {
          break;
         }
         $17128 = (+__Z5IKabsd($17115));
         $17129 = $17128 < 9.9999999999999995E-7;
         if (!($17129)) {
          break;
         }
         HEAPF64[$384>>3] = 0.0;
         HEAPF64[$383>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         $17130 = +HEAPF64[$60>>3];
         $17131 = +HEAPF64[$47>>3];
         $17132 = $17131 * $17131;
         $17133 = $17130 - $17132;
         $17134 = (+__Z5IKabsd($17133));
         $17135 = $17134 < 9.9999999999999995E-7;
         do {
          if (!($17135)) {
           $17136 = (+__Z6IKsignd($17133));
           $17137 = (+__Z5IKabsd($17136));
           $17138 = $17137 < 9.9999999999999995E-7;
           if ($17138) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $18259 = +HEAPF64[$23>>3];
           $18260 = +HEAPF64[$43>>3];
           $18261 = $18259 * $18260;
           $18262 = +HEAPF64[$45>>3];
           $18263 = $18262 * 0.031819805153394602;
           $18264 = +HEAPF64[$76>>3];
           $18265 = $18264 * 0.21213203435596401;
           $18266 = +HEAPF64[$75>>3];
           $18267 = $18266 * 0.031819805153394602;
           $18268 = +HEAPF64[$24>>3];
           $18269 = $18260 * $18268;
           $18270 = $18263 * $18268;
           $18271 = $18269 * 0.031819805153394602;
           $18272 = $18261 * 0.031819805153394602;
           $18273 = $18259 * $18263;
           $18274 = $18266 * $18273;
           $18275 = $18261 * $18267;
           $18276 = $18267 * $18269;
           $18277 = $18262 * $18268;
           $18278 = $18265 * $18277;
           $18279 = $18266 * $18270;
           $18280 = $18259 * $18262;
           $18281 = $18280 * $18265;
           $18282 = $18261 * $18265;
           $18283 = $18265 * $18269;
           $18284 = $18274 + $18276;
           $18285 = $18282 + $18279;
           $18286 = $18272 + $18285;
           $18287 = $18275 + $18278;
           $18288 = $18270 + $18287;
           $18289 = $18281 + $18283;
           $18290 = $18271 + $18289;
           $18291 = $18273 + $18290;
           $18292 = $18284 + $18286;
           $18293 = $18292 - $18288;
           $18294 = $18293 - $18291;
           $18295 = $18284 + $18288;
           $18296 = $18295 - $18291;
           $18297 = $18296 - $18286;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x3190,$18294,$18297,1.9999999999999999E-6);
           $18298 = HEAP8[$581>>0]|0;
           $18299 = ($18298<<24>>24)==(0);
           if ($18299) {
            break L43;
           }
           $18300 = +HEAPF64[$60>>3];
           $18301 = +HEAPF64[$47>>3];
           $18302 = $18301 * $18301;
           $18303 = $18300 - $18302;
           $18304 = (+__Z6IKsignd($18303));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x3191,$18304,-1);
           $18305 = HEAP8[$582>>0]|0;
           $18306 = ($18305<<24>>24)==(0);
           if ($18306) {
            break L43;
           }
           $18307 = +HEAPF64[$x3190>>3];
           $18308 = $18307 + -1.5707963267949001;
           $18309 = +HEAPF64[$x3191>>3];
           $18310 = $18309 * 1.5707963267949001;
           $18311 = $18308 + $18310;
           $18312 = (+__Z5IKsind($18311));
           $18313 = (+__Z5IKcosd($18311));
           $18314 = $18311 > 3.14159265358979;
           do {
            if ($18314) {
             $18315 = $18311 + -6.2831853071795898;
             $18318 = $18315;
            } else {
             $18316 = $18311 < -3.14159265358979;
             if (!($18316)) {
              $18318 = $18311;
              break;
             }
             $18317 = $18311 + 6.2831853071795898;
             $18318 = $18317;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $18318;
           HEAPF64[$583>>3] = $18313;
           HEAPF64[$584>>3] = $18312;
           $18319 = +HEAPF64[$this>>3];
           $18320 = (+__Z5IKsind($18319));
           $18321 = (+__Z5IKcosd($18319));
           $18322 = +HEAPF64[$75>>3];
           $18323 = $18322 * 0.044999999999999998;
           $18324 = +HEAPF64[$43>>3];
           $18325 = +HEAPF64[$24>>3];
           $18326 = $18324 * $18325;
           $18327 = +HEAPF64[$23>>3];
           $18328 = $18324 * $18327;
           $18329 = +HEAPF64[$45>>3];
           $18330 = $18325 * $18329;
           $18331 = +HEAPF64[$76>>3];
           $18332 = $18331 * 0.29999999999999999;
           $18333 = $18327 * $18329;
           $18334 = $18321 * 0.70710678118654802;
           $18335 = $18321 * 0.063639610306789302;
           $18336 = $18320 * 0.70710678118654802;
           $18337 = $18320 * 0.063639610306789302;
           $18338 = $18336 * $18324;
           $18339 = $18334 * $18324;
           $18340 = $18334 * $18329;
           $18341 = $18336 * $18329;
           $18342 = $18334 * $18326;
           $18343 = $18334 * $18333;
           $18344 = $18336 * $18333;
           $18345 = $18336 * $18326;
           $18346 = $18336 * $18330;
           $18347 = $18334 * $18328;
           $18348 = $18334 * $18330;
           $18349 = $18336 * $18328;
           $18350 = $18339 + $18341;
           $18351 = $18346 + $18343;
           $18352 = $18342 + $18351;
           $18353 = $18345 + $18344;
           $18354 = $18347 + $18353;
           $18355 = $18338 + $18350;
           $18356 = $18325 * 0.044999999999999998;
           $18357 = $18356 + $18355;
           $18358 = $18357 - $18340;
           $18359 = $18323 * $18325;
           $18360 = $18358 - $18359;
           $18361 = $18325 * $18332;
           $18362 = $18361 + $18360;
           $18363 = $18349 + $18354;
           $18364 = $18363 - $18352;
           $18365 = $18364 - $18348;
           $18366 = $18332 + 0.044999999999999998;
           $18367 = $18366 + $18352;
           $18368 = $18354 + $18367;
           $18369 = $18368 - $18349;
           $18370 = $18369 - $18348;
           $18371 = $18370 - $18323;
           $18372 = $18335 * $18330;
           $18373 = $18372 + -0.21249999999999999;
           $18374 = $18335 * $18328;
           $18375 = $18373 - $18374;
           $18376 = $18337 * $18328;
           $18377 = $18376 + $18375;
           $18378 = -$18333;
           $18379 = $18337 * $18378;
           $18380 = $18379 + $18377;
           $18381 = $18335 * $18378;
           $18382 = $18381 + $18380;
           $18383 = +HEAPF64[$60>>3];
           $18384 = $18382 - $18383;
           $18385 = +HEAPF64[$47>>3];
           $18386 = $18385 * 1.1000000000000001;
           $18387 = $18384 - $18386;
           $18388 = $18337 * $18330;
           $18389 = $18387 - $18388;
           $18390 = -$18326;
           $18391 = $18337 * $18390;
           $18392 = $18391 + $18389;
           $18393 = $18335 * $18390;
           $18394 = $18393 + $18392;
           $18395 = (+__Z5IKabsd($18362));
           $18396 = $18395 > 5.0000000000000004E-6;
           if ($18396) {
            break L43;
           }
           $18397 = $18327 * $18332;
           $18398 = $18338 - $18397;
           $18399 = $18327 * 0.044999999999999998;
           $18400 = $18398 - $18399;
           $18401 = $18400 - $18340;
           $18402 = $18401 - $18350;
           $18403 = $18323 * $18327;
           $18404 = $18403 + $18402;
           $18405 = (+__Z5IKabsd($18404));
           $18406 = $18405 > 5.0000000000000004E-6;
           if ($18406) {
            break L43;
           }
           $18407 = (+__Z5IKabsd($18365));
           $18408 = $18407 > 5.0000000000000004E-6;
           if ($18408) {
            break L43;
           }
           $18409 = (+__Z5IKabsd($18371));
           $18410 = $18409 > 5.0000000000000004E-6;
           if ($18410) {
            break L43;
           }
           $18411 = (+__Z5IKabsd($18394));
           $18412 = $18411 > 5.0000000000000004E-6;
           if ($18412) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         HEAPF64[$384>>3] = 0.0;
         HEAPF64[$383>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         $17139 = +HEAPF64[$23>>3];
         $17140 = +HEAPF64[$47>>3];
         $17141 = $17140 * $17140;
         $17142 = $17139 * $17141;
         $17143 = +HEAPF64[$60>>3];
         $17144 = $17139 * $17143;
         $17145 = $17142 - $17144;
         $17146 = (+__Z5IKabsd($17145));
         $17147 = $17146 < 9.9999999999999995E-7;
         do {
          if (!($17147)) {
           $17148 = (+__Z6IKsignd($17145));
           $17149 = (+__Z5IKabsd($17148));
           $17150 = $17149 < 9.9999999999999995E-7;
           if ($17150) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $18101 = +HEAPF64[$23>>3];
           $18102 = $18101 * $18101;
           $18103 = +HEAPF64[$76>>3];
           $18104 = $18103 * 0.21213203435596401;
           $18105 = +HEAPF64[$75>>3];
           $18106 = $18105 * 0.031819805153394602;
           $18107 = +HEAPF64[$45>>3];
           $18108 = $18101 * $18107;
           $18109 = +HEAPF64[$24>>3];
           $18110 = $18108 * $18109;
           $18111 = +HEAPF64[$43>>3];
           $18112 = $18102 * $18111;
           $18113 = $18101 * $18111;
           $18114 = $18109 * $18113;
           $18115 = $18102 * $18107;
           $18116 = $18112 * 0.031819805153394602;
           $18117 = $18114 * 0.031819805153394602;
           $18118 = $18115 * 0.031819805153394602;
           $18119 = $18110 * 0.031819805153394602;
           $18120 = $18104 * $18115;
           $18121 = $18104 * $18114;
           $18122 = $18106 * $18110;
           $18123 = $18104 * $18112;
           $18124 = $18104 * $18110;
           $18125 = $18106 * $18115;
           $18126 = $18106 * $18114;
           $18127 = $18106 * $18112;
           $18128 = $18125 + $18126;
           $18129 = $18116 + $18123;
           $18130 = $18122 + $18129;
           $18131 = $18119 + $18127;
           $18132 = $18124 + $18131;
           $18133 = $18120 + $18121;
           $18134 = $18118 + $18133;
           $18135 = $18117 + $18134;
           $18136 = $18132 + $18135;
           $18137 = $18136 - $18128;
           $18138 = $18137 - $18130;
           $18139 = $18130 + $18135;
           $18140 = $18139 - $18132;
           $18141 = $18140 - $18128;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x3140,$18138,$18141,1.9999999999999999E-6);
           $18142 = HEAP8[$577>>0]|0;
           $18143 = ($18142<<24>>24)==(0);
           if ($18143) {
            break L43;
           }
           $18144 = +HEAPF64[$23>>3];
           $18145 = +HEAPF64[$47>>3];
           $18146 = $18145 * $18145;
           $18147 = $18144 * $18146;
           $18148 = +HEAPF64[$60>>3];
           $18149 = $18144 * $18148;
           $18150 = $18147 - $18149;
           $18151 = (+__Z6IKsignd($18150));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x3141,$18151,-1);
           $18152 = HEAP8[$578>>0]|0;
           $18153 = ($18152<<24>>24)==(0);
           if ($18153) {
            break L43;
           }
           $18154 = +HEAPF64[$x3140>>3];
           $18155 = $18154 + -1.5707963267949001;
           $18156 = +HEAPF64[$x3141>>3];
           $18157 = $18156 * 1.5707963267949001;
           $18158 = $18155 + $18157;
           $18159 = (+__Z5IKsind($18158));
           $18160 = (+__Z5IKcosd($18158));
           $18161 = $18158 > 3.14159265358979;
           do {
            if ($18161) {
             $18162 = $18158 + -6.2831853071795898;
             $18165 = $18162;
            } else {
             $18163 = $18158 < -3.14159265358979;
             if (!($18163)) {
              $18165 = $18158;
              break;
             }
             $18164 = $18158 + 6.2831853071795898;
             $18165 = $18164;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $18165;
           HEAPF64[$579>>3] = $18160;
           HEAPF64[$580>>3] = $18159;
           $18166 = +HEAPF64[$this>>3];
           $18167 = (+__Z5IKsind($18166));
           $18168 = (+__Z5IKcosd($18166));
           $18169 = +HEAPF64[$75>>3];
           $18170 = $18169 * 0.044999999999999998;
           $18171 = +HEAPF64[$43>>3];
           $18172 = +HEAPF64[$24>>3];
           $18173 = $18171 * $18172;
           $18174 = +HEAPF64[$23>>3];
           $18175 = $18171 * $18174;
           $18176 = +HEAPF64[$45>>3];
           $18177 = $18172 * $18176;
           $18178 = +HEAPF64[$76>>3];
           $18179 = $18178 * 0.29999999999999999;
           $18180 = $18174 * $18176;
           $18181 = $18168 * 0.70710678118654802;
           $18182 = $18168 * 0.063639610306789302;
           $18183 = $18167 * 0.70710678118654802;
           $18184 = $18167 * 0.063639610306789302;
           $18185 = $18183 * $18171;
           $18186 = $18181 * $18171;
           $18187 = $18181 * $18176;
           $18188 = $18183 * $18176;
           $18189 = $18181 * $18173;
           $18190 = $18181 * $18180;
           $18191 = $18183 * $18180;
           $18192 = $18183 * $18173;
           $18193 = $18183 * $18177;
           $18194 = $18181 * $18175;
           $18195 = $18181 * $18177;
           $18196 = $18183 * $18175;
           $18197 = $18186 + $18188;
           $18198 = $18189 + $18190;
           $18199 = $18193 + $18198;
           $18200 = $18194 + $18191;
           $18201 = $18192 + $18200;
           $18202 = $18185 - $18187;
           $18203 = $18202 + $18197;
           $18204 = $18172 * 0.044999999999999998;
           $18205 = $18204 + $18203;
           $18206 = $18172 * $18179;
           $18207 = $18206 + $18205;
           $18208 = $18170 * $18172;
           $18209 = $18207 - $18208;
           $18210 = $18196 + $18201;
           $18211 = $18210 - $18195;
           $18212 = $18211 - $18199;
           $18213 = $18179 + 0.044999999999999998;
           $18214 = $18213 + $18201;
           $18215 = $18199 + $18214;
           $18216 = $18215 - $18170;
           $18217 = $18216 - $18196;
           $18218 = $18217 - $18195;
           $18219 = -$18173;
           $18220 = $18184 * $18219;
           $18221 = $18220 + -0.21249999999999999;
           $18222 = $18182 * $18219;
           $18223 = $18222 + $18221;
           $18224 = $18182 * $18175;
           $18225 = $18223 - $18224;
           $18226 = $18182 * $18177;
           $18227 = $18226 + $18225;
           $18228 = -$18180;
           $18229 = $18184 * $18228;
           $18230 = $18229 + $18227;
           $18231 = $18182 * $18228;
           $18232 = $18231 + $18230;
           $18233 = +HEAPF64[$60>>3];
           $18234 = $18232 - $18233;
           $18235 = +HEAPF64[$47>>3];
           $18236 = $18235 * 1.1000000000000001;
           $18237 = $18234 - $18236;
           $18238 = $18184 * $18177;
           $18239 = $18237 - $18238;
           $18240 = $18184 * $18175;
           $18241 = $18240 + $18239;
           $18242 = (+__Z5IKabsd($18209));
           $18243 = $18242 > 5.0000000000000004E-6;
           if ($18243) {
            break L43;
           }
           $18244 = $18174 * 0.044999999999999998;
           $18245 = $18202 - $18244;
           $18246 = $18170 * $18174;
           $18247 = $18246 + $18245;
           $18248 = $18174 * $18179;
           $18249 = $18247 - $18248;
           $18250 = $18249 - $18197;
           $18251 = (+__Z5IKabsd($18250));
           $18252 = $18251 > 5.0000000000000004E-6;
           if ($18252) {
            break L43;
           }
           $18253 = (+__Z5IKabsd($18212));
           $18254 = $18253 > 5.0000000000000004E-6;
           if ($18254) {
            break L43;
           }
           $18255 = (+__Z5IKabsd($18218));
           $18256 = $18255 > 5.0000000000000004E-6;
           if ($18256) {
            break L43;
           }
           $18257 = (+__Z5IKabsd($18241));
           $18258 = $18257 > 5.0000000000000004E-6;
           if ($18258) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         HEAPF64[$384>>3] = 0.0;
         HEAPF64[$383>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         $17151 = +HEAPF64[$24>>3];
         $17152 = +HEAPF64[$47>>3];
         $17153 = $17152 * $17152;
         $17154 = $17151 * $17153;
         $17155 = +HEAPF64[$60>>3];
         $17156 = $17151 * $17155;
         $17157 = $17156 - $17154;
         $17158 = (+__Z5IKabsd($17157));
         $17159 = $17158 < 9.9999999999999995E-7;
         do {
          if (!($17159)) {
           $17160 = (+__Z6IKsignd($17157));
           $17161 = (+__Z5IKabsd($17160));
           $17162 = $17161 < 9.9999999999999995E-7;
           if ($17162) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $17935 = +HEAPF64[$23>>3];
           $17936 = $17935 * $17935;
           $17937 = +HEAPF64[$45>>3];
           $17938 = $17937 * 0.031819805153394602;
           $17939 = +HEAPF64[$43>>3];
           $17940 = $17939 * 0.031819805153394602;
           $17941 = +HEAPF64[$76>>3];
           $17942 = $17941 * 0.21213203435596401;
           $17943 = +HEAPF64[$24>>3];
           $17944 = $17935 * $17943;
           $17945 = +HEAPF64[$75>>3];
           $17946 = $17940 * $17945;
           $17947 = $17937 * $17942;
           $17948 = $17938 * $17945;
           $17949 = $17939 * $17942;
           $17950 = $17936 * $17940;
           $17951 = $17940 * $17944;
           $17952 = $17936 * $17938;
           $17953 = $17936 * $17948;
           $17954 = $17944 * $17948;
           $17955 = $17944 * $17946;
           $17956 = $17936 * $17949;
           $17957 = $17936 * $17947;
           $17958 = $17944 * $17949;
           $17959 = $17953 + $17955;
           $17960 = $17938 + $17959;
           $17961 = $17947 + $17960;
           $17962 = $17950 + $17954;
           $17963 = $17956 + $17962;
           $17964 = $17946 + $17963;
           $17965 = $17957 + $17958;
           $17966 = $17951 + $17965;
           $17967 = $17952 + $17966;
           $17968 = $17948 + $17967;
           $17969 = +HEAPF64[$47>>3];
           $17970 = $17969 * $17969;
           $17971 = $17943 * $17970;
           $17972 = +HEAPF64[$60>>3];
           $17973 = $17943 * $17972;
           $17974 = $17973 - $17971;
           $17975 = (+__Z6IKsignd($17974));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x3088,$17975,-1);
           $17976 = HEAP8[$573>>0]|0;
           $17977 = ($17976<<24>>24)==(0);
           if ($17977) {
            break L43;
           }
           $17978 = $17944 * $17947;
           $17979 = $17936 * $17946;
           $17980 = $17978 + $17979;
           $17981 = $17949 + $17980;
           $17982 = $17938 * $17944;
           $17983 = $17982 + $17981;
           $17984 = $17940 + $17983;
           $17985 = -$17961;
           $17986 = $17985 - $17984;
           $17987 = $17964 + $17986;
           $17988 = $17968 + $17987;
           $17989 = -$17968;
           $17990 = $17989 - $17984;
           $17991 = $17964 + $17990;
           $17992 = $17961 + $17991;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x3089,$17988,$17992,1.9999999999999999E-6);
           $17993 = HEAP8[$574>>0]|0;
           $17994 = ($17993<<24>>24)==(0);
           if ($17994) {
            break L43;
           }
           $17995 = +HEAPF64[$x3088>>3];
           $17996 = $17995 * 1.5707963267949001;
           $17997 = $17996 + -1.5707963267949001;
           $17998 = +HEAPF64[$x3089>>3];
           $17999 = $17998 + $17997;
           $18000 = (+__Z5IKsind($17999));
           $18001 = (+__Z5IKcosd($17999));
           $18002 = $17999 > 3.14159265358979;
           do {
            if ($18002) {
             $18003 = $17999 + -6.2831853071795898;
             $18006 = $18003;
            } else {
             $18004 = $17999 < -3.14159265358979;
             if (!($18004)) {
              $18006 = $17999;
              break;
             }
             $18005 = $17999 + 6.2831853071795898;
             $18006 = $18005;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $18006;
           HEAPF64[$575>>3] = $18001;
           HEAPF64[$576>>3] = $18000;
           $18007 = +HEAPF64[$this>>3];
           $18008 = (+__Z5IKsind($18007));
           $18009 = (+__Z5IKcosd($18007));
           $18010 = +HEAPF64[$75>>3];
           $18011 = $18010 * 0.044999999999999998;
           $18012 = +HEAPF64[$43>>3];
           $18013 = +HEAPF64[$24>>3];
           $18014 = $18012 * $18013;
           $18015 = +HEAPF64[$23>>3];
           $18016 = $18012 * $18015;
           $18017 = +HEAPF64[$45>>3];
           $18018 = $18013 * $18017;
           $18019 = +HEAPF64[$76>>3];
           $18020 = $18019 * 0.29999999999999999;
           $18021 = $18015 * $18017;
           $18022 = $18009 * 0.70710678118654802;
           $18023 = $18009 * 0.063639610306789302;
           $18024 = $18008 * 0.70710678118654802;
           $18025 = $18008 * 0.063639610306789302;
           $18026 = $18024 * $18012;
           $18027 = $18022 * $18012;
           $18028 = $18022 * $18017;
           $18029 = $18024 * $18017;
           $18030 = $18022 * $18014;
           $18031 = $18022 * $18021;
           $18032 = $18024 * $18021;
           $18033 = $18024 * $18014;
           $18034 = $18024 * $18018;
           $18035 = $18022 * $18016;
           $18036 = $18022 * $18018;
           $18037 = $18024 * $18016;
           $18038 = $18027 + $18029;
           $18039 = $18030 + $18031;
           $18040 = $18034 + $18039;
           $18041 = $18033 + $18032;
           $18042 = $18035 + $18041;
           $18043 = $18026 + $18038;
           $18044 = $18013 * $18020;
           $18045 = $18043 + $18044;
           $18046 = $18013 * 0.044999999999999998;
           $18047 = $18046 + $18045;
           $18048 = $18047 - $18028;
           $18049 = $18011 * $18013;
           $18050 = $18048 - $18049;
           $18051 = $18037 + $18042;
           $18052 = $18051 - $18036;
           $18053 = $18052 - $18040;
           $18054 = $18042 + 0.044999999999999998;
           $18055 = $18040 + $18054;
           $18056 = $18020 + $18055;
           $18057 = $18056 - $18011;
           $18058 = $18057 - $18036;
           $18059 = $18058 - $18037;
           $18060 = $18025 * $18016;
           $18061 = $18060 + -0.21249999999999999;
           $18062 = -$18014;
           $18063 = $18025 * $18062;
           $18064 = $18063 + $18061;
           $18065 = $18025 * $18018;
           $18066 = $18064 - $18065;
           $18067 = +HEAPF64[$60>>3];
           $18068 = $18066 - $18067;
           $18069 = +HEAPF64[$47>>3];
           $18070 = $18069 * 1.1000000000000001;
           $18071 = $18068 - $18070;
           $18072 = -$18021;
           $18073 = $18025 * $18072;
           $18074 = $18073 + $18071;
           $18075 = $18023 * $18062;
           $18076 = $18075 + $18074;
           $18077 = $18023 * $18018;
           $18078 = $18077 + $18076;
           $18079 = $18023 * $18016;
           $18080 = $18078 - $18079;
           $18081 = $18023 * $18072;
           $18082 = $18081 + $18080;
           $18083 = (+__Z5IKabsd($18050));
           $18084 = $18083 > 5.0000000000000004E-6;
           if ($18084) {
            break L43;
           }
           $18085 = $18026 - $18038;
           $18086 = $18085 - $18028;
           $18087 = $18015 * 0.044999999999999998;
           $18088 = $18086 - $18087;
           $18089 = $18015 * $18020;
           $18090 = $18088 - $18089;
           $18091 = $18011 * $18015;
           $18092 = $18091 + $18090;
           $18093 = (+__Z5IKabsd($18092));
           $18094 = $18093 > 5.0000000000000004E-6;
           if ($18094) {
            break L43;
           }
           $18095 = (+__Z5IKabsd($18053));
           $18096 = $18095 > 5.0000000000000004E-6;
           if ($18096) {
            break L43;
           }
           $18097 = (+__Z5IKabsd($18059));
           $18098 = $18097 > 5.0000000000000004E-6;
           if ($18098) {
            break L43;
           }
           $18099 = (+__Z5IKabsd($18082));
           $18100 = $18099 > 5.0000000000000004E-6;
           if ($18100) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $17163 = +HEAPF64[$76>>3];
         $17164 = $17163 * 0.044999999999999998;
         $17165 = +HEAPF64[$75>>3];
         $17166 = $17165 * 0.29999999999999999;
         $17167 = $17164 + $17166;
         $17168 = +HEAPF64[$22>>3];
         $17169 = (+__Z5IKabsd($17168));
         $17170 = $17169 + 3.14159265358979;
         $17171 = (+__Z6IKfmoddd($17170,6.2831853071795898));
         $17172 = $17171 + -3.14159265358979;
         $17173 = +HEAPF64[$47>>3];
         $17174 = $17173 + 0.55000000000000004;
         $17175 = $17167 + $17174;
         $17176 = -0.55000000000000004 - $17167;
         $17177 = $17176 - $17173;
         $17178 = (+__Z5IKabsd($17172));
         $17179 = $17178 < 9.9999999999999995E-7;
         do {
          if ($17179) {
           $17180 = +HEAPF64[$60>>3];
           $17181 = $17163 * 0.076499999999999999;
           $17182 = $17181 + 0.39655000000000001;
           $17183 = $17182 - $17180;
           $17184 = $17165 * 0.32595000000000002;
           $17185 = $17184 + $17183;
           $17186 = (+__Z5IKabsd($17185));
           $17187 = $17186 < 9.9999999999999995E-7;
           if (!($17187)) {
            break;
           }
           $17188 = (+__Z5IKabsd($17175));
           $17189 = $17188 < 9.9999999999999995E-7;
           if (!($17189)) {
            break;
           }
           $17190 = (+__Z5IKabsd($17177));
           $17191 = $17190 < 9.9999999999999995E-7;
           if (!($17191)) {
            break;
           }
           HEAPF64[$384>>3] = 0.0;
           HEAPF64[$383>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           $17192 = +HEAPF64[$47>>3];
           $17193 = $17192 * $17192;
           $17194 = +HEAPF64[$75>>3];
           $17195 = $17194 * $17194;
           $17196 = +HEAPF64[$76>>3];
           $17197 = $17196 * $17196;
           $17198 = $17194 * 2.0;
           $17199 = +HEAPF64[$60>>3];
           $17200 = $17193 - $17199;
           $17201 = $17197 * 44.4444444444444;
           $17202 = $17199 * 13.3333333333333;
           $17203 = $17196 * $17202;
           $17204 = $17196 * 13.3333333333333;
           $17205 = $17193 * $17204;
           $17206 = (+__Z6IKsignd($17200));
           $17207 = (+__Z5IKabsd($17200));
           $17208 = $17207 < 9.9999999999999995E-7;
           do {
            if (!($17208)) {
             $17209 = $17193 * $17198;
             $17210 = $17194 * $17203;
             $17211 = $17209 - $17210;
             $17212 = $17194 * $17205;
             $17213 = $17212 + $17211;
             $17214 = $17213 - $17193;
             $17215 = $17214 - $17205;
             $17216 = $17193 * $17201;
             $17217 = $17215 - $17216;
             $17218 = $17199 + $17217;
             $17219 = $17199 * $17201;
             $17220 = $17219 + $17218;
             $17221 = $17195 * $17199;
             $17222 = $17221 + $17220;
             $17223 = $17193 * $17195;
             $17224 = $17222 - $17223;
             $17225 = $17198 * $17199;
             $17226 = $17224 - $17225;
             $17227 = $17203 + $17226;
             $17228 = (+__Z5IKabsd($17227));
             $17229 = $17228 < 9.9999999999999995E-7;
             if ($17229) {
              break;
             }
             $17230 = (+__Z5IKabsd($17206));
             $17231 = $17230 < 9.9999999999999995E-7;
             if ($17231) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $17464 = +HEAPF64[$45>>3];
             $17465 = $17464 * 0.031819805153394602;
             $17466 = +HEAPF64[$43>>3];
             $17467 = $17466 * 0.031819805153394602;
             $17468 = +HEAPF64[$76>>3];
             $17469 = $17468 * 0.21213203435596401;
             $17470 = +HEAPF64[$75>>3];
             $17471 = $17464 * $17469;
             $17472 = $17466 * $17469;
             $17473 = $17467 * $17470;
             $17474 = $17465 * $17470;
             $17475 = $17467 + $17472;
             $17476 = $17465 + $17471;
             $17477 = -$17475;
             $17478 = $17477 - $17474;
             $17479 = $17476 + $17478;
             $17480 = $17473 + $17479;
             $17481 = -$17473;
             $17482 = $17481 - $17474;
             $17483 = $17482 + $17475;
             $17484 = $17476 + $17483;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2978,$17480,$17484,1.9999999999999999E-6);
             $17485 = HEAP8[$554>>0]|0;
             $17486 = ($17485<<24>>24)==(0);
             if ($17486) {
              break L43;
             }
             $17487 = +HEAPF64[$60>>3];
             $17488 = +HEAPF64[$47>>3];
             $17489 = $17488 * $17488;
             $17490 = $17489 - $17487;
             $17491 = (+__Z6IKsignd($17490));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2979,$17491,-1);
             $17492 = HEAP8[$555>>0]|0;
             $17493 = ($17492<<24>>24)==(0);
             if ($17493) {
              break L43;
             }
             $17494 = +HEAPF64[$x2978>>3];
             $17495 = $17494 + -1.5707963267949001;
             $17496 = +HEAPF64[$x2979>>3];
             $17497 = $17496 * 1.5707963267949001;
             $17498 = $17495 + $17497;
             $17499 = (+__Z5IKsind($17498));
             $17500 = (+__Z5IKcosd($17498));
             $17501 = $17498 > 3.14159265358979;
             do {
              if ($17501) {
               $17502 = $17498 + -6.2831853071795898;
               $17505 = $17502;
              } else {
               $17503 = $17498 < -3.14159265358979;
               if (!($17503)) {
                $17505 = $17498;
                break;
               }
               $17504 = $17498 + 6.2831853071795898;
               $17505 = $17504;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $17505;
             HEAPF64[$556>>3] = $17500;
             HEAPF64[$557>>3] = $17499;
             $17506 = +HEAPF64[$this>>3];
             $17507 = (+__Z5IKsind($17506));
             $17508 = (+__Z5IKcosd($17506));
             $17509 = +HEAPF64[$45>>3];
             $17510 = $17509 * 0.70710678118654802;
             $17511 = $17508 * 0.063639610306789302;
             $17512 = +HEAPF64[$43>>3];
             $17513 = $17507 * $17512;
             $17514 = $17513 * 0.70710678118654802;
             $17515 = $17512 * 0.70710678118654802;
             $17516 = $17508 * $17515;
             $17517 = $17508 * $17510;
             $17518 = $17507 * $17510;
             $17519 = $17518 + $17516;
             $17520 = $17519 - $17517;
             $17521 = $17514 + $17520;
             $17522 = $17509 * $17511;
             $17523 = -0.21249999999999999 - $17522;
             $17524 = $17509 * -0.063639610306789302;
             $17525 = $17507 * $17524;
             $17526 = $17523 + $17525;
             $17527 = +HEAPF64[$60>>3];
             $17528 = $17526 - $17527;
             $17529 = +HEAPF64[$47>>3];
             $17530 = $17529 * 1.1000000000000001;
             $17531 = $17528 - $17530;
             $17532 = $17511 * $17512;
             $17533 = $17531 - $17532;
             $17534 = $17513 * 0.063639610306789302;
             $17535 = $17534 + $17533;
             $17536 = (+__Z5IKabsd($17521));
             $17537 = $17536 > 5.0000000000000004E-6;
             if ($17537) {
              break L43;
             }
             $17538 = +HEAPF64[$76>>3];
             $17539 = +HEAPF64[$75>>3];
             $17540 = $17539 * 0.044999999999999998;
             $17541 = $17540 + -0.044999999999999998;
             $17542 = $17541 - $17519;
             $17543 = $17542 - $17517;
             $17544 = $17514 + $17543;
             $17545 = $17538 * 0.29999999999999999;
             $17546 = $17544 - $17545;
             $17547 = (+__Z5IKabsd($17546));
             $17548 = $17547 > 5.0000000000000004E-6;
             if ($17548) {
              break L43;
             }
             $17549 = (+__Z5IKabsd($17535));
             $17550 = $17549 > 5.0000000000000004E-6;
             if ($17550) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           HEAPF64[$384>>3] = 0.0;
           HEAPF64[$383>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           $17232 = +HEAPF64[$47>>3];
           $17233 = $17232 * $17232;
           $17234 = +HEAPF64[$60>>3];
           $17235 = $17234 * $17234;
           $17236 = $17232 * $17233;
           $17237 = $17233 - $17234;
           $17238 = $17234 * 0.089999999999999996;
           $17239 = $17233 * 0.089999999999999996;
           $17240 = $17239 - $17238;
           $17241 = (+__Z6IKsignd($17240));
           $17242 = (+__Z5IKabsd($17237));
           $17243 = $17242 < 9.9999999999999995E-7;
           do {
            if (!($17243)) {
             $17244 = $17233 * -22.145328719723199;
             $17245 = $17244 * $17235;
             $17246 = $17234 * -48.719723183390997;
             $17247 = $17246 * $17236;
             $17248 = $17245 + $17247;
             $17249 = $17234 * 17.384083044982699;
             $17250 = $17233 * $17249;
             $17251 = $17250 + $17248;
             $17252 = $17234 * $17235;
             $17253 = $17252 * 22.145328719723199;
             $17254 = $17253 + $17251;
             $17255 = $17232 * 48.719723183390997;
             $17256 = $17255 * $17235;
             $17257 = $17256 + $17254;
             $17258 = $17234 + $17257;
             $17259 = $17233 * $17233;
             $17260 = $17259 * 26.7958477508651;
             $17261 = $17258 - $17260;
             $17262 = $17234 * 10.352941176470599;
             $17263 = $17232 * $17262;
             $17264 = $17263 + $17261;
             $17265 = $17236 * 10.352941176470599;
             $17266 = $17264 - $17265;
             $17267 = $17266 - $17233;
             $17268 = $17235 * 9.4117647058823497;
             $17269 = $17268 + $17267;
             $17270 = (+__Z5IKabsd($17269));
             $17271 = $17270 < 9.9999999999999995E-7;
             if ($17271) {
              break;
             }
             $17272 = (+__Z5IKabsd($17241));
             $17273 = $17272 < 9.9999999999999995E-7;
             if ($17273) {
              break;
             }
             HEAP8[$2>>0] = 1;
             $17380 = +HEAPF64[$45>>3];
             $17381 = $17380 * 0.150260191002141;
             $17382 = +HEAPF64[$43>>3];
             $17383 = $17382 * 0.150260191002141;
             $17384 = +HEAPF64[$47>>3];
             $17385 = $17384 * 0.77781745930520196;
             $17386 = +HEAPF64[$60>>3];
             $17387 = $17386 * 0.70710678118654802;
             $17388 = $17380 * $17387;
             $17389 = $17382 * $17387;
             $17390 = $17380 * $17385;
             $17391 = $17382 * $17385;
             $17392 = $17390 + $17388;
             $17393 = $17381 + $17392;
             $17394 = $17391 + $17389;
             $17395 = $17383 + $17394;
             $17396 = $17386 * 0.089999999999999996;
             $17397 = $17384 * $17384;
             $17398 = $17397 * 0.089999999999999996;
             $17399 = $17398 - $17396;
             $17400 = (+__Z6IKsignd($17399));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x2956,$17400,-1);
             $17401 = HEAP8[$550>>0]|0;
             $17402 = ($17401<<24>>24)==(0);
             if ($17402) {
              break L43;
             }
             $17403 = $17393 - $17395;
             $17404 = $17393 + $17395;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2957,$17403,$17404,1.9999999999999999E-6);
             $17405 = HEAP8[$551>>0]|0;
             $17406 = ($17405<<24>>24)==(0);
             if ($17406) {
              break L43;
             }
             $17407 = +HEAPF64[$x2956>>3];
             $17408 = $17407 * 1.5707963267949001;
             $17409 = $17408 + -1.5707963267949001;
             $17410 = +HEAPF64[$x2957>>3];
             $17411 = $17410 + $17409;
             $17412 = (+__Z5IKsind($17411));
             $17413 = (+__Z5IKcosd($17411));
             $17414 = $17411 > 3.14159265358979;
             do {
              if ($17414) {
               $17415 = $17411 + -6.2831853071795898;
               $17418 = $17415;
              } else {
               $17416 = $17411 < -3.14159265358979;
               if (!($17416)) {
                $17418 = $17411;
                break;
               }
               $17417 = $17411 + 6.2831853071795898;
               $17418 = $17417;
              }
             } while(0);
             HEAP8[$0>>0] = 0;
             HEAP8[$1>>0] = -1;
             HEAPF64[$this>>3] = $17418;
             HEAPF64[$552>>3] = $17413;
             HEAPF64[$553>>3] = $17412;
             $17419 = +HEAPF64[$this>>3];
             $17420 = (+__Z5IKsind($17419));
             $17421 = (+__Z5IKcosd($17419));
             $17422 = +HEAPF64[$45>>3];
             $17423 = $17422 * 0.70710678118654802;
             $17424 = $17421 * 0.063639610306789302;
             $17425 = +HEAPF64[$43>>3];
             $17426 = $17420 * $17425;
             $17427 = $17426 * 0.70710678118654802;
             $17428 = $17425 * 0.70710678118654802;
             $17429 = $17421 * $17428;
             $17430 = $17421 * $17423;
             $17431 = $17420 * $17423;
             $17432 = $17431 + $17429;
             $17433 = $17432 - $17430;
             $17434 = $17427 + $17433;
             $17435 = $17426 * 0.063639610306789302;
             $17436 = $17435 + -0.21249999999999999;
             $17437 = $17422 * -0.063639610306789302;
             $17438 = $17420 * $17437;
             $17439 = $17438 + $17436;
             $17440 = +HEAPF64[$60>>3];
             $17441 = $17439 - $17440;
             $17442 = +HEAPF64[$47>>3];
             $17443 = $17442 * 1.1000000000000001;
             $17444 = $17441 - $17443;
             $17445 = $17422 * $17424;
             $17446 = $17444 - $17445;
             $17447 = $17424 * $17425;
             $17448 = $17446 - $17447;
             $17449 = (+__Z5IKabsd($17434));
             $17450 = $17449 > 5.0000000000000004E-6;
             if ($17450) {
              break L43;
             }
             $17451 = +HEAPF64[$76>>3];
             $17452 = +HEAPF64[$75>>3];
             $17453 = $17452 * 0.044999999999999998;
             $17454 = $17453 + -0.044999999999999998;
             $17455 = $17454 - $17432;
             $17456 = $17455 - $17430;
             $17457 = $17427 + $17456;
             $17458 = $17451 * 0.29999999999999999;
             $17459 = $17457 - $17458;
             $17460 = (+__Z5IKabsd($17459));
             $17461 = $17460 > 5.0000000000000004E-6;
             if ($17461) {
              break L43;
             }
             $17462 = (+__Z5IKabsd($17448));
             $17463 = $17462 > 5.0000000000000004E-6;
             if ($17463) {
              break L43;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L43;
            }
           } while(0);
           $17274 = +HEAPF64[$7>>3];
           $17275 = (+__Z5IKabsd($17274));
           $17276 = $17275 + 3.14159265358979;
           $17277 = (+__Z6IKfmoddd($17276,6.2831853071795898));
           $17278 = $17277 + -3.14159265358979;
           $17279 = +HEAPF64[$47>>3];
           $17280 = $17279 + 0.84999999999999998;
           $17281 = (+__Z5IKabsd($17278));
           $17282 = $17281 < 9.9999999999999995E-7;
           if (!($17282)) {
            break L43;
           }
           $17283 = +HEAPF64[$60>>3];
           $17284 = 0.72250000000000003 - $17283;
           $17285 = (+__Z5IKabsd($17284));
           $17286 = $17285 < 9.9999999999999995E-7;
           if (!($17286)) {
            break L43;
           }
           $17287 = (+__Z5IKabsd($17280));
           $17288 = $17287 < 9.9999999999999995E-7;
           if (!($17288)) {
            break L43;
           }
           HEAPF64[$384>>3] = 0.0;
           HEAPF64[$383>>3] = -1.0;
           HEAPF64[$3>>3] = 3.14159265358979;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$7>>3] = 0.0;
           $17289 = +HEAPF64[$60>>3];
           $17290 = +HEAPF64[$47>>3];
           $17291 = $17290 * $17290;
           $17292 = $17289 - $17291;
           $17293 = (+__Z5IKabsd($17292));
           $17294 = $17293 < 9.9999999999999995E-7;
           if ($17294) {
            break L43;
           }
           HEAP16[$j4valid895>>1] = 0;
           HEAP8[$2>>0] = 2;
           $17295 = +HEAPF64[$45>>3];
           $17296 = $17295 * 0.70710678118654802;
           $17297 = +HEAPF64[$43>>3];
           $17298 = $17297 * 0.70710678118654802;
           $17299 = $17298 - $17296;
           $17300 = $17296 + $17298;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x2939,$17299,$17300,1.9999999999999999E-6);
           $17301 = HEAP8[$543>>0]|0;
           $17302 = ($17301<<24>>24)==(0);
           if ($17302) {
            break L43;
           }
           $17303 = +HEAPF64[$x2939>>3];
           $17304 = -$17303;
           HEAPF64[$j4array892>>3] = $17304;
           $17305 = (+__Z5IKsind($17304));
           HEAPF64[$sj4array894>>3] = $17305;
           $17306 = (+__Z5IKcosd($17304));
           HEAPF64[$cj4array893>>3] = $17306;
           $17307 = 3.14159265358979 - $17303;
           HEAPF64[$544>>3] = $17307;
           $17308 = (+__Z5IKsind($17307));
           HEAPF64[$545>>3] = $17308;
           $17309 = +HEAPF64[$544>>3];
           $17310 = (+__Z5IKcosd($17309));
           HEAPF64[$546>>3] = $17310;
           $17311 = +HEAPF64[$j4array892>>3];
           $17312 = $17311 > 3.14159265358979;
           do {
            if ($17312) {
             $17313 = $17311 + -6.2831853071795898;
             HEAPF64[$j4array892>>3] = $17313;
            } else {
             $17314 = $17311 < -3.14159265358979;
             if (!($17314)) {
              break;
             }
             $17315 = $17311 + 6.2831853071795898;
             HEAPF64[$j4array892>>3] = $17315;
            }
           } while(0);
           HEAP8[$j4valid895>>0] = 1;
           $17316 = +HEAPF64[$544>>3];
           $17317 = $17316 > 3.14159265358979;
           do {
            if ($17317) {
             $17318 = $17316 + -6.2831853071795898;
             HEAPF64[$544>>3] = $17318;
            } else {
             $17319 = $17316 < -3.14159265358979;
             if (!($17319)) {
              break;
             }
             $17320 = $17316 + 6.2831853071795898;
             HEAPF64[$544>>3] = $17320;
            }
           } while(0);
           HEAP8[$547>>0] = 1;
           $ij4896$01008 = 0;
           while(1) {
            $17321 = (($j4valid895) + ($ij4896$01008)|0);
            $17322 = HEAP8[$17321>>0]|0;
            $17323 = ($17322<<24>>24)==(0);
            do {
             if (!($17323)) {
              $17324 = $ij4896$01008&255;
              HEAP8[$0>>0] = $17324;
              HEAP8[$1>>0] = -1;
              $iij4897$01005 = (($ij4896$01008) + 1)|0;
              $17325 = ($iij4897$01005|0)<(2);
              do {
               if ($17325) {
                $17326 = (($sj4array894) + ($ij4896$01008<<3)|0);
                $17327 = (($j4valid895) + ($iij4897$01005)|0);
                $17328 = HEAP8[$17327>>0]|0;
                $17329 = ($17328<<24>>24)==(0);
                if ($17329) {
                 break;
                }
                $17330 = (($cj4array893) + ($ij4896$01008<<3)|0);
                $17331 = +HEAPF64[$17330>>3];
                $17332 = (($cj4array893) + ($iij4897$01005<<3)|0);
                $17333 = +HEAPF64[$17332>>3];
                $17334 = $17331 - $17333;
                $17335 = (+__Z5IKabsd($17334));
                $17336 = $17335 < 9.9999999999999995E-7;
                if (!($17336)) {
                 break;
                }
                $17337 = +HEAPF64[$17326>>3];
                $17338 = (($sj4array894) + ($iij4897$01005<<3)|0);
                $17339 = +HEAPF64[$17338>>3];
                $17340 = $17337 - $17339;
                $17341 = (+__Z5IKabsd($17340));
                $17342 = $17341 < 9.9999999999999995E-7;
                if (!($17342)) {
                 break;
                }
                HEAP8[$17327>>0] = 0;
                $17343 = $iij4897$01005&255;
                HEAP8[$1>>0] = $17343;
               }
              } while(0);
              $17344 = (($j4array892) + ($ij4896$01008<<3)|0);
              $17345 = +HEAPF64[$17344>>3];
              HEAPF64[$this>>3] = $17345;
              $17346 = (($cj4array893) + ($ij4896$01008<<3)|0);
              $17347 = +HEAPF64[$17346>>3];
              HEAPF64[$548>>3] = $17347;
              $17348 = (($sj4array894) + ($ij4896$01008<<3)|0);
              $17349 = +HEAPF64[$17348>>3];
              HEAPF64[$549>>3] = $17349;
              $17350 = +HEAPF64[$this>>3];
              $17351 = (+__Z5IKcosd($17350));
              $17352 = (+__Z5IKsind($17350));
              $17353 = +HEAPF64[$45>>3];
              $17354 = $17353 * 0.70710678118654802;
              $17355 = $17353 * 0.063639610306789302;
              $17356 = +HEAPF64[$43>>3];
              $17357 = $17352 * $17356;
              $17358 = $17351 * $17356;
              $17359 = -$17351;
              $17360 = $17354 * $17359;
              $17361 = $17358 * 0.70710678118654802;
              $17362 = $17360 - $17361;
              $17363 = $17357 * 0.70710678118654802;
              $17364 = $17363 + $17362;
              $17365 = -$17352;
              $17366 = $17354 * $17365;
              $17367 = $17366 + $17364;
              $17368 = (+__Z5IKabsd($17367));
              $17369 = $17368 > 5.0000000000000004E-6;
              if ($17369) {
               break;
              }
              $17370 = $17355 * $17359;
              $17371 = $17358 * 0.063639610306789302;
              $17372 = $17370 - $17371;
              $17373 = $17357 * 0.063639610306789302;
              $17374 = $17373 + $17372;
              $17375 = $17355 * $17365;
              $17376 = $17375 + $17374;
              $17377 = (+__Z5IKabsd($17376));
              $17378 = $17377 > 5.0000000000000004E-6;
              if ($17378) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $17379 = (($ij4896$01008) + 1)|0;
            $exitcond1705 = ($17379|0)==(2);
            if ($exitcond1705) {
             break L43;
            } else {
             $ij4896$01008 = $17379;
            }
           }
          }
         } while(0);
         $17551 = +HEAPF64[$76>>3];
         $17552 = $17551 * 0.044999999999999998;
         $17553 = +HEAPF64[$75>>3];
         $17554 = $17553 * 0.29999999999999999;
         $17555 = $17552 + $17554;
         $17556 = +HEAPF64[$22>>3];
         $17557 = $17556 + -3.14159265358979;
         $17558 = (+__Z5IKabsd($17557));
         $17559 = $17558 + 3.14159265358979;
         $17560 = (+__Z6IKfmoddd($17559,6.2831853071795898));
         $17561 = $17560 + -3.14159265358979;
         $17562 = +HEAPF64[$47>>3];
         $17563 = $17562 + 0.55000000000000004;
         $17564 = $17555 + $17563;
         $17565 = -0.55000000000000004 - $17555;
         $17566 = $17565 - $17562;
         $17567 = (+__Z5IKabsd($17561));
         $17568 = $17567 < 9.9999999999999995E-7;
         if (!($17568)) {
          break;
         }
         $17569 = +HEAPF64[$60>>3];
         $17570 = $17551 * 0.076499999999999999;
         $17571 = $17570 + 0.39655000000000001;
         $17572 = $17571 - $17569;
         $17573 = $17553 * 0.32595000000000002;
         $17574 = $17573 + $17572;
         $17575 = (+__Z5IKabsd($17574));
         $17576 = $17575 < 9.9999999999999995E-7;
         if (!($17576)) {
          break;
         }
         $17577 = (+__Z5IKabsd($17564));
         $17578 = $17577 < 9.9999999999999995E-7;
         if (!($17578)) {
          break;
         }
         $17579 = (+__Z5IKabsd($17566));
         $17580 = $17579 < 9.9999999999999995E-7;
         if (!($17580)) {
          break;
         }
         HEAPF64[$384>>3] = 0.0;
         HEAPF64[$383>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         HEAPF64[$24>>3] = 0.0;
         HEAPF64[$23>>3] = -1.0;
         HEAPF64[$22>>3] = 3.14159265358979;
         $17581 = +HEAPF64[$47>>3];
         $17582 = $17581 * $17581;
         $17583 = +HEAPF64[$75>>3];
         $17584 = $17583 * $17583;
         $17585 = +HEAPF64[$76>>3];
         $17586 = $17585 * $17585;
         $17587 = $17583 * 2.0;
         $17588 = +HEAPF64[$60>>3];
         $17589 = $17582 - $17588;
         $17590 = $17586 * 44.4444444444444;
         $17591 = $17588 * 13.3333333333333;
         $17592 = $17585 * $17591;
         $17593 = $17585 * 13.3333333333333;
         $17594 = $17582 * $17593;
         $17595 = (+__Z6IKsignd($17589));
         $17596 = (+__Z5IKabsd($17589));
         $17597 = $17596 < 9.9999999999999995E-7;
         do {
          if (!($17597)) {
           $17598 = $17592 - $17582;
           $17599 = $17583 * $17594;
           $17600 = $17599 + $17598;
           $17601 = $17583 * $17592;
           $17602 = $17600 - $17601;
           $17603 = $17602 - $17594;
           $17604 = $17582 * $17590;
           $17605 = $17603 - $17604;
           $17606 = $17587 * $17588;
           $17607 = $17605 - $17606;
           $17608 = $17588 + $17607;
           $17609 = $17582 * $17587;
           $17610 = $17609 + $17608;
           $17611 = $17582 * $17584;
           $17612 = $17610 - $17611;
           $17613 = $17584 * $17588;
           $17614 = $17613 + $17612;
           $17615 = $17588 * $17590;
           $17616 = $17615 + $17614;
           $17617 = (+__Z5IKabsd($17616));
           $17618 = $17617 < 9.9999999999999995E-7;
           if ($17618) {
            break;
           }
           $17619 = (+__Z5IKabsd($17595));
           $17620 = $17619 < 9.9999999999999995E-7;
           if ($17620) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $17851 = +HEAPF64[$45>>3];
           $17852 = $17851 * 0.031819805153394602;
           $17853 = +HEAPF64[$43>>3];
           $17854 = $17853 * 0.031819805153394602;
           $17855 = +HEAPF64[$76>>3];
           $17856 = $17855 * 0.21213203435596401;
           $17857 = +HEAPF64[$75>>3];
           $17858 = $17854 * $17857;
           $17859 = $17852 * $17857;
           $17860 = $17853 * $17856;
           $17861 = $17854 + $17860;
           $17862 = +HEAPF64[$60>>3];
           $17863 = +HEAPF64[$47>>3];
           $17864 = $17863 * $17863;
           $17865 = $17864 - $17862;
           $17866 = (+__Z6IKsignd($17865));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x3049,$17866,-1);
           $17867 = HEAP8[$569>>0]|0;
           $17868 = ($17867<<24>>24)==(0);
           if ($17868) {
            break L43;
           }
           $17869 = $17851 * $17856;
           $17870 = $17852 + $17869;
           $17871 = $17859 + $17861;
           $17872 = $17871 - $17858;
           $17873 = $17872 - $17870;
           $17874 = $17858 + $17859;
           $17875 = $17874 - $17861;
           $17876 = $17875 - $17870;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x3050,$17873,$17876,1.9999999999999999E-6);
           $17877 = HEAP8[$570>>0]|0;
           $17878 = ($17877<<24>>24)==(0);
           if ($17878) {
            break L43;
           }
           $17879 = +HEAPF64[$x3049>>3];
           $17880 = $17879 * 1.5707963267949001;
           $17881 = $17880 + -1.5707963267949001;
           $17882 = +HEAPF64[$x3050>>3];
           $17883 = $17882 + $17881;
           $17884 = (+__Z5IKsind($17883));
           $17885 = (+__Z5IKcosd($17883));
           $17886 = $17883 > 3.14159265358979;
           do {
            if ($17886) {
             $17887 = $17883 + -6.2831853071795898;
             $17890 = $17887;
            } else {
             $17888 = $17883 < -3.14159265358979;
             if (!($17888)) {
              $17890 = $17883;
              break;
             }
             $17889 = $17883 + 6.2831853071795898;
             $17890 = $17889;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $17890;
           HEAPF64[$571>>3] = $17885;
           HEAPF64[$572>>3] = $17884;
           $17891 = +HEAPF64[$this>>3];
           $17892 = (+__Z5IKsind($17891));
           $17893 = (+__Z5IKcosd($17891));
           $17894 = +HEAPF64[$45>>3];
           $17895 = $17894 * 0.70710678118654802;
           $17896 = +HEAPF64[$43>>3];
           $17897 = $17896 * 0.063639610306789302;
           $17898 = $17894 * 0.063639610306789302;
           $17899 = $17896 * 0.70710678118654802;
           $17900 = $17892 * $17899;
           $17901 = $17893 * $17899;
           $17902 = $17893 * $17895;
           $17903 = $17892 * $17895;
           $17904 = $17903 + $17901;
           $17905 = $17900 + $17904;
           $17906 = $17905 - $17902;
           $17907 = $17892 * $17897;
           $17908 = -0.21249999999999999 - $17907;
           $17909 = $17892 * $17898;
           $17910 = $17909 + $17908;
           $17911 = +HEAPF64[$60>>3];
           $17912 = $17910 - $17911;
           $17913 = +HEAPF64[$47>>3];
           $17914 = $17913 * 1.1000000000000001;
           $17915 = $17912 - $17914;
           $17916 = $17893 * $17898;
           $17917 = $17916 + $17915;
           $17918 = $17893 * $17897;
           $17919 = $17918 + $17917;
           $17920 = (+__Z5IKabsd($17906));
           $17921 = $17920 > 5.0000000000000004E-6;
           if ($17921) {
            break L43;
           }
           $17922 = +HEAPF64[$76>>3];
           $17923 = +HEAPF64[$75>>3];
           $17924 = $17900 + 0.044999999999999998;
           $17925 = $17924 - $17904;
           $17926 = $17923 * 0.044999999999999998;
           $17927 = $17925 - $17926;
           $17928 = $17922 * 0.29999999999999999;
           $17929 = $17928 + $17927;
           $17930 = $17929 - $17902;
           $17931 = (+__Z5IKabsd($17930));
           $17932 = $17931 > 5.0000000000000004E-6;
           if ($17932) {
            break L43;
           }
           $17933 = (+__Z5IKabsd($17919));
           $17934 = $17933 > 5.0000000000000004E-6;
           if ($17934) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         HEAPF64[$384>>3] = 0.0;
         HEAPF64[$383>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         HEAPF64[$24>>3] = 0.0;
         HEAPF64[$23>>3] = -1.0;
         HEAPF64[$22>>3] = 3.14159265358979;
         $17621 = +HEAPF64[$47>>3];
         $17622 = $17621 * $17621;
         $17623 = +HEAPF64[$60>>3];
         $17624 = $17623 * $17623;
         $17625 = $17621 * $17622;
         $17626 = $17623 - $17622;
         $17627 = $17622 * $17622;
         $17628 = $17627 * 26.7958477508651;
         $17629 = $17625 * -10.352941176470599;
         $17630 = $17629 - $17628;
         $17631 = $17623 * -48.719723183390997;
         $17632 = $17631 * $17625;
         $17633 = $17632 + $17630;
         $17634 = $17623 * $17624;
         $17635 = $17634 * 22.145328719723199;
         $17636 = $17635 + $17633;
         $17637 = $17636 - $17622;
         $17638 = $17622 * -22.145328719723199;
         $17639 = $17638 * $17624;
         $17640 = $17639 + $17637;
         $17641 = $17623 * 17.384083044982699;
         $17642 = $17622 * $17641;
         $17643 = $17642 + $17640;
         $17644 = $17623 + $17643;
         $17645 = $17621 * 48.719723183390997;
         $17646 = $17645 * $17624;
         $17647 = $17646 + $17644;
         $17648 = $17623 * 10.352941176470599;
         $17649 = $17621 * $17648;
         $17650 = $17649 + $17647;
         $17651 = $17624 * 9.4117647058823497;
         $17652 = $17651 + $17650;
         $17653 = (+__Z5IKabsd($17626));
         $17654 = $17653 < 9.9999999999999995E-7;
         do {
          if (!($17654)) {
           $17655 = $17623 * 0.089999999999999996;
           $17656 = $17622 * 0.089999999999999996;
           $17657 = $17655 - $17656;
           $17658 = (+__Z6IKsignd($17657));
           $17659 = (+__Z5IKabsd($17658));
           $17660 = $17659 < 9.9999999999999995E-7;
           if ($17660) {
            break;
           }
           $17661 = (+__Z5IKabsd($17652));
           $17662 = $17661 < 9.9999999999999995E-7;
           if ($17662) {
            break;
           }
           HEAP8[$2>>0] = 1;
           $17768 = +HEAPF64[$45>>3];
           $17769 = $17768 * 0.150260191002141;
           $17770 = +HEAPF64[$43>>3];
           $17771 = $17770 * 0.150260191002141;
           $17772 = +HEAPF64[$47>>3];
           $17773 = $17772 * 0.77781745930520196;
           $17774 = +HEAPF64[$60>>3];
           $17775 = $17774 * 0.70710678118654802;
           $17776 = $17768 * $17775;
           $17777 = $17770 * $17775;
           $17778 = $17768 * $17773;
           $17779 = $17770 * $17773;
           $17780 = $17771 + $17779;
           $17781 = $17780 + $17777;
           $17782 = $17769 + $17778;
           $17783 = $17782 + $17776;
           $17784 = $17772 * $17772;
           $17785 = $17784 * 0.089999999999999996;
           $17786 = $17774 * 0.089999999999999996;
           $17787 = $17786 - $17785;
           $17788 = (+__Z6IKsignd($17787));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x3026,$17788,-1);
           $17789 = HEAP8[$565>>0]|0;
           $17790 = ($17789<<24>>24)==(0);
           if ($17790) {
            break L43;
           }
           $17791 = $17783 - $17781;
           $17792 = $17783 + $17781;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x3027,$17791,$17792,1.9999999999999999E-6);
           $17793 = HEAP8[$566>>0]|0;
           $17794 = ($17793<<24>>24)==(0);
           if ($17794) {
            break L43;
           }
           $17795 = +HEAPF64[$x3026>>3];
           $17796 = $17795 * 1.5707963267949001;
           $17797 = $17796 + -1.5707963267949001;
           $17798 = +HEAPF64[$x3027>>3];
           $17799 = $17798 + $17797;
           $17800 = (+__Z5IKsind($17799));
           $17801 = (+__Z5IKcosd($17799));
           $17802 = $17799 > 3.14159265358979;
           do {
            if ($17802) {
             $17803 = $17799 + -6.2831853071795898;
             $17806 = $17803;
            } else {
             $17804 = $17799 < -3.14159265358979;
             if (!($17804)) {
              $17806 = $17799;
              break;
             }
             $17805 = $17799 + 6.2831853071795898;
             $17806 = $17805;
            }
           } while(0);
           HEAP8[$0>>0] = 0;
           HEAP8[$1>>0] = -1;
           HEAPF64[$this>>3] = $17806;
           HEAPF64[$567>>3] = $17801;
           HEAPF64[$568>>3] = $17800;
           $17807 = +HEAPF64[$this>>3];
           $17808 = (+__Z5IKsind($17807));
           $17809 = (+__Z5IKcosd($17807));
           $17810 = +HEAPF64[$45>>3];
           $17811 = $17810 * 0.70710678118654802;
           $17812 = +HEAPF64[$43>>3];
           $17813 = $17812 * 0.063639610306789302;
           $17814 = $17810 * 0.063639610306789302;
           $17815 = $17812 * 0.70710678118654802;
           $17816 = $17808 * $17815;
           $17817 = $17809 * $17815;
           $17818 = $17809 * $17811;
           $17819 = $17808 * $17811;
           $17820 = $17819 + $17817;
           $17821 = $17816 + $17820;
           $17822 = $17821 - $17818;
           $17823 = $17808 * $17814;
           $17824 = $17823 + -0.21249999999999999;
           $17825 = +HEAPF64[$60>>3];
           $17826 = $17824 - $17825;
           $17827 = +HEAPF64[$47>>3];
           $17828 = $17827 * 1.1000000000000001;
           $17829 = $17826 - $17828;
           $17830 = $17808 * $17813;
           $17831 = $17829 - $17830;
           $17832 = $17809 * $17814;
           $17833 = $17832 + $17831;
           $17834 = $17809 * $17813;
           $17835 = $17834 + $17833;
           $17836 = (+__Z5IKabsd($17822));
           $17837 = $17836 > 5.0000000000000004E-6;
           if ($17837) {
            break L43;
           }
           $17838 = +HEAPF64[$76>>3];
           $17839 = +HEAPF64[$75>>3];
           $17840 = $17816 + 0.044999999999999998;
           $17841 = $17839 * 0.044999999999999998;
           $17842 = $17840 - $17841;
           $17843 = $17842 - $17820;
           $17844 = $17843 - $17818;
           $17845 = $17838 * 0.29999999999999999;
           $17846 = $17845 + $17844;
           $17847 = (+__Z5IKabsd($17846));
           $17848 = $17847 > 5.0000000000000004E-6;
           if ($17848) {
            break L43;
           }
           $17849 = (+__Z5IKabsd($17835));
           $17850 = $17849 > 5.0000000000000004E-6;
           if ($17850) {
            break L43;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L43;
          }
         } while(0);
         $17663 = +HEAPF64[$7>>3];
         $17664 = (+__Z5IKabsd($17663));
         $17665 = $17664 + 3.14159265358979;
         $17666 = (+__Z6IKfmoddd($17665,6.2831853071795898));
         $17667 = $17666 + -3.14159265358979;
         $17668 = +HEAPF64[$47>>3];
         $17669 = $17668 + 0.84999999999999998;
         $17670 = (+__Z5IKabsd($17667));
         $17671 = $17670 < 9.9999999999999995E-7;
         if (!($17671)) {
          break;
         }
         $17672 = +HEAPF64[$60>>3];
         $17673 = 0.72250000000000003 - $17672;
         $17674 = (+__Z5IKabsd($17673));
         $17675 = $17674 < 9.9999999999999995E-7;
         if (!($17675)) {
          break;
         }
         $17676 = (+__Z5IKabsd($17669));
         $17677 = $17676 < 9.9999999999999995E-7;
         if (!($17677)) {
          break;
         }
         HEAPF64[$384>>3] = 0.0;
         HEAPF64[$383>>3] = -1.0;
         HEAPF64[$3>>3] = 3.14159265358979;
         HEAPF64[$24>>3] = 0.0;
         HEAPF64[$23>>3] = -1.0;
         HEAPF64[$22>>3] = 3.14159265358979;
         HEAPF64[$76>>3] = 0.0;
         HEAPF64[$75>>3] = 1.0;
         HEAPF64[$7>>3] = 0.0;
         $17678 = +HEAPF64[$60>>3];
         $17679 = +HEAPF64[$47>>3];
         $17680 = $17679 * $17679;
         $17681 = $17678 - $17680;
         $17682 = (+__Z5IKabsd($17681));
         $17683 = $17682 < 9.9999999999999995E-7;
         if ($17683) {
          break;
         }
         HEAP16[$j4valid923>>1] = 0;
         HEAP8[$2>>0] = 2;
         $17684 = +HEAPF64[$45>>3];
         $17685 = $17684 * 0.70710678118654802;
         $17686 = +HEAPF64[$43>>3];
         $17687 = $17686 * 0.70710678118654802;
         $17688 = $17687 - $17685;
         $17689 = $17685 + $17687;
         __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x3009,$17688,$17689,1.9999999999999999E-6);
         $17690 = HEAP8[$558>>0]|0;
         $17691 = ($17690<<24>>24)==(0);
         if ($17691) {
          break;
         }
         $17692 = +HEAPF64[$x3009>>3];
         $17693 = -$17692;
         HEAPF64[$j4array920>>3] = $17693;
         $17694 = (+__Z5IKsind($17693));
         HEAPF64[$sj4array922>>3] = $17694;
         $17695 = (+__Z5IKcosd($17693));
         HEAPF64[$cj4array921>>3] = $17695;
         $17696 = 3.14159265358979 - $17692;
         HEAPF64[$559>>3] = $17696;
         $17697 = (+__Z5IKsind($17696));
         HEAPF64[$560>>3] = $17697;
         $17698 = +HEAPF64[$559>>3];
         $17699 = (+__Z5IKcosd($17698));
         HEAPF64[$561>>3] = $17699;
         $17700 = +HEAPF64[$j4array920>>3];
         $17701 = $17700 > 3.14159265358979;
         do {
          if ($17701) {
           $17702 = $17700 + -6.2831853071795898;
           HEAPF64[$j4array920>>3] = $17702;
          } else {
           $17703 = $17700 < -3.14159265358979;
           if (!($17703)) {
            break;
           }
           $17704 = $17700 + 6.2831853071795898;
           HEAPF64[$j4array920>>3] = $17704;
          }
         } while(0);
         HEAP8[$j4valid923>>0] = 1;
         $17705 = +HEAPF64[$559>>3];
         $17706 = $17705 > 3.14159265358979;
         do {
          if ($17706) {
           $17707 = $17705 + -6.2831853071795898;
           HEAPF64[$559>>3] = $17707;
          } else {
           $17708 = $17705 < -3.14159265358979;
           if (!($17708)) {
            break;
           }
           $17709 = $17705 + 6.2831853071795898;
           HEAPF64[$559>>3] = $17709;
          }
         } while(0);
         HEAP8[$562>>0] = 1;
         $ij4924$0996 = 0;
         while(1) {
          $17710 = (($j4valid923) + ($ij4924$0996)|0);
          $17711 = HEAP8[$17710>>0]|0;
          $17712 = ($17711<<24>>24)==(0);
          do {
           if (!($17712)) {
            $17713 = $ij4924$0996&255;
            HEAP8[$0>>0] = $17713;
            HEAP8[$1>>0] = -1;
            $iij4925$0993 = (($ij4924$0996) + 1)|0;
            $17714 = ($iij4925$0993|0)<(2);
            do {
             if ($17714) {
              $17715 = (($sj4array922) + ($ij4924$0996<<3)|0);
              $17716 = (($j4valid923) + ($iij4925$0993)|0);
              $17717 = HEAP8[$17716>>0]|0;
              $17718 = ($17717<<24>>24)==(0);
              if ($17718) {
               break;
              }
              $17719 = (($cj4array921) + ($ij4924$0996<<3)|0);
              $17720 = +HEAPF64[$17719>>3];
              $17721 = (($cj4array921) + ($iij4925$0993<<3)|0);
              $17722 = +HEAPF64[$17721>>3];
              $17723 = $17720 - $17722;
              $17724 = (+__Z5IKabsd($17723));
              $17725 = $17724 < 9.9999999999999995E-7;
              if (!($17725)) {
               break;
              }
              $17726 = +HEAPF64[$17715>>3];
              $17727 = (($sj4array922) + ($iij4925$0993<<3)|0);
              $17728 = +HEAPF64[$17727>>3];
              $17729 = $17726 - $17728;
              $17730 = (+__Z5IKabsd($17729));
              $17731 = $17730 < 9.9999999999999995E-7;
              if (!($17731)) {
               break;
              }
              HEAP8[$17716>>0] = 0;
              $17732 = $iij4925$0993&255;
              HEAP8[$1>>0] = $17732;
             }
            } while(0);
            $17733 = (($j4array920) + ($ij4924$0996<<3)|0);
            $17734 = +HEAPF64[$17733>>3];
            HEAPF64[$this>>3] = $17734;
            $17735 = (($cj4array921) + ($ij4924$0996<<3)|0);
            $17736 = +HEAPF64[$17735>>3];
            HEAPF64[$563>>3] = $17736;
            $17737 = (($sj4array922) + ($ij4924$0996<<3)|0);
            $17738 = +HEAPF64[$17737>>3];
            HEAPF64[$564>>3] = $17738;
            $17739 = +HEAPF64[$this>>3];
            $17740 = (+__Z5IKcosd($17739));
            $17741 = (+__Z5IKsind($17739));
            $17742 = +HEAPF64[$45>>3];
            $17743 = $17742 * 0.70710678118654802;
            $17744 = +HEAPF64[$43>>3];
            $17745 = $17744 * 0.70710678118654802;
            $17746 = $17741 * 0.063639610306789302;
            $17747 = $17740 * 0.063639610306789302;
            $17748 = $17741 * $17745;
            $17749 = -$17740;
            $17750 = $17743 * $17749;
            $17751 = $17750 + $17748;
            $17752 = $17745 * $17749;
            $17753 = $17752 + $17751;
            $17754 = $17741 * $17743;
            $17755 = $17753 - $17754;
            $17756 = (+__Z5IKabsd($17755));
            $17757 = $17756 > 5.0000000000000004E-6;
            if ($17757) {
             break;
            }
            $17758 = $17742 * $17746;
            $17759 = $17747 * $17742;
            $17760 = $17758 + $17759;
            $17761 = $17746 * $17744;
            $17762 = $17760 - $17761;
            $17763 = $17747 * $17744;
            $17764 = $17763 + $17762;
            $17765 = (+__Z5IKabsd($17764));
            $17766 = $17765 > 5.0000000000000004E-6;
            if ($17766) {
             break;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           }
          } while(0);
          $17767 = (($ij4924$0996) + 1)|0;
          $exitcond = ($17767|0)==(2);
          if ($exitcond) {
           break;
          } else {
           $ij4924$0996 = $17767;
          }
         }
        }
       } while(0);
       $19123 = (($ij5549$01149) + 1)|0;
       $exitcond1741 = ($19123|0)==(2);
       if ($exitcond1741) {
        break L16;
       } else {
        $ij5549$01149 = $19123;
       }
      }
     }
    }
    $939 = +HEAPF64[$43>>3];
    $940 = $939 * $939;
    $941 = +HEAPF64[$45>>3];
    $942 = $941 * $941;
    $943 = $940 + $942;
    $944 = +HEAPF64[$47>>3];
    $945 = (+__Z5IKabsd($943));
    $946 = $945 < 9.9999999999999995E-7;
    if (!($946)) {
     $947 = +HEAPF64[$60>>3];
     $948 = $944 * $944;
     $949 = $947 - $948;
     $950 = (+__Z5IKabsd($949));
     $951 = $950 < 9.9999999999999995E-7;
     if (!($951)) {
      HEAP16[$j4valid257>>1] = 0;
      HEAP8[$2>>0] = 2;
      $6528 = +HEAPF64[$45>>3];
      $6529 = $6528 * 0.70710678118654802;
      $6530 = +HEAPF64[$43>>3];
      $6531 = $6530 * 0.70710678118654802;
      $6532 = +HEAPF64[$24>>3];
      $6533 = $6532 * 0.044999999999999998;
      $6534 = $6531 - $6529;
      $6535 = $6529 + $6531;
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1305,$6534,$6535,1.9999999999999999E-6);
      $6536 = HEAP8[$227>>0]|0;
      $6537 = ($6536<<24>>24)==(0);
      if ($6537) {
       break;
      }
      $6538 = +HEAPF64[$x1305>>3];
      $6539 = $6535 * $6535;
      $6540 = $6534 * $6534;
      $6541 = $6539 + $6540;
      $6542 = $6541 < -1.0000000000000001E-5;
      if ($6542) {
       break;
      }
      $6543 = (+__Z6IKsqrtd($6541));
      $6544 = (+__Z5IKabsd($6543));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1306,$6544,-1);
      $6545 = HEAP8[$228>>0]|0;
      $6546 = ($6545<<24>>24)==(0);
      if ($6546) {
       break;
      }
      $6547 = +HEAPF64[$x1306>>3];
      $6548 = +HEAPF64[$75>>3];
      $6549 = $6533 * $6548;
      $6550 = $6533 - $6549;
      $6551 = +HEAPF64[$24>>3];
      $6552 = $6551 * 0.29999999999999999;
      $6553 = +HEAPF64[$76>>3];
      $6554 = $6552 * $6553;
      $6555 = $6550 + $6554;
      $6556 = $6547 * $6555;
      $6557 = $6556 < -1.0000020000000001;
      $6558 = $6556 > 1.0000020000000001;
      $or$cond197 = $6557 | $6558;
      if ($or$cond197) {
       break;
      }
      $6559 = (+__Z6IKasind($6556));
      $6560 = -$6538;
      $6561 = $6560 - $6559;
      HEAPF64[$j4array254>>3] = $6561;
      $6562 = (+__Z5IKsind($6561));
      HEAPF64[$sj4array256>>3] = $6562;
      $6563 = (+__Z5IKcosd($6561));
      HEAPF64[$cj4array255>>3] = $6563;
      $6564 = $6559 + 3.14159265358979;
      $6565 = $6564 - $6538;
      HEAPF64[$229>>3] = $6565;
      $6566 = (+__Z5IKsind($6565));
      HEAPF64[$230>>3] = $6566;
      $6567 = +HEAPF64[$229>>3];
      $6568 = (+__Z5IKcosd($6567));
      HEAPF64[$231>>3] = $6568;
      $6569 = +HEAPF64[$j4array254>>3];
      $6570 = $6569 > 3.14159265358979;
      if ($6570) {
       $6571 = $6569 + -6.2831853071795898;
       HEAPF64[$j4array254>>3] = $6571;
      } else {
       $6572 = $6569 < -3.14159265358979;
       if ($6572) {
        $6573 = $6569 + 6.2831853071795898;
        HEAPF64[$j4array254>>3] = $6573;
       }
      }
      HEAP8[$j4valid257>>0] = 1;
      $6574 = +HEAPF64[$229>>3];
      $6575 = $6574 > 3.14159265358979;
      if ($6575) {
       $6576 = $6574 + -6.2831853071795898;
       HEAPF64[$229>>3] = $6576;
      } else {
       $6577 = $6574 < -3.14159265358979;
       if ($6577) {
        $6578 = $6574 + 6.2831853071795898;
        HEAPF64[$229>>3] = $6578;
       }
      }
      HEAP8[$232>>0] = 1;
      $ij4258$01317 = 0;
      while(1) {
       $6579 = (($j4valid257) + ($ij4258$01317)|0);
       $6580 = HEAP8[$6579>>0]|0;
       $6581 = ($6580<<24>>24)==(0);
       L960: do {
        if (!($6581)) {
         $6582 = $ij4258$01317&255;
         HEAP8[$0>>0] = $6582;
         HEAP8[$1>>0] = -1;
         $iij4259$01150 = (($ij4258$01317) + 1)|0;
         $6583 = ($iij4259$01150|0)<(2);
         do {
          if ($6583) {
           $6584 = (($sj4array256) + ($ij4258$01317<<3)|0);
           $6585 = (($j4valid257) + ($iij4259$01150)|0);
           $6586 = HEAP8[$6585>>0]|0;
           $6587 = ($6586<<24>>24)==(0);
           if ($6587) {
            break;
           }
           $6588 = (($cj4array255) + ($ij4258$01317<<3)|0);
           $6589 = +HEAPF64[$6588>>3];
           $6590 = (($cj4array255) + ($iij4259$01150<<3)|0);
           $6591 = +HEAPF64[$6590>>3];
           $6592 = $6589 - $6591;
           $6593 = (+__Z5IKabsd($6592));
           $6594 = $6593 < 9.9999999999999995E-7;
           if (!($6594)) {
            break;
           }
           $6595 = +HEAPF64[$6584>>3];
           $6596 = (($sj4array256) + ($iij4259$01150<<3)|0);
           $6597 = +HEAPF64[$6596>>3];
           $6598 = $6595 - $6597;
           $6599 = (+__Z5IKabsd($6598));
           $6600 = $6599 < 9.9999999999999995E-7;
           if (!($6600)) {
            break;
           }
           HEAP8[$6585>>0] = 0;
           $6601 = $iij4259$01150&255;
           HEAP8[$1>>0] = $6601;
          }
         } while(0);
         $6602 = (($j4array254) + ($ij4258$01317<<3)|0);
         $6603 = +HEAPF64[$6602>>3];
         HEAPF64[$this>>3] = $6603;
         $6604 = (($cj4array255) + ($ij4258$01317<<3)|0);
         $6605 = +HEAPF64[$6604>>3];
         HEAPF64[$233>>3] = $6605;
         $6606 = (($sj4array256) + ($ij4258$01317<<3)|0);
         $6607 = +HEAPF64[$6606>>3];
         HEAPF64[$234>>3] = $6607;
         $6608 = +HEAPF64[$45>>3];
         $6609 = +HEAPF64[$76>>3];
         $6610 = $6608 * $6609;
         $6611 = +HEAPF64[$233>>3];
         $6612 = $6607 * 0.031819805153394602;
         $6613 = +HEAPF64[$75>>3];
         $6614 = $6607 * $6613;
         $6615 = +HEAPF64[$43>>3];
         $6616 = $6615 * 6.6666666666666696;
         $6617 = $6607 * 0.38890872965260098;
         $6618 = $6608 * 0.21213203435596401;
         $6619 = $6611 * 0.031819805153394602;
         $6620 = $6609 * $6615;
         $6621 = $6607 * 12.2222222222222;
         $6622 = $6608 * 6.6666666666666696;
         $6623 = $6611 * $6613;
         $6624 = $6608 * $6611;
         $6625 = +HEAPF64[$23>>3];
         $6626 = +HEAPF64[$47>>3];
         $6627 = $6625 * $6626;
         $6628 = $6615 * 0.21213203435596401;
         $6629 = $6611 * $6615;
         $6630 = $6623 * $6616;
         $6631 = $6614 * $6616;
         $6632 = $6631 - $6630;
         $6633 = $6622 * $6623;
         $6634 = $6632 - $6633;
         $6635 = -$6610;
         $6636 = $6611 * $6635;
         $6637 = $6636 + $6634;
         $6638 = $6611 * $6620;
         $6639 = $6637 - $6638;
         $6640 = $6621 * $6615;
         $6641 = $6640 + $6639;
         $6642 = $6613 * 1.4142135623731;
         $6643 = $6642 * $6627;
         $6644 = $6643 + $6641;
         $6645 = $6607 * $6620;
         $6646 = $6645 + $6644;
         $6647 = $6609 * -9.4280904158206305;
         $6648 = $6647 * $6627;
         $6649 = $6648 + $6646;
         $6650 = $6627 * 1.4142135623731;
         $6651 = $6649 - $6650;
         $6652 = $6607 * $6610;
         $6653 = $6651 - $6652;
         $6654 = -$6608;
         $6655 = $6621 * $6654;
         $6656 = $6655 + $6653;
         $6657 = -$6614;
         $6658 = $6622 * $6657;
         $6659 = $6658 + $6656;
         $6660 = $6629 * 12.2222222222222;
         $6661 = $6659 - $6660;
         $6662 = $6624 * 12.2222222222222;
         $6663 = $6661 - $6662;
         $6664 = (+__Z5IKabsd($6663));
         $6665 = $6664 < 9.9999999999999995E-7;
         do {
          if (!($6665)) {
           $6666 = $6612 * $6635;
           $6667 = $6618 * $6623;
           $6668 = $6666 - $6667;
           $6669 = $6627 * 0.044999999999999998;
           $6670 = $6668 - $6669;
           $6671 = $6617 * $6615;
           $6672 = $6671 + $6670;
           $6673 = $6619 * $6635;
           $6674 = $6673 + $6672;
           $6675 = $6612 * $6620;
           $6676 = $6675 + $6674;
           $6677 = $6619 * $6620;
           $6678 = $6676 - $6677;
           $6679 = $6624 * 0.38890872965260098;
           $6680 = $6678 - $6679;
           $6681 = $6609 * -0.29999999999999999;
           $6682 = $6681 * $6627;
           $6683 = $6682 + $6680;
           $6684 = $6629 * 0.38890872965260098;
           $6685 = $6683 - $6684;
           $6686 = $6617 * $6654;
           $6687 = $6686 + $6685;
           $6688 = $6618 * $6657;
           $6689 = $6688 + $6687;
           $6690 = $6613 * 0.044999999999999998;
           $6691 = $6690 * $6627;
           $6692 = $6691 + $6689;
           $6693 = $6614 * $6628;
           $6694 = $6693 + $6692;
           $6695 = $6623 * $6628;
           $6696 = $6694 - $6695;
           $6697 = (+__Z6IKsignd($6696));
           $6698 = (+__Z5IKabsd($6697));
           $6699 = $6698 < 9.9999999999999995E-7;
           if ($6699) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $11674 = +HEAPF64[$75>>3];
           $11675 = $11674 * $11674;
           $11676 = +HEAPF64[$23>>3];
           $11677 = +HEAPF64[$76>>3];
           $11678 = $11676 * $11677;
           $11679 = +HEAPF64[$45>>3];
           $11680 = +HEAPF64[$234>>3];
           $11681 = $11679 * $11680;
           $11682 = $11674 * 0.21213203435596401;
           $11683 = +HEAPF64[$43>>3];
           $11684 = $11680 * $11683;
           $11685 = +HEAPF64[$47>>3];
           $11686 = $11685 * 0.70710678118654802;
           $11687 = $11674 * $11676;
           $11688 = +HEAPF64[$233>>3];
           $11689 = $11683 * $11688;
           $11690 = $11677 * 0.031819805153394602;
           $11691 = $11685 * 0.044999999999999998;
           $11692 = $11679 * $11688;
           $11693 = $11674 * -0.027;
           $11694 = $11693 * $11677;
           $11695 = $11694 + -0.30452499999999999;
           $11696 = $11677 * 0.049500000000000002;
           $11697 = $11695 - $11696;
           $11698 = $11675 * 0.087974999999999997;
           $11699 = $11697 - $11698;
           $11700 = $11685 * $11685;
           $11701 = $11699 + $11700;
           $11702 = $11674 * 0.33000000000000002;
           $11703 = $11701 - $11702;
           $11704 = -$11681;
           $11705 = $11686 * $11704;
           $11706 = $11674 * -0.087974999999999997;
           $11707 = $11706 * $11678;
           $11708 = $11707 + $11705;
           $11709 = $11684 * $11686;
           $11710 = $11709 + $11708;
           $11711 = -$11686;
           $11712 = $11692 * $11711;
           $11713 = $11712 + $11710;
           $11714 = $11687 * 0.01125;
           $11715 = $11714 + $11713;
           $11716 = $11678 * 0.16702500000000001;
           $11717 = $11715 - $11716;
           $11718 = $11689 * $11711;
           $11719 = $11718 + $11717;
           $11720 = $11676 * 0.027;
           $11721 = $11675 * $11720;
           $11722 = $11721 + $11719;
           $11723 = $11676 * 0.038249999999999999;
           $11724 = $11722 - $11723;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1883,$11703,$11724,1.9999999999999999E-6);
           $11725 = HEAP8[$373>>0]|0;
           $11726 = ($11725<<24>>24)==(0);
           if ($11726) {
            break L960;
           }
           $11727 = $11684 * 0.38890872965260098;
           $11728 = -$11682;
           $11729 = $11689 * $11728;
           $11730 = $11727 + $11729;
           $11731 = $11692 * $11728;
           $11732 = $11731 + $11730;
           $11733 = $11682 * $11704;
           $11734 = $11733 + $11732;
           $11735 = $11690 * $11704;
           $11736 = $11735 + $11734;
           $11737 = $11687 * $11691;
           $11738 = $11737 + $11736;
           $11739 = $11690 * $11684;
           $11740 = $11739 + $11738;
           $11741 = +HEAPF64[$23>>3];
           $11742 = $11691 * $11741;
           $11743 = $11740 - $11742;
           $11744 = $11690 * $11689;
           $11745 = $11743 - $11744;
           $11746 = $11690 * $11692;
           $11747 = $11745 - $11746;
           $11748 = $11692 * 0.38890872965260098;
           $11749 = $11747 - $11748;
           $11750 = +HEAPF64[$47>>3];
           $11751 = $11750 * -0.29999999999999999;
           $11752 = $11678 * $11751;
           $11753 = $11752 + $11749;
           $11754 = $11689 * 0.38890872965260098;
           $11755 = $11753 - $11754;
           $11756 = $11681 * 0.38890872965260098;
           $11757 = $11755 - $11756;
           $11758 = $11682 * $11684;
           $11759 = $11758 + $11757;
           $11760 = (+__Z6IKsignd($11759));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1884,$11760,-1);
           $11761 = HEAP8[$374>>0]|0;
           $11762 = ($11761<<24>>24)==(0);
           if ($11762) {
            break L960;
           }
           $11763 = +HEAPF64[$x1883>>3];
           $11764 = $11763 + -1.5707963267949001;
           $11765 = +HEAPF64[$x1884>>3];
           $11766 = $11765 * 1.5707963267949001;
           $11767 = $11764 + $11766;
           $11768 = (+__Z5IKsind($11767));
           $11769 = (+__Z5IKcosd($11767));
           $11770 = $11767 > 3.14159265358979;
           do {
            if ($11770) {
             $11771 = $11767 + -6.2831853071795898;
             $11774 = $11771;
            } else {
             $11772 = $11767 < -3.14159265358979;
             if (!($11772)) {
              $11774 = $11767;
              break;
             }
             $11773 = $11767 + 6.2831853071795898;
             $11774 = $11773;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $11774;
           HEAPF64[$375>>3] = $11769;
           HEAPF64[$376>>3] = $11768;
           $11775 = +HEAPF64[$3>>3];
           $11776 = (+__Z5IKsind($11775));
           $11777 = (+__Z5IKcosd($11775));
           $11778 = +HEAPF64[$75>>3];
           $11779 = $11778 * 0.044999999999999998;
           $11780 = +HEAPF64[$233>>3];
           $11781 = $11780 * 0.70710678118654802;
           $11782 = +HEAPF64[$23>>3];
           $11783 = +HEAPF64[$45>>3];
           $11784 = $11782 * $11783;
           $11785 = +HEAPF64[$24>>3];
           $11786 = $11783 * $11785;
           $11787 = +HEAPF64[$234>>3];
           $11788 = $11782 * $11787;
           $11789 = +HEAPF64[$43>>3];
           $11790 = $11789 * 0.70710678118654802;
           $11791 = $11785 * $11787;
           $11792 = $11778 * 0.29999999999999999;
           $11793 = +HEAPF64[$76>>3];
           $11794 = $11793 * 0.29999999999999999;
           $11795 = $11793 * 0.044999999999999998;
           $11796 = $11789 * 0.063639610306789302;
           $11797 = $11787 * 0.70710678118654802;
           $11798 = $11780 * 0.063639610306789302;
           $11799 = $11776 * $11782;
           $11800 = $11777 * $11789;
           $11801 = $11777 * $11782;
           $11802 = $11777 * $11787;
           $11803 = +HEAPF64[$47>>3];
           $11804 = $11777 * $11803;
           $11805 = $11780 * $11783;
           $11806 = $11776 * $11805;
           $11807 = $11784 * $11797;
           $11808 = $11783 * $11787;
           $11809 = $11776 * $11808;
           $11810 = $11789 * 0.77781745930520196;
           $11811 = $11776 * $11810;
           $11812 = $11799 * 0.044999999999999998;
           $11813 = $11777 * 0.55000000000000004;
           $11814 = $11812 - $11813;
           $11815 = -$11779;
           $11816 = $11799 * $11815;
           $11817 = $11816 + $11814;
           $11818 = -$11777;
           $11819 = $11792 * $11818;
           $11820 = $11819 + $11817;
           $11821 = $11795 * $11818;
           $11822 = $11820 + $11821;
           $11823 = $11799 * $11794;
           $11824 = $11823 + $11822;
           $11825 = $11803 + $11824;
           $11826 = $11776 * $11783;
           $11827 = -$11787;
           $11828 = $11776 * 0.55000000000000004;
           $11829 = $11781 * $11789;
           $11830 = $11828 - $11829;
           $11831 = $11776 * $11795;
           $11832 = $11830 + $11831;
           $11833 = $11776 * $11792;
           $11834 = $11833 + $11832;
           $11835 = $11801 * 0.044999999999999998;
           $11836 = $11835 + $11834;
           $11837 = $11801 * $11815;
           $11838 = $11837 + $11836;
           $11839 = $11801 * $11794;
           $11840 = $11839 + $11838;
           $11841 = $11787 * $11790;
           $11842 = $11841 + $11840;
           $11843 = -$11783;
           $11844 = $11781 * $11843;
           $11845 = $11844 + $11842;
           $11846 = $11797 * $11843;
           $11847 = $11846 + $11845;
           $11848 = $11781 * $11785;
           $11849 = $11848 * $11800;
           $11850 = $11785 * $11803;
           $11851 = $11776 * $11850;
           $11852 = $11849 - $11851;
           $11853 = -$11781;
           $11854 = $11784 * $11853;
           $11855 = $11854 + $11852;
           $11856 = $11777 * $11781;
           $11857 = $11856 * $11786;
           $11858 = $11857 + $11855;
           $11859 = $11788 * $11790;
           $11860 = $11859 + $11858;
           $11861 = $11807 + $11860;
           $11862 = $11782 * $11789;
           $11863 = $11781 * $11862;
           $11864 = $11863 + $11861;
           $11865 = $11790 * $11818;
           $11866 = $11791 * $11865;
           $11867 = $11866 + $11864;
           $11868 = $11777 * $11786;
           $11869 = $11868 * $11797;
           $11870 = $11869 + $11867;
           $11871 = $11781 * $11818;
           $11872 = $11871 * $11784;
           $11873 = $11872 + 0.044999999999999998;
           $11874 = $11785 * $11789;
           $11875 = $11781 * $11874;
           $11876 = $11873 + $11875;
           $11877 = $11791 * $11790;
           $11878 = $11877 + $11876;
           $11879 = $11782 * $11781;
           $11880 = $11879 * $11800;
           $11881 = $11878 - $11880;
           $11882 = $11807 * $11818;
           $11883 = $11882 + $11881;
           $11884 = $11786 * $11853;
           $11885 = $11884 + $11883;
           $11886 = $11799 * $11803;
           $11887 = $11886 + $11885;
           $11888 = $11794 + $11887;
           $11889 = $11888 - $11779;
           $11890 = $11777 * $11788;
           $11891 = $11890 * $11790;
           $11892 = $11891 + $11889;
           $11893 = $11786 * $11797;
           $11894 = $11893 + $11892;
           $11895 = $11791 * $11796;
           $11896 = -0.21249999999999999 - $11895;
           $11897 = $11780 * $11811;
           $11898 = $11896 + $11897;
           $11899 = $11780 * $11796;
           $11900 = $11801 * $11899;
           $11901 = $11900 + $11898;
           $11902 = $11780 * $11785;
           $11903 = $11902 * $11796;
           $11904 = $11901 - $11903;
           $11905 = $11804 * 1.1000000000000001;
           $11906 = $11905 + $11904;
           $11907 = $11787 * -0.063639610306789302;
           $11908 = $11786 * $11907;
           $11909 = $11908 + $11906;
           $11910 = $11803 * -0.089999999999999996;
           $11911 = $11799 * $11910;
           $11912 = $11911 + $11909;
           $11913 = $11777 * $11784;
           $11914 = $11798 * $11913;
           $11915 = $11914 + $11912;
           $11916 = +HEAPF64[$60>>3];
           $11917 = $11915 - $11916;
           $11918 = $11809 * 0.77781745930520196;
           $11919 = $11918 + $11917;
           $11920 = $11806 * 0.77781745930520196;
           $11921 = $11920 + $11919;
           $11922 = $11784 * 0.063639610306789302;
           $11923 = $11922 * $11802;
           $11924 = $11923 + $11921;
           $11925 = $11788 * $11818;
           $11926 = $11925 * $11796;
           $11927 = $11926 + $11924;
           $11928 = $11811 * $11827;
           $11929 = $11928 + $11927;
           $11930 = $11798 * $11786;
           $11931 = $11930 + $11929;
           $11932 = (+__Z5IKabsd($11825));
           $11933 = $11932 > 5.0000000000000004E-6;
           if ($11933) {
            break L960;
           }
           $11934 = $11776 * $11789;
           $11935 = $11781 * $11934;
           $11936 = $11935 + -0.55000000000000004;
           $11937 = $11781 * $11826;
           $11938 = $11937 + $11936;
           $11939 = $11804 + $11938;
           $11940 = $11826 * $11797;
           $11941 = $11940 + $11939;
           $11942 = $11941 - $11795;
           $11943 = $11942 - $11792;
           $11944 = $11776 * $11827;
           $11945 = $11944 * $11790;
           $11946 = $11945 + $11943;
           $11947 = (+__Z5IKabsd($11946));
           $11948 = $11947 > 5.0000000000000004E-6;
           if ($11948) {
            break L960;
           }
           $11949 = (+__Z5IKabsd($11847));
           $11950 = $11949 > 5.0000000000000004E-6;
           if ($11950) {
            break L960;
           }
           $11951 = (+__Z5IKabsd($11870));
           $11952 = $11951 > 5.0000000000000004E-6;
           if ($11952) {
            break L960;
           }
           $11953 = (+__Z5IKabsd($11894));
           $11954 = $11953 > 5.0000000000000004E-6;
           if ($11954) {
            break L960;
           }
           $11955 = (+__Z5IKabsd($11931));
           $11956 = $11955 > 5.0000000000000004E-6;
           if ($11956) {
            break L960;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L960;
          }
         } while(0);
         $6700 = +HEAPF64[$45>>3];
         $6701 = +HEAPF64[$234>>3];
         $6702 = $6700 * $6701;
         $6703 = +HEAPF64[$47>>3];
         $6704 = +HEAPF64[$76>>3];
         $6705 = $6703 * $6704;
         $6706 = +HEAPF64[$75>>3];
         $6707 = $6703 * $6706;
         $6708 = +HEAPF64[$233>>3];
         $6709 = +HEAPF64[$43>>3];
         $6710 = $6708 * $6709;
         $6711 = $6704 * 0.21213203435596401;
         $6712 = $6706 * 0.031819805153394602;
         $6713 = +HEAPF64[$23>>3];
         $6714 = $6713 * 0.031819805153394602;
         $6715 = $6713 * 6.6666666666666696;
         $6716 = $6704 * $6715;
         $6717 = $6708 * $6713;
         $6718 = $6700 * $6717;
         $6719 = $6709 * $6713;
         $6720 = $6701 * $6719;
         $6721 = $6707 * 9.4280904158206305;
         $6722 = $6718 - $6721;
         $6723 = -$6713;
         $6724 = $6710 * $6723;
         $6725 = $6706 * $6724;
         $6726 = $6725 + $6722;
         $6727 = $6726 - $6720;
         $6728 = $6706 * $6720;
         $6729 = $6728 + $6727;
         $6730 = $6701 * $6709;
         $6731 = -$6730;
         $6732 = $6716 * $6731;
         $6733 = $6732 + $6729;
         $6734 = $6700 * $6708;
         $6735 = $6734 * $6716;
         $6736 = $6735 + $6733;
         $6737 = $6705 * 1.4142135623731;
         $6738 = $6736 - $6737;
         $6739 = $6706 * $6718;
         $6740 = $6738 - $6739;
         $6741 = $6710 * $6716;
         $6742 = $6741 + $6740;
         $6743 = $6713 * $6710;
         $6744 = $6743 + $6742;
         $6745 = $6702 * $6713;
         $6746 = $6745 + $6744;
         $6747 = $6702 * $6723;
         $6748 = $6706 * $6747;
         $6749 = $6748 + $6746;
         $6750 = $6702 * $6716;
         $6751 = $6750 + $6749;
         $6752 = $6703 * 17.284832429004499;
         $6753 = $6751 - $6752;
         $6754 = (+__Z5IKabsd($6753));
         $6755 = $6754 < 9.9999999999999995E-7;
         do {
          if (!($6755)) {
           $6756 = $6703 * -0.55000000000000004;
           $6757 = $6711 * $6720;
           $6758 = $6756 - $6757;
           $6759 = $6712 * $6724;
           $6760 = $6759 + $6758;
           $6761 = $6711 * $6745;
           $6762 = $6761 + $6760;
           $6763 = $6705 * 0.044999999999999998;
           $6764 = $6762 - $6763;
           $6765 = $6712 * $6718;
           $6766 = $6764 - $6765;
           $6767 = $6714 * $6731;
           $6768 = $6767 + $6766;
           $6769 = $6734 * $6714;
           $6770 = $6769 + $6768;
           $6771 = $6712 * $6720;
           $6772 = $6771 + $6770;
           $6773 = $6710 * $6714;
           $6774 = $6773 + $6772;
           $6775 = $6711 * $6718;
           $6776 = $6775 + $6774;
           $6777 = $6707 * 0.29999999999999999;
           $6778 = $6776 - $6777;
           $6779 = $6712 * $6747;
           $6780 = $6779 + $6778;
           $6781 = $6711 * $6743;
           $6782 = $6781 + $6780;
           $6783 = $6702 * $6714;
           $6784 = $6783 + $6782;
           $6785 = (+__Z6IKsignd($6784));
           $6786 = (+__Z5IKabsd($6785));
           $6787 = $6786 < 9.9999999999999995E-7;
           if ($6787) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $11374 = +HEAPF64[$45>>3];
           $11375 = $11374 * $11374;
           $11376 = +HEAPF64[$75>>3];
           $11377 = $11376 * $11376;
           $11378 = +HEAPF64[$43>>3];
           $11379 = $11378 * $11378;
           $11380 = +HEAPF64[$23>>3];
           $11381 = +HEAPF64[$76>>3];
           $11382 = $11380 * $11381;
           $11383 = +HEAPF64[$233>>3];
           $11384 = $11374 * $11383;
           $11385 = $11376 * $11380;
           $11386 = +HEAPF64[$234>>3];
           $11387 = $11378 * $11386;
           $11388 = +HEAPF64[$47>>3];
           $11389 = $11388 * 0.70710678118654802;
           $11390 = $11378 * $11383;
           $11391 = $11374 * $11386;
           $11392 = $11380 * 0.031819805153394602;
           $11393 = $11383 * $11386;
           $11394 = $11382 * -0.21213203435596401;
           $11395 = $11394 * $11387;
           $11396 = $11388 * 0.55000000000000004;
           $11397 = $11395 - $11396;
           $11398 = $11384 * -0.031819805153394602;
           $11399 = $11385 * $11398;
           $11400 = $11399 + $11397;
           $11401 = $11385 * -0.031819805153394602;
           $11402 = $11401 * $11391;
           $11403 = $11402 + $11400;
           $11404 = $11385 * 0.031819805153394602;
           $11405 = $11404 * $11387;
           $11406 = $11405 + $11403;
           $11407 = $11376 * -0.29999999999999999;
           $11408 = $11407 * $11388;
           $11409 = $11408 + $11406;
           $11410 = $11388 * -0.044999999999999998;
           $11411 = $11381 * $11410;
           $11412 = $11411 + $11409;
           $11413 = $11382 * 0.21213203435596401;
           $11414 = $11413 * $11384;
           $11415 = $11414 + $11412;
           $11416 = $11413 * $11390;
           $11417 = $11416 + $11415;
           $11418 = $11392 * $11390;
           $11419 = $11418 + $11417;
           $11420 = $11401 * $11390;
           $11421 = $11420 + $11419;
           $11422 = $11392 * $11387;
           $11423 = $11421 - $11422;
           $11424 = $11413 * $11391;
           $11425 = $11424 + $11423;
           $11426 = $11392 * $11391;
           $11427 = $11426 + $11425;
           $11428 = $11392 * $11384;
           $11429 = $11428 + $11427;
           $11430 = (+__Z6IKsignd($11429));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1844,$11430,-1);
           $11431 = HEAP8[$369>>0]|0;
           $11432 = ($11431<<24>>24)==(0);
           if ($11432) {
            break L960;
           }
           $11433 = $11374 * $11378;
           $11434 = -$11389;
           $11435 = $11390 * $11434;
           $11436 = $11382 * 0.16702500000000001;
           $11437 = $11436 + $11435;
           $11438 = $11385 * 0.01125;
           $11439 = $11437 - $11438;
           $11440 = $11384 * $11389;
           $11441 = $11439 - $11440;
           $11442 = +HEAPF64[$23>>3];
           $11443 = $11442 * -0.027;
           $11444 = $11377 * $11443;
           $11445 = $11441 + $11444;
           $11446 = $11387 * $11389;
           $11447 = $11446 + $11445;
           $11448 = $11391 * $11434;
           $11449 = $11448 + $11447;
           $11450 = +HEAPF64[$75>>3];
           $11451 = $11450 * 0.087974999999999997;
           $11452 = $11382 * $11451;
           $11453 = $11452 + $11449;
           $11454 = $11442 * 0.038249999999999999;
           $11455 = $11454 + $11453;
           $11456 = $11450 * -0.027;
           $11457 = +HEAPF64[$76>>3];
           $11458 = $11456 * $11457;
           $11459 = $11458 + -0.30452499999999999;
           $11460 = $11375 * 0.5;
           $11461 = $11460 + $11459;
           $11462 = $11379 * 0.5;
           $11463 = $11462 + $11461;
           $11464 = $11457 * 0.049500000000000002;
           $11465 = $11463 - $11464;
           $11466 = $11375 * $11393;
           $11467 = $11466 + $11465;
           $11468 = $11384 * 2.0;
           $11469 = $11390 * $11468;
           $11470 = $11469 + $11467;
           $11471 = $11379 * $11393;
           $11472 = $11470 - $11471;
           $11473 = $11472 - $11433;
           $11474 = $11377 * 0.087974999999999997;
           $11475 = $11473 - $11474;
           $11476 = $11450 * 0.33000000000000002;
           $11477 = $11475 - $11476;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1845,$11455,$11477,1.9999999999999999E-6);
           $11478 = HEAP8[$370>>0]|0;
           $11479 = ($11478<<24>>24)==(0);
           if ($11479) {
            break L960;
           }
           $11480 = +HEAPF64[$x1844>>3];
           $11481 = $11480 * 1.5707963267949001;
           $11482 = $11481 + -1.5707963267949001;
           $11483 = +HEAPF64[$x1845>>3];
           $11484 = $11483 + $11482;
           $11485 = (+__Z5IKsind($11484));
           $11486 = (+__Z5IKcosd($11484));
           $11487 = $11484 > 3.14159265358979;
           do {
            if ($11487) {
             $11488 = $11484 + -6.2831853071795898;
             $11491 = $11488;
            } else {
             $11489 = $11484 < -3.14159265358979;
             if (!($11489)) {
              $11491 = $11484;
              break;
             }
             $11490 = $11484 + 6.2831853071795898;
             $11491 = $11490;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $11491;
           HEAPF64[$371>>3] = $11486;
           HEAPF64[$372>>3] = $11485;
           $11492 = +HEAPF64[$3>>3];
           $11493 = (+__Z5IKsind($11492));
           $11494 = (+__Z5IKcosd($11492));
           $11495 = +HEAPF64[$75>>3];
           $11496 = $11495 * 0.044999999999999998;
           $11497 = +HEAPF64[$233>>3];
           $11498 = $11497 * 0.70710678118654802;
           $11499 = +HEAPF64[$23>>3];
           $11500 = +HEAPF64[$45>>3];
           $11501 = $11499 * $11500;
           $11502 = +HEAPF64[$24>>3];
           $11503 = $11500 * $11502;
           $11504 = +HEAPF64[$234>>3];
           $11505 = $11499 * $11504;
           $11506 = +HEAPF64[$43>>3];
           $11507 = $11506 * 0.70710678118654802;
           $11508 = $11502 * $11504;
           $11509 = $11495 * 0.29999999999999999;
           $11510 = +HEAPF64[$76>>3];
           $11511 = $11510 * 0.29999999999999999;
           $11512 = $11510 * 0.044999999999999998;
           $11513 = $11506 * 0.063639610306789302;
           $11514 = $11504 * 0.70710678118654802;
           $11515 = $11497 * 0.063639610306789302;
           $11516 = $11493 * $11499;
           $11517 = $11494 * $11506;
           $11518 = $11494 * $11499;
           $11519 = $11494 * $11504;
           $11520 = +HEAPF64[$47>>3];
           $11521 = $11494 * $11520;
           $11522 = $11497 * $11500;
           $11523 = $11493 * $11522;
           $11524 = $11501 * $11514;
           $11525 = $11500 * $11504;
           $11526 = $11493 * $11525;
           $11527 = $11506 * 0.77781745930520196;
           $11528 = $11493 * $11527;
           $11529 = $11516 * 0.044999999999999998;
           $11530 = $11516 * $11511;
           $11531 = $11529 + $11530;
           $11532 = -$11496;
           $11533 = $11516 * $11532;
           $11534 = $11533 + $11531;
           $11535 = $11494 * 0.55000000000000004;
           $11536 = $11534 - $11535;
           $11537 = $11520 + $11536;
           $11538 = -$11494;
           $11539 = $11509 * $11538;
           $11540 = $11539 + $11537;
           $11541 = $11512 * $11538;
           $11542 = $11541 + $11540;
           $11543 = $11493 * $11500;
           $11544 = -$11504;
           $11545 = $11518 * 0.044999999999999998;
           $11546 = $11498 * $11506;
           $11547 = $11545 - $11546;
           $11548 = $11493 * 0.55000000000000004;
           $11549 = $11548 + $11547;
           $11550 = $11504 * $11507;
           $11551 = $11550 + $11549;
           $11552 = $11493 * $11509;
           $11553 = $11552 + $11551;
           $11554 = $11493 * $11512;
           $11555 = $11554 + $11553;
           $11556 = -$11500;
           $11557 = $11514 * $11556;
           $11558 = $11557 + $11555;
           $11559 = $11518 * $11511;
           $11560 = $11559 + $11558;
           $11561 = $11518 * $11532;
           $11562 = $11561 + $11560;
           $11563 = $11498 * $11556;
           $11564 = $11563 + $11562;
           $11565 = $11507 * $11538;
           $11566 = $11508 * $11565;
           $11567 = $11505 * $11507;
           $11568 = $11567 + $11566;
           $11569 = -$11498;
           $11570 = $11501 * $11569;
           $11571 = $11570 + $11568;
           $11572 = $11494 * $11503;
           $11573 = $11572 * $11514;
           $11574 = $11573 + $11571;
           $11575 = $11494 * $11498;
           $11576 = $11575 * $11503;
           $11577 = $11576 + $11574;
           $11578 = $11524 + $11577;
           $11579 = $11502 * $11520;
           $11580 = $11493 * $11579;
           $11581 = $11578 - $11580;
           $11582 = $11499 * $11506;
           $11583 = $11498 * $11582;
           $11584 = $11583 + $11581;
           $11585 = $11498 * $11502;
           $11586 = $11585 * $11517;
           $11587 = $11586 + $11584;
           $11588 = $11499 * $11498;
           $11589 = $11588 * $11517;
           $11590 = 0.044999999999999998 - $11589;
           $11591 = $11516 * $11520;
           $11592 = $11590 + $11591;
           $11593 = $11503 * $11569;
           $11594 = $11593 + $11592;
           $11595 = $11503 * $11514;
           $11596 = $11595 + $11594;
           $11597 = $11502 * $11506;
           $11598 = $11498 * $11597;
           $11599 = $11598 + $11596;
           $11600 = $11599 - $11496;
           $11601 = $11494 * $11505;
           $11602 = $11601 * $11507;
           $11603 = $11602 + $11600;
           $11604 = $11524 * $11538;
           $11605 = $11604 + $11603;
           $11606 = $11508 * $11507;
           $11607 = $11606 + $11605;
           $11608 = $11511 + $11607;
           $11609 = $11498 * $11538;
           $11610 = $11609 * $11501;
           $11611 = $11610 + $11608;
           $11612 = $11515 * $11503;
           $11613 = $11612 + -0.21249999999999999;
           $11614 = $11528 * $11544;
           $11615 = $11613 + $11614;
           $11616 = $11521 * 1.1000000000000001;
           $11617 = $11615 + $11616;
           $11618 = $11497 * $11502;
           $11619 = $11618 * $11513;
           $11620 = $11617 - $11619;
           $11621 = $11497 * $11528;
           $11622 = $11621 + $11620;
           $11623 = $11497 * $11513;
           $11624 = $11518 * $11623;
           $11625 = $11624 + $11622;
           $11626 = +HEAPF64[$60>>3];
           $11627 = $11625 - $11626;
           $11628 = $11505 * $11538;
           $11629 = $11628 * $11513;
           $11630 = $11629 + $11627;
           $11631 = $11501 * 0.063639610306789302;
           $11632 = $11631 * $11519;
           $11633 = $11632 + $11630;
           $11634 = $11526 * 0.77781745930520196;
           $11635 = $11634 + $11633;
           $11636 = $11523 * 0.77781745930520196;
           $11637 = $11636 + $11635;
           $11638 = $11504 * -0.063639610306789302;
           $11639 = $11503 * $11638;
           $11640 = $11639 + $11637;
           $11641 = $11520 * -0.089999999999999996;
           $11642 = $11516 * $11641;
           $11643 = $11642 + $11640;
           $11644 = $11494 * $11501;
           $11645 = $11515 * $11644;
           $11646 = $11645 + $11643;
           $11647 = $11508 * $11513;
           $11648 = $11646 - $11647;
           $11649 = (+__Z5IKabsd($11542));
           $11650 = $11649 > 5.0000000000000004E-6;
           if ($11650) {
            break L960;
           }
           $11651 = $11543 * $11514;
           $11652 = $11651 + -0.55000000000000004;
           $11653 = $11493 * $11544;
           $11654 = $11653 * $11507;
           $11655 = $11652 + $11654;
           $11656 = $11493 * $11506;
           $11657 = $11498 * $11656;
           $11658 = $11657 + $11655;
           $11659 = $11521 + $11658;
           $11660 = $11498 * $11543;
           $11661 = $11660 + $11659;
           $11662 = $11661 - $11509;
           $11663 = $11662 - $11512;
           $11664 = (+__Z5IKabsd($11663));
           $11665 = $11664 > 5.0000000000000004E-6;
           if ($11665) {
            break L960;
           }
           $11666 = (+__Z5IKabsd($11564));
           $11667 = $11666 > 5.0000000000000004E-6;
           if ($11667) {
            break L960;
           }
           $11668 = (+__Z5IKabsd($11587));
           $11669 = $11668 > 5.0000000000000004E-6;
           if ($11669) {
            break L960;
           }
           $11670 = (+__Z5IKabsd($11611));
           $11671 = $11670 > 5.0000000000000004E-6;
           if ($11671) {
            break L960;
           }
           $11672 = (+__Z5IKabsd($11648));
           $11673 = $11672 > 5.0000000000000004E-6;
           if ($11673) {
            break L960;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L960;
          }
         } while(0);
         $6788 = +HEAPF64[$23>>3];
         $6789 = $6788 * $6788;
         $6790 = +HEAPF64[$75>>3];
         $6791 = $6790 * $6790;
         $6792 = +HEAPF64[$76>>3];
         $6793 = $6790 * $6792;
         $6794 = $6791 * 0.087974999999999997;
         $6795 = $6791 * 21.7222222222222;
         $6796 = $6789 * 0.027;
         $6797 = $6790 * $6789;
         $6798 = $6789 * 6.6666666666666696;
         $6799 = $6797 + -75.191358024691397;
         $6800 = -$6792;
         $6801 = $6798 * $6800;
         $6802 = $6799 + $6801;
         $6803 = $6789 * 22.7222222222222;
         $6804 = $6802 - $6803;
         $6805 = $6792 * 12.2222222222222;
         $6806 = $6804 - $6805;
         $6807 = $6798 * $6793;
         $6808 = $6807 + $6806;
         $6809 = $6790 * 81.481481481481495;
         $6810 = $6808 - $6809;
         $6811 = $6810 - $6795;
         $6812 = $6793 * 6.6666666666666696;
         $6813 = $6811 - $6812;
         $6814 = $6789 * $6795;
         $6815 = $6814 + $6813;
         $6816 = (+__Z5IKabsd($6815));
         $6817 = $6816 < 9.9999999999999995E-7;
         do {
          if (!($6817)) {
           $6818 = $6789 * 0.092024999999999995;
           $6819 = -0.30452499999999999 - $6818;
           $6820 = $6796 * $6793;
           $6821 = $6819 + $6820;
           $6822 = $6792 * 0.049500000000000002;
           $6823 = $6821 - $6822;
           $6824 = $6796 * $6800;
           $6825 = $6824 + $6823;
           $6826 = $6793 * 0.027;
           $6827 = $6825 - $6826;
           $6828 = $6797 * 0.0040499999999999998;
           $6829 = $6828 + $6827;
           $6830 = $6829 - $6794;
           $6831 = $6789 * $6794;
           $6832 = $6831 + $6830;
           $6833 = $6790 * 0.33000000000000002;
           $6834 = $6832 - $6833;
           $6835 = (+__Z6IKsignd($6834));
           $6836 = (+__Z5IKabsd($6835));
           $6837 = $6836 < 9.9999999999999995E-7;
           if ($6837) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $11053 = +HEAPF64[$23>>3];
           $11054 = $11053 * $11053;
           $11055 = +HEAPF64[$75>>3];
           $11056 = $11055 * $11055;
           $11057 = +HEAPF64[$47>>3];
           $11058 = $11057 * 0.044999999999999998;
           $11059 = $11057 * 0.29999999999999999;
           $11060 = +HEAPF64[$45>>3];
           $11061 = $11060 * 0.031819805153394602;
           $11062 = +HEAPF64[$234>>3];
           $11063 = +HEAPF64[$76>>3];
           $11064 = $11062 * $11063;
           $11065 = +HEAPF64[$233>>3];
           $11066 = $11053 * $11065;
           $11067 = $11063 * 0.027;
           $11068 = $11060 * $11062;
           $11069 = $11055 * 0.21213203435596401;
           $11070 = $11053 * $11062;
           $11071 = +HEAPF64[$43>>3];
           $11072 = $11071 * 0.031819805153394602;
           $11073 = $11063 * 0.21213203435596401;
           $11074 = $11060 * $11065;
           $11075 = $11063 * $11065;
           $11076 = $11062 * $11071;
           $11077 = $11053 * 0.21213203435596401;
           $11078 = $11065 * $11071;
           $11079 = $11056 * 0.087974999999999997;
           $11080 = $11055 * $11054;
           $11081 = $11054 * $11079;
           $11082 = $11081 + -0.30452499999999999;
           $11083 = $11055 * $11067;
           $11084 = $11082 - $11083;
           $11085 = $11063 * 0.049500000000000002;
           $11086 = $11084 - $11085;
           $11087 = $11080 * $11067;
           $11088 = $11087 + $11086;
           $11089 = $11054 * $11067;
           $11090 = $11088 - $11089;
           $11091 = $11090 - $11079;
           $11092 = $11080 * 0.0040499999999999998;
           $11093 = $11092 + $11091;
           $11094 = $11054 * 0.092024999999999995;
           $11095 = $11093 - $11094;
           $11096 = $11055 * 0.33000000000000002;
           $11097 = $11095 - $11096;
           $11098 = (+__Z6IKsignd($11097));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1805,$11098,-1);
           $11099 = HEAP8[$365>>0]|0;
           $11100 = ($11099<<24>>24)==(0);
           if ($11100) {
            break L960;
           }
           $11101 = $11075 * $11072;
           $11102 = +HEAPF64[$23>>3];
           $11103 = $11058 * $11102;
           $11104 = $11103 - $11101;
           $11105 = +HEAPF64[$75>>3];
           $11106 = $11102 * $11105;
           $11107 = $11058 * $11106;
           $11108 = $11104 - $11107;
           $11109 = $11069 * $11076;
           $11110 = $11109 + $11108;
           $11111 = -$11069;
           $11112 = $11078 * $11111;
           $11113 = $11112 + $11110;
           $11114 = $11069 * $11068;
           $11115 = $11113 - $11114;
           $11116 = -$11061;
           $11117 = $11064 * $11116;
           $11118 = $11117 + $11115;
           $11119 = $11075 * $11116;
           $11120 = $11119 + $11118;
           $11121 = +HEAPF64[$76>>3];
           $11122 = $11102 * $11121;
           $11123 = $11059 * $11122;
           $11124 = $11123 + $11120;
           $11125 = $11078 * 0.38890872965260098;
           $11126 = $11124 - $11125;
           $11127 = $11064 * $11072;
           $11128 = $11127 + $11126;
           $11129 = $11076 * 0.38890872965260098;
           $11130 = $11129 + $11128;
           $11131 = $11074 * 0.38890872965260098;
           $11132 = $11130 - $11131;
           $11133 = $11068 * 0.38890872965260098;
           $11134 = $11132 - $11133;
           $11135 = $11074 * $11111;
           $11136 = $11135 + $11134;
           $11137 = +HEAPF64[$43>>3];
           $11138 = $11064 * $11137;
           $11139 = $11077 * $11138;
           $11140 = +HEAPF64[$47>>3];
           $11141 = $11140 * 0.55000000000000004;
           $11142 = $11139 - $11141;
           $11143 = -$11105;
           $11144 = $11059 * $11143;
           $11145 = $11144 + $11142;
           $11146 = $11066 * $11137;
           $11147 = $11073 * $11146;
           $11148 = $11145 - $11147;
           $11149 = $11066 * $11105;
           $11150 = $11072 * $11149;
           $11151 = $11150 + $11148;
           $11152 = +HEAPF64[$45>>3];
           $11153 = -$11152;
           $11154 = $11066 * $11153;
           $11155 = $11073 * $11154;
           $11156 = $11155 + $11151;
           $11157 = $11070 * $11116;
           $11158 = $11157 + $11156;
           $11159 = $11066 * $11116;
           $11160 = $11159 + $11158;
           $11161 = $11058 * $11121;
           $11162 = $11160 - $11161;
           $11163 = $11070 * $11143;
           $11164 = $11072 * $11163;
           $11165 = $11164 + $11162;
           $11166 = $11064 * $11153;
           $11167 = $11077 * $11166;
           $11168 = $11167 + $11165;
           $11169 = $11070 * $11072;
           $11170 = $11169 + $11168;
           $11171 = $11061 * $11105;
           $11172 = $11070 * $11171;
           $11173 = $11172 + $11170;
           $11174 = $11066 * $11171;
           $11175 = $11174 + $11173;
           $11176 = $11066 * $11072;
           $11177 = $11175 - $11176;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1806,$11136,$11177,1.9999999999999999E-6);
           $11178 = HEAP8[$366>>0]|0;
           $11179 = ($11178<<24>>24)==(0);
           if ($11179) {
            break L960;
           }
           $11180 = +HEAPF64[$x1805>>3];
           $11181 = $11180 * 1.5707963267949001;
           $11182 = $11181 + -1.5707963267949001;
           $11183 = +HEAPF64[$x1806>>3];
           $11184 = $11183 + $11182;
           $11185 = (+__Z5IKsind($11184));
           $11186 = (+__Z5IKcosd($11184));
           $11187 = $11184 > 3.14159265358979;
           do {
            if ($11187) {
             $11188 = $11184 + -6.2831853071795898;
             $11191 = $11188;
            } else {
             $11189 = $11184 < -3.14159265358979;
             if (!($11189)) {
              $11191 = $11184;
              break;
             }
             $11190 = $11184 + 6.2831853071795898;
             $11191 = $11190;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $11191;
           HEAPF64[$367>>3] = $11186;
           HEAPF64[$368>>3] = $11185;
           $11192 = +HEAPF64[$3>>3];
           $11193 = (+__Z5IKsind($11192));
           $11194 = (+__Z5IKcosd($11192));
           $11195 = +HEAPF64[$75>>3];
           $11196 = $11195 * 0.044999999999999998;
           $11197 = +HEAPF64[$233>>3];
           $11198 = $11197 * 0.70710678118654802;
           $11199 = +HEAPF64[$23>>3];
           $11200 = +HEAPF64[$45>>3];
           $11201 = $11199 * $11200;
           $11202 = +HEAPF64[$24>>3];
           $11203 = $11200 * $11202;
           $11204 = +HEAPF64[$234>>3];
           $11205 = $11199 * $11204;
           $11206 = +HEAPF64[$43>>3];
           $11207 = $11206 * 0.70710678118654802;
           $11208 = $11202 * $11204;
           $11209 = $11195 * 0.29999999999999999;
           $11210 = +HEAPF64[$76>>3];
           $11211 = $11210 * 0.29999999999999999;
           $11212 = $11210 * 0.044999999999999998;
           $11213 = $11206 * 0.063639610306789302;
           $11214 = $11204 * 0.70710678118654802;
           $11215 = $11197 * 0.063639610306789302;
           $11216 = $11193 * $11199;
           $11217 = $11194 * $11206;
           $11218 = $11194 * $11199;
           $11219 = $11194 * $11204;
           $11220 = +HEAPF64[$47>>3];
           $11221 = $11194 * $11220;
           $11222 = $11197 * $11200;
           $11223 = $11193 * $11222;
           $11224 = $11201 * $11214;
           $11225 = $11200 * $11204;
           $11226 = $11193 * $11225;
           $11227 = $11206 * 0.77781745930520196;
           $11228 = $11193 * $11227;
           $11229 = -$11194;
           $11230 = $11212 * $11229;
           $11231 = $11209 * $11229;
           $11232 = $11231 + $11230;
           $11233 = -$11196;
           $11234 = $11216 * $11233;
           $11235 = $11234 + $11232;
           $11236 = $11220 + $11235;
           $11237 = $11216 * $11211;
           $11238 = $11237 + $11236;
           $11239 = $11194 * 0.55000000000000004;
           $11240 = $11238 - $11239;
           $11241 = $11216 * 0.044999999999999998;
           $11242 = $11241 + $11240;
           $11243 = $11193 * $11200;
           $11244 = -$11204;
           $11245 = -$11200;
           $11246 = $11214 * $11245;
           $11247 = $11218 * $11233;
           $11248 = $11247 + $11246;
           $11249 = $11193 * 0.55000000000000004;
           $11250 = $11249 + $11248;
           $11251 = $11193 * $11209;
           $11252 = $11251 + $11250;
           $11253 = $11193 * $11212;
           $11254 = $11253 + $11252;
           $11255 = $11198 * $11245;
           $11256 = $11255 + $11254;
           $11257 = $11204 * $11207;
           $11258 = $11257 + $11256;
           $11259 = $11218 * $11211;
           $11260 = $11259 + $11258;
           $11261 = $11218 * 0.044999999999999998;
           $11262 = $11261 + $11260;
           $11263 = $11198 * $11206;
           $11264 = $11262 - $11263;
           $11265 = $11202 * $11220;
           $11266 = $11193 * $11265;
           $11267 = $11198 * $11202;
           $11268 = $11267 * $11217;
           $11269 = $11268 - $11266;
           $11270 = $11207 * $11229;
           $11271 = $11208 * $11270;
           $11272 = $11271 + $11269;
           $11273 = $11205 * $11207;
           $11274 = $11273 + $11272;
           $11275 = -$11198;
           $11276 = $11201 * $11275;
           $11277 = $11276 + $11274;
           $11278 = $11199 * $11206;
           $11279 = $11198 * $11278;
           $11280 = $11279 + $11277;
           $11281 = $11194 * $11203;
           $11282 = $11281 * $11214;
           $11283 = $11282 + $11280;
           $11284 = $11224 + $11283;
           $11285 = $11194 * $11198;
           $11286 = $11285 * $11203;
           $11287 = $11286 + $11284;
           $11288 = $11216 * $11220;
           $11289 = $11288 + 0.044999999999999998;
           $11290 = $11203 * $11214;
           $11291 = $11290 + $11289;
           $11292 = $11194 * $11205;
           $11293 = $11292 * $11207;
           $11294 = $11293 + $11291;
           $11295 = $11203 * $11275;
           $11296 = $11295 + $11294;
           $11297 = $11296 - $11196;
           $11298 = $11199 * $11198;
           $11299 = $11298 * $11217;
           $11300 = $11297 - $11299;
           $11301 = $11208 * $11207;
           $11302 = $11301 + $11300;
           $11303 = $11211 + $11302;
           $11304 = $11198 * $11229;
           $11305 = $11304 * $11201;
           $11306 = $11305 + $11303;
           $11307 = $11224 * $11229;
           $11308 = $11307 + $11306;
           $11309 = $11202 * $11206;
           $11310 = $11198 * $11309;
           $11311 = $11310 + $11308;
           $11312 = $11228 * $11244;
           $11313 = $11312 + -0.21249999999999999;
           $11314 = $11204 * -0.063639610306789302;
           $11315 = $11203 * $11314;
           $11316 = $11315 + $11313;
           $11317 = $11197 * $11202;
           $11318 = $11317 * $11213;
           $11319 = $11316 - $11318;
           $11320 = $11215 * $11203;
           $11321 = $11320 + $11319;
           $11322 = $11197 * $11213;
           $11323 = $11218 * $11322;
           $11324 = $11323 + $11321;
           $11325 = $11220 * -0.089999999999999996;
           $11326 = $11216 * $11325;
           $11327 = $11326 + $11324;
           $11328 = $11205 * $11229;
           $11329 = $11328 * $11213;
           $11330 = $11329 + $11327;
           $11331 = $11201 * 0.063639610306789302;
           $11332 = $11331 * $11219;
           $11333 = $11332 + $11330;
           $11334 = $11194 * $11201;
           $11335 = $11215 * $11334;
           $11336 = $11335 + $11333;
           $11337 = +HEAPF64[$60>>3];
           $11338 = $11336 - $11337;
           $11339 = $11197 * $11228;
           $11340 = $11339 + $11338;
           $11341 = $11208 * $11213;
           $11342 = $11340 - $11341;
           $11343 = $11226 * 0.77781745930520196;
           $11344 = $11343 + $11342;
           $11345 = $11223 * 0.77781745930520196;
           $11346 = $11345 + $11344;
           $11347 = $11221 * 1.1000000000000001;
           $11348 = $11347 + $11346;
           $11349 = (+__Z5IKabsd($11242));
           $11350 = $11349 > 5.0000000000000004E-6;
           if ($11350) {
            break L960;
           }
           $11351 = -0.55000000000000004 - $11212;
           $11352 = $11351 - $11209;
           $11353 = $11198 * $11243;
           $11354 = $11353 + $11352;
           $11355 = $11243 * $11214;
           $11356 = $11355 + $11354;
           $11357 = $11193 * $11206;
           $11358 = $11198 * $11357;
           $11359 = $11358 + $11356;
           $11360 = $11221 + $11359;
           $11361 = $11193 * $11244;
           $11362 = $11361 * $11207;
           $11363 = $11362 + $11360;
           $11364 = (+__Z5IKabsd($11363));
           $11365 = $11364 > 5.0000000000000004E-6;
           if ($11365) {
            break L960;
           }
           $11366 = (+__Z5IKabsd($11264));
           $11367 = $11366 > 5.0000000000000004E-6;
           if ($11367) {
            break L960;
           }
           $11368 = (+__Z5IKabsd($11287));
           $11369 = $11368 > 5.0000000000000004E-6;
           if ($11369) {
            break L960;
           }
           $11370 = (+__Z5IKabsd($11311));
           $11371 = $11370 > 5.0000000000000004E-6;
           if ($11371) {
            break L960;
           }
           $11372 = (+__Z5IKabsd($11348));
           $11373 = $11372 > 5.0000000000000004E-6;
           if ($11373) {
            break L960;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L960;
          }
         } while(0);
         $6838 = +HEAPF64[$45>>3];
         $6839 = $6838 * 0.70710678118654802;
         $6840 = +HEAPF64[$43>>3];
         $6841 = $6840 * 0.70710678118654802;
         $6842 = +HEAPF64[$234>>3];
         $6843 = $6839 * $6842;
         $6844 = $6843 + 0.044999999999999998;
         $6845 = $6842 * $6841;
         $6846 = $6845 + $6844;
         $6847 = +HEAPF64[$75>>3];
         $6848 = $6847 * 0.044999999999999998;
         $6849 = $6846 - $6848;
         $6850 = +HEAPF64[$233>>3];
         $6851 = $6841 * $6850;
         $6852 = $6851 + $6849;
         $6853 = +HEAPF64[$76>>3];
         $6854 = $6853 * 0.29999999999999999;
         $6855 = $6854 + $6852;
         $6856 = $6839 * $6850;
         $6857 = $6855 - $6856;
         $6858 = +HEAPF64[$47>>3];
         $6859 = (+__Z5IKabsd($6858));
         $6860 = +HEAPF64[$22>>3];
         $6861 = $6860 + 1.5707963267949001;
         $6862 = (+__Z6IKfmoddd($6861,6.2831853071795898));
         $6863 = $6862 + -3.14159265358979;
         $6864 = (+__Z5IKabsd($6863));
         $6865 = $6859 + $6864;
         $6866 = (+__Z5IKabsd($6865));
         $6867 = $6866 < 9.9999999999999995E-7;
         do {
          if ($6867) {
           $6868 = +HEAPF64[$60>>3];
           $6869 = $6853 * 0.076499999999999999;
           $6870 = $6869 + 0.39655000000000001;
           $6871 = $6870 - $6868;
           $6872 = $6847 * 0.32595000000000002;
           $6873 = $6872 + $6871;
           $6874 = (+__Z5IKabsd($6873));
           $6875 = $6874 < 9.9999999999999995E-7;
           if (!($6875)) {
            break;
           }
           $6876 = (+__Z5IKabsd($6857));
           $6877 = $6876 < 9.9999999999999995E-7;
           if (!($6877)) {
            break;
           }
           $6878 = -$6838;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           $6879 = +HEAPF64[$43>>3];
           $6880 = $6879 * $6879;
           $6881 = +HEAPF64[$45>>3];
           $6882 = $6881 * $6881;
           $6883 = $6880 + $6882;
           HEAPF64[$60>>3] = $6883;
           $6884 = +HEAPF64[$43>>3];
           $6885 = +HEAPF64[$26>>3];
           $6886 = $6884 * $6885;
           $6887 = +HEAPF64[$45>>3];
           $6888 = +HEAPF64[$32>>3];
           $6889 = $6887 * $6888;
           $6890 = $6886 + $6889;
           HEAPF64[$61>>3] = $6890;
           $6891 = +HEAPF64[$43>>3];
           $6892 = +HEAPF64[$28>>3];
           $6893 = $6891 * $6892;
           $6894 = +HEAPF64[$45>>3];
           $6895 = +HEAPF64[$34>>3];
           $6896 = $6894 * $6895;
           $6897 = $6893 + $6896;
           HEAPF64[$62>>3] = $6897;
           $6898 = +HEAPF64[$43>>3];
           $6899 = +HEAPF64[$30>>3];
           $6900 = $6898 * $6899;
           $6901 = +HEAPF64[$45>>3];
           $6902 = +HEAPF64[$36>>3];
           $6903 = $6901 * $6902;
           $6904 = $6900 + $6903;
           HEAPF64[$63>>3] = $6904;
           $6905 = +HEAPF64[$38>>3];
           $6906 = $6905 * $6878;
           HEAPF64[$64>>3] = $6906;
           $6907 = +HEAPF64[$43>>3];
           $6908 = +HEAPF64[$38>>3];
           $6909 = $6907 * $6908;
           HEAPF64[$65>>3] = $6909;
           $6910 = +HEAPF64[$40>>3];
           $6911 = $6910 * $6878;
           HEAPF64[$67>>3] = $6911;
           $6912 = +HEAPF64[$43>>3];
           $6913 = +HEAPF64[$40>>3];
           $6914 = $6912 * $6913;
           HEAPF64[$68>>3] = $6914;
           $6915 = +HEAPF64[$42>>3];
           $6916 = $6915 * $6878;
           HEAPF64[$70>>3] = $6916;
           $6917 = +HEAPF64[$43>>3];
           $6918 = +HEAPF64[$42>>3];
           $6919 = $6917 * $6918;
           HEAPF64[$71>>3] = $6919;
           $6920 = +HEAPF64[$233>>3];
           $6921 = +HEAPF64[$45>>3];
           $6922 = $6920 * $6921;
           $6923 = +HEAPF64[$43>>3];
           $6924 = $6920 * $6923;
           $6925 = $6922 + $6924;
           $6926 = +HEAPF64[$234>>3];
           $6927 = $6923 * $6926;
           $6928 = $6925 - $6927;
           $6929 = $6921 * $6926;
           $6930 = $6929 + $6928;
           $6931 = (+__Z5IKabsd($6930));
           $6932 = $6931 < 9.9999999999999995E-7;
           if (!($6932)) {
            HEAP16[$j5valid317>>1] = 0;
            HEAP8[$6>>0] = 2;
            $7658 = +HEAPF64[$234>>3];
            $7659 = $7658 * 0.70710678118654802;
            $7660 = +HEAPF64[$233>>3];
            $7661 = $7660 * 0.70710678118654802;
            $7662 = +HEAPF64[$43>>3];
            $7663 = $7659 * $7662;
            $7664 = $7662 * $7661;
            $7665 = $7664 - $7663;
            $7666 = +HEAPF64[$45>>3];
            $7667 = $7659 * $7666;
            $7668 = $7665 + $7667;
            $7669 = $7661 * $7666;
            $7670 = $7669 + $7668;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1425,$7670,-1);
            $7671 = HEAP8[$265>>0]|0;
            $7672 = ($7671<<24>>24)==(0);
            if ($7672) {
             break L960;
            }
            $7673 = +HEAPF64[$x1425>>3];
            $7674 = +HEAPF64[$75>>3];
            $7675 = $7674 * 0.29999999999999999;
            $7676 = $7673 * $7675;
            $7677 = $7673 * 0.55000000000000004;
            $7678 = $7677 + $7676;
            $7679 = +HEAPF64[$76>>3];
            $7680 = $7679 * 0.044999999999999998;
            $7681 = $7673 * $7680;
            $7682 = $7678 + $7681;
            HEAPF64[$sj5array316>>3] = $7682;
            $7683 = !($7682 >= -1.0000020000000001);
            $7684 = !($7682 <= 1.0000020000000001);
            $or$cond211 = $7683 | $7684;
            do {
             if ($or$cond211) {
              $7694 = (__Z13__DOUBLE_BITSd($7682)|0);
              $7695 = tempRet0;
              $7696 = $7695 & 2147483647;
              $7697 = ($7696>>>0)>(2146435072);
              $7698 = ($7694>>>0)>(0);
              $7699 = ($7696|0)==(2146435072);
              $7700 = $7699 & $7698;
              $7701 = $7697 | $7700;
              if (!($7701)) {
               $ij5318$01286 = 0;
               break;
              }
              HEAP8[$j5valid317>>0] = 1;
              HEAPF64[$cj5array315>>3] = 1.0;
              HEAPF64[$sj5array316>>3] = 0.0;
              HEAPF64[$j5array314>>3] = 0.0;
              $ij5318$01286 = 0;
             } else {
              HEAP8[$266>>0] = 1;
              HEAP8[$j5valid317>>0] = 1;
              $7685 = +HEAPF64[$sj5array316>>3];
              $7686 = (+__Z6IKasind($7685));
              HEAPF64[$j5array314>>3] = $7686;
              $7687 = (+__Z5IKcosd($7686));
              HEAPF64[$cj5array315>>3] = $7687;
              $7688 = +HEAPF64[$sj5array316>>3];
              HEAPF64[$267>>3] = $7688;
              $7689 = +HEAPF64[$j5array314>>3];
              $7690 = $7689 > 0.0;
              $$v63 = $7690 ? 3.14159265358979 : -3.14159265358979;
              $7691 = $$v63 - $7689;
              HEAPF64[$268>>3] = $7691;
              $7692 = +HEAPF64[$cj5array315>>3];
              $7693 = -$7692;
              HEAPF64[$269>>3] = $7693;
              $ij5318$01286 = 0;
             }
            } while(0);
            while(1) {
             $7702 = (($j5valid317) + ($ij5318$01286)|0);
             $7703 = HEAP8[$7702>>0]|0;
             $7704 = ($7703<<24>>24)==(0);
             do {
              if (!($7704)) {
               $7705 = $ij5318$01286&255;
               HEAP8[$4>>0] = $7705;
               HEAP8[$5>>0] = -1;
               $iij5319$01282 = (($ij5318$01286) + 1)|0;
               $7706 = ($iij5319$01282|0)<(2);
               do {
                if ($7706) {
                 $7707 = (($sj5array316) + ($ij5318$01286<<3)|0);
                 $7708 = (($j5valid317) + ($iij5319$01282)|0);
                 $7709 = HEAP8[$7708>>0]|0;
                 $7710 = ($7709<<24>>24)==(0);
                 if ($7710) {
                  break;
                 }
                 $7711 = (($cj5array315) + ($ij5318$01286<<3)|0);
                 $7712 = +HEAPF64[$7711>>3];
                 $7713 = (($cj5array315) + ($iij5319$01282<<3)|0);
                 $7714 = +HEAPF64[$7713>>3];
                 $7715 = $7712 - $7714;
                 $7716 = (+__Z5IKabsd($7715));
                 $7717 = $7716 < 9.9999999999999995E-7;
                 if (!($7717)) {
                  break;
                 }
                 $7718 = +HEAPF64[$7707>>3];
                 $7719 = (($sj5array316) + ($iij5319$01282<<3)|0);
                 $7720 = +HEAPF64[$7719>>3];
                 $7721 = $7718 - $7720;
                 $7722 = (+__Z5IKabsd($7721));
                 $7723 = $7722 < 9.9999999999999995E-7;
                 if (!($7723)) {
                  break;
                 }
                 HEAP8[$7708>>0] = 0;
                 $7724 = $iij5319$01282&255;
                 HEAP8[$5>>0] = $7724;
                }
               } while(0);
               $7725 = (($j5array314) + ($ij5318$01286<<3)|0);
               $7726 = +HEAPF64[$7725>>3];
               HEAPF64[$3>>3] = $7726;
               $7727 = (($cj5array315) + ($ij5318$01286<<3)|0);
               $7728 = +HEAPF64[$7727>>3];
               HEAPF64[$270>>3] = $7728;
               $7729 = (($sj5array316) + ($ij5318$01286<<3)|0);
               $7730 = +HEAPF64[$7729>>3];
               HEAPF64[$271>>3] = $7730;
               $7731 = +HEAPF64[$3>>3];
               $7732 = (+__Z5IKcosd($7731));
               $7733 = (+__Z5IKsind($7731));
               $7734 = +HEAPF64[$43>>3];
               $7735 = $7734 * $7734;
               $7736 = +HEAPF64[$45>>3];
               $7737 = $7736 * $7736;
               $7738 = +HEAPF64[$233>>3];
               $7739 = $7736 * $7738;
               $7740 = +HEAPF64[$234>>3];
               $7741 = $7734 * $7740;
               $7742 = $7736 * $7740;
               $7743 = $7734 * $7738;
               $7744 = $7733 * 0.77781745930520196;
               $7745 = $7732 * 0.70710678118654802;
               $7746 = $7732 * 0.58823529411764697;
               $7747 = +HEAPF64[$75>>3];
               $7748 = $7747 * -0.108264705882353;
               $7749 = $7732 * $7748;
               $7750 = $7746 * $7737;
               $7751 = $7749 - $7750;
               $7752 = $7746 * $7735;
               $7753 = $7751 - $7752;
               $7754 = $7732 * 0.316735294117647;
               $7755 = $7753 - $7754;
               $7756 = -$7741;
               $7757 = $7742 * 0.70710678118654802;
               $7758 = $7739 * -0.70710678118654802;
               $7759 = $7758 - $7757;
               $7760 = $7743 * 0.70710678118654802;
               $7761 = $7759 - $7760;
               $7762 = $7747 * 0.29999999999999999;
               $7763 = $7733 * $7762;
               $7764 = $7763 + $7761;
               $7765 = $7741 * 0.70710678118654802;
               $7766 = $7765 + $7764;
               $7767 = $7733 * 0.55000000000000004;
               $7768 = $7767 + $7766;
               $7769 = +HEAPF64[$76>>3];
               $7770 = $7769 * 0.044999999999999998;
               $7771 = $7733 * $7770;
               $7772 = $7771 + $7768;
               $7773 = $7744 * $7742;
               $7774 = $7773 + -0.21249999999999999;
               $7775 = $7739 * 0.063639610306789302;
               $7776 = $7775 + $7774;
               $7777 = $7744 * $7739;
               $7778 = $7777 + $7776;
               $7779 = $7744 * $7743;
               $7780 = $7779 + $7778;
               $7781 = $7744 * $7756;
               $7782 = $7781 + $7780;
               $7783 = $7782 - $7737;
               $7784 = $7783 - $7735;
               $7785 = $7741 * 0.063639610306789302;
               $7786 = $7784 - $7785;
               $7787 = $7742 * 0.063639610306789302;
               $7788 = $7786 - $7787;
               $7789 = $7743 * 0.063639610306789302;
               $7790 = $7788 - $7789;
               $7791 = (+__Z5IKabsd($7755));
               $7792 = $7791 > 5.0000000000000004E-6;
               if ($7792) {
                break;
               }
               $7793 = $7745 * $7742;
               $7794 = $7745 * $7739;
               $7795 = $7794 + $7793;
               $7796 = $7745 * $7743;
               $7797 = $7796 + $7795;
               $7798 = $7745 * $7756;
               $7799 = $7798 + $7797;
               $7800 = (+__Z5IKabsd($7799));
               $7801 = $7800 > 5.0000000000000004E-6;
               if ($7801) {
                break;
               }
               $7802 = (+__Z5IKabsd($7772));
               $7803 = $7802 > 5.0000000000000004E-6;
               if ($7803) {
                break;
               }
               $7804 = (+__Z5IKabsd($7790));
               $7805 = $7804 > 5.0000000000000004E-6;
               if ($7805) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $7806 = (($ij5318$01286) + 1)|0;
             $exitcond1758 = ($7806|0)==(2);
             if ($exitcond1758) {
              break L960;
             } else {
              $ij5318$01286 = $7806;
             }
            }
           }
           $6933 = -$6921;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           $6934 = +HEAPF64[$43>>3];
           $6935 = $6934 * $6934;
           $6936 = +HEAPF64[$45>>3];
           $6937 = $6936 * $6936;
           $6938 = $6935 + $6937;
           HEAPF64[$60>>3] = $6938;
           $6939 = +HEAPF64[$43>>3];
           $6940 = +HEAPF64[$26>>3];
           $6941 = $6939 * $6940;
           $6942 = +HEAPF64[$45>>3];
           $6943 = +HEAPF64[$32>>3];
           $6944 = $6942 * $6943;
           $6945 = $6941 + $6944;
           HEAPF64[$61>>3] = $6945;
           $6946 = +HEAPF64[$43>>3];
           $6947 = +HEAPF64[$28>>3];
           $6948 = $6946 * $6947;
           $6949 = +HEAPF64[$45>>3];
           $6950 = +HEAPF64[$34>>3];
           $6951 = $6949 * $6950;
           $6952 = $6948 + $6951;
           HEAPF64[$62>>3] = $6952;
           $6953 = +HEAPF64[$43>>3];
           $6954 = +HEAPF64[$30>>3];
           $6955 = $6953 * $6954;
           $6956 = +HEAPF64[$45>>3];
           $6957 = +HEAPF64[$36>>3];
           $6958 = $6956 * $6957;
           $6959 = $6955 + $6958;
           HEAPF64[$63>>3] = $6959;
           $6960 = +HEAPF64[$38>>3];
           $6961 = $6960 * $6933;
           HEAPF64[$64>>3] = $6961;
           $6962 = +HEAPF64[$43>>3];
           $6963 = +HEAPF64[$38>>3];
           $6964 = $6962 * $6963;
           HEAPF64[$65>>3] = $6964;
           $6965 = +HEAPF64[$40>>3];
           $6966 = $6965 * $6933;
           HEAPF64[$67>>3] = $6966;
           $6967 = +HEAPF64[$43>>3];
           $6968 = +HEAPF64[$40>>3];
           $6969 = $6967 * $6968;
           HEAPF64[$68>>3] = $6969;
           $6970 = +HEAPF64[$42>>3];
           $6971 = $6970 * $6933;
           HEAPF64[$70>>3] = $6971;
           $6972 = +HEAPF64[$43>>3];
           $6973 = +HEAPF64[$42>>3];
           $6974 = $6972 * $6973;
           HEAPF64[$71>>3] = $6974;
           $6975 = +HEAPF64[$76>>3];
           $6976 = $6975 + 12.2222222222222;
           $6977 = +HEAPF64[$75>>3];
           $6978 = $6977 * 6.6666666666666696;
           $6979 = $6976 + $6978;
           $6980 = (+__Z5IKabsd($6979));
           $6981 = $6980 < 9.9999999999999995E-7;
           if (!($6981)) {
            HEAP16[$j5valid310>>1] = 0;
            HEAP8[$6>>0] = 2;
            $7506 = +HEAPF64[$76>>3];
            $7507 = $7506 * 0.044999999999999998;
            $7508 = $7507 + 0.55000000000000004;
            $7509 = +HEAPF64[$75>>3];
            $7510 = $7509 * 0.29999999999999999;
            $7511 = $7508 + $7510;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1407,$7511,-1);
            $7512 = HEAP8[$258>>0]|0;
            $7513 = ($7512<<24>>24)==(0);
            if ($7513) {
             break L960;
            }
            $7514 = +HEAPF64[$x1407>>3];
            $7515 = +HEAPF64[$234>>3];
            $7516 = $7515 * 0.70710678118654802;
            $7517 = $7514 * $7516;
            $7518 = +HEAPF64[$233>>3];
            $7519 = $7518 * 0.70710678118654802;
            $7520 = $7514 * $7519;
            $7521 = +HEAPF64[$43>>3];
            $7522 = $7521 * $7520;
            $7523 = +HEAPF64[$45>>3];
            $7524 = $7517 * $7523;
            $7525 = $7522 + $7524;
            $7526 = $7523 * $7520;
            $7527 = $7526 + $7525;
            $7528 = $7521 * $7517;
            $7529 = $7527 - $7528;
            HEAPF64[$sj5array309>>3] = $7529;
            $7530 = !($7529 >= -1.0000020000000001);
            $7531 = !($7529 <= 1.0000020000000001);
            $or$cond210 = $7530 | $7531;
            do {
             if ($or$cond210) {
              $7541 = (__Z13__DOUBLE_BITSd($7529)|0);
              $7542 = tempRet0;
              $7543 = $7542 & 2147483647;
              $7544 = ($7543>>>0)>(2146435072);
              $7545 = ($7541>>>0)>(0);
              $7546 = ($7543|0)==(2146435072);
              $7547 = $7546 & $7545;
              $7548 = $7544 | $7547;
              if (!($7548)) {
               $ij5311$01291 = 0;
               break;
              }
              HEAP8[$j5valid310>>0] = 1;
              HEAPF64[$cj5array308>>3] = 1.0;
              HEAPF64[$sj5array309>>3] = 0.0;
              HEAPF64[$j5array307>>3] = 0.0;
              $ij5311$01291 = 0;
             } else {
              HEAP8[$259>>0] = 1;
              HEAP8[$j5valid310>>0] = 1;
              $7532 = +HEAPF64[$sj5array309>>3];
              $7533 = (+__Z6IKasind($7532));
              HEAPF64[$j5array307>>3] = $7533;
              $7534 = (+__Z5IKcosd($7533));
              HEAPF64[$cj5array308>>3] = $7534;
              $7535 = +HEAPF64[$sj5array309>>3];
              HEAPF64[$260>>3] = $7535;
              $7536 = +HEAPF64[$j5array307>>3];
              $7537 = $7536 > 0.0;
              $$v65 = $7537 ? 3.14159265358979 : -3.14159265358979;
              $7538 = $$v65 - $7536;
              HEAPF64[$261>>3] = $7538;
              $7539 = +HEAPF64[$cj5array308>>3];
              $7540 = -$7539;
              HEAPF64[$262>>3] = $7540;
              $ij5311$01291 = 0;
             }
            } while(0);
            while(1) {
             $7549 = (($j5valid310) + ($ij5311$01291)|0);
             $7550 = HEAP8[$7549>>0]|0;
             $7551 = ($7550<<24>>24)==(0);
             do {
              if (!($7551)) {
               $7552 = $ij5311$01291&255;
               HEAP8[$4>>0] = $7552;
               HEAP8[$5>>0] = -1;
               $iij5312$01287 = (($ij5311$01291) + 1)|0;
               $7553 = ($iij5312$01287|0)<(2);
               do {
                if ($7553) {
                 $7554 = (($sj5array309) + ($ij5311$01291<<3)|0);
                 $7555 = (($j5valid310) + ($iij5312$01287)|0);
                 $7556 = HEAP8[$7555>>0]|0;
                 $7557 = ($7556<<24>>24)==(0);
                 if ($7557) {
                  break;
                 }
                 $7558 = (($cj5array308) + ($ij5311$01291<<3)|0);
                 $7559 = +HEAPF64[$7558>>3];
                 $7560 = (($cj5array308) + ($iij5312$01287<<3)|0);
                 $7561 = +HEAPF64[$7560>>3];
                 $7562 = $7559 - $7561;
                 $7563 = (+__Z5IKabsd($7562));
                 $7564 = $7563 < 9.9999999999999995E-7;
                 if (!($7564)) {
                  break;
                 }
                 $7565 = +HEAPF64[$7554>>3];
                 $7566 = (($sj5array309) + ($iij5312$01287<<3)|0);
                 $7567 = +HEAPF64[$7566>>3];
                 $7568 = $7565 - $7567;
                 $7569 = (+__Z5IKabsd($7568));
                 $7570 = $7569 < 9.9999999999999995E-7;
                 if (!($7570)) {
                  break;
                 }
                 HEAP8[$7555>>0] = 0;
                 $7571 = $iij5312$01287&255;
                 HEAP8[$5>>0] = $7571;
                }
               } while(0);
               $7572 = (($j5array307) + ($ij5311$01291<<3)|0);
               $7573 = +HEAPF64[$7572>>3];
               HEAPF64[$3>>3] = $7573;
               $7574 = (($cj5array308) + ($ij5311$01291<<3)|0);
               $7575 = +HEAPF64[$7574>>3];
               HEAPF64[$263>>3] = $7575;
               $7576 = (($sj5array309) + ($ij5311$01291<<3)|0);
               $7577 = +HEAPF64[$7576>>3];
               HEAPF64[$264>>3] = $7577;
               $7578 = +HEAPF64[$3>>3];
               $7579 = (+__Z5IKcosd($7578));
               $7580 = (+__Z5IKsind($7578));
               $7581 = +HEAPF64[$43>>3];
               $7582 = $7581 * $7581;
               $7583 = +HEAPF64[$45>>3];
               $7584 = $7583 * $7583;
               $7585 = +HEAPF64[$234>>3];
               $7586 = $7585 * 0.70710678118654802;
               $7587 = +HEAPF64[$233>>3];
               $7588 = $7583 * $7587;
               $7589 = $7585 * 0.77781745930520196;
               $7590 = $7585 * 0.063639610306789302;
               $7591 = $7587 * 0.70710678118654802;
               $7592 = $7579 * $7581;
               $7593 = $7580 * $7583;
               $7594 = $7580 * $7581;
               $7595 = $7579 * 0.58823529411764697;
               $7596 = $7580 * $7588;
               $7597 = $7579 * 0.316735294117647;
               $7598 = +HEAPF64[$75>>3];
               $7599 = $7598 * -0.108264705882353;
               $7600 = $7579 * $7599;
               $7601 = $7600 - $7597;
               $7602 = $7595 * $7582;
               $7603 = $7601 - $7602;
               $7604 = $7595 * $7584;
               $7605 = $7603 - $7604;
               $7606 = -$7586;
               $7607 = +HEAPF64[$76>>3];
               $7608 = $7607 * 0.044999999999999998;
               $7609 = -0.55000000000000004 - $7608;
               $7610 = $7593 * $7586;
               $7611 = $7610 + $7609;
               $7612 = $7594 * $7606;
               $7613 = $7612 + $7611;
               $7614 = $7598 * 0.29999999999999999;
               $7615 = $7613 - $7614;
               $7616 = $7594 * $7591;
               $7617 = $7616 + $7615;
               $7618 = $7596 * 0.70710678118654802;
               $7619 = $7618 + $7617;
               $7620 = $7587 * 0.77781745930520196;
               $7621 = $7594 * $7620;
               $7622 = $7621 + -0.21249999999999999;
               $7623 = $7594 * $7589;
               $7624 = $7622 - $7623;
               $7625 = $7588 * 0.063639610306789302;
               $7626 = $7625 + $7624;
               $7627 = $7581 * $7590;
               $7628 = $7626 - $7627;
               $7629 = $7587 * -0.063639610306789302;
               $7630 = $7581 * $7629;
               $7631 = $7630 + $7628;
               $7632 = $7596 * 0.77781745930520196;
               $7633 = $7632 + $7631;
               $7634 = $7593 * $7589;
               $7635 = $7634 + $7633;
               $7636 = $7583 * $7590;
               $7637 = $7635 - $7636;
               $7638 = $7637 - $7582;
               $7639 = $7638 - $7584;
               $7640 = (+__Z5IKabsd($7605));
               $7641 = $7640 > 5.0000000000000004E-6;
               if ($7641) {
                break;
               }
               $7642 = $7592 * $7606;
               $7643 = $7579 * $7583;
               $7644 = $7643 * $7586;
               $7645 = $7642 + $7644;
               $7646 = $7592 * $7591;
               $7647 = $7645 + $7646;
               $7648 = $7579 * 0.70710678118654802;
               $7649 = $7648 * $7588;
               $7650 = $7649 + $7647;
               $7651 = (+__Z5IKabsd($7650));
               $7652 = $7651 > 5.0000000000000004E-6;
               if ($7652) {
                break;
               }
               $7653 = (+__Z5IKabsd($7619));
               $7654 = $7653 > 5.0000000000000004E-6;
               if ($7654) {
                break;
               }
               $7655 = (+__Z5IKabsd($7639));
               $7656 = $7655 > 5.0000000000000004E-6;
               if ($7656) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $7657 = (($ij5311$01291) + 1)|0;
             $exitcond1759 = ($7657|0)==(2);
             if ($exitcond1759) {
              break L960;
             } else {
              $ij5311$01291 = $7657;
             }
            }
           }
           $6982 = +HEAPF64[$45>>3];
           $6983 = +HEAPF64[$43>>3];
           $6984 = $6982 + $6983;
           $6985 = $6982 - $6983;
           $6986 = $6984 * $6984;
           $6987 = $6985 * $6985;
           $6988 = $6986 + $6987;
           $6989 = (+__Z5IKabsd($6988));
           $6990 = $6989 == 0.0;
           do {
            if (!($6990)) {
             $6991 = (+Math_pow((+$6988),-0.5));
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1351,$6984,$6985,1.9999999999999999E-6);
             $6992 = HEAP8[$249>>0]|0;
             $6993 = ($6992<<24>>24)==(0);
             if ($6993) {
              break;
             }
             $6994 = $6984 * $6991;
             $6995 = -$6994;
             $6996 = $6985 * $6991;
             $6997 = +HEAPF64[$this>>3];
             $6998 = $6996 * 0.70710678118654802;
             $6999 = $6994 * -0.70710678118654802;
             $7000 = +HEAPF64[$45>>3];
             $7001 = +HEAPF64[$43>>3];
             $7002 = $7000 + $7001;
             $7003 = $7000 - $7001;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1358,$7002,$7003,1.9999999999999999E-6);
             $7004 = HEAP8[$250>>0]|0;
             $7005 = ($7004<<24>>24)==(0);
             if ($7005) {
              break;
             }
             $7006 = +HEAPF64[$x1358>>3];
             $7007 = +HEAPF64[$75>>3];
             $7008 = $7007 * 0.044999999999999998;
             $7009 = 0.044999999999999998 - $7008;
             $7010 = +HEAPF64[$43>>3];
             $7011 = $6998 * $7010;
             $7012 = $7009 + $7011;
             $7013 = $6999 * $7010;
             $7014 = $7013 + $7012;
             $7015 = +HEAPF64[$76>>3];
             $7016 = $7015 * 0.29999999999999999;
             $7017 = $7016 + $7014;
             $7018 = +HEAPF64[$45>>3];
             $7019 = $6999 * $7018;
             $7020 = $7019 + $7017;
             $7021 = $6998 * $7018;
             $7022 = $7020 - $7021;
             $7023 = $7006 * $7006;
             $7024 = +HEAPF64[$this>>3];
             $7025 = $6997 * $7024;
             $7026 = $7023 + $7025;
             $7027 = $7006 * $7024;
             $7028 = $7027 + $7026;
             $7029 = $6997 * $7006;
             $7030 = $7029 + $7028;
             $7031 = $7030 < -1.0000000000000001E-5;
             if ($7031) {
              break;
             }
             $7032 = (+__Z6IKsqrtd($7030));
             $7033 = $7032 + 3.14159265358979;
             $7034 = (+__Z6IKfmoddd($7033,6.2831853071795898));
             $7035 = $7034 + -3.14159265358979;
             $7036 = (+__Z5IKabsd($7035));
             $7037 = $7036 < 9.9999999999999995E-7;
             if (!($7037)) {
              break;
             }
             $7038 = $7010 * $7010;
             $7039 = 0.39655000000000001 - $7038;
             $7040 = $7015 * 0.076499999999999999;
             $7041 = $7039 + $7040;
             $7042 = $7018 * $7018;
             $7043 = $7041 - $7042;
             $7044 = $7007 * 0.32595000000000002;
             $7045 = $7044 + $7043;
             $7046 = (+__Z5IKabsd($7045));
             $7047 = $7046 < 9.9999999999999995E-7;
             if (!($7047)) {
              break;
             }
             $7048 = (+__Z5IKabsd($7022));
             $7049 = $7048 < 9.9999999999999995E-7;
             if (!($7049)) {
              break;
             }
             HEAP16[$j5valid275>>1] = 0;
             HEAP8[$6>>0] = 2;
             $7050 = +HEAPF64[$43>>3];
             $7051 = $7050 * 0.70710678118654802;
             $7052 = +HEAPF64[$45>>3];
             $7053 = $7052 * 0.70710678118654802;
             $7054 = $6994 * $7051;
             $7055 = $7053 * $6995;
             $7056 = $7054 + $7055;
             $7057 = $6996 * $7053;
             $7058 = $7057 + $7056;
             $7059 = $6996 * $7051;
             $7060 = $7059 + $7058;
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1362,$7060,-1);
             $7061 = HEAP8[$251>>0]|0;
             $7062 = ($7061<<24>>24)==(0);
             if ($7062) {
              break L960;
             }
             $7063 = +HEAPF64[$x1362>>3];
             $7064 = +HEAPF64[$76>>3];
             $7065 = $7064 * 0.044999999999999998;
             $7066 = $7063 * $7065;
             $7067 = +HEAPF64[$75>>3];
             $7068 = $7067 * 0.29999999999999999;
             $7069 = $7063 * $7068;
             $7070 = $7066 + $7069;
             $7071 = $7063 * 0.55000000000000004;
             $7072 = $7071 + $7070;
             HEAPF64[$sj5array274>>3] = $7072;
             $7073 = !($7072 >= -1.0000020000000001);
             $7074 = !($7072 <= 1.0000020000000001);
             $or$cond198 = $7073 | $7074;
             do {
              if ($or$cond198) {
               $7084 = (__Z13__DOUBLE_BITSd($7072)|0);
               $7085 = tempRet0;
               $7086 = $7085 & 2147483647;
               $7087 = ($7086>>>0)>(2146435072);
               $7088 = ($7084>>>0)>(0);
               $7089 = ($7086|0)==(2146435072);
               $7090 = $7089 & $7088;
               $7091 = $7087 | $7090;
               if (!($7091)) {
                $ij5276$01296 = 0;
                break;
               }
               HEAP8[$j5valid275>>0] = 1;
               HEAPF64[$cj5array273>>3] = 1.0;
               HEAPF64[$sj5array274>>3] = 0.0;
               HEAPF64[$j5array272>>3] = 0.0;
               $ij5276$01296 = 0;
              } else {
               HEAP8[$252>>0] = 1;
               HEAP8[$j5valid275>>0] = 1;
               $7075 = +HEAPF64[$sj5array274>>3];
               $7076 = (+__Z6IKasind($7075));
               HEAPF64[$j5array272>>3] = $7076;
               $7077 = (+__Z5IKcosd($7076));
               HEAPF64[$cj5array273>>3] = $7077;
               $7078 = +HEAPF64[$sj5array274>>3];
               HEAPF64[$253>>3] = $7078;
               $7079 = +HEAPF64[$j5array272>>3];
               $7080 = $7079 > 0.0;
               $$v70 = $7080 ? 3.14159265358979 : -3.14159265358979;
               $7081 = $$v70 - $7079;
               HEAPF64[$254>>3] = $7081;
               $7082 = +HEAPF64[$cj5array273>>3];
               $7083 = -$7082;
               HEAPF64[$255>>3] = $7083;
               $ij5276$01296 = 0;
              }
             } while(0);
             while(1) {
              $7092 = (($j5valid275) + ($ij5276$01296)|0);
              $7093 = HEAP8[$7092>>0]|0;
              $7094 = ($7093<<24>>24)==(0);
              do {
               if (!($7094)) {
                $7095 = $ij5276$01296&255;
                HEAP8[$4>>0] = $7095;
                HEAP8[$5>>0] = -1;
                $iij5277$01292 = (($ij5276$01296) + 1)|0;
                $7096 = ($iij5277$01292|0)<(2);
                do {
                 if ($7096) {
                  $7097 = (($sj5array274) + ($ij5276$01296<<3)|0);
                  $7098 = (($j5valid275) + ($iij5277$01292)|0);
                  $7099 = HEAP8[$7098>>0]|0;
                  $7100 = ($7099<<24>>24)==(0);
                  if ($7100) {
                   break;
                  }
                  $7101 = (($cj5array273) + ($ij5276$01296<<3)|0);
                  $7102 = +HEAPF64[$7101>>3];
                  $7103 = (($cj5array273) + ($iij5277$01292<<3)|0);
                  $7104 = +HEAPF64[$7103>>3];
                  $7105 = $7102 - $7104;
                  $7106 = (+__Z5IKabsd($7105));
                  $7107 = $7106 < 9.9999999999999995E-7;
                  if (!($7107)) {
                   break;
                  }
                  $7108 = +HEAPF64[$7097>>3];
                  $7109 = (($sj5array274) + ($iij5277$01292<<3)|0);
                  $7110 = +HEAPF64[$7109>>3];
                  $7111 = $7108 - $7110;
                  $7112 = (+__Z5IKabsd($7111));
                  $7113 = $7112 < 9.9999999999999995E-7;
                  if (!($7113)) {
                   break;
                  }
                  HEAP8[$7098>>0] = 0;
                  $7114 = $iij5277$01292&255;
                  HEAP8[$5>>0] = $7114;
                 }
                } while(0);
                $7115 = (($j5array272) + ($ij5276$01296<<3)|0);
                $7116 = +HEAPF64[$7115>>3];
                HEAPF64[$3>>3] = $7116;
                $7117 = (($cj5array273) + ($ij5276$01296<<3)|0);
                $7118 = +HEAPF64[$7117>>3];
                HEAPF64[$256>>3] = $7118;
                $7119 = (($sj5array274) + ($ij5276$01296<<3)|0);
                $7120 = +HEAPF64[$7119>>3];
                HEAPF64[$257>>3] = $7120;
                $7121 = +HEAPF64[$3>>3];
                $7122 = (+__Z5IKcosd($7121));
                $7123 = (+__Z5IKsind($7121));
                $7124 = +HEAPF64[$43>>3];
                $7125 = $7124 * $7124;
                $7126 = +HEAPF64[$45>>3];
                $7127 = $7126 * $7126;
                $7128 = $6996 * $7124;
                $7129 = $6996 * $7126;
                $7130 = $7124 * $6995;
                $7131 = $7126 * $6995;
                $7132 = $7123 * 0.77781745930520196;
                $7133 = $7122 * 0.70710678118654802;
                $7134 = $7122 * 0.58823529411764697;
                $7135 = $7134 * $7125;
                $7136 = +HEAPF64[$75>>3];
                $7137 = $7136 * -0.108264705882353;
                $7138 = $7122 * $7137;
                $7139 = $7138 - $7135;
                $7140 = $7134 * $7127;
                $7141 = $7139 - $7140;
                $7142 = $7122 * 0.316735294117647;
                $7143 = $7141 - $7142;
                $7144 = -$7130;
                $7145 = +HEAPF64[$76>>3];
                $7146 = $7145 * 0.044999999999999998;
                $7147 = $7123 * $7146;
                $7148 = $7136 * 0.29999999999999999;
                $7149 = $7123 * $7148;
                $7150 = $7149 + $7147;
                $7151 = $7131 * 0.70710678118654802;
                $7152 = $7150 - $7151;
                $7153 = $7128 * 0.70710678118654802;
                $7154 = $7152 - $7153;
                $7155 = $7129 * 0.70710678118654802;
                $7156 = $7154 - $7155;
                $7157 = $7123 * 0.55000000000000004;
                $7158 = $7157 + $7156;
                $7159 = $7130 * 0.70710678118654802;
                $7160 = $7159 + $7158;
                $7161 = $7130 * 0.063639610306789302;
                $7162 = -0.21249999999999999 - $7161;
                $7163 = $7128 * 0.063639610306789302;
                $7164 = $7162 - $7163;
                $7165 = $7164 - $7127;
                $7166 = $7165 - $7125;
                $7167 = $7129 * 0.063639610306789302;
                $7168 = $7167 + $7166;
                $7169 = $7131 * 0.063639610306789302;
                $7170 = $7168 - $7169;
                $7171 = $7132 * $7128;
                $7172 = $7171 + $7170;
                $7173 = $7132 * $7131;
                $7174 = $7173 + $7172;
                $7175 = $7132 * $7129;
                $7176 = $7175 + $7174;
                $7177 = $7132 * $7144;
                $7178 = $7177 + $7176;
                $7179 = (+__Z5IKabsd($7143));
                $7180 = $7179 > 5.0000000000000004E-6;
                if ($7180) {
                 break;
                }
                $7181 = $7133 * $7128;
                $7182 = $7133 * $7131;
                $7183 = $7181 + $7182;
                $7184 = $7133 * $7129;
                $7185 = $7184 + $7183;
                $7186 = $7133 * $7144;
                $7187 = $7186 + $7185;
                $7188 = (+__Z5IKabsd($7187));
                $7189 = $7188 > 5.0000000000000004E-6;
                if ($7189) {
                 break;
                }
                $7190 = (+__Z5IKabsd($7160));
                $7191 = $7190 > 5.0000000000000004E-6;
                if ($7191) {
                 break;
                }
                $7192 = (+__Z5IKabsd($7178));
                $7193 = $7192 > 5.0000000000000004E-6;
                if ($7193) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $7194 = (($ij5276$01296) + 1)|0;
              $exitcond1760 = ($7194|0)==(2);
              if ($exitcond1760) {
               break L960;
              } else {
               $ij5276$01296 = $7194;
              }
             }
            }
           } while(0);
           $7195 = +HEAPF64[$45>>3];
           $7196 = +HEAPF64[$43>>3];
           $7197 = $7195 + $7196;
           $7198 = $7195 - $7196;
           $7199 = $7198 * $7198;
           $7200 = $7197 * $7197;
           $7201 = $7199 + $7200;
           $7202 = (+__Z5IKabsd($7201));
           $7203 = $7202 == 0.0;
           do {
            if (!($7203)) {
             $7204 = (+Math_pow((+$7201),-0.5));
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1378,$7197,$7198,1.9999999999999999E-6);
             $7205 = HEAP8[$240>>0]|0;
             $7206 = ($7205<<24>>24)==(0);
             if ($7206) {
              break;
             }
             $7207 = $7197 * $7204;
             $7208 = $7198 * $7204;
             $7209 = -$7208;
             $7210 = +HEAPF64[$this>>3];
             $7211 = $7208 * -0.70710678118654802;
             $7212 = $7207 * 0.70710678118654802;
             $7213 = +HEAPF64[$45>>3];
             $7214 = +HEAPF64[$43>>3];
             $7215 = $7213 + $7214;
             $7216 = $7213 - $7214;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1385,$7215,$7216,1.9999999999999999E-6);
             $7217 = HEAP8[$241>>0]|0;
             $7218 = ($7217<<24>>24)==(0);
             if ($7218) {
              break;
             }
             $7219 = +HEAPF64[$x1385>>3];
             $7220 = +HEAPF64[$45>>3];
             $7221 = $7212 * $7220;
             $7222 = $7221 + 0.044999999999999998;
             $7223 = +HEAPF64[$75>>3];
             $7224 = $7223 * 0.044999999999999998;
             $7225 = $7222 - $7224;
             $7226 = +HEAPF64[$76>>3];
             $7227 = $7226 * 0.29999999999999999;
             $7228 = $7225 + $7227;
             $7229 = $7211 * $7220;
             $7230 = $7228 - $7229;
             $7231 = +HEAPF64[$43>>3];
             $7232 = $7212 * $7231;
             $7233 = $7232 + $7230;
             $7234 = $7211 * $7231;
             $7235 = $7234 + $7233;
             $7236 = $7210 * 3.14159265358979;
             $7237 = 9.8696044010893597 - $7236;
             $7238 = +HEAPF64[$this>>3];
             $7239 = $7219 * $7238;
             $7240 = $7237 + $7239;
             $7241 = $7238 * 3.14159265358979;
             $7242 = $7240 - $7241;
             $7243 = $7210 * $7219;
             $7244 = $7243 + $7242;
             $7245 = $7219 * -3.14159265358979;
             $7246 = $7245 + $7244;
             $7247 = $7245 + $7246;
             $7248 = $7210 * $7238;
             $7249 = $7248 + $7247;
             $7250 = $7219 * $7219;
             $7251 = $7250 + $7249;
             $7252 = $7251 < -1.0000000000000001E-5;
             if ($7252) {
              break;
             }
             $7253 = (+__Z6IKsqrtd($7251));
             $7254 = $7253 + 3.14159265358979;
             $7255 = (+__Z6IKfmoddd($7254,6.2831853071795898));
             $7256 = $7255 + -3.14159265358979;
             $7257 = (+__Z5IKabsd($7256));
             $7258 = $7257 < 9.9999999999999995E-7;
             if (!($7258)) {
              break;
             }
             $7259 = $7231 * $7231;
             $7260 = 0.39655000000000001 - $7259;
             $7261 = $7226 * 0.076499999999999999;
             $7262 = $7261 + $7260;
             $7263 = $7220 * $7220;
             $7264 = $7262 - $7263;
             $7265 = $7223 * 0.32595000000000002;
             $7266 = $7265 + $7264;
             $7267 = (+__Z5IKabsd($7266));
             $7268 = $7267 < 9.9999999999999995E-7;
             if (!($7268)) {
              break;
             }
             $7269 = (+__Z5IKabsd($7235));
             $7270 = $7269 < 9.9999999999999995E-7;
             if (!($7270)) {
              break;
             }
             HEAP16[$j5valid286>>1] = 0;
             HEAP8[$6>>0] = 2;
             $7271 = +HEAPF64[$45>>3];
             $7272 = $7212 * $7271;
             $7273 = $7211 * $7271;
             $7274 = $7272 + $7273;
             $7275 = +HEAPF64[$43>>3];
             $7276 = $7212 * $7275;
             $7277 = $7274 - $7276;
             $7278 = $7211 * $7275;
             $7279 = $7278 + $7277;
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1389,$7279,-1);
             $7280 = HEAP8[$242>>0]|0;
             $7281 = ($7280<<24>>24)==(0);
             if ($7281) {
              break L960;
             }
             $7282 = +HEAPF64[$x1389>>3];
             $7283 = +HEAPF64[$76>>3];
             $7284 = $7283 * 0.044999999999999998;
             $7285 = $7282 * $7284;
             $7286 = +HEAPF64[$75>>3];
             $7287 = $7286 * 0.29999999999999999;
             $7288 = $7282 * $7287;
             $7289 = $7285 + $7288;
             $7290 = $7282 * 0.55000000000000004;
             $7291 = $7290 + $7289;
             HEAPF64[$sj5array285>>3] = $7291;
             $7292 = !($7291 >= -1.0000020000000001);
             $7293 = !($7291 <= 1.0000020000000001);
             $or$cond203 = $7292 | $7293;
             do {
              if ($or$cond203) {
               $7303 = (__Z13__DOUBLE_BITSd($7291)|0);
               $7304 = tempRet0;
               $7305 = $7304 & 2147483647;
               $7306 = ($7305>>>0)>(2146435072);
               $7307 = ($7303>>>0)>(0);
               $7308 = ($7305|0)==(2146435072);
               $7309 = $7308 & $7307;
               $7310 = $7306 | $7309;
               if (!($7310)) {
                $ij5287$01301 = 0;
                break;
               }
               HEAP8[$j5valid286>>0] = 1;
               HEAPF64[$cj5array284>>3] = 1.0;
               HEAPF64[$sj5array285>>3] = 0.0;
               HEAPF64[$j5array283>>3] = 0.0;
               $ij5287$01301 = 0;
              } else {
               HEAP8[$243>>0] = 1;
               HEAP8[$j5valid286>>0] = 1;
               $7294 = +HEAPF64[$sj5array285>>3];
               $7295 = (+__Z6IKasind($7294));
               HEAPF64[$j5array283>>3] = $7295;
               $7296 = (+__Z5IKcosd($7295));
               HEAPF64[$cj5array284>>3] = $7296;
               $7297 = +HEAPF64[$sj5array285>>3];
               HEAPF64[$244>>3] = $7297;
               $7298 = +HEAPF64[$j5array283>>3];
               $7299 = $7298 > 0.0;
               $$v68 = $7299 ? 3.14159265358979 : -3.14159265358979;
               $7300 = $$v68 - $7298;
               HEAPF64[$245>>3] = $7300;
               $7301 = +HEAPF64[$cj5array284>>3];
               $7302 = -$7301;
               HEAPF64[$246>>3] = $7302;
               $ij5287$01301 = 0;
              }
             } while(0);
             while(1) {
              $7311 = (($j5valid286) + ($ij5287$01301)|0);
              $7312 = HEAP8[$7311>>0]|0;
              $7313 = ($7312<<24>>24)==(0);
              do {
               if (!($7313)) {
                $7314 = $ij5287$01301&255;
                HEAP8[$4>>0] = $7314;
                HEAP8[$5>>0] = -1;
                $iij5288$01297 = (($ij5287$01301) + 1)|0;
                $7315 = ($iij5288$01297|0)<(2);
                do {
                 if ($7315) {
                  $7316 = (($sj5array285) + ($ij5287$01301<<3)|0);
                  $7317 = (($j5valid286) + ($iij5288$01297)|0);
                  $7318 = HEAP8[$7317>>0]|0;
                  $7319 = ($7318<<24>>24)==(0);
                  if ($7319) {
                   break;
                  }
                  $7320 = (($cj5array284) + ($ij5287$01301<<3)|0);
                  $7321 = +HEAPF64[$7320>>3];
                  $7322 = (($cj5array284) + ($iij5288$01297<<3)|0);
                  $7323 = +HEAPF64[$7322>>3];
                  $7324 = $7321 - $7323;
                  $7325 = (+__Z5IKabsd($7324));
                  $7326 = $7325 < 9.9999999999999995E-7;
                  if (!($7326)) {
                   break;
                  }
                  $7327 = +HEAPF64[$7316>>3];
                  $7328 = (($sj5array285) + ($iij5288$01297<<3)|0);
                  $7329 = +HEAPF64[$7328>>3];
                  $7330 = $7327 - $7329;
                  $7331 = (+__Z5IKabsd($7330));
                  $7332 = $7331 < 9.9999999999999995E-7;
                  if (!($7332)) {
                   break;
                  }
                  HEAP8[$7317>>0] = 0;
                  $7333 = $iij5288$01297&255;
                  HEAP8[$5>>0] = $7333;
                 }
                } while(0);
                $7334 = (($j5array283) + ($ij5287$01301<<3)|0);
                $7335 = +HEAPF64[$7334>>3];
                HEAPF64[$3>>3] = $7335;
                $7336 = (($cj5array284) + ($ij5287$01301<<3)|0);
                $7337 = +HEAPF64[$7336>>3];
                HEAPF64[$247>>3] = $7337;
                $7338 = (($sj5array285) + ($ij5287$01301<<3)|0);
                $7339 = +HEAPF64[$7338>>3];
                HEAPF64[$248>>3] = $7339;
                $7340 = +HEAPF64[$3>>3];
                $7341 = (+__Z5IKcosd($7340));
                $7342 = (+__Z5IKsind($7340));
                $7343 = +HEAPF64[$43>>3];
                $7344 = $7343 * $7343;
                $7345 = +HEAPF64[$45>>3];
                $7346 = $7345 * $7345;
                $7347 = $7345 * 0.063639610306789302;
                $7348 = $7207 * $7343;
                $7349 = $7345 * $7209;
                $7350 = $7207 * $7345;
                $7351 = $7343 * $7209;
                $7352 = $7341 * 0.70710678118654802;
                $7353 = $7342 * 0.77781745930520196;
                $7354 = $7341 * 0.58823529411764697;
                $7355 = $7341 * -0.316735294117647;
                $7356 = $7354 * $7346;
                $7357 = $7355 - $7356;
                $7358 = $7354 * $7344;
                $7359 = $7357 - $7358;
                $7360 = +HEAPF64[$75>>3];
                $7361 = $7360 * -0.108264705882353;
                $7362 = $7341 * $7361;
                $7363 = $7362 + $7359;
                $7364 = -$7348;
                $7365 = $7360 * 0.29999999999999999;
                $7366 = $7342 * $7365;
                $7367 = $7348 * 0.70710678118654802;
                $7368 = $7367 + $7366;
                $7369 = $7342 * 0.55000000000000004;
                $7370 = $7369 + $7368;
                $7371 = $7351 * 0.70710678118654802;
                $7372 = $7370 - $7371;
                $7373 = $7349 * 0.70710678118654802;
                $7374 = $7372 - $7373;
                $7375 = $7350 * 0.70710678118654802;
                $7376 = $7374 - $7375;
                $7377 = +HEAPF64[$76>>3];
                $7378 = $7377 * 0.044999999999999998;
                $7379 = $7342 * $7378;
                $7380 = $7379 + $7376;
                $7381 = $7347 * $7209;
                $7382 = $7381 + -0.21249999999999999;
                $7383 = $7353 * $7350;
                $7384 = $7383 + $7382;
                $7385 = $7353 * $7349;
                $7386 = $7385 + $7384;
                $7387 = $7207 * $7347;
                $7388 = $7386 - $7387;
                $7389 = $7353 * $7351;
                $7390 = $7389 + $7388;
                $7391 = $7390 - $7346;
                $7392 = $7391 - $7344;
                $7393 = $7353 * $7364;
                $7394 = $7393 + $7392;
                $7395 = $7348 * 0.063639610306789302;
                $7396 = $7394 - $7395;
                $7397 = $7351 * 0.063639610306789302;
                $7398 = $7396 - $7397;
                $7399 = (+__Z5IKabsd($7363));
                $7400 = $7399 > 5.0000000000000004E-6;
                if ($7400) {
                 break;
                }
                $7401 = $7352 * $7351;
                $7402 = $7352 * $7364;
                $7403 = $7401 + $7402;
                $7404 = $7352 * $7349;
                $7405 = $7403 + $7404;
                $7406 = $7352 * $7350;
                $7407 = $7406 + $7405;
                $7408 = (+__Z5IKabsd($7407));
                $7409 = $7408 > 5.0000000000000004E-6;
                if ($7409) {
                 break;
                }
                $7410 = (+__Z5IKabsd($7380));
                $7411 = $7410 > 5.0000000000000004E-6;
                if ($7411) {
                 break;
                }
                $7412 = (+__Z5IKabsd($7398));
                $7413 = $7412 > 5.0000000000000004E-6;
                if ($7413) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $7414 = (($ij5287$01301) + 1)|0;
              $exitcond1761 = ($7414|0)==(2);
              if ($exitcond1761) {
               break L960;
              } else {
               $ij5287$01301 = $7414;
              }
             }
            }
           } while(0);
           $7415 = +HEAPF64[$75>>3];
           $7416 = $7415 * 0.044999999999999998;
           $7417 = 0.044999999999999998 - $7416;
           $7418 = +HEAPF64[$76>>3];
           $7419 = $7418 * 0.29999999999999999;
           $7420 = $7417 + $7419;
           $7421 = +HEAPF64[$43>>3];
           $7422 = (+__Z5IKabsd($7421));
           $7423 = +HEAPF64[$45>>3];
           $7424 = (+__Z5IKabsd($7423));
           $7425 = $7422 + $7424;
           $7426 = $7418 * 0.044999999999999998;
           $7427 = -0.55000000000000004 - $7426;
           $7428 = $7415 * 0.29999999999999999;
           $7429 = $7427 - $7428;
           $7430 = (+__Z5IKabsd($7425));
           $7431 = $7430 < 9.9999999999999995E-7;
           if (!($7431)) {
            break L960;
           }
           $7432 = $7418 * 0.076499999999999999;
           $7433 = $7432 + 0.39655000000000001;
           $7434 = $7415 * 0.32595000000000002;
           $7435 = $7434 + $7433;
           $7436 = (+__Z5IKabsd($7435));
           $7437 = $7436 < 9.9999999999999995E-7;
           if (!($7437)) {
            break L960;
           }
           $7438 = (+__Z5IKabsd($7420));
           $7439 = $7438 < 9.9999999999999995E-7;
           if (!($7439)) {
            break L960;
           }
           $7440 = (+__Z5IKabsd($7429));
           $7441 = $7440 < 9.9999999999999995E-7;
           if (!($7441)) {
            break L960;
           }
           $7442 = (+__Z5IKabsd(0.0));
           $7443 = $7442 < 9.9999999999999995E-7;
           if (!($7443)) {
            break L960;
           }
           $7444 = (+__Z5IKabsd(-0.21249999999999999));
           $7445 = $7444 < 9.9999999999999995E-7;
           if (!($7445)) {
            break L960;
           }
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = 1.5707963267949001;
           HEAPF64[$24>>3] = 1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$64>>3] = 0.0;
           HEAPF64[$65>>3] = 0.0;
           HEAPF64[$67>>3] = 0.0;
           HEAPF64[$68>>3] = 0.0;
           HEAPF64[$70>>3] = 0.0;
           HEAPF64[$71>>3] = 0.0;
           HEAPF64[$66>>3] = 0.0;
           HEAPF64[$69>>3] = 0.0;
           HEAPF64[$72>>3] = 0.0;
           ;HEAP32[$43>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;HEAP32[$43+12>>2]=0|0;
           ;HEAP32[$45>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;HEAP32[$45+12>>2]=0|0;
           ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
           $7446 = +HEAPF64[$75>>3];
           $7447 = $7446 + 2.92556370551481;
           $7448 = (+__Z5IKabsd($7447));
           $7449 = (+__Z5IKabsd($7448));
           $7450 = $7449 < 1.0E-8;
           if ($7450) {
            break L960;
           }
           HEAPF64[$op292>>3] = $7447;
           HEAPF64[$235>>3] = 0.0;
           $7451 = +HEAPF64[$75>>3];
           $7452 = -2.92556370551481 - $7451;
           HEAPF64[$236>>3] = $7452;
           __ZN8IKSolver10polyroots2EPdS0_Ri($op292,$zeror293,$numroots294);
           $7453 = HEAP32[$numroots294>>2]|0;
           $7454 = ($7453|0)>(0);
           if (!($7454)) {
            HEAP16[$j5valid303>>1] = 257;
            HEAP8[$6>>0] = 2;
            break L960;
           }
           $7455 = HEAP32[$numroots294>>2]|0;
           $7456 = ($7455|0)>(1);
           $numsolutions299$01305 = 0;
           while(1) {
            $7457 = (($zeror293) + ($numsolutions299$01305<<3)|0);
            $7458 = +HEAPF64[$7457>>3];
            $7459 = (+Math_atan((+$7458)));
            $7460 = $7459 * 2.0;
            $7461 = $7460 + 6.2831853071795898;
            $7462 = $7460 > 3.14159265358979;
            $7463 = (($j5array295) + ($numsolutions299$01305<<3)|0);
            HEAPF64[$7463>>3] = $7460;
            do {
             if ($7462) {
              $7464 = $7460 + -6.2831853071795898;
              HEAPF64[$7463>>3] = $7464;
             } else {
              $7465 = $7460 < -3.14159265358979;
              if (!($7465)) {
               break;
              }
              HEAPF64[$7463>>3] = $7461;
             }
            } while(0);
            $7466 = +HEAPF64[$7463>>3];
            $7467 = (+__Z5IKsind($7466));
            $7468 = (($sj5array297) + ($numsolutions299$01305<<3)|0);
            HEAPF64[$7468>>3] = $7467;
            $7469 = +HEAPF64[$7463>>3];
            $7470 = (+__Z5IKcosd($7469));
            $7471 = (($cj5array296) + ($numsolutions299$01305<<3)|0);
            HEAPF64[$7471>>3] = $7470;
            $7472 = (($numsolutions299$01305) + 1)|0;
            $7473 = ($7472|0)<($7455|0);
            if ($7473) {
             $numsolutions299$01305 = $7472;
            } else {
             break;
            }
           }
           $$1891 = $7456 ? $7455 : 1;
           HEAP16[$j5valid303>>1] = 257;
           HEAP8[$6>>0] = 2;
           $ij5304$01314 = 0;
           while(1) {
            $7474 = (($j5valid303) + ($ij5304$01314)|0);
            $7475 = HEAP8[$7474>>0]|0;
            $7476 = ($7475<<24>>24)==(0);
            if (!($7476)) {
             $7477 = (($j5array295) + ($ij5304$01314<<3)|0);
             $7478 = +HEAPF64[$7477>>3];
             HEAPF64[$3>>3] = $7478;
             $7479 = (($cj5array296) + ($ij5304$01314<<3)|0);
             $7480 = +HEAPF64[$7479>>3];
             HEAPF64[$237>>3] = $7480;
             $7481 = (($sj5array297) + ($ij5304$01314<<3)|0);
             $7482 = +HEAPF64[$7481>>3];
             HEAPF64[$238>>3] = $7482;
             $7483 = +HEAPF64[$3>>3];
             $7484 = $7483 * 0.5;
             $7485 = (+__Z5IKtand($7484));
             HEAPF64[$239>>3] = $7485;
             $7486 = $ij5304$01314&255;
             HEAP8[$4>>0] = $7486;
             HEAP8[$5>>0] = -1;
             $iij5305$01310 = (($ij5304$01314) + 1)|0;
             $7487 = ($iij5305$01310|0)<($$1891|0);
             L1149: do {
              if ($7487) {
               $iij5305$01311 = $iij5305$01310;
               L1150: while(1) {
                $7488 = (($j5valid303) + ($iij5305$01311)|0);
                $7489 = HEAP8[$7488>>0]|0;
                $7490 = ($7489<<24>>24)==(0);
                do {
                 if (!($7490)) {
                  $7492 = +HEAPF64[$7479>>3];
                  $7493 = (($cj5array296) + ($iij5305$01311<<3)|0);
                  $7494 = +HEAPF64[$7493>>3];
                  $7495 = $7492 - $7494;
                  $7496 = (+__Z5IKabsd($7495));
                  $7497 = $7496 < 9.9999999999999995E-7;
                  if (!($7497)) {
                   break;
                  }
                  $7498 = +HEAPF64[$7481>>3];
                  $7499 = (($sj5array297) + ($iij5305$01311<<3)|0);
                  $7500 = +HEAPF64[$7499>>3];
                  $7501 = $7498 - $7500;
                  $7502 = (+__Z5IKabsd($7501));
                  $7503 = $7502 < 9.9999999999999995E-7;
                  if ($7503) {
                   $$lcssa2044 = $7488;$iij5305$01311$lcssa = $iij5305$01311;
                   break L1150;
                  }
                 }
                } while(0);
                $iij5305$0 = (($iij5305$01311) + 1)|0;
                $7491 = ($iij5305$0|0)<($$1891|0);
                if ($7491) {
                 $iij5305$01311 = $iij5305$0;
                } else {
                 break L1149;
                }
               }
               HEAP8[$$lcssa2044>>0] = 0;
               $7504 = $iij5305$01311$lcssa&255;
               HEAP8[$5>>0] = $7504;
              }
             } while(0);
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
            $7505 = (($ij5304$01314) + 1)|0;
            $exitcond1763 = ($7505|0)==($$1891|0);
            if ($exitcond1763) {
             break L960;
            } else {
             $ij5304$01314 = $7505;
            }
           }
          }
         } while(0);
         $7807 = +HEAPF64[$76>>3];
         $7808 = $7807 * 0.29999999999999999;
         $7809 = +HEAPF64[$75>>3];
         $7810 = $7809 * 0.044999999999999998;
         $7811 = +HEAPF64[$45>>3];
         $7812 = $7811 * 0.70710678118654802;
         $7813 = +HEAPF64[$43>>3];
         $7814 = $7813 * 0.70710678118654802;
         $7815 = +HEAPF64[$233>>3];
         $7816 = $7812 * $7815;
         $7817 = $7815 * $7814;
         $7818 = +HEAPF64[$234>>3];
         $7819 = $7812 * $7818;
         $7820 = $7814 * $7818;
         $7821 = $7808 + $7816;
         $7822 = $7810 + $7820;
         $7823 = $7819 + $7822;
         $7824 = $7817 + $7823;
         $7825 = +HEAPF64[$47>>3];
         $7826 = (+__Z5IKabsd($7825));
         $7827 = +HEAPF64[$22>>3];
         $7828 = $7827 + 4.7123889803846897;
         $7829 = (+__Z6IKfmoddd($7828,6.2831853071795898));
         $7830 = $7829 + -3.14159265358979;
         $7831 = (+__Z5IKabsd($7830));
         $7832 = $7826 + $7831;
         $7833 = $7824 + -0.044999999999999998;
         $7834 = $7833 - $7821;
         $7835 = $7821 + 0.044999999999999998;
         $7836 = $7835 - $7824;
         $7837 = (+__Z5IKabsd($7832));
         $7838 = $7837 < 9.9999999999999995E-7;
         do {
          if ($7838) {
           $7839 = +HEAPF64[$60>>3];
           $7840 = $7807 * 0.076499999999999999;
           $7841 = $7840 + 0.39655000000000001;
           $7842 = $7841 - $7839;
           $7843 = $7809 * 0.32595000000000002;
           $7844 = $7843 + $7842;
           $7845 = (+__Z5IKabsd($7844));
           $7846 = $7845 < 9.9999999999999995E-7;
           if (!($7846)) {
            break;
           }
           $7847 = (+__Z5IKabsd($7834));
           $7848 = $7847 < 9.9999999999999995E-7;
           if (!($7848)) {
            break;
           }
           $7849 = (+__Z5IKabsd($7836));
           $7850 = $7849 < 9.9999999999999995E-7;
           if (!($7850)) {
            break;
           }
           $7851 = -$7811;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           $7852 = +HEAPF64[$43>>3];
           $7853 = $7852 * $7852;
           $7854 = +HEAPF64[$45>>3];
           $7855 = $7854 * $7854;
           $7856 = $7853 + $7855;
           HEAPF64[$60>>3] = $7856;
           $7857 = +HEAPF64[$43>>3];
           $7858 = +HEAPF64[$26>>3];
           $7859 = $7857 * $7858;
           $7860 = +HEAPF64[$45>>3];
           $7861 = +HEAPF64[$32>>3];
           $7862 = $7860 * $7861;
           $7863 = $7859 + $7862;
           HEAPF64[$61>>3] = $7863;
           $7864 = +HEAPF64[$43>>3];
           $7865 = +HEAPF64[$28>>3];
           $7866 = $7864 * $7865;
           $7867 = +HEAPF64[$45>>3];
           $7868 = +HEAPF64[$34>>3];
           $7869 = $7867 * $7868;
           $7870 = $7866 + $7869;
           HEAPF64[$62>>3] = $7870;
           $7871 = +HEAPF64[$43>>3];
           $7872 = +HEAPF64[$30>>3];
           $7873 = $7871 * $7872;
           $7874 = +HEAPF64[$45>>3];
           $7875 = +HEAPF64[$36>>3];
           $7876 = $7874 * $7875;
           $7877 = $7873 + $7876;
           HEAPF64[$63>>3] = $7877;
           $7878 = +HEAPF64[$38>>3];
           $7879 = $7878 * $7851;
           HEAPF64[$64>>3] = $7879;
           $7880 = +HEAPF64[$43>>3];
           $7881 = +HEAPF64[$38>>3];
           $7882 = $7880 * $7881;
           HEAPF64[$65>>3] = $7882;
           $7883 = +HEAPF64[$40>>3];
           $7884 = $7883 * $7851;
           HEAPF64[$67>>3] = $7884;
           $7885 = +HEAPF64[$43>>3];
           $7886 = +HEAPF64[$40>>3];
           $7887 = $7885 * $7886;
           HEAPF64[$68>>3] = $7887;
           $7888 = +HEAPF64[$42>>3];
           $7889 = $7888 * $7851;
           HEAPF64[$70>>3] = $7889;
           $7890 = +HEAPF64[$43>>3];
           $7891 = +HEAPF64[$42>>3];
           $7892 = $7890 * $7891;
           HEAPF64[$71>>3] = $7892;
           $7893 = +HEAPF64[$233>>3];
           $7894 = +HEAPF64[$45>>3];
           $7895 = $7893 * $7894;
           $7896 = +HEAPF64[$43>>3];
           $7897 = $7893 * $7896;
           $7898 = $7895 + $7897;
           $7899 = +HEAPF64[$234>>3];
           $7900 = $7896 * $7899;
           $7901 = $7898 - $7900;
           $7902 = $7894 * $7899;
           $7903 = $7902 + $7901;
           $7904 = (+__Z5IKabsd($7903));
           $7905 = $7904 < 9.9999999999999995E-7;
           if (!($7905)) {
            HEAP16[$j5valid374>>1] = 0;
            HEAP8[$6>>0] = 2;
            $8648 = +HEAPF64[$234>>3];
            $8649 = $8648 * 0.70710678118654802;
            $8650 = +HEAPF64[$233>>3];
            $8651 = $8650 * 0.70710678118654802;
            $8652 = +HEAPF64[$43>>3];
            $8653 = $8649 * $8652;
            $8654 = +HEAPF64[$45>>3];
            $8655 = $8651 * $8654;
            $8656 = $8655 - $8653;
            $8657 = $8652 * $8651;
            $8658 = $8657 + $8656;
            $8659 = $8649 * $8654;
            $8660 = $8659 + $8658;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1542,$8660,-1);
            $8661 = HEAP8[$302>>0]|0;
            $8662 = ($8661<<24>>24)==(0);
            if ($8662) {
             break L960;
            }
            $8663 = +HEAPF64[$x1542>>3];
            $8664 = +HEAPF64[$76>>3];
            $8665 = $8664 * 0.044999999999999998;
            $8666 = $8663 * $8665;
            $8667 = $8663 * 0.55000000000000004;
            $8668 = $8667 + $8666;
            $8669 = +HEAPF64[$75>>3];
            $8670 = $8669 * 0.29999999999999999;
            $8671 = $8663 * $8670;
            $8672 = $8668 + $8671;
            HEAPF64[$sj5array373>>3] = $8672;
            $8673 = !($8672 >= -1.0000020000000001);
            $8674 = !($8672 <= 1.0000020000000001);
            $or$cond233 = $8673 | $8674;
            do {
             if ($or$cond233) {
              $8684 = (__Z13__DOUBLE_BITSd($8672)|0);
              $8685 = tempRet0;
              $8686 = $8685 & 2147483647;
              $8687 = ($8686>>>0)>(2146435072);
              $8688 = ($8684>>>0)>(0);
              $8689 = ($8686|0)==(2146435072);
              $8690 = $8689 & $8688;
              $8691 = $8687 | $8690;
              if (!($8691)) {
               $ij5375$01251 = 0;
               break;
              }
              HEAP8[$j5valid374>>0] = 1;
              HEAPF64[$cj5array372>>3] = 1.0;
              HEAPF64[$sj5array373>>3] = 0.0;
              HEAPF64[$j5array371>>3] = 0.0;
              $ij5375$01251 = 0;
             } else {
              HEAP8[$303>>0] = 1;
              HEAP8[$j5valid374>>0] = 1;
              $8675 = +HEAPF64[$sj5array373>>3];
              $8676 = (+__Z6IKasind($8675));
              HEAPF64[$j5array371>>3] = $8676;
              $8677 = (+__Z5IKcosd($8676));
              HEAPF64[$cj5array372>>3] = $8677;
              $8678 = +HEAPF64[$sj5array373>>3];
              HEAPF64[$304>>3] = $8678;
              $8679 = +HEAPF64[$j5array371>>3];
              $8680 = $8679 > 0.0;
              $$v54 = $8680 ? 3.14159265358979 : -3.14159265358979;
              $8681 = $$v54 - $8679;
              HEAPF64[$305>>3] = $8681;
              $8682 = +HEAPF64[$cj5array372>>3];
              $8683 = -$8682;
              HEAPF64[$306>>3] = $8683;
              $ij5375$01251 = 0;
             }
            } while(0);
            while(1) {
             $8692 = (($j5valid374) + ($ij5375$01251)|0);
             $8693 = HEAP8[$8692>>0]|0;
             $8694 = ($8693<<24>>24)==(0);
             do {
              if (!($8694)) {
               $8695 = $ij5375$01251&255;
               HEAP8[$4>>0] = $8695;
               HEAP8[$5>>0] = -1;
               $iij5376$01247 = (($ij5375$01251) + 1)|0;
               $8696 = ($iij5376$01247|0)<(2);
               do {
                if ($8696) {
                 $8697 = (($sj5array373) + ($ij5375$01251<<3)|0);
                 $8698 = (($j5valid374) + ($iij5376$01247)|0);
                 $8699 = HEAP8[$8698>>0]|0;
                 $8700 = ($8699<<24>>24)==(0);
                 if ($8700) {
                  break;
                 }
                 $8701 = (($cj5array372) + ($ij5375$01251<<3)|0);
                 $8702 = +HEAPF64[$8701>>3];
                 $8703 = (($cj5array372) + ($iij5376$01247<<3)|0);
                 $8704 = +HEAPF64[$8703>>3];
                 $8705 = $8702 - $8704;
                 $8706 = (+__Z5IKabsd($8705));
                 $8707 = $8706 < 9.9999999999999995E-7;
                 if (!($8707)) {
                  break;
                 }
                 $8708 = +HEAPF64[$8697>>3];
                 $8709 = (($sj5array373) + ($iij5376$01247<<3)|0);
                 $8710 = +HEAPF64[$8709>>3];
                 $8711 = $8708 - $8710;
                 $8712 = (+__Z5IKabsd($8711));
                 $8713 = $8712 < 9.9999999999999995E-7;
                 if (!($8713)) {
                  break;
                 }
                 HEAP8[$8698>>0] = 0;
                 $8714 = $iij5376$01247&255;
                 HEAP8[$5>>0] = $8714;
                }
               } while(0);
               $8715 = (($j5array371) + ($ij5375$01251<<3)|0);
               $8716 = +HEAPF64[$8715>>3];
               HEAPF64[$3>>3] = $8716;
               $8717 = (($cj5array372) + ($ij5375$01251<<3)|0);
               $8718 = +HEAPF64[$8717>>3];
               HEAPF64[$307>>3] = $8718;
               $8719 = (($sj5array373) + ($ij5375$01251<<3)|0);
               $8720 = +HEAPF64[$8719>>3];
               HEAPF64[$308>>3] = $8720;
               $8721 = +HEAPF64[$3>>3];
               $8722 = (+__Z5IKcosd($8721));
               $8723 = (+__Z5IKsind($8721));
               $8724 = +HEAPF64[$43>>3];
               $8725 = $8724 * $8724;
               $8726 = +HEAPF64[$45>>3];
               $8727 = $8726 * $8726;
               $8728 = +HEAPF64[$233>>3];
               $8729 = $8726 * $8728;
               $8730 = +HEAPF64[$234>>3];
               $8731 = $8724 * $8730;
               $8732 = $8726 * $8730;
               $8733 = $8724 * $8728;
               $8734 = $8723 * 0.77781745930520196;
               $8735 = $8722 * 0.70710678118654802;
               $8736 = $8722 * 0.58823529411764697;
               $8737 = $8736 * $8727;
               $8738 = +HEAPF64[$75>>3];
               $8739 = $8738 * -0.108264705882353;
               $8740 = $8722 * $8739;
               $8741 = $8740 - $8737;
               $8742 = $8722 * 0.316735294117647;
               $8743 = $8741 - $8742;
               $8744 = $8736 * $8725;
               $8745 = $8743 - $8744;
               $8746 = +HEAPF64[$76>>3];
               $8747 = $8746 * 0.044999999999999998;
               $8748 = $8723 * $8747;
               $8749 = $8723 * 0.55000000000000004;
               $8750 = $8749 + $8748;
               $8751 = $8738 * 0.29999999999999999;
               $8752 = $8723 * $8751;
               $8753 = $8752 + $8750;
               $8754 = $8733 * 0.70710678118654802;
               $8755 = $8753 - $8754;
               $8756 = $8731 * 0.70710678118654802;
               $8757 = $8756 + $8755;
               $8758 = $8729 * 0.70710678118654802;
               $8759 = $8757 - $8758;
               $8760 = $8732 * 0.70710678118654802;
               $8761 = $8759 - $8760;
               $8762 = -0.21249999999999999 - $8725;
               $8763 = $8762 - $8727;
               $8764 = $8734 * $8729;
               $8765 = $8763 + $8764;
               $8766 = $8729 * 0.063639610306789302;
               $8767 = $8765 - $8766;
               $8768 = $8734 * $8733;
               $8769 = $8768 + $8767;
               $8770 = $8732 * 0.063639610306789302;
               $8771 = $8770 + $8769;
               $8772 = $8731 * 0.063639610306789302;
               $8773 = $8772 + $8771;
               $8774 = $8734 * $8731;
               $8775 = $8773 - $8774;
               $8776 = $8734 * $8732;
               $8777 = $8776 + $8775;
               $8778 = $8733 * 0.063639610306789302;
               $8779 = $8778 + $8777;
               $8780 = (+__Z5IKabsd($8745));
               $8781 = $8780 > 5.0000000000000004E-6;
               if ($8781) {
                break;
               }
               $8782 = $8735 * $8733;
               $8783 = -$8782;
               $8784 = $8735 * $8732;
               $8785 = $8783 - $8784;
               $8786 = $8735 * $8731;
               $8787 = $8786 + $8785;
               $8788 = $8735 * $8729;
               $8789 = $8787 - $8788;
               $8790 = (+__Z5IKabsd($8789));
               $8791 = $8790 > 5.0000000000000004E-6;
               if ($8791) {
                break;
               }
               $8792 = (+__Z5IKabsd($8761));
               $8793 = $8792 > 5.0000000000000004E-6;
               if ($8793) {
                break;
               }
               $8794 = (+__Z5IKabsd($8779));
               $8795 = $8794 > 5.0000000000000004E-6;
               if ($8795) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $8796 = (($ij5375$01251) + 1)|0;
             $exitcond1752 = ($8796|0)==(2);
             if ($exitcond1752) {
              break L960;
             } else {
              $ij5375$01251 = $8796;
             }
            }
           }
           $7906 = -$7894;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           $7907 = +HEAPF64[$43>>3];
           $7908 = $7907 * $7907;
           $7909 = +HEAPF64[$45>>3];
           $7910 = $7909 * $7909;
           $7911 = $7908 + $7910;
           HEAPF64[$60>>3] = $7911;
           $7912 = +HEAPF64[$43>>3];
           $7913 = +HEAPF64[$26>>3];
           $7914 = $7912 * $7913;
           $7915 = +HEAPF64[$45>>3];
           $7916 = +HEAPF64[$32>>3];
           $7917 = $7915 * $7916;
           $7918 = $7914 + $7917;
           HEAPF64[$61>>3] = $7918;
           $7919 = +HEAPF64[$43>>3];
           $7920 = +HEAPF64[$28>>3];
           $7921 = $7919 * $7920;
           $7922 = +HEAPF64[$45>>3];
           $7923 = +HEAPF64[$34>>3];
           $7924 = $7922 * $7923;
           $7925 = $7921 + $7924;
           HEAPF64[$62>>3] = $7925;
           $7926 = +HEAPF64[$43>>3];
           $7927 = +HEAPF64[$30>>3];
           $7928 = $7926 * $7927;
           $7929 = +HEAPF64[$45>>3];
           $7930 = +HEAPF64[$36>>3];
           $7931 = $7929 * $7930;
           $7932 = $7928 + $7931;
           HEAPF64[$63>>3] = $7932;
           $7933 = +HEAPF64[$38>>3];
           $7934 = $7933 * $7906;
           HEAPF64[$64>>3] = $7934;
           $7935 = +HEAPF64[$43>>3];
           $7936 = +HEAPF64[$38>>3];
           $7937 = $7935 * $7936;
           HEAPF64[$65>>3] = $7937;
           $7938 = +HEAPF64[$40>>3];
           $7939 = $7938 * $7906;
           HEAPF64[$67>>3] = $7939;
           $7940 = +HEAPF64[$43>>3];
           $7941 = +HEAPF64[$40>>3];
           $7942 = $7940 * $7941;
           HEAPF64[$68>>3] = $7942;
           $7943 = +HEAPF64[$42>>3];
           $7944 = $7943 * $7906;
           HEAPF64[$70>>3] = $7944;
           $7945 = +HEAPF64[$43>>3];
           $7946 = +HEAPF64[$42>>3];
           $7947 = $7945 * $7946;
           HEAPF64[$71>>3] = $7947;
           $7948 = +HEAPF64[$76>>3];
           $7949 = $7948 + 12.2222222222222;
           $7950 = +HEAPF64[$75>>3];
           $7951 = $7950 * 6.6666666666666696;
           $7952 = $7949 + $7951;
           $7953 = (+__Z5IKabsd($7952));
           $7954 = $7953 < 9.9999999999999995E-7;
           if (!($7954)) {
            HEAP16[$j5valid367>>1] = 0;
            HEAP8[$6>>0] = 2;
            $8497 = +HEAPF64[$76>>3];
            $8498 = $8497 * 0.044999999999999998;
            $8499 = $8498 + 0.55000000000000004;
            $8500 = +HEAPF64[$75>>3];
            $8501 = $8500 * 0.29999999999999999;
            $8502 = $8499 + $8501;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1524,$8502,-1);
            $8503 = HEAP8[$295>>0]|0;
            $8504 = ($8503<<24>>24)==(0);
            if ($8504) {
             break L960;
            }
            $8505 = +HEAPF64[$x1524>>3];
            $8506 = +HEAPF64[$234>>3];
            $8507 = $8506 * 0.70710678118654802;
            $8508 = $8505 * $8507;
            $8509 = +HEAPF64[$233>>3];
            $8510 = $8509 * 0.70710678118654802;
            $8511 = $8505 * $8510;
            $8512 = +HEAPF64[$43>>3];
            $8513 = $8512 * $8511;
            $8514 = $8512 * $8508;
            $8515 = $8513 - $8514;
            $8516 = +HEAPF64[$45>>3];
            $8517 = $8516 * $8511;
            $8518 = $8517 + $8515;
            $8519 = $8508 * $8516;
            $8520 = $8519 + $8518;
            HEAPF64[$sj5array366>>3] = $8520;
            $8521 = !($8520 >= -1.0000020000000001);
            $8522 = !($8520 <= 1.0000020000000001);
            $or$cond232 = $8521 | $8522;
            do {
             if ($or$cond232) {
              $8532 = (__Z13__DOUBLE_BITSd($8520)|0);
              $8533 = tempRet0;
              $8534 = $8533 & 2147483647;
              $8535 = ($8534>>>0)>(2146435072);
              $8536 = ($8532>>>0)>(0);
              $8537 = ($8534|0)==(2146435072);
              $8538 = $8537 & $8536;
              $8539 = $8535 | $8538;
              if (!($8539)) {
               $ij5368$01256 = 0;
               break;
              }
              HEAP8[$j5valid367>>0] = 1;
              HEAPF64[$cj5array365>>3] = 1.0;
              HEAPF64[$sj5array366>>3] = 0.0;
              HEAPF64[$j5array364>>3] = 0.0;
              $ij5368$01256 = 0;
             } else {
              HEAP8[$296>>0] = 1;
              HEAP8[$j5valid367>>0] = 1;
              $8523 = +HEAPF64[$sj5array366>>3];
              $8524 = (+__Z6IKasind($8523));
              HEAPF64[$j5array364>>3] = $8524;
              $8525 = (+__Z5IKcosd($8524));
              HEAPF64[$cj5array365>>3] = $8525;
              $8526 = +HEAPF64[$sj5array366>>3];
              HEAPF64[$297>>3] = $8526;
              $8527 = +HEAPF64[$j5array364>>3];
              $8528 = $8527 > 0.0;
              $$v56 = $8528 ? 3.14159265358979 : -3.14159265358979;
              $8529 = $$v56 - $8527;
              HEAPF64[$298>>3] = $8529;
              $8530 = +HEAPF64[$cj5array365>>3];
              $8531 = -$8530;
              HEAPF64[$299>>3] = $8531;
              $ij5368$01256 = 0;
             }
            } while(0);
            while(1) {
             $8540 = (($j5valid367) + ($ij5368$01256)|0);
             $8541 = HEAP8[$8540>>0]|0;
             $8542 = ($8541<<24>>24)==(0);
             do {
              if (!($8542)) {
               $8543 = $ij5368$01256&255;
               HEAP8[$4>>0] = $8543;
               HEAP8[$5>>0] = -1;
               $iij5369$01252 = (($ij5368$01256) + 1)|0;
               $8544 = ($iij5369$01252|0)<(2);
               do {
                if ($8544) {
                 $8545 = (($sj5array366) + ($ij5368$01256<<3)|0);
                 $8546 = (($j5valid367) + ($iij5369$01252)|0);
                 $8547 = HEAP8[$8546>>0]|0;
                 $8548 = ($8547<<24>>24)==(0);
                 if ($8548) {
                  break;
                 }
                 $8549 = (($cj5array365) + ($ij5368$01256<<3)|0);
                 $8550 = +HEAPF64[$8549>>3];
                 $8551 = (($cj5array365) + ($iij5369$01252<<3)|0);
                 $8552 = +HEAPF64[$8551>>3];
                 $8553 = $8550 - $8552;
                 $8554 = (+__Z5IKabsd($8553));
                 $8555 = $8554 < 9.9999999999999995E-7;
                 if (!($8555)) {
                  break;
                 }
                 $8556 = +HEAPF64[$8545>>3];
                 $8557 = (($sj5array366) + ($iij5369$01252<<3)|0);
                 $8558 = +HEAPF64[$8557>>3];
                 $8559 = $8556 - $8558;
                 $8560 = (+__Z5IKabsd($8559));
                 $8561 = $8560 < 9.9999999999999995E-7;
                 if (!($8561)) {
                  break;
                 }
                 HEAP8[$8546>>0] = 0;
                 $8562 = $iij5369$01252&255;
                 HEAP8[$5>>0] = $8562;
                }
               } while(0);
               $8563 = (($j5array364) + ($ij5368$01256<<3)|0);
               $8564 = +HEAPF64[$8563>>3];
               HEAPF64[$3>>3] = $8564;
               $8565 = (($cj5array365) + ($ij5368$01256<<3)|0);
               $8566 = +HEAPF64[$8565>>3];
               HEAPF64[$300>>3] = $8566;
               $8567 = (($sj5array366) + ($ij5368$01256<<3)|0);
               $8568 = +HEAPF64[$8567>>3];
               HEAPF64[$301>>3] = $8568;
               $8569 = +HEAPF64[$3>>3];
               $8570 = (+__Z5IKcosd($8569));
               $8571 = (+__Z5IKsind($8569));
               $8572 = +HEAPF64[$43>>3];
               $8573 = $8572 * $8572;
               $8574 = +HEAPF64[$45>>3];
               $8575 = $8574 * $8574;
               $8576 = +HEAPF64[$234>>3];
               $8577 = $8576 * 0.70710678118654802;
               $8578 = +HEAPF64[$233>>3];
               $8579 = $8574 * $8578;
               $8580 = $8576 * 0.77781745930520196;
               $8581 = $8576 * 0.063639610306789302;
               $8582 = $8578 * 0.70710678118654802;
               $8583 = $8570 * $8572;
               $8584 = $8571 * $8574;
               $8585 = $8571 * $8572;
               $8586 = $8570 * 0.58823529411764697;
               $8587 = $8571 * $8579;
               $8588 = $8570 * 0.316735294117647;
               $8589 = +HEAPF64[$75>>3];
               $8590 = $8589 * -0.108264705882353;
               $8591 = $8570 * $8590;
               $8592 = $8591 - $8588;
               $8593 = $8586 * $8575;
               $8594 = $8592 - $8593;
               $8595 = $8586 * $8573;
               $8596 = $8594 - $8595;
               $8597 = +HEAPF64[$76>>3];
               $8598 = $8597 * 0.044999999999999998;
               $8599 = -0.55000000000000004 - $8598;
               $8600 = $8585 * $8577;
               $8601 = $8599 - $8600;
               $8602 = $8589 * 0.29999999999999999;
               $8603 = $8601 - $8602;
               $8604 = $8584 * $8577;
               $8605 = $8604 + $8603;
               $8606 = $8587 * 0.70710678118654802;
               $8607 = $8606 + $8605;
               $8608 = $8585 * $8582;
               $8609 = $8608 + $8607;
               $8610 = $8587 * 0.77781745930520196;
               $8611 = $8610 + -0.21249999999999999;
               $8612 = $8585 * $8580;
               $8613 = $8611 - $8612;
               $8614 = $8578 * 0.77781745930520196;
               $8615 = $8585 * $8614;
               $8616 = $8615 + $8613;
               $8617 = $8584 * $8580;
               $8618 = $8617 + $8616;
               $8619 = $8578 * 0.063639610306789302;
               $8620 = $8572 * $8619;
               $8621 = $8620 + $8618;
               $8622 = $8579 * 0.063639610306789302;
               $8623 = $8621 - $8622;
               $8624 = $8572 * $8581;
               $8625 = $8624 + $8623;
               $8626 = $8574 * $8581;
               $8627 = $8626 + $8625;
               $8628 = $8627 - $8575;
               $8629 = $8628 - $8573;
               $8630 = (+__Z5IKabsd($8596));
               $8631 = $8630 > 5.0000000000000004E-6;
               if ($8631) {
                break;
               }
               $8632 = $8583 * $8577;
               $8633 = $8570 * $8574;
               $8634 = $8633 * $8577;
               $8635 = $8632 - $8634;
               $8636 = $8570 * -0.70710678118654802;
               $8637 = $8636 * $8579;
               $8638 = $8635 + $8637;
               $8639 = $8583 * $8582;
               $8640 = $8638 - $8639;
               $8641 = (+__Z5IKabsd($8640));
               $8642 = $8641 > 5.0000000000000004E-6;
               if ($8642) {
                break;
               }
               $8643 = (+__Z5IKabsd($8609));
               $8644 = $8643 > 5.0000000000000004E-6;
               if ($8644) {
                break;
               }
               $8645 = (+__Z5IKabsd($8629));
               $8646 = $8645 > 5.0000000000000004E-6;
               if ($8646) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $8647 = (($ij5368$01256) + 1)|0;
             $exitcond1753 = ($8647|0)==(2);
             if ($exitcond1753) {
              break L960;
             } else {
              $ij5368$01256 = $8647;
             }
            }
           }
           $7955 = +HEAPF64[$45>>3];
           $7956 = +HEAPF64[$43>>3];
           $7957 = $7955 + $7956;
           $7958 = $7955 - $7956;
           $7959 = $7958 * $7958;
           $7960 = $7957 * $7957;
           $7961 = $7959 + $7960;
           $7962 = (+__Z5IKabsd($7961));
           $7963 = $7962 == 0.0;
           do {
            if (!($7963)) {
             $7964 = (+Math_pow((+$7961),-0.5));
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1453,$7957,$7958,1.9999999999999999E-6);
             $7965 = HEAP8[$286>>0]|0;
             $7966 = ($7965<<24>>24)==(0);
             if ($7966) {
              break;
             }
             $7967 = $7957 * $7964;
             $7968 = -$7967;
             $7969 = $7958 * $7964;
             $7970 = +HEAPF64[$this>>3];
             $7971 = +HEAPF64[$76>>3];
             $7972 = +HEAPF64[$75>>3];
             $7973 = $7969 * 0.70710678118654802;
             $7974 = $7967 * -0.70710678118654802;
             $7975 = +HEAPF64[$45>>3];
             $7976 = +HEAPF64[$43>>3];
             $7977 = $7975 + $7976;
             $7978 = $7975 - $7976;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1467,$7977,$7978,1.9999999999999999E-6);
             $7979 = HEAP8[$287>>0]|0;
             $7980 = ($7979<<24>>24)==(0);
             if ($7980) {
              break;
             }
             $7981 = $7974 * $7976;
             $7982 = $7974 * $7975;
             $7983 = $7973 * $7976;
             $7984 = $7973 * $7975;
             $7985 = $7972 * 0.044999999999999998;
             $7986 = $7971 * 0.29999999999999999;
             $7987 = +HEAPF64[$x1467>>3];
             $7988 = $7986 + $7984;
             $7989 = $7982 + $7983;
             $7990 = $7981 + $7989;
             $7991 = $7985 + $7990;
             $7992 = +HEAPF64[$this>>3];
             $7993 = $7970 * $7992;
             $7994 = $7987 * $7987;
             $7995 = $7994 + $7993;
             $7996 = $7987 * $7992;
             $7997 = $7996 + $7995;
             $7998 = $7970 * $7987;
             $7999 = $7998 + $7997;
             $8000 = $7999 < -1.0000000000000001E-5;
             if ($8000) {
              break;
             }
             $8001 = (+__Z6IKsqrtd($7999));
             $8002 = $8001 + 3.14159265358979;
             $8003 = (+__Z6IKfmoddd($8002,6.2831853071795898));
             $8004 = $8003 + -3.14159265358979;
             $8005 = +HEAPF64[$43>>3];
             $8006 = +HEAPF64[$45>>3];
             $8007 = -0.044999999999999998 - $7988;
             $8008 = $8007 + $7991;
             $8009 = 0.044999999999999998 - $7991;
             $8010 = $7988 + $8009;
             $8011 = (+__Z5IKabsd($8004));
             $8012 = $8011 < 9.9999999999999995E-7;
             if (!($8012)) {
              break;
             }
             $8013 = +HEAPF64[$75>>3];
             $8014 = +HEAPF64[$76>>3];
             $8015 = $8005 * $8005;
             $8016 = 0.39655000000000001 - $8015;
             $8017 = $8014 * 0.076499999999999999;
             $8018 = $8016 + $8017;
             $8019 = $8006 * $8006;
             $8020 = $8018 - $8019;
             $8021 = $8013 * 0.32595000000000002;
             $8022 = $8021 + $8020;
             $8023 = (+__Z5IKabsd($8022));
             $8024 = $8023 < 9.9999999999999995E-7;
             if (!($8024)) {
              break;
             }
             $8025 = (+__Z5IKabsd($8008));
             $8026 = $8025 < 9.9999999999999995E-7;
             if (!($8026)) {
              break;
             }
             $8027 = (+__Z5IKabsd($8010));
             $8028 = $8027 < 9.9999999999999995E-7;
             if (!($8028)) {
              break;
             }
             HEAP16[$j5valid332>>1] = 0;
             HEAP8[$6>>0] = 2;
             $8029 = +HEAPF64[$43>>3];
             $8030 = $8029 * 0.70710678118654802;
             $8031 = +HEAPF64[$45>>3];
             $8032 = $8031 * 0.70710678118654802;
             $8033 = $8032 * $7968;
             $8034 = $7967 * $8030;
             $8035 = $8034 + $8033;
             $8036 = $7969 * $8032;
             $8037 = $8036 + $8035;
             $8038 = $7969 * $8030;
             $8039 = $8038 + $8037;
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1471,$8039,-1);
             $8040 = HEAP8[$288>>0]|0;
             $8041 = ($8040<<24>>24)==(0);
             if ($8041) {
              break L960;
             }
             $8042 = +HEAPF64[$x1471>>3];
             $8043 = +HEAPF64[$75>>3];
             $8044 = $8043 * 0.29999999999999999;
             $8045 = $8042 * $8044;
             $8046 = $8042 * 0.55000000000000004;
             $8047 = $8046 + $8045;
             $8048 = +HEAPF64[$76>>3];
             $8049 = $8048 * 0.044999999999999998;
             $8050 = $8042 * $8049;
             $8051 = $8047 + $8050;
             HEAPF64[$sj5array331>>3] = $8051;
             $8052 = !($8051 >= -1.0000020000000001);
             $8053 = !($8051 <= 1.0000020000000001);
             $or$cond220 = $8052 | $8053;
             do {
              if ($or$cond220) {
               $8063 = (__Z13__DOUBLE_BITSd($8051)|0);
               $8064 = tempRet0;
               $8065 = $8064 & 2147483647;
               $8066 = ($8065>>>0)>(2146435072);
               $8067 = ($8063>>>0)>(0);
               $8068 = ($8065|0)==(2146435072);
               $8069 = $8068 & $8067;
               $8070 = $8066 | $8069;
               if (!($8070)) {
                break;
               }
               HEAP8[$j5valid332>>0] = 1;
               HEAPF64[$cj5array330>>3] = 1.0;
               HEAPF64[$sj5array331>>3] = 0.0;
               HEAPF64[$j5array329>>3] = 0.0;
              } else {
               HEAP8[$289>>0] = 1;
               HEAP8[$j5valid332>>0] = 1;
               $8054 = +HEAPF64[$sj5array331>>3];
               $8055 = (+__Z6IKasind($8054));
               HEAPF64[$j5array329>>3] = $8055;
               $8056 = (+__Z5IKcosd($8055));
               HEAPF64[$cj5array330>>3] = $8056;
               $8057 = +HEAPF64[$sj5array331>>3];
               HEAPF64[$290>>3] = $8057;
               $8058 = +HEAPF64[$j5array329>>3];
               $8059 = $8058 > 0.0;
               $$v61 = $8059 ? 3.14159265358979 : -3.14159265358979;
               $8060 = $$v61 - $8058;
               HEAPF64[$291>>3] = $8060;
               $8061 = +HEAPF64[$cj5array330>>3];
               $8062 = -$8061;
               HEAPF64[$292>>3] = $8062;
              }
             } while(0);
             $8071 = -$7969;
             $ij5333$01261 = 0;
             while(1) {
              $8072 = (($j5valid332) + ($ij5333$01261)|0);
              $8073 = HEAP8[$8072>>0]|0;
              $8074 = ($8073<<24>>24)==(0);
              do {
               if (!($8074)) {
                $8075 = $ij5333$01261&255;
                HEAP8[$4>>0] = $8075;
                HEAP8[$5>>0] = -1;
                $iij5334$01257 = (($ij5333$01261) + 1)|0;
                $8076 = ($iij5334$01257|0)<(2);
                do {
                 if ($8076) {
                  $8077 = (($sj5array331) + ($ij5333$01261<<3)|0);
                  $8078 = (($j5valid332) + ($iij5334$01257)|0);
                  $8079 = HEAP8[$8078>>0]|0;
                  $8080 = ($8079<<24>>24)==(0);
                  if ($8080) {
                   break;
                  }
                  $8081 = (($cj5array330) + ($ij5333$01261<<3)|0);
                  $8082 = +HEAPF64[$8081>>3];
                  $8083 = (($cj5array330) + ($iij5334$01257<<3)|0);
                  $8084 = +HEAPF64[$8083>>3];
                  $8085 = $8082 - $8084;
                  $8086 = (+__Z5IKabsd($8085));
                  $8087 = $8086 < 9.9999999999999995E-7;
                  if (!($8087)) {
                   break;
                  }
                  $8088 = +HEAPF64[$8077>>3];
                  $8089 = (($sj5array331) + ($iij5334$01257<<3)|0);
                  $8090 = +HEAPF64[$8089>>3];
                  $8091 = $8088 - $8090;
                  $8092 = (+__Z5IKabsd($8091));
                  $8093 = $8092 < 9.9999999999999995E-7;
                  if (!($8093)) {
                   break;
                  }
                  HEAP8[$8078>>0] = 0;
                  $8094 = $iij5334$01257&255;
                  HEAP8[$5>>0] = $8094;
                 }
                } while(0);
                $8095 = (($j5array329) + ($ij5333$01261<<3)|0);
                $8096 = +HEAPF64[$8095>>3];
                HEAPF64[$3>>3] = $8096;
                $8097 = (($cj5array330) + ($ij5333$01261<<3)|0);
                $8098 = +HEAPF64[$8097>>3];
                HEAPF64[$293>>3] = $8098;
                $8099 = (($sj5array331) + ($ij5333$01261<<3)|0);
                $8100 = +HEAPF64[$8099>>3];
                HEAPF64[$294>>3] = $8100;
                $8101 = +HEAPF64[$3>>3];
                $8102 = (+__Z5IKcosd($8101));
                $8103 = (+__Z5IKsind($8101));
                $8104 = +HEAPF64[$43>>3];
                $8105 = $8104 * $8104;
                $8106 = +HEAPF64[$45>>3];
                $8107 = $8106 * $8106;
                $8108 = $8104 * $7968;
                $8109 = $8106 * 0.063639610306789302;
                $8110 = $7969 * $8104;
                $8111 = $8106 * 0.70710678118654802;
                $8112 = $8103 * 0.77781745930520196;
                $8113 = $8102 * 0.70710678118654802;
                $8114 = $8102 * 0.58823529411764697;
                $8115 = $8112 * $8106;
                $8116 = $8102 * $8111;
                $8117 = +HEAPF64[$75>>3];
                $8118 = $8117 * -0.108264705882353;
                $8119 = $8102 * $8118;
                $8120 = $8114 * $8105;
                $8121 = $8119 - $8120;
                $8122 = $8114 * $8107;
                $8123 = $8121 - $8122;
                $8124 = $8102 * 0.316735294117647;
                $8125 = $8123 - $8124;
                $8126 = $8117 * 0.29999999999999999;
                $8127 = $8103 * $8126;
                $8128 = $7967 * $8111;
                $8129 = $8128 + $8127;
                $8130 = $8103 * 0.55000000000000004;
                $8131 = $8130 + $8129;
                $8132 = $8111 * $8071;
                $8133 = $8132 + $8131;
                $8134 = +HEAPF64[$76>>3];
                $8135 = $8134 * 0.044999999999999998;
                $8136 = $8103 * $8135;
                $8137 = $8136 + $8133;
                $8138 = $8110 * 0.70710678118654802;
                $8139 = $8137 - $8138;
                $8140 = $8108 * 0.70710678118654802;
                $8141 = $8140 + $8139;
                $8142 = $7969 * $8115;
                $8143 = $8142 + -0.21249999999999999;
                $8144 = $8115 * $7968;
                $8145 = $8144 + $8143;
                $8146 = $8145 - $8105;
                $8147 = $8146 - $8107;
                $8148 = $8109 * $8071;
                $8149 = $8148 + $8147;
                $8150 = $8108 * 0.063639610306789302;
                $8151 = $8150 + $8149;
                $8152 = $8110 * 0.063639610306789302;
                $8153 = $8152 + $8151;
                $8154 = $8112 * $8110;
                $8155 = $8154 + $8153;
                $8156 = $8109 * $7968;
                $8157 = $8156 + $8155;
                $8158 = $8112 * $8108;
                $8159 = $8157 - $8158;
                $8160 = (+__Z5IKabsd($8125));
                $8161 = $8160 > 5.0000000000000004E-6;
                if ($8161) {
                 break;
                }
                $8162 = $8113 * $8108;
                $8163 = $8116 * $8071;
                $8164 = $8162 + $8163;
                $8165 = $7967 * $8116;
                $8166 = $8165 + $8164;
                $8167 = $8113 * $8110;
                $8168 = $8166 - $8167;
                $8169 = (+__Z5IKabsd($8168));
                $8170 = $8169 > 5.0000000000000004E-6;
                if ($8170) {
                 break;
                }
                $8171 = (+__Z5IKabsd($8141));
                $8172 = $8171 > 5.0000000000000004E-6;
                if ($8172) {
                 break;
                }
                $8173 = (+__Z5IKabsd($8159));
                $8174 = $8173 > 5.0000000000000004E-6;
                if ($8174) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $8175 = (($ij5333$01261) + 1)|0;
              $exitcond1754 = ($8175|0)==(2);
              if ($exitcond1754) {
               break L960;
              } else {
               $ij5333$01261 = $8175;
              }
             }
            }
           } while(0);
           $8176 = +HEAPF64[$45>>3];
           $8177 = +HEAPF64[$43>>3];
           $8178 = $8176 + $8177;
           $8179 = $8176 - $8177;
           $8180 = $8179 * $8179;
           $8181 = $8178 * $8178;
           $8182 = $8180 + $8181;
           $8183 = (+__Z5IKabsd($8182));
           $8184 = $8183 == 0.0;
           do {
            if (!($8184)) {
             $8185 = (+Math_pow((+$8182),-0.5));
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1489,$8178,$8179,1.9999999999999999E-6);
             $8186 = HEAP8[$277>>0]|0;
             $8187 = ($8186<<24>>24)==(0);
             if ($8187) {
              break;
             }
             $8188 = $8178 * $8185;
             $8189 = $8179 * $8185;
             $8190 = -$8189;
             $8191 = +HEAPF64[$this>>3];
             $8192 = +HEAPF64[$76>>3];
             $8193 = +HEAPF64[$75>>3];
             $8194 = $8189 * -0.70710678118654802;
             $8195 = $8188 * 0.70710678118654802;
             $8196 = +HEAPF64[$45>>3];
             $8197 = +HEAPF64[$43>>3];
             $8198 = $8196 + $8197;
             $8199 = $8196 - $8197;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1503,$8198,$8199,1.9999999999999999E-6);
             $8200 = HEAP8[$278>>0]|0;
             $8201 = ($8200<<24>>24)==(0);
             if ($8201) {
              break;
             }
             $8202 = $8195 * $8196;
             $8203 = $8195 * $8197;
             $8204 = $8194 * $8197;
             $8205 = $8194 * $8196;
             $8206 = $8193 * 0.044999999999999998;
             $8207 = $8192 * 0.29999999999999999;
             $8208 = +HEAPF64[$x1503>>3];
             $8209 = $8207 + $8205;
             $8210 = $8206 + $8204;
             $8211 = $8203 + $8210;
             $8212 = $8202 + $8211;
             $8213 = $8208 * $8208;
             $8214 = $8213 + 9.8696044010893597;
             $8215 = $8208 * -3.14159265358979;
             $8216 = $8215 + $8214;
             $8217 = +HEAPF64[$this>>3];
             $8218 = $8208 * $8217;
             $8219 = $8218 + $8216;
             $8220 = $8217 * 3.14159265358979;
             $8221 = $8219 - $8220;
             $8222 = $8191 * $8217;
             $8223 = $8222 + $8221;
             $8224 = $8191 * $8208;
             $8225 = $8224 + $8223;
             $8226 = $8191 * 3.14159265358979;
             $8227 = $8225 - $8226;
             $8228 = $8215 + $8227;
             $8229 = $8228 < -1.0000000000000001E-5;
             if ($8229) {
              break;
             }
             $8230 = (+__Z6IKsqrtd($8228));
             $8231 = $8230 + 3.14159265358979;
             $8232 = (+__Z6IKfmoddd($8231,6.2831853071795898));
             $8233 = $8232 + -3.14159265358979;
             $8234 = +HEAPF64[$43>>3];
             $8235 = +HEAPF64[$45>>3];
             $8236 = -0.044999999999999998 - $8209;
             $8237 = $8236 + $8212;
             $8238 = 0.044999999999999998 - $8212;
             $8239 = $8209 + $8238;
             $8240 = (+__Z5IKabsd($8233));
             $8241 = $8240 < 9.9999999999999995E-7;
             if (!($8241)) {
              break;
             }
             $8242 = +HEAPF64[$75>>3];
             $8243 = +HEAPF64[$76>>3];
             $8244 = $8234 * $8234;
             $8245 = 0.39655000000000001 - $8244;
             $8246 = $8243 * 0.076499999999999999;
             $8247 = $8245 + $8246;
             $8248 = $8235 * $8235;
             $8249 = $8247 - $8248;
             $8250 = $8242 * 0.32595000000000002;
             $8251 = $8250 + $8249;
             $8252 = (+__Z5IKabsd($8251));
             $8253 = $8252 < 9.9999999999999995E-7;
             if (!($8253)) {
              break;
             }
             $8254 = (+__Z5IKabsd($8237));
             $8255 = $8254 < 9.9999999999999995E-7;
             if (!($8255)) {
              break;
             }
             $8256 = (+__Z5IKabsd($8239));
             $8257 = $8256 < 9.9999999999999995E-7;
             if (!($8257)) {
              break;
             }
             HEAP16[$j5valid343>>1] = 0;
             HEAP8[$6>>0] = 2;
             $8258 = +HEAPF64[$45>>3];
             $8259 = $8258 * 0.70710678118654802;
             $8260 = +HEAPF64[$43>>3];
             $8261 = $8260 * 0.70710678118654802;
             $8262 = $8188 * $8259;
             $8263 = $8188 * $8261;
             $8264 = $8262 - $8263;
             $8265 = $8259 * $8190;
             $8266 = $8265 + $8264;
             $8267 = $8261 * $8190;
             $8268 = $8267 + $8266;
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1507,$8268,-1);
             $8269 = HEAP8[$279>>0]|0;
             $8270 = ($8269<<24>>24)==(0);
             if ($8270) {
              break L960;
             }
             $8271 = +HEAPF64[$x1507>>3];
             $8272 = $8271 * 0.55000000000000004;
             $8273 = +HEAPF64[$75>>3];
             $8274 = $8273 * 0.29999999999999999;
             $8275 = $8271 * $8274;
             $8276 = $8272 + $8275;
             $8277 = +HEAPF64[$76>>3];
             $8278 = $8277 * 0.044999999999999998;
             $8279 = $8271 * $8278;
             $8280 = $8276 + $8279;
             HEAPF64[$sj5array342>>3] = $8280;
             $8281 = !($8280 >= -1.0000020000000001);
             $8282 = !($8280 <= 1.0000020000000001);
             $or$cond225 = $8281 | $8282;
             do {
              if ($or$cond225) {
               $8292 = (__Z13__DOUBLE_BITSd($8280)|0);
               $8293 = tempRet0;
               $8294 = $8293 & 2147483647;
               $8295 = ($8294>>>0)>(2146435072);
               $8296 = ($8292>>>0)>(0);
               $8297 = ($8294|0)==(2146435072);
               $8298 = $8297 & $8296;
               $8299 = $8295 | $8298;
               if (!($8299)) {
                $ij5344$01266 = 0;
                break;
               }
               HEAP8[$j5valid343>>0] = 1;
               HEAPF64[$cj5array341>>3] = 1.0;
               HEAPF64[$sj5array342>>3] = 0.0;
               HEAPF64[$j5array340>>3] = 0.0;
               $ij5344$01266 = 0;
              } else {
               HEAP8[$280>>0] = 1;
               HEAP8[$j5valid343>>0] = 1;
               $8283 = +HEAPF64[$sj5array342>>3];
               $8284 = (+__Z6IKasind($8283));
               HEAPF64[$j5array340>>3] = $8284;
               $8285 = (+__Z5IKcosd($8284));
               HEAPF64[$cj5array341>>3] = $8285;
               $8286 = +HEAPF64[$sj5array342>>3];
               HEAPF64[$281>>3] = $8286;
               $8287 = +HEAPF64[$j5array340>>3];
               $8288 = $8287 > 0.0;
               $$v59 = $8288 ? 3.14159265358979 : -3.14159265358979;
               $8289 = $$v59 - $8287;
               HEAPF64[$282>>3] = $8289;
               $8290 = +HEAPF64[$cj5array341>>3];
               $8291 = -$8290;
               HEAPF64[$283>>3] = $8291;
               $ij5344$01266 = 0;
              }
             } while(0);
             while(1) {
              $8300 = (($j5valid343) + ($ij5344$01266)|0);
              $8301 = HEAP8[$8300>>0]|0;
              $8302 = ($8301<<24>>24)==(0);
              do {
               if (!($8302)) {
                $8303 = $ij5344$01266&255;
                HEAP8[$4>>0] = $8303;
                HEAP8[$5>>0] = -1;
                $iij5345$01262 = (($ij5344$01266) + 1)|0;
                $8304 = ($iij5345$01262|0)<(2);
                do {
                 if ($8304) {
                  $8305 = (($sj5array342) + ($ij5344$01266<<3)|0);
                  $8306 = (($j5valid343) + ($iij5345$01262)|0);
                  $8307 = HEAP8[$8306>>0]|0;
                  $8308 = ($8307<<24>>24)==(0);
                  if ($8308) {
                   break;
                  }
                  $8309 = (($cj5array341) + ($ij5344$01266<<3)|0);
                  $8310 = +HEAPF64[$8309>>3];
                  $8311 = (($cj5array341) + ($iij5345$01262<<3)|0);
                  $8312 = +HEAPF64[$8311>>3];
                  $8313 = $8310 - $8312;
                  $8314 = (+__Z5IKabsd($8313));
                  $8315 = $8314 < 9.9999999999999995E-7;
                  if (!($8315)) {
                   break;
                  }
                  $8316 = +HEAPF64[$8305>>3];
                  $8317 = (($sj5array342) + ($iij5345$01262<<3)|0);
                  $8318 = +HEAPF64[$8317>>3];
                  $8319 = $8316 - $8318;
                  $8320 = (+__Z5IKabsd($8319));
                  $8321 = $8320 < 9.9999999999999995E-7;
                  if (!($8321)) {
                   break;
                  }
                  HEAP8[$8306>>0] = 0;
                  $8322 = $iij5345$01262&255;
                  HEAP8[$5>>0] = $8322;
                 }
                } while(0);
                $8323 = (($j5array340) + ($ij5344$01266<<3)|0);
                $8324 = +HEAPF64[$8323>>3];
                HEAPF64[$3>>3] = $8324;
                $8325 = (($cj5array341) + ($ij5344$01266<<3)|0);
                $8326 = +HEAPF64[$8325>>3];
                HEAPF64[$284>>3] = $8326;
                $8327 = (($sj5array342) + ($ij5344$01266<<3)|0);
                $8328 = +HEAPF64[$8327>>3];
                HEAPF64[$285>>3] = $8328;
                $8329 = +HEAPF64[$3>>3];
                $8330 = (+__Z5IKcosd($8329));
                $8331 = (+__Z5IKsind($8329));
                $8332 = +HEAPF64[$43>>3];
                $8333 = $8332 * $8332;
                $8334 = +HEAPF64[$45>>3];
                $8335 = $8334 * $8334;
                $8336 = $8334 * $8190;
                $8337 = $8188 * $8332;
                $8338 = $8332 * $8190;
                $8339 = $8188 * $8334;
                $8340 = $8330 * 0.70710678118654802;
                $8341 = $8331 * 0.77781745930520196;
                $8342 = $8330 * 0.58823529411764697;
                $8343 = $8330 * -0.316735294117647;
                $8344 = $8342 * $8333;
                $8345 = $8343 - $8344;
                $8346 = +HEAPF64[$75>>3];
                $8347 = $8346 * -0.108264705882353;
                $8348 = $8330 * $8347;
                $8349 = $8345 + $8348;
                $8350 = $8342 * $8335;
                $8351 = $8349 - $8350;
                $8352 = $8331 * 0.55000000000000004;
                $8353 = $8338 * 0.70710678118654802;
                $8354 = $8352 - $8353;
                $8355 = $8339 * 0.70710678118654802;
                $8356 = $8354 - $8355;
                $8357 = $8336 * 0.70710678118654802;
                $8358 = $8356 - $8357;
                $8359 = $8346 * 0.29999999999999999;
                $8360 = $8331 * $8359;
                $8361 = $8360 + $8358;
                $8362 = $8337 * 0.70710678118654802;
                $8363 = $8362 + $8361;
                $8364 = +HEAPF64[$76>>3];
                $8365 = $8364 * 0.044999999999999998;
                $8366 = $8331 * $8365;
                $8367 = $8366 + $8363;
                $8368 = $8341 * $8338;
                $8369 = $8368 + -0.21249999999999999;
                $8370 = $8369 - $8333;
                $8371 = $8370 - $8335;
                $8372 = $8341 * $8337;
                $8373 = $8371 - $8372;
                $8374 = $8337 * 0.063639610306789302;
                $8375 = $8374 + $8373;
                $8376 = $8338 * 0.063639610306789302;
                $8377 = $8376 + $8375;
                $8378 = $8339 * 0.063639610306789302;
                $8379 = $8378 + $8377;
                $8380 = $8341 * $8339;
                $8381 = $8380 + $8379;
                $8382 = $8336 * 0.063639610306789302;
                $8383 = $8381 - $8382;
                $8384 = $8341 * $8336;
                $8385 = $8384 + $8383;
                $8386 = (+__Z5IKabsd($8351));
                $8387 = $8386 > 5.0000000000000004E-6;
                if ($8387) {
                 break;
                }
                $8388 = $8340 * $8337;
                $8389 = $8340 * $8339;
                $8390 = $8388 - $8389;
                $8391 = $8340 * $8338;
                $8392 = $8390 - $8391;
                $8393 = $8340 * $8336;
                $8394 = $8392 - $8393;
                $8395 = (+__Z5IKabsd($8394));
                $8396 = $8395 > 5.0000000000000004E-6;
                if ($8396) {
                 break;
                }
                $8397 = (+__Z5IKabsd($8367));
                $8398 = $8397 > 5.0000000000000004E-6;
                if ($8398) {
                 break;
                }
                $8399 = (+__Z5IKabsd($8385));
                $8400 = $8399 > 5.0000000000000004E-6;
                if ($8400) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $8401 = (($ij5344$01266) + 1)|0;
              $exitcond1755 = ($8401|0)==(2);
              if ($exitcond1755) {
               break L960;
              } else {
               $ij5344$01266 = $8401;
              }
             }
            }
           } while(0);
           $8402 = +HEAPF64[$76>>3];
           $8403 = $8402 * 0.29999999999999999;
           $8404 = +HEAPF64[$75>>3];
           $8405 = $8404 * 0.044999999999999998;
           $8406 = +HEAPF64[$43>>3];
           $8407 = (+__Z5IKabsd($8406));
           $8408 = +HEAPF64[$45>>3];
           $8409 = (+__Z5IKabsd($8408));
           $8410 = $8407 + $8409;
           $8411 = -0.044999999999999998 - $8403;
           $8412 = $8411 + $8405;
           $8413 = $8402 * 0.044999999999999998;
           $8414 = -0.55000000000000004 - $8413;
           $8415 = $8404 * 0.29999999999999999;
           $8416 = $8414 - $8415;
           $8417 = 0.044999999999999998 - $8405;
           $8418 = $8403 + $8417;
           $8419 = (+__Z5IKabsd($8410));
           $8420 = $8419 < 9.9999999999999995E-7;
           if (!($8420)) {
            break L960;
           }
           $8421 = $8402 * 0.076499999999999999;
           $8422 = $8421 + 0.39655000000000001;
           $8423 = $8404 * 0.32595000000000002;
           $8424 = $8422 + $8423;
           $8425 = (+__Z5IKabsd($8424));
           $8426 = $8425 < 9.9999999999999995E-7;
           if (!($8426)) {
            break L960;
           }
           $8427 = (+__Z5IKabsd($8412));
           $8428 = $8427 < 9.9999999999999995E-7;
           if (!($8428)) {
            break L960;
           }
           $8429 = (+__Z5IKabsd($8416));
           $8430 = $8429 < 9.9999999999999995E-7;
           if (!($8430)) {
            break L960;
           }
           $8431 = (+__Z5IKabsd(0.0));
           $8432 = $8431 < 9.9999999999999995E-7;
           if (!($8432)) {
            break L960;
           }
           $8433 = (+__Z5IKabsd($8418));
           $8434 = $8433 < 9.9999999999999995E-7;
           if (!($8434)) {
            break L960;
           }
           $8435 = (+__Z5IKabsd(-0.21249999999999999));
           $8436 = $8435 < 9.9999999999999995E-7;
           if (!($8436)) {
            break L960;
           }
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           HEAPF64[$64>>3] = 0.0;
           HEAPF64[$65>>3] = 0.0;
           HEAPF64[$67>>3] = 0.0;
           HEAPF64[$68>>3] = 0.0;
           HEAPF64[$70>>3] = 0.0;
           HEAPF64[$71>>3] = 0.0;
           HEAPF64[$66>>3] = 0.0;
           HEAPF64[$69>>3] = 0.0;
           HEAPF64[$72>>3] = 0.0;
           ;HEAP32[$43>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;HEAP32[$43+12>>2]=0|0;
           ;HEAP32[$45>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;HEAP32[$45+12>>2]=0|0;
           ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
           $8437 = +HEAPF64[$75>>3];
           $8438 = $8437 + 2.92556370551481;
           $8439 = (+__Z5IKabsd($8438));
           $8440 = (+__Z5IKabsd($8439));
           $8441 = $8440 < 1.0E-8;
           if ($8441) {
            break L960;
           }
           HEAPF64[$op349>>3] = $8438;
           HEAPF64[$272>>3] = 0.0;
           $8442 = +HEAPF64[$75>>3];
           $8443 = -2.92556370551481 - $8442;
           HEAPF64[$273>>3] = $8443;
           __ZN8IKSolver10polyroots2EPdS0_Ri($op349,$zeror350,$numroots351);
           $8444 = HEAP32[$numroots351>>2]|0;
           $8445 = ($8444|0)>(0);
           if (!($8445)) {
            HEAP16[$j5valid360>>1] = 257;
            HEAP8[$6>>0] = 2;
            break L960;
           }
           $8446 = HEAP32[$numroots351>>2]|0;
           $8447 = ($8446|0)>(1);
           $numsolutions356$01270 = 0;
           while(1) {
            $8448 = (($zeror350) + ($numsolutions356$01270<<3)|0);
            $8449 = +HEAPF64[$8448>>3];
            $8450 = (+Math_atan((+$8449)));
            $8451 = $8450 * 2.0;
            $8452 = $8451 + 6.2831853071795898;
            $8453 = $8451 > 3.14159265358979;
            $8454 = (($j5array352) + ($numsolutions356$01270<<3)|0);
            HEAPF64[$8454>>3] = $8451;
            do {
             if ($8453) {
              $8455 = $8451 + -6.2831853071795898;
              HEAPF64[$8454>>3] = $8455;
             } else {
              $8456 = $8451 < -3.14159265358979;
              if (!($8456)) {
               break;
              }
              HEAPF64[$8454>>3] = $8452;
             }
            } while(0);
            $8457 = +HEAPF64[$8454>>3];
            $8458 = (+__Z5IKsind($8457));
            $8459 = (($sj5array354) + ($numsolutions356$01270<<3)|0);
            HEAPF64[$8459>>3] = $8458;
            $8460 = +HEAPF64[$8454>>3];
            $8461 = (+__Z5IKcosd($8460));
            $8462 = (($cj5array353) + ($numsolutions356$01270<<3)|0);
            HEAPF64[$8462>>3] = $8461;
            $8463 = (($numsolutions356$01270) + 1)|0;
            $8464 = ($8463|0)<($8446|0);
            if ($8464) {
             $numsolutions356$01270 = $8463;
            } else {
             break;
            }
           }
           $$1892 = $8447 ? $8446 : 1;
           HEAP16[$j5valid360>>1] = 257;
           HEAP8[$6>>0] = 2;
           $ij5361$01279 = 0;
           while(1) {
            $8465 = (($j5valid360) + ($ij5361$01279)|0);
            $8466 = HEAP8[$8465>>0]|0;
            $8467 = ($8466<<24>>24)==(0);
            if (!($8467)) {
             $8468 = (($j5array352) + ($ij5361$01279<<3)|0);
             $8469 = +HEAPF64[$8468>>3];
             HEAPF64[$3>>3] = $8469;
             $8470 = (($cj5array353) + ($ij5361$01279<<3)|0);
             $8471 = +HEAPF64[$8470>>3];
             HEAPF64[$274>>3] = $8471;
             $8472 = (($sj5array354) + ($ij5361$01279<<3)|0);
             $8473 = +HEAPF64[$8472>>3];
             HEAPF64[$275>>3] = $8473;
             $8474 = +HEAPF64[$3>>3];
             $8475 = $8474 * 0.5;
             $8476 = (+__Z5IKtand($8475));
             HEAPF64[$276>>3] = $8476;
             $8477 = $ij5361$01279&255;
             HEAP8[$4>>0] = $8477;
             HEAP8[$5>>0] = -1;
             $iij5362$01275 = (($ij5361$01279) + 1)|0;
             $8478 = ($iij5362$01275|0)<($$1892|0);
             L1295: do {
              if ($8478) {
               $iij5362$01276 = $iij5362$01275;
               L1296: while(1) {
                $8479 = (($j5valid360) + ($iij5362$01276)|0);
                $8480 = HEAP8[$8479>>0]|0;
                $8481 = ($8480<<24>>24)==(0);
                do {
                 if (!($8481)) {
                  $8483 = +HEAPF64[$8470>>3];
                  $8484 = (($cj5array353) + ($iij5362$01276<<3)|0);
                  $8485 = +HEAPF64[$8484>>3];
                  $8486 = $8483 - $8485;
                  $8487 = (+__Z5IKabsd($8486));
                  $8488 = $8487 < 9.9999999999999995E-7;
                  if (!($8488)) {
                   break;
                  }
                  $8489 = +HEAPF64[$8472>>3];
                  $8490 = (($sj5array354) + ($iij5362$01276<<3)|0);
                  $8491 = +HEAPF64[$8490>>3];
                  $8492 = $8489 - $8491;
                  $8493 = (+__Z5IKabsd($8492));
                  $8494 = $8493 < 9.9999999999999995E-7;
                  if ($8494) {
                   $$lcssa2041 = $8479;$iij5362$01276$lcssa = $iij5362$01276;
                   break L1296;
                  }
                 }
                } while(0);
                $iij5362$0 = (($iij5362$01276) + 1)|0;
                $8482 = ($iij5362$0|0)<($$1892|0);
                if ($8482) {
                 $iij5362$01276 = $iij5362$0;
                } else {
                 break L1295;
                }
               }
               HEAP8[$$lcssa2041>>0] = 0;
               $8495 = $iij5362$01276$lcssa&255;
               HEAP8[$5>>0] = $8495;
              }
             } while(0);
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
            $8496 = (($ij5361$01279) + 1)|0;
            $exitcond1757 = ($8496|0)==($$1892|0);
            if ($exitcond1757) {
             break L960;
            } else {
             $ij5361$01279 = $8496;
            }
           }
          }
         } while(0);
         $8797 = +HEAPF64[$233>>3];
         $8798 = $8797 * 0.70710678118654802;
         $8799 = +HEAPF64[$234>>3];
         $8800 = $8799 * 0.70710678118654802;
         $8801 = +HEAPF64[$7>>3];
         $8802 = $8801 + 3.14159265358979;
         $8803 = (+__Z6IKfmoddd($8802,6.2831853071795898));
         $8804 = $8803 + -3.14159265358979;
         $8805 = (+__Z5IKabsd($8804));
         $8806 = +HEAPF64[$47>>3];
         $8807 = (+__Z5IKabsd($8806));
         $8808 = $8805 + $8807;
         $8809 = +HEAPF64[$45>>3];
         $8810 = $8798 * $8809;
         $8811 = $8800 * $8809;
         $8812 = $8811 - $8810;
         $8813 = +HEAPF64[$43>>3];
         $8814 = $8800 * $8813;
         $8815 = $8812 + $8814;
         $8816 = $8798 * $8813;
         $8817 = $8816 + $8815;
         $8818 = (+__Z5IKabsd($8808));
         $8819 = $8818 < 9.9999999999999995E-7;
         if (!($8819)) {
          break;
         }
         $8820 = +HEAPF64[$60>>3];
         $8821 = 0.72250000000000003 - $8820;
         $8822 = (+__Z5IKabsd($8821));
         $8823 = $8822 < 9.9999999999999995E-7;
         if (!($8823)) {
          break;
         }
         $8824 = (+__Z5IKabsd($8817));
         $8825 = $8824 < 9.9999999999999995E-7;
         if (!($8825)) {
          break;
         }
         $8826 = -$8809;
         HEAPF64[$47>>3] = 0.0;
         HEAPF64[$7>>3] = 0.0;
         HEAPF64[$76>>3] = 0.0;
         HEAPF64[$75>>3] = 1.0;
         $8827 = +HEAPF64[$43>>3];
         $8828 = $8827 * $8827;
         $8829 = +HEAPF64[$45>>3];
         $8830 = $8829 * $8829;
         $8831 = $8828 + $8830;
         HEAPF64[$60>>3] = $8831;
         $8832 = +HEAPF64[$43>>3];
         $8833 = +HEAPF64[$26>>3];
         $8834 = $8832 * $8833;
         $8835 = +HEAPF64[$45>>3];
         $8836 = +HEAPF64[$32>>3];
         $8837 = $8835 * $8836;
         $8838 = $8834 + $8837;
         HEAPF64[$61>>3] = $8838;
         $8839 = +HEAPF64[$43>>3];
         $8840 = +HEAPF64[$28>>3];
         $8841 = $8839 * $8840;
         $8842 = +HEAPF64[$45>>3];
         $8843 = +HEAPF64[$34>>3];
         $8844 = $8842 * $8843;
         $8845 = $8841 + $8844;
         HEAPF64[$62>>3] = $8845;
         $8846 = +HEAPF64[$43>>3];
         $8847 = +HEAPF64[$30>>3];
         $8848 = $8846 * $8847;
         $8849 = +HEAPF64[$45>>3];
         $8850 = +HEAPF64[$36>>3];
         $8851 = $8849 * $8850;
         $8852 = $8848 + $8851;
         HEAPF64[$63>>3] = $8852;
         $8853 = +HEAPF64[$38>>3];
         $8854 = $8853 * $8826;
         HEAPF64[$64>>3] = $8854;
         $8855 = +HEAPF64[$43>>3];
         $8856 = +HEAPF64[$38>>3];
         $8857 = $8855 * $8856;
         HEAPF64[$65>>3] = $8857;
         $8858 = +HEAPF64[$40>>3];
         $8859 = $8858 * $8826;
         HEAPF64[$67>>3] = $8859;
         $8860 = +HEAPF64[$43>>3];
         $8861 = +HEAPF64[$40>>3];
         $8862 = $8860 * $8861;
         HEAPF64[$68>>3] = $8862;
         $8863 = +HEAPF64[$42>>3];
         $8864 = $8863 * $8826;
         HEAPF64[$70>>3] = $8864;
         $8865 = +HEAPF64[$43>>3];
         $8866 = +HEAPF64[$42>>3];
         $8867 = $8865 * $8866;
         HEAPF64[$71>>3] = $8867;
         $8868 = +HEAPF64[$43>>3];
         $8869 = +HEAPF64[$24>>3];
         $8870 = $8868 * $8869;
         $8871 = +HEAPF64[$45>>3];
         $8872 = $8869 * $8871;
         $8873 = +HEAPF64[$234>>3];
         $8874 = $8873 * $8872;
         $8875 = $8870 * $8873;
         $8876 = $8874 - $8875;
         $8877 = +HEAPF64[$233>>3];
         $8878 = $8872 * $8877;
         $8879 = $8876 + $8878;
         $8880 = $8870 * $8877;
         $8881 = $8880 + $8879;
         $8882 = (+__Z5IKabsd($8881));
         $8883 = $8882 < 9.9999999999999995E-7;
         if (!($8883)) {
          HEAP8[$6>>0] = 1;
          $10858 = +HEAPF64[$45>>3];
          $10859 = $10858 * 0.70710678118654802;
          $10860 = +HEAPF64[$23>>3];
          $10861 = +HEAPF64[$234>>3];
          $10862 = $10860 * $10861;
          $10863 = +HEAPF64[$233>>3];
          $10864 = +HEAPF64[$24>>3];
          $10865 = $10863 * $10864;
          $10866 = $10860 * $10863;
          $10867 = +HEAPF64[$43>>3];
          $10868 = $10867 * 0.70710678118654802;
          $10869 = $10858 * 0.83189033080770302;
          $10870 = $10867 * 0.83189033080770302;
          $10871 = $10861 * $10864;
          $10872 = $10871 * $10868;
          $10873 = $10859 * $10865;
          $10874 = $10873 - $10872;
          $10875 = $10859 * $10871;
          $10876 = $10875 + $10874;
          $10877 = $10865 * $10868;
          $10878 = $10877 + $10876;
          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1766,$10878,-1);
          $10879 = HEAP8[$362>>0]|0;
          $10880 = ($10879<<24>>24)==(0);
          if ($10880) {
           break;
          }
          $10881 = +HEAPF64[$233>>3];
          $10882 = $10870 * $10881;
          $10883 = $10869 * $10881;
          $10884 = $10882 + $10883;
          $10885 = +HEAPF64[$234>>3];
          $10886 = $10869 * $10885;
          $10887 = $10884 + $10886;
          $10888 = $10870 * $10885;
          $10889 = $10887 - $10888;
          $10890 = (+__Z5IKabsd($10889));
          $10891 = $10890 < 1.9999999999999999E-6;
          do {
           if ($10891) {
            $10892 = +HEAPF64[$x1766>>3];
            $10893 = $10859 * $10862;
            $10894 = $10862 * $10868;
            $10895 = -$10894;
            $10896 = $10895 - $10893;
            $10897 = $10866 * $10868;
            $10898 = $10896 - $10897;
            $10899 = $10859 * $10866;
            $10900 = $10899 + $10898;
            $10901 = $10900 * $10892;
            $10902 = (+__Z5IKabsd($10901));
            $10903 = $10902 < 1.9999999999999999E-6;
            if (!($10903)) {
             break;
            }
            $10904 = (+__Z5IKsqrd($10889));
            $10905 = (+__Z5IKsqrd($10901));
            $10906 = $10904 + $10905;
            $10907 = $10906 + -1.0;
            $10908 = (+__Z5IKabsd($10907));
            $10909 = !($10908 <= 1.9999999999999999E-6);
            if (!($10909)) {
             break L960;
            }
           }
          } while(0);
          $10910 = +HEAPF64[$233>>3];
          $10911 = $10870 * $10910;
          $10912 = $10869 * $10910;
          $10913 = $10911 + $10912;
          $10914 = +HEAPF64[$234>>3];
          $10915 = $10869 * $10914;
          $10916 = $10913 + $10915;
          $10917 = $10870 * $10914;
          $10918 = $10916 - $10917;
          $10919 = +HEAPF64[$x1766>>3];
          $10920 = $10859 * $10862;
          $10921 = $10862 * $10868;
          $10922 = -$10921;
          $10923 = $10922 - $10920;
          $10924 = $10866 * $10868;
          $10925 = $10923 - $10924;
          $10926 = $10859 * $10866;
          $10927 = $10926 + $10925;
          $10928 = $10927 * $10919;
          $10929 = (+__Z7IKatan2dd($10918,$10928));
          $10930 = (+__Z5IKsind($10929));
          $10931 = (+__Z5IKcosd($10929));
          $10932 = $10929 > 3.14159265358979;
          do {
           if ($10932) {
            $10933 = $10929 + -6.2831853071795898;
            $10936 = $10933;
           } else {
            $10934 = $10929 < -3.14159265358979;
            if (!($10934)) {
             $10936 = $10929;
             break;
            }
            $10935 = $10929 + 6.2831853071795898;
            $10936 = $10935;
           }
          } while(0);
          HEAP8[$4>>0] = 0;
          HEAP8[$5>>0] = -1;
          HEAPF64[$3>>3] = $10936;
          HEAPF64[$363>>3] = $10931;
          HEAPF64[$364>>3] = $10930;
          $10937 = +HEAPF64[$3>>3];
          $10938 = (+__Z5IKsind($10937));
          $10939 = (+__Z5IKcosd($10937));
          $10940 = +HEAPF64[$233>>3];
          $10941 = +HEAPF64[$43>>3];
          $10942 = $10940 * $10941;
          $10943 = +HEAPF64[$234>>3];
          $10944 = $10941 * $10943;
          $10945 = +HEAPF64[$24>>3];
          $10946 = $10945 * 0.70710678118654802;
          $10947 = $10945 * 0.063639610306789302;
          $10948 = +HEAPF64[$45>>3];
          $10949 = $10940 * $10948;
          $10950 = $10943 * $10948;
          $10951 = $10949 * 0.70710678118654802;
          $10952 = +HEAPF64[$23>>3];
          $10953 = $10944 * $10952;
          $10954 = $10939 * 0.063639610306789302;
          $10955 = $10939 * 0.70710678118654802;
          $10956 = $10938 * 0.77781745930520196;
          $10957 = $10938 * 0.70710678118654802;
          $10958 = $10952 * 0.70710678118654802;
          $10959 = $10950 * $10958;
          $10960 = $10939 * -0.84999999999999998;
          $10961 = -$10944;
          $10962 = $10957 * $10961;
          $10963 = $10962 + -0.84999999999999998;
          $10964 = $10938 * $10951;
          $10965 = $10963 + $10964;
          $10966 = $10957 * $10950;
          $10967 = $10966 + $10965;
          $10968 = $10957 * $10942;
          $10969 = $10968 + $10967;
          $10970 = $10953 * 0.70710678118654802;
          $10971 = $10959 + $10970;
          $10972 = $10939 * $10942;
          $10973 = $10972 * $10946;
          $10974 = $10973 + $10971;
          $10975 = $10939 * $10944;
          $10976 = $10975 * $10946;
          $10977 = $10974 - $10976;
          $10978 = $10942 * $10958;
          $10979 = $10978 + $10977;
          $10980 = $10939 * $10946;
          $10981 = $10980 * $10949;
          $10982 = $10981 + $10979;
          $10983 = $10980 * $10950;
          $10984 = $10983 + $10982;
          $10985 = -$10952;
          $10986 = $10951 * $10985;
          $10987 = $10986 + $10984;
          $10988 = $10946 * $10950;
          $10989 = $10955 * $10953;
          $10990 = $10988 + $10989;
          $10991 = $10944 * $10946;
          $10992 = $10991 + $10990;
          $10993 = $10946 * $10949;
          $10994 = $10992 - $10993;
          $10995 = $10942 * $10985;
          $10996 = $10955 * $10995;
          $10997 = $10996 + $10994;
          $10998 = $10939 * $10985;
          $10999 = $10998 * $10951;
          $11000 = $10999 + $10997;
          $11001 = $10950 * $10985;
          $11002 = $10955 * $11001;
          $11003 = $11002 + $11000;
          $11004 = $10942 * $10946;
          $11005 = $11004 + $11003;
          $11006 = $10956 * $10961;
          $11007 = $11006 + -0.93500000000000005;
          $11008 = $10947 * $10950;
          $11009 = $11007 - $11008;
          $11010 = $10956 * $10950;
          $11011 = $11010 + $11009;
          $11012 = $10954 * $10953;
          $11013 = $11011 - $11012;
          $11014 = $10942 * $10952;
          $11015 = $10954 * $11014;
          $11016 = $11015 + $11013;
          $11017 = $10952 * $10950;
          $11018 = $10954 * $11017;
          $11019 = $11018 + $11016;
          $11020 = $10956 * $10942;
          $11021 = $11020 + $11019;
          $11022 = $10947 * $10961;
          $11023 = $11022 + $11021;
          $11024 = $10952 * $10949;
          $11025 = $10954 * $11024;
          $11026 = $11025 + $11023;
          $11027 = $10947 * $10949;
          $11028 = $11027 + $11026;
          $11029 = $10956 * $10949;
          $11030 = $11029 + $11028;
          $11031 = $10942 * $10947;
          $11032 = $11030 - $11031;
          $11033 = (+__Z5IKabsd($10960));
          $11034 = $11033 > 5.0000000000000004E-6;
          if ($11034) {
           break;
          }
          $11035 = $10938 * 0.84999999999999998;
          $11036 = $10944 * 0.70710678118654802;
          $11037 = $11035 + $11036;
          $11038 = $10950 * 0.70710678118654802;
          $11039 = $11037 - $11038;
          $11040 = $10942 * 0.70710678118654802;
          $11041 = $11039 - $11040;
          $11042 = $11041 - $10951;
          $11043 = (+__Z5IKabsd($11042));
          $11044 = $11043 > 5.0000000000000004E-6;
          if ($11044) {
           break;
          }
          $11045 = (+__Z5IKabsd($10969));
          $11046 = $11045 > 5.0000000000000004E-6;
          if ($11046) {
           break;
          }
          $11047 = (+__Z5IKabsd($10987));
          $11048 = $11047 > 5.0000000000000004E-6;
          if ($11048) {
           break;
          }
          $11049 = (+__Z5IKabsd($11005));
          $11050 = $11049 > 5.0000000000000004E-6;
          if ($11050) {
           break;
          }
          $11051 = (+__Z5IKabsd($11032));
          $11052 = $11051 > 5.0000000000000004E-6;
          if ($11052) {
           break;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break;
         }
         $8884 = -$8871;
         HEAPF64[$47>>3] = 0.0;
         HEAPF64[$7>>3] = 0.0;
         HEAPF64[$76>>3] = 0.0;
         HEAPF64[$75>>3] = 1.0;
         $8885 = +HEAPF64[$43>>3];
         $8886 = $8885 * $8885;
         $8887 = +HEAPF64[$45>>3];
         $8888 = $8887 * $8887;
         $8889 = $8886 + $8888;
         HEAPF64[$60>>3] = $8889;
         $8890 = +HEAPF64[$43>>3];
         $8891 = +HEAPF64[$26>>3];
         $8892 = $8890 * $8891;
         $8893 = +HEAPF64[$45>>3];
         $8894 = +HEAPF64[$32>>3];
         $8895 = $8893 * $8894;
         $8896 = $8892 + $8895;
         HEAPF64[$61>>3] = $8896;
         $8897 = +HEAPF64[$43>>3];
         $8898 = +HEAPF64[$28>>3];
         $8899 = $8897 * $8898;
         $8900 = +HEAPF64[$45>>3];
         $8901 = +HEAPF64[$34>>3];
         $8902 = $8900 * $8901;
         $8903 = $8899 + $8902;
         HEAPF64[$62>>3] = $8903;
         $8904 = +HEAPF64[$43>>3];
         $8905 = +HEAPF64[$30>>3];
         $8906 = $8904 * $8905;
         $8907 = +HEAPF64[$45>>3];
         $8908 = +HEAPF64[$36>>3];
         $8909 = $8907 * $8908;
         $8910 = $8906 + $8909;
         HEAPF64[$63>>3] = $8910;
         $8911 = +HEAPF64[$38>>3];
         $8912 = $8911 * $8884;
         HEAPF64[$64>>3] = $8912;
         $8913 = +HEAPF64[$43>>3];
         $8914 = +HEAPF64[$38>>3];
         $8915 = $8913 * $8914;
         HEAPF64[$65>>3] = $8915;
         $8916 = +HEAPF64[$40>>3];
         $8917 = $8916 * $8884;
         HEAPF64[$67>>3] = $8917;
         $8918 = +HEAPF64[$43>>3];
         $8919 = +HEAPF64[$40>>3];
         $8920 = $8918 * $8919;
         HEAPF64[$68>>3] = $8920;
         $8921 = +HEAPF64[$42>>3];
         $8922 = $8921 * $8884;
         HEAPF64[$70>>3] = $8922;
         $8923 = +HEAPF64[$43>>3];
         $8924 = +HEAPF64[$42>>3];
         $8925 = $8923 * $8924;
         HEAPF64[$71>>3] = $8925;
         $8926 = +HEAPF64[$23>>3];
         $8927 = +HEAPF64[$43>>3];
         $8928 = $8926 * $8927;
         $8929 = +HEAPF64[$233>>3];
         $8930 = +HEAPF64[$45>>3];
         $8931 = $8926 * $8930;
         $8932 = +HEAPF64[$234>>3];
         $8933 = $8928 * $8932;
         $8934 = $8928 * $8929;
         $8935 = $8933 - $8934;
         $8936 = $8932 * $8931;
         $8937 = $8935 - $8936;
         $8938 = $8929 * $8931;
         $8939 = $8937 - $8938;
         $8940 = (+__Z5IKabsd($8939));
         $8941 = $8940 < 9.9999999999999995E-7;
         if (!($8941)) {
          HEAP8[$6>>0] = 1;
          $10659 = +HEAPF64[$45>>3];
          $10660 = $10659 * 0.70710678118654802;
          $10661 = +HEAPF64[$23>>3];
          $10662 = +HEAPF64[$234>>3];
          $10663 = $10661 * $10662;
          $10664 = +HEAPF64[$233>>3];
          $10665 = +HEAPF64[$24>>3];
          $10666 = $10664 * $10665;
          $10667 = $10661 * $10664;
          $10668 = +HEAPF64[$43>>3];
          $10669 = $10668 * 0.70710678118654802;
          $10670 = $10659 * 0.83189033080770302;
          $10671 = $10668 * 0.83189033080770302;
          $10672 = -$10660;
          $10673 = $10663 * $10672;
          $10674 = $10667 * $10672;
          $10675 = $10673 + $10674;
          $10676 = $10663 * $10669;
          $10677 = $10675 + $10676;
          $10678 = $10667 * $10669;
          $10679 = $10677 - $10678;
          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1739,$10679,-1);
          $10680 = HEAP8[$359>>0]|0;
          $10681 = ($10680<<24>>24)==(0);
          if ($10681) {
           break;
          }
          $10682 = +HEAPF64[$234>>3];
          $10683 = $10670 * $10682;
          $10684 = $10671 * $10682;
          $10685 = $10683 - $10684;
          $10686 = +HEAPF64[$233>>3];
          $10687 = $10670 * $10686;
          $10688 = $10685 + $10687;
          $10689 = $10671 * $10686;
          $10690 = $10689 + $10688;
          $10691 = (+__Z5IKabsd($10690));
          $10692 = $10691 < 1.9999999999999999E-6;
          do {
           if ($10692) {
            $10693 = +HEAPF64[$x1739>>3];
            $10694 = $10666 * $10669;
            $10695 = +HEAPF64[$24>>3];
            $10696 = $10682 * $10695;
            $10697 = -$10696;
            $10698 = $10669 * $10697;
            $10699 = $10698 - $10694;
            $10700 = $10660 * $10697;
            $10701 = $10700 + $10699;
            $10702 = $10660 * $10666;
            $10703 = $10702 + $10701;
            $10704 = $10693 * $10703;
            $10705 = (+__Z5IKabsd($10704));
            $10706 = $10705 < 1.9999999999999999E-6;
            if (!($10706)) {
             break;
            }
            $10707 = (+__Z5IKsqrd($10690));
            $10708 = (+__Z5IKsqrd($10704));
            $10709 = $10707 + $10708;
            $10710 = $10709 + -1.0;
            $10711 = (+__Z5IKabsd($10710));
            $10712 = !($10711 <= 1.9999999999999999E-6);
            if (!($10712)) {
             break L960;
            }
           }
          } while(0);
          $10713 = +HEAPF64[$234>>3];
          $10714 = $10670 * $10713;
          $10715 = -$10713;
          $10716 = $10671 * $10715;
          $10717 = $10714 + $10716;
          $10718 = +HEAPF64[$233>>3];
          $10719 = $10670 * $10718;
          $10720 = $10717 + $10719;
          $10721 = $10671 * $10718;
          $10722 = $10721 + $10720;
          $10723 = +HEAPF64[$x1739>>3];
          $10724 = $10666 * $10669;
          $10725 = +HEAPF64[$24>>3];
          $10726 = $10725 * $10715;
          $10727 = $10669 * $10726;
          $10728 = $10727 - $10724;
          $10729 = $10660 * $10726;
          $10730 = $10729 + $10728;
          $10731 = $10660 * $10666;
          $10732 = $10731 + $10730;
          $10733 = $10723 * $10732;
          $10734 = (+__Z7IKatan2dd($10722,$10733));
          $10735 = (+__Z5IKsind($10734));
          $10736 = (+__Z5IKcosd($10734));
          $10737 = $10734 > 3.14159265358979;
          do {
           if ($10737) {
            $10738 = $10734 + -6.2831853071795898;
            $10741 = $10738;
           } else {
            $10739 = $10734 < -3.14159265358979;
            if (!($10739)) {
             $10741 = $10734;
             break;
            }
            $10740 = $10734 + 6.2831853071795898;
            $10741 = $10740;
           }
          } while(0);
          HEAP8[$4>>0] = 0;
          HEAP8[$5>>0] = -1;
          HEAPF64[$3>>3] = $10741;
          HEAPF64[$360>>3] = $10736;
          HEAPF64[$361>>3] = $10735;
          $10742 = +HEAPF64[$3>>3];
          $10743 = (+__Z5IKsind($10742));
          $10744 = (+__Z5IKcosd($10742));
          $10745 = +HEAPF64[$233>>3];
          $10746 = +HEAPF64[$43>>3];
          $10747 = $10745 * $10746;
          $10748 = +HEAPF64[$234>>3];
          $10749 = $10746 * $10748;
          $10750 = +HEAPF64[$24>>3];
          $10751 = $10750 * 0.70710678118654802;
          $10752 = $10750 * 0.063639610306789302;
          $10753 = +HEAPF64[$45>>3];
          $10754 = $10745 * $10753;
          $10755 = $10748 * $10753;
          $10756 = $10754 * 0.70710678118654802;
          $10757 = +HEAPF64[$23>>3];
          $10758 = $10749 * $10757;
          $10759 = $10744 * 0.063639610306789302;
          $10760 = $10744 * 0.70710678118654802;
          $10761 = $10743 * 0.77781745930520196;
          $10762 = $10743 * 0.70710678118654802;
          $10763 = $10757 * 0.70710678118654802;
          $10764 = $10755 * $10763;
          $10765 = $10744 * -0.84999999999999998;
          $10766 = $10762 * $10755;
          $10767 = $10766 + -0.84999999999999998;
          $10768 = $10762 * $10747;
          $10769 = $10768 + $10767;
          $10770 = $10743 * $10756;
          $10771 = $10770 + $10769;
          $10772 = -$10749;
          $10773 = $10762 * $10772;
          $10774 = $10773 + $10771;
          $10775 = $10747 * $10763;
          $10776 = $10758 * 0.70710678118654802;
          $10777 = $10775 + $10776;
          $10778 = $10764 + $10777;
          $10779 = $10744 * $10747;
          $10780 = $10779 * $10751;
          $10781 = $10780 + $10778;
          $10782 = -$10757;
          $10783 = $10756 * $10782;
          $10784 = $10783 + $10781;
          $10785 = $10744 * $10749;
          $10786 = $10785 * $10751;
          $10787 = $10784 - $10786;
          $10788 = $10744 * $10751;
          $10789 = $10788 * $10754;
          $10790 = $10789 + $10787;
          $10791 = $10788 * $10755;
          $10792 = $10791 + $10790;
          $10793 = $10760 * $10758;
          $10794 = $10751 * $10755;
          $10795 = $10794 + $10793;
          $10796 = $10755 * $10782;
          $10797 = $10760 * $10796;
          $10798 = $10797 + $10795;
          $10799 = $10747 * $10782;
          $10800 = $10760 * $10799;
          $10801 = $10800 + $10798;
          $10802 = $10744 * $10782;
          $10803 = $10802 * $10756;
          $10804 = $10803 + $10801;
          $10805 = $10747 * $10751;
          $10806 = $10805 + $10804;
          $10807 = $10751 * $10754;
          $10808 = $10806 - $10807;
          $10809 = $10749 * $10751;
          $10810 = $10809 + $10808;
          $10811 = $10761 * $10754;
          $10812 = $10811 + -0.93500000000000005;
          $10813 = $10761 * $10755;
          $10814 = $10813 + $10812;
          $10815 = $10752 * $10754;
          $10816 = $10815 + $10814;
          $10817 = $10759 * $10758;
          $10818 = $10816 - $10817;
          $10819 = $10752 * $10755;
          $10820 = $10818 - $10819;
          $10821 = $10747 * $10757;
          $10822 = $10759 * $10821;
          $10823 = $10822 + $10820;
          $10824 = $10761 * $10747;
          $10825 = $10824 + $10823;
          $10826 = $10757 * $10754;
          $10827 = $10759 * $10826;
          $10828 = $10827 + $10825;
          $10829 = $10757 * $10755;
          $10830 = $10759 * $10829;
          $10831 = $10830 + $10828;
          $10832 = $10761 * $10772;
          $10833 = $10832 + $10831;
          $10834 = $10747 * $10752;
          $10835 = $10833 - $10834;
          $10836 = $10752 * $10772;
          $10837 = $10836 + $10835;
          $10838 = (+__Z5IKabsd($10765));
          $10839 = $10838 > 5.0000000000000004E-6;
          if ($10839) {
           break;
          }
          $10840 = $10749 * 0.70710678118654802;
          $10841 = $10840 - $10756;
          $10842 = $10743 * 0.84999999999999998;
          $10843 = $10842 + $10841;
          $10844 = $10755 * 0.70710678118654802;
          $10845 = $10843 - $10844;
          $10846 = $10747 * 0.70710678118654802;
          $10847 = $10845 - $10846;
          $10848 = (+__Z5IKabsd($10847));
          $10849 = $10848 > 5.0000000000000004E-6;
          if ($10849) {
           break;
          }
          $10850 = (+__Z5IKabsd($10774));
          $10851 = $10850 > 5.0000000000000004E-6;
          if ($10851) {
           break;
          }
          $10852 = (+__Z5IKabsd($10792));
          $10853 = $10852 > 5.0000000000000004E-6;
          if ($10853) {
           break;
          }
          $10854 = (+__Z5IKabsd($10810));
          $10855 = $10854 > 5.0000000000000004E-6;
          if ($10855) {
           break;
          }
          $10856 = (+__Z5IKabsd($10837));
          $10857 = $10856 > 5.0000000000000004E-6;
          if ($10857) {
           break;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break;
         }
         $8942 = -$8930;
         HEAPF64[$47>>3] = 0.0;
         HEAPF64[$7>>3] = 0.0;
         HEAPF64[$76>>3] = 0.0;
         HEAPF64[$75>>3] = 1.0;
         $8943 = +HEAPF64[$43>>3];
         $8944 = $8943 * $8943;
         $8945 = +HEAPF64[$45>>3];
         $8946 = $8945 * $8945;
         $8947 = $8944 + $8946;
         HEAPF64[$60>>3] = $8947;
         $8948 = +HEAPF64[$43>>3];
         $8949 = +HEAPF64[$26>>3];
         $8950 = $8948 * $8949;
         $8951 = +HEAPF64[$45>>3];
         $8952 = +HEAPF64[$32>>3];
         $8953 = $8951 * $8952;
         $8954 = $8950 + $8953;
         HEAPF64[$61>>3] = $8954;
         $8955 = +HEAPF64[$43>>3];
         $8956 = +HEAPF64[$28>>3];
         $8957 = $8955 * $8956;
         $8958 = +HEAPF64[$45>>3];
         $8959 = +HEAPF64[$34>>3];
         $8960 = $8958 * $8959;
         $8961 = $8957 + $8960;
         HEAPF64[$62>>3] = $8961;
         $8962 = +HEAPF64[$43>>3];
         $8963 = +HEAPF64[$30>>3];
         $8964 = $8962 * $8963;
         $8965 = +HEAPF64[$45>>3];
         $8966 = +HEAPF64[$36>>3];
         $8967 = $8965 * $8966;
         $8968 = $8964 + $8967;
         HEAPF64[$63>>3] = $8968;
         $8969 = +HEAPF64[$38>>3];
         $8970 = $8969 * $8942;
         HEAPF64[$64>>3] = $8970;
         $8971 = +HEAPF64[$43>>3];
         $8972 = +HEAPF64[$38>>3];
         $8973 = $8971 * $8972;
         HEAPF64[$65>>3] = $8973;
         $8974 = +HEAPF64[$40>>3];
         $8975 = $8974 * $8942;
         HEAPF64[$67>>3] = $8975;
         $8976 = +HEAPF64[$43>>3];
         $8977 = +HEAPF64[$40>>3];
         $8978 = $8976 * $8977;
         HEAPF64[$68>>3] = $8978;
         $8979 = +HEAPF64[$42>>3];
         $8980 = $8979 * $8942;
         HEAPF64[$70>>3] = $8980;
         $8981 = +HEAPF64[$43>>3];
         $8982 = +HEAPF64[$42>>3];
         $8983 = $8981 * $8982;
         HEAPF64[$71>>3] = $8983;
         $8984 = +HEAPF64[$43>>3];
         $8985 = +HEAPF64[$24>>3];
         $8986 = $8984 * $8985;
         $8987 = +HEAPF64[$234>>3];
         $8988 = +HEAPF64[$45>>3];
         $8989 = $8987 * $8988;
         $8990 = +HEAPF64[$233>>3];
         $8991 = $8988 * $8990;
         $8992 = $8984 * $8990;
         $8993 = $8989 + $8992;
         $8994 = $8991 + $8993;
         $8995 = $8984 * $8987;
         $8996 = $8994 - $8995;
         $8997 = (+__Z5IKabsd($8996));
         $8998 = $8997 < 9.9999999999999995E-7;
         do {
          if (!($8998)) {
           $8999 = $8985 * $8989;
           $9000 = $8985 * $8991;
           $9001 = $8999 + $9000;
           $9002 = $8986 * $8990;
           $9003 = $9002 + $9001;
           $9004 = $8986 * $8987;
           $9005 = $9003 - $9004;
           $9006 = (+__Z5IKabsd($9005));
           $9007 = $9006 < 9.9999999999999995E-7;
           if ($9007) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $10471 = +HEAPF64[$45>>3];
           $10472 = +HEAPF64[$234>>3];
           $10473 = $10471 * $10472;
           $10474 = +HEAPF64[$23>>3];
           $10475 = $10474 * 0.70710678118654802;
           $10476 = +HEAPF64[$233>>3];
           $10477 = $10471 * $10476;
           $10478 = +HEAPF64[$43>>3];
           $10479 = $10476 * $10478;
           $10480 = $10472 * $10478;
           $10481 = +HEAPF64[$24>>3];
           $10482 = $10481 * 0.70710678118654802;
           $10483 = $10480 * 14.142135623731001;
           $10484 = $10479 * 14.142135623731001;
           $10485 = $10484 - $10483;
           $10486 = $10477 * 14.142135623731001;
           $10487 = $10486 + $10485;
           $10488 = $10473 * 14.142135623731001;
           $10489 = $10488 + $10487;
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1711,$10489,-1);
           $10490 = HEAP8[$355>>0]|0;
           $10491 = ($10490<<24>>24)==(0);
           if ($10491) {
            break L960;
           }
           $10492 = $10480 * $10482;
           $10493 = $10477 * $10482;
           $10494 = $10493 - $10492;
           $10495 = $10473 * $10482;
           $10496 = $10495 + $10494;
           $10497 = $10479 * $10482;
           $10498 = $10497 + $10496;
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1712,$10498,-1);
           $10499 = HEAP8[$356>>0]|0;
           $10500 = ($10499<<24>>24)==(0);
           if ($10500) {
            break L960;
           }
           $10501 = +HEAPF64[$x1711>>3];
           $10502 = $10501 * 17.0;
           $10503 = (+__Z5IKabsd($10502));
           $10504 = $10503 < 1.9999999999999999E-6;
           do {
            if ($10504) {
             $10505 = +HEAPF64[$x1712>>3];
             $10506 = $10475 * $10477;
             $10507 = $10473 * $10475;
             $10508 = $10506 - $10507;
             $10509 = -$10475;
             $10510 = $10480 * $10509;
             $10511 = $10508 + $10510;
             $10512 = $10479 * $10509;
             $10513 = $10512 + $10511;
             $10514 = $10513 * $10505;
             $10515 = (+__Z5IKabsd($10514));
             $10516 = $10515 < 1.9999999999999999E-6;
             if (!($10516)) {
              break;
             }
             $10517 = (+__Z5IKsqrd($10502));
             $10518 = (+__Z5IKsqrd($10514));
             $10519 = $10517 + $10518;
             $10520 = $10519 + -1.0;
             $10521 = (+__Z5IKabsd($10520));
             $10522 = !($10521 <= 1.9999999999999999E-6);
             if (!($10522)) {
              break L960;
             }
            }
           } while(0);
           $10523 = +HEAPF64[$x1711>>3];
           $10524 = $10523 * 17.0;
           $10525 = +HEAPF64[$x1712>>3];
           $10526 = $10475 * $10477;
           $10527 = $10473 * $10475;
           $10528 = $10526 - $10527;
           $10529 = -$10475;
           $10530 = $10480 * $10529;
           $10531 = $10528 + $10530;
           $10532 = $10479 * $10529;
           $10533 = $10532 + $10531;
           $10534 = $10533 * $10525;
           $10535 = (+__Z7IKatan2dd($10524,$10534));
           $10536 = (+__Z5IKsind($10535));
           $10537 = (+__Z5IKcosd($10535));
           $10538 = $10535 > 3.14159265358979;
           do {
            if ($10538) {
             $10539 = $10535 + -6.2831853071795898;
             $10542 = $10539;
            } else {
             $10540 = $10535 < -3.14159265358979;
             if (!($10540)) {
              $10542 = $10535;
              break;
             }
             $10541 = $10535 + 6.2831853071795898;
             $10542 = $10541;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $10542;
           HEAPF64[$357>>3] = $10537;
           HEAPF64[$358>>3] = $10536;
           $10543 = +HEAPF64[$3>>3];
           $10544 = (+__Z5IKsind($10543));
           $10545 = (+__Z5IKcosd($10543));
           $10546 = +HEAPF64[$233>>3];
           $10547 = +HEAPF64[$43>>3];
           $10548 = $10546 * $10547;
           $10549 = +HEAPF64[$234>>3];
           $10550 = $10547 * $10549;
           $10551 = +HEAPF64[$24>>3];
           $10552 = $10551 * 0.70710678118654802;
           $10553 = $10551 * 0.063639610306789302;
           $10554 = +HEAPF64[$45>>3];
           $10555 = $10546 * $10554;
           $10556 = $10549 * $10554;
           $10557 = $10555 * 0.70710678118654802;
           $10558 = +HEAPF64[$23>>3];
           $10559 = $10550 * $10558;
           $10560 = $10545 * 0.063639610306789302;
           $10561 = $10545 * 0.70710678118654802;
           $10562 = $10544 * 0.77781745930520196;
           $10563 = $10544 * 0.70710678118654802;
           $10564 = $10558 * 0.70710678118654802;
           $10565 = $10556 * $10564;
           $10566 = $10545 * -0.84999999999999998;
           $10567 = $10563 * $10548;
           $10568 = $10567 + -0.84999999999999998;
           $10569 = $10563 * $10556;
           $10570 = $10568 + $10569;
           $10571 = $10544 * $10557;
           $10572 = $10570 + $10571;
           $10573 = -$10550;
           $10574 = $10563 * $10573;
           $10575 = $10574 + $10572;
           $10576 = $10548 * $10564;
           $10577 = $10565 + $10576;
           $10578 = $10545 * $10552;
           $10579 = $10578 * $10556;
           $10580 = $10579 + $10577;
           $10581 = $10545 * $10550;
           $10582 = $10581 * $10552;
           $10583 = $10580 - $10582;
           $10584 = -$10558;
           $10585 = $10557 * $10584;
           $10586 = $10585 + $10583;
           $10587 = $10559 * 0.70710678118654802;
           $10588 = $10587 + $10586;
           $10589 = $10545 * $10548;
           $10590 = $10589 * $10552;
           $10591 = $10590 + $10588;
           $10592 = $10578 * $10555;
           $10593 = $10592 + $10591;
           $10594 = $10561 * $10559;
           $10595 = $10548 * $10584;
           $10596 = $10561 * $10595;
           $10597 = $10594 + $10596;
           $10598 = $10550 * $10552;
           $10599 = $10598 + $10597;
           $10600 = $10545 * $10584;
           $10601 = $10600 * $10557;
           $10602 = $10601 + $10599;
           $10603 = $10552 * $10556;
           $10604 = $10603 + $10602;
           $10605 = $10548 * $10552;
           $10606 = $10605 + $10604;
           $10607 = $10556 * $10584;
           $10608 = $10561 * $10607;
           $10609 = $10608 + $10606;
           $10610 = $10552 * $10555;
           $10611 = $10609 - $10610;
           $10612 = $10558 * $10555;
           $10613 = $10560 * $10612;
           $10614 = $10613 + -0.93500000000000005;
           $10615 = $10558 * $10556;
           $10616 = $10560 * $10615;
           $10617 = $10616 + $10614;
           $10618 = $10562 * $10548;
           $10619 = $10618 + $10617;
           $10620 = $10560 * $10559;
           $10621 = $10619 - $10620;
           $10622 = $10553 * $10573;
           $10623 = $10622 + $10621;
           $10624 = $10562 * $10556;
           $10625 = $10624 + $10623;
           $10626 = $10548 * $10558;
           $10627 = $10560 * $10626;
           $10628 = $10627 + $10625;
           $10629 = $10548 * $10553;
           $10630 = $10628 - $10629;
           $10631 = $10553 * $10556;
           $10632 = $10630 - $10631;
           $10633 = $10562 * $10555;
           $10634 = $10633 + $10632;
           $10635 = $10562 * $10573;
           $10636 = $10635 + $10634;
           $10637 = $10553 * $10555;
           $10638 = $10637 + $10636;
           $10639 = (+__Z5IKabsd($10566));
           $10640 = $10639 > 5.0000000000000004E-6;
           if ($10640) {
            break L960;
           }
           $10641 = $10544 * 0.84999999999999998;
           $10642 = $10548 * 0.70710678118654802;
           $10643 = $10641 - $10642;
           $10644 = $10550 * 0.70710678118654802;
           $10645 = $10643 + $10644;
           $10646 = $10556 * 0.70710678118654802;
           $10647 = $10645 - $10646;
           $10648 = $10647 - $10557;
           $10649 = (+__Z5IKabsd($10648));
           $10650 = $10649 > 5.0000000000000004E-6;
           if ($10650) {
            break L960;
           }
           $10651 = (+__Z5IKabsd($10575));
           $10652 = $10651 > 5.0000000000000004E-6;
           if ($10652) {
            break L960;
           }
           $10653 = (+__Z5IKabsd($10593));
           $10654 = $10653 > 5.0000000000000004E-6;
           if ($10654) {
            break L960;
           }
           $10655 = (+__Z5IKabsd($10611));
           $10656 = $10655 > 5.0000000000000004E-6;
           if ($10656) {
            break L960;
           }
           $10657 = (+__Z5IKabsd($10638));
           $10658 = $10657 > 5.0000000000000004E-6;
           if ($10658) {
            break L960;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L960;
          }
         } while(0);
         $9008 = +HEAPF64[$45>>3];
         $9009 = +HEAPF64[$43>>3];
         $9010 = $9008 + $9009;
         $9011 = $9008 - $9009;
         $9012 = $9011 * $9011;
         $9013 = $9010 * $9010;
         $9014 = $9012 + $9013;
         $9015 = (+__Z5IKabsd($9014));
         $9016 = $9015 == 0.0;
         do {
          if (!($9016)) {
           $9017 = (+Math_pow((+$9014),-0.5));
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1572,$9010,$9011,1.9999999999999999E-6);
           $9018 = HEAP8[$347>>0]|0;
           $9019 = ($9018<<24>>24)==(0);
           if ($9019) {
            break;
           }
           $9020 = $9010 * $9017;
           $9021 = -$9020;
           $9022 = $9011 * $9017;
           $9023 = +HEAPF64[$this>>3];
           $9024 = +HEAPF64[$45>>3];
           $9025 = $9024 * 0.70710678118654802;
           $9026 = +HEAPF64[$43>>3];
           $9027 = $9026 * 0.70710678118654802;
           $9028 = $9024 + $9026;
           $9029 = $9024 - $9026;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1578,$9028,$9029,1.9999999999999999E-6);
           $9030 = HEAP8[$348>>0]|0;
           $9031 = ($9030<<24>>24)==(0);
           if ($9031) {
            break;
           }
           $9032 = +HEAPF64[$x1578>>3];
           $9033 = $9032 * $9032;
           $9034 = $9023 * $9032;
           $9035 = $9033 + $9034;
           $9036 = +HEAPF64[$this>>3];
           $9037 = $9023 * $9036;
           $9038 = $9035 + $9037;
           $9039 = $9032 * $9036;
           $9040 = $9039 + $9038;
           $9041 = $9040 < -1.0000000000000001E-5;
           if ($9041) {
            break;
           }
           $9042 = (+__Z6IKsqrtd($9040));
           $9043 = $9042 + 3.14159265358979;
           $9044 = (+__Z6IKfmoddd($9043,6.2831853071795898));
           $9045 = $9044 + -3.14159265358979;
           $9046 = +HEAPF64[$43>>3];
           $9047 = +HEAPF64[$45>>3];
           $9048 = $9022 * $9027;
           $9049 = $9027 * $9021;
           $9050 = $9048 + $9049;
           $9051 = $9025 * $9021;
           $9052 = $9051 + $9050;
           $9053 = $9022 * $9025;
           $9054 = $9052 - $9053;
           $9055 = (+__Z5IKabsd($9045));
           $9056 = $9055 < 9.9999999999999995E-7;
           if (!($9056)) {
            break;
           }
           $9057 = $9046 * $9046;
           $9058 = 0.72250000000000003 - $9057;
           $9059 = $9047 * $9047;
           $9060 = $9058 - $9059;
           $9061 = (+__Z5IKabsd($9060));
           $9062 = $9061 < 9.9999999999999995E-7;
           if (!($9062)) {
            break;
           }
           $9063 = (+__Z5IKabsd($9054));
           $9064 = $9063 < 9.9999999999999995E-7;
           if (!($9064)) {
            break;
           }
           HEAP16[$j5valid390>>1] = 0;
           HEAP8[$6>>0] = 2;
           $9065 = +HEAPF64[$45>>3];
           $9066 = $9065 * 0.83189033080770302;
           $9067 = +HEAPF64[$43>>3];
           $9068 = $9067 * 0.83189033080770302;
           $9069 = $9022 * $9068;
           $9070 = $9022 * $9066;
           $9071 = $9070 + $9069;
           $9072 = $9066 * $9021;
           $9073 = $9072 + $9071;
           $9074 = $9020 * $9068;
           $9075 = $9074 + $9073;
           HEAPF64[$sj5array389>>3] = $9075;
           $9076 = !($9075 >= -1.0000020000000001);
           $9077 = !($9075 <= 1.0000020000000001);
           $or$cond241 = $9076 | $9077;
           do {
            if ($or$cond241) {
             $9087 = (__Z13__DOUBLE_BITSd($9075)|0);
             $9088 = tempRet0;
             $9089 = $9088 & 2147483647;
             $9090 = ($9089>>>0)>(2146435072);
             $9091 = ($9087>>>0)>(0);
             $9092 = ($9089|0)==(2146435072);
             $9093 = $9092 & $9091;
             $9094 = $9090 | $9093;
             if (!($9094)) {
              $ij5391$01180 = 0;
              break;
             }
             HEAP8[$j5valid390>>0] = 1;
             HEAPF64[$cj5array388>>3] = 1.0;
             HEAPF64[$sj5array389>>3] = 0.0;
             HEAPF64[$j5array387>>3] = 0.0;
             $ij5391$01180 = 0;
            } else {
             HEAP8[$349>>0] = 1;
             HEAP8[$j5valid390>>0] = 1;
             $9078 = +HEAPF64[$sj5array389>>3];
             $9079 = (+__Z6IKasind($9078));
             HEAPF64[$j5array387>>3] = $9079;
             $9080 = (+__Z5IKcosd($9079));
             HEAPF64[$cj5array388>>3] = $9080;
             $9081 = +HEAPF64[$sj5array389>>3];
             HEAPF64[$350>>3] = $9081;
             $9082 = +HEAPF64[$j5array387>>3];
             $9083 = $9082 > 0.0;
             $$v52 = $9083 ? 3.14159265358979 : -3.14159265358979;
             $9084 = $$v52 - $9082;
             HEAPF64[$351>>3] = $9084;
             $9085 = +HEAPF64[$cj5array388>>3];
             $9086 = -$9085;
             HEAPF64[$352>>3] = $9086;
             $ij5391$01180 = 0;
            }
           } while(0);
           while(1) {
            $9095 = (($j5valid390) + ($ij5391$01180)|0);
            $9096 = HEAP8[$9095>>0]|0;
            $9097 = ($9096<<24>>24)==(0);
            do {
             if (!($9097)) {
              $9098 = $ij5391$01180&255;
              HEAP8[$4>>0] = $9098;
              HEAP8[$5>>0] = -1;
              $iij5392$01177 = (($ij5391$01180) + 1)|0;
              $9099 = ($iij5392$01177|0)<(2);
              do {
               if ($9099) {
                $9100 = (($sj5array389) + ($ij5391$01180<<3)|0);
                $9101 = (($j5valid390) + ($iij5392$01177)|0);
                $9102 = HEAP8[$9101>>0]|0;
                $9103 = ($9102<<24>>24)==(0);
                if ($9103) {
                 break;
                }
                $9104 = (($cj5array388) + ($ij5391$01180<<3)|0);
                $9105 = +HEAPF64[$9104>>3];
                $9106 = (($cj5array388) + ($iij5392$01177<<3)|0);
                $9107 = +HEAPF64[$9106>>3];
                $9108 = $9105 - $9107;
                $9109 = (+__Z5IKabsd($9108));
                $9110 = $9109 < 9.9999999999999995E-7;
                if (!($9110)) {
                 break;
                }
                $9111 = +HEAPF64[$9100>>3];
                $9112 = (($sj5array389) + ($iij5392$01177<<3)|0);
                $9113 = +HEAPF64[$9112>>3];
                $9114 = $9111 - $9113;
                $9115 = (+__Z5IKabsd($9114));
                $9116 = $9115 < 9.9999999999999995E-7;
                if (!($9116)) {
                 break;
                }
                HEAP8[$9101>>0] = 0;
                $9117 = $iij5392$01177&255;
                HEAP8[$5>>0] = $9117;
               }
              } while(0);
              $9118 = (($j5array387) + ($ij5391$01180<<3)|0);
              $9119 = +HEAPF64[$9118>>3];
              HEAPF64[$3>>3] = $9119;
              $9120 = (($cj5array388) + ($ij5391$01180<<3)|0);
              $9121 = +HEAPF64[$9120>>3];
              HEAPF64[$353>>3] = $9121;
              $9122 = (($sj5array389) + ($ij5391$01180<<3)|0);
              $9123 = +HEAPF64[$9122>>3];
              HEAPF64[$354>>3] = $9123;
              $9124 = +HEAPF64[$3>>3];
              $9125 = (+__Z5IKsind($9124));
              $9126 = (+__Z5IKcosd($9124));
              $9127 = +HEAPF64[$24>>3];
              $9128 = $9127 * 0.70710678118654802;
              $9129 = +HEAPF64[$45>>3];
              $9130 = $9129 * $9021;
              $9131 = +HEAPF64[$43>>3];
              $9132 = $9022 * $9131;
              $9133 = +HEAPF64[$23>>3];
              $9134 = $9133 * 0.70710678118654802;
              $9135 = $9131 * $9021;
              $9136 = $9127 * 0.063639610306789302;
              $9137 = $9022 * $9129;
              $9138 = $9125 * 0.77781745930520196;
              $9139 = $9125 * 0.70710678118654802;
              $9140 = $9133 * 0.063639610306789302;
              $9141 = $9126 * $9140;
              $9142 = $9126 * -0.84999999999999998;
              $9143 = -$9135;
              $9144 = $9135 * $9134;
              $9145 = $9130 * $9134;
              $9146 = $9144 + $9145;
              $9147 = -$9126;
              $9148 = $9128 * $9147;
              $9149 = $9148 * $9135;
              $9150 = $9149 + $9146;
              $9151 = $9137 * $9134;
              $9152 = $9150 - $9151;
              $9153 = $9132 * $9134;
              $9154 = $9153 + $9152;
              $9155 = $9126 * $9128;
              $9156 = $9155 * $9130;
              $9157 = $9156 + $9154;
              $9158 = $9155 * $9132;
              $9159 = $9158 + $9157;
              $9160 = $9155 * $9137;
              $9161 = $9160 + $9159;
              $9162 = $9134 * $9147;
              $9163 = $9137 * $9162;
              $9164 = $9128 * $9135;
              $9165 = $9164 + $9163;
              $9166 = $9128 * $9130;
              $9167 = $9166 + $9165;
              $9168 = $9128 * $9132;
              $9169 = $9168 + $9167;
              $9170 = $9130 * $9147;
              $9171 = $9170 * $9134;
              $9172 = $9171 + $9169;
              $9173 = $9126 * $9134;
              $9174 = $9135 * $9173;
              $9175 = $9174 + $9172;
              $9176 = $9132 * $9147;
              $9177 = $9176 * $9134;
              $9178 = $9177 + $9175;
              $9179 = $9128 * $9137;
              $9180 = $9178 - $9179;
              $9181 = $9136 * $9132;
              $9182 = -0.93500000000000005 - $9181;
              $9183 = $9138 * $9130;
              $9184 = $9183 + $9182;
              $9185 = $9130 * $9141;
              $9186 = $9184 + $9185;
              $9187 = $9136 * $9137;
              $9188 = $9187 + $9186;
              $9189 = $9137 * $9141;
              $9190 = $9189 + $9188;
              $9191 = $9138 * $9137;
              $9192 = $9191 + $9190;
              $9193 = $9136 * $9130;
              $9194 = $9192 - $9193;
              $9195 = $9138 * $9132;
              $9196 = $9195 + $9194;
              $9197 = $9132 * $9141;
              $9198 = $9197 + $9196;
              $9199 = $9136 * $9143;
              $9200 = $9199 + $9198;
              $9201 = $9138 * $9143;
              $9202 = $9201 + $9200;
              $9203 = $9141 * $9143;
              $9204 = $9203 + $9202;
              $9205 = (+__Z5IKabsd($9142));
              $9206 = $9205 > 5.0000000000000004E-6;
              if ($9206) {
               break;
              }
              $9207 = $9139 * $9130;
              $9208 = $9207 + -0.84999999999999998;
              $9209 = $9139 * $9137;
              $9210 = $9209 + $9208;
              $9211 = $9139 * $9132;
              $9212 = $9211 + $9210;
              $9213 = $9139 * $9143;
              $9214 = $9213 + $9212;
              $9215 = (+__Z5IKabsd($9214));
              $9216 = $9215 > 5.0000000000000004E-6;
              if ($9216) {
               break;
              }
              $9217 = (+__Z5IKabsd($9161));
              $9218 = $9217 > 5.0000000000000004E-6;
              if ($9218) {
               break;
              }
              $9219 = (+__Z5IKabsd($9180));
              $9220 = $9219 > 5.0000000000000004E-6;
              if ($9220) {
               break;
              }
              $9221 = (+__Z5IKabsd($9204));
              $9222 = $9221 > 5.0000000000000004E-6;
              if ($9222) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $9223 = (($ij5391$01180) + 1)|0;
            $exitcond1742 = ($9223|0)==(2);
            if ($exitcond1742) {
             break L960;
            } else {
             $ij5391$01180 = $9223;
            }
           }
          }
         } while(0);
         $9224 = +HEAPF64[$45>>3];
         $9225 = +HEAPF64[$43>>3];
         $9226 = $9224 + $9225;
         $9227 = $9224 - $9225;
         $9228 = $9227 * $9227;
         $9229 = $9226 * $9226;
         $9230 = $9228 + $9229;
         $9231 = (+__Z5IKabsd($9230));
         $9232 = $9231 == 0.0;
         do {
          if (!($9232)) {
           $9233 = (+Math_pow((+$9230),-0.5));
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1597,$9226,$9227,1.9999999999999999E-6);
           $9234 = HEAP8[$342>>0]|0;
           $9235 = ($9234<<24>>24)==(0);
           if ($9235) {
            break;
           }
           $9236 = $9226 * $9233;
           $9237 = $9227 * $9233;
           $9238 = -$9237;
           $9239 = +HEAPF64[$this>>3];
           $9240 = $9236 * 0.70710678118654802;
           $9241 = $9237 * -0.70710678118654802;
           $9242 = +HEAPF64[$45>>3];
           $9243 = +HEAPF64[$43>>3];
           $9244 = $9242 + $9243;
           $9245 = $9242 - $9243;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1603,$9244,$9245,1.9999999999999999E-6);
           $9246 = HEAP8[$343>>0]|0;
           $9247 = ($9246<<24>>24)==(0);
           if ($9247) {
            break;
           }
           $9248 = +HEAPF64[$x1603>>3];
           $9249 = $9239 * 3.14159265358979;
           $9250 = 9.8696044010893597 - $9249;
           $9251 = $9248 * $9248;
           $9252 = $9250 + $9251;
           $9253 = +HEAPF64[$this>>3];
           $9254 = $9239 * $9253;
           $9255 = $9252 + $9254;
           $9256 = $9248 * -3.14159265358979;
           $9257 = $9256 + $9255;
           $9258 = $9256 + $9257;
           $9259 = $9248 * $9253;
           $9260 = $9259 + $9258;
           $9261 = $9253 * 3.14159265358979;
           $9262 = $9260 - $9261;
           $9263 = $9239 * $9248;
           $9264 = $9263 + $9262;
           $9265 = $9264 < -1.0000000000000001E-5;
           if ($9265) {
            break;
           }
           $9266 = (+__Z6IKsqrtd($9264));
           $9267 = $9266 + 3.14159265358979;
           $9268 = (+__Z6IKfmoddd($9267,6.2831853071795898));
           $9269 = $9268 + -3.14159265358979;
           $9270 = +HEAPF64[$43>>3];
           $9271 = +HEAPF64[$45>>3];
           $9272 = $9241 * $9271;
           $9273 = $9240 * $9271;
           $9274 = $9273 - $9272;
           $9275 = $9241 * $9270;
           $9276 = $9275 + $9274;
           $9277 = $9240 * $9270;
           $9278 = $9277 + $9276;
           $9279 = (+__Z5IKabsd($9269));
           $9280 = $9279 < 9.9999999999999995E-7;
           if (!($9280)) {
            break;
           }
           $9281 = $9270 * $9270;
           $9282 = 0.72250000000000003 - $9281;
           $9283 = $9271 * $9271;
           $9284 = $9282 - $9283;
           $9285 = (+__Z5IKabsd($9284));
           $9286 = $9285 < 9.9999999999999995E-7;
           if (!($9286)) {
            break;
           }
           $9287 = (+__Z5IKabsd($9278));
           $9288 = $9287 < 9.9999999999999995E-7;
           if (!($9288)) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $9289 = +HEAPF64[$43>>3];
           $9290 = $9289 * 0.83189033080770302;
           $9291 = +HEAPF64[$45>>3];
           $9292 = $9291 * 0.83189033080770302;
           $9293 = +HEAPF64[$23>>3];
           $9294 = $9293 * 0.70710678118654802;
           $9295 = $9294 * $9238;
           $9296 = $9289 * 0.70710678118654802;
           $9297 = +HEAPF64[$24>>3];
           $9298 = $9296 * $9297;
           $9299 = $9236 * $9294;
           $9300 = $9291 * 0.70710678118654802;
           $9301 = $9300 * $9297;
           $9302 = $9236 * $9301;
           $9303 = $9298 * $9238;
           $9304 = $9302 + $9303;
           $9305 = $9301 * $9238;
           $9306 = $9305 + $9304;
           $9307 = -$9236;
           $9308 = $9298 * $9307;
           $9309 = $9308 + $9306;
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1610,$9309,-1);
           $9310 = HEAP8[$344>>0]|0;
           $9311 = ($9310<<24>>24)==(0);
           if ($9311) {
            break L960;
           }
           $9312 = $9236 * $9292;
           $9313 = $9292 * $9238;
           $9314 = $9312 + $9313;
           $9315 = $9290 * $9238;
           $9316 = $9315 + $9314;
           $9317 = $9290 * $9307;
           $9318 = $9317 + $9316;
           $9319 = (+__Z5IKabsd($9318));
           $9320 = $9319 < 1.9999999999999999E-6;
           do {
            if ($9320) {
             $9321 = +HEAPF64[$x1610>>3];
             $9322 = +HEAPF64[$45>>3];
             $9323 = $9295 * $9322;
             $9324 = $9299 * $9322;
             $9325 = $9323 - $9324;
             $9326 = +HEAPF64[$43>>3];
             $9327 = -$9326;
             $9328 = $9299 * $9327;
             $9329 = $9325 + $9328;
             $9330 = $9295 * $9327;
             $9331 = $9330 + $9329;
             $9332 = $9321 * $9331;
             $9333 = (+__Z5IKabsd($9332));
             $9334 = $9333 < 1.9999999999999999E-6;
             if (!($9334)) {
              break;
             }
             $9335 = (+__Z5IKsqrd($9318));
             $9336 = (+__Z5IKsqrd($9332));
             $9337 = $9335 + $9336;
             $9338 = $9337 + -1.0;
             $9339 = (+__Z5IKabsd($9338));
             $9340 = !($9339 <= 1.9999999999999999E-6);
             if (!($9340)) {
              break L960;
             }
            }
           } while(0);
           $9341 = +HEAPF64[$x1610>>3];
           $9342 = +HEAPF64[$45>>3];
           $9343 = $9295 * $9342;
           $9344 = $9299 * $9342;
           $9345 = $9343 - $9344;
           $9346 = +HEAPF64[$43>>3];
           $9347 = -$9346;
           $9348 = $9299 * $9347;
           $9349 = $9345 + $9348;
           $9350 = $9295 * $9347;
           $9351 = $9350 + $9349;
           $9352 = $9341 * $9351;
           $9353 = (+__Z7IKatan2dd($9318,$9352));
           $9354 = (+__Z5IKsind($9353));
           $9355 = (+__Z5IKcosd($9353));
           $9356 = $9353 > 3.14159265358979;
           do {
            if ($9356) {
             $9357 = $9353 + -6.2831853071795898;
             $9360 = $9357;
            } else {
             $9358 = $9353 < -3.14159265358979;
             if (!($9358)) {
              $9360 = $9353;
              break;
             }
             $9359 = $9353 + 6.2831853071795898;
             $9360 = $9359;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $9360;
           HEAPF64[$345>>3] = $9355;
           HEAPF64[$346>>3] = $9354;
           $9361 = +HEAPF64[$3>>3];
           $9362 = (+__Z5IKsind($9361));
           $9363 = (+__Z5IKcosd($9361));
           $9364 = +HEAPF64[$45>>3];
           $9365 = $9364 * $9238;
           $9366 = +HEAPF64[$43>>3];
           $9367 = $9366 * 0.70710678118654802;
           $9368 = +HEAPF64[$24>>3];
           $9369 = $9236 * $9368;
           $9370 = $9368 * 0.063639610306789302;
           $9371 = +HEAPF64[$23>>3];
           $9372 = $9236 * $9371;
           $9373 = $9364 * 0.70710678118654802;
           $9374 = $9366 * $9238;
           $9375 = $9368 * $9238;
           $9376 = $9368 * 0.70710678118654802;
           $9377 = $9366 * 0.063639610306789302;
           $9378 = $9363 * $9371;
           $9379 = $9362 * 0.77781745930520196;
           $9380 = $9236 * $9362;
           $9381 = $9363 * -0.84999999999999998;
           $9382 = $9237 * $9367;
           $9383 = $9365 * -0.70710678118654802;
           $9384 = $9362 * 0.70710678118654802;
           $9385 = $9384 * $9365;
           $9386 = $9385 + -0.84999999999999998;
           $9387 = $9362 * $9238;
           $9388 = $9387 * $9367;
           $9389 = $9386 + $9388;
           $9390 = $9380 * $9367;
           $9391 = $9389 - $9390;
           $9392 = $9380 * $9373;
           $9393 = $9392 + $9391;
           $9394 = -$9363;
           $9395 = $9367 * $9394;
           $9396 = $9395 * $9369;
           $9397 = $9373 * $9372;
           $9398 = $9396 + $9397;
           $9399 = $9363 * $9367;
           $9400 = $9399 * $9375;
           $9401 = $9400 + $9398;
           $9402 = $9363 * $9369;
           $9403 = $9373 * $9402;
           $9404 = $9403 + $9401;
           $9405 = $9367 * $9372;
           $9406 = $9405 + $9404;
           $9407 = $9363 * $9365;
           $9408 = $9407 * $9376;
           $9409 = $9408 + $9406;
           $9410 = $9371 * -0.70710678118654802;
           $9411 = $9365 * $9410;
           $9412 = $9411 + $9409;
           $9413 = $9371 * $9238;
           $9414 = $9367 * $9413;
           $9415 = $9414 + $9412;
           $9416 = $9372 * $9394;
           $9417 = $9373 * $9416;
           $9418 = $9383 * $9378;
           $9419 = $9418 + $9417;
           $9420 = $9399 * $9372;
           $9421 = $9420 + $9419;
           $9422 = $9367 * $9375;
           $9423 = $9422 + $9421;
           $9424 = $9367 * $9369;
           $9425 = $9424 + $9423;
           $9426 = $9373 * $9369;
           $9427 = $9426 + $9425;
           $9428 = $9382 * $9378;
           $9429 = $9428 + $9427;
           $9430 = $9365 * $9376;
           $9431 = $9429 - $9430;
           $9432 = $9365 * 0.063639610306789302;
           $9433 = $9432 * $9378;
           $9434 = $9433 + -0.93500000000000005;
           $9435 = $9377 * $9416;
           $9436 = $9434 + $9435;
           $9437 = $9374 * $9370;
           $9438 = $9436 - $9437;
           $9439 = $9374 * 0.063639610306789302;
           $9440 = $9439 * $9378;
           $9441 = $9440 + $9438;
           $9442 = $9236 * $9364;
           $9443 = $9379 * $9442;
           $9444 = $9443 + $9441;
           $9445 = $9364 * 0.063639610306789302;
           $9446 = $9363 * $9445;
           $9447 = $9446 * $9372;
           $9448 = $9447 + $9444;
           $9449 = $9379 * $9374;
           $9450 = $9449 + $9448;
           $9451 = $9377 * $9369;
           $9452 = $9450 - $9451;
           $9453 = $9364 * -0.063639610306789302;
           $9454 = $9453 * $9369;
           $9455 = $9454 + $9452;
           $9456 = $9379 * $9365;
           $9457 = $9456 + $9455;
           $9458 = $9366 * $9307;
           $9459 = $9379 * $9458;
           $9460 = $9459 + $9457;
           $9461 = $9365 * $9370;
           $9462 = $9461 + $9460;
           $9463 = (+__Z5IKabsd($9381));
           $9464 = $9463 > 5.0000000000000004E-6;
           if ($9464) {
            break L960;
           }
           $9465 = $9236 * $9367;
           $9466 = $9362 * 0.84999999999999998;
           $9467 = $9466 + $9465;
           $9468 = $9382 + $9467;
           $9469 = $9383 + $9468;
           $9470 = $9373 * $9307;
           $9471 = $9470 + $9469;
           $9472 = (+__Z5IKabsd($9471));
           $9473 = $9472 > 5.0000000000000004E-6;
           if ($9473) {
            break L960;
           }
           $9474 = (+__Z5IKabsd($9393));
           $9475 = $9474 > 5.0000000000000004E-6;
           if ($9475) {
            break L960;
           }
           $9476 = (+__Z5IKabsd($9415));
           $9477 = $9476 > 5.0000000000000004E-6;
           if ($9477) {
            break L960;
           }
           $9478 = (+__Z5IKabsd($9431));
           $9479 = $9478 > 5.0000000000000004E-6;
           if ($9479) {
            break L960;
           }
           $9480 = (+__Z5IKabsd($9462));
           $9481 = $9480 > 5.0000000000000004E-6;
           if ($9481) {
            break L960;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L960;
          }
         } while(0);
         $9482 = +HEAPF64[$234>>3];
         $9483 = $9482 * 0.70710678118654802;
         $9484 = +HEAPF64[$233>>3];
         $9485 = $9484 * 0.70710678118654802;
         $9486 = +HEAPF64[$45>>3];
         $9487 = $9483 * $9486;
         $9488 = $9486 * $9485;
         $9489 = $9487 - $9488;
         $9490 = +HEAPF64[$43>>3];
         $9491 = $9483 * $9490;
         $9492 = $9489 + $9491;
         $9493 = $9485 * $9490;
         $9494 = $9493 + $9492;
         $9495 = +HEAPF64[$22>>3];
         $9496 = (+__Z5IKabsd($9495));
         $9497 = $9496 + 3.14159265358979;
         $9498 = (+__Z6IKfmoddd($9497,6.2831853071795898));
         $9499 = $9498 + -3.14159265358979;
         $9500 = (+__Z5IKabsd($9499));
         $9501 = $9500 < 9.9999999999999995E-7;
         do {
          if ($9501) {
           $9502 = $9490 * $9490;
           $9503 = 0.72250000000000003 - $9502;
           $9504 = $9486 * $9486;
           $9505 = $9503 - $9504;
           $9506 = (+__Z5IKabsd($9505));
           $9507 = $9506 < 9.9999999999999995E-7;
           if (!($9507)) {
            break;
           }
           $9508 = (+__Z5IKabsd($9494));
           $9509 = $9508 < 9.9999999999999995E-7;
           if (!($9509)) {
            break;
           }
           $9510 = -$9486;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           $9511 = +HEAPF64[$43>>3];
           $9512 = $9511 * $9511;
           $9513 = +HEAPF64[$45>>3];
           $9514 = $9513 * $9513;
           $9515 = $9512 + $9514;
           HEAPF64[$60>>3] = $9515;
           $9516 = +HEAPF64[$43>>3];
           $9517 = +HEAPF64[$26>>3];
           $9518 = $9516 * $9517;
           $9519 = +HEAPF64[$45>>3];
           $9520 = +HEAPF64[$32>>3];
           $9521 = $9519 * $9520;
           $9522 = $9518 + $9521;
           HEAPF64[$61>>3] = $9522;
           $9523 = +HEAPF64[$43>>3];
           $9524 = +HEAPF64[$28>>3];
           $9525 = $9523 * $9524;
           $9526 = +HEAPF64[$45>>3];
           $9527 = +HEAPF64[$34>>3];
           $9528 = $9526 * $9527;
           $9529 = $9525 + $9528;
           HEAPF64[$62>>3] = $9529;
           $9530 = +HEAPF64[$43>>3];
           $9531 = +HEAPF64[$30>>3];
           $9532 = $9530 * $9531;
           $9533 = +HEAPF64[$45>>3];
           $9534 = +HEAPF64[$36>>3];
           $9535 = $9533 * $9534;
           $9536 = $9532 + $9535;
           HEAPF64[$63>>3] = $9536;
           $9537 = +HEAPF64[$38>>3];
           $9538 = $9537 * $9510;
           HEAPF64[$64>>3] = $9538;
           $9539 = +HEAPF64[$43>>3];
           $9540 = +HEAPF64[$38>>3];
           $9541 = $9539 * $9540;
           HEAPF64[$65>>3] = $9541;
           $9542 = +HEAPF64[$40>>3];
           $9543 = $9542 * $9510;
           HEAPF64[$67>>3] = $9543;
           $9544 = +HEAPF64[$43>>3];
           $9545 = +HEAPF64[$40>>3];
           $9546 = $9544 * $9545;
           HEAPF64[$68>>3] = $9546;
           $9547 = +HEAPF64[$42>>3];
           $9548 = $9547 * $9510;
           HEAPF64[$70>>3] = $9548;
           $9549 = +HEAPF64[$43>>3];
           $9550 = +HEAPF64[$42>>3];
           $9551 = $9549 * $9550;
           HEAPF64[$71>>3] = $9551;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           $9552 = +HEAPF64[$233>>3];
           $9553 = +HEAPF64[$45>>3];
           $9554 = $9552 * $9553;
           $9555 = +HEAPF64[$43>>3];
           $9556 = $9552 * $9555;
           $9557 = $9554 + $9556;
           $9558 = +HEAPF64[$234>>3];
           $9559 = $9555 * $9558;
           $9560 = $9557 - $9559;
           $9561 = $9553 * $9558;
           $9562 = $9561 + $9560;
           $9563 = (+__Z5IKabsd($9562));
           $9564 = $9563 < 9.9999999999999995E-7;
           if (!($9564)) {
            HEAP8[$6>>0] = 1;
            $9633 = +HEAPF64[$45>>3];
            $9634 = $9633 * $9633;
            $9635 = +HEAPF64[$43>>3];
            $9636 = $9635 * $9635;
            $9637 = $9635 * 216.37467504308401;
            $9638 = $9633 * $9635;
            $9639 = $9633 * 216.37467504308401;
            $9640 = $9633 * 0.83189033080770302;
            $9641 = $9635 * 0.83189033080770302;
            $9642 = +HEAPF64[$233>>3];
            $9643 = $9642 * 4400.0;
            $9644 = +HEAPF64[$234>>3];
            $9645 = $9643 * $9644;
            $9646 = $9637 * $9644;
            $9647 = $9639 * $9644;
            $9648 = $9647 - $9646;
            $9649 = $9639 * $9642;
            $9650 = $9649 + $9648;
            $9651 = $9642 * $9637;
            $9652 = $9651 + $9650;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1639,$9652,-1);
            $9653 = HEAP8[$314>>0]|0;
            $9654 = ($9653<<24>>24)==(0);
            if ($9654) {
             break L960;
            }
            $9655 = +HEAPF64[$234>>3];
            $9656 = $9641 * $9655;
            $9657 = $9640 * $9655;
            $9658 = $9657 - $9656;
            $9659 = +HEAPF64[$233>>3];
            $9660 = $9641 * $9659;
            $9661 = $9658 + $9660;
            $9662 = $9640 * $9659;
            $9663 = $9662 + $9661;
            $9664 = (+__Z5IKabsd($9663));
            $9665 = $9664 < 1.9999999999999999E-6;
            do {
             if ($9665) {
              $9666 = +HEAPF64[$x1639>>3];
              $9667 = $9636 * 2200.0;
              $9668 = 3179.0 - $9667;
              $9669 = $9634 * 2200.0;
              $9670 = $9668 - $9669;
              $9671 = $9638 * 4400.0;
              $9672 = $9671 + $9670;
              $9673 = $9638 * -8800.0;
              $9674 = $9659 * $9659;
              $9675 = $9673 * $9674;
              $9676 = $9672 + $9675;
              $9677 = $9636 * $9645;
              $9678 = $9677 + $9676;
              $9679 = $9634 * $9645;
              $9680 = $9678 - $9679;
              $9681 = $9680 * $9666;
              $9682 = (+__Z5IKabsd($9681));
              $9683 = $9682 < 1.9999999999999999E-6;
              if (!($9683)) {
               break;
              }
              $9684 = (+__Z5IKsqrd($9663));
              $9685 = (+__Z5IKsqrd($9681));
              $9686 = $9684 + $9685;
              $9687 = $9686 + -1.0;
              $9688 = (+__Z5IKabsd($9687));
              $9689 = !($9688 <= 1.9999999999999999E-6);
              if (!($9689)) {
               break L960;
              }
             }
            } while(0);
            $9690 = +HEAPF64[$234>>3];
            $9691 = $9641 * $9690;
            $9692 = $9640 * $9690;
            $9693 = $9692 - $9691;
            $9694 = +HEAPF64[$233>>3];
            $9695 = $9641 * $9694;
            $9696 = $9693 + $9695;
            $9697 = $9640 * $9694;
            $9698 = $9697 + $9696;
            $9699 = +HEAPF64[$x1639>>3];
            $9700 = $9636 * 2200.0;
            $9701 = 3179.0 - $9700;
            $9702 = $9634 * 2200.0;
            $9703 = $9701 - $9702;
            $9704 = $9638 * 4400.0;
            $9705 = $9704 + $9703;
            $9706 = $9638 * -8800.0;
            $9707 = $9694 * $9694;
            $9708 = $9706 * $9707;
            $9709 = $9705 + $9708;
            $9710 = $9636 * $9645;
            $9711 = $9710 + $9709;
            $9712 = $9634 * $9645;
            $9713 = $9711 - $9712;
            $9714 = $9699 * $9713;
            $9715 = (+__Z7IKatan2dd($9698,$9714));
            $9716 = (+__Z5IKsind($9715));
            $9717 = (+__Z5IKcosd($9715));
            $9718 = $9715 > 3.14159265358979;
            do {
             if ($9718) {
              $9719 = $9715 + -6.2831853071795898;
              $9722 = $9719;
             } else {
              $9720 = $9715 < -3.14159265358979;
              if (!($9720)) {
               $9722 = $9715;
               break;
              }
              $9721 = $9715 + 6.2831853071795898;
              $9722 = $9721;
             }
            } while(0);
            HEAP8[$4>>0] = 0;
            HEAP8[$5>>0] = -1;
            HEAPF64[$3>>3] = $9722;
            HEAPF64[$315>>3] = $9717;
            HEAPF64[$316>>3] = $9716;
            $9723 = +HEAPF64[$3>>3];
            $9724 = (+__Z5IKcosd($9723));
            $9725 = (+__Z5IKsind($9723));
            $9726 = +HEAPF64[$233>>3];
            $9727 = +HEAPF64[$45>>3];
            $9728 = $9726 * $9727;
            $9729 = +HEAPF64[$43>>3];
            $9730 = +HEAPF64[$234>>3];
            $9731 = $9729 * $9730;
            $9732 = $9727 * $9730;
            $9733 = $9726 * $9729;
            $9734 = $9724 * 0.063639610306789302;
            $9735 = $9725 * 0.70710678118654802;
            $9736 = $9725 * 0.77781745930520196;
            $9737 = $9724 * 0.70710678118654802;
            $9738 = $9724 * -0.84999999999999998;
            $9739 = $9737 * $9732;
            $9740 = $9737 * $9733;
            $9741 = -$9740;
            $9742 = $9741 - $9739;
            $9743 = $9737 * $9728;
            $9744 = $9742 - $9743;
            $9745 = $9737 * $9731;
            $9746 = $9745 + $9744;
            $9747 = $9735 * $9733;
            $9748 = $9747 + -0.84999999999999998;
            $9749 = $9735 * $9732;
            $9750 = $9748 + $9749;
            $9751 = -$9731;
            $9752 = $9735 * $9751;
            $9753 = $9752 + $9750;
            $9754 = $9735 * $9728;
            $9755 = $9754 + $9753;
            $9756 = $9734 * $9733;
            $9757 = $9756 + -0.93500000000000005;
            $9758 = $9736 * $9733;
            $9759 = $9758 + $9757;
            $9760 = $9734 * $9732;
            $9761 = $9760 + $9759;
            $9762 = $9736 * $9732;
            $9763 = $9762 + $9761;
            $9764 = $9734 * $9751;
            $9765 = $9764 + $9763;
            $9766 = $9736 * $9751;
            $9767 = $9766 + $9765;
            $9768 = $9736 * $9728;
            $9769 = $9768 + $9767;
            $9770 = $9734 * $9728;
            $9771 = $9770 + $9769;
            $9772 = (+__Z5IKabsd($9738));
            $9773 = $9772 > 5.0000000000000004E-6;
            if ($9773) {
             break L960;
            }
            $9774 = $9733 * 0.70710678118654802;
            $9775 = $9732 * -0.70710678118654802;
            $9776 = $9775 - $9774;
            $9777 = $9728 * 0.70710678118654802;
            $9778 = $9776 - $9777;
            $9779 = $9731 * 0.70710678118654802;
            $9780 = $9779 + $9778;
            $9781 = $9725 * 0.84999999999999998;
            $9782 = $9781 + $9780;
            $9783 = (+__Z5IKabsd($9782));
            $9784 = $9783 > 5.0000000000000004E-6;
            if ($9784) {
             break L960;
            }
            $9785 = (+__Z5IKabsd($9746));
            $9786 = $9785 > 5.0000000000000004E-6;
            if ($9786) {
             break L960;
            }
            $9787 = (+__Z5IKabsd($9755));
            $9788 = $9787 > 5.0000000000000004E-6;
            if ($9788) {
             break L960;
            }
            $9789 = (+__Z5IKabsd($9771));
            $9790 = $9789 > 5.0000000000000004E-6;
            if ($9790) {
             break L960;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            break L960;
           }
           $9565 = (+__Z5IKabsd($9555));
           $9566 = (+__Z5IKabsd($9553));
           $9567 = $9565 + $9566;
           $9568 = (+__Z5IKabsd($9567));
           $9569 = $9568 < 9.9999999999999995E-7;
           if (!($9569)) {
            break L960;
           }
           $9570 = (+__Z5IKabsd(0.72250000000000003));
           $9571 = $9570 < 9.9999999999999995E-7;
           if (!($9571)) {
            break L960;
           }
           $9572 = (+__Z5IKabsd(0.0));
           $9573 = $9572 < 9.9999999999999995E-7;
           if (!($9573)) {
            break L960;
           }
           $9574 = (+__Z5IKabsd(-0.84999999999999998));
           $9575 = $9574 < 9.9999999999999995E-7;
           if (!($9575)) {
            break L960;
           }
           $9576 = (+__Z5IKabsd(-0.93500000000000005));
           $9577 = $9576 < 9.9999999999999995E-7;
           if (!($9577)) {
            break L960;
           }
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$61>>3] = 0.0;
           HEAPF64[$62>>3] = 0.0;
           HEAPF64[$64>>3] = 0.0;
           HEAPF64[$65>>3] = 0.0;
           HEAPF64[$67>>3] = 0.0;
           HEAPF64[$68>>3] = 0.0;
           HEAPF64[$70>>3] = 0.0;
           HEAPF64[$71>>3] = 0.0;
           HEAPF64[$24>>3] = 0.0;
           ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
           HEAPF64[$23>>3] = 1.0;
           HEAPF64[$22>>3] = 0.0;
           HEAPF64[$43>>3] = 0.0;
           HEAPF64[$45>>3] = 0.0;
           HEAPF64[$66>>3] = 0.0;
           HEAPF64[$69>>3] = 0.0;
           HEAPF64[$72>>3] = 0.0;
           $9578 = (+__Z5IKabsd(1.0));
           $9579 = $9578 < 1.0E-8;
           if ($9579) {
            break L960;
           }
           HEAPF64[$op412>>3] = 1.0;
           HEAPF64[$309>>3] = 0.0;
           HEAPF64[$310>>3] = -1.0;
           __ZN8IKSolver10polyroots2EPdS0_Ri($op412,$zeror413,$numroots414);
           $9580 = HEAP32[$numroots414>>2]|0;
           $9581 = ($9580|0)>(0);
           if (!($9581)) {
            HEAP16[$j5valid423>>1] = 257;
            HEAP8[$6>>0] = 2;
            break L960;
           }
           $9582 = HEAP32[$numroots414>>2]|0;
           $9583 = ($9582|0)>(1);
           $numsolutions419$01235 = 0;
           while(1) {
            $9584 = (($zeror413) + ($numsolutions419$01235<<3)|0);
            $9585 = +HEAPF64[$9584>>3];
            $9586 = (+Math_atan((+$9585)));
            $9587 = $9586 * 2.0;
            $9588 = $9587 + 6.2831853071795898;
            $9589 = $9587 > 3.14159265358979;
            $9590 = (($j5array415) + ($numsolutions419$01235<<3)|0);
            HEAPF64[$9590>>3] = $9587;
            do {
             if ($9589) {
              $9591 = $9587 + -6.2831853071795898;
              HEAPF64[$9590>>3] = $9591;
             } else {
              $9592 = $9587 < -3.14159265358979;
              if (!($9592)) {
               break;
              }
              HEAPF64[$9590>>3] = $9588;
             }
            } while(0);
            $9593 = +HEAPF64[$9590>>3];
            $9594 = (+__Z5IKsind($9593));
            $9595 = (($sj5array417) + ($numsolutions419$01235<<3)|0);
            HEAPF64[$9595>>3] = $9594;
            $9596 = +HEAPF64[$9590>>3];
            $9597 = (+__Z5IKcosd($9596));
            $9598 = (($cj5array416) + ($numsolutions419$01235<<3)|0);
            HEAPF64[$9598>>3] = $9597;
            $9599 = (($numsolutions419$01235) + 1)|0;
            $9600 = ($9599|0)<($9582|0);
            if ($9600) {
             $numsolutions419$01235 = $9599;
            } else {
             break;
            }
           }
           $$1893 = $9583 ? $9582 : 1;
           HEAP16[$j5valid423>>1] = 257;
           HEAP8[$6>>0] = 2;
           $ij5424$01244 = 0;
           while(1) {
            $9601 = (($j5valid423) + ($ij5424$01244)|0);
            $9602 = HEAP8[$9601>>0]|0;
            $9603 = ($9602<<24>>24)==(0);
            if (!($9603)) {
             $9604 = (($j5array415) + ($ij5424$01244<<3)|0);
             $9605 = +HEAPF64[$9604>>3];
             HEAPF64[$3>>3] = $9605;
             $9606 = (($cj5array416) + ($ij5424$01244<<3)|0);
             $9607 = +HEAPF64[$9606>>3];
             HEAPF64[$311>>3] = $9607;
             $9608 = (($sj5array417) + ($ij5424$01244<<3)|0);
             $9609 = +HEAPF64[$9608>>3];
             HEAPF64[$312>>3] = $9609;
             $9610 = +HEAPF64[$3>>3];
             $9611 = $9610 * 0.5;
             $9612 = (+__Z5IKtand($9611));
             HEAPF64[$313>>3] = $9612;
             $9613 = $ij5424$01244&255;
             HEAP8[$4>>0] = $9613;
             HEAP8[$5>>0] = -1;
             $iij5425$01240 = (($ij5424$01244) + 1)|0;
             $9614 = ($iij5425$01240|0)<($$1893|0);
             L1465: do {
              if ($9614) {
               $iij5425$01241 = $iij5425$01240;
               L1466: while(1) {
                $9615 = (($j5valid423) + ($iij5425$01241)|0);
                $9616 = HEAP8[$9615>>0]|0;
                $9617 = ($9616<<24>>24)==(0);
                do {
                 if (!($9617)) {
                  $9619 = +HEAPF64[$9606>>3];
                  $9620 = (($cj5array416) + ($iij5425$01241<<3)|0);
                  $9621 = +HEAPF64[$9620>>3];
                  $9622 = $9619 - $9621;
                  $9623 = (+__Z5IKabsd($9622));
                  $9624 = $9623 < 9.9999999999999995E-7;
                  if (!($9624)) {
                   break;
                  }
                  $9625 = +HEAPF64[$9608>>3];
                  $9626 = (($sj5array417) + ($iij5425$01241<<3)|0);
                  $9627 = +HEAPF64[$9626>>3];
                  $9628 = $9625 - $9627;
                  $9629 = (+__Z5IKabsd($9628));
                  $9630 = $9629 < 9.9999999999999995E-7;
                  if ($9630) {
                   $$lcssa2038 = $9615;$iij5425$01241$lcssa = $iij5425$01241;
                   break L1466;
                  }
                 }
                } while(0);
                $iij5425$0 = (($iij5425$01241) + 1)|0;
                $9618 = ($iij5425$0|0)<($$1893|0);
                if ($9618) {
                 $iij5425$01241 = $iij5425$0;
                } else {
                 break L1465;
                }
               }
               HEAP8[$$lcssa2038>>0] = 0;
               $9631 = $iij5425$01241$lcssa&255;
               HEAP8[$5>>0] = $9631;
              }
             } while(0);
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
            $9632 = (($ij5424$01244) + 1)|0;
            $exitcond1751 = ($9632|0)==($$1893|0);
            if ($exitcond1751) {
             break L960;
            } else {
             $ij5424$01244 = $9632;
            }
           }
          }
         } while(0);
         $9791 = +HEAPF64[$234>>3];
         $9792 = $9791 * 0.70710678118654802;
         $9793 = +HEAPF64[$233>>3];
         $9794 = $9793 * 0.70710678118654802;
         $9795 = +HEAPF64[$45>>3];
         $9796 = $9795 * $9794;
         $9797 = +HEAPF64[$43>>3];
         $9798 = $9794 * $9797;
         $9799 = $9792 * $9797;
         $9800 = $9798 + $9799;
         $9801 = $9792 * $9795;
         $9802 = $9801 + $9800;
         $9803 = +HEAPF64[$22>>3];
         $9804 = $9803 + -3.14159265358979;
         $9805 = (+__Z5IKabsd($9804));
         $9806 = $9805 + 3.14159265358979;
         $9807 = (+__Z6IKfmoddd($9806,6.2831853071795898));
         $9808 = $9807 + -3.14159265358979;
         $9809 = $9802 - $9796;
         $9810 = $9796 - $9802;
         $9811 = (+__Z5IKabsd($9808));
         $9812 = $9811 < 9.9999999999999995E-7;
         do {
          if ($9812) {
           $9813 = $9797 * $9797;
           $9814 = 0.72250000000000003 - $9813;
           $9815 = $9795 * $9795;
           $9816 = $9814 - $9815;
           $9817 = (+__Z5IKabsd($9816));
           $9818 = $9817 < 9.9999999999999995E-7;
           if (!($9818)) {
            break;
           }
           $9819 = (+__Z5IKabsd($9809));
           $9820 = $9819 < 9.9999999999999995E-7;
           if (!($9820)) {
            break;
           }
           $9821 = (+__Z5IKabsd($9810));
           $9822 = $9821 < 9.9999999999999995E-7;
           if (!($9822)) {
            break;
           }
           $9823 = -$9795;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           $9824 = +HEAPF64[$43>>3];
           $9825 = $9824 * $9824;
           $9826 = +HEAPF64[$45>>3];
           $9827 = $9826 * $9826;
           $9828 = $9825 + $9827;
           HEAPF64[$60>>3] = $9828;
           $9829 = +HEAPF64[$43>>3];
           $9830 = +HEAPF64[$26>>3];
           $9831 = $9829 * $9830;
           $9832 = +HEAPF64[$45>>3];
           $9833 = +HEAPF64[$32>>3];
           $9834 = $9832 * $9833;
           $9835 = $9831 + $9834;
           HEAPF64[$61>>3] = $9835;
           $9836 = +HEAPF64[$43>>3];
           $9837 = +HEAPF64[$28>>3];
           $9838 = $9836 * $9837;
           $9839 = +HEAPF64[$45>>3];
           $9840 = +HEAPF64[$34>>3];
           $9841 = $9839 * $9840;
           $9842 = $9838 + $9841;
           HEAPF64[$62>>3] = $9842;
           $9843 = +HEAPF64[$43>>3];
           $9844 = +HEAPF64[$30>>3];
           $9845 = $9843 * $9844;
           $9846 = +HEAPF64[$45>>3];
           $9847 = +HEAPF64[$36>>3];
           $9848 = $9846 * $9847;
           $9849 = $9845 + $9848;
           HEAPF64[$63>>3] = $9849;
           $9850 = +HEAPF64[$38>>3];
           $9851 = $9850 * $9823;
           HEAPF64[$64>>3] = $9851;
           $9852 = +HEAPF64[$43>>3];
           $9853 = +HEAPF64[$38>>3];
           $9854 = $9852 * $9853;
           HEAPF64[$65>>3] = $9854;
           $9855 = +HEAPF64[$40>>3];
           $9856 = $9855 * $9823;
           HEAPF64[$67>>3] = $9856;
           $9857 = +HEAPF64[$43>>3];
           $9858 = +HEAPF64[$40>>3];
           $9859 = $9857 * $9858;
           HEAPF64[$68>>3] = $9859;
           $9860 = +HEAPF64[$42>>3];
           $9861 = $9860 * $9823;
           HEAPF64[$70>>3] = $9861;
           $9862 = +HEAPF64[$43>>3];
           $9863 = +HEAPF64[$42>>3];
           $9864 = $9862 * $9863;
           HEAPF64[$71>>3] = $9864;
           HEAPF64[$24>>3] = 0.0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           $9865 = +HEAPF64[$233>>3];
           $9866 = +HEAPF64[$45>>3];
           $9867 = -$9866;
           $9868 = $9865 * $9867;
           $9869 = +HEAPF64[$43>>3];
           $9870 = $9865 * $9869;
           $9871 = $9868 - $9870;
           $9872 = +HEAPF64[$234>>3];
           $9873 = $9872 * $9867;
           $9874 = $9871 + $9873;
           $9875 = $9869 * $9872;
           $9876 = $9875 + $9874;
           $9877 = (+__Z5IKabsd($9876));
           $9878 = $9877 < 9.9999999999999995E-7;
           if (!($9878)) {
            HEAP8[$6>>0] = 1;
            $9947 = +HEAPF64[$45>>3];
            $9948 = $9947 * $9947;
            $9949 = +HEAPF64[$43>>3];
            $9950 = $9949 * $9949;
            $9951 = $9949 * 216.37467504308401;
            $9952 = $9947 * 216.37467504308401;
            $9953 = $9947 * $9949;
            $9954 = $9947 * 0.83189033080770302;
            $9955 = $9949 * 0.83189033080770302;
            $9956 = +HEAPF64[$233>>3];
            $9957 = $9956 * 4400.0;
            $9958 = +HEAPF64[$234>>3];
            $9959 = $9957 * $9958;
            $9960 = -$9956;
            $9961 = $9952 * $9960;
            $9962 = $9951 * $9960;
            $9963 = $9961 + $9962;
            $9964 = $9952 * $9958;
            $9965 = $9963 - $9964;
            $9966 = $9951 * $9958;
            $9967 = $9966 + $9965;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1664,$9967,-1);
            $9968 = HEAP8[$322>>0]|0;
            $9969 = ($9968<<24>>24)==(0);
            if ($9969) {
             break L960;
            }
            $9970 = +HEAPF64[$233>>3];
            $9971 = $9954 * $9970;
            $9972 = $9955 * $9970;
            $9973 = $9971 + $9972;
            $9974 = +HEAPF64[$234>>3];
            $9975 = $9955 * $9974;
            $9976 = $9973 - $9975;
            $9977 = $9954 * $9974;
            $9978 = $9977 + $9976;
            $9979 = (+__Z5IKabsd($9978));
            $9980 = $9979 < 1.9999999999999999E-6;
            do {
             if ($9980) {
              $9981 = +HEAPF64[$x1664>>3];
              $9982 = $9948 * $9959;
              $9983 = 3179.0 - $9982;
              $9984 = $9948 * 2200.0;
              $9985 = $9983 - $9984;
              $9986 = $9950 * 2200.0;
              $9987 = $9985 - $9986;
              $9988 = $9950 * $9959;
              $9989 = $9988 + $9987;
              $9990 = $9953 * -8800.0;
              $9991 = $9970 * $9970;
              $9992 = $9990 * $9991;
              $9993 = $9989 + $9992;
              $9994 = $9953 * 4400.0;
              $9995 = $9994 + $9993;
              $9996 = $9995 * $9981;
              $9997 = (+__Z5IKabsd($9996));
              $9998 = $9997 < 1.9999999999999999E-6;
              if (!($9998)) {
               break;
              }
              $9999 = (+__Z5IKsqrd($9978));
              $10000 = (+__Z5IKsqrd($9996));
              $10001 = $9999 + $10000;
              $10002 = $10001 + -1.0;
              $10003 = (+__Z5IKabsd($10002));
              $10004 = !($10003 <= 1.9999999999999999E-6);
              if (!($10004)) {
               break L960;
              }
             }
            } while(0);
            $10005 = +HEAPF64[$233>>3];
            $10006 = $9954 * $10005;
            $10007 = $9955 * $10005;
            $10008 = $10006 + $10007;
            $10009 = +HEAPF64[$234>>3];
            $10010 = $9955 * $10009;
            $10011 = $10008 - $10010;
            $10012 = $9954 * $10009;
            $10013 = $10012 + $10011;
            $10014 = +HEAPF64[$x1664>>3];
            $10015 = $9948 * $9959;
            $10016 = 3179.0 - $10015;
            $10017 = $9948 * 2200.0;
            $10018 = $10016 - $10017;
            $10019 = $9950 * 2200.0;
            $10020 = $10018 - $10019;
            $10021 = $9950 * $9959;
            $10022 = $10021 + $10020;
            $10023 = $9953 * -8800.0;
            $10024 = $10005 * $10005;
            $10025 = $10023 * $10024;
            $10026 = $10022 + $10025;
            $10027 = $9953 * 4400.0;
            $10028 = $10027 + $10026;
            $10029 = $10014 * $10028;
            $10030 = (+__Z7IKatan2dd($10013,$10029));
            $10031 = (+__Z5IKsind($10030));
            $10032 = (+__Z5IKcosd($10030));
            $10033 = $10030 > 3.14159265358979;
            do {
             if ($10033) {
              $10034 = $10030 + -6.2831853071795898;
              $10037 = $10034;
             } else {
              $10035 = $10030 < -3.14159265358979;
              if (!($10035)) {
               $10037 = $10030;
               break;
              }
              $10036 = $10030 + 6.2831853071795898;
              $10037 = $10036;
             }
            } while(0);
            HEAP8[$4>>0] = 0;
            HEAP8[$5>>0] = -1;
            HEAPF64[$3>>3] = $10037;
            HEAPF64[$323>>3] = $10032;
            HEAPF64[$324>>3] = $10031;
            $10038 = +HEAPF64[$3>>3];
            $10039 = (+__Z5IKcosd($10038));
            $10040 = (+__Z5IKsind($10038));
            $10041 = +HEAPF64[$233>>3];
            $10042 = +HEAPF64[$45>>3];
            $10043 = $10041 * $10042;
            $10044 = +HEAPF64[$43>>3];
            $10045 = +HEAPF64[$234>>3];
            $10046 = $10044 * $10045;
            $10047 = $10042 * $10045;
            $10048 = $10041 * $10044;
            $10049 = $10039 * 0.063639610306789302;
            $10050 = $10040 * 0.70710678118654802;
            $10051 = $10040 * 0.77781745930520196;
            $10052 = $10039 * 0.70710678118654802;
            $10053 = $10039 * -0.84999999999999998;
            $10054 = -$10046;
            $10055 = $10052 * $10054;
            $10056 = $10052 * $10043;
            $10057 = $10056 + $10055;
            $10058 = $10052 * $10047;
            $10059 = $10058 + $10057;
            $10060 = $10052 * $10048;
            $10061 = $10060 + $10059;
            $10062 = $10050 * $10054;
            $10063 = $10062 + -0.84999999999999998;
            $10064 = $10050 * $10043;
            $10065 = $10064 + $10063;
            $10066 = $10050 * $10047;
            $10067 = $10066 + $10065;
            $10068 = $10050 * $10048;
            $10069 = $10068 + $10067;
            $10070 = $10049 * $10043;
            $10071 = -0.93500000000000005 - $10070;
            $10072 = $10051 * $10054;
            $10073 = $10071 + $10072;
            $10074 = $10051 * $10043;
            $10075 = $10074 + $10073;
            $10076 = $10049 * $10047;
            $10077 = $10075 - $10076;
            $10078 = $10049 * $10046;
            $10079 = $10078 + $10077;
            $10080 = $10051 * $10047;
            $10081 = $10080 + $10079;
            $10082 = $10049 * $10048;
            $10083 = $10081 - $10082;
            $10084 = $10051 * $10048;
            $10085 = $10084 + $10083;
            $10086 = (+__Z5IKabsd($10053));
            $10087 = $10086 > 5.0000000000000004E-6;
            if ($10087) {
             break L960;
            }
            $10088 = $10040 * 0.84999999999999998;
            $10089 = $10048 * 0.70710678118654802;
            $10090 = $10088 - $10089;
            $10091 = $10047 * 0.70710678118654802;
            $10092 = $10090 - $10091;
            $10093 = $10043 * 0.70710678118654802;
            $10094 = $10092 - $10093;
            $10095 = $10046 * 0.70710678118654802;
            $10096 = $10095 + $10094;
            $10097 = (+__Z5IKabsd($10096));
            $10098 = $10097 > 5.0000000000000004E-6;
            if ($10098) {
             break L960;
            }
            $10099 = (+__Z5IKabsd($10061));
            $10100 = $10099 > 5.0000000000000004E-6;
            if ($10100) {
             break L960;
            }
            $10101 = (+__Z5IKabsd($10069));
            $10102 = $10101 > 5.0000000000000004E-6;
            if ($10102) {
             break L960;
            }
            $10103 = (+__Z5IKabsd($10085));
            $10104 = $10103 > 5.0000000000000004E-6;
            if ($10104) {
             break L960;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            break L960;
           }
           $9879 = (+__Z5IKabsd($9869));
           $9880 = (+__Z5IKabsd($9866));
           $9881 = $9879 + $9880;
           $9882 = (+__Z5IKabsd($9881));
           $9883 = $9882 < 9.9999999999999995E-7;
           if (!($9883)) {
            break L960;
           }
           $9884 = (+__Z5IKabsd(0.72250000000000003));
           $9885 = $9884 < 9.9999999999999995E-7;
           if (!($9885)) {
            break L960;
           }
           $9886 = (+__Z5IKabsd(0.0));
           $9887 = $9886 < 9.9999999999999995E-7;
           if (!($9887)) {
            break L960;
           }
           $9888 = (+__Z5IKabsd(-0.84999999999999998));
           $9889 = $9888 < 9.9999999999999995E-7;
           if (!($9889)) {
            break L960;
           }
           $9890 = (+__Z5IKabsd(-0.93500000000000005));
           $9891 = $9890 < 9.9999999999999995E-7;
           if (!($9891)) {
            break L960;
           }
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$7>>3] = 0.0;
           HEAPF64[$76>>3] = 0.0;
           HEAPF64[$75>>3] = 1.0;
           HEAPF64[$61>>3] = 0.0;
           HEAPF64[$62>>3] = 0.0;
           HEAPF64[$64>>3] = 0.0;
           HEAPF64[$65>>3] = 0.0;
           HEAPF64[$67>>3] = 0.0;
           HEAPF64[$68>>3] = 0.0;
           HEAPF64[$70>>3] = 0.0;
           HEAPF64[$71>>3] = 0.0;
           HEAPF64[$24>>3] = 0.0;
           ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
           HEAPF64[$23>>3] = -1.0;
           HEAPF64[$22>>3] = 3.14159265358979;
           HEAPF64[$43>>3] = 0.0;
           HEAPF64[$45>>3] = 0.0;
           HEAPF64[$66>>3] = 0.0;
           HEAPF64[$69>>3] = 0.0;
           HEAPF64[$72>>3] = 0.0;
           $9892 = (+__Z5IKabsd(1.0));
           $9893 = $9892 < 1.0E-8;
           if ($9893) {
            break L960;
           }
           HEAPF64[$op440>>3] = 1.0;
           HEAPF64[$317>>3] = 0.0;
           HEAPF64[$318>>3] = -1.0;
           __ZN8IKSolver10polyroots2EPdS0_Ri($op440,$zeror441,$numroots442);
           $9894 = HEAP32[$numroots442>>2]|0;
           $9895 = ($9894|0)>(0);
           if (!($9895)) {
            HEAP16[$j5valid451>>1] = 257;
            HEAP8[$6>>0] = 2;
            break L960;
           }
           $9896 = HEAP32[$numroots442>>2]|0;
           $9897 = ($9896|0)>(1);
           $numsolutions447$01215 = 0;
           while(1) {
            $9898 = (($zeror441) + ($numsolutions447$01215<<3)|0);
            $9899 = +HEAPF64[$9898>>3];
            $9900 = (+Math_atan((+$9899)));
            $9901 = $9900 * 2.0;
            $9902 = $9901 + 6.2831853071795898;
            $9903 = $9901 > 3.14159265358979;
            $9904 = (($j5array443) + ($numsolutions447$01215<<3)|0);
            HEAPF64[$9904>>3] = $9901;
            do {
             if ($9903) {
              $9905 = $9901 + -6.2831853071795898;
              HEAPF64[$9904>>3] = $9905;
             } else {
              $9906 = $9901 < -3.14159265358979;
              if (!($9906)) {
               break;
              }
              HEAPF64[$9904>>3] = $9902;
             }
            } while(0);
            $9907 = +HEAPF64[$9904>>3];
            $9908 = (+__Z5IKsind($9907));
            $9909 = (($sj5array445) + ($numsolutions447$01215<<3)|0);
            HEAPF64[$9909>>3] = $9908;
            $9910 = +HEAPF64[$9904>>3];
            $9911 = (+__Z5IKcosd($9910));
            $9912 = (($cj5array444) + ($numsolutions447$01215<<3)|0);
            HEAPF64[$9912>>3] = $9911;
            $9913 = (($numsolutions447$01215) + 1)|0;
            $9914 = ($9913|0)<($9896|0);
            if ($9914) {
             $numsolutions447$01215 = $9913;
            } else {
             break;
            }
           }
           $$1894 = $9897 ? $9896 : 1;
           HEAP16[$j5valid451>>1] = 257;
           HEAP8[$6>>0] = 2;
           $ij5452$01224 = 0;
           while(1) {
            $9915 = (($j5valid451) + ($ij5452$01224)|0);
            $9916 = HEAP8[$9915>>0]|0;
            $9917 = ($9916<<24>>24)==(0);
            if (!($9917)) {
             $9918 = (($j5array443) + ($ij5452$01224<<3)|0);
             $9919 = +HEAPF64[$9918>>3];
             HEAPF64[$3>>3] = $9919;
             $9920 = (($cj5array444) + ($ij5452$01224<<3)|0);
             $9921 = +HEAPF64[$9920>>3];
             HEAPF64[$319>>3] = $9921;
             $9922 = (($sj5array445) + ($ij5452$01224<<3)|0);
             $9923 = +HEAPF64[$9922>>3];
             HEAPF64[$320>>3] = $9923;
             $9924 = +HEAPF64[$3>>3];
             $9925 = $9924 * 0.5;
             $9926 = (+__Z5IKtand($9925));
             HEAPF64[$321>>3] = $9926;
             $9927 = $ij5452$01224&255;
             HEAP8[$4>>0] = $9927;
             HEAP8[$5>>0] = -1;
             $iij5453$01220 = (($ij5452$01224) + 1)|0;
             $9928 = ($iij5453$01220|0)<($$1894|0);
             L1520: do {
              if ($9928) {
               $iij5453$01221 = $iij5453$01220;
               L1521: while(1) {
                $9929 = (($j5valid451) + ($iij5453$01221)|0);
                $9930 = HEAP8[$9929>>0]|0;
                $9931 = ($9930<<24>>24)==(0);
                do {
                 if (!($9931)) {
                  $9933 = +HEAPF64[$9920>>3];
                  $9934 = (($cj5array444) + ($iij5453$01221<<3)|0);
                  $9935 = +HEAPF64[$9934>>3];
                  $9936 = $9933 - $9935;
                  $9937 = (+__Z5IKabsd($9936));
                  $9938 = $9937 < 9.9999999999999995E-7;
                  if (!($9938)) {
                   break;
                  }
                  $9939 = +HEAPF64[$9922>>3];
                  $9940 = (($sj5array445) + ($iij5453$01221<<3)|0);
                  $9941 = +HEAPF64[$9940>>3];
                  $9942 = $9939 - $9941;
                  $9943 = (+__Z5IKabsd($9942));
                  $9944 = $9943 < 9.9999999999999995E-7;
                  if ($9944) {
                   $$lcssa2035 = $9929;$iij5453$01221$lcssa = $iij5453$01221;
                   break L1521;
                  }
                 }
                } while(0);
                $iij5453$0 = (($iij5453$01221) + 1)|0;
                $9932 = ($iij5453$0|0)<($$1894|0);
                if ($9932) {
                 $iij5453$01221 = $iij5453$0;
                } else {
                 break L1520;
                }
               }
               HEAP8[$$lcssa2035>>0] = 0;
               $9945 = $iij5453$01221$lcssa&255;
               HEAP8[$5>>0] = $9945;
              }
             } while(0);
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
            $9946 = (($ij5452$01224) + 1)|0;
            $exitcond1748 = ($9946|0)==($$1894|0);
            if ($exitcond1748) {
             break L960;
            } else {
             $ij5452$01224 = $9946;
            }
           }
          }
         } while(0);
         $10105 = +HEAPF64[$234>>3];
         $10106 = $10105 * 0.70710678118654802;
         $10107 = +HEAPF64[$233>>3];
         $10108 = $10107 * 0.70710678118654802;
         $10109 = +HEAPF64[$45>>3];
         $10110 = $10106 * $10109;
         $10111 = +HEAPF64[$43>>3];
         $10112 = $10108 * $10111;
         $10113 = $10110 + $10112;
         $10114 = $10106 * $10111;
         $10115 = $10114 + $10113;
         $10116 = $10109 * $10108;
         $10117 = $10115 - $10116;
         $10118 = +HEAPF64[$22>>3];
         $10119 = $10118 + -1.5707963267949001;
         $10120 = (+__Z5IKabsd($10119));
         $10121 = $10120 + 3.14159265358979;
         $10122 = (+__Z6IKfmoddd($10121,6.2831853071795898));
         $10123 = $10122 + -3.14159265358979;
         $10124 = (+__Z5IKabsd($10123));
         $10125 = $10124 < 9.9999999999999995E-7;
         do {
          if ($10125) {
           $10126 = $10111 * $10111;
           $10127 = 0.72250000000000003 - $10126;
           $10128 = $10109 * $10109;
           $10129 = $10127 - $10128;
           $10130 = (+__Z5IKabsd($10129));
           $10131 = $10130 < 9.9999999999999995E-7;
           if (!($10131)) {
            break;
           }
           $10132 = (+__Z5IKabsd($10117));
           $10133 = $10132 < 9.9999999999999995E-7;
           if (!($10133)) {
            break;
           }
           HEAP16[$j5valid467>>1] = 0;
           HEAP8[$6>>0] = 2;
           $10134 = +HEAPF64[$45>>3];
           $10135 = $10134 * 0.83189033080770302;
           $10136 = +HEAPF64[$43>>3];
           $10137 = $10136 * 0.83189033080770302;
           $10138 = +HEAPF64[$234>>3];
           $10139 = $10135 * $10138;
           $10140 = $10138 * $10137;
           $10141 = $10139 - $10140;
           $10142 = +HEAPF64[$233>>3];
           $10143 = $10137 * $10142;
           $10144 = $10141 + $10143;
           $10145 = $10135 * $10142;
           $10146 = $10145 + $10144;
           HEAPF64[$sj5array466>>3] = $10146;
           $10147 = !($10146 >= -1.0000020000000001);
           $10148 = !($10146 <= 1.0000020000000001);
           $or$cond271 = $10147 | $10148;
           do {
            if ($or$cond271) {
             $10158 = (__Z13__DOUBLE_BITSd($10146)|0);
             $10159 = tempRet0;
             $10160 = $10159 & 2147483647;
             $10161 = ($10160>>>0)>(2146435072);
             $10162 = ($10158>>>0)>(0);
             $10163 = ($10160|0)==(2146435072);
             $10164 = $10163 & $10162;
             $10165 = $10161 | $10164;
             if (!($10165)) {
              $ij5468$01206 = 0;
              break;
             }
             HEAP8[$j5valid467>>0] = 1;
             HEAPF64[$cj5array465>>3] = 1.0;
             HEAPF64[$sj5array466>>3] = 0.0;
             HEAPF64[$j5array464>>3] = 0.0;
             $ij5468$01206 = 0;
            } else {
             HEAP8[$325>>0] = 1;
             HEAP8[$j5valid467>>0] = 1;
             $10149 = +HEAPF64[$sj5array466>>3];
             $10150 = (+__Z6IKasind($10149));
             HEAPF64[$j5array464>>3] = $10150;
             $10151 = (+__Z5IKcosd($10150));
             HEAPF64[$cj5array465>>3] = $10151;
             $10152 = +HEAPF64[$sj5array466>>3];
             HEAPF64[$326>>3] = $10152;
             $10153 = +HEAPF64[$j5array464>>3];
             $10154 = $10153 > 0.0;
             $$v48 = $10154 ? 3.14159265358979 : -3.14159265358979;
             $10155 = $$v48 - $10153;
             HEAPF64[$327>>3] = $10155;
             $10156 = +HEAPF64[$cj5array465>>3];
             $10157 = -$10156;
             HEAPF64[$328>>3] = $10157;
             $ij5468$01206 = 0;
            }
           } while(0);
           while(1) {
            $10166 = (($j5valid467) + ($ij5468$01206)|0);
            $10167 = HEAP8[$10166>>0]|0;
            $10168 = ($10167<<24>>24)==(0);
            do {
             if (!($10168)) {
              $10169 = $ij5468$01206&255;
              HEAP8[$4>>0] = $10169;
              HEAP8[$5>>0] = -1;
              $iij5469$01202 = (($ij5468$01206) + 1)|0;
              $10170 = ($iij5469$01202|0)<(2);
              do {
               if ($10170) {
                $10171 = (($sj5array466) + ($ij5468$01206<<3)|0);
                $10172 = (($j5valid467) + ($iij5469$01202)|0);
                $10173 = HEAP8[$10172>>0]|0;
                $10174 = ($10173<<24>>24)==(0);
                if ($10174) {
                 break;
                }
                $10175 = (($cj5array465) + ($ij5468$01206<<3)|0);
                $10176 = +HEAPF64[$10175>>3];
                $10177 = (($cj5array465) + ($iij5469$01202<<3)|0);
                $10178 = +HEAPF64[$10177>>3];
                $10179 = $10176 - $10178;
                $10180 = (+__Z5IKabsd($10179));
                $10181 = $10180 < 9.9999999999999995E-7;
                if (!($10181)) {
                 break;
                }
                $10182 = +HEAPF64[$10171>>3];
                $10183 = (($sj5array466) + ($iij5469$01202<<3)|0);
                $10184 = +HEAPF64[$10183>>3];
                $10185 = $10182 - $10184;
                $10186 = (+__Z5IKabsd($10185));
                $10187 = $10186 < 9.9999999999999995E-7;
                if (!($10187)) {
                 break;
                }
                HEAP8[$10172>>0] = 0;
                $10188 = $iij5469$01202&255;
                HEAP8[$5>>0] = $10188;
               }
              } while(0);
              $10189 = (($j5array464) + ($ij5468$01206<<3)|0);
              $10190 = +HEAPF64[$10189>>3];
              HEAPF64[$3>>3] = $10190;
              $10191 = (($cj5array465) + ($ij5468$01206<<3)|0);
              $10192 = +HEAPF64[$10191>>3];
              HEAPF64[$329>>3] = $10192;
              $10193 = (($sj5array466) + ($ij5468$01206<<3)|0);
              $10194 = +HEAPF64[$10193>>3];
              HEAPF64[$330>>3] = $10194;
              $10195 = +HEAPF64[$3>>3];
              $10196 = (+__Z5IKcosd($10195));
              $10197 = (+__Z5IKsind($10195));
              $10198 = +HEAPF64[$233>>3];
              $10199 = +HEAPF64[$43>>3];
              $10200 = $10198 * $10199;
              $10201 = +HEAPF64[$45>>3];
              $10202 = $10198 * $10201;
              $10203 = +HEAPF64[$234>>3];
              $10204 = $10199 * $10203;
              $10205 = $10201 * $10203;
              $10206 = $10197 * 0.77781745930520196;
              $10207 = $10197 * 0.70710678118654802;
              $10208 = $10196 * 0.70710678118654802;
              $10209 = $10196 * -0.84999999999999998;
              $10210 = -$10204;
              $10211 = $10207 * $10200;
              $10212 = $10211 + -0.84999999999999998;
              $10213 = $10207 * $10205;
              $10214 = $10212 + $10213;
              $10215 = $10207 * $10202;
              $10216 = $10215 + $10214;
              $10217 = $10207 * $10210;
              $10218 = $10217 + $10216;
              $10219 = $10202 * 0.063639610306789302;
              $10220 = $10219 + -0.93500000000000005;
              $10221 = $10200 * 0.063639610306789302;
              $10222 = $10220 - $10221;
              $10223 = $10205 * 0.063639610306789302;
              $10224 = $10222 - $10223;
              $10225 = $10204 * 0.063639610306789302;
              $10226 = $10224 - $10225;
              $10227 = $10206 * $10200;
              $10228 = $10227 + $10226;
              $10229 = $10206 * $10205;
              $10230 = $10229 + $10228;
              $10231 = $10206 * $10202;
              $10232 = $10231 + $10230;
              $10233 = $10206 * $10210;
              $10234 = $10233 + $10232;
              $10235 = (+__Z5IKabsd($10209));
              $10236 = $10235 > 5.0000000000000004E-6;
              if ($10236) {
               break;
              }
              $10237 = $10208 * $10200;
              $10238 = $10208 * $10205;
              $10239 = $10237 + $10238;
              $10240 = $10208 * $10202;
              $10241 = $10240 + $10239;
              $10242 = $10208 * $10210;
              $10243 = $10242 + $10241;
              $10244 = (+__Z5IKabsd($10243));
              $10245 = $10244 > 5.0000000000000004E-6;
              if ($10245) {
               break;
              }
              $10246 = (+__Z5IKabsd($10218));
              $10247 = $10246 > 5.0000000000000004E-6;
              if ($10247) {
               break;
              }
              $10248 = (+__Z5IKabsd($10234));
              $10249 = $10248 > 5.0000000000000004E-6;
              if ($10249) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $10250 = (($ij5468$01206) + 1)|0;
            $exitcond1745 = ($10250|0)==(2);
            if ($exitcond1745) {
             break L960;
            } else {
             $ij5468$01206 = $10250;
            }
           }
          }
         } while(0);
         $10251 = +HEAPF64[$234>>3];
         $10252 = $10251 * 0.70710678118654802;
         $10253 = +HEAPF64[$233>>3];
         $10254 = $10253 * 0.70710678118654802;
         $10255 = +HEAPF64[$45>>3];
         $10256 = $10255 * $10254;
         $10257 = +HEAPF64[$43>>3];
         $10258 = $10254 * $10257;
         $10259 = $10252 * $10257;
         $10260 = $10258 + $10259;
         $10261 = $10252 * $10255;
         $10262 = $10261 + $10260;
         $10263 = +HEAPF64[$22>>3];
         $10264 = $10263 + 1.5707963267949001;
         $10265 = (+__Z5IKabsd($10264));
         $10266 = $10265 + 3.14159265358979;
         $10267 = (+__Z6IKfmoddd($10266,6.2831853071795898));
         $10268 = $10267 + -3.14159265358979;
         $10269 = $10262 - $10256;
         $10270 = $10256 - $10262;
         $10271 = (+__Z5IKabsd($10268));
         $10272 = $10271 < 9.9999999999999995E-7;
         do {
          if ($10272) {
           $10273 = $10257 * $10257;
           $10274 = 0.72250000000000003 - $10273;
           $10275 = $10255 * $10255;
           $10276 = $10274 - $10275;
           $10277 = (+__Z5IKabsd($10276));
           $10278 = $10277 < 9.9999999999999995E-7;
           if (!($10278)) {
            break;
           }
           $10279 = (+__Z5IKabsd($10269));
           $10280 = $10279 < 9.9999999999999995E-7;
           if (!($10280)) {
            break;
           }
           $10281 = (+__Z5IKabsd($10270));
           $10282 = $10281 < 9.9999999999999995E-7;
           if (!($10282)) {
            break;
           }
           HEAP16[$j5valid475>>1] = 0;
           HEAP8[$6>>0] = 2;
           $10283 = +HEAPF64[$45>>3];
           $10284 = $10283 * 0.83189033080770302;
           $10285 = +HEAPF64[$43>>3];
           $10286 = $10285 * 0.83189033080770302;
           $10287 = +HEAPF64[$233>>3];
           $10288 = $10287 * $10286;
           $10289 = $10284 * $10287;
           $10290 = $10288 + $10289;
           $10291 = +HEAPF64[$234>>3];
           $10292 = $10284 * $10291;
           $10293 = $10290 + $10292;
           $10294 = $10286 * $10291;
           $10295 = $10293 - $10294;
           HEAPF64[$sj5array474>>3] = $10295;
           $10296 = !($10295 >= -1.0000020000000001);
           $10297 = !($10295 <= 1.0000020000000001);
           $or$cond273 = $10296 | $10297;
           do {
            if ($or$cond273) {
             $10307 = (__Z13__DOUBLE_BITSd($10295)|0);
             $10308 = tempRet0;
             $10309 = $10308 & 2147483647;
             $10310 = ($10309>>>0)>(2146435072);
             $10311 = ($10307>>>0)>(0);
             $10312 = ($10309|0)==(2146435072);
             $10313 = $10312 & $10311;
             $10314 = $10310 | $10313;
             if (!($10314)) {
              $ij5476$01201 = 0;
              break;
             }
             HEAP8[$j5valid475>>0] = 1;
             HEAPF64[$cj5array473>>3] = 1.0;
             HEAPF64[$sj5array474>>3] = 0.0;
             HEAPF64[$j5array472>>3] = 0.0;
             $ij5476$01201 = 0;
            } else {
             HEAP8[$331>>0] = 1;
             HEAP8[$j5valid475>>0] = 1;
             $10298 = +HEAPF64[$sj5array474>>3];
             $10299 = (+__Z6IKasind($10298));
             HEAPF64[$j5array472>>3] = $10299;
             $10300 = (+__Z5IKcosd($10299));
             HEAPF64[$cj5array473>>3] = $10300;
             $10301 = +HEAPF64[$sj5array474>>3];
             HEAPF64[$332>>3] = $10301;
             $10302 = +HEAPF64[$j5array472>>3];
             $10303 = $10302 > 0.0;
             $$v = $10303 ? 3.14159265358979 : -3.14159265358979;
             $10304 = $$v - $10302;
             HEAPF64[$333>>3] = $10304;
             $10305 = +HEAPF64[$cj5array473>>3];
             $10306 = -$10305;
             HEAPF64[$334>>3] = $10306;
             $ij5476$01201 = 0;
            }
           } while(0);
           while(1) {
            $10315 = (($j5valid475) + ($ij5476$01201)|0);
            $10316 = HEAP8[$10315>>0]|0;
            $10317 = ($10316<<24>>24)==(0);
            do {
             if (!($10317)) {
              $10318 = $ij5476$01201&255;
              HEAP8[$4>>0] = $10318;
              HEAP8[$5>>0] = -1;
              $iij5477$01197 = (($ij5476$01201) + 1)|0;
              $10319 = ($iij5477$01197|0)<(2);
              do {
               if ($10319) {
                $10320 = (($sj5array474) + ($ij5476$01201<<3)|0);
                $10321 = (($j5valid475) + ($iij5477$01197)|0);
                $10322 = HEAP8[$10321>>0]|0;
                $10323 = ($10322<<24>>24)==(0);
                if ($10323) {
                 break;
                }
                $10324 = (($cj5array473) + ($ij5476$01201<<3)|0);
                $10325 = +HEAPF64[$10324>>3];
                $10326 = (($cj5array473) + ($iij5477$01197<<3)|0);
                $10327 = +HEAPF64[$10326>>3];
                $10328 = $10325 - $10327;
                $10329 = (+__Z5IKabsd($10328));
                $10330 = $10329 < 9.9999999999999995E-7;
                if (!($10330)) {
                 break;
                }
                $10331 = +HEAPF64[$10320>>3];
                $10332 = (($sj5array474) + ($iij5477$01197<<3)|0);
                $10333 = +HEAPF64[$10332>>3];
                $10334 = $10331 - $10333;
                $10335 = (+__Z5IKabsd($10334));
                $10336 = $10335 < 9.9999999999999995E-7;
                if (!($10336)) {
                 break;
                }
                HEAP8[$10321>>0] = 0;
                $10337 = $iij5477$01197&255;
                HEAP8[$5>>0] = $10337;
               }
              } while(0);
              $10338 = (($j5array472) + ($ij5476$01201<<3)|0);
              $10339 = +HEAPF64[$10338>>3];
              HEAPF64[$3>>3] = $10339;
              $10340 = (($cj5array473) + ($ij5476$01201<<3)|0);
              $10341 = +HEAPF64[$10340>>3];
              HEAPF64[$335>>3] = $10341;
              $10342 = (($sj5array474) + ($ij5476$01201<<3)|0);
              $10343 = +HEAPF64[$10342>>3];
              HEAPF64[$336>>3] = $10343;
              $10344 = +HEAPF64[$3>>3];
              $10345 = (+__Z5IKcosd($10344));
              $10346 = (+__Z5IKsind($10344));
              $10347 = +HEAPF64[$233>>3];
              $10348 = +HEAPF64[$43>>3];
              $10349 = $10347 * $10348;
              $10350 = +HEAPF64[$45>>3];
              $10351 = $10347 * $10350;
              $10352 = +HEAPF64[$234>>3];
              $10353 = $10348 * $10352;
              $10354 = $10350 * $10352;
              $10355 = $10346 * 0.77781745930520196;
              $10356 = $10346 * 0.70710678118654802;
              $10357 = $10345 * 0.70710678118654802;
              $10358 = $10345 * -0.84999999999999998;
              $10359 = $10356 * $10349;
              $10360 = $10359 + -0.84999999999999998;
              $10361 = -$10353;
              $10362 = $10356 * $10361;
              $10363 = $10360 + $10362;
              $10364 = $10356 * $10354;
              $10365 = $10364 + $10363;
              $10366 = $10356 * $10351;
              $10367 = $10366 + $10365;
              $10368 = $10355 * $10349;
              $10369 = $10368 + -0.93500000000000005;
              $10370 = $10353 * 0.063639610306789302;
              $10371 = $10369 + $10370;
              $10372 = $10349 * 0.063639610306789302;
              $10373 = $10372 + $10371;
              $10374 = $10351 * 0.063639610306789302;
              $10375 = $10373 - $10374;
              $10376 = $10355 * $10361;
              $10377 = $10376 + $10375;
              $10378 = $10355 * $10354;
              $10379 = $10378 + $10377;
              $10380 = $10354 * 0.063639610306789302;
              $10381 = $10380 + $10379;
              $10382 = $10355 * $10351;
              $10383 = $10382 + $10381;
              $10384 = (+__Z5IKabsd($10358));
              $10385 = $10384 > 5.0000000000000004E-6;
              if ($10385) {
               break;
              }
              $10386 = $10357 * $10354;
              $10387 = -$10386;
              $10388 = $10357 * $10351;
              $10389 = $10387 - $10388;
              $10390 = $10357 * $10353;
              $10391 = $10390 + $10389;
              $10392 = $10357 * $10349;
              $10393 = $10391 - $10392;
              $10394 = (+__Z5IKabsd($10393));
              $10395 = $10394 > 5.0000000000000004E-6;
              if ($10395) {
               break;
              }
              $10396 = (+__Z5IKabsd($10367));
              $10397 = $10396 > 5.0000000000000004E-6;
              if ($10397) {
               break;
              }
              $10398 = (+__Z5IKabsd($10383));
              $10399 = $10398 > 5.0000000000000004E-6;
              if ($10399) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $10400 = (($ij5476$01201) + 1)|0;
            $exitcond1744 = ($10400|0)==(2);
            if ($exitcond1744) {
             break L960;
            } else {
             $ij5476$01201 = $10400;
            }
           }
          }
         } while(0);
         $10401 = +HEAPF64[$43>>3];
         $10402 = (+__Z5IKabsd($10401));
         $10403 = +HEAPF64[$45>>3];
         $10404 = (+__Z5IKabsd($10403));
         $10405 = $10402 + $10404;
         $10406 = (+__Z5IKabsd($10405));
         $10407 = $10406 < 9.9999999999999995E-7;
         if (!($10407)) {
          break;
         }
         $10408 = (+__Z5IKabsd(0.72250000000000003));
         $10409 = $10408 < 9.9999999999999995E-7;
         if (!($10409)) {
          break;
         }
         $10410 = (+__Z5IKabsd(0.0));
         $10411 = $10410 < 9.9999999999999995E-7;
         if (!($10411)) {
          break;
         }
         $10412 = (+__Z5IKabsd(-0.84999999999999998));
         $10413 = $10412 < 9.9999999999999995E-7;
         if (!($10413)) {
          break;
         }
         $10414 = (+__Z5IKabsd(-0.93500000000000005));
         $10415 = $10414 < 9.9999999999999995E-7;
         if (!($10415)) {
          break;
         }
         HEAPF64[$47>>3] = 0.0;
         HEAPF64[$7>>3] = 0.0;
         HEAPF64[$76>>3] = 0.0;
         HEAPF64[$75>>3] = 1.0;
         HEAPF64[$64>>3] = 0.0;
         HEAPF64[$65>>3] = 0.0;
         HEAPF64[$67>>3] = 0.0;
         HEAPF64[$68>>3] = 0.0;
         HEAPF64[$70>>3] = 0.0;
         HEAPF64[$71>>3] = 0.0;
         HEAPF64[$66>>3] = 0.0;
         HEAPF64[$69>>3] = 0.0;
         HEAPF64[$72>>3] = 0.0;
         $10416 = (+__Z5IKabsd(1.0));
         $10417 = $10416 < 1.0E-8;
         ;HEAP32[$43>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;HEAP32[$43+12>>2]=0|0;
         ;HEAP32[$45>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;HEAP32[$45+12>>2]=0|0;
         ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
         if ($10417) {
          break;
         }
         HEAPF64[$op481>>3] = 1.0;
         HEAPF64[$337>>3] = 0.0;
         HEAPF64[$338>>3] = -1.0;
         __ZN8IKSolver10polyroots2EPdS0_Ri($op481,$zeror482,$numroots483);
         $10418 = HEAP32[$numroots483>>2]|0;
         $10419 = ($10418|0)>(0);
         if (!($10419)) {
          HEAP16[$j5valid492>>1] = 257;
          HEAP8[$6>>0] = 2;
          break;
         }
         $10420 = HEAP32[$numroots483>>2]|0;
         $10421 = ($10420|0)>(1);
         $numsolutions488$01188 = 0;
         while(1) {
          $10422 = (($zeror482) + ($numsolutions488$01188<<3)|0);
          $10423 = +HEAPF64[$10422>>3];
          $10424 = (+Math_atan((+$10423)));
          $10425 = $10424 * 2.0;
          $10426 = $10425 + 6.2831853071795898;
          $10427 = $10425 > 3.14159265358979;
          $10428 = (($j5array484) + ($numsolutions488$01188<<3)|0);
          HEAPF64[$10428>>3] = $10425;
          do {
           if ($10427) {
            $10429 = $10425 + -6.2831853071795898;
            HEAPF64[$10428>>3] = $10429;
           } else {
            $10430 = $10425 < -3.14159265358979;
            if (!($10430)) {
             break;
            }
            HEAPF64[$10428>>3] = $10426;
           }
          } while(0);
          $10431 = +HEAPF64[$10428>>3];
          $10432 = (+__Z5IKsind($10431));
          $10433 = (($sj5array486) + ($numsolutions488$01188<<3)|0);
          HEAPF64[$10433>>3] = $10432;
          $10434 = +HEAPF64[$10428>>3];
          $10435 = (+__Z5IKcosd($10434));
          $10436 = (($cj5array485) + ($numsolutions488$01188<<3)|0);
          HEAPF64[$10436>>3] = $10435;
          $10437 = (($numsolutions488$01188) + 1)|0;
          $10438 = ($10437|0)<($10420|0);
          if ($10438) {
           $numsolutions488$01188 = $10437;
          } else {
           break;
          }
         }
         $$1895 = $10421 ? $10420 : 1;
         HEAP16[$j5valid492>>1] = 257;
         HEAP8[$6>>0] = 2;
         $ij5493$01194 = 0;
         while(1) {
          $10439 = (($j5valid492) + ($ij5493$01194)|0);
          $10440 = HEAP8[$10439>>0]|0;
          $10441 = ($10440<<24>>24)==(0);
          if (!($10441)) {
           $10442 = (($j5array484) + ($ij5493$01194<<3)|0);
           $10443 = +HEAPF64[$10442>>3];
           HEAPF64[$3>>3] = $10443;
           $10444 = (($cj5array485) + ($ij5493$01194<<3)|0);
           $10445 = +HEAPF64[$10444>>3];
           HEAPF64[$339>>3] = $10445;
           $10446 = (($sj5array486) + ($ij5493$01194<<3)|0);
           $10447 = +HEAPF64[$10446>>3];
           HEAPF64[$340>>3] = $10447;
           $10448 = +HEAPF64[$3>>3];
           $10449 = $10448 * 0.5;
           $10450 = (+__Z5IKtand($10449));
           HEAPF64[$341>>3] = $10450;
           $10451 = $ij5493$01194&255;
           HEAP8[$4>>0] = $10451;
           HEAP8[$5>>0] = -1;
           $iij5494$01190 = (($ij5493$01194) + 1)|0;
           $10452 = ($iij5494$01190|0)<($$1895|0);
           L1601: do {
            if ($10452) {
             $iij5494$01191 = $iij5494$01190;
             L1602: while(1) {
              $10453 = (($j5valid492) + ($iij5494$01191)|0);
              $10454 = HEAP8[$10453>>0]|0;
              $10455 = ($10454<<24>>24)==(0);
              do {
               if (!($10455)) {
                $10457 = +HEAPF64[$10444>>3];
                $10458 = (($cj5array485) + ($iij5494$01191<<3)|0);
                $10459 = +HEAPF64[$10458>>3];
                $10460 = $10457 - $10459;
                $10461 = (+__Z5IKabsd($10460));
                $10462 = $10461 < 9.9999999999999995E-7;
                if (!($10462)) {
                 break;
                }
                $10463 = +HEAPF64[$10446>>3];
                $10464 = (($sj5array486) + ($iij5494$01191<<3)|0);
                $10465 = +HEAPF64[$10464>>3];
                $10466 = $10463 - $10465;
                $10467 = (+__Z5IKabsd($10466));
                $10468 = $10467 < 9.9999999999999995E-7;
                if ($10468) {
                 $$lcssa = $10453;$iij5494$01191$lcssa = $iij5494$01191;
                 break L1602;
                }
               }
              } while(0);
              $iij5494$0 = (($iij5494$01191) + 1)|0;
              $10456 = ($iij5494$0|0)<($$1895|0);
              if ($10456) {
               $iij5494$01191 = $iij5494$0;
              } else {
               break L1601;
              }
             }
             HEAP8[$$lcssa>>0] = 0;
             $10469 = $iij5494$01191$lcssa&255;
             HEAP8[$5>>0] = $10469;
            }
           } while(0);
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          }
          $10470 = (($ij5493$01194) + 1)|0;
          $exitcond1743 = ($10470|0)==($$1895|0);
          if ($exitcond1743) {
           break;
          } else {
           $ij5493$01194 = $10470;
          }
         }
        }
       } while(0);
       $11957 = (($ij4258$01317) + 1)|0;
       $exitcond1764 = ($11957|0)==(2);
       if ($exitcond1764) {
        break L16;
       } else {
        $ij4258$01317 = $11957;
       }
      }
     }
    }
    $952 = +HEAPF64[$43>>3];
    $953 = $952 * $952;
    $954 = +HEAPF64[$45>>3];
    $955 = $954 * $954;
    $956 = +HEAPF64[$23>>3];
    $957 = $956 * $956;
    $958 = +HEAPF64[$24>>3];
    $959 = $958 * $958;
    $960 = $952 * $953;
    $961 = $952 * $960;
    $962 = $958 * $959;
    $963 = $958 * $962;
    $964 = $956 * $957;
    $965 = $956 * $964;
    $966 = $954 * $955;
    $967 = $954 * $966;
    $968 = $965 * 2.0;
    $969 = $963 * 2.0;
    $970 = $954 * $960;
    $971 = $953 * $955;
    $972 = $957 * 2.0;
    $973 = $972 * $959;
    $974 = $957 * 4.0;
    $975 = $974 * $959;
    $976 = $952 * $966;
    $977 = -$976;
    $978 = $969 * $977;
    $979 = $975 * $977;
    $980 = $979 + $978;
    $981 = $970 * $969;
    $982 = $980 - $981;
    $983 = $968 * $977;
    $984 = $983 + $982;
    $985 = $971 * $968;
    $986 = $985 + $984;
    $987 = $970 * $975;
    $988 = $986 - $987;
    $989 = $961 * $963;
    $990 = $989 + $988;
    $991 = $961 * $965;
    $992 = $991 + $990;
    $993 = $961 * $973;
    $994 = $993 + $992;
    $995 = $971 * $969;
    $996 = $995 + $994;
    $997 = $970 * $968;
    $998 = $996 - $997;
    $999 = $971 * $975;
    $1000 = $999 + $998;
    $1001 = $967 * $973;
    $1002 = $1001 + $1000;
    $1003 = $967 * $963;
    $1004 = $1003 + $1002;
    $1005 = $967 * $965;
    $1006 = $1005 + $1004;
    $1007 = (+__Z5IKabsd($1006));
    $1008 = $1007 < 9.9999999999999995E-7;
    if (!($1008)) {
     HEAP16[$j4valid>>1] = 0;
     HEAP8[$2>>0] = 2;
     $1009 = +HEAPF64[$43>>3];
     $1010 = $1009 * $1009;
     $1011 = +HEAPF64[$23>>3];
     $1012 = $1011 * $1011;
     $1013 = +HEAPF64[$45>>3];
     $1014 = $1013 * $1013;
     $1015 = +HEAPF64[$24>>3];
     $1016 = $1015 * $1015;
     $1017 = $1013 * 0.031819805153394602;
     $1018 = $1017 * $1015;
     $1019 = $1012 * 0.5;
     $1020 = $1009 * $1013;
     $1021 = $1015 * 0.21213203435596401;
     $1022 = +HEAPF64[$76>>3];
     $1023 = $1021 * $1022;
     $1024 = $1016 * 0.5;
     $1025 = $1009 * 0.031819805153394602;
     $1026 = $1025 * $1015;
     $1027 = $1014 * $1019;
     $1028 = $1010 * $1019;
     $1029 = $1014 * $1024;
     $1030 = $1010 * $1024;
     $1031 = $1027 + $1029;
     $1032 = $1028 + $1030;
     $1033 = $1032 - $1031;
     $1034 = $1012 * $1020;
     $1035 = $1020 * $1016;
     $1036 = -$1035;
     $1037 = $1036 - $1034;
     $1038 = $1037 + $1032;
     $1039 = $1031 + $1038;
     __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x96,$1039,$1033,1.9999999999999999E-6);
     $1040 = HEAP8[$77>>0]|0;
     $1041 = ($1040<<24>>24)==(0);
     if (!($1041)) {
      $1042 = +HEAPF64[$x96>>3];
      $1043 = $1039 * $1039;
      $1044 = $1033 * $1033;
      $1045 = $1044 + $1043;
      $1046 = $1045 < -1.0000000000000001E-5;
      if (!($1046)) {
       $1047 = (+__Z6IKsqrtd($1045));
       $1048 = (+__Z5IKabsd($1047));
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x97,$1048,-1);
       $1049 = HEAP8[$78>>0]|0;
       $1050 = ($1049<<24>>24)==(0);
       if (!($1050)) {
        $1051 = +HEAPF64[$x97>>3];
        $1052 = +HEAPF64[$45>>3];
        $1053 = $1023 * $1052;
        $1054 = +HEAPF64[$75>>3];
        $1055 = $1026 * $1054;
        $1056 = -$1055;
        $1057 = $1056 - $1053;
        $1058 = $1026 + $1057;
        $1059 = +HEAPF64[$43>>3];
        $1060 = $1023 * $1059;
        $1061 = $1060 + $1058;
        $1062 = $1018 * $1054;
        $1063 = $1062 + $1061;
        $1064 = $1063 - $1018;
        $1065 = $1051 * $1064;
        $1066 = $1065 < -1.0000020000000001;
        $1067 = $1065 > 1.0000020000000001;
        $or$cond99 = $1066 | $1067;
        if (!($or$cond99)) {
         $1068 = (+__Z6IKasind($1065));
         $1069 = -$1042;
         $1070 = $1069 - $1068;
         HEAPF64[$j4array>>3] = $1070;
         $1071 = (+__Z5IKsind($1070));
         HEAPF64[$sj4array>>3] = $1071;
         $1072 = (+__Z5IKcosd($1070));
         HEAPF64[$cj4array>>3] = $1072;
         $1073 = $1068 + 3.14159265358979;
         $1074 = $1073 - $1042;
         HEAPF64[$79>>3] = $1074;
         $1075 = (+__Z5IKsind($1074));
         HEAPF64[$80>>3] = $1075;
         $1076 = +HEAPF64[$79>>3];
         $1077 = (+__Z5IKcosd($1076));
         HEAPF64[$81>>3] = $1077;
         $1078 = +HEAPF64[$j4array>>3];
         $1079 = $1078 > 3.14159265358979;
         if ($1079) {
          $1080 = $1078 + -6.2831853071795898;
          HEAPF64[$j4array>>3] = $1080;
         } else {
          $1081 = $1078 < -3.14159265358979;
          if ($1081) {
           $1082 = $1078 + 6.2831853071795898;
           HEAPF64[$j4array>>3] = $1082;
          }
         }
         HEAP8[$j4valid>>0] = 1;
         $1083 = +HEAPF64[$79>>3];
         $1084 = $1083 > 3.14159265358979;
         if ($1084) {
          $1085 = $1083 + -6.2831853071795898;
          HEAPF64[$79>>3] = $1085;
         } else {
          $1086 = $1083 < -3.14159265358979;
          if ($1086) {
           $1087 = $1083 + 6.2831853071795898;
           HEAPF64[$79>>3] = $1087;
          }
         }
         HEAP8[$82>>0] = 1;
         $ij4$01497 = 0;
         while(1) {
          $1088 = (($j4valid) + ($ij4$01497)|0);
          $1089 = HEAP8[$1088>>0]|0;
          $1090 = ($1089<<24>>24)==(0);
          L1630: do {
           if (!($1090)) {
            $1091 = $ij4$01497&255;
            HEAP8[$0>>0] = $1091;
            HEAP8[$1>>0] = -1;
            $iij4$01318 = (($ij4$01497) + 1)|0;
            $1092 = ($iij4$01318|0)<(2);
            do {
             if ($1092) {
              $1093 = (($sj4array) + ($ij4$01497<<3)|0);
              $1094 = (($j4valid) + ($iij4$01318)|0);
              $1095 = HEAP8[$1094>>0]|0;
              $1096 = ($1095<<24>>24)==(0);
              if ($1096) {
               break;
              }
              $1097 = (($cj4array) + ($ij4$01497<<3)|0);
              $1098 = +HEAPF64[$1097>>3];
              $1099 = (($cj4array) + ($iij4$01318<<3)|0);
              $1100 = +HEAPF64[$1099>>3];
              $1101 = $1098 - $1100;
              $1102 = (+__Z5IKabsd($1101));
              $1103 = $1102 < 9.9999999999999995E-7;
              if (!($1103)) {
               break;
              }
              $1104 = +HEAPF64[$1093>>3];
              $1105 = (($sj4array) + ($iij4$01318<<3)|0);
              $1106 = +HEAPF64[$1105>>3];
              $1107 = $1104 - $1106;
              $1108 = (+__Z5IKabsd($1107));
              $1109 = $1108 < 9.9999999999999995E-7;
              if (!($1109)) {
               break;
              }
              HEAP8[$1094>>0] = 0;
              $1110 = $iij4$01318&255;
              HEAP8[$1>>0] = $1110;
             }
            } while(0);
            $1111 = (($j4array) + ($ij4$01497<<3)|0);
            $1112 = +HEAPF64[$1111>>3];
            HEAPF64[$this>>3] = $1112;
            $1113 = (($cj4array) + ($ij4$01497<<3)|0);
            $1114 = +HEAPF64[$1113>>3];
            HEAPF64[$83>>3] = $1114;
            $1115 = (($sj4array) + ($ij4$01497<<3)|0);
            $1116 = +HEAPF64[$1115>>3];
            HEAPF64[$84>>3] = $1116;
            $1117 = +HEAPF64[$45>>3];
            $1118 = $1117 * 0.70710678118654802;
            $1119 = +HEAPF64[$43>>3];
            $1120 = $1119 * 0.70710678118654802;
            $1121 = +HEAPF64[$this>>3];
            $1122 = (+__Z5IKcosd($1121));
            $1123 = $1117 * $1117;
            $1124 = +HEAPF64[$23>>3];
            $1125 = $1124 * $1124;
            $1126 = $1119 * $1119;
            $1127 = +HEAPF64[$24>>3];
            $1128 = $1127 * $1127;
            $1129 = (+__Z5IKsind($1121));
            $1130 = +HEAPF64[$76>>3];
            $1131 = $1127 * $1130;
            $1132 = $1127 * 0.044999999999999998;
            $1133 = $1126 * 0.5;
            $1134 = $1117 * 0.031819805153394602;
            $1135 = $1134 * $1127;
            $1136 = $1123 * 0.5;
            $1137 = $1119 * 0.031819805153394602;
            $1138 = $1137 * $1127;
            $1139 = $1117 * $1119;
            $1140 = $1136 * $1125;
            $1141 = $1133 * $1125;
            $1142 = $1136 * $1128;
            $1143 = $1133 * $1128;
            $1144 = $1140 + $1142;
            $1145 = $1141 + $1143;
            $1146 = $1131 * 0.29999999999999999;
            $1147 = $1132 + $1146;
            $1148 = +HEAPF64[$75>>3];
            $1149 = $1132 * $1148;
            $1150 = $1147 - $1149;
            $1151 = $1120 - $1118;
            $1152 = $1122 * $1151;
            $1153 = $1152 + $1150;
            $1154 = $1118 + $1120;
            $1155 = $1154 * $1129;
            $1156 = $1155 + $1153;
            $1157 = (+__Z5IKabsd($1156));
            $1158 = $1157 > 5.0000000000000004E-6;
            if ($1158) {
             break;
            }
            $1159 = $1119 * -0.21213203435596401;
            $1160 = $1159 * $1131;
            $1161 = $1144 - $1145;
            $1162 = $1122 * $1161;
            $1163 = $1160 + $1162;
            $1164 = $1135 * $1148;
            $1165 = $1164 + $1163;
            $1166 = $1165 - $1135;
            $1167 = $1138 * $1148;
            $1168 = $1167 + $1166;
            $1169 = $1168 - $1138;
            $1170 = $1117 * -0.21213203435596401;
            $1171 = $1170 * $1131;
            $1172 = $1171 + $1169;
            $1173 = -$1145;
            $1174 = $1173 - $1144;
            $1175 = $1139 * $1125;
            $1176 = $1174 - $1175;
            $1177 = $1139 * $1128;
            $1178 = $1176 - $1177;
            $1179 = $1129 * $1178;
            $1180 = $1179 + $1172;
            $1181 = (+__Z5IKabsd($1180));
            $1182 = $1181 > 5.0000000000000004E-6;
            if ($1182) {
             break;
            }
            $1183 = $1117 * $1130;
            $1184 = +HEAPF64[$83>>3];
            $1185 = $1116 * 0.031819805153394602;
            $1186 = $1116 * $1148;
            $1187 = $1119 * 6.6666666666666696;
            $1188 = $1116 * 0.38890872965260098;
            $1189 = $1117 * 0.21213203435596401;
            $1190 = $1184 * 0.031819805153394602;
            $1191 = $1119 * $1130;
            $1192 = $1116 * 12.2222222222222;
            $1193 = $1117 * 6.6666666666666696;
            $1194 = $1148 * $1184;
            $1195 = $1117 * $1184;
            $1196 = +HEAPF64[$47>>3];
            $1197 = $1124 * $1196;
            $1198 = $1119 * 0.21213203435596401;
            $1199 = $1119 * $1184;
            $1200 = -$1183;
            $1201 = $1184 * $1200;
            $1202 = $1187 * $1194;
            $1203 = $1201 - $1202;
            $1204 = $1191 * $1184;
            $1205 = $1203 - $1204;
            $1206 = -$1117;
            $1207 = $1192 * $1206;
            $1208 = $1207 + $1205;
            $1209 = $1195 * 12.2222222222222;
            $1210 = $1208 - $1209;
            $1211 = $1199 * 12.2222222222222;
            $1212 = $1210 - $1211;
            $1213 = $1116 * $1183;
            $1214 = $1212 - $1213;
            $1215 = $1148 * 1.4142135623731;
            $1216 = $1215 * $1197;
            $1217 = $1216 + $1214;
            $1218 = $1192 * $1119;
            $1219 = $1218 + $1217;
            $1220 = $1187 * $1186;
            $1221 = $1220 + $1219;
            $1222 = $1197 * 1.4142135623731;
            $1223 = $1221 - $1222;
            $1224 = $1130 * -9.4280904158206305;
            $1225 = $1224 * $1197;
            $1226 = $1225 + $1223;
            $1227 = $1116 * $1191;
            $1228 = $1227 + $1226;
            $1229 = $1193 * $1194;
            $1230 = $1228 - $1229;
            $1231 = -$1186;
            $1232 = $1193 * $1231;
            $1233 = $1232 + $1230;
            $1234 = (+__Z5IKabsd($1233));
            $1235 = $1234 < 9.9999999999999995E-7;
            do {
             if (!($1235)) {
              $1236 = $1197 * 0.044999999999999998;
              $1237 = $1185 * $1200;
              $1238 = $1237 - $1236;
              $1239 = $1190 * $1200;
              $1240 = $1239 + $1238;
              $1241 = $1148 * 0.044999999999999998;
              $1242 = $1241 * $1197;
              $1243 = $1242 + $1240;
              $1244 = $1188 * $1206;
              $1245 = $1244 + $1243;
              $1246 = $1185 * $1191;
              $1247 = $1246 + $1245;
              $1248 = $1191 * $1190;
              $1249 = $1247 - $1248;
              $1250 = $1198 * $1186;
              $1251 = $1250 + $1249;
              $1252 = $1188 * $1119;
              $1253 = $1252 + $1251;
              $1254 = $1189 * $1194;
              $1255 = $1253 - $1254;
              $1256 = $1130 * -0.29999999999999999;
              $1257 = $1256 * $1197;
              $1258 = $1257 + $1255;
              $1259 = $1199 * 0.38890872965260098;
              $1260 = $1258 - $1259;
              $1261 = $1195 * 0.38890872965260098;
              $1262 = $1260 - $1261;
              $1263 = $1198 * $1194;
              $1264 = $1262 - $1263;
              $1265 = $1189 * $1231;
              $1266 = $1265 + $1264;
              $1267 = (+__Z6IKsignd($1266));
              $1268 = (+__Z5IKabsd($1267));
              $1269 = $1268 < 9.9999999999999995E-7;
              if ($1269) {
               break;
              }
              HEAP8[$6>>0] = 1;
              $6242 = +HEAPF64[$75>>3];
              $6243 = $6242 * $6242;
              $6244 = +HEAPF64[$23>>3];
              $6245 = +HEAPF64[$76>>3];
              $6246 = $6244 * $6245;
              $6247 = +HEAPF64[$45>>3];
              $6248 = +HEAPF64[$84>>3];
              $6249 = $6247 * $6248;
              $6250 = $6242 * 0.21213203435596401;
              $6251 = +HEAPF64[$43>>3];
              $6252 = $6248 * $6251;
              $6253 = +HEAPF64[$47>>3];
              $6254 = $6253 * 0.70710678118654802;
              $6255 = $6242 * $6244;
              $6256 = +HEAPF64[$83>>3];
              $6257 = $6251 * $6256;
              $6258 = $6245 * 0.031819805153394602;
              $6259 = $6253 * 0.044999999999999998;
              $6260 = $6247 * $6256;
              $6261 = -$6249;
              $6262 = $6250 * $6261;
              $6263 = $6258 * $6261;
              $6264 = $6262 + $6263;
              $6265 = $6253 * -0.29999999999999999;
              $6266 = $6246 * $6265;
              $6267 = $6264 + $6266;
              $6268 = $6252 * 0.38890872965260098;
              $6269 = $6268 + $6267;
              $6270 = $6244 * $6259;
              $6271 = $6269 - $6270;
              $6272 = $6258 * $6260;
              $6273 = $6271 - $6272;
              $6274 = $6258 * $6257;
              $6275 = $6273 - $6274;
              $6276 = -$6250;
              $6277 = $6260 * $6276;
              $6278 = $6277 + $6275;
              $6279 = $6257 * $6276;
              $6280 = $6279 + $6278;
              $6281 = $6250 * $6252;
              $6282 = $6281 + $6280;
              $6283 = $6258 * $6252;
              $6284 = $6283 + $6282;
              $6285 = $6249 * 0.38890872965260098;
              $6286 = $6284 - $6285;
              $6287 = $6257 * 0.38890872965260098;
              $6288 = $6286 - $6287;
              $6289 = $6260 * 0.38890872965260098;
              $6290 = $6288 - $6289;
              $6291 = $6255 * $6259;
              $6292 = $6291 + $6290;
              $6293 = (+__Z6IKsignd($6292));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1272,$6293,-1);
              $6294 = HEAP8[$223>>0]|0;
              $6295 = ($6294<<24>>24)==(0);
              if ($6295) {
               break L1630;
              }
              $6296 = +HEAPF64[$75>>3];
              $6297 = $6296 * -0.027;
              $6298 = +HEAPF64[$76>>3];
              $6299 = $6297 * $6298;
              $6300 = $6299 + -0.30452499999999999;
              $6301 = $6243 * 0.087974999999999997;
              $6302 = $6300 - $6301;
              $6303 = $6298 * 0.049500000000000002;
              $6304 = $6302 - $6303;
              $6305 = +HEAPF64[$47>>3];
              $6306 = $6305 * $6305;
              $6307 = $6306 + $6304;
              $6308 = $6296 * 0.33000000000000002;
              $6309 = $6307 - $6308;
              $6310 = $6255 * 0.01125;
              $6311 = $6246 * 0.16702500000000001;
              $6312 = $6310 - $6311;
              $6313 = -$6254;
              $6314 = $6257 * $6313;
              $6315 = $6312 + $6314;
              $6316 = $6260 * $6313;
              $6317 = $6316 + $6315;
              $6318 = $6254 * $6261;
              $6319 = $6318 + $6317;
              $6320 = $6296 * -0.087974999999999997;
              $6321 = $6246 * $6320;
              $6322 = $6319 + $6321;
              $6323 = $6252 * $6254;
              $6324 = $6323 + $6322;
              $6325 = +HEAPF64[$23>>3];
              $6326 = $6325 * 0.027;
              $6327 = $6243 * $6326;
              $6328 = $6324 + $6327;
              $6329 = $6325 * 0.038249999999999999;
              $6330 = $6328 - $6329;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1273,$6309,$6330,1.9999999999999999E-6);
              $6331 = HEAP8[$224>>0]|0;
              $6332 = ($6331<<24>>24)==(0);
              if ($6332) {
               break L1630;
              }
              $6333 = +HEAPF64[$x1272>>3];
              $6334 = $6333 * 1.5707963267949001;
              $6335 = $6334 + -1.5707963267949001;
              $6336 = +HEAPF64[$x1273>>3];
              $6337 = $6336 + $6335;
              $6338 = (+__Z5IKsind($6337));
              $6339 = (+__Z5IKcosd($6337));
              $6340 = $6337 > 3.14159265358979;
              do {
               if ($6340) {
                $6341 = $6337 + -6.2831853071795898;
                $6344 = $6341;
               } else {
                $6342 = $6337 < -3.14159265358979;
                if (!($6342)) {
                 $6344 = $6337;
                 break;
                }
                $6343 = $6337 + 6.2831853071795898;
                $6344 = $6343;
               }
              } while(0);
              HEAP8[$4>>0] = 0;
              HEAP8[$5>>0] = -1;
              HEAPF64[$3>>3] = $6344;
              HEAPF64[$225>>3] = $6339;
              HEAPF64[$226>>3] = $6338;
              $6345 = +HEAPF64[$3>>3];
              $6346 = (+__Z5IKsind($6345));
              $6347 = (+__Z5IKcosd($6345));
              $6348 = +HEAPF64[$75>>3];
              $6349 = $6348 * 0.044999999999999998;
              $6350 = +HEAPF64[$83>>3];
              $6351 = $6350 * 0.70710678118654802;
              $6352 = +HEAPF64[$23>>3];
              $6353 = +HEAPF64[$45>>3];
              $6354 = $6352 * $6353;
              $6355 = +HEAPF64[$24>>3];
              $6356 = $6353 * $6355;
              $6357 = +HEAPF64[$84>>3];
              $6358 = $6352 * $6357;
              $6359 = +HEAPF64[$43>>3];
              $6360 = $6359 * 0.70710678118654802;
              $6361 = $6355 * $6357;
              $6362 = $6348 * 0.29999999999999999;
              $6363 = +HEAPF64[$76>>3];
              $6364 = $6363 * 0.29999999999999999;
              $6365 = $6363 * 0.044999999999999998;
              $6366 = $6359 * 0.063639610306789302;
              $6367 = $6357 * 0.70710678118654802;
              $6368 = $6350 * 0.063639610306789302;
              $6369 = $6346 * $6352;
              $6370 = $6347 * $6359;
              $6371 = $6347 * $6352;
              $6372 = $6347 * $6357;
              $6373 = +HEAPF64[$47>>3];
              $6374 = $6347 * $6373;
              $6375 = $6350 * $6353;
              $6376 = $6346 * $6375;
              $6377 = $6354 * $6367;
              $6378 = $6353 * $6357;
              $6379 = $6346 * $6378;
              $6380 = $6359 * 0.77781745930520196;
              $6381 = $6346 * $6380;
              $6382 = -$6349;
              $6383 = $6369 * $6382;
              $6384 = -$6347;
              $6385 = $6365 * $6384;
              $6386 = $6383 + $6385;
              $6387 = $6362 * $6384;
              $6388 = $6387 + $6386;
              $6389 = $6369 * $6364;
              $6390 = $6389 + $6388;
              $6391 = $6369 * 0.044999999999999998;
              $6392 = $6391 + $6390;
              $6393 = $6347 * 0.55000000000000004;
              $6394 = $6392 - $6393;
              $6395 = $6373 + $6394;
              $6396 = -$6357;
              $6397 = $6346 * $6353;
              $6398 = $6371 * 0.044999999999999998;
              $6399 = -$6353;
              $6400 = $6351 * $6399;
              $6401 = $6398 + $6400;
              $6402 = $6357 * $6360;
              $6403 = $6401 + $6402;
              $6404 = $6346 * 0.55000000000000004;
              $6405 = $6404 + $6403;
              $6406 = $6351 * $6359;
              $6407 = $6405 - $6406;
              $6408 = $6371 * $6364;
              $6409 = $6408 + $6407;
              $6410 = $6371 * $6382;
              $6411 = $6410 + $6409;
              $6412 = $6346 * $6365;
              $6413 = $6412 + $6411;
              $6414 = $6346 * $6362;
              $6415 = $6414 + $6413;
              $6416 = $6367 * $6399;
              $6417 = $6416 + $6415;
              $6418 = $6347 * $6351;
              $6419 = $6418 * $6356;
              $6420 = $6419 + $6377;
              $6421 = -$6351;
              $6422 = $6354 * $6421;
              $6423 = $6422 + $6420;
              $6424 = $6352 * $6359;
              $6425 = $6351 * $6424;
              $6426 = $6425 + $6423;
              $6427 = $6347 * $6356;
              $6428 = $6427 * $6367;
              $6429 = $6428 + $6426;
              $6430 = $6360 * $6384;
              $6431 = $6361 * $6430;
              $6432 = $6431 + $6429;
              $6433 = $6358 * $6360;
              $6434 = $6433 + $6432;
              $6435 = $6355 * $6373;
              $6436 = $6346 * $6435;
              $6437 = $6434 - $6436;
              $6438 = $6351 * $6355;
              $6439 = $6438 * $6370;
              $6440 = $6439 + $6437;
              $6441 = $6356 * $6367;
              $6442 = $6441 + 0.044999999999999998;
              $6443 = $6442 + $6364;
              $6444 = $6352 * $6351;
              $6445 = $6444 * $6370;
              $6446 = $6443 - $6445;
              $6447 = $6446 - $6349;
              $6448 = $6355 * $6359;
              $6449 = $6351 * $6448;
              $6450 = $6449 + $6447;
              $6451 = $6356 * $6421;
              $6452 = $6451 + $6450;
              $6453 = $6377 * $6384;
              $6454 = $6453 + $6452;
              $6455 = $6347 * $6358;
              $6456 = $6455 * $6360;
              $6457 = $6456 + $6454;
              $6458 = $6361 * $6360;
              $6459 = $6458 + $6457;
              $6460 = $6351 * $6384;
              $6461 = $6460 * $6354;
              $6462 = $6461 + $6459;
              $6463 = $6369 * $6373;
              $6464 = $6463 + $6462;
              $6465 = $6347 * $6354;
              $6466 = $6368 * $6465;
              $6467 = $6466 + -0.21249999999999999;
              $6468 = $6354 * 0.063639610306789302;
              $6469 = $6468 * $6372;
              $6470 = $6467 + $6469;
              $6471 = $6368 * $6356;
              $6472 = $6471 + $6470;
              $6473 = $6381 * $6396;
              $6474 = $6472 + $6473;
              $6475 = $6350 * $6355;
              $6476 = $6475 * $6366;
              $6477 = $6474 - $6476;
              $6478 = $6350 * $6366;
              $6479 = $6371 * $6478;
              $6480 = $6479 + $6477;
              $6481 = $6374 * 1.1000000000000001;
              $6482 = $6481 + $6480;
              $6483 = +HEAPF64[$60>>3];
              $6484 = $6482 - $6483;
              $6485 = $6373 * -0.089999999999999996;
              $6486 = $6369 * $6485;
              $6487 = $6486 + $6484;
              $6488 = $6379 * 0.77781745930520196;
              $6489 = $6488 + $6487;
              $6490 = $6376 * 0.77781745930520196;
              $6491 = $6490 + $6489;
              $6492 = $6357 * -0.063639610306789302;
              $6493 = $6356 * $6492;
              $6494 = $6493 + $6491;
              $6495 = $6350 * $6381;
              $6496 = $6495 + $6494;
              $6497 = $6358 * $6384;
              $6498 = $6497 * $6366;
              $6499 = $6498 + $6496;
              $6500 = $6361 * $6366;
              $6501 = $6499 - $6500;
              $6502 = (+__Z5IKabsd($6395));
              $6503 = $6502 > 5.0000000000000004E-6;
              if ($6503) {
               break L1630;
              }
              $6504 = $6374 + -0.55000000000000004;
              $6505 = $6346 * $6396;
              $6506 = $6505 * $6360;
              $6507 = $6506 + $6504;
              $6508 = $6397 * $6367;
              $6509 = $6508 + $6507;
              $6510 = $6346 * $6359;
              $6511 = $6351 * $6510;
              $6512 = $6511 + $6509;
              $6513 = $6351 * $6397;
              $6514 = $6513 + $6512;
              $6515 = $6514 - $6365;
              $6516 = $6515 - $6362;
              $6517 = (+__Z5IKabsd($6516));
              $6518 = $6517 > 5.0000000000000004E-6;
              if ($6518) {
               break L1630;
              }
              $6519 = (+__Z5IKabsd($6417));
              $6520 = $6519 > 5.0000000000000004E-6;
              if ($6520) {
               break L1630;
              }
              $6521 = (+__Z5IKabsd($6440));
              $6522 = $6521 > 5.0000000000000004E-6;
              if ($6522) {
               break L1630;
              }
              $6523 = (+__Z5IKabsd($6464));
              $6524 = $6523 > 5.0000000000000004E-6;
              if ($6524) {
               break L1630;
              }
              $6525 = (+__Z5IKabsd($6501));
              $6526 = $6525 > 5.0000000000000004E-6;
              if ($6526) {
               break L1630;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L1630;
             }
            } while(0);
            $1270 = +HEAPF64[$45>>3];
            $1271 = +HEAPF64[$84>>3];
            $1272 = $1270 * $1271;
            $1273 = +HEAPF64[$47>>3];
            $1274 = +HEAPF64[$76>>3];
            $1275 = $1273 * $1274;
            $1276 = +HEAPF64[$75>>3];
            $1277 = $1273 * $1276;
            $1278 = +HEAPF64[$83>>3];
            $1279 = +HEAPF64[$43>>3];
            $1280 = $1278 * $1279;
            $1281 = $1274 * 0.21213203435596401;
            $1282 = $1276 * 0.031819805153394602;
            $1283 = +HEAPF64[$23>>3];
            $1284 = $1283 * 0.031819805153394602;
            $1285 = $1283 * 6.6666666666666696;
            $1286 = $1274 * $1285;
            $1287 = $1278 * $1283;
            $1288 = $1270 * $1287;
            $1289 = $1279 * $1283;
            $1290 = $1271 * $1289;
            $1291 = $1276 * $1290;
            $1292 = $1283 * $1280;
            $1293 = $1292 + $1291;
            $1294 = $1272 * $1283;
            $1295 = $1294 + $1293;
            $1296 = $1270 * $1278;
            $1297 = $1296 * $1286;
            $1298 = $1297 + $1295;
            $1299 = $1280 * $1286;
            $1300 = $1299 + $1298;
            $1301 = $1271 * $1279;
            $1302 = -$1301;
            $1303 = $1286 * $1302;
            $1304 = $1303 + $1300;
            $1305 = $1275 * 1.4142135623731;
            $1306 = $1304 - $1305;
            $1307 = $1272 * $1286;
            $1308 = $1307 + $1306;
            $1309 = $1288 + $1308;
            $1310 = $1277 * 9.4280904158206305;
            $1311 = $1309 - $1310;
            $1312 = $1311 - $1290;
            $1313 = $1276 * $1288;
            $1314 = $1312 - $1313;
            $1315 = -$1283;
            $1316 = $1280 * $1315;
            $1317 = $1276 * $1316;
            $1318 = $1317 + $1314;
            $1319 = $1272 * $1315;
            $1320 = $1276 * $1319;
            $1321 = $1320 + $1318;
            $1322 = $1273 * 17.284832429004499;
            $1323 = $1321 - $1322;
            $1324 = (+__Z5IKabsd($1323));
            $1325 = $1324 < 9.9999999999999995E-7;
            do {
             if (!($1325)) {
              $1326 = $1275 * 0.044999999999999998;
              $1327 = $1273 * -0.55000000000000004;
              $1328 = $1327 - $1326;
              $1329 = $1281 * $1294;
              $1330 = $1328 + $1329;
              $1331 = $1282 * $1290;
              $1332 = $1330 + $1331;
              $1333 = $1296 * $1284;
              $1334 = $1333 + $1332;
              $1335 = $1282 * $1288;
              $1336 = $1334 - $1335;
              $1337 = $1280 * $1284;
              $1338 = $1337 + $1336;
              $1339 = $1284 * $1302;
              $1340 = $1339 + $1338;
              $1341 = $1272 * $1284;
              $1342 = $1341 + $1340;
              $1343 = $1281 * $1290;
              $1344 = $1342 - $1343;
              $1345 = $1277 * 0.29999999999999999;
              $1346 = $1344 - $1345;
              $1347 = $1281 * $1292;
              $1348 = $1347 + $1346;
              $1349 = $1282 * $1316;
              $1350 = $1349 + $1348;
              $1351 = $1282 * $1319;
              $1352 = $1351 + $1350;
              $1353 = $1281 * $1288;
              $1354 = $1353 + $1352;
              $1355 = (+__Z6IKsignd($1354));
              $1356 = (+__Z5IKabsd($1355));
              $1357 = $1356 < 9.9999999999999995E-7;
              if ($1357) {
               break;
              }
              HEAP8[$6>>0] = 1;
              $5942 = +HEAPF64[$45>>3];
              $5943 = $5942 * $5942;
              $5944 = +HEAPF64[$75>>3];
              $5945 = $5944 * $5944;
              $5946 = +HEAPF64[$43>>3];
              $5947 = $5946 * $5946;
              $5948 = +HEAPF64[$23>>3];
              $5949 = +HEAPF64[$76>>3];
              $5950 = $5948 * $5949;
              $5951 = +HEAPF64[$83>>3];
              $5952 = $5942 * $5951;
              $5953 = $5944 * $5948;
              $5954 = +HEAPF64[$84>>3];
              $5955 = $5946 * $5954;
              $5956 = +HEAPF64[$47>>3];
              $5957 = $5956 * 0.70710678118654802;
              $5958 = $5946 * $5951;
              $5959 = $5942 * $5946;
              $5960 = $5942 * $5954;
              $5961 = $5948 * 0.031819805153394602;
              $5962 = $5951 * $5954;
              $5963 = $5952 * $5957;
              $5964 = $5944 * 0.087974999999999997;
              $5965 = $5964 * $5950;
              $5966 = $5965 - $5963;
              $5967 = -$5957;
              $5968 = $5958 * $5967;
              $5969 = $5968 + $5966;
              $5970 = $5960 * $5967;
              $5971 = $5970 + $5969;
              $5972 = $5953 * 0.01125;
              $5973 = $5971 - $5972;
              $5974 = $5948 * -0.027;
              $5975 = $5945 * $5974;
              $5976 = $5975 + $5973;
              $5977 = $5955 * $5957;
              $5978 = $5977 + $5976;
              $5979 = $5950 * 0.16702500000000001;
              $5980 = $5979 + $5978;
              $5981 = $5948 * 0.038249999999999999;
              $5982 = $5981 + $5980;
              $5983 = $5944 * -0.027;
              $5984 = $5983 * $5949;
              $5985 = $5984 + -0.30452499999999999;
              $5986 = $5985 - $5959;
              $5987 = $5949 * 0.049500000000000002;
              $5988 = $5986 - $5987;
              $5989 = $5943 * 0.5;
              $5990 = $5989 + $5988;
              $5991 = $5947 * 0.5;
              $5992 = $5991 + $5990;
              $5993 = $5947 * $5962;
              $5994 = $5992 - $5993;
              $5995 = $5943 * $5962;
              $5996 = $5995 + $5994;
              $5997 = $5952 * 2.0;
              $5998 = $5958 * $5997;
              $5999 = $5998 + $5996;
              $6000 = $5945 * 0.087974999999999997;
              $6001 = $5999 - $6000;
              $6002 = $5944 * 0.33000000000000002;
              $6003 = $6001 - $6002;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1233,$5982,$6003,1.9999999999999999E-6);
              $6004 = HEAP8[$219>>0]|0;
              $6005 = ($6004<<24>>24)==(0);
              if ($6005) {
               break L1630;
              }
              $6006 = $5953 * -0.031819805153394602;
              $6007 = $6006 * $5958;
              $6008 = +HEAPF64[$47>>3];
              $6009 = $6008 * 0.55000000000000004;
              $6010 = $6007 - $6009;
              $6011 = $5952 * -0.031819805153394602;
              $6012 = $5953 * $6011;
              $6013 = $6012 + $6010;
              $6014 = $5950 * -0.21213203435596401;
              $6015 = $6014 * $5955;
              $6016 = $6015 + $6013;
              $6017 = +HEAPF64[$75>>3];
              $6018 = $6017 * -0.29999999999999999;
              $6019 = $6008 * $6018;
              $6020 = $6019 + $6016;
              $6021 = $6008 * -0.044999999999999998;
              $6022 = +HEAPF64[$76>>3];
              $6023 = $6021 * $6022;
              $6024 = $6023 + $6020;
              $6025 = $5961 * $5955;
              $6026 = $6024 - $6025;
              $6027 = $5961 * $5952;
              $6028 = $6027 + $6026;
              $6029 = $5950 * 0.21213203435596401;
              $6030 = $6029 * $5958;
              $6031 = $6030 + $6028;
              $6032 = $6029 * $5952;
              $6033 = $6032 + $6031;
              $6034 = $5953 * 0.031819805153394602;
              $6035 = $6034 * $5955;
              $6036 = $6035 + $6033;
              $6037 = $6029 * $5960;
              $6038 = $6037 + $6036;
              $6039 = $5961 * $5958;
              $6040 = $6039 + $6038;
              $6041 = $5961 * $5960;
              $6042 = $6041 + $6040;
              $6043 = $6006 * $5960;
              $6044 = $6043 + $6042;
              $6045 = (+__Z6IKsignd($6044));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1234,$6045,-1);
              $6046 = HEAP8[$220>>0]|0;
              $6047 = ($6046<<24>>24)==(0);
              if ($6047) {
               break L1630;
              }
              $6048 = +HEAPF64[$x1233>>3];
              $6049 = $6048 + -1.5707963267949001;
              $6050 = +HEAPF64[$x1234>>3];
              $6051 = $6050 * 1.5707963267949001;
              $6052 = $6049 + $6051;
              $6053 = (+__Z5IKsind($6052));
              $6054 = (+__Z5IKcosd($6052));
              $6055 = $6052 > 3.14159265358979;
              do {
               if ($6055) {
                $6056 = $6052 + -6.2831853071795898;
                $6059 = $6056;
               } else {
                $6057 = $6052 < -3.14159265358979;
                if (!($6057)) {
                 $6059 = $6052;
                 break;
                }
                $6058 = $6052 + 6.2831853071795898;
                $6059 = $6058;
               }
              } while(0);
              HEAP8[$4>>0] = 0;
              HEAP8[$5>>0] = -1;
              HEAPF64[$3>>3] = $6059;
              HEAPF64[$221>>3] = $6054;
              HEAPF64[$222>>3] = $6053;
              $6060 = +HEAPF64[$3>>3];
              $6061 = (+__Z5IKsind($6060));
              $6062 = (+__Z5IKcosd($6060));
              $6063 = +HEAPF64[$75>>3];
              $6064 = $6063 * 0.044999999999999998;
              $6065 = +HEAPF64[$83>>3];
              $6066 = $6065 * 0.70710678118654802;
              $6067 = +HEAPF64[$23>>3];
              $6068 = +HEAPF64[$45>>3];
              $6069 = $6067 * $6068;
              $6070 = +HEAPF64[$24>>3];
              $6071 = $6068 * $6070;
              $6072 = +HEAPF64[$84>>3];
              $6073 = $6067 * $6072;
              $6074 = +HEAPF64[$43>>3];
              $6075 = $6074 * 0.70710678118654802;
              $6076 = $6070 * $6072;
              $6077 = $6063 * 0.29999999999999999;
              $6078 = +HEAPF64[$76>>3];
              $6079 = $6078 * 0.29999999999999999;
              $6080 = $6078 * 0.044999999999999998;
              $6081 = $6074 * 0.063639610306789302;
              $6082 = $6072 * 0.70710678118654802;
              $6083 = $6065 * 0.063639610306789302;
              $6084 = $6061 * $6067;
              $6085 = $6062 * $6074;
              $6086 = $6062 * $6067;
              $6087 = $6062 * $6072;
              $6088 = +HEAPF64[$47>>3];
              $6089 = $6062 * $6088;
              $6090 = $6065 * $6068;
              $6091 = $6061 * $6090;
              $6092 = $6069 * $6082;
              $6093 = $6068 * $6072;
              $6094 = $6061 * $6093;
              $6095 = $6074 * 0.77781745930520196;
              $6096 = $6061 * $6095;
              $6097 = -$6064;
              $6098 = $6084 * $6097;
              $6099 = $6084 * $6079;
              $6100 = $6098 + $6099;
              $6101 = -$6062;
              $6102 = $6080 * $6101;
              $6103 = $6102 + $6100;
              $6104 = $6077 * $6101;
              $6105 = $6104 + $6103;
              $6106 = $6084 * 0.044999999999999998;
              $6107 = $6106 + $6105;
              $6108 = $6088 + $6107;
              $6109 = $6062 * 0.55000000000000004;
              $6110 = $6108 - $6109;
              $6111 = $6061 * $6068;
              $6112 = -$6072;
              $6113 = $6086 * $6097;
              $6114 = -$6068;
              $6115 = $6082 * $6114;
              $6116 = $6113 + $6115;
              $6117 = $6066 * $6074;
              $6118 = $6116 - $6117;
              $6119 = $6086 * $6079;
              $6120 = $6118 + $6119;
              $6121 = $6086 * 0.044999999999999998;
              $6122 = $6121 + $6120;
              $6123 = $6066 * $6114;
              $6124 = $6123 + $6122;
              $6125 = $6061 * 0.55000000000000004;
              $6126 = $6125 + $6124;
              $6127 = $6061 * $6080;
              $6128 = $6127 + $6126;
              $6129 = $6061 * $6077;
              $6130 = $6129 + $6128;
              $6131 = $6072 * $6075;
              $6132 = $6131 + $6130;
              $6133 = $6067 * $6074;
              $6134 = $6066 * $6133;
              $6135 = $6092 + $6134;
              $6136 = -$6066;
              $6137 = $6069 * $6136;
              $6138 = $6137 + $6135;
              $6139 = $6066 * $6070;
              $6140 = $6139 * $6085;
              $6141 = $6140 + $6138;
              $6142 = $6073 * $6075;
              $6143 = $6142 + $6141;
              $6144 = $6062 * $6071;
              $6145 = $6144 * $6082;
              $6146 = $6145 + $6143;
              $6147 = $6062 * $6066;
              $6148 = $6147 * $6071;
              $6149 = $6148 + $6146;
              $6150 = $6070 * $6088;
              $6151 = $6061 * $6150;
              $6152 = $6149 - $6151;
              $6153 = $6075 * $6101;
              $6154 = $6076 * $6153;
              $6155 = $6154 + $6152;
              $6156 = $6079 + 0.044999999999999998;
              $6157 = $6156 - $6064;
              $6158 = $6071 * $6082;
              $6159 = $6158 + $6157;
              $6160 = $6066 * $6101;
              $6161 = $6160 * $6069;
              $6162 = $6161 + $6159;
              $6163 = $6062 * $6073;
              $6164 = $6163 * $6075;
              $6165 = $6164 + $6162;
              $6166 = $6071 * $6136;
              $6167 = $6166 + $6165;
              $6168 = $6076 * $6075;
              $6169 = $6168 + $6167;
              $6170 = $6067 * $6066;
              $6171 = $6170 * $6085;
              $6172 = $6169 - $6171;
              $6173 = $6070 * $6074;
              $6174 = $6066 * $6173;
              $6175 = $6174 + $6172;
              $6176 = $6092 * $6101;
              $6177 = $6176 + $6175;
              $6178 = $6084 * $6088;
              $6179 = $6178 + $6177;
              $6180 = $6088 * -0.089999999999999996;
              $6181 = $6084 * $6180;
              $6182 = $6181 + -0.21249999999999999;
              $6183 = $6072 * -0.063639610306789302;
              $6184 = $6071 * $6183;
              $6185 = $6184 + $6182;
              $6186 = $6065 * $6081;
              $6187 = $6086 * $6186;
              $6188 = $6187 + $6185;
              $6189 = $6065 * $6070;
              $6190 = $6189 * $6081;
              $6191 = $6188 - $6190;
              $6192 = $6083 * $6071;
              $6193 = $6192 + $6191;
              $6194 = $6073 * $6101;
              $6195 = $6194 * $6081;
              $6196 = $6195 + $6193;
              $6197 = $6069 * 0.063639610306789302;
              $6198 = $6197 * $6087;
              $6199 = $6198 + $6196;
              $6200 = $6076 * $6081;
              $6201 = $6199 - $6200;
              $6202 = +HEAPF64[$60>>3];
              $6203 = $6201 - $6202;
              $6204 = $6089 * 1.1000000000000001;
              $6205 = $6204 + $6203;
              $6206 = $6096 * $6112;
              $6207 = $6206 + $6205;
              $6208 = $6094 * 0.77781745930520196;
              $6209 = $6208 + $6207;
              $6210 = $6091 * 0.77781745930520196;
              $6211 = $6210 + $6209;
              $6212 = $6062 * $6069;
              $6213 = $6083 * $6212;
              $6214 = $6213 + $6211;
              $6215 = $6065 * $6096;
              $6216 = $6215 + $6214;
              $6217 = (+__Z5IKabsd($6110));
              $6218 = $6217 > 5.0000000000000004E-6;
              if ($6218) {
               break L1630;
              }
              $6219 = $6089 + -0.55000000000000004;
              $6220 = $6111 * $6082;
              $6221 = $6220 + $6219;
              $6222 = $6066 * $6111;
              $6223 = $6222 + $6221;
              $6224 = $6223 - $6080;
              $6225 = $6224 - $6077;
              $6226 = $6061 * $6074;
              $6227 = $6066 * $6226;
              $6228 = $6227 + $6225;
              $6229 = $6061 * $6112;
              $6230 = $6229 * $6075;
              $6231 = $6230 + $6228;
              $6232 = (+__Z5IKabsd($6231));
              $6233 = $6232 > 5.0000000000000004E-6;
              if ($6233) {
               break L1630;
              }
              $6234 = (+__Z5IKabsd($6132));
              $6235 = $6234 > 5.0000000000000004E-6;
              if ($6235) {
               break L1630;
              }
              $6236 = (+__Z5IKabsd($6155));
              $6237 = $6236 > 5.0000000000000004E-6;
              if ($6237) {
               break L1630;
              }
              $6238 = (+__Z5IKabsd($6179));
              $6239 = $6238 > 5.0000000000000004E-6;
              if ($6239) {
               break L1630;
              }
              $6240 = (+__Z5IKabsd($6216));
              $6241 = $6240 > 5.0000000000000004E-6;
              if ($6241) {
               break L1630;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L1630;
             }
            } while(0);
            $1358 = +HEAPF64[$23>>3];
            $1359 = $1358 * $1358;
            $1360 = +HEAPF64[$75>>3];
            $1361 = $1360 * $1360;
            $1362 = +HEAPF64[$76>>3];
            $1363 = $1360 * $1362;
            $1364 = $1361 * 0.087974999999999997;
            $1365 = $1361 * 21.7222222222222;
            $1366 = $1359 * 0.027;
            $1367 = $1360 * $1359;
            $1368 = $1359 * 6.6666666666666696;
            $1369 = $1359 * 22.7222222222222;
            $1370 = -75.191358024691397 - $1369;
            $1371 = $1370 - $1365;
            $1372 = $1362 * 12.2222222222222;
            $1373 = $1371 - $1372;
            $1374 = $1363 * 6.6666666666666696;
            $1375 = $1373 - $1374;
            $1376 = $1367 + $1375;
            $1377 = $1359 * $1365;
            $1378 = $1377 + $1376;
            $1379 = $1368 * $1363;
            $1380 = $1379 + $1378;
            $1381 = -$1362;
            $1382 = $1368 * $1381;
            $1383 = $1382 + $1380;
            $1384 = $1360 * 81.481481481481495;
            $1385 = $1383 - $1384;
            $1386 = (+__Z5IKabsd($1385));
            $1387 = $1386 < 9.9999999999999995E-7;
            do {
             if (!($1387)) {
              $1388 = -0.30452499999999999 - $1364;
              $1389 = $1367 * 0.0040499999999999998;
              $1390 = $1389 + $1388;
              $1391 = $1362 * 0.049500000000000002;
              $1392 = $1390 - $1391;
              $1393 = $1363 * 0.027;
              $1394 = $1392 - $1393;
              $1395 = $1359 * $1364;
              $1396 = $1395 + $1394;
              $1397 = $1366 * $1363;
              $1398 = $1397 + $1396;
              $1399 = $1366 * $1381;
              $1400 = $1399 + $1398;
              $1401 = $1359 * 0.092024999999999995;
              $1402 = $1400 - $1401;
              $1403 = $1360 * 0.33000000000000002;
              $1404 = $1402 - $1403;
              $1405 = (+__Z6IKsignd($1404));
              $1406 = (+__Z5IKabsd($1405));
              $1407 = $1406 < 9.9999999999999995E-7;
              if ($1407) {
               break;
              }
              HEAP8[$6>>0] = 1;
              $5621 = +HEAPF64[$23>>3];
              $5622 = $5621 * $5621;
              $5623 = +HEAPF64[$75>>3];
              $5624 = $5623 * $5623;
              $5625 = +HEAPF64[$47>>3];
              $5626 = $5625 * 0.044999999999999998;
              $5627 = $5625 * 0.29999999999999999;
              $5628 = +HEAPF64[$45>>3];
              $5629 = $5628 * 0.031819805153394602;
              $5630 = +HEAPF64[$84>>3];
              $5631 = +HEAPF64[$76>>3];
              $5632 = $5630 * $5631;
              $5633 = +HEAPF64[$83>>3];
              $5634 = $5621 * $5633;
              $5635 = $5631 * 0.027;
              $5636 = $5628 * $5630;
              $5637 = $5623 * 0.21213203435596401;
              $5638 = $5621 * $5630;
              $5639 = +HEAPF64[$43>>3];
              $5640 = $5639 * 0.031819805153394602;
              $5641 = $5631 * 0.21213203435596401;
              $5642 = $5628 * $5633;
              $5643 = $5631 * $5633;
              $5644 = $5630 * $5639;
              $5645 = $5621 * 0.21213203435596401;
              $5646 = $5633 * $5639;
              $5647 = $5624 * 0.087974999999999997;
              $5648 = $5623 * $5622;
              $5649 = $5648 * 0.0040499999999999998;
              $5650 = $5649 + -0.30452499999999999;
              $5651 = $5631 * 0.049500000000000002;
              $5652 = $5650 - $5651;
              $5653 = $5622 * $5647;
              $5654 = $5653 + $5652;
              $5655 = $5622 * 0.092024999999999995;
              $5656 = $5654 - $5655;
              $5657 = $5656 - $5647;
              $5658 = $5648 * $5635;
              $5659 = $5658 + $5657;
              $5660 = $5623 * $5635;
              $5661 = $5659 - $5660;
              $5662 = $5622 * $5635;
              $5663 = $5661 - $5662;
              $5664 = $5623 * 0.33000000000000002;
              $5665 = $5663 - $5664;
              $5666 = (+__Z6IKsignd($5665));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1194,$5666,-1);
              $5667 = HEAP8[$215>>0]|0;
              $5668 = ($5667<<24>>24)==(0);
              if ($5668) {
               break L1630;
              }
              $5669 = $5646 * 0.38890872965260098;
              $5670 = $5644 * 0.38890872965260098;
              $5671 = $5670 - $5669;
              $5672 = $5637 * $5644;
              $5673 = $5672 + $5671;
              $5674 = +HEAPF64[$23>>3];
              $5675 = +HEAPF64[$76>>3];
              $5676 = $5674 * $5675;
              $5677 = $5627 * $5676;
              $5678 = $5673 + $5677;
              $5679 = $5632 * $5640;
              $5680 = $5679 + $5678;
              $5681 = -$5629;
              $5682 = $5643 * $5681;
              $5683 = $5682 + $5680;
              $5684 = $5632 * $5681;
              $5685 = $5684 + $5683;
              $5686 = +HEAPF64[$75>>3];
              $5687 = $5674 * $5686;
              $5688 = $5626 * $5687;
              $5689 = $5685 - $5688;
              $5690 = $5626 * $5674;
              $5691 = $5690 + $5689;
              $5692 = $5643 * $5640;
              $5693 = $5691 - $5692;
              $5694 = -$5637;
              $5695 = $5646 * $5694;
              $5696 = $5695 + $5693;
              $5697 = $5642 * $5694;
              $5698 = $5697 + $5696;
              $5699 = $5637 * $5636;
              $5700 = $5698 - $5699;
              $5701 = $5642 * 0.38890872965260098;
              $5702 = $5700 - $5701;
              $5703 = $5636 * 0.38890872965260098;
              $5704 = $5702 - $5703;
              $5705 = +HEAPF64[$47>>3];
              $5706 = $5705 * 0.55000000000000004;
              $5707 = +HEAPF64[$43>>3];
              $5708 = $5632 * $5707;
              $5709 = $5645 * $5708;
              $5710 = $5709 - $5706;
              $5711 = $5638 * $5640;
              $5712 = $5711 + $5710;
              $5713 = +HEAPF64[$45>>3];
              $5714 = -$5713;
              $5715 = $5632 * $5714;
              $5716 = $5645 * $5715;
              $5717 = $5716 + $5712;
              $5718 = $5629 * $5686;
              $5719 = $5634 * $5718;
              $5720 = $5719 + $5717;
              $5721 = $5638 * $5718;
              $5722 = $5721 + $5720;
              $5723 = -$5686;
              $5724 = $5627 * $5723;
              $5725 = $5724 + $5722;
              $5726 = $5638 * $5723;
              $5727 = $5640 * $5726;
              $5728 = $5727 + $5725;
              $5729 = $5634 * $5681;
              $5730 = $5729 + $5728;
              $5731 = $5638 * $5681;
              $5732 = $5731 + $5730;
              $5733 = $5634 * $5640;
              $5734 = $5732 - $5733;
              $5735 = $5634 * $5707;
              $5736 = $5641 * $5735;
              $5737 = $5734 - $5736;
              $5738 = $5634 * $5714;
              $5739 = $5641 * $5738;
              $5740 = $5739 + $5737;
              $5741 = $5626 * $5675;
              $5742 = $5740 - $5741;
              $5743 = $5634 * $5686;
              $5744 = $5640 * $5743;
              $5745 = $5744 + $5742;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1195,$5704,$5745,1.9999999999999999E-6);
              $5746 = HEAP8[$216>>0]|0;
              $5747 = ($5746<<24>>24)==(0);
              if ($5747) {
               break L1630;
              }
              $5748 = +HEAPF64[$x1194>>3];
              $5749 = $5748 * 1.5707963267949001;
              $5750 = $5749 + -1.5707963267949001;
              $5751 = +HEAPF64[$x1195>>3];
              $5752 = $5751 + $5750;
              $5753 = (+__Z5IKsind($5752));
              $5754 = (+__Z5IKcosd($5752));
              $5755 = $5752 > 3.14159265358979;
              do {
               if ($5755) {
                $5756 = $5752 + -6.2831853071795898;
                $5759 = $5756;
               } else {
                $5757 = $5752 < -3.14159265358979;
                if (!($5757)) {
                 $5759 = $5752;
                 break;
                }
                $5758 = $5752 + 6.2831853071795898;
                $5759 = $5758;
               }
              } while(0);
              HEAP8[$4>>0] = 0;
              HEAP8[$5>>0] = -1;
              HEAPF64[$3>>3] = $5759;
              HEAPF64[$217>>3] = $5754;
              HEAPF64[$218>>3] = $5753;
              $5760 = +HEAPF64[$3>>3];
              $5761 = (+__Z5IKsind($5760));
              $5762 = (+__Z5IKcosd($5760));
              $5763 = +HEAPF64[$75>>3];
              $5764 = $5763 * 0.044999999999999998;
              $5765 = +HEAPF64[$83>>3];
              $5766 = $5765 * 0.70710678118654802;
              $5767 = +HEAPF64[$23>>3];
              $5768 = +HEAPF64[$45>>3];
              $5769 = $5767 * $5768;
              $5770 = +HEAPF64[$24>>3];
              $5771 = $5768 * $5770;
              $5772 = +HEAPF64[$84>>3];
              $5773 = $5767 * $5772;
              $5774 = +HEAPF64[$43>>3];
              $5775 = $5774 * 0.70710678118654802;
              $5776 = $5770 * $5772;
              $5777 = $5763 * 0.29999999999999999;
              $5778 = +HEAPF64[$76>>3];
              $5779 = $5778 * 0.29999999999999999;
              $5780 = $5778 * 0.044999999999999998;
              $5781 = $5774 * 0.063639610306789302;
              $5782 = $5772 * 0.70710678118654802;
              $5783 = $5765 * 0.063639610306789302;
              $5784 = $5761 * $5767;
              $5785 = $5762 * $5774;
              $5786 = $5762 * $5767;
              $5787 = $5762 * $5772;
              $5788 = +HEAPF64[$47>>3];
              $5789 = $5762 * $5788;
              $5790 = $5765 * $5768;
              $5791 = $5761 * $5790;
              $5792 = $5769 * $5782;
              $5793 = $5768 * $5772;
              $5794 = $5761 * $5793;
              $5795 = $5774 * 0.77781745930520196;
              $5796 = $5761 * $5795;
              $5797 = -$5764;
              $5798 = $5784 * $5797;
              $5799 = $5784 * 0.044999999999999998;
              $5800 = $5798 + $5799;
              $5801 = $5784 * $5779;
              $5802 = $5800 + $5801;
              $5803 = $5788 + $5802;
              $5804 = $5762 * 0.55000000000000004;
              $5805 = $5803 - $5804;
              $5806 = -$5762;
              $5807 = $5780 * $5806;
              $5808 = $5807 + $5805;
              $5809 = $5777 * $5806;
              $5810 = $5809 + $5808;
              $5811 = $5761 * $5768;
              $5812 = -$5772;
              $5813 = $5772 * $5775;
              $5814 = -$5768;
              $5815 = $5766 * $5814;
              $5816 = $5815 + $5813;
              $5817 = $5786 * $5797;
              $5818 = $5817 + $5816;
              $5819 = $5786 * 0.044999999999999998;
              $5820 = $5819 + $5818;
              $5821 = $5786 * $5779;
              $5822 = $5821 + $5820;
              $5823 = $5766 * $5774;
              $5824 = $5822 - $5823;
              $5825 = $5761 * 0.55000000000000004;
              $5826 = $5825 + $5824;
              $5827 = $5782 * $5814;
              $5828 = $5827 + $5826;
              $5829 = $5761 * $5777;
              $5830 = $5829 + $5828;
              $5831 = $5761 * $5780;
              $5832 = $5831 + $5830;
              $5833 = -$5766;
              $5834 = $5769 * $5833;
              $5835 = $5834 + $5792;
              $5836 = $5775 * $5806;
              $5837 = $5776 * $5836;
              $5838 = $5835 + $5837;
              $5839 = $5762 * $5771;
              $5840 = $5839 * $5782;
              $5841 = $5840 + $5838;
              $5842 = $5766 * $5770;
              $5843 = $5842 * $5785;
              $5844 = $5843 + $5841;
              $5845 = $5773 * $5775;
              $5846 = $5845 + $5844;
              $5847 = $5762 * $5766;
              $5848 = $5847 * $5771;
              $5849 = $5848 + $5846;
              $5850 = $5770 * $5788;
              $5851 = $5761 * $5850;
              $5852 = $5849 - $5851;
              $5853 = $5767 * $5774;
              $5854 = $5766 * $5853;
              $5855 = $5854 + $5852;
              $5856 = $5770 * $5774;
              $5857 = $5766 * $5856;
              $5858 = $5857 + 0.044999999999999998;
              $5859 = $5771 * $5833;
              $5860 = $5859 + $5858;
              $5861 = $5779 + $5860;
              $5862 = $5792 * $5806;
              $5863 = $5862 + $5861;
              $5864 = $5863 - $5764;
              $5865 = $5776 * $5775;
              $5866 = $5865 + $5864;
              $5867 = $5762 * $5773;
              $5868 = $5867 * $5775;
              $5869 = $5868 + $5866;
              $5870 = $5771 * $5782;
              $5871 = $5870 + $5869;
              $5872 = $5784 * $5788;
              $5873 = $5872 + $5871;
              $5874 = $5766 * $5806;
              $5875 = $5874 * $5769;
              $5876 = $5875 + $5873;
              $5877 = $5767 * $5766;
              $5878 = $5877 * $5785;
              $5879 = $5876 - $5878;
              $5880 = $5776 * $5781;
              $5881 = -0.21249999999999999 - $5880;
              $5882 = $5791 * 0.77781745930520196;
              $5883 = $5882 + $5881;
              $5884 = $5794 * 0.77781745930520196;
              $5885 = $5884 + $5883;
              $5886 = $5773 * $5806;
              $5887 = $5886 * $5781;
              $5888 = $5887 + $5885;
              $5889 = $5765 * $5796;
              $5890 = $5889 + $5888;
              $5891 = +HEAPF64[$60>>3];
              $5892 = $5890 - $5891;
              $5893 = $5783 * $5771;
              $5894 = $5893 + $5892;
              $5895 = $5765 * $5770;
              $5896 = $5895 * $5781;
              $5897 = $5894 - $5896;
              $5898 = $5765 * $5781;
              $5899 = $5786 * $5898;
              $5900 = $5899 + $5897;
              $5901 = $5796 * $5812;
              $5902 = $5901 + $5900;
              $5903 = $5762 * $5769;
              $5904 = $5783 * $5903;
              $5905 = $5904 + $5902;
              $5906 = $5788 * -0.089999999999999996;
              $5907 = $5784 * $5906;
              $5908 = $5907 + $5905;
              $5909 = $5769 * 0.063639610306789302;
              $5910 = $5909 * $5787;
              $5911 = $5910 + $5908;
              $5912 = $5789 * 1.1000000000000001;
              $5913 = $5912 + $5911;
              $5914 = $5772 * -0.063639610306789302;
              $5915 = $5771 * $5914;
              $5916 = $5915 + $5913;
              $5917 = (+__Z5IKabsd($5810));
              $5918 = $5917 > 5.0000000000000004E-6;
              if ($5918) {
               break L1630;
              }
              $5919 = $5789 + -0.55000000000000004;
              $5920 = $5766 * $5811;
              $5921 = $5920 + $5919;
              $5922 = $5811 * $5782;
              $5923 = $5922 + $5921;
              $5924 = $5923 - $5780;
              $5925 = $5924 - $5777;
              $5926 = $5761 * $5812;
              $5927 = $5926 * $5775;
              $5928 = $5927 + $5925;
              $5929 = $5761 * $5774;
              $5930 = $5766 * $5929;
              $5931 = $5930 + $5928;
              $5932 = (+__Z5IKabsd($5931));
              $5933 = $5932 > 5.0000000000000004E-6;
              if ($5933) {
               break L1630;
              }
              $5934 = (+__Z5IKabsd($5832));
              $5935 = $5934 > 5.0000000000000004E-6;
              if ($5935) {
               break L1630;
              }
              $5936 = (+__Z5IKabsd($5855));
              $5937 = $5936 > 5.0000000000000004E-6;
              if ($5937) {
               break L1630;
              }
              $5938 = (+__Z5IKabsd($5879));
              $5939 = $5938 > 5.0000000000000004E-6;
              if ($5939) {
               break L1630;
              }
              $5940 = (+__Z5IKabsd($5916));
              $5941 = $5940 > 5.0000000000000004E-6;
              if ($5941) {
               break L1630;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L1630;
             }
            } while(0);
            $1408 = +HEAPF64[$45>>3];
            $1409 = $1408 * 0.70710678118654802;
            $1410 = +HEAPF64[$43>>3];
            $1411 = $1410 * 0.70710678118654802;
            $1412 = +HEAPF64[$83>>3];
            $1413 = $1412 * $1411;
            $1414 = $1413 + 0.044999999999999998;
            $1415 = +HEAPF64[$84>>3];
            $1416 = $1409 * $1415;
            $1417 = $1414 + $1416;
            $1418 = $1411 * $1415;
            $1419 = $1418 + $1417;
            $1420 = +HEAPF64[$75>>3];
            $1421 = $1420 * 0.044999999999999998;
            $1422 = $1419 - $1421;
            $1423 = +HEAPF64[$76>>3];
            $1424 = $1423 * 0.29999999999999999;
            $1425 = $1424 + $1422;
            $1426 = $1409 * $1412;
            $1427 = $1425 - $1426;
            $1428 = +HEAPF64[$47>>3];
            $1429 = (+__Z5IKabsd($1428));
            $1430 = +HEAPF64[$22>>3];
            $1431 = $1430 + 1.5707963267949001;
            $1432 = (+__Z6IKfmoddd($1431,6.2831853071795898));
            $1433 = $1432 + -3.14159265358979;
            $1434 = (+__Z5IKabsd($1433));
            $1435 = $1429 + $1434;
            $1436 = (+__Z5IKabsd($1435));
            $1437 = $1436 < 9.9999999999999995E-7;
            do {
             if ($1437) {
              $1438 = +HEAPF64[$60>>3];
              $1439 = $1423 * 0.076499999999999999;
              $1440 = $1439 + 0.39655000000000001;
              $1441 = $1440 - $1438;
              $1442 = $1420 * 0.32595000000000002;
              $1443 = $1442 + $1441;
              $1444 = (+__Z5IKabsd($1443));
              $1445 = $1444 < 9.9999999999999995E-7;
              if (!($1445)) {
               break;
              }
              $1446 = (+__Z5IKabsd($1427));
              $1447 = $1446 < 9.9999999999999995E-7;
              if (!($1447)) {
               break;
              }
              $1448 = -$1408;
              HEAPF64[$47>>3] = 0.0;
              HEAPF64[$22>>3] = 1.5707963267949001;
              HEAPF64[$24>>3] = 1.0;
              HEAPF64[$23>>3] = 0.0;
              $1449 = +HEAPF64[$43>>3];
              $1450 = $1449 * $1449;
              $1451 = +HEAPF64[$45>>3];
              $1452 = $1451 * $1451;
              $1453 = $1450 + $1452;
              HEAPF64[$60>>3] = $1453;
              $1454 = +HEAPF64[$43>>3];
              $1455 = +HEAPF64[$26>>3];
              $1456 = $1454 * $1455;
              $1457 = +HEAPF64[$45>>3];
              $1458 = +HEAPF64[$32>>3];
              $1459 = $1457 * $1458;
              $1460 = $1456 + $1459;
              HEAPF64[$61>>3] = $1460;
              $1461 = +HEAPF64[$43>>3];
              $1462 = +HEAPF64[$28>>3];
              $1463 = $1461 * $1462;
              $1464 = +HEAPF64[$45>>3];
              $1465 = +HEAPF64[$34>>3];
              $1466 = $1464 * $1465;
              $1467 = $1463 + $1466;
              HEAPF64[$62>>3] = $1467;
              $1468 = +HEAPF64[$43>>3];
              $1469 = +HEAPF64[$30>>3];
              $1470 = $1468 * $1469;
              $1471 = +HEAPF64[$45>>3];
              $1472 = +HEAPF64[$36>>3];
              $1473 = $1471 * $1472;
              $1474 = $1470 + $1473;
              HEAPF64[$63>>3] = $1474;
              $1475 = +HEAPF64[$38>>3];
              $1476 = $1475 * $1448;
              HEAPF64[$64>>3] = $1476;
              $1477 = +HEAPF64[$43>>3];
              $1478 = +HEAPF64[$38>>3];
              $1479 = $1477 * $1478;
              HEAPF64[$65>>3] = $1479;
              $1480 = +HEAPF64[$40>>3];
              $1481 = $1480 * $1448;
              HEAPF64[$67>>3] = $1481;
              $1482 = +HEAPF64[$43>>3];
              $1483 = +HEAPF64[$40>>3];
              $1484 = $1482 * $1483;
              HEAPF64[$68>>3] = $1484;
              $1485 = +HEAPF64[$42>>3];
              $1486 = $1485 * $1448;
              HEAPF64[$70>>3] = $1486;
              $1487 = +HEAPF64[$43>>3];
              $1488 = +HEAPF64[$42>>3];
              $1489 = $1487 * $1488;
              HEAPF64[$71>>3] = $1489;
              $1490 = +HEAPF64[$83>>3];
              $1491 = +HEAPF64[$45>>3];
              $1492 = $1490 * $1491;
              $1493 = +HEAPF64[$43>>3];
              $1494 = $1490 * $1493;
              $1495 = $1492 + $1494;
              $1496 = +HEAPF64[$84>>3];
              $1497 = $1493 * $1496;
              $1498 = $1495 - $1497;
              $1499 = $1491 * $1496;
              $1500 = $1499 + $1498;
              $1501 = (+__Z5IKabsd($1500));
              $1502 = $1501 < 9.9999999999999995E-7;
              if (!($1502)) {
               HEAP16[$j5valid39>>1] = 0;
               HEAP8[$6>>0] = 2;
               $2228 = +HEAPF64[$84>>3];
               $2229 = $2228 * 0.70710678118654802;
               $2230 = +HEAPF64[$83>>3];
               $2231 = $2230 * 0.70710678118654802;
               $2232 = +HEAPF64[$45>>3];
               $2233 = $2229 * $2232;
               $2234 = $2232 * $2231;
               $2235 = $2233 + $2234;
               $2236 = +HEAPF64[$43>>3];
               $2237 = $2231 * $2236;
               $2238 = $2235 + $2237;
               $2239 = $2229 * $2236;
               $2240 = $2238 - $2239;
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x814,$2240,-1);
               $2241 = HEAP8[$115>>0]|0;
               $2242 = ($2241<<24>>24)==(0);
               if ($2242) {
                break L1630;
               }
               $2243 = +HEAPF64[$x814>>3];
               $2244 = +HEAPF64[$75>>3];
               $2245 = $2244 * 0.29999999999999999;
               $2246 = $2243 * $2245;
               $2247 = +HEAPF64[$76>>3];
               $2248 = $2247 * 0.044999999999999998;
               $2249 = $2243 * $2248;
               $2250 = $2246 + $2249;
               $2251 = $2243 * 0.55000000000000004;
               $2252 = $2251 + $2250;
               HEAPF64[$sj5array38>>3] = $2252;
               $2253 = !($2252 >= -1.0000020000000001);
               $2254 = !($2252 <= 1.0000020000000001);
               $or$cond112 = $2253 | $2254;
               do {
                if ($or$cond112) {
                 $2264 = (__Z13__DOUBLE_BITSd($2252)|0);
                 $2265 = tempRet0;
                 $2266 = $2265 & 2147483647;
                 $2267 = ($2266>>>0)>(2146435072);
                 $2268 = ($2264>>>0)>(0);
                 $2269 = ($2266|0)==(2146435072);
                 $2270 = $2269 & $2268;
                 $2271 = $2267 | $2270;
                 if (!($2271)) {
                  $ij540$01466 = 0;
                  break;
                 }
                 HEAP8[$j5valid39>>0] = 1;
                 HEAPF64[$cj5array37>>3] = 1.0;
                 HEAPF64[$sj5array38>>3] = 0.0;
                 HEAPF64[$j5array36>>3] = 0.0;
                 $ij540$01466 = 0;
                } else {
                 HEAP8[$116>>0] = 1;
                 HEAP8[$j5valid39>>0] = 1;
                 $2255 = +HEAPF64[$sj5array38>>3];
                 $2256 = (+__Z6IKasind($2255));
                 HEAPF64[$j5array36>>3] = $2256;
                 $2257 = (+__Z5IKcosd($2256));
                 HEAPF64[$cj5array37>>3] = $2257;
                 $2258 = +HEAPF64[$sj5array38>>3];
                 HEAPF64[$117>>3] = $2258;
                 $2259 = +HEAPF64[$j5array36>>3];
                 $2260 = $2259 > 0.0;
                 $$v91 = $2260 ? 3.14159265358979 : -3.14159265358979;
                 $2261 = $$v91 - $2259;
                 HEAPF64[$118>>3] = $2261;
                 $2262 = +HEAPF64[$cj5array37>>3];
                 $2263 = -$2262;
                 HEAPF64[$119>>3] = $2263;
                 $ij540$01466 = 0;
                }
               } while(0);
               while(1) {
                $2272 = (($j5valid39) + ($ij540$01466)|0);
                $2273 = HEAP8[$2272>>0]|0;
                $2274 = ($2273<<24>>24)==(0);
                do {
                 if (!($2274)) {
                  $2275 = $ij540$01466&255;
                  HEAP8[$4>>0] = $2275;
                  HEAP8[$5>>0] = -1;
                  $iij541$01462 = (($ij540$01466) + 1)|0;
                  $2276 = ($iij541$01462|0)<(2);
                  do {
                   if ($2276) {
                    $2277 = (($sj5array38) + ($ij540$01466<<3)|0);
                    $2278 = (($j5valid39) + ($iij541$01462)|0);
                    $2279 = HEAP8[$2278>>0]|0;
                    $2280 = ($2279<<24>>24)==(0);
                    if ($2280) {
                     break;
                    }
                    $2281 = (($cj5array37) + ($ij540$01466<<3)|0);
                    $2282 = +HEAPF64[$2281>>3];
                    $2283 = (($cj5array37) + ($iij541$01462<<3)|0);
                    $2284 = +HEAPF64[$2283>>3];
                    $2285 = $2282 - $2284;
                    $2286 = (+__Z5IKabsd($2285));
                    $2287 = $2286 < 9.9999999999999995E-7;
                    if (!($2287)) {
                     break;
                    }
                    $2288 = +HEAPF64[$2277>>3];
                    $2289 = (($sj5array38) + ($iij541$01462<<3)|0);
                    $2290 = +HEAPF64[$2289>>3];
                    $2291 = $2288 - $2290;
                    $2292 = (+__Z5IKabsd($2291));
                    $2293 = $2292 < 9.9999999999999995E-7;
                    if (!($2293)) {
                     break;
                    }
                    HEAP8[$2278>>0] = 0;
                    $2294 = $iij541$01462&255;
                    HEAP8[$5>>0] = $2294;
                   }
                  } while(0);
                  $2295 = (($j5array36) + ($ij540$01466<<3)|0);
                  $2296 = +HEAPF64[$2295>>3];
                  HEAPF64[$3>>3] = $2296;
                  $2297 = (($cj5array37) + ($ij540$01466<<3)|0);
                  $2298 = +HEAPF64[$2297>>3];
                  HEAPF64[$120>>3] = $2298;
                  $2299 = (($sj5array38) + ($ij540$01466<<3)|0);
                  $2300 = +HEAPF64[$2299>>3];
                  HEAPF64[$121>>3] = $2300;
                  $2301 = +HEAPF64[$3>>3];
                  $2302 = (+__Z5IKcosd($2301));
                  $2303 = (+__Z5IKsind($2301));
                  $2304 = +HEAPF64[$43>>3];
                  $2305 = $2304 * $2304;
                  $2306 = +HEAPF64[$45>>3];
                  $2307 = $2306 * $2306;
                  $2308 = +HEAPF64[$83>>3];
                  $2309 = $2306 * $2308;
                  $2310 = +HEAPF64[$84>>3];
                  $2311 = $2304 * $2310;
                  $2312 = $2306 * $2310;
                  $2313 = $2304 * $2308;
                  $2314 = $2303 * 0.77781745930520196;
                  $2315 = $2302 * 0.70710678118654802;
                  $2316 = $2302 * 0.58823529411764697;
                  $2317 = $2316 * $2307;
                  $2318 = $2316 * $2305;
                  $2319 = -$2318;
                  $2320 = $2319 - $2317;
                  $2321 = +HEAPF64[$75>>3];
                  $2322 = $2321 * -0.108264705882353;
                  $2323 = $2302 * $2322;
                  $2324 = $2320 + $2323;
                  $2325 = $2302 * 0.316735294117647;
                  $2326 = $2324 - $2325;
                  $2327 = -$2311;
                  $2328 = $2321 * 0.29999999999999999;
                  $2329 = $2303 * $2328;
                  $2330 = +HEAPF64[$76>>3];
                  $2331 = $2330 * 0.044999999999999998;
                  $2332 = $2303 * $2331;
                  $2333 = $2329 + $2332;
                  $2334 = $2313 * 0.70710678118654802;
                  $2335 = $2333 - $2334;
                  $2336 = $2312 * 0.70710678118654802;
                  $2337 = $2335 - $2336;
                  $2338 = $2309 * 0.70710678118654802;
                  $2339 = $2337 - $2338;
                  $2340 = $2303 * 0.55000000000000004;
                  $2341 = $2340 + $2339;
                  $2342 = $2311 * 0.70710678118654802;
                  $2343 = $2342 + $2341;
                  $2344 = $2314 * $2312;
                  $2345 = $2344 + -0.21249999999999999;
                  $2346 = $2309 * 0.063639610306789302;
                  $2347 = $2346 + $2345;
                  $2348 = $2314 * $2309;
                  $2349 = $2348 + $2347;
                  $2350 = $2349 - $2305;
                  $2351 = $2350 - $2307;
                  $2352 = $2314 * $2313;
                  $2353 = $2352 + $2351;
                  $2354 = $2314 * $2327;
                  $2355 = $2354 + $2353;
                  $2356 = $2312 * 0.063639610306789302;
                  $2357 = $2355 - $2356;
                  $2358 = $2311 * 0.063639610306789302;
                  $2359 = $2357 - $2358;
                  $2360 = $2313 * 0.063639610306789302;
                  $2361 = $2359 - $2360;
                  $2362 = (+__Z5IKabsd($2326));
                  $2363 = $2362 > 5.0000000000000004E-6;
                  if ($2363) {
                   break;
                  }
                  $2364 = $2315 * $2312;
                  $2365 = $2315 * $2309;
                  $2366 = $2365 + $2364;
                  $2367 = $2315 * $2313;
                  $2368 = $2367 + $2366;
                  $2369 = $2315 * $2327;
                  $2370 = $2369 + $2368;
                  $2371 = (+__Z5IKabsd($2370));
                  $2372 = $2371 > 5.0000000000000004E-6;
                  if ($2372) {
                   break;
                  }
                  $2373 = (+__Z5IKabsd($2343));
                  $2374 = $2373 > 5.0000000000000004E-6;
                  if ($2374) {
                   break;
                  }
                  $2375 = (+__Z5IKabsd($2361));
                  $2376 = $2375 > 5.0000000000000004E-6;
                  if ($2376) {
                   break;
                  }
                  __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                 }
                } while(0);
                $2377 = (($ij540$01466) + 1)|0;
                $exitcond1782 = ($2377|0)==(2);
                if ($exitcond1782) {
                 break L1630;
                } else {
                 $ij540$01466 = $2377;
                }
               }
              }
              $1503 = -$1491;
              HEAPF64[$47>>3] = 0.0;
              HEAPF64[$22>>3] = 1.5707963267949001;
              HEAPF64[$24>>3] = 1.0;
              HEAPF64[$23>>3] = 0.0;
              $1504 = +HEAPF64[$43>>3];
              $1505 = $1504 * $1504;
              $1506 = +HEAPF64[$45>>3];
              $1507 = $1506 * $1506;
              $1508 = $1505 + $1507;
              HEAPF64[$60>>3] = $1508;
              $1509 = +HEAPF64[$43>>3];
              $1510 = +HEAPF64[$26>>3];
              $1511 = $1509 * $1510;
              $1512 = +HEAPF64[$45>>3];
              $1513 = +HEAPF64[$32>>3];
              $1514 = $1512 * $1513;
              $1515 = $1511 + $1514;
              HEAPF64[$61>>3] = $1515;
              $1516 = +HEAPF64[$43>>3];
              $1517 = +HEAPF64[$28>>3];
              $1518 = $1516 * $1517;
              $1519 = +HEAPF64[$45>>3];
              $1520 = +HEAPF64[$34>>3];
              $1521 = $1519 * $1520;
              $1522 = $1518 + $1521;
              HEAPF64[$62>>3] = $1522;
              $1523 = +HEAPF64[$43>>3];
              $1524 = +HEAPF64[$30>>3];
              $1525 = $1523 * $1524;
              $1526 = +HEAPF64[$45>>3];
              $1527 = +HEAPF64[$36>>3];
              $1528 = $1526 * $1527;
              $1529 = $1525 + $1528;
              HEAPF64[$63>>3] = $1529;
              $1530 = +HEAPF64[$38>>3];
              $1531 = $1530 * $1503;
              HEAPF64[$64>>3] = $1531;
              $1532 = +HEAPF64[$43>>3];
              $1533 = +HEAPF64[$38>>3];
              $1534 = $1532 * $1533;
              HEAPF64[$65>>3] = $1534;
              $1535 = +HEAPF64[$40>>3];
              $1536 = $1535 * $1503;
              HEAPF64[$67>>3] = $1536;
              $1537 = +HEAPF64[$43>>3];
              $1538 = +HEAPF64[$40>>3];
              $1539 = $1537 * $1538;
              HEAPF64[$68>>3] = $1539;
              $1540 = +HEAPF64[$42>>3];
              $1541 = $1540 * $1503;
              HEAPF64[$70>>3] = $1541;
              $1542 = +HEAPF64[$43>>3];
              $1543 = +HEAPF64[$42>>3];
              $1544 = $1542 * $1543;
              HEAPF64[$71>>3] = $1544;
              $1545 = +HEAPF64[$76>>3];
              $1546 = $1545 + 12.2222222222222;
              $1547 = +HEAPF64[$75>>3];
              $1548 = $1547 * 6.6666666666666696;
              $1549 = $1546 + $1548;
              $1550 = (+__Z5IKabsd($1549));
              $1551 = $1550 < 9.9999999999999995E-7;
              if (!($1551)) {
               HEAP16[$j5valid32>>1] = 0;
               HEAP8[$6>>0] = 2;
               $2076 = +HEAPF64[$76>>3];
               $2077 = $2076 * 0.044999999999999998;
               $2078 = $2077 + 0.55000000000000004;
               $2079 = +HEAPF64[$75>>3];
               $2080 = $2079 * 0.29999999999999999;
               $2081 = $2078 + $2080;
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x796,$2081,-1);
               $2082 = HEAP8[$108>>0]|0;
               $2083 = ($2082<<24>>24)==(0);
               if ($2083) {
                break L1630;
               }
               $2084 = +HEAPF64[$x796>>3];
               $2085 = +HEAPF64[$84>>3];
               $2086 = $2085 * 0.70710678118654802;
               $2087 = $2084 * $2086;
               $2088 = +HEAPF64[$83>>3];
               $2089 = $2088 * 0.70710678118654802;
               $2090 = $2084 * $2089;
               $2091 = +HEAPF64[$43>>3];
               $2092 = $2091 * $2087;
               $2093 = $2091 * $2090;
               $2094 = $2093 - $2092;
               $2095 = +HEAPF64[$45>>3];
               $2096 = $2095 * $2090;
               $2097 = $2096 + $2094;
               $2098 = $2087 * $2095;
               $2099 = $2098 + $2097;
               HEAPF64[$sj5array31>>3] = $2099;
               $2100 = !($2099 >= -1.0000020000000001);
               $2101 = !($2099 <= 1.0000020000000001);
               $or$cond111 = $2100 | $2101;
               do {
                if ($or$cond111) {
                 $2111 = (__Z13__DOUBLE_BITSd($2099)|0);
                 $2112 = tempRet0;
                 $2113 = $2112 & 2147483647;
                 $2114 = ($2113>>>0)>(2146435072);
                 $2115 = ($2111>>>0)>(0);
                 $2116 = ($2113|0)==(2146435072);
                 $2117 = $2116 & $2115;
                 $2118 = $2114 | $2117;
                 if (!($2118)) {
                  $ij533$01471 = 0;
                  break;
                 }
                 HEAP8[$j5valid32>>0] = 1;
                 HEAPF64[$cj5array30>>3] = 1.0;
                 HEAPF64[$sj5array31>>3] = 0.0;
                 HEAPF64[$j5array29>>3] = 0.0;
                 $ij533$01471 = 0;
                } else {
                 HEAP8[$109>>0] = 1;
                 HEAP8[$j5valid32>>0] = 1;
                 $2102 = +HEAPF64[$sj5array31>>3];
                 $2103 = (+__Z6IKasind($2102));
                 HEAPF64[$j5array29>>3] = $2103;
                 $2104 = (+__Z5IKcosd($2103));
                 HEAPF64[$cj5array30>>3] = $2104;
                 $2105 = +HEAPF64[$sj5array31>>3];
                 HEAPF64[$110>>3] = $2105;
                 $2106 = +HEAPF64[$j5array29>>3];
                 $2107 = $2106 > 0.0;
                 $$v93 = $2107 ? 3.14159265358979 : -3.14159265358979;
                 $2108 = $$v93 - $2106;
                 HEAPF64[$111>>3] = $2108;
                 $2109 = +HEAPF64[$cj5array30>>3];
                 $2110 = -$2109;
                 HEAPF64[$112>>3] = $2110;
                 $ij533$01471 = 0;
                }
               } while(0);
               while(1) {
                $2119 = (($j5valid32) + ($ij533$01471)|0);
                $2120 = HEAP8[$2119>>0]|0;
                $2121 = ($2120<<24>>24)==(0);
                do {
                 if (!($2121)) {
                  $2122 = $ij533$01471&255;
                  HEAP8[$4>>0] = $2122;
                  HEAP8[$5>>0] = -1;
                  $iij534$01467 = (($ij533$01471) + 1)|0;
                  $2123 = ($iij534$01467|0)<(2);
                  do {
                   if ($2123) {
                    $2124 = (($sj5array31) + ($ij533$01471<<3)|0);
                    $2125 = (($j5valid32) + ($iij534$01467)|0);
                    $2126 = HEAP8[$2125>>0]|0;
                    $2127 = ($2126<<24>>24)==(0);
                    if ($2127) {
                     break;
                    }
                    $2128 = (($cj5array30) + ($ij533$01471<<3)|0);
                    $2129 = +HEAPF64[$2128>>3];
                    $2130 = (($cj5array30) + ($iij534$01467<<3)|0);
                    $2131 = +HEAPF64[$2130>>3];
                    $2132 = $2129 - $2131;
                    $2133 = (+__Z5IKabsd($2132));
                    $2134 = $2133 < 9.9999999999999995E-7;
                    if (!($2134)) {
                     break;
                    }
                    $2135 = +HEAPF64[$2124>>3];
                    $2136 = (($sj5array31) + ($iij534$01467<<3)|0);
                    $2137 = +HEAPF64[$2136>>3];
                    $2138 = $2135 - $2137;
                    $2139 = (+__Z5IKabsd($2138));
                    $2140 = $2139 < 9.9999999999999995E-7;
                    if (!($2140)) {
                     break;
                    }
                    HEAP8[$2125>>0] = 0;
                    $2141 = $iij534$01467&255;
                    HEAP8[$5>>0] = $2141;
                   }
                  } while(0);
                  $2142 = (($j5array29) + ($ij533$01471<<3)|0);
                  $2143 = +HEAPF64[$2142>>3];
                  HEAPF64[$3>>3] = $2143;
                  $2144 = (($cj5array30) + ($ij533$01471<<3)|0);
                  $2145 = +HEAPF64[$2144>>3];
                  HEAPF64[$113>>3] = $2145;
                  $2146 = (($sj5array31) + ($ij533$01471<<3)|0);
                  $2147 = +HEAPF64[$2146>>3];
                  HEAPF64[$114>>3] = $2147;
                  $2148 = +HEAPF64[$3>>3];
                  $2149 = (+__Z5IKcosd($2148));
                  $2150 = (+__Z5IKsind($2148));
                  $2151 = +HEAPF64[$43>>3];
                  $2152 = $2151 * $2151;
                  $2153 = +HEAPF64[$45>>3];
                  $2154 = $2153 * $2153;
                  $2155 = +HEAPF64[$84>>3];
                  $2156 = $2155 * 0.70710678118654802;
                  $2157 = +HEAPF64[$83>>3];
                  $2158 = $2153 * $2157;
                  $2159 = $2155 * 0.77781745930520196;
                  $2160 = $2155 * 0.063639610306789302;
                  $2161 = $2157 * 0.70710678118654802;
                  $2162 = $2149 * $2151;
                  $2163 = $2150 * $2153;
                  $2164 = $2150 * $2151;
                  $2165 = $2149 * 0.58823529411764697;
                  $2166 = $2150 * $2158;
                  $2167 = $2149 * -0.316735294117647;
                  $2168 = $2165 * $2152;
                  $2169 = $2167 - $2168;
                  $2170 = $2165 * $2154;
                  $2171 = $2169 - $2170;
                  $2172 = +HEAPF64[$75>>3];
                  $2173 = $2172 * -0.108264705882353;
                  $2174 = $2149 * $2173;
                  $2175 = $2171 + $2174;
                  $2176 = -$2156;
                  $2177 = +HEAPF64[$76>>3];
                  $2178 = $2177 * 0.044999999999999998;
                  $2179 = -0.55000000000000004 - $2178;
                  $2180 = $2172 * 0.29999999999999999;
                  $2181 = $2179 - $2180;
                  $2182 = $2166 * 0.70710678118654802;
                  $2183 = $2182 + $2181;
                  $2184 = $2164 * $2161;
                  $2185 = $2184 + $2183;
                  $2186 = $2163 * $2156;
                  $2187 = $2186 + $2185;
                  $2188 = $2164 * $2176;
                  $2189 = $2188 + $2187;
                  $2190 = -0.21249999999999999 - $2154;
                  $2191 = $2166 * 0.77781745930520196;
                  $2192 = $2190 + $2191;
                  $2193 = $2157 * 0.77781745930520196;
                  $2194 = $2164 * $2193;
                  $2195 = $2194 + $2192;
                  $2196 = $2151 * $2160;
                  $2197 = $2195 - $2196;
                  $2198 = $2163 * $2159;
                  $2199 = $2198 + $2197;
                  $2200 = $2164 * $2159;
                  $2201 = $2199 - $2200;
                  $2202 = $2157 * -0.063639610306789302;
                  $2203 = $2151 * $2202;
                  $2204 = $2203 + $2201;
                  $2205 = $2158 * 0.063639610306789302;
                  $2206 = $2205 + $2204;
                  $2207 = $2206 - $2152;
                  $2208 = $2153 * $2160;
                  $2209 = $2207 - $2208;
                  $2210 = (+__Z5IKabsd($2175));
                  $2211 = $2210 > 5.0000000000000004E-6;
                  if ($2211) {
                   break;
                  }
                  $2212 = $2162 * $2161;
                  $2213 = $2149 * $2153;
                  $2214 = $2213 * $2156;
                  $2215 = $2214 + $2212;
                  $2216 = $2149 * 0.70710678118654802;
                  $2217 = $2216 * $2158;
                  $2218 = $2217 + $2215;
                  $2219 = $2162 * $2176;
                  $2220 = $2219 + $2218;
                  $2221 = (+__Z5IKabsd($2220));
                  $2222 = $2221 > 5.0000000000000004E-6;
                  if ($2222) {
                   break;
                  }
                  $2223 = (+__Z5IKabsd($2189));
                  $2224 = $2223 > 5.0000000000000004E-6;
                  if ($2224) {
                   break;
                  }
                  $2225 = (+__Z5IKabsd($2209));
                  $2226 = $2225 > 5.0000000000000004E-6;
                  if ($2226) {
                   break;
                  }
                  __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                 }
                } while(0);
                $2227 = (($ij533$01471) + 1)|0;
                $exitcond1783 = ($2227|0)==(2);
                if ($exitcond1783) {
                 break L1630;
                } else {
                 $ij533$01471 = $2227;
                }
               }
              }
              $1552 = +HEAPF64[$45>>3];
              $1553 = +HEAPF64[$43>>3];
              $1554 = $1552 + $1553;
              $1555 = $1552 - $1553;
              $1556 = $1555 * $1555;
              $1557 = $1554 * $1554;
              $1558 = $1556 + $1557;
              $1559 = (+__Z5IKabsd($1558));
              $1560 = $1559 == 0.0;
              do {
               if (!($1560)) {
                $1561 = (+Math_pow((+$1558),-0.5));
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x163,$1554,$1555,1.9999999999999999E-6);
                $1562 = HEAP8[$99>>0]|0;
                $1563 = ($1562<<24>>24)==(0);
                if ($1563) {
                 break;
                }
                $1564 = $1554 * $1561;
                $1565 = -$1564;
                $1566 = $1555 * $1561;
                $1567 = +HEAPF64[$this>>3];
                $1568 = $1566 * 0.70710678118654802;
                $1569 = $1564 * -0.70710678118654802;
                $1570 = +HEAPF64[$45>>3];
                $1571 = +HEAPF64[$43>>3];
                $1572 = $1570 + $1571;
                $1573 = $1570 - $1571;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x170,$1572,$1573,1.9999999999999999E-6);
                $1574 = HEAP8[$100>>0]|0;
                $1575 = ($1574<<24>>24)==(0);
                if ($1575) {
                 break;
                }
                $1576 = +HEAPF64[$x170>>3];
                $1577 = +HEAPF64[$45>>3];
                $1578 = $1569 * $1577;
                $1579 = $1578 + 0.044999999999999998;
                $1580 = $1568 * $1577;
                $1581 = $1579 - $1580;
                $1582 = +HEAPF64[$75>>3];
                $1583 = $1582 * 0.044999999999999998;
                $1584 = $1581 - $1583;
                $1585 = +HEAPF64[$43>>3];
                $1586 = $1568 * $1585;
                $1587 = $1586 + $1584;
                $1588 = $1569 * $1585;
                $1589 = $1588 + $1587;
                $1590 = +HEAPF64[$76>>3];
                $1591 = $1590 * 0.29999999999999999;
                $1592 = $1591 + $1589;
                $1593 = $1567 * $1576;
                $1594 = $1576 * $1576;
                $1595 = $1593 + $1594;
                $1596 = +HEAPF64[$this>>3];
                $1597 = $1576 * $1596;
                $1598 = $1595 + $1597;
                $1599 = $1567 * $1596;
                $1600 = $1599 + $1598;
                $1601 = $1600 < -1.0000000000000001E-5;
                if ($1601) {
                 break;
                }
                $1602 = (+__Z6IKsqrtd($1600));
                $1603 = $1602 + 3.14159265358979;
                $1604 = (+__Z6IKfmoddd($1603,6.2831853071795898));
                $1605 = $1604 + -3.14159265358979;
                $1606 = (+__Z5IKabsd($1605));
                $1607 = $1606 < 9.9999999999999995E-7;
                if (!($1607)) {
                 break;
                }
                $1608 = $1585 * $1585;
                $1609 = 0.39655000000000001 - $1608;
                $1610 = $1590 * 0.076499999999999999;
                $1611 = $1609 + $1610;
                $1612 = $1577 * $1577;
                $1613 = $1611 - $1612;
                $1614 = $1582 * 0.32595000000000002;
                $1615 = $1614 + $1613;
                $1616 = (+__Z5IKabsd($1615));
                $1617 = $1616 < 9.9999999999999995E-7;
                if (!($1617)) {
                 break;
                }
                $1618 = (+__Z5IKabsd($1592));
                $1619 = $1618 < 9.9999999999999995E-7;
                if (!($1619)) {
                 break;
                }
                HEAP16[$j5valid>>1] = 0;
                HEAP8[$6>>0] = 2;
                $1620 = +HEAPF64[$43>>3];
                $1621 = $1620 * 0.70710678118654802;
                $1622 = +HEAPF64[$45>>3];
                $1623 = $1622 * 0.70710678118654802;
                $1624 = $1564 * $1621;
                $1625 = $1623 * $1565;
                $1626 = $1624 + $1625;
                $1627 = $1566 * $1621;
                $1628 = $1627 + $1626;
                $1629 = $1566 * $1623;
                $1630 = $1629 + $1628;
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x174,$1630,-1);
                $1631 = HEAP8[$101>>0]|0;
                $1632 = ($1631<<24>>24)==(0);
                if ($1632) {
                 break L1630;
                }
                $1633 = +HEAPF64[$x174>>3];
                $1634 = $1633 * 0.55000000000000004;
                $1635 = +HEAPF64[$76>>3];
                $1636 = $1635 * 0.044999999999999998;
                $1637 = $1633 * $1636;
                $1638 = $1634 + $1637;
                $1639 = +HEAPF64[$75>>3];
                $1640 = $1639 * 0.29999999999999999;
                $1641 = $1633 * $1640;
                $1642 = $1638 + $1641;
                HEAPF64[$sj5array>>3] = $1642;
                $1643 = !($1642 >= -1.0000020000000001);
                $1644 = !($1642 <= 1.0000020000000001);
                $or$cond100 = $1643 | $1644;
                do {
                 if ($or$cond100) {
                  $1654 = (__Z13__DOUBLE_BITSd($1642)|0);
                  $1655 = tempRet0;
                  $1656 = $1655 & 2147483647;
                  $1657 = ($1656>>>0)>(2146435072);
                  $1658 = ($1654>>>0)>(0);
                  $1659 = ($1656|0)==(2146435072);
                  $1660 = $1659 & $1658;
                  $1661 = $1657 | $1660;
                  if (!($1661)) {
                   $ij5$01476 = 0;
                   break;
                  }
                  HEAP8[$j5valid>>0] = 1;
                  HEAPF64[$cj5array>>3] = 1.0;
                  HEAPF64[$sj5array>>3] = 0.0;
                  HEAPF64[$j5array>>3] = 0.0;
                  $ij5$01476 = 0;
                 } else {
                  HEAP8[$102>>0] = 1;
                  HEAP8[$j5valid>>0] = 1;
                  $1645 = +HEAPF64[$sj5array>>3];
                  $1646 = (+__Z6IKasind($1645));
                  HEAPF64[$j5array>>3] = $1646;
                  $1647 = (+__Z5IKcosd($1646));
                  HEAPF64[$cj5array>>3] = $1647;
                  $1648 = +HEAPF64[$sj5array>>3];
                  HEAPF64[$103>>3] = $1648;
                  $1649 = +HEAPF64[$j5array>>3];
                  $1650 = $1649 > 0.0;
                  $$v98 = $1650 ? 3.14159265358979 : -3.14159265358979;
                  $1651 = $$v98 - $1649;
                  HEAPF64[$104>>3] = $1651;
                  $1652 = +HEAPF64[$cj5array>>3];
                  $1653 = -$1652;
                  HEAPF64[$105>>3] = $1653;
                  $ij5$01476 = 0;
                 }
                } while(0);
                while(1) {
                 $1662 = (($j5valid) + ($ij5$01476)|0);
                 $1663 = HEAP8[$1662>>0]|0;
                 $1664 = ($1663<<24>>24)==(0);
                 do {
                  if (!($1664)) {
                   $1665 = $ij5$01476&255;
                   HEAP8[$4>>0] = $1665;
                   HEAP8[$5>>0] = -1;
                   $iij5$01472 = (($ij5$01476) + 1)|0;
                   $1666 = ($iij5$01472|0)<(2);
                   do {
                    if ($1666) {
                     $1667 = (($sj5array) + ($ij5$01476<<3)|0);
                     $1668 = (($j5valid) + ($iij5$01472)|0);
                     $1669 = HEAP8[$1668>>0]|0;
                     $1670 = ($1669<<24>>24)==(0);
                     if ($1670) {
                      break;
                     }
                     $1671 = (($cj5array) + ($ij5$01476<<3)|0);
                     $1672 = +HEAPF64[$1671>>3];
                     $1673 = (($cj5array) + ($iij5$01472<<3)|0);
                     $1674 = +HEAPF64[$1673>>3];
                     $1675 = $1672 - $1674;
                     $1676 = (+__Z5IKabsd($1675));
                     $1677 = $1676 < 9.9999999999999995E-7;
                     if (!($1677)) {
                      break;
                     }
                     $1678 = +HEAPF64[$1667>>3];
                     $1679 = (($sj5array) + ($iij5$01472<<3)|0);
                     $1680 = +HEAPF64[$1679>>3];
                     $1681 = $1678 - $1680;
                     $1682 = (+__Z5IKabsd($1681));
                     $1683 = $1682 < 9.9999999999999995E-7;
                     if (!($1683)) {
                      break;
                     }
                     HEAP8[$1668>>0] = 0;
                     $1684 = $iij5$01472&255;
                     HEAP8[$5>>0] = $1684;
                    }
                   } while(0);
                   $1685 = (($j5array) + ($ij5$01476<<3)|0);
                   $1686 = +HEAPF64[$1685>>3];
                   HEAPF64[$3>>3] = $1686;
                   $1687 = (($cj5array) + ($ij5$01476<<3)|0);
                   $1688 = +HEAPF64[$1687>>3];
                   HEAPF64[$106>>3] = $1688;
                   $1689 = (($sj5array) + ($ij5$01476<<3)|0);
                   $1690 = +HEAPF64[$1689>>3];
                   HEAPF64[$107>>3] = $1690;
                   $1691 = +HEAPF64[$3>>3];
                   $1692 = (+__Z5IKcosd($1691));
                   $1693 = (+__Z5IKsind($1691));
                   $1694 = +HEAPF64[$43>>3];
                   $1695 = $1694 * $1694;
                   $1696 = +HEAPF64[$45>>3];
                   $1697 = $1696 * $1696;
                   $1698 = $1566 * $1694;
                   $1699 = $1566 * $1696;
                   $1700 = $1694 * $1565;
                   $1701 = $1696 * $1565;
                   $1702 = $1693 * 0.77781745930520196;
                   $1703 = $1692 * 0.70710678118654802;
                   $1704 = $1692 * 0.58823529411764697;
                   $1705 = $1704 * $1697;
                   $1706 = $1692 * -0.316735294117647;
                   $1707 = $1706 - $1705;
                   $1708 = $1704 * $1695;
                   $1709 = $1707 - $1708;
                   $1710 = +HEAPF64[$75>>3];
                   $1711 = $1710 * -0.108264705882353;
                   $1712 = $1692 * $1711;
                   $1713 = $1712 + $1709;
                   $1714 = -$1700;
                   $1715 = $1699 * 0.70710678118654802;
                   $1716 = $1701 * -0.70710678118654802;
                   $1717 = $1716 - $1715;
                   $1718 = $1693 * 0.55000000000000004;
                   $1719 = $1718 + $1717;
                   $1720 = +HEAPF64[$76>>3];
                   $1721 = $1720 * 0.044999999999999998;
                   $1722 = $1693 * $1721;
                   $1723 = $1719 + $1722;
                   $1724 = $1698 * 0.70710678118654802;
                   $1725 = $1723 - $1724;
                   $1726 = $1710 * 0.29999999999999999;
                   $1727 = $1693 * $1726;
                   $1728 = $1727 + $1725;
                   $1729 = $1700 * 0.70710678118654802;
                   $1730 = $1729 + $1728;
                   $1731 = $1702 * $1699;
                   $1732 = $1731 + -0.21249999999999999;
                   $1733 = $1702 * $1698;
                   $1734 = $1733 + $1732;
                   $1735 = $1734 - $1697;
                   $1736 = $1735 - $1695;
                   $1737 = $1699 * 0.063639610306789302;
                   $1738 = $1737 + $1736;
                   $1739 = $1700 * 0.063639610306789302;
                   $1740 = $1738 - $1739;
                   $1741 = $1701 * 0.063639610306789302;
                   $1742 = $1740 - $1741;
                   $1743 = $1698 * 0.063639610306789302;
                   $1744 = $1742 - $1743;
                   $1745 = $1702 * $1701;
                   $1746 = $1745 + $1744;
                   $1747 = $1702 * $1714;
                   $1748 = $1747 + $1746;
                   $1749 = (+__Z5IKabsd($1713));
                   $1750 = $1749 > 5.0000000000000004E-6;
                   if ($1750) {
                    break;
                   }
                   $1751 = $1703 * $1699;
                   $1752 = $1703 * $1698;
                   $1753 = $1752 + $1751;
                   $1754 = $1703 * $1701;
                   $1755 = $1754 + $1753;
                   $1756 = $1703 * $1714;
                   $1757 = $1756 + $1755;
                   $1758 = (+__Z5IKabsd($1757));
                   $1759 = $1758 > 5.0000000000000004E-6;
                   if ($1759) {
                    break;
                   }
                   $1760 = (+__Z5IKabsd($1730));
                   $1761 = $1760 > 5.0000000000000004E-6;
                   if ($1761) {
                    break;
                   }
                   $1762 = (+__Z5IKabsd($1748));
                   $1763 = $1762 > 5.0000000000000004E-6;
                   if ($1763) {
                    break;
                   }
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                 } while(0);
                 $1764 = (($ij5$01476) + 1)|0;
                 $exitcond1784 = ($1764|0)==(2);
                 if ($exitcond1784) {
                  break L1630;
                 } else {
                  $ij5$01476 = $1764;
                 }
                }
               }
              } while(0);
              $1765 = +HEAPF64[$45>>3];
              $1766 = +HEAPF64[$43>>3];
              $1767 = $1765 + $1766;
              $1768 = $1765 - $1766;
              $1769 = $1768 * $1768;
              $1770 = $1767 * $1767;
              $1771 = $1769 + $1770;
              $1772 = (+__Z5IKabsd($1771));
              $1773 = $1772 == 0.0;
              do {
               if (!($1773)) {
                $1774 = (+Math_pow((+$1771),-0.5));
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x767,$1767,$1768,1.9999999999999999E-6);
                $1775 = HEAP8[$90>>0]|0;
                $1776 = ($1775<<24>>24)==(0);
                if ($1776) {
                 break;
                }
                $1777 = $1767 * $1774;
                $1778 = $1768 * $1774;
                $1779 = -$1778;
                $1780 = +HEAPF64[$this>>3];
                $1781 = $1778 * -0.70710678118654802;
                $1782 = $1777 * 0.70710678118654802;
                $1783 = +HEAPF64[$45>>3];
                $1784 = +HEAPF64[$43>>3];
                $1785 = $1783 + $1784;
                $1786 = $1783 - $1784;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x774,$1785,$1786,1.9999999999999999E-6);
                $1787 = HEAP8[$91>>0]|0;
                $1788 = ($1787<<24>>24)==(0);
                if ($1788) {
                 break;
                }
                $1789 = +HEAPF64[$x774>>3];
                $1790 = +HEAPF64[$45>>3];
                $1791 = $1781 * $1790;
                $1792 = 0.044999999999999998 - $1791;
                $1793 = +HEAPF64[$43>>3];
                $1794 = $1781 * $1793;
                $1795 = $1792 + $1794;
                $1796 = $1782 * $1793;
                $1797 = $1796 + $1795;
                $1798 = +HEAPF64[$75>>3];
                $1799 = $1798 * 0.044999999999999998;
                $1800 = $1797 - $1799;
                $1801 = +HEAPF64[$76>>3];
                $1802 = $1801 * 0.29999999999999999;
                $1803 = $1802 + $1800;
                $1804 = $1782 * $1790;
                $1805 = $1804 + $1803;
                $1806 = $1789 * $1789;
                $1807 = $1806 + 9.8696044010893597;
                $1808 = $1780 * 3.14159265358979;
                $1809 = $1807 - $1808;
                $1810 = $1789 * -3.14159265358979;
                $1811 = $1810 + $1809;
                $1812 = $1810 + $1811;
                $1813 = +HEAPF64[$this>>3];
                $1814 = $1780 * $1813;
                $1815 = $1812 + $1814;
                $1816 = $1813 * 3.14159265358979;
                $1817 = $1815 - $1816;
                $1818 = $1789 * $1813;
                $1819 = $1818 + $1817;
                $1820 = $1780 * $1789;
                $1821 = $1820 + $1819;
                $1822 = $1821 < -1.0000000000000001E-5;
                if ($1822) {
                 break;
                }
                $1823 = (+__Z6IKsqrtd($1821));
                $1824 = $1823 + 3.14159265358979;
                $1825 = (+__Z6IKfmoddd($1824,6.2831853071795898));
                $1826 = $1825 + -3.14159265358979;
                $1827 = (+__Z5IKabsd($1826));
                $1828 = $1827 < 9.9999999999999995E-7;
                if (!($1828)) {
                 break;
                }
                $1829 = $1793 * $1793;
                $1830 = 0.39655000000000001 - $1829;
                $1831 = $1801 * 0.076499999999999999;
                $1832 = $1830 + $1831;
                $1833 = $1790 * $1790;
                $1834 = $1832 - $1833;
                $1835 = $1798 * 0.32595000000000002;
                $1836 = $1835 + $1834;
                $1837 = (+__Z5IKabsd($1836));
                $1838 = $1837 < 9.9999999999999995E-7;
                if (!($1838)) {
                 break;
                }
                $1839 = (+__Z5IKabsd($1805));
                $1840 = $1839 < 9.9999999999999995E-7;
                if (!($1840)) {
                 break;
                }
                HEAP16[$j5valid15>>1] = 0;
                HEAP8[$6>>0] = 2;
                $1841 = +HEAPF64[$43>>3];
                $1842 = $1782 * $1841;
                $1843 = $1781 * $1841;
                $1844 = $1843 - $1842;
                $1845 = +HEAPF64[$45>>3];
                $1846 = $1781 * $1845;
                $1847 = $1844 + $1846;
                $1848 = $1782 * $1845;
                $1849 = $1848 + $1847;
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x778,$1849,-1);
                $1850 = HEAP8[$92>>0]|0;
                $1851 = ($1850<<24>>24)==(0);
                if ($1851) {
                 break L1630;
                }
                $1852 = +HEAPF64[$x778>>3];
                $1853 = +HEAPF64[$76>>3];
                $1854 = $1853 * 0.044999999999999998;
                $1855 = $1852 * $1854;
                $1856 = +HEAPF64[$75>>3];
                $1857 = $1856 * 0.29999999999999999;
                $1858 = $1852 * $1857;
                $1859 = $1855 + $1858;
                $1860 = $1852 * 0.55000000000000004;
                $1861 = $1860 + $1859;
                HEAPF64[$sj5array14>>3] = $1861;
                $1862 = !($1861 >= -1.0000020000000001);
                $1863 = !($1861 <= 1.0000020000000001);
                $or$cond104 = $1862 | $1863;
                do {
                 if ($or$cond104) {
                  $1873 = (__Z13__DOUBLE_BITSd($1861)|0);
                  $1874 = tempRet0;
                  $1875 = $1874 & 2147483647;
                  $1876 = ($1875>>>0)>(2146435072);
                  $1877 = ($1873>>>0)>(0);
                  $1878 = ($1875|0)==(2146435072);
                  $1879 = $1878 & $1877;
                  $1880 = $1876 | $1879;
                  if (!($1880)) {
                   $ij516$01481 = 0;
                   break;
                  }
                  HEAP8[$j5valid15>>0] = 1;
                  HEAPF64[$cj5array13>>3] = 1.0;
                  HEAPF64[$sj5array14>>3] = 0.0;
                  HEAPF64[$j5array12>>3] = 0.0;
                  $ij516$01481 = 0;
                 } else {
                  HEAP8[$93>>0] = 1;
                  HEAP8[$j5valid15>>0] = 1;
                  $1864 = +HEAPF64[$sj5array14>>3];
                  $1865 = (+__Z6IKasind($1864));
                  HEAPF64[$j5array12>>3] = $1865;
                  $1866 = (+__Z5IKcosd($1865));
                  HEAPF64[$cj5array13>>3] = $1866;
                  $1867 = +HEAPF64[$sj5array14>>3];
                  HEAPF64[$94>>3] = $1867;
                  $1868 = +HEAPF64[$j5array12>>3];
                  $1869 = $1868 > 0.0;
                  $$v96 = $1869 ? 3.14159265358979 : -3.14159265358979;
                  $1870 = $$v96 - $1868;
                  HEAPF64[$95>>3] = $1870;
                  $1871 = +HEAPF64[$cj5array13>>3];
                  $1872 = -$1871;
                  HEAPF64[$96>>3] = $1872;
                  $ij516$01481 = 0;
                 }
                } while(0);
                while(1) {
                 $1881 = (($j5valid15) + ($ij516$01481)|0);
                 $1882 = HEAP8[$1881>>0]|0;
                 $1883 = ($1882<<24>>24)==(0);
                 do {
                  if (!($1883)) {
                   $1884 = $ij516$01481&255;
                   HEAP8[$4>>0] = $1884;
                   HEAP8[$5>>0] = -1;
                   $iij517$01477 = (($ij516$01481) + 1)|0;
                   $1885 = ($iij517$01477|0)<(2);
                   do {
                    if ($1885) {
                     $1886 = (($sj5array14) + ($ij516$01481<<3)|0);
                     $1887 = (($j5valid15) + ($iij517$01477)|0);
                     $1888 = HEAP8[$1887>>0]|0;
                     $1889 = ($1888<<24>>24)==(0);
                     if ($1889) {
                      break;
                     }
                     $1890 = (($cj5array13) + ($ij516$01481<<3)|0);
                     $1891 = +HEAPF64[$1890>>3];
                     $1892 = (($cj5array13) + ($iij517$01477<<3)|0);
                     $1893 = +HEAPF64[$1892>>3];
                     $1894 = $1891 - $1893;
                     $1895 = (+__Z5IKabsd($1894));
                     $1896 = $1895 < 9.9999999999999995E-7;
                     if (!($1896)) {
                      break;
                     }
                     $1897 = +HEAPF64[$1886>>3];
                     $1898 = (($sj5array14) + ($iij517$01477<<3)|0);
                     $1899 = +HEAPF64[$1898>>3];
                     $1900 = $1897 - $1899;
                     $1901 = (+__Z5IKabsd($1900));
                     $1902 = $1901 < 9.9999999999999995E-7;
                     if (!($1902)) {
                      break;
                     }
                     HEAP8[$1887>>0] = 0;
                     $1903 = $iij517$01477&255;
                     HEAP8[$5>>0] = $1903;
                    }
                   } while(0);
                   $1904 = (($j5array12) + ($ij516$01481<<3)|0);
                   $1905 = +HEAPF64[$1904>>3];
                   HEAPF64[$3>>3] = $1905;
                   $1906 = (($cj5array13) + ($ij516$01481<<3)|0);
                   $1907 = +HEAPF64[$1906>>3];
                   HEAPF64[$97>>3] = $1907;
                   $1908 = (($sj5array14) + ($ij516$01481<<3)|0);
                   $1909 = +HEAPF64[$1908>>3];
                   HEAPF64[$98>>3] = $1909;
                   $1910 = +HEAPF64[$3>>3];
                   $1911 = (+__Z5IKcosd($1910));
                   $1912 = (+__Z5IKsind($1910));
                   $1913 = +HEAPF64[$43>>3];
                   $1914 = $1913 * $1913;
                   $1915 = +HEAPF64[$45>>3];
                   $1916 = $1915 * $1915;
                   $1917 = $1915 * 0.063639610306789302;
                   $1918 = $1777 * $1913;
                   $1919 = $1915 * $1779;
                   $1920 = $1777 * $1915;
                   $1921 = $1913 * $1779;
                   $1922 = $1911 * 0.70710678118654802;
                   $1923 = $1912 * 0.77781745930520196;
                   $1924 = $1911 * 0.58823529411764697;
                   $1925 = $1911 * 0.316735294117647;
                   $1926 = +HEAPF64[$75>>3];
                   $1927 = $1926 * -0.108264705882353;
                   $1928 = $1911 * $1927;
                   $1929 = $1928 - $1925;
                   $1930 = $1924 * $1914;
                   $1931 = $1929 - $1930;
                   $1932 = $1924 * $1916;
                   $1933 = $1931 - $1932;
                   $1934 = -$1918;
                   $1935 = $1920 * 0.70710678118654802;
                   $1936 = $1921 * -0.70710678118654802;
                   $1937 = $1936 - $1935;
                   $1938 = $1919 * 0.70710678118654802;
                   $1939 = $1937 - $1938;
                   $1940 = $1912 * 0.55000000000000004;
                   $1941 = $1940 + $1939;
                   $1942 = $1926 * 0.29999999999999999;
                   $1943 = $1912 * $1942;
                   $1944 = $1943 + $1941;
                   $1945 = +HEAPF64[$76>>3];
                   $1946 = $1945 * 0.044999999999999998;
                   $1947 = $1912 * $1946;
                   $1948 = $1947 + $1944;
                   $1949 = $1918 * 0.70710678118654802;
                   $1950 = $1949 + $1948;
                   $1951 = $1923 * $1920;
                   $1952 = $1951 + -0.21249999999999999;
                   $1953 = $1777 * $1917;
                   $1954 = $1952 - $1953;
                   $1955 = $1923 * $1919;
                   $1956 = $1955 + $1954;
                   $1957 = $1923 * $1921;
                   $1958 = $1957 + $1956;
                   $1959 = $1921 * 0.063639610306789302;
                   $1960 = $1958 - $1959;
                   $1961 = $1918 * 0.063639610306789302;
                   $1962 = $1960 - $1961;
                   $1963 = $1923 * $1934;
                   $1964 = $1963 + $1962;
                   $1965 = $1964 - $1914;
                   $1966 = $1965 - $1916;
                   $1967 = $1917 * $1779;
                   $1968 = $1967 + $1966;
                   $1969 = (+__Z5IKabsd($1933));
                   $1970 = $1969 > 5.0000000000000004E-6;
                   if ($1970) {
                    break;
                   }
                   $1971 = $1922 * $1920;
                   $1972 = $1922 * $1919;
                   $1973 = $1971 + $1972;
                   $1974 = $1922 * $1921;
                   $1975 = $1974 + $1973;
                   $1976 = $1922 * $1934;
                   $1977 = $1976 + $1975;
                   $1978 = (+__Z5IKabsd($1977));
                   $1979 = $1978 > 5.0000000000000004E-6;
                   if ($1979) {
                    break;
                   }
                   $1980 = (+__Z5IKabsd($1950));
                   $1981 = $1980 > 5.0000000000000004E-6;
                   if ($1981) {
                    break;
                   }
                   $1982 = (+__Z5IKabsd($1968));
                   $1983 = $1982 > 5.0000000000000004E-6;
                   if ($1983) {
                    break;
                   }
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                 } while(0);
                 $1984 = (($ij516$01481) + 1)|0;
                 $exitcond1785 = ($1984|0)==(2);
                 if ($exitcond1785) {
                  break L1630;
                 } else {
                  $ij516$01481 = $1984;
                 }
                }
               }
              } while(0);
              $1985 = +HEAPF64[$75>>3];
              $1986 = $1985 * 0.044999999999999998;
              $1987 = 0.044999999999999998 - $1986;
              $1988 = +HEAPF64[$76>>3];
              $1989 = $1988 * 0.29999999999999999;
              $1990 = $1987 + $1989;
              $1991 = +HEAPF64[$43>>3];
              $1992 = (+__Z5IKabsd($1991));
              $1993 = +HEAPF64[$45>>3];
              $1994 = (+__Z5IKabsd($1993));
              $1995 = $1992 + $1994;
              $1996 = $1988 * 0.044999999999999998;
              $1997 = -0.55000000000000004 - $1996;
              $1998 = $1985 * 0.29999999999999999;
              $1999 = $1997 - $1998;
              $2000 = (+__Z5IKabsd($1995));
              $2001 = $2000 < 9.9999999999999995E-7;
              if (!($2001)) {
               break L1630;
              }
              $2002 = $1988 * 0.076499999999999999;
              $2003 = $2002 + 0.39655000000000001;
              $2004 = $1985 * 0.32595000000000002;
              $2005 = $2004 + $2003;
              $2006 = (+__Z5IKabsd($2005));
              $2007 = $2006 < 9.9999999999999995E-7;
              if (!($2007)) {
               break L1630;
              }
              $2008 = (+__Z5IKabsd($1990));
              $2009 = $2008 < 9.9999999999999995E-7;
              if (!($2009)) {
               break L1630;
              }
              $2010 = (+__Z5IKabsd($1999));
              $2011 = $2010 < 9.9999999999999995E-7;
              if (!($2011)) {
               break L1630;
              }
              $2012 = (+__Z5IKabsd(0.0));
              $2013 = $2012 < 9.9999999999999995E-7;
              if (!($2013)) {
               break L1630;
              }
              $2014 = (+__Z5IKabsd(-0.21249999999999999));
              $2015 = $2014 < 9.9999999999999995E-7;
              if (!($2015)) {
               break L1630;
              }
              HEAPF64[$47>>3] = 0.0;
              HEAPF64[$22>>3] = 1.5707963267949001;
              HEAPF64[$24>>3] = 1.0;
              HEAPF64[$23>>3] = 0.0;
              HEAPF64[$64>>3] = 0.0;
              HEAPF64[$65>>3] = 0.0;
              HEAPF64[$67>>3] = 0.0;
              HEAPF64[$68>>3] = 0.0;
              HEAPF64[$70>>3] = 0.0;
              HEAPF64[$71>>3] = 0.0;
              HEAPF64[$66>>3] = 0.0;
              HEAPF64[$69>>3] = 0.0;
              HEAPF64[$72>>3] = 0.0;
              ;HEAP32[$43>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;HEAP32[$43+12>>2]=0|0;
              ;HEAP32[$45>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;HEAP32[$45+12>>2]=0|0;
              ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
              $2016 = +HEAPF64[$75>>3];
              $2017 = $2016 + 2.92556370551481;
              $2018 = (+__Z5IKabsd($2017));
              $2019 = (+__Z5IKabsd($2018));
              $2020 = $2019 < 1.0E-8;
              if ($2020) {
               break L1630;
              }
              HEAPF64[$op>>3] = $2017;
              HEAPF64[$85>>3] = 0.0;
              $2021 = +HEAPF64[$75>>3];
              $2022 = -2.92556370551481 - $2021;
              HEAPF64[$86>>3] = $2022;
              __ZN8IKSolver10polyroots2EPdS0_Ri($op,$zeror,$numroots);
              $2023 = HEAP32[$numroots>>2]|0;
              $2024 = ($2023|0)>(0);
              if (!($2024)) {
               HEAP16[$j5valid25>>1] = 257;
               HEAP8[$6>>0] = 2;
               break L1630;
              }
              $2025 = HEAP32[$numroots>>2]|0;
              $2026 = ($2025|0)>(1);
              $numsolutions$01485 = 0;
              while(1) {
               $2027 = (($zeror) + ($numsolutions$01485<<3)|0);
               $2028 = +HEAPF64[$2027>>3];
               $2029 = (+Math_atan((+$2028)));
               $2030 = $2029 * 2.0;
               $2031 = $2030 + 6.2831853071795898;
               $2032 = $2030 > 3.14159265358979;
               $2033 = (($j5array21) + ($numsolutions$01485<<3)|0);
               HEAPF64[$2033>>3] = $2030;
               do {
                if ($2032) {
                 $2034 = $2030 + -6.2831853071795898;
                 HEAPF64[$2033>>3] = $2034;
                } else {
                 $2035 = $2030 < -3.14159265358979;
                 if (!($2035)) {
                  break;
                 }
                 HEAPF64[$2033>>3] = $2031;
                }
               } while(0);
               $2036 = +HEAPF64[$2033>>3];
               $2037 = (+__Z5IKsind($2036));
               $2038 = (($sj5array23) + ($numsolutions$01485<<3)|0);
               HEAPF64[$2038>>3] = $2037;
               $2039 = +HEAPF64[$2033>>3];
               $2040 = (+__Z5IKcosd($2039));
               $2041 = (($cj5array22) + ($numsolutions$01485<<3)|0);
               HEAPF64[$2041>>3] = $2040;
               $2042 = (($numsolutions$01485) + 1)|0;
               $2043 = ($2042|0)<($2025|0);
               if ($2043) {
                $numsolutions$01485 = $2042;
               } else {
                break;
               }
              }
              $$ = $2026 ? $2025 : 1;
              HEAP16[$j5valid25>>1] = 257;
              HEAP8[$6>>0] = 2;
              $ij526$01494 = 0;
              while(1) {
               $2044 = (($j5valid25) + ($ij526$01494)|0);
               $2045 = HEAP8[$2044>>0]|0;
               $2046 = ($2045<<24>>24)==(0);
               if (!($2046)) {
                $2047 = (($j5array21) + ($ij526$01494<<3)|0);
                $2048 = +HEAPF64[$2047>>3];
                HEAPF64[$3>>3] = $2048;
                $2049 = (($cj5array22) + ($ij526$01494<<3)|0);
                $2050 = +HEAPF64[$2049>>3];
                HEAPF64[$87>>3] = $2050;
                $2051 = (($sj5array23) + ($ij526$01494<<3)|0);
                $2052 = +HEAPF64[$2051>>3];
                HEAPF64[$88>>3] = $2052;
                $2053 = +HEAPF64[$3>>3];
                $2054 = $2053 * 0.5;
                $2055 = (+__Z5IKtand($2054));
                HEAPF64[$89>>3] = $2055;
                $2056 = $ij526$01494&255;
                HEAP8[$4>>0] = $2056;
                HEAP8[$5>>0] = -1;
                $iij527$01490 = (($ij526$01494) + 1)|0;
                $2057 = ($iij527$01490|0)<($$|0);
                L1821: do {
                 if ($2057) {
                  $iij527$01491 = $iij527$01490;
                  L1822: while(1) {
                   $2058 = (($j5valid25) + ($iij527$01491)|0);
                   $2059 = HEAP8[$2058>>0]|0;
                   $2060 = ($2059<<24>>24)==(0);
                   do {
                    if (!($2060)) {
                     $2062 = +HEAPF64[$2049>>3];
                     $2063 = (($cj5array22) + ($iij527$01491<<3)|0);
                     $2064 = +HEAPF64[$2063>>3];
                     $2065 = $2062 - $2064;
                     $2066 = (+__Z5IKabsd($2065));
                     $2067 = $2066 < 9.9999999999999995E-7;
                     if (!($2067)) {
                      break;
                     }
                     $2068 = +HEAPF64[$2051>>3];
                     $2069 = (($sj5array23) + ($iij527$01491<<3)|0);
                     $2070 = +HEAPF64[$2069>>3];
                     $2071 = $2068 - $2070;
                     $2072 = (+__Z5IKabsd($2071));
                     $2073 = $2072 < 9.9999999999999995E-7;
                     if ($2073) {
                      $$lcssa2059 = $2058;$iij527$01491$lcssa = $iij527$01491;
                      break L1822;
                     }
                    }
                   } while(0);
                   $iij527$0 = (($iij527$01491) + 1)|0;
                   $2061 = ($iij527$0|0)<($$|0);
                   if ($2061) {
                    $iij527$01491 = $iij527$0;
                   } else {
                    break L1821;
                   }
                  }
                  HEAP8[$$lcssa2059>>0] = 0;
                  $2074 = $iij527$01491$lcssa&255;
                  HEAP8[$5>>0] = $2074;
                 }
                } while(0);
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
               $2075 = (($ij526$01494) + 1)|0;
               $exitcond1787 = ($2075|0)==($$|0);
               if ($exitcond1787) {
                break L1630;
               } else {
                $ij526$01494 = $2075;
               }
              }
             }
            } while(0);
            $2378 = +HEAPF64[$76>>3];
            $2379 = $2378 * 0.29999999999999999;
            $2380 = +HEAPF64[$75>>3];
            $2381 = $2380 * 0.044999999999999998;
            $2382 = +HEAPF64[$45>>3];
            $2383 = $2382 * 0.70710678118654802;
            $2384 = +HEAPF64[$43>>3];
            $2385 = $2384 * 0.70710678118654802;
            $2386 = +HEAPF64[$83>>3];
            $2387 = $2383 * $2386;
            $2388 = $2386 * $2385;
            $2389 = +HEAPF64[$84>>3];
            $2390 = $2383 * $2389;
            $2391 = $2385 * $2389;
            $2392 = $2379 + $2387;
            $2393 = $2381 + $2388;
            $2394 = $2393 + $2390;
            $2395 = $2391 + $2394;
            $2396 = +HEAPF64[$47>>3];
            $2397 = (+__Z5IKabsd($2396));
            $2398 = +HEAPF64[$22>>3];
            $2399 = $2398 + 4.7123889803846897;
            $2400 = (+__Z6IKfmoddd($2399,6.2831853071795898));
            $2401 = $2400 + -3.14159265358979;
            $2402 = (+__Z5IKabsd($2401));
            $2403 = $2397 + $2402;
            $2404 = -0.044999999999999998 - $2392;
            $2405 = $2404 + $2395;
            $2406 = 0.044999999999999998 - $2395;
            $2407 = $2392 + $2406;
            $2408 = (+__Z5IKabsd($2403));
            $2409 = $2408 < 9.9999999999999995E-7;
            do {
             if ($2409) {
              $2410 = +HEAPF64[$60>>3];
              $2411 = $2378 * 0.076499999999999999;
              $2412 = $2411 + 0.39655000000000001;
              $2413 = $2412 - $2410;
              $2414 = $2380 * 0.32595000000000002;
              $2415 = $2414 + $2413;
              $2416 = (+__Z5IKabsd($2415));
              $2417 = $2416 < 9.9999999999999995E-7;
              if (!($2417)) {
               break;
              }
              $2418 = (+__Z5IKabsd($2405));
              $2419 = $2418 < 9.9999999999999995E-7;
              if (!($2419)) {
               break;
              }
              $2420 = (+__Z5IKabsd($2407));
              $2421 = $2420 < 9.9999999999999995E-7;
              if (!($2421)) {
               break;
              }
              $2422 = -$2382;
              HEAPF64[$47>>3] = 0.0;
              HEAPF64[$22>>3] = -1.5707963267949001;
              HEAPF64[$24>>3] = -1.0;
              HEAPF64[$23>>3] = 0.0;
              $2423 = +HEAPF64[$43>>3];
              $2424 = $2423 * $2423;
              $2425 = +HEAPF64[$45>>3];
              $2426 = $2425 * $2425;
              $2427 = $2424 + $2426;
              HEAPF64[$60>>3] = $2427;
              $2428 = +HEAPF64[$43>>3];
              $2429 = +HEAPF64[$26>>3];
              $2430 = $2428 * $2429;
              $2431 = +HEAPF64[$45>>3];
              $2432 = +HEAPF64[$32>>3];
              $2433 = $2431 * $2432;
              $2434 = $2430 + $2433;
              HEAPF64[$61>>3] = $2434;
              $2435 = +HEAPF64[$43>>3];
              $2436 = +HEAPF64[$28>>3];
              $2437 = $2435 * $2436;
              $2438 = +HEAPF64[$45>>3];
              $2439 = +HEAPF64[$34>>3];
              $2440 = $2438 * $2439;
              $2441 = $2437 + $2440;
              HEAPF64[$62>>3] = $2441;
              $2442 = +HEAPF64[$43>>3];
              $2443 = +HEAPF64[$30>>3];
              $2444 = $2442 * $2443;
              $2445 = +HEAPF64[$45>>3];
              $2446 = +HEAPF64[$36>>3];
              $2447 = $2445 * $2446;
              $2448 = $2444 + $2447;
              HEAPF64[$63>>3] = $2448;
              $2449 = +HEAPF64[$38>>3];
              $2450 = $2449 * $2422;
              HEAPF64[$64>>3] = $2450;
              $2451 = +HEAPF64[$43>>3];
              $2452 = +HEAPF64[$38>>3];
              $2453 = $2451 * $2452;
              HEAPF64[$65>>3] = $2453;
              $2454 = +HEAPF64[$40>>3];
              $2455 = $2454 * $2422;
              HEAPF64[$67>>3] = $2455;
              $2456 = +HEAPF64[$43>>3];
              $2457 = +HEAPF64[$40>>3];
              $2458 = $2456 * $2457;
              HEAPF64[$68>>3] = $2458;
              $2459 = +HEAPF64[$42>>3];
              $2460 = $2459 * $2422;
              HEAPF64[$70>>3] = $2460;
              $2461 = +HEAPF64[$43>>3];
              $2462 = +HEAPF64[$42>>3];
              $2463 = $2461 * $2462;
              HEAPF64[$71>>3] = $2463;
              $2464 = +HEAPF64[$83>>3];
              $2465 = +HEAPF64[$45>>3];
              $2466 = $2464 * $2465;
              $2467 = +HEAPF64[$43>>3];
              $2468 = $2464 * $2467;
              $2469 = $2466 + $2468;
              $2470 = +HEAPF64[$84>>3];
              $2471 = $2467 * $2470;
              $2472 = $2469 - $2471;
              $2473 = $2465 * $2470;
              $2474 = $2473 + $2472;
              $2475 = (+__Z5IKabsd($2474));
              $2476 = $2475 < 9.9999999999999995E-7;
              if (!($2476)) {
               HEAP16[$j5valid90>>1] = 0;
               HEAP8[$6>>0] = 2;
               $3219 = +HEAPF64[$84>>3];
               $3220 = $3219 * 0.70710678118654802;
               $3221 = +HEAPF64[$83>>3];
               $3222 = $3221 * 0.70710678118654802;
               $3223 = +HEAPF64[$43>>3];
               $3224 = $3220 * $3223;
               $3225 = +HEAPF64[$45>>3];
               $3226 = $3222 * $3225;
               $3227 = $3226 - $3224;
               $3228 = $3220 * $3225;
               $3229 = $3228 + $3227;
               $3230 = $3223 * $3222;
               $3231 = $3230 + $3229;
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x931,$3231,-1);
               $3232 = HEAP8[$152>>0]|0;
               $3233 = ($3232<<24>>24)==(0);
               if ($3233) {
                break L1630;
               }
               $3234 = +HEAPF64[$x931>>3];
               $3235 = +HEAPF64[$76>>3];
               $3236 = $3235 * 0.044999999999999998;
               $3237 = $3234 * $3236;
               $3238 = $3234 * 0.55000000000000004;
               $3239 = $3238 + $3237;
               $3240 = +HEAPF64[$75>>3];
               $3241 = $3240 * 0.29999999999999999;
               $3242 = $3234 * $3241;
               $3243 = $3239 + $3242;
               HEAPF64[$sj5array89>>3] = $3243;
               $3244 = !($3243 >= -1.0000020000000001);
               $3245 = !($3243 <= 1.0000020000000001);
               $or$cond134 = $3244 | $3245;
               do {
                if ($or$cond134) {
                 $3255 = (__Z13__DOUBLE_BITSd($3243)|0);
                 $3256 = tempRet0;
                 $3257 = $3256 & 2147483647;
                 $3258 = ($3257>>>0)>(2146435072);
                 $3259 = ($3255>>>0)>(0);
                 $3260 = ($3257|0)==(2146435072);
                 $3261 = $3260 & $3259;
                 $3262 = $3258 | $3261;
                 if (!($3262)) {
                  $ij591$01431 = 0;
                  break;
                 }
                 HEAP8[$j5valid90>>0] = 1;
                 HEAPF64[$cj5array88>>3] = 1.0;
                 HEAPF64[$sj5array89>>3] = 0.0;
                 HEAPF64[$j5array87>>3] = 0.0;
                 $ij591$01431 = 0;
                } else {
                 HEAP8[$153>>0] = 1;
                 HEAP8[$j5valid90>>0] = 1;
                 $3246 = +HEAPF64[$sj5array89>>3];
                 $3247 = (+__Z6IKasind($3246));
                 HEAPF64[$j5array87>>3] = $3247;
                 $3248 = (+__Z5IKcosd($3247));
                 HEAPF64[$cj5array88>>3] = $3248;
                 $3249 = +HEAPF64[$sj5array89>>3];
                 HEAPF64[$154>>3] = $3249;
                 $3250 = +HEAPF64[$j5array87>>3];
                 $3251 = $3250 > 0.0;
                 $$v82 = $3251 ? 3.14159265358979 : -3.14159265358979;
                 $3252 = $$v82 - $3250;
                 HEAPF64[$155>>3] = $3252;
                 $3253 = +HEAPF64[$cj5array88>>3];
                 $3254 = -$3253;
                 HEAPF64[$156>>3] = $3254;
                 $ij591$01431 = 0;
                }
               } while(0);
               while(1) {
                $3263 = (($j5valid90) + ($ij591$01431)|0);
                $3264 = HEAP8[$3263>>0]|0;
                $3265 = ($3264<<24>>24)==(0);
                do {
                 if (!($3265)) {
                  $3266 = $ij591$01431&255;
                  HEAP8[$4>>0] = $3266;
                  HEAP8[$5>>0] = -1;
                  $iij592$01427 = (($ij591$01431) + 1)|0;
                  $3267 = ($iij592$01427|0)<(2);
                  do {
                   if ($3267) {
                    $3268 = (($sj5array89) + ($ij591$01431<<3)|0);
                    $3269 = (($j5valid90) + ($iij592$01427)|0);
                    $3270 = HEAP8[$3269>>0]|0;
                    $3271 = ($3270<<24>>24)==(0);
                    if ($3271) {
                     break;
                    }
                    $3272 = (($cj5array88) + ($ij591$01431<<3)|0);
                    $3273 = +HEAPF64[$3272>>3];
                    $3274 = (($cj5array88) + ($iij592$01427<<3)|0);
                    $3275 = +HEAPF64[$3274>>3];
                    $3276 = $3273 - $3275;
                    $3277 = (+__Z5IKabsd($3276));
                    $3278 = $3277 < 9.9999999999999995E-7;
                    if (!($3278)) {
                     break;
                    }
                    $3279 = +HEAPF64[$3268>>3];
                    $3280 = (($sj5array89) + ($iij592$01427<<3)|0);
                    $3281 = +HEAPF64[$3280>>3];
                    $3282 = $3279 - $3281;
                    $3283 = (+__Z5IKabsd($3282));
                    $3284 = $3283 < 9.9999999999999995E-7;
                    if (!($3284)) {
                     break;
                    }
                    HEAP8[$3269>>0] = 0;
                    $3285 = $iij592$01427&255;
                    HEAP8[$5>>0] = $3285;
                   }
                  } while(0);
                  $3286 = (($j5array87) + ($ij591$01431<<3)|0);
                  $3287 = +HEAPF64[$3286>>3];
                  HEAPF64[$3>>3] = $3287;
                  $3288 = (($cj5array88) + ($ij591$01431<<3)|0);
                  $3289 = +HEAPF64[$3288>>3];
                  HEAPF64[$157>>3] = $3289;
                  $3290 = (($sj5array89) + ($ij591$01431<<3)|0);
                  $3291 = +HEAPF64[$3290>>3];
                  HEAPF64[$158>>3] = $3291;
                  $3292 = +HEAPF64[$3>>3];
                  $3293 = (+__Z5IKcosd($3292));
                  $3294 = (+__Z5IKsind($3292));
                  $3295 = +HEAPF64[$43>>3];
                  $3296 = $3295 * $3295;
                  $3297 = +HEAPF64[$45>>3];
                  $3298 = $3297 * $3297;
                  $3299 = +HEAPF64[$83>>3];
                  $3300 = $3297 * $3299;
                  $3301 = +HEAPF64[$84>>3];
                  $3302 = $3295 * $3301;
                  $3303 = $3297 * $3301;
                  $3304 = $3295 * $3299;
                  $3305 = $3294 * 0.77781745930520196;
                  $3306 = $3293 * 0.70710678118654802;
                  $3307 = $3293 * 0.58823529411764697;
                  $3308 = +HEAPF64[$75>>3];
                  $3309 = $3308 * -0.108264705882353;
                  $3310 = $3293 * $3309;
                  $3311 = $3293 * 0.316735294117647;
                  $3312 = $3310 - $3311;
                  $3313 = $3307 * $3298;
                  $3314 = $3312 - $3313;
                  $3315 = $3307 * $3296;
                  $3316 = $3314 - $3315;
                  $3317 = +HEAPF64[$76>>3];
                  $3318 = $3317 * 0.044999999999999998;
                  $3319 = $3294 * $3318;
                  $3320 = $3294 * 0.55000000000000004;
                  $3321 = $3320 + $3319;
                  $3322 = $3302 * 0.70710678118654802;
                  $3323 = $3322 + $3321;
                  $3324 = $3308 * 0.29999999999999999;
                  $3325 = $3294 * $3324;
                  $3326 = $3325 + $3323;
                  $3327 = $3304 * 0.70710678118654802;
                  $3328 = $3326 - $3327;
                  $3329 = $3303 * 0.70710678118654802;
                  $3330 = $3328 - $3329;
                  $3331 = $3300 * 0.70710678118654802;
                  $3332 = $3330 - $3331;
                  $3333 = $3300 * 0.063639610306789302;
                  $3334 = -0.21249999999999999 - $3333;
                  $3335 = $3305 * $3300;
                  $3336 = $3335 + $3334;
                  $3337 = $3305 * $3303;
                  $3338 = $3337 + $3336;
                  $3339 = $3305 * $3304;
                  $3340 = $3339 + $3338;
                  $3341 = $3340 - $3298;
                  $3342 = $3341 - $3296;
                  $3343 = $3302 * 0.063639610306789302;
                  $3344 = $3343 + $3342;
                  $3345 = $3304 * 0.063639610306789302;
                  $3346 = $3345 + $3344;
                  $3347 = $3303 * 0.063639610306789302;
                  $3348 = $3347 + $3346;
                  $3349 = $3305 * $3302;
                  $3350 = $3348 - $3349;
                  $3351 = (+__Z5IKabsd($3316));
                  $3352 = $3351 > 5.0000000000000004E-6;
                  if ($3352) {
                   break;
                  }
                  $3353 = $3306 * $3302;
                  $3354 = $3306 * $3304;
                  $3355 = $3353 - $3354;
                  $3356 = $3306 * $3303;
                  $3357 = $3355 - $3356;
                  $3358 = $3306 * $3300;
                  $3359 = $3357 - $3358;
                  $3360 = (+__Z5IKabsd($3359));
                  $3361 = $3360 > 5.0000000000000004E-6;
                  if ($3361) {
                   break;
                  }
                  $3362 = (+__Z5IKabsd($3332));
                  $3363 = $3362 > 5.0000000000000004E-6;
                  if ($3363) {
                   break;
                  }
                  $3364 = (+__Z5IKabsd($3350));
                  $3365 = $3364 > 5.0000000000000004E-6;
                  if ($3365) {
                   break;
                  }
                  __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                 }
                } while(0);
                $3366 = (($ij591$01431) + 1)|0;
                $exitcond1776 = ($3366|0)==(2);
                if ($exitcond1776) {
                 break L1630;
                } else {
                 $ij591$01431 = $3366;
                }
               }
              }
              $2477 = -$2465;
              HEAPF64[$47>>3] = 0.0;
              HEAPF64[$22>>3] = -1.5707963267949001;
              HEAPF64[$24>>3] = -1.0;
              HEAPF64[$23>>3] = 0.0;
              $2478 = +HEAPF64[$43>>3];
              $2479 = $2478 * $2478;
              $2480 = +HEAPF64[$45>>3];
              $2481 = $2480 * $2480;
              $2482 = $2479 + $2481;
              HEAPF64[$60>>3] = $2482;
              $2483 = +HEAPF64[$43>>3];
              $2484 = +HEAPF64[$26>>3];
              $2485 = $2483 * $2484;
              $2486 = +HEAPF64[$45>>3];
              $2487 = +HEAPF64[$32>>3];
              $2488 = $2486 * $2487;
              $2489 = $2485 + $2488;
              HEAPF64[$61>>3] = $2489;
              $2490 = +HEAPF64[$43>>3];
              $2491 = +HEAPF64[$28>>3];
              $2492 = $2490 * $2491;
              $2493 = +HEAPF64[$45>>3];
              $2494 = +HEAPF64[$34>>3];
              $2495 = $2493 * $2494;
              $2496 = $2492 + $2495;
              HEAPF64[$62>>3] = $2496;
              $2497 = +HEAPF64[$43>>3];
              $2498 = +HEAPF64[$30>>3];
              $2499 = $2497 * $2498;
              $2500 = +HEAPF64[$45>>3];
              $2501 = +HEAPF64[$36>>3];
              $2502 = $2500 * $2501;
              $2503 = $2499 + $2502;
              HEAPF64[$63>>3] = $2503;
              $2504 = +HEAPF64[$38>>3];
              $2505 = $2504 * $2477;
              HEAPF64[$64>>3] = $2505;
              $2506 = +HEAPF64[$43>>3];
              $2507 = +HEAPF64[$38>>3];
              $2508 = $2506 * $2507;
              HEAPF64[$65>>3] = $2508;
              $2509 = +HEAPF64[$40>>3];
              $2510 = $2509 * $2477;
              HEAPF64[$67>>3] = $2510;
              $2511 = +HEAPF64[$43>>3];
              $2512 = +HEAPF64[$40>>3];
              $2513 = $2511 * $2512;
              HEAPF64[$68>>3] = $2513;
              $2514 = +HEAPF64[$42>>3];
              $2515 = $2514 * $2477;
              HEAPF64[$70>>3] = $2515;
              $2516 = +HEAPF64[$43>>3];
              $2517 = +HEAPF64[$42>>3];
              $2518 = $2516 * $2517;
              HEAPF64[$71>>3] = $2518;
              $2519 = +HEAPF64[$76>>3];
              $2520 = $2519 + 12.2222222222222;
              $2521 = +HEAPF64[$75>>3];
              $2522 = $2521 * 6.6666666666666696;
              $2523 = $2520 + $2522;
              $2524 = (+__Z5IKabsd($2523));
              $2525 = $2524 < 9.9999999999999995E-7;
              if (!($2525)) {
               HEAP16[$j5valid83>>1] = 0;
               HEAP8[$6>>0] = 2;
               $3068 = +HEAPF64[$76>>3];
               $3069 = $3068 * 0.044999999999999998;
               $3070 = $3069 + 0.55000000000000004;
               $3071 = +HEAPF64[$75>>3];
               $3072 = $3071 * 0.29999999999999999;
               $3073 = $3070 + $3072;
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x913,$3073,-1);
               $3074 = HEAP8[$145>>0]|0;
               $3075 = ($3074<<24>>24)==(0);
               if ($3075) {
                break L1630;
               }
               $3076 = +HEAPF64[$x913>>3];
               $3077 = +HEAPF64[$84>>3];
               $3078 = $3077 * 0.70710678118654802;
               $3079 = $3076 * $3078;
               $3080 = +HEAPF64[$83>>3];
               $3081 = $3080 * 0.70710678118654802;
               $3082 = $3076 * $3081;
               $3083 = +HEAPF64[$43>>3];
               $3084 = $3083 * $3079;
               $3085 = $3083 * $3082;
               $3086 = $3085 - $3084;
               $3087 = +HEAPF64[$45>>3];
               $3088 = $3087 * $3082;
               $3089 = $3088 + $3086;
               $3090 = $3079 * $3087;
               $3091 = $3090 + $3089;
               HEAPF64[$sj5array82>>3] = $3091;
               $3092 = !($3091 >= -1.0000020000000001);
               $3093 = !($3091 <= 1.0000020000000001);
               $or$cond133 = $3092 | $3093;
               do {
                if ($or$cond133) {
                 $3103 = (__Z13__DOUBLE_BITSd($3091)|0);
                 $3104 = tempRet0;
                 $3105 = $3104 & 2147483647;
                 $3106 = ($3105>>>0)>(2146435072);
                 $3107 = ($3103>>>0)>(0);
                 $3108 = ($3105|0)==(2146435072);
                 $3109 = $3108 & $3107;
                 $3110 = $3106 | $3109;
                 if (!($3110)) {
                  $ij584$01436 = 0;
                  break;
                 }
                 HEAP8[$j5valid83>>0] = 1;
                 HEAPF64[$cj5array81>>3] = 1.0;
                 HEAPF64[$sj5array82>>3] = 0.0;
                 HEAPF64[$j5array80>>3] = 0.0;
                 $ij584$01436 = 0;
                } else {
                 HEAP8[$146>>0] = 1;
                 HEAP8[$j5valid83>>0] = 1;
                 $3094 = +HEAPF64[$sj5array82>>3];
                 $3095 = (+__Z6IKasind($3094));
                 HEAPF64[$j5array80>>3] = $3095;
                 $3096 = (+__Z5IKcosd($3095));
                 HEAPF64[$cj5array81>>3] = $3096;
                 $3097 = +HEAPF64[$sj5array82>>3];
                 HEAPF64[$147>>3] = $3097;
                 $3098 = +HEAPF64[$j5array80>>3];
                 $3099 = $3098 > 0.0;
                 $$v84 = $3099 ? 3.14159265358979 : -3.14159265358979;
                 $3100 = $$v84 - $3098;
                 HEAPF64[$148>>3] = $3100;
                 $3101 = +HEAPF64[$cj5array81>>3];
                 $3102 = -$3101;
                 HEAPF64[$149>>3] = $3102;
                 $ij584$01436 = 0;
                }
               } while(0);
               while(1) {
                $3111 = (($j5valid83) + ($ij584$01436)|0);
                $3112 = HEAP8[$3111>>0]|0;
                $3113 = ($3112<<24>>24)==(0);
                do {
                 if (!($3113)) {
                  $3114 = $ij584$01436&255;
                  HEAP8[$4>>0] = $3114;
                  HEAP8[$5>>0] = -1;
                  $iij585$01432 = (($ij584$01436) + 1)|0;
                  $3115 = ($iij585$01432|0)<(2);
                  do {
                   if ($3115) {
                    $3116 = (($sj5array82) + ($ij584$01436<<3)|0);
                    $3117 = (($j5valid83) + ($iij585$01432)|0);
                    $3118 = HEAP8[$3117>>0]|0;
                    $3119 = ($3118<<24>>24)==(0);
                    if ($3119) {
                     break;
                    }
                    $3120 = (($cj5array81) + ($ij584$01436<<3)|0);
                    $3121 = +HEAPF64[$3120>>3];
                    $3122 = (($cj5array81) + ($iij585$01432<<3)|0);
                    $3123 = +HEAPF64[$3122>>3];
                    $3124 = $3121 - $3123;
                    $3125 = (+__Z5IKabsd($3124));
                    $3126 = $3125 < 9.9999999999999995E-7;
                    if (!($3126)) {
                     break;
                    }
                    $3127 = +HEAPF64[$3116>>3];
                    $3128 = (($sj5array82) + ($iij585$01432<<3)|0);
                    $3129 = +HEAPF64[$3128>>3];
                    $3130 = $3127 - $3129;
                    $3131 = (+__Z5IKabsd($3130));
                    $3132 = $3131 < 9.9999999999999995E-7;
                    if (!($3132)) {
                     break;
                    }
                    HEAP8[$3117>>0] = 0;
                    $3133 = $iij585$01432&255;
                    HEAP8[$5>>0] = $3133;
                   }
                  } while(0);
                  $3134 = (($j5array80) + ($ij584$01436<<3)|0);
                  $3135 = +HEAPF64[$3134>>3];
                  HEAPF64[$3>>3] = $3135;
                  $3136 = (($cj5array81) + ($ij584$01436<<3)|0);
                  $3137 = +HEAPF64[$3136>>3];
                  HEAPF64[$150>>3] = $3137;
                  $3138 = (($sj5array82) + ($ij584$01436<<3)|0);
                  $3139 = +HEAPF64[$3138>>3];
                  HEAPF64[$151>>3] = $3139;
                  $3140 = +HEAPF64[$3>>3];
                  $3141 = (+__Z5IKcosd($3140));
                  $3142 = (+__Z5IKsind($3140));
                  $3143 = +HEAPF64[$43>>3];
                  $3144 = $3143 * $3143;
                  $3145 = +HEAPF64[$45>>3];
                  $3146 = $3145 * $3145;
                  $3147 = +HEAPF64[$84>>3];
                  $3148 = $3147 * 0.70710678118654802;
                  $3149 = +HEAPF64[$83>>3];
                  $3150 = $3145 * $3149;
                  $3151 = $3147 * 0.77781745930520196;
                  $3152 = $3147 * 0.063639610306789302;
                  $3153 = $3149 * 0.70710678118654802;
                  $3154 = $3141 * $3143;
                  $3155 = $3142 * $3145;
                  $3156 = $3142 * $3143;
                  $3157 = $3141 * 0.58823529411764697;
                  $3158 = $3142 * $3150;
                  $3159 = $3141 * 0.316735294117647;
                  $3160 = +HEAPF64[$75>>3];
                  $3161 = $3160 * -0.108264705882353;
                  $3162 = $3141 * $3161;
                  $3163 = $3162 - $3159;
                  $3164 = $3157 * $3144;
                  $3165 = $3163 - $3164;
                  $3166 = $3157 * $3146;
                  $3167 = $3165 - $3166;
                  $3168 = +HEAPF64[$76>>3];
                  $3169 = $3168 * 0.044999999999999998;
                  $3170 = -0.55000000000000004 - $3169;
                  $3171 = $3155 * $3148;
                  $3172 = $3171 + $3170;
                  $3173 = $3160 * 0.29999999999999999;
                  $3174 = $3172 - $3173;
                  $3175 = $3158 * 0.70710678118654802;
                  $3176 = $3175 + $3174;
                  $3177 = $3156 * $3148;
                  $3178 = $3176 - $3177;
                  $3179 = $3156 * $3153;
                  $3180 = $3179 + $3178;
                  $3181 = $3155 * $3151;
                  $3182 = $3181 + -0.21249999999999999;
                  $3183 = $3150 * 0.063639610306789302;
                  $3184 = $3182 - $3183;
                  $3185 = $3156 * $3151;
                  $3186 = $3184 - $3185;
                  $3187 = $3145 * $3152;
                  $3188 = $3187 + $3186;
                  $3189 = $3149 * 0.063639610306789302;
                  $3190 = $3143 * $3189;
                  $3191 = $3190 + $3188;
                  $3192 = $3158 * 0.77781745930520196;
                  $3193 = $3192 + $3191;
                  $3194 = $3193 - $3146;
                  $3195 = $3194 - $3144;
                  $3196 = $3149 * 0.77781745930520196;
                  $3197 = $3156 * $3196;
                  $3198 = $3197 + $3195;
                  $3199 = $3143 * $3152;
                  $3200 = $3199 + $3198;
                  $3201 = (+__Z5IKabsd($3167));
                  $3202 = $3201 > 5.0000000000000004E-6;
                  if ($3202) {
                   break;
                  }
                  $3203 = $3154 * $3148;
                  $3204 = $3141 * -0.70710678118654802;
                  $3205 = $3204 * $3150;
                  $3206 = $3203 + $3205;
                  $3207 = $3141 * $3145;
                  $3208 = $3207 * $3148;
                  $3209 = $3206 - $3208;
                  $3210 = $3154 * $3153;
                  $3211 = $3209 - $3210;
                  $3212 = (+__Z5IKabsd($3211));
                  $3213 = $3212 > 5.0000000000000004E-6;
                  if ($3213) {
                   break;
                  }
                  $3214 = (+__Z5IKabsd($3180));
                  $3215 = $3214 > 5.0000000000000004E-6;
                  if ($3215) {
                   break;
                  }
                  $3216 = (+__Z5IKabsd($3200));
                  $3217 = $3216 > 5.0000000000000004E-6;
                  if ($3217) {
                   break;
                  }
                  __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                 }
                } while(0);
                $3218 = (($ij584$01436) + 1)|0;
                $exitcond1777 = ($3218|0)==(2);
                if ($exitcond1777) {
                 break L1630;
                } else {
                 $ij584$01436 = $3218;
                }
               }
              }
              $2526 = +HEAPF64[$45>>3];
              $2527 = +HEAPF64[$43>>3];
              $2528 = $2526 + $2527;
              $2529 = $2526 - $2527;
              $2530 = $2528 * $2528;
              $2531 = $2529 * $2529;
              $2532 = $2530 + $2531;
              $2533 = (+__Z5IKabsd($2532));
              $2534 = $2533 == 0.0;
              do {
               if (!($2534)) {
                $2535 = (+Math_pow((+$2532),-0.5));
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x842,$2528,$2529,1.9999999999999999E-6);
                $2536 = HEAP8[$136>>0]|0;
                $2537 = ($2536<<24>>24)==(0);
                if ($2537) {
                 break;
                }
                $2538 = $2528 * $2535;
                $2539 = -$2538;
                $2540 = $2529 * $2535;
                $2541 = +HEAPF64[$this>>3];
                $2542 = +HEAPF64[$76>>3];
                $2543 = +HEAPF64[$75>>3];
                $2544 = $2540 * 0.70710678118654802;
                $2545 = $2538 * -0.70710678118654802;
                $2546 = +HEAPF64[$45>>3];
                $2547 = +HEAPF64[$43>>3];
                $2548 = $2546 + $2547;
                $2549 = $2546 - $2547;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x856,$2548,$2549,1.9999999999999999E-6);
                $2550 = HEAP8[$137>>0]|0;
                $2551 = ($2550<<24>>24)==(0);
                if ($2551) {
                 break;
                }
                $2552 = $2545 * $2547;
                $2553 = $2545 * $2546;
                $2554 = $2544 * $2547;
                $2555 = $2544 * $2546;
                $2556 = $2543 * 0.044999999999999998;
                $2557 = $2542 * 0.29999999999999999;
                $2558 = +HEAPF64[$x856>>3];
                $2559 = $2557 + $2555;
                $2560 = $2553 + $2552;
                $2561 = $2556 + $2560;
                $2562 = $2554 + $2561;
                $2563 = +HEAPF64[$this>>3];
                $2564 = $2558 * $2563;
                $2565 = $2541 * $2563;
                $2566 = $2564 + $2565;
                $2567 = $2558 * $2558;
                $2568 = $2567 + $2566;
                $2569 = $2541 * $2558;
                $2570 = $2569 + $2568;
                $2571 = $2570 < -1.0000000000000001E-5;
                if ($2571) {
                 break;
                }
                $2572 = (+__Z6IKsqrtd($2570));
                $2573 = $2572 + 3.14159265358979;
                $2574 = (+__Z6IKfmoddd($2573,6.2831853071795898));
                $2575 = $2574 + -3.14159265358979;
                $2576 = +HEAPF64[$43>>3];
                $2577 = +HEAPF64[$45>>3];
                $2578 = -0.044999999999999998 - $2559;
                $2579 = $2578 + $2562;
                $2580 = 0.044999999999999998 - $2562;
                $2581 = $2559 + $2580;
                $2582 = (+__Z5IKabsd($2575));
                $2583 = $2582 < 9.9999999999999995E-7;
                if (!($2583)) {
                 break;
                }
                $2584 = +HEAPF64[$75>>3];
                $2585 = +HEAPF64[$76>>3];
                $2586 = $2576 * $2576;
                $2587 = 0.39655000000000001 - $2586;
                $2588 = $2585 * 0.076499999999999999;
                $2589 = $2587 + $2588;
                $2590 = $2577 * $2577;
                $2591 = $2589 - $2590;
                $2592 = $2584 * 0.32595000000000002;
                $2593 = $2592 + $2591;
                $2594 = (+__Z5IKabsd($2593));
                $2595 = $2594 < 9.9999999999999995E-7;
                if (!($2595)) {
                 break;
                }
                $2596 = (+__Z5IKabsd($2579));
                $2597 = $2596 < 9.9999999999999995E-7;
                if (!($2597)) {
                 break;
                }
                $2598 = (+__Z5IKabsd($2581));
                $2599 = $2598 < 9.9999999999999995E-7;
                if (!($2599)) {
                 break;
                }
                HEAP16[$j5valid51>>1] = 0;
                HEAP8[$6>>0] = 2;
                $2600 = +HEAPF64[$43>>3];
                $2601 = $2600 * 0.70710678118654802;
                $2602 = +HEAPF64[$45>>3];
                $2603 = $2602 * 0.70710678118654802;
                $2604 = $2540 * $2603;
                $2605 = $2540 * $2601;
                $2606 = $2605 + $2604;
                $2607 = $2603 * $2539;
                $2608 = $2607 + $2606;
                $2609 = $2538 * $2601;
                $2610 = $2609 + $2608;
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x860,$2610,-1);
                $2611 = HEAP8[$138>>0]|0;
                $2612 = ($2611<<24>>24)==(0);
                if ($2612) {
                 break L1630;
                }
                $2613 = +HEAPF64[$x860>>3];
                $2614 = $2613 * 0.55000000000000004;
                $2615 = +HEAPF64[$75>>3];
                $2616 = $2615 * 0.29999999999999999;
                $2617 = $2613 * $2616;
                $2618 = $2614 + $2617;
                $2619 = +HEAPF64[$76>>3];
                $2620 = $2619 * 0.044999999999999998;
                $2621 = $2613 * $2620;
                $2622 = $2618 + $2621;
                HEAPF64[$sj5array50>>3] = $2622;
                $2623 = !($2622 >= -1.0000020000000001);
                $2624 = !($2622 <= 1.0000020000000001);
                $or$cond121 = $2623 | $2624;
                do {
                 if ($or$cond121) {
                  $2634 = (__Z13__DOUBLE_BITSd($2622)|0);
                  $2635 = tempRet0;
                  $2636 = $2635 & 2147483647;
                  $2637 = ($2636>>>0)>(2146435072);
                  $2638 = ($2634>>>0)>(0);
                  $2639 = ($2636|0)==(2146435072);
                  $2640 = $2639 & $2638;
                  $2641 = $2637 | $2640;
                  if (!($2641)) {
                   break;
                  }
                  HEAP8[$j5valid51>>0] = 1;
                  HEAPF64[$cj5array49>>3] = 1.0;
                  HEAPF64[$sj5array50>>3] = 0.0;
                  HEAPF64[$j5array48>>3] = 0.0;
                 } else {
                  HEAP8[$139>>0] = 1;
                  HEAP8[$j5valid51>>0] = 1;
                  $2625 = +HEAPF64[$sj5array50>>3];
                  $2626 = (+__Z6IKasind($2625));
                  HEAPF64[$j5array48>>3] = $2626;
                  $2627 = (+__Z5IKcosd($2626));
                  HEAPF64[$cj5array49>>3] = $2627;
                  $2628 = +HEAPF64[$sj5array50>>3];
                  HEAPF64[$140>>3] = $2628;
                  $2629 = +HEAPF64[$j5array48>>3];
                  $2630 = $2629 > 0.0;
                  $$v89 = $2630 ? 3.14159265358979 : -3.14159265358979;
                  $2631 = $$v89 - $2629;
                  HEAPF64[$141>>3] = $2631;
                  $2632 = +HEAPF64[$cj5array49>>3];
                  $2633 = -$2632;
                  HEAPF64[$142>>3] = $2633;
                 }
                } while(0);
                $2642 = -$2540;
                $ij552$01441 = 0;
                while(1) {
                 $2643 = (($j5valid51) + ($ij552$01441)|0);
                 $2644 = HEAP8[$2643>>0]|0;
                 $2645 = ($2644<<24>>24)==(0);
                 do {
                  if (!($2645)) {
                   $2646 = $ij552$01441&255;
                   HEAP8[$4>>0] = $2646;
                   HEAP8[$5>>0] = -1;
                   $iij553$01437 = (($ij552$01441) + 1)|0;
                   $2647 = ($iij553$01437|0)<(2);
                   do {
                    if ($2647) {
                     $2648 = (($sj5array50) + ($ij552$01441<<3)|0);
                     $2649 = (($j5valid51) + ($iij553$01437)|0);
                     $2650 = HEAP8[$2649>>0]|0;
                     $2651 = ($2650<<24>>24)==(0);
                     if ($2651) {
                      break;
                     }
                     $2652 = (($cj5array49) + ($ij552$01441<<3)|0);
                     $2653 = +HEAPF64[$2652>>3];
                     $2654 = (($cj5array49) + ($iij553$01437<<3)|0);
                     $2655 = +HEAPF64[$2654>>3];
                     $2656 = $2653 - $2655;
                     $2657 = (+__Z5IKabsd($2656));
                     $2658 = $2657 < 9.9999999999999995E-7;
                     if (!($2658)) {
                      break;
                     }
                     $2659 = +HEAPF64[$2648>>3];
                     $2660 = (($sj5array50) + ($iij553$01437<<3)|0);
                     $2661 = +HEAPF64[$2660>>3];
                     $2662 = $2659 - $2661;
                     $2663 = (+__Z5IKabsd($2662));
                     $2664 = $2663 < 9.9999999999999995E-7;
                     if (!($2664)) {
                      break;
                     }
                     HEAP8[$2649>>0] = 0;
                     $2665 = $iij553$01437&255;
                     HEAP8[$5>>0] = $2665;
                    }
                   } while(0);
                   $2666 = (($j5array48) + ($ij552$01441<<3)|0);
                   $2667 = +HEAPF64[$2666>>3];
                   HEAPF64[$3>>3] = $2667;
                   $2668 = (($cj5array49) + ($ij552$01441<<3)|0);
                   $2669 = +HEAPF64[$2668>>3];
                   HEAPF64[$143>>3] = $2669;
                   $2670 = (($sj5array50) + ($ij552$01441<<3)|0);
                   $2671 = +HEAPF64[$2670>>3];
                   HEAPF64[$144>>3] = $2671;
                   $2672 = +HEAPF64[$3>>3];
                   $2673 = (+__Z5IKcosd($2672));
                   $2674 = (+__Z5IKsind($2672));
                   $2675 = +HEAPF64[$43>>3];
                   $2676 = $2675 * $2675;
                   $2677 = +HEAPF64[$45>>3];
                   $2678 = $2677 * $2677;
                   $2679 = $2675 * $2539;
                   $2680 = $2677 * 0.063639610306789302;
                   $2681 = $2540 * $2675;
                   $2682 = $2677 * 0.70710678118654802;
                   $2683 = $2674 * 0.77781745930520196;
                   $2684 = $2673 * 0.70710678118654802;
                   $2685 = $2673 * 0.58823529411764697;
                   $2686 = $2683 * $2677;
                   $2687 = $2673 * $2682;
                   $2688 = +HEAPF64[$75>>3];
                   $2689 = $2688 * -0.108264705882353;
                   $2690 = $2673 * $2689;
                   $2691 = $2673 * 0.316735294117647;
                   $2692 = $2690 - $2691;
                   $2693 = $2685 * $2678;
                   $2694 = $2692 - $2693;
                   $2695 = $2685 * $2676;
                   $2696 = $2694 - $2695;
                   $2697 = $2674 * 0.55000000000000004;
                   $2698 = $2682 * $2642;
                   $2699 = $2697 + $2698;
                   $2700 = $2688 * 0.29999999999999999;
                   $2701 = $2674 * $2700;
                   $2702 = $2699 + $2701;
                   $2703 = $2681 * 0.70710678118654802;
                   $2704 = $2702 - $2703;
                   $2705 = $2538 * $2682;
                   $2706 = $2705 + $2704;
                   $2707 = +HEAPF64[$76>>3];
                   $2708 = $2707 * 0.044999999999999998;
                   $2709 = $2674 * $2708;
                   $2710 = $2709 + $2706;
                   $2711 = $2679 * 0.70710678118654802;
                   $2712 = $2711 + $2710;
                   $2713 = $2683 * $2679;
                   $2714 = -0.21249999999999999 - $2713;
                   $2715 = $2683 * $2681;
                   $2716 = $2715 + $2714;
                   $2717 = $2716 - $2676;
                   $2718 = $2717 - $2678;
                   $2719 = $2680 * $2642;
                   $2720 = $2719 + $2718;
                   $2721 = $2540 * $2686;
                   $2722 = $2721 + $2720;
                   $2723 = $2686 * $2539;
                   $2724 = $2723 + $2722;
                   $2725 = $2680 * $2539;
                   $2726 = $2725 + $2724;
                   $2727 = $2679 * 0.063639610306789302;
                   $2728 = $2727 + $2726;
                   $2729 = $2681 * 0.063639610306789302;
                   $2730 = $2729 + $2728;
                   $2731 = (+__Z5IKabsd($2696));
                   $2732 = $2731 > 5.0000000000000004E-6;
                   if ($2732) {
                    break;
                   }
                   $2733 = $2687 * $2642;
                   $2734 = $2538 * $2687;
                   $2735 = $2733 + $2734;
                   $2736 = $2684 * $2681;
                   $2737 = $2735 - $2736;
                   $2738 = $2684 * $2679;
                   $2739 = $2738 + $2737;
                   $2740 = (+__Z5IKabsd($2739));
                   $2741 = $2740 > 5.0000000000000004E-6;
                   if ($2741) {
                    break;
                   }
                   $2742 = (+__Z5IKabsd($2712));
                   $2743 = $2742 > 5.0000000000000004E-6;
                   if ($2743) {
                    break;
                   }
                   $2744 = (+__Z5IKabsd($2730));
                   $2745 = $2744 > 5.0000000000000004E-6;
                   if ($2745) {
                    break;
                   }
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                 } while(0);
                 $2746 = (($ij552$01441) + 1)|0;
                 $exitcond1778 = ($2746|0)==(2);
                 if ($exitcond1778) {
                  break L1630;
                 } else {
                  $ij552$01441 = $2746;
                 }
                }
               }
              } while(0);
              $2747 = +HEAPF64[$45>>3];
              $2748 = +HEAPF64[$43>>3];
              $2749 = $2747 + $2748;
              $2750 = $2747 - $2748;
              $2751 = $2749 * $2749;
              $2752 = $2750 * $2750;
              $2753 = $2751 + $2752;
              $2754 = (+__Z5IKabsd($2753));
              $2755 = $2754 == 0.0;
              do {
               if (!($2755)) {
                $2756 = (+Math_pow((+$2753),-0.5));
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x878,$2749,$2750,1.9999999999999999E-6);
                $2757 = HEAP8[$127>>0]|0;
                $2758 = ($2757<<24>>24)==(0);
                if ($2758) {
                 break;
                }
                $2759 = $2749 * $2756;
                $2760 = $2750 * $2756;
                $2761 = -$2760;
                $2762 = +HEAPF64[$this>>3];
                $2763 = +HEAPF64[$76>>3];
                $2764 = +HEAPF64[$75>>3];
                $2765 = $2760 * -0.70710678118654802;
                $2766 = $2759 * 0.70710678118654802;
                $2767 = +HEAPF64[$45>>3];
                $2768 = +HEAPF64[$43>>3];
                $2769 = $2767 + $2768;
                $2770 = $2767 - $2768;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x892,$2769,$2770,1.9999999999999999E-6);
                $2771 = HEAP8[$128>>0]|0;
                $2772 = ($2771<<24>>24)==(0);
                if ($2772) {
                 break;
                }
                $2773 = $2766 * $2767;
                $2774 = $2766 * $2768;
                $2775 = $2765 * $2768;
                $2776 = $2765 * $2767;
                $2777 = $2764 * 0.044999999999999998;
                $2778 = $2763 * 0.29999999999999999;
                $2779 = +HEAPF64[$x892>>3];
                $2780 = $2778 + $2776;
                $2781 = $2773 + $2775;
                $2782 = $2774 + $2781;
                $2783 = $2777 + $2782;
                $2784 = $2762 * $2779;
                $2785 = $2784 + 9.8696044010893597;
                $2786 = +HEAPF64[$this>>3];
                $2787 = $2762 * $2786;
                $2788 = $2785 + $2787;
                $2789 = $2762 * 3.14159265358979;
                $2790 = $2788 - $2789;
                $2791 = $2786 * 3.14159265358979;
                $2792 = $2790 - $2791;
                $2793 = $2779 * $2786;
                $2794 = $2793 + $2792;
                $2795 = $2779 * -3.14159265358979;
                $2796 = $2795 + $2794;
                $2797 = $2795 + $2796;
                $2798 = $2779 * $2779;
                $2799 = $2798 + $2797;
                $2800 = $2799 < -1.0000000000000001E-5;
                if ($2800) {
                 break;
                }
                $2801 = (+__Z6IKsqrtd($2799));
                $2802 = $2801 + 3.14159265358979;
                $2803 = (+__Z6IKfmoddd($2802,6.2831853071795898));
                $2804 = $2803 + -3.14159265358979;
                $2805 = +HEAPF64[$43>>3];
                $2806 = +HEAPF64[$45>>3];
                $2807 = -0.044999999999999998 - $2780;
                $2808 = $2807 + $2783;
                $2809 = 0.044999999999999998 - $2783;
                $2810 = $2780 + $2809;
                $2811 = (+__Z5IKabsd($2804));
                $2812 = $2811 < 9.9999999999999995E-7;
                if (!($2812)) {
                 break;
                }
                $2813 = +HEAPF64[$75>>3];
                $2814 = +HEAPF64[$76>>3];
                $2815 = $2805 * $2805;
                $2816 = 0.39655000000000001 - $2815;
                $2817 = $2814 * 0.076499999999999999;
                $2818 = $2816 + $2817;
                $2819 = $2806 * $2806;
                $2820 = $2818 - $2819;
                $2821 = $2813 * 0.32595000000000002;
                $2822 = $2821 + $2820;
                $2823 = (+__Z5IKabsd($2822));
                $2824 = $2823 < 9.9999999999999995E-7;
                if (!($2824)) {
                 break;
                }
                $2825 = (+__Z5IKabsd($2808));
                $2826 = $2825 < 9.9999999999999995E-7;
                if (!($2826)) {
                 break;
                }
                $2827 = (+__Z5IKabsd($2810));
                $2828 = $2827 < 9.9999999999999995E-7;
                if (!($2828)) {
                 break;
                }
                HEAP16[$j5valid59>>1] = 0;
                HEAP8[$6>>0] = 2;
                $2829 = +HEAPF64[$45>>3];
                $2830 = $2829 * 0.70710678118654802;
                $2831 = +HEAPF64[$43>>3];
                $2832 = $2831 * 0.70710678118654802;
                $2833 = $2830 * $2761;
                $2834 = $2832 * $2761;
                $2835 = $2833 + $2834;
                $2836 = $2759 * $2832;
                $2837 = $2835 - $2836;
                $2838 = $2759 * $2830;
                $2839 = $2838 + $2837;
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x896,$2839,-1);
                $2840 = HEAP8[$129>>0]|0;
                $2841 = ($2840<<24>>24)==(0);
                if ($2841) {
                 break L1630;
                }
                $2842 = +HEAPF64[$x896>>3];
                $2843 = +HEAPF64[$75>>3];
                $2844 = $2843 * 0.29999999999999999;
                $2845 = $2842 * $2844;
                $2846 = +HEAPF64[$76>>3];
                $2847 = $2846 * 0.044999999999999998;
                $2848 = $2842 * $2847;
                $2849 = $2845 + $2848;
                $2850 = $2842 * 0.55000000000000004;
                $2851 = $2850 + $2849;
                HEAPF64[$sj5array58>>3] = $2851;
                $2852 = !($2851 >= -1.0000020000000001);
                $2853 = !($2851 <= 1.0000020000000001);
                $or$cond126 = $2852 | $2853;
                do {
                 if ($or$cond126) {
                  $2863 = (__Z13__DOUBLE_BITSd($2851)|0);
                  $2864 = tempRet0;
                  $2865 = $2864 & 2147483647;
                  $2866 = ($2865>>>0)>(2146435072);
                  $2867 = ($2863>>>0)>(0);
                  $2868 = ($2865|0)==(2146435072);
                  $2869 = $2868 & $2867;
                  $2870 = $2866 | $2869;
                  if (!($2870)) {
                   $ij560$01446 = 0;
                   break;
                  }
                  HEAP8[$j5valid59>>0] = 1;
                  HEAPF64[$cj5array57>>3] = 1.0;
                  HEAPF64[$sj5array58>>3] = 0.0;
                  HEAPF64[$j5array56>>3] = 0.0;
                  $ij560$01446 = 0;
                 } else {
                  HEAP8[$130>>0] = 1;
                  HEAP8[$j5valid59>>0] = 1;
                  $2854 = +HEAPF64[$sj5array58>>3];
                  $2855 = (+__Z6IKasind($2854));
                  HEAPF64[$j5array56>>3] = $2855;
                  $2856 = (+__Z5IKcosd($2855));
                  HEAPF64[$cj5array57>>3] = $2856;
                  $2857 = +HEAPF64[$sj5array58>>3];
                  HEAPF64[$131>>3] = $2857;
                  $2858 = +HEAPF64[$j5array56>>3];
                  $2859 = $2858 > 0.0;
                  $$v87 = $2859 ? 3.14159265358979 : -3.14159265358979;
                  $2860 = $$v87 - $2858;
                  HEAPF64[$132>>3] = $2860;
                  $2861 = +HEAPF64[$cj5array57>>3];
                  $2862 = -$2861;
                  HEAPF64[$133>>3] = $2862;
                  $ij560$01446 = 0;
                 }
                } while(0);
                while(1) {
                 $2871 = (($j5valid59) + ($ij560$01446)|0);
                 $2872 = HEAP8[$2871>>0]|0;
                 $2873 = ($2872<<24>>24)==(0);
                 do {
                  if (!($2873)) {
                   $2874 = $ij560$01446&255;
                   HEAP8[$4>>0] = $2874;
                   HEAP8[$5>>0] = -1;
                   $iij561$01442 = (($ij560$01446) + 1)|0;
                   $2875 = ($iij561$01442|0)<(2);
                   do {
                    if ($2875) {
                     $2876 = (($sj5array58) + ($ij560$01446<<3)|0);
                     $2877 = (($j5valid59) + ($iij561$01442)|0);
                     $2878 = HEAP8[$2877>>0]|0;
                     $2879 = ($2878<<24>>24)==(0);
                     if ($2879) {
                      break;
                     }
                     $2880 = (($cj5array57) + ($ij560$01446<<3)|0);
                     $2881 = +HEAPF64[$2880>>3];
                     $2882 = (($cj5array57) + ($iij561$01442<<3)|0);
                     $2883 = +HEAPF64[$2882>>3];
                     $2884 = $2881 - $2883;
                     $2885 = (+__Z5IKabsd($2884));
                     $2886 = $2885 < 9.9999999999999995E-7;
                     if (!($2886)) {
                      break;
                     }
                     $2887 = +HEAPF64[$2876>>3];
                     $2888 = (($sj5array58) + ($iij561$01442<<3)|0);
                     $2889 = +HEAPF64[$2888>>3];
                     $2890 = $2887 - $2889;
                     $2891 = (+__Z5IKabsd($2890));
                     $2892 = $2891 < 9.9999999999999995E-7;
                     if (!($2892)) {
                      break;
                     }
                     HEAP8[$2877>>0] = 0;
                     $2893 = $iij561$01442&255;
                     HEAP8[$5>>0] = $2893;
                    }
                   } while(0);
                   $2894 = (($j5array56) + ($ij560$01446<<3)|0);
                   $2895 = +HEAPF64[$2894>>3];
                   HEAPF64[$3>>3] = $2895;
                   $2896 = (($cj5array57) + ($ij560$01446<<3)|0);
                   $2897 = +HEAPF64[$2896>>3];
                   HEAPF64[$134>>3] = $2897;
                   $2898 = (($sj5array58) + ($ij560$01446<<3)|0);
                   $2899 = +HEAPF64[$2898>>3];
                   HEAPF64[$135>>3] = $2899;
                   $2900 = +HEAPF64[$3>>3];
                   $2901 = (+__Z5IKcosd($2900));
                   $2902 = (+__Z5IKsind($2900));
                   $2903 = +HEAPF64[$43>>3];
                   $2904 = $2903 * $2903;
                   $2905 = +HEAPF64[$45>>3];
                   $2906 = $2905 * $2905;
                   $2907 = $2905 * $2761;
                   $2908 = $2759 * $2903;
                   $2909 = $2903 * $2761;
                   $2910 = $2759 * $2905;
                   $2911 = $2901 * 0.70710678118654802;
                   $2912 = $2902 * 0.77781745930520196;
                   $2913 = $2901 * 0.58823529411764697;
                   $2914 = $2913 * $2906;
                   $2915 = $2901 * -0.316735294117647;
                   $2916 = $2915 - $2914;
                   $2917 = +HEAPF64[$75>>3];
                   $2918 = $2917 * -0.108264705882353;
                   $2919 = $2901 * $2918;
                   $2920 = $2916 + $2919;
                   $2921 = $2913 * $2904;
                   $2922 = $2920 - $2921;
                   $2923 = $2917 * 0.29999999999999999;
                   $2924 = $2902 * $2923;
                   $2925 = +HEAPF64[$76>>3];
                   $2926 = $2925 * 0.044999999999999998;
                   $2927 = $2902 * $2926;
                   $2928 = $2924 + $2927;
                   $2929 = $2910 * 0.70710678118654802;
                   $2930 = $2928 - $2929;
                   $2931 = $2907 * 0.70710678118654802;
                   $2932 = $2930 - $2931;
                   $2933 = $2909 * 0.70710678118654802;
                   $2934 = $2932 - $2933;
                   $2935 = $2908 * 0.70710678118654802;
                   $2936 = $2935 + $2934;
                   $2937 = $2902 * 0.55000000000000004;
                   $2938 = $2937 + $2936;
                   $2939 = $2912 * $2909;
                   $2940 = $2939 + -0.21249999999999999;
                   $2941 = $2912 * $2908;
                   $2942 = $2940 - $2941;
                   $2943 = $2912 * $2907;
                   $2944 = $2943 + $2942;
                   $2945 = $2944 - $2904;
                   $2946 = $2907 * 0.063639610306789302;
                   $2947 = $2945 - $2946;
                   $2948 = $2909 * 0.063639610306789302;
                   $2949 = $2948 + $2947;
                   $2950 = $2908 * 0.063639610306789302;
                   $2951 = $2950 + $2949;
                   $2952 = $2910 * 0.063639610306789302;
                   $2953 = $2952 + $2951;
                   $2954 = $2953 - $2906;
                   $2955 = $2912 * $2910;
                   $2956 = $2955 + $2954;
                   $2957 = (+__Z5IKabsd($2922));
                   $2958 = $2957 > 5.0000000000000004E-6;
                   if ($2958) {
                    break;
                   }
                   $2959 = $2911 * $2908;
                   $2960 = $2911 * $2909;
                   $2961 = $2959 - $2960;
                   $2962 = $2911 * $2907;
                   $2963 = $2961 - $2962;
                   $2964 = $2911 * $2910;
                   $2965 = $2963 - $2964;
                   $2966 = (+__Z5IKabsd($2965));
                   $2967 = $2966 > 5.0000000000000004E-6;
                   if ($2967) {
                    break;
                   }
                   $2968 = (+__Z5IKabsd($2938));
                   $2969 = $2968 > 5.0000000000000004E-6;
                   if ($2969) {
                    break;
                   }
                   $2970 = (+__Z5IKabsd($2956));
                   $2971 = $2970 > 5.0000000000000004E-6;
                   if ($2971) {
                    break;
                   }
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                  }
                 } while(0);
                 $2972 = (($ij560$01446) + 1)|0;
                 $exitcond1779 = ($2972|0)==(2);
                 if ($exitcond1779) {
                  break L1630;
                 } else {
                  $ij560$01446 = $2972;
                 }
                }
               }
              } while(0);
              $2973 = +HEAPF64[$76>>3];
              $2974 = $2973 * 0.29999999999999999;
              $2975 = +HEAPF64[$75>>3];
              $2976 = $2975 * 0.044999999999999998;
              $2977 = +HEAPF64[$43>>3];
              $2978 = (+__Z5IKabsd($2977));
              $2979 = +HEAPF64[$45>>3];
              $2980 = (+__Z5IKabsd($2979));
              $2981 = $2978 + $2980;
              $2982 = -0.044999999999999998 - $2974;
              $2983 = $2982 + $2976;
              $2984 = $2973 * 0.044999999999999998;
              $2985 = -0.55000000000000004 - $2984;
              $2986 = $2975 * 0.29999999999999999;
              $2987 = $2985 - $2986;
              $2988 = 0.044999999999999998 - $2976;
              $2989 = $2974 + $2988;
              $2990 = (+__Z5IKabsd($2981));
              $2991 = $2990 < 9.9999999999999995E-7;
              if (!($2991)) {
               break L1630;
              }
              $2992 = $2973 * 0.076499999999999999;
              $2993 = $2992 + 0.39655000000000001;
              $2994 = $2975 * 0.32595000000000002;
              $2995 = $2993 + $2994;
              $2996 = (+__Z5IKabsd($2995));
              $2997 = $2996 < 9.9999999999999995E-7;
              if (!($2997)) {
               break L1630;
              }
              $2998 = (+__Z5IKabsd($2983));
              $2999 = $2998 < 9.9999999999999995E-7;
              if (!($2999)) {
               break L1630;
              }
              $3000 = (+__Z5IKabsd($2987));
              $3001 = $3000 < 9.9999999999999995E-7;
              if (!($3001)) {
               break L1630;
              }
              $3002 = (+__Z5IKabsd(0.0));
              $3003 = $3002 < 9.9999999999999995E-7;
              if (!($3003)) {
               break L1630;
              }
              $3004 = (+__Z5IKabsd($2989));
              $3005 = $3004 < 9.9999999999999995E-7;
              if (!($3005)) {
               break L1630;
              }
              $3006 = (+__Z5IKabsd(-0.21249999999999999));
              $3007 = $3006 < 9.9999999999999995E-7;
              if (!($3007)) {
               break L1630;
              }
              HEAPF64[$47>>3] = 0.0;
              HEAPF64[$22>>3] = -1.5707963267949001;
              HEAPF64[$24>>3] = -1.0;
              HEAPF64[$23>>3] = 0.0;
              HEAPF64[$64>>3] = 0.0;
              HEAPF64[$65>>3] = 0.0;
              HEAPF64[$67>>3] = 0.0;
              HEAPF64[$68>>3] = 0.0;
              HEAPF64[$70>>3] = 0.0;
              HEAPF64[$71>>3] = 0.0;
              HEAPF64[$66>>3] = 0.0;
              HEAPF64[$69>>3] = 0.0;
              HEAPF64[$72>>3] = 0.0;
              ;HEAP32[$43>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;HEAP32[$43+12>>2]=0|0;
              ;HEAP32[$45>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;HEAP32[$45+12>>2]=0|0;
              ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
              $3008 = +HEAPF64[$75>>3];
              $3009 = $3008 + 2.92556370551481;
              $3010 = (+__Z5IKabsd($3009));
              $3011 = (+__Z5IKabsd($3010));
              $3012 = $3011 < 1.0E-8;
              if ($3012) {
               break L1630;
              }
              HEAPF64[$op65>>3] = $3009;
              HEAPF64[$122>>3] = 0.0;
              $3013 = +HEAPF64[$75>>3];
              $3014 = -2.92556370551481 - $3013;
              HEAPF64[$123>>3] = $3014;
              __ZN8IKSolver10polyroots2EPdS0_Ri($op65,$zeror66,$numroots67);
              $3015 = HEAP32[$numroots67>>2]|0;
              $3016 = ($3015|0)>(0);
              if (!($3016)) {
               HEAP16[$j5valid76>>1] = 257;
               HEAP8[$6>>0] = 2;
               break L1630;
              }
              $3017 = HEAP32[$numroots67>>2]|0;
              $3018 = ($3017|0)>(1);
              $numsolutions72$01450 = 0;
              while(1) {
               $3019 = (($zeror66) + ($numsolutions72$01450<<3)|0);
               $3020 = +HEAPF64[$3019>>3];
               $3021 = (+Math_atan((+$3020)));
               $3022 = $3021 * 2.0;
               $3023 = $3022 + 6.2831853071795898;
               $3024 = $3022 > 3.14159265358979;
               $3025 = (($j5array68) + ($numsolutions72$01450<<3)|0);
               HEAPF64[$3025>>3] = $3022;
               do {
                if ($3024) {
                 $3026 = $3022 + -6.2831853071795898;
                 HEAPF64[$3025>>3] = $3026;
                } else {
                 $3027 = $3022 < -3.14159265358979;
                 if (!($3027)) {
                  break;
                 }
                 HEAPF64[$3025>>3] = $3023;
                }
               } while(0);
               $3028 = +HEAPF64[$3025>>3];
               $3029 = (+__Z5IKsind($3028));
               $3030 = (($sj5array70) + ($numsolutions72$01450<<3)|0);
               HEAPF64[$3030>>3] = $3029;
               $3031 = +HEAPF64[$3025>>3];
               $3032 = (+__Z5IKcosd($3031));
               $3033 = (($cj5array69) + ($numsolutions72$01450<<3)|0);
               HEAPF64[$3033>>3] = $3032;
               $3034 = (($numsolutions72$01450) + 1)|0;
               $3035 = ($3034|0)<($3017|0);
               if ($3035) {
                $numsolutions72$01450 = $3034;
               } else {
                break;
               }
              }
              $$1887 = $3018 ? $3017 : 1;
              HEAP16[$j5valid76>>1] = 257;
              HEAP8[$6>>0] = 2;
              $ij577$01459 = 0;
              while(1) {
               $3036 = (($j5valid76) + ($ij577$01459)|0);
               $3037 = HEAP8[$3036>>0]|0;
               $3038 = ($3037<<24>>24)==(0);
               if (!($3038)) {
                $3039 = (($j5array68) + ($ij577$01459<<3)|0);
                $3040 = +HEAPF64[$3039>>3];
                HEAPF64[$3>>3] = $3040;
                $3041 = (($cj5array69) + ($ij577$01459<<3)|0);
                $3042 = +HEAPF64[$3041>>3];
                HEAPF64[$124>>3] = $3042;
                $3043 = (($sj5array70) + ($ij577$01459<<3)|0);
                $3044 = +HEAPF64[$3043>>3];
                HEAPF64[$125>>3] = $3044;
                $3045 = +HEAPF64[$3>>3];
                $3046 = $3045 * 0.5;
                $3047 = (+__Z5IKtand($3046));
                HEAPF64[$126>>3] = $3047;
                $3048 = $ij577$01459&255;
                HEAP8[$4>>0] = $3048;
                HEAP8[$5>>0] = -1;
                $iij578$01455 = (($ij577$01459) + 1)|0;
                $3049 = ($iij578$01455|0)<($$1887|0);
                L1967: do {
                 if ($3049) {
                  $iij578$01456 = $iij578$01455;
                  L1968: while(1) {
                   $3050 = (($j5valid76) + ($iij578$01456)|0);
                   $3051 = HEAP8[$3050>>0]|0;
                   $3052 = ($3051<<24>>24)==(0);
                   do {
                    if (!($3052)) {
                     $3054 = +HEAPF64[$3041>>3];
                     $3055 = (($cj5array69) + ($iij578$01456<<3)|0);
                     $3056 = +HEAPF64[$3055>>3];
                     $3057 = $3054 - $3056;
                     $3058 = (+__Z5IKabsd($3057));
                     $3059 = $3058 < 9.9999999999999995E-7;
                     if (!($3059)) {
                      break;
                     }
                     $3060 = +HEAPF64[$3043>>3];
                     $3061 = (($sj5array70) + ($iij578$01456<<3)|0);
                     $3062 = +HEAPF64[$3061>>3];
                     $3063 = $3060 - $3062;
                     $3064 = (+__Z5IKabsd($3063));
                     $3065 = $3064 < 9.9999999999999995E-7;
                     if ($3065) {
                      $$lcssa2056 = $3050;$iij578$01456$lcssa = $iij578$01456;
                      break L1968;
                     }
                    }
                   } while(0);
                   $iij578$0 = (($iij578$01456) + 1)|0;
                   $3053 = ($iij578$0|0)<($$1887|0);
                   if ($3053) {
                    $iij578$01456 = $iij578$0;
                   } else {
                    break L1967;
                   }
                  }
                  HEAP8[$$lcssa2056>>0] = 0;
                  $3066 = $iij578$01456$lcssa&255;
                  HEAP8[$5>>0] = $3066;
                 }
                } while(0);
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
               $3067 = (($ij577$01459) + 1)|0;
               $exitcond1781 = ($3067|0)==($$1887|0);
               if ($exitcond1781) {
                break L1630;
               } else {
                $ij577$01459 = $3067;
               }
              }
             }
            } while(0);
            $3367 = +HEAPF64[$83>>3];
            $3368 = $3367 * 0.70710678118654802;
            $3369 = +HEAPF64[$84>>3];
            $3370 = $3369 * 0.70710678118654802;
            $3371 = +HEAPF64[$7>>3];
            $3372 = $3371 + 3.14159265358979;
            $3373 = (+__Z6IKfmoddd($3372,6.2831853071795898));
            $3374 = $3373 + -3.14159265358979;
            $3375 = (+__Z5IKabsd($3374));
            $3376 = +HEAPF64[$47>>3];
            $3377 = (+__Z5IKabsd($3376));
            $3378 = $3375 + $3377;
            $3379 = +HEAPF64[$45>>3];
            $3380 = $3368 * $3379;
            $3381 = +HEAPF64[$43>>3];
            $3382 = $3370 * $3381;
            $3383 = $3382 - $3380;
            $3384 = $3368 * $3381;
            $3385 = $3384 + $3383;
            $3386 = $3370 * $3379;
            $3387 = $3386 + $3385;
            $3388 = (+__Z5IKabsd($3378));
            $3389 = $3388 < 9.9999999999999995E-7;
            if (!($3389)) {
             break;
            }
            $3390 = +HEAPF64[$60>>3];
            $3391 = 0.72250000000000003 - $3390;
            $3392 = (+__Z5IKabsd($3391));
            $3393 = $3392 < 9.9999999999999995E-7;
            if (!($3393)) {
             break;
            }
            $3394 = (+__Z5IKabsd($3387));
            $3395 = $3394 < 9.9999999999999995E-7;
            if (!($3395)) {
             break;
            }
            $3396 = -$3379;
            HEAPF64[$47>>3] = 0.0;
            HEAPF64[$7>>3] = 0.0;
            HEAPF64[$76>>3] = 0.0;
            HEAPF64[$75>>3] = 1.0;
            $3397 = +HEAPF64[$43>>3];
            $3398 = $3397 * $3397;
            $3399 = +HEAPF64[$45>>3];
            $3400 = $3399 * $3399;
            $3401 = $3398 + $3400;
            HEAPF64[$60>>3] = $3401;
            $3402 = +HEAPF64[$43>>3];
            $3403 = +HEAPF64[$26>>3];
            $3404 = $3402 * $3403;
            $3405 = +HEAPF64[$45>>3];
            $3406 = +HEAPF64[$32>>3];
            $3407 = $3405 * $3406;
            $3408 = $3404 + $3407;
            HEAPF64[$61>>3] = $3408;
            $3409 = +HEAPF64[$43>>3];
            $3410 = +HEAPF64[$28>>3];
            $3411 = $3409 * $3410;
            $3412 = +HEAPF64[$45>>3];
            $3413 = +HEAPF64[$34>>3];
            $3414 = $3412 * $3413;
            $3415 = $3411 + $3414;
            HEAPF64[$62>>3] = $3415;
            $3416 = +HEAPF64[$43>>3];
            $3417 = +HEAPF64[$30>>3];
            $3418 = $3416 * $3417;
            $3419 = +HEAPF64[$45>>3];
            $3420 = +HEAPF64[$36>>3];
            $3421 = $3419 * $3420;
            $3422 = $3418 + $3421;
            HEAPF64[$63>>3] = $3422;
            $3423 = +HEAPF64[$38>>3];
            $3424 = $3423 * $3396;
            HEAPF64[$64>>3] = $3424;
            $3425 = +HEAPF64[$43>>3];
            $3426 = +HEAPF64[$38>>3];
            $3427 = $3425 * $3426;
            HEAPF64[$65>>3] = $3427;
            $3428 = +HEAPF64[$40>>3];
            $3429 = $3428 * $3396;
            HEAPF64[$67>>3] = $3429;
            $3430 = +HEAPF64[$43>>3];
            $3431 = +HEAPF64[$40>>3];
            $3432 = $3430 * $3431;
            HEAPF64[$68>>3] = $3432;
            $3433 = +HEAPF64[$42>>3];
            $3434 = $3433 * $3396;
            HEAPF64[$70>>3] = $3434;
            $3435 = +HEAPF64[$43>>3];
            $3436 = +HEAPF64[$42>>3];
            $3437 = $3435 * $3436;
            HEAPF64[$71>>3] = $3437;
            $3438 = +HEAPF64[$43>>3];
            $3439 = +HEAPF64[$24>>3];
            $3440 = $3438 * $3439;
            $3441 = +HEAPF64[$45>>3];
            $3442 = $3439 * $3441;
            $3443 = +HEAPF64[$84>>3];
            $3444 = $3440 * $3443;
            $3445 = $3443 * $3442;
            $3446 = $3445 - $3444;
            $3447 = +HEAPF64[$83>>3];
            $3448 = $3442 * $3447;
            $3449 = $3446 + $3448;
            $3450 = $3440 * $3447;
            $3451 = $3450 + $3449;
            $3452 = (+__Z5IKabsd($3451));
            $3453 = $3452 < 9.9999999999999995E-7;
            if (!($3453)) {
             HEAP8[$6>>0] = 1;
             $5428 = +HEAPF64[$45>>3];
             $5429 = $5428 * 0.70710678118654802;
             $5430 = +HEAPF64[$23>>3];
             $5431 = +HEAPF64[$84>>3];
             $5432 = $5430 * $5431;
             $5433 = +HEAPF64[$83>>3];
             $5434 = +HEAPF64[$24>>3];
             $5435 = $5433 * $5434;
             $5436 = $5430 * $5433;
             $5437 = +HEAPF64[$43>>3];
             $5438 = $5437 * 0.70710678118654802;
             $5439 = $5428 * 0.83189033080770302;
             $5440 = $5437 * 0.83189033080770302;
             $5441 = $5431 * $5434;
             $5442 = $5441 * $5438;
             $5443 = $5435 * $5438;
             $5444 = $5443 - $5442;
             $5445 = $5429 * $5441;
             $5446 = $5445 + $5444;
             $5447 = $5429 * $5435;
             $5448 = $5447 + $5446;
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1155,$5448,-1);
             $5449 = HEAP8[$212>>0]|0;
             $5450 = ($5449<<24>>24)==(0);
             if ($5450) {
              break;
             }
             $5451 = +HEAPF64[$84>>3];
             $5452 = $5440 * $5451;
             $5453 = +HEAPF64[$83>>3];
             $5454 = $5440 * $5453;
             $5455 = $5454 - $5452;
             $5456 = $5439 * $5453;
             $5457 = $5456 + $5455;
             $5458 = $5439 * $5451;
             $5459 = $5458 + $5457;
             $5460 = (+__Z5IKabsd($5459));
             $5461 = $5460 < 1.9999999999999999E-6;
             do {
              if ($5461) {
               $5462 = +HEAPF64[$x1155>>3];
               $5463 = $5429 * $5436;
               $5464 = $5429 * $5432;
               $5465 = $5463 - $5464;
               $5466 = $5432 * $5438;
               $5467 = $5465 - $5466;
               $5468 = $5436 * $5438;
               $5469 = $5467 - $5468;
               $5470 = $5469 * $5462;
               $5471 = (+__Z5IKabsd($5470));
               $5472 = $5471 < 1.9999999999999999E-6;
               if (!($5472)) {
                break;
               }
               $5473 = (+__Z5IKsqrd($5459));
               $5474 = (+__Z5IKsqrd($5470));
               $5475 = $5473 + $5474;
               $5476 = $5475 + -1.0;
               $5477 = (+__Z5IKabsd($5476));
               $5478 = !($5477 <= 1.9999999999999999E-6);
               if (!($5478)) {
                break L1630;
               }
              }
             } while(0);
             $5479 = +HEAPF64[$84>>3];
             $5480 = $5440 * $5479;
             $5481 = +HEAPF64[$83>>3];
             $5482 = $5440 * $5481;
             $5483 = $5482 - $5480;
             $5484 = $5439 * $5481;
             $5485 = $5484 + $5483;
             $5486 = $5439 * $5479;
             $5487 = $5486 + $5485;
             $5488 = +HEAPF64[$x1155>>3];
             $5489 = $5429 * $5436;
             $5490 = $5429 * $5432;
             $5491 = $5489 - $5490;
             $5492 = $5432 * $5438;
             $5493 = $5491 - $5492;
             $5494 = $5436 * $5438;
             $5495 = $5493 - $5494;
             $5496 = $5495 * $5488;
             $5497 = (+__Z7IKatan2dd($5487,$5496));
             $5498 = (+__Z5IKsind($5497));
             $5499 = (+__Z5IKcosd($5497));
             $5500 = $5497 > 3.14159265358979;
             do {
              if ($5500) {
               $5501 = $5497 + -6.2831853071795898;
               $5504 = $5501;
              } else {
               $5502 = $5497 < -3.14159265358979;
               if (!($5502)) {
                $5504 = $5497;
                break;
               }
               $5503 = $5497 + 6.2831853071795898;
               $5504 = $5503;
              }
             } while(0);
             HEAP8[$4>>0] = 0;
             HEAP8[$5>>0] = -1;
             HEAPF64[$3>>3] = $5504;
             HEAPF64[$213>>3] = $5499;
             HEAPF64[$214>>3] = $5498;
             $5505 = +HEAPF64[$3>>3];
             $5506 = (+__Z5IKsind($5505));
             $5507 = (+__Z5IKcosd($5505));
             $5508 = +HEAPF64[$83>>3];
             $5509 = +HEAPF64[$43>>3];
             $5510 = $5508 * $5509;
             $5511 = +HEAPF64[$84>>3];
             $5512 = $5509 * $5511;
             $5513 = +HEAPF64[$24>>3];
             $5514 = $5513 * 0.70710678118654802;
             $5515 = $5513 * 0.063639610306789302;
             $5516 = +HEAPF64[$45>>3];
             $5517 = $5508 * $5516;
             $5518 = $5511 * $5516;
             $5519 = $5517 * 0.70710678118654802;
             $5520 = +HEAPF64[$23>>3];
             $5521 = $5512 * $5520;
             $5522 = $5507 * 0.063639610306789302;
             $5523 = $5507 * 0.70710678118654802;
             $5524 = $5506 * 0.77781745930520196;
             $5525 = $5506 * 0.70710678118654802;
             $5526 = $5520 * 0.70710678118654802;
             $5527 = $5518 * $5526;
             $5528 = $5507 * -0.84999999999999998;
             $5529 = -$5512;
             $5530 = $5525 * $5529;
             $5531 = $5530 + -0.84999999999999998;
             $5532 = $5525 * $5518;
             $5533 = $5531 + $5532;
             $5534 = $5506 * $5519;
             $5535 = $5533 + $5534;
             $5536 = $5525 * $5510;
             $5537 = $5536 + $5535;
             $5538 = $5507 * $5512;
             $5539 = $5538 * $5514;
             $5540 = $5527 - $5539;
             $5541 = $5507 * $5510;
             $5542 = $5541 * $5514;
             $5543 = $5542 + $5540;
             $5544 = $5521 * 0.70710678118654802;
             $5545 = $5544 + $5543;
             $5546 = -$5520;
             $5547 = $5519 * $5546;
             $5548 = $5547 + $5545;
             $5549 = $5510 * $5526;
             $5550 = $5549 + $5548;
             $5551 = $5507 * $5514;
             $5552 = $5551 * $5518;
             $5553 = $5552 + $5550;
             $5554 = $5551 * $5517;
             $5555 = $5554 + $5553;
             $5556 = $5512 * $5514;
             $5557 = $5523 * $5521;
             $5558 = $5556 + $5557;
             $5559 = $5507 * $5546;
             $5560 = $5559 * $5519;
             $5561 = $5560 + $5558;
             $5562 = $5510 * $5546;
             $5563 = $5523 * $5562;
             $5564 = $5563 + $5561;
             $5565 = $5518 * $5546;
             $5566 = $5523 * $5565;
             $5567 = $5566 + $5564;
             $5568 = $5510 * $5514;
             $5569 = $5568 + $5567;
             $5570 = $5514 * $5517;
             $5571 = $5569 - $5570;
             $5572 = $5514 * $5518;
             $5573 = $5572 + $5571;
             $5574 = $5524 * $5529;
             $5575 = $5574 + -0.93500000000000005;
             $5576 = $5515 * $5529;
             $5577 = $5575 + $5576;
             $5578 = $5524 * $5518;
             $5579 = $5577 + $5578;
             $5580 = $5510 * $5515;
             $5581 = $5579 - $5580;
             $5582 = $5524 * $5517;
             $5583 = $5582 + $5581;
             $5584 = $5520 * $5518;
             $5585 = $5522 * $5584;
             $5586 = $5585 + $5583;
             $5587 = $5510 * $5520;
             $5588 = $5522 * $5587;
             $5589 = $5588 + $5586;
             $5590 = $5520 * $5517;
             $5591 = $5522 * $5590;
             $5592 = $5591 + $5589;
             $5593 = $5524 * $5510;
             $5594 = $5593 + $5592;
             $5595 = $5515 * $5518;
             $5596 = $5594 - $5595;
             $5597 = $5522 * $5521;
             $5598 = $5596 - $5597;
             $5599 = $5515 * $5517;
             $5600 = $5599 + $5598;
             $5601 = (+__Z5IKabsd($5528));
             $5602 = $5601 > 5.0000000000000004E-6;
             if ($5602) {
              break;
             }
             $5603 = $5506 * 0.84999999999999998;
             $5604 = $5518 * 0.70710678118654802;
             $5605 = $5603 - $5604;
             $5606 = $5510 * 0.70710678118654802;
             $5607 = $5605 - $5606;
             $5608 = $5607 - $5519;
             $5609 = $5512 * 0.70710678118654802;
             $5610 = $5609 + $5608;
             $5611 = (+__Z5IKabsd($5610));
             $5612 = $5611 > 5.0000000000000004E-6;
             if ($5612) {
              break;
             }
             $5613 = (+__Z5IKabsd($5537));
             $5614 = $5613 > 5.0000000000000004E-6;
             if ($5614) {
              break;
             }
             $5615 = (+__Z5IKabsd($5555));
             $5616 = $5615 > 5.0000000000000004E-6;
             if ($5616) {
              break;
             }
             $5617 = (+__Z5IKabsd($5573));
             $5618 = $5617 > 5.0000000000000004E-6;
             if ($5618) {
              break;
             }
             $5619 = (+__Z5IKabsd($5600));
             $5620 = $5619 > 5.0000000000000004E-6;
             if ($5620) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break;
            }
            $3454 = -$3441;
            HEAPF64[$47>>3] = 0.0;
            HEAPF64[$7>>3] = 0.0;
            HEAPF64[$76>>3] = 0.0;
            HEAPF64[$75>>3] = 1.0;
            $3455 = +HEAPF64[$43>>3];
            $3456 = $3455 * $3455;
            $3457 = +HEAPF64[$45>>3];
            $3458 = $3457 * $3457;
            $3459 = $3456 + $3458;
            HEAPF64[$60>>3] = $3459;
            $3460 = +HEAPF64[$43>>3];
            $3461 = +HEAPF64[$26>>3];
            $3462 = $3460 * $3461;
            $3463 = +HEAPF64[$45>>3];
            $3464 = +HEAPF64[$32>>3];
            $3465 = $3463 * $3464;
            $3466 = $3462 + $3465;
            HEAPF64[$61>>3] = $3466;
            $3467 = +HEAPF64[$43>>3];
            $3468 = +HEAPF64[$28>>3];
            $3469 = $3467 * $3468;
            $3470 = +HEAPF64[$45>>3];
            $3471 = +HEAPF64[$34>>3];
            $3472 = $3470 * $3471;
            $3473 = $3469 + $3472;
            HEAPF64[$62>>3] = $3473;
            $3474 = +HEAPF64[$43>>3];
            $3475 = +HEAPF64[$30>>3];
            $3476 = $3474 * $3475;
            $3477 = +HEAPF64[$45>>3];
            $3478 = +HEAPF64[$36>>3];
            $3479 = $3477 * $3478;
            $3480 = $3476 + $3479;
            HEAPF64[$63>>3] = $3480;
            $3481 = +HEAPF64[$38>>3];
            $3482 = $3481 * $3454;
            HEAPF64[$64>>3] = $3482;
            $3483 = +HEAPF64[$43>>3];
            $3484 = +HEAPF64[$38>>3];
            $3485 = $3483 * $3484;
            HEAPF64[$65>>3] = $3485;
            $3486 = +HEAPF64[$40>>3];
            $3487 = $3486 * $3454;
            HEAPF64[$67>>3] = $3487;
            $3488 = +HEAPF64[$43>>3];
            $3489 = +HEAPF64[$40>>3];
            $3490 = $3488 * $3489;
            HEAPF64[$68>>3] = $3490;
            $3491 = +HEAPF64[$42>>3];
            $3492 = $3491 * $3454;
            HEAPF64[$70>>3] = $3492;
            $3493 = +HEAPF64[$43>>3];
            $3494 = +HEAPF64[$42>>3];
            $3495 = $3493 * $3494;
            HEAPF64[$71>>3] = $3495;
            $3496 = +HEAPF64[$23>>3];
            $3497 = +HEAPF64[$43>>3];
            $3498 = $3496 * $3497;
            $3499 = +HEAPF64[$83>>3];
            $3500 = +HEAPF64[$45>>3];
            $3501 = $3496 * $3500;
            $3502 = +HEAPF64[$84>>3];
            $3503 = $3502 * $3501;
            $3504 = $3498 * $3502;
            $3505 = $3504 - $3503;
            $3506 = $3499 * $3501;
            $3507 = $3505 - $3506;
            $3508 = $3498 * $3499;
            $3509 = $3507 - $3508;
            $3510 = (+__Z5IKabsd($3509));
            $3511 = $3510 < 9.9999999999999995E-7;
            if (!($3511)) {
             HEAP8[$6>>0] = 1;
             $5229 = +HEAPF64[$45>>3];
             $5230 = $5229 * 0.70710678118654802;
             $5231 = +HEAPF64[$23>>3];
             $5232 = +HEAPF64[$84>>3];
             $5233 = $5231 * $5232;
             $5234 = +HEAPF64[$83>>3];
             $5235 = +HEAPF64[$24>>3];
             $5236 = $5234 * $5235;
             $5237 = $5231 * $5234;
             $5238 = +HEAPF64[$43>>3];
             $5239 = $5238 * 0.70710678118654802;
             $5240 = $5229 * 0.83189033080770302;
             $5241 = $5238 * 0.83189033080770302;
             $5242 = $5233 * $5239;
             $5243 = $5237 * $5239;
             $5244 = $5242 - $5243;
             $5245 = -$5230;
             $5246 = $5233 * $5245;
             $5247 = $5246 + $5244;
             $5248 = $5237 * $5245;
             $5249 = $5248 + $5247;
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1128,$5249,-1);
             $5250 = HEAP8[$209>>0]|0;
             $5251 = ($5250<<24>>24)==(0);
             if ($5251) {
              break;
             }
             $5252 = +HEAPF64[$84>>3];
             $5253 = $5240 * $5252;
             $5254 = +HEAPF64[$83>>3];
             $5255 = $5241 * $5254;
             $5256 = $5253 + $5255;
             $5257 = $5240 * $5254;
             $5258 = $5257 + $5256;
             $5259 = $5241 * $5252;
             $5260 = $5258 - $5259;
             $5261 = (+__Z5IKabsd($5260));
             $5262 = $5261 < 1.9999999999999999E-6;
             do {
              if ($5262) {
               $5263 = +HEAPF64[$x1128>>3];
               $5264 = $5230 * $5236;
               $5265 = $5236 * $5239;
               $5266 = $5264 - $5265;
               $5267 = +HEAPF64[$24>>3];
               $5268 = $5252 * $5267;
               $5269 = -$5268;
               $5270 = $5230 * $5269;
               $5271 = $5266 + $5270;
               $5272 = $5239 * $5269;
               $5273 = $5272 + $5271;
               $5274 = $5263 * $5273;
               $5275 = (+__Z5IKabsd($5274));
               $5276 = $5275 < 1.9999999999999999E-6;
               if (!($5276)) {
                break;
               }
               $5277 = (+__Z5IKsqrd($5260));
               $5278 = (+__Z5IKsqrd($5274));
               $5279 = $5277 + $5278;
               $5280 = $5279 + -1.0;
               $5281 = (+__Z5IKabsd($5280));
               $5282 = !($5281 <= 1.9999999999999999E-6);
               if (!($5282)) {
                break L1630;
               }
              }
             } while(0);
             $5283 = +HEAPF64[$84>>3];
             $5284 = $5240 * $5283;
             $5285 = +HEAPF64[$83>>3];
             $5286 = $5241 * $5285;
             $5287 = $5284 + $5286;
             $5288 = $5240 * $5285;
             $5289 = $5288 + $5287;
             $5290 = -$5283;
             $5291 = $5241 * $5290;
             $5292 = $5291 + $5289;
             $5293 = +HEAPF64[$x1128>>3];
             $5294 = $5230 * $5236;
             $5295 = $5236 * $5239;
             $5296 = $5294 - $5295;
             $5297 = +HEAPF64[$24>>3];
             $5298 = $5297 * $5290;
             $5299 = $5230 * $5298;
             $5300 = $5296 + $5299;
             $5301 = $5239 * $5298;
             $5302 = $5301 + $5300;
             $5303 = $5293 * $5302;
             $5304 = (+__Z7IKatan2dd($5292,$5303));
             $5305 = (+__Z5IKsind($5304));
             $5306 = (+__Z5IKcosd($5304));
             $5307 = $5304 > 3.14159265358979;
             do {
              if ($5307) {
               $5308 = $5304 + -6.2831853071795898;
               $5311 = $5308;
              } else {
               $5309 = $5304 < -3.14159265358979;
               if (!($5309)) {
                $5311 = $5304;
                break;
               }
               $5310 = $5304 + 6.2831853071795898;
               $5311 = $5310;
              }
             } while(0);
             HEAP8[$4>>0] = 0;
             HEAP8[$5>>0] = -1;
             HEAPF64[$3>>3] = $5311;
             HEAPF64[$210>>3] = $5306;
             HEAPF64[$211>>3] = $5305;
             $5312 = +HEAPF64[$3>>3];
             $5313 = (+__Z5IKsind($5312));
             $5314 = (+__Z5IKcosd($5312));
             $5315 = +HEAPF64[$83>>3];
             $5316 = +HEAPF64[$43>>3];
             $5317 = $5315 * $5316;
             $5318 = +HEAPF64[$84>>3];
             $5319 = $5316 * $5318;
             $5320 = +HEAPF64[$24>>3];
             $5321 = $5320 * 0.70710678118654802;
             $5322 = $5320 * 0.063639610306789302;
             $5323 = +HEAPF64[$45>>3];
             $5324 = $5315 * $5323;
             $5325 = $5318 * $5323;
             $5326 = $5324 * 0.70710678118654802;
             $5327 = +HEAPF64[$23>>3];
             $5328 = $5319 * $5327;
             $5329 = $5314 * 0.063639610306789302;
             $5330 = $5314 * 0.70710678118654802;
             $5331 = $5313 * 0.77781745930520196;
             $5332 = $5313 * 0.70710678118654802;
             $5333 = $5327 * 0.70710678118654802;
             $5334 = $5325 * $5333;
             $5335 = $5314 * -0.84999999999999998;
             $5336 = $5313 * $5326;
             $5337 = $5336 + -0.84999999999999998;
             $5338 = -$5319;
             $5339 = $5332 * $5338;
             $5340 = $5339 + $5337;
             $5341 = $5332 * $5317;
             $5342 = $5341 + $5340;
             $5343 = $5332 * $5325;
             $5344 = $5343 + $5342;
             $5345 = $5314 * $5319;
             $5346 = $5345 * $5321;
             $5347 = $5334 - $5346;
             $5348 = $5317 * $5333;
             $5349 = $5348 + $5347;
             $5350 = $5314 * $5317;
             $5351 = $5350 * $5321;
             $5352 = $5351 + $5349;
             $5353 = $5328 * 0.70710678118654802;
             $5354 = $5353 + $5352;
             $5355 = -$5327;
             $5356 = $5326 * $5355;
             $5357 = $5356 + $5354;
             $5358 = $5314 * $5321;
             $5359 = $5358 * $5325;
             $5360 = $5359 + $5357;
             $5361 = $5358 * $5324;
             $5362 = $5361 + $5360;
             $5363 = $5317 * $5321;
             $5364 = $5325 * $5355;
             $5365 = $5330 * $5364;
             $5366 = $5363 + $5365;
             $5367 = $5314 * $5355;
             $5368 = $5367 * $5326;
             $5369 = $5368 + $5366;
             $5370 = $5321 * $5325;
             $5371 = $5370 + $5369;
             $5372 = $5317 * $5355;
             $5373 = $5330 * $5372;
             $5374 = $5373 + $5371;
             $5375 = $5330 * $5328;
             $5376 = $5375 + $5374;
             $5377 = $5321 * $5324;
             $5378 = $5376 - $5377;
             $5379 = $5319 * $5321;
             $5380 = $5379 + $5378;
             $5381 = $5317 * $5322;
             $5382 = -0.93500000000000005 - $5381;
             $5383 = $5331 * $5338;
             $5384 = $5383 + $5382;
             $5385 = $5327 * $5325;
             $5386 = $5329 * $5385;
             $5387 = $5384 + $5386;
             $5388 = $5322 * $5324;
             $5389 = $5388 + $5387;
             $5390 = $5331 * $5317;
             $5391 = $5390 + $5389;
             $5392 = $5322 * $5325;
             $5393 = $5391 - $5392;
             $5394 = $5329 * $5328;
             $5395 = $5393 - $5394;
             $5396 = $5322 * $5338;
             $5397 = $5396 + $5395;
             $5398 = $5327 * $5324;
             $5399 = $5329 * $5398;
             $5400 = $5399 + $5397;
             $5401 = $5317 * $5327;
             $5402 = $5329 * $5401;
             $5403 = $5402 + $5400;
             $5404 = $5331 * $5324;
             $5405 = $5404 + $5403;
             $5406 = $5331 * $5325;
             $5407 = $5406 + $5405;
             $5408 = (+__Z5IKabsd($5335));
             $5409 = $5408 > 5.0000000000000004E-6;
             if ($5409) {
              break;
             }
             $5410 = $5319 * 0.70710678118654802;
             $5411 = $5317 * 0.70710678118654802;
             $5412 = $5410 - $5411;
             $5413 = $5325 * 0.70710678118654802;
             $5414 = $5412 - $5413;
             $5415 = $5414 - $5326;
             $5416 = $5313 * 0.84999999999999998;
             $5417 = $5416 + $5415;
             $5418 = (+__Z5IKabsd($5417));
             $5419 = $5418 > 5.0000000000000004E-6;
             if ($5419) {
              break;
             }
             $5420 = (+__Z5IKabsd($5344));
             $5421 = $5420 > 5.0000000000000004E-6;
             if ($5421) {
              break;
             }
             $5422 = (+__Z5IKabsd($5362));
             $5423 = $5422 > 5.0000000000000004E-6;
             if ($5423) {
              break;
             }
             $5424 = (+__Z5IKabsd($5380));
             $5425 = $5424 > 5.0000000000000004E-6;
             if ($5425) {
              break;
             }
             $5426 = (+__Z5IKabsd($5407));
             $5427 = $5426 > 5.0000000000000004E-6;
             if ($5427) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break;
            }
            $3512 = -$3500;
            HEAPF64[$47>>3] = 0.0;
            HEAPF64[$7>>3] = 0.0;
            HEAPF64[$76>>3] = 0.0;
            HEAPF64[$75>>3] = 1.0;
            $3513 = +HEAPF64[$43>>3];
            $3514 = $3513 * $3513;
            $3515 = +HEAPF64[$45>>3];
            $3516 = $3515 * $3515;
            $3517 = $3514 + $3516;
            HEAPF64[$60>>3] = $3517;
            $3518 = +HEAPF64[$43>>3];
            $3519 = +HEAPF64[$26>>3];
            $3520 = $3518 * $3519;
            $3521 = +HEAPF64[$45>>3];
            $3522 = +HEAPF64[$32>>3];
            $3523 = $3521 * $3522;
            $3524 = $3520 + $3523;
            HEAPF64[$61>>3] = $3524;
            $3525 = +HEAPF64[$43>>3];
            $3526 = +HEAPF64[$28>>3];
            $3527 = $3525 * $3526;
            $3528 = +HEAPF64[$45>>3];
            $3529 = +HEAPF64[$34>>3];
            $3530 = $3528 * $3529;
            $3531 = $3527 + $3530;
            HEAPF64[$62>>3] = $3531;
            $3532 = +HEAPF64[$43>>3];
            $3533 = +HEAPF64[$30>>3];
            $3534 = $3532 * $3533;
            $3535 = +HEAPF64[$45>>3];
            $3536 = +HEAPF64[$36>>3];
            $3537 = $3535 * $3536;
            $3538 = $3534 + $3537;
            HEAPF64[$63>>3] = $3538;
            $3539 = +HEAPF64[$38>>3];
            $3540 = $3539 * $3512;
            HEAPF64[$64>>3] = $3540;
            $3541 = +HEAPF64[$43>>3];
            $3542 = +HEAPF64[$38>>3];
            $3543 = $3541 * $3542;
            HEAPF64[$65>>3] = $3543;
            $3544 = +HEAPF64[$40>>3];
            $3545 = $3544 * $3512;
            HEAPF64[$67>>3] = $3545;
            $3546 = +HEAPF64[$43>>3];
            $3547 = +HEAPF64[$40>>3];
            $3548 = $3546 * $3547;
            HEAPF64[$68>>3] = $3548;
            $3549 = +HEAPF64[$42>>3];
            $3550 = $3549 * $3512;
            HEAPF64[$70>>3] = $3550;
            $3551 = +HEAPF64[$43>>3];
            $3552 = +HEAPF64[$42>>3];
            $3553 = $3551 * $3552;
            HEAPF64[$71>>3] = $3553;
            $3554 = +HEAPF64[$43>>3];
            $3555 = +HEAPF64[$24>>3];
            $3556 = $3554 * $3555;
            $3557 = +HEAPF64[$84>>3];
            $3558 = +HEAPF64[$45>>3];
            $3559 = $3557 * $3558;
            $3560 = +HEAPF64[$83>>3];
            $3561 = $3558 * $3560;
            $3562 = $3554 * $3560;
            $3563 = $3554 * $3557;
            $3564 = $3562 - $3563;
            $3565 = $3561 + $3564;
            $3566 = $3559 + $3565;
            $3567 = (+__Z5IKabsd($3566));
            $3568 = $3567 < 9.9999999999999995E-7;
            do {
             if (!($3568)) {
              $3569 = $3555 * $3561;
              $3570 = $3555 * $3559;
              $3571 = $3570 + $3569;
              $3572 = $3556 * $3557;
              $3573 = $3571 - $3572;
              $3574 = $3556 * $3560;
              $3575 = $3574 + $3573;
              $3576 = (+__Z5IKabsd($3575));
              $3577 = $3576 < 9.9999999999999995E-7;
              if ($3577) {
               break;
              }
              HEAP8[$6>>0] = 1;
              $5041 = +HEAPF64[$45>>3];
              $5042 = +HEAPF64[$84>>3];
              $5043 = $5041 * $5042;
              $5044 = +HEAPF64[$23>>3];
              $5045 = $5044 * 0.70710678118654802;
              $5046 = +HEAPF64[$83>>3];
              $5047 = $5041 * $5046;
              $5048 = +HEAPF64[$43>>3];
              $5049 = $5046 * $5048;
              $5050 = $5042 * $5048;
              $5051 = +HEAPF64[$24>>3];
              $5052 = $5051 * 0.70710678118654802;
              $5053 = $5050 * 14.142135623731001;
              $5054 = $5049 * 14.142135623731001;
              $5055 = $5054 - $5053;
              $5056 = $5047 * 14.142135623731001;
              $5057 = $5056 + $5055;
              $5058 = $5043 * 14.142135623731001;
              $5059 = $5058 + $5057;
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1100,$5059,-1);
              $5060 = HEAP8[$205>>0]|0;
              $5061 = ($5060<<24>>24)==(0);
              if ($5061) {
               break L1630;
              }
              $5062 = $5050 * $5052;
              $5063 = $5047 * $5052;
              $5064 = $5063 - $5062;
              $5065 = $5043 * $5052;
              $5066 = $5065 + $5064;
              $5067 = $5049 * $5052;
              $5068 = $5067 + $5066;
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1101,$5068,-1);
              $5069 = HEAP8[$206>>0]|0;
              $5070 = ($5069<<24>>24)==(0);
              if ($5070) {
               break L1630;
              }
              $5071 = +HEAPF64[$x1100>>3];
              $5072 = $5071 * 17.0;
              $5073 = (+__Z5IKabsd($5072));
              $5074 = $5073 < 1.9999999999999999E-6;
              do {
               if ($5074) {
                $5075 = +HEAPF64[$x1101>>3];
                $5076 = $5045 * $5047;
                $5077 = -$5045;
                $5078 = $5049 * $5077;
                $5079 = $5076 + $5078;
                $5080 = $5050 * $5077;
                $5081 = $5080 + $5079;
                $5082 = $5043 * $5045;
                $5083 = $5081 - $5082;
                $5084 = $5083 * $5075;
                $5085 = (+__Z5IKabsd($5084));
                $5086 = $5085 < 1.9999999999999999E-6;
                if (!($5086)) {
                 break;
                }
                $5087 = (+__Z5IKsqrd($5072));
                $5088 = (+__Z5IKsqrd($5084));
                $5089 = $5087 + $5088;
                $5090 = $5089 + -1.0;
                $5091 = (+__Z5IKabsd($5090));
                $5092 = !($5091 <= 1.9999999999999999E-6);
                if (!($5092)) {
                 break L1630;
                }
               }
              } while(0);
              $5093 = +HEAPF64[$x1100>>3];
              $5094 = $5093 * 17.0;
              $5095 = +HEAPF64[$x1101>>3];
              $5096 = $5045 * $5047;
              $5097 = -$5045;
              $5098 = $5049 * $5097;
              $5099 = $5096 + $5098;
              $5100 = $5050 * $5097;
              $5101 = $5100 + $5099;
              $5102 = $5043 * $5045;
              $5103 = $5101 - $5102;
              $5104 = $5103 * $5095;
              $5105 = (+__Z7IKatan2dd($5094,$5104));
              $5106 = (+__Z5IKsind($5105));
              $5107 = (+__Z5IKcosd($5105));
              $5108 = $5105 > 3.14159265358979;
              do {
               if ($5108) {
                $5109 = $5105 + -6.2831853071795898;
                $5112 = $5109;
               } else {
                $5110 = $5105 < -3.14159265358979;
                if (!($5110)) {
                 $5112 = $5105;
                 break;
                }
                $5111 = $5105 + 6.2831853071795898;
                $5112 = $5111;
               }
              } while(0);
              HEAP8[$4>>0] = 0;
              HEAP8[$5>>0] = -1;
              HEAPF64[$3>>3] = $5112;
              HEAPF64[$207>>3] = $5107;
              HEAPF64[$208>>3] = $5106;
              $5113 = +HEAPF64[$3>>3];
              $5114 = (+__Z5IKsind($5113));
              $5115 = (+__Z5IKcosd($5113));
              $5116 = +HEAPF64[$83>>3];
              $5117 = +HEAPF64[$43>>3];
              $5118 = $5116 * $5117;
              $5119 = +HEAPF64[$84>>3];
              $5120 = $5117 * $5119;
              $5121 = +HEAPF64[$24>>3];
              $5122 = $5121 * 0.70710678118654802;
              $5123 = $5121 * 0.063639610306789302;
              $5124 = +HEAPF64[$45>>3];
              $5125 = $5116 * $5124;
              $5126 = $5119 * $5124;
              $5127 = $5125 * 0.70710678118654802;
              $5128 = +HEAPF64[$23>>3];
              $5129 = $5120 * $5128;
              $5130 = $5115 * 0.063639610306789302;
              $5131 = $5115 * 0.70710678118654802;
              $5132 = $5114 * 0.77781745930520196;
              $5133 = $5114 * 0.70710678118654802;
              $5134 = $5128 * 0.70710678118654802;
              $5135 = $5126 * $5134;
              $5136 = $5115 * -0.84999999999999998;
              $5137 = $5133 * $5126;
              $5138 = $5137 + -0.84999999999999998;
              $5139 = $5114 * $5127;
              $5140 = $5138 + $5139;
              $5141 = $5133 * $5118;
              $5142 = $5141 + $5140;
              $5143 = -$5120;
              $5144 = $5133 * $5143;
              $5145 = $5144 + $5142;
              $5146 = $5115 * $5122;
              $5147 = $5146 * $5126;
              $5148 = $5146 * $5125;
              $5149 = $5147 + $5148;
              $5150 = $5149 + $5135;
              $5151 = $5118 * $5134;
              $5152 = $5151 + $5150;
              $5153 = $5115 * $5120;
              $5154 = $5153 * $5122;
              $5155 = $5152 - $5154;
              $5156 = -$5128;
              $5157 = $5127 * $5156;
              $5158 = $5157 + $5155;
              $5159 = $5115 * $5118;
              $5160 = $5159 * $5122;
              $5161 = $5160 + $5158;
              $5162 = $5129 * 0.70710678118654802;
              $5163 = $5162 + $5161;
              $5164 = $5131 * $5129;
              $5165 = $5115 * $5156;
              $5166 = $5165 * $5127;
              $5167 = $5164 + $5166;
              $5168 = $5120 * $5122;
              $5169 = $5168 + $5167;
              $5170 = $5118 * $5122;
              $5171 = $5170 + $5169;
              $5172 = $5126 * $5156;
              $5173 = $5131 * $5172;
              $5174 = $5173 + $5171;
              $5175 = $5122 * $5125;
              $5176 = $5174 - $5175;
              $5177 = $5118 * $5156;
              $5178 = $5131 * $5177;
              $5179 = $5178 + $5176;
              $5180 = $5122 * $5126;
              $5181 = $5180 + $5179;
              $5182 = $5132 * $5126;
              $5183 = $5182 + -0.93500000000000005;
              $5184 = $5132 * $5125;
              $5185 = $5184 + $5183;
              $5186 = $5128 * $5126;
              $5187 = $5130 * $5186;
              $5188 = $5187 + $5185;
              $5189 = $5128 * $5125;
              $5190 = $5130 * $5189;
              $5191 = $5190 + $5188;
              $5192 = $5132 * $5118;
              $5193 = $5192 + $5191;
              $5194 = $5123 * $5126;
              $5195 = $5193 - $5194;
              $5196 = $5118 * $5123;
              $5197 = $5195 - $5196;
              $5198 = $5123 * $5125;
              $5199 = $5198 + $5197;
              $5200 = $5130 * $5129;
              $5201 = $5199 - $5200;
              $5202 = $5118 * $5128;
              $5203 = $5130 * $5202;
              $5204 = $5203 + $5201;
              $5205 = $5132 * $5143;
              $5206 = $5205 + $5204;
              $5207 = $5123 * $5143;
              $5208 = $5207 + $5206;
              $5209 = (+__Z5IKabsd($5136));
              $5210 = $5209 > 5.0000000000000004E-6;
              if ($5210) {
               break L1630;
              }
              $5211 = $5114 * 0.84999999999999998;
              $5212 = $5211 - $5127;
              $5213 = $5120 * 0.70710678118654802;
              $5214 = $5213 + $5212;
              $5215 = $5118 * 0.70710678118654802;
              $5216 = $5214 - $5215;
              $5217 = $5126 * 0.70710678118654802;
              $5218 = $5216 - $5217;
              $5219 = (+__Z5IKabsd($5218));
              $5220 = $5219 > 5.0000000000000004E-6;
              if ($5220) {
               break L1630;
              }
              $5221 = (+__Z5IKabsd($5145));
              $5222 = $5221 > 5.0000000000000004E-6;
              if ($5222) {
               break L1630;
              }
              $5223 = (+__Z5IKabsd($5163));
              $5224 = $5223 > 5.0000000000000004E-6;
              if ($5224) {
               break L1630;
              }
              $5225 = (+__Z5IKabsd($5181));
              $5226 = $5225 > 5.0000000000000004E-6;
              if ($5226) {
               break L1630;
              }
              $5227 = (+__Z5IKabsd($5208));
              $5228 = $5227 > 5.0000000000000004E-6;
              if ($5228) {
               break L1630;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L1630;
             }
            } while(0);
            $3578 = +HEAPF64[$45>>3];
            $3579 = +HEAPF64[$43>>3];
            $3580 = $3578 + $3579;
            $3581 = $3578 - $3579;
            $3582 = $3580 * $3580;
            $3583 = $3581 * $3581;
            $3584 = $3582 + $3583;
            $3585 = (+__Z5IKabsd($3584));
            $3586 = $3585 == 0.0;
            do {
             if (!($3586)) {
              $3587 = (+Math_pow((+$3584),-0.5));
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x961,$3580,$3581,1.9999999999999999E-6);
              $3588 = HEAP8[$197>>0]|0;
              $3589 = ($3588<<24>>24)==(0);
              if ($3589) {
               break;
              }
              $3590 = $3580 * $3587;
              $3591 = -$3590;
              $3592 = $3581 * $3587;
              $3593 = +HEAPF64[$this>>3];
              $3594 = +HEAPF64[$45>>3];
              $3595 = $3594 * 0.70710678118654802;
              $3596 = +HEAPF64[$43>>3];
              $3597 = $3596 * 0.70710678118654802;
              $3598 = $3594 + $3596;
              $3599 = $3594 - $3596;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x967,$3598,$3599,1.9999999999999999E-6);
              $3600 = HEAP8[$198>>0]|0;
              $3601 = ($3600<<24>>24)==(0);
              if ($3601) {
               break;
              }
              $3602 = +HEAPF64[$x967>>3];
              $3603 = $3593 * $3602;
              $3604 = +HEAPF64[$this>>3];
              $3605 = $3593 * $3604;
              $3606 = $3603 + $3605;
              $3607 = $3602 * $3604;
              $3608 = $3607 + $3606;
              $3609 = $3602 * $3602;
              $3610 = $3609 + $3608;
              $3611 = $3610 < -1.0000000000000001E-5;
              if ($3611) {
               break;
              }
              $3612 = (+__Z6IKsqrtd($3610));
              $3613 = $3612 + 3.14159265358979;
              $3614 = (+__Z6IKfmoddd($3613,6.2831853071795898));
              $3615 = $3614 + -3.14159265358979;
              $3616 = +HEAPF64[$43>>3];
              $3617 = +HEAPF64[$45>>3];
              $3618 = $3592 * $3595;
              $3619 = $3592 * $3597;
              $3620 = $3619 - $3618;
              $3621 = $3595 * $3591;
              $3622 = $3621 + $3620;
              $3623 = $3597 * $3591;
              $3624 = $3623 + $3622;
              $3625 = (+__Z5IKabsd($3615));
              $3626 = $3625 < 9.9999999999999995E-7;
              if (!($3626)) {
               break;
              }
              $3627 = $3616 * $3616;
              $3628 = 0.72250000000000003 - $3627;
              $3629 = $3617 * $3617;
              $3630 = $3628 - $3629;
              $3631 = (+__Z5IKabsd($3630));
              $3632 = $3631 < 9.9999999999999995E-7;
              if (!($3632)) {
               break;
              }
              $3633 = (+__Z5IKabsd($3624));
              $3634 = $3633 < 9.9999999999999995E-7;
              if (!($3634)) {
               break;
              }
              HEAP16[$j5valid103>>1] = 0;
              HEAP8[$6>>0] = 2;
              $3635 = +HEAPF64[$45>>3];
              $3636 = $3635 * 0.83189033080770302;
              $3637 = +HEAPF64[$43>>3];
              $3638 = $3637 * 0.83189033080770302;
              $3639 = $3592 * $3638;
              $3640 = $3592 * $3636;
              $3641 = $3640 + $3639;
              $3642 = $3590 * $3638;
              $3643 = $3642 + $3641;
              $3644 = $3636 * $3591;
              $3645 = $3644 + $3643;
              HEAPF64[$sj5array102>>3] = $3645;
              $3646 = !($3645 >= -1.0000020000000001);
              $3647 = !($3645 <= 1.0000020000000001);
              $or$cond142 = $3646 | $3647;
              do {
               if ($or$cond142) {
                $3657 = (__Z13__DOUBLE_BITSd($3645)|0);
                $3658 = tempRet0;
                $3659 = $3658 & 2147483647;
                $3660 = ($3659>>>0)>(2146435072);
                $3661 = ($3657>>>0)>(0);
                $3662 = ($3659|0)==(2146435072);
                $3663 = $3662 & $3661;
                $3664 = $3660 | $3663;
                if (!($3664)) {
                 $ij5104$01356 = 0;
                 break;
                }
                HEAP8[$j5valid103>>0] = 1;
                HEAPF64[$cj5array101>>3] = 1.0;
                HEAPF64[$sj5array102>>3] = 0.0;
                HEAPF64[$j5array100>>3] = 0.0;
                $ij5104$01356 = 0;
               } else {
                HEAP8[$199>>0] = 1;
                HEAP8[$j5valid103>>0] = 1;
                $3648 = +HEAPF64[$sj5array102>>3];
                $3649 = (+__Z6IKasind($3648));
                HEAPF64[$j5array100>>3] = $3649;
                $3650 = (+__Z5IKcosd($3649));
                HEAPF64[$cj5array101>>3] = $3650;
                $3651 = +HEAPF64[$sj5array102>>3];
                HEAPF64[$200>>3] = $3651;
                $3652 = +HEAPF64[$j5array100>>3];
                $3653 = $3652 > 0.0;
                $$v80 = $3653 ? 3.14159265358979 : -3.14159265358979;
                $3654 = $$v80 - $3652;
                HEAPF64[$201>>3] = $3654;
                $3655 = +HEAPF64[$cj5array101>>3];
                $3656 = -$3655;
                HEAPF64[$202>>3] = $3656;
                $ij5104$01356 = 0;
               }
              } while(0);
              while(1) {
               $3665 = (($j5valid103) + ($ij5104$01356)|0);
               $3666 = HEAP8[$3665>>0]|0;
               $3667 = ($3666<<24>>24)==(0);
               do {
                if (!($3667)) {
                 $3668 = $ij5104$01356&255;
                 HEAP8[$4>>0] = $3668;
                 HEAP8[$5>>0] = -1;
                 $iij5105$01352 = (($ij5104$01356) + 1)|0;
                 $3669 = ($iij5105$01352|0)<(2);
                 do {
                  if ($3669) {
                   $3670 = (($sj5array102) + ($ij5104$01356<<3)|0);
                   $3671 = (($j5valid103) + ($iij5105$01352)|0);
                   $3672 = HEAP8[$3671>>0]|0;
                   $3673 = ($3672<<24>>24)==(0);
                   if ($3673) {
                    break;
                   }
                   $3674 = (($cj5array101) + ($ij5104$01356<<3)|0);
                   $3675 = +HEAPF64[$3674>>3];
                   $3676 = (($cj5array101) + ($iij5105$01352<<3)|0);
                   $3677 = +HEAPF64[$3676>>3];
                   $3678 = $3675 - $3677;
                   $3679 = (+__Z5IKabsd($3678));
                   $3680 = $3679 < 9.9999999999999995E-7;
                   if (!($3680)) {
                    break;
                   }
                   $3681 = +HEAPF64[$3670>>3];
                   $3682 = (($sj5array102) + ($iij5105$01352<<3)|0);
                   $3683 = +HEAPF64[$3682>>3];
                   $3684 = $3681 - $3683;
                   $3685 = (+__Z5IKabsd($3684));
                   $3686 = $3685 < 9.9999999999999995E-7;
                   if (!($3686)) {
                    break;
                   }
                   HEAP8[$3671>>0] = 0;
                   $3687 = $iij5105$01352&255;
                   HEAP8[$5>>0] = $3687;
                  }
                 } while(0);
                 $3688 = (($j5array100) + ($ij5104$01356<<3)|0);
                 $3689 = +HEAPF64[$3688>>3];
                 HEAPF64[$3>>3] = $3689;
                 $3690 = (($cj5array101) + ($ij5104$01356<<3)|0);
                 $3691 = +HEAPF64[$3690>>3];
                 HEAPF64[$203>>3] = $3691;
                 $3692 = (($sj5array102) + ($ij5104$01356<<3)|0);
                 $3693 = +HEAPF64[$3692>>3];
                 HEAPF64[$204>>3] = $3693;
                 $3694 = +HEAPF64[$3>>3];
                 $3695 = (+__Z5IKsind($3694));
                 $3696 = (+__Z5IKcosd($3694));
                 $3697 = +HEAPF64[$24>>3];
                 $3698 = $3697 * 0.70710678118654802;
                 $3699 = +HEAPF64[$45>>3];
                 $3700 = $3699 * $3591;
                 $3701 = +HEAPF64[$43>>3];
                 $3702 = $3592 * $3701;
                 $3703 = +HEAPF64[$23>>3];
                 $3704 = $3703 * 0.70710678118654802;
                 $3705 = $3701 * $3591;
                 $3706 = $3697 * 0.063639610306789302;
                 $3707 = $3592 * $3699;
                 $3708 = $3695 * 0.77781745930520196;
                 $3709 = $3695 * 0.70710678118654802;
                 $3710 = $3703 * 0.063639610306789302;
                 $3711 = $3696 * $3710;
                 $3712 = $3696 * -0.84999999999999998;
                 $3713 = -$3705;
                 $3714 = $3705 * $3704;
                 $3715 = $3696 * $3698;
                 $3716 = $3715 * $3707;
                 $3717 = $3716 + $3714;
                 $3718 = $3715 * $3702;
                 $3719 = $3718 + $3717;
                 $3720 = $3715 * $3700;
                 $3721 = $3720 + $3719;
                 $3722 = $3700 * $3704;
                 $3723 = $3722 + $3721;
                 $3724 = $3702 * $3704;
                 $3725 = $3724 + $3723;
                 $3726 = -$3696;
                 $3727 = $3698 * $3726;
                 $3728 = $3727 * $3705;
                 $3729 = $3728 + $3725;
                 $3730 = $3707 * $3704;
                 $3731 = $3729 - $3730;
                 $3732 = $3700 * $3726;
                 $3733 = $3732 * $3704;
                 $3734 = $3696 * $3704;
                 $3735 = $3705 * $3734;
                 $3736 = $3733 + $3735;
                 $3737 = $3698 * $3707;
                 $3738 = $3736 - $3737;
                 $3739 = $3702 * $3726;
                 $3740 = $3739 * $3704;
                 $3741 = $3740 + $3738;
                 $3742 = $3704 * $3726;
                 $3743 = $3707 * $3742;
                 $3744 = $3743 + $3741;
                 $3745 = $3698 * $3700;
                 $3746 = $3745 + $3744;
                 $3747 = $3698 * $3702;
                 $3748 = $3747 + $3746;
                 $3749 = $3698 * $3705;
                 $3750 = $3749 + $3748;
                 $3751 = $3708 * $3707;
                 $3752 = $3751 + -0.93500000000000005;
                 $3753 = $3706 * $3707;
                 $3754 = $3753 + $3752;
                 $3755 = $3700 * $3711;
                 $3756 = $3754 + $3755;
                 $3757 = $3706 * $3702;
                 $3758 = $3756 - $3757;
                 $3759 = $3708 * $3700;
                 $3760 = $3759 + $3758;
                 $3761 = $3702 * $3711;
                 $3762 = $3761 + $3760;
                 $3763 = $3706 * $3713;
                 $3764 = $3763 + $3762;
                 $3765 = $3708 * $3713;
                 $3766 = $3765 + $3764;
                 $3767 = $3708 * $3702;
                 $3768 = $3767 + $3766;
                 $3769 = $3711 * $3713;
                 $3770 = $3769 + $3768;
                 $3771 = $3706 * $3700;
                 $3772 = $3770 - $3771;
                 $3773 = $3707 * $3711;
                 $3774 = $3773 + $3772;
                 $3775 = (+__Z5IKabsd($3712));
                 $3776 = $3775 > 5.0000000000000004E-6;
                 if ($3776) {
                  break;
                 }
                 $3777 = $3709 * $3700;
                 $3778 = $3777 + -0.84999999999999998;
                 $3779 = $3709 * $3702;
                 $3780 = $3778 + $3779;
                 $3781 = $3709 * $3713;
                 $3782 = $3781 + $3780;
                 $3783 = $3709 * $3707;
                 $3784 = $3783 + $3782;
                 $3785 = (+__Z5IKabsd($3784));
                 $3786 = $3785 > 5.0000000000000004E-6;
                 if ($3786) {
                  break;
                 }
                 $3787 = (+__Z5IKabsd($3731));
                 $3788 = $3787 > 5.0000000000000004E-6;
                 if ($3788) {
                  break;
                 }
                 $3789 = (+__Z5IKabsd($3750));
                 $3790 = $3789 > 5.0000000000000004E-6;
                 if ($3790) {
                  break;
                 }
                 $3791 = (+__Z5IKabsd($3774));
                 $3792 = $3791 > 5.0000000000000004E-6;
                 if ($3792) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $3793 = (($ij5104$01356) + 1)|0;
               $exitcond1765 = ($3793|0)==(2);
               if ($exitcond1765) {
                break L1630;
               } else {
                $ij5104$01356 = $3793;
               }
              }
             }
            } while(0);
            $3794 = +HEAPF64[$45>>3];
            $3795 = +HEAPF64[$43>>3];
            $3796 = $3794 + $3795;
            $3797 = $3794 - $3795;
            $3798 = $3797 * $3797;
            $3799 = $3796 * $3796;
            $3800 = $3798 + $3799;
            $3801 = (+__Z5IKabsd($3800));
            $3802 = $3801 == 0.0;
            do {
             if (!($3802)) {
              $3803 = (+Math_pow((+$3800),-0.5));
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x986,$3796,$3797,1.9999999999999999E-6);
              $3804 = HEAP8[$192>>0]|0;
              $3805 = ($3804<<24>>24)==(0);
              if ($3805) {
               break;
              }
              $3806 = $3796 * $3803;
              $3807 = $3797 * $3803;
              $3808 = -$3807;
              $3809 = +HEAPF64[$this>>3];
              $3810 = $3806 * 0.70710678118654802;
              $3811 = $3807 * -0.70710678118654802;
              $3812 = +HEAPF64[$45>>3];
              $3813 = +HEAPF64[$43>>3];
              $3814 = $3812 + $3813;
              $3815 = $3812 - $3813;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x992,$3814,$3815,1.9999999999999999E-6);
              $3816 = HEAP8[$193>>0]|0;
              $3817 = ($3816<<24>>24)==(0);
              if ($3817) {
               break;
              }
              $3818 = +HEAPF64[$x992>>3];
              $3819 = $3818 * -3.14159265358979;
              $3820 = $3819 + 9.8696044010893597;
              $3821 = $3819 + $3820;
              $3822 = $3818 * $3818;
              $3823 = $3822 + $3821;
              $3824 = +HEAPF64[$this>>3];
              $3825 = $3809 * $3824;
              $3826 = $3825 + $3823;
              $3827 = $3809 * 3.14159265358979;
              $3828 = $3826 - $3827;
              $3829 = $3824 * 3.14159265358979;
              $3830 = $3828 - $3829;
              $3831 = $3809 * $3818;
              $3832 = $3831 + $3830;
              $3833 = $3818 * $3824;
              $3834 = $3833 + $3832;
              $3835 = $3834 < -1.0000000000000001E-5;
              if ($3835) {
               break;
              }
              $3836 = (+__Z6IKsqrtd($3834));
              $3837 = $3836 + 3.14159265358979;
              $3838 = (+__Z6IKfmoddd($3837,6.2831853071795898));
              $3839 = $3838 + -3.14159265358979;
              $3840 = +HEAPF64[$43>>3];
              $3841 = +HEAPF64[$45>>3];
              $3842 = $3811 * $3841;
              $3843 = $3810 * $3841;
              $3844 = $3843 - $3842;
              $3845 = $3811 * $3840;
              $3846 = $3845 + $3844;
              $3847 = $3810 * $3840;
              $3848 = $3847 + $3846;
              $3849 = (+__Z5IKabsd($3839));
              $3850 = $3849 < 9.9999999999999995E-7;
              if (!($3850)) {
               break;
              }
              $3851 = $3840 * $3840;
              $3852 = 0.72250000000000003 - $3851;
              $3853 = $3841 * $3841;
              $3854 = $3852 - $3853;
              $3855 = (+__Z5IKabsd($3854));
              $3856 = $3855 < 9.9999999999999995E-7;
              if (!($3856)) {
               break;
              }
              $3857 = (+__Z5IKabsd($3848));
              $3858 = $3857 < 9.9999999999999995E-7;
              if (!($3858)) {
               break;
              }
              HEAP8[$6>>0] = 1;
              $3859 = +HEAPF64[$43>>3];
              $3860 = $3859 * 0.83189033080770302;
              $3861 = +HEAPF64[$45>>3];
              $3862 = $3861 * 0.83189033080770302;
              $3863 = +HEAPF64[$23>>3];
              $3864 = $3863 * 0.70710678118654802;
              $3865 = $3864 * $3808;
              $3866 = $3859 * 0.70710678118654802;
              $3867 = +HEAPF64[$24>>3];
              $3868 = $3866 * $3867;
              $3869 = $3806 * $3864;
              $3870 = $3861 * 0.70710678118654802;
              $3871 = $3870 * $3867;
              $3872 = $3806 * $3871;
              $3873 = -$3806;
              $3874 = $3868 * $3873;
              $3875 = $3872 + $3874;
              $3876 = $3868 * $3808;
              $3877 = $3876 + $3875;
              $3878 = $3871 * $3808;
              $3879 = $3878 + $3877;
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x999,$3879,-1);
              $3880 = HEAP8[$194>>0]|0;
              $3881 = ($3880<<24>>24)==(0);
              if ($3881) {
               break L1630;
              }
              $3882 = $3806 * $3862;
              $3883 = $3860 * $3873;
              $3884 = $3883 + $3882;
              $3885 = $3862 * $3808;
              $3886 = $3885 + $3884;
              $3887 = $3860 * $3808;
              $3888 = $3887 + $3886;
              $3889 = (+__Z5IKabsd($3888));
              $3890 = $3889 < 1.9999999999999999E-6;
              do {
               if ($3890) {
                $3891 = +HEAPF64[$x999>>3];
                $3892 = +HEAPF64[$43>>3];
                $3893 = -$3892;
                $3894 = $3869 * $3893;
                $3895 = $3865 * $3893;
                $3896 = $3894 + $3895;
                $3897 = +HEAPF64[$45>>3];
                $3898 = $3865 * $3897;
                $3899 = $3896 + $3898;
                $3900 = $3869 * $3897;
                $3901 = $3899 - $3900;
                $3902 = $3891 * $3901;
                $3903 = (+__Z5IKabsd($3902));
                $3904 = $3903 < 1.9999999999999999E-6;
                if (!($3904)) {
                 break;
                }
                $3905 = (+__Z5IKsqrd($3888));
                $3906 = (+__Z5IKsqrd($3902));
                $3907 = $3905 + $3906;
                $3908 = $3907 + -1.0;
                $3909 = (+__Z5IKabsd($3908));
                $3910 = !($3909 <= 1.9999999999999999E-6);
                if (!($3910)) {
                 break L1630;
                }
               }
              } while(0);
              $3911 = +HEAPF64[$x999>>3];
              $3912 = +HEAPF64[$43>>3];
              $3913 = -$3912;
              $3914 = $3869 * $3913;
              $3915 = $3865 * $3913;
              $3916 = $3914 + $3915;
              $3917 = +HEAPF64[$45>>3];
              $3918 = $3865 * $3917;
              $3919 = $3916 + $3918;
              $3920 = $3869 * $3917;
              $3921 = $3919 - $3920;
              $3922 = $3911 * $3921;
              $3923 = (+__Z7IKatan2dd($3888,$3922));
              $3924 = (+__Z5IKsind($3923));
              $3925 = (+__Z5IKcosd($3923));
              $3926 = $3923 > 3.14159265358979;
              do {
               if ($3926) {
                $3927 = $3923 + -6.2831853071795898;
                $3930 = $3927;
               } else {
                $3928 = $3923 < -3.14159265358979;
                if (!($3928)) {
                 $3930 = $3923;
                 break;
                }
                $3929 = $3923 + 6.2831853071795898;
                $3930 = $3929;
               }
              } while(0);
              HEAP8[$4>>0] = 0;
              HEAP8[$5>>0] = -1;
              HEAPF64[$3>>3] = $3930;
              HEAPF64[$195>>3] = $3925;
              HEAPF64[$196>>3] = $3924;
              $3931 = +HEAPF64[$3>>3];
              $3932 = (+__Z5IKsind($3931));
              $3933 = (+__Z5IKcosd($3931));
              $3934 = +HEAPF64[$45>>3];
              $3935 = $3934 * $3808;
              $3936 = +HEAPF64[$43>>3];
              $3937 = $3936 * 0.70710678118654802;
              $3938 = +HEAPF64[$24>>3];
              $3939 = $3806 * $3938;
              $3940 = $3938 * 0.063639610306789302;
              $3941 = +HEAPF64[$23>>3];
              $3942 = $3806 * $3941;
              $3943 = $3934 * 0.70710678118654802;
              $3944 = $3936 * $3808;
              $3945 = $3938 * $3808;
              $3946 = $3938 * 0.70710678118654802;
              $3947 = $3936 * 0.063639610306789302;
              $3948 = $3933 * $3941;
              $3949 = $3932 * 0.77781745930520196;
              $3950 = $3806 * $3932;
              $3951 = $3933 * -0.84999999999999998;
              $3952 = $3935 * -0.70710678118654802;
              $3953 = $3807 * $3937;
              $3954 = $3932 * $3808;
              $3955 = $3954 * $3937;
              $3956 = $3955 + -0.84999999999999998;
              $3957 = $3950 * $3937;
              $3958 = $3956 - $3957;
              $3959 = $3950 * $3943;
              $3960 = $3959 + $3958;
              $3961 = $3932 * 0.70710678118654802;
              $3962 = $3961 * $3935;
              $3963 = $3962 + $3960;
              $3964 = $3941 * $3808;
              $3965 = $3937 * $3964;
              $3966 = -$3933;
              $3967 = $3937 * $3966;
              $3968 = $3967 * $3939;
              $3969 = $3968 + $3965;
              $3970 = $3933 * $3939;
              $3971 = $3943 * $3970;
              $3972 = $3971 + $3969;
              $3973 = $3933 * $3937;
              $3974 = $3973 * $3945;
              $3975 = $3974 + $3972;
              $3976 = $3933 * $3935;
              $3977 = $3976 * $3946;
              $3978 = $3977 + $3975;
              $3979 = $3943 * $3942;
              $3980 = $3979 + $3978;
              $3981 = $3941 * -0.70710678118654802;
              $3982 = $3935 * $3981;
              $3983 = $3982 + $3980;
              $3984 = $3937 * $3942;
              $3985 = $3984 + $3983;
              $3986 = $3953 * $3948;
              $3987 = $3942 * $3966;
              $3988 = $3943 * $3987;
              $3989 = $3986 + $3988;
              $3990 = $3973 * $3942;
              $3991 = $3990 + $3989;
              $3992 = $3943 * $3939;
              $3993 = $3992 + $3991;
              $3994 = $3952 * $3948;
              $3995 = $3994 + $3993;
              $3996 = $3935 * $3946;
              $3997 = $3995 - $3996;
              $3998 = $3937 * $3939;
              $3999 = $3998 + $3997;
              $4000 = $3937 * $3945;
              $4001 = $4000 + $3999;
              $4002 = $3934 * 0.063639610306789302;
              $4003 = $3933 * $4002;
              $4004 = $4003 * $3942;
              $4005 = $4004 + -0.93500000000000005;
              $4006 = $3947 * $3939;
              $4007 = $4005 - $4006;
              $4008 = $3936 * $3873;
              $4009 = $3949 * $4008;
              $4010 = $4009 + $4007;
              $4011 = $3935 * 0.063639610306789302;
              $4012 = $4011 * $3948;
              $4013 = $4012 + $4010;
              $4014 = $3944 * $3940;
              $4015 = $4013 - $4014;
              $4016 = $3806 * $3934;
              $4017 = $3949 * $4016;
              $4018 = $4017 + $4015;
              $4019 = $3947 * $3987;
              $4020 = $4019 + $4018;
              $4021 = $3949 * $3935;
              $4022 = $4021 + $4020;
              $4023 = $3935 * $3940;
              $4024 = $4023 + $4022;
              $4025 = $3949 * $3944;
              $4026 = $4025 + $4024;
              $4027 = $3934 * -0.063639610306789302;
              $4028 = $4027 * $3939;
              $4029 = $4028 + $4026;
              $4030 = $3944 * 0.063639610306789302;
              $4031 = $4030 * $3948;
              $4032 = $4031 + $4029;
              $4033 = (+__Z5IKabsd($3951));
              $4034 = $4033 > 5.0000000000000004E-6;
              if ($4034) {
               break L1630;
              }
              $4035 = $3932 * 0.84999999999999998;
              $4036 = $4035 + $3952;
              $4037 = $4036 + $3953;
              $4038 = $3806 * $3937;
              $4039 = $4038 + $4037;
              $4040 = $3943 * $3873;
              $4041 = $4040 + $4039;
              $4042 = (+__Z5IKabsd($4041));
              $4043 = $4042 > 5.0000000000000004E-6;
              if ($4043) {
               break L1630;
              }
              $4044 = (+__Z5IKabsd($3963));
              $4045 = $4044 > 5.0000000000000004E-6;
              if ($4045) {
               break L1630;
              }
              $4046 = (+__Z5IKabsd($3985));
              $4047 = $4046 > 5.0000000000000004E-6;
              if ($4047) {
               break L1630;
              }
              $4048 = (+__Z5IKabsd($4001));
              $4049 = $4048 > 5.0000000000000004E-6;
              if ($4049) {
               break L1630;
              }
              $4050 = (+__Z5IKabsd($4032));
              $4051 = $4050 > 5.0000000000000004E-6;
              if ($4051) {
               break L1630;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              break L1630;
             }
            } while(0);
            $4052 = +HEAPF64[$84>>3];
            $4053 = $4052 * 0.70710678118654802;
            $4054 = +HEAPF64[$83>>3];
            $4055 = $4054 * 0.70710678118654802;
            $4056 = +HEAPF64[$45>>3];
            $4057 = $4056 * $4055;
            $4058 = $4053 * $4056;
            $4059 = $4058 - $4057;
            $4060 = +HEAPF64[$43>>3];
            $4061 = $4055 * $4060;
            $4062 = $4059 + $4061;
            $4063 = $4053 * $4060;
            $4064 = $4063 + $4062;
            $4065 = +HEAPF64[$22>>3];
            $4066 = (+__Z5IKabsd($4065));
            $4067 = $4066 + 3.14159265358979;
            $4068 = (+__Z6IKfmoddd($4067,6.2831853071795898));
            $4069 = $4068 + -3.14159265358979;
            $4070 = (+__Z5IKabsd($4069));
            $4071 = $4070 < 9.9999999999999995E-7;
            do {
             if ($4071) {
              $4072 = $4060 * $4060;
              $4073 = 0.72250000000000003 - $4072;
              $4074 = $4056 * $4056;
              $4075 = $4073 - $4074;
              $4076 = (+__Z5IKabsd($4075));
              $4077 = $4076 < 9.9999999999999995E-7;
              if (!($4077)) {
               break;
              }
              $4078 = (+__Z5IKabsd($4064));
              $4079 = $4078 < 9.9999999999999995E-7;
              if (!($4079)) {
               break;
              }
              $4080 = -$4056;
              HEAPF64[$47>>3] = 0.0;
              HEAPF64[$7>>3] = 0.0;
              HEAPF64[$76>>3] = 0.0;
              HEAPF64[$75>>3] = 1.0;
              $4081 = +HEAPF64[$43>>3];
              $4082 = $4081 * $4081;
              $4083 = +HEAPF64[$45>>3];
              $4084 = $4083 * $4083;
              $4085 = $4082 + $4084;
              HEAPF64[$60>>3] = $4085;
              $4086 = +HEAPF64[$43>>3];
              $4087 = +HEAPF64[$26>>3];
              $4088 = $4086 * $4087;
              $4089 = +HEAPF64[$45>>3];
              $4090 = +HEAPF64[$32>>3];
              $4091 = $4089 * $4090;
              $4092 = $4088 + $4091;
              HEAPF64[$61>>3] = $4092;
              $4093 = +HEAPF64[$43>>3];
              $4094 = +HEAPF64[$28>>3];
              $4095 = $4093 * $4094;
              $4096 = +HEAPF64[$45>>3];
              $4097 = +HEAPF64[$34>>3];
              $4098 = $4096 * $4097;
              $4099 = $4095 + $4098;
              HEAPF64[$62>>3] = $4099;
              $4100 = +HEAPF64[$43>>3];
              $4101 = +HEAPF64[$30>>3];
              $4102 = $4100 * $4101;
              $4103 = +HEAPF64[$45>>3];
              $4104 = +HEAPF64[$36>>3];
              $4105 = $4103 * $4104;
              $4106 = $4102 + $4105;
              HEAPF64[$63>>3] = $4106;
              $4107 = +HEAPF64[$38>>3];
              $4108 = $4107 * $4080;
              HEAPF64[$64>>3] = $4108;
              $4109 = +HEAPF64[$43>>3];
              $4110 = +HEAPF64[$38>>3];
              $4111 = $4109 * $4110;
              HEAPF64[$65>>3] = $4111;
              $4112 = +HEAPF64[$40>>3];
              $4113 = $4112 * $4080;
              HEAPF64[$67>>3] = $4113;
              $4114 = +HEAPF64[$43>>3];
              $4115 = +HEAPF64[$40>>3];
              $4116 = $4114 * $4115;
              HEAPF64[$68>>3] = $4116;
              $4117 = +HEAPF64[$42>>3];
              $4118 = $4117 * $4080;
              HEAPF64[$70>>3] = $4118;
              $4119 = +HEAPF64[$43>>3];
              $4120 = +HEAPF64[$42>>3];
              $4121 = $4119 * $4120;
              HEAPF64[$71>>3] = $4121;
              HEAPF64[$24>>3] = 0.0;
              HEAPF64[$23>>3] = 1.0;
              HEAPF64[$22>>3] = 0.0;
              $4122 = +HEAPF64[$83>>3];
              $4123 = +HEAPF64[$45>>3];
              $4124 = $4122 * $4123;
              $4125 = +HEAPF64[$43>>3];
              $4126 = $4122 * $4125;
              $4127 = $4124 + $4126;
              $4128 = +HEAPF64[$84>>3];
              $4129 = $4125 * $4128;
              $4130 = $4127 - $4129;
              $4131 = $4123 * $4128;
              $4132 = $4131 + $4130;
              $4133 = (+__Z5IKabsd($4132));
              $4134 = $4133 < 9.9999999999999995E-7;
              if (!($4134)) {
               HEAP8[$6>>0] = 1;
               $4203 = +HEAPF64[$45>>3];
               $4204 = $4203 * $4203;
               $4205 = +HEAPF64[$43>>3];
               $4206 = $4205 * $4205;
               $4207 = $4205 * 216.37467504308401;
               $4208 = $4203 * $4205;
               $4209 = $4203 * 216.37467504308401;
               $4210 = $4203 * 0.83189033080770302;
               $4211 = $4205 * 0.83189033080770302;
               $4212 = +HEAPF64[$83>>3];
               $4213 = $4212 * 4400.0;
               $4214 = +HEAPF64[$84>>3];
               $4215 = $4213 * $4214;
               $4216 = $4207 * $4214;
               $4217 = $4209 * $4214;
               $4218 = $4217 - $4216;
               $4219 = $4212 * $4207;
               $4220 = $4219 + $4218;
               $4221 = $4209 * $4212;
               $4222 = $4221 + $4220;
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1028,$4222,-1);
               $4223 = HEAP8[$164>>0]|0;
               $4224 = ($4223<<24>>24)==(0);
               if ($4224) {
                break L1630;
               }
               $4225 = +HEAPF64[$84>>3];
               $4226 = $4211 * $4225;
               $4227 = $4210 * $4225;
               $4228 = $4227 - $4226;
               $4229 = +HEAPF64[$83>>3];
               $4230 = $4211 * $4229;
               $4231 = $4228 + $4230;
               $4232 = $4210 * $4229;
               $4233 = $4232 + $4231;
               $4234 = (+__Z5IKabsd($4233));
               $4235 = $4234 < 1.9999999999999999E-6;
               do {
                if ($4235) {
                 $4236 = +HEAPF64[$x1028>>3];
                 $4237 = $4208 * -8800.0;
                 $4238 = $4229 * $4229;
                 $4239 = $4237 * $4238;
                 $4240 = $4239 + 3179.0;
                 $4241 = $4206 * 2200.0;
                 $4242 = $4240 - $4241;
                 $4243 = $4204 * 2200.0;
                 $4244 = $4242 - $4243;
                 $4245 = $4204 * $4215;
                 $4246 = $4244 - $4245;
                 $4247 = $4206 * $4215;
                 $4248 = $4247 + $4246;
                 $4249 = $4208 * 4400.0;
                 $4250 = $4249 + $4248;
                 $4251 = $4250 * $4236;
                 $4252 = (+__Z5IKabsd($4251));
                 $4253 = $4252 < 1.9999999999999999E-6;
                 if (!($4253)) {
                  break;
                 }
                 $4254 = (+__Z5IKsqrd($4233));
                 $4255 = (+__Z5IKsqrd($4251));
                 $4256 = $4254 + $4255;
                 $4257 = $4256 + -1.0;
                 $4258 = (+__Z5IKabsd($4257));
                 $4259 = !($4258 <= 1.9999999999999999E-6);
                 if (!($4259)) {
                  break L1630;
                 }
                }
               } while(0);
               $4260 = +HEAPF64[$84>>3];
               $4261 = $4211 * $4260;
               $4262 = $4210 * $4260;
               $4263 = $4262 - $4261;
               $4264 = +HEAPF64[$83>>3];
               $4265 = $4211 * $4264;
               $4266 = $4263 + $4265;
               $4267 = $4210 * $4264;
               $4268 = $4267 + $4266;
               $4269 = +HEAPF64[$x1028>>3];
               $4270 = $4208 * -8800.0;
               $4271 = $4264 * $4264;
               $4272 = $4270 * $4271;
               $4273 = $4272 + 3179.0;
               $4274 = $4206 * 2200.0;
               $4275 = $4273 - $4274;
               $4276 = $4204 * 2200.0;
               $4277 = $4275 - $4276;
               $4278 = $4204 * $4215;
               $4279 = $4277 - $4278;
               $4280 = $4206 * $4215;
               $4281 = $4280 + $4279;
               $4282 = $4208 * 4400.0;
               $4283 = $4282 + $4281;
               $4284 = $4269 * $4283;
               $4285 = (+__Z7IKatan2dd($4268,$4284));
               $4286 = (+__Z5IKsind($4285));
               $4287 = (+__Z5IKcosd($4285));
               $4288 = $4285 > 3.14159265358979;
               do {
                if ($4288) {
                 $4289 = $4285 + -6.2831853071795898;
                 $4292 = $4289;
                } else {
                 $4290 = $4285 < -3.14159265358979;
                 if (!($4290)) {
                  $4292 = $4285;
                  break;
                 }
                 $4291 = $4285 + 6.2831853071795898;
                 $4292 = $4291;
                }
               } while(0);
               HEAP8[$4>>0] = 0;
               HEAP8[$5>>0] = -1;
               HEAPF64[$3>>3] = $4292;
               HEAPF64[$165>>3] = $4287;
               HEAPF64[$166>>3] = $4286;
               $4293 = +HEAPF64[$3>>3];
               $4294 = (+__Z5IKcosd($4293));
               $4295 = (+__Z5IKsind($4293));
               $4296 = +HEAPF64[$83>>3];
               $4297 = +HEAPF64[$45>>3];
               $4298 = $4296 * $4297;
               $4299 = +HEAPF64[$43>>3];
               $4300 = +HEAPF64[$84>>3];
               $4301 = $4299 * $4300;
               $4302 = $4297 * $4300;
               $4303 = $4296 * $4299;
               $4304 = $4294 * 0.063639610306789302;
               $4305 = $4295 * 0.70710678118654802;
               $4306 = $4295 * 0.77781745930520196;
               $4307 = $4294 * 0.70710678118654802;
               $4308 = $4294 * -0.84999999999999998;
               $4309 = $4307 * $4302;
               $4310 = $4307 * $4303;
               $4311 = -$4310;
               $4312 = $4311 - $4309;
               $4313 = $4307 * $4298;
               $4314 = $4312 - $4313;
               $4315 = $4307 * $4301;
               $4316 = $4315 + $4314;
               $4317 = $4305 * $4298;
               $4318 = $4317 + -0.84999999999999998;
               $4319 = -$4301;
               $4320 = $4305 * $4319;
               $4321 = $4318 + $4320;
               $4322 = $4305 * $4303;
               $4323 = $4322 + $4321;
               $4324 = $4305 * $4302;
               $4325 = $4324 + $4323;
               $4326 = $4306 * $4298;
               $4327 = $4326 + -0.93500000000000005;
               $4328 = $4304 * $4298;
               $4329 = $4328 + $4327;
               $4330 = $4306 * $4319;
               $4331 = $4329 + $4330;
               $4332 = $4304 * $4319;
               $4333 = $4332 + $4331;
               $4334 = $4306 * $4303;
               $4335 = $4334 + $4333;
               $4336 = $4304 * $4303;
               $4337 = $4336 + $4335;
               $4338 = $4304 * $4302;
               $4339 = $4338 + $4337;
               $4340 = $4306 * $4302;
               $4341 = $4340 + $4339;
               $4342 = (+__Z5IKabsd($4308));
               $4343 = $4342 > 5.0000000000000004E-6;
               if ($4343) {
                break L1630;
               }
               $4344 = $4295 * 0.84999999999999998;
               $4345 = $4303 * 0.70710678118654802;
               $4346 = $4344 - $4345;
               $4347 = $4302 * 0.70710678118654802;
               $4348 = $4346 - $4347;
               $4349 = $4298 * 0.70710678118654802;
               $4350 = $4348 - $4349;
               $4351 = $4301 * 0.70710678118654802;
               $4352 = $4351 + $4350;
               $4353 = (+__Z5IKabsd($4352));
               $4354 = $4353 > 5.0000000000000004E-6;
               if ($4354) {
                break L1630;
               }
               $4355 = (+__Z5IKabsd($4316));
               $4356 = $4355 > 5.0000000000000004E-6;
               if ($4356) {
                break L1630;
               }
               $4357 = (+__Z5IKabsd($4325));
               $4358 = $4357 > 5.0000000000000004E-6;
               if ($4358) {
                break L1630;
               }
               $4359 = (+__Z5IKabsd($4341));
               $4360 = $4359 > 5.0000000000000004E-6;
               if ($4360) {
                break L1630;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L1630;
              }
              $4135 = (+__Z5IKabsd($4125));
              $4136 = (+__Z5IKabsd($4123));
              $4137 = $4135 + $4136;
              $4138 = (+__Z5IKabsd($4137));
              $4139 = $4138 < 9.9999999999999995E-7;
              if (!($4139)) {
               break L1630;
              }
              $4140 = (+__Z5IKabsd(0.72250000000000003));
              $4141 = $4140 < 9.9999999999999995E-7;
              if (!($4141)) {
               break L1630;
              }
              $4142 = (+__Z5IKabsd(0.0));
              $4143 = $4142 < 9.9999999999999995E-7;
              if (!($4143)) {
               break L1630;
              }
              $4144 = (+__Z5IKabsd(-0.84999999999999998));
              $4145 = $4144 < 9.9999999999999995E-7;
              if (!($4145)) {
               break L1630;
              }
              $4146 = (+__Z5IKabsd(-0.93500000000000005));
              $4147 = $4146 < 9.9999999999999995E-7;
              if (!($4147)) {
               break L1630;
              }
              HEAPF64[$47>>3] = 0.0;
              HEAPF64[$7>>3] = 0.0;
              HEAPF64[$76>>3] = 0.0;
              HEAPF64[$75>>3] = 1.0;
              HEAPF64[$61>>3] = 0.0;
              HEAPF64[$62>>3] = 0.0;
              HEAPF64[$64>>3] = 0.0;
              HEAPF64[$65>>3] = 0.0;
              HEAPF64[$67>>3] = 0.0;
              HEAPF64[$68>>3] = 0.0;
              HEAPF64[$70>>3] = 0.0;
              HEAPF64[$71>>3] = 0.0;
              HEAPF64[$24>>3] = 0.0;
              ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
              HEAPF64[$23>>3] = 1.0;
              HEAPF64[$22>>3] = 0.0;
              HEAPF64[$43>>3] = 0.0;
              HEAPF64[$45>>3] = 0.0;
              HEAPF64[$66>>3] = 0.0;
              HEAPF64[$69>>3] = 0.0;
              HEAPF64[$72>>3] = 0.0;
              $4148 = (+__Z5IKabsd(1.0));
              $4149 = $4148 < 1.0E-8;
              if ($4149) {
               break L1630;
              }
              HEAPF64[$op121>>3] = 1.0;
              HEAPF64[$159>>3] = 0.0;
              HEAPF64[$160>>3] = -1.0;
              __ZN8IKSolver10polyroots2EPdS0_Ri($op121,$zeror122,$numroots123);
              $4150 = HEAP32[$numroots123>>2]|0;
              $4151 = ($4150|0)>(0);
              if (!($4151)) {
               HEAP16[$j5valid132>>1] = 257;
               HEAP8[$6>>0] = 2;
               break L1630;
              }
              $4152 = HEAP32[$numroots123>>2]|0;
              $4153 = ($4152|0)>(1);
              $numsolutions128$01415 = 0;
              while(1) {
               $4154 = (($zeror122) + ($numsolutions128$01415<<3)|0);
               $4155 = +HEAPF64[$4154>>3];
               $4156 = (+Math_atan((+$4155)));
               $4157 = $4156 * 2.0;
               $4158 = $4157 + 6.2831853071795898;
               $4159 = $4157 > 3.14159265358979;
               $4160 = (($j5array124) + ($numsolutions128$01415<<3)|0);
               HEAPF64[$4160>>3] = $4157;
               do {
                if ($4159) {
                 $4161 = $4157 + -6.2831853071795898;
                 HEAPF64[$4160>>3] = $4161;
                } else {
                 $4162 = $4157 < -3.14159265358979;
                 if (!($4162)) {
                  break;
                 }
                 HEAPF64[$4160>>3] = $4158;
                }
               } while(0);
               $4163 = +HEAPF64[$4160>>3];
               $4164 = (+__Z5IKsind($4163));
               $4165 = (($sj5array126) + ($numsolutions128$01415<<3)|0);
               HEAPF64[$4165>>3] = $4164;
               $4166 = +HEAPF64[$4160>>3];
               $4167 = (+__Z5IKcosd($4166));
               $4168 = (($cj5array125) + ($numsolutions128$01415<<3)|0);
               HEAPF64[$4168>>3] = $4167;
               $4169 = (($numsolutions128$01415) + 1)|0;
               $4170 = ($4169|0)<($4152|0);
               if ($4170) {
                $numsolutions128$01415 = $4169;
               } else {
                break;
               }
              }
              $$1888 = $4153 ? $4152 : 1;
              HEAP16[$j5valid132>>1] = 257;
              HEAP8[$6>>0] = 2;
              $ij5133$01424 = 0;
              while(1) {
               $4171 = (($j5valid132) + ($ij5133$01424)|0);
               $4172 = HEAP8[$4171>>0]|0;
               $4173 = ($4172<<24>>24)==(0);
               if (!($4173)) {
                $4174 = (($j5array124) + ($ij5133$01424<<3)|0);
                $4175 = +HEAPF64[$4174>>3];
                HEAPF64[$3>>3] = $4175;
                $4176 = (($cj5array125) + ($ij5133$01424<<3)|0);
                $4177 = +HEAPF64[$4176>>3];
                HEAPF64[$161>>3] = $4177;
                $4178 = (($sj5array126) + ($ij5133$01424<<3)|0);
                $4179 = +HEAPF64[$4178>>3];
                HEAPF64[$162>>3] = $4179;
                $4180 = +HEAPF64[$3>>3];
                $4181 = $4180 * 0.5;
                $4182 = (+__Z5IKtand($4181));
                HEAPF64[$163>>3] = $4182;
                $4183 = $ij5133$01424&255;
                HEAP8[$4>>0] = $4183;
                HEAP8[$5>>0] = -1;
                $iij5134$01420 = (($ij5133$01424) + 1)|0;
                $4184 = ($iij5134$01420|0)<($$1888|0);
                L2137: do {
                 if ($4184) {
                  $iij5134$01421 = $iij5134$01420;
                  L2138: while(1) {
                   $4185 = (($j5valid132) + ($iij5134$01421)|0);
                   $4186 = HEAP8[$4185>>0]|0;
                   $4187 = ($4186<<24>>24)==(0);
                   do {
                    if (!($4187)) {
                     $4189 = +HEAPF64[$4176>>3];
                     $4190 = (($cj5array125) + ($iij5134$01421<<3)|0);
                     $4191 = +HEAPF64[$4190>>3];
                     $4192 = $4189 - $4191;
                     $4193 = (+__Z5IKabsd($4192));
                     $4194 = $4193 < 9.9999999999999995E-7;
                     if (!($4194)) {
                      break;
                     }
                     $4195 = +HEAPF64[$4178>>3];
                     $4196 = (($sj5array126) + ($iij5134$01421<<3)|0);
                     $4197 = +HEAPF64[$4196>>3];
                     $4198 = $4195 - $4197;
                     $4199 = (+__Z5IKabsd($4198));
                     $4200 = $4199 < 9.9999999999999995E-7;
                     if ($4200) {
                      $$lcssa2053 = $4185;$iij5134$01421$lcssa = $iij5134$01421;
                      break L2138;
                     }
                    }
                   } while(0);
                   $iij5134$0 = (($iij5134$01421) + 1)|0;
                   $4188 = ($iij5134$0|0)<($$1888|0);
                   if ($4188) {
                    $iij5134$01421 = $iij5134$0;
                   } else {
                    break L2137;
                   }
                  }
                  HEAP8[$$lcssa2053>>0] = 0;
                  $4201 = $iij5134$01421$lcssa&255;
                  HEAP8[$5>>0] = $4201;
                 }
                } while(0);
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
               $4202 = (($ij5133$01424) + 1)|0;
               $exitcond1775 = ($4202|0)==($$1888|0);
               if ($exitcond1775) {
                break L1630;
               } else {
                $ij5133$01424 = $4202;
               }
              }
             }
            } while(0);
            $4361 = +HEAPF64[$84>>3];
            $4362 = $4361 * 0.70710678118654802;
            $4363 = +HEAPF64[$83>>3];
            $4364 = $4363 * 0.70710678118654802;
            $4365 = +HEAPF64[$45>>3];
            $4366 = $4365 * $4364;
            $4367 = +HEAPF64[$43>>3];
            $4368 = $4362 * $4367;
            $4369 = $4364 * $4367;
            $4370 = $4368 + $4369;
            $4371 = $4362 * $4365;
            $4372 = $4371 + $4370;
            $4373 = +HEAPF64[$22>>3];
            $4374 = $4373 + -3.14159265358979;
            $4375 = (+__Z5IKabsd($4374));
            $4376 = $4375 + 3.14159265358979;
            $4377 = (+__Z6IKfmoddd($4376,6.2831853071795898));
            $4378 = $4377 + -3.14159265358979;
            $4379 = $4372 - $4366;
            $4380 = $4366 - $4372;
            $4381 = (+__Z5IKabsd($4378));
            $4382 = $4381 < 9.9999999999999995E-7;
            do {
             if ($4382) {
              $4383 = $4367 * $4367;
              $4384 = 0.72250000000000003 - $4383;
              $4385 = $4365 * $4365;
              $4386 = $4384 - $4385;
              $4387 = (+__Z5IKabsd($4386));
              $4388 = $4387 < 9.9999999999999995E-7;
              if (!($4388)) {
               break;
              }
              $4389 = (+__Z5IKabsd($4379));
              $4390 = $4389 < 9.9999999999999995E-7;
              if (!($4390)) {
               break;
              }
              $4391 = (+__Z5IKabsd($4380));
              $4392 = $4391 < 9.9999999999999995E-7;
              if (!($4392)) {
               break;
              }
              $4393 = -$4365;
              HEAPF64[$47>>3] = 0.0;
              HEAPF64[$7>>3] = 0.0;
              HEAPF64[$76>>3] = 0.0;
              HEAPF64[$75>>3] = 1.0;
              $4394 = +HEAPF64[$43>>3];
              $4395 = $4394 * $4394;
              $4396 = +HEAPF64[$45>>3];
              $4397 = $4396 * $4396;
              $4398 = $4395 + $4397;
              HEAPF64[$60>>3] = $4398;
              $4399 = +HEAPF64[$43>>3];
              $4400 = +HEAPF64[$26>>3];
              $4401 = $4399 * $4400;
              $4402 = +HEAPF64[$45>>3];
              $4403 = +HEAPF64[$32>>3];
              $4404 = $4402 * $4403;
              $4405 = $4401 + $4404;
              HEAPF64[$61>>3] = $4405;
              $4406 = +HEAPF64[$43>>3];
              $4407 = +HEAPF64[$28>>3];
              $4408 = $4406 * $4407;
              $4409 = +HEAPF64[$45>>3];
              $4410 = +HEAPF64[$34>>3];
              $4411 = $4409 * $4410;
              $4412 = $4408 + $4411;
              HEAPF64[$62>>3] = $4412;
              $4413 = +HEAPF64[$43>>3];
              $4414 = +HEAPF64[$30>>3];
              $4415 = $4413 * $4414;
              $4416 = +HEAPF64[$45>>3];
              $4417 = +HEAPF64[$36>>3];
              $4418 = $4416 * $4417;
              $4419 = $4415 + $4418;
              HEAPF64[$63>>3] = $4419;
              $4420 = +HEAPF64[$38>>3];
              $4421 = $4420 * $4393;
              HEAPF64[$64>>3] = $4421;
              $4422 = +HEAPF64[$43>>3];
              $4423 = +HEAPF64[$38>>3];
              $4424 = $4422 * $4423;
              HEAPF64[$65>>3] = $4424;
              $4425 = +HEAPF64[$40>>3];
              $4426 = $4425 * $4393;
              HEAPF64[$67>>3] = $4426;
              $4427 = +HEAPF64[$43>>3];
              $4428 = +HEAPF64[$40>>3];
              $4429 = $4427 * $4428;
              HEAPF64[$68>>3] = $4429;
              $4430 = +HEAPF64[$42>>3];
              $4431 = $4430 * $4393;
              HEAPF64[$70>>3] = $4431;
              $4432 = +HEAPF64[$43>>3];
              $4433 = +HEAPF64[$42>>3];
              $4434 = $4432 * $4433;
              HEAPF64[$71>>3] = $4434;
              HEAPF64[$24>>3] = 0.0;
              HEAPF64[$23>>3] = -1.0;
              HEAPF64[$22>>3] = 3.14159265358979;
              $4435 = +HEAPF64[$83>>3];
              $4436 = +HEAPF64[$43>>3];
              $4437 = $4435 * $4436;
              $4438 = +HEAPF64[$45>>3];
              $4439 = -$4438;
              $4440 = $4435 * $4439;
              $4441 = $4440 - $4437;
              $4442 = +HEAPF64[$84>>3];
              $4443 = $4442 * $4439;
              $4444 = $4441 + $4443;
              $4445 = $4436 * $4442;
              $4446 = $4445 + $4444;
              $4447 = (+__Z5IKabsd($4446));
              $4448 = $4447 < 9.9999999999999995E-7;
              if (!($4448)) {
               HEAP8[$6>>0] = 1;
               $4517 = +HEAPF64[$45>>3];
               $4518 = $4517 * $4517;
               $4519 = +HEAPF64[$43>>3];
               $4520 = $4519 * $4519;
               $4521 = $4519 * 216.37467504308401;
               $4522 = $4517 * 216.37467504308401;
               $4523 = $4517 * $4519;
               $4524 = $4517 * 0.83189033080770302;
               $4525 = $4519 * 0.83189033080770302;
               $4526 = +HEAPF64[$83>>3];
               $4527 = $4526 * 4400.0;
               $4528 = +HEAPF64[$84>>3];
               $4529 = $4527 * $4528;
               $4530 = -$4526;
               $4531 = $4522 * $4530;
               $4532 = $4521 * $4530;
               $4533 = $4531 + $4532;
               $4534 = $4522 * $4528;
               $4535 = $4533 - $4534;
               $4536 = $4521 * $4528;
               $4537 = $4536 + $4535;
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1053,$4537,-1);
               $4538 = HEAP8[$172>>0]|0;
               $4539 = ($4538<<24>>24)==(0);
               if ($4539) {
                break L1630;
               }
               $4540 = +HEAPF64[$84>>3];
               $4541 = $4525 * $4540;
               $4542 = $4524 * $4540;
               $4543 = $4542 - $4541;
               $4544 = +HEAPF64[$83>>3];
               $4545 = $4525 * $4544;
               $4546 = $4543 + $4545;
               $4547 = $4524 * $4544;
               $4548 = $4547 + $4546;
               $4549 = (+__Z5IKabsd($4548));
               $4550 = $4549 < 1.9999999999999999E-6;
               do {
                if ($4550) {
                 $4551 = +HEAPF64[$x1053>>3];
                 $4552 = $4520 * 2200.0;
                 $4553 = 3179.0 - $4552;
                 $4554 = $4518 * 2200.0;
                 $4555 = $4553 - $4554;
                 $4556 = $4523 * -8800.0;
                 $4557 = $4544 * $4544;
                 $4558 = $4556 * $4557;
                 $4559 = $4555 + $4558;
                 $4560 = $4518 * $4529;
                 $4561 = $4559 - $4560;
                 $4562 = $4523 * 4400.0;
                 $4563 = $4562 + $4561;
                 $4564 = $4520 * $4529;
                 $4565 = $4564 + $4563;
                 $4566 = $4565 * $4551;
                 $4567 = (+__Z5IKabsd($4566));
                 $4568 = $4567 < 1.9999999999999999E-6;
                 if (!($4568)) {
                  break;
                 }
                 $4569 = (+__Z5IKsqrd($4548));
                 $4570 = (+__Z5IKsqrd($4566));
                 $4571 = $4569 + $4570;
                 $4572 = $4571 + -1.0;
                 $4573 = (+__Z5IKabsd($4572));
                 $4574 = !($4573 <= 1.9999999999999999E-6);
                 if (!($4574)) {
                  break L1630;
                 }
                }
               } while(0);
               $4575 = +HEAPF64[$84>>3];
               $4576 = $4525 * $4575;
               $4577 = $4524 * $4575;
               $4578 = $4577 - $4576;
               $4579 = +HEAPF64[$83>>3];
               $4580 = $4525 * $4579;
               $4581 = $4578 + $4580;
               $4582 = $4524 * $4579;
               $4583 = $4582 + $4581;
               $4584 = +HEAPF64[$x1053>>3];
               $4585 = $4520 * 2200.0;
               $4586 = 3179.0 - $4585;
               $4587 = $4518 * 2200.0;
               $4588 = $4586 - $4587;
               $4589 = $4523 * -8800.0;
               $4590 = $4579 * $4579;
               $4591 = $4589 * $4590;
               $4592 = $4588 + $4591;
               $4593 = $4518 * $4529;
               $4594 = $4592 - $4593;
               $4595 = $4523 * 4400.0;
               $4596 = $4595 + $4594;
               $4597 = $4520 * $4529;
               $4598 = $4597 + $4596;
               $4599 = $4584 * $4598;
               $4600 = (+__Z7IKatan2dd($4583,$4599));
               $4601 = (+__Z5IKsind($4600));
               $4602 = (+__Z5IKcosd($4600));
               $4603 = $4600 > 3.14159265358979;
               do {
                if ($4603) {
                 $4604 = $4600 + -6.2831853071795898;
                 $4607 = $4604;
                } else {
                 $4605 = $4600 < -3.14159265358979;
                 if (!($4605)) {
                  $4607 = $4600;
                  break;
                 }
                 $4606 = $4600 + 6.2831853071795898;
                 $4607 = $4606;
                }
               } while(0);
               HEAP8[$4>>0] = 0;
               HEAP8[$5>>0] = -1;
               HEAPF64[$3>>3] = $4607;
               HEAPF64[$173>>3] = $4602;
               HEAPF64[$174>>3] = $4601;
               $4608 = +HEAPF64[$3>>3];
               $4609 = (+__Z5IKcosd($4608));
               $4610 = (+__Z5IKsind($4608));
               $4611 = +HEAPF64[$83>>3];
               $4612 = +HEAPF64[$45>>3];
               $4613 = $4611 * $4612;
               $4614 = +HEAPF64[$43>>3];
               $4615 = +HEAPF64[$84>>3];
               $4616 = $4614 * $4615;
               $4617 = $4612 * $4615;
               $4618 = $4611 * $4614;
               $4619 = $4609 * 0.063639610306789302;
               $4620 = $4610 * 0.70710678118654802;
               $4621 = $4610 * 0.77781745930520196;
               $4622 = $4609 * 0.70710678118654802;
               $4623 = $4609 * -0.84999999999999998;
               $4624 = $4622 * $4613;
               $4625 = -$4616;
               $4626 = $4622 * $4625;
               $4627 = $4624 + $4626;
               $4628 = $4622 * $4618;
               $4629 = $4628 + $4627;
               $4630 = $4622 * $4617;
               $4631 = $4630 + $4629;
               $4632 = $4620 * $4613;
               $4633 = $4632 + -0.84999999999999998;
               $4634 = $4620 * $4625;
               $4635 = $4633 + $4634;
               $4636 = $4620 * $4618;
               $4637 = $4636 + $4635;
               $4638 = $4620 * $4617;
               $4639 = $4638 + $4637;
               $4640 = $4621 * $4613;
               $4641 = $4640 + -0.93500000000000005;
               $4642 = $4619 * $4618;
               $4643 = $4641 - $4642;
               $4644 = $4619 * $4617;
               $4645 = $4643 - $4644;
               $4646 = $4619 * $4616;
               $4647 = $4646 + $4645;
               $4648 = $4621 * $4625;
               $4649 = $4648 + $4647;
               $4650 = $4619 * $4613;
               $4651 = $4649 - $4650;
               $4652 = $4621 * $4618;
               $4653 = $4652 + $4651;
               $4654 = $4621 * $4617;
               $4655 = $4654 + $4653;
               $4656 = (+__Z5IKabsd($4623));
               $4657 = $4656 > 5.0000000000000004E-6;
               if ($4657) {
                break L1630;
               }
               $4658 = $4613 * 0.70710678118654802;
               $4659 = $4617 * -0.70710678118654802;
               $4660 = $4659 - $4658;
               $4661 = $4618 * 0.70710678118654802;
               $4662 = $4660 - $4661;
               $4663 = $4610 * 0.84999999999999998;
               $4664 = $4663 + $4662;
               $4665 = $4616 * 0.70710678118654802;
               $4666 = $4665 + $4664;
               $4667 = (+__Z5IKabsd($4666));
               $4668 = $4667 > 5.0000000000000004E-6;
               if ($4668) {
                break L1630;
               }
               $4669 = (+__Z5IKabsd($4631));
               $4670 = $4669 > 5.0000000000000004E-6;
               if ($4670) {
                break L1630;
               }
               $4671 = (+__Z5IKabsd($4639));
               $4672 = $4671 > 5.0000000000000004E-6;
               if ($4672) {
                break L1630;
               }
               $4673 = (+__Z5IKabsd($4655));
               $4674 = $4673 > 5.0000000000000004E-6;
               if ($4674) {
                break L1630;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               break L1630;
              }
              $4449 = (+__Z5IKabsd($4436));
              $4450 = (+__Z5IKabsd($4438));
              $4451 = $4449 + $4450;
              $4452 = (+__Z5IKabsd($4451));
              $4453 = $4452 < 9.9999999999999995E-7;
              if (!($4453)) {
               break L1630;
              }
              $4454 = (+__Z5IKabsd(0.72250000000000003));
              $4455 = $4454 < 9.9999999999999995E-7;
              if (!($4455)) {
               break L1630;
              }
              $4456 = (+__Z5IKabsd(0.0));
              $4457 = $4456 < 9.9999999999999995E-7;
              if (!($4457)) {
               break L1630;
              }
              $4458 = (+__Z5IKabsd(-0.84999999999999998));
              $4459 = $4458 < 9.9999999999999995E-7;
              if (!($4459)) {
               break L1630;
              }
              $4460 = (+__Z5IKabsd(-0.93500000000000005));
              $4461 = $4460 < 9.9999999999999995E-7;
              if (!($4461)) {
               break L1630;
              }
              HEAPF64[$47>>3] = 0.0;
              HEAPF64[$7>>3] = 0.0;
              HEAPF64[$76>>3] = 0.0;
              HEAPF64[$75>>3] = 1.0;
              HEAPF64[$61>>3] = 0.0;
              HEAPF64[$62>>3] = 0.0;
              HEAPF64[$64>>3] = 0.0;
              HEAPF64[$65>>3] = 0.0;
              HEAPF64[$67>>3] = 0.0;
              HEAPF64[$68>>3] = 0.0;
              HEAPF64[$70>>3] = 0.0;
              HEAPF64[$71>>3] = 0.0;
              HEAPF64[$24>>3] = 0.0;
              ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
              HEAPF64[$23>>3] = -1.0;
              HEAPF64[$22>>3] = 3.14159265358979;
              HEAPF64[$43>>3] = 0.0;
              HEAPF64[$45>>3] = 0.0;
              HEAPF64[$66>>3] = 0.0;
              HEAPF64[$69>>3] = 0.0;
              HEAPF64[$72>>3] = 0.0;
              $4462 = (+__Z5IKabsd(1.0));
              $4463 = $4462 < 1.0E-8;
              if ($4463) {
               break L1630;
              }
              HEAPF64[$op149>>3] = 1.0;
              HEAPF64[$167>>3] = 0.0;
              HEAPF64[$168>>3] = -1.0;
              __ZN8IKSolver10polyroots2EPdS0_Ri($op149,$zeror150,$numroots151);
              $4464 = HEAP32[$numroots151>>2]|0;
              $4465 = ($4464|0)>(0);
              if (!($4465)) {
               HEAP16[$j5valid160>>1] = 257;
               HEAP8[$6>>0] = 2;
               break L1630;
              }
              $4466 = HEAP32[$numroots151>>2]|0;
              $4467 = ($4466|0)>(1);
              $numsolutions156$01395 = 0;
              while(1) {
               $4468 = (($zeror150) + ($numsolutions156$01395<<3)|0);
               $4469 = +HEAPF64[$4468>>3];
               $4470 = (+Math_atan((+$4469)));
               $4471 = $4470 * 2.0;
               $4472 = $4471 + 6.2831853071795898;
               $4473 = $4471 > 3.14159265358979;
               $4474 = (($j5array152) + ($numsolutions156$01395<<3)|0);
               HEAPF64[$4474>>3] = $4471;
               do {
                if ($4473) {
                 $4475 = $4471 + -6.2831853071795898;
                 HEAPF64[$4474>>3] = $4475;
                } else {
                 $4476 = $4471 < -3.14159265358979;
                 if (!($4476)) {
                  break;
                 }
                 HEAPF64[$4474>>3] = $4472;
                }
               } while(0);
               $4477 = +HEAPF64[$4474>>3];
               $4478 = (+__Z5IKsind($4477));
               $4479 = (($sj5array154) + ($numsolutions156$01395<<3)|0);
               HEAPF64[$4479>>3] = $4478;
               $4480 = +HEAPF64[$4474>>3];
               $4481 = (+__Z5IKcosd($4480));
               $4482 = (($cj5array153) + ($numsolutions156$01395<<3)|0);
               HEAPF64[$4482>>3] = $4481;
               $4483 = (($numsolutions156$01395) + 1)|0;
               $4484 = ($4483|0)<($4466|0);
               if ($4484) {
                $numsolutions156$01395 = $4483;
               } else {
                break;
               }
              }
              $$1889 = $4467 ? $4466 : 1;
              HEAP16[$j5valid160>>1] = 257;
              HEAP8[$6>>0] = 2;
              $ij5161$01404 = 0;
              while(1) {
               $4485 = (($j5valid160) + ($ij5161$01404)|0);
               $4486 = HEAP8[$4485>>0]|0;
               $4487 = ($4486<<24>>24)==(0);
               if (!($4487)) {
                $4488 = (($j5array152) + ($ij5161$01404<<3)|0);
                $4489 = +HEAPF64[$4488>>3];
                HEAPF64[$3>>3] = $4489;
                $4490 = (($cj5array153) + ($ij5161$01404<<3)|0);
                $4491 = +HEAPF64[$4490>>3];
                HEAPF64[$169>>3] = $4491;
                $4492 = (($sj5array154) + ($ij5161$01404<<3)|0);
                $4493 = +HEAPF64[$4492>>3];
                HEAPF64[$170>>3] = $4493;
                $4494 = +HEAPF64[$3>>3];
                $4495 = $4494 * 0.5;
                $4496 = (+__Z5IKtand($4495));
                HEAPF64[$171>>3] = $4496;
                $4497 = $ij5161$01404&255;
                HEAP8[$4>>0] = $4497;
                HEAP8[$5>>0] = -1;
                $iij5162$01400 = (($ij5161$01404) + 1)|0;
                $4498 = ($iij5162$01400|0)<($$1889|0);
                L2192: do {
                 if ($4498) {
                  $iij5162$01401 = $iij5162$01400;
                  L2193: while(1) {
                   $4499 = (($j5valid160) + ($iij5162$01401)|0);
                   $4500 = HEAP8[$4499>>0]|0;
                   $4501 = ($4500<<24>>24)==(0);
                   do {
                    if (!($4501)) {
                     $4503 = +HEAPF64[$4490>>3];
                     $4504 = (($cj5array153) + ($iij5162$01401<<3)|0);
                     $4505 = +HEAPF64[$4504>>3];
                     $4506 = $4503 - $4505;
                     $4507 = (+__Z5IKabsd($4506));
                     $4508 = $4507 < 9.9999999999999995E-7;
                     if (!($4508)) {
                      break;
                     }
                     $4509 = +HEAPF64[$4492>>3];
                     $4510 = (($sj5array154) + ($iij5162$01401<<3)|0);
                     $4511 = +HEAPF64[$4510>>3];
                     $4512 = $4509 - $4511;
                     $4513 = (+__Z5IKabsd($4512));
                     $4514 = $4513 < 9.9999999999999995E-7;
                     if ($4514) {
                      $$lcssa2050 = $4499;$iij5162$01401$lcssa = $iij5162$01401;
                      break L2193;
                     }
                    }
                   } while(0);
                   $iij5162$0 = (($iij5162$01401) + 1)|0;
                   $4502 = ($iij5162$0|0)<($$1889|0);
                   if ($4502) {
                    $iij5162$01401 = $iij5162$0;
                   } else {
                    break L2192;
                   }
                  }
                  HEAP8[$$lcssa2050>>0] = 0;
                  $4515 = $iij5162$01401$lcssa&255;
                  HEAP8[$5>>0] = $4515;
                 }
                } while(0);
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
               $4516 = (($ij5161$01404) + 1)|0;
               $exitcond1772 = ($4516|0)==($$1889|0);
               if ($exitcond1772) {
                break L1630;
               } else {
                $ij5161$01404 = $4516;
               }
              }
             }
            } while(0);
            $4675 = +HEAPF64[$84>>3];
            $4676 = $4675 * 0.70710678118654802;
            $4677 = +HEAPF64[$83>>3];
            $4678 = $4677 * 0.70710678118654802;
            $4679 = +HEAPF64[$45>>3];
            $4680 = $4676 * $4679;
            $4681 = $4679 * $4678;
            $4682 = $4680 - $4681;
            $4683 = +HEAPF64[$43>>3];
            $4684 = $4676 * $4683;
            $4685 = $4682 + $4684;
            $4686 = $4678 * $4683;
            $4687 = $4686 + $4685;
            $4688 = +HEAPF64[$22>>3];
            $4689 = $4688 + -1.5707963267949001;
            $4690 = (+__Z5IKabsd($4689));
            $4691 = $4690 + 3.14159265358979;
            $4692 = (+__Z6IKfmoddd($4691,6.2831853071795898));
            $4693 = $4692 + -3.14159265358979;
            $4694 = (+__Z5IKabsd($4693));
            $4695 = $4694 < 9.9999999999999995E-7;
            do {
             if ($4695) {
              $4696 = $4683 * $4683;
              $4697 = 0.72250000000000003 - $4696;
              $4698 = $4679 * $4679;
              $4699 = $4697 - $4698;
              $4700 = (+__Z5IKabsd($4699));
              $4701 = $4700 < 9.9999999999999995E-7;
              if (!($4701)) {
               break;
              }
              $4702 = (+__Z5IKabsd($4687));
              $4703 = $4702 < 9.9999999999999995E-7;
              if (!($4703)) {
               break;
              }
              HEAP16[$j5valid176>>1] = 0;
              HEAP8[$6>>0] = 2;
              $4704 = +HEAPF64[$45>>3];
              $4705 = $4704 * 0.83189033080770302;
              $4706 = +HEAPF64[$43>>3];
              $4707 = $4706 * 0.83189033080770302;
              $4708 = +HEAPF64[$84>>3];
              $4709 = $4708 * $4707;
              $4710 = +HEAPF64[$83>>3];
              $4711 = $4705 * $4710;
              $4712 = $4711 - $4709;
              $4713 = $4707 * $4710;
              $4714 = $4713 + $4712;
              $4715 = $4705 * $4708;
              $4716 = $4715 + $4714;
              HEAPF64[$sj5array175>>3] = $4716;
              $4717 = !($4716 >= -1.0000020000000001);
              $4718 = !($4716 <= 1.0000020000000001);
              $or$cond172 = $4717 | $4718;
              do {
               if ($or$cond172) {
                $4728 = (__Z13__DOUBLE_BITSd($4716)|0);
                $4729 = tempRet0;
                $4730 = $4729 & 2147483647;
                $4731 = ($4730>>>0)>(2146435072);
                $4732 = ($4728>>>0)>(0);
                $4733 = ($4730|0)==(2146435072);
                $4734 = $4733 & $4732;
                $4735 = $4731 | $4734;
                if (!($4735)) {
                 $ij5177$01386 = 0;
                 break;
                }
                HEAP8[$j5valid176>>0] = 1;
                HEAPF64[$cj5array174>>3] = 1.0;
                HEAPF64[$sj5array175>>3] = 0.0;
                HEAPF64[$j5array173>>3] = 0.0;
                $ij5177$01386 = 0;
               } else {
                HEAP8[$175>>0] = 1;
                HEAP8[$j5valid176>>0] = 1;
                $4719 = +HEAPF64[$sj5array175>>3];
                $4720 = (+__Z6IKasind($4719));
                HEAPF64[$j5array173>>3] = $4720;
                $4721 = (+__Z5IKcosd($4720));
                HEAPF64[$cj5array174>>3] = $4721;
                $4722 = +HEAPF64[$sj5array175>>3];
                HEAPF64[$176>>3] = $4722;
                $4723 = +HEAPF64[$j5array173>>3];
                $4724 = $4723 > 0.0;
                $$v76 = $4724 ? 3.14159265358979 : -3.14159265358979;
                $4725 = $$v76 - $4723;
                HEAPF64[$177>>3] = $4725;
                $4726 = +HEAPF64[$cj5array174>>3];
                $4727 = -$4726;
                HEAPF64[$178>>3] = $4727;
                $ij5177$01386 = 0;
               }
              } while(0);
              while(1) {
               $4736 = (($j5valid176) + ($ij5177$01386)|0);
               $4737 = HEAP8[$4736>>0]|0;
               $4738 = ($4737<<24>>24)==(0);
               do {
                if (!($4738)) {
                 $4739 = $ij5177$01386&255;
                 HEAP8[$4>>0] = $4739;
                 HEAP8[$5>>0] = -1;
                 $iij5178$01382 = (($ij5177$01386) + 1)|0;
                 $4740 = ($iij5178$01382|0)<(2);
                 do {
                  if ($4740) {
                   $4741 = (($sj5array175) + ($ij5177$01386<<3)|0);
                   $4742 = (($j5valid176) + ($iij5178$01382)|0);
                   $4743 = HEAP8[$4742>>0]|0;
                   $4744 = ($4743<<24>>24)==(0);
                   if ($4744) {
                    break;
                   }
                   $4745 = (($cj5array174) + ($ij5177$01386<<3)|0);
                   $4746 = +HEAPF64[$4745>>3];
                   $4747 = (($cj5array174) + ($iij5178$01382<<3)|0);
                   $4748 = +HEAPF64[$4747>>3];
                   $4749 = $4746 - $4748;
                   $4750 = (+__Z5IKabsd($4749));
                   $4751 = $4750 < 9.9999999999999995E-7;
                   if (!($4751)) {
                    break;
                   }
                   $4752 = +HEAPF64[$4741>>3];
                   $4753 = (($sj5array175) + ($iij5178$01382<<3)|0);
                   $4754 = +HEAPF64[$4753>>3];
                   $4755 = $4752 - $4754;
                   $4756 = (+__Z5IKabsd($4755));
                   $4757 = $4756 < 9.9999999999999995E-7;
                   if (!($4757)) {
                    break;
                   }
                   HEAP8[$4742>>0] = 0;
                   $4758 = $iij5178$01382&255;
                   HEAP8[$5>>0] = $4758;
                  }
                 } while(0);
                 $4759 = (($j5array173) + ($ij5177$01386<<3)|0);
                 $4760 = +HEAPF64[$4759>>3];
                 HEAPF64[$3>>3] = $4760;
                 $4761 = (($cj5array174) + ($ij5177$01386<<3)|0);
                 $4762 = +HEAPF64[$4761>>3];
                 HEAPF64[$179>>3] = $4762;
                 $4763 = (($sj5array175) + ($ij5177$01386<<3)|0);
                 $4764 = +HEAPF64[$4763>>3];
                 HEAPF64[$180>>3] = $4764;
                 $4765 = +HEAPF64[$3>>3];
                 $4766 = (+__Z5IKcosd($4765));
                 $4767 = (+__Z5IKsind($4765));
                 $4768 = +HEAPF64[$83>>3];
                 $4769 = +HEAPF64[$43>>3];
                 $4770 = $4768 * $4769;
                 $4771 = +HEAPF64[$45>>3];
                 $4772 = $4768 * $4771;
                 $4773 = +HEAPF64[$84>>3];
                 $4774 = $4769 * $4773;
                 $4775 = $4771 * $4773;
                 $4776 = $4767 * 0.77781745930520196;
                 $4777 = $4767 * 0.70710678118654802;
                 $4778 = $4766 * 0.70710678118654802;
                 $4779 = $4766 * -0.84999999999999998;
                 $4780 = -$4774;
                 $4781 = $4777 * $4775;
                 $4782 = $4781 + -0.84999999999999998;
                 $4783 = $4777 * $4780;
                 $4784 = $4783 + $4782;
                 $4785 = $4777 * $4770;
                 $4786 = $4785 + $4784;
                 $4787 = $4777 * $4772;
                 $4788 = $4787 + $4786;
                 $4789 = $4776 * $4775;
                 $4790 = $4789 + -0.93500000000000005;
                 $4791 = $4770 * 0.063639610306789302;
                 $4792 = $4790 - $4791;
                 $4793 = $4774 * 0.063639610306789302;
                 $4794 = $4792 - $4793;
                 $4795 = $4775 * 0.063639610306789302;
                 $4796 = $4794 - $4795;
                 $4797 = $4776 * $4780;
                 $4798 = $4797 + $4796;
                 $4799 = $4776 * $4770;
                 $4800 = $4799 + $4798;
                 $4801 = $4772 * 0.063639610306789302;
                 $4802 = $4801 + $4800;
                 $4803 = $4776 * $4772;
                 $4804 = $4803 + $4802;
                 $4805 = (+__Z5IKabsd($4779));
                 $4806 = $4805 > 5.0000000000000004E-6;
                 if ($4806) {
                  break;
                 }
                 $4807 = $4778 * $4775;
                 $4808 = $4778 * $4780;
                 $4809 = $4807 + $4808;
                 $4810 = $4778 * $4770;
                 $4811 = $4810 + $4809;
                 $4812 = $4778 * $4772;
                 $4813 = $4812 + $4811;
                 $4814 = (+__Z5IKabsd($4813));
                 $4815 = $4814 > 5.0000000000000004E-6;
                 if ($4815) {
                  break;
                 }
                 $4816 = (+__Z5IKabsd($4788));
                 $4817 = $4816 > 5.0000000000000004E-6;
                 if ($4817) {
                  break;
                 }
                 $4818 = (+__Z5IKabsd($4804));
                 $4819 = $4818 > 5.0000000000000004E-6;
                 if ($4819) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $4820 = (($ij5177$01386) + 1)|0;
               $exitcond1769 = ($4820|0)==(2);
               if ($exitcond1769) {
                break L1630;
               } else {
                $ij5177$01386 = $4820;
               }
              }
             }
            } while(0);
            $4821 = +HEAPF64[$84>>3];
            $4822 = $4821 * 0.70710678118654802;
            $4823 = +HEAPF64[$83>>3];
            $4824 = $4823 * 0.70710678118654802;
            $4825 = +HEAPF64[$45>>3];
            $4826 = $4825 * $4824;
            $4827 = +HEAPF64[$43>>3];
            $4828 = $4824 * $4827;
            $4829 = $4822 * $4827;
            $4830 = $4828 + $4829;
            $4831 = $4822 * $4825;
            $4832 = $4831 + $4830;
            $4833 = +HEAPF64[$22>>3];
            $4834 = $4833 + 1.5707963267949001;
            $4835 = (+__Z5IKabsd($4834));
            $4836 = $4835 + 3.14159265358979;
            $4837 = (+__Z6IKfmoddd($4836,6.2831853071795898));
            $4838 = $4837 + -3.14159265358979;
            $4839 = $4832 - $4826;
            $4840 = $4826 - $4832;
            $4841 = (+__Z5IKabsd($4838));
            $4842 = $4841 < 9.9999999999999995E-7;
            do {
             if ($4842) {
              $4843 = $4827 * $4827;
              $4844 = 0.72250000000000003 - $4843;
              $4845 = $4825 * $4825;
              $4846 = $4844 - $4845;
              $4847 = (+__Z5IKabsd($4846));
              $4848 = $4847 < 9.9999999999999995E-7;
              if (!($4848)) {
               break;
              }
              $4849 = (+__Z5IKabsd($4839));
              $4850 = $4849 < 9.9999999999999995E-7;
              if (!($4850)) {
               break;
              }
              $4851 = (+__Z5IKabsd($4840));
              $4852 = $4851 < 9.9999999999999995E-7;
              if (!($4852)) {
               break;
              }
              HEAP16[$j5valid184>>1] = 0;
              HEAP8[$6>>0] = 2;
              $4853 = +HEAPF64[$45>>3];
              $4854 = $4853 * 0.83189033080770302;
              $4855 = +HEAPF64[$43>>3];
              $4856 = $4855 * 0.83189033080770302;
              $4857 = +HEAPF64[$83>>3];
              $4858 = $4854 * $4857;
              $4859 = $4857 * $4856;
              $4860 = $4858 + $4859;
              $4861 = +HEAPF64[$84>>3];
              $4862 = $4856 * $4861;
              $4863 = $4860 - $4862;
              $4864 = $4854 * $4861;
              $4865 = $4864 + $4863;
              HEAPF64[$sj5array183>>3] = $4865;
              $4866 = !($4865 >= -1.0000020000000001);
              $4867 = !($4865 <= 1.0000020000000001);
              $or$cond174 = $4866 | $4867;
              do {
               if ($or$cond174) {
                $4877 = (__Z13__DOUBLE_BITSd($4865)|0);
                $4878 = tempRet0;
                $4879 = $4878 & 2147483647;
                $4880 = ($4879>>>0)>(2146435072);
                $4881 = ($4877>>>0)>(0);
                $4882 = ($4879|0)==(2146435072);
                $4883 = $4882 & $4881;
                $4884 = $4880 | $4883;
                if (!($4884)) {
                 $ij5185$01381 = 0;
                 break;
                }
                HEAP8[$j5valid184>>0] = 1;
                HEAPF64[$cj5array182>>3] = 1.0;
                HEAPF64[$sj5array183>>3] = 0.0;
                HEAPF64[$j5array181>>3] = 0.0;
                $ij5185$01381 = 0;
               } else {
                HEAP8[$181>>0] = 1;
                HEAP8[$j5valid184>>0] = 1;
                $4868 = +HEAPF64[$sj5array183>>3];
                $4869 = (+__Z6IKasind($4868));
                HEAPF64[$j5array181>>3] = $4869;
                $4870 = (+__Z5IKcosd($4869));
                HEAPF64[$cj5array182>>3] = $4870;
                $4871 = +HEAPF64[$sj5array183>>3];
                HEAPF64[$182>>3] = $4871;
                $4872 = +HEAPF64[$j5array181>>3];
                $4873 = $4872 > 0.0;
                $$v74 = $4873 ? 3.14159265358979 : -3.14159265358979;
                $4874 = $$v74 - $4872;
                HEAPF64[$183>>3] = $4874;
                $4875 = +HEAPF64[$cj5array182>>3];
                $4876 = -$4875;
                HEAPF64[$184>>3] = $4876;
                $ij5185$01381 = 0;
               }
              } while(0);
              while(1) {
               $4885 = (($j5valid184) + ($ij5185$01381)|0);
               $4886 = HEAP8[$4885>>0]|0;
               $4887 = ($4886<<24>>24)==(0);
               do {
                if (!($4887)) {
                 $4888 = $ij5185$01381&255;
                 HEAP8[$4>>0] = $4888;
                 HEAP8[$5>>0] = -1;
                 $iij5186$01377 = (($ij5185$01381) + 1)|0;
                 $4889 = ($iij5186$01377|0)<(2);
                 do {
                  if ($4889) {
                   $4890 = (($sj5array183) + ($ij5185$01381<<3)|0);
                   $4891 = (($j5valid184) + ($iij5186$01377)|0);
                   $4892 = HEAP8[$4891>>0]|0;
                   $4893 = ($4892<<24>>24)==(0);
                   if ($4893) {
                    break;
                   }
                   $4894 = (($cj5array182) + ($ij5185$01381<<3)|0);
                   $4895 = +HEAPF64[$4894>>3];
                   $4896 = (($cj5array182) + ($iij5186$01377<<3)|0);
                   $4897 = +HEAPF64[$4896>>3];
                   $4898 = $4895 - $4897;
                   $4899 = (+__Z5IKabsd($4898));
                   $4900 = $4899 < 9.9999999999999995E-7;
                   if (!($4900)) {
                    break;
                   }
                   $4901 = +HEAPF64[$4890>>3];
                   $4902 = (($sj5array183) + ($iij5186$01377<<3)|0);
                   $4903 = +HEAPF64[$4902>>3];
                   $4904 = $4901 - $4903;
                   $4905 = (+__Z5IKabsd($4904));
                   $4906 = $4905 < 9.9999999999999995E-7;
                   if (!($4906)) {
                    break;
                   }
                   HEAP8[$4891>>0] = 0;
                   $4907 = $iij5186$01377&255;
                   HEAP8[$5>>0] = $4907;
                  }
                 } while(0);
                 $4908 = (($j5array181) + ($ij5185$01381<<3)|0);
                 $4909 = +HEAPF64[$4908>>3];
                 HEAPF64[$3>>3] = $4909;
                 $4910 = (($cj5array182) + ($ij5185$01381<<3)|0);
                 $4911 = +HEAPF64[$4910>>3];
                 HEAPF64[$185>>3] = $4911;
                 $4912 = (($sj5array183) + ($ij5185$01381<<3)|0);
                 $4913 = +HEAPF64[$4912>>3];
                 HEAPF64[$186>>3] = $4913;
                 $4914 = +HEAPF64[$3>>3];
                 $4915 = (+__Z5IKcosd($4914));
                 $4916 = (+__Z5IKsind($4914));
                 $4917 = +HEAPF64[$83>>3];
                 $4918 = +HEAPF64[$43>>3];
                 $4919 = $4917 * $4918;
                 $4920 = +HEAPF64[$45>>3];
                 $4921 = $4917 * $4920;
                 $4922 = +HEAPF64[$84>>3];
                 $4923 = $4918 * $4922;
                 $4924 = $4920 * $4922;
                 $4925 = $4916 * 0.77781745930520196;
                 $4926 = $4916 * 0.70710678118654802;
                 $4927 = $4915 * 0.70710678118654802;
                 $4928 = $4915 * -0.84999999999999998;
                 $4929 = $4926 * $4921;
                 $4930 = $4929 + -0.84999999999999998;
                 $4931 = -$4923;
                 $4932 = $4926 * $4931;
                 $4933 = $4930 + $4932;
                 $4934 = $4926 * $4924;
                 $4935 = $4934 + $4933;
                 $4936 = $4926 * $4919;
                 $4937 = $4936 + $4935;
                 $4938 = $4925 * $4921;
                 $4939 = $4938 + -0.93500000000000005;
                 $4940 = $4925 * $4931;
                 $4941 = $4939 + $4940;
                 $4942 = $4925 * $4924;
                 $4943 = $4942 + $4941;
                 $4944 = $4925 * $4919;
                 $4945 = $4944 + $4943;
                 $4946 = $4923 * 0.063639610306789302;
                 $4947 = $4946 + $4945;
                 $4948 = $4924 * 0.063639610306789302;
                 $4949 = $4948 + $4947;
                 $4950 = $4919 * 0.063639610306789302;
                 $4951 = $4950 + $4949;
                 $4952 = $4921 * 0.063639610306789302;
                 $4953 = $4951 - $4952;
                 $4954 = (+__Z5IKabsd($4928));
                 $4955 = $4954 > 5.0000000000000004E-6;
                 if ($4955) {
                  break;
                 }
                 $4956 = $4927 * $4924;
                 $4957 = -$4956;
                 $4958 = $4927 * $4919;
                 $4959 = $4957 - $4958;
                 $4960 = $4927 * $4923;
                 $4961 = $4960 + $4959;
                 $4962 = $4927 * $4921;
                 $4963 = $4961 - $4962;
                 $4964 = (+__Z5IKabsd($4963));
                 $4965 = $4964 > 5.0000000000000004E-6;
                 if ($4965) {
                  break;
                 }
                 $4966 = (+__Z5IKabsd($4937));
                 $4967 = $4966 > 5.0000000000000004E-6;
                 if ($4967) {
                  break;
                 }
                 $4968 = (+__Z5IKabsd($4953));
                 $4969 = $4968 > 5.0000000000000004E-6;
                 if ($4969) {
                  break;
                 }
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
                }
               } while(0);
               $4970 = (($ij5185$01381) + 1)|0;
               $exitcond1768 = ($4970|0)==(2);
               if ($exitcond1768) {
                break L1630;
               } else {
                $ij5185$01381 = $4970;
               }
              }
             }
            } while(0);
            $4971 = +HEAPF64[$43>>3];
            $4972 = (+__Z5IKabsd($4971));
            $4973 = +HEAPF64[$45>>3];
            $4974 = (+__Z5IKabsd($4973));
            $4975 = $4972 + $4974;
            $4976 = (+__Z5IKabsd($4975));
            $4977 = $4976 < 9.9999999999999995E-7;
            if (!($4977)) {
             break;
            }
            $4978 = (+__Z5IKabsd(0.72250000000000003));
            $4979 = $4978 < 9.9999999999999995E-7;
            if (!($4979)) {
             break;
            }
            $4980 = (+__Z5IKabsd(0.0));
            $4981 = $4980 < 9.9999999999999995E-7;
            if (!($4981)) {
             break;
            }
            $4982 = (+__Z5IKabsd(-0.84999999999999998));
            $4983 = $4982 < 9.9999999999999995E-7;
            if (!($4983)) {
             break;
            }
            $4984 = (+__Z5IKabsd(-0.93500000000000005));
            $4985 = $4984 < 9.9999999999999995E-7;
            if (!($4985)) {
             break;
            }
            HEAPF64[$47>>3] = 0.0;
            HEAPF64[$7>>3] = 0.0;
            HEAPF64[$76>>3] = 0.0;
            HEAPF64[$75>>3] = 1.0;
            HEAPF64[$64>>3] = 0.0;
            HEAPF64[$65>>3] = 0.0;
            HEAPF64[$67>>3] = 0.0;
            HEAPF64[$68>>3] = 0.0;
            HEAPF64[$70>>3] = 0.0;
            HEAPF64[$71>>3] = 0.0;
            HEAPF64[$66>>3] = 0.0;
            HEAPF64[$69>>3] = 0.0;
            HEAPF64[$72>>3] = 0.0;
            $4986 = (+__Z5IKabsd(1.0));
            $4987 = $4986 < 1.0E-8;
            ;HEAP32[$43>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;HEAP32[$43+12>>2]=0|0;
            ;HEAP32[$45>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;HEAP32[$45+12>>2]=0|0;
            ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
            if ($4987) {
             break;
            }
            HEAPF64[$op190>>3] = 1.0;
            HEAPF64[$187>>3] = 0.0;
            HEAPF64[$188>>3] = -1.0;
            __ZN8IKSolver10polyroots2EPdS0_Ri($op190,$zeror191,$numroots192);
            $4988 = HEAP32[$numroots192>>2]|0;
            $4989 = ($4988|0)>(0);
            if (!($4989)) {
             HEAP16[$j5valid201>>1] = 257;
             HEAP8[$6>>0] = 2;
             break;
            }
            $4990 = HEAP32[$numroots192>>2]|0;
            $4991 = ($4990|0)>(1);
            $numsolutions197$01365 = 0;
            while(1) {
             $4992 = (($zeror191) + ($numsolutions197$01365<<3)|0);
             $4993 = +HEAPF64[$4992>>3];
             $4994 = (+Math_atan((+$4993)));
             $4995 = $4994 * 2.0;
             $4996 = $4995 + 6.2831853071795898;
             $4997 = $4995 > 3.14159265358979;
             $4998 = (($j5array193) + ($numsolutions197$01365<<3)|0);
             HEAPF64[$4998>>3] = $4995;
             do {
              if ($4997) {
               $4999 = $4995 + -6.2831853071795898;
               HEAPF64[$4998>>3] = $4999;
              } else {
               $5000 = $4995 < -3.14159265358979;
               if (!($5000)) {
                break;
               }
               HEAPF64[$4998>>3] = $4996;
              }
             } while(0);
             $5001 = +HEAPF64[$4998>>3];
             $5002 = (+__Z5IKsind($5001));
             $5003 = (($sj5array195) + ($numsolutions197$01365<<3)|0);
             HEAPF64[$5003>>3] = $5002;
             $5004 = +HEAPF64[$4998>>3];
             $5005 = (+__Z5IKcosd($5004));
             $5006 = (($cj5array194) + ($numsolutions197$01365<<3)|0);
             HEAPF64[$5006>>3] = $5005;
             $5007 = (($numsolutions197$01365) + 1)|0;
             $5008 = ($5007|0)<($4990|0);
             if ($5008) {
              $numsolutions197$01365 = $5007;
             } else {
              break;
             }
            }
            $$1890 = $4991 ? $4990 : 1;
            HEAP16[$j5valid201>>1] = 257;
            HEAP8[$6>>0] = 2;
            $ij5202$01374 = 0;
            while(1) {
             $5009 = (($j5valid201) + ($ij5202$01374)|0);
             $5010 = HEAP8[$5009>>0]|0;
             $5011 = ($5010<<24>>24)==(0);
             if (!($5011)) {
              $5012 = (($j5array193) + ($ij5202$01374<<3)|0);
              $5013 = +HEAPF64[$5012>>3];
              HEAPF64[$3>>3] = $5013;
              $5014 = (($cj5array194) + ($ij5202$01374<<3)|0);
              $5015 = +HEAPF64[$5014>>3];
              HEAPF64[$189>>3] = $5015;
              $5016 = (($sj5array195) + ($ij5202$01374<<3)|0);
              $5017 = +HEAPF64[$5016>>3];
              HEAPF64[$190>>3] = $5017;
              $5018 = +HEAPF64[$3>>3];
              $5019 = $5018 * 0.5;
              $5020 = (+__Z5IKtand($5019));
              HEAPF64[$191>>3] = $5020;
              $5021 = $ij5202$01374&255;
              HEAP8[$4>>0] = $5021;
              HEAP8[$5>>0] = -1;
              $iij5203$01370 = (($ij5202$01374) + 1)|0;
              $5022 = ($iij5203$01370|0)<($$1890|0);
              L2273: do {
               if ($5022) {
                $iij5203$01371 = $iij5203$01370;
                L2274: while(1) {
                 $5023 = (($j5valid201) + ($iij5203$01371)|0);
                 $5024 = HEAP8[$5023>>0]|0;
                 $5025 = ($5024<<24>>24)==(0);
                 do {
                  if (!($5025)) {
                   $5027 = +HEAPF64[$5014>>3];
                   $5028 = (($cj5array194) + ($iij5203$01371<<3)|0);
                   $5029 = +HEAPF64[$5028>>3];
                   $5030 = $5027 - $5029;
                   $5031 = (+__Z5IKabsd($5030));
                   $5032 = $5031 < 9.9999999999999995E-7;
                   if (!($5032)) {
                    break;
                   }
                   $5033 = +HEAPF64[$5016>>3];
                   $5034 = (($sj5array195) + ($iij5203$01371<<3)|0);
                   $5035 = +HEAPF64[$5034>>3];
                   $5036 = $5033 - $5035;
                   $5037 = (+__Z5IKabsd($5036));
                   $5038 = $5037 < 9.9999999999999995E-7;
                   if ($5038) {
                    $$lcssa2047 = $5023;$iij5203$01371$lcssa = $iij5203$01371;
                    break L2274;
                   }
                  }
                 } while(0);
                 $iij5203$0 = (($iij5203$01371) + 1)|0;
                 $5026 = ($iij5203$0|0)<($$1890|0);
                 if ($5026) {
                  $iij5203$01371 = $iij5203$0;
                 } else {
                  break L2273;
                 }
                }
                HEAP8[$$lcssa2047>>0] = 0;
                $5039 = $iij5203$01371$lcssa&255;
                HEAP8[$5>>0] = $5039;
               }
              } while(0);
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
             $5040 = (($ij5202$01374) + 1)|0;
             $exitcond1767 = ($5040|0)==($$1890|0);
             if ($exitcond1767) {
              break;
             } else {
              $ij5202$01374 = $5040;
             }
            }
           }
          } while(0);
          $6527 = (($ij4$01497) + 1)|0;
          $exitcond1788 = ($6527|0)==(2);
          if ($exitcond1788) {
           break;
          } else {
           $ij4$01497 = $6527;
          }
         }
        }
       }
      }
     }
    }
   }
  } while(0);
  $19124 = (($ij7$01498) + 1)|0;
  $exitcond1789 = ($19124|0)==(2);
  if ($exitcond1789) {
   break;
  } else {
   $ij7$01498 = $19124;
  }
 }
 $19125 = HEAP32[$solutions>>2]|0;
 $19126 = ((($19125)) + 16|0);
 $19127 = HEAP32[$19126>>2]|0;
 $19128 = (FUNCTION_TABLE_ii[$19127 & 63]($solutions)|0);
 $19129 = ($19128|0)!=(0);
 STACKTOP = sp;return ($19129|0);
}
function __ZN6ikfast14IkSolutionListIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this);
 HEAP32[$this>>2] = (376);
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = $0;
 $2 = ((($this)) + 12|0);
 HEAP32[$2>>2] = 0;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($this,$index) {
 $this = $this|0;
 $index = $index|0;
 var $$03$i$i = 0, $$14$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1>>>0)>($index>>>0);
 if (!($2)) {
  $3 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($3,800);
  ___cxa_throw(($3|0),(1944|0),(35|0));
  // unreachable;
 }
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5;
 $7 = ($index|0)>(-1);
 if (!($7)) {
  $$14$i$i = $index;$15 = $6;
  while(1) {
   $16 = $15;
   $17 = HEAP32[$16>>2]|0;
   $18 = (($$14$i$i) + 1)|0;
   $19 = ($$14$i$i|0)<(-1);
   if ($19) {
    $$14$i$i = $18;$15 = $17;
   } else {
    $20 = $17;
    break;
   }
  }
  $21 = $20;
  $22 = ((($21)) + 8|0);
  return ($22|0);
 }
 $8 = ($index|0)>(0);
 if ($8) {
  $$03$i$i = $index;$9 = $6;
 } else {
  $20 = $6;
  $21 = $20;
  $22 = ((($21)) + 8|0);
  return ($22|0);
 }
 while(1) {
  $10 = $9;
  $11 = ((($10)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($$03$i$i) + -1)|0;
  $14 = ($$03$i$i|0)>(1);
  if ($14) {
   $$03$i$i = $13;$9 = $12;
  } else {
   $20 = $12;
   break;
  }
 }
 $21 = $20;
 $22 = ((($21)) + 8|0);
 return ($22|0);
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -8|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = $6 >>> 3;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + ($8<<3)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZN6ikfast14IkSolutionListIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (376);
 $0 = ((($this)) + 4|0);
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($0);
 return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this);
 return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$01 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  return;
 }
 $3 = ((($this)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$this>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$4>>2]|0;
 $9 = ((($8)) + 4|0);
 HEAP32[$9>>2] = $7;
 $10 = HEAP32[$4>>2]|0;
 $11 = HEAP32[$6>>2]|0;
 HEAP32[$11>>2] = $10;
 HEAP32[$0>>2] = 0;
 $12 = ($4|0)==($this|0);
 if ($12) {
  return;
 } else {
  $__f$01 = $4;
 }
 while(1) {
  $13 = ((($__f$01)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($__f$01)) + 8|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vi[$17 & 127]($15);
  __ZdlPv($__f$01);
  $18 = ($14|0)==($this|0);
  if ($18) {
   break;
  } else {
   $__f$01 = $14;
  }
 }
 return;
}
function __ZN6ikfast14IkSolutionListIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionListIdED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $0 = sp;
 $1 = ((($this)) + 4|0);
 $2 = ((($this)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($0,$vinfos,$vfree);
 __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($1,$0);
 __ZN6ikfast10IkSolutionIdED2Ev($0);
 STACKTOP = sp;return ($3|0);
}
function __ZN6ikfast14IkSolutionListIdE5ClearEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($0);
 return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionBaseIdEC2Ev($this);
 HEAP32[$this>>2] = (424);
 $0 = ((($this)) + 4|0);
 $1 = ((($this)) + 16|0);
 $2 = ($0|0)==($vinfos|0);
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;
 if (!($2)) {
  $3 = HEAP32[$vinfos>>2]|0;
  $4 = ((($vinfos)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($0,$3,$5);
 }
 $6 = ($1|0)==($vfree|0);
 if ($6) {
  return;
 }
 $7 = HEAP32[$vfree>>2]|0;
 $8 = ((($vfree)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($1,$7,$9);
 return;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__Znwj(36)|0);
 $1 = ((($0)) + 8|0);
 __ZN6ikfast10IkSolutionIdEC2ERKS1_($1,$__x);
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $this;
 $3 = HEAP32[$this>>2]|0;
 HEAP32[$0>>2] = $3;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = $0;
 HEAP32[$this>>2] = $0;
 $5 = ((($this)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 1)|0;
 HEAP32[$5>>2] = $7;
 return;
}
function __ZN6ikfast10IkSolutionIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (424);
 $0 = ((($this)) + 16|0);
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($0);
 $1 = ((($this)) + 4|0);
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($1);
 return;
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -24|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = (($6>>>0) / 24)&-1;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + (($8*24)|0)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZN6ikfast10IkSolutionIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast10IkSolutionIdED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  return;
 }
 $5 = HEAP32[$0>>2]|0;
 $6 = HEAP32[$2>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = (($9|0) / 24)&-1;
 $12 = $3;$i$01 = 0;
 while(1) {
  $11 = (((($12) + (($i$01*24)|0)|0)) + 16|0);
  $13 = HEAP8[$11>>0]|0;
  $14 = ($13<<24>>24)<(0);
  do {
   if ($14) {
    $15 = (((($12) + (($i$01*24)|0)|0)) + 8|0);
    $16 = +HEAPF64[$15>>3];
    $17 = (($solution) + ($i$01<<3)|0);
    HEAPF64[$17>>3] = $16;
   } else {
    $18 = $13 << 24 >> 24;
    $19 = (($freevalues) + ($18<<3)|0);
    $20 = +HEAPF64[$19>>3];
    $21 = (($12) + (($i$01*24)|0)|0);
    $22 = +HEAPF64[$21>>3];
    $23 = $20 * $22;
    $24 = (((($12) + (($i$01*24)|0)|0)) + 8|0);
    $25 = +HEAPF64[$24>>3];
    $26 = $23 + $25;
    $27 = (($solution) + ($i$01<<3)|0);
    HEAPF64[$27>>3] = $26;
    $28 = $26 > 3.14159265358979;
    if ($28) {
     $29 = $26 + -6.2831853071795898;
     HEAPF64[$27>>3] = $29;
     break;
    }
    $30 = $26 < -3.14159265358979;
    if ($30) {
     $31 = $26 + 6.2831853071795898;
     HEAPF64[$27>>3] = $31;
    }
   }
  } while(0);
  $32 = (($i$01) + 1)|0;
  $33 = ($32>>>0)<($10>>>0);
  if ($33) {
   $12 = $6;$i$01 = $32;
  } else {
   break;
  }
 }
 return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($solution,$3);
 $4 = HEAP32[$this>>2]|0;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($solution,0)|0);
 $8 = ((($freevalues)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$freevalues>>2]|0;
 $11 = ($9|0)==($10|0);
 if ($11) {
  $13 = 0;
  FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
  return;
 }
 $12 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($freevalues,0)|0);
 $13 = $12;
 FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
 return;
}
function __ZNK6ikfast10IkSolutionIdE7GetFreeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 return ($0|0);
}
function __ZNK6ikfast10IkSolutionIdE6GetDOFEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = (($6|0) / 24)&-1;
 return ($7|0);
}
function __ZNK6ikfast10IkSolutionIdE8ValidateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$02 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  return;
 } else {
  $14 = $3;$i$02 = 0;
 }
 while(1) {
  $13 = (((($14) + (($i$02*24)|0)|0)) + 18|0);
  $15 = HEAP8[$13>>0]|0;
  if ((($15<<24>>24) == -1)) {
   label = 4;
   break;
  } else if (!((($15<<24>>24) == 0))) {
   $17 = (((($14) + (($i$02*24)|0)|0)) + 19|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = ($18&255)<($15&255);
   if (!($19)) {
    label = 6;
    break;
   }
   $21 = (((($14) + (($i$02*24)|0)|0)) + 20|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = ($22<<24>>24)==(-1);
   $24 = ($22&255)<($15&255);
   $or$cond = $23 | $24;
   if (!($or$cond)) {
    label = 8;
    break;
   }
  }
  $26 = HEAP32[$2>>2]|0;
  $27 = (((($26) + (($i$02*24)|0)|0)) + 8|0);
  $28 = +HEAPF64[$27>>3];
  (__Z13__DOUBLE_BITSd($28)|0);
  $29 = tempRet0;
  $30 = $29 & 2146435072;
  $31 = ($30>>>0)<(2146435072);
  $32 = (0)<(0);
  $33 = ($30|0)==(2146435072);
  $34 = $33 & $32;
  $35 = $31 | $34;
  $11 = (($i$02) + 1)|0;
  if (!($35)) {
   label = 10;
   break;
  }
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$2>>2]|0;
  $7 = $5;
  $8 = $6;
  $9 = (($7) - ($8))|0;
  $10 = (($9|0) / 24)&-1;
  $12 = ($11>>>0)<($10>>>0);
  if ($12) {
   $14 = $6;$i$02 = $11;
  } else {
   label = 11;
   break;
  }
 }
 if ((label|0) == 4) {
  $16 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($16,472);
  ___cxa_throw(($16|0),(1944|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  $20 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($20,512);
  ___cxa_throw(($20|0),(1944|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 8) {
  $25 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($25,552);
  ___cxa_throw(($25|0),(1944|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 10) {
  $36 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($36,592);
  ___cxa_throw(($36|0),(1944|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 11) {
  return;
 }
}
function __ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $$lcssa5 = 0, $$lcssa6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond18 = 0, $i$015 = 0;
 var $i$015$in = 0, $j$07 = 0, $j1$010 = 0, $j2$012 = 0, $or$cond = 0, $or$cond19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($v,0);
 HEAP32[$0>>2] = 0;
 $2 = ((($v)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($v)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if ($6) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($v,$0);
 } else {
  HEAP32[$3>>2] = 0;
  $7 = HEAP32[$2>>2]|0;
  $8 = ((($7)) + 4|0);
  HEAP32[$2>>2] = $8;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($this)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $10;
 $14 = $12;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(0);
 if (!($16)) {
  STACKTOP = sp;return;
 }
 $17 = (($15|0) / 24)&-1;
 $i$015$in = $17;
 while(1) {
  $i$015 = (($i$015$in) + -1)|0;
  $18 = HEAP32[$11>>2]|0;
  $19 = (((($18) + (($i$015*24)|0)|0)) + 18|0);
  $20 = HEAP8[$19>>0]|0;
  if (!((($20<<24>>24) == 0) | (($20<<24>>24) == 1) | (($20<<24>>24) == -1))) {
   $21 = HEAP32[$2>>2]|0;
   $22 = HEAP32[$v>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = HEAP32[$11>>2]|0;
   if ($23) {
    $$lcssa5 = 0;$$lcssa6 = $24;
   } else {
    $25 = HEAP32[$2>>2]|0;
    $26 = HEAP32[$v>>2]|0;
    $27 = $25;
    $28 = $26;
    $29 = (($27) - ($28))|0;
    $30 = $29 >> 2;
    $31 = HEAP32[$11>>2]|0;
    $33 = $24;$37 = $22;$j$07 = 0;
    while(1) {
     $32 = (((($33) + (($i$015*24)|0)|0)) + 18|0);
     $34 = HEAP8[$32>>0]|0;
     $35 = $34&255;
     $36 = (($37) + ($j$07<<2)|0);
     $38 = HEAP32[$36>>2]|0;
     $39 = Math_imul($38, $35)|0;
     HEAP32[$36>>2] = $39;
     $40 = (($j$07) + 1)|0;
     $41 = ($40>>>0)<($30>>>0);
     if ($41) {
      $33 = $31;$37 = $26;$j$07 = $40;
     } else {
      $$lcssa5 = $30;$$lcssa6 = $31;
      break;
     }
    }
   }
   $42 = (((($$lcssa6) + (($i$015*24)|0)|0)) + 20|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(-1);
   $45 = ($$lcssa5|0)==(0);
   $or$cond = $44 | $45;
   if (!($or$cond)) {
    $j1$010 = 0;
    while(1) {
     $46 = HEAP32[$v>>2]|0;
     $47 = (($46) + ($j1$010<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = HEAP32[$11>>2]|0;
     $50 = (((($49) + (($i$015*24)|0)|0)) + 20|0);
     $51 = HEAP8[$50>>0]|0;
     $52 = $51&255;
     $53 = (($52) + ($48))|0;
     HEAP32[$1>>2] = $53;
     $54 = HEAP32[$2>>2]|0;
     $55 = HEAP32[$4>>2]|0;
     $56 = ($54|0)==($55|0);
     if ($56) {
      __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($v,$1);
     } else {
      HEAP32[$54>>2] = $53;
      $57 = HEAP32[$2>>2]|0;
      $58 = ((($57)) + 4|0);
      HEAP32[$2>>2] = $58;
     }
     $59 = (($j1$010) + 1)|0;
     $exitcond = ($59|0)==($$lcssa5|0);
     if ($exitcond) {
      break;
     } else {
      $j1$010 = $59;
     }
    }
   }
   $60 = HEAP32[$11>>2]|0;
   $61 = (((($60) + (($i$015*24)|0)|0)) + 19|0);
   $62 = HEAP8[$61>>0]|0;
   $63 = ($62<<24>>24)==(-1);
   $64 = ($$lcssa5|0)==(0);
   $or$cond19 = $63 | $64;
   if (!($or$cond19)) {
    $j2$012 = 0;
    while(1) {
     $66 = HEAP32[$11>>2]|0;
     $67 = (((($66) + (($i$015*24)|0)|0)) + 19|0);
     $68 = HEAP8[$67>>0]|0;
     $69 = $68&255;
     $70 = HEAP32[$v>>2]|0;
     $71 = (($70) + ($j2$012<<2)|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = (($72) + ($69))|0;
     HEAP32[$71>>2] = $73;
     $74 = (($j2$012) + 1)|0;
     $exitcond18 = ($74|0)==($$lcssa5|0);
     if ($exitcond18) {
      break;
     } else {
      $j2$012 = $74;
     }
    }
   }
  }
  $65 = ($i$015$in|0)>(1);
  if ($65) {
   $i$015$in = $i$015;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$8);
  return;
 }
 $9 = ($6>>>0)>($__sz>>>0);
 if (!($9)) {
  return;
 }
 $10 = (($2) + ($__sz<<2)|0);
 $11 = ($1|0)==($10|0);
 if ($11) {
  return;
 }
 $scevgep$i$i = ((($1)) + -4|0);
 $12 = $scevgep$i$i;
 $__new_last2$i$i = $10;
 $13 = (($12) - ($__new_last2$i$i))|0;
 $14 = $13 >>> 2;
 $15 = $14 ^ -1;
 $scevgep4$i$i = (($1) + ($15<<2)|0);
 HEAP32[$0>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = (($7) + 1)|0;
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this)|0);
 $10 = ($9>>>0)<($8>>>0);
 if ($10) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $11 = ((($this)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = HEAP32[$this>>2]|0;
 $14 = $12;
 $15 = $13;
 $16 = (($14) - ($15))|0;
 $17 = $16 >> 2;
 $18 = $9 >>> 1;
 $19 = ($17>>>0)<($18>>>0);
 if ($19) {
  $20 = $16 >> 1;
  $21 = ($20>>>0)<($8>>>0);
  $22 = $21 ? $8 : $20;
  $$0$i = $22;
 } else {
  $$0$i = $9;
 }
 $23 = HEAP32[$1>>2]|0;
 $24 = HEAP32[$this>>2]|0;
 $25 = $23;
 $26 = $24;
 $27 = (($25) - ($26))|0;
 $28 = $27 >> 2;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$$0$i,$28,$0);
 $29 = ((($__v)) + 8|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = HEAP32[$__x>>2]|0;
 HEAP32[$30>>2] = $31;
 $32 = HEAP32[$29>>2]|0;
 $33 = ((($32)) + 4|0);
 HEAP32[$29>>2] = $33;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1073741823;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $5 = 0;
 } else {
  $3 = $__cap << 2;
  $4 = (__Znwj($3)|0);
  $5 = $4;
 }
 HEAP32[$this>>2] = $5;
 $6 = (($5) + ($__start<<2)|0);
 $7 = ((($this)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($this)) + 4|0);
 HEAP32[$8>>2] = $6;
 $9 = HEAP32[$this>>2]|0;
 $10 = (($9) + ($__cap<<2)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $1;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if (!($8)) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n);
  STACKTOP = sp;return;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$this>>2]|0;
 $11 = $10;
 $12 = (($5) - ($11))|0;
 $13 = $12 >> 2;
 $14 = (($13) + ($__n))|0;
 $15 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this)|0);
 $16 = ($15>>>0)<($14>>>0);
 if ($16) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $17 = ((($this)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$this>>2]|0;
 $20 = $18;
 $21 = $19;
 $22 = (($20) - ($21))|0;
 $23 = $22 >> 2;
 $24 = $15 >>> 1;
 $25 = ($23>>>0)<($24>>>0);
 if ($25) {
  $26 = $22 >> 1;
  $27 = ($26>>>0)<($14>>>0);
  $28 = $27 ? $14 : $26;
  $$0$i = $28;
 } else {
  $$0$i = $15;
 }
 $29 = HEAP32[$2>>2]|0;
 $30 = HEAP32[$this>>2]|0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $34 = $33 >> 2;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$$0$i,$34,$9);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($__v,$__n);
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __Z13__DOUBLE_BITSd($__f) {
 $__f = +$__f;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $__f;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($1);
 return ($0|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$8);
  return;
 }
 $9 = ($6>>>0)>($__sz>>>0);
 if (!($9)) {
  return;
 }
 $10 = (($2) + ($__sz<<3)|0);
 $11 = ($1|0)==($10|0);
 if ($11) {
  return;
 }
 $scevgep$i$i = ((($1)) + -8|0);
 $12 = $scevgep$i$i;
 $__new_last2$i$i = $10;
 $13 = (($12) - ($__new_last2$i$i))|0;
 $14 = $13 >>> 3;
 $15 = $14 ^ -1;
 $scevgep4$i$i = (($1) + ($15<<3)|0);
 HEAP32[$0>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)>($__n>>>0);
 if ($7) {
  $8 = HEAP32[$this>>2]|0;
  $9 = (($8) + ($__n<<3)|0);
  return ($9|0);
 } else {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 return (0)|0;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)>($__n>>>0);
 if ($7) {
  $8 = HEAP32[$this>>2]|0;
  $9 = (($8) + ($__n<<3)|0);
  return ($9|0);
 } else {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 3;
 $8 = ($7>>>0)<($__n>>>0);
 if (!($8)) {
  __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n);
  STACKTOP = sp;return;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$this>>2]|0;
 $11 = $10;
 $12 = (($5) - ($11))|0;
 $13 = $12 >> 3;
 $14 = (($13) + ($__n))|0;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this)|0);
 $16 = ($15>>>0)<($14>>>0);
 if ($16) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $17 = ((($this)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$this>>2]|0;
 $20 = $18;
 $21 = $19;
 $22 = (($20) - ($21))|0;
 $23 = $22 >> 3;
 $24 = $15 >>> 1;
 $25 = ($23>>>0)<($24>>>0);
 if ($25) {
  $26 = $22 >> 2;
  $27 = ($26>>>0)<($14>>>0);
  $28 = $27 ? $14 : $26;
  $$0$i = $28;
 } else {
  $$0$i = $15;
 }
 $29 = HEAP32[$2>>2]|0;
 $30 = HEAP32[$this>>2]|0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $34 = $33 >> 3;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($__v,$$0$i,$34,$9);
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($__v,$__n);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 3;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<3)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 536870911;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $5 = 0;
 } else {
  $3 = $__cap << 3;
  $4 = (__Znwj($3)|0);
  $5 = $4;
 }
 HEAP32[$this>>2] = $5;
 $6 = (($5) + ($__start<<3)|0);
 $7 = ((($this)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($this)) + 4|0);
 HEAP32[$8>>2] = $6;
 $9 = HEAP32[$this>>2]|0;
 $10 = (($9) + ($__cap<<3)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 3;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<3)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 3;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<3)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -8|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $1;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 3;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<3)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0);
 HEAP32[$this>>2] = (424);
 $1 = ((($this)) + 4|0);
 $2 = ((($0)) + 4|0);
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($1,$2);
 $3 = ((($this)) + 16|0);
 $4 = ((($0)) + 16|0);
 __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($3,$4);
 return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (696);
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__x)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$__x>>2]|0;
 $5 = ($3|0)==($4|0);
 if ($5) {
  return;
 }
 $6 = $3;
 $7 = $4;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 24)&-1;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$9);
 $10 = HEAP32[$__x>>2]|0;
 $11 = HEAP32[$2>>2]|0;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$10,$11);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__x)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$__x>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = $7 >> 2;
 $9 = ($8|0)==(0);
 if ($9) {
  return;
 }
 __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$8);
 $10 = HEAP32[$__x>>2]|0;
 $11 = HEAP32[$2>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$10,$11);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = $__n << 2;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + ($__n<<2)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$01 = 0, $$promoted = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__first3 = 0, $scevgep = 0, $scevgep5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__first|0)==($__last|0);
 if ($0) {
  return;
 }
 $__first3 = $__first;
 $1 = ((($this)) + 4|0);
 $$promoted = HEAP32[$1>>2]|0;
 $scevgep = ((($__last)) + -4|0);
 $2 = $scevgep;
 $3 = (($2) - ($__first3))|0;
 $4 = $3 >>> 2;
 $5 = (($4) + 1)|0;
 $$01 = $__first;$7 = $$promoted;
 while(1) {
  $6 = HEAP32[$$01>>2]|0;
  HEAP32[$7>>2] = $6;
  $8 = ((($7)) + 4|0);
  $9 = ((($$01)) + 4|0);
  $10 = ($9|0)==($__last|0);
  if ($10) {
   break;
  } else {
   $$01 = $9;$7 = $8;
  }
 }
 $scevgep5 = (($$promoted) + ($5<<2)|0);
 HEAP32[$1>>2] = $scevgep5;
 return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1073741823;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = ($__n*24)|0;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + (($__n*24)|0)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__first|0)==($__last|0);
 if ($0) {
  return;
 }
 $1 = ((($this)) + 4|0);
 $$01 = $__first;
 while(1) {
  $2 = HEAP32[$1>>2]|0;
  ;HEAP32[$2>>2]=HEAP32[$$01>>2]|0;HEAP32[$2+4>>2]=HEAP32[$$01+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$$01+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[$$01+12>>2]|0;HEAP32[$2+16>>2]=HEAP32[$$01+16>>2]|0;HEAP32[$2+20>>2]=HEAP32[$$01+20>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($3)) + 24|0);
  HEAP32[$1>>2] = $4;
  $5 = ((($$01)) + 24|0);
  $6 = ($5|0)==($__last|0);
  if ($6) {
   break;
  } else {
   $$01 = $5;
  }
 }
 return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 178956970;
}
function __ZN6ikfast14IkSolutionBaseIdED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN6ikfast14IkSolutionBaseIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($solution,$3);
 $4 = HEAP32[$this>>2]|0;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($solution,0)|0);
 $8 = ((($freevalues)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$freevalues>>2]|0;
 $11 = ($9|0)==($10|0);
 if ($11) {
  $13 = 0;
  FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
  return;
 }
 $12 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($freevalues,0)|0);
 $13 = $12;
 FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
 return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (696);
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0$i = 0, $$__last = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__last;
 $1 = $__first;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 24)&-1;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$this>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = (($9|0) / 24)&-1;
 $11 = ($3>>>0)>($10>>>0);
 if ($11) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this);
  $30 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this)|0);
  $31 = ($30>>>0)<($3>>>0);
  if ($31) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $32 = HEAP32[$4>>2]|0;
  $33 = HEAP32[$this>>2]|0;
  $34 = $32;
  $35 = $33;
  $36 = (($34) - ($35))|0;
  $37 = (($36|0) / 24)&-1;
  $38 = $30 >>> 1;
  $39 = ($37>>>0)<($38>>>0);
  if ($39) {
   $40 = $37 << 1;
   $41 = ($40>>>0)<($3>>>0);
   $42 = $41 ? $3 : $40;
   $$0$i = $42;
  } else {
   $$0$i = $30;
  }
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$$0$i);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last);
  return;
 }
 $12 = ((($this)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13;
 $15 = (($14) - ($8))|0;
 $16 = (($15|0) / 24)&-1;
 $17 = ($3>>>0)>($16>>>0);
 $18 = (($__first) + (($16*24)|0)|0);
 $$__last = $17 ? $18 : $__last;
 $19 = HEAP32[$this>>2]|0;
 $20 = $$__last;
 $21 = (($20) - ($1))|0;
 $22 = (($21|0) / 24)&-1;
 _memmove(($19|0),($__first|0),($21|0))|0;
 $23 = (($19) + (($22*24)|0)|0);
 if ($17) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$$__last,$__last);
  return;
 }
 $24 = HEAP32[$12>>2]|0;
 $25 = ($24|0)==($23|0);
 if ($25) {
  return;
 }
 $scevgep$i$i = ((($24)) + -24|0);
 $26 = $scevgep$i$i;
 $__new_last2$i$i = $23;
 $27 = (($26) - ($__new_last2$i$i))|0;
 $28 = (($27>>>0) / 24)&-1;
 $29 = $28 ^ -1;
 $scevgep4$i$i = (($24) + (($29*24)|0)|0);
 HEAP32[$12>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0$i = 0, $$__last = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__last;
 $1 = $__first;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$this>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = $9 >> 2;
 $11 = ($3>>>0)>($10>>>0);
 if ($11) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this);
  $30 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this)|0);
  $31 = ($30>>>0)<($3>>>0);
  if ($31) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $32 = HEAP32[$4>>2]|0;
  $33 = HEAP32[$this>>2]|0;
  $34 = $32;
  $35 = $33;
  $36 = (($34) - ($35))|0;
  $37 = $36 >> 2;
  $38 = $30 >>> 1;
  $39 = ($37>>>0)<($38>>>0);
  if ($39) {
   $40 = $36 >> 1;
   $41 = ($40>>>0)<($3>>>0);
   $42 = $41 ? $3 : $40;
   $$0$i = $42;
  } else {
   $$0$i = $30;
  }
  __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$$0$i);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last);
  return;
 }
 $12 = ((($this)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13;
 $15 = (($14) - ($8))|0;
 $16 = $15 >> 2;
 $17 = ($3>>>0)>($16>>>0);
 $18 = (($__first) + ($16<<2)|0);
 $$__last = $17 ? $18 : $__last;
 $19 = HEAP32[$this>>2]|0;
 $20 = $$__last;
 $21 = (($20) - ($1))|0;
 $22 = $21 >> 2;
 _memmove(($19|0),($__first|0),($21|0))|0;
 $23 = (($19) + ($22<<2)|0);
 if ($17) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$$__last,$__last);
  return;
 }
 $24 = HEAP32[$12>>2]|0;
 $25 = ($24|0)==($23|0);
 if ($25) {
  return;
 }
 $scevgep$i$i = ((($24)) + -4|0);
 $26 = $scevgep$i$i;
 $__new_last2$i$i = $23;
 $27 = (($26) - ($__new_last2$i$i))|0;
 $28 = $27 >>> 2;
 $29 = $28 ^ -1;
 $scevgep4$i$i = (($24) + ($29<<2)|0);
 HEAP32[$12>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$2>>2] = 0;
 HEAP32[$this>>2] = 0;
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -24|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = (($6>>>0) / 24)&-1;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + (($8*24)|0)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$2>>2] = 0;
 HEAP32[$this>>2] = 0;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = $__n << 3;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + ($__n<<3)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (840);
 return;
}
function __ZN6ikfast18IkSolutionListBaseIdED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN6ikfast18IkSolutionListBaseIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __Z6IKasind($f) {
 $f = +$f;
 var $$06 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = $f > -1.0000020000000001;
 $3 = $f < 1.0000020000000001;
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $4 = ((($ss)) + 64|0);
  $5 = ((($ss)) + 8|0);
  HEAP32[$5>>2] = (896);
  $6 = ((($ss)) + 12|0);
  HEAP32[$ss>>2] = ((940));
  HEAP32[$4>>2] = ((960));
  $7 = ((($ss)) + 4|0);
  HEAP32[$7>>2] = 0;
  $8 = HEAP32[$ss>>2]|0;
  $9 = ((($8)) + -12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($ss) + ($10)|0);
  __ZNSt3__18ios_base4initEPv($11,$6);
  $12 = ((($ss)) + 64|0);
  $$sum$i$i$i = (($10) + 72)|0;
  $13 = (($ss) + ($$sum$i$i$i)|0);
  HEAP32[$13>>2] = 0;
  $$sum1$i$i$i = (($10) + 76)|0;
  $14 = (($ss) + ($$sum1$i$i$i)|0);
  HEAP32[$14>>2] = -1;
  HEAP32[$ss>>2] = (876);
  HEAP32[$12>>2] = (916);
  HEAP32[$5>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
  HEAP32[$6>>2] = (976);
  $15 = ((($ss)) + 44|0);
  $16 = ((($ss)) + 60|0);
  ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;HEAP32[$15+12>>2]=0|0;
  HEAP32[$16>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $17 = ((($ss)) + 8|0);
  $18 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($17,1072)|0);
  $19 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($18,1096)|0);
  $20 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($19,1144)|0);
  $21 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($20,130)|0);
  $22 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($21,1152)|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1568)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1168)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1504)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($25,1200)|0);
  $26 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$6);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($26,$1);
  ___cxa_throw(($26|0),(1944|0),(35|0));
  // unreachable;
 }
 $27 = !($f <= -1.0);
 if (!($27)) {
  $$06 = -1.5707963267949001;
  STACKTOP = sp;return (+$$06);
 }
 $28 = !($f >= 1.0);
 if (!($28)) {
  $$06 = 1.5707963267949001;
  STACKTOP = sp;return (+$$06);
 }
 $29 = (+Math_asin((+$f)));
 $$06 = $29;
 STACKTOP = sp;return (+$$06);
}
function __Z5IKabsd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_abs((+$f)));
 return (+$0);
}
function __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($agg$result,$fy,$fx,$epsilon) {
 $agg$result = $agg$result|0;
 $fy = +$fy;
 $fx = +$fx;
 $epsilon = +$epsilon;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($agg$result)) + 8|0);
 HEAP8[$0>>0] = 0;
 HEAPF64[$agg$result>>3] = 0.0;
 $1 = (__Z13__DOUBLE_BITSd($fy)|0);
 $2 = tempRet0;
 $3 = $2 & 2147483647;
 $4 = ($3>>>0)>(2146435072);
 $5 = ($1>>>0)>(0);
 $6 = ($3|0)==(2146435072);
 $7 = $6 & $5;
 $8 = $4 | $7;
 if ($8) {
  return;
 }
 $9 = (__Z13__DOUBLE_BITSd($fx)|0);
 $10 = tempRet0;
 $11 = $10 & 2147483647;
 $12 = ($11>>>0)>(2146435072);
 $13 = ($9>>>0)>(0);
 $14 = ($11|0)==(2146435072);
 $15 = $14 & $13;
 $16 = $12 | $15;
 if ($16) {
  return;
 }
 $17 = (+__Z5IKabsd($fy));
 $18 = !($17 >= 1.9999999999999999E-6);
 if ($18) {
  $19 = (+__Z5IKabsd($fx));
  $20 = $19 > 1.9999999999999999E-6;
  if (!($20)) {
   return;
  }
 }
 $21 = (+__Z13IKatan2Simpledd($fy,$fx));
 HEAPF64[$agg$result>>3] = $21;
 HEAP8[$0>>0] = 1;
 return;
}
function __Z6IKsqrtd($f) {
 $f = +$f;
 var $$0 = 0.0, $0 = 0, $1 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = !($f <= 0.0);
 if ($0) {
  $1 = (+Math_sqrt((+$f)));
  $$0 = $1;
 } else {
  $$0 = 0.0;
 }
 return (+$$0);
}
function __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($agg$result,$f,$n) {
 $agg$result = $agg$result|0;
 $f = +$f;
 $n = $n|0;
 var $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0.0, $num$02 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($agg$result)) + 8|0);
 HEAP8[$0>>0] = 1;
 if ((($n|0) == 0)) {
  HEAPF64[$agg$result>>3] = 1.0;
  return;
 } else if ((($n|0) == 1)) {
  HEAPF64[$agg$result>>3] = $f;
  return;
 } else {
  $1 = ($n|0)<(0);
  if ($1) {
   $2 = $f == 0.0;
   if ($2) {
    HEAP8[$0>>0] = 0;
    HEAPF64[$agg$result>>3] = 1.0E+30;
    return;
   }
   $3 = ($n|0)==(-1);
   if ($3) {
    $4 = 1.0 / $f;
    HEAPF64[$agg$result>>3] = $4;
    return;
   }
  }
  $5 = ($n|0)>(0);
  $6 = (0 - ($n))|0;
  $7 = $5 ? $n : $6;
  if ((($7|0) == 2)) {
   $8 = $f * $f;
   HEAPF64[$agg$result>>3] = $8;
  } else if ((($7|0) == 3)) {
   $9 = $f * $f;
   $10 = $9 * $f;
   HEAPF64[$agg$result>>3] = $10;
  } else {
   HEAPF64[$agg$result>>3] = 1.0;
   $11 = ($7|0)>(0);
   if ($11) {
    $$01 = $f;$num$02 = $7;
    while(1) {
     $12 = $num$02 & 1;
     $13 = ($12|0)==(0);
     if (!($13)) {
      $14 = +HEAPF64[$agg$result>>3];
      $15 = $$01 * $14;
      HEAPF64[$agg$result>>3] = $15;
     }
     $16 = $num$02 >> 1;
     $17 = $$01 * $$01;
     $18 = ($16|0)>(0);
     if ($18) {
      $$01 = $17;$num$02 = $16;
     } else {
      break;
     }
    }
   }
  }
  if (!($1)) {
   return;
  }
  $19 = +HEAPF64[$agg$result>>3];
  $20 = 1.0 / $19;
  HEAPF64[$agg$result>>3] = $20;
  return;
 }
}
function __Z6IKsignd($f) {
 $f = +$f;
 var $$ = 0.0, $$0 = 0.0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f > 0.0;
 $1 = $f < 0.0;
 $$ = $1 ? -1.0 : 0.0;
 $$0 = $0 ? 1.0 : $$;
 return (+$$0);
}
function __Z6IKfmoddd($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0$lcssa = 0.0, $$01 = 0.0, $0 = 0, $1 = 0.0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $x < 0.0;
 if ($0) {
  $$01 = $x;
  while(1) {
   $1 = $$01 + $y;
   $2 = $1 < 0.0;
   if ($2) {
    $$01 = $1;
   } else {
    $$0$lcssa = $1;
    break;
   }
  }
 } else {
  $$0$lcssa = $x;
 }
 $3 = (+_fmod($$0$lcssa,$y));
 return (+$3);
}
function __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions) {
 $this = $this|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0.0, $1001 = 0.0, $1002 = 0.0, $1003 = 0.0, $1004 = 0.0, $1005 = 0.0, $1006 = 0.0, $1007 = 0.0, $1008 = 0.0, $1009 = 0.0, $101 = 0, $1010 = 0.0, $1011 = 0.0, $1012 = 0.0, $1013 = 0.0, $1014 = 0.0;
 var $1015 = 0.0, $1016 = 0.0, $1017 = 0.0, $1018 = 0.0, $1019 = 0.0, $102 = 0, $1020 = 0.0, $1021 = 0.0, $1022 = 0.0, $1023 = 0.0, $1024 = 0.0, $1025 = 0.0, $1026 = 0.0, $1027 = 0.0, $1028 = 0.0, $1029 = 0.0, $103 = 0, $1030 = 0.0, $1031 = 0.0, $1032 = 0.0;
 var $1033 = 0.0, $1034 = 0.0, $1035 = 0, $1036 = 0.0, $1037 = 0.0, $1038 = 0.0, $1039 = 0.0, $104 = 0, $1040 = 0.0, $1041 = 0.0, $1042 = 0.0, $1043 = 0.0, $1044 = 0.0, $1045 = 0.0, $1046 = 0, $1047 = 0.0, $1048 = 0.0, $1049 = 0, $105 = 0, $1050 = 0.0;
 var $1051 = 0, $1052 = 0.0, $1053 = 0, $1054 = 0.0, $1055 = 0, $1056 = 0.0, $1057 = 0, $1058 = 0.0, $1059 = 0.0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0.0, $1063 = 0.0, $1064 = 0.0, $1065 = 0.0, $1066 = 0.0, $1067 = 0.0, $1068 = 0.0, $1069 = 0.0;
 var $107 = 0, $1070 = 0.0, $1071 = 0, $1072 = 0.0, $1073 = 0, $1074 = 0.0, $1075 = 0.0, $1076 = 0, $1077 = 0.0, $1078 = 0, $1079 = 0.0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0;
 var $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0.0, $1091 = 0, $1092 = 0.0, $1093 = 0.0, $1094 = 0.0, $1095 = 0, $1096 = 0.0, $1097 = 0, $1098 = 0.0, $1099 = 0.0, $11 = 0, $110 = 0, $1100 = 0.0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0.0;
 var $1105 = 0, $1106 = 0.0, $1107 = 0, $1108 = 0.0, $1109 = 0.0, $111 = 0, $1110 = 0.0, $1111 = 0.0, $1112 = 0.0, $1113 = 0.0, $1114 = 0.0, $1115 = 0.0, $1116 = 0.0, $1117 = 0.0, $1118 = 0, $1119 = 0.0, $112 = 0, $1120 = 0.0, $1121 = 0.0, $1122 = 0.0;
 var $1123 = 0.0, $1124 = 0.0, $1125 = 0.0, $1126 = 0.0, $1127 = 0.0, $1128 = 0, $1129 = 0.0, $113 = 0, $1130 = 0.0, $1131 = 0.0, $1132 = 0.0, $1133 = 0, $1134 = 0.0, $1135 = 0.0, $1136 = 0.0, $1137 = 0.0, $1138 = 0.0, $1139 = 0, $114 = 0, $1140 = 0.0;
 var $1141 = 0.0, $1142 = 0.0, $1143 = 0.0, $1144 = 0.0, $1145 = 0.0, $1146 = 0.0, $1147 = 0.0, $1148 = 0.0, $1149 = 0.0, $115 = 0, $1150 = 0.0, $1151 = 0.0, $1152 = 0.0, $1153 = 0, $1154 = 0.0, $1155 = 0, $1156 = 0.0, $1157 = 0.0, $1158 = 0.0, $1159 = 0.0;
 var $116 = 0, $1160 = 0.0, $1161 = 0.0, $1162 = 0.0, $1163 = 0.0, $1164 = 0.0, $1165 = 0.0, $1166 = 0.0, $1167 = 0.0, $1168 = 0.0, $1169 = 0.0, $117 = 0, $1170 = 0.0, $1171 = 0.0, $1172 = 0.0, $1173 = 0.0, $1174 = 0.0, $1175 = 0.0, $1176 = 0.0, $1177 = 0.0;
 var $1178 = 0.0, $1179 = 0.0, $118 = 0, $1180 = 0.0, $1181 = 0.0, $1182 = 0.0, $1183 = 0.0, $1184 = 0.0, $1185 = 0.0, $1186 = 0.0, $1187 = 0.0, $1188 = 0.0, $1189 = 0.0, $119 = 0, $1190 = 0.0, $1191 = 0.0, $1192 = 0.0, $1193 = 0.0, $1194 = 0, $1195 = 0.0;
 var $1196 = 0.0, $1197 = 0.0, $1198 = 0.0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0.0, $1201 = 0, $1202 = 0.0, $1203 = 0, $1204 = 0.0, $1205 = 0, $1206 = 0.0, $1207 = 0, $1208 = 0.0, $1209 = 0, $121 = 0, $1210 = 0.0, $1211 = 0, $1212 = 0;
 var $1213 = 0, $1214 = 0.0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0.0, $1229 = 0, $123 = 0, $1230 = 0;
 var $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0.0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0;
 var $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0.0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0;
 var $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0.0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0.0, $1285 = 0;
 var $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0.0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0;
 var $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0.0, $1316 = 0.0, $1317 = 0.0, $1318 = 0.0, $1319 = 0.0, $132 = 0, $1320 = 0.0;
 var $1321 = 0.0, $1322 = 0.0, $1323 = 0.0, $1324 = 0.0, $1325 = 0.0, $1326 = 0, $1327 = 0.0, $1328 = 0.0, $1329 = 0.0, $133 = 0, $1330 = 0, $1331 = 0.0, $1332 = 0, $1333 = 0.0, $1334 = 0, $1335 = 0.0, $1336 = 0, $1337 = 0.0, $1338 = 0, $1339 = 0.0;
 var $134 = 0, $1340 = 0.0, $1341 = 0, $1342 = 0, $1343 = 0.0, $1344 = 0.0, $1345 = 0.0, $1346 = 0.0, $1347 = 0.0, $1348 = 0.0, $1349 = 0.0, $135 = 0, $1350 = 0.0, $1351 = 0.0, $1352 = 0, $1353 = 0.0, $1354 = 0, $1355 = 0.0, $1356 = 0.0, $1357 = 0;
 var $1358 = 0.0, $1359 = 0, $136 = 0, $1360 = 0.0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0.0, $1372 = 0, $1373 = 0.0, $1374 = 0.0, $1375 = 0.0;
 var $1376 = 0, $1377 = 0.0, $1378 = 0, $1379 = 0.0, $138 = 0, $1380 = 0.0, $1381 = 0.0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0.0, $1386 = 0, $1387 = 0.0, $1388 = 0, $1389 = 0.0, $139 = 0, $1390 = 0.0, $1391 = 0.0, $1392 = 0.0, $1393 = 0.0;
 var $1394 = 0.0, $1395 = 0.0, $1396 = 0.0, $1397 = 0.0, $1398 = 0.0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0.0, $1401 = 0.0, $1402 = 0.0, $1403 = 0.0, $1404 = 0.0, $1405 = 0.0, $1406 = 0.0, $1407 = 0.0, $1408 = 0, $1409 = 0.0, $141 = 0, $1410 = 0.0;
 var $1411 = 0.0, $1412 = 0.0, $1413 = 0.0, $1414 = 0, $1415 = 0.0, $1416 = 0.0, $1417 = 0.0, $1418 = 0.0, $1419 = 0.0, $142 = 0, $1420 = 0, $1421 = 0.0, $1422 = 0.0, $1423 = 0.0, $1424 = 0.0, $1425 = 0.0, $1426 = 0.0, $1427 = 0.0, $1428 = 0.0, $1429 = 0.0;
 var $143 = 0, $1430 = 0.0, $1431 = 0.0, $1432 = 0.0, $1433 = 0.0, $1434 = 0, $1435 = 0.0, $1436 = 0, $1437 = 0.0, $1438 = 0.0, $1439 = 0.0, $144 = 0, $1440 = 0.0, $1441 = 0.0, $1442 = 0.0, $1443 = 0.0, $1444 = 0.0, $1445 = 0.0, $1446 = 0.0, $1447 = 0.0;
 var $1448 = 0.0, $1449 = 0.0, $145 = 0, $1450 = 0.0, $1451 = 0.0, $1452 = 0.0, $1453 = 0.0, $1454 = 0.0, $1455 = 0.0, $1456 = 0.0, $1457 = 0.0, $1458 = 0.0, $1459 = 0.0, $146 = 0, $1460 = 0.0, $1461 = 0.0, $1462 = 0.0, $1463 = 0.0, $1464 = 0.0, $1465 = 0.0;
 var $1466 = 0.0, $1467 = 0.0, $1468 = 0.0, $1469 = 0.0, $147 = 0, $1470 = 0.0, $1471 = 0.0, $1472 = 0.0, $1473 = 0.0, $1474 = 0, $1475 = 0.0, $1476 = 0.0, $1477 = 0.0, $1478 = 0.0, $1479 = 0.0, $148 = 0, $1480 = 0, $1481 = 0.0, $1482 = 0, $1483 = 0.0;
 var $1484 = 0, $1485 = 0.0, $1486 = 0, $1487 = 0.0, $1488 = 0, $1489 = 0.0, $149 = 0, $1490 = 0, $1491 = 0.0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0.0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0;
 var $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0.0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0;
 var $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0.0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0.0;
 var $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0.0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0;
 var $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0.0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0;
 var $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0.0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0;
 var $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0.0, $1597 = 0, $1598 = 0, $1599 = 0.0, $16 = 0, $160 = 0, $1600 = 0.0, $1601 = 0, $1602 = 0, $1603 = 0.0, $1604 = 0.0, $1605 = 0.0, $1606 = 0.0, $1607 = 0.0, $1608 = 0.0, $1609 = 0.0;
 var $161 = 0, $1610 = 0.0, $1611 = 0.0, $1612 = 0.0, $1613 = 0, $1614 = 0.0, $1615 = 0.0, $1616 = 0, $1617 = 0.0, $1618 = 0.0, $1619 = 0.0, $162 = 0, $1620 = 0.0, $1621 = 0.0, $1622 = 0, $1623 = 0.0, $1624 = 0.0, $1625 = 0.0, $1626 = 0.0, $1627 = 0.0;
 var $1628 = 0.0, $1629 = 0.0, $163 = 0, $1630 = 0.0, $1631 = 0.0, $1632 = 0.0, $1633 = 0.0, $1634 = 0.0, $1635 = 0.0, $1636 = 0, $1637 = 0.0, $1638 = 0, $1639 = 0.0, $164 = 0, $1640 = 0.0, $1641 = 0.0, $1642 = 0.0, $1643 = 0.0, $1644 = 0.0, $1645 = 0.0;
 var $1646 = 0.0, $1647 = 0.0, $1648 = 0.0, $1649 = 0.0, $165 = 0, $1650 = 0.0, $1651 = 0.0, $1652 = 0.0, $1653 = 0.0, $1654 = 0.0, $1655 = 0.0, $1656 = 0.0, $1657 = 0.0, $1658 = 0.0, $1659 = 0.0, $166 = 0, $1660 = 0.0, $1661 = 0.0, $1662 = 0.0, $1663 = 0.0;
 var $1664 = 0.0, $1665 = 0.0, $1666 = 0.0, $1667 = 0.0, $1668 = 0.0, $1669 = 0.0, $167 = 0, $1670 = 0.0, $1671 = 0.0, $1672 = 0.0, $1673 = 0.0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0, $1677 = 0.0, $1678 = 0.0, $1679 = 0.0, $168 = 0, $1680 = 0.0, $1681 = 0.0;
 var $1682 = 0.0, $1683 = 0.0, $1684 = 0.0, $1685 = 0.0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0.0, $169 = 0, $1690 = 0.0, $1691 = 0.0, $1692 = 0.0, $1693 = 0.0, $1694 = 0, $1695 = 0.0, $1696 = 0.0, $1697 = 0.0, $1698 = 0, $1699 = 0.0, $17 = 0;
 var $170 = 0, $1700 = 0, $1701 = 0.0, $1702 = 0, $1703 = 0.0, $1704 = 0, $1705 = 0.0, $1706 = 0, $1707 = 0.0, $1708 = 0, $1709 = 0.0, $171 = 0, $1710 = 0, $1711 = 0.0, $1712 = 0.0, $1713 = 0.0, $1714 = 0.0, $1715 = 0.0, $1716 = 0.0, $1717 = 0.0;
 var $1718 = 0.0, $1719 = 0.0, $172 = 0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0.0, $1724 = 0.0, $1725 = 0.0, $1726 = 0.0, $1727 = 0.0, $1728 = 0.0, $1729 = 0.0, $173 = 0, $1730 = 0.0, $1731 = 0.0, $1732 = 0.0, $1733 = 0.0, $1734 = 0.0, $1735 = 0.0;
 var $1736 = 0.0, $1737 = 0.0, $1738 = 0.0, $1739 = 0.0, $174 = 0, $1740 = 0.0, $1741 = 0.0, $1742 = 0.0, $1743 = 0.0, $1744 = 0.0, $1745 = 0.0, $1746 = 0.0, $1747 = 0.0, $1748 = 0.0, $1749 = 0.0, $175 = 0, $1750 = 0.0, $1751 = 0.0, $1752 = 0.0, $1753 = 0.0;
 var $1754 = 0.0, $1755 = 0.0, $1756 = 0.0, $1757 = 0.0, $1758 = 0.0, $1759 = 0.0, $176 = 0, $1760 = 0.0, $1761 = 0.0, $1762 = 0.0, $1763 = 0.0, $1764 = 0.0, $1765 = 0.0, $1766 = 0.0, $1767 = 0.0, $1768 = 0.0, $1769 = 0.0, $177 = 0, $1770 = 0.0, $1771 = 0.0;
 var $1772 = 0.0, $1773 = 0.0, $1774 = 0.0, $1775 = 0.0, $1776 = 0.0, $1777 = 0.0, $1778 = 0.0, $1779 = 0.0, $178 = 0, $1780 = 0.0, $1781 = 0.0, $1782 = 0.0, $1783 = 0.0, $1784 = 0.0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0.0, $1789 = 0.0, $179 = 0;
 var $1790 = 0.0, $1791 = 0.0, $1792 = 0.0, $1793 = 0.0, $1794 = 0.0, $1795 = 0.0, $1796 = 0.0, $1797 = 0.0, $1798 = 0.0, $1799 = 0.0, $18 = 0, $180 = 0, $1800 = 0.0, $1801 = 0.0, $1802 = 0.0, $1803 = 0.0, $1804 = 0.0, $1805 = 0.0, $1806 = 0.0, $1807 = 0.0;
 var $1808 = 0.0, $1809 = 0.0, $181 = 0, $1810 = 0.0, $1811 = 0.0, $1812 = 0.0, $1813 = 0.0, $1814 = 0.0, $1815 = 0.0, $1816 = 0.0, $1817 = 0.0, $1818 = 0.0, $1819 = 0.0, $182 = 0, $1820 = 0.0, $1821 = 0.0, $1822 = 0.0, $1823 = 0.0, $1824 = 0.0, $1825 = 0.0;
 var $1826 = 0.0, $1827 = 0.0, $1828 = 0.0, $1829 = 0.0, $183 = 0, $1830 = 0.0, $1831 = 0.0, $1832 = 0.0, $1833 = 0.0, $1834 = 0.0, $1835 = 0.0, $1836 = 0.0, $1837 = 0.0, $1838 = 0.0, $1839 = 0, $184 = 0, $1840 = 0.0, $1841 = 0.0, $1842 = 0, $1843 = 0.0;
 var $1844 = 0.0, $1845 = 0.0, $1846 = 0.0, $1847 = 0.0, $1848 = 0.0, $1849 = 0.0, $185 = 0, $1850 = 0.0, $1851 = 0.0, $1852 = 0.0, $1853 = 0.0, $1854 = 0.0, $1855 = 0.0, $1856 = 0.0, $1857 = 0.0, $1858 = 0.0, $1859 = 0.0, $186 = 0, $1860 = 0.0, $1861 = 0.0;
 var $1862 = 0.0, $1863 = 0.0, $1864 = 0.0, $1865 = 0.0, $1866 = 0.0, $1867 = 0.0, $1868 = 0.0, $1869 = 0.0, $187 = 0, $1870 = 0.0, $1871 = 0.0, $1872 = 0.0, $1873 = 0.0, $1874 = 0.0, $1875 = 0.0, $1876 = 0.0, $1877 = 0.0, $1878 = 0.0, $1879 = 0.0, $188 = 0;
 var $1880 = 0.0, $1881 = 0.0, $1882 = 0.0, $1883 = 0.0, $1884 = 0.0, $1885 = 0.0, $1886 = 0.0, $1887 = 0.0, $1888 = 0.0, $1889 = 0.0, $189 = 0, $1890 = 0.0, $1891 = 0.0, $1892 = 0.0, $1893 = 0.0, $1894 = 0.0, $1895 = 0.0, $1896 = 0.0, $1897 = 0.0, $1898 = 0.0;
 var $1899 = 0.0, $19 = 0, $190 = 0, $1900 = 0.0, $1901 = 0.0, $1902 = 0.0, $1903 = 0.0, $1904 = 0.0, $1905 = 0.0, $1906 = 0.0, $1907 = 0.0, $1908 = 0.0, $1909 = 0.0, $191 = 0, $1910 = 0.0, $1911 = 0.0, $1912 = 0.0, $1913 = 0.0, $1914 = 0.0, $1915 = 0.0;
 var $1916 = 0.0, $1917 = 0.0, $1918 = 0.0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $1921 = 0.0, $1922 = 0.0, $1923 = 0.0, $1924 = 0.0, $1925 = 0.0, $1926 = 0.0, $1927 = 0.0, $1928 = 0.0, $1929 = 0.0, $193 = 0, $1930 = 0.0, $1931 = 0.0, $1932 = 0.0, $1933 = 0.0;
 var $1934 = 0.0, $1935 = 0.0, $1936 = 0.0, $1937 = 0.0, $1938 = 0.0, $1939 = 0.0, $194 = 0, $1940 = 0.0, $1941 = 0.0, $1942 = 0.0, $1943 = 0.0, $1944 = 0.0, $1945 = 0.0, $1946 = 0.0, $1947 = 0.0, $1948 = 0.0, $1949 = 0.0, $195 = 0, $1950 = 0.0, $1951 = 0.0;
 var $1952 = 0.0, $1953 = 0.0, $1954 = 0.0, $1955 = 0.0, $1956 = 0.0, $1957 = 0.0, $1958 = 0.0, $1959 = 0.0, $196 = 0, $1960 = 0.0, $1961 = 0.0, $1962 = 0.0, $1963 = 0.0, $1964 = 0.0, $1965 = 0.0, $1966 = 0.0, $1967 = 0.0, $1968 = 0.0, $1969 = 0.0, $197 = 0;
 var $1970 = 0.0, $1971 = 0, $1972 = 0.0, $1973 = 0.0, $1974 = 0, $1975 = 0.0, $1976 = 0.0, $1977 = 0.0, $1978 = 0.0, $1979 = 0.0, $198 = 0, $1980 = 0.0, $1981 = 0.0, $1982 = 0.0, $1983 = 0.0, $1984 = 0.0, $1985 = 0.0, $1986 = 0.0, $1987 = 0.0, $1988 = 0.0;
 var $1989 = 0.0, $199 = 0, $1990 = 0.0, $1991 = 0.0, $1992 = 0.0, $1993 = 0.0, $1994 = 0.0, $1995 = 0.0, $1996 = 0.0, $1997 = 0.0, $1998 = 0.0, $1999 = 0.0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0.0, $2001 = 0.0, $2002 = 0.0, $2003 = 0.0, $2004 = 0.0;
 var $2005 = 0.0, $2006 = 0.0, $2007 = 0.0, $2008 = 0.0, $2009 = 0.0, $201 = 0, $2010 = 0.0, $2011 = 0.0, $2012 = 0.0, $2013 = 0.0, $2014 = 0.0, $2015 = 0.0, $2016 = 0.0, $2017 = 0.0, $2018 = 0.0, $2019 = 0.0, $202 = 0, $2020 = 0.0, $2021 = 0.0, $2022 = 0.0;
 var $2023 = 0.0, $2024 = 0.0, $2025 = 0.0, $2026 = 0.0, $2027 = 0.0, $2028 = 0.0, $2029 = 0.0, $203 = 0, $2030 = 0.0, $2031 = 0.0, $2032 = 0.0, $2033 = 0.0, $2034 = 0.0, $2035 = 0.0, $2036 = 0.0, $2037 = 0.0, $2038 = 0.0, $2039 = 0.0, $204 = 0, $2040 = 0.0;
 var $2041 = 0.0, $2042 = 0.0, $2043 = 0.0, $2044 = 0.0, $2045 = 0.0, $2046 = 0.0, $2047 = 0.0, $2048 = 0.0, $2049 = 0.0, $205 = 0, $2050 = 0.0, $2051 = 0.0, $2052 = 0.0, $2053 = 0.0, $2054 = 0.0, $2055 = 0.0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0, $2059 = 0.0;
 var $206 = 0, $2060 = 0.0, $2061 = 0.0, $2062 = 0.0, $2063 = 0.0, $2064 = 0.0, $2065 = 0.0, $2066 = 0.0, $2067 = 0.0, $2068 = 0.0, $2069 = 0.0, $207 = 0, $2070 = 0.0, $2071 = 0.0, $2072 = 0.0, $2073 = 0.0, $2074 = 0.0, $2075 = 0.0, $2076 = 0.0, $2077 = 0.0;
 var $2078 = 0.0, $2079 = 0.0, $208 = 0, $2080 = 0.0, $2081 = 0.0, $2082 = 0.0, $2083 = 0.0, $2084 = 0.0, $2085 = 0.0, $2086 = 0.0, $2087 = 0.0, $2088 = 0.0, $2089 = 0.0, $209 = 0, $2090 = 0.0, $2091 = 0.0, $2092 = 0.0, $2093 = 0.0, $2094 = 0.0, $2095 = 0.0;
 var $2096 = 0.0, $2097 = 0.0, $2098 = 0.0, $2099 = 0.0, $21 = 0, $210 = 0, $2100 = 0.0, $2101 = 0.0, $2102 = 0.0, $2103 = 0.0, $2104 = 0, $2105 = 0.0, $2106 = 0.0, $2107 = 0, $2108 = 0.0, $2109 = 0, $211 = 0, $2110 = 0.0, $2111 = 0.0, $2112 = 0.0;
 var $2113 = 0.0, $2114 = 0.0, $2115 = 0.0, $2116 = 0.0, $2117 = 0.0, $2118 = 0.0, $2119 = 0.0, $212 = 0, $2120 = 0.0, $2121 = 0.0, $2122 = 0.0, $2123 = 0.0, $2124 = 0.0, $2125 = 0.0, $2126 = 0.0, $2127 = 0.0, $2128 = 0.0, $2129 = 0.0, $213 = 0, $2130 = 0.0;
 var $2131 = 0.0, $2132 = 0.0, $2133 = 0.0, $2134 = 0.0, $2135 = 0.0, $2136 = 0.0, $2137 = 0.0, $2138 = 0.0, $2139 = 0.0, $214 = 0, $2140 = 0.0, $2141 = 0.0, $2142 = 0.0, $2143 = 0, $2144 = 0.0, $2145 = 0.0, $2146 = 0, $2147 = 0.0, $2148 = 0, $2149 = 0.0;
 var $215 = 0, $2150 = 0, $2151 = 0.0, $2152 = 0, $2153 = 0.0, $2154 = 0, $2155 = 0.0, $2156 = 0, $2157 = 0.0, $2158 = 0, $2159 = 0.0, $216 = 0, $2160 = 0.0, $2161 = 0.0, $2162 = 0, $2163 = 0, $2164 = 0.0, $2165 = 0.0, $2166 = 0, $2167 = 0;
 var $2168 = 0.0, $2169 = 0.0, $217 = 0, $2170 = 0.0, $2171 = 0.0, $2172 = 0.0, $2173 = 0.0, $2174 = 0.0, $2175 = 0, $2176 = 0.0, $2177 = 0, $2178 = 0.0, $2179 = 0.0, $218 = 0, $2180 = 0.0, $2181 = 0.0, $2182 = 0.0, $2183 = 0.0, $2184 = 0.0, $2185 = 0.0;
 var $2186 = 0.0, $2187 = 0.0, $2188 = 0.0, $2189 = 0.0, $219 = 0, $2190 = 0.0, $2191 = 0.0, $2192 = 0.0, $2193 = 0.0, $2194 = 0.0, $2195 = 0.0, $2196 = 0.0, $2197 = 0.0, $2198 = 0.0, $2199 = 0.0, $22 = 0, $220 = 0, $2200 = 0.0, $2201 = 0.0, $2202 = 0.0;
 var $2203 = 0.0, $2204 = 0.0, $2205 = 0.0, $2206 = 0.0, $2207 = 0.0, $2208 = 0.0, $2209 = 0.0, $221 = 0, $2210 = 0, $2211 = 0.0, $2212 = 0.0, $2213 = 0.0, $2214 = 0, $2215 = 0.0, $2216 = 0, $2217 = 0.0, $2218 = 0, $2219 = 0.0, $222 = 0, $2220 = 0;
 var $2221 = 0.0, $2222 = 0, $2223 = 0.0, $2224 = 0, $2225 = 0.0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0.0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0;
 var $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0.0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0.0;
 var $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0.0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0;
 var $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0.0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0;
 var $2294 = 0, $2295 = 0, $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0.0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0;
 var $2311 = 0, $2312 = 0, $2313 = 0.0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0.0, $2329 = 0.0;
 var $233 = 0, $2330 = 0.0, $2331 = 0.0, $2332 = 0.0, $2333 = 0.0, $2334 = 0.0, $2335 = 0.0, $2336 = 0.0, $2337 = 0.0, $2338 = 0.0, $2339 = 0.0, $234 = 0, $2340 = 0.0, $2341 = 0.0, $2342 = 0.0, $2343 = 0.0, $2344 = 0.0, $2345 = 0.0, $2346 = 0.0, $2347 = 0.0;
 var $2348 = 0.0, $2349 = 0.0, $235 = 0, $2350 = 0.0, $2351 = 0.0, $2352 = 0.0, $2353 = 0.0, $2354 = 0.0, $2355 = 0.0, $2356 = 0.0, $2357 = 0.0, $2358 = 0.0, $2359 = 0.0, $236 = 0, $2360 = 0.0, $2361 = 0, $2362 = 0.0, $2363 = 0.0, $2364 = 0, $2365 = 0.0;
 var $2366 = 0, $2367 = 0.0, $2368 = 0, $2369 = 0.0, $237 = 0, $2370 = 0, $2371 = 0.0, $2372 = 0, $2373 = 0.0, $2374 = 0, $2375 = 0.0, $2376 = 0, $2377 = 0.0, $2378 = 0, $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0, $2382 = 0.0, $2383 = 0.0;
 var $2384 = 0, $2385 = 0.0, $2386 = 0.0, $2387 = 0.0, $2388 = 0.0, $2389 = 0.0, $239 = 0, $2390 = 0, $2391 = 0.0, $2392 = 0.0, $2393 = 0.0, $2394 = 0.0, $2395 = 0.0, $2396 = 0, $2397 = 0.0, $2398 = 0, $2399 = 0.0, $24 = 0, $240 = 0, $2400 = 0.0;
 var $2401 = 0.0, $2402 = 0.0, $2403 = 0.0, $2404 = 0.0, $2405 = 0.0, $2406 = 0.0, $2407 = 0.0, $2408 = 0.0, $2409 = 0.0, $241 = 0, $2410 = 0.0, $2411 = 0.0, $2412 = 0.0, $2413 = 0.0, $2414 = 0.0, $2415 = 0.0, $2416 = 0.0, $2417 = 0.0, $2418 = 0.0, $2419 = 0.0;
 var $242 = 0, $2420 = 0.0, $2421 = 0.0, $2422 = 0.0, $2423 = 0.0, $2424 = 0.0, $2425 = 0.0, $2426 = 0.0, $2427 = 0.0, $2428 = 0.0, $2429 = 0.0, $243 = 0, $2430 = 0, $2431 = 0.0, $2432 = 0.0, $2433 = 0.0, $2434 = 0, $2435 = 0.0, $2436 = 0, $2437 = 0.0;
 var $2438 = 0, $2439 = 0.0, $244 = 0, $2440 = 0, $2441 = 0.0, $2442 = 0, $2443 = 0.0, $2444 = 0, $2445 = 0.0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0.0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0;
 var $2456 = 0, $2457 = 0, $2458 = 0, $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0.0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0;
 var $2474 = 0, $2475 = 0, $2476 = 0, $2477 = 0.0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0.0;
 var $2492 = 0, $2493 = 0, $2494 = 0, $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0.0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0;
 var $251 = 0, $2510 = 0, $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0.0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0;
 var $2528 = 0, $2529 = 0, $253 = 0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0.0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0;
 var $2546 = 0, $2547 = 0, $2548 = 0.0, $2549 = 0.0, $255 = 0, $2550 = 0.0, $2551 = 0.0, $2552 = 0.0, $2553 = 0.0, $2554 = 0.0, $2555 = 0.0, $2556 = 0.0, $2557 = 0.0, $2558 = 0.0, $2559 = 0.0, $256 = 0, $2560 = 0.0, $2561 = 0.0, $2562 = 0.0, $2563 = 0.0;
 var $2564 = 0.0, $2565 = 0.0, $2566 = 0.0, $2567 = 0.0, $2568 = 0.0, $2569 = 0.0, $257 = 0, $2570 = 0.0, $2571 = 0.0, $2572 = 0.0, $2573 = 0.0, $2574 = 0.0, $2575 = 0.0, $2576 = 0.0, $2577 = 0.0, $2578 = 0.0, $2579 = 0.0, $258 = 0, $2580 = 0.0, $2581 = 0.0;
 var $2582 = 0.0, $2583 = 0.0, $2584 = 0, $2585 = 0.0, $2586 = 0.0, $2587 = 0, $2588 = 0.0, $2589 = 0, $259 = 0, $2590 = 0.0, $2591 = 0, $2592 = 0.0, $2593 = 0, $2594 = 0.0, $2595 = 0, $2596 = 0.0, $2597 = 0, $2598 = 0.0, $2599 = 0, $26 = 0;
 var $260 = 0, $2600 = 0.0, $2601 = 0, $2602 = 0.0, $2603 = 0, $2604 = 0.0, $2605 = 0, $2606 = 0.0, $2607 = 0.0, $2608 = 0, $2609 = 0.0, $261 = 0, $2610 = 0.0, $2611 = 0.0, $2612 = 0, $2613 = 0.0, $2614 = 0.0, $2615 = 0.0, $2616 = 0.0, $2617 = 0.0;
 var $2618 = 0, $2619 = 0.0, $262 = 0, $2620 = 0.0, $2621 = 0.0, $2622 = 0.0, $2623 = 0.0, $2624 = 0.0, $2625 = 0, $2626 = 0.0, $2627 = 0, $2628 = 0.0, $2629 = 0.0, $263 = 0, $2630 = 0.0, $2631 = 0.0, $2632 = 0.0, $2633 = 0.0, $2634 = 0.0, $2635 = 0.0;
 var $2636 = 0.0, $2637 = 0.0, $2638 = 0.0, $2639 = 0.0, $264 = 0, $2640 = 0.0, $2641 = 0.0, $2642 = 0.0, $2643 = 0.0, $2644 = 0.0, $2645 = 0.0, $2646 = 0.0, $2647 = 0.0, $2648 = 0.0, $2649 = 0.0, $265 = 0, $2650 = 0.0, $2651 = 0.0, $2652 = 0.0, $2653 = 0.0;
 var $2654 = 0.0, $2655 = 0.0, $2656 = 0.0, $2657 = 0.0, $2658 = 0.0, $2659 = 0.0, $266 = 0, $2660 = 0.0, $2661 = 0, $2662 = 0.0, $2663 = 0.0, $2664 = 0.0, $2665 = 0, $2666 = 0.0, $2667 = 0, $2668 = 0.0, $2669 = 0, $267 = 0, $2670 = 0.0, $2671 = 0;
 var $2672 = 0.0, $2673 = 0, $2674 = 0.0, $2675 = 0, $2676 = 0.0, $2677 = 0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0.0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0, $2689 = 0, $269 = 0;
 var $2690 = 0, $2691 = 0, $2692 = 0, $2693 = 0, $2694 = 0.0, $2695 = 0, $2696 = 0, $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0;
 var $2708 = 0.0, $2709 = 0, $271 = 0, $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0.0, $2723 = 0, $2724 = 0, $2725 = 0;
 var $2726 = 0, $2727 = 0, $2728 = 0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0.0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0;
 var $2744 = 0, $2745 = 0, $2746 = 0, $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0.0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0;
 var $2762 = 0, $2763 = 0, $2764 = 0.0, $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0.0, $278 = 0;
 var $2780 = 0.0, $2781 = 0.0, $2782 = 0.0, $2783 = 0.0, $2784 = 0.0, $2785 = 0.0, $2786 = 0.0, $2787 = 0.0, $2788 = 0.0, $2789 = 0.0, $279 = 0, $2790 = 0.0, $2791 = 0.0, $2792 = 0.0, $2793 = 0.0, $2794 = 0.0, $2795 = 0.0, $2796 = 0.0, $2797 = 0.0, $2798 = 0.0;
 var $2799 = 0.0, $28 = 0, $280 = 0, $2800 = 0.0, $2801 = 0.0, $2802 = 0.0, $2803 = 0.0, $2804 = 0.0, $2805 = 0.0, $2806 = 0.0, $2807 = 0.0, $2808 = 0.0, $2809 = 0, $281 = 0, $2810 = 0.0, $2811 = 0.0, $2812 = 0, $2813 = 0.0, $2814 = 0, $2815 = 0.0;
 var $2816 = 0, $2817 = 0.0, $2818 = 0, $2819 = 0.0, $282 = 0, $2820 = 0, $2821 = 0.0, $2822 = 0, $2823 = 0.0, $2824 = 0, $2825 = 0.0, $2826 = 0.0, $2827 = 0.0, $2828 = 0, $2829 = 0.0, $283 = 0, $2830 = 0.0, $2831 = 0, $2832 = 0.0, $2833 = 0.0;
 var $2834 = 0.0, $2835 = 0.0, $2836 = 0.0, $2837 = 0, $2838 = 0.0, $2839 = 0.0, $284 = 0, $2840 = 0.0, $2841 = 0.0, $2842 = 0.0, $2843 = 0.0, $2844 = 0, $2845 = 0.0, $2846 = 0, $2847 = 0.0, $2848 = 0.0, $2849 = 0.0, $285 = 0, $2850 = 0.0, $2851 = 0.0;
 var $2852 = 0.0, $2853 = 0.0, $2854 = 0.0, $2855 = 0.0, $2856 = 0.0, $2857 = 0.0, $2858 = 0.0, $2859 = 0.0, $286 = 0, $2860 = 0.0, $2861 = 0.0, $2862 = 0.0, $2863 = 0.0, $2864 = 0.0, $2865 = 0.0, $2866 = 0.0, $2867 = 0.0, $2868 = 0.0, $2869 = 0.0, $287 = 0;
 var $2870 = 0.0, $2871 = 0.0, $2872 = 0.0, $2873 = 0.0, $2874 = 0.0, $2875 = 0.0, $2876 = 0.0, $2877 = 0.0, $2878 = 0, $2879 = 0.0, $288 = 0, $2880 = 0.0, $2881 = 0.0, $2882 = 0, $2883 = 0.0, $2884 = 0, $2885 = 0.0, $2886 = 0, $2887 = 0.0, $2888 = 0;
 var $2889 = 0.0, $289 = 0, $2890 = 0, $2891 = 0.0, $2892 = 0, $2893 = 0.0, $2894 = 0, $2895 = 0, $2896 = 0, $2897 = 0.0, $2898 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $2902 = 0, $2903 = 0, $2904 = 0, $2905 = 0;
 var $2906 = 0, $2907 = 0, $2908 = 0, $2909 = 0, $291 = 0, $2910 = 0, $2911 = 0.0, $2912 = 0, $2913 = 0, $2914 = 0, $2915 = 0, $2916 = 0, $2917 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2921 = 0, $2922 = 0, $2923 = 0;
 var $2924 = 0, $2925 = 0.0, $2926 = 0, $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2934 = 0, $2935 = 0, $2936 = 0, $2937 = 0, $2938 = 0, $2939 = 0.0, $294 = 0, $2940 = 0, $2941 = 0;
 var $2942 = 0, $2943 = 0, $2944 = 0, $2945 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $2949 = 0, $295 = 0, $2950 = 0, $2951 = 0, $2952 = 0, $2953 = 0.0, $2954 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $2959 = 0, $296 = 0;
 var $2960 = 0, $2961 = 0, $2962 = 0, $2963 = 0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0.0, $2968 = 0, $2969 = 0, $297 = 0, $2970 = 0, $2971 = 0, $2972 = 0, $2973 = 0, $2974 = 0, $2975 = 0, $2976 = 0, $2977 = 0, $2978 = 0;
 var $2979 = 0, $298 = 0, $2980 = 0, $2981 = 0.0, $2982 = 0, $2983 = 0, $2984 = 0, $2985 = 0, $2986 = 0, $2987 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2991 = 0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0, $2996 = 0.0;
 var $2997 = 0.0, $2998 = 0.0, $2999 = 0.0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0.0, $3001 = 0.0, $3002 = 0.0, $3003 = 0.0, $3004 = 0.0, $3005 = 0.0, $3006 = 0.0, $3007 = 0.0, $3008 = 0.0, $3009 = 0.0, $301 = 0, $3010 = 0.0, $3011 = 0.0, $3012 = 0.0;
 var $3013 = 0.0, $3014 = 0, $3015 = 0.0, $3016 = 0.0, $3017 = 0.0, $3018 = 0, $3019 = 0.0, $302 = 0, $3020 = 0, $3021 = 0.0, $3022 = 0, $3023 = 0.0, $3024 = 0, $3025 = 0.0, $3026 = 0, $3027 = 0.0, $3028 = 0, $3029 = 0.0, $303 = 0, $3030 = 0;
 var $3031 = 0.0, $3032 = 0.0, $3033 = 0.0, $3034 = 0.0, $3035 = 0.0, $3036 = 0.0, $3037 = 0.0, $3038 = 0.0, $3039 = 0.0, $304 = 0, $3040 = 0, $3041 = 0.0, $3042 = 0.0, $3043 = 0.0, $3044 = 0.0, $3045 = 0, $3046 = 0.0, $3047 = 0.0, $3048 = 0.0, $3049 = 0.0;
 var $305 = 0, $3050 = 0.0, $3051 = 0, $3052 = 0.0, $3053 = 0.0, $3054 = 0.0, $3055 = 0.0, $3056 = 0.0, $3057 = 0.0, $3058 = 0.0, $3059 = 0.0, $306 = 0, $3060 = 0.0, $3061 = 0.0, $3062 = 0.0, $3063 = 0.0, $3064 = 0.0, $3065 = 0, $3066 = 0.0, $3067 = 0;
 var $3068 = 0.0, $3069 = 0.0, $307 = 0, $3070 = 0.0, $3071 = 0.0, $3072 = 0.0, $3073 = 0.0, $3074 = 0.0, $3075 = 0.0, $3076 = 0.0, $3077 = 0.0, $3078 = 0.0, $3079 = 0.0, $308 = 0, $3080 = 0.0, $3081 = 0.0, $3082 = 0.0, $3083 = 0.0, $3084 = 0.0, $3085 = 0.0;
 var $3086 = 0.0, $3087 = 0.0, $3088 = 0.0, $3089 = 0.0, $309 = 0, $3090 = 0.0, $3091 = 0.0, $3092 = 0.0, $3093 = 0.0, $3094 = 0.0, $3095 = 0.0, $3096 = 0.0, $3097 = 0.0, $3098 = 0.0, $3099 = 0.0, $31 = 0, $310 = 0, $3100 = 0.0, $3101 = 0.0, $3102 = 0.0;
 var $3103 = 0.0, $3104 = 0.0, $3105 = 0.0, $3106 = 0, $3107 = 0.0, $3108 = 0.0, $3109 = 0.0, $311 = 0, $3110 = 0.0, $3111 = 0, $3112 = 0.0, $3113 = 0, $3114 = 0.0, $3115 = 0, $3116 = 0.0, $3117 = 0, $3118 = 0.0, $3119 = 0, $312 = 0, $3120 = 0.0;
 var $3121 = 0, $3122 = 0.0, $3123 = 0, $3124 = 0, $3125 = 0, $3126 = 0.0, $3127 = 0, $3128 = 0, $3129 = 0, $313 = 0, $3130 = 0, $3131 = 0, $3132 = 0, $3133 = 0, $3134 = 0, $3135 = 0, $3136 = 0, $3137 = 0, $3138 = 0, $3139 = 0;
 var $314 = 0, $3140 = 0.0, $3141 = 0, $3142 = 0, $3143 = 0, $3144 = 0, $3145 = 0, $3146 = 0, $3147 = 0, $3148 = 0, $3149 = 0, $315 = 0, $3150 = 0, $3151 = 0, $3152 = 0, $3153 = 0, $3154 = 0.0, $3155 = 0, $3156 = 0, $3157 = 0;
 var $3158 = 0, $3159 = 0, $316 = 0, $3160 = 0, $3161 = 0, $3162 = 0, $3163 = 0, $3164 = 0, $3165 = 0, $3166 = 0, $3167 = 0, $3168 = 0.0, $3169 = 0, $317 = 0, $3170 = 0, $3171 = 0, $3172 = 0, $3173 = 0, $3174 = 0, $3175 = 0;
 var $3176 = 0, $3177 = 0, $3178 = 0, $3179 = 0, $318 = 0, $3180 = 0, $3181 = 0, $3182 = 0.0, $3183 = 0, $3184 = 0, $3185 = 0, $3186 = 0, $3187 = 0, $3188 = 0, $3189 = 0, $319 = 0, $3190 = 0, $3191 = 0, $3192 = 0, $3193 = 0;
 var $3194 = 0, $3195 = 0, $3196 = 0.0, $3197 = 0, $3198 = 0, $3199 = 0, $32 = 0, $320 = 0, $3200 = 0, $3201 = 0, $3202 = 0, $3203 = 0, $3204 = 0, $3205 = 0, $3206 = 0, $3207 = 0, $3208 = 0, $3209 = 0, $321 = 0, $3210 = 0.0;
 var $3211 = 0, $3212 = 0, $3213 = 0, $3214 = 0, $3215 = 0, $3216 = 0, $3217 = 0, $3218 = 0, $3219 = 0, $322 = 0, $3220 = 0, $3221 = 0, $3222 = 0, $3223 = 0, $3224 = 0, $3225 = 0.0, $3226 = 0.0, $3227 = 0.0, $3228 = 0.0, $3229 = 0.0;
 var $323 = 0, $3230 = 0.0, $3231 = 0.0, $3232 = 0.0, $3233 = 0.0, $3234 = 0.0, $3235 = 0.0, $3236 = 0.0, $3237 = 0.0, $3238 = 0.0, $3239 = 0.0, $324 = 0, $3240 = 0.0, $3241 = 0.0, $3242 = 0.0, $3243 = 0.0, $3244 = 0.0, $3245 = 0.0, $3246 = 0, $3247 = 0.0;
 var $3248 = 0.0, $3249 = 0.0, $325 = 0, $3250 = 0, $3251 = 0.0, $3252 = 0, $3253 = 0.0, $3254 = 0, $3255 = 0.0, $3256 = 0, $3257 = 0.0, $3258 = 0, $3259 = 0.0, $326 = 0, $3260 = 0, $3261 = 0.0, $3262 = 0, $3263 = 0.0, $3264 = 0, $3265 = 0.0;
 var $3266 = 0.0, $3267 = 0.0, $3268 = 0.0, $3269 = 0.0, $327 = 0, $3270 = 0.0, $3271 = 0.0, $3272 = 0.0, $3273 = 0, $3274 = 0.0, $3275 = 0.0, $3276 = 0.0, $3277 = 0.0, $3278 = 0.0, $3279 = 0, $328 = 0, $3280 = 0.0, $3281 = 0.0, $3282 = 0.0, $3283 = 0.0;
 var $3284 = 0.0, $3285 = 0, $3286 = 0.0, $3287 = 0.0, $3288 = 0.0, $3289 = 0.0, $329 = 0, $3290 = 0.0, $3291 = 0.0, $3292 = 0.0, $3293 = 0.0, $3294 = 0.0, $3295 = 0.0, $3296 = 0.0, $3297 = 0.0, $3298 = 0.0, $3299 = 0, $33 = 0, $330 = 0, $3300 = 0.0;
 var $3301 = 0, $3302 = 0.0, $3303 = 0.0, $3304 = 0.0, $3305 = 0.0, $3306 = 0.0, $3307 = 0.0, $3308 = 0.0, $3309 = 0.0, $331 = 0, $3310 = 0.0, $3311 = 0.0, $3312 = 0.0, $3313 = 0.0, $3314 = 0.0, $3315 = 0.0, $3316 = 0.0, $3317 = 0.0, $3318 = 0.0, $3319 = 0.0;
 var $332 = 0, $3320 = 0.0, $3321 = 0.0, $3322 = 0.0, $3323 = 0.0, $3324 = 0.0, $3325 = 0.0, $3326 = 0.0, $3327 = 0.0, $3328 = 0.0, $3329 = 0.0, $333 = 0, $3330 = 0.0, $3331 = 0.0, $3332 = 0.0, $3333 = 0.0, $3334 = 0.0, $3335 = 0.0, $3336 = 0.0, $3337 = 0.0;
 var $3338 = 0.0, $3339 = 0.0, $334 = 0, $3340 = 0, $3341 = 0.0, $3342 = 0.0, $3343 = 0.0, $3344 = 0.0, $3345 = 0.0, $3346 = 0, $3347 = 0.0, $3348 = 0, $3349 = 0.0, $335 = 0, $3350 = 0, $3351 = 0.0, $3352 = 0, $3353 = 0.0, $3354 = 0, $3355 = 0.0;
 var $3356 = 0, $3357 = 0.0, $3358 = 0, $3359 = 0, $336 = 0, $3360 = 0, $3361 = 0.0, $3362 = 0, $3363 = 0, $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0, $3368 = 0, $3369 = 0, $337 = 0, $3370 = 0, $3371 = 0, $3372 = 0, $3373 = 0;
 var $3374 = 0, $3375 = 0.0, $3376 = 0, $3377 = 0, $3378 = 0, $3379 = 0, $338 = 0, $3380 = 0, $3381 = 0, $3382 = 0, $3383 = 0, $3384 = 0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0, $3389 = 0.0, $339 = 0, $3390 = 0, $3391 = 0;
 var $3392 = 0, $3393 = 0, $3394 = 0, $3395 = 0, $3396 = 0, $3397 = 0, $3398 = 0, $3399 = 0, $34 = 0, $340 = 0, $3400 = 0, $3401 = 0, $3402 = 0, $3403 = 0.0, $3404 = 0, $3405 = 0, $3406 = 0, $3407 = 0, $3408 = 0, $3409 = 0;
 var $341 = 0, $3410 = 0, $3411 = 0, $3412 = 0, $3413 = 0, $3414 = 0, $3415 = 0, $3416 = 0, $3417 = 0.0, $3418 = 0, $3419 = 0, $342 = 0, $3420 = 0, $3421 = 0, $3422 = 0, $3423 = 0, $3424 = 0, $3425 = 0, $3426 = 0, $3427 = 0;
 var $3428 = 0, $3429 = 0, $343 = 0, $3430 = 0, $3431 = 0.0, $3432 = 0, $3433 = 0, $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0, $3441 = 0, $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0.0;
 var $3446 = 0, $3447 = 0, $3448 = 0, $3449 = 0, $345 = 0, $3450 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0, $3460 = 0.0, $3461 = 0.0, $3462 = 0.0, $3463 = 0.0;
 var $3464 = 0.0, $3465 = 0.0, $3466 = 0.0, $3467 = 0.0, $3468 = 0.0, $3469 = 0.0, $347 = 0, $3470 = 0.0, $3471 = 0.0, $3472 = 0.0, $3473 = 0.0, $3474 = 0.0, $3475 = 0.0, $3476 = 0.0, $3477 = 0.0, $3478 = 0.0, $3479 = 0.0, $348 = 0, $3480 = 0.0, $3481 = 0.0;
 var $3482 = 0.0, $3483 = 0.0, $3484 = 0.0, $3485 = 0.0, $3486 = 0.0, $3487 = 0.0, $3488 = 0.0, $3489 = 0.0, $349 = 0, $3490 = 0.0, $3491 = 0.0, $3492 = 0, $3493 = 0.0, $3494 = 0.0, $3495 = 0, $3496 = 0.0, $3497 = 0, $3498 = 0.0, $3499 = 0, $35 = 0;
 var $350 = 0, $3500 = 0.0, $3501 = 0, $3502 = 0.0, $3503 = 0, $3504 = 0.0, $3505 = 0, $3506 = 0.0, $3507 = 0, $3508 = 0.0, $3509 = 0.0, $351 = 0, $3510 = 0, $3511 = 0.0, $3512 = 0.0, $3513 = 0, $3514 = 0.0, $3515 = 0.0, $3516 = 0.0, $3517 = 0.0;
 var $3518 = 0.0, $3519 = 0, $352 = 0, $3520 = 0.0, $3521 = 0.0, $3522 = 0.0, $3523 = 0.0, $3524 = 0.0, $3525 = 0, $3526 = 0.0, $3527 = 0, $3528 = 0.0, $3529 = 0.0, $353 = 0, $3530 = 0.0, $3531 = 0.0, $3532 = 0.0, $3533 = 0.0, $3534 = 0.0, $3535 = 0.0;
 var $3536 = 0.0, $3537 = 0.0, $3538 = 0.0, $3539 = 0.0, $354 = 0, $3540 = 0.0, $3541 = 0.0, $3542 = 0.0, $3543 = 0.0, $3544 = 0.0, $3545 = 0.0, $3546 = 0.0, $3547 = 0.0, $3548 = 0.0, $3549 = 0.0, $355 = 0, $3550 = 0.0, $3551 = 0.0, $3552 = 0.0, $3553 = 0.0;
 var $3554 = 0.0, $3555 = 0.0, $3556 = 0.0, $3557 = 0.0, $3558 = 0, $3559 = 0.0, $356 = 0, $3560 = 0.0, $3561 = 0.0, $3562 = 0, $3563 = 0.0, $3564 = 0, $3565 = 0.0, $3566 = 0, $3567 = 0.0, $3568 = 0, $3569 = 0.0, $357 = 0, $3570 = 0, $3571 = 0.0;
 var $3572 = 0, $3573 = 0.0, $3574 = 0, $3575 = 0, $3576 = 0, $3577 = 0.0, $3578 = 0, $3579 = 0, $358 = 0, $3580 = 0, $3581 = 0, $3582 = 0, $3583 = 0, $3584 = 0, $3585 = 0, $3586 = 0, $3587 = 0, $3588 = 0, $3589 = 0, $359 = 0;
 var $3590 = 0, $3591 = 0.0, $3592 = 0, $3593 = 0, $3594 = 0, $3595 = 0, $3596 = 0, $3597 = 0, $3598 = 0, $3599 = 0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0, $3602 = 0, $3603 = 0, $3604 = 0, $3605 = 0.0, $3606 = 0, $3607 = 0;
 var $3608 = 0, $3609 = 0, $361 = 0, $3610 = 0, $3611 = 0, $3612 = 0, $3613 = 0, $3614 = 0, $3615 = 0, $3616 = 0, $3617 = 0, $3618 = 0, $3619 = 0.0, $362 = 0, $3620 = 0, $3621 = 0, $3622 = 0, $3623 = 0, $3624 = 0, $3625 = 0;
 var $3626 = 0, $3627 = 0, $3628 = 0, $3629 = 0, $363 = 0, $3630 = 0, $3631 = 0, $3632 = 0, $3633 = 0.0, $3634 = 0, $3635 = 0, $3636 = 0, $3637 = 0, $3638 = 0, $3639 = 0, $364 = 0, $3640 = 0, $3641 = 0, $3642 = 0, $3643 = 0;
 var $3644 = 0, $3645 = 0, $3646 = 0, $3647 = 0.0, $3648 = 0, $3649 = 0, $365 = 0, $3650 = 0, $3651 = 0, $3652 = 0, $3653 = 0, $3654 = 0, $3655 = 0, $3656 = 0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0.0;
 var $3662 = 0, $3663 = 0, $3664 = 0, $3665 = 0, $3666 = 0, $3667 = 0, $3668 = 0, $3669 = 0, $367 = 0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0, $3676 = 0.0, $3677 = 0.0, $3678 = 0.0, $3679 = 0.0, $368 = 0;
 var $3680 = 0.0, $3681 = 0.0, $3682 = 0.0, $3683 = 0.0, $3684 = 0.0, $3685 = 0.0, $3686 = 0.0, $3687 = 0.0, $3688 = 0.0, $3689 = 0.0, $369 = 0, $3690 = 0.0, $3691 = 0.0, $3692 = 0.0, $3693 = 0.0, $3694 = 0.0, $3695 = 0.0, $3696 = 0.0, $3697 = 0.0, $3698 = 0.0;
 var $3699 = 0.0, $37 = 0, $370 = 0, $3700 = 0.0, $3701 = 0.0, $3702 = 0.0, $3703 = 0.0, $3704 = 0.0, $3705 = 0.0, $3706 = 0.0, $3707 = 0.0, $3708 = 0.0, $3709 = 0, $371 = 0, $3710 = 0.0, $3711 = 0.0, $3712 = 0, $3713 = 0.0, $3714 = 0, $3715 = 0.0;
 var $3716 = 0, $3717 = 0.0, $3718 = 0, $3719 = 0.0, $372 = 0, $3720 = 0, $3721 = 0.0, $3722 = 0, $3723 = 0.0, $3724 = 0, $3725 = 0.0, $3726 = 0, $3727 = 0.0, $3728 = 0.0, $3729 = 0.0, $373 = 0, $3730 = 0, $3731 = 0, $3732 = 0.0, $3733 = 0.0;
 var $3734 = 0, $3735 = 0, $3736 = 0.0, $3737 = 0.0, $3738 = 0.0, $3739 = 0.0, $374 = 0, $3740 = 0.0, $3741 = 0.0, $3742 = 0.0, $3743 = 0, $3744 = 0.0, $3745 = 0, $3746 = 0.0, $3747 = 0.0, $3748 = 0.0, $3749 = 0.0, $375 = 0, $3750 = 0.0, $3751 = 0.0;
 var $3752 = 0.0, $3753 = 0.0, $3754 = 0.0, $3755 = 0.0, $3756 = 0.0, $3757 = 0.0, $3758 = 0.0, $3759 = 0.0, $376 = 0, $3760 = 0.0, $3761 = 0.0, $3762 = 0.0, $3763 = 0.0, $3764 = 0.0, $3765 = 0.0, $3766 = 0.0, $3767 = 0.0, $3768 = 0.0, $3769 = 0.0, $377 = 0;
 var $3770 = 0.0, $3771 = 0.0, $3772 = 0.0, $3773 = 0.0, $3774 = 0.0, $3775 = 0.0, $3776 = 0.0, $3777 = 0.0, $3778 = 0.0, $3779 = 0, $378 = 0, $3780 = 0.0, $3781 = 0.0, $3782 = 0.0, $3783 = 0, $3784 = 0.0, $3785 = 0, $3786 = 0.0, $3787 = 0, $3788 = 0.0;
 var $3789 = 0, $379 = 0, $3790 = 0.0, $3791 = 0, $3792 = 0.0, $3793 = 0, $3794 = 0.0, $3795 = 0, $3796 = 0, $3797 = 0, $3798 = 0.0, $3799 = 0, $38 = 0, $380 = 0, $3800 = 0, $3801 = 0, $3802 = 0, $3803 = 0, $3804 = 0, $3805 = 0;
 var $3806 = 0, $3807 = 0, $3808 = 0, $3809 = 0, $381 = 0, $3810 = 0, $3811 = 0, $3812 = 0.0, $3813 = 0, $3814 = 0, $3815 = 0, $3816 = 0, $3817 = 0, $3818 = 0, $3819 = 0, $382 = 0, $3820 = 0, $3821 = 0, $3822 = 0, $3823 = 0;
 var $3824 = 0, $3825 = 0, $3826 = 0.0, $3827 = 0, $3828 = 0, $3829 = 0, $383 = 0, $3830 = 0, $3831 = 0, $3832 = 0, $3833 = 0, $3834 = 0, $3835 = 0, $3836 = 0, $3837 = 0, $3838 = 0, $3839 = 0, $384 = 0, $3840 = 0.0, $3841 = 0;
 var $3842 = 0, $3843 = 0, $3844 = 0, $3845 = 0, $3846 = 0, $3847 = 0, $3848 = 0, $3849 = 0, $385 = 0, $3850 = 0, $3851 = 0, $3852 = 0, $3853 = 0, $3854 = 0.0, $3855 = 0, $3856 = 0, $3857 = 0, $3858 = 0, $3859 = 0, $386 = 0;
 var $3860 = 0, $3861 = 0, $3862 = 0, $3863 = 0, $3864 = 0, $3865 = 0, $3866 = 0, $3867 = 0, $3868 = 0.0, $3869 = 0, $387 = 0, $3870 = 0, $3871 = 0, $3872 = 0, $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0, $3878 = 0;
 var $3879 = 0, $388 = 0, $3880 = 0, $3881 = 0, $3882 = 0.0, $3883 = 0, $3884 = 0, $3885 = 0, $3886 = 0, $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0, $3890 = 0, $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0, $3895 = 0, $3896 = 0;
 var $3897 = 0.0, $3898 = 0, $3899 = 0, $39 = 0, $390 = 0, $3900 = 0.0, $3901 = 0.0, $3902 = 0, $3903 = 0, $3904 = 0.0, $3905 = 0, $3906 = 0, $3907 = 0.0, $3908 = 0.0, $3909 = 0.0, $391 = 0, $3910 = 0.0, $3911 = 0.0, $3912 = 0.0, $3913 = 0.0;
 var $3914 = 0.0, $3915 = 0.0, $3916 = 0.0, $3917 = 0.0, $3918 = 0.0, $3919 = 0.0, $392 = 0, $3920 = 0, $3921 = 0.0, $3922 = 0.0, $3923 = 0.0, $3924 = 0, $3925 = 0.0, $3926 = 0.0, $3927 = 0.0, $3928 = 0.0, $3929 = 0.0, $393 = 0, $3930 = 0, $3931 = 0.0;
 var $3932 = 0.0, $3933 = 0.0, $3934 = 0.0, $3935 = 0.0, $3936 = 0.0, $3937 = 0.0, $3938 = 0.0, $3939 = 0.0, $394 = 0, $3940 = 0.0, $3941 = 0.0, $3942 = 0.0, $3943 = 0.0, $3944 = 0.0, $3945 = 0.0, $3946 = 0.0, $3947 = 0.0, $3948 = 0, $3949 = 0.0, $395 = 0;
 var $3950 = 0, $3951 = 0.0, $3952 = 0.0, $3953 = 0.0, $3954 = 0.0, $3955 = 0.0, $3956 = 0.0, $3957 = 0.0, $3958 = 0.0, $3959 = 0.0, $396 = 0, $3960 = 0.0, $3961 = 0.0, $3962 = 0.0, $3963 = 0.0, $3964 = 0.0, $3965 = 0.0, $3966 = 0.0, $3967 = 0.0, $3968 = 0.0;
 var $3969 = 0.0, $397 = 0, $3970 = 0.0, $3971 = 0.0, $3972 = 0.0, $3973 = 0.0, $3974 = 0.0, $3975 = 0.0, $3976 = 0.0, $3977 = 0.0, $3978 = 0.0, $3979 = 0.0, $398 = 0, $3980 = 0.0, $3981 = 0.0, $3982 = 0.0, $3983 = 0.0, $3984 = 0.0, $3985 = 0.0, $3986 = 0.0;
 var $3987 = 0.0, $3988 = 0.0, $3989 = 0.0, $399 = 0, $3990 = 0.0, $3991 = 0.0, $3992 = 0.0, $3993 = 0.0, $3994 = 0.0, $3995 = 0.0, $3996 = 0.0, $3997 = 0.0, $3998 = 0.0, $3999 = 0.0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0.0, $4001 = 0.0, $4002 = 0.0;
 var $4003 = 0.0, $4004 = 0.0, $4005 = 0.0, $4006 = 0.0, $4007 = 0.0, $4008 = 0.0, $4009 = 0.0, $401 = 0, $4010 = 0.0, $4011 = 0.0, $4012 = 0.0, $4013 = 0.0, $4014 = 0.0, $4015 = 0.0, $4016 = 0.0, $4017 = 0.0, $4018 = 0, $4019 = 0.0, $402 = 0, $4020 = 0.0;
 var $4021 = 0.0, $4022 = 0, $4023 = 0.0, $4024 = 0, $4025 = 0.0, $4026 = 0, $4027 = 0.0, $4028 = 0, $4029 = 0.0, $403 = 0, $4030 = 0, $4031 = 0.0, $4032 = 0, $4033 = 0.0, $4034 = 0, $4035 = 0.0, $4036 = 0, $4037 = 0.0, $4038 = 0, $4039 = 0.0;
 var $404 = 0, $4040 = 0, $4041 = 0.0, $4042 = 0, $4043 = 0, $4044 = 0, $4045 = 0.0, $4046 = 0, $4047 = 0, $4048 = 0, $4049 = 0, $405 = 0, $4050 = 0, $4051 = 0, $4052 = 0, $4053 = 0, $4054 = 0, $4055 = 0, $4056 = 0, $4057 = 0;
 var $4058 = 0, $4059 = 0.0, $406 = 0, $4060 = 0, $4061 = 0, $4062 = 0, $4063 = 0, $4064 = 0, $4065 = 0, $4066 = 0, $4067 = 0, $4068 = 0, $4069 = 0, $407 = 0, $4070 = 0, $4071 = 0, $4072 = 0, $4073 = 0.0, $4074 = 0, $4075 = 0;
 var $4076 = 0, $4077 = 0, $4078 = 0, $4079 = 0, $408 = 0, $4080 = 0, $4081 = 0, $4082 = 0, $4083 = 0, $4084 = 0, $4085 = 0, $4086 = 0, $4087 = 0.0, $4088 = 0, $4089 = 0, $409 = 0, $4090 = 0, $4091 = 0, $4092 = 0, $4093 = 0;
 var $4094 = 0, $4095 = 0, $4096 = 0, $4097 = 0, $4098 = 0, $4099 = 0, $41 = 0, $410 = 0, $4100 = 0, $4101 = 0.0, $4102 = 0, $4103 = 0, $4104 = 0, $4105 = 0, $4106 = 0, $4107 = 0, $4108 = 0, $4109 = 0, $411 = 0, $4110 = 0;
 var $4111 = 0, $4112 = 0, $4113 = 0, $4114 = 0, $4115 = 0.0, $4116 = 0, $4117 = 0, $4118 = 0, $4119 = 0, $412 = 0, $4120 = 0, $4121 = 0, $4122 = 0, $4123 = 0, $4124 = 0, $4125 = 0, $4126 = 0, $4127 = 0, $4128 = 0, $4129 = 0.0;
 var $413 = 0, $4130 = 0, $4131 = 0, $4132 = 0, $4133 = 0, $4134 = 0, $4135 = 0, $4136 = 0, $4137 = 0, $4138 = 0, $4139 = 0, $414 = 0, $4140 = 0, $4141 = 0, $4142 = 0, $4143 = 0, $4144 = 0.0, $4145 = 0, $4146 = 0, $4147 = 0.0;
 var $4148 = 0.0, $4149 = 0, $415 = 0, $4150 = 0, $4151 = 0.0, $4152 = 0.0, $4153 = 0.0, $4154 = 0.0, $4155 = 0.0, $4156 = 0.0, $4157 = 0.0, $4158 = 0.0, $4159 = 0.0, $416 = 0, $4160 = 0.0, $4161 = 0.0, $4162 = 0.0, $4163 = 0.0, $4164 = 0.0, $4165 = 0;
 var $4166 = 0.0, $4167 = 0.0, $4168 = 0.0, $4169 = 0, $417 = 0, $4170 = 0.0, $4171 = 0.0, $4172 = 0.0, $4173 = 0.0, $4174 = 0.0, $4175 = 0, $4176 = 0.0, $4177 = 0.0, $4178 = 0.0, $4179 = 0.0, $418 = 0, $4180 = 0.0, $4181 = 0.0, $4182 = 0.0, $4183 = 0.0;
 var $4184 = 0.0, $4185 = 0.0, $4186 = 0.0, $4187 = 0.0, $4188 = 0.0, $4189 = 0.0, $419 = 0, $4190 = 0.0, $4191 = 0.0, $4192 = 0.0, $4193 = 0.0, $4194 = 0, $4195 = 0.0, $4196 = 0, $4197 = 0.0, $4198 = 0.0, $4199 = 0.0, $42 = 0, $420 = 0, $4200 = 0.0;
 var $4201 = 0.0, $4202 = 0.0, $4203 = 0.0, $4204 = 0.0, $4205 = 0.0, $4206 = 0.0, $4207 = 0.0, $4208 = 0.0, $4209 = 0.0, $421 = 0, $4210 = 0.0, $4211 = 0.0, $4212 = 0.0, $4213 = 0.0, $4214 = 0.0, $4215 = 0.0, $4216 = 0.0, $4217 = 0.0, $4218 = 0.0, $4219 = 0.0;
 var $422 = 0, $4220 = 0.0, $4221 = 0.0, $4222 = 0.0, $4223 = 0.0, $4224 = 0.0, $4225 = 0.0, $4226 = 0.0, $4227 = 0.0, $4228 = 0.0, $4229 = 0.0, $423 = 0, $4230 = 0.0, $4231 = 0.0, $4232 = 0.0, $4233 = 0.0, $4234 = 0.0, $4235 = 0.0, $4236 = 0.0, $4237 = 0.0;
 var $4238 = 0.0, $4239 = 0.0, $424 = 0, $4240 = 0.0, $4241 = 0.0, $4242 = 0.0, $4243 = 0.0, $4244 = 0.0, $4245 = 0.0, $4246 = 0.0, $4247 = 0.0, $4248 = 0.0, $4249 = 0.0, $425 = 0, $4250 = 0.0, $4251 = 0.0, $4252 = 0.0, $4253 = 0.0, $4254 = 0.0, $4255 = 0.0;
 var $4256 = 0.0, $4257 = 0.0, $4258 = 0.0, $4259 = 0.0, $426 = 0, $4260 = 0.0, $4261 = 0.0, $4262 = 0.0, $4263 = 0, $4264 = 0.0, $4265 = 0.0, $4266 = 0.0, $4267 = 0, $4268 = 0.0, $4269 = 0, $427 = 0, $4270 = 0.0, $4271 = 0, $4272 = 0.0, $4273 = 0;
 var $4274 = 0.0, $4275 = 0, $4276 = 0.0, $4277 = 0, $4278 = 0.0, $4279 = 0, $428 = 0, $4280 = 0.0, $4281 = 0, $4282 = 0.0, $4283 = 0, $4284 = 0.0, $4285 = 0, $4286 = 0.0, $4287 = 0, $4288 = 0, $4289 = 0, $429 = 0, $4290 = 0.0, $4291 = 0;
 var $4292 = 0, $4293 = 0, $4294 = 0, $4295 = 0, $4296 = 0, $4297 = 0, $4298 = 0, $4299 = 0, $43 = 0, $430 = 0, $4300 = 0, $4301 = 0, $4302 = 0, $4303 = 0, $4304 = 0.0, $4305 = 0, $4306 = 0, $4307 = 0, $4308 = 0, $4309 = 0;
 var $431 = 0, $4310 = 0, $4311 = 0, $4312 = 0, $4313 = 0, $4314 = 0, $4315 = 0, $4316 = 0, $4317 = 0, $4318 = 0.0, $4319 = 0, $432 = 0, $4320 = 0, $4321 = 0, $4322 = 0, $4323 = 0, $4324 = 0, $4325 = 0, $4326 = 0, $4327 = 0;
 var $4328 = 0, $4329 = 0, $433 = 0, $4330 = 0, $4331 = 0, $4332 = 0.0, $4333 = 0, $4334 = 0, $4335 = 0, $4336 = 0, $4337 = 0, $4338 = 0, $4339 = 0, $434 = 0, $4340 = 0, $4341 = 0, $4342 = 0, $4343 = 0, $4344 = 0, $4345 = 0;
 var $4346 = 0.0, $4347 = 0, $4348 = 0, $4349 = 0, $435 = 0, $4350 = 0, $4351 = 0, $4352 = 0, $4353 = 0, $4354 = 0, $4355 = 0, $4356 = 0, $4357 = 0, $4358 = 0, $4359 = 0, $436 = 0, $4360 = 0.0, $4361 = 0, $4362 = 0, $4363 = 0;
 var $4364 = 0, $4365 = 0, $4366 = 0, $4367 = 0, $4368 = 0, $4369 = 0, $437 = 0, $4370 = 0, $4371 = 0, $4372 = 0, $4373 = 0, $4374 = 0.0, $4375 = 0, $4376 = 0, $4377 = 0, $4378 = 0, $4379 = 0, $438 = 0, $4380 = 0, $4381 = 0;
 var $4382 = 0, $4383 = 0, $4384 = 0, $4385 = 0, $4386 = 0, $4387 = 0, $4388 = 0, $4389 = 0.0, $439 = 0, $4390 = 0.0, $4391 = 0.0, $4392 = 0, $4393 = 0, $4394 = 0.0, $4395 = 0.0, $4396 = 0, $4397 = 0, $4398 = 0.0, $4399 = 0.0, $44 = 0;
 var $440 = 0, $4400 = 0.0, $4401 = 0.0, $4402 = 0.0, $4403 = 0.0, $4404 = 0.0, $4405 = 0, $4406 = 0.0, $4407 = 0, $4408 = 0.0, $4409 = 0.0, $441 = 0, $4410 = 0.0, $4411 = 0.0, $4412 = 0.0, $4413 = 0.0, $4414 = 0.0, $4415 = 0.0, $4416 = 0.0, $4417 = 0.0;
 var $4418 = 0.0, $4419 = 0.0, $442 = 0, $4420 = 0.0, $4421 = 0.0, $4422 = 0.0, $4423 = 0.0, $4424 = 0.0, $4425 = 0.0, $4426 = 0.0, $4427 = 0.0, $4428 = 0.0, $4429 = 0.0, $443 = 0, $4430 = 0.0, $4431 = 0.0, $4432 = 0.0, $4433 = 0.0, $4434 = 0.0, $4435 = 0.0;
 var $4436 = 0.0, $4437 = 0.0, $4438 = 0.0, $4439 = 0.0, $444 = 0, $4440 = 0.0, $4441 = 0.0, $4442 = 0.0, $4443 = 0.0, $4444 = 0.0, $4445 = 0.0, $4446 = 0.0, $4447 = 0.0, $4448 = 0.0, $4449 = 0.0, $445 = 0, $4450 = 0.0, $4451 = 0.0, $4452 = 0.0, $4453 = 0.0;
 var $4454 = 0.0, $4455 = 0.0, $4456 = 0.0, $4457 = 0.0, $4458 = 0.0, $4459 = 0.0, $446 = 0, $4460 = 0.0, $4461 = 0.0, $4462 = 0.0, $4463 = 0.0, $4464 = 0.0, $4465 = 0.0, $4466 = 0.0, $4467 = 0.0, $4468 = 0.0, $4469 = 0.0, $447 = 0, $4470 = 0.0, $4471 = 0.0;
 var $4472 = 0.0, $4473 = 0.0, $4474 = 0.0, $4475 = 0.0, $4476 = 0, $4477 = 0.0, $4478 = 0.0, $4479 = 0.0, $448 = 0, $4480 = 0, $4481 = 0.0, $4482 = 0, $4483 = 0.0, $4484 = 0, $4485 = 0.0, $4486 = 0, $4487 = 0.0, $4488 = 0, $4489 = 0.0, $449 = 0;
 var $4490 = 0, $4491 = 0.0, $4492 = 0, $4493 = 0.0, $4494 = 0, $4495 = 0.0, $4496 = 0, $4497 = 0.0, $4498 = 0, $4499 = 0.0, $45 = 0, $450 = 0, $4500 = 0, $4501 = 0, $4502 = 0, $4503 = 0.0, $4504 = 0, $4505 = 0, $4506 = 0, $4507 = 0;
 var $4508 = 0, $4509 = 0, $451 = 0, $4510 = 0, $4511 = 0, $4512 = 0, $4513 = 0, $4514 = 0, $4515 = 0, $4516 = 0, $4517 = 0.0, $4518 = 0, $4519 = 0, $452 = 0, $4520 = 0, $4521 = 0, $4522 = 0, $4523 = 0, $4524 = 0, $4525 = 0;
 var $4526 = 0, $4527 = 0, $4528 = 0, $4529 = 0, $453 = 0, $4530 = 0, $4531 = 0.0, $4532 = 0, $4533 = 0, $4534 = 0, $4535 = 0, $4536 = 0, $4537 = 0, $4538 = 0, $4539 = 0, $454 = 0, $4540 = 0, $4541 = 0, $4542 = 0, $4543 = 0;
 var $4544 = 0, $4545 = 0.0, $4546 = 0, $4547 = 0, $4548 = 0, $4549 = 0, $455 = 0, $4550 = 0, $4551 = 0, $4552 = 0, $4553 = 0, $4554 = 0, $4555 = 0, $4556 = 0, $4557 = 0, $4558 = 0, $4559 = 0.0, $456 = 0, $4560 = 0, $4561 = 0;
 var $4562 = 0, $4563 = 0, $4564 = 0, $4565 = 0, $4566 = 0, $4567 = 0, $4568 = 0, $4569 = 0, $457 = 0, $4570 = 0, $4571 = 0, $4572 = 0, $4573 = 0.0, $4574 = 0, $4575 = 0, $4576 = 0, $4577 = 0, $4578 = 0, $4579 = 0, $458 = 0;
 var $4580 = 0, $4581 = 0, $4582 = 0, $4583 = 0, $4584 = 0, $4585 = 0, $4586 = 0, $4587 = 0.0, $4588 = 0, $4589 = 0, $459 = 0, $4590 = 0, $4591 = 0, $4592 = 0, $4593 = 0, $4594 = 0, $4595 = 0, $4596 = 0, $4597 = 0, $4598 = 0;
 var $4599 = 0, $46 = 0, $460 = 0, $4600 = 0, $4601 = 0, $4602 = 0.0, $4603 = 0.0, $4604 = 0, $4605 = 0, $4606 = 0.0, $4607 = 0.0, $4608 = 0, $4609 = 0, $461 = 0, $4610 = 0.0, $4611 = 0.0, $4612 = 0.0, $4613 = 0.0, $4614 = 0.0, $4615 = 0.0;
 var $4616 = 0.0, $4617 = 0, $4618 = 0.0, $4619 = 0, $462 = 0, $4620 = 0.0, $4621 = 0.0, $4622 = 0.0, $4623 = 0.0, $4624 = 0.0, $4625 = 0.0, $4626 = 0.0, $4627 = 0.0, $4628 = 0.0, $4629 = 0.0, $463 = 0, $4630 = 0.0, $4631 = 0.0, $4632 = 0.0, $4633 = 0.0;
 var $4634 = 0.0, $4635 = 0.0, $4636 = 0.0, $4637 = 0.0, $4638 = 0.0, $4639 = 0.0, $464 = 0, $4640 = 0.0, $4641 = 0.0, $4642 = 0.0, $4643 = 0.0, $4644 = 0.0, $4645 = 0.0, $4646 = 0.0, $4647 = 0.0, $4648 = 0.0, $4649 = 0.0, $465 = 0, $4650 = 0.0, $4651 = 0.0;
 var $4652 = 0.0, $4653 = 0.0, $4654 = 0.0, $4655 = 0.0, $4656 = 0.0, $4657 = 0.0, $4658 = 0.0, $4659 = 0.0, $466 = 0, $4660 = 0.0, $4661 = 0.0, $4662 = 0.0, $4663 = 0.0, $4664 = 0.0, $4665 = 0.0, $4666 = 0.0, $4667 = 0.0, $4668 = 0.0, $4669 = 0.0, $467 = 0;
 var $4670 = 0.0, $4671 = 0.0, $4672 = 0.0, $4673 = 0.0, $4674 = 0.0, $4675 = 0, $4676 = 0.0, $4677 = 0.0, $4678 = 0.0, $4679 = 0, $468 = 0, $4680 = 0.0, $4681 = 0, $4682 = 0.0, $4683 = 0, $4684 = 0.0, $4685 = 0, $4686 = 0.0, $4687 = 0, $4688 = 0.0;
 var $4689 = 0, $469 = 0, $4690 = 0.0, $4691 = 0, $4692 = 0.0, $4693 = 0.0, $4694 = 0.0, $4695 = 0.0, $4696 = 0.0, $4697 = 0.0, $4698 = 0.0, $4699 = 0.0, $47 = 0, $470 = 0, $4700 = 0.0, $4701 = 0.0, $4702 = 0.0, $4703 = 0.0, $4704 = 0.0, $4705 = 0.0;
 var $4706 = 0.0, $4707 = 0.0, $4708 = 0.0, $4709 = 0.0, $471 = 0, $4710 = 0.0, $4711 = 0.0, $4712 = 0.0, $4713 = 0.0, $4714 = 0.0, $4715 = 0.0, $4716 = 0.0, $4717 = 0.0, $4718 = 0.0, $4719 = 0.0, $472 = 0, $4720 = 0.0, $4721 = 0.0, $4722 = 0.0, $4723 = 0.0;
 var $4724 = 0.0, $4725 = 0.0, $4726 = 0.0, $4727 = 0.0, $4728 = 0.0, $4729 = 0.0, $473 = 0, $4730 = 0.0, $4731 = 0.0, $4732 = 0.0, $4733 = 0.0, $4734 = 0.0, $4735 = 0.0, $4736 = 0.0, $4737 = 0.0, $4738 = 0.0, $4739 = 0.0, $474 = 0, $4740 = 0.0, $4741 = 0.0;
 var $4742 = 0.0, $4743 = 0.0, $4744 = 0.0, $4745 = 0.0, $4746 = 0.0, $4747 = 0.0, $4748 = 0.0, $4749 = 0.0, $475 = 0, $4750 = 0.0, $4751 = 0.0, $4752 = 0.0, $4753 = 0.0, $4754 = 0.0, $4755 = 0.0, $4756 = 0.0, $4757 = 0.0, $4758 = 0.0, $4759 = 0.0, $476 = 0;
 var $4760 = 0.0, $4761 = 0.0, $4762 = 0.0, $4763 = 0.0, $4764 = 0.0, $4765 = 0.0, $4766 = 0.0, $4767 = 0.0, $4768 = 0.0, $4769 = 0.0, $477 = 0, $4770 = 0.0, $4771 = 0.0, $4772 = 0.0, $4773 = 0.0, $4774 = 0.0, $4775 = 0.0, $4776 = 0.0, $4777 = 0.0, $4778 = 0.0;
 var $4779 = 0.0, $478 = 0, $4780 = 0.0, $4781 = 0.0, $4782 = 0.0, $4783 = 0.0, $4784 = 0.0, $4785 = 0.0, $4786 = 0.0, $4787 = 0.0, $4788 = 0.0, $4789 = 0.0, $479 = 0, $4790 = 0.0, $4791 = 0.0, $4792 = 0.0, $4793 = 0.0, $4794 = 0.0, $4795 = 0.0, $4796 = 0.0;
 var $4797 = 0.0, $4798 = 0.0, $4799 = 0.0, $48 = 0, $480 = 0, $4800 = 0.0, $4801 = 0.0, $4802 = 0.0, $4803 = 0.0, $4804 = 0.0, $4805 = 0.0, $4806 = 0.0, $4807 = 0.0, $4808 = 0.0, $4809 = 0.0, $481 = 0, $4810 = 0.0, $4811 = 0.0, $4812 = 0.0, $4813 = 0.0;
 var $4814 = 0.0, $4815 = 0.0, $4816 = 0.0, $4817 = 0.0, $4818 = 0.0, $4819 = 0.0, $482 = 0, $4820 = 0, $4821 = 0.0, $4822 = 0.0, $4823 = 0, $4824 = 0.0, $4825 = 0.0, $4826 = 0.0, $4827 = 0.0, $4828 = 0.0, $4829 = 0.0, $483 = 0, $4830 = 0.0, $4831 = 0.0;
 var $4832 = 0.0, $4833 = 0.0, $4834 = 0.0, $4835 = 0.0, $4836 = 0.0, $4837 = 0.0, $4838 = 0.0, $4839 = 0.0, $484 = 0, $4840 = 0.0, $4841 = 0.0, $4842 = 0.0, $4843 = 0.0, $4844 = 0.0, $4845 = 0.0, $4846 = 0.0, $4847 = 0.0, $4848 = 0.0, $4849 = 0.0, $485 = 0;
 var $4850 = 0.0, $4851 = 0.0, $4852 = 0.0, $4853 = 0.0, $4854 = 0.0, $4855 = 0.0, $4856 = 0.0, $4857 = 0.0, $4858 = 0.0, $4859 = 0.0, $486 = 0, $4860 = 0.0, $4861 = 0.0, $4862 = 0.0, $4863 = 0.0, $4864 = 0.0, $4865 = 0.0, $4866 = 0.0, $4867 = 0.0, $4868 = 0.0;
 var $4869 = 0.0, $487 = 0, $4870 = 0.0, $4871 = 0.0, $4872 = 0.0, $4873 = 0.0, $4874 = 0.0, $4875 = 0.0, $4876 = 0.0, $4877 = 0.0, $4878 = 0.0, $4879 = 0.0, $488 = 0, $4880 = 0.0, $4881 = 0.0, $4882 = 0.0, $4883 = 0.0, $4884 = 0.0, $4885 = 0.0, $4886 = 0.0;
 var $4887 = 0.0, $4888 = 0.0, $4889 = 0.0, $489 = 0, $4890 = 0.0, $4891 = 0.0, $4892 = 0.0, $4893 = 0.0, $4894 = 0.0, $4895 = 0.0, $4896 = 0.0, $4897 = 0.0, $4898 = 0.0, $4899 = 0.0, $49 = 0, $490 = 0, $4900 = 0.0, $4901 = 0.0, $4902 = 0.0, $4903 = 0.0;
 var $4904 = 0.0, $4905 = 0.0, $4906 = 0.0, $4907 = 0.0, $4908 = 0.0, $4909 = 0.0, $491 = 0, $4910 = 0.0, $4911 = 0.0, $4912 = 0.0, $4913 = 0.0, $4914 = 0.0, $4915 = 0.0, $4916 = 0.0, $4917 = 0.0, $4918 = 0.0, $4919 = 0.0, $492 = 0, $4920 = 0.0, $4921 = 0.0;
 var $4922 = 0.0, $4923 = 0.0, $4924 = 0.0, $4925 = 0.0, $4926 = 0.0, $4927 = 0.0, $4928 = 0.0, $4929 = 0.0, $493 = 0, $4930 = 0.0, $4931 = 0.0, $4932 = 0.0, $4933 = 0.0, $4934 = 0.0, $4935 = 0.0, $4936 = 0.0, $4937 = 0.0, $4938 = 0.0, $4939 = 0.0, $494 = 0;
 var $4940 = 0.0, $4941 = 0.0, $4942 = 0.0, $4943 = 0.0, $4944 = 0.0, $4945 = 0.0, $4946 = 0.0, $4947 = 0.0, $4948 = 0.0, $4949 = 0.0, $495 = 0, $4950 = 0.0, $4951 = 0, $4952 = 0.0, $4953 = 0.0, $4954 = 0, $4955 = 0.0, $4956 = 0.0, $4957 = 0.0, $4958 = 0.0;
 var $4959 = 0.0, $496 = 0, $4960 = 0.0, $4961 = 0.0, $4962 = 0.0, $4963 = 0.0, $4964 = 0.0, $4965 = 0.0, $4966 = 0.0, $4967 = 0.0, $4968 = 0.0, $4969 = 0.0, $497 = 0, $4970 = 0.0, $4971 = 0.0, $4972 = 0.0, $4973 = 0.0, $4974 = 0.0, $4975 = 0.0, $4976 = 0.0;
 var $4977 = 0.0, $4978 = 0.0, $4979 = 0.0, $498 = 0, $4980 = 0.0, $4981 = 0.0, $4982 = 0.0, $4983 = 0.0, $4984 = 0.0, $4985 = 0.0, $4986 = 0.0, $4987 = 0.0, $4988 = 0.0, $4989 = 0.0, $499 = 0, $4990 = 0.0, $4991 = 0.0, $4992 = 0.0, $4993 = 0.0, $4994 = 0.0;
 var $4995 = 0.0, $4996 = 0.0, $4997 = 0.0, $4998 = 0.0, $4999 = 0.0, $5 = 0, $50 = 0, $500 = 0, $5000 = 0.0, $5001 = 0.0, $5002 = 0.0, $5003 = 0.0, $5004 = 0.0, $5005 = 0.0, $5006 = 0.0, $5007 = 0.0, $5008 = 0.0, $5009 = 0.0, $501 = 0, $5010 = 0.0;
 var $5011 = 0.0, $5012 = 0.0, $5013 = 0.0, $5014 = 0.0, $5015 = 0.0, $5016 = 0.0, $5017 = 0.0, $5018 = 0.0, $5019 = 0.0, $502 = 0, $5020 = 0.0, $5021 = 0.0, $5022 = 0.0, $5023 = 0.0, $5024 = 0.0, $5025 = 0.0, $5026 = 0.0, $5027 = 0.0, $5028 = 0.0, $5029 = 0.0;
 var $503 = 0, $5030 = 0.0, $5031 = 0.0, $5032 = 0.0, $5033 = 0.0, $5034 = 0.0, $5035 = 0.0, $5036 = 0.0, $5037 = 0.0, $5038 = 0.0, $5039 = 0.0, $504 = 0, $5040 = 0.0, $5041 = 0.0, $5042 = 0.0, $5043 = 0.0, $5044 = 0.0, $5045 = 0.0, $5046 = 0.0, $5047 = 0.0;
 var $5048 = 0.0, $5049 = 0.0, $505 = 0, $5050 = 0.0, $5051 = 0.0, $5052 = 0.0, $5053 = 0.0, $5054 = 0.0, $5055 = 0.0, $5056 = 0.0, $5057 = 0.0, $5058 = 0.0, $5059 = 0.0, $506 = 0, $5060 = 0.0, $5061 = 0.0, $5062 = 0.0, $5063 = 0.0, $5064 = 0.0, $5065 = 0.0;
 var $5066 = 0.0, $5067 = 0.0, $5068 = 0.0, $5069 = 0.0, $507 = 0, $5070 = 0.0, $5071 = 0.0, $5072 = 0.0, $5073 = 0.0, $5074 = 0.0, $5075 = 0.0, $5076 = 0.0, $5077 = 0.0, $5078 = 0.0, $5079 = 0.0, $508 = 0, $5080 = 0.0, $5081 = 0.0, $5082 = 0.0, $5083 = 0.0;
 var $5084 = 0, $5085 = 0.0, $5086 = 0.0, $5087 = 0, $5088 = 0.0, $5089 = 0, $509 = 0, $5090 = 0.0, $5091 = 0.0, $5092 = 0.0, $5093 = 0.0, $5094 = 0.0, $5095 = 0.0, $5096 = 0.0, $5097 = 0.0, $5098 = 0.0, $5099 = 0.0, $51 = 0, $510 = 0, $5100 = 0.0;
 var $5101 = 0.0, $5102 = 0.0, $5103 = 0.0, $5104 = 0.0, $5105 = 0.0, $5106 = 0.0, $5107 = 0.0, $5108 = 0.0, $5109 = 0.0, $511 = 0, $5110 = 0.0, $5111 = 0.0, $5112 = 0.0, $5113 = 0.0, $5114 = 0.0, $5115 = 0.0, $5116 = 0.0, $5117 = 0.0, $5118 = 0.0, $5119 = 0.0;
 var $512 = 0, $5120 = 0.0, $5121 = 0.0, $5122 = 0.0, $5123 = 0, $5124 = 0.0, $5125 = 0.0, $5126 = 0, $5127 = 0.0, $5128 = 0, $5129 = 0.0, $513 = 0, $5130 = 0, $5131 = 0.0, $5132 = 0, $5133 = 0.0, $5134 = 0, $5135 = 0.0, $5136 = 0, $5137 = 0.0;
 var $5138 = 0, $5139 = 0.0, $514 = 0, $5140 = 0.0, $5141 = 0.0, $5142 = 0, $5143 = 0, $5144 = 0.0, $5145 = 0.0, $5146 = 0, $5147 = 0, $5148 = 0.0, $5149 = 0.0, $515 = 0, $5150 = 0.0, $5151 = 0.0, $5152 = 0.0, $5153 = 0.0, $5154 = 0.0, $5155 = 0;
 var $5156 = 0.0, $5157 = 0, $5158 = 0.0, $5159 = 0.0, $516 = 0, $5160 = 0.0, $5161 = 0.0, $5162 = 0.0, $5163 = 0.0, $5164 = 0.0, $5165 = 0.0, $5166 = 0.0, $5167 = 0.0, $5168 = 0.0, $5169 = 0.0, $517 = 0, $5170 = 0.0, $5171 = 0.0, $5172 = 0.0, $5173 = 0.0;
 var $5174 = 0.0, $5175 = 0.0, $5176 = 0.0, $5177 = 0.0, $5178 = 0.0, $5179 = 0.0, $518 = 0, $5180 = 0.0, $5181 = 0.0, $5182 = 0.0, $5183 = 0.0, $5184 = 0.0, $5185 = 0.0, $5186 = 0.0, $5187 = 0.0, $5188 = 0.0, $5189 = 0.0, $519 = 0, $5190 = 0.0, $5191 = 0;
 var $5192 = 0.0, $5193 = 0.0, $5194 = 0.0, $5195 = 0, $5196 = 0.0, $5197 = 0, $5198 = 0.0, $5199 = 0, $52 = 0, $520 = 0, $5200 = 0.0, $5201 = 0, $5202 = 0.0, $5203 = 0, $5204 = 0.0, $5205 = 0, $5206 = 0.0, $5207 = 0, $5208 = 0, $5209 = 0;
 var $521 = 0, $5210 = 0.0, $5211 = 0, $5212 = 0, $5213 = 0, $5214 = 0, $5215 = 0, $5216 = 0, $5217 = 0, $5218 = 0, $5219 = 0, $522 = 0, $5220 = 0, $5221 = 0, $5222 = 0, $5223 = 0, $5224 = 0.0, $5225 = 0, $5226 = 0, $5227 = 0;
 var $5228 = 0, $5229 = 0, $523 = 0, $5230 = 0, $5231 = 0, $5232 = 0, $5233 = 0, $5234 = 0, $5235 = 0, $5236 = 0, $5237 = 0, $5238 = 0.0, $5239 = 0, $524 = 0, $5240 = 0, $5241 = 0, $5242 = 0, $5243 = 0, $5244 = 0, $5245 = 0;
 var $5246 = 0, $5247 = 0, $5248 = 0, $5249 = 0, $525 = 0, $5250 = 0, $5251 = 0, $5252 = 0.0, $5253 = 0, $5254 = 0, $5255 = 0, $5256 = 0, $5257 = 0, $5258 = 0, $5259 = 0, $526 = 0, $5260 = 0, $5261 = 0, $5262 = 0, $5263 = 0;
 var $5264 = 0, $5265 = 0, $5266 = 0.0, $5267 = 0, $5268 = 0, $5269 = 0, $527 = 0, $5270 = 0, $5271 = 0, $5272 = 0, $5273 = 0, $5274 = 0, $5275 = 0, $5276 = 0, $5277 = 0, $5278 = 0, $5279 = 0, $528 = 0, $5280 = 0.0, $5281 = 0;
 var $5282 = 0, $5283 = 0, $5284 = 0, $5285 = 0, $5286 = 0, $5287 = 0, $5288 = 0, $5289 = 0, $529 = 0, $5290 = 0, $5291 = 0, $5292 = 0, $5293 = 0, $5294 = 0.0, $5295 = 0, $5296 = 0, $5297 = 0, $5298 = 0, $5299 = 0, $53 = 0;
 var $530 = 0, $5300 = 0, $5301 = 0, $5302 = 0, $5303 = 0, $5304 = 0, $5305 = 0, $5306 = 0, $5307 = 0, $5308 = 0, $5309 = 0.0, $531 = 0, $5310 = 0.0, $5311 = 0.0, $5312 = 0.0, $5313 = 0.0, $5314 = 0.0, $5315 = 0.0, $5316 = 0.0, $5317 = 0.0;
 var $5318 = 0.0, $5319 = 0.0, $532 = 0, $5320 = 0.0, $5321 = 0.0, $5322 = 0.0, $5323 = 0.0, $5324 = 0.0, $5325 = 0.0, $5326 = 0.0, $5327 = 0.0, $5328 = 0.0, $5329 = 0.0, $533 = 0, $5330 = 0.0, $5331 = 0.0, $5332 = 0.0, $5333 = 0.0, $5334 = 0.0, $5335 = 0.0;
 var $5336 = 0.0, $5337 = 0.0, $5338 = 0.0, $5339 = 0.0, $534 = 0, $5340 = 0.0, $5341 = 0.0, $5342 = 0, $5343 = 0.0, $5344 = 0.0, $5345 = 0, $5346 = 0.0, $5347 = 0, $5348 = 0.0, $5349 = 0, $535 = 0, $5350 = 0.0, $5351 = 0, $5352 = 0.0, $5353 = 0;
 var $5354 = 0.0, $5355 = 0, $5356 = 0.0, $5357 = 0, $5358 = 0.0, $5359 = 0, $536 = 0, $5360 = 0.0, $5361 = 0.0, $5362 = 0, $5363 = 0.0, $5364 = 0.0, $5365 = 0, $5366 = 0.0, $5367 = 0.0, $5368 = 0.0, $5369 = 0.0, $537 = 0, $5370 = 0.0, $5371 = 0;
 var $5372 = 0.0, $5373 = 0.0, $5374 = 0.0, $5375 = 0.0, $5376 = 0.0, $5377 = 0, $5378 = 0.0, $5379 = 0, $538 = 0, $5380 = 0.0, $5381 = 0.0, $5382 = 0.0, $5383 = 0.0, $5384 = 0.0, $5385 = 0.0, $5386 = 0.0, $5387 = 0.0, $5388 = 0.0, $5389 = 0.0, $539 = 0;
 var $5390 = 0.0, $5391 = 0.0, $5392 = 0.0, $5393 = 0.0, $5394 = 0.0, $5395 = 0.0, $5396 = 0.0, $5397 = 0.0, $5398 = 0.0, $5399 = 0.0, $54 = 0, $540 = 0, $5400 = 0.0, $5401 = 0.0, $5402 = 0.0, $5403 = 0.0, $5404 = 0.0, $5405 = 0.0, $5406 = 0.0, $5407 = 0.0;
 var $5408 = 0.0, $5409 = 0.0, $541 = 0, $5410 = 0.0, $5411 = 0, $5412 = 0.0, $5413 = 0.0, $5414 = 0.0, $5415 = 0, $5416 = 0.0, $5417 = 0, $5418 = 0.0, $5419 = 0, $542 = 0, $5420 = 0.0, $5421 = 0, $5422 = 0.0, $5423 = 0, $5424 = 0.0, $5425 = 0;
 var $5426 = 0.0, $5427 = 0, $5428 = 0, $5429 = 0, $543 = 0, $5430 = 0.0, $5431 = 0, $5432 = 0, $5433 = 0, $5434 = 0, $5435 = 0, $5436 = 0, $5437 = 0, $5438 = 0, $5439 = 0, $544 = 0, $5440 = 0, $5441 = 0, $5442 = 0, $5443 = 0;
 var $5444 = 0.0, $5445 = 0, $5446 = 0, $5447 = 0, $5448 = 0, $5449 = 0, $545 = 0, $5450 = 0, $5451 = 0, $5452 = 0, $5453 = 0, $5454 = 0, $5455 = 0, $5456 = 0, $5457 = 0, $5458 = 0.0, $5459 = 0, $546 = 0, $5460 = 0, $5461 = 0;
 var $5462 = 0, $5463 = 0, $5464 = 0, $5465 = 0, $5466 = 0, $5467 = 0, $5468 = 0, $5469 = 0, $547 = 0, $5470 = 0, $5471 = 0, $5472 = 0.0, $5473 = 0, $5474 = 0, $5475 = 0, $5476 = 0, $5477 = 0, $5478 = 0, $5479 = 0, $548 = 0;
 var $5480 = 0, $5481 = 0, $5482 = 0, $5483 = 0, $5484 = 0, $5485 = 0, $5486 = 0.0, $5487 = 0, $5488 = 0, $5489 = 0, $549 = 0, $5490 = 0, $5491 = 0, $5492 = 0, $5493 = 0, $5494 = 0, $5495 = 0, $5496 = 0, $5497 = 0, $5498 = 0;
 var $5499 = 0, $55 = 0, $550 = 0, $5500 = 0.0, $5501 = 0, $5502 = 0, $5503 = 0, $5504 = 0, $5505 = 0, $5506 = 0, $5507 = 0, $5508 = 0, $5509 = 0, $551 = 0, $5510 = 0, $5511 = 0, $5512 = 0, $5513 = 0, $5514 = 0.0, $5515 = 0;
 var $5516 = 0, $5517 = 0, $5518 = 0, $5519 = 0, $552 = 0, $5520 = 0, $5521 = 0, $5522 = 0, $5523 = 0, $5524 = 0, $5525 = 0, $5526 = 0, $5527 = 0, $5528 = 0, $5529 = 0.0, $553 = 0, $5530 = 0.0, $5531 = 0.0, $5532 = 0.0, $5533 = 0.0;
 var $5534 = 0.0, $5535 = 0.0, $5536 = 0.0, $5537 = 0.0, $5538 = 0.0, $5539 = 0.0, $554 = 0, $5540 = 0.0, $5541 = 0.0, $5542 = 0.0, $5543 = 0.0, $5544 = 0.0, $5545 = 0.0, $5546 = 0.0, $5547 = 0.0, $5548 = 0.0, $5549 = 0.0, $555 = 0, $5550 = 0.0, $5551 = 0.0;
 var $5552 = 0.0, $5553 = 0.0, $5554 = 0.0, $5555 = 0.0, $5556 = 0.0, $5557 = 0.0, $5558 = 0.0, $5559 = 0.0, $556 = 0, $5560 = 0.0, $5561 = 0.0, $5562 = 0.0, $5563 = 0.0, $5564 = 0.0, $5565 = 0, $5566 = 0.0, $5567 = 0.0, $5568 = 0, $5569 = 0.0, $557 = 0;
 var $5570 = 0, $5571 = 0.0, $5572 = 0, $5573 = 0.0, $5574 = 0, $5575 = 0.0, $5576 = 0, $5577 = 0.0, $5578 = 0, $5579 = 0.0, $558 = 0, $5580 = 0, $5581 = 0.0, $5582 = 0, $5583 = 0.0, $5584 = 0, $5585 = 0.0, $5586 = 0, $5587 = 0.0, $5588 = 0.0;
 var $5589 = 0, $559 = 0, $5590 = 0.0, $5591 = 0.0, $5592 = 0.0, $5593 = 0, $5594 = 0.0, $5595 = 0.0, $5596 = 0.0, $5597 = 0.0, $5598 = 0.0, $5599 = 0, $56 = 0, $560 = 0, $5600 = 0.0, $5601 = 0.0, $5602 = 0.0, $5603 = 0.0, $5604 = 0.0, $5605 = 0.0;
 var $5606 = 0, $5607 = 0.0, $5608 = 0, $5609 = 0.0, $561 = 0, $5610 = 0.0, $5611 = 0.0, $5612 = 0.0, $5613 = 0.0, $5614 = 0.0, $5615 = 0.0, $5616 = 0.0, $5617 = 0.0, $5618 = 0.0, $5619 = 0.0, $562 = 0, $5620 = 0.0, $5621 = 0.0, $5622 = 0.0, $5623 = 0.0;
 var $5624 = 0.0, $5625 = 0.0, $5626 = 0.0, $5627 = 0.0, $5628 = 0.0, $5629 = 0.0, $563 = 0, $5630 = 0.0, $5631 = 0.0, $5632 = 0.0, $5633 = 0.0, $5634 = 0.0, $5635 = 0.0, $5636 = 0.0, $5637 = 0.0, $5638 = 0.0, $5639 = 0.0, $564 = 0, $5640 = 0, $5641 = 0.0;
 var $5642 = 0.0, $5643 = 0.0, $5644 = 0, $5645 = 0.0, $5646 = 0, $5647 = 0.0, $5648 = 0, $5649 = 0.0, $565 = 0, $5650 = 0, $5651 = 0.0, $5652 = 0, $5653 = 0.0, $5654 = 0, $5655 = 0.0, $5656 = 0, $5657 = 0, $5658 = 0, $5659 = 0.0, $566 = 0;
 var $5660 = 0, $5661 = 0, $5662 = 0, $5663 = 0, $5664 = 0, $5665 = 0, $5666 = 0, $5667 = 0, $5668 = 0, $5669 = 0, $567 = 0, $5670 = 0, $5671 = 0, $5672 = 0, $5673 = 0.0, $5674 = 0, $5675 = 0, $5676 = 0, $5677 = 0, $5678 = 0;
 var $5679 = 0, $568 = 0, $5680 = 0, $5681 = 0, $5682 = 0, $5683 = 0, $5684 = 0, $5685 = 0, $5686 = 0, $5687 = 0.0, $5688 = 0, $5689 = 0, $569 = 0, $5690 = 0, $5691 = 0, $5692 = 0, $5693 = 0, $5694 = 0, $5695 = 0, $5696 = 0;
 var $5697 = 0, $5698 = 0, $5699 = 0, $57 = 0, $570 = 0, $5700 = 0, $5701 = 0.0, $5702 = 0, $5703 = 0, $5704 = 0, $5705 = 0, $5706 = 0, $5707 = 0, $5708 = 0, $5709 = 0, $571 = 0, $5710 = 0, $5711 = 0, $5712 = 0, $5713 = 0;
 var $5714 = 0, $5715 = 0.0, $5716 = 0, $5717 = 0, $5718 = 0, $5719 = 0, $572 = 0, $5720 = 0, $5721 = 0, $5722 = 0, $5723 = 0, $5724 = 0, $5725 = 0, $5726 = 0, $5727 = 0, $5728 = 0, $5729 = 0.0, $573 = 0, $5730 = 0, $5731 = 0;
 var $5732 = 0, $5733 = 0, $5734 = 0, $5735 = 0, $5736 = 0, $5737 = 0, $5738 = 0, $5739 = 0, $574 = 0, $5740 = 0, $5741 = 0, $5742 = 0, $5743 = 0.0, $5744 = 0, $5745 = 0, $5746 = 0, $5747 = 0, $5748 = 0, $5749 = 0, $575 = 0;
 var $5750 = 0, $5751 = 0, $5752 = 0, $5753 = 0, $5754 = 0, $5755 = 0, $5756 = 0, $5757 = 0, $5758 = 0.0, $5759 = 0.0, $576 = 0, $5760 = 0.0, $5761 = 0.0, $5762 = 0.0, $5763 = 0.0, $5764 = 0.0, $5765 = 0.0, $5766 = 0.0, $5767 = 0.0, $5768 = 0.0;
 var $5769 = 0.0, $577 = 0, $5770 = 0.0, $5771 = 0.0, $5772 = 0.0, $5773 = 0.0, $5774 = 0.0, $5775 = 0.0, $5776 = 0.0, $5777 = 0.0, $5778 = 0.0, $5779 = 0.0, $578 = 0, $5780 = 0.0, $5781 = 0.0, $5782 = 0.0, $5783 = 0.0, $5784 = 0.0, $5785 = 0.0, $5786 = 0.0;
 var $5787 = 0.0, $5788 = 0, $5789 = 0.0, $579 = 0, $5790 = 0.0, $5791 = 0, $5792 = 0.0, $5793 = 0, $5794 = 0.0, $5795 = 0, $5796 = 0.0, $5797 = 0, $5798 = 0.0, $5799 = 0, $58 = 0, $580 = 0, $5800 = 0.0, $5801 = 0, $5802 = 0.0, $5803 = 0;
 var $5804 = 0.0, $5805 = 0.0, $5806 = 0.0, $5807 = 0, $5808 = 0.0, $5809 = 0.0, $581 = 0, $5810 = 0, $5811 = 0.0, $5812 = 0.0, $5813 = 0.0, $5814 = 0.0, $5815 = 0.0, $5816 = 0, $5817 = 0.0, $5818 = 0.0, $5819 = 0.0, $582 = 0, $5820 = 0.0, $5821 = 0.0;
 var $5822 = 0.0, $5823 = 0, $5824 = 0.0, $5825 = 0, $5826 = 0.0, $5827 = 0.0, $5828 = 0.0, $5829 = 0.0, $583 = 0, $5830 = 0.0, $5831 = 0.0, $5832 = 0.0, $5833 = 0.0, $5834 = 0.0, $5835 = 0.0, $5836 = 0.0, $5837 = 0.0, $5838 = 0.0, $5839 = 0.0, $584 = 0;
 var $5840 = 0.0, $5841 = 0.0, $5842 = 0.0, $5843 = 0.0, $5844 = 0.0, $5845 = 0.0, $5846 = 0.0, $5847 = 0.0, $5848 = 0.0, $5849 = 0.0, $585 = 0, $5850 = 0.0, $5851 = 0.0, $5852 = 0.0, $5853 = 0.0, $5854 = 0.0, $5855 = 0.0, $5856 = 0.0, $5857 = 0.0, $5858 = 0;
 var $5859 = 0.0, $586 = 0, $5860 = 0.0, $5861 = 0.0, $5862 = 0, $5863 = 0.0, $5864 = 0, $5865 = 0.0, $5866 = 0, $5867 = 0.0, $5868 = 0, $5869 = 0.0, $587 = 0, $5870 = 0, $5871 = 0.0, $5872 = 0, $5873 = 0.0, $5874 = 0, $5875 = 0, $5876 = 0;
 var $5877 = 0.0, $5878 = 0, $5879 = 0, $588 = 0, $5880 = 0, $5881 = 0, $5882 = 0, $5883 = 0, $5884 = 0, $5885 = 0, $5886 = 0, $5887 = 0, $5888 = 0, $5889 = 0, $589 = 0, $5890 = 0, $5891 = 0.0, $5892 = 0, $5893 = 0, $5894 = 0;
 var $5895 = 0, $5896 = 0, $5897 = 0, $5898 = 0, $5899 = 0, $59 = 0, $590 = 0, $5900 = 0, $5901 = 0, $5902 = 0, $5903 = 0, $5904 = 0, $5905 = 0.0, $5906 = 0, $5907 = 0, $5908 = 0, $5909 = 0, $591 = 0, $5910 = 0, $5911 = 0;
 var $5912 = 0, $5913 = 0, $5914 = 0, $5915 = 0, $5916 = 0, $5917 = 0, $5918 = 0, $5919 = 0.0, $592 = 0, $5920 = 0, $5921 = 0, $5922 = 0, $5923 = 0, $5924 = 0, $5925 = 0, $5926 = 0, $5927 = 0, $5928 = 0, $5929 = 0, $593 = 0;
 var $5930 = 0, $5931 = 0, $5932 = 0, $5933 = 0.0, $5934 = 0, $5935 = 0, $5936 = 0, $5937 = 0, $5938 = 0, $5939 = 0, $594 = 0, $5940 = 0, $5941 = 0, $5942 = 0, $5943 = 0, $5944 = 0, $5945 = 0, $5946 = 0, $5947 = 0.0, $5948 = 0;
 var $5949 = 0, $595 = 0, $5950 = 0, $5951 = 0, $5952 = 0, $5953 = 0, $5954 = 0, $5955 = 0, $5956 = 0, $5957 = 0, $5958 = 0, $5959 = 0, $596 = 0.0, $5960 = 0, $5961 = 0.0, $5962 = 0, $5963 = 0, $5964 = 0, $5965 = 0, $5966 = 0;
 var $5967 = 0, $5968 = 0, $5969 = 0, $597 = 0.0, $5970 = 0, $5971 = 0, $5972 = 0, $5973 = 0, $5974 = 0, $5975 = 0, $5976 = 0.0, $5977 = 0.0, $5978 = 0.0, $5979 = 0.0, $598 = 0.0, $5980 = 0.0, $5981 = 0.0, $5982 = 0.0, $5983 = 0.0, $5984 = 0.0;
 var $5985 = 0.0, $5986 = 0.0, $5987 = 0.0, $5988 = 0.0, $5989 = 0.0, $599 = 0.0, $5990 = 0.0, $5991 = 0.0, $5992 = 0.0, $5993 = 0.0, $5994 = 0, $5995 = 0.0, $5996 = 0.0, $5997 = 0.0, $5998 = 0, $5999 = 0.0, $6 = 0, $60 = 0, $600 = 0.0, $6000 = 0;
 var $6001 = 0.0, $6002 = 0, $6003 = 0.0, $6004 = 0, $6005 = 0.0, $6006 = 0, $6007 = 0.0, $6008 = 0, $6009 = 0.0, $601 = 0.0, $6010 = 0, $6011 = 0.0, $6012 = 0.0, $6013 = 0.0, $6014 = 0.0, $6015 = 0.0, $6016 = 0.0, $6017 = 0.0, $6018 = 0.0, $6019 = 0.0;
 var $602 = 0.0, $6020 = 0, $6021 = 0.0, $6022 = 0.0, $6023 = 0.0, $6024 = 0.0, $6025 = 0, $6026 = 0.0, $6027 = 0.0, $6028 = 0.0, $6029 = 0.0, $603 = 0.0, $6030 = 0.0, $6031 = 0, $6032 = 0.0, $6033 = 0.0, $6034 = 0.0, $6035 = 0.0, $6036 = 0.0, $6037 = 0.0;
 var $6038 = 0.0, $6039 = 0.0, $604 = 0.0, $6040 = 0.0, $6041 = 0.0, $6042 = 0.0, $6043 = 0.0, $6044 = 0.0, $6045 = 0, $6046 = 0.0, $6047 = 0, $6048 = 0.0, $6049 = 0.0, $605 = 0.0, $6050 = 0.0, $6051 = 0.0, $6052 = 0.0, $6053 = 0.0, $6054 = 0.0, $6055 = 0.0;
 var $6056 = 0.0, $6057 = 0.0, $6058 = 0.0, $6059 = 0.0, $606 = 0.0, $6060 = 0.0, $6061 = 0.0, $6062 = 0.0, $6063 = 0.0, $6064 = 0.0, $6065 = 0.0, $6066 = 0.0, $6067 = 0.0, $6068 = 0.0, $6069 = 0.0, $607 = 0.0, $6070 = 0.0, $6071 = 0.0, $6072 = 0.0, $6073 = 0.0;
 var $6074 = 0.0, $6075 = 0.0, $6076 = 0.0, $6077 = 0.0, $6078 = 0.0, $6079 = 0.0, $608 = 0.0, $6080 = 0.0, $6081 = 0.0, $6082 = 0.0, $6083 = 0.0, $6084 = 0.0, $6085 = 0.0, $6086 = 0, $6087 = 0.0, $6088 = 0.0, $6089 = 0.0, $609 = 0.0, $6090 = 0.0, $6091 = 0;
 var $6092 = 0.0, $6093 = 0, $6094 = 0.0, $6095 = 0, $6096 = 0.0, $6097 = 0, $6098 = 0.0, $6099 = 0, $61 = 0, $610 = 0.0, $6100 = 0.0, $6101 = 0, $6102 = 0.0, $6103 = 0, $6104 = 0, $6105 = 0, $6106 = 0.0, $6107 = 0, $6108 = 0, $6109 = 0;
 var $611 = 0.0, $6110 = 0, $6111 = 0, $6112 = 0, $6113 = 0, $6114 = 0, $6115 = 0, $6116 = 0, $6117 = 0, $6118 = 0, $6119 = 0, $612 = 0.0, $6120 = 0.0, $6121 = 0, $6122 = 0, $6123 = 0, $6124 = 0, $6125 = 0, $6126 = 0, $6127 = 0;
 var $6128 = 0, $6129 = 0, $613 = 0.0, $6130 = 0, $6131 = 0, $6132 = 0, $6133 = 0, $6134 = 0.0, $6135 = 0, $6136 = 0, $6137 = 0, $6138 = 0, $6139 = 0, $614 = 0.0, $6140 = 0, $6141 = 0, $6142 = 0, $6143 = 0, $6144 = 0, $6145 = 0;
 var $6146 = 0, $6147 = 0, $6148 = 0.0, $6149 = 0, $615 = 0.0, $6150 = 0, $6151 = 0, $6152 = 0, $6153 = 0, $6154 = 0, $6155 = 0, $6156 = 0, $6157 = 0, $6158 = 0, $6159 = 0, $616 = 0.0, $6160 = 0, $6161 = 0, $6162 = 0.0, $6163 = 0;
 var $6164 = 0, $6165 = 0, $6166 = 0, $6167 = 0, $6168 = 0, $6169 = 0, $617 = 0.0, $6170 = 0, $6171 = 0, $6172 = 0, $6173 = 0, $6174 = 0, $6175 = 0, $6176 = 0.0, $6177 = 0, $6178 = 0, $6179 = 0, $618 = 0.0, $6180 = 0, $6181 = 0;
 var $6182 = 0, $6183 = 0, $6184 = 0, $6185 = 0, $6186 = 0, $6187 = 0, $6188 = 0, $6189 = 0, $619 = 0.0, $6190 = 0.0, $6191 = 0, $6192 = 0, $6193 = 0, $6194 = 0, $6195 = 0, $6196 = 0, $6197 = 0, $6198 = 0, $6199 = 0, $62 = 0;
 var $620 = 0.0, $6200 = 0, $6201 = 0, $6202 = 0, $6203 = 0, $6204 = 0, $6205 = 0.0, $6206 = 0.0, $6207 = 0.0, $6208 = 0.0, $6209 = 0.0, $621 = 0.0, $6210 = 0.0, $6211 = 0.0, $6212 = 0.0, $6213 = 0.0, $6214 = 0.0, $6215 = 0.0, $6216 = 0.0, $6217 = 0.0;
 var $6218 = 0.0, $6219 = 0.0, $622 = 0.0, $6220 = 0.0, $6221 = 0.0, $6222 = 0.0, $6223 = 0.0, $6224 = 0.0, $6225 = 0.0, $6226 = 0, $6227 = 0.0, $6228 = 0.0, $6229 = 0.0, $623 = 0.0, $6230 = 0, $6231 = 0.0, $6232 = 0, $6233 = 0.0, $6234 = 0, $6235 = 0.0;
 var $6236 = 0, $6237 = 0.0, $6238 = 0, $6239 = 0.0, $624 = 0.0, $6240 = 0, $6241 = 0.0, $6242 = 0, $6243 = 0.0, $6244 = 0, $6245 = 0.0, $6246 = 0.0, $6247 = 0.0, $6248 = 0.0, $6249 = 0.0, $625 = 0.0, $6250 = 0.0, $6251 = 0.0, $6252 = 0.0, $6253 = 0;
 var $6254 = 0.0, $6255 = 0.0, $6256 = 0.0, $6257 = 0.0, $6258 = 0.0, $6259 = 0, $626 = 0.0, $6260 = 0.0, $6261 = 0.0, $6262 = 0.0, $6263 = 0.0, $6264 = 0.0, $6265 = 0, $6266 = 0.0, $6267 = 0.0, $6268 = 0.0, $6269 = 0.0, $627 = 0.0, $6270 = 0.0, $6271 = 0.0;
 var $6272 = 0.0, $6273 = 0.0, $6274 = 0.0, $6275 = 0.0, $6276 = 0.0, $6277 = 0.0, $6278 = 0.0, $6279 = 0, $628 = 0.0, $6280 = 0.0, $6281 = 0, $6282 = 0.0, $6283 = 0.0, $6284 = 0.0, $6285 = 0.0, $6286 = 0.0, $6287 = 0.0, $6288 = 0.0, $6289 = 0.0, $629 = 0.0;
 var $6290 = 0.0, $6291 = 0.0, $6292 = 0.0, $6293 = 0.0, $6294 = 0.0, $6295 = 0.0, $6296 = 0.0, $6297 = 0.0, $6298 = 0.0, $6299 = 0.0, $63 = 0, $630 = 0.0, $6300 = 0.0, $6301 = 0.0, $6302 = 0.0, $6303 = 0.0, $6304 = 0.0, $6305 = 0.0, $6306 = 0.0, $6307 = 0.0;
 var $6308 = 0.0, $6309 = 0.0, $631 = 0.0, $6310 = 0.0, $6311 = 0.0, $6312 = 0.0, $6313 = 0.0, $6314 = 0.0, $6315 = 0.0, $6316 = 0.0, $6317 = 0.0, $6318 = 0, $6319 = 0.0, $632 = 0.0, $6320 = 0.0, $6321 = 0.0, $6322 = 0.0, $6323 = 0.0, $6324 = 0, $6325 = 0.0;
 var $6326 = 0, $6327 = 0.0, $6328 = 0, $6329 = 0.0, $633 = 0.0, $6330 = 0, $6331 = 0.0, $6332 = 0, $6333 = 0.0, $6334 = 0, $6335 = 0.0, $6336 = 0, $6337 = 0, $6338 = 0, $6339 = 0.0, $634 = 0.0, $6340 = 0, $6341 = 0, $6342 = 0, $6343 = 0;
 var $6344 = 0, $6345 = 0, $6346 = 0, $6347 = 0, $6348 = 0, $6349 = 0, $635 = 0.0, $6350 = 0, $6351 = 0, $6352 = 0, $6353 = 0.0, $6354 = 0, $6355 = 0, $6356 = 0, $6357 = 0, $6358 = 0, $6359 = 0, $636 = 0.0, $6360 = 0, $6361 = 0;
 var $6362 = 0, $6363 = 0, $6364 = 0, $6365 = 0, $6366 = 0, $6367 = 0.0, $6368 = 0, $6369 = 0, $637 = 0.0, $6370 = 0, $6371 = 0, $6372 = 0, $6373 = 0, $6374 = 0, $6375 = 0, $6376 = 0, $6377 = 0, $6378 = 0, $6379 = 0, $638 = 0.0;
 var $6380 = 0, $6381 = 0.0, $6382 = 0, $6383 = 0, $6384 = 0, $6385 = 0, $6386 = 0, $6387 = 0, $6388 = 0, $6389 = 0, $639 = 0.0, $6390 = 0, $6391 = 0, $6392 = 0, $6393 = 0, $6394 = 0, $6395 = 0.0, $6396 = 0, $6397 = 0, $6398 = 0;
 var $6399 = 0, $64 = 0, $640 = 0.0, $6400 = 0, $6401 = 0, $6402 = 0, $6403 = 0, $6404 = 0, $6405 = 0, $6406 = 0, $6407 = 0, $6408 = 0, $6409 = 0.0, $641 = 0.0, $6410 = 0, $6411 = 0, $6412 = 0, $6413 = 0, $6414 = 0, $6415 = 0;
 var $6416 = 0, $6417 = 0, $6418 = 0, $6419 = 0, $642 = 0.0, $6420 = 0, $6421 = 0, $6422 = 0, $6423 = 0.0, $6424 = 0, $6425 = 0, $6426 = 0, $6427 = 0, $6428 = 0, $6429 = 0, $643 = 0.0, $6430 = 0, $6431 = 0, $6432 = 0, $6433 = 0;
 var $6434 = 0, $6435 = 0, $6436 = 0, $6437 = 0, $6438 = 0.0, $6439 = 0.0, $644 = 0.0, $6440 = 0.0, $6441 = 0.0, $6442 = 0.0, $6443 = 0.0, $6444 = 0.0, $6445 = 0.0, $6446 = 0.0, $6447 = 0.0, $6448 = 0.0, $6449 = 0.0, $645 = 0.0, $6450 = 0.0, $6451 = 0.0;
 var $6452 = 0.0, $6453 = 0.0, $6454 = 0.0, $6455 = 0.0, $6456 = 0.0, $6457 = 0.0, $6458 = 0.0, $6459 = 0.0, $646 = 0.0, $6460 = 0.0, $6461 = 0.0, $6462 = 0.0, $6463 = 0.0, $6464 = 0.0, $6465 = 0.0, $6466 = 0.0, $6467 = 0.0, $6468 = 0.0, $6469 = 0.0, $647 = 0.0;
 var $6470 = 0, $6471 = 0.0, $6472 = 0.0, $6473 = 0, $6474 = 0.0, $6475 = 0, $6476 = 0.0, $6477 = 0, $6478 = 0.0, $6479 = 0, $648 = 0.0, $6480 = 0.0, $6481 = 0, $6482 = 0.0, $6483 = 0, $6484 = 0.0, $6485 = 0, $6486 = 0.0, $6487 = 0.0, $6488 = 0;
 var $6489 = 0.0, $649 = 0.0, $6490 = 0.0, $6491 = 0, $6492 = 0.0, $6493 = 0.0, $6494 = 0.0, $6495 = 0.0, $6496 = 0.0, $6497 = 0, $6498 = 0.0, $6499 = 0.0, $65 = 0, $650 = 0.0, $6500 = 0.0, $6501 = 0.0, $6502 = 0.0, $6503 = 0, $6504 = 0.0, $6505 = 0;
 var $6506 = 0.0, $6507 = 0.0, $6508 = 0.0, $6509 = 0.0, $651 = 0.0, $6510 = 0.0, $6511 = 0.0, $6512 = 0.0, $6513 = 0.0, $6514 = 0.0, $6515 = 0.0, $6516 = 0.0, $6517 = 0.0, $6518 = 0.0, $6519 = 0.0, $652 = 0.0, $6520 = 0.0, $6521 = 0.0, $6522 = 0.0, $6523 = 0.0;
 var $6524 = 0.0, $6525 = 0.0, $6526 = 0.0, $6527 = 0.0, $6528 = 0.0, $6529 = 0.0, $653 = 0.0, $6530 = 0.0, $6531 = 0.0, $6532 = 0.0, $6533 = 0.0, $6534 = 0.0, $6535 = 0.0, $6536 = 0, $6537 = 0.0, $6538 = 0.0, $6539 = 0.0, $654 = 0.0, $6540 = 0, $6541 = 0.0;
 var $6542 = 0, $6543 = 0.0, $6544 = 0, $6545 = 0.0, $6546 = 0, $6547 = 0.0, $6548 = 0, $6549 = 0.0, $655 = 0.0, $6550 = 0, $6551 = 0.0, $6552 = 0, $6553 = 0, $6554 = 0, $6555 = 0.0, $6556 = 0, $6557 = 0, $6558 = 0, $6559 = 0, $656 = 0.0;
 var $6560 = 0, $6561 = 0, $6562 = 0, $6563 = 0, $6564 = 0, $6565 = 0, $6566 = 0, $6567 = 0, $6568 = 0, $6569 = 0.0, $657 = 0.0, $6570 = 0, $6571 = 0, $6572 = 0, $6573 = 0, $6574 = 0, $6575 = 0, $6576 = 0, $6577 = 0, $6578 = 0;
 var $6579 = 0, $658 = 0.0, $6580 = 0, $6581 = 0, $6582 = 0, $6583 = 0.0, $6584 = 0, $6585 = 0, $6586 = 0, $6587 = 0, $6588 = 0, $6589 = 0, $659 = 0.0, $6590 = 0, $6591 = 0, $6592 = 0, $6593 = 0, $6594 = 0, $6595 = 0, $6596 = 0;
 var $6597 = 0.0, $6598 = 0, $6599 = 0, $66 = 0, $660 = 0.0, $6600 = 0, $6601 = 0, $6602 = 0, $6603 = 0, $6604 = 0, $6605 = 0, $6606 = 0, $6607 = 0, $6608 = 0, $6609 = 0, $661 = 0.0, $6610 = 0, $6611 = 0.0, $6612 = 0, $6613 = 0;
 var $6614 = 0, $6615 = 0, $6616 = 0, $6617 = 0, $6618 = 0, $6619 = 0, $662 = 0.0, $6620 = 0, $6621 = 0, $6622 = 0, $6623 = 0, $6624 = 0, $6625 = 0.0, $6626 = 0, $6627 = 0, $6628 = 0, $6629 = 0, $663 = 0.0, $6630 = 0, $6631 = 0;
 var $6632 = 0, $6633 = 0, $6634 = 0, $6635 = 0, $6636 = 0, $6637 = 0, $6638 = 0, $6639 = 0.0, $664 = 0.0, $6640 = 0, $6641 = 0, $6642 = 0, $6643 = 0, $6644 = 0, $6645 = 0, $6646 = 0, $6647 = 0, $6648 = 0, $6649 = 0, $665 = 0.0;
 var $6650 = 0, $6651 = 0, $6652 = 0, $6653 = 0, $6654 = 0.0, $6655 = 0.0, $6656 = 0.0, $6657 = 0.0, $6658 = 0.0, $6659 = 0.0, $666 = 0.0, $6660 = 0.0, $6661 = 0.0, $6662 = 0.0, $6663 = 0.0, $6664 = 0.0, $6665 = 0.0, $6666 = 0.0, $6667 = 0.0, $6668 = 0.0;
 var $6669 = 0.0, $667 = 0.0, $6670 = 0.0, $6671 = 0.0, $6672 = 0.0, $6673 = 0.0, $6674 = 0.0, $6675 = 0.0, $6676 = 0.0, $6677 = 0.0, $6678 = 0.0, $6679 = 0.0, $668 = 0.0, $6680 = 0.0, $6681 = 0.0, $6682 = 0.0, $6683 = 0.0, $6684 = 0.0, $6685 = 0.0, $6686 = 0.0;
 var $6687 = 0, $6688 = 0.0, $6689 = 0.0, $669 = 0.0, $6690 = 0, $6691 = 0.0, $6692 = 0, $6693 = 0.0, $6694 = 0, $6695 = 0.0, $6696 = 0, $6697 = 0.0, $6698 = 0, $6699 = 0.0, $67 = 0, $670 = 0.0, $6700 = 0, $6701 = 0.0, $6702 = 0, $6703 = 0.0;
 var $6704 = 0, $6705 = 0.0, $6706 = 0.0, $6707 = 0.0, $6708 = 0, $6709 = 0, $671 = 0.0, $6710 = 0.0, $6711 = 0.0, $6712 = 0, $6713 = 0, $6714 = 0.0, $6715 = 0.0, $6716 = 0.0, $6717 = 0.0, $6718 = 0.0, $6719 = 0.0, $672 = 0.0, $6720 = 0.0, $6721 = 0;
 var $6722 = 0.0, $6723 = 0, $6724 = 0.0, $6725 = 0.0, $6726 = 0.0, $6727 = 0.0, $6728 = 0.0, $6729 = 0.0, $673 = 0.0, $6730 = 0.0, $6731 = 0.0, $6732 = 0.0, $6733 = 0.0, $6734 = 0.0, $6735 = 0.0, $6736 = 0.0, $6737 = 0.0, $6738 = 0.0, $6739 = 0.0, $674 = 0.0;
 var $6740 = 0.0, $6741 = 0.0, $6742 = 0.0, $6743 = 0.0, $6744 = 0.0, $6745 = 0.0, $6746 = 0.0, $6747 = 0.0, $6748 = 0.0, $6749 = 0.0, $675 = 0.0, $6750 = 0.0, $6751 = 0.0, $6752 = 0.0, $6753 = 0.0, $6754 = 0.0, $6755 = 0.0, $6756 = 0.0, $6757 = 0, $6758 = 0.0;
 var $6759 = 0.0, $676 = 0.0, $6760 = 0.0, $6761 = 0, $6762 = 0.0, $6763 = 0, $6764 = 0.0, $6765 = 0, $6766 = 0.0, $6767 = 0, $6768 = 0.0, $6769 = 0, $677 = 0.0, $6770 = 0.0, $6771 = 0, $6772 = 0.0, $6773 = 0, $6774 = 0, $6775 = 0, $6776 = 0.0;
 var $6777 = 0, $6778 = 0, $6779 = 0, $678 = 0.0, $6780 = 0, $6781 = 0, $6782 = 0, $6783 = 0, $6784 = 0, $6785 = 0, $6786 = 0, $6787 = 0, $6788 = 0, $6789 = 0, $679 = 0.0, $6790 = 0.0, $6791 = 0, $6792 = 0, $6793 = 0, $6794 = 0;
 var $6795 = 0, $6796 = 0, $6797 = 0, $6798 = 0, $6799 = 0, $68 = 0, $680 = 0.0, $6800 = 0, $6801 = 0, $6802 = 0, $6803 = 0, $6804 = 0.0, $6805 = 0, $6806 = 0, $6807 = 0, $6808 = 0, $6809 = 0, $681 = 0.0, $6810 = 0, $6811 = 0;
 var $6812 = 0, $6813 = 0, $6814 = 0, $6815 = 0, $6816 = 0, $6817 = 0, $6818 = 0.0, $6819 = 0, $682 = 0.0, $6820 = 0, $6821 = 0, $6822 = 0, $6823 = 0, $6824 = 0, $6825 = 0, $6826 = 0, $6827 = 0, $6828 = 0, $6829 = 0, $683 = 0.0;
 var $6830 = 0, $6831 = 0, $6832 = 0.0, $6833 = 0, $6834 = 0, $6835 = 0, $6836 = 0, $6837 = 0, $6838 = 0, $6839 = 0, $684 = 0.0, $6840 = 0, $6841 = 0, $6842 = 0, $6843 = 0, $6844 = 0, $6845 = 0, $6846 = 0.0, $6847 = 0, $6848 = 0;
 var $6849 = 0, $685 = 0.0, $6850 = 0, $6851 = 0, $6852 = 0, $6853 = 0, $6854 = 0, $6855 = 0, $6856 = 0, $6857 = 0, $6858 = 0, $6859 = 0, $686 = 0.0, $6860 = 0.0, $6861 = 0, $6862 = 0, $6863 = 0, $6864 = 0, $6865 = 0, $6866 = 0;
 var $6867 = 0, $6868 = 0, $6869 = 0, $687 = 0.0, $6870 = 0, $6871 = 0, $6872 = 0, $6873 = 0, $6874 = 0, $6875 = 0.0, $6876 = 0, $6877 = 0, $6878 = 0.0, $6879 = 0.0, $688 = 0.0, $6880 = 0, $6881 = 0, $6882 = 0.0, $6883 = 0, $6884 = 0;
 var $6885 = 0.0, $6886 = 0.0, $6887 = 0.0, $6888 = 0.0, $6889 = 0.0, $689 = 0.0, $6890 = 0.0, $6891 = 0.0, $6892 = 0.0, $6893 = 0.0, $6894 = 0.0, $6895 = 0.0, $6896 = 0.0, $6897 = 0.0, $6898 = 0, $6899 = 0.0, $69 = 0, $690 = 0.0, $6900 = 0.0, $6901 = 0.0;
 var $6902 = 0, $6903 = 0.0, $6904 = 0.0, $6905 = 0.0, $6906 = 0.0, $6907 = 0.0, $6908 = 0, $6909 = 0.0, $691 = 0.0, $6910 = 0.0, $6911 = 0.0, $6912 = 0.0, $6913 = 0.0, $6914 = 0.0, $6915 = 0.0, $6916 = 0.0, $6917 = 0.0, $6918 = 0.0, $6919 = 0.0, $692 = 0.0;
 var $6920 = 0.0, $6921 = 0.0, $6922 = 0.0, $6923 = 0.0, $6924 = 0.0, $6925 = 0.0, $6926 = 0, $6927 = 0.0, $6928 = 0, $6929 = 0.0, $693 = 0.0, $6930 = 0.0, $6931 = 0.0, $6932 = 0.0, $6933 = 0.0, $6934 = 0.0, $6935 = 0.0, $6936 = 0.0, $6937 = 0.0, $6938 = 0.0;
 var $6939 = 0.0, $694 = 0.0, $6940 = 0.0, $6941 = 0.0, $6942 = 0.0, $6943 = 0.0, $6944 = 0.0, $6945 = 0.0, $6946 = 0.0, $6947 = 0.0, $6948 = 0.0, $6949 = 0.0, $695 = 0.0, $6950 = 0.0, $6951 = 0.0, $6952 = 0.0, $6953 = 0.0, $6954 = 0.0, $6955 = 0.0, $6956 = 0.0;
 var $6957 = 0.0, $6958 = 0.0, $6959 = 0.0, $696 = 0.0, $6960 = 0.0, $6961 = 0.0, $6962 = 0.0, $6963 = 0.0, $6964 = 0.0, $6965 = 0.0, $6966 = 0.0, $6967 = 0.0, $6968 = 0.0, $6969 = 0.0, $697 = 0.0, $6970 = 0.0, $6971 = 0.0, $6972 = 0.0, $6973 = 0.0, $6974 = 0.0;
 var $6975 = 0.0, $6976 = 0.0, $6977 = 0.0, $6978 = 0.0, $6979 = 0.0, $698 = 0.0, $6980 = 0.0, $6981 = 0.0, $6982 = 0.0, $6983 = 0.0, $6984 = 0.0, $6985 = 0.0, $6986 = 0.0, $6987 = 0.0, $6988 = 0.0, $6989 = 0.0, $699 = 0.0, $6990 = 0.0, $6991 = 0.0, $6992 = 0.0;
 var $6993 = 0.0, $6994 = 0.0, $6995 = 0, $6996 = 0.0, $6997 = 0.0, $6998 = 0.0, $6999 = 0, $7 = 0, $70 = 0, $700 = 0.0, $7000 = 0.0, $7001 = 0, $7002 = 0.0, $7003 = 0, $7004 = 0.0, $7005 = 0, $7006 = 0.0, $7007 = 0, $7008 = 0.0, $7009 = 0;
 var $701 = 0.0, $7010 = 0.0, $7011 = 0, $7012 = 0.0, $7013 = 0, $7014 = 0.0, $7015 = 0, $7016 = 0.0, $7017 = 0, $7018 = 0.0, $7019 = 0, $702 = 0.0, $7020 = 0, $7021 = 0, $7022 = 0.0, $7023 = 0, $7024 = 0, $7025 = 0, $7026 = 0, $7027 = 0;
 var $7028 = 0, $7029 = 0, $703 = 0.0, $7030 = 0, $7031 = 0, $7032 = 0, $7033 = 0, $7034 = 0, $7035 = 0, $7036 = 0.0, $7037 = 0, $7038 = 0, $7039 = 0, $704 = 0.0, $7040 = 0, $7041 = 0, $7042 = 0, $7043 = 0, $7044 = 0, $7045 = 0;
 var $7046 = 0, $7047 = 0, $7048 = 0, $7049 = 0, $705 = 0.0, $7050 = 0.0, $7051 = 0, $7052 = 0, $7053 = 0, $7054 = 0, $7055 = 0, $7056 = 0, $7057 = 0, $7058 = 0, $7059 = 0, $706 = 0.0, $7060 = 0, $7061 = 0, $7062 = 0, $7063 = 0;
 var $7064 = 0.0, $7065 = 0, $7066 = 0, $7067 = 0, $7068 = 0, $7069 = 0, $707 = 0.0, $7070 = 0, $7071 = 0, $7072 = 0, $7073 = 0, $7074 = 0, $7075 = 0, $7076 = 0, $7077 = 0, $7078 = 0.0, $7079 = 0, $708 = 0.0, $7080 = 0, $7081 = 0;
 var $7082 = 0, $7083 = 0, $7084 = 0, $7085 = 0, $7086 = 0, $7087 = 0, $7088 = 0, $7089 = 0, $709 = 0.0, $7090 = 0, $7091 = 0, $7092 = 0.0, $7093 = 0, $7094 = 0, $7095 = 0, $7096 = 0, $7097 = 0, $7098 = 0, $7099 = 0, $71 = 0;
 var $710 = 0.0, $7100 = 0, $7101 = 0, $7102 = 0, $7103 = 0, $7104 = 0, $7105 = 0, $7106 = 0.0, $7107 = 0, $7108 = 0, $7109 = 0, $711 = 0.0, $7110 = 0, $7111 = 0, $7112 = 0, $7113 = 0, $7114 = 0, $7115 = 0, $7116 = 0, $7117 = 0;
 var $7118 = 0, $7119 = 0, $712 = 0.0, $7120 = 0, $7121 = 0.0, $7122 = 0, $7123 = 0, $7124 = 0.0, $7125 = 0.0, $7126 = 0, $7127 = 0, $7128 = 0.0, $7129 = 0.0, $713 = 0.0, $7130 = 0.0, $7131 = 0.0, $7132 = 0.0, $7133 = 0.0, $7134 = 0.0, $7135 = 0.0;
 var $7136 = 0.0, $7137 = 0.0, $7138 = 0.0, $7139 = 0.0, $714 = 0.0, $7140 = 0.0, $7141 = 0.0, $7142 = 0, $7143 = 0.0, $7144 = 0.0, $7145 = 0.0, $7146 = 0, $7147 = 0.0, $7148 = 0.0, $7149 = 0.0, $715 = 0.0, $7150 = 0.0, $7151 = 0.0, $7152 = 0, $7153 = 0.0;
 var $7154 = 0.0, $7155 = 0.0, $7156 = 0.0, $7157 = 0.0, $7158 = 0.0, $7159 = 0.0, $716 = 0.0, $7160 = 0.0, $7161 = 0.0, $7162 = 0.0, $7163 = 0.0, $7164 = 0.0, $7165 = 0.0, $7166 = 0.0, $7167 = 0.0, $7168 = 0.0, $7169 = 0.0, $717 = 0.0, $7170 = 0.0, $7171 = 0;
 var $7172 = 0.0, $7173 = 0, $7174 = 0.0, $7175 = 0.0, $7176 = 0.0, $7177 = 0.0, $7178 = 0.0, $7179 = 0.0, $718 = 0.0, $7180 = 0.0, $7181 = 0.0, $7182 = 0.0, $7183 = 0.0, $7184 = 0.0, $7185 = 0.0, $7186 = 0.0, $7187 = 0.0, $7188 = 0.0, $7189 = 0.0, $719 = 0.0;
 var $7190 = 0.0, $7191 = 0.0, $7192 = 0.0, $7193 = 0.0, $7194 = 0.0, $7195 = 0.0, $7196 = 0.0, $7197 = 0.0, $7198 = 0.0, $7199 = 0.0, $72 = 0, $720 = 0.0, $7200 = 0.0, $7201 = 0.0, $7202 = 0.0, $7203 = 0.0, $7204 = 0.0, $7205 = 0.0, $7206 = 0.0, $7207 = 0.0;
 var $7208 = 0.0, $7209 = 0.0, $721 = 0.0, $7210 = 0.0, $7211 = 0.0, $7212 = 0.0, $7213 = 0.0, $7214 = 0.0, $7215 = 0.0, $7216 = 0.0, $7217 = 0.0, $7218 = 0.0, $7219 = 0.0, $722 = 0.0, $7220 = 0.0, $7221 = 0.0, $7222 = 0.0, $7223 = 0.0, $7224 = 0.0, $7225 = 0.0;
 var $7226 = 0.0, $7227 = 0.0, $7228 = 0.0, $7229 = 0.0, $723 = 0.0, $7230 = 0.0, $7231 = 0.0, $7232 = 0.0, $7233 = 0.0, $7234 = 0.0, $7235 = 0.0, $7236 = 0.0, $7237 = 0.0, $7238 = 0.0, $7239 = 0.0, $724 = 0.0, $7240 = 0, $7241 = 0.0, $7242 = 0.0, $7243 = 0.0;
 var $7244 = 0, $7245 = 0.0, $7246 = 0, $7247 = 0.0, $7248 = 0, $7249 = 0.0, $725 = 0.0, $7250 = 0, $7251 = 0.0, $7252 = 0, $7253 = 0.0, $7254 = 0, $7255 = 0.0, $7256 = 0, $7257 = 0.0, $7258 = 0, $7259 = 0.0, $726 = 0, $7260 = 0, $7261 = 0.0;
 var $7262 = 0, $7263 = 0.0, $7264 = 0, $7265 = 0, $7266 = 0, $7267 = 0.0, $7268 = 0, $7269 = 0, $727 = 0, $7270 = 0, $7271 = 0, $7272 = 0, $7273 = 0, $7274 = 0, $7275 = 0, $7276 = 0, $7277 = 0, $7278 = 0, $7279 = 0, $728 = 0;
 var $7280 = 0, $7281 = 0.0, $7282 = 0, $7283 = 0, $7284 = 0, $7285 = 0, $7286 = 0, $7287 = 0, $7288 = 0, $7289 = 0, $729 = 0, $7290 = 0, $7291 = 0, $7292 = 0, $7293 = 0, $7294 = 0, $7295 = 0.0, $7296 = 0, $7297 = 0, $7298 = 0;
 var $7299 = 0, $73 = 0, $730 = 0, $7300 = 0, $7301 = 0, $7302 = 0, $7303 = 0, $7304 = 0, $7305 = 0, $7306 = 0, $7307 = 0, $7308 = 0, $7309 = 0.0, $731 = 0, $7310 = 0, $7311 = 0, $7312 = 0, $7313 = 0, $7314 = 0, $7315 = 0;
 var $7316 = 0, $7317 = 0, $7318 = 0, $7319 = 0, $732 = 0.0, $7320 = 0, $7321 = 0, $7322 = 0, $7323 = 0.0, $7324 = 0, $7325 = 0, $7326 = 0, $7327 = 0, $7328 = 0, $7329 = 0, $733 = 0.0, $7330 = 0, $7331 = 0, $7332 = 0, $7333 = 0;
 var $7334 = 0, $7335 = 0, $7336 = 0, $7337 = 0.0, $7338 = 0, $7339 = 0, $734 = 0.0, $7340 = 0, $7341 = 0, $7342 = 0, $7343 = 0, $7344 = 0, $7345 = 0, $7346 = 0, $7347 = 0, $7348 = 0, $7349 = 0, $735 = 0.0, $7350 = 0, $7351 = 0.0;
 var $7352 = 0, $7353 = 0, $7354 = 0, $7355 = 0, $7356 = 0, $7357 = 0, $7358 = 0, $7359 = 0, $736 = 0.0, $7360 = 0, $7361 = 0, $7362 = 0, $7363 = 0, $7364 = 0, $7365 = 0, $7366 = 0.0, $7367 = 0.0, $7368 = 0.0, $7369 = 0, $737 = 0.0;
 var $7370 = 0, $7371 = 0.0, $7372 = 0.0, $7373 = 0, $7374 = 0, $7375 = 0.0, $7376 = 0.0, $7377 = 0.0, $7378 = 0.0, $7379 = 0.0, $738 = 0.0, $7380 = 0.0, $7381 = 0.0, $7382 = 0, $7383 = 0.0, $7384 = 0, $7385 = 0.0, $7386 = 0.0, $7387 = 0.0, $7388 = 0.0;
 var $7389 = 0.0, $739 = 0.0, $7390 = 0.0, $7391 = 0.0, $7392 = 0.0, $7393 = 0.0, $7394 = 0.0, $7395 = 0.0, $7396 = 0.0, $7397 = 0.0, $7398 = 0.0, $7399 = 0.0, $74 = 0, $740 = 0, $7400 = 0.0, $7401 = 0.0, $7402 = 0.0, $7403 = 0.0, $7404 = 0.0, $7405 = 0.0;
 var $7406 = 0.0, $7407 = 0.0, $7408 = 0.0, $7409 = 0.0, $741 = 0, $7410 = 0.0, $7411 = 0.0, $7412 = 0.0, $7413 = 0.0, $7414 = 0.0, $7415 = 0.0, $7416 = 0.0, $7417 = 0.0, $7418 = 0.0, $7419 = 0.0, $742 = 0, $7420 = 0.0, $7421 = 0.0, $7422 = 0.0, $7423 = 0.0;
 var $7424 = 0.0, $7425 = 0.0, $7426 = 0.0, $7427 = 0.0, $7428 = 0.0, $7429 = 0.0, $743 = 0, $7430 = 0.0, $7431 = 0.0, $7432 = 0.0, $7433 = 0.0, $7434 = 0.0, $7435 = 0.0, $7436 = 0.0, $7437 = 0.0, $7438 = 0.0, $7439 = 0.0, $744 = 0, $7440 = 0.0, $7441 = 0.0;
 var $7442 = 0.0, $7443 = 0.0, $7444 = 0.0, $7445 = 0.0, $7446 = 0.0, $7447 = 0.0, $7448 = 0.0, $7449 = 0.0, $745 = 0, $7450 = 0.0, $7451 = 0.0, $7452 = 0, $7453 = 0.0, $7454 = 0.0, $7455 = 0.0, $7456 = 0, $7457 = 0.0, $7458 = 0, $7459 = 0.0, $746 = 0;
 var $7460 = 0, $7461 = 0.0, $7462 = 0, $7463 = 0.0, $7464 = 0, $7465 = 0.0, $7466 = 0, $7467 = 0.0, $7468 = 0, $7469 = 0.0, $747 = 0, $7470 = 0, $7471 = 0.0, $7472 = 0, $7473 = 0.0, $7474 = 0, $7475 = 0.0, $7476 = 0, $7477 = 0, $7478 = 0;
 var $7479 = 0.0, $748 = 0, $7480 = 0, $7481 = 0, $7482 = 0, $7483 = 0, $7484 = 0, $7485 = 0, $7486 = 0, $7487 = 0, $7488 = 0, $7489 = 0, $749 = 0, $7490 = 0, $7491 = 0, $7492 = 0, $7493 = 0.0, $7494 = 0, $7495 = 0, $7496 = 0;
 var $7497 = 0, $7498 = 0, $7499 = 0, $75 = 0, $750 = 0, $7500 = 0, $7501 = 0, $7502 = 0, $7503 = 0, $7504 = 0, $7505 = 0, $7506 = 0, $7507 = 0.0, $7508 = 0, $7509 = 0, $751 = 0, $7510 = 0, $7511 = 0, $7512 = 0, $7513 = 0;
 var $7514 = 0, $7515 = 0, $7516 = 0, $7517 = 0, $7518 = 0, $7519 = 0, $752 = 0, $7520 = 0, $7521 = 0.0, $7522 = 0, $7523 = 0, $7524 = 0, $7525 = 0, $7526 = 0, $7527 = 0, $7528 = 0, $7529 = 0, $753 = 0, $7530 = 0, $7531 = 0;
 var $7532 = 0, $7533 = 0, $7534 = 0, $7535 = 0.0, $7536 = 0, $7537 = 0, $7538 = 0, $7539 = 0, $754 = 0, $7540 = 0, $7541 = 0, $7542 = 0, $7543 = 0, $7544 = 0, $7545 = 0, $7546 = 0, $7547 = 0, $7548 = 0, $7549 = 0.0, $755 = 0;
 var $7550 = 0, $7551 = 0, $7552 = 0, $7553 = 0, $7554 = 0, $7555 = 0, $7556 = 0, $7557 = 0, $7558 = 0, $7559 = 0, $756 = 0, $7560 = 0, $7561 = 0, $7562 = 0, $7563 = 0.0, $7564 = 0, $7565 = 0, $7566 = 0, $7567 = 0, $7568 = 0;
 var $7569 = 0, $757 = 0, $7570 = 0, $7571 = 0, $7572 = 0, $7573 = 0, $7574 = 0, $7575 = 0, $7576 = 0, $7577 = 0, $7578 = 0, $7579 = 0, $758 = 0.0, $759 = 0, $76 = 0, $760 = 0.0, $761 = 0.0, $762 = 0.0, $763 = 0, $764 = 0.0;
 var $765 = 0, $766 = 0.0, $767 = 0.0, $768 = 0.0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0.0, $773 = 0, $774 = 0.0, $775 = 0, $776 = 0.0, $777 = 0.0, $778 = 0.0, $779 = 0.0, $78 = 0, $780 = 0.0, $781 = 0.0, $782 = 0.0;
 var $783 = 0.0, $784 = 0.0, $785 = 0.0, $786 = 0.0, $787 = 0.0, $788 = 0.0, $789 = 0.0, $79 = 0, $790 = 0.0, $791 = 0.0, $792 = 0.0, $793 = 0.0, $794 = 0.0, $795 = 0.0, $796 = 0.0, $797 = 0.0, $798 = 0.0, $799 = 0.0, $8 = 0, $80 = 0;
 var $800 = 0.0, $801 = 0.0, $802 = 0.0, $803 = 0.0, $804 = 0.0, $805 = 0.0, $806 = 0.0, $807 = 0.0, $808 = 0.0, $809 = 0.0, $81 = 0, $810 = 0.0, $811 = 0.0, $812 = 0.0, $813 = 0.0, $814 = 0.0, $815 = 0.0, $816 = 0.0, $817 = 0.0, $818 = 0.0;
 var $819 = 0.0, $82 = 0, $820 = 0.0, $821 = 0.0, $822 = 0.0, $823 = 0.0, $824 = 0.0, $825 = 0.0, $826 = 0.0, $827 = 0.0, $828 = 0.0, $829 = 0.0, $83 = 0, $830 = 0.0, $831 = 0.0, $832 = 0.0, $833 = 0.0, $834 = 0.0, $835 = 0.0, $836 = 0.0;
 var $837 = 0.0, $838 = 0.0, $839 = 0.0, $84 = 0, $840 = 0.0, $841 = 0.0, $842 = 0.0, $843 = 0.0, $844 = 0.0, $845 = 0.0, $846 = 0.0, $847 = 0.0, $848 = 0.0, $849 = 0.0, $85 = 0, $850 = 0.0, $851 = 0.0, $852 = 0.0, $853 = 0.0, $854 = 0.0;
 var $855 = 0.0, $856 = 0.0, $857 = 0.0, $858 = 0.0, $859 = 0.0, $86 = 0, $860 = 0.0, $861 = 0.0, $862 = 0.0, $863 = 0.0, $864 = 0.0, $865 = 0.0, $866 = 0.0, $867 = 0.0, $868 = 0.0, $869 = 0.0, $87 = 0, $870 = 0.0, $871 = 0.0, $872 = 0.0;
 var $873 = 0.0, $874 = 0.0, $875 = 0.0, $876 = 0.0, $877 = 0.0, $878 = 0.0, $879 = 0.0, $88 = 0, $880 = 0.0, $881 = 0.0, $882 = 0.0, $883 = 0.0, $884 = 0.0, $885 = 0.0, $886 = 0.0, $887 = 0.0, $888 = 0.0, $889 = 0.0, $89 = 0, $890 = 0.0;
 var $891 = 0.0, $892 = 0.0, $893 = 0.0, $894 = 0.0, $895 = 0.0, $896 = 0.0, $897 = 0.0, $898 = 0.0, $899 = 0.0, $9 = 0, $90 = 0, $900 = 0.0, $901 = 0.0, $902 = 0.0, $903 = 0.0, $904 = 0, $905 = 0.0, $906 = 0.0, $907 = 0, $908 = 0.0;
 var $909 = 0.0, $91 = 0, $910 = 0.0, $911 = 0.0, $912 = 0.0, $913 = 0.0, $914 = 0.0, $915 = 0.0, $916 = 0.0, $917 = 0.0, $918 = 0.0, $919 = 0.0, $92 = 0, $920 = 0.0, $921 = 0.0, $922 = 0.0, $923 = 0.0, $924 = 0.0, $925 = 0.0, $926 = 0.0;
 var $927 = 0.0, $928 = 0.0, $929 = 0.0, $93 = 0, $930 = 0.0, $931 = 0.0, $932 = 0.0, $933 = 0.0, $934 = 0.0, $935 = 0.0, $936 = 0.0, $937 = 0.0, $938 = 0.0, $939 = 0.0, $94 = 0, $940 = 0.0, $941 = 0.0, $942 = 0.0, $943 = 0.0, $944 = 0.0;
 var $945 = 0.0, $946 = 0.0, $947 = 0.0, $948 = 0.0, $949 = 0.0, $95 = 0, $950 = 0.0, $951 = 0.0, $952 = 0.0, $953 = 0.0, $954 = 0.0, $955 = 0.0, $956 = 0.0, $957 = 0.0, $958 = 0.0, $959 = 0.0, $96 = 0, $960 = 0.0, $961 = 0.0, $962 = 0.0;
 var $963 = 0.0, $964 = 0.0, $965 = 0.0, $966 = 0.0, $967 = 0.0, $968 = 0.0, $969 = 0.0, $97 = 0, $970 = 0.0, $971 = 0.0, $972 = 0.0, $973 = 0.0, $974 = 0.0, $975 = 0.0, $976 = 0.0, $977 = 0.0, $978 = 0.0, $979 = 0.0, $98 = 0, $980 = 0.0;
 var $981 = 0.0, $982 = 0.0, $983 = 0.0, $984 = 0.0, $985 = 0.0, $986 = 0.0, $987 = 0.0, $988 = 0.0, $989 = 0.0, $99 = 0, $990 = 0.0, $991 = 0.0, $992 = 0.0, $993 = 0.0, $994 = 0.0, $995 = 0.0, $996 = 0.0, $997 = 0.0, $998 = 0.0, $999 = 0.0;
 var $cj8array = 0, $cj8array6 = 0, $cj9array = 0, $iij8$0361 = 0, $iij810$0353 = 0, $iij9$0255 = 0, $ij8$0368 = 0, $ij89$0360 = 0, $ij9$0369 = 0, $j8array = 0, $j8array5 = 0, $j8valid = 0, $j8valid8 = 0, $j9array = 0, $j9valid = 0, $or$cond = 0, $sj8array = 0, $sj8array7 = 0, $sj9array = 0, $vfree = 0;
 var $vfree110 = 0, $vfree121 = 0, $vfree132 = 0, $vfree142 = 0, $vfree152 = 0, $vfree175 = 0, $vfree186 = 0, $vfree197 = 0, $vfree208 = 0, $vfree21 = 0, $vfree219 = 0, $vfree230 = 0, $vfree241 = 0, $vfree252 = 0, $vfree263 = 0, $vfree273 = 0, $vfree283 = 0, $vfree44 = 0, $vfree55 = 0, $vfree66 = 0;
 var $vfree77 = 0, $vfree88 = 0, $vfree99 = 0, $vinfos = 0, $vinfos109 = 0, $vinfos120 = 0, $vinfos131 = 0, $vinfos141 = 0, $vinfos151 = 0, $vinfos174 = 0, $vinfos185 = 0, $vinfos196 = 0, $vinfos20 = 0, $vinfos207 = 0, $vinfos218 = 0, $vinfos229 = 0, $vinfos240 = 0, $vinfos251 = 0, $vinfos262 = 0, $vinfos272 = 0;
 var $vinfos282 = 0, $vinfos43 = 0, $vinfos54 = 0, $vinfos65 = 0, $vinfos76 = 0, $vinfos87 = 0, $vinfos98 = 0, $x289 = 0, $x299 = 0, $x309 = 0, $x310 = 0, $x424 = 0, $x425 = 0, $x488 = 0, $x489 = 0, $x495 = 0, $x496 = 0, $x497 = 0, $x510 = 0, $x511 = 0;
 var $x523 = 0, $x524 = 0, $x536 = 0, $x537 = 0, $x651 = 0, $x652 = 0, $x715 = 0, $x716 = 0, $x722 = 0, $x723 = 0, $x724 = 0, $x737 = 0, $x738 = 0, $x750 = 0, $x751 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1184|0;
 $j9array = sp + 576|0;
 $cj9array = sp + 560|0;
 $sj9array = sp + 544|0;
 $j9valid = sp + 1172|0;
 $j8array = sp + 528|0;
 $cj8array = sp + 512|0;
 $sj8array = sp + 496|0;
 $j8valid = sp + 1170|0;
 $x289 = sp + 480|0;
 $vinfos = sp + 1156|0;
 $vfree = sp + 1144|0;
 $j8array5 = sp + 464|0;
 $cj8array6 = sp + 448|0;
 $sj8array7 = sp + 432|0;
 $j8valid8 = sp + 1168|0;
 $x299 = sp + 416|0;
 $vinfos20 = sp + 1132|0;
 $vfree21 = sp + 1120|0;
 $x309 = sp + 400|0;
 $x310 = sp + 384|0;
 $x424 = sp + 368|0;
 $x425 = sp + 352|0;
 $vinfos43 = sp + 1108|0;
 $vfree44 = sp + 1096|0;
 $vinfos54 = sp + 1084|0;
 $vfree55 = sp + 1072|0;
 $vinfos65 = sp + 1060|0;
 $vfree66 = sp + 1048|0;
 $vinfos76 = sp + 1036|0;
 $vfree77 = sp + 1024|0;
 $vinfos87 = sp + 1012|0;
 $vfree88 = sp + 1000|0;
 $vinfos98 = sp + 988|0;
 $vfree99 = sp + 976|0;
 $vinfos109 = sp + 964|0;
 $vfree110 = sp + 952|0;
 $x488 = sp + 336|0;
 $x489 = sp + 320|0;
 $vinfos120 = sp + 940|0;
 $vfree121 = sp + 928|0;
 $x495 = sp + 304|0;
 $x496 = sp + 288|0;
 $x497 = sp + 272|0;
 $vinfos131 = sp + 916|0;
 $vfree132 = sp + 904|0;
 $x510 = sp + 256|0;
 $x511 = sp + 240|0;
 $vinfos141 = sp + 892|0;
 $vfree142 = sp + 880|0;
 $x523 = sp + 224|0;
 $x524 = sp + 208|0;
 $vinfos151 = sp + 868|0;
 $vfree152 = sp + 856|0;
 $x536 = sp + 192|0;
 $x537 = sp + 176|0;
 $x651 = sp + 160|0;
 $x652 = sp + 144|0;
 $vinfos174 = sp + 844|0;
 $vfree175 = sp + 832|0;
 $vinfos185 = sp + 820|0;
 $vfree186 = sp + 808|0;
 $vinfos196 = sp + 796|0;
 $vfree197 = sp + 784|0;
 $vinfos207 = sp + 772|0;
 $vfree208 = sp + 760|0;
 $vinfos218 = sp + 748|0;
 $vfree219 = sp + 736|0;
 $vinfos229 = sp + 724|0;
 $vfree230 = sp + 712|0;
 $vinfos240 = sp + 700|0;
 $vfree241 = sp + 688|0;
 $x715 = sp + 128|0;
 $x716 = sp + 112|0;
 $vinfos251 = sp + 676|0;
 $vfree252 = sp + 664|0;
 $x722 = sp + 96|0;
 $x723 = sp + 80|0;
 $x724 = sp + 64|0;
 $vinfos262 = sp + 652|0;
 $vfree263 = sp + 640|0;
 $x737 = sp + 48|0;
 $x738 = sp + 32|0;
 $vinfos272 = sp + 628|0;
 $vfree273 = sp + 616|0;
 $x750 = sp + 16|0;
 $x751 = sp;
 $vinfos282 = sp + 604|0;
 $vfree283 = sp + 592|0;
 $0 = ((($this)) + 248|0);
 $1 = ((($this)) + 56|0);
 $2 = ((($this)) + 256|0);
 $3 = ((($this)) + 48|0);
 $4 = ((($this)) + 88|0);
 $5 = ((($this)) + 16|0);
 $6 = ((($this)) + 96|0);
 $7 = ((($this)) + 8|0);
 $8 = ((($this)) + 424|0);
 $9 = ((($this)) + 280|0);
 $10 = ((($this)) + 352|0);
 $11 = ((($this)) + 272|0);
 $12 = ((($this)) + 376|0);
 $13 = ((($this)) + 448|0);
 $14 = ((($this)) + 304|0);
 $15 = ((($this)) + 296|0);
 $16 = ((($this)) + 472|0);
 $17 = ((($this)) + 400|0);
 $18 = ((($this)) + 328|0);
 $19 = ((($this)) + 320|0);
 $20 = ((($this)) + 344|0);
 $21 = ((($this)) + 368|0);
 $22 = ((($this)) + 392|0);
 $23 = ((($this)) + 416|0);
 $24 = ((($this)) + 440|0);
 $25 = ((($this)) + 464|0);
 $26 = ((($this)) + 582|0);
 $27 = ((($this)) + 580|0);
 $28 = ((($this)) + 581|0);
 $29 = ((($this)) + 160|0);
 $30 = ((($this)) + 168|0);
 $31 = ((($this)) + 176|0);
 $32 = ((($this)) + 579|0);
 $33 = ((($x289)) + 8|0);
 $34 = ((($j8array)) + 8|0);
 $35 = ((($sj8array)) + 8|0);
 $36 = ((($cj8array)) + 8|0);
 $37 = ((($j8valid)) + 1|0);
 $38 = ((($this)) + 577|0);
 $39 = ((($this)) + 578|0);
 $40 = ((($this)) + 120|0);
 $41 = ((($this)) + 128|0);
 $42 = ((($this)) + 136|0);
 $43 = ((($this)) + 585|0);
 $44 = ((($this)) + 583|0);
 $45 = ((($this)) + 584|0);
 $46 = ((($this)) + 200|0);
 $47 = ((($this)) + 208|0);
 $48 = ((($this)) + 216|0);
 $49 = ((($this)) + 568|0);
 $50 = ((($this)) + 569|0);
 $51 = ((($this)) + 570|0);
 $52 = ((($this)) + 40|0);
 $53 = ((($this)) + 571|0);
 $54 = ((($this)) + 572|0);
 $55 = ((($this)) + 573|0);
 $56 = ((($this)) + 240|0);
 $57 = ((($this)) + 586|0);
 $58 = ((($this)) + 587|0);
 $59 = ((($this)) + 588|0);
 $60 = ((($this)) + 80|0);
 $61 = ((($this)) + 574|0);
 $62 = ((($this)) + 575|0);
 $63 = ((($this)) + 576|0);
 $64 = ((($this)) + 579|0);
 $65 = ((($x299)) + 8|0);
 $66 = ((($j8array5)) + 8|0);
 $67 = ((($sj8array7)) + 8|0);
 $68 = ((($cj8array6)) + 8|0);
 $69 = ((($j8valid8)) + 1|0);
 $70 = ((($this)) + 577|0);
 $71 = ((($this)) + 578|0);
 $72 = ((($this)) + 120|0);
 $73 = ((($this)) + 128|0);
 $74 = ((($this)) + 136|0);
 $75 = ((($this)) + 585|0);
 $76 = ((($this)) + 583|0);
 $77 = ((($this)) + 584|0);
 $78 = ((($this)) + 200|0);
 $79 = ((($this)) + 208|0);
 $80 = ((($this)) + 216|0);
 $81 = ((($this)) + 568|0);
 $82 = ((($this)) + 569|0);
 $83 = ((($this)) + 570|0);
 $84 = ((($this)) + 40|0);
 $85 = ((($this)) + 571|0);
 $86 = ((($this)) + 572|0);
 $87 = ((($this)) + 573|0);
 $88 = ((($this)) + 240|0);
 $89 = ((($this)) + 586|0);
 $90 = ((($this)) + 587|0);
 $91 = ((($this)) + 588|0);
 $92 = ((($this)) + 80|0);
 $93 = ((($this)) + 574|0);
 $94 = ((($this)) + 575|0);
 $95 = ((($this)) + 576|0);
 $96 = ((($this)) + 579|0);
 $97 = ((($x309)) + 8|0);
 $98 = ((($x310)) + 8|0);
 $99 = ((($this)) + 577|0);
 $100 = ((($this)) + 578|0);
 $101 = ((($this)) + 120|0);
 $102 = ((($this)) + 128|0);
 $103 = ((($this)) + 136|0);
 $104 = ((($this)) + 585|0);
 $105 = ((($x424)) + 8|0);
 $106 = ((($x425)) + 8|0);
 $107 = ((($this)) + 583|0);
 $108 = ((($this)) + 584|0);
 $109 = ((($this)) + 200|0);
 $110 = ((($this)) + 208|0);
 $111 = ((($this)) + 216|0);
 $112 = ((($this)) + 568|0);
 $113 = ((($this)) + 569|0);
 $114 = ((($this)) + 570|0);
 $115 = ((($this)) + 40|0);
 $116 = ((($this)) + 571|0);
 $117 = ((($this)) + 572|0);
 $118 = ((($this)) + 573|0);
 $119 = ((($this)) + 240|0);
 $120 = ((($this)) + 586|0);
 $121 = ((($this)) + 587|0);
 $122 = ((($this)) + 588|0);
 $123 = ((($this)) + 80|0);
 $124 = ((($this)) + 574|0);
 $125 = ((($this)) + 575|0);
 $126 = ((($this)) + 576|0);
 $127 = ((($this)) + 585|0);
 $128 = ((($this)) + 583|0);
 $129 = ((($this)) + 584|0);
 $130 = ((($this)) + 200|0);
 $131 = ((($this)) + 208|0);
 $132 = ((($this)) + 216|0);
 $133 = ((($this)) + 568|0);
 $134 = ((($this)) + 569|0);
 $135 = ((($this)) + 570|0);
 $136 = ((($this)) + 40|0);
 $137 = ((($this)) + 571|0);
 $138 = ((($this)) + 572|0);
 $139 = ((($this)) + 573|0);
 $140 = ((($this)) + 240|0);
 $141 = ((($this)) + 586|0);
 $142 = ((($this)) + 587|0);
 $143 = ((($this)) + 588|0);
 $144 = ((($this)) + 80|0);
 $145 = ((($this)) + 574|0);
 $146 = ((($this)) + 575|0);
 $147 = ((($this)) + 576|0);
 $148 = ((($this)) + 585|0);
 $149 = ((($this)) + 583|0);
 $150 = ((($this)) + 584|0);
 $151 = ((($this)) + 200|0);
 $152 = ((($this)) + 208|0);
 $153 = ((($this)) + 216|0);
 $154 = ((($this)) + 568|0);
 $155 = ((($this)) + 569|0);
 $156 = ((($this)) + 570|0);
 $157 = ((($this)) + 40|0);
 $158 = ((($this)) + 571|0);
 $159 = ((($this)) + 572|0);
 $160 = ((($this)) + 573|0);
 $161 = ((($this)) + 240|0);
 $162 = ((($this)) + 586|0);
 $163 = ((($this)) + 587|0);
 $164 = ((($this)) + 588|0);
 $165 = ((($this)) + 80|0);
 $166 = ((($this)) + 574|0);
 $167 = ((($this)) + 575|0);
 $168 = ((($this)) + 576|0);
 $169 = ((($this)) + 585|0);
 $170 = ((($this)) + 583|0);
 $171 = ((($this)) + 584|0);
 $172 = ((($this)) + 200|0);
 $173 = ((($this)) + 208|0);
 $174 = ((($this)) + 216|0);
 $175 = ((($this)) + 568|0);
 $176 = ((($this)) + 569|0);
 $177 = ((($this)) + 570|0);
 $178 = ((($this)) + 40|0);
 $179 = ((($this)) + 571|0);
 $180 = ((($this)) + 572|0);
 $181 = ((($this)) + 573|0);
 $182 = ((($this)) + 240|0);
 $183 = ((($this)) + 586|0);
 $184 = ((($this)) + 587|0);
 $185 = ((($this)) + 588|0);
 $186 = ((($this)) + 80|0);
 $187 = ((($this)) + 574|0);
 $188 = ((($this)) + 575|0);
 $189 = ((($this)) + 576|0);
 $190 = ((($this)) + 585|0);
 $191 = ((($this)) + 583|0);
 $192 = ((($this)) + 584|0);
 $193 = ((($this)) + 200|0);
 $194 = ((($this)) + 208|0);
 $195 = ((($this)) + 216|0);
 $196 = ((($this)) + 568|0);
 $197 = ((($this)) + 569|0);
 $198 = ((($this)) + 570|0);
 $199 = ((($this)) + 40|0);
 $200 = ((($this)) + 571|0);
 $201 = ((($this)) + 572|0);
 $202 = ((($this)) + 573|0);
 $203 = ((($this)) + 240|0);
 $204 = ((($this)) + 586|0);
 $205 = ((($this)) + 587|0);
 $206 = ((($this)) + 588|0);
 $207 = ((($this)) + 80|0);
 $208 = ((($this)) + 574|0);
 $209 = ((($this)) + 575|0);
 $210 = ((($this)) + 576|0);
 $211 = ((($this)) + 585|0);
 $212 = ((($this)) + 583|0);
 $213 = ((($this)) + 584|0);
 $214 = ((($this)) + 200|0);
 $215 = ((($this)) + 208|0);
 $216 = ((($this)) + 216|0);
 $217 = ((($this)) + 568|0);
 $218 = ((($this)) + 569|0);
 $219 = ((($this)) + 570|0);
 $220 = ((($this)) + 40|0);
 $221 = ((($this)) + 571|0);
 $222 = ((($this)) + 572|0);
 $223 = ((($this)) + 573|0);
 $224 = ((($this)) + 240|0);
 $225 = ((($this)) + 586|0);
 $226 = ((($this)) + 587|0);
 $227 = ((($this)) + 588|0);
 $228 = ((($this)) + 80|0);
 $229 = ((($this)) + 574|0);
 $230 = ((($this)) + 575|0);
 $231 = ((($this)) + 576|0);
 $232 = ((($this)) + 585|0);
 $233 = ((($this)) + 583|0);
 $234 = ((($this)) + 584|0);
 $235 = ((($this)) + 200|0);
 $236 = ((($this)) + 208|0);
 $237 = ((($this)) + 216|0);
 $238 = ((($this)) + 568|0);
 $239 = ((($this)) + 569|0);
 $240 = ((($this)) + 570|0);
 $241 = ((($this)) + 40|0);
 $242 = ((($this)) + 571|0);
 $243 = ((($this)) + 572|0);
 $244 = ((($this)) + 573|0);
 $245 = ((($this)) + 240|0);
 $246 = ((($this)) + 586|0);
 $247 = ((($this)) + 587|0);
 $248 = ((($this)) + 588|0);
 $249 = ((($this)) + 80|0);
 $250 = ((($this)) + 574|0);
 $251 = ((($this)) + 575|0);
 $252 = ((($this)) + 576|0);
 $253 = ((($this)) + 585|0);
 $254 = ((($x488)) + 8|0);
 $255 = ((($x489)) + 8|0);
 $256 = ((($this)) + 583|0);
 $257 = ((($this)) + 584|0);
 $258 = ((($this)) + 200|0);
 $259 = ((($this)) + 208|0);
 $260 = ((($this)) + 216|0);
 $261 = ((($this)) + 568|0);
 $262 = ((($this)) + 569|0);
 $263 = ((($this)) + 570|0);
 $264 = ((($this)) + 40|0);
 $265 = ((($this)) + 571|0);
 $266 = ((($this)) + 572|0);
 $267 = ((($this)) + 573|0);
 $268 = ((($this)) + 240|0);
 $269 = ((($this)) + 586|0);
 $270 = ((($this)) + 587|0);
 $271 = ((($this)) + 588|0);
 $272 = ((($this)) + 80|0);
 $273 = ((($this)) + 574|0);
 $274 = ((($this)) + 575|0);
 $275 = ((($this)) + 576|0);
 $276 = ((($this)) + 585|0);
 $277 = ((($x495)) + 8|0);
 $278 = ((($x496)) + 8|0);
 $279 = ((($x497)) + 8|0);
 $280 = ((($this)) + 583|0);
 $281 = ((($this)) + 584|0);
 $282 = ((($this)) + 200|0);
 $283 = ((($this)) + 208|0);
 $284 = ((($this)) + 216|0);
 $285 = ((($this)) + 568|0);
 $286 = ((($this)) + 569|0);
 $287 = ((($this)) + 570|0);
 $288 = ((($this)) + 40|0);
 $289 = ((($this)) + 571|0);
 $290 = ((($this)) + 572|0);
 $291 = ((($this)) + 573|0);
 $292 = ((($this)) + 240|0);
 $293 = ((($this)) + 586|0);
 $294 = ((($this)) + 587|0);
 $295 = ((($this)) + 588|0);
 $296 = ((($this)) + 80|0);
 $297 = ((($this)) + 574|0);
 $298 = ((($this)) + 575|0);
 $299 = ((($this)) + 576|0);
 $300 = ((($this)) + 585|0);
 $301 = ((($x510)) + 8|0);
 $302 = ((($x511)) + 8|0);
 $303 = ((($this)) + 583|0);
 $304 = ((($this)) + 584|0);
 $305 = ((($this)) + 200|0);
 $306 = ((($this)) + 208|0);
 $307 = ((($this)) + 216|0);
 $308 = ((($this)) + 568|0);
 $309 = ((($this)) + 569|0);
 $310 = ((($this)) + 570|0);
 $311 = ((($this)) + 40|0);
 $312 = ((($this)) + 571|0);
 $313 = ((($this)) + 572|0);
 $314 = ((($this)) + 573|0);
 $315 = ((($this)) + 240|0);
 $316 = ((($this)) + 586|0);
 $317 = ((($this)) + 587|0);
 $318 = ((($this)) + 588|0);
 $319 = ((($this)) + 80|0);
 $320 = ((($this)) + 574|0);
 $321 = ((($this)) + 575|0);
 $322 = ((($this)) + 576|0);
 $323 = ((($this)) + 585|0);
 $324 = ((($x523)) + 8|0);
 $325 = ((($x524)) + 8|0);
 $326 = ((($this)) + 583|0);
 $327 = ((($this)) + 584|0);
 $328 = ((($this)) + 200|0);
 $329 = ((($this)) + 208|0);
 $330 = ((($this)) + 216|0);
 $331 = ((($this)) + 568|0);
 $332 = ((($this)) + 569|0);
 $333 = ((($this)) + 570|0);
 $334 = ((($this)) + 40|0);
 $335 = ((($this)) + 571|0);
 $336 = ((($this)) + 572|0);
 $337 = ((($this)) + 573|0);
 $338 = ((($this)) + 240|0);
 $339 = ((($this)) + 586|0);
 $340 = ((($this)) + 587|0);
 $341 = ((($this)) + 588|0);
 $342 = ((($this)) + 80|0);
 $343 = ((($this)) + 574|0);
 $344 = ((($this)) + 575|0);
 $345 = ((($this)) + 576|0);
 $346 = ((($this)) + 579|0);
 $347 = ((($x536)) + 8|0);
 $348 = ((($x537)) + 8|0);
 $349 = ((($this)) + 577|0);
 $350 = ((($this)) + 578|0);
 $351 = ((($this)) + 120|0);
 $352 = ((($this)) + 128|0);
 $353 = ((($this)) + 136|0);
 $354 = ((($this)) + 585|0);
 $355 = ((($x651)) + 8|0);
 $356 = ((($x652)) + 8|0);
 $357 = ((($this)) + 583|0);
 $358 = ((($this)) + 584|0);
 $359 = ((($this)) + 200|0);
 $360 = ((($this)) + 208|0);
 $361 = ((($this)) + 216|0);
 $362 = ((($this)) + 568|0);
 $363 = ((($this)) + 569|0);
 $364 = ((($this)) + 570|0);
 $365 = ((($this)) + 40|0);
 $366 = ((($this)) + 571|0);
 $367 = ((($this)) + 572|0);
 $368 = ((($this)) + 573|0);
 $369 = ((($this)) + 240|0);
 $370 = ((($this)) + 586|0);
 $371 = ((($this)) + 587|0);
 $372 = ((($this)) + 588|0);
 $373 = ((($this)) + 80|0);
 $374 = ((($this)) + 574|0);
 $375 = ((($this)) + 575|0);
 $376 = ((($this)) + 576|0);
 $377 = ((($this)) + 585|0);
 $378 = ((($this)) + 583|0);
 $379 = ((($this)) + 584|0);
 $380 = ((($this)) + 200|0);
 $381 = ((($this)) + 208|0);
 $382 = ((($this)) + 216|0);
 $383 = ((($this)) + 568|0);
 $384 = ((($this)) + 569|0);
 $385 = ((($this)) + 570|0);
 $386 = ((($this)) + 40|0);
 $387 = ((($this)) + 571|0);
 $388 = ((($this)) + 572|0);
 $389 = ((($this)) + 573|0);
 $390 = ((($this)) + 240|0);
 $391 = ((($this)) + 586|0);
 $392 = ((($this)) + 587|0);
 $393 = ((($this)) + 588|0);
 $394 = ((($this)) + 80|0);
 $395 = ((($this)) + 574|0);
 $396 = ((($this)) + 575|0);
 $397 = ((($this)) + 576|0);
 $398 = ((($this)) + 585|0);
 $399 = ((($this)) + 583|0);
 $400 = ((($this)) + 584|0);
 $401 = ((($this)) + 200|0);
 $402 = ((($this)) + 208|0);
 $403 = ((($this)) + 216|0);
 $404 = ((($this)) + 568|0);
 $405 = ((($this)) + 569|0);
 $406 = ((($this)) + 570|0);
 $407 = ((($this)) + 40|0);
 $408 = ((($this)) + 571|0);
 $409 = ((($this)) + 572|0);
 $410 = ((($this)) + 573|0);
 $411 = ((($this)) + 240|0);
 $412 = ((($this)) + 586|0);
 $413 = ((($this)) + 587|0);
 $414 = ((($this)) + 588|0);
 $415 = ((($this)) + 80|0);
 $416 = ((($this)) + 574|0);
 $417 = ((($this)) + 575|0);
 $418 = ((($this)) + 576|0);
 $419 = ((($this)) + 585|0);
 $420 = ((($this)) + 583|0);
 $421 = ((($this)) + 584|0);
 $422 = ((($this)) + 200|0);
 $423 = ((($this)) + 208|0);
 $424 = ((($this)) + 216|0);
 $425 = ((($this)) + 568|0);
 $426 = ((($this)) + 569|0);
 $427 = ((($this)) + 570|0);
 $428 = ((($this)) + 40|0);
 $429 = ((($this)) + 571|0);
 $430 = ((($this)) + 572|0);
 $431 = ((($this)) + 573|0);
 $432 = ((($this)) + 240|0);
 $433 = ((($this)) + 586|0);
 $434 = ((($this)) + 587|0);
 $435 = ((($this)) + 588|0);
 $436 = ((($this)) + 80|0);
 $437 = ((($this)) + 574|0);
 $438 = ((($this)) + 575|0);
 $439 = ((($this)) + 576|0);
 $440 = ((($this)) + 585|0);
 $441 = ((($this)) + 583|0);
 $442 = ((($this)) + 584|0);
 $443 = ((($this)) + 200|0);
 $444 = ((($this)) + 208|0);
 $445 = ((($this)) + 216|0);
 $446 = ((($this)) + 568|0);
 $447 = ((($this)) + 569|0);
 $448 = ((($this)) + 570|0);
 $449 = ((($this)) + 40|0);
 $450 = ((($this)) + 571|0);
 $451 = ((($this)) + 572|0);
 $452 = ((($this)) + 573|0);
 $453 = ((($this)) + 240|0);
 $454 = ((($this)) + 586|0);
 $455 = ((($this)) + 587|0);
 $456 = ((($this)) + 588|0);
 $457 = ((($this)) + 80|0);
 $458 = ((($this)) + 574|0);
 $459 = ((($this)) + 575|0);
 $460 = ((($this)) + 576|0);
 $461 = ((($this)) + 585|0);
 $462 = ((($this)) + 583|0);
 $463 = ((($this)) + 584|0);
 $464 = ((($this)) + 200|0);
 $465 = ((($this)) + 208|0);
 $466 = ((($this)) + 216|0);
 $467 = ((($this)) + 568|0);
 $468 = ((($this)) + 569|0);
 $469 = ((($this)) + 570|0);
 $470 = ((($this)) + 40|0);
 $471 = ((($this)) + 571|0);
 $472 = ((($this)) + 572|0);
 $473 = ((($this)) + 573|0);
 $474 = ((($this)) + 240|0);
 $475 = ((($this)) + 586|0);
 $476 = ((($this)) + 587|0);
 $477 = ((($this)) + 588|0);
 $478 = ((($this)) + 80|0);
 $479 = ((($this)) + 574|0);
 $480 = ((($this)) + 575|0);
 $481 = ((($this)) + 576|0);
 $482 = ((($this)) + 585|0);
 $483 = ((($this)) + 583|0);
 $484 = ((($this)) + 584|0);
 $485 = ((($this)) + 200|0);
 $486 = ((($this)) + 208|0);
 $487 = ((($this)) + 216|0);
 $488 = ((($this)) + 568|0);
 $489 = ((($this)) + 569|0);
 $490 = ((($this)) + 570|0);
 $491 = ((($this)) + 40|0);
 $492 = ((($this)) + 571|0);
 $493 = ((($this)) + 572|0);
 $494 = ((($this)) + 573|0);
 $495 = ((($this)) + 240|0);
 $496 = ((($this)) + 586|0);
 $497 = ((($this)) + 587|0);
 $498 = ((($this)) + 588|0);
 $499 = ((($this)) + 80|0);
 $500 = ((($this)) + 574|0);
 $501 = ((($this)) + 575|0);
 $502 = ((($this)) + 576|0);
 $503 = ((($this)) + 585|0);
 $504 = ((($x715)) + 8|0);
 $505 = ((($x716)) + 8|0);
 $506 = ((($this)) + 583|0);
 $507 = ((($this)) + 584|0);
 $508 = ((($this)) + 200|0);
 $509 = ((($this)) + 208|0);
 $510 = ((($this)) + 216|0);
 $511 = ((($this)) + 568|0);
 $512 = ((($this)) + 569|0);
 $513 = ((($this)) + 570|0);
 $514 = ((($this)) + 40|0);
 $515 = ((($this)) + 571|0);
 $516 = ((($this)) + 572|0);
 $517 = ((($this)) + 573|0);
 $518 = ((($this)) + 240|0);
 $519 = ((($this)) + 586|0);
 $520 = ((($this)) + 587|0);
 $521 = ((($this)) + 588|0);
 $522 = ((($this)) + 80|0);
 $523 = ((($this)) + 574|0);
 $524 = ((($this)) + 575|0);
 $525 = ((($this)) + 576|0);
 $526 = ((($this)) + 585|0);
 $527 = ((($x722)) + 8|0);
 $528 = ((($x723)) + 8|0);
 $529 = ((($x724)) + 8|0);
 $530 = ((($this)) + 583|0);
 $531 = ((($this)) + 584|0);
 $532 = ((($this)) + 200|0);
 $533 = ((($this)) + 208|0);
 $534 = ((($this)) + 216|0);
 $535 = ((($this)) + 568|0);
 $536 = ((($this)) + 569|0);
 $537 = ((($this)) + 570|0);
 $538 = ((($this)) + 40|0);
 $539 = ((($this)) + 571|0);
 $540 = ((($this)) + 572|0);
 $541 = ((($this)) + 573|0);
 $542 = ((($this)) + 240|0);
 $543 = ((($this)) + 586|0);
 $544 = ((($this)) + 587|0);
 $545 = ((($this)) + 588|0);
 $546 = ((($this)) + 80|0);
 $547 = ((($this)) + 574|0);
 $548 = ((($this)) + 575|0);
 $549 = ((($this)) + 576|0);
 $550 = ((($this)) + 585|0);
 $551 = ((($x737)) + 8|0);
 $552 = ((($x738)) + 8|0);
 $553 = ((($this)) + 583|0);
 $554 = ((($this)) + 584|0);
 $555 = ((($this)) + 200|0);
 $556 = ((($this)) + 208|0);
 $557 = ((($this)) + 216|0);
 $558 = ((($this)) + 568|0);
 $559 = ((($this)) + 569|0);
 $560 = ((($this)) + 570|0);
 $561 = ((($this)) + 40|0);
 $562 = ((($this)) + 571|0);
 $563 = ((($this)) + 572|0);
 $564 = ((($this)) + 573|0);
 $565 = ((($this)) + 240|0);
 $566 = ((($this)) + 586|0);
 $567 = ((($this)) + 587|0);
 $568 = ((($this)) + 588|0);
 $569 = ((($this)) + 80|0);
 $570 = ((($this)) + 574|0);
 $571 = ((($this)) + 575|0);
 $572 = ((($this)) + 576|0);
 $573 = ((($this)) + 585|0);
 $574 = ((($x750)) + 8|0);
 $575 = ((($x751)) + 8|0);
 $576 = ((($this)) + 583|0);
 $577 = ((($this)) + 584|0);
 $578 = ((($this)) + 200|0);
 $579 = ((($this)) + 208|0);
 $580 = ((($this)) + 216|0);
 $581 = ((($this)) + 568|0);
 $582 = ((($this)) + 569|0);
 $583 = ((($this)) + 570|0);
 $584 = ((($this)) + 40|0);
 $585 = ((($this)) + 571|0);
 $586 = ((($this)) + 572|0);
 $587 = ((($this)) + 573|0);
 $588 = ((($this)) + 240|0);
 $589 = ((($this)) + 586|0);
 $590 = ((($this)) + 587|0);
 $591 = ((($this)) + 588|0);
 $592 = ((($this)) + 80|0);
 $593 = ((($this)) + 574|0);
 $594 = ((($this)) + 575|0);
 $595 = ((($this)) + 576|0);
 $596 = +HEAPF64[$0>>3];
 $597 = $596 * 0.70710678118654802;
 $598 = +HEAPF64[$1>>3];
 $599 = +HEAPF64[$2>>3];
 $600 = $598 * $599;
 $601 = $599 * 0.70710678118654802;
 $602 = +HEAPF64[$3>>3];
 $603 = +HEAPF64[$4>>3];
 $604 = $602 * $603;
 $605 = $598 * $603;
 $606 = +HEAPF64[$5>>3];
 $607 = +HEAPF64[$6>>3];
 $608 = $602 * $607;
 $609 = $598 * $607;
 $610 = $601 * $603;
 $611 = $609 * 0.70710678118654802;
 $612 = $602 * $601;
 $613 = $605 * 0.70710678118654802;
 $614 = $601 * $607;
 $615 = -$606;
 $616 = $597 * $604;
 $617 = -$612;
 $618 = $597 - $612;
 $619 = $597 * $608;
 $620 = $617 - $597;
 $621 = $596 * $609;
 $622 = $604 - $621;
 $623 = +HEAPF64[$7>>3];
 $624 = $620 * $623;
 $625 = $596 * $605;
 $626 = -$608;
 $627 = $626 - $625;
 $628 = $613 + $619;
 $629 = -$611;
 $630 = $610 - $611;
 $631 = $616 + $630;
 $632 = $629 - $610;
 $633 = $616 + $632;
 $634 = $628 - $614;
 $635 = $614 + $628;
 $636 = $623 * $634;
 $637 = $618 * $623;
 $638 = $606 * $620;
 $639 = $638 + $637;
 $640 = $618 * $615;
 $641 = $640 + $624;
 $642 = $623 * $631;
 $643 = $606 * $633;
 $644 = $642 + $643;
 $645 = $623 * $633;
 $646 = $631 * $615;
 $647 = $645 + $646;
 $648 = $623 * $635;
 $649 = $606 * $634;
 $650 = $648 + $649;
 $651 = $635 * $615;
 $652 = $636 + $651;
 $653 = +HEAPF64[$8>>3];
 $654 = $653 * $627;
 $655 = +HEAPF64[$9>>3];
 $656 = $655 * $647;
 $657 = $654 + $656;
 $658 = +HEAPF64[$10>>3];
 $659 = $658 * $644;
 $660 = $659 + $657;
 HEAPF64[$11>>3] = $660;
 $661 = +HEAPF64[$12>>3];
 $662 = $661 * $644;
 $663 = +HEAPF64[$13>>3];
 $664 = $627 * $663;
 $665 = $662 + $664;
 $666 = +HEAPF64[$14>>3];
 $667 = $647 * $666;
 $668 = $665 + $667;
 HEAPF64[$15>>3] = $668;
 $669 = +HEAPF64[$16>>3];
 $670 = $627 * $669;
 $671 = +HEAPF64[$17>>3];
 $672 = $644 * $671;
 $673 = $670 + $672;
 $674 = +HEAPF64[$18>>3];
 $675 = $647 * $674;
 $676 = $673 + $675;
 HEAPF64[$19>>3] = $676;
 $677 = +HEAPF64[$8>>3];
 $678 = $600 * $677;
 $679 = +HEAPF64[$9>>3];
 $680 = $641 * $679;
 $681 = $678 + $680;
 $682 = +HEAPF64[$10>>3];
 $683 = $639 * $682;
 $684 = $681 + $683;
 HEAPF64[$20>>3] = $684;
 $685 = +HEAPF64[$13>>3];
 $686 = $600 * $685;
 $687 = +HEAPF64[$12>>3];
 $688 = $639 * $687;
 $689 = $686 + $688;
 $690 = +HEAPF64[$14>>3];
 $691 = $641 * $690;
 $692 = $689 + $691;
 HEAPF64[$21>>3] = $692;
 $693 = +HEAPF64[$17>>3];
 $694 = $639 * $693;
 $695 = +HEAPF64[$18>>3];
 $696 = $641 * $695;
 $697 = $694 + $696;
 $698 = +HEAPF64[$16>>3];
 $699 = $600 * $698;
 $700 = $697 + $699;
 HEAPF64[$22>>3] = $700;
 $701 = +HEAPF64[$8>>3];
 $702 = $622 * $701;
 $703 = +HEAPF64[$9>>3];
 $704 = $652 * $703;
 $705 = $702 + $704;
 $706 = +HEAPF64[$10>>3];
 $707 = $650 * $706;
 $708 = $705 + $707;
 HEAPF64[$23>>3] = $708;
 $709 = +HEAPF64[$12>>3];
 $710 = $650 * $709;
 $711 = +HEAPF64[$13>>3];
 $712 = $622 * $711;
 $713 = $710 + $712;
 $714 = +HEAPF64[$14>>3];
 $715 = $652 * $714;
 $716 = $713 + $715;
 HEAPF64[$24>>3] = $716;
 $717 = +HEAPF64[$16>>3];
 $718 = $622 * $717;
 $719 = +HEAPF64[$17>>3];
 $720 = $650 * $719;
 $721 = $718 + $720;
 $722 = +HEAPF64[$18>>3];
 $723 = $652 * $722;
 $724 = $721 + $723;
 HEAPF64[$25>>3] = $724;
 HEAP16[$j9valid>>1] = 0;
 HEAP8[$26>>0] = 2;
 $725 = +HEAPF64[$25>>3];
 HEAPF64[$cj9array>>3] = $725;
 $726 = !($725 >= -1.0000020000000001);
 $727 = !($725 <= 1.0000020000000001);
 $or$cond = $726 | $727;
 if ($or$cond) {
  $740 = (__Z13__DOUBLE_BITSd($725)|0);
  $741 = tempRet0;
  $742 = $741 & 2147483647;
  $743 = ($742>>>0)>(2146435072);
  $744 = ($740>>>0)>(0);
  $745 = ($742|0)==(2146435072);
  $746 = $745 & $744;
  $747 = $743 | $746;
  if ($747) {
   HEAP8[$j9valid>>0] = 1;
   HEAPF64[$cj9array>>3] = 1.0;
   HEAPF64[$sj9array>>3] = 0.0;
   HEAPF64[$j9array>>3] = 0.0;
   $ij9$0369 = 0;
  } else {
   $ij9$0369 = 0;
  }
 } else {
  $728 = ((($sj9array)) + 8|0);
  $729 = ((($j9array)) + 8|0);
  $730 = ((($cj9array)) + 8|0);
  $731 = ((($j9valid)) + 1|0);
  HEAP8[$731>>0] = 1;
  HEAP8[$j9valid>>0] = 1;
  $732 = +HEAPF64[$cj9array>>3];
  $733 = (+__Z6IKacosd($732));
  HEAPF64[$j9array>>3] = $733;
  $734 = (+__Z5IKsind($733));
  HEAPF64[$sj9array>>3] = $734;
  $735 = +HEAPF64[$cj9array>>3];
  HEAPF64[$730>>3] = $735;
  $736 = +HEAPF64[$j9array>>3];
  $737 = -$736;
  HEAPF64[$729>>3] = $737;
  $738 = +HEAPF64[$sj9array>>3];
  $739 = -$738;
  HEAPF64[$728>>3] = $739;
  $ij9$0369 = 0;
 }
 while(1) {
  $748 = (($j9valid) + ($ij9$0369)|0);
  $749 = HEAP8[$748>>0]|0;
  $750 = ($749<<24>>24)==(0);
  L7: do {
   if (!($750)) {
    $751 = $ij9$0369&255;
    HEAP8[$27>>0] = $751;
    HEAP8[$28>>0] = -1;
    $iij9$0255 = (($ij9$0369) + 1)|0;
    $752 = ($iij9$0255|0)<(2);
    if ($752) {
     $753 = (($sj9array) + ($ij9$0369<<3)|0);
     $754 = (($j9valid) + ($iij9$0255)|0);
     $755 = HEAP8[$754>>0]|0;
     $756 = ($755<<24>>24)==(0);
     if (!($756)) {
      $757 = (($cj9array) + ($ij9$0369<<3)|0);
      $758 = +HEAPF64[$757>>3];
      $759 = (($cj9array) + ($iij9$0255<<3)|0);
      $760 = +HEAPF64[$759>>3];
      $761 = $758 - $760;
      $762 = (+__Z5IKabsd($761));
      $763 = $762 < 9.9999999999999995E-7;
      if ($763) {
       $764 = +HEAPF64[$753>>3];
       $765 = (($sj9array) + ($iij9$0255<<3)|0);
       $766 = +HEAPF64[$765>>3];
       $767 = $764 - $766;
       $768 = (+__Z5IKabsd($767));
       $769 = $768 < 9.9999999999999995E-7;
       if ($769) {
        HEAP8[$754>>0] = 0;
        $770 = $iij9$0255&255;
        HEAP8[$28>>0] = $770;
       }
      }
     }
    }
    $771 = (($j9array) + ($ij9$0369<<3)|0);
    $772 = +HEAPF64[$771>>3];
    HEAPF64[$29>>3] = $772;
    $773 = (($cj9array) + ($ij9$0369<<3)|0);
    $774 = +HEAPF64[$773>>3];
    HEAPF64[$30>>3] = $774;
    $775 = (($sj9array) + ($ij9$0369<<3)|0);
    $776 = +HEAPF64[$775>>3];
    HEAPF64[$31>>3] = $776;
    $777 = +HEAPF64[$0>>3];
    $778 = $777 * 0.70710678118654802;
    $779 = +HEAPF64[$1>>3];
    $780 = +HEAPF64[$2>>3];
    $781 = $779 * $780;
    $782 = $780 * 0.70710678118654802;
    $783 = +HEAPF64[$3>>3];
    $784 = +HEAPF64[$4>>3];
    $785 = $783 * $784;
    $786 = $779 * $784;
    $787 = +HEAPF64[$5>>3];
    $788 = +HEAPF64[$6>>3];
    $789 = $783 * $788;
    $790 = $779 * $788;
    $791 = $782 * $784;
    $792 = $790 * 0.70710678118654802;
    $793 = $783 * $782;
    $794 = $786 * 0.70710678118654802;
    $795 = $782 * $788;
    $796 = -$787;
    $797 = $778 * $785;
    $798 = $778 - $793;
    $799 = $778 * $789;
    $800 = -$778;
    $801 = $800 - $793;
    $802 = $777 * $790;
    $803 = $785 - $802;
    $804 = +HEAPF64[$7>>3];
    $805 = $801 * $804;
    $806 = $794 + $799;
    $807 = $791 - $792;
    $808 = $797 + $807;
    $809 = $797 - $792;
    $810 = $809 - $791;
    $811 = $806 - $795;
    $812 = $795 + $806;
    $813 = $804 * $811;
    $814 = $787 * $801;
    $815 = $798 * $804;
    $816 = $814 + $815;
    $817 = $798 * $796;
    $818 = $817 + $805;
    $819 = $804 * $808;
    $820 = $787 * $810;
    $821 = $819 + $820;
    $822 = $804 * $810;
    $823 = $808 * $796;
    $824 = $822 + $823;
    $825 = $804 * $812;
    $826 = $787 * $811;
    $827 = $825 + $826;
    $828 = $812 * $796;
    $829 = $828 + $813;
    $830 = +HEAPF64[$9>>3];
    $831 = $830 * $824;
    $832 = +HEAPF64[$10>>3];
    $833 = $832 * $821;
    $834 = $831 + $833;
    $835 = +HEAPF64[$8>>3];
    $836 = $627 * $835;
    $837 = $836 + $834;
    HEAPF64[$11>>3] = $837;
    $838 = +HEAPF64[$12>>3];
    $839 = $838 * $821;
    $840 = +HEAPF64[$14>>3];
    $841 = $840 * $824;
    $842 = $839 + $841;
    $843 = +HEAPF64[$13>>3];
    $844 = $627 * $843;
    $845 = $842 + $844;
    HEAPF64[$15>>3] = $845;
    $846 = +HEAPF64[$16>>3];
    $847 = $627 * $846;
    $848 = +HEAPF64[$17>>3];
    $849 = $821 * $848;
    $850 = $847 + $849;
    $851 = +HEAPF64[$18>>3];
    $852 = $824 * $851;
    $853 = $850 + $852;
    HEAPF64[$19>>3] = $853;
    $854 = +HEAPF64[$8>>3];
    $855 = $781 * $854;
    $856 = +HEAPF64[$9>>3];
    $857 = $818 * $856;
    $858 = $855 + $857;
    $859 = +HEAPF64[$10>>3];
    $860 = $816 * $859;
    $861 = $858 + $860;
    HEAPF64[$20>>3] = $861;
    $862 = +HEAPF64[$14>>3];
    $863 = $818 * $862;
    $864 = +HEAPF64[$12>>3];
    $865 = $816 * $864;
    $866 = $863 + $865;
    $867 = +HEAPF64[$13>>3];
    $868 = $781 * $867;
    $869 = $866 + $868;
    HEAPF64[$21>>3] = $869;
    $870 = +HEAPF64[$18>>3];
    $871 = $818 * $870;
    $872 = +HEAPF64[$17>>3];
    $873 = $816 * $872;
    $874 = $871 + $873;
    $875 = +HEAPF64[$16>>3];
    $876 = $781 * $875;
    $877 = $874 + $876;
    HEAPF64[$22>>3] = $877;
    $878 = +HEAPF64[$9>>3];
    $879 = $829 * $878;
    $880 = +HEAPF64[$10>>3];
    $881 = $827 * $880;
    $882 = $879 + $881;
    $883 = +HEAPF64[$8>>3];
    $884 = $803 * $883;
    $885 = $882 + $884;
    HEAPF64[$23>>3] = $885;
    $886 = +HEAPF64[$12>>3];
    $887 = $827 * $886;
    $888 = +HEAPF64[$14>>3];
    $889 = $829 * $888;
    $890 = $887 + $889;
    $891 = +HEAPF64[$13>>3];
    $892 = $803 * $891;
    $893 = $890 + $892;
    HEAPF64[$24>>3] = $893;
    $894 = +HEAPF64[$17>>3];
    $895 = $827 * $894;
    $896 = +HEAPF64[$18>>3];
    $897 = $829 * $896;
    $898 = $895 + $897;
    $899 = +HEAPF64[$16>>3];
    $900 = $803 * $899;
    $901 = $898 + $900;
    HEAPF64[$25>>3] = $901;
    $902 = +HEAPF64[$31>>3];
    $903 = (+__Z5IKabsd($902));
    $904 = $903 < 9.9999999999999995E-7;
    if (!($904)) {
     $905 = (+__Z6IKsignd($902));
     $906 = (+__Z5IKabsd($905));
     $907 = $906 < 9.9999999999999995E-7;
     if (!($907)) {
      HEAP8[$346>>0] = 1;
      $4602 = +HEAPF64[$22>>3];
      $4603 = +HEAPF64[$19>>3];
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x536,$4602,$4603,1.9999999999999999E-6);
      $4604 = HEAP8[$347>>0]|0;
      $4605 = ($4604<<24>>24)==(0);
      if ($4605) {
       break;
      }
      $4606 = +HEAPF64[$31>>3];
      $4607 = (+__Z6IKsignd($4606));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x537,$4607,-1);
      $4608 = HEAP8[$348>>0]|0;
      $4609 = ($4608<<24>>24)==(0);
      if ($4609) {
       break;
      }
      $4610 = +HEAPF64[$x536>>3];
      $4611 = $4610 + -1.5707963267949001;
      $4612 = +HEAPF64[$x537>>3];
      $4613 = $4612 * 1.5707963267949001;
      $4614 = $4611 + $4613;
      $4615 = (+__Z5IKsind($4614));
      $4616 = (+__Z5IKcosd($4614));
      $4617 = $4614 > 3.14159265358979;
      if ($4617) {
       $4618 = $4614 + -6.2831853071795898;
       $4621 = $4618;
      } else {
       $4619 = $4614 < -3.14159265358979;
       if ($4619) {
        $4620 = $4614 + 6.2831853071795898;
        $4621 = $4620;
       } else {
        $4621 = $4614;
       }
      }
      HEAP8[$349>>0] = 0;
      HEAP8[$350>>0] = -1;
      HEAPF64[$351>>3] = $4621;
      HEAPF64[$352>>3] = $4616;
      HEAPF64[$353>>3] = $4615;
      $4622 = +HEAPF64[$351>>3];
      $4623 = (+__Z5IKcosd($4622));
      $4624 = (+__Z5IKsind($4622));
      $4625 = +HEAPF64[$30>>3];
      $4626 = +HEAPF64[$31>>3];
      $4627 = +HEAPF64[$22>>3];
      $4628 = $4624 * $4627;
      $4629 = +HEAPF64[$19>>3];
      $4630 = $4623 * $4629;
      $4631 = $4623 * $4626;
      $4632 = $4629 - $4631;
      $4633 = $4623 * $4627;
      $4634 = $4624 * $4629;
      $4635 = $4633 - $4634;
      $4636 = -$4626;
      $4637 = $4630 - $4626;
      $4638 = $4628 + $4637;
      $4639 = +HEAPF64[$25>>3];
      $4640 = -$4639;
      $4641 = $4626 * $4640;
      $4642 = $4625 * $4630;
      $4643 = $4641 + $4642;
      $4644 = $4625 * $4628;
      $4645 = $4644 + $4643;
      $4646 = +HEAPF64[$23>>3];
      $4647 = $4625 * $4646;
      $4648 = +HEAPF64[$20>>3];
      $4649 = $4624 * $4648;
      $4650 = $4626 * $4649;
      $4651 = -$4650;
      $4652 = $4651 - $4647;
      $4653 = +HEAPF64[$11>>3];
      $4654 = $4623 * $4653;
      $4655 = $4626 * $4654;
      $4656 = $4652 - $4655;
      $4657 = +HEAPF64[$15>>3];
      $4658 = $4623 * $4657;
      $4659 = $4626 * $4658;
      $4660 = +HEAPF64[$24>>3];
      $4661 = $4625 * $4660;
      $4662 = -$4661;
      $4663 = $4662 - $4659;
      $4664 = +HEAPF64[$21>>3];
      $4665 = $4624 * $4664;
      $4666 = $4626 * $4665;
      $4667 = $4663 - $4666;
      $4668 = $4628 * $4636;
      $4669 = $4668 + 1.0;
      $4670 = $4630 * $4636;
      $4671 = $4669 + $4670;
      $4672 = $4625 * $4640;
      $4673 = $4672 + $4671;
      $4674 = (+__Z5IKabsd($4632));
      $4675 = $4674 > 5.0000000000000004E-6;
      if ($4675) {
       break;
      }
      $4676 = $4624 * $4626;
      $4677 = $4627 - $4676;
      $4678 = (+__Z5IKabsd($4677));
      $4679 = $4678 > 5.0000000000000004E-6;
      if ($4679) {
       break;
      }
      $4680 = (+__Z5IKabsd($4635));
      $4681 = $4680 > 5.0000000000000004E-6;
      if ($4681) {
       break;
      }
      $4682 = (+__Z5IKabsd($4638));
      $4683 = $4682 > 5.0000000000000004E-6;
      if ($4683) {
       break;
      }
      $4684 = (+__Z5IKabsd($4645));
      $4685 = $4684 > 5.0000000000000004E-6;
      if ($4685) {
       break;
      }
      $4686 = (+__Z5IKabsd($4656));
      $4687 = $4686 > 5.0000000000000004E-6;
      if ($4687) {
       break;
      }
      $4688 = (+__Z5IKabsd($4667));
      $4689 = $4688 > 5.0000000000000004E-6;
      if ($4689) {
       break;
      }
      $4690 = (+__Z5IKabsd($4673));
      $4691 = $4690 > 5.0000000000000004E-6;
      if ($4691) {
       break;
      }
      $4692 = +HEAPF64[$0>>3];
      $4693 = $4692 * 0.70710678118654802;
      $4694 = +HEAPF64[$1>>3];
      $4695 = +HEAPF64[$2>>3];
      $4696 = $4694 * $4695;
      $4697 = $4695 * 0.70710678118654802;
      $4698 = +HEAPF64[$3>>3];
      $4699 = +HEAPF64[$4>>3];
      $4700 = $4698 * $4699;
      $4701 = $4694 * $4699;
      $4702 = +HEAPF64[$5>>3];
      $4703 = +HEAPF64[$6>>3];
      $4704 = $4698 * $4703;
      $4705 = $4694 * $4703;
      $4706 = $4697 * $4699;
      $4707 = $4705 * 0.70710678118654802;
      $4708 = $4698 * $4697;
      $4709 = $4701 * 0.70710678118654802;
      $4710 = $4697 * $4703;
      $4711 = -$4702;
      $4712 = $4693 * $4700;
      $4713 = -$4708;
      $4714 = $4693 - $4708;
      $4715 = $4693 * $4704;
      $4716 = $4713 - $4693;
      $4717 = $4692 * $4705;
      $4718 = $4700 - $4717;
      $4719 = +HEAPF64[$7>>3];
      $4720 = $4716 * $4719;
      $4721 = $4709 + $4715;
      $4722 = -$4707;
      $4723 = $4706 - $4707;
      $4724 = $4712 + $4723;
      $4725 = $4722 - $4706;
      $4726 = $4712 + $4725;
      $4727 = $4721 - $4710;
      $4728 = $4710 + $4721;
      $4729 = $4719 * $4727;
      $4730 = $4702 * $4716;
      $4731 = $4714 * $4719;
      $4732 = $4730 + $4731;
      $4733 = $4714 * $4711;
      $4734 = $4733 + $4720;
      $4735 = $4702 * $4726;
      $4736 = $4719 * $4724;
      $4737 = $4735 + $4736;
      $4738 = $4719 * $4726;
      $4739 = $4724 * $4711;
      $4740 = $4738 + $4739;
      $4741 = $4702 * $4727;
      $4742 = $4719 * $4728;
      $4743 = $4741 + $4742;
      $4744 = $4728 * $4711;
      $4745 = $4744 + $4729;
      $4746 = +HEAPF64[$9>>3];
      $4747 = $4746 * $4740;
      $4748 = +HEAPF64[$8>>3];
      $4749 = $627 * $4748;
      $4750 = $4749 + $4747;
      $4751 = +HEAPF64[$10>>3];
      $4752 = $4751 * $4737;
      $4753 = $4752 + $4750;
      HEAPF64[$11>>3] = $4753;
      $4754 = +HEAPF64[$14>>3];
      $4755 = $4754 * $4740;
      $4756 = +HEAPF64[$13>>3];
      $4757 = $627 * $4756;
      $4758 = $4755 + $4757;
      $4759 = +HEAPF64[$12>>3];
      $4760 = $4737 * $4759;
      $4761 = $4758 + $4760;
      HEAPF64[$15>>3] = $4761;
      $4762 = +HEAPF64[$17>>3];
      $4763 = $4737 * $4762;
      $4764 = +HEAPF64[$16>>3];
      $4765 = $627 * $4764;
      $4766 = $4763 + $4765;
      $4767 = +HEAPF64[$18>>3];
      $4768 = $4740 * $4767;
      $4769 = $4766 + $4768;
      HEAPF64[$19>>3] = $4769;
      $4770 = +HEAPF64[$9>>3];
      $4771 = $4734 * $4770;
      $4772 = +HEAPF64[$8>>3];
      $4773 = $4696 * $4772;
      $4774 = $4771 + $4773;
      $4775 = +HEAPF64[$10>>3];
      $4776 = $4732 * $4775;
      $4777 = $4774 + $4776;
      HEAPF64[$20>>3] = $4777;
      $4778 = +HEAPF64[$13>>3];
      $4779 = $4696 * $4778;
      $4780 = +HEAPF64[$14>>3];
      $4781 = $4734 * $4780;
      $4782 = $4779 + $4781;
      $4783 = +HEAPF64[$12>>3];
      $4784 = $4732 * $4783;
      $4785 = $4782 + $4784;
      HEAPF64[$21>>3] = $4785;
      $4786 = +HEAPF64[$17>>3];
      $4787 = $4732 * $4786;
      $4788 = +HEAPF64[$18>>3];
      $4789 = $4734 * $4788;
      $4790 = $4787 + $4789;
      $4791 = +HEAPF64[$16>>3];
      $4792 = $4696 * $4791;
      $4793 = $4790 + $4792;
      HEAPF64[$22>>3] = $4793;
      $4794 = +HEAPF64[$9>>3];
      $4795 = $4745 * $4794;
      $4796 = +HEAPF64[$8>>3];
      $4797 = $4718 * $4796;
      $4798 = $4795 + $4797;
      $4799 = +HEAPF64[$10>>3];
      $4800 = $4743 * $4799;
      $4801 = $4798 + $4800;
      HEAPF64[$23>>3] = $4801;
      $4802 = +HEAPF64[$13>>3];
      $4803 = $4718 * $4802;
      $4804 = +HEAPF64[$14>>3];
      $4805 = $4745 * $4804;
      $4806 = $4803 + $4805;
      $4807 = +HEAPF64[$12>>3];
      $4808 = $4743 * $4807;
      $4809 = $4806 + $4808;
      HEAPF64[$24>>3] = $4809;
      $4810 = +HEAPF64[$17>>3];
      $4811 = $4743 * $4810;
      $4812 = +HEAPF64[$16>>3];
      $4813 = $4718 * $4812;
      $4814 = $4811 + $4813;
      $4815 = +HEAPF64[$18>>3];
      $4816 = $4745 * $4815;
      $4817 = $4814 + $4816;
      HEAPF64[$25>>3] = $4817;
      $4818 = +HEAPF64[$31>>3];
      $4819 = (+__Z5IKabsd($4818));
      $4820 = $4819 < 9.9999999999999995E-7;
      do {
       if (!($4820)) {
        $4821 = (+__Z6IKsignd($4818));
        $4822 = (+__Z5IKabsd($4821));
        $4823 = $4822 < 9.9999999999999995E-7;
        if ($4823) {
         break;
        }
        HEAP8[$573>>0] = 1;
        $7366 = +HEAPF64[$24>>3];
        $7367 = +HEAPF64[$23>>3];
        $7368 = -$7367;
        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x750,$7366,$7368,1.9999999999999999E-6);
        $7369 = HEAP8[$574>>0]|0;
        $7370 = ($7369<<24>>24)==(0);
        if ($7370) {
         break L7;
        }
        $7371 = +HEAPF64[$31>>3];
        $7372 = (+__Z6IKsignd($7371));
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x751,$7372,-1);
        $7373 = HEAP8[$575>>0]|0;
        $7374 = ($7373<<24>>24)==(0);
        if ($7374) {
         break L7;
        }
        $7375 = +HEAPF64[$x750>>3];
        $7376 = $7375 + -1.5707963267949001;
        $7377 = +HEAPF64[$x751>>3];
        $7378 = $7377 * 1.5707963267949001;
        $7379 = $7376 + $7378;
        $7380 = (+__Z5IKsind($7379));
        $7381 = (+__Z5IKcosd($7379));
        $7382 = $7379 > 3.14159265358979;
        do {
         if ($7382) {
          $7383 = $7379 + -6.2831853071795898;
          $7386 = $7383;
         } else {
          $7384 = $7379 < -3.14159265358979;
          if (!($7384)) {
           $7386 = $7379;
           break;
          }
          $7385 = $7379 + 6.2831853071795898;
          $7386 = $7385;
         }
        } while(0);
        HEAP8[$576>>0] = 0;
        HEAP8[$577>>0] = -1;
        HEAPF64[$578>>3] = $7386;
        HEAPF64[$579>>3] = $7381;
        HEAPF64[$580>>3] = $7380;
        $7387 = +HEAPF64[$578>>3];
        $7388 = (+__Z5IKsind($7387));
        $7389 = (+__Z5IKcosd($7387));
        $7390 = +HEAPF64[$30>>3];
        $7391 = +HEAPF64[$353>>3];
        $7392 = $7390 * $7391;
        $7393 = +HEAPF64[$31>>3];
        $7394 = +HEAPF64[$352>>3];
        $7395 = +HEAPF64[$11>>3];
        $7396 = $7394 * $7395;
        $7397 = +HEAPF64[$15>>3];
        $7398 = $7394 * $7397;
        $7399 = $7388 * $7390;
        $7400 = $7389 * $7390;
        $7401 = +HEAPF64[$23>>3];
        $7402 = $7389 * $7393;
        $7403 = $7402 + $7401;
        $7404 = -$7388;
        $7405 = +HEAPF64[$24>>3];
        $7406 = +HEAPF64[$21>>3];
        $7407 = $7391 * $7406;
        $7408 = $7398 + $7407;
        $7409 = $7399 + $7408;
        $7410 = $7391 * $7395;
        $7411 = +HEAPF64[$20>>3];
        $7412 = $7394 * $7411;
        $7413 = $7412 - $7410;
        $7414 = $7413 - $7388;
        $7415 = $7391 * $7397;
        $7416 = -$7389;
        $7417 = $7416 - $7415;
        $7418 = $7394 * $7406;
        $7419 = $7417 + $7418;
        $7420 = $7399 * $7394;
        $7421 = $7389 * $7391;
        $7422 = $7421 + $7420;
        $7423 = $7422 + $7397;
        $7424 = $7391 * $7411;
        $7425 = $7424 - $7400;
        $7426 = $7396 + $7425;
        $7427 = $7400 * $7394;
        $7428 = $7388 * $7391;
        $7429 = $7428 - $7427;
        $7430 = $7395 + $7429;
        $7431 = $7388 * $7392;
        $7432 = $7394 * $7416;
        $7433 = $7431 + $7432;
        $7434 = $7433 + $7406;
        $7435 = $7389 * $7392;
        $7436 = $7394 * $7404;
        $7437 = $7436 - $7435;
        $7438 = $7437 + $7411;
        $7439 = $7390 * $7398;
        $7440 = $7393 * $7405;
        $7441 = $7439 - $7440;
        $7442 = $7392 * $7406;
        $7443 = $7441 + $7442;
        $7444 = $7388 + $7443;
        $7445 = $7390 * $7396;
        $7446 = $7445 - $7389;
        $7447 = $7392 * $7411;
        $7448 = $7446 + $7447;
        $7449 = $7393 * $7401;
        $7450 = $7448 - $7449;
        $7451 = (+__Z5IKabsd($7403));
        $7452 = $7451 > 5.0000000000000004E-6;
        if ($7452) {
         break L7;
        }
        $7453 = $7393 * $7404;
        $7454 = $7453 + $7405;
        $7455 = (+__Z5IKabsd($7454));
        $7456 = $7455 > 5.0000000000000004E-6;
        if ($7456) {
         break L7;
        }
        $7457 = (+__Z5IKabsd($7409));
        $7458 = $7457 > 5.0000000000000004E-6;
        if ($7458) {
         break L7;
        }
        $7459 = (+__Z5IKabsd($7414));
        $7460 = $7459 > 5.0000000000000004E-6;
        if ($7460) {
         break L7;
        }
        $7461 = (+__Z5IKabsd($7419));
        $7462 = $7461 > 5.0000000000000004E-6;
        if ($7462) {
         break L7;
        }
        $7463 = (+__Z5IKabsd($7423));
        $7464 = $7463 > 5.0000000000000004E-6;
        if ($7464) {
         break L7;
        }
        $7465 = (+__Z5IKabsd($7426));
        $7466 = $7465 > 5.0000000000000004E-6;
        if ($7466) {
         break L7;
        }
        $7467 = (+__Z5IKabsd($7430));
        $7468 = $7467 > 5.0000000000000004E-6;
        if ($7468) {
         break L7;
        }
        $7469 = (+__Z5IKabsd($7434));
        $7470 = $7469 > 5.0000000000000004E-6;
        if ($7470) {
         break L7;
        }
        $7471 = (+__Z5IKabsd($7438));
        $7472 = $7471 > 5.0000000000000004E-6;
        if ($7472) {
         break L7;
        }
        $7473 = (+__Z5IKabsd($7444));
        $7474 = $7473 > 5.0000000000000004E-6;
        if ($7474) {
         break L7;
        }
        $7475 = (+__Z5IKabsd($7450));
        $7476 = $7475 > 5.0000000000000004E-6;
        if ($7476) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos282,7);
        $7477 = HEAP32[$vinfos282>>2]|0;
        $7478 = ((($7477)) + 17|0);
        HEAP8[$7478>>0] = 1;
        $7479 = +HEAPF64[$this>>3];
        $7480 = HEAP32[$vinfos282>>2]|0;
        $7481 = ((($7480)) + 8|0);
        HEAPF64[$7481>>3] = $7479;
        $7482 = HEAP8[$581>>0]|0;
        $7483 = HEAP32[$vinfos282>>2]|0;
        $7484 = ((($7483)) + 19|0);
        HEAP8[$7484>>0] = $7482;
        $7485 = HEAP8[$582>>0]|0;
        $7486 = HEAP32[$vinfos282>>2]|0;
        $7487 = ((($7486)) + 20|0);
        HEAP8[$7487>>0] = $7485;
        $7488 = HEAP8[$583>>0]|0;
        $7489 = HEAP32[$vinfos282>>2]|0;
        $7490 = ((($7489)) + 18|0);
        HEAP8[$7490>>0] = $7488;
        $7491 = HEAP32[$vinfos282>>2]|0;
        $7492 = ((($7491)) + 41|0);
        HEAP8[$7492>>0] = 1;
        $7493 = +HEAPF64[$584>>3];
        $7494 = HEAP32[$vinfos282>>2]|0;
        $7495 = ((($7494)) + 32|0);
        HEAPF64[$7495>>3] = $7493;
        $7496 = HEAP8[$585>>0]|0;
        $7497 = HEAP32[$vinfos282>>2]|0;
        $7498 = ((($7497)) + 43|0);
        HEAP8[$7498>>0] = $7496;
        $7499 = HEAP8[$586>>0]|0;
        $7500 = HEAP32[$vinfos282>>2]|0;
        $7501 = ((($7500)) + 44|0);
        HEAP8[$7501>>0] = $7499;
        $7502 = HEAP8[$587>>0]|0;
        $7503 = HEAP32[$vinfos282>>2]|0;
        $7504 = ((($7503)) + 42|0);
        HEAP8[$7504>>0] = $7502;
        $7505 = HEAP32[$vinfos282>>2]|0;
        $7506 = ((($7505)) + 65|0);
        HEAP8[$7506>>0] = 1;
        $7507 = +HEAPF64[$588>>3];
        $7508 = HEAP32[$vinfos282>>2]|0;
        $7509 = ((($7508)) + 56|0);
        HEAPF64[$7509>>3] = $7507;
        $7510 = HEAP8[$589>>0]|0;
        $7511 = HEAP32[$vinfos282>>2]|0;
        $7512 = ((($7511)) + 67|0);
        HEAP8[$7512>>0] = $7510;
        $7513 = HEAP8[$590>>0]|0;
        $7514 = HEAP32[$vinfos282>>2]|0;
        $7515 = ((($7514)) + 68|0);
        HEAP8[$7515>>0] = $7513;
        $7516 = HEAP8[$591>>0]|0;
        $7517 = HEAP32[$vinfos282>>2]|0;
        $7518 = ((($7517)) + 66|0);
        HEAP8[$7518>>0] = $7516;
        $7519 = HEAP32[$vinfos282>>2]|0;
        $7520 = ((($7519)) + 89|0);
        HEAP8[$7520>>0] = 1;
        $7521 = +HEAPF64[$592>>3];
        $7522 = HEAP32[$vinfos282>>2]|0;
        $7523 = ((($7522)) + 80|0);
        HEAPF64[$7523>>3] = $7521;
        $7524 = HEAP8[$593>>0]|0;
        $7525 = HEAP32[$vinfos282>>2]|0;
        $7526 = ((($7525)) + 91|0);
        HEAP8[$7526>>0] = $7524;
        $7527 = HEAP8[$594>>0]|0;
        $7528 = HEAP32[$vinfos282>>2]|0;
        $7529 = ((($7528)) + 92|0);
        HEAP8[$7529>>0] = $7527;
        $7530 = HEAP8[$595>>0]|0;
        $7531 = HEAP32[$vinfos282>>2]|0;
        $7532 = ((($7531)) + 90|0);
        HEAP8[$7532>>0] = $7530;
        $7533 = HEAP32[$vinfos282>>2]|0;
        $7534 = ((($7533)) + 113|0);
        HEAP8[$7534>>0] = 1;
        $7535 = +HEAPF64[$351>>3];
        $7536 = HEAP32[$vinfos282>>2]|0;
        $7537 = ((($7536)) + 104|0);
        HEAPF64[$7537>>3] = $7535;
        $7538 = HEAP8[$349>>0]|0;
        $7539 = HEAP32[$vinfos282>>2]|0;
        $7540 = ((($7539)) + 115|0);
        HEAP8[$7540>>0] = $7538;
        $7541 = HEAP8[$350>>0]|0;
        $7542 = HEAP32[$vinfos282>>2]|0;
        $7543 = ((($7542)) + 116|0);
        HEAP8[$7543>>0] = $7541;
        $7544 = HEAP8[$346>>0]|0;
        $7545 = HEAP32[$vinfos282>>2]|0;
        $7546 = ((($7545)) + 114|0);
        HEAP8[$7546>>0] = $7544;
        $7547 = HEAP32[$vinfos282>>2]|0;
        $7548 = ((($7547)) + 137|0);
        HEAP8[$7548>>0] = 1;
        $7549 = +HEAPF64[$29>>3];
        $7550 = HEAP32[$vinfos282>>2]|0;
        $7551 = ((($7550)) + 128|0);
        HEAPF64[$7551>>3] = $7549;
        $7552 = HEAP8[$27>>0]|0;
        $7553 = HEAP32[$vinfos282>>2]|0;
        $7554 = ((($7553)) + 139|0);
        HEAP8[$7554>>0] = $7552;
        $7555 = HEAP8[$28>>0]|0;
        $7556 = HEAP32[$vinfos282>>2]|0;
        $7557 = ((($7556)) + 140|0);
        HEAP8[$7557>>0] = $7555;
        $7558 = HEAP8[$26>>0]|0;
        $7559 = HEAP32[$vinfos282>>2]|0;
        $7560 = ((($7559)) + 138|0);
        HEAP8[$7560>>0] = $7558;
        $7561 = HEAP32[$vinfos282>>2]|0;
        $7562 = ((($7561)) + 161|0);
        HEAP8[$7562>>0] = 1;
        $7563 = +HEAPF64[$578>>3];
        $7564 = HEAP32[$vinfos282>>2]|0;
        $7565 = ((($7564)) + 152|0);
        HEAPF64[$7565>>3] = $7563;
        $7566 = HEAP8[$576>>0]|0;
        $7567 = HEAP32[$vinfos282>>2]|0;
        $7568 = ((($7567)) + 163|0);
        HEAP8[$7568>>0] = $7566;
        $7569 = HEAP8[$577>>0]|0;
        $7570 = HEAP32[$vinfos282>>2]|0;
        $7571 = ((($7570)) + 164|0);
        HEAP8[$7571>>0] = $7569;
        $7572 = HEAP8[$573>>0]|0;
        $7573 = HEAP32[$vinfos282>>2]|0;
        $7574 = ((($7573)) + 162|0);
        HEAP8[$7574>>0] = $7572;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree283,0);
        $7575 = HEAP32[$solutions>>2]|0;
        $7576 = ((($7575)) + 8|0);
        $7577 = HEAP32[$7576>>2]|0;
        (FUNCTION_TABLE_iiii[$7577 & 31]($solutions,$vinfos282,$vfree283)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree283);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos282);
        break L7;
       }
      } while(0);
      $4824 = +HEAPF64[$0>>3];
      $4825 = $4824 * 0.70710678118654802;
      $4826 = +HEAPF64[$1>>3];
      $4827 = +HEAPF64[$2>>3];
      $4828 = $4826 * $4827;
      $4829 = $4827 * 0.70710678118654802;
      $4830 = +HEAPF64[$3>>3];
      $4831 = +HEAPF64[$4>>3];
      $4832 = $4830 * $4831;
      $4833 = $4826 * $4831;
      $4834 = +HEAPF64[$5>>3];
      $4835 = +HEAPF64[$6>>3];
      $4836 = $4830 * $4835;
      $4837 = $4826 * $4835;
      $4838 = $4829 * $4831;
      $4839 = $4837 * 0.70710678118654802;
      $4840 = $4830 * $4829;
      $4841 = $4833 * 0.70710678118654802;
      $4842 = $4829 * $4835;
      $4843 = -$4834;
      $4844 = $4825 * $4832;
      $4845 = $4825 - $4840;
      $4846 = $4825 * $4836;
      $4847 = -$4825;
      $4848 = $4847 - $4840;
      $4849 = $4824 * $4837;
      $4850 = $4832 - $4849;
      $4851 = +HEAPF64[$7>>3];
      $4852 = $4848 * $4851;
      $4853 = $4841 + $4846;
      $4854 = $4838 + $4844;
      $4855 = $4854 - $4839;
      $4856 = $4844 - $4839;
      $4857 = $4856 - $4838;
      $4858 = $4853 - $4842;
      $4859 = $4842 + $4853;
      $4860 = $4851 * $4858;
      $4861 = $4834 * $4848;
      $4862 = $4845 * $4851;
      $4863 = $4861 + $4862;
      $4864 = $4845 * $4843;
      $4865 = $4864 + $4852;
      $4866 = $4834 * $4857;
      $4867 = $4851 * $4855;
      $4868 = $4867 + $4866;
      $4869 = $4855 * $4843;
      $4870 = $4851 * $4857;
      $4871 = $4869 + $4870;
      $4872 = $4834 * $4858;
      $4873 = $4851 * $4859;
      $4874 = $4872 + $4873;
      $4875 = $4859 * $4843;
      $4876 = $4875 + $4860;
      $4877 = +HEAPF64[$9>>3];
      $4878 = $4877 * $4871;
      $4879 = +HEAPF64[$8>>3];
      $4880 = $627 * $4879;
      $4881 = $4880 + $4878;
      $4882 = +HEAPF64[$10>>3];
      $4883 = $4882 * $4868;
      $4884 = $4883 + $4881;
      HEAPF64[$11>>3] = $4884;
      $4885 = +HEAPF64[$14>>3];
      $4886 = $4885 * $4871;
      $4887 = +HEAPF64[$13>>3];
      $4888 = $627 * $4887;
      $4889 = $4886 + $4888;
      $4890 = +HEAPF64[$12>>3];
      $4891 = $4868 * $4890;
      $4892 = $4889 + $4891;
      HEAPF64[$15>>3] = $4892;
      $4893 = +HEAPF64[$17>>3];
      $4894 = $4868 * $4893;
      $4895 = +HEAPF64[$18>>3];
      $4896 = $4871 * $4895;
      $4897 = $4894 + $4896;
      $4898 = +HEAPF64[$16>>3];
      $4899 = $627 * $4898;
      $4900 = $4897 + $4899;
      HEAPF64[$19>>3] = $4900;
      $4901 = +HEAPF64[$9>>3];
      $4902 = $4865 * $4901;
      $4903 = +HEAPF64[$8>>3];
      $4904 = $4828 * $4903;
      $4905 = $4902 + $4904;
      $4906 = +HEAPF64[$10>>3];
      $4907 = $4863 * $4906;
      $4908 = $4905 + $4907;
      HEAPF64[$20>>3] = $4908;
      $4909 = +HEAPF64[$14>>3];
      $4910 = $4865 * $4909;
      $4911 = +HEAPF64[$12>>3];
      $4912 = $4863 * $4911;
      $4913 = $4910 + $4912;
      $4914 = +HEAPF64[$13>>3];
      $4915 = $4828 * $4914;
      $4916 = $4913 + $4915;
      HEAPF64[$21>>3] = $4916;
      $4917 = +HEAPF64[$17>>3];
      $4918 = $4863 * $4917;
      $4919 = +HEAPF64[$18>>3];
      $4920 = $4865 * $4919;
      $4921 = $4918 + $4920;
      $4922 = +HEAPF64[$16>>3];
      $4923 = $4828 * $4922;
      $4924 = $4921 + $4923;
      HEAPF64[$22>>3] = $4924;
      $4925 = +HEAPF64[$9>>3];
      $4926 = $4876 * $4925;
      $4927 = +HEAPF64[$8>>3];
      $4928 = $4850 * $4927;
      $4929 = $4926 + $4928;
      $4930 = +HEAPF64[$10>>3];
      $4931 = $4874 * $4930;
      $4932 = $4929 + $4931;
      HEAPF64[$23>>3] = $4932;
      $4933 = +HEAPF64[$12>>3];
      $4934 = $4874 * $4933;
      $4935 = +HEAPF64[$13>>3];
      $4936 = $4850 * $4935;
      $4937 = $4934 + $4936;
      $4938 = +HEAPF64[$14>>3];
      $4939 = $4876 * $4938;
      $4940 = $4937 + $4939;
      HEAPF64[$24>>3] = $4940;
      $4941 = +HEAPF64[$16>>3];
      $4942 = $4850 * $4941;
      $4943 = +HEAPF64[$17>>3];
      $4944 = $4874 * $4943;
      $4945 = $4942 + $4944;
      $4946 = +HEAPF64[$18>>3];
      $4947 = $4876 * $4946;
      $4948 = $4945 + $4947;
      HEAPF64[$25>>3] = $4948;
      $4949 = +HEAPF64[$353>>3];
      $4950 = (+__Z5IKabsd($4949));
      $4951 = $4950 < 9.9999999999999995E-7;
      do {
       if (!($4951)) {
        $4952 = +HEAPF64[$31>>3];
        $4953 = (+__Z5IKabsd($4952));
        $4954 = $4953 < 9.9999999999999995E-7;
        if ($4954) {
         break;
        }
        HEAP8[$550>>0] = 1;
        $7121 = +HEAPF64[$31>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x737,$7121,-1);
        $7122 = HEAP8[$551>>0]|0;
        $7123 = ($7122<<24>>24)==(0);
        if ($7123) {
         break L7;
        }
        $7124 = +HEAPF64[$x737>>3];
        $7125 = +HEAPF64[$353>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x738,$7125,-1);
        $7126 = HEAP8[$552>>0]|0;
        $7127 = ($7126<<24>>24)==(0);
        if ($7127) {
         break L7;
        }
        $7128 = +HEAPF64[$x738>>3];
        $7129 = $7124 * $7128;
        $7130 = +HEAPF64[$352>>3];
        $7131 = +HEAPF64[$30>>3];
        $7132 = $7130 * $7131;
        $7133 = +HEAPF64[$23>>3];
        $7134 = $7132 * $7133;
        $7135 = +HEAPF64[$11>>3];
        $7136 = +HEAPF64[$31>>3];
        $7137 = $7135 * $7136;
        $7138 = -$7137;
        $7139 = $7138 - $7134;
        $7140 = $7129 * $7139;
        $7141 = (+__Z5IKabsd($7140));
        $7142 = $7141 < 1.9999999999999999E-6;
        do {
         if ($7142) {
          $7143 = $7124 * $7133;
          $7144 = -$7143;
          $7145 = (+__Z5IKabsd($7144));
          $7146 = $7145 < 1.9999999999999999E-6;
          if (!($7146)) {
           break;
          }
          $7147 = (+__Z5IKsqrd($7140));
          $7148 = (+__Z5IKsqrd($7144));
          $7149 = $7147 + $7148;
          $7150 = $7149 + -1.0;
          $7151 = (+__Z5IKabsd($7150));
          $7152 = !($7151 <= 1.9999999999999999E-6);
          if (!($7152)) {
           break L7;
          }
         }
        } while(0);
        $7153 = +HEAPF64[$x738>>3];
        $7154 = $7124 * $7153;
        $7155 = +HEAPF64[$352>>3];
        $7156 = +HEAPF64[$30>>3];
        $7157 = $7155 * $7156;
        $7158 = +HEAPF64[$23>>3];
        $7159 = $7157 * $7158;
        $7160 = +HEAPF64[$11>>3];
        $7161 = +HEAPF64[$31>>3];
        $7162 = $7160 * $7161;
        $7163 = -$7162;
        $7164 = $7163 - $7159;
        $7165 = $7154 * $7164;
        $7166 = $7124 * $7158;
        $7167 = -$7166;
        $7168 = (+__Z7IKatan2dd($7165,$7167));
        $7169 = (+__Z5IKsind($7168));
        $7170 = (+__Z5IKcosd($7168));
        $7171 = $7168 > 3.14159265358979;
        do {
         if ($7171) {
          $7172 = $7168 + -6.2831853071795898;
          $7175 = $7172;
         } else {
          $7173 = $7168 < -3.14159265358979;
          if (!($7173)) {
           $7175 = $7168;
           break;
          }
          $7174 = $7168 + 6.2831853071795898;
          $7175 = $7174;
         }
        } while(0);
        HEAP8[$553>>0] = 0;
        HEAP8[$554>>0] = -1;
        HEAPF64[$555>>3] = $7175;
        HEAPF64[$556>>3] = $7170;
        HEAPF64[$557>>3] = $7169;
        $7176 = +HEAPF64[$555>>3];
        $7177 = (+__Z5IKsind($7176));
        $7178 = (+__Z5IKcosd($7176));
        $7179 = +HEAPF64[$30>>3];
        $7180 = +HEAPF64[$353>>3];
        $7181 = $7179 * $7180;
        $7182 = +HEAPF64[$31>>3];
        $7183 = +HEAPF64[$352>>3];
        $7184 = +HEAPF64[$11>>3];
        $7185 = $7183 * $7184;
        $7186 = +HEAPF64[$15>>3];
        $7187 = $7183 * $7186;
        $7188 = $7177 * $7179;
        $7189 = $7178 * $7179;
        $7190 = $7178 * $7182;
        $7191 = +HEAPF64[$23>>3];
        $7192 = $7190 + $7191;
        $7193 = -$7177;
        $7194 = +HEAPF64[$24>>3];
        $7195 = +HEAPF64[$21>>3];
        $7196 = $7180 * $7195;
        $7197 = $7187 + $7196;
        $7198 = $7188 + $7197;
        $7199 = $7180 * $7184;
        $7200 = $7193 - $7199;
        $7201 = +HEAPF64[$20>>3];
        $7202 = $7183 * $7201;
        $7203 = $7200 + $7202;
        $7204 = $7180 * $7186;
        $7205 = $7183 * $7195;
        $7206 = $7205 - $7204;
        $7207 = $7206 - $7178;
        $7208 = $7188 * $7183;
        $7209 = $7178 * $7180;
        $7210 = $7209 + $7208;
        $7211 = $7210 + $7186;
        $7212 = $7180 * $7201;
        $7213 = $7185 + $7212;
        $7214 = $7213 - $7189;
        $7215 = $7189 * $7183;
        $7216 = $7177 * $7180;
        $7217 = $7216 - $7215;
        $7218 = $7184 + $7217;
        $7219 = $7177 * $7181;
        $7220 = $7178 * $7183;
        $7221 = $7219 - $7220;
        $7222 = $7221 + $7195;
        $7223 = $7178 * $7181;
        $7224 = $7183 * $7193;
        $7225 = $7224 - $7223;
        $7226 = $7225 + $7201;
        $7227 = $7179 * $7187;
        $7228 = $7182 * $7194;
        $7229 = $7227 - $7228;
        $7230 = $7181 * $7195;
        $7231 = $7229 + $7230;
        $7232 = $7177 + $7231;
        $7233 = $7179 * $7185;
        $7234 = $7182 * $7191;
        $7235 = $7233 - $7234;
        $7236 = $7181 * $7201;
        $7237 = $7235 + $7236;
        $7238 = $7237 - $7178;
        $7239 = (+__Z5IKabsd($7192));
        $7240 = $7239 > 5.0000000000000004E-6;
        if ($7240) {
         break L7;
        }
        $7241 = $7182 * $7193;
        $7242 = $7241 + $7194;
        $7243 = (+__Z5IKabsd($7242));
        $7244 = $7243 > 5.0000000000000004E-6;
        if ($7244) {
         break L7;
        }
        $7245 = (+__Z5IKabsd($7198));
        $7246 = $7245 > 5.0000000000000004E-6;
        if ($7246) {
         break L7;
        }
        $7247 = (+__Z5IKabsd($7203));
        $7248 = $7247 > 5.0000000000000004E-6;
        if ($7248) {
         break L7;
        }
        $7249 = (+__Z5IKabsd($7207));
        $7250 = $7249 > 5.0000000000000004E-6;
        if ($7250) {
         break L7;
        }
        $7251 = (+__Z5IKabsd($7211));
        $7252 = $7251 > 5.0000000000000004E-6;
        if ($7252) {
         break L7;
        }
        $7253 = (+__Z5IKabsd($7214));
        $7254 = $7253 > 5.0000000000000004E-6;
        if ($7254) {
         break L7;
        }
        $7255 = (+__Z5IKabsd($7218));
        $7256 = $7255 > 5.0000000000000004E-6;
        if ($7256) {
         break L7;
        }
        $7257 = (+__Z5IKabsd($7222));
        $7258 = $7257 > 5.0000000000000004E-6;
        if ($7258) {
         break L7;
        }
        $7259 = (+__Z5IKabsd($7226));
        $7260 = $7259 > 5.0000000000000004E-6;
        if ($7260) {
         break L7;
        }
        $7261 = (+__Z5IKabsd($7232));
        $7262 = $7261 > 5.0000000000000004E-6;
        if ($7262) {
         break L7;
        }
        $7263 = (+__Z5IKabsd($7238));
        $7264 = $7263 > 5.0000000000000004E-6;
        if ($7264) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos272,7);
        $7265 = HEAP32[$vinfos272>>2]|0;
        $7266 = ((($7265)) + 17|0);
        HEAP8[$7266>>0] = 1;
        $7267 = +HEAPF64[$this>>3];
        $7268 = HEAP32[$vinfos272>>2]|0;
        $7269 = ((($7268)) + 8|0);
        HEAPF64[$7269>>3] = $7267;
        $7270 = HEAP8[$558>>0]|0;
        $7271 = HEAP32[$vinfos272>>2]|0;
        $7272 = ((($7271)) + 19|0);
        HEAP8[$7272>>0] = $7270;
        $7273 = HEAP8[$559>>0]|0;
        $7274 = HEAP32[$vinfos272>>2]|0;
        $7275 = ((($7274)) + 20|0);
        HEAP8[$7275>>0] = $7273;
        $7276 = HEAP8[$560>>0]|0;
        $7277 = HEAP32[$vinfos272>>2]|0;
        $7278 = ((($7277)) + 18|0);
        HEAP8[$7278>>0] = $7276;
        $7279 = HEAP32[$vinfos272>>2]|0;
        $7280 = ((($7279)) + 41|0);
        HEAP8[$7280>>0] = 1;
        $7281 = +HEAPF64[$561>>3];
        $7282 = HEAP32[$vinfos272>>2]|0;
        $7283 = ((($7282)) + 32|0);
        HEAPF64[$7283>>3] = $7281;
        $7284 = HEAP8[$562>>0]|0;
        $7285 = HEAP32[$vinfos272>>2]|0;
        $7286 = ((($7285)) + 43|0);
        HEAP8[$7286>>0] = $7284;
        $7287 = HEAP8[$563>>0]|0;
        $7288 = HEAP32[$vinfos272>>2]|0;
        $7289 = ((($7288)) + 44|0);
        HEAP8[$7289>>0] = $7287;
        $7290 = HEAP8[$564>>0]|0;
        $7291 = HEAP32[$vinfos272>>2]|0;
        $7292 = ((($7291)) + 42|0);
        HEAP8[$7292>>0] = $7290;
        $7293 = HEAP32[$vinfos272>>2]|0;
        $7294 = ((($7293)) + 65|0);
        HEAP8[$7294>>0] = 1;
        $7295 = +HEAPF64[$565>>3];
        $7296 = HEAP32[$vinfos272>>2]|0;
        $7297 = ((($7296)) + 56|0);
        HEAPF64[$7297>>3] = $7295;
        $7298 = HEAP8[$566>>0]|0;
        $7299 = HEAP32[$vinfos272>>2]|0;
        $7300 = ((($7299)) + 67|0);
        HEAP8[$7300>>0] = $7298;
        $7301 = HEAP8[$567>>0]|0;
        $7302 = HEAP32[$vinfos272>>2]|0;
        $7303 = ((($7302)) + 68|0);
        HEAP8[$7303>>0] = $7301;
        $7304 = HEAP8[$568>>0]|0;
        $7305 = HEAP32[$vinfos272>>2]|0;
        $7306 = ((($7305)) + 66|0);
        HEAP8[$7306>>0] = $7304;
        $7307 = HEAP32[$vinfos272>>2]|0;
        $7308 = ((($7307)) + 89|0);
        HEAP8[$7308>>0] = 1;
        $7309 = +HEAPF64[$569>>3];
        $7310 = HEAP32[$vinfos272>>2]|0;
        $7311 = ((($7310)) + 80|0);
        HEAPF64[$7311>>3] = $7309;
        $7312 = HEAP8[$570>>0]|0;
        $7313 = HEAP32[$vinfos272>>2]|0;
        $7314 = ((($7313)) + 91|0);
        HEAP8[$7314>>0] = $7312;
        $7315 = HEAP8[$571>>0]|0;
        $7316 = HEAP32[$vinfos272>>2]|0;
        $7317 = ((($7316)) + 92|0);
        HEAP8[$7317>>0] = $7315;
        $7318 = HEAP8[$572>>0]|0;
        $7319 = HEAP32[$vinfos272>>2]|0;
        $7320 = ((($7319)) + 90|0);
        HEAP8[$7320>>0] = $7318;
        $7321 = HEAP32[$vinfos272>>2]|0;
        $7322 = ((($7321)) + 113|0);
        HEAP8[$7322>>0] = 1;
        $7323 = +HEAPF64[$351>>3];
        $7324 = HEAP32[$vinfos272>>2]|0;
        $7325 = ((($7324)) + 104|0);
        HEAPF64[$7325>>3] = $7323;
        $7326 = HEAP8[$349>>0]|0;
        $7327 = HEAP32[$vinfos272>>2]|0;
        $7328 = ((($7327)) + 115|0);
        HEAP8[$7328>>0] = $7326;
        $7329 = HEAP8[$350>>0]|0;
        $7330 = HEAP32[$vinfos272>>2]|0;
        $7331 = ((($7330)) + 116|0);
        HEAP8[$7331>>0] = $7329;
        $7332 = HEAP8[$346>>0]|0;
        $7333 = HEAP32[$vinfos272>>2]|0;
        $7334 = ((($7333)) + 114|0);
        HEAP8[$7334>>0] = $7332;
        $7335 = HEAP32[$vinfos272>>2]|0;
        $7336 = ((($7335)) + 137|0);
        HEAP8[$7336>>0] = 1;
        $7337 = +HEAPF64[$29>>3];
        $7338 = HEAP32[$vinfos272>>2]|0;
        $7339 = ((($7338)) + 128|0);
        HEAPF64[$7339>>3] = $7337;
        $7340 = HEAP8[$27>>0]|0;
        $7341 = HEAP32[$vinfos272>>2]|0;
        $7342 = ((($7341)) + 139|0);
        HEAP8[$7342>>0] = $7340;
        $7343 = HEAP8[$28>>0]|0;
        $7344 = HEAP32[$vinfos272>>2]|0;
        $7345 = ((($7344)) + 140|0);
        HEAP8[$7345>>0] = $7343;
        $7346 = HEAP8[$26>>0]|0;
        $7347 = HEAP32[$vinfos272>>2]|0;
        $7348 = ((($7347)) + 138|0);
        HEAP8[$7348>>0] = $7346;
        $7349 = HEAP32[$vinfos272>>2]|0;
        $7350 = ((($7349)) + 161|0);
        HEAP8[$7350>>0] = 1;
        $7351 = +HEAPF64[$555>>3];
        $7352 = HEAP32[$vinfos272>>2]|0;
        $7353 = ((($7352)) + 152|0);
        HEAPF64[$7353>>3] = $7351;
        $7354 = HEAP8[$553>>0]|0;
        $7355 = HEAP32[$vinfos272>>2]|0;
        $7356 = ((($7355)) + 163|0);
        HEAP8[$7356>>0] = $7354;
        $7357 = HEAP8[$554>>0]|0;
        $7358 = HEAP32[$vinfos272>>2]|0;
        $7359 = ((($7358)) + 164|0);
        HEAP8[$7359>>0] = $7357;
        $7360 = HEAP8[$550>>0]|0;
        $7361 = HEAP32[$vinfos272>>2]|0;
        $7362 = ((($7361)) + 162|0);
        HEAP8[$7362>>0] = $7360;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree273,0);
        $7363 = HEAP32[$solutions>>2]|0;
        $7364 = ((($7363)) + 8|0);
        $7365 = HEAP32[$7364>>2]|0;
        (FUNCTION_TABLE_iiii[$7365 & 31]($solutions,$vinfos272,$vfree273)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree273);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos272);
        break L7;
       }
      } while(0);
      $4955 = +HEAPF64[$0>>3];
      $4956 = $4955 * 0.70710678118654802;
      $4957 = +HEAPF64[$1>>3];
      $4958 = +HEAPF64[$2>>3];
      $4959 = $4957 * $4958;
      $4960 = $4958 * 0.70710678118654802;
      $4961 = +HEAPF64[$3>>3];
      $4962 = +HEAPF64[$4>>3];
      $4963 = $4961 * $4962;
      $4964 = $4957 * $4962;
      $4965 = +HEAPF64[$5>>3];
      $4966 = +HEAPF64[$6>>3];
      $4967 = $4961 * $4966;
      $4968 = $4957 * $4966;
      $4969 = $4960 * $4962;
      $4970 = $4968 * 0.70710678118654802;
      $4971 = $4961 * $4960;
      $4972 = $4964 * 0.70710678118654802;
      $4973 = $4960 * $4966;
      $4974 = -$4965;
      $4975 = $4956 * $4963;
      $4976 = $4956 - $4971;
      $4977 = $4956 * $4967;
      $4978 = -$4956;
      $4979 = $4978 - $4971;
      $4980 = $4955 * $4968;
      $4981 = $4963 - $4980;
      $4982 = +HEAPF64[$7>>3];
      $4983 = $4979 * $4982;
      $4984 = $4972 + $4977;
      $4985 = -$4970;
      $4986 = $4969 - $4970;
      $4987 = $4975 + $4986;
      $4988 = $4985 - $4969;
      $4989 = $4975 + $4988;
      $4990 = $4984 - $4973;
      $4991 = $4973 + $4984;
      $4992 = $4982 * $4990;
      $4993 = $4965 * $4979;
      $4994 = $4976 * $4982;
      $4995 = $4993 + $4994;
      $4996 = $4976 * $4974;
      $4997 = $4996 + $4983;
      $4998 = $4965 * $4989;
      $4999 = $4982 * $4987;
      $5000 = $4998 + $4999;
      $5001 = $4982 * $4989;
      $5002 = $4987 * $4974;
      $5003 = $5001 + $5002;
      $5004 = $4965 * $4990;
      $5005 = $4982 * $4991;
      $5006 = $5004 + $5005;
      $5007 = $4991 * $4974;
      $5008 = $4992 + $5007;
      $5009 = +HEAPF64[$10>>3];
      $5010 = $5009 * $5000;
      $5011 = +HEAPF64[$9>>3];
      $5012 = $5011 * $5003;
      $5013 = $5010 + $5012;
      $5014 = +HEAPF64[$8>>3];
      $5015 = $627 * $5014;
      $5016 = $5015 + $5013;
      HEAPF64[$11>>3] = $5016;
      $5017 = +HEAPF64[$13>>3];
      $5018 = $627 * $5017;
      $5019 = +HEAPF64[$14>>3];
      $5020 = $5019 * $5003;
      $5021 = $5018 + $5020;
      $5022 = +HEAPF64[$12>>3];
      $5023 = $5000 * $5022;
      $5024 = $5021 + $5023;
      HEAPF64[$15>>3] = $5024;
      $5025 = +HEAPF64[$16>>3];
      $5026 = $627 * $5025;
      $5027 = +HEAPF64[$18>>3];
      $5028 = $5003 * $5027;
      $5029 = $5026 + $5028;
      $5030 = +HEAPF64[$17>>3];
      $5031 = $5000 * $5030;
      $5032 = $5029 + $5031;
      HEAPF64[$19>>3] = $5032;
      $5033 = +HEAPF64[$8>>3];
      $5034 = $4959 * $5033;
      $5035 = +HEAPF64[$10>>3];
      $5036 = $4995 * $5035;
      $5037 = $5034 + $5036;
      $5038 = +HEAPF64[$9>>3];
      $5039 = $4997 * $5038;
      $5040 = $5037 + $5039;
      HEAPF64[$20>>3] = $5040;
      $5041 = +HEAPF64[$14>>3];
      $5042 = $4997 * $5041;
      $5043 = +HEAPF64[$13>>3];
      $5044 = $4959 * $5043;
      $5045 = $5042 + $5044;
      $5046 = +HEAPF64[$12>>3];
      $5047 = $4995 * $5046;
      $5048 = $5045 + $5047;
      HEAPF64[$21>>3] = $5048;
      $5049 = +HEAPF64[$18>>3];
      $5050 = $4997 * $5049;
      $5051 = +HEAPF64[$17>>3];
      $5052 = $4995 * $5051;
      $5053 = $5050 + $5052;
      $5054 = +HEAPF64[$16>>3];
      $5055 = $4959 * $5054;
      $5056 = $5053 + $5055;
      HEAPF64[$22>>3] = $5056;
      $5057 = +HEAPF64[$10>>3];
      $5058 = $5006 * $5057;
      $5059 = +HEAPF64[$9>>3];
      $5060 = $5008 * $5059;
      $5061 = $5058 + $5060;
      $5062 = +HEAPF64[$8>>3];
      $5063 = $4981 * $5062;
      $5064 = $5061 + $5063;
      HEAPF64[$23>>3] = $5064;
      $5065 = +HEAPF64[$13>>3];
      $5066 = $4981 * $5065;
      $5067 = +HEAPF64[$14>>3];
      $5068 = $5008 * $5067;
      $5069 = $5066 + $5068;
      $5070 = +HEAPF64[$12>>3];
      $5071 = $5006 * $5070;
      $5072 = $5069 + $5071;
      HEAPF64[$24>>3] = $5072;
      $5073 = +HEAPF64[$16>>3];
      $5074 = $4981 * $5073;
      $5075 = +HEAPF64[$18>>3];
      $5076 = $5008 * $5075;
      $5077 = $5074 + $5076;
      $5078 = +HEAPF64[$17>>3];
      $5079 = $5006 * $5078;
      $5080 = $5077 + $5079;
      HEAPF64[$25>>3] = $5080;
      $5081 = +HEAPF64[$352>>3];
      $5082 = +HEAPF64[$31>>3];
      $5083 = (+__Z5IKabsd($5081));
      $5084 = $5083 < 9.9999999999999995E-7;
      do {
       if (!($5084)) {
        $5085 = +HEAPF64[$30>>3];
        $5086 = (+__Z5IKabsd($5085));
        $5087 = $5086 < 9.9999999999999995E-7;
        if ($5087) {
         break;
        }
        $5088 = (+__Z5IKabsd($5082));
        $5089 = $5088 < 9.9999999999999995E-7;
        if ($5089) {
         break;
        }
        HEAP8[$526>>0] = 1;
        $6875 = +HEAPF64[$31>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x722,$6875,-1);
        $6876 = HEAP8[$527>>0]|0;
        $6877 = ($6876<<24>>24)==(0);
        if ($6877) {
         break L7;
        }
        $6878 = +HEAPF64[$x722>>3];
        $6879 = +HEAPF64[$352>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x723,$6879,-1);
        $6880 = HEAP8[$528>>0]|0;
        $6881 = ($6880<<24>>24)==(0);
        if ($6881) {
         break L7;
        }
        $6882 = +HEAPF64[$30>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x724,$6882,-1);
        $6883 = HEAP8[$529>>0]|0;
        $6884 = ($6883<<24>>24)==(0);
        if ($6884) {
         break L7;
        }
        $6885 = +HEAPF64[$x723>>3];
        $6886 = $6878 * $6885;
        $6887 = +HEAPF64[$x724>>3];
        $6888 = $6886 * $6887;
        $6889 = +HEAPF64[$23>>3];
        $6890 = +HEAPF64[$353>>3];
        $6891 = $6889 * $6890;
        $6892 = +HEAPF64[$15>>3];
        $6893 = +HEAPF64[$31>>3];
        $6894 = $6892 * $6893;
        $6895 = $6891 - $6894;
        $6896 = $6888 * $6895;
        $6897 = (+__Z5IKabsd($6896));
        $6898 = $6897 < 1.9999999999999999E-6;
        do {
         if ($6898) {
          $6899 = $6878 * $6889;
          $6900 = -$6899;
          $6901 = (+__Z5IKabsd($6900));
          $6902 = $6901 < 1.9999999999999999E-6;
          if (!($6902)) {
           break;
          }
          $6903 = (+__Z5IKsqrd($6896));
          $6904 = (+__Z5IKsqrd($6900));
          $6905 = $6903 + $6904;
          $6906 = $6905 + -1.0;
          $6907 = (+__Z5IKabsd($6906));
          $6908 = !($6907 <= 1.9999999999999999E-6);
          if (!($6908)) {
           break L7;
          }
         }
        } while(0);
        $6909 = +HEAPF64[$x723>>3];
        $6910 = $6878 * $6909;
        $6911 = +HEAPF64[$x724>>3];
        $6912 = $6910 * $6911;
        $6913 = +HEAPF64[$23>>3];
        $6914 = +HEAPF64[$353>>3];
        $6915 = $6913 * $6914;
        $6916 = +HEAPF64[$15>>3];
        $6917 = +HEAPF64[$31>>3];
        $6918 = $6916 * $6917;
        $6919 = $6915 - $6918;
        $6920 = $6912 * $6919;
        $6921 = $6878 * $6913;
        $6922 = -$6921;
        $6923 = (+__Z7IKatan2dd($6920,$6922));
        $6924 = (+__Z5IKsind($6923));
        $6925 = (+__Z5IKcosd($6923));
        $6926 = $6923 > 3.14159265358979;
        do {
         if ($6926) {
          $6927 = $6923 + -6.2831853071795898;
          $6930 = $6927;
         } else {
          $6928 = $6923 < -3.14159265358979;
          if (!($6928)) {
           $6930 = $6923;
           break;
          }
          $6929 = $6923 + 6.2831853071795898;
          $6930 = $6929;
         }
        } while(0);
        HEAP8[$530>>0] = 0;
        HEAP8[$531>>0] = -1;
        HEAPF64[$532>>3] = $6930;
        HEAPF64[$533>>3] = $6925;
        HEAPF64[$534>>3] = $6924;
        $6931 = +HEAPF64[$532>>3];
        $6932 = (+__Z5IKsind($6931));
        $6933 = (+__Z5IKcosd($6931));
        $6934 = +HEAPF64[$30>>3];
        $6935 = +HEAPF64[$353>>3];
        $6936 = $6934 * $6935;
        $6937 = +HEAPF64[$31>>3];
        $6938 = +HEAPF64[$352>>3];
        $6939 = +HEAPF64[$11>>3];
        $6940 = $6938 * $6939;
        $6941 = +HEAPF64[$15>>3];
        $6942 = $6938 * $6941;
        $6943 = $6932 * $6934;
        $6944 = $6933 * $6934;
        $6945 = $6933 * $6937;
        $6946 = +HEAPF64[$23>>3];
        $6947 = $6945 + $6946;
        $6948 = -$6932;
        $6949 = +HEAPF64[$24>>3];
        $6950 = +HEAPF64[$21>>3];
        $6951 = $6935 * $6950;
        $6952 = $6943 + $6951;
        $6953 = $6942 + $6952;
        $6954 = +HEAPF64[$20>>3];
        $6955 = $6938 * $6954;
        $6956 = $6955 - $6932;
        $6957 = $6935 * $6939;
        $6958 = $6956 - $6957;
        $6959 = $6938 * $6950;
        $6960 = $6959 - $6933;
        $6961 = $6935 * $6941;
        $6962 = $6960 - $6961;
        $6963 = $6933 * $6935;
        $6964 = $6943 * $6938;
        $6965 = $6963 + $6964;
        $6966 = $6965 + $6941;
        $6967 = $6935 * $6954;
        $6968 = $6967 - $6944;
        $6969 = $6940 + $6968;
        $6970 = $6944 * $6938;
        $6971 = $6932 * $6935;
        $6972 = $6971 - $6970;
        $6973 = $6939 + $6972;
        $6974 = $6932 * $6936;
        $6975 = $6974 + $6950;
        $6976 = $6933 * $6938;
        $6977 = $6975 - $6976;
        $6978 = $6933 * $6936;
        $6979 = $6938 * $6948;
        $6980 = $6979 - $6978;
        $6981 = $6980 + $6954;
        $6982 = $6934 * $6942;
        $6983 = $6937 * $6949;
        $6984 = $6982 - $6983;
        $6985 = $6932 + $6984;
        $6986 = $6936 * $6950;
        $6987 = $6986 + $6985;
        $6988 = $6934 * $6940;
        $6989 = $6937 * $6946;
        $6990 = $6988 - $6989;
        $6991 = $6990 - $6933;
        $6992 = $6936 * $6954;
        $6993 = $6991 + $6992;
        $6994 = (+__Z5IKabsd($6947));
        $6995 = $6994 > 5.0000000000000004E-6;
        if ($6995) {
         break L7;
        }
        $6996 = $6937 * $6948;
        $6997 = $6996 + $6949;
        $6998 = (+__Z5IKabsd($6997));
        $6999 = $6998 > 5.0000000000000004E-6;
        if ($6999) {
         break L7;
        }
        $7000 = (+__Z5IKabsd($6953));
        $7001 = $7000 > 5.0000000000000004E-6;
        if ($7001) {
         break L7;
        }
        $7002 = (+__Z5IKabsd($6958));
        $7003 = $7002 > 5.0000000000000004E-6;
        if ($7003) {
         break L7;
        }
        $7004 = (+__Z5IKabsd($6962));
        $7005 = $7004 > 5.0000000000000004E-6;
        if ($7005) {
         break L7;
        }
        $7006 = (+__Z5IKabsd($6966));
        $7007 = $7006 > 5.0000000000000004E-6;
        if ($7007) {
         break L7;
        }
        $7008 = (+__Z5IKabsd($6969));
        $7009 = $7008 > 5.0000000000000004E-6;
        if ($7009) {
         break L7;
        }
        $7010 = (+__Z5IKabsd($6973));
        $7011 = $7010 > 5.0000000000000004E-6;
        if ($7011) {
         break L7;
        }
        $7012 = (+__Z5IKabsd($6977));
        $7013 = $7012 > 5.0000000000000004E-6;
        if ($7013) {
         break L7;
        }
        $7014 = (+__Z5IKabsd($6981));
        $7015 = $7014 > 5.0000000000000004E-6;
        if ($7015) {
         break L7;
        }
        $7016 = (+__Z5IKabsd($6987));
        $7017 = $7016 > 5.0000000000000004E-6;
        if ($7017) {
         break L7;
        }
        $7018 = (+__Z5IKabsd($6993));
        $7019 = $7018 > 5.0000000000000004E-6;
        if ($7019) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos262,7);
        $7020 = HEAP32[$vinfos262>>2]|0;
        $7021 = ((($7020)) + 17|0);
        HEAP8[$7021>>0] = 1;
        $7022 = +HEAPF64[$this>>3];
        $7023 = HEAP32[$vinfos262>>2]|0;
        $7024 = ((($7023)) + 8|0);
        HEAPF64[$7024>>3] = $7022;
        $7025 = HEAP8[$535>>0]|0;
        $7026 = HEAP32[$vinfos262>>2]|0;
        $7027 = ((($7026)) + 19|0);
        HEAP8[$7027>>0] = $7025;
        $7028 = HEAP8[$536>>0]|0;
        $7029 = HEAP32[$vinfos262>>2]|0;
        $7030 = ((($7029)) + 20|0);
        HEAP8[$7030>>0] = $7028;
        $7031 = HEAP8[$537>>0]|0;
        $7032 = HEAP32[$vinfos262>>2]|0;
        $7033 = ((($7032)) + 18|0);
        HEAP8[$7033>>0] = $7031;
        $7034 = HEAP32[$vinfos262>>2]|0;
        $7035 = ((($7034)) + 41|0);
        HEAP8[$7035>>0] = 1;
        $7036 = +HEAPF64[$538>>3];
        $7037 = HEAP32[$vinfos262>>2]|0;
        $7038 = ((($7037)) + 32|0);
        HEAPF64[$7038>>3] = $7036;
        $7039 = HEAP8[$539>>0]|0;
        $7040 = HEAP32[$vinfos262>>2]|0;
        $7041 = ((($7040)) + 43|0);
        HEAP8[$7041>>0] = $7039;
        $7042 = HEAP8[$540>>0]|0;
        $7043 = HEAP32[$vinfos262>>2]|0;
        $7044 = ((($7043)) + 44|0);
        HEAP8[$7044>>0] = $7042;
        $7045 = HEAP8[$541>>0]|0;
        $7046 = HEAP32[$vinfos262>>2]|0;
        $7047 = ((($7046)) + 42|0);
        HEAP8[$7047>>0] = $7045;
        $7048 = HEAP32[$vinfos262>>2]|0;
        $7049 = ((($7048)) + 65|0);
        HEAP8[$7049>>0] = 1;
        $7050 = +HEAPF64[$542>>3];
        $7051 = HEAP32[$vinfos262>>2]|0;
        $7052 = ((($7051)) + 56|0);
        HEAPF64[$7052>>3] = $7050;
        $7053 = HEAP8[$543>>0]|0;
        $7054 = HEAP32[$vinfos262>>2]|0;
        $7055 = ((($7054)) + 67|0);
        HEAP8[$7055>>0] = $7053;
        $7056 = HEAP8[$544>>0]|0;
        $7057 = HEAP32[$vinfos262>>2]|0;
        $7058 = ((($7057)) + 68|0);
        HEAP8[$7058>>0] = $7056;
        $7059 = HEAP8[$545>>0]|0;
        $7060 = HEAP32[$vinfos262>>2]|0;
        $7061 = ((($7060)) + 66|0);
        HEAP8[$7061>>0] = $7059;
        $7062 = HEAP32[$vinfos262>>2]|0;
        $7063 = ((($7062)) + 89|0);
        HEAP8[$7063>>0] = 1;
        $7064 = +HEAPF64[$546>>3];
        $7065 = HEAP32[$vinfos262>>2]|0;
        $7066 = ((($7065)) + 80|0);
        HEAPF64[$7066>>3] = $7064;
        $7067 = HEAP8[$547>>0]|0;
        $7068 = HEAP32[$vinfos262>>2]|0;
        $7069 = ((($7068)) + 91|0);
        HEAP8[$7069>>0] = $7067;
        $7070 = HEAP8[$548>>0]|0;
        $7071 = HEAP32[$vinfos262>>2]|0;
        $7072 = ((($7071)) + 92|0);
        HEAP8[$7072>>0] = $7070;
        $7073 = HEAP8[$549>>0]|0;
        $7074 = HEAP32[$vinfos262>>2]|0;
        $7075 = ((($7074)) + 90|0);
        HEAP8[$7075>>0] = $7073;
        $7076 = HEAP32[$vinfos262>>2]|0;
        $7077 = ((($7076)) + 113|0);
        HEAP8[$7077>>0] = 1;
        $7078 = +HEAPF64[$351>>3];
        $7079 = HEAP32[$vinfos262>>2]|0;
        $7080 = ((($7079)) + 104|0);
        HEAPF64[$7080>>3] = $7078;
        $7081 = HEAP8[$349>>0]|0;
        $7082 = HEAP32[$vinfos262>>2]|0;
        $7083 = ((($7082)) + 115|0);
        HEAP8[$7083>>0] = $7081;
        $7084 = HEAP8[$350>>0]|0;
        $7085 = HEAP32[$vinfos262>>2]|0;
        $7086 = ((($7085)) + 116|0);
        HEAP8[$7086>>0] = $7084;
        $7087 = HEAP8[$346>>0]|0;
        $7088 = HEAP32[$vinfos262>>2]|0;
        $7089 = ((($7088)) + 114|0);
        HEAP8[$7089>>0] = $7087;
        $7090 = HEAP32[$vinfos262>>2]|0;
        $7091 = ((($7090)) + 137|0);
        HEAP8[$7091>>0] = 1;
        $7092 = +HEAPF64[$29>>3];
        $7093 = HEAP32[$vinfos262>>2]|0;
        $7094 = ((($7093)) + 128|0);
        HEAPF64[$7094>>3] = $7092;
        $7095 = HEAP8[$27>>0]|0;
        $7096 = HEAP32[$vinfos262>>2]|0;
        $7097 = ((($7096)) + 139|0);
        HEAP8[$7097>>0] = $7095;
        $7098 = HEAP8[$28>>0]|0;
        $7099 = HEAP32[$vinfos262>>2]|0;
        $7100 = ((($7099)) + 140|0);
        HEAP8[$7100>>0] = $7098;
        $7101 = HEAP8[$26>>0]|0;
        $7102 = HEAP32[$vinfos262>>2]|0;
        $7103 = ((($7102)) + 138|0);
        HEAP8[$7103>>0] = $7101;
        $7104 = HEAP32[$vinfos262>>2]|0;
        $7105 = ((($7104)) + 161|0);
        HEAP8[$7105>>0] = 1;
        $7106 = +HEAPF64[$532>>3];
        $7107 = HEAP32[$vinfos262>>2]|0;
        $7108 = ((($7107)) + 152|0);
        HEAPF64[$7108>>3] = $7106;
        $7109 = HEAP8[$530>>0]|0;
        $7110 = HEAP32[$vinfos262>>2]|0;
        $7111 = ((($7110)) + 163|0);
        HEAP8[$7111>>0] = $7109;
        $7112 = HEAP8[$531>>0]|0;
        $7113 = HEAP32[$vinfos262>>2]|0;
        $7114 = ((($7113)) + 164|0);
        HEAP8[$7114>>0] = $7112;
        $7115 = HEAP8[$526>>0]|0;
        $7116 = HEAP32[$vinfos262>>2]|0;
        $7117 = ((($7116)) + 162|0);
        HEAP8[$7117>>0] = $7115;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree263,0);
        $7118 = HEAP32[$solutions>>2]|0;
        $7119 = ((($7118)) + 8|0);
        $7120 = HEAP32[$7119>>2]|0;
        (FUNCTION_TABLE_iiii[$7120 & 31]($solutions,$vinfos262,$vfree263)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree263);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos262);
        break L7;
       }
      } while(0);
      $5090 = +HEAPF64[$25>>3];
      $5091 = +HEAPF64[$30>>3];
      $5092 = +HEAPF64[$31>>3];
      $5093 = +HEAPF64[$22>>3];
      $5094 = $5093 - $5092;
      $5095 = +HEAPF64[$351>>3];
      $5096 = $5095 + -1.5707963267949001;
      $5097 = (+__Z5IKabsd($5096));
      $5098 = $5097 + 3.14159265358979;
      $5099 = (+__Z6IKfmoddd($5098,6.2831853071795898));
      $5100 = $5099 + -3.14159265358979;
      $5101 = +HEAPF64[$19>>3];
      $5102 = $5091 * $5093;
      $5103 = -$5090;
      $5104 = $5092 * $5103;
      $5105 = $5104 + $5102;
      $5106 = +HEAPF64[$20>>3];
      $5107 = $5092 * $5106;
      $5108 = +HEAPF64[$23>>3];
      $5109 = $5091 * $5108;
      $5110 = -$5109;
      $5111 = $5110 - $5107;
      $5112 = +HEAPF64[$21>>3];
      $5113 = $5092 * $5112;
      $5114 = +HEAPF64[$24>>3];
      $5115 = $5091 * $5114;
      $5116 = -$5115;
      $5117 = $5116 - $5113;
      $5118 = $5092 * $5093;
      $5119 = 1.0 - $5118;
      $5120 = $5091 * $5103;
      $5121 = $5120 + $5119;
      $5122 = (+__Z5IKabsd($5100));
      $5123 = $5122 < 9.9999999999999995E-7;
      do {
       if ($5123) {
        $5124 = $5090 - $5091;
        $5125 = (+__Z5IKabsd($5124));
        $5126 = $5125 < 9.9999999999999995E-7;
        if (!($5126)) {
         break;
        }
        $5127 = (+__Z5IKabsd($5101));
        $5128 = $5127 < 9.9999999999999995E-7;
        if (!($5128)) {
         break;
        }
        $5129 = (+__Z5IKabsd($5094));
        $5130 = $5129 < 9.9999999999999995E-7;
        if (!($5130)) {
         break;
        }
        $5131 = (+__Z5IKabsd($5105));
        $5132 = $5131 < 9.9999999999999995E-7;
        if (!($5132)) {
         break;
        }
        $5133 = (+__Z5IKabsd($5111));
        $5134 = $5133 < 9.9999999999999995E-7;
        if (!($5134)) {
         break;
        }
        $5135 = (+__Z5IKabsd($5117));
        $5136 = $5135 < 9.9999999999999995E-7;
        if (!($5136)) {
         break;
        }
        $5137 = (+__Z5IKabsd($5121));
        $5138 = $5137 < 9.9999999999999995E-7;
        if (!($5138)) {
         break;
        }
        HEAP8[$354>>0] = 1;
        $5139 = +HEAPF64[$24>>3];
        $5140 = +HEAPF64[$23>>3];
        $5141 = -$5140;
        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x651,$5139,$5141,1.9999999999999999E-6);
        $5142 = HEAP8[$355>>0]|0;
        $5143 = ($5142<<24>>24)==(0);
        if ($5143) {
         break L7;
        }
        $5144 = +HEAPF64[$22>>3];
        $5145 = (+__Z6IKsignd($5144));
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x652,$5145,-1);
        $5146 = HEAP8[$356>>0]|0;
        $5147 = ($5146<<24>>24)==(0);
        if ($5147) {
         break L7;
        }
        $5148 = +HEAPF64[$x651>>3];
        $5149 = $5148 + -1.5707963267949001;
        $5150 = +HEAPF64[$x652>>3];
        $5151 = $5150 * 1.5707963267949001;
        $5152 = $5149 + $5151;
        $5153 = (+__Z5IKsind($5152));
        $5154 = (+__Z5IKcosd($5152));
        $5155 = $5152 > 3.14159265358979;
        do {
         if ($5155) {
          $5156 = $5152 + -6.2831853071795898;
          $5159 = $5156;
         } else {
          $5157 = $5152 < -3.14159265358979;
          if (!($5157)) {
           $5159 = $5152;
           break;
          }
          $5158 = $5152 + 6.2831853071795898;
          $5159 = $5158;
         }
        } while(0);
        HEAP8[$357>>0] = 0;
        HEAP8[$358>>0] = -1;
        HEAPF64[$359>>3] = $5159;
        HEAPF64[$360>>3] = $5154;
        HEAPF64[$361>>3] = $5153;
        $5160 = +HEAPF64[$359>>3];
        $5161 = (+__Z5IKsind($5160));
        $5162 = (+__Z5IKcosd($5160));
        $5163 = +HEAPF64[$22>>3];
        $5164 = $5162 * $5163;
        $5165 = +HEAPF64[$23>>3];
        $5166 = $5164 + $5165;
        $5167 = +HEAPF64[$25>>3];
        $5168 = +HEAPF64[$21>>3];
        $5169 = +HEAPF64[$24>>3];
        $5170 = $5161 * $5163;
        $5171 = $5169 - $5170;
        $5172 = +HEAPF64[$20>>3];
        $5173 = $5162 * $5167;
        $5174 = $5172 - $5173;
        $5175 = +HEAPF64[$11>>3];
        $5176 = -$5175;
        $5177 = $5176 - $5161;
        $5178 = +HEAPF64[$15>>3];
        $5179 = -$5178;
        $5180 = $5179 - $5162;
        $5181 = $5167 * $5168;
        $5182 = $5161 + $5181;
        $5183 = $5163 * $5169;
        $5184 = $5182 - $5183;
        $5185 = $5163 * $5165;
        $5186 = -$5185;
        $5187 = $5186 - $5162;
        $5188 = $5167 * $5172;
        $5189 = $5187 + $5188;
        $5190 = (+__Z5IKabsd($5166));
        $5191 = $5190 > 5.0000000000000004E-6;
        if ($5191) {
         break L7;
        }
        $5192 = $5161 * $5167;
        $5193 = $5192 + $5168;
        $5194 = (+__Z5IKabsd($5193));
        $5195 = $5194 > 5.0000000000000004E-6;
        if ($5195) {
         break L7;
        }
        $5196 = (+__Z5IKabsd($5171));
        $5197 = $5196 > 5.0000000000000004E-6;
        if ($5197) {
         break L7;
        }
        $5198 = (+__Z5IKabsd($5174));
        $5199 = $5198 > 5.0000000000000004E-6;
        if ($5199) {
         break L7;
        }
        $5200 = (+__Z5IKabsd($5177));
        $5201 = $5200 > 5.0000000000000004E-6;
        if ($5201) {
         break L7;
        }
        $5202 = (+__Z5IKabsd($5180));
        $5203 = $5202 > 5.0000000000000004E-6;
        if ($5203) {
         break L7;
        }
        $5204 = (+__Z5IKabsd($5184));
        $5205 = $5204 > 5.0000000000000004E-6;
        if ($5205) {
         break L7;
        }
        $5206 = (+__Z5IKabsd($5189));
        $5207 = $5206 > 5.0000000000000004E-6;
        if ($5207) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos174,7);
        $5208 = HEAP32[$vinfos174>>2]|0;
        $5209 = ((($5208)) + 17|0);
        HEAP8[$5209>>0] = 1;
        $5210 = +HEAPF64[$this>>3];
        $5211 = HEAP32[$vinfos174>>2]|0;
        $5212 = ((($5211)) + 8|0);
        HEAPF64[$5212>>3] = $5210;
        $5213 = HEAP8[$362>>0]|0;
        $5214 = HEAP32[$vinfos174>>2]|0;
        $5215 = ((($5214)) + 19|0);
        HEAP8[$5215>>0] = $5213;
        $5216 = HEAP8[$363>>0]|0;
        $5217 = HEAP32[$vinfos174>>2]|0;
        $5218 = ((($5217)) + 20|0);
        HEAP8[$5218>>0] = $5216;
        $5219 = HEAP8[$364>>0]|0;
        $5220 = HEAP32[$vinfos174>>2]|0;
        $5221 = ((($5220)) + 18|0);
        HEAP8[$5221>>0] = $5219;
        $5222 = HEAP32[$vinfos174>>2]|0;
        $5223 = ((($5222)) + 41|0);
        HEAP8[$5223>>0] = 1;
        $5224 = +HEAPF64[$365>>3];
        $5225 = HEAP32[$vinfos174>>2]|0;
        $5226 = ((($5225)) + 32|0);
        HEAPF64[$5226>>3] = $5224;
        $5227 = HEAP8[$366>>0]|0;
        $5228 = HEAP32[$vinfos174>>2]|0;
        $5229 = ((($5228)) + 43|0);
        HEAP8[$5229>>0] = $5227;
        $5230 = HEAP8[$367>>0]|0;
        $5231 = HEAP32[$vinfos174>>2]|0;
        $5232 = ((($5231)) + 44|0);
        HEAP8[$5232>>0] = $5230;
        $5233 = HEAP8[$368>>0]|0;
        $5234 = HEAP32[$vinfos174>>2]|0;
        $5235 = ((($5234)) + 42|0);
        HEAP8[$5235>>0] = $5233;
        $5236 = HEAP32[$vinfos174>>2]|0;
        $5237 = ((($5236)) + 65|0);
        HEAP8[$5237>>0] = 1;
        $5238 = +HEAPF64[$369>>3];
        $5239 = HEAP32[$vinfos174>>2]|0;
        $5240 = ((($5239)) + 56|0);
        HEAPF64[$5240>>3] = $5238;
        $5241 = HEAP8[$370>>0]|0;
        $5242 = HEAP32[$vinfos174>>2]|0;
        $5243 = ((($5242)) + 67|0);
        HEAP8[$5243>>0] = $5241;
        $5244 = HEAP8[$371>>0]|0;
        $5245 = HEAP32[$vinfos174>>2]|0;
        $5246 = ((($5245)) + 68|0);
        HEAP8[$5246>>0] = $5244;
        $5247 = HEAP8[$372>>0]|0;
        $5248 = HEAP32[$vinfos174>>2]|0;
        $5249 = ((($5248)) + 66|0);
        HEAP8[$5249>>0] = $5247;
        $5250 = HEAP32[$vinfos174>>2]|0;
        $5251 = ((($5250)) + 89|0);
        HEAP8[$5251>>0] = 1;
        $5252 = +HEAPF64[$373>>3];
        $5253 = HEAP32[$vinfos174>>2]|0;
        $5254 = ((($5253)) + 80|0);
        HEAPF64[$5254>>3] = $5252;
        $5255 = HEAP8[$374>>0]|0;
        $5256 = HEAP32[$vinfos174>>2]|0;
        $5257 = ((($5256)) + 91|0);
        HEAP8[$5257>>0] = $5255;
        $5258 = HEAP8[$375>>0]|0;
        $5259 = HEAP32[$vinfos174>>2]|0;
        $5260 = ((($5259)) + 92|0);
        HEAP8[$5260>>0] = $5258;
        $5261 = HEAP8[$376>>0]|0;
        $5262 = HEAP32[$vinfos174>>2]|0;
        $5263 = ((($5262)) + 90|0);
        HEAP8[$5263>>0] = $5261;
        $5264 = HEAP32[$vinfos174>>2]|0;
        $5265 = ((($5264)) + 113|0);
        HEAP8[$5265>>0] = 1;
        $5266 = +HEAPF64[$351>>3];
        $5267 = HEAP32[$vinfos174>>2]|0;
        $5268 = ((($5267)) + 104|0);
        HEAPF64[$5268>>3] = $5266;
        $5269 = HEAP8[$349>>0]|0;
        $5270 = HEAP32[$vinfos174>>2]|0;
        $5271 = ((($5270)) + 115|0);
        HEAP8[$5271>>0] = $5269;
        $5272 = HEAP8[$350>>0]|0;
        $5273 = HEAP32[$vinfos174>>2]|0;
        $5274 = ((($5273)) + 116|0);
        HEAP8[$5274>>0] = $5272;
        $5275 = HEAP8[$346>>0]|0;
        $5276 = HEAP32[$vinfos174>>2]|0;
        $5277 = ((($5276)) + 114|0);
        HEAP8[$5277>>0] = $5275;
        $5278 = HEAP32[$vinfos174>>2]|0;
        $5279 = ((($5278)) + 137|0);
        HEAP8[$5279>>0] = 1;
        $5280 = +HEAPF64[$29>>3];
        $5281 = HEAP32[$vinfos174>>2]|0;
        $5282 = ((($5281)) + 128|0);
        HEAPF64[$5282>>3] = $5280;
        $5283 = HEAP8[$27>>0]|0;
        $5284 = HEAP32[$vinfos174>>2]|0;
        $5285 = ((($5284)) + 139|0);
        HEAP8[$5285>>0] = $5283;
        $5286 = HEAP8[$28>>0]|0;
        $5287 = HEAP32[$vinfos174>>2]|0;
        $5288 = ((($5287)) + 140|0);
        HEAP8[$5288>>0] = $5286;
        $5289 = HEAP8[$26>>0]|0;
        $5290 = HEAP32[$vinfos174>>2]|0;
        $5291 = ((($5290)) + 138|0);
        HEAP8[$5291>>0] = $5289;
        $5292 = HEAP32[$vinfos174>>2]|0;
        $5293 = ((($5292)) + 161|0);
        HEAP8[$5293>>0] = 1;
        $5294 = +HEAPF64[$359>>3];
        $5295 = HEAP32[$vinfos174>>2]|0;
        $5296 = ((($5295)) + 152|0);
        HEAPF64[$5296>>3] = $5294;
        $5297 = HEAP8[$357>>0]|0;
        $5298 = HEAP32[$vinfos174>>2]|0;
        $5299 = ((($5298)) + 163|0);
        HEAP8[$5299>>0] = $5297;
        $5300 = HEAP8[$358>>0]|0;
        $5301 = HEAP32[$vinfos174>>2]|0;
        $5302 = ((($5301)) + 164|0);
        HEAP8[$5302>>0] = $5300;
        $5303 = HEAP8[$354>>0]|0;
        $5304 = HEAP32[$vinfos174>>2]|0;
        $5305 = ((($5304)) + 162|0);
        HEAP8[$5305>>0] = $5303;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree175,0);
        $5306 = HEAP32[$solutions>>2]|0;
        $5307 = ((($5306)) + 8|0);
        $5308 = HEAP32[$5307>>2]|0;
        (FUNCTION_TABLE_iiii[$5308 & 31]($solutions,$vinfos174,$vfree175)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree175);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos174);
        break L7;
       }
      } while(0);
      $5309 = +HEAPF64[$25>>3];
      $5310 = +HEAPF64[$30>>3];
      $5311 = +HEAPF64[$31>>3];
      $5312 = +HEAPF64[$351>>3];
      $5313 = $5312 + 1.5707963267949001;
      $5314 = (+__Z5IKabsd($5313));
      $5315 = $5314 + 3.14159265358979;
      $5316 = (+__Z6IKfmoddd($5315,6.2831853071795898));
      $5317 = $5316 + -3.14159265358979;
      $5318 = +HEAPF64[$19>>3];
      $5319 = +HEAPF64[$22>>3];
      $5320 = $5311 + $5319;
      $5321 = -$5319;
      $5322 = $5321 - $5311;
      $5323 = $5310 * $5321;
      $5324 = -$5309;
      $5325 = $5311 * $5324;
      $5326 = $5325 + $5323;
      $5327 = +HEAPF64[$20>>3];
      $5328 = $5311 * $5327;
      $5329 = +HEAPF64[$23>>3];
      $5330 = $5310 * $5329;
      $5331 = $5328 - $5330;
      $5332 = +HEAPF64[$21>>3];
      $5333 = $5311 * $5332;
      $5334 = +HEAPF64[$24>>3];
      $5335 = $5310 * $5334;
      $5336 = $5333 - $5335;
      $5337 = $5311 * $5319;
      $5338 = $5337 + 1.0;
      $5339 = $5310 * $5324;
      $5340 = $5339 + $5338;
      $5341 = (+__Z5IKabsd($5317));
      $5342 = $5341 < 9.9999999999999995E-7;
      do {
       if ($5342) {
        $5343 = $5309 - $5310;
        $5344 = (+__Z5IKabsd($5343));
        $5345 = $5344 < 9.9999999999999995E-7;
        if (!($5345)) {
         break;
        }
        $5346 = (+__Z5IKabsd($5318));
        $5347 = $5346 < 9.9999999999999995E-7;
        if (!($5347)) {
         break;
        }
        $5348 = (+__Z5IKabsd($5320));
        $5349 = $5348 < 9.9999999999999995E-7;
        if (!($5349)) {
         break;
        }
        $5350 = (+__Z5IKabsd($5322));
        $5351 = $5350 < 9.9999999999999995E-7;
        if (!($5351)) {
         break;
        }
        $5352 = (+__Z5IKabsd($5326));
        $5353 = $5352 < 9.9999999999999995E-7;
        if (!($5353)) {
         break;
        }
        $5354 = (+__Z5IKabsd($5331));
        $5355 = $5354 < 9.9999999999999995E-7;
        if (!($5355)) {
         break;
        }
        $5356 = (+__Z5IKabsd($5336));
        $5357 = $5356 < 9.9999999999999995E-7;
        if (!($5357)) {
         break;
        }
        $5358 = (+__Z5IKabsd($5340));
        $5359 = $5358 < 9.9999999999999995E-7;
        if (!($5359)) {
         break;
        }
        HEAP8[$377>>0] = 1;
        $5360 = +HEAPF64[$11>>3];
        $5361 = (+__Z5IKabsd($5360));
        $5362 = $5361 < 1.9999999999999999E-6;
        do {
         if ($5362) {
          $5363 = +HEAPF64[$15>>3];
          $5364 = (+__Z5IKabsd($5363));
          $5365 = $5364 < 1.9999999999999999E-6;
          if (!($5365)) {
           break;
          }
          $5366 = (+__Z5IKsqrd($5360));
          $5367 = (+__Z5IKsqrd($5363));
          $5368 = $5366 + $5367;
          $5369 = $5368 + -1.0;
          $5370 = (+__Z5IKabsd($5369));
          $5371 = !($5370 <= 1.9999999999999999E-6);
          if (!($5371)) {
           break L7;
          }
         }
        } while(0);
        $5372 = +HEAPF64[$11>>3];
        $5373 = +HEAPF64[$15>>3];
        $5374 = (+__Z7IKatan2dd($5372,$5373));
        $5375 = (+__Z5IKsind($5374));
        $5376 = (+__Z5IKcosd($5374));
        $5377 = $5374 > 3.14159265358979;
        do {
         if ($5377) {
          $5378 = $5374 + -6.2831853071795898;
          $5381 = $5378;
         } else {
          $5379 = $5374 < -3.14159265358979;
          if (!($5379)) {
           $5381 = $5374;
           break;
          }
          $5380 = $5374 + 6.2831853071795898;
          $5381 = $5380;
         }
        } while(0);
        HEAP8[$378>>0] = 0;
        HEAP8[$379>>0] = -1;
        HEAPF64[$380>>3] = $5381;
        HEAPF64[$381>>3] = $5376;
        HEAPF64[$382>>3] = $5375;
        $5382 = +HEAPF64[$380>>3];
        $5383 = (+__Z5IKsind($5382));
        $5384 = (+__Z5IKcosd($5382));
        $5385 = +HEAPF64[$21>>3];
        $5386 = +HEAPF64[$20>>3];
        $5387 = +HEAPF64[$22>>3];
        $5388 = $5383 * $5387;
        $5389 = +HEAPF64[$24>>3];
        $5390 = $5388 + $5389;
        $5391 = +HEAPF64[$15>>3];
        $5392 = $5391 - $5384;
        $5393 = $5384 * $5387;
        $5394 = +HEAPF64[$23>>3];
        $5395 = $5394 - $5393;
        $5396 = +HEAPF64[$25>>3];
        $5397 = $5383 * $5396;
        $5398 = $5397 - $5385;
        $5399 = -$5396;
        $5400 = $5384 * $5399;
        $5401 = $5400 - $5386;
        $5402 = $5387 * $5389;
        $5403 = $5383 + $5402;
        $5404 = $5385 * $5399;
        $5405 = $5403 + $5404;
        $5406 = $5387 * $5394;
        $5407 = $5406 - $5384;
        $5408 = $5386 * $5399;
        $5409 = $5407 + $5408;
        $5410 = (+__Z5IKabsd($5390));
        $5411 = $5410 > 5.0000000000000004E-6;
        if ($5411) {
         break L7;
        }
        $5412 = +HEAPF64[$11>>3];
        $5413 = $5412 - $5383;
        $5414 = (+__Z5IKabsd($5413));
        $5415 = $5414 > 5.0000000000000004E-6;
        if ($5415) {
         break L7;
        }
        $5416 = (+__Z5IKabsd($5392));
        $5417 = $5416 > 5.0000000000000004E-6;
        if ($5417) {
         break L7;
        }
        $5418 = (+__Z5IKabsd($5395));
        $5419 = $5418 > 5.0000000000000004E-6;
        if ($5419) {
         break L7;
        }
        $5420 = (+__Z5IKabsd($5398));
        $5421 = $5420 > 5.0000000000000004E-6;
        if ($5421) {
         break L7;
        }
        $5422 = (+__Z5IKabsd($5401));
        $5423 = $5422 > 5.0000000000000004E-6;
        if ($5423) {
         break L7;
        }
        $5424 = (+__Z5IKabsd($5405));
        $5425 = $5424 > 5.0000000000000004E-6;
        if ($5425) {
         break L7;
        }
        $5426 = (+__Z5IKabsd($5409));
        $5427 = $5426 > 5.0000000000000004E-6;
        if ($5427) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos185,7);
        $5428 = HEAP32[$vinfos185>>2]|0;
        $5429 = ((($5428)) + 17|0);
        HEAP8[$5429>>0] = 1;
        $5430 = +HEAPF64[$this>>3];
        $5431 = HEAP32[$vinfos185>>2]|0;
        $5432 = ((($5431)) + 8|0);
        HEAPF64[$5432>>3] = $5430;
        $5433 = HEAP8[$383>>0]|0;
        $5434 = HEAP32[$vinfos185>>2]|0;
        $5435 = ((($5434)) + 19|0);
        HEAP8[$5435>>0] = $5433;
        $5436 = HEAP8[$384>>0]|0;
        $5437 = HEAP32[$vinfos185>>2]|0;
        $5438 = ((($5437)) + 20|0);
        HEAP8[$5438>>0] = $5436;
        $5439 = HEAP8[$385>>0]|0;
        $5440 = HEAP32[$vinfos185>>2]|0;
        $5441 = ((($5440)) + 18|0);
        HEAP8[$5441>>0] = $5439;
        $5442 = HEAP32[$vinfos185>>2]|0;
        $5443 = ((($5442)) + 41|0);
        HEAP8[$5443>>0] = 1;
        $5444 = +HEAPF64[$386>>3];
        $5445 = HEAP32[$vinfos185>>2]|0;
        $5446 = ((($5445)) + 32|0);
        HEAPF64[$5446>>3] = $5444;
        $5447 = HEAP8[$387>>0]|0;
        $5448 = HEAP32[$vinfos185>>2]|0;
        $5449 = ((($5448)) + 43|0);
        HEAP8[$5449>>0] = $5447;
        $5450 = HEAP8[$388>>0]|0;
        $5451 = HEAP32[$vinfos185>>2]|0;
        $5452 = ((($5451)) + 44|0);
        HEAP8[$5452>>0] = $5450;
        $5453 = HEAP8[$389>>0]|0;
        $5454 = HEAP32[$vinfos185>>2]|0;
        $5455 = ((($5454)) + 42|0);
        HEAP8[$5455>>0] = $5453;
        $5456 = HEAP32[$vinfos185>>2]|0;
        $5457 = ((($5456)) + 65|0);
        HEAP8[$5457>>0] = 1;
        $5458 = +HEAPF64[$390>>3];
        $5459 = HEAP32[$vinfos185>>2]|0;
        $5460 = ((($5459)) + 56|0);
        HEAPF64[$5460>>3] = $5458;
        $5461 = HEAP8[$391>>0]|0;
        $5462 = HEAP32[$vinfos185>>2]|0;
        $5463 = ((($5462)) + 67|0);
        HEAP8[$5463>>0] = $5461;
        $5464 = HEAP8[$392>>0]|0;
        $5465 = HEAP32[$vinfos185>>2]|0;
        $5466 = ((($5465)) + 68|0);
        HEAP8[$5466>>0] = $5464;
        $5467 = HEAP8[$393>>0]|0;
        $5468 = HEAP32[$vinfos185>>2]|0;
        $5469 = ((($5468)) + 66|0);
        HEAP8[$5469>>0] = $5467;
        $5470 = HEAP32[$vinfos185>>2]|0;
        $5471 = ((($5470)) + 89|0);
        HEAP8[$5471>>0] = 1;
        $5472 = +HEAPF64[$394>>3];
        $5473 = HEAP32[$vinfos185>>2]|0;
        $5474 = ((($5473)) + 80|0);
        HEAPF64[$5474>>3] = $5472;
        $5475 = HEAP8[$395>>0]|0;
        $5476 = HEAP32[$vinfos185>>2]|0;
        $5477 = ((($5476)) + 91|0);
        HEAP8[$5477>>0] = $5475;
        $5478 = HEAP8[$396>>0]|0;
        $5479 = HEAP32[$vinfos185>>2]|0;
        $5480 = ((($5479)) + 92|0);
        HEAP8[$5480>>0] = $5478;
        $5481 = HEAP8[$397>>0]|0;
        $5482 = HEAP32[$vinfos185>>2]|0;
        $5483 = ((($5482)) + 90|0);
        HEAP8[$5483>>0] = $5481;
        $5484 = HEAP32[$vinfos185>>2]|0;
        $5485 = ((($5484)) + 113|0);
        HEAP8[$5485>>0] = 1;
        $5486 = +HEAPF64[$351>>3];
        $5487 = HEAP32[$vinfos185>>2]|0;
        $5488 = ((($5487)) + 104|0);
        HEAPF64[$5488>>3] = $5486;
        $5489 = HEAP8[$349>>0]|0;
        $5490 = HEAP32[$vinfos185>>2]|0;
        $5491 = ((($5490)) + 115|0);
        HEAP8[$5491>>0] = $5489;
        $5492 = HEAP8[$350>>0]|0;
        $5493 = HEAP32[$vinfos185>>2]|0;
        $5494 = ((($5493)) + 116|0);
        HEAP8[$5494>>0] = $5492;
        $5495 = HEAP8[$346>>0]|0;
        $5496 = HEAP32[$vinfos185>>2]|0;
        $5497 = ((($5496)) + 114|0);
        HEAP8[$5497>>0] = $5495;
        $5498 = HEAP32[$vinfos185>>2]|0;
        $5499 = ((($5498)) + 137|0);
        HEAP8[$5499>>0] = 1;
        $5500 = +HEAPF64[$29>>3];
        $5501 = HEAP32[$vinfos185>>2]|0;
        $5502 = ((($5501)) + 128|0);
        HEAPF64[$5502>>3] = $5500;
        $5503 = HEAP8[$27>>0]|0;
        $5504 = HEAP32[$vinfos185>>2]|0;
        $5505 = ((($5504)) + 139|0);
        HEAP8[$5505>>0] = $5503;
        $5506 = HEAP8[$28>>0]|0;
        $5507 = HEAP32[$vinfos185>>2]|0;
        $5508 = ((($5507)) + 140|0);
        HEAP8[$5508>>0] = $5506;
        $5509 = HEAP8[$26>>0]|0;
        $5510 = HEAP32[$vinfos185>>2]|0;
        $5511 = ((($5510)) + 138|0);
        HEAP8[$5511>>0] = $5509;
        $5512 = HEAP32[$vinfos185>>2]|0;
        $5513 = ((($5512)) + 161|0);
        HEAP8[$5513>>0] = 1;
        $5514 = +HEAPF64[$380>>3];
        $5515 = HEAP32[$vinfos185>>2]|0;
        $5516 = ((($5515)) + 152|0);
        HEAPF64[$5516>>3] = $5514;
        $5517 = HEAP8[$378>>0]|0;
        $5518 = HEAP32[$vinfos185>>2]|0;
        $5519 = ((($5518)) + 163|0);
        HEAP8[$5519>>0] = $5517;
        $5520 = HEAP8[$379>>0]|0;
        $5521 = HEAP32[$vinfos185>>2]|0;
        $5522 = ((($5521)) + 164|0);
        HEAP8[$5522>>0] = $5520;
        $5523 = HEAP8[$377>>0]|0;
        $5524 = HEAP32[$vinfos185>>2]|0;
        $5525 = ((($5524)) + 162|0);
        HEAP8[$5525>>0] = $5523;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree186,0);
        $5526 = HEAP32[$solutions>>2]|0;
        $5527 = ((($5526)) + 8|0);
        $5528 = HEAP32[$5527>>2]|0;
        (FUNCTION_TABLE_iiii[$5528 & 31]($solutions,$vinfos185,$vfree186)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree186);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos185);
        break L7;
       }
      } while(0);
      $5529 = +HEAPF64[$353>>3];
      $5530 = +HEAPF64[$352>>3];
      $5531 = +HEAPF64[$19>>3];
      $5532 = $5529 * $5531;
      $5533 = +HEAPF64[$22>>3];
      $5534 = $5530 * $5533;
      $5535 = $5534 - $5532;
      $5536 = +HEAPF64[$29>>3];
      $5537 = $5536 + -1.5707963267949001;
      $5538 = (+__Z5IKabsd($5537));
      $5539 = $5538 + 3.14159265358979;
      $5540 = (+__Z6IKfmoddd($5539,6.2831853071795898));
      $5541 = $5540 + -3.14159265358979;
      $5542 = $5531 - $5530;
      $5543 = $5533 - $5529;
      $5544 = $5529 * $5533;
      $5545 = $5544 + -1.0;
      $5546 = $5530 * $5531;
      $5547 = $5546 + $5545;
      $5548 = +HEAPF64[$21>>3];
      $5549 = $5529 * $5548;
      $5550 = +HEAPF64[$15>>3];
      $5551 = $5530 * $5550;
      $5552 = $5549 + $5551;
      $5553 = +HEAPF64[$20>>3];
      $5554 = $5529 * $5553;
      $5555 = +HEAPF64[$11>>3];
      $5556 = $5530 * $5555;
      $5557 = $5554 + $5556;
      $5558 = -$5556;
      $5559 = $5558 - $5554;
      $5560 = -$5551;
      $5561 = $5560 - $5549;
      $5562 = 1.0 - $5546;
      $5563 = $5562 - $5544;
      $5564 = (+__Z5IKabsd($5541));
      $5565 = $5564 < 9.9999999999999995E-7;
      do {
       if ($5565) {
        $5566 = +HEAPF64[$25>>3];
        $5567 = (+__Z5IKabsd($5566));
        $5568 = $5567 < 9.9999999999999995E-7;
        if (!($5568)) {
         break;
        }
        $5569 = (+__Z5IKabsd($5542));
        $5570 = $5569 < 9.9999999999999995E-7;
        if (!($5570)) {
         break;
        }
        $5571 = (+__Z5IKabsd($5543));
        $5572 = $5571 < 9.9999999999999995E-7;
        if (!($5572)) {
         break;
        }
        $5573 = (+__Z5IKabsd($5535));
        $5574 = $5573 < 9.9999999999999995E-7;
        if (!($5574)) {
         break;
        }
        $5575 = (+__Z5IKabsd($5547));
        $5576 = $5575 < 9.9999999999999995E-7;
        if (!($5576)) {
         break;
        }
        $5577 = (+__Z5IKabsd($5552));
        $5578 = $5577 < 9.9999999999999995E-7;
        if (!($5578)) {
         break;
        }
        $5579 = (+__Z5IKabsd($5557));
        $5580 = $5579 < 9.9999999999999995E-7;
        if (!($5580)) {
         break;
        }
        $5581 = (+__Z5IKabsd($5559));
        $5582 = $5581 < 9.9999999999999995E-7;
        if (!($5582)) {
         break;
        }
        $5583 = (+__Z5IKabsd($5561));
        $5584 = $5583 < 9.9999999999999995E-7;
        if (!($5584)) {
         break;
        }
        $5585 = (+__Z5IKabsd($5563));
        $5586 = $5585 < 9.9999999999999995E-7;
        if (!($5586)) {
         break;
        }
        HEAP8[$398>>0] = 1;
        $5587 = +HEAPF64[$24>>3];
        $5588 = (+__Z5IKabsd($5587));
        $5589 = $5588 < 1.9999999999999999E-6;
        do {
         if ($5589) {
          $5590 = +HEAPF64[$23>>3];
          $5591 = -$5590;
          $5592 = (+__Z5IKabsd($5591));
          $5593 = $5592 < 1.9999999999999999E-6;
          if (!($5593)) {
           break;
          }
          $5594 = (+__Z5IKsqrd($5587));
          $5595 = (+__Z5IKsqrd($5591));
          $5596 = $5594 + $5595;
          $5597 = $5596 + -1.0;
          $5598 = (+__Z5IKabsd($5597));
          $5599 = !($5598 <= 1.9999999999999999E-6);
          if (!($5599)) {
           break L7;
          }
         }
        } while(0);
        $5600 = +HEAPF64[$24>>3];
        $5601 = +HEAPF64[$23>>3];
        $5602 = -$5601;
        $5603 = (+__Z7IKatan2dd($5600,$5602));
        $5604 = (+__Z5IKsind($5603));
        $5605 = (+__Z5IKcosd($5603));
        $5606 = $5603 > 3.14159265358979;
        do {
         if ($5606) {
          $5607 = $5603 + -6.2831853071795898;
          $5610 = $5607;
         } else {
          $5608 = $5603 < -3.14159265358979;
          if (!($5608)) {
           $5610 = $5603;
           break;
          }
          $5609 = $5603 + 6.2831853071795898;
          $5610 = $5609;
         }
        } while(0);
        HEAP8[$399>>0] = 0;
        HEAP8[$400>>0] = -1;
        HEAPF64[$401>>3] = $5610;
        HEAPF64[$402>>3] = $5605;
        HEAPF64[$403>>3] = $5604;
        $5611 = +HEAPF64[$401>>3];
        $5612 = (+__Z5IKcosd($5611));
        $5613 = (+__Z5IKsind($5611));
        $5614 = +HEAPF64[$22>>3];
        $5615 = +HEAPF64[$23>>3];
        $5616 = $5612 + $5615;
        $5617 = $5612 * $5614;
        $5618 = +HEAPF64[$15>>3];
        $5619 = $5617 + $5618;
        $5620 = $5613 * $5614;
        $5621 = +HEAPF64[$11>>3];
        $5622 = $5620 + $5621;
        $5623 = +HEAPF64[$19>>3];
        $5624 = -$5623;
        $5625 = $5612 * $5624;
        $5626 = +HEAPF64[$21>>3];
        $5627 = $5625 + $5626;
        $5628 = $5613 * $5624;
        $5629 = +HEAPF64[$20>>3];
        $5630 = $5628 + $5629;
        $5631 = $5614 * $5621;
        $5632 = $5623 * $5629;
        $5633 = $5632 - $5631;
        $5634 = $5633 - $5613;
        $5635 = $5614 * $5618;
        $5636 = $5623 * $5626;
        $5637 = $5636 - $5635;
        $5638 = $5637 - $5612;
        $5639 = (+__Z5IKabsd($5616));
        $5640 = $5639 > 5.0000000000000004E-6;
        if ($5640) {
         break L7;
        }
        $5641 = +HEAPF64[$24>>3];
        $5642 = $5641 - $5613;
        $5643 = (+__Z5IKabsd($5642));
        $5644 = $5643 > 5.0000000000000004E-6;
        if ($5644) {
         break L7;
        }
        $5645 = (+__Z5IKabsd($5619));
        $5646 = $5645 > 5.0000000000000004E-6;
        if ($5646) {
         break L7;
        }
        $5647 = (+__Z5IKabsd($5622));
        $5648 = $5647 > 5.0000000000000004E-6;
        if ($5648) {
         break L7;
        }
        $5649 = (+__Z5IKabsd($5627));
        $5650 = $5649 > 5.0000000000000004E-6;
        if ($5650) {
         break L7;
        }
        $5651 = (+__Z5IKabsd($5630));
        $5652 = $5651 > 5.0000000000000004E-6;
        if ($5652) {
         break L7;
        }
        $5653 = (+__Z5IKabsd($5634));
        $5654 = $5653 > 5.0000000000000004E-6;
        if ($5654) {
         break L7;
        }
        $5655 = (+__Z5IKabsd($5638));
        $5656 = $5655 > 5.0000000000000004E-6;
        if ($5656) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos196,7);
        $5657 = HEAP32[$vinfos196>>2]|0;
        $5658 = ((($5657)) + 17|0);
        HEAP8[$5658>>0] = 1;
        $5659 = +HEAPF64[$this>>3];
        $5660 = HEAP32[$vinfos196>>2]|0;
        $5661 = ((($5660)) + 8|0);
        HEAPF64[$5661>>3] = $5659;
        $5662 = HEAP8[$404>>0]|0;
        $5663 = HEAP32[$vinfos196>>2]|0;
        $5664 = ((($5663)) + 19|0);
        HEAP8[$5664>>0] = $5662;
        $5665 = HEAP8[$405>>0]|0;
        $5666 = HEAP32[$vinfos196>>2]|0;
        $5667 = ((($5666)) + 20|0);
        HEAP8[$5667>>0] = $5665;
        $5668 = HEAP8[$406>>0]|0;
        $5669 = HEAP32[$vinfos196>>2]|0;
        $5670 = ((($5669)) + 18|0);
        HEAP8[$5670>>0] = $5668;
        $5671 = HEAP32[$vinfos196>>2]|0;
        $5672 = ((($5671)) + 41|0);
        HEAP8[$5672>>0] = 1;
        $5673 = +HEAPF64[$407>>3];
        $5674 = HEAP32[$vinfos196>>2]|0;
        $5675 = ((($5674)) + 32|0);
        HEAPF64[$5675>>3] = $5673;
        $5676 = HEAP8[$408>>0]|0;
        $5677 = HEAP32[$vinfos196>>2]|0;
        $5678 = ((($5677)) + 43|0);
        HEAP8[$5678>>0] = $5676;
        $5679 = HEAP8[$409>>0]|0;
        $5680 = HEAP32[$vinfos196>>2]|0;
        $5681 = ((($5680)) + 44|0);
        HEAP8[$5681>>0] = $5679;
        $5682 = HEAP8[$410>>0]|0;
        $5683 = HEAP32[$vinfos196>>2]|0;
        $5684 = ((($5683)) + 42|0);
        HEAP8[$5684>>0] = $5682;
        $5685 = HEAP32[$vinfos196>>2]|0;
        $5686 = ((($5685)) + 65|0);
        HEAP8[$5686>>0] = 1;
        $5687 = +HEAPF64[$411>>3];
        $5688 = HEAP32[$vinfos196>>2]|0;
        $5689 = ((($5688)) + 56|0);
        HEAPF64[$5689>>3] = $5687;
        $5690 = HEAP8[$412>>0]|0;
        $5691 = HEAP32[$vinfos196>>2]|0;
        $5692 = ((($5691)) + 67|0);
        HEAP8[$5692>>0] = $5690;
        $5693 = HEAP8[$413>>0]|0;
        $5694 = HEAP32[$vinfos196>>2]|0;
        $5695 = ((($5694)) + 68|0);
        HEAP8[$5695>>0] = $5693;
        $5696 = HEAP8[$414>>0]|0;
        $5697 = HEAP32[$vinfos196>>2]|0;
        $5698 = ((($5697)) + 66|0);
        HEAP8[$5698>>0] = $5696;
        $5699 = HEAP32[$vinfos196>>2]|0;
        $5700 = ((($5699)) + 89|0);
        HEAP8[$5700>>0] = 1;
        $5701 = +HEAPF64[$415>>3];
        $5702 = HEAP32[$vinfos196>>2]|0;
        $5703 = ((($5702)) + 80|0);
        HEAPF64[$5703>>3] = $5701;
        $5704 = HEAP8[$416>>0]|0;
        $5705 = HEAP32[$vinfos196>>2]|0;
        $5706 = ((($5705)) + 91|0);
        HEAP8[$5706>>0] = $5704;
        $5707 = HEAP8[$417>>0]|0;
        $5708 = HEAP32[$vinfos196>>2]|0;
        $5709 = ((($5708)) + 92|0);
        HEAP8[$5709>>0] = $5707;
        $5710 = HEAP8[$418>>0]|0;
        $5711 = HEAP32[$vinfos196>>2]|0;
        $5712 = ((($5711)) + 90|0);
        HEAP8[$5712>>0] = $5710;
        $5713 = HEAP32[$vinfos196>>2]|0;
        $5714 = ((($5713)) + 113|0);
        HEAP8[$5714>>0] = 1;
        $5715 = +HEAPF64[$351>>3];
        $5716 = HEAP32[$vinfos196>>2]|0;
        $5717 = ((($5716)) + 104|0);
        HEAPF64[$5717>>3] = $5715;
        $5718 = HEAP8[$349>>0]|0;
        $5719 = HEAP32[$vinfos196>>2]|0;
        $5720 = ((($5719)) + 115|0);
        HEAP8[$5720>>0] = $5718;
        $5721 = HEAP8[$350>>0]|0;
        $5722 = HEAP32[$vinfos196>>2]|0;
        $5723 = ((($5722)) + 116|0);
        HEAP8[$5723>>0] = $5721;
        $5724 = HEAP8[$346>>0]|0;
        $5725 = HEAP32[$vinfos196>>2]|0;
        $5726 = ((($5725)) + 114|0);
        HEAP8[$5726>>0] = $5724;
        $5727 = HEAP32[$vinfos196>>2]|0;
        $5728 = ((($5727)) + 137|0);
        HEAP8[$5728>>0] = 1;
        $5729 = +HEAPF64[$29>>3];
        $5730 = HEAP32[$vinfos196>>2]|0;
        $5731 = ((($5730)) + 128|0);
        HEAPF64[$5731>>3] = $5729;
        $5732 = HEAP8[$27>>0]|0;
        $5733 = HEAP32[$vinfos196>>2]|0;
        $5734 = ((($5733)) + 139|0);
        HEAP8[$5734>>0] = $5732;
        $5735 = HEAP8[$28>>0]|0;
        $5736 = HEAP32[$vinfos196>>2]|0;
        $5737 = ((($5736)) + 140|0);
        HEAP8[$5737>>0] = $5735;
        $5738 = HEAP8[$26>>0]|0;
        $5739 = HEAP32[$vinfos196>>2]|0;
        $5740 = ((($5739)) + 138|0);
        HEAP8[$5740>>0] = $5738;
        $5741 = HEAP32[$vinfos196>>2]|0;
        $5742 = ((($5741)) + 161|0);
        HEAP8[$5742>>0] = 1;
        $5743 = +HEAPF64[$401>>3];
        $5744 = HEAP32[$vinfos196>>2]|0;
        $5745 = ((($5744)) + 152|0);
        HEAPF64[$5745>>3] = $5743;
        $5746 = HEAP8[$399>>0]|0;
        $5747 = HEAP32[$vinfos196>>2]|0;
        $5748 = ((($5747)) + 163|0);
        HEAP8[$5748>>0] = $5746;
        $5749 = HEAP8[$400>>0]|0;
        $5750 = HEAP32[$vinfos196>>2]|0;
        $5751 = ((($5750)) + 164|0);
        HEAP8[$5751>>0] = $5749;
        $5752 = HEAP8[$398>>0]|0;
        $5753 = HEAP32[$vinfos196>>2]|0;
        $5754 = ((($5753)) + 162|0);
        HEAP8[$5754>>0] = $5752;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree197,0);
        $5755 = HEAP32[$solutions>>2]|0;
        $5756 = ((($5755)) + 8|0);
        $5757 = HEAP32[$5756>>2]|0;
        (FUNCTION_TABLE_iiii[$5757 & 31]($solutions,$vinfos196,$vfree197)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree197);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos196);
        break L7;
       }
      } while(0);
      $5758 = +HEAPF64[$19>>3];
      $5759 = +HEAPF64[$353>>3];
      $5760 = $5758 * $5759;
      $5761 = +HEAPF64[$352>>3];
      $5762 = +HEAPF64[$22>>3];
      $5763 = $5761 * $5762;
      $5764 = $5763 - $5760;
      $5765 = +HEAPF64[$20>>3];
      $5766 = $5759 * $5765;
      $5767 = +HEAPF64[$11>>3];
      $5768 = $5761 * $5767;
      $5769 = $5766 + $5768;
      $5770 = +HEAPF64[$21>>3];
      $5771 = $5759 * $5770;
      $5772 = +HEAPF64[$15>>3];
      $5773 = $5761 * $5772;
      $5774 = $5771 + $5773;
      $5775 = $5759 * $5762;
      $5776 = $5775 + 1.0;
      $5777 = $5758 * $5761;
      $5778 = $5777 + $5776;
      $5779 = +HEAPF64[$29>>3];
      $5780 = $5779 + 1.5707963267949001;
      $5781 = (+__Z5IKabsd($5780));
      $5782 = $5781 + 3.14159265358979;
      $5783 = (+__Z6IKfmoddd($5782,6.2831853071795898));
      $5784 = $5783 + -3.14159265358979;
      $5785 = $5758 + $5761;
      $5786 = $5759 + $5762;
      $5787 = (+__Z5IKabsd($5784));
      $5788 = $5787 < 9.9999999999999995E-7;
      do {
       if ($5788) {
        $5789 = +HEAPF64[$25>>3];
        $5790 = (+__Z5IKabsd($5789));
        $5791 = $5790 < 9.9999999999999995E-7;
        if (!($5791)) {
         break;
        }
        $5792 = (+__Z5IKabsd($5785));
        $5793 = $5792 < 9.9999999999999995E-7;
        if (!($5793)) {
         break;
        }
        $5794 = (+__Z5IKabsd($5786));
        $5795 = $5794 < 9.9999999999999995E-7;
        if (!($5795)) {
         break;
        }
        $5796 = (+__Z5IKabsd($5764));
        $5797 = $5796 < 9.9999999999999995E-7;
        if (!($5797)) {
         break;
        }
        $5798 = (+__Z5IKabsd($5778));
        $5799 = $5798 < 9.9999999999999995E-7;
        if (!($5799)) {
         break;
        }
        $5800 = (+__Z5IKabsd($5774));
        $5801 = $5800 < 9.9999999999999995E-7;
        if (!($5801)) {
         break;
        }
        $5802 = (+__Z5IKabsd($5769));
        $5803 = $5802 < 9.9999999999999995E-7;
        if (!($5803)) {
         break;
        }
        HEAP8[$419>>0] = 1;
        $5804 = +HEAPF64[$24>>3];
        $5805 = -$5804;
        $5806 = (+__Z5IKabsd($5805));
        $5807 = $5806 < 1.9999999999999999E-6;
        do {
         if ($5807) {
          $5808 = +HEAPF64[$23>>3];
          $5809 = (+__Z5IKabsd($5808));
          $5810 = $5809 < 1.9999999999999999E-6;
          if (!($5810)) {
           break;
          }
          $5811 = (+__Z5IKsqrd($5805));
          $5812 = (+__Z5IKsqrd($5808));
          $5813 = $5811 + $5812;
          $5814 = $5813 + -1.0;
          $5815 = (+__Z5IKabsd($5814));
          $5816 = !($5815 <= 1.9999999999999999E-6);
          if (!($5816)) {
           break L7;
          }
         }
        } while(0);
        $5817 = +HEAPF64[$24>>3];
        $5818 = -$5817;
        $5819 = +HEAPF64[$23>>3];
        $5820 = (+__Z7IKatan2dd($5818,$5819));
        $5821 = (+__Z5IKsind($5820));
        $5822 = (+__Z5IKcosd($5820));
        $5823 = $5820 > 3.14159265358979;
        do {
         if ($5823) {
          $5824 = $5820 + -6.2831853071795898;
          $5827 = $5824;
         } else {
          $5825 = $5820 < -3.14159265358979;
          if (!($5825)) {
           $5827 = $5820;
           break;
          }
          $5826 = $5820 + 6.2831853071795898;
          $5827 = $5826;
         }
        } while(0);
        HEAP8[$420>>0] = 0;
        HEAP8[$421>>0] = -1;
        HEAPF64[$422>>3] = $5827;
        HEAPF64[$423>>3] = $5822;
        HEAPF64[$424>>3] = $5821;
        $5828 = +HEAPF64[$422>>3];
        $5829 = (+__Z5IKcosd($5828));
        $5830 = (+__Z5IKsind($5828));
        $5831 = +HEAPF64[$19>>3];
        $5832 = +HEAPF64[$24>>3];
        $5833 = $5830 + $5832;
        $5834 = $5829 * $5831;
        $5835 = +HEAPF64[$21>>3];
        $5836 = $5834 + $5835;
        $5837 = $5830 * $5831;
        $5838 = +HEAPF64[$20>>3];
        $5839 = $5837 + $5838;
        $5840 = +HEAPF64[$22>>3];
        $5841 = -$5840;
        $5842 = $5829 * $5841;
        $5843 = +HEAPF64[$15>>3];
        $5844 = $5842 + $5843;
        $5845 = $5830 * $5841;
        $5846 = +HEAPF64[$11>>3];
        $5847 = $5845 + $5846;
        $5848 = $5831 * $5838;
        $5849 = -$5830;
        $5850 = $5849 - $5848;
        $5851 = $5840 * $5846;
        $5852 = $5850 + $5851;
        $5853 = $5840 * $5843;
        $5854 = $5853 - $5829;
        $5855 = $5831 * $5835;
        $5856 = $5854 - $5855;
        $5857 = (+__Z5IKabsd($5833));
        $5858 = $5857 > 5.0000000000000004E-6;
        if ($5858) {
         break L7;
        }
        $5859 = +HEAPF64[$23>>3];
        $5860 = $5859 - $5829;
        $5861 = (+__Z5IKabsd($5860));
        $5862 = $5861 > 5.0000000000000004E-6;
        if ($5862) {
         break L7;
        }
        $5863 = (+__Z5IKabsd($5836));
        $5864 = $5863 > 5.0000000000000004E-6;
        if ($5864) {
         break L7;
        }
        $5865 = (+__Z5IKabsd($5839));
        $5866 = $5865 > 5.0000000000000004E-6;
        if ($5866) {
         break L7;
        }
        $5867 = (+__Z5IKabsd($5844));
        $5868 = $5867 > 5.0000000000000004E-6;
        if ($5868) {
         break L7;
        }
        $5869 = (+__Z5IKabsd($5847));
        $5870 = $5869 > 5.0000000000000004E-6;
        if ($5870) {
         break L7;
        }
        $5871 = (+__Z5IKabsd($5852));
        $5872 = $5871 > 5.0000000000000004E-6;
        if ($5872) {
         break L7;
        }
        $5873 = (+__Z5IKabsd($5856));
        $5874 = $5873 > 5.0000000000000004E-6;
        if ($5874) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos207,7);
        $5875 = HEAP32[$vinfos207>>2]|0;
        $5876 = ((($5875)) + 17|0);
        HEAP8[$5876>>0] = 1;
        $5877 = +HEAPF64[$this>>3];
        $5878 = HEAP32[$vinfos207>>2]|0;
        $5879 = ((($5878)) + 8|0);
        HEAPF64[$5879>>3] = $5877;
        $5880 = HEAP8[$425>>0]|0;
        $5881 = HEAP32[$vinfos207>>2]|0;
        $5882 = ((($5881)) + 19|0);
        HEAP8[$5882>>0] = $5880;
        $5883 = HEAP8[$426>>0]|0;
        $5884 = HEAP32[$vinfos207>>2]|0;
        $5885 = ((($5884)) + 20|0);
        HEAP8[$5885>>0] = $5883;
        $5886 = HEAP8[$427>>0]|0;
        $5887 = HEAP32[$vinfos207>>2]|0;
        $5888 = ((($5887)) + 18|0);
        HEAP8[$5888>>0] = $5886;
        $5889 = HEAP32[$vinfos207>>2]|0;
        $5890 = ((($5889)) + 41|0);
        HEAP8[$5890>>0] = 1;
        $5891 = +HEAPF64[$428>>3];
        $5892 = HEAP32[$vinfos207>>2]|0;
        $5893 = ((($5892)) + 32|0);
        HEAPF64[$5893>>3] = $5891;
        $5894 = HEAP8[$429>>0]|0;
        $5895 = HEAP32[$vinfos207>>2]|0;
        $5896 = ((($5895)) + 43|0);
        HEAP8[$5896>>0] = $5894;
        $5897 = HEAP8[$430>>0]|0;
        $5898 = HEAP32[$vinfos207>>2]|0;
        $5899 = ((($5898)) + 44|0);
        HEAP8[$5899>>0] = $5897;
        $5900 = HEAP8[$431>>0]|0;
        $5901 = HEAP32[$vinfos207>>2]|0;
        $5902 = ((($5901)) + 42|0);
        HEAP8[$5902>>0] = $5900;
        $5903 = HEAP32[$vinfos207>>2]|0;
        $5904 = ((($5903)) + 65|0);
        HEAP8[$5904>>0] = 1;
        $5905 = +HEAPF64[$432>>3];
        $5906 = HEAP32[$vinfos207>>2]|0;
        $5907 = ((($5906)) + 56|0);
        HEAPF64[$5907>>3] = $5905;
        $5908 = HEAP8[$433>>0]|0;
        $5909 = HEAP32[$vinfos207>>2]|0;
        $5910 = ((($5909)) + 67|0);
        HEAP8[$5910>>0] = $5908;
        $5911 = HEAP8[$434>>0]|0;
        $5912 = HEAP32[$vinfos207>>2]|0;
        $5913 = ((($5912)) + 68|0);
        HEAP8[$5913>>0] = $5911;
        $5914 = HEAP8[$435>>0]|0;
        $5915 = HEAP32[$vinfos207>>2]|0;
        $5916 = ((($5915)) + 66|0);
        HEAP8[$5916>>0] = $5914;
        $5917 = HEAP32[$vinfos207>>2]|0;
        $5918 = ((($5917)) + 89|0);
        HEAP8[$5918>>0] = 1;
        $5919 = +HEAPF64[$436>>3];
        $5920 = HEAP32[$vinfos207>>2]|0;
        $5921 = ((($5920)) + 80|0);
        HEAPF64[$5921>>3] = $5919;
        $5922 = HEAP8[$437>>0]|0;
        $5923 = HEAP32[$vinfos207>>2]|0;
        $5924 = ((($5923)) + 91|0);
        HEAP8[$5924>>0] = $5922;
        $5925 = HEAP8[$438>>0]|0;
        $5926 = HEAP32[$vinfos207>>2]|0;
        $5927 = ((($5926)) + 92|0);
        HEAP8[$5927>>0] = $5925;
        $5928 = HEAP8[$439>>0]|0;
        $5929 = HEAP32[$vinfos207>>2]|0;
        $5930 = ((($5929)) + 90|0);
        HEAP8[$5930>>0] = $5928;
        $5931 = HEAP32[$vinfos207>>2]|0;
        $5932 = ((($5931)) + 113|0);
        HEAP8[$5932>>0] = 1;
        $5933 = +HEAPF64[$351>>3];
        $5934 = HEAP32[$vinfos207>>2]|0;
        $5935 = ((($5934)) + 104|0);
        HEAPF64[$5935>>3] = $5933;
        $5936 = HEAP8[$349>>0]|0;
        $5937 = HEAP32[$vinfos207>>2]|0;
        $5938 = ((($5937)) + 115|0);
        HEAP8[$5938>>0] = $5936;
        $5939 = HEAP8[$350>>0]|0;
        $5940 = HEAP32[$vinfos207>>2]|0;
        $5941 = ((($5940)) + 116|0);
        HEAP8[$5941>>0] = $5939;
        $5942 = HEAP8[$346>>0]|0;
        $5943 = HEAP32[$vinfos207>>2]|0;
        $5944 = ((($5943)) + 114|0);
        HEAP8[$5944>>0] = $5942;
        $5945 = HEAP32[$vinfos207>>2]|0;
        $5946 = ((($5945)) + 137|0);
        HEAP8[$5946>>0] = 1;
        $5947 = +HEAPF64[$29>>3];
        $5948 = HEAP32[$vinfos207>>2]|0;
        $5949 = ((($5948)) + 128|0);
        HEAPF64[$5949>>3] = $5947;
        $5950 = HEAP8[$27>>0]|0;
        $5951 = HEAP32[$vinfos207>>2]|0;
        $5952 = ((($5951)) + 139|0);
        HEAP8[$5952>>0] = $5950;
        $5953 = HEAP8[$28>>0]|0;
        $5954 = HEAP32[$vinfos207>>2]|0;
        $5955 = ((($5954)) + 140|0);
        HEAP8[$5955>>0] = $5953;
        $5956 = HEAP8[$26>>0]|0;
        $5957 = HEAP32[$vinfos207>>2]|0;
        $5958 = ((($5957)) + 138|0);
        HEAP8[$5958>>0] = $5956;
        $5959 = HEAP32[$vinfos207>>2]|0;
        $5960 = ((($5959)) + 161|0);
        HEAP8[$5960>>0] = 1;
        $5961 = +HEAPF64[$422>>3];
        $5962 = HEAP32[$vinfos207>>2]|0;
        $5963 = ((($5962)) + 152|0);
        HEAPF64[$5963>>3] = $5961;
        $5964 = HEAP8[$420>>0]|0;
        $5965 = HEAP32[$vinfos207>>2]|0;
        $5966 = ((($5965)) + 163|0);
        HEAP8[$5966>>0] = $5964;
        $5967 = HEAP8[$421>>0]|0;
        $5968 = HEAP32[$vinfos207>>2]|0;
        $5969 = ((($5968)) + 164|0);
        HEAP8[$5969>>0] = $5967;
        $5970 = HEAP8[$419>>0]|0;
        $5971 = HEAP32[$vinfos207>>2]|0;
        $5972 = ((($5971)) + 162|0);
        HEAP8[$5972>>0] = $5970;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree208,0);
        $5973 = HEAP32[$solutions>>2]|0;
        $5974 = ((($5973)) + 8|0);
        $5975 = HEAP32[$5974>>2]|0;
        (FUNCTION_TABLE_iiii[$5975 & 31]($solutions,$vinfos207,$vfree208)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree208);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos207);
        break L7;
       }
      } while(0);
      $5976 = +HEAPF64[$19>>3];
      $5977 = +HEAPF64[$353>>3];
      $5978 = $5976 * $5977;
      $5979 = +HEAPF64[$352>>3];
      $5980 = +HEAPF64[$22>>3];
      $5981 = $5979 * $5980;
      $5982 = $5981 - $5978;
      $5983 = $5977 * $5980;
      $5984 = $5976 * $5979;
      $5985 = $5984 + $5983;
      $5986 = +HEAPF64[$29>>3];
      $5987 = (+__Z5IKabsd($5986));
      $5988 = $5987 + 3.14159265358979;
      $5989 = (+__Z6IKfmoddd($5988,6.2831853071795898));
      $5990 = $5989 + -3.14159265358979;
      $5991 = +HEAPF64[$23>>3];
      $5992 = +HEAPF64[$24>>3];
      $5993 = (+__Z5IKabsd($5990));
      $5994 = $5993 < 9.9999999999999995E-7;
      do {
       if ($5994) {
        $5995 = +HEAPF64[$25>>3];
        $5996 = $5995 + -1.0;
        $5997 = (+__Z5IKabsd($5996));
        $5998 = $5997 < 9.9999999999999995E-7;
        if (!($5998)) {
         break;
        }
        $5999 = (+__Z5IKabsd($5991));
        $6000 = $5999 < 9.9999999999999995E-7;
        if (!($6000)) {
         break;
        }
        $6001 = (+__Z5IKabsd($5976));
        $6002 = $6001 < 9.9999999999999995E-7;
        if (!($6002)) {
         break;
        }
        $6003 = (+__Z5IKabsd($5980));
        $6004 = $6003 < 9.9999999999999995E-7;
        if (!($6004)) {
         break;
        }
        $6005 = (+__Z5IKabsd($5992));
        $6006 = $6005 < 9.9999999999999995E-7;
        if (!($6006)) {
         break;
        }
        $6007 = (+__Z5IKabsd($5982));
        $6008 = $6007 < 9.9999999999999995E-7;
        if (!($6008)) {
         break;
        }
        $6009 = (+__Z5IKabsd($5985));
        $6010 = $6009 < 9.9999999999999995E-7;
        if (!($6010)) {
         break;
        }
        HEAP8[$440>>0] = 1;
        $6011 = +HEAPF64[$15>>3];
        $6012 = +HEAPF64[$352>>3];
        $6013 = $6011 * $6012;
        $6014 = +HEAPF64[$11>>3];
        $6015 = +HEAPF64[$353>>3];
        $6016 = $6014 * $6015;
        $6017 = -$6016;
        $6018 = $6017 - $6013;
        $6019 = (+__Z5IKabsd($6018));
        $6020 = $6019 < 1.9999999999999999E-6;
        do {
         if ($6020) {
          $6021 = $6012 * $6014;
          $6022 = $6011 * $6015;
          $6023 = $6021 - $6022;
          $6024 = (+__Z5IKabsd($6023));
          $6025 = $6024 < 1.9999999999999999E-6;
          if (!($6025)) {
           break;
          }
          $6026 = (+__Z5IKsqrd($6018));
          $6027 = (+__Z5IKsqrd($6023));
          $6028 = $6026 + $6027;
          $6029 = $6028 + -1.0;
          $6030 = (+__Z5IKabsd($6029));
          $6031 = !($6030 <= 1.9999999999999999E-6);
          if (!($6031)) {
           break L7;
          }
         }
        } while(0);
        $6032 = +HEAPF64[$352>>3];
        $6033 = $6011 * $6032;
        $6034 = +HEAPF64[$11>>3];
        $6035 = +HEAPF64[$353>>3];
        $6036 = $6034 * $6035;
        $6037 = -$6036;
        $6038 = $6037 - $6033;
        $6039 = $6032 * $6034;
        $6040 = $6011 * $6035;
        $6041 = $6039 - $6040;
        $6042 = (+__Z7IKatan2dd($6038,$6041));
        $6043 = (+__Z5IKsind($6042));
        $6044 = (+__Z5IKcosd($6042));
        $6045 = $6042 > 3.14159265358979;
        do {
         if ($6045) {
          $6046 = $6042 + -6.2831853071795898;
          $6049 = $6046;
         } else {
          $6047 = $6042 < -3.14159265358979;
          if (!($6047)) {
           $6049 = $6042;
           break;
          }
          $6048 = $6042 + 6.2831853071795898;
          $6049 = $6048;
         }
        } while(0);
        HEAP8[$441>>0] = 0;
        HEAP8[$442>>0] = -1;
        HEAPF64[$443>>3] = $6049;
        HEAPF64[$444>>3] = $6044;
        HEAPF64[$445>>3] = $6043;
        $6050 = +HEAPF64[$443>>3];
        $6051 = (+__Z5IKsind($6050));
        $6052 = (+__Z5IKcosd($6050));
        $6053 = +HEAPF64[$353>>3];
        $6054 = $6051 * $6053;
        $6055 = +HEAPF64[$352>>3];
        $6056 = $6051 * $6055;
        $6057 = $6052 * $6055;
        $6058 = +HEAPF64[$21>>3];
        $6059 = $6053 * $6058;
        $6060 = +HEAPF64[$15>>3];
        $6061 = $6055 * $6060;
        $6062 = $6059 + $6061;
        $6063 = $6051 + $6062;
        $6064 = +HEAPF64[$20>>3];
        $6065 = $6053 * $6064;
        $6066 = -$6052;
        $6067 = $6065 - $6052;
        $6068 = +HEAPF64[$11>>3];
        $6069 = $6055 * $6068;
        $6070 = $6067 + $6069;
        $6071 = $6055 * $6064;
        $6072 = $6071 - $6051;
        $6073 = $6053 * $6068;
        $6074 = $6072 - $6073;
        $6075 = $6053 * $6060;
        $6076 = $6066 - $6075;
        $6077 = $6055 * $6058;
        $6078 = $6077 + $6076;
        $6079 = $6054 - $6057;
        $6080 = $6079 + $6068;
        $6081 = $6058 + $6079;
        $6082 = $6053 * $6066;
        $6083 = $6082 + $6064;
        $6084 = $6083 - $6056;
        $6085 = (+__Z5IKabsd($6063));
        $6086 = $6085 > 5.0000000000000004E-6;
        if ($6086) {
         break L7;
        }
        $6087 = $6052 * $6053;
        $6088 = $6087 + $6056;
        $6089 = $6088 + $6060;
        $6090 = (+__Z5IKabsd($6089));
        $6091 = $6090 > 5.0000000000000004E-6;
        if ($6091) {
         break L7;
        }
        $6092 = (+__Z5IKabsd($6070));
        $6093 = $6092 > 5.0000000000000004E-6;
        if ($6093) {
         break L7;
        }
        $6094 = (+__Z5IKabsd($6074));
        $6095 = $6094 > 5.0000000000000004E-6;
        if ($6095) {
         break L7;
        }
        $6096 = (+__Z5IKabsd($6078));
        $6097 = $6096 > 5.0000000000000004E-6;
        if ($6097) {
         break L7;
        }
        $6098 = (+__Z5IKabsd($6080));
        $6099 = $6098 > 5.0000000000000004E-6;
        if ($6099) {
         break L7;
        }
        $6100 = (+__Z5IKabsd($6081));
        $6101 = $6100 > 5.0000000000000004E-6;
        if ($6101) {
         break L7;
        }
        $6102 = (+__Z5IKabsd($6084));
        $6103 = $6102 > 5.0000000000000004E-6;
        if ($6103) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos218,7);
        $6104 = HEAP32[$vinfos218>>2]|0;
        $6105 = ((($6104)) + 17|0);
        HEAP8[$6105>>0] = 1;
        $6106 = +HEAPF64[$this>>3];
        $6107 = HEAP32[$vinfos218>>2]|0;
        $6108 = ((($6107)) + 8|0);
        HEAPF64[$6108>>3] = $6106;
        $6109 = HEAP8[$446>>0]|0;
        $6110 = HEAP32[$vinfos218>>2]|0;
        $6111 = ((($6110)) + 19|0);
        HEAP8[$6111>>0] = $6109;
        $6112 = HEAP8[$447>>0]|0;
        $6113 = HEAP32[$vinfos218>>2]|0;
        $6114 = ((($6113)) + 20|0);
        HEAP8[$6114>>0] = $6112;
        $6115 = HEAP8[$448>>0]|0;
        $6116 = HEAP32[$vinfos218>>2]|0;
        $6117 = ((($6116)) + 18|0);
        HEAP8[$6117>>0] = $6115;
        $6118 = HEAP32[$vinfos218>>2]|0;
        $6119 = ((($6118)) + 41|0);
        HEAP8[$6119>>0] = 1;
        $6120 = +HEAPF64[$449>>3];
        $6121 = HEAP32[$vinfos218>>2]|0;
        $6122 = ((($6121)) + 32|0);
        HEAPF64[$6122>>3] = $6120;
        $6123 = HEAP8[$450>>0]|0;
        $6124 = HEAP32[$vinfos218>>2]|0;
        $6125 = ((($6124)) + 43|0);
        HEAP8[$6125>>0] = $6123;
        $6126 = HEAP8[$451>>0]|0;
        $6127 = HEAP32[$vinfos218>>2]|0;
        $6128 = ((($6127)) + 44|0);
        HEAP8[$6128>>0] = $6126;
        $6129 = HEAP8[$452>>0]|0;
        $6130 = HEAP32[$vinfos218>>2]|0;
        $6131 = ((($6130)) + 42|0);
        HEAP8[$6131>>0] = $6129;
        $6132 = HEAP32[$vinfos218>>2]|0;
        $6133 = ((($6132)) + 65|0);
        HEAP8[$6133>>0] = 1;
        $6134 = +HEAPF64[$453>>3];
        $6135 = HEAP32[$vinfos218>>2]|0;
        $6136 = ((($6135)) + 56|0);
        HEAPF64[$6136>>3] = $6134;
        $6137 = HEAP8[$454>>0]|0;
        $6138 = HEAP32[$vinfos218>>2]|0;
        $6139 = ((($6138)) + 67|0);
        HEAP8[$6139>>0] = $6137;
        $6140 = HEAP8[$455>>0]|0;
        $6141 = HEAP32[$vinfos218>>2]|0;
        $6142 = ((($6141)) + 68|0);
        HEAP8[$6142>>0] = $6140;
        $6143 = HEAP8[$456>>0]|0;
        $6144 = HEAP32[$vinfos218>>2]|0;
        $6145 = ((($6144)) + 66|0);
        HEAP8[$6145>>0] = $6143;
        $6146 = HEAP32[$vinfos218>>2]|0;
        $6147 = ((($6146)) + 89|0);
        HEAP8[$6147>>0] = 1;
        $6148 = +HEAPF64[$457>>3];
        $6149 = HEAP32[$vinfos218>>2]|0;
        $6150 = ((($6149)) + 80|0);
        HEAPF64[$6150>>3] = $6148;
        $6151 = HEAP8[$458>>0]|0;
        $6152 = HEAP32[$vinfos218>>2]|0;
        $6153 = ((($6152)) + 91|0);
        HEAP8[$6153>>0] = $6151;
        $6154 = HEAP8[$459>>0]|0;
        $6155 = HEAP32[$vinfos218>>2]|0;
        $6156 = ((($6155)) + 92|0);
        HEAP8[$6156>>0] = $6154;
        $6157 = HEAP8[$460>>0]|0;
        $6158 = HEAP32[$vinfos218>>2]|0;
        $6159 = ((($6158)) + 90|0);
        HEAP8[$6159>>0] = $6157;
        $6160 = HEAP32[$vinfos218>>2]|0;
        $6161 = ((($6160)) + 113|0);
        HEAP8[$6161>>0] = 1;
        $6162 = +HEAPF64[$351>>3];
        $6163 = HEAP32[$vinfos218>>2]|0;
        $6164 = ((($6163)) + 104|0);
        HEAPF64[$6164>>3] = $6162;
        $6165 = HEAP8[$349>>0]|0;
        $6166 = HEAP32[$vinfos218>>2]|0;
        $6167 = ((($6166)) + 115|0);
        HEAP8[$6167>>0] = $6165;
        $6168 = HEAP8[$350>>0]|0;
        $6169 = HEAP32[$vinfos218>>2]|0;
        $6170 = ((($6169)) + 116|0);
        HEAP8[$6170>>0] = $6168;
        $6171 = HEAP8[$346>>0]|0;
        $6172 = HEAP32[$vinfos218>>2]|0;
        $6173 = ((($6172)) + 114|0);
        HEAP8[$6173>>0] = $6171;
        $6174 = HEAP32[$vinfos218>>2]|0;
        $6175 = ((($6174)) + 137|0);
        HEAP8[$6175>>0] = 1;
        $6176 = +HEAPF64[$29>>3];
        $6177 = HEAP32[$vinfos218>>2]|0;
        $6178 = ((($6177)) + 128|0);
        HEAPF64[$6178>>3] = $6176;
        $6179 = HEAP8[$27>>0]|0;
        $6180 = HEAP32[$vinfos218>>2]|0;
        $6181 = ((($6180)) + 139|0);
        HEAP8[$6181>>0] = $6179;
        $6182 = HEAP8[$28>>0]|0;
        $6183 = HEAP32[$vinfos218>>2]|0;
        $6184 = ((($6183)) + 140|0);
        HEAP8[$6184>>0] = $6182;
        $6185 = HEAP8[$26>>0]|0;
        $6186 = HEAP32[$vinfos218>>2]|0;
        $6187 = ((($6186)) + 138|0);
        HEAP8[$6187>>0] = $6185;
        $6188 = HEAP32[$vinfos218>>2]|0;
        $6189 = ((($6188)) + 161|0);
        HEAP8[$6189>>0] = 1;
        $6190 = +HEAPF64[$443>>3];
        $6191 = HEAP32[$vinfos218>>2]|0;
        $6192 = ((($6191)) + 152|0);
        HEAPF64[$6192>>3] = $6190;
        $6193 = HEAP8[$441>>0]|0;
        $6194 = HEAP32[$vinfos218>>2]|0;
        $6195 = ((($6194)) + 163|0);
        HEAP8[$6195>>0] = $6193;
        $6196 = HEAP8[$442>>0]|0;
        $6197 = HEAP32[$vinfos218>>2]|0;
        $6198 = ((($6197)) + 164|0);
        HEAP8[$6198>>0] = $6196;
        $6199 = HEAP8[$440>>0]|0;
        $6200 = HEAP32[$vinfos218>>2]|0;
        $6201 = ((($6200)) + 162|0);
        HEAP8[$6201>>0] = $6199;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree219,0);
        $6202 = HEAP32[$solutions>>2]|0;
        $6203 = ((($6202)) + 8|0);
        $6204 = HEAP32[$6203>>2]|0;
        (FUNCTION_TABLE_iiii[$6204 & 31]($solutions,$vinfos218,$vfree219)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree219);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos218);
        break L7;
       }
      } while(0);
      $6205 = +HEAPF64[$19>>3];
      $6206 = +HEAPF64[$22>>3];
      $6207 = +HEAPF64[$353>>3];
      $6208 = $6206 * $6207;
      $6209 = +HEAPF64[$352>>3];
      $6210 = $6206 * $6209;
      $6211 = $6205 * $6207;
      $6212 = $6210 - $6211;
      $6213 = +HEAPF64[$29>>3];
      $6214 = $6213 + -3.14159265358979;
      $6215 = (+__Z5IKabsd($6214));
      $6216 = $6215 + 3.14159265358979;
      $6217 = (+__Z6IKfmoddd($6216,6.2831853071795898));
      $6218 = $6217 + -3.14159265358979;
      $6219 = +HEAPF64[$23>>3];
      $6220 = +HEAPF64[$24>>3];
      $6221 = $6205 * $6209;
      $6222 = $6208 + $6221;
      $6223 = -$6208;
      $6224 = $6223 - $6221;
      $6225 = (+__Z5IKabsd($6218));
      $6226 = $6225 < 9.9999999999999995E-7;
      do {
       if ($6226) {
        $6227 = +HEAPF64[$25>>3];
        $6228 = $6227 + 1.0;
        $6229 = (+__Z5IKabsd($6228));
        $6230 = $6229 < 9.9999999999999995E-7;
        if (!($6230)) {
         break;
        }
        $6231 = (+__Z5IKabsd($6219));
        $6232 = $6231 < 9.9999999999999995E-7;
        if (!($6232)) {
         break;
        }
        $6233 = (+__Z5IKabsd($6205));
        $6234 = $6233 < 9.9999999999999995E-7;
        if (!($6234)) {
         break;
        }
        $6235 = (+__Z5IKabsd($6206));
        $6236 = $6235 < 9.9999999999999995E-7;
        if (!($6236)) {
         break;
        }
        $6237 = (+__Z5IKabsd($6220));
        $6238 = $6237 < 9.9999999999999995E-7;
        if (!($6238)) {
         break;
        }
        $6239 = (+__Z5IKabsd($6212));
        $6240 = $6239 < 9.9999999999999995E-7;
        if (!($6240)) {
         break;
        }
        $6241 = (+__Z5IKabsd($6222));
        $6242 = $6241 < 9.9999999999999995E-7;
        if (!($6242)) {
         break;
        }
        $6243 = (+__Z5IKabsd($6224));
        $6244 = $6243 < 9.9999999999999995E-7;
        if (!($6244)) {
         break;
        }
        HEAP8[$461>>0] = 1;
        $6245 = +HEAPF64[$11>>3];
        $6246 = +HEAPF64[$352>>3];
        $6247 = +HEAPF64[$15>>3];
        $6248 = $6246 * $6247;
        $6249 = +HEAPF64[$353>>3];
        $6250 = $6245 * $6249;
        $6251 = $6248 - $6250;
        $6252 = (+__Z5IKabsd($6251));
        $6253 = $6252 < 1.9999999999999999E-6;
        do {
         if ($6253) {
          $6254 = $6247 * $6249;
          $6255 = $6245 * $6246;
          $6256 = -$6255;
          $6257 = $6256 - $6254;
          $6258 = (+__Z5IKabsd($6257));
          $6259 = $6258 < 1.9999999999999999E-6;
          if (!($6259)) {
           break;
          }
          $6260 = (+__Z5IKsqrd($6251));
          $6261 = (+__Z5IKsqrd($6257));
          $6262 = $6260 + $6261;
          $6263 = $6262 + -1.0;
          $6264 = (+__Z5IKabsd($6263));
          $6265 = !($6264 <= 1.9999999999999999E-6);
          if (!($6265)) {
           break L7;
          }
         }
        } while(0);
        $6266 = +HEAPF64[$352>>3];
        $6267 = +HEAPF64[$15>>3];
        $6268 = $6266 * $6267;
        $6269 = +HEAPF64[$353>>3];
        $6270 = $6245 * $6269;
        $6271 = $6268 - $6270;
        $6272 = $6267 * $6269;
        $6273 = $6245 * $6266;
        $6274 = -$6273;
        $6275 = $6274 - $6272;
        $6276 = (+__Z7IKatan2dd($6271,$6275));
        $6277 = (+__Z5IKsind($6276));
        $6278 = (+__Z5IKcosd($6276));
        $6279 = $6276 > 3.14159265358979;
        do {
         if ($6279) {
          $6280 = $6276 + -6.2831853071795898;
          $6283 = $6280;
         } else {
          $6281 = $6276 < -3.14159265358979;
          if (!($6281)) {
           $6283 = $6276;
           break;
          }
          $6282 = $6276 + 6.2831853071795898;
          $6283 = $6282;
         }
        } while(0);
        HEAP8[$462>>0] = 0;
        HEAP8[$463>>0] = -1;
        HEAPF64[$464>>3] = $6283;
        HEAPF64[$465>>3] = $6278;
        HEAPF64[$466>>3] = $6277;
        $6284 = +HEAPF64[$464>>3];
        $6285 = (+__Z5IKsind($6284));
        $6286 = (+__Z5IKcosd($6284));
        $6287 = +HEAPF64[$353>>3];
        $6288 = $6286 * $6287;
        $6289 = +HEAPF64[$352>>3];
        $6290 = $6285 * $6289;
        $6291 = +HEAPF64[$20>>3];
        $6292 = $6287 * $6291;
        $6293 = +HEAPF64[$11>>3];
        $6294 = $6289 * $6293;
        $6295 = $6292 + $6294;
        $6296 = $6286 + $6295;
        $6297 = +HEAPF64[$21>>3];
        $6298 = +HEAPF64[$15>>3];
        $6299 = $6286 * $6289;
        $6300 = $6285 * $6287;
        $6301 = $6300 + $6299;
        $6302 = $6301 + $6293;
        $6303 = $6287 * $6293;
        $6304 = $6289 * $6291;
        $6305 = $6304 - $6303;
        $6306 = $6305 - $6285;
        $6307 = $6287 * $6298;
        $6308 = $6289 * $6297;
        $6309 = $6308 - $6307;
        $6310 = $6309 - $6286;
        $6311 = $6288 - $6290;
        $6312 = $6311 + $6298;
        $6313 = $6291 + $6311;
        $6314 = -$6299;
        $6315 = $6314 - $6300;
        $6316 = $6315 + $6297;
        $6317 = (+__Z5IKabsd($6296));
        $6318 = $6317 > 5.0000000000000004E-6;
        if ($6318) {
         break L7;
        }
        $6319 = $6287 * $6297;
        $6320 = $6289 * $6298;
        $6321 = $6319 + $6320;
        $6322 = $6321 - $6285;
        $6323 = (+__Z5IKabsd($6322));
        $6324 = $6323 > 5.0000000000000004E-6;
        if ($6324) {
         break L7;
        }
        $6325 = (+__Z5IKabsd($6302));
        $6326 = $6325 > 5.0000000000000004E-6;
        if ($6326) {
         break L7;
        }
        $6327 = (+__Z5IKabsd($6306));
        $6328 = $6327 > 5.0000000000000004E-6;
        if ($6328) {
         break L7;
        }
        $6329 = (+__Z5IKabsd($6310));
        $6330 = $6329 > 5.0000000000000004E-6;
        if ($6330) {
         break L7;
        }
        $6331 = (+__Z5IKabsd($6312));
        $6332 = $6331 > 5.0000000000000004E-6;
        if ($6332) {
         break L7;
        }
        $6333 = (+__Z5IKabsd($6313));
        $6334 = $6333 > 5.0000000000000004E-6;
        if ($6334) {
         break L7;
        }
        $6335 = (+__Z5IKabsd($6316));
        $6336 = $6335 > 5.0000000000000004E-6;
        if ($6336) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos229,7);
        $6337 = HEAP32[$vinfos229>>2]|0;
        $6338 = ((($6337)) + 17|0);
        HEAP8[$6338>>0] = 1;
        $6339 = +HEAPF64[$this>>3];
        $6340 = HEAP32[$vinfos229>>2]|0;
        $6341 = ((($6340)) + 8|0);
        HEAPF64[$6341>>3] = $6339;
        $6342 = HEAP8[$467>>0]|0;
        $6343 = HEAP32[$vinfos229>>2]|0;
        $6344 = ((($6343)) + 19|0);
        HEAP8[$6344>>0] = $6342;
        $6345 = HEAP8[$468>>0]|0;
        $6346 = HEAP32[$vinfos229>>2]|0;
        $6347 = ((($6346)) + 20|0);
        HEAP8[$6347>>0] = $6345;
        $6348 = HEAP8[$469>>0]|0;
        $6349 = HEAP32[$vinfos229>>2]|0;
        $6350 = ((($6349)) + 18|0);
        HEAP8[$6350>>0] = $6348;
        $6351 = HEAP32[$vinfos229>>2]|0;
        $6352 = ((($6351)) + 41|0);
        HEAP8[$6352>>0] = 1;
        $6353 = +HEAPF64[$470>>3];
        $6354 = HEAP32[$vinfos229>>2]|0;
        $6355 = ((($6354)) + 32|0);
        HEAPF64[$6355>>3] = $6353;
        $6356 = HEAP8[$471>>0]|0;
        $6357 = HEAP32[$vinfos229>>2]|0;
        $6358 = ((($6357)) + 43|0);
        HEAP8[$6358>>0] = $6356;
        $6359 = HEAP8[$472>>0]|0;
        $6360 = HEAP32[$vinfos229>>2]|0;
        $6361 = ((($6360)) + 44|0);
        HEAP8[$6361>>0] = $6359;
        $6362 = HEAP8[$473>>0]|0;
        $6363 = HEAP32[$vinfos229>>2]|0;
        $6364 = ((($6363)) + 42|0);
        HEAP8[$6364>>0] = $6362;
        $6365 = HEAP32[$vinfos229>>2]|0;
        $6366 = ((($6365)) + 65|0);
        HEAP8[$6366>>0] = 1;
        $6367 = +HEAPF64[$474>>3];
        $6368 = HEAP32[$vinfos229>>2]|0;
        $6369 = ((($6368)) + 56|0);
        HEAPF64[$6369>>3] = $6367;
        $6370 = HEAP8[$475>>0]|0;
        $6371 = HEAP32[$vinfos229>>2]|0;
        $6372 = ((($6371)) + 67|0);
        HEAP8[$6372>>0] = $6370;
        $6373 = HEAP8[$476>>0]|0;
        $6374 = HEAP32[$vinfos229>>2]|0;
        $6375 = ((($6374)) + 68|0);
        HEAP8[$6375>>0] = $6373;
        $6376 = HEAP8[$477>>0]|0;
        $6377 = HEAP32[$vinfos229>>2]|0;
        $6378 = ((($6377)) + 66|0);
        HEAP8[$6378>>0] = $6376;
        $6379 = HEAP32[$vinfos229>>2]|0;
        $6380 = ((($6379)) + 89|0);
        HEAP8[$6380>>0] = 1;
        $6381 = +HEAPF64[$478>>3];
        $6382 = HEAP32[$vinfos229>>2]|0;
        $6383 = ((($6382)) + 80|0);
        HEAPF64[$6383>>3] = $6381;
        $6384 = HEAP8[$479>>0]|0;
        $6385 = HEAP32[$vinfos229>>2]|0;
        $6386 = ((($6385)) + 91|0);
        HEAP8[$6386>>0] = $6384;
        $6387 = HEAP8[$480>>0]|0;
        $6388 = HEAP32[$vinfos229>>2]|0;
        $6389 = ((($6388)) + 92|0);
        HEAP8[$6389>>0] = $6387;
        $6390 = HEAP8[$481>>0]|0;
        $6391 = HEAP32[$vinfos229>>2]|0;
        $6392 = ((($6391)) + 90|0);
        HEAP8[$6392>>0] = $6390;
        $6393 = HEAP32[$vinfos229>>2]|0;
        $6394 = ((($6393)) + 113|0);
        HEAP8[$6394>>0] = 1;
        $6395 = +HEAPF64[$351>>3];
        $6396 = HEAP32[$vinfos229>>2]|0;
        $6397 = ((($6396)) + 104|0);
        HEAPF64[$6397>>3] = $6395;
        $6398 = HEAP8[$349>>0]|0;
        $6399 = HEAP32[$vinfos229>>2]|0;
        $6400 = ((($6399)) + 115|0);
        HEAP8[$6400>>0] = $6398;
        $6401 = HEAP8[$350>>0]|0;
        $6402 = HEAP32[$vinfos229>>2]|0;
        $6403 = ((($6402)) + 116|0);
        HEAP8[$6403>>0] = $6401;
        $6404 = HEAP8[$346>>0]|0;
        $6405 = HEAP32[$vinfos229>>2]|0;
        $6406 = ((($6405)) + 114|0);
        HEAP8[$6406>>0] = $6404;
        $6407 = HEAP32[$vinfos229>>2]|0;
        $6408 = ((($6407)) + 137|0);
        HEAP8[$6408>>0] = 1;
        $6409 = +HEAPF64[$29>>3];
        $6410 = HEAP32[$vinfos229>>2]|0;
        $6411 = ((($6410)) + 128|0);
        HEAPF64[$6411>>3] = $6409;
        $6412 = HEAP8[$27>>0]|0;
        $6413 = HEAP32[$vinfos229>>2]|0;
        $6414 = ((($6413)) + 139|0);
        HEAP8[$6414>>0] = $6412;
        $6415 = HEAP8[$28>>0]|0;
        $6416 = HEAP32[$vinfos229>>2]|0;
        $6417 = ((($6416)) + 140|0);
        HEAP8[$6417>>0] = $6415;
        $6418 = HEAP8[$26>>0]|0;
        $6419 = HEAP32[$vinfos229>>2]|0;
        $6420 = ((($6419)) + 138|0);
        HEAP8[$6420>>0] = $6418;
        $6421 = HEAP32[$vinfos229>>2]|0;
        $6422 = ((($6421)) + 161|0);
        HEAP8[$6422>>0] = 1;
        $6423 = +HEAPF64[$464>>3];
        $6424 = HEAP32[$vinfos229>>2]|0;
        $6425 = ((($6424)) + 152|0);
        HEAPF64[$6425>>3] = $6423;
        $6426 = HEAP8[$462>>0]|0;
        $6427 = HEAP32[$vinfos229>>2]|0;
        $6428 = ((($6427)) + 163|0);
        HEAP8[$6428>>0] = $6426;
        $6429 = HEAP8[$463>>0]|0;
        $6430 = HEAP32[$vinfos229>>2]|0;
        $6431 = ((($6430)) + 164|0);
        HEAP8[$6431>>0] = $6429;
        $6432 = HEAP8[$461>>0]|0;
        $6433 = HEAP32[$vinfos229>>2]|0;
        $6434 = ((($6433)) + 162|0);
        HEAP8[$6434>>0] = $6432;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree230,0);
        $6435 = HEAP32[$solutions>>2]|0;
        $6436 = ((($6435)) + 8|0);
        $6437 = HEAP32[$6436>>2]|0;
        (FUNCTION_TABLE_iiii[$6437 & 31]($solutions,$vinfos229,$vfree230)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree230);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos229);
        break L7;
       }
      } while(0);
      $6438 = +HEAPF64[$25>>3];
      $6439 = +HEAPF64[$30>>3];
      $6440 = +HEAPF64[$31>>3];
      $6441 = +HEAPF64[$19>>3];
      $6442 = $6441 - $6440;
      $6443 = +HEAPF64[$351>>3];
      $6444 = (+__Z5IKabsd($6443));
      $6445 = $6444 + 3.14159265358979;
      $6446 = (+__Z6IKfmoddd($6445,6.2831853071795898));
      $6447 = $6446 + -3.14159265358979;
      $6448 = +HEAPF64[$22>>3];
      $6449 = -$6438;
      $6450 = $6440 * $6449;
      $6451 = $6439 * $6441;
      $6452 = $6450 + $6451;
      $6453 = +HEAPF64[$23>>3];
      $6454 = $6439 * $6453;
      $6455 = +HEAPF64[$11>>3];
      $6456 = $6440 * $6455;
      $6457 = -$6456;
      $6458 = $6457 - $6454;
      $6459 = +HEAPF64[$24>>3];
      $6460 = $6439 * $6459;
      $6461 = +HEAPF64[$15>>3];
      $6462 = $6440 * $6461;
      $6463 = -$6462;
      $6464 = $6463 - $6460;
      $6465 = $6439 * $6449;
      $6466 = $6465 + 1.0;
      $6467 = $6440 * $6441;
      $6468 = $6466 - $6467;
      $6469 = (+__Z5IKabsd($6447));
      $6470 = $6469 < 9.9999999999999995E-7;
      do {
       if ($6470) {
        $6471 = $6438 - $6439;
        $6472 = (+__Z5IKabsd($6471));
        $6473 = $6472 < 9.9999999999999995E-7;
        if (!($6473)) {
         break;
        }
        $6474 = (+__Z5IKabsd($6442));
        $6475 = $6474 < 9.9999999999999995E-7;
        if (!($6475)) {
         break;
        }
        $6476 = (+__Z5IKabsd($6448));
        $6477 = $6476 < 9.9999999999999995E-7;
        if (!($6477)) {
         break;
        }
        $6478 = (+__Z5IKabsd($6452));
        $6479 = $6478 < 9.9999999999999995E-7;
        if (!($6479)) {
         break;
        }
        $6480 = (+__Z5IKabsd($6458));
        $6481 = $6480 < 9.9999999999999995E-7;
        if (!($6481)) {
         break;
        }
        $6482 = (+__Z5IKabsd($6464));
        $6483 = $6482 < 9.9999999999999995E-7;
        if (!($6483)) {
         break;
        }
        $6484 = (+__Z5IKabsd($6468));
        $6485 = $6484 < 9.9999999999999995E-7;
        if (!($6485)) {
         break;
        }
        HEAP8[$482>>0] = 1;
        $6486 = +HEAPF64[$20>>3];
        $6487 = (+__Z5IKabsd($6486));
        $6488 = $6487 < 1.9999999999999999E-6;
        do {
         if ($6488) {
          $6489 = +HEAPF64[$21>>3];
          $6490 = (+__Z5IKabsd($6489));
          $6491 = $6490 < 1.9999999999999999E-6;
          if (!($6491)) {
           break;
          }
          $6492 = (+__Z5IKsqrd($6486));
          $6493 = (+__Z5IKsqrd($6489));
          $6494 = $6492 + $6493;
          $6495 = $6494 + -1.0;
          $6496 = (+__Z5IKabsd($6495));
          $6497 = !($6496 <= 1.9999999999999999E-6);
          if (!($6497)) {
           break L7;
          }
         }
        } while(0);
        $6498 = +HEAPF64[$20>>3];
        $6499 = +HEAPF64[$21>>3];
        $6500 = (+__Z7IKatan2dd($6498,$6499));
        $6501 = (+__Z5IKsind($6500));
        $6502 = (+__Z5IKcosd($6500));
        $6503 = $6500 > 3.14159265358979;
        do {
         if ($6503) {
          $6504 = $6500 + -6.2831853071795898;
          $6507 = $6504;
         } else {
          $6505 = $6500 < -3.14159265358979;
          if (!($6505)) {
           $6507 = $6500;
           break;
          }
          $6506 = $6500 + 6.2831853071795898;
          $6507 = $6506;
         }
        } while(0);
        HEAP8[$483>>0] = 0;
        HEAP8[$484>>0] = -1;
        HEAPF64[$485>>3] = $6507;
        HEAPF64[$486>>3] = $6502;
        HEAPF64[$487>>3] = $6501;
        $6508 = +HEAPF64[$485>>3];
        $6509 = (+__Z5IKcosd($6508));
        $6510 = (+__Z5IKsind($6508));
        $6511 = +HEAPF64[$19>>3];
        $6512 = $6509 * $6511;
        $6513 = +HEAPF64[$23>>3];
        $6514 = $6512 + $6513;
        $6515 = +HEAPF64[$21>>3];
        $6516 = $6515 - $6509;
        $6517 = +HEAPF64[$15>>3];
        $6518 = +HEAPF64[$25>>3];
        $6519 = $6510 * $6518;
        $6520 = $6517 + $6519;
        $6521 = $6510 * $6511;
        $6522 = +HEAPF64[$24>>3];
        $6523 = $6522 - $6521;
        $6524 = $6509 * $6518;
        $6525 = +HEAPF64[$11>>3];
        $6526 = $6525 - $6524;
        $6527 = $6511 * $6522;
        $6528 = $6517 * $6518;
        $6529 = $6528 - $6527;
        $6530 = $6510 + $6529;
        $6531 = $6518 * $6525;
        $6532 = $6511 * $6513;
        $6533 = $6531 - $6532;
        $6534 = $6533 - $6509;
        $6535 = (+__Z5IKabsd($6514));
        $6536 = $6535 > 5.0000000000000004E-6;
        if ($6536) {
         break L7;
        }
        $6537 = +HEAPF64[$20>>3];
        $6538 = $6537 - $6510;
        $6539 = (+__Z5IKabsd($6538));
        $6540 = $6539 > 5.0000000000000004E-6;
        if ($6540) {
         break L7;
        }
        $6541 = (+__Z5IKabsd($6516));
        $6542 = $6541 > 5.0000000000000004E-6;
        if ($6542) {
         break L7;
        }
        $6543 = (+__Z5IKabsd($6520));
        $6544 = $6543 > 5.0000000000000004E-6;
        if ($6544) {
         break L7;
        }
        $6545 = (+__Z5IKabsd($6523));
        $6546 = $6545 > 5.0000000000000004E-6;
        if ($6546) {
         break L7;
        }
        $6547 = (+__Z5IKabsd($6526));
        $6548 = $6547 > 5.0000000000000004E-6;
        if ($6548) {
         break L7;
        }
        $6549 = (+__Z5IKabsd($6530));
        $6550 = $6549 > 5.0000000000000004E-6;
        if ($6550) {
         break L7;
        }
        $6551 = (+__Z5IKabsd($6534));
        $6552 = $6551 > 5.0000000000000004E-6;
        if ($6552) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos240,7);
        $6553 = HEAP32[$vinfos240>>2]|0;
        $6554 = ((($6553)) + 17|0);
        HEAP8[$6554>>0] = 1;
        $6555 = +HEAPF64[$this>>3];
        $6556 = HEAP32[$vinfos240>>2]|0;
        $6557 = ((($6556)) + 8|0);
        HEAPF64[$6557>>3] = $6555;
        $6558 = HEAP8[$488>>0]|0;
        $6559 = HEAP32[$vinfos240>>2]|0;
        $6560 = ((($6559)) + 19|0);
        HEAP8[$6560>>0] = $6558;
        $6561 = HEAP8[$489>>0]|0;
        $6562 = HEAP32[$vinfos240>>2]|0;
        $6563 = ((($6562)) + 20|0);
        HEAP8[$6563>>0] = $6561;
        $6564 = HEAP8[$490>>0]|0;
        $6565 = HEAP32[$vinfos240>>2]|0;
        $6566 = ((($6565)) + 18|0);
        HEAP8[$6566>>0] = $6564;
        $6567 = HEAP32[$vinfos240>>2]|0;
        $6568 = ((($6567)) + 41|0);
        HEAP8[$6568>>0] = 1;
        $6569 = +HEAPF64[$491>>3];
        $6570 = HEAP32[$vinfos240>>2]|0;
        $6571 = ((($6570)) + 32|0);
        HEAPF64[$6571>>3] = $6569;
        $6572 = HEAP8[$492>>0]|0;
        $6573 = HEAP32[$vinfos240>>2]|0;
        $6574 = ((($6573)) + 43|0);
        HEAP8[$6574>>0] = $6572;
        $6575 = HEAP8[$493>>0]|0;
        $6576 = HEAP32[$vinfos240>>2]|0;
        $6577 = ((($6576)) + 44|0);
        HEAP8[$6577>>0] = $6575;
        $6578 = HEAP8[$494>>0]|0;
        $6579 = HEAP32[$vinfos240>>2]|0;
        $6580 = ((($6579)) + 42|0);
        HEAP8[$6580>>0] = $6578;
        $6581 = HEAP32[$vinfos240>>2]|0;
        $6582 = ((($6581)) + 65|0);
        HEAP8[$6582>>0] = 1;
        $6583 = +HEAPF64[$495>>3];
        $6584 = HEAP32[$vinfos240>>2]|0;
        $6585 = ((($6584)) + 56|0);
        HEAPF64[$6585>>3] = $6583;
        $6586 = HEAP8[$496>>0]|0;
        $6587 = HEAP32[$vinfos240>>2]|0;
        $6588 = ((($6587)) + 67|0);
        HEAP8[$6588>>0] = $6586;
        $6589 = HEAP8[$497>>0]|0;
        $6590 = HEAP32[$vinfos240>>2]|0;
        $6591 = ((($6590)) + 68|0);
        HEAP8[$6591>>0] = $6589;
        $6592 = HEAP8[$498>>0]|0;
        $6593 = HEAP32[$vinfos240>>2]|0;
        $6594 = ((($6593)) + 66|0);
        HEAP8[$6594>>0] = $6592;
        $6595 = HEAP32[$vinfos240>>2]|0;
        $6596 = ((($6595)) + 89|0);
        HEAP8[$6596>>0] = 1;
        $6597 = +HEAPF64[$499>>3];
        $6598 = HEAP32[$vinfos240>>2]|0;
        $6599 = ((($6598)) + 80|0);
        HEAPF64[$6599>>3] = $6597;
        $6600 = HEAP8[$500>>0]|0;
        $6601 = HEAP32[$vinfos240>>2]|0;
        $6602 = ((($6601)) + 91|0);
        HEAP8[$6602>>0] = $6600;
        $6603 = HEAP8[$501>>0]|0;
        $6604 = HEAP32[$vinfos240>>2]|0;
        $6605 = ((($6604)) + 92|0);
        HEAP8[$6605>>0] = $6603;
        $6606 = HEAP8[$502>>0]|0;
        $6607 = HEAP32[$vinfos240>>2]|0;
        $6608 = ((($6607)) + 90|0);
        HEAP8[$6608>>0] = $6606;
        $6609 = HEAP32[$vinfos240>>2]|0;
        $6610 = ((($6609)) + 113|0);
        HEAP8[$6610>>0] = 1;
        $6611 = +HEAPF64[$351>>3];
        $6612 = HEAP32[$vinfos240>>2]|0;
        $6613 = ((($6612)) + 104|0);
        HEAPF64[$6613>>3] = $6611;
        $6614 = HEAP8[$349>>0]|0;
        $6615 = HEAP32[$vinfos240>>2]|0;
        $6616 = ((($6615)) + 115|0);
        HEAP8[$6616>>0] = $6614;
        $6617 = HEAP8[$350>>0]|0;
        $6618 = HEAP32[$vinfos240>>2]|0;
        $6619 = ((($6618)) + 116|0);
        HEAP8[$6619>>0] = $6617;
        $6620 = HEAP8[$346>>0]|0;
        $6621 = HEAP32[$vinfos240>>2]|0;
        $6622 = ((($6621)) + 114|0);
        HEAP8[$6622>>0] = $6620;
        $6623 = HEAP32[$vinfos240>>2]|0;
        $6624 = ((($6623)) + 137|0);
        HEAP8[$6624>>0] = 1;
        $6625 = +HEAPF64[$29>>3];
        $6626 = HEAP32[$vinfos240>>2]|0;
        $6627 = ((($6626)) + 128|0);
        HEAPF64[$6627>>3] = $6625;
        $6628 = HEAP8[$27>>0]|0;
        $6629 = HEAP32[$vinfos240>>2]|0;
        $6630 = ((($6629)) + 139|0);
        HEAP8[$6630>>0] = $6628;
        $6631 = HEAP8[$28>>0]|0;
        $6632 = HEAP32[$vinfos240>>2]|0;
        $6633 = ((($6632)) + 140|0);
        HEAP8[$6633>>0] = $6631;
        $6634 = HEAP8[$26>>0]|0;
        $6635 = HEAP32[$vinfos240>>2]|0;
        $6636 = ((($6635)) + 138|0);
        HEAP8[$6636>>0] = $6634;
        $6637 = HEAP32[$vinfos240>>2]|0;
        $6638 = ((($6637)) + 161|0);
        HEAP8[$6638>>0] = 1;
        $6639 = +HEAPF64[$485>>3];
        $6640 = HEAP32[$vinfos240>>2]|0;
        $6641 = ((($6640)) + 152|0);
        HEAPF64[$6641>>3] = $6639;
        $6642 = HEAP8[$483>>0]|0;
        $6643 = HEAP32[$vinfos240>>2]|0;
        $6644 = ((($6643)) + 163|0);
        HEAP8[$6644>>0] = $6642;
        $6645 = HEAP8[$484>>0]|0;
        $6646 = HEAP32[$vinfos240>>2]|0;
        $6647 = ((($6646)) + 164|0);
        HEAP8[$6647>>0] = $6645;
        $6648 = HEAP8[$482>>0]|0;
        $6649 = HEAP32[$vinfos240>>2]|0;
        $6650 = ((($6649)) + 162|0);
        HEAP8[$6650>>0] = $6648;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree241,0);
        $6651 = HEAP32[$solutions>>2]|0;
        $6652 = ((($6651)) + 8|0);
        $6653 = HEAP32[$6652>>2]|0;
        (FUNCTION_TABLE_iiii[$6653 & 31]($solutions,$vinfos240,$vfree241)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree241);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos240);
        break L7;
       }
      } while(0);
      $6654 = +HEAPF64[$25>>3];
      $6655 = +HEAPF64[$30>>3];
      $6656 = +HEAPF64[$31>>3];
      $6657 = +HEAPF64[$351>>3];
      $6658 = $6657 + -3.14159265358979;
      $6659 = (+__Z5IKabsd($6658));
      $6660 = $6659 + 3.14159265358979;
      $6661 = (+__Z6IKfmoddd($6660,6.2831853071795898));
      $6662 = $6661 + -3.14159265358979;
      $6663 = +HEAPF64[$19>>3];
      $6664 = $6656 + $6663;
      $6665 = +HEAPF64[$22>>3];
      $6666 = -$6663;
      $6667 = $6666 - $6656;
      $6668 = -$6654;
      $6669 = $6656 * $6668;
      $6670 = $6655 * $6666;
      $6671 = $6669 + $6670;
      $6672 = +HEAPF64[$23>>3];
      $6673 = $6655 * $6672;
      $6674 = +HEAPF64[$11>>3];
      $6675 = $6656 * $6674;
      $6676 = $6675 - $6673;
      $6677 = +HEAPF64[$24>>3];
      $6678 = $6655 * $6677;
      $6679 = +HEAPF64[$15>>3];
      $6680 = $6656 * $6679;
      $6681 = $6680 - $6678;
      $6682 = $6656 * $6663;
      $6683 = $6682 + 1.0;
      $6684 = $6655 * $6668;
      $6685 = $6684 + $6683;
      $6686 = (+__Z5IKabsd($6662));
      $6687 = $6686 < 9.9999999999999995E-7;
      if (!($6687)) {
       break;
      }
      $6688 = $6654 - $6655;
      $6689 = (+__Z5IKabsd($6688));
      $6690 = $6689 < 9.9999999999999995E-7;
      if (!($6690)) {
       break;
      }
      $6691 = (+__Z5IKabsd($6664));
      $6692 = $6691 < 9.9999999999999995E-7;
      if (!($6692)) {
       break;
      }
      $6693 = (+__Z5IKabsd($6665));
      $6694 = $6693 < 9.9999999999999995E-7;
      if (!($6694)) {
       break;
      }
      $6695 = (+__Z5IKabsd($6667));
      $6696 = $6695 < 9.9999999999999995E-7;
      if (!($6696)) {
       break;
      }
      $6697 = (+__Z5IKabsd($6671));
      $6698 = $6697 < 9.9999999999999995E-7;
      if (!($6698)) {
       break;
      }
      $6699 = (+__Z5IKabsd($6676));
      $6700 = $6699 < 9.9999999999999995E-7;
      if (!($6700)) {
       break;
      }
      $6701 = (+__Z5IKabsd($6681));
      $6702 = $6701 < 9.9999999999999995E-7;
      if (!($6702)) {
       break;
      }
      $6703 = (+__Z5IKabsd($6685));
      $6704 = $6703 < 9.9999999999999995E-7;
      if (!($6704)) {
       break;
      }
      HEAP8[$503>>0] = 1;
      $6705 = +HEAPF64[$24>>3];
      $6706 = -$6705;
      $6707 = +HEAPF64[$23>>3];
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x715,$6706,$6707,1.9999999999999999E-6);
      $6708 = HEAP8[$504>>0]|0;
      $6709 = ($6708<<24>>24)==(0);
      if ($6709) {
       break;
      }
      $6710 = +HEAPF64[$19>>3];
      $6711 = (+__Z6IKsignd($6710));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x716,$6711,-1);
      $6712 = HEAP8[$505>>0]|0;
      $6713 = ($6712<<24>>24)==(0);
      if ($6713) {
       break;
      }
      $6714 = +HEAPF64[$x715>>3];
      $6715 = $6714 + -1.5707963267949001;
      $6716 = +HEAPF64[$x716>>3];
      $6717 = $6716 * 1.5707963267949001;
      $6718 = $6715 + $6717;
      $6719 = (+__Z5IKsind($6718));
      $6720 = (+__Z5IKcosd($6718));
      $6721 = $6718 > 3.14159265358979;
      do {
       if ($6721) {
        $6722 = $6718 + -6.2831853071795898;
        $6725 = $6722;
       } else {
        $6723 = $6718 < -3.14159265358979;
        if (!($6723)) {
         $6725 = $6718;
         break;
        }
        $6724 = $6718 + 6.2831853071795898;
        $6725 = $6724;
       }
      } while(0);
      HEAP8[$506>>0] = 0;
      HEAP8[$507>>0] = -1;
      HEAPF64[$508>>3] = $6725;
      HEAPF64[$509>>3] = $6720;
      HEAPF64[$510>>3] = $6719;
      $6726 = +HEAPF64[$508>>3];
      $6727 = (+__Z5IKsind($6726));
      $6728 = (+__Z5IKcosd($6726));
      $6729 = +HEAPF64[$25>>3];
      $6730 = +HEAPF64[$19>>3];
      $6731 = $6727 * $6730;
      $6732 = +HEAPF64[$24>>3];
      $6733 = $6731 + $6732;
      $6734 = +HEAPF64[$23>>3];
      $6735 = +HEAPF64[$20>>3];
      $6736 = -$6735;
      $6737 = $6736 - $6727;
      $6738 = +HEAPF64[$21>>3];
      $6739 = -$6738;
      $6740 = $6739 - $6728;
      $6741 = +HEAPF64[$15>>3];
      $6742 = $6727 * $6729;
      $6743 = $6742 - $6741;
      $6744 = $6728 * $6729;
      $6745 = -$6744;
      $6746 = +HEAPF64[$11>>3];
      $6747 = $6745 - $6746;
      $6748 = $6730 * $6732;
      $6749 = $6727 + $6748;
      $6750 = $6729 * $6741;
      $6751 = $6749 - $6750;
      $6752 = $6730 * $6734;
      $6753 = $6752 - $6728;
      $6754 = $6729 * $6746;
      $6755 = $6753 - $6754;
      $6756 = (+__Z5IKabsd($6733));
      $6757 = $6756 > 5.0000000000000004E-6;
      if ($6757) {
       break;
      }
      $6758 = $6728 * $6730;
      $6759 = $6734 - $6758;
      $6760 = (+__Z5IKabsd($6759));
      $6761 = $6760 > 5.0000000000000004E-6;
      if ($6761) {
       break;
      }
      $6762 = (+__Z5IKabsd($6737));
      $6763 = $6762 > 5.0000000000000004E-6;
      if ($6763) {
       break;
      }
      $6764 = (+__Z5IKabsd($6740));
      $6765 = $6764 > 5.0000000000000004E-6;
      if ($6765) {
       break;
      }
      $6766 = (+__Z5IKabsd($6743));
      $6767 = $6766 > 5.0000000000000004E-6;
      if ($6767) {
       break;
      }
      $6768 = (+__Z5IKabsd($6747));
      $6769 = $6768 > 5.0000000000000004E-6;
      if ($6769) {
       break;
      }
      $6770 = (+__Z5IKabsd($6751));
      $6771 = $6770 > 5.0000000000000004E-6;
      if ($6771) {
       break;
      }
      $6772 = (+__Z5IKabsd($6755));
      $6773 = $6772 > 5.0000000000000004E-6;
      if ($6773) {
       break;
      }
      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos251,7);
      $6774 = HEAP32[$vinfos251>>2]|0;
      $6775 = ((($6774)) + 17|0);
      HEAP8[$6775>>0] = 1;
      $6776 = +HEAPF64[$this>>3];
      $6777 = HEAP32[$vinfos251>>2]|0;
      $6778 = ((($6777)) + 8|0);
      HEAPF64[$6778>>3] = $6776;
      $6779 = HEAP8[$511>>0]|0;
      $6780 = HEAP32[$vinfos251>>2]|0;
      $6781 = ((($6780)) + 19|0);
      HEAP8[$6781>>0] = $6779;
      $6782 = HEAP8[$512>>0]|0;
      $6783 = HEAP32[$vinfos251>>2]|0;
      $6784 = ((($6783)) + 20|0);
      HEAP8[$6784>>0] = $6782;
      $6785 = HEAP8[$513>>0]|0;
      $6786 = HEAP32[$vinfos251>>2]|0;
      $6787 = ((($6786)) + 18|0);
      HEAP8[$6787>>0] = $6785;
      $6788 = HEAP32[$vinfos251>>2]|0;
      $6789 = ((($6788)) + 41|0);
      HEAP8[$6789>>0] = 1;
      $6790 = +HEAPF64[$514>>3];
      $6791 = HEAP32[$vinfos251>>2]|0;
      $6792 = ((($6791)) + 32|0);
      HEAPF64[$6792>>3] = $6790;
      $6793 = HEAP8[$515>>0]|0;
      $6794 = HEAP32[$vinfos251>>2]|0;
      $6795 = ((($6794)) + 43|0);
      HEAP8[$6795>>0] = $6793;
      $6796 = HEAP8[$516>>0]|0;
      $6797 = HEAP32[$vinfos251>>2]|0;
      $6798 = ((($6797)) + 44|0);
      HEAP8[$6798>>0] = $6796;
      $6799 = HEAP8[$517>>0]|0;
      $6800 = HEAP32[$vinfos251>>2]|0;
      $6801 = ((($6800)) + 42|0);
      HEAP8[$6801>>0] = $6799;
      $6802 = HEAP32[$vinfos251>>2]|0;
      $6803 = ((($6802)) + 65|0);
      HEAP8[$6803>>0] = 1;
      $6804 = +HEAPF64[$518>>3];
      $6805 = HEAP32[$vinfos251>>2]|0;
      $6806 = ((($6805)) + 56|0);
      HEAPF64[$6806>>3] = $6804;
      $6807 = HEAP8[$519>>0]|0;
      $6808 = HEAP32[$vinfos251>>2]|0;
      $6809 = ((($6808)) + 67|0);
      HEAP8[$6809>>0] = $6807;
      $6810 = HEAP8[$520>>0]|0;
      $6811 = HEAP32[$vinfos251>>2]|0;
      $6812 = ((($6811)) + 68|0);
      HEAP8[$6812>>0] = $6810;
      $6813 = HEAP8[$521>>0]|0;
      $6814 = HEAP32[$vinfos251>>2]|0;
      $6815 = ((($6814)) + 66|0);
      HEAP8[$6815>>0] = $6813;
      $6816 = HEAP32[$vinfos251>>2]|0;
      $6817 = ((($6816)) + 89|0);
      HEAP8[$6817>>0] = 1;
      $6818 = +HEAPF64[$522>>3];
      $6819 = HEAP32[$vinfos251>>2]|0;
      $6820 = ((($6819)) + 80|0);
      HEAPF64[$6820>>3] = $6818;
      $6821 = HEAP8[$523>>0]|0;
      $6822 = HEAP32[$vinfos251>>2]|0;
      $6823 = ((($6822)) + 91|0);
      HEAP8[$6823>>0] = $6821;
      $6824 = HEAP8[$524>>0]|0;
      $6825 = HEAP32[$vinfos251>>2]|0;
      $6826 = ((($6825)) + 92|0);
      HEAP8[$6826>>0] = $6824;
      $6827 = HEAP8[$525>>0]|0;
      $6828 = HEAP32[$vinfos251>>2]|0;
      $6829 = ((($6828)) + 90|0);
      HEAP8[$6829>>0] = $6827;
      $6830 = HEAP32[$vinfos251>>2]|0;
      $6831 = ((($6830)) + 113|0);
      HEAP8[$6831>>0] = 1;
      $6832 = +HEAPF64[$351>>3];
      $6833 = HEAP32[$vinfos251>>2]|0;
      $6834 = ((($6833)) + 104|0);
      HEAPF64[$6834>>3] = $6832;
      $6835 = HEAP8[$349>>0]|0;
      $6836 = HEAP32[$vinfos251>>2]|0;
      $6837 = ((($6836)) + 115|0);
      HEAP8[$6837>>0] = $6835;
      $6838 = HEAP8[$350>>0]|0;
      $6839 = HEAP32[$vinfos251>>2]|0;
      $6840 = ((($6839)) + 116|0);
      HEAP8[$6840>>0] = $6838;
      $6841 = HEAP8[$346>>0]|0;
      $6842 = HEAP32[$vinfos251>>2]|0;
      $6843 = ((($6842)) + 114|0);
      HEAP8[$6843>>0] = $6841;
      $6844 = HEAP32[$vinfos251>>2]|0;
      $6845 = ((($6844)) + 137|0);
      HEAP8[$6845>>0] = 1;
      $6846 = +HEAPF64[$29>>3];
      $6847 = HEAP32[$vinfos251>>2]|0;
      $6848 = ((($6847)) + 128|0);
      HEAPF64[$6848>>3] = $6846;
      $6849 = HEAP8[$27>>0]|0;
      $6850 = HEAP32[$vinfos251>>2]|0;
      $6851 = ((($6850)) + 139|0);
      HEAP8[$6851>>0] = $6849;
      $6852 = HEAP8[$28>>0]|0;
      $6853 = HEAP32[$vinfos251>>2]|0;
      $6854 = ((($6853)) + 140|0);
      HEAP8[$6854>>0] = $6852;
      $6855 = HEAP8[$26>>0]|0;
      $6856 = HEAP32[$vinfos251>>2]|0;
      $6857 = ((($6856)) + 138|0);
      HEAP8[$6857>>0] = $6855;
      $6858 = HEAP32[$vinfos251>>2]|0;
      $6859 = ((($6858)) + 161|0);
      HEAP8[$6859>>0] = 1;
      $6860 = +HEAPF64[$508>>3];
      $6861 = HEAP32[$vinfos251>>2]|0;
      $6862 = ((($6861)) + 152|0);
      HEAPF64[$6862>>3] = $6860;
      $6863 = HEAP8[$506>>0]|0;
      $6864 = HEAP32[$vinfos251>>2]|0;
      $6865 = ((($6864)) + 163|0);
      HEAP8[$6865>>0] = $6863;
      $6866 = HEAP8[$507>>0]|0;
      $6867 = HEAP32[$vinfos251>>2]|0;
      $6868 = ((($6867)) + 164|0);
      HEAP8[$6868>>0] = $6866;
      $6869 = HEAP8[$503>>0]|0;
      $6870 = HEAP32[$vinfos251>>2]|0;
      $6871 = ((($6870)) + 162|0);
      HEAP8[$6871>>0] = $6869;
      __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree252,0);
      $6872 = HEAP32[$solutions>>2]|0;
      $6873 = ((($6872)) + 8|0);
      $6874 = HEAP32[$6873>>2]|0;
      (FUNCTION_TABLE_iiii[$6874 & 31]($solutions,$vinfos251,$vfree252)|0);
      __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree252);
      __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos251);
      break;
     }
    }
    $908 = +HEAPF64[$0>>3];
    $909 = $908 * 0.70710678118654802;
    $910 = +HEAPF64[$1>>3];
    $911 = +HEAPF64[$2>>3];
    $912 = $910 * $911;
    $913 = $911 * 0.70710678118654802;
    $914 = +HEAPF64[$3>>3];
    $915 = +HEAPF64[$4>>3];
    $916 = $914 * $915;
    $917 = $910 * $915;
    $918 = +HEAPF64[$5>>3];
    $919 = +HEAPF64[$6>>3];
    $920 = $914 * $919;
    $921 = $910 * $919;
    $922 = $913 * $915;
    $923 = $921 * 0.70710678118654802;
    $924 = $914 * $913;
    $925 = $917 * 0.70710678118654802;
    $926 = $913 * $919;
    $927 = -$918;
    $928 = $909 * $916;
    $929 = $909 - $924;
    $930 = $909 * $920;
    $931 = -$909;
    $932 = $931 - $924;
    $933 = $908 * $921;
    $934 = $916 - $933;
    $935 = +HEAPF64[$7>>3];
    $936 = $932 * $935;
    $937 = $925 + $930;
    $938 = $922 + $928;
    $939 = $938 - $923;
    $940 = $928 - $923;
    $941 = $940 - $922;
    $942 = $937 - $926;
    $943 = $926 + $937;
    $944 = $935 * $942;
    $945 = $929 * $935;
    $946 = $918 * $932;
    $947 = $946 + $945;
    $948 = $929 * $927;
    $949 = $948 + $936;
    $950 = $935 * $939;
    $951 = $918 * $941;
    $952 = $950 + $951;
    $953 = $935 * $941;
    $954 = $939 * $927;
    $955 = $954 + $953;
    $956 = $918 * $942;
    $957 = $935 * $943;
    $958 = $956 + $957;
    $959 = $943 * $927;
    $960 = $959 + $944;
    $961 = +HEAPF64[$9>>3];
    $962 = $961 * $955;
    $963 = +HEAPF64[$10>>3];
    $964 = $963 * $952;
    $965 = $962 + $964;
    $966 = +HEAPF64[$8>>3];
    $967 = $627 * $966;
    $968 = $967 + $965;
    HEAPF64[$11>>3] = $968;
    $969 = +HEAPF64[$14>>3];
    $970 = $969 * $955;
    $971 = +HEAPF64[$12>>3];
    $972 = $971 * $952;
    $973 = $970 + $972;
    $974 = +HEAPF64[$13>>3];
    $975 = $627 * $974;
    $976 = $973 + $975;
    HEAPF64[$15>>3] = $976;
    $977 = +HEAPF64[$16>>3];
    $978 = $627 * $977;
    $979 = +HEAPF64[$18>>3];
    $980 = $955 * $979;
    $981 = $978 + $980;
    $982 = +HEAPF64[$17>>3];
    $983 = $952 * $982;
    $984 = $981 + $983;
    HEAPF64[$19>>3] = $984;
    $985 = +HEAPF64[$9>>3];
    $986 = $949 * $985;
    $987 = +HEAPF64[$10>>3];
    $988 = $947 * $987;
    $989 = $986 + $988;
    $990 = +HEAPF64[$8>>3];
    $991 = $912 * $990;
    $992 = $989 + $991;
    HEAPF64[$20>>3] = $992;
    $993 = +HEAPF64[$13>>3];
    $994 = $912 * $993;
    $995 = +HEAPF64[$12>>3];
    $996 = $947 * $995;
    $997 = $994 + $996;
    $998 = +HEAPF64[$14>>3];
    $999 = $949 * $998;
    $1000 = $997 + $999;
    HEAPF64[$21>>3] = $1000;
    $1001 = +HEAPF64[$18>>3];
    $1002 = $949 * $1001;
    $1003 = +HEAPF64[$17>>3];
    $1004 = $947 * $1003;
    $1005 = $1002 + $1004;
    $1006 = +HEAPF64[$16>>3];
    $1007 = $912 * $1006;
    $1008 = $1005 + $1007;
    HEAPF64[$22>>3] = $1008;
    $1009 = +HEAPF64[$9>>3];
    $1010 = $960 * $1009;
    $1011 = +HEAPF64[$10>>3];
    $1012 = $958 * $1011;
    $1013 = $1010 + $1012;
    $1014 = +HEAPF64[$8>>3];
    $1015 = $934 * $1014;
    $1016 = $1013 + $1015;
    HEAPF64[$23>>3] = $1016;
    $1017 = +HEAPF64[$12>>3];
    $1018 = $958 * $1017;
    $1019 = +HEAPF64[$13>>3];
    $1020 = $934 * $1019;
    $1021 = $1018 + $1020;
    $1022 = +HEAPF64[$14>>3];
    $1023 = $960 * $1022;
    $1024 = $1021 + $1023;
    HEAPF64[$24>>3] = $1024;
    $1025 = +HEAPF64[$16>>3];
    $1026 = $934 * $1025;
    $1027 = +HEAPF64[$18>>3];
    $1028 = $960 * $1027;
    $1029 = $1026 + $1028;
    $1030 = +HEAPF64[$17>>3];
    $1031 = $958 * $1030;
    $1032 = $1029 + $1031;
    HEAPF64[$25>>3] = $1032;
    $1033 = +HEAPF64[$31>>3];
    $1034 = (+__Z5IKabsd($1033));
    $1035 = $1034 < 9.9999999999999995E-7;
    if ($1035) {
     $1036 = +HEAPF64[$29>>3];
     $1037 = (+__Z5IKabsd($1036));
     $1038 = $1037 + 3.14159265358979;
     $1039 = (+__Z6IKfmoddd($1038,6.2831853071795898));
     $1040 = $1039 + -3.14159265358979;
     $1041 = +HEAPF64[$23>>3];
     $1042 = +HEAPF64[$19>>3];
     $1043 = +HEAPF64[$22>>3];
     $1044 = +HEAPF64[$24>>3];
     $1045 = (+__Z5IKabsd($1040));
     $1046 = $1045 < 9.9999999999999995E-7;
     if ($1046) {
      $1047 = $1032 + -1.0;
      $1048 = (+__Z5IKabsd($1047));
      $1049 = $1048 < 9.9999999999999995E-7;
      if ($1049) {
       $1050 = (+__Z5IKabsd($1041));
       $1051 = $1050 < 9.9999999999999995E-7;
       if ($1051) {
        $1052 = (+__Z5IKabsd($1042));
        $1053 = $1052 < 9.9999999999999995E-7;
        if ($1053) {
         $1054 = (+__Z5IKabsd($1043));
         $1055 = $1054 < 9.9999999999999995E-7;
         if ($1055) {
          $1056 = (+__Z5IKabsd($1044));
          $1057 = $1056 < 9.9999999999999995E-7;
          if ($1057) {
           HEAP16[$j8valid>>1] = 0;
           HEAP8[$32>>0] = 2;
           $1058 = +HEAPF64[$19>>3];
           $1059 = +HEAPF64[$22>>3];
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x289,$1058,$1059,1.9999999999999999E-6);
           $1060 = HEAP8[$33>>0]|0;
           $1061 = ($1060<<24>>24)==(0);
           if ($1061) {
            break;
           }
           $1062 = +HEAPF64[$x289>>3];
           $1063 = -$1062;
           HEAPF64[$j8array>>3] = $1063;
           $1064 = (+__Z5IKsind($1063));
           HEAPF64[$sj8array>>3] = $1064;
           $1065 = (+__Z5IKcosd($1063));
           HEAPF64[$cj8array>>3] = $1065;
           $1066 = 3.14159265358979 - $1062;
           HEAPF64[$34>>3] = $1066;
           $1067 = (+__Z5IKsind($1066));
           HEAPF64[$35>>3] = $1067;
           $1068 = +HEAPF64[$34>>3];
           $1069 = (+__Z5IKcosd($1068));
           HEAPF64[$36>>3] = $1069;
           $1070 = +HEAPF64[$j8array>>3];
           $1071 = $1070 > 3.14159265358979;
           if ($1071) {
            $1072 = $1070 + -6.2831853071795898;
            HEAPF64[$j8array>>3] = $1072;
           } else {
            $1073 = $1070 < -3.14159265358979;
            if ($1073) {
             $1074 = $1070 + 6.2831853071795898;
             HEAPF64[$j8array>>3] = $1074;
            }
           }
           HEAP8[$j8valid>>0] = 1;
           $1075 = +HEAPF64[$34>>3];
           $1076 = $1075 > 3.14159265358979;
           if ($1076) {
            $1077 = $1075 + -6.2831853071795898;
            HEAPF64[$34>>3] = $1077;
           } else {
            $1078 = $1075 < -3.14159265358979;
            if ($1078) {
             $1079 = $1075 + 6.2831853071795898;
             HEAPF64[$34>>3] = $1079;
            }
           }
           HEAP8[$37>>0] = 1;
           $ij8$0368 = 0;
           while(1) {
            $1080 = (($j8valid) + ($ij8$0368)|0);
            $1081 = HEAP8[$1080>>0]|0;
            $1082 = ($1081<<24>>24)==(0);
            L351: do {
             if (!($1082)) {
              $1083 = $ij8$0368&255;
              HEAP8[$38>>0] = $1083;
              HEAP8[$39>>0] = -1;
              $iij8$0361 = (($ij8$0368) + 1)|0;
              $1084 = ($iij8$0361|0)<(2);
              do {
               if ($1084) {
                $1085 = (($sj8array) + ($ij8$0368<<3)|0);
                $1086 = (($j8valid) + ($iij8$0361)|0);
                $1087 = HEAP8[$1086>>0]|0;
                $1088 = ($1087<<24>>24)==(0);
                if ($1088) {
                 break;
                }
                $1089 = (($cj8array) + ($ij8$0368<<3)|0);
                $1090 = +HEAPF64[$1089>>3];
                $1091 = (($cj8array) + ($iij8$0361<<3)|0);
                $1092 = +HEAPF64[$1091>>3];
                $1093 = $1090 - $1092;
                $1094 = (+__Z5IKabsd($1093));
                $1095 = $1094 < 9.9999999999999995E-7;
                if (!($1095)) {
                 break;
                }
                $1096 = +HEAPF64[$1085>>3];
                $1097 = (($sj8array) + ($iij8$0361<<3)|0);
                $1098 = +HEAPF64[$1097>>3];
                $1099 = $1096 - $1098;
                $1100 = (+__Z5IKabsd($1099));
                $1101 = $1100 < 9.9999999999999995E-7;
                if (!($1101)) {
                 break;
                }
                HEAP8[$1086>>0] = 0;
                $1102 = $iij8$0361&255;
                HEAP8[$39>>0] = $1102;
               }
              } while(0);
              $1103 = (($j8array) + ($ij8$0368<<3)|0);
              $1104 = +HEAPF64[$1103>>3];
              HEAPF64[$40>>3] = $1104;
              $1105 = (($cj8array) + ($ij8$0368<<3)|0);
              $1106 = +HEAPF64[$1105>>3];
              HEAPF64[$41>>3] = $1106;
              $1107 = (($sj8array) + ($ij8$0368<<3)|0);
              $1108 = +HEAPF64[$1107>>3];
              HEAPF64[$42>>3] = $1108;
              $1109 = +HEAPF64[$19>>3];
              $1110 = +HEAPF64[$40>>3];
              $1111 = (+__Z5IKsind($1110));
              $1112 = $1109 * $1111;
              $1113 = +HEAPF64[$22>>3];
              $1114 = (+__Z5IKcosd($1110));
              $1115 = $1113 * $1114;
              $1116 = $1115 - $1112;
              $1117 = (+__Z5IKabsd($1116));
              $1118 = $1117 > 5.0000000000000004E-6;
              if ($1118) {
               break;
              }
              HEAP8[$43>>0] = 1;
              $1119 = +HEAPF64[$15>>3];
              $1120 = +HEAPF64[$41>>3];
              $1121 = $1119 * $1120;
              $1122 = +HEAPF64[$11>>3];
              $1123 = +HEAPF64[$42>>3];
              $1124 = $1122 * $1123;
              $1125 = -$1124;
              $1126 = $1125 - $1121;
              $1127 = (+__Z5IKabsd($1126));
              $1128 = $1127 < 1.9999999999999999E-6;
              do {
               if ($1128) {
                $1129 = $1120 * $1122;
                $1130 = $1119 * $1123;
                $1131 = $1129 - $1130;
                $1132 = (+__Z5IKabsd($1131));
                $1133 = $1132 < 1.9999999999999999E-6;
                if (!($1133)) {
                 break;
                }
                $1134 = (+__Z5IKsqrd($1126));
                $1135 = (+__Z5IKsqrd($1131));
                $1136 = $1134 + $1135;
                $1137 = $1136 + -1.0;
                $1138 = (+__Z5IKabsd($1137));
                $1139 = !($1138 <= 1.9999999999999999E-6);
                if (!($1139)) {
                 break L351;
                }
               }
              } while(0);
              $1140 = +HEAPF64[$41>>3];
              $1141 = $1119 * $1140;
              $1142 = +HEAPF64[$11>>3];
              $1143 = +HEAPF64[$42>>3];
              $1144 = $1142 * $1143;
              $1145 = -$1144;
              $1146 = $1145 - $1141;
              $1147 = $1140 * $1142;
              $1148 = $1119 * $1143;
              $1149 = $1147 - $1148;
              $1150 = (+__Z7IKatan2dd($1146,$1149));
              $1151 = (+__Z5IKsind($1150));
              $1152 = (+__Z5IKcosd($1150));
              $1153 = $1150 > 3.14159265358979;
              do {
               if ($1153) {
                $1154 = $1150 + -6.2831853071795898;
                $1157 = $1154;
               } else {
                $1155 = $1150 < -3.14159265358979;
                if (!($1155)) {
                 $1157 = $1150;
                 break;
                }
                $1156 = $1150 + 6.2831853071795898;
                $1157 = $1156;
               }
              } while(0);
              HEAP8[$44>>0] = 0;
              HEAP8[$45>>0] = -1;
              HEAPF64[$46>>3] = $1157;
              HEAPF64[$47>>3] = $1152;
              HEAPF64[$48>>3] = $1151;
              $1158 = +HEAPF64[$46>>3];
              $1159 = (+__Z5IKsind($1158));
              $1160 = (+__Z5IKcosd($1158));
              $1161 = +HEAPF64[$42>>3];
              $1162 = $1159 * $1161;
              $1163 = +HEAPF64[$41>>3];
              $1164 = $1159 * $1163;
              $1165 = $1160 * $1163;
              $1166 = +HEAPF64[$21>>3];
              $1167 = $1161 * $1166;
              $1168 = $1159 + $1167;
              $1169 = +HEAPF64[$15>>3];
              $1170 = $1163 * $1169;
              $1171 = $1168 + $1170;
              $1172 = +HEAPF64[$20>>3];
              $1173 = $1161 * $1172;
              $1174 = -$1160;
              $1175 = $1173 - $1160;
              $1176 = +HEAPF64[$11>>3];
              $1177 = $1163 * $1176;
              $1178 = $1175 + $1177;
              $1179 = $1163 * $1172;
              $1180 = $1179 - $1159;
              $1181 = $1161 * $1176;
              $1182 = $1180 - $1181;
              $1183 = $1161 * $1169;
              $1184 = $1174 - $1183;
              $1185 = $1163 * $1166;
              $1186 = $1185 + $1184;
              $1187 = $1162 - $1165;
              $1188 = $1187 + $1176;
              $1189 = $1166 + $1187;
              $1190 = $1172 - $1164;
              $1191 = $1161 * $1174;
              $1192 = $1191 + $1190;
              $1193 = (+__Z5IKabsd($1171));
              $1194 = $1193 > 5.0000000000000004E-6;
              if ($1194) {
               break;
              }
              $1195 = $1160 * $1161;
              $1196 = $1195 + $1164;
              $1197 = $1196 + $1169;
              $1198 = (+__Z5IKabsd($1197));
              $1199 = $1198 > 5.0000000000000004E-6;
              if ($1199) {
               break;
              }
              $1200 = (+__Z5IKabsd($1178));
              $1201 = $1200 > 5.0000000000000004E-6;
              if ($1201) {
               break;
              }
              $1202 = (+__Z5IKabsd($1182));
              $1203 = $1202 > 5.0000000000000004E-6;
              if ($1203) {
               break;
              }
              $1204 = (+__Z5IKabsd($1186));
              $1205 = $1204 > 5.0000000000000004E-6;
              if ($1205) {
               break;
              }
              $1206 = (+__Z5IKabsd($1188));
              $1207 = $1206 > 5.0000000000000004E-6;
              if ($1207) {
               break;
              }
              $1208 = (+__Z5IKabsd($1189));
              $1209 = $1208 > 5.0000000000000004E-6;
              if ($1209) {
               break;
              }
              $1210 = (+__Z5IKabsd($1192));
              $1211 = $1210 > 5.0000000000000004E-6;
              if ($1211) {
               break;
              }
              __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos,7);
              $1212 = HEAP32[$vinfos>>2]|0;
              $1213 = ((($1212)) + 17|0);
              HEAP8[$1213>>0] = 1;
              $1214 = +HEAPF64[$this>>3];
              $1215 = HEAP32[$vinfos>>2]|0;
              $1216 = ((($1215)) + 8|0);
              HEAPF64[$1216>>3] = $1214;
              $1217 = HEAP8[$49>>0]|0;
              $1218 = HEAP32[$vinfos>>2]|0;
              $1219 = ((($1218)) + 19|0);
              HEAP8[$1219>>0] = $1217;
              $1220 = HEAP8[$50>>0]|0;
              $1221 = HEAP32[$vinfos>>2]|0;
              $1222 = ((($1221)) + 20|0);
              HEAP8[$1222>>0] = $1220;
              $1223 = HEAP8[$51>>0]|0;
              $1224 = HEAP32[$vinfos>>2]|0;
              $1225 = ((($1224)) + 18|0);
              HEAP8[$1225>>0] = $1223;
              $1226 = HEAP32[$vinfos>>2]|0;
              $1227 = ((($1226)) + 41|0);
              HEAP8[$1227>>0] = 1;
              $1228 = +HEAPF64[$52>>3];
              $1229 = HEAP32[$vinfos>>2]|0;
              $1230 = ((($1229)) + 32|0);
              HEAPF64[$1230>>3] = $1228;
              $1231 = HEAP8[$53>>0]|0;
              $1232 = HEAP32[$vinfos>>2]|0;
              $1233 = ((($1232)) + 43|0);
              HEAP8[$1233>>0] = $1231;
              $1234 = HEAP8[$54>>0]|0;
              $1235 = HEAP32[$vinfos>>2]|0;
              $1236 = ((($1235)) + 44|0);
              HEAP8[$1236>>0] = $1234;
              $1237 = HEAP8[$55>>0]|0;
              $1238 = HEAP32[$vinfos>>2]|0;
              $1239 = ((($1238)) + 42|0);
              HEAP8[$1239>>0] = $1237;
              $1240 = HEAP32[$vinfos>>2]|0;
              $1241 = ((($1240)) + 65|0);
              HEAP8[$1241>>0] = 1;
              $1242 = +HEAPF64[$56>>3];
              $1243 = HEAP32[$vinfos>>2]|0;
              $1244 = ((($1243)) + 56|0);
              HEAPF64[$1244>>3] = $1242;
              $1245 = HEAP8[$57>>0]|0;
              $1246 = HEAP32[$vinfos>>2]|0;
              $1247 = ((($1246)) + 67|0);
              HEAP8[$1247>>0] = $1245;
              $1248 = HEAP8[$58>>0]|0;
              $1249 = HEAP32[$vinfos>>2]|0;
              $1250 = ((($1249)) + 68|0);
              HEAP8[$1250>>0] = $1248;
              $1251 = HEAP8[$59>>0]|0;
              $1252 = HEAP32[$vinfos>>2]|0;
              $1253 = ((($1252)) + 66|0);
              HEAP8[$1253>>0] = $1251;
              $1254 = HEAP32[$vinfos>>2]|0;
              $1255 = ((($1254)) + 89|0);
              HEAP8[$1255>>0] = 1;
              $1256 = +HEAPF64[$60>>3];
              $1257 = HEAP32[$vinfos>>2]|0;
              $1258 = ((($1257)) + 80|0);
              HEAPF64[$1258>>3] = $1256;
              $1259 = HEAP8[$61>>0]|0;
              $1260 = HEAP32[$vinfos>>2]|0;
              $1261 = ((($1260)) + 91|0);
              HEAP8[$1261>>0] = $1259;
              $1262 = HEAP8[$62>>0]|0;
              $1263 = HEAP32[$vinfos>>2]|0;
              $1264 = ((($1263)) + 92|0);
              HEAP8[$1264>>0] = $1262;
              $1265 = HEAP8[$63>>0]|0;
              $1266 = HEAP32[$vinfos>>2]|0;
              $1267 = ((($1266)) + 90|0);
              HEAP8[$1267>>0] = $1265;
              $1268 = HEAP32[$vinfos>>2]|0;
              $1269 = ((($1268)) + 113|0);
              HEAP8[$1269>>0] = 1;
              $1270 = +HEAPF64[$40>>3];
              $1271 = HEAP32[$vinfos>>2]|0;
              $1272 = ((($1271)) + 104|0);
              HEAPF64[$1272>>3] = $1270;
              $1273 = HEAP8[$38>>0]|0;
              $1274 = HEAP32[$vinfos>>2]|0;
              $1275 = ((($1274)) + 115|0);
              HEAP8[$1275>>0] = $1273;
              $1276 = HEAP8[$39>>0]|0;
              $1277 = HEAP32[$vinfos>>2]|0;
              $1278 = ((($1277)) + 116|0);
              HEAP8[$1278>>0] = $1276;
              $1279 = HEAP8[$32>>0]|0;
              $1280 = HEAP32[$vinfos>>2]|0;
              $1281 = ((($1280)) + 114|0);
              HEAP8[$1281>>0] = $1279;
              $1282 = HEAP32[$vinfos>>2]|0;
              $1283 = ((($1282)) + 137|0);
              HEAP8[$1283>>0] = 1;
              $1284 = +HEAPF64[$29>>3];
              $1285 = HEAP32[$vinfos>>2]|0;
              $1286 = ((($1285)) + 128|0);
              HEAPF64[$1286>>3] = $1284;
              $1287 = HEAP8[$27>>0]|0;
              $1288 = HEAP32[$vinfos>>2]|0;
              $1289 = ((($1288)) + 139|0);
              HEAP8[$1289>>0] = $1287;
              $1290 = HEAP8[$28>>0]|0;
              $1291 = HEAP32[$vinfos>>2]|0;
              $1292 = ((($1291)) + 140|0);
              HEAP8[$1292>>0] = $1290;
              $1293 = HEAP8[$26>>0]|0;
              $1294 = HEAP32[$vinfos>>2]|0;
              $1295 = ((($1294)) + 138|0);
              HEAP8[$1295>>0] = $1293;
              $1296 = HEAP32[$vinfos>>2]|0;
              $1297 = ((($1296)) + 161|0);
              HEAP8[$1297>>0] = 1;
              $1298 = +HEAPF64[$46>>3];
              $1299 = HEAP32[$vinfos>>2]|0;
              $1300 = ((($1299)) + 152|0);
              HEAPF64[$1300>>3] = $1298;
              $1301 = HEAP8[$44>>0]|0;
              $1302 = HEAP32[$vinfos>>2]|0;
              $1303 = ((($1302)) + 163|0);
              HEAP8[$1303>>0] = $1301;
              $1304 = HEAP8[$45>>0]|0;
              $1305 = HEAP32[$vinfos>>2]|0;
              $1306 = ((($1305)) + 164|0);
              HEAP8[$1306>>0] = $1304;
              $1307 = HEAP8[$43>>0]|0;
              $1308 = HEAP32[$vinfos>>2]|0;
              $1309 = ((($1308)) + 162|0);
              HEAP8[$1309>>0] = $1307;
              __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree,0);
              $1310 = HEAP32[$solutions>>2]|0;
              $1311 = ((($1310)) + 8|0);
              $1312 = HEAP32[$1311>>2]|0;
              (FUNCTION_TABLE_iiii[$1312 & 31]($solutions,$vinfos,$vfree)|0);
              __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree);
              __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos);
             }
            } while(0);
            $1313 = (($ij8$0368) + 1)|0;
            $1314 = ($1313|0)<(2);
            if ($1314) {
             $ij8$0368 = $1313;
            } else {
             break L7;
            }
           }
          }
         }
        }
       }
      }
     }
     $1315 = +HEAPF64[$29>>3];
     $1316 = $1315 + -3.14159265358979;
     $1317 = (+__Z5IKabsd($1316));
     $1318 = $1317 + 3.14159265358979;
     $1319 = (+__Z6IKfmoddd($1318,6.2831853071795898));
     $1320 = $1319 + -3.14159265358979;
     $1321 = +HEAPF64[$23>>3];
     $1322 = +HEAPF64[$19>>3];
     $1323 = +HEAPF64[$22>>3];
     $1324 = +HEAPF64[$24>>3];
     $1325 = (+__Z5IKabsd($1320));
     $1326 = $1325 < 9.9999999999999995E-7;
     if (!($1326)) {
      break;
     }
     $1327 = +HEAPF64[$25>>3];
     $1328 = $1327 + 1.0;
     $1329 = (+__Z5IKabsd($1328));
     $1330 = $1329 < 9.9999999999999995E-7;
     if (!($1330)) {
      break;
     }
     $1331 = (+__Z5IKabsd($1321));
     $1332 = $1331 < 9.9999999999999995E-7;
     if (!($1332)) {
      break;
     }
     $1333 = (+__Z5IKabsd($1322));
     $1334 = $1333 < 9.9999999999999995E-7;
     if (!($1334)) {
      break;
     }
     $1335 = (+__Z5IKabsd($1323));
     $1336 = $1335 < 9.9999999999999995E-7;
     if (!($1336)) {
      break;
     }
     $1337 = (+__Z5IKabsd($1324));
     $1338 = $1337 < 9.9999999999999995E-7;
     if (!($1338)) {
      break;
     }
     HEAP16[$j8valid8>>1] = 0;
     HEAP8[$64>>0] = 2;
     $1339 = +HEAPF64[$19>>3];
     $1340 = +HEAPF64[$22>>3];
     __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x299,$1339,$1340,1.9999999999999999E-6);
     $1341 = HEAP8[$65>>0]|0;
     $1342 = ($1341<<24>>24)==(0);
     if ($1342) {
      break;
     }
     $1343 = +HEAPF64[$x299>>3];
     $1344 = -$1343;
     HEAPF64[$j8array5>>3] = $1344;
     $1345 = (+__Z5IKsind($1344));
     HEAPF64[$sj8array7>>3] = $1345;
     $1346 = (+__Z5IKcosd($1344));
     HEAPF64[$cj8array6>>3] = $1346;
     $1347 = 3.14159265358979 - $1343;
     HEAPF64[$66>>3] = $1347;
     $1348 = (+__Z5IKsind($1347));
     HEAPF64[$67>>3] = $1348;
     $1349 = +HEAPF64[$66>>3];
     $1350 = (+__Z5IKcosd($1349));
     HEAPF64[$68>>3] = $1350;
     $1351 = +HEAPF64[$j8array5>>3];
     $1352 = $1351 > 3.14159265358979;
     if ($1352) {
      $1353 = $1351 + -6.2831853071795898;
      HEAPF64[$j8array5>>3] = $1353;
     } else {
      $1354 = $1351 < -3.14159265358979;
      if ($1354) {
       $1355 = $1351 + 6.2831853071795898;
       HEAPF64[$j8array5>>3] = $1355;
      }
     }
     HEAP8[$j8valid8>>0] = 1;
     $1356 = +HEAPF64[$66>>3];
     $1357 = $1356 > 3.14159265358979;
     if ($1357) {
      $1358 = $1356 + -6.2831853071795898;
      HEAPF64[$66>>3] = $1358;
     } else {
      $1359 = $1356 < -3.14159265358979;
      if ($1359) {
       $1360 = $1356 + 6.2831853071795898;
       HEAPF64[$66>>3] = $1360;
      }
     }
     HEAP8[$69>>0] = 1;
     $ij89$0360 = 0;
     while(1) {
      $1361 = (($j8valid8) + ($ij89$0360)|0);
      $1362 = HEAP8[$1361>>0]|0;
      $1363 = ($1362<<24>>24)==(0);
      L398: do {
       if (!($1363)) {
        $1364 = $ij89$0360&255;
        HEAP8[$70>>0] = $1364;
        HEAP8[$71>>0] = -1;
        $iij810$0353 = (($ij89$0360) + 1)|0;
        $1365 = ($iij810$0353|0)<(2);
        do {
         if ($1365) {
          $1366 = (($sj8array7) + ($ij89$0360<<3)|0);
          $1367 = (($j8valid8) + ($iij810$0353)|0);
          $1368 = HEAP8[$1367>>0]|0;
          $1369 = ($1368<<24>>24)==(0);
          if ($1369) {
           break;
          }
          $1370 = (($cj8array6) + ($ij89$0360<<3)|0);
          $1371 = +HEAPF64[$1370>>3];
          $1372 = (($cj8array6) + ($iij810$0353<<3)|0);
          $1373 = +HEAPF64[$1372>>3];
          $1374 = $1371 - $1373;
          $1375 = (+__Z5IKabsd($1374));
          $1376 = $1375 < 9.9999999999999995E-7;
          if (!($1376)) {
           break;
          }
          $1377 = +HEAPF64[$1366>>3];
          $1378 = (($sj8array7) + ($iij810$0353<<3)|0);
          $1379 = +HEAPF64[$1378>>3];
          $1380 = $1377 - $1379;
          $1381 = (+__Z5IKabsd($1380));
          $1382 = $1381 < 9.9999999999999995E-7;
          if (!($1382)) {
           break;
          }
          HEAP8[$1367>>0] = 0;
          $1383 = $iij810$0353&255;
          HEAP8[$71>>0] = $1383;
         }
        } while(0);
        $1384 = (($j8array5) + ($ij89$0360<<3)|0);
        $1385 = +HEAPF64[$1384>>3];
        HEAPF64[$72>>3] = $1385;
        $1386 = (($cj8array6) + ($ij89$0360<<3)|0);
        $1387 = +HEAPF64[$1386>>3];
        HEAPF64[$73>>3] = $1387;
        $1388 = (($sj8array7) + ($ij89$0360<<3)|0);
        $1389 = +HEAPF64[$1388>>3];
        HEAPF64[$74>>3] = $1389;
        $1390 = +HEAPF64[$19>>3];
        $1391 = +HEAPF64[$72>>3];
        $1392 = (+__Z5IKsind($1391));
        $1393 = $1390 * $1392;
        $1394 = +HEAPF64[$22>>3];
        $1395 = (+__Z5IKcosd($1391));
        $1396 = $1394 * $1395;
        $1397 = $1396 - $1393;
        $1398 = (+__Z5IKabsd($1397));
        $1399 = $1398 > 5.0000000000000004E-6;
        if ($1399) {
         break;
        }
        HEAP8[$75>>0] = 1;
        $1400 = +HEAPF64[$11>>3];
        $1401 = +HEAPF64[$73>>3];
        $1402 = +HEAPF64[$15>>3];
        $1403 = $1401 * $1402;
        $1404 = +HEAPF64[$74>>3];
        $1405 = $1400 * $1404;
        $1406 = $1403 - $1405;
        $1407 = (+__Z5IKabsd($1406));
        $1408 = $1407 < 1.9999999999999999E-6;
        do {
         if ($1408) {
          $1409 = $1402 * $1404;
          $1410 = $1400 * $1401;
          $1411 = -$1410;
          $1412 = $1411 - $1409;
          $1413 = (+__Z5IKabsd($1412));
          $1414 = $1413 < 1.9999999999999999E-6;
          if (!($1414)) {
           break;
          }
          $1415 = (+__Z5IKsqrd($1406));
          $1416 = (+__Z5IKsqrd($1412));
          $1417 = $1415 + $1416;
          $1418 = $1417 + -1.0;
          $1419 = (+__Z5IKabsd($1418));
          $1420 = !($1419 <= 1.9999999999999999E-6);
          if (!($1420)) {
           break L398;
          }
         }
        } while(0);
        $1421 = +HEAPF64[$73>>3];
        $1422 = +HEAPF64[$15>>3];
        $1423 = $1421 * $1422;
        $1424 = +HEAPF64[$74>>3];
        $1425 = $1400 * $1424;
        $1426 = $1423 - $1425;
        $1427 = $1422 * $1424;
        $1428 = $1400 * $1421;
        $1429 = -$1428;
        $1430 = $1429 - $1427;
        $1431 = (+__Z7IKatan2dd($1426,$1430));
        $1432 = (+__Z5IKsind($1431));
        $1433 = (+__Z5IKcosd($1431));
        $1434 = $1431 > 3.14159265358979;
        do {
         if ($1434) {
          $1435 = $1431 + -6.2831853071795898;
          $1438 = $1435;
         } else {
          $1436 = $1431 < -3.14159265358979;
          if (!($1436)) {
           $1438 = $1431;
           break;
          }
          $1437 = $1431 + 6.2831853071795898;
          $1438 = $1437;
         }
        } while(0);
        HEAP8[$76>>0] = 0;
        HEAP8[$77>>0] = -1;
        HEAPF64[$78>>3] = $1438;
        HEAPF64[$79>>3] = $1433;
        HEAPF64[$80>>3] = $1432;
        $1439 = +HEAPF64[$78>>3];
        $1440 = (+__Z5IKsind($1439));
        $1441 = (+__Z5IKcosd($1439));
        $1442 = +HEAPF64[$74>>3];
        $1443 = $1441 * $1442;
        $1444 = +HEAPF64[$73>>3];
        $1445 = $1440 * $1444;
        $1446 = +HEAPF64[$20>>3];
        $1447 = $1442 * $1446;
        $1448 = $1441 + $1447;
        $1449 = +HEAPF64[$11>>3];
        $1450 = $1444 * $1449;
        $1451 = $1448 + $1450;
        $1452 = +HEAPF64[$21>>3];
        $1453 = +HEAPF64[$15>>3];
        $1454 = $1440 * $1442;
        $1455 = $1441 * $1444;
        $1456 = $1454 + $1455;
        $1457 = $1456 + $1449;
        $1458 = $1444 * $1446;
        $1459 = $1442 * $1449;
        $1460 = $1458 - $1459;
        $1461 = $1460 - $1440;
        $1462 = $1444 * $1452;
        $1463 = $1442 * $1453;
        $1464 = $1462 - $1463;
        $1465 = $1464 - $1441;
        $1466 = $1443 + $1453;
        $1467 = $1466 - $1445;
        $1468 = $1443 + $1446;
        $1469 = $1468 - $1445;
        $1470 = -$1455;
        $1471 = $1470 - $1454;
        $1472 = $1471 + $1452;
        $1473 = (+__Z5IKabsd($1451));
        $1474 = $1473 > 5.0000000000000004E-6;
        if ($1474) {
         break;
        }
        $1475 = $1442 * $1452;
        $1476 = $1444 * $1453;
        $1477 = $1475 + $1476;
        $1478 = $1477 - $1440;
        $1479 = (+__Z5IKabsd($1478));
        $1480 = $1479 > 5.0000000000000004E-6;
        if ($1480) {
         break;
        }
        $1481 = (+__Z5IKabsd($1457));
        $1482 = $1481 > 5.0000000000000004E-6;
        if ($1482) {
         break;
        }
        $1483 = (+__Z5IKabsd($1461));
        $1484 = $1483 > 5.0000000000000004E-6;
        if ($1484) {
         break;
        }
        $1485 = (+__Z5IKabsd($1465));
        $1486 = $1485 > 5.0000000000000004E-6;
        if ($1486) {
         break;
        }
        $1487 = (+__Z5IKabsd($1467));
        $1488 = $1487 > 5.0000000000000004E-6;
        if ($1488) {
         break;
        }
        $1489 = (+__Z5IKabsd($1469));
        $1490 = $1489 > 5.0000000000000004E-6;
        if ($1490) {
         break;
        }
        $1491 = (+__Z5IKabsd($1472));
        $1492 = $1491 > 5.0000000000000004E-6;
        if ($1492) {
         break;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos20,7);
        $1493 = HEAP32[$vinfos20>>2]|0;
        $1494 = ((($1493)) + 17|0);
        HEAP8[$1494>>0] = 1;
        $1495 = +HEAPF64[$this>>3];
        $1496 = HEAP32[$vinfos20>>2]|0;
        $1497 = ((($1496)) + 8|0);
        HEAPF64[$1497>>3] = $1495;
        $1498 = HEAP8[$81>>0]|0;
        $1499 = HEAP32[$vinfos20>>2]|0;
        $1500 = ((($1499)) + 19|0);
        HEAP8[$1500>>0] = $1498;
        $1501 = HEAP8[$82>>0]|0;
        $1502 = HEAP32[$vinfos20>>2]|0;
        $1503 = ((($1502)) + 20|0);
        HEAP8[$1503>>0] = $1501;
        $1504 = HEAP8[$83>>0]|0;
        $1505 = HEAP32[$vinfos20>>2]|0;
        $1506 = ((($1505)) + 18|0);
        HEAP8[$1506>>0] = $1504;
        $1507 = HEAP32[$vinfos20>>2]|0;
        $1508 = ((($1507)) + 41|0);
        HEAP8[$1508>>0] = 1;
        $1509 = +HEAPF64[$84>>3];
        $1510 = HEAP32[$vinfos20>>2]|0;
        $1511 = ((($1510)) + 32|0);
        HEAPF64[$1511>>3] = $1509;
        $1512 = HEAP8[$85>>0]|0;
        $1513 = HEAP32[$vinfos20>>2]|0;
        $1514 = ((($1513)) + 43|0);
        HEAP8[$1514>>0] = $1512;
        $1515 = HEAP8[$86>>0]|0;
        $1516 = HEAP32[$vinfos20>>2]|0;
        $1517 = ((($1516)) + 44|0);
        HEAP8[$1517>>0] = $1515;
        $1518 = HEAP8[$87>>0]|0;
        $1519 = HEAP32[$vinfos20>>2]|0;
        $1520 = ((($1519)) + 42|0);
        HEAP8[$1520>>0] = $1518;
        $1521 = HEAP32[$vinfos20>>2]|0;
        $1522 = ((($1521)) + 65|0);
        HEAP8[$1522>>0] = 1;
        $1523 = +HEAPF64[$88>>3];
        $1524 = HEAP32[$vinfos20>>2]|0;
        $1525 = ((($1524)) + 56|0);
        HEAPF64[$1525>>3] = $1523;
        $1526 = HEAP8[$89>>0]|0;
        $1527 = HEAP32[$vinfos20>>2]|0;
        $1528 = ((($1527)) + 67|0);
        HEAP8[$1528>>0] = $1526;
        $1529 = HEAP8[$90>>0]|0;
        $1530 = HEAP32[$vinfos20>>2]|0;
        $1531 = ((($1530)) + 68|0);
        HEAP8[$1531>>0] = $1529;
        $1532 = HEAP8[$91>>0]|0;
        $1533 = HEAP32[$vinfos20>>2]|0;
        $1534 = ((($1533)) + 66|0);
        HEAP8[$1534>>0] = $1532;
        $1535 = HEAP32[$vinfos20>>2]|0;
        $1536 = ((($1535)) + 89|0);
        HEAP8[$1536>>0] = 1;
        $1537 = +HEAPF64[$92>>3];
        $1538 = HEAP32[$vinfos20>>2]|0;
        $1539 = ((($1538)) + 80|0);
        HEAPF64[$1539>>3] = $1537;
        $1540 = HEAP8[$93>>0]|0;
        $1541 = HEAP32[$vinfos20>>2]|0;
        $1542 = ((($1541)) + 91|0);
        HEAP8[$1542>>0] = $1540;
        $1543 = HEAP8[$94>>0]|0;
        $1544 = HEAP32[$vinfos20>>2]|0;
        $1545 = ((($1544)) + 92|0);
        HEAP8[$1545>>0] = $1543;
        $1546 = HEAP8[$95>>0]|0;
        $1547 = HEAP32[$vinfos20>>2]|0;
        $1548 = ((($1547)) + 90|0);
        HEAP8[$1548>>0] = $1546;
        $1549 = HEAP32[$vinfos20>>2]|0;
        $1550 = ((($1549)) + 113|0);
        HEAP8[$1550>>0] = 1;
        $1551 = +HEAPF64[$72>>3];
        $1552 = HEAP32[$vinfos20>>2]|0;
        $1553 = ((($1552)) + 104|0);
        HEAPF64[$1553>>3] = $1551;
        $1554 = HEAP8[$70>>0]|0;
        $1555 = HEAP32[$vinfos20>>2]|0;
        $1556 = ((($1555)) + 115|0);
        HEAP8[$1556>>0] = $1554;
        $1557 = HEAP8[$71>>0]|0;
        $1558 = HEAP32[$vinfos20>>2]|0;
        $1559 = ((($1558)) + 116|0);
        HEAP8[$1559>>0] = $1557;
        $1560 = HEAP8[$64>>0]|0;
        $1561 = HEAP32[$vinfos20>>2]|0;
        $1562 = ((($1561)) + 114|0);
        HEAP8[$1562>>0] = $1560;
        $1563 = HEAP32[$vinfos20>>2]|0;
        $1564 = ((($1563)) + 137|0);
        HEAP8[$1564>>0] = 1;
        $1565 = +HEAPF64[$29>>3];
        $1566 = HEAP32[$vinfos20>>2]|0;
        $1567 = ((($1566)) + 128|0);
        HEAPF64[$1567>>3] = $1565;
        $1568 = HEAP8[$27>>0]|0;
        $1569 = HEAP32[$vinfos20>>2]|0;
        $1570 = ((($1569)) + 139|0);
        HEAP8[$1570>>0] = $1568;
        $1571 = HEAP8[$28>>0]|0;
        $1572 = HEAP32[$vinfos20>>2]|0;
        $1573 = ((($1572)) + 140|0);
        HEAP8[$1573>>0] = $1571;
        $1574 = HEAP8[$26>>0]|0;
        $1575 = HEAP32[$vinfos20>>2]|0;
        $1576 = ((($1575)) + 138|0);
        HEAP8[$1576>>0] = $1574;
        $1577 = HEAP32[$vinfos20>>2]|0;
        $1578 = ((($1577)) + 161|0);
        HEAP8[$1578>>0] = 1;
        $1579 = +HEAPF64[$78>>3];
        $1580 = HEAP32[$vinfos20>>2]|0;
        $1581 = ((($1580)) + 152|0);
        HEAPF64[$1581>>3] = $1579;
        $1582 = HEAP8[$76>>0]|0;
        $1583 = HEAP32[$vinfos20>>2]|0;
        $1584 = ((($1583)) + 163|0);
        HEAP8[$1584>>0] = $1582;
        $1585 = HEAP8[$77>>0]|0;
        $1586 = HEAP32[$vinfos20>>2]|0;
        $1587 = ((($1586)) + 164|0);
        HEAP8[$1587>>0] = $1585;
        $1588 = HEAP8[$75>>0]|0;
        $1589 = HEAP32[$vinfos20>>2]|0;
        $1590 = ((($1589)) + 162|0);
        HEAP8[$1590>>0] = $1588;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree21,0);
        $1591 = HEAP32[$solutions>>2]|0;
        $1592 = ((($1591)) + 8|0);
        $1593 = HEAP32[$1592>>2]|0;
        (FUNCTION_TABLE_iiii[$1593 & 31]($solutions,$vinfos20,$vfree21)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree21);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos20);
       }
      } while(0);
      $1594 = (($ij89$0360) + 1)|0;
      $1595 = ($1594|0)<(2);
      if ($1595) {
       $ij89$0360 = $1594;
      } else {
       break L7;
      }
     }
    }
    HEAP8[$96>>0] = 1;
    $1596 = +HEAPF64[$31>>3];
    __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x309,$1596,-1);
    $1597 = HEAP8[$97>>0]|0;
    $1598 = ($1597<<24>>24)==(0);
    if (!($1598)) {
     $1599 = +HEAPF64[$x309>>3];
     $1600 = +HEAPF64[$22>>3];
     __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x310,$1600,-1);
     $1601 = HEAP8[$98>>0]|0;
     $1602 = ($1601<<24>>24)==(0);
     if (!($1602)) {
      $1603 = +HEAPF64[$x310>>3];
      $1604 = $1599 * $1603;
      $1605 = +HEAPF64[$30>>3];
      $1606 = $1605 * $1605;
      $1607 = 1.0 - $1606;
      $1608 = +HEAPF64[$19>>3];
      $1609 = $1608 * $1608;
      $1610 = $1607 - $1609;
      $1611 = $1604 * $1610;
      $1612 = (+__Z5IKabsd($1611));
      $1613 = $1612 < 1.9999999999999999E-6;
      if ($1613) {
       $1614 = $1599 * $1608;
       $1615 = (+__Z5IKabsd($1614));
       $1616 = $1615 < 1.9999999999999999E-6;
       if ($1616) {
        $1617 = (+__Z5IKsqrd($1611));
        $1618 = (+__Z5IKsqrd($1614));
        $1619 = $1617 + $1618;
        $1620 = $1619 + -1.0;
        $1621 = (+__Z5IKabsd($1620));
        $1622 = !($1621 <= 1.9999999999999999E-6);
        if (!($1622)) {
         break;
        }
       }
      }
      $1623 = +HEAPF64[$x310>>3];
      $1624 = $1599 * $1623;
      $1625 = +HEAPF64[$30>>3];
      $1626 = $1625 * $1625;
      $1627 = 1.0 - $1626;
      $1628 = +HEAPF64[$19>>3];
      $1629 = $1628 * $1628;
      $1630 = $1627 - $1629;
      $1631 = $1624 * $1630;
      $1632 = $1599 * $1628;
      $1633 = (+__Z7IKatan2dd($1631,$1632));
      $1634 = (+__Z5IKsind($1633));
      $1635 = (+__Z5IKcosd($1633));
      $1636 = $1633 > 3.14159265358979;
      if ($1636) {
       $1637 = $1633 + -6.2831853071795898;
       $1640 = $1637;
      } else {
       $1638 = $1633 < -3.14159265358979;
       if ($1638) {
        $1639 = $1633 + 6.2831853071795898;
        $1640 = $1639;
       } else {
        $1640 = $1633;
       }
      }
      HEAP8[$99>>0] = 0;
      HEAP8[$100>>0] = -1;
      HEAPF64[$101>>3] = $1640;
      HEAPF64[$102>>3] = $1635;
      HEAPF64[$103>>3] = $1634;
      $1641 = +HEAPF64[$101>>3];
      $1642 = (+__Z5IKcosd($1641));
      $1643 = (+__Z5IKsind($1641));
      $1644 = +HEAPF64[$30>>3];
      $1645 = +HEAPF64[$31>>3];
      $1646 = +HEAPF64[$22>>3];
      $1647 = $1643 * $1646;
      $1648 = +HEAPF64[$19>>3];
      $1649 = $1642 * $1648;
      $1650 = $1642 * $1645;
      $1651 = $1648 - $1650;
      $1652 = $1643 * $1648;
      $1653 = $1642 * $1646;
      $1654 = $1653 - $1652;
      $1655 = $1647 + $1649;
      $1656 = -$1645;
      $1657 = $1655 - $1645;
      $1658 = $1644 * $1647;
      $1659 = $1644 * $1649;
      $1660 = $1658 + $1659;
      $1661 = +HEAPF64[$25>>3];
      $1662 = -$1661;
      $1663 = $1645 * $1662;
      $1664 = $1663 + $1660;
      $1665 = +HEAPF64[$23>>3];
      $1666 = $1644 * $1665;
      $1667 = +HEAPF64[$20>>3];
      $1668 = $1643 * $1667;
      $1669 = $1645 * $1668;
      $1670 = -$1669;
      $1671 = $1670 - $1666;
      $1672 = +HEAPF64[$11>>3];
      $1673 = $1642 * $1672;
      $1674 = $1645 * $1673;
      $1675 = $1671 - $1674;
      $1676 = +HEAPF64[$24>>3];
      $1677 = $1644 * $1676;
      $1678 = +HEAPF64[$15>>3];
      $1679 = $1642 * $1678;
      $1680 = $1645 * $1679;
      $1681 = -$1680;
      $1682 = $1681 - $1677;
      $1683 = +HEAPF64[$21>>3];
      $1684 = $1643 * $1683;
      $1685 = $1645 * $1684;
      $1686 = $1682 - $1685;
      $1687 = $1644 * $1662;
      $1688 = $1687 + 1.0;
      $1689 = $1649 * $1656;
      $1690 = $1689 + $1688;
      $1691 = $1647 * $1656;
      $1692 = $1691 + $1690;
      $1693 = (+__Z5IKabsd($1651));
      $1694 = $1693 > 5.0000000000000004E-6;
      if (!($1694)) {
       $1695 = $1643 * $1645;
       $1696 = $1646 - $1695;
       $1697 = (+__Z5IKabsd($1696));
       $1698 = $1697 > 5.0000000000000004E-6;
       if (!($1698)) {
        $1699 = (+__Z5IKabsd($1654));
        $1700 = $1699 > 5.0000000000000004E-6;
        if (!($1700)) {
         $1701 = (+__Z5IKabsd($1657));
         $1702 = $1701 > 5.0000000000000004E-6;
         if (!($1702)) {
          $1703 = (+__Z5IKabsd($1664));
          $1704 = $1703 > 5.0000000000000004E-6;
          if (!($1704)) {
           $1705 = (+__Z5IKabsd($1675));
           $1706 = $1705 > 5.0000000000000004E-6;
           if (!($1706)) {
            $1707 = (+__Z5IKabsd($1686));
            $1708 = $1707 > 5.0000000000000004E-6;
            if (!($1708)) {
             $1709 = (+__Z5IKabsd($1692));
             $1710 = $1709 > 5.0000000000000004E-6;
             if (!($1710)) {
              $1711 = +HEAPF64[$0>>3];
              $1712 = $1711 * 0.70710678118654802;
              $1713 = +HEAPF64[$1>>3];
              $1714 = +HEAPF64[$2>>3];
              $1715 = $1713 * $1714;
              $1716 = $1714 * 0.70710678118654802;
              $1717 = +HEAPF64[$3>>3];
              $1718 = +HEAPF64[$4>>3];
              $1719 = $1717 * $1718;
              $1720 = $1713 * $1718;
              $1721 = +HEAPF64[$5>>3];
              $1722 = +HEAPF64[$6>>3];
              $1723 = $1717 * $1722;
              $1724 = $1713 * $1722;
              $1725 = $1716 * $1718;
              $1726 = $1724 * 0.70710678118654802;
              $1727 = $1717 * $1716;
              $1728 = $1720 * 0.70710678118654802;
              $1729 = $1716 * $1722;
              $1730 = -$1721;
              $1731 = $1712 * $1719;
              $1732 = $1712 - $1727;
              $1733 = $1712 * $1723;
              $1734 = -$1712;
              $1735 = $1734 - $1727;
              $1736 = $1711 * $1724;
              $1737 = $1719 - $1736;
              $1738 = +HEAPF64[$7>>3];
              $1739 = $1735 * $1738;
              $1740 = $1728 + $1733;
              $1741 = -$1726;
              $1742 = $1731 - $1726;
              $1743 = $1725 + $1742;
              $1744 = $1741 - $1725;
              $1745 = $1731 + $1744;
              $1746 = $1740 - $1729;
              $1747 = $1729 + $1740;
              $1748 = $1738 * $1746;
              $1749 = $1721 * $1735;
              $1750 = $1732 * $1738;
              $1751 = $1749 + $1750;
              $1752 = $1732 * $1730;
              $1753 = $1752 + $1739;
              $1754 = $1738 * $1743;
              $1755 = $1721 * $1745;
              $1756 = $1754 + $1755;
              $1757 = $1738 * $1745;
              $1758 = $1743 * $1730;
              $1759 = $1757 + $1758;
              $1760 = $1738 * $1747;
              $1761 = $1721 * $1746;
              $1762 = $1760 + $1761;
              $1763 = $1747 * $1730;
              $1764 = $1748 + $1763;
              $1765 = +HEAPF64[$9>>3];
              $1766 = $1765 * $1759;
              $1767 = +HEAPF64[$8>>3];
              $1768 = $627 * $1767;
              $1769 = $1768 + $1766;
              $1770 = +HEAPF64[$10>>3];
              $1771 = $1770 * $1756;
              $1772 = $1771 + $1769;
              HEAPF64[$11>>3] = $1772;
              $1773 = +HEAPF64[$14>>3];
              $1774 = $1773 * $1759;
              $1775 = +HEAPF64[$13>>3];
              $1776 = $627 * $1775;
              $1777 = $1774 + $1776;
              $1778 = +HEAPF64[$12>>3];
              $1779 = $1756 * $1778;
              $1780 = $1777 + $1779;
              HEAPF64[$15>>3] = $1780;
              $1781 = +HEAPF64[$16>>3];
              $1782 = $627 * $1781;
              $1783 = +HEAPF64[$18>>3];
              $1784 = $1759 * $1783;
              $1785 = $1782 + $1784;
              $1786 = +HEAPF64[$17>>3];
              $1787 = $1756 * $1786;
              $1788 = $1785 + $1787;
              HEAPF64[$19>>3] = $1788;
              $1789 = +HEAPF64[$9>>3];
              $1790 = $1753 * $1789;
              $1791 = +HEAPF64[$8>>3];
              $1792 = $1715 * $1791;
              $1793 = $1790 + $1792;
              $1794 = +HEAPF64[$10>>3];
              $1795 = $1751 * $1794;
              $1796 = $1793 + $1795;
              HEAPF64[$20>>3] = $1796;
              $1797 = +HEAPF64[$14>>3];
              $1798 = $1753 * $1797;
              $1799 = +HEAPF64[$12>>3];
              $1800 = $1751 * $1799;
              $1801 = $1798 + $1800;
              $1802 = +HEAPF64[$13>>3];
              $1803 = $1715 * $1802;
              $1804 = $1801 + $1803;
              HEAPF64[$21>>3] = $1804;
              $1805 = +HEAPF64[$18>>3];
              $1806 = $1753 * $1805;
              $1807 = +HEAPF64[$16>>3];
              $1808 = $1715 * $1807;
              $1809 = $1806 + $1808;
              $1810 = +HEAPF64[$17>>3];
              $1811 = $1751 * $1810;
              $1812 = $1809 + $1811;
              HEAPF64[$22>>3] = $1812;
              $1813 = +HEAPF64[$9>>3];
              $1814 = $1764 * $1813;
              $1815 = +HEAPF64[$8>>3];
              $1816 = $1737 * $1815;
              $1817 = $1814 + $1816;
              $1818 = +HEAPF64[$10>>3];
              $1819 = $1762 * $1818;
              $1820 = $1817 + $1819;
              HEAPF64[$23>>3] = $1820;
              $1821 = +HEAPF64[$14>>3];
              $1822 = $1764 * $1821;
              $1823 = +HEAPF64[$13>>3];
              $1824 = $1737 * $1823;
              $1825 = $1822 + $1824;
              $1826 = +HEAPF64[$12>>3];
              $1827 = $1762 * $1826;
              $1828 = $1825 + $1827;
              HEAPF64[$24>>3] = $1828;
              $1829 = +HEAPF64[$16>>3];
              $1830 = $1737 * $1829;
              $1831 = +HEAPF64[$17>>3];
              $1832 = $1762 * $1831;
              $1833 = $1830 + $1832;
              $1834 = +HEAPF64[$18>>3];
              $1835 = $1764 * $1834;
              $1836 = $1833 + $1835;
              HEAPF64[$25>>3] = $1836;
              $1837 = +HEAPF64[$31>>3];
              $1838 = (+__Z5IKabsd($1837));
              $1839 = $1838 < 9.9999999999999995E-7;
              do {
               if (!($1839)) {
                $1840 = (+__Z6IKsignd($1837));
                $1841 = (+__Z5IKabsd($1840));
                $1842 = $1841 < 9.9999999999999995E-7;
                if ($1842) {
                 break;
                }
                HEAP8[$323>>0] = 1;
                $4389 = +HEAPF64[$24>>3];
                $4390 = +HEAPF64[$23>>3];
                $4391 = -$4390;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x523,$4389,$4391,1.9999999999999999E-6);
                $4392 = HEAP8[$324>>0]|0;
                $4393 = ($4392<<24>>24)==(0);
                if ($4393) {
                 break L7;
                }
                $4394 = +HEAPF64[$31>>3];
                $4395 = (+__Z6IKsignd($4394));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x524,$4395,-1);
                $4396 = HEAP8[$325>>0]|0;
                $4397 = ($4396<<24>>24)==(0);
                if ($4397) {
                 break L7;
                }
                $4398 = +HEAPF64[$x523>>3];
                $4399 = $4398 + -1.5707963267949001;
                $4400 = +HEAPF64[$x524>>3];
                $4401 = $4400 * 1.5707963267949001;
                $4402 = $4399 + $4401;
                $4403 = (+__Z5IKsind($4402));
                $4404 = (+__Z5IKcosd($4402));
                $4405 = $4402 > 3.14159265358979;
                do {
                 if ($4405) {
                  $4406 = $4402 + -6.2831853071795898;
                  $4409 = $4406;
                 } else {
                  $4407 = $4402 < -3.14159265358979;
                  if (!($4407)) {
                   $4409 = $4402;
                   break;
                  }
                  $4408 = $4402 + 6.2831853071795898;
                  $4409 = $4408;
                 }
                } while(0);
                HEAP8[$326>>0] = 0;
                HEAP8[$327>>0] = -1;
                HEAPF64[$328>>3] = $4409;
                HEAPF64[$329>>3] = $4404;
                HEAPF64[$330>>3] = $4403;
                $4410 = +HEAPF64[$328>>3];
                $4411 = (+__Z5IKsind($4410));
                $4412 = (+__Z5IKcosd($4410));
                $4413 = +HEAPF64[$30>>3];
                $4414 = +HEAPF64[$103>>3];
                $4415 = $4413 * $4414;
                $4416 = +HEAPF64[$31>>3];
                $4417 = +HEAPF64[$102>>3];
                $4418 = +HEAPF64[$11>>3];
                $4419 = $4417 * $4418;
                $4420 = +HEAPF64[$15>>3];
                $4421 = $4417 * $4420;
                $4422 = $4411 * $4413;
                $4423 = $4412 * $4413;
                $4424 = $4412 * $4416;
                $4425 = +HEAPF64[$23>>3];
                $4426 = $4424 + $4425;
                $4427 = -$4411;
                $4428 = +HEAPF64[$24>>3];
                $4429 = +HEAPF64[$21>>3];
                $4430 = $4414 * $4429;
                $4431 = $4421 + $4430;
                $4432 = $4422 + $4431;
                $4433 = $4414 * $4418;
                $4434 = -$4433;
                $4435 = $4434 - $4411;
                $4436 = +HEAPF64[$20>>3];
                $4437 = $4417 * $4436;
                $4438 = $4435 + $4437;
                $4439 = -$4412;
                $4440 = $4417 * $4429;
                $4441 = $4440 - $4412;
                $4442 = $4414 * $4420;
                $4443 = $4441 - $4442;
                $4444 = $4412 * $4414;
                $4445 = $4422 * $4417;
                $4446 = $4444 + $4445;
                $4447 = $4446 + $4420;
                $4448 = $4414 * $4436;
                $4449 = $4448 - $4423;
                $4450 = $4419 + $4449;
                $4451 = $4411 * $4414;
                $4452 = $4451 + $4418;
                $4453 = $4423 * $4417;
                $4454 = $4452 - $4453;
                $4455 = $4417 * $4439;
                $4456 = $4411 * $4415;
                $4457 = $4456 + $4455;
                $4458 = $4457 + $4429;
                $4459 = $4417 * $4427;
                $4460 = $4412 * $4415;
                $4461 = $4459 - $4460;
                $4462 = $4461 + $4436;
                $4463 = $4415 * $4429;
                $4464 = $4416 * $4428;
                $4465 = $4463 - $4464;
                $4466 = $4413 * $4421;
                $4467 = $4466 + $4465;
                $4468 = $4411 + $4467;
                $4469 = $4416 * $4425;
                $4470 = $4439 - $4469;
                $4471 = $4415 * $4436;
                $4472 = $4470 + $4471;
                $4473 = $4413 * $4419;
                $4474 = $4473 + $4472;
                $4475 = (+__Z5IKabsd($4426));
                $4476 = $4475 > 5.0000000000000004E-6;
                if ($4476) {
                 break L7;
                }
                $4477 = $4416 * $4427;
                $4478 = $4477 + $4428;
                $4479 = (+__Z5IKabsd($4478));
                $4480 = $4479 > 5.0000000000000004E-6;
                if ($4480) {
                 break L7;
                }
                $4481 = (+__Z5IKabsd($4432));
                $4482 = $4481 > 5.0000000000000004E-6;
                if ($4482) {
                 break L7;
                }
                $4483 = (+__Z5IKabsd($4438));
                $4484 = $4483 > 5.0000000000000004E-6;
                if ($4484) {
                 break L7;
                }
                $4485 = (+__Z5IKabsd($4443));
                $4486 = $4485 > 5.0000000000000004E-6;
                if ($4486) {
                 break L7;
                }
                $4487 = (+__Z5IKabsd($4447));
                $4488 = $4487 > 5.0000000000000004E-6;
                if ($4488) {
                 break L7;
                }
                $4489 = (+__Z5IKabsd($4450));
                $4490 = $4489 > 5.0000000000000004E-6;
                if ($4490) {
                 break L7;
                }
                $4491 = (+__Z5IKabsd($4454));
                $4492 = $4491 > 5.0000000000000004E-6;
                if ($4492) {
                 break L7;
                }
                $4493 = (+__Z5IKabsd($4458));
                $4494 = $4493 > 5.0000000000000004E-6;
                if ($4494) {
                 break L7;
                }
                $4495 = (+__Z5IKabsd($4462));
                $4496 = $4495 > 5.0000000000000004E-6;
                if ($4496) {
                 break L7;
                }
                $4497 = (+__Z5IKabsd($4468));
                $4498 = $4497 > 5.0000000000000004E-6;
                if ($4498) {
                 break L7;
                }
                $4499 = (+__Z5IKabsd($4474));
                $4500 = $4499 > 5.0000000000000004E-6;
                if ($4500) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos151,7);
                $4501 = HEAP32[$vinfos151>>2]|0;
                $4502 = ((($4501)) + 17|0);
                HEAP8[$4502>>0] = 1;
                $4503 = +HEAPF64[$this>>3];
                $4504 = HEAP32[$vinfos151>>2]|0;
                $4505 = ((($4504)) + 8|0);
                HEAPF64[$4505>>3] = $4503;
                $4506 = HEAP8[$331>>0]|0;
                $4507 = HEAP32[$vinfos151>>2]|0;
                $4508 = ((($4507)) + 19|0);
                HEAP8[$4508>>0] = $4506;
                $4509 = HEAP8[$332>>0]|0;
                $4510 = HEAP32[$vinfos151>>2]|0;
                $4511 = ((($4510)) + 20|0);
                HEAP8[$4511>>0] = $4509;
                $4512 = HEAP8[$333>>0]|0;
                $4513 = HEAP32[$vinfos151>>2]|0;
                $4514 = ((($4513)) + 18|0);
                HEAP8[$4514>>0] = $4512;
                $4515 = HEAP32[$vinfos151>>2]|0;
                $4516 = ((($4515)) + 41|0);
                HEAP8[$4516>>0] = 1;
                $4517 = +HEAPF64[$334>>3];
                $4518 = HEAP32[$vinfos151>>2]|0;
                $4519 = ((($4518)) + 32|0);
                HEAPF64[$4519>>3] = $4517;
                $4520 = HEAP8[$335>>0]|0;
                $4521 = HEAP32[$vinfos151>>2]|0;
                $4522 = ((($4521)) + 43|0);
                HEAP8[$4522>>0] = $4520;
                $4523 = HEAP8[$336>>0]|0;
                $4524 = HEAP32[$vinfos151>>2]|0;
                $4525 = ((($4524)) + 44|0);
                HEAP8[$4525>>0] = $4523;
                $4526 = HEAP8[$337>>0]|0;
                $4527 = HEAP32[$vinfos151>>2]|0;
                $4528 = ((($4527)) + 42|0);
                HEAP8[$4528>>0] = $4526;
                $4529 = HEAP32[$vinfos151>>2]|0;
                $4530 = ((($4529)) + 65|0);
                HEAP8[$4530>>0] = 1;
                $4531 = +HEAPF64[$338>>3];
                $4532 = HEAP32[$vinfos151>>2]|0;
                $4533 = ((($4532)) + 56|0);
                HEAPF64[$4533>>3] = $4531;
                $4534 = HEAP8[$339>>0]|0;
                $4535 = HEAP32[$vinfos151>>2]|0;
                $4536 = ((($4535)) + 67|0);
                HEAP8[$4536>>0] = $4534;
                $4537 = HEAP8[$340>>0]|0;
                $4538 = HEAP32[$vinfos151>>2]|0;
                $4539 = ((($4538)) + 68|0);
                HEAP8[$4539>>0] = $4537;
                $4540 = HEAP8[$341>>0]|0;
                $4541 = HEAP32[$vinfos151>>2]|0;
                $4542 = ((($4541)) + 66|0);
                HEAP8[$4542>>0] = $4540;
                $4543 = HEAP32[$vinfos151>>2]|0;
                $4544 = ((($4543)) + 89|0);
                HEAP8[$4544>>0] = 1;
                $4545 = +HEAPF64[$342>>3];
                $4546 = HEAP32[$vinfos151>>2]|0;
                $4547 = ((($4546)) + 80|0);
                HEAPF64[$4547>>3] = $4545;
                $4548 = HEAP8[$343>>0]|0;
                $4549 = HEAP32[$vinfos151>>2]|0;
                $4550 = ((($4549)) + 91|0);
                HEAP8[$4550>>0] = $4548;
                $4551 = HEAP8[$344>>0]|0;
                $4552 = HEAP32[$vinfos151>>2]|0;
                $4553 = ((($4552)) + 92|0);
                HEAP8[$4553>>0] = $4551;
                $4554 = HEAP8[$345>>0]|0;
                $4555 = HEAP32[$vinfos151>>2]|0;
                $4556 = ((($4555)) + 90|0);
                HEAP8[$4556>>0] = $4554;
                $4557 = HEAP32[$vinfos151>>2]|0;
                $4558 = ((($4557)) + 113|0);
                HEAP8[$4558>>0] = 1;
                $4559 = +HEAPF64[$101>>3];
                $4560 = HEAP32[$vinfos151>>2]|0;
                $4561 = ((($4560)) + 104|0);
                HEAPF64[$4561>>3] = $4559;
                $4562 = HEAP8[$99>>0]|0;
                $4563 = HEAP32[$vinfos151>>2]|0;
                $4564 = ((($4563)) + 115|0);
                HEAP8[$4564>>0] = $4562;
                $4565 = HEAP8[$100>>0]|0;
                $4566 = HEAP32[$vinfos151>>2]|0;
                $4567 = ((($4566)) + 116|0);
                HEAP8[$4567>>0] = $4565;
                $4568 = HEAP8[$96>>0]|0;
                $4569 = HEAP32[$vinfos151>>2]|0;
                $4570 = ((($4569)) + 114|0);
                HEAP8[$4570>>0] = $4568;
                $4571 = HEAP32[$vinfos151>>2]|0;
                $4572 = ((($4571)) + 137|0);
                HEAP8[$4572>>0] = 1;
                $4573 = +HEAPF64[$29>>3];
                $4574 = HEAP32[$vinfos151>>2]|0;
                $4575 = ((($4574)) + 128|0);
                HEAPF64[$4575>>3] = $4573;
                $4576 = HEAP8[$27>>0]|0;
                $4577 = HEAP32[$vinfos151>>2]|0;
                $4578 = ((($4577)) + 139|0);
                HEAP8[$4578>>0] = $4576;
                $4579 = HEAP8[$28>>0]|0;
                $4580 = HEAP32[$vinfos151>>2]|0;
                $4581 = ((($4580)) + 140|0);
                HEAP8[$4581>>0] = $4579;
                $4582 = HEAP8[$26>>0]|0;
                $4583 = HEAP32[$vinfos151>>2]|0;
                $4584 = ((($4583)) + 138|0);
                HEAP8[$4584>>0] = $4582;
                $4585 = HEAP32[$vinfos151>>2]|0;
                $4586 = ((($4585)) + 161|0);
                HEAP8[$4586>>0] = 1;
                $4587 = +HEAPF64[$328>>3];
                $4588 = HEAP32[$vinfos151>>2]|0;
                $4589 = ((($4588)) + 152|0);
                HEAPF64[$4589>>3] = $4587;
                $4590 = HEAP8[$326>>0]|0;
                $4591 = HEAP32[$vinfos151>>2]|0;
                $4592 = ((($4591)) + 163|0);
                HEAP8[$4592>>0] = $4590;
                $4593 = HEAP8[$327>>0]|0;
                $4594 = HEAP32[$vinfos151>>2]|0;
                $4595 = ((($4594)) + 164|0);
                HEAP8[$4595>>0] = $4593;
                $4596 = HEAP8[$323>>0]|0;
                $4597 = HEAP32[$vinfos151>>2]|0;
                $4598 = ((($4597)) + 162|0);
                HEAP8[$4598>>0] = $4596;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree152,0);
                $4599 = HEAP32[$solutions>>2]|0;
                $4600 = ((($4599)) + 8|0);
                $4601 = HEAP32[$4600>>2]|0;
                (FUNCTION_TABLE_iiii[$4601 & 31]($solutions,$vinfos151,$vfree152)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree152);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos151);
                break L7;
               }
              } while(0);
              $1843 = +HEAPF64[$0>>3];
              $1844 = $1843 * 0.70710678118654802;
              $1845 = +HEAPF64[$1>>3];
              $1846 = +HEAPF64[$2>>3];
              $1847 = $1845 * $1846;
              $1848 = $1846 * 0.70710678118654802;
              $1849 = +HEAPF64[$3>>3];
              $1850 = +HEAPF64[$4>>3];
              $1851 = $1849 * $1850;
              $1852 = $1845 * $1850;
              $1853 = +HEAPF64[$5>>3];
              $1854 = +HEAPF64[$6>>3];
              $1855 = $1849 * $1854;
              $1856 = $1845 * $1854;
              $1857 = $1848 * $1850;
              $1858 = $1856 * 0.70710678118654802;
              $1859 = $1849 * $1848;
              $1860 = $1852 * 0.70710678118654802;
              $1861 = $1848 * $1854;
              $1862 = -$1853;
              $1863 = $1844 * $1851;
              $1864 = $1844 - $1859;
              $1865 = $1844 * $1855;
              $1866 = -$1844;
              $1867 = $1866 - $1859;
              $1868 = $1843 * $1856;
              $1869 = $1851 - $1868;
              $1870 = +HEAPF64[$7>>3];
              $1871 = $1867 * $1870;
              $1872 = $1860 + $1865;
              $1873 = $1857 - $1858;
              $1874 = $1863 + $1873;
              $1875 = -$1857;
              $1876 = $1875 - $1858;
              $1877 = $1863 + $1876;
              $1878 = $1872 - $1861;
              $1879 = $1861 + $1872;
              $1880 = $1870 * $1878;
              $1881 = $1853 * $1867;
              $1882 = $1864 * $1870;
              $1883 = $1881 + $1882;
              $1884 = $1864 * $1862;
              $1885 = $1884 + $1871;
              $1886 = $1853 * $1877;
              $1887 = $1870 * $1874;
              $1888 = $1886 + $1887;
              $1889 = $1874 * $1862;
              $1890 = $1870 * $1877;
              $1891 = $1889 + $1890;
              $1892 = $1853 * $1878;
              $1893 = $1870 * $1879;
              $1894 = $1892 + $1893;
              $1895 = $1879 * $1862;
              $1896 = $1895 + $1880;
              $1897 = +HEAPF64[$8>>3];
              $1898 = $627 * $1897;
              $1899 = +HEAPF64[$10>>3];
              $1900 = $1899 * $1888;
              $1901 = $1898 + $1900;
              $1902 = +HEAPF64[$9>>3];
              $1903 = $1902 * $1891;
              $1904 = $1903 + $1901;
              HEAPF64[$11>>3] = $1904;
              $1905 = +HEAPF64[$12>>3];
              $1906 = $1905 * $1888;
              $1907 = +HEAPF64[$13>>3];
              $1908 = $627 * $1907;
              $1909 = $1906 + $1908;
              $1910 = +HEAPF64[$14>>3];
              $1911 = $1891 * $1910;
              $1912 = $1909 + $1911;
              HEAPF64[$15>>3] = $1912;
              $1913 = +HEAPF64[$17>>3];
              $1914 = $1888 * $1913;
              $1915 = +HEAPF64[$18>>3];
              $1916 = $1891 * $1915;
              $1917 = $1914 + $1916;
              $1918 = +HEAPF64[$16>>3];
              $1919 = $627 * $1918;
              $1920 = $1917 + $1919;
              HEAPF64[$19>>3] = $1920;
              $1921 = +HEAPF64[$10>>3];
              $1922 = $1883 * $1921;
              $1923 = +HEAPF64[$9>>3];
              $1924 = $1885 * $1923;
              $1925 = $1922 + $1924;
              $1926 = +HEAPF64[$8>>3];
              $1927 = $1847 * $1926;
              $1928 = $1925 + $1927;
              HEAPF64[$20>>3] = $1928;
              $1929 = +HEAPF64[$12>>3];
              $1930 = $1883 * $1929;
              $1931 = +HEAPF64[$13>>3];
              $1932 = $1847 * $1931;
              $1933 = $1930 + $1932;
              $1934 = +HEAPF64[$14>>3];
              $1935 = $1885 * $1934;
              $1936 = $1933 + $1935;
              HEAPF64[$21>>3] = $1936;
              $1937 = +HEAPF64[$17>>3];
              $1938 = $1883 * $1937;
              $1939 = +HEAPF64[$18>>3];
              $1940 = $1885 * $1939;
              $1941 = $1938 + $1940;
              $1942 = +HEAPF64[$16>>3];
              $1943 = $1847 * $1942;
              $1944 = $1941 + $1943;
              HEAPF64[$22>>3] = $1944;
              $1945 = +HEAPF64[$8>>3];
              $1946 = $1869 * $1945;
              $1947 = +HEAPF64[$10>>3];
              $1948 = $1894 * $1947;
              $1949 = $1946 + $1948;
              $1950 = +HEAPF64[$9>>3];
              $1951 = $1896 * $1950;
              $1952 = $1949 + $1951;
              HEAPF64[$23>>3] = $1952;
              $1953 = +HEAPF64[$12>>3];
              $1954 = $1894 * $1953;
              $1955 = +HEAPF64[$14>>3];
              $1956 = $1896 * $1955;
              $1957 = $1954 + $1956;
              $1958 = +HEAPF64[$13>>3];
              $1959 = $1869 * $1958;
              $1960 = $1957 + $1959;
              HEAPF64[$24>>3] = $1960;
              $1961 = +HEAPF64[$17>>3];
              $1962 = $1894 * $1961;
              $1963 = +HEAPF64[$18>>3];
              $1964 = $1896 * $1963;
              $1965 = $1962 + $1964;
              $1966 = +HEAPF64[$16>>3];
              $1967 = $1869 * $1966;
              $1968 = $1965 + $1967;
              HEAPF64[$25>>3] = $1968;
              $1969 = +HEAPF64[$103>>3];
              $1970 = (+__Z5IKabsd($1969));
              $1971 = $1970 < 9.9999999999999995E-7;
              do {
               if (!($1971)) {
                $1972 = +HEAPF64[$31>>3];
                $1973 = (+__Z5IKabsd($1972));
                $1974 = $1973 < 9.9999999999999995E-7;
                if ($1974) {
                 break;
                }
                HEAP8[$300>>0] = 1;
                $4144 = +HEAPF64[$31>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x510,$4144,-1);
                $4145 = HEAP8[$301>>0]|0;
                $4146 = ($4145<<24>>24)==(0);
                if ($4146) {
                 break L7;
                }
                $4147 = +HEAPF64[$x510>>3];
                $4148 = +HEAPF64[$103>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x511,$4148,-1);
                $4149 = HEAP8[$302>>0]|0;
                $4150 = ($4149<<24>>24)==(0);
                if ($4150) {
                 break L7;
                }
                $4151 = +HEAPF64[$x511>>3];
                $4152 = $4147 * $4151;
                $4153 = +HEAPF64[$102>>3];
                $4154 = +HEAPF64[$30>>3];
                $4155 = $4153 * $4154;
                $4156 = +HEAPF64[$23>>3];
                $4157 = $4155 * $4156;
                $4158 = +HEAPF64[$11>>3];
                $4159 = +HEAPF64[$31>>3];
                $4160 = $4158 * $4159;
                $4161 = -$4160;
                $4162 = $4161 - $4157;
                $4163 = $4152 * $4162;
                $4164 = (+__Z5IKabsd($4163));
                $4165 = $4164 < 1.9999999999999999E-6;
                do {
                 if ($4165) {
                  $4166 = $4147 * $4156;
                  $4167 = -$4166;
                  $4168 = (+__Z5IKabsd($4167));
                  $4169 = $4168 < 1.9999999999999999E-6;
                  if (!($4169)) {
                   break;
                  }
                  $4170 = (+__Z5IKsqrd($4163));
                  $4171 = (+__Z5IKsqrd($4167));
                  $4172 = $4170 + $4171;
                  $4173 = $4172 + -1.0;
                  $4174 = (+__Z5IKabsd($4173));
                  $4175 = !($4174 <= 1.9999999999999999E-6);
                  if (!($4175)) {
                   break L7;
                  }
                 }
                } while(0);
                $4176 = +HEAPF64[$x511>>3];
                $4177 = $4147 * $4176;
                $4178 = +HEAPF64[$102>>3];
                $4179 = +HEAPF64[$30>>3];
                $4180 = $4178 * $4179;
                $4181 = +HEAPF64[$23>>3];
                $4182 = $4180 * $4181;
                $4183 = +HEAPF64[$11>>3];
                $4184 = +HEAPF64[$31>>3];
                $4185 = $4183 * $4184;
                $4186 = -$4185;
                $4187 = $4186 - $4182;
                $4188 = $4177 * $4187;
                $4189 = $4147 * $4181;
                $4190 = -$4189;
                $4191 = (+__Z7IKatan2dd($4188,$4190));
                $4192 = (+__Z5IKsind($4191));
                $4193 = (+__Z5IKcosd($4191));
                $4194 = $4191 > 3.14159265358979;
                do {
                 if ($4194) {
                  $4195 = $4191 + -6.2831853071795898;
                  $4198 = $4195;
                 } else {
                  $4196 = $4191 < -3.14159265358979;
                  if (!($4196)) {
                   $4198 = $4191;
                   break;
                  }
                  $4197 = $4191 + 6.2831853071795898;
                  $4198 = $4197;
                 }
                } while(0);
                HEAP8[$303>>0] = 0;
                HEAP8[$304>>0] = -1;
                HEAPF64[$305>>3] = $4198;
                HEAPF64[$306>>3] = $4193;
                HEAPF64[$307>>3] = $4192;
                $4199 = +HEAPF64[$305>>3];
                $4200 = (+__Z5IKsind($4199));
                $4201 = (+__Z5IKcosd($4199));
                $4202 = +HEAPF64[$30>>3];
                $4203 = +HEAPF64[$103>>3];
                $4204 = $4202 * $4203;
                $4205 = +HEAPF64[$31>>3];
                $4206 = +HEAPF64[$102>>3];
                $4207 = +HEAPF64[$11>>3];
                $4208 = $4206 * $4207;
                $4209 = +HEAPF64[$15>>3];
                $4210 = $4206 * $4209;
                $4211 = $4200 * $4202;
                $4212 = $4201 * $4202;
                $4213 = $4201 * $4205;
                $4214 = +HEAPF64[$23>>3];
                $4215 = $4213 + $4214;
                $4216 = -$4200;
                $4217 = +HEAPF64[$24>>3];
                $4218 = +HEAPF64[$21>>3];
                $4219 = $4203 * $4218;
                $4220 = $4211 + $4219;
                $4221 = $4210 + $4220;
                $4222 = +HEAPF64[$20>>3];
                $4223 = $4206 * $4222;
                $4224 = $4223 - $4200;
                $4225 = $4203 * $4207;
                $4226 = $4224 - $4225;
                $4227 = $4206 * $4218;
                $4228 = $4227 - $4201;
                $4229 = $4203 * $4209;
                $4230 = $4228 - $4229;
                $4231 = $4201 * $4203;
                $4232 = $4211 * $4206;
                $4233 = $4231 + $4232;
                $4234 = $4233 + $4209;
                $4235 = $4203 * $4222;
                $4236 = $4235 - $4212;
                $4237 = $4208 + $4236;
                $4238 = $4200 * $4203;
                $4239 = $4212 * $4206;
                $4240 = $4238 - $4239;
                $4241 = $4207 + $4240;
                $4242 = $4201 * $4206;
                $4243 = $4200 * $4204;
                $4244 = $4243 - $4242;
                $4245 = $4244 + $4218;
                $4246 = $4206 * $4216;
                $4247 = $4246 + $4222;
                $4248 = $4201 * $4204;
                $4249 = $4247 - $4248;
                $4250 = $4204 * $4218;
                $4251 = $4200 + $4250;
                $4252 = $4205 * $4217;
                $4253 = $4251 - $4252;
                $4254 = $4202 * $4210;
                $4255 = $4254 + $4253;
                $4256 = $4204 * $4222;
                $4257 = $4256 - $4201;
                $4258 = $4202 * $4208;
                $4259 = $4258 + $4257;
                $4260 = $4205 * $4214;
                $4261 = $4259 - $4260;
                $4262 = (+__Z5IKabsd($4215));
                $4263 = $4262 > 5.0000000000000004E-6;
                if ($4263) {
                 break L7;
                }
                $4264 = $4205 * $4216;
                $4265 = $4264 + $4217;
                $4266 = (+__Z5IKabsd($4265));
                $4267 = $4266 > 5.0000000000000004E-6;
                if ($4267) {
                 break L7;
                }
                $4268 = (+__Z5IKabsd($4221));
                $4269 = $4268 > 5.0000000000000004E-6;
                if ($4269) {
                 break L7;
                }
                $4270 = (+__Z5IKabsd($4226));
                $4271 = $4270 > 5.0000000000000004E-6;
                if ($4271) {
                 break L7;
                }
                $4272 = (+__Z5IKabsd($4230));
                $4273 = $4272 > 5.0000000000000004E-6;
                if ($4273) {
                 break L7;
                }
                $4274 = (+__Z5IKabsd($4234));
                $4275 = $4274 > 5.0000000000000004E-6;
                if ($4275) {
                 break L7;
                }
                $4276 = (+__Z5IKabsd($4237));
                $4277 = $4276 > 5.0000000000000004E-6;
                if ($4277) {
                 break L7;
                }
                $4278 = (+__Z5IKabsd($4241));
                $4279 = $4278 > 5.0000000000000004E-6;
                if ($4279) {
                 break L7;
                }
                $4280 = (+__Z5IKabsd($4245));
                $4281 = $4280 > 5.0000000000000004E-6;
                if ($4281) {
                 break L7;
                }
                $4282 = (+__Z5IKabsd($4249));
                $4283 = $4282 > 5.0000000000000004E-6;
                if ($4283) {
                 break L7;
                }
                $4284 = (+__Z5IKabsd($4255));
                $4285 = $4284 > 5.0000000000000004E-6;
                if ($4285) {
                 break L7;
                }
                $4286 = (+__Z5IKabsd($4261));
                $4287 = $4286 > 5.0000000000000004E-6;
                if ($4287) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos141,7);
                $4288 = HEAP32[$vinfos141>>2]|0;
                $4289 = ((($4288)) + 17|0);
                HEAP8[$4289>>0] = 1;
                $4290 = +HEAPF64[$this>>3];
                $4291 = HEAP32[$vinfos141>>2]|0;
                $4292 = ((($4291)) + 8|0);
                HEAPF64[$4292>>3] = $4290;
                $4293 = HEAP8[$308>>0]|0;
                $4294 = HEAP32[$vinfos141>>2]|0;
                $4295 = ((($4294)) + 19|0);
                HEAP8[$4295>>0] = $4293;
                $4296 = HEAP8[$309>>0]|0;
                $4297 = HEAP32[$vinfos141>>2]|0;
                $4298 = ((($4297)) + 20|0);
                HEAP8[$4298>>0] = $4296;
                $4299 = HEAP8[$310>>0]|0;
                $4300 = HEAP32[$vinfos141>>2]|0;
                $4301 = ((($4300)) + 18|0);
                HEAP8[$4301>>0] = $4299;
                $4302 = HEAP32[$vinfos141>>2]|0;
                $4303 = ((($4302)) + 41|0);
                HEAP8[$4303>>0] = 1;
                $4304 = +HEAPF64[$311>>3];
                $4305 = HEAP32[$vinfos141>>2]|0;
                $4306 = ((($4305)) + 32|0);
                HEAPF64[$4306>>3] = $4304;
                $4307 = HEAP8[$312>>0]|0;
                $4308 = HEAP32[$vinfos141>>2]|0;
                $4309 = ((($4308)) + 43|0);
                HEAP8[$4309>>0] = $4307;
                $4310 = HEAP8[$313>>0]|0;
                $4311 = HEAP32[$vinfos141>>2]|0;
                $4312 = ((($4311)) + 44|0);
                HEAP8[$4312>>0] = $4310;
                $4313 = HEAP8[$314>>0]|0;
                $4314 = HEAP32[$vinfos141>>2]|0;
                $4315 = ((($4314)) + 42|0);
                HEAP8[$4315>>0] = $4313;
                $4316 = HEAP32[$vinfos141>>2]|0;
                $4317 = ((($4316)) + 65|0);
                HEAP8[$4317>>0] = 1;
                $4318 = +HEAPF64[$315>>3];
                $4319 = HEAP32[$vinfos141>>2]|0;
                $4320 = ((($4319)) + 56|0);
                HEAPF64[$4320>>3] = $4318;
                $4321 = HEAP8[$316>>0]|0;
                $4322 = HEAP32[$vinfos141>>2]|0;
                $4323 = ((($4322)) + 67|0);
                HEAP8[$4323>>0] = $4321;
                $4324 = HEAP8[$317>>0]|0;
                $4325 = HEAP32[$vinfos141>>2]|0;
                $4326 = ((($4325)) + 68|0);
                HEAP8[$4326>>0] = $4324;
                $4327 = HEAP8[$318>>0]|0;
                $4328 = HEAP32[$vinfos141>>2]|0;
                $4329 = ((($4328)) + 66|0);
                HEAP8[$4329>>0] = $4327;
                $4330 = HEAP32[$vinfos141>>2]|0;
                $4331 = ((($4330)) + 89|0);
                HEAP8[$4331>>0] = 1;
                $4332 = +HEAPF64[$319>>3];
                $4333 = HEAP32[$vinfos141>>2]|0;
                $4334 = ((($4333)) + 80|0);
                HEAPF64[$4334>>3] = $4332;
                $4335 = HEAP8[$320>>0]|0;
                $4336 = HEAP32[$vinfos141>>2]|0;
                $4337 = ((($4336)) + 91|0);
                HEAP8[$4337>>0] = $4335;
                $4338 = HEAP8[$321>>0]|0;
                $4339 = HEAP32[$vinfos141>>2]|0;
                $4340 = ((($4339)) + 92|0);
                HEAP8[$4340>>0] = $4338;
                $4341 = HEAP8[$322>>0]|0;
                $4342 = HEAP32[$vinfos141>>2]|0;
                $4343 = ((($4342)) + 90|0);
                HEAP8[$4343>>0] = $4341;
                $4344 = HEAP32[$vinfos141>>2]|0;
                $4345 = ((($4344)) + 113|0);
                HEAP8[$4345>>0] = 1;
                $4346 = +HEAPF64[$101>>3];
                $4347 = HEAP32[$vinfos141>>2]|0;
                $4348 = ((($4347)) + 104|0);
                HEAPF64[$4348>>3] = $4346;
                $4349 = HEAP8[$99>>0]|0;
                $4350 = HEAP32[$vinfos141>>2]|0;
                $4351 = ((($4350)) + 115|0);
                HEAP8[$4351>>0] = $4349;
                $4352 = HEAP8[$100>>0]|0;
                $4353 = HEAP32[$vinfos141>>2]|0;
                $4354 = ((($4353)) + 116|0);
                HEAP8[$4354>>0] = $4352;
                $4355 = HEAP8[$96>>0]|0;
                $4356 = HEAP32[$vinfos141>>2]|0;
                $4357 = ((($4356)) + 114|0);
                HEAP8[$4357>>0] = $4355;
                $4358 = HEAP32[$vinfos141>>2]|0;
                $4359 = ((($4358)) + 137|0);
                HEAP8[$4359>>0] = 1;
                $4360 = +HEAPF64[$29>>3];
                $4361 = HEAP32[$vinfos141>>2]|0;
                $4362 = ((($4361)) + 128|0);
                HEAPF64[$4362>>3] = $4360;
                $4363 = HEAP8[$27>>0]|0;
                $4364 = HEAP32[$vinfos141>>2]|0;
                $4365 = ((($4364)) + 139|0);
                HEAP8[$4365>>0] = $4363;
                $4366 = HEAP8[$28>>0]|0;
                $4367 = HEAP32[$vinfos141>>2]|0;
                $4368 = ((($4367)) + 140|0);
                HEAP8[$4368>>0] = $4366;
                $4369 = HEAP8[$26>>0]|0;
                $4370 = HEAP32[$vinfos141>>2]|0;
                $4371 = ((($4370)) + 138|0);
                HEAP8[$4371>>0] = $4369;
                $4372 = HEAP32[$vinfos141>>2]|0;
                $4373 = ((($4372)) + 161|0);
                HEAP8[$4373>>0] = 1;
                $4374 = +HEAPF64[$305>>3];
                $4375 = HEAP32[$vinfos141>>2]|0;
                $4376 = ((($4375)) + 152|0);
                HEAPF64[$4376>>3] = $4374;
                $4377 = HEAP8[$303>>0]|0;
                $4378 = HEAP32[$vinfos141>>2]|0;
                $4379 = ((($4378)) + 163|0);
                HEAP8[$4379>>0] = $4377;
                $4380 = HEAP8[$304>>0]|0;
                $4381 = HEAP32[$vinfos141>>2]|0;
                $4382 = ((($4381)) + 164|0);
                HEAP8[$4382>>0] = $4380;
                $4383 = HEAP8[$300>>0]|0;
                $4384 = HEAP32[$vinfos141>>2]|0;
                $4385 = ((($4384)) + 162|0);
                HEAP8[$4385>>0] = $4383;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree142,0);
                $4386 = HEAP32[$solutions>>2]|0;
                $4387 = ((($4386)) + 8|0);
                $4388 = HEAP32[$4387>>2]|0;
                (FUNCTION_TABLE_iiii[$4388 & 31]($solutions,$vinfos141,$vfree142)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree142);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos141);
                break L7;
               }
              } while(0);
              $1975 = +HEAPF64[$0>>3];
              $1976 = $1975 * 0.70710678118654802;
              $1977 = +HEAPF64[$1>>3];
              $1978 = +HEAPF64[$2>>3];
              $1979 = $1977 * $1978;
              $1980 = $1978 * 0.70710678118654802;
              $1981 = +HEAPF64[$3>>3];
              $1982 = +HEAPF64[$4>>3];
              $1983 = $1981 * $1982;
              $1984 = $1977 * $1982;
              $1985 = +HEAPF64[$5>>3];
              $1986 = +HEAPF64[$6>>3];
              $1987 = $1981 * $1986;
              $1988 = $1977 * $1986;
              $1989 = $1980 * $1982;
              $1990 = $1988 * 0.70710678118654802;
              $1991 = $1981 * $1980;
              $1992 = $1984 * 0.70710678118654802;
              $1993 = $1980 * $1986;
              $1994 = -$1985;
              $1995 = $1976 * $1983;
              $1996 = $1976 - $1991;
              $1997 = $1976 * $1987;
              $1998 = -$1976;
              $1999 = $1998 - $1991;
              $2000 = $1975 * $1988;
              $2001 = $1983 - $2000;
              $2002 = +HEAPF64[$7>>3];
              $2003 = $1999 * $2002;
              $2004 = $1992 + $1997;
              $2005 = -$1990;
              $2006 = $1989 - $1990;
              $2007 = $1995 + $2006;
              $2008 = $2005 - $1989;
              $2009 = $1995 + $2008;
              $2010 = $2004 - $1993;
              $2011 = $1993 + $2004;
              $2012 = $2002 * $2010;
              $2013 = $1996 * $2002;
              $2014 = $1985 * $1999;
              $2015 = $2014 + $2013;
              $2016 = $1996 * $1994;
              $2017 = $2016 + $2003;
              $2018 = $2002 * $2007;
              $2019 = $1985 * $2009;
              $2020 = $2018 + $2019;
              $2021 = $2002 * $2009;
              $2022 = $2007 * $1994;
              $2023 = $2021 + $2022;
              $2024 = $2002 * $2011;
              $2025 = $1985 * $2010;
              $2026 = $2024 + $2025;
              $2027 = $2011 * $1994;
              $2028 = $2012 + $2027;
              $2029 = +HEAPF64[$9>>3];
              $2030 = $2029 * $2023;
              $2031 = +HEAPF64[$10>>3];
              $2032 = $2031 * $2020;
              $2033 = $2030 + $2032;
              $2034 = +HEAPF64[$8>>3];
              $2035 = $627 * $2034;
              $2036 = $2035 + $2033;
              HEAPF64[$11>>3] = $2036;
              $2037 = +HEAPF64[$12>>3];
              $2038 = $2037 * $2020;
              $2039 = +HEAPF64[$14>>3];
              $2040 = $2039 * $2023;
              $2041 = $2038 + $2040;
              $2042 = +HEAPF64[$13>>3];
              $2043 = $627 * $2042;
              $2044 = $2041 + $2043;
              HEAPF64[$15>>3] = $2044;
              $2045 = +HEAPF64[$17>>3];
              $2046 = $2020 * $2045;
              $2047 = +HEAPF64[$16>>3];
              $2048 = $627 * $2047;
              $2049 = $2046 + $2048;
              $2050 = +HEAPF64[$18>>3];
              $2051 = $2023 * $2050;
              $2052 = $2049 + $2051;
              HEAPF64[$19>>3] = $2052;
              $2053 = +HEAPF64[$8>>3];
              $2054 = $1979 * $2053;
              $2055 = +HEAPF64[$9>>3];
              $2056 = $2017 * $2055;
              $2057 = $2054 + $2056;
              $2058 = +HEAPF64[$10>>3];
              $2059 = $2015 * $2058;
              $2060 = $2057 + $2059;
              HEAPF64[$20>>3] = $2060;
              $2061 = +HEAPF64[$12>>3];
              $2062 = $2015 * $2061;
              $2063 = +HEAPF64[$13>>3];
              $2064 = $1979 * $2063;
              $2065 = $2062 + $2064;
              $2066 = +HEAPF64[$14>>3];
              $2067 = $2017 * $2066;
              $2068 = $2065 + $2067;
              HEAPF64[$21>>3] = $2068;
              $2069 = +HEAPF64[$16>>3];
              $2070 = $1979 * $2069;
              $2071 = +HEAPF64[$17>>3];
              $2072 = $2015 * $2071;
              $2073 = $2070 + $2072;
              $2074 = +HEAPF64[$18>>3];
              $2075 = $2017 * $2074;
              $2076 = $2073 + $2075;
              HEAPF64[$22>>3] = $2076;
              $2077 = +HEAPF64[$9>>3];
              $2078 = $2028 * $2077;
              $2079 = +HEAPF64[$10>>3];
              $2080 = $2026 * $2079;
              $2081 = $2078 + $2080;
              $2082 = +HEAPF64[$8>>3];
              $2083 = $2001 * $2082;
              $2084 = $2081 + $2083;
              HEAPF64[$23>>3] = $2084;
              $2085 = +HEAPF64[$14>>3];
              $2086 = $2028 * $2085;
              $2087 = +HEAPF64[$12>>3];
              $2088 = $2026 * $2087;
              $2089 = $2086 + $2088;
              $2090 = +HEAPF64[$13>>3];
              $2091 = $2001 * $2090;
              $2092 = $2089 + $2091;
              HEAPF64[$24>>3] = $2092;
              $2093 = +HEAPF64[$17>>3];
              $2094 = $2026 * $2093;
              $2095 = +HEAPF64[$16>>3];
              $2096 = $2001 * $2095;
              $2097 = $2094 + $2096;
              $2098 = +HEAPF64[$18>>3];
              $2099 = $2028 * $2098;
              $2100 = $2097 + $2099;
              HEAPF64[$25>>3] = $2100;
              $2101 = +HEAPF64[$102>>3];
              $2102 = +HEAPF64[$31>>3];
              $2103 = (+__Z5IKabsd($2101));
              $2104 = $2103 < 9.9999999999999995E-7;
              do {
               if (!($2104)) {
                $2105 = +HEAPF64[$30>>3];
                $2106 = (+__Z5IKabsd($2105));
                $2107 = $2106 < 9.9999999999999995E-7;
                if ($2107) {
                 break;
                }
                $2108 = (+__Z5IKabsd($2102));
                $2109 = $2108 < 9.9999999999999995E-7;
                if ($2109) {
                 break;
                }
                HEAP8[$276>>0] = 1;
                $3897 = +HEAPF64[$31>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x495,$3897,-1);
                $3898 = HEAP8[$277>>0]|0;
                $3899 = ($3898<<24>>24)==(0);
                if ($3899) {
                 break L7;
                }
                $3900 = +HEAPF64[$x495>>3];
                $3901 = +HEAPF64[$102>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x496,$3901,-1);
                $3902 = HEAP8[$278>>0]|0;
                $3903 = ($3902<<24>>24)==(0);
                if ($3903) {
                 break L7;
                }
                $3904 = +HEAPF64[$30>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x497,$3904,-1);
                $3905 = HEAP8[$279>>0]|0;
                $3906 = ($3905<<24>>24)==(0);
                if ($3906) {
                 break L7;
                }
                $3907 = +HEAPF64[$x496>>3];
                $3908 = $3900 * $3907;
                $3909 = +HEAPF64[$x497>>3];
                $3910 = $3908 * $3909;
                $3911 = +HEAPF64[$23>>3];
                $3912 = +HEAPF64[$103>>3];
                $3913 = $3911 * $3912;
                $3914 = +HEAPF64[$15>>3];
                $3915 = +HEAPF64[$31>>3];
                $3916 = $3914 * $3915;
                $3917 = $3913 - $3916;
                $3918 = $3910 * $3917;
                $3919 = (+__Z5IKabsd($3918));
                $3920 = $3919 < 1.9999999999999999E-6;
                do {
                 if ($3920) {
                  $3921 = $3900 * $3911;
                  $3922 = -$3921;
                  $3923 = (+__Z5IKabsd($3922));
                  $3924 = $3923 < 1.9999999999999999E-6;
                  if (!($3924)) {
                   break;
                  }
                  $3925 = (+__Z5IKsqrd($3918));
                  $3926 = (+__Z5IKsqrd($3922));
                  $3927 = $3925 + $3926;
                  $3928 = $3927 + -1.0;
                  $3929 = (+__Z5IKabsd($3928));
                  $3930 = !($3929 <= 1.9999999999999999E-6);
                  if (!($3930)) {
                   break L7;
                  }
                 }
                } while(0);
                $3931 = +HEAPF64[$x496>>3];
                $3932 = $3900 * $3931;
                $3933 = +HEAPF64[$x497>>3];
                $3934 = $3932 * $3933;
                $3935 = +HEAPF64[$23>>3];
                $3936 = +HEAPF64[$103>>3];
                $3937 = $3935 * $3936;
                $3938 = +HEAPF64[$15>>3];
                $3939 = +HEAPF64[$31>>3];
                $3940 = $3938 * $3939;
                $3941 = $3937 - $3940;
                $3942 = $3934 * $3941;
                $3943 = $3900 * $3935;
                $3944 = -$3943;
                $3945 = (+__Z7IKatan2dd($3942,$3944));
                $3946 = (+__Z5IKsind($3945));
                $3947 = (+__Z5IKcosd($3945));
                $3948 = $3945 > 3.14159265358979;
                do {
                 if ($3948) {
                  $3949 = $3945 + -6.2831853071795898;
                  $3952 = $3949;
                 } else {
                  $3950 = $3945 < -3.14159265358979;
                  if (!($3950)) {
                   $3952 = $3945;
                   break;
                  }
                  $3951 = $3945 + 6.2831853071795898;
                  $3952 = $3951;
                 }
                } while(0);
                HEAP8[$280>>0] = 0;
                HEAP8[$281>>0] = -1;
                HEAPF64[$282>>3] = $3952;
                HEAPF64[$283>>3] = $3947;
                HEAPF64[$284>>3] = $3946;
                $3953 = +HEAPF64[$282>>3];
                $3954 = (+__Z5IKsind($3953));
                $3955 = (+__Z5IKcosd($3953));
                $3956 = +HEAPF64[$30>>3];
                $3957 = +HEAPF64[$103>>3];
                $3958 = $3956 * $3957;
                $3959 = +HEAPF64[$31>>3];
                $3960 = +HEAPF64[$102>>3];
                $3961 = +HEAPF64[$11>>3];
                $3962 = $3960 * $3961;
                $3963 = +HEAPF64[$15>>3];
                $3964 = $3960 * $3963;
                $3965 = $3954 * $3956;
                $3966 = $3955 * $3956;
                $3967 = +HEAPF64[$23>>3];
                $3968 = $3955 * $3959;
                $3969 = $3968 + $3967;
                $3970 = +HEAPF64[$24>>3];
                $3971 = -$3954;
                $3972 = +HEAPF64[$21>>3];
                $3973 = $3957 * $3972;
                $3974 = $3964 + $3973;
                $3975 = $3965 + $3974;
                $3976 = $3957 * $3961;
                $3977 = +HEAPF64[$20>>3];
                $3978 = $3960 * $3977;
                $3979 = $3978 - $3976;
                $3980 = $3979 - $3954;
                $3981 = $3957 * $3963;
                $3982 = -$3955;
                $3983 = $3982 - $3981;
                $3984 = $3960 * $3972;
                $3985 = $3983 + $3984;
                $3986 = $3965 * $3960;
                $3987 = $3955 * $3957;
                $3988 = $3987 + $3986;
                $3989 = $3988 + $3963;
                $3990 = $3957 * $3977;
                $3991 = $3990 - $3966;
                $3992 = $3962 + $3991;
                $3993 = $3954 * $3957;
                $3994 = $3966 * $3960;
                $3995 = $3993 - $3994;
                $3996 = $3961 + $3995;
                $3997 = $3960 * $3982;
                $3998 = $3954 * $3958;
                $3999 = $3998 + $3997;
                $4000 = $3999 + $3972;
                $4001 = $3960 * $3971;
                $4002 = $4001 + $3977;
                $4003 = $3955 * $3958;
                $4004 = $4002 - $4003;
                $4005 = $3959 * $3970;
                $4006 = $3956 * $3964;
                $4007 = $4006 - $4005;
                $4008 = $3958 * $3972;
                $4009 = $4007 + $4008;
                $4010 = $3954 + $4009;
                $4011 = $3956 * $3962;
                $4012 = $3959 * $3967;
                $4013 = $4011 - $4012;
                $4014 = $4013 - $3955;
                $4015 = $3958 * $3977;
                $4016 = $4014 + $4015;
                $4017 = (+__Z5IKabsd($3969));
                $4018 = $4017 > 5.0000000000000004E-6;
                if ($4018) {
                 break L7;
                }
                $4019 = $3959 * $3971;
                $4020 = $4019 + $3970;
                $4021 = (+__Z5IKabsd($4020));
                $4022 = $4021 > 5.0000000000000004E-6;
                if ($4022) {
                 break L7;
                }
                $4023 = (+__Z5IKabsd($3975));
                $4024 = $4023 > 5.0000000000000004E-6;
                if ($4024) {
                 break L7;
                }
                $4025 = (+__Z5IKabsd($3980));
                $4026 = $4025 > 5.0000000000000004E-6;
                if ($4026) {
                 break L7;
                }
                $4027 = (+__Z5IKabsd($3985));
                $4028 = $4027 > 5.0000000000000004E-6;
                if ($4028) {
                 break L7;
                }
                $4029 = (+__Z5IKabsd($3989));
                $4030 = $4029 > 5.0000000000000004E-6;
                if ($4030) {
                 break L7;
                }
                $4031 = (+__Z5IKabsd($3992));
                $4032 = $4031 > 5.0000000000000004E-6;
                if ($4032) {
                 break L7;
                }
                $4033 = (+__Z5IKabsd($3996));
                $4034 = $4033 > 5.0000000000000004E-6;
                if ($4034) {
                 break L7;
                }
                $4035 = (+__Z5IKabsd($4000));
                $4036 = $4035 > 5.0000000000000004E-6;
                if ($4036) {
                 break L7;
                }
                $4037 = (+__Z5IKabsd($4004));
                $4038 = $4037 > 5.0000000000000004E-6;
                if ($4038) {
                 break L7;
                }
                $4039 = (+__Z5IKabsd($4010));
                $4040 = $4039 > 5.0000000000000004E-6;
                if ($4040) {
                 break L7;
                }
                $4041 = (+__Z5IKabsd($4016));
                $4042 = $4041 > 5.0000000000000004E-6;
                if ($4042) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos131,7);
                $4043 = HEAP32[$vinfos131>>2]|0;
                $4044 = ((($4043)) + 17|0);
                HEAP8[$4044>>0] = 1;
                $4045 = +HEAPF64[$this>>3];
                $4046 = HEAP32[$vinfos131>>2]|0;
                $4047 = ((($4046)) + 8|0);
                HEAPF64[$4047>>3] = $4045;
                $4048 = HEAP8[$285>>0]|0;
                $4049 = HEAP32[$vinfos131>>2]|0;
                $4050 = ((($4049)) + 19|0);
                HEAP8[$4050>>0] = $4048;
                $4051 = HEAP8[$286>>0]|0;
                $4052 = HEAP32[$vinfos131>>2]|0;
                $4053 = ((($4052)) + 20|0);
                HEAP8[$4053>>0] = $4051;
                $4054 = HEAP8[$287>>0]|0;
                $4055 = HEAP32[$vinfos131>>2]|0;
                $4056 = ((($4055)) + 18|0);
                HEAP8[$4056>>0] = $4054;
                $4057 = HEAP32[$vinfos131>>2]|0;
                $4058 = ((($4057)) + 41|0);
                HEAP8[$4058>>0] = 1;
                $4059 = +HEAPF64[$288>>3];
                $4060 = HEAP32[$vinfos131>>2]|0;
                $4061 = ((($4060)) + 32|0);
                HEAPF64[$4061>>3] = $4059;
                $4062 = HEAP8[$289>>0]|0;
                $4063 = HEAP32[$vinfos131>>2]|0;
                $4064 = ((($4063)) + 43|0);
                HEAP8[$4064>>0] = $4062;
                $4065 = HEAP8[$290>>0]|0;
                $4066 = HEAP32[$vinfos131>>2]|0;
                $4067 = ((($4066)) + 44|0);
                HEAP8[$4067>>0] = $4065;
                $4068 = HEAP8[$291>>0]|0;
                $4069 = HEAP32[$vinfos131>>2]|0;
                $4070 = ((($4069)) + 42|0);
                HEAP8[$4070>>0] = $4068;
                $4071 = HEAP32[$vinfos131>>2]|0;
                $4072 = ((($4071)) + 65|0);
                HEAP8[$4072>>0] = 1;
                $4073 = +HEAPF64[$292>>3];
                $4074 = HEAP32[$vinfos131>>2]|0;
                $4075 = ((($4074)) + 56|0);
                HEAPF64[$4075>>3] = $4073;
                $4076 = HEAP8[$293>>0]|0;
                $4077 = HEAP32[$vinfos131>>2]|0;
                $4078 = ((($4077)) + 67|0);
                HEAP8[$4078>>0] = $4076;
                $4079 = HEAP8[$294>>0]|0;
                $4080 = HEAP32[$vinfos131>>2]|0;
                $4081 = ((($4080)) + 68|0);
                HEAP8[$4081>>0] = $4079;
                $4082 = HEAP8[$295>>0]|0;
                $4083 = HEAP32[$vinfos131>>2]|0;
                $4084 = ((($4083)) + 66|0);
                HEAP8[$4084>>0] = $4082;
                $4085 = HEAP32[$vinfos131>>2]|0;
                $4086 = ((($4085)) + 89|0);
                HEAP8[$4086>>0] = 1;
                $4087 = +HEAPF64[$296>>3];
                $4088 = HEAP32[$vinfos131>>2]|0;
                $4089 = ((($4088)) + 80|0);
                HEAPF64[$4089>>3] = $4087;
                $4090 = HEAP8[$297>>0]|0;
                $4091 = HEAP32[$vinfos131>>2]|0;
                $4092 = ((($4091)) + 91|0);
                HEAP8[$4092>>0] = $4090;
                $4093 = HEAP8[$298>>0]|0;
                $4094 = HEAP32[$vinfos131>>2]|0;
                $4095 = ((($4094)) + 92|0);
                HEAP8[$4095>>0] = $4093;
                $4096 = HEAP8[$299>>0]|0;
                $4097 = HEAP32[$vinfos131>>2]|0;
                $4098 = ((($4097)) + 90|0);
                HEAP8[$4098>>0] = $4096;
                $4099 = HEAP32[$vinfos131>>2]|0;
                $4100 = ((($4099)) + 113|0);
                HEAP8[$4100>>0] = 1;
                $4101 = +HEAPF64[$101>>3];
                $4102 = HEAP32[$vinfos131>>2]|0;
                $4103 = ((($4102)) + 104|0);
                HEAPF64[$4103>>3] = $4101;
                $4104 = HEAP8[$99>>0]|0;
                $4105 = HEAP32[$vinfos131>>2]|0;
                $4106 = ((($4105)) + 115|0);
                HEAP8[$4106>>0] = $4104;
                $4107 = HEAP8[$100>>0]|0;
                $4108 = HEAP32[$vinfos131>>2]|0;
                $4109 = ((($4108)) + 116|0);
                HEAP8[$4109>>0] = $4107;
                $4110 = HEAP8[$96>>0]|0;
                $4111 = HEAP32[$vinfos131>>2]|0;
                $4112 = ((($4111)) + 114|0);
                HEAP8[$4112>>0] = $4110;
                $4113 = HEAP32[$vinfos131>>2]|0;
                $4114 = ((($4113)) + 137|0);
                HEAP8[$4114>>0] = 1;
                $4115 = +HEAPF64[$29>>3];
                $4116 = HEAP32[$vinfos131>>2]|0;
                $4117 = ((($4116)) + 128|0);
                HEAPF64[$4117>>3] = $4115;
                $4118 = HEAP8[$27>>0]|0;
                $4119 = HEAP32[$vinfos131>>2]|0;
                $4120 = ((($4119)) + 139|0);
                HEAP8[$4120>>0] = $4118;
                $4121 = HEAP8[$28>>0]|0;
                $4122 = HEAP32[$vinfos131>>2]|0;
                $4123 = ((($4122)) + 140|0);
                HEAP8[$4123>>0] = $4121;
                $4124 = HEAP8[$26>>0]|0;
                $4125 = HEAP32[$vinfos131>>2]|0;
                $4126 = ((($4125)) + 138|0);
                HEAP8[$4126>>0] = $4124;
                $4127 = HEAP32[$vinfos131>>2]|0;
                $4128 = ((($4127)) + 161|0);
                HEAP8[$4128>>0] = 1;
                $4129 = +HEAPF64[$282>>3];
                $4130 = HEAP32[$vinfos131>>2]|0;
                $4131 = ((($4130)) + 152|0);
                HEAPF64[$4131>>3] = $4129;
                $4132 = HEAP8[$280>>0]|0;
                $4133 = HEAP32[$vinfos131>>2]|0;
                $4134 = ((($4133)) + 163|0);
                HEAP8[$4134>>0] = $4132;
                $4135 = HEAP8[$281>>0]|0;
                $4136 = HEAP32[$vinfos131>>2]|0;
                $4137 = ((($4136)) + 164|0);
                HEAP8[$4137>>0] = $4135;
                $4138 = HEAP8[$276>>0]|0;
                $4139 = HEAP32[$vinfos131>>2]|0;
                $4140 = ((($4139)) + 162|0);
                HEAP8[$4140>>0] = $4138;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree132,0);
                $4141 = HEAP32[$solutions>>2]|0;
                $4142 = ((($4141)) + 8|0);
                $4143 = HEAP32[$4142>>2]|0;
                (FUNCTION_TABLE_iiii[$4143 & 31]($solutions,$vinfos131,$vfree132)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree132);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos131);
                break L7;
               }
              } while(0);
              $2110 = +HEAPF64[$25>>3];
              $2111 = +HEAPF64[$30>>3];
              $2112 = +HEAPF64[$31>>3];
              $2113 = +HEAPF64[$22>>3];
              $2114 = $2113 - $2112;
              $2115 = +HEAPF64[$101>>3];
              $2116 = $2115 + -1.5707963267949001;
              $2117 = (+__Z5IKabsd($2116));
              $2118 = $2117 + 3.14159265358979;
              $2119 = (+__Z6IKfmoddd($2118,6.2831853071795898));
              $2120 = $2119 + -3.14159265358979;
              $2121 = +HEAPF64[$19>>3];
              $2122 = -$2110;
              $2123 = $2112 * $2122;
              $2124 = $2111 * $2113;
              $2125 = $2123 + $2124;
              $2126 = +HEAPF64[$20>>3];
              $2127 = $2112 * $2126;
              $2128 = +HEAPF64[$23>>3];
              $2129 = $2111 * $2128;
              $2130 = -$2129;
              $2131 = $2130 - $2127;
              $2132 = +HEAPF64[$21>>3];
              $2133 = $2112 * $2132;
              $2134 = +HEAPF64[$24>>3];
              $2135 = $2111 * $2134;
              $2136 = -$2135;
              $2137 = $2136 - $2133;
              $2138 = $2111 * $2122;
              $2139 = $2138 + 1.0;
              $2140 = $2112 * $2113;
              $2141 = $2139 - $2140;
              $2142 = (+__Z5IKabsd($2120));
              $2143 = $2142 < 9.9999999999999995E-7;
              do {
               if ($2143) {
                $2144 = $2110 - $2111;
                $2145 = (+__Z5IKabsd($2144));
                $2146 = $2145 < 9.9999999999999995E-7;
                if (!($2146)) {
                 break;
                }
                $2147 = (+__Z5IKabsd($2121));
                $2148 = $2147 < 9.9999999999999995E-7;
                if (!($2148)) {
                 break;
                }
                $2149 = (+__Z5IKabsd($2114));
                $2150 = $2149 < 9.9999999999999995E-7;
                if (!($2150)) {
                 break;
                }
                $2151 = (+__Z5IKabsd($2125));
                $2152 = $2151 < 9.9999999999999995E-7;
                if (!($2152)) {
                 break;
                }
                $2153 = (+__Z5IKabsd($2131));
                $2154 = $2153 < 9.9999999999999995E-7;
                if (!($2154)) {
                 break;
                }
                $2155 = (+__Z5IKabsd($2137));
                $2156 = $2155 < 9.9999999999999995E-7;
                if (!($2156)) {
                 break;
                }
                $2157 = (+__Z5IKabsd($2141));
                $2158 = $2157 < 9.9999999999999995E-7;
                if (!($2158)) {
                 break;
                }
                HEAP8[$104>>0] = 1;
                $2159 = +HEAPF64[$24>>3];
                $2160 = +HEAPF64[$23>>3];
                $2161 = -$2160;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x424,$2159,$2161,1.9999999999999999E-6);
                $2162 = HEAP8[$105>>0]|0;
                $2163 = ($2162<<24>>24)==(0);
                if ($2163) {
                 break L7;
                }
                $2164 = +HEAPF64[$22>>3];
                $2165 = (+__Z6IKsignd($2164));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x425,$2165,-1);
                $2166 = HEAP8[$106>>0]|0;
                $2167 = ($2166<<24>>24)==(0);
                if ($2167) {
                 break L7;
                }
                $2168 = +HEAPF64[$x424>>3];
                $2169 = $2168 + -1.5707963267949001;
                $2170 = +HEAPF64[$x425>>3];
                $2171 = $2170 * 1.5707963267949001;
                $2172 = $2169 + $2171;
                $2173 = (+__Z5IKsind($2172));
                $2174 = (+__Z5IKcosd($2172));
                $2175 = $2172 > 3.14159265358979;
                do {
                 if ($2175) {
                  $2176 = $2172 + -6.2831853071795898;
                  $2179 = $2176;
                 } else {
                  $2177 = $2172 < -3.14159265358979;
                  if (!($2177)) {
                   $2179 = $2172;
                   break;
                  }
                  $2178 = $2172 + 6.2831853071795898;
                  $2179 = $2178;
                 }
                } while(0);
                HEAP8[$107>>0] = 0;
                HEAP8[$108>>0] = -1;
                HEAPF64[$109>>3] = $2179;
                HEAPF64[$110>>3] = $2174;
                HEAPF64[$111>>3] = $2173;
                $2180 = +HEAPF64[$109>>3];
                $2181 = (+__Z5IKsind($2180));
                $2182 = (+__Z5IKcosd($2180));
                $2183 = +HEAPF64[$22>>3];
                $2184 = $2182 * $2183;
                $2185 = +HEAPF64[$23>>3];
                $2186 = $2184 + $2185;
                $2187 = +HEAPF64[$25>>3];
                $2188 = +HEAPF64[$21>>3];
                $2189 = $2181 * $2183;
                $2190 = +HEAPF64[$24>>3];
                $2191 = $2190 - $2189;
                $2192 = $2182 * $2187;
                $2193 = +HEAPF64[$20>>3];
                $2194 = $2193 - $2192;
                $2195 = +HEAPF64[$11>>3];
                $2196 = -$2195;
                $2197 = $2196 - $2181;
                $2198 = +HEAPF64[$15>>3];
                $2199 = -$2198;
                $2200 = $2199 - $2182;
                $2201 = $2187 * $2188;
                $2202 = $2181 + $2201;
                $2203 = $2183 * $2190;
                $2204 = $2202 - $2203;
                $2205 = $2187 * $2193;
                $2206 = $2205 - $2182;
                $2207 = $2183 * $2185;
                $2208 = $2206 - $2207;
                $2209 = (+__Z5IKabsd($2186));
                $2210 = $2209 > 5.0000000000000004E-6;
                if ($2210) {
                 break L7;
                }
                $2211 = $2181 * $2187;
                $2212 = $2211 + $2188;
                $2213 = (+__Z5IKabsd($2212));
                $2214 = $2213 > 5.0000000000000004E-6;
                if ($2214) {
                 break L7;
                }
                $2215 = (+__Z5IKabsd($2191));
                $2216 = $2215 > 5.0000000000000004E-6;
                if ($2216) {
                 break L7;
                }
                $2217 = (+__Z5IKabsd($2194));
                $2218 = $2217 > 5.0000000000000004E-6;
                if ($2218) {
                 break L7;
                }
                $2219 = (+__Z5IKabsd($2197));
                $2220 = $2219 > 5.0000000000000004E-6;
                if ($2220) {
                 break L7;
                }
                $2221 = (+__Z5IKabsd($2200));
                $2222 = $2221 > 5.0000000000000004E-6;
                if ($2222) {
                 break L7;
                }
                $2223 = (+__Z5IKabsd($2204));
                $2224 = $2223 > 5.0000000000000004E-6;
                if ($2224) {
                 break L7;
                }
                $2225 = (+__Z5IKabsd($2208));
                $2226 = $2225 > 5.0000000000000004E-6;
                if ($2226) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos43,7);
                $2227 = HEAP32[$vinfos43>>2]|0;
                $2228 = ((($2227)) + 17|0);
                HEAP8[$2228>>0] = 1;
                $2229 = +HEAPF64[$this>>3];
                $2230 = HEAP32[$vinfos43>>2]|0;
                $2231 = ((($2230)) + 8|0);
                HEAPF64[$2231>>3] = $2229;
                $2232 = HEAP8[$112>>0]|0;
                $2233 = HEAP32[$vinfos43>>2]|0;
                $2234 = ((($2233)) + 19|0);
                HEAP8[$2234>>0] = $2232;
                $2235 = HEAP8[$113>>0]|0;
                $2236 = HEAP32[$vinfos43>>2]|0;
                $2237 = ((($2236)) + 20|0);
                HEAP8[$2237>>0] = $2235;
                $2238 = HEAP8[$114>>0]|0;
                $2239 = HEAP32[$vinfos43>>2]|0;
                $2240 = ((($2239)) + 18|0);
                HEAP8[$2240>>0] = $2238;
                $2241 = HEAP32[$vinfos43>>2]|0;
                $2242 = ((($2241)) + 41|0);
                HEAP8[$2242>>0] = 1;
                $2243 = +HEAPF64[$115>>3];
                $2244 = HEAP32[$vinfos43>>2]|0;
                $2245 = ((($2244)) + 32|0);
                HEAPF64[$2245>>3] = $2243;
                $2246 = HEAP8[$116>>0]|0;
                $2247 = HEAP32[$vinfos43>>2]|0;
                $2248 = ((($2247)) + 43|0);
                HEAP8[$2248>>0] = $2246;
                $2249 = HEAP8[$117>>0]|0;
                $2250 = HEAP32[$vinfos43>>2]|0;
                $2251 = ((($2250)) + 44|0);
                HEAP8[$2251>>0] = $2249;
                $2252 = HEAP8[$118>>0]|0;
                $2253 = HEAP32[$vinfos43>>2]|0;
                $2254 = ((($2253)) + 42|0);
                HEAP8[$2254>>0] = $2252;
                $2255 = HEAP32[$vinfos43>>2]|0;
                $2256 = ((($2255)) + 65|0);
                HEAP8[$2256>>0] = 1;
                $2257 = +HEAPF64[$119>>3];
                $2258 = HEAP32[$vinfos43>>2]|0;
                $2259 = ((($2258)) + 56|0);
                HEAPF64[$2259>>3] = $2257;
                $2260 = HEAP8[$120>>0]|0;
                $2261 = HEAP32[$vinfos43>>2]|0;
                $2262 = ((($2261)) + 67|0);
                HEAP8[$2262>>0] = $2260;
                $2263 = HEAP8[$121>>0]|0;
                $2264 = HEAP32[$vinfos43>>2]|0;
                $2265 = ((($2264)) + 68|0);
                HEAP8[$2265>>0] = $2263;
                $2266 = HEAP8[$122>>0]|0;
                $2267 = HEAP32[$vinfos43>>2]|0;
                $2268 = ((($2267)) + 66|0);
                HEAP8[$2268>>0] = $2266;
                $2269 = HEAP32[$vinfos43>>2]|0;
                $2270 = ((($2269)) + 89|0);
                HEAP8[$2270>>0] = 1;
                $2271 = +HEAPF64[$123>>3];
                $2272 = HEAP32[$vinfos43>>2]|0;
                $2273 = ((($2272)) + 80|0);
                HEAPF64[$2273>>3] = $2271;
                $2274 = HEAP8[$124>>0]|0;
                $2275 = HEAP32[$vinfos43>>2]|0;
                $2276 = ((($2275)) + 91|0);
                HEAP8[$2276>>0] = $2274;
                $2277 = HEAP8[$125>>0]|0;
                $2278 = HEAP32[$vinfos43>>2]|0;
                $2279 = ((($2278)) + 92|0);
                HEAP8[$2279>>0] = $2277;
                $2280 = HEAP8[$126>>0]|0;
                $2281 = HEAP32[$vinfos43>>2]|0;
                $2282 = ((($2281)) + 90|0);
                HEAP8[$2282>>0] = $2280;
                $2283 = HEAP32[$vinfos43>>2]|0;
                $2284 = ((($2283)) + 113|0);
                HEAP8[$2284>>0] = 1;
                $2285 = +HEAPF64[$101>>3];
                $2286 = HEAP32[$vinfos43>>2]|0;
                $2287 = ((($2286)) + 104|0);
                HEAPF64[$2287>>3] = $2285;
                $2288 = HEAP8[$99>>0]|0;
                $2289 = HEAP32[$vinfos43>>2]|0;
                $2290 = ((($2289)) + 115|0);
                HEAP8[$2290>>0] = $2288;
                $2291 = HEAP8[$100>>0]|0;
                $2292 = HEAP32[$vinfos43>>2]|0;
                $2293 = ((($2292)) + 116|0);
                HEAP8[$2293>>0] = $2291;
                $2294 = HEAP8[$96>>0]|0;
                $2295 = HEAP32[$vinfos43>>2]|0;
                $2296 = ((($2295)) + 114|0);
                HEAP8[$2296>>0] = $2294;
                $2297 = HEAP32[$vinfos43>>2]|0;
                $2298 = ((($2297)) + 137|0);
                HEAP8[$2298>>0] = 1;
                $2299 = +HEAPF64[$29>>3];
                $2300 = HEAP32[$vinfos43>>2]|0;
                $2301 = ((($2300)) + 128|0);
                HEAPF64[$2301>>3] = $2299;
                $2302 = HEAP8[$27>>0]|0;
                $2303 = HEAP32[$vinfos43>>2]|0;
                $2304 = ((($2303)) + 139|0);
                HEAP8[$2304>>0] = $2302;
                $2305 = HEAP8[$28>>0]|0;
                $2306 = HEAP32[$vinfos43>>2]|0;
                $2307 = ((($2306)) + 140|0);
                HEAP8[$2307>>0] = $2305;
                $2308 = HEAP8[$26>>0]|0;
                $2309 = HEAP32[$vinfos43>>2]|0;
                $2310 = ((($2309)) + 138|0);
                HEAP8[$2310>>0] = $2308;
                $2311 = HEAP32[$vinfos43>>2]|0;
                $2312 = ((($2311)) + 161|0);
                HEAP8[$2312>>0] = 1;
                $2313 = +HEAPF64[$109>>3];
                $2314 = HEAP32[$vinfos43>>2]|0;
                $2315 = ((($2314)) + 152|0);
                HEAPF64[$2315>>3] = $2313;
                $2316 = HEAP8[$107>>0]|0;
                $2317 = HEAP32[$vinfos43>>2]|0;
                $2318 = ((($2317)) + 163|0);
                HEAP8[$2318>>0] = $2316;
                $2319 = HEAP8[$108>>0]|0;
                $2320 = HEAP32[$vinfos43>>2]|0;
                $2321 = ((($2320)) + 164|0);
                HEAP8[$2321>>0] = $2319;
                $2322 = HEAP8[$104>>0]|0;
                $2323 = HEAP32[$vinfos43>>2]|0;
                $2324 = ((($2323)) + 162|0);
                HEAP8[$2324>>0] = $2322;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree44,0);
                $2325 = HEAP32[$solutions>>2]|0;
                $2326 = ((($2325)) + 8|0);
                $2327 = HEAP32[$2326>>2]|0;
                (FUNCTION_TABLE_iiii[$2327 & 31]($solutions,$vinfos43,$vfree44)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree44);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos43);
                break L7;
               }
              } while(0);
              $2328 = +HEAPF64[$25>>3];
              $2329 = +HEAPF64[$30>>3];
              $2330 = +HEAPF64[$31>>3];
              $2331 = +HEAPF64[$101>>3];
              $2332 = $2331 + 1.5707963267949001;
              $2333 = (+__Z5IKabsd($2332));
              $2334 = $2333 + 3.14159265358979;
              $2335 = (+__Z6IKfmoddd($2334,6.2831853071795898));
              $2336 = $2335 + -3.14159265358979;
              $2337 = +HEAPF64[$19>>3];
              $2338 = +HEAPF64[$22>>3];
              $2339 = $2330 + $2338;
              $2340 = -$2338;
              $2341 = $2340 - $2330;
              $2342 = $2329 * $2340;
              $2343 = -$2328;
              $2344 = $2330 * $2343;
              $2345 = $2344 + $2342;
              $2346 = +HEAPF64[$20>>3];
              $2347 = $2330 * $2346;
              $2348 = +HEAPF64[$23>>3];
              $2349 = $2329 * $2348;
              $2350 = $2347 - $2349;
              $2351 = +HEAPF64[$21>>3];
              $2352 = $2330 * $2351;
              $2353 = +HEAPF64[$24>>3];
              $2354 = $2329 * $2353;
              $2355 = $2352 - $2354;
              $2356 = $2330 * $2338;
              $2357 = $2356 + 1.0;
              $2358 = $2329 * $2343;
              $2359 = $2358 + $2357;
              $2360 = (+__Z5IKabsd($2336));
              $2361 = $2360 < 9.9999999999999995E-7;
              do {
               if ($2361) {
                $2362 = $2328 - $2329;
                $2363 = (+__Z5IKabsd($2362));
                $2364 = $2363 < 9.9999999999999995E-7;
                if (!($2364)) {
                 break;
                }
                $2365 = (+__Z5IKabsd($2337));
                $2366 = $2365 < 9.9999999999999995E-7;
                if (!($2366)) {
                 break;
                }
                $2367 = (+__Z5IKabsd($2339));
                $2368 = $2367 < 9.9999999999999995E-7;
                if (!($2368)) {
                 break;
                }
                $2369 = (+__Z5IKabsd($2341));
                $2370 = $2369 < 9.9999999999999995E-7;
                if (!($2370)) {
                 break;
                }
                $2371 = (+__Z5IKabsd($2345));
                $2372 = $2371 < 9.9999999999999995E-7;
                if (!($2372)) {
                 break;
                }
                $2373 = (+__Z5IKabsd($2350));
                $2374 = $2373 < 9.9999999999999995E-7;
                if (!($2374)) {
                 break;
                }
                $2375 = (+__Z5IKabsd($2355));
                $2376 = $2375 < 9.9999999999999995E-7;
                if (!($2376)) {
                 break;
                }
                $2377 = (+__Z5IKabsd($2359));
                $2378 = $2377 < 9.9999999999999995E-7;
                if (!($2378)) {
                 break;
                }
                HEAP8[$127>>0] = 1;
                $2379 = +HEAPF64[$11>>3];
                $2380 = (+__Z5IKabsd($2379));
                $2381 = $2380 < 1.9999999999999999E-6;
                do {
                 if ($2381) {
                  $2382 = +HEAPF64[$15>>3];
                  $2383 = (+__Z5IKabsd($2382));
                  $2384 = $2383 < 1.9999999999999999E-6;
                  if (!($2384)) {
                   break;
                  }
                  $2385 = (+__Z5IKsqrd($2379));
                  $2386 = (+__Z5IKsqrd($2382));
                  $2387 = $2385 + $2386;
                  $2388 = $2387 + -1.0;
                  $2389 = (+__Z5IKabsd($2388));
                  $2390 = !($2389 <= 1.9999999999999999E-6);
                  if (!($2390)) {
                   break L7;
                  }
                 }
                } while(0);
                $2391 = +HEAPF64[$11>>3];
                $2392 = +HEAPF64[$15>>3];
                $2393 = (+__Z7IKatan2dd($2391,$2392));
                $2394 = (+__Z5IKsind($2393));
                $2395 = (+__Z5IKcosd($2393));
                $2396 = $2393 > 3.14159265358979;
                do {
                 if ($2396) {
                  $2397 = $2393 + -6.2831853071795898;
                  $2400 = $2397;
                 } else {
                  $2398 = $2393 < -3.14159265358979;
                  if (!($2398)) {
                   $2400 = $2393;
                   break;
                  }
                  $2399 = $2393 + 6.2831853071795898;
                  $2400 = $2399;
                 }
                } while(0);
                HEAP8[$128>>0] = 0;
                HEAP8[$129>>0] = -1;
                HEAPF64[$130>>3] = $2400;
                HEAPF64[$131>>3] = $2395;
                HEAPF64[$132>>3] = $2394;
                $2401 = +HEAPF64[$130>>3];
                $2402 = (+__Z5IKsind($2401));
                $2403 = (+__Z5IKcosd($2401));
                $2404 = +HEAPF64[$21>>3];
                $2405 = +HEAPF64[$20>>3];
                $2406 = +HEAPF64[$22>>3];
                $2407 = $2402 * $2406;
                $2408 = +HEAPF64[$24>>3];
                $2409 = $2407 + $2408;
                $2410 = +HEAPF64[$15>>3];
                $2411 = $2410 - $2403;
                $2412 = $2403 * $2406;
                $2413 = +HEAPF64[$23>>3];
                $2414 = $2413 - $2412;
                $2415 = +HEAPF64[$25>>3];
                $2416 = $2402 * $2415;
                $2417 = $2416 - $2404;
                $2418 = -$2415;
                $2419 = $2403 * $2418;
                $2420 = $2419 - $2405;
                $2421 = $2406 * $2408;
                $2422 = $2402 + $2421;
                $2423 = $2404 * $2418;
                $2424 = $2422 + $2423;
                $2425 = $2406 * $2413;
                $2426 = $2425 - $2403;
                $2427 = $2405 * $2418;
                $2428 = $2426 + $2427;
                $2429 = (+__Z5IKabsd($2409));
                $2430 = $2429 > 5.0000000000000004E-6;
                if ($2430) {
                 break L7;
                }
                $2431 = +HEAPF64[$11>>3];
                $2432 = $2431 - $2402;
                $2433 = (+__Z5IKabsd($2432));
                $2434 = $2433 > 5.0000000000000004E-6;
                if ($2434) {
                 break L7;
                }
                $2435 = (+__Z5IKabsd($2411));
                $2436 = $2435 > 5.0000000000000004E-6;
                if ($2436) {
                 break L7;
                }
                $2437 = (+__Z5IKabsd($2414));
                $2438 = $2437 > 5.0000000000000004E-6;
                if ($2438) {
                 break L7;
                }
                $2439 = (+__Z5IKabsd($2417));
                $2440 = $2439 > 5.0000000000000004E-6;
                if ($2440) {
                 break L7;
                }
                $2441 = (+__Z5IKabsd($2420));
                $2442 = $2441 > 5.0000000000000004E-6;
                if ($2442) {
                 break L7;
                }
                $2443 = (+__Z5IKabsd($2424));
                $2444 = $2443 > 5.0000000000000004E-6;
                if ($2444) {
                 break L7;
                }
                $2445 = (+__Z5IKabsd($2428));
                $2446 = $2445 > 5.0000000000000004E-6;
                if ($2446) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos54,7);
                $2447 = HEAP32[$vinfos54>>2]|0;
                $2448 = ((($2447)) + 17|0);
                HEAP8[$2448>>0] = 1;
                $2449 = +HEAPF64[$this>>3];
                $2450 = HEAP32[$vinfos54>>2]|0;
                $2451 = ((($2450)) + 8|0);
                HEAPF64[$2451>>3] = $2449;
                $2452 = HEAP8[$133>>0]|0;
                $2453 = HEAP32[$vinfos54>>2]|0;
                $2454 = ((($2453)) + 19|0);
                HEAP8[$2454>>0] = $2452;
                $2455 = HEAP8[$134>>0]|0;
                $2456 = HEAP32[$vinfos54>>2]|0;
                $2457 = ((($2456)) + 20|0);
                HEAP8[$2457>>0] = $2455;
                $2458 = HEAP8[$135>>0]|0;
                $2459 = HEAP32[$vinfos54>>2]|0;
                $2460 = ((($2459)) + 18|0);
                HEAP8[$2460>>0] = $2458;
                $2461 = HEAP32[$vinfos54>>2]|0;
                $2462 = ((($2461)) + 41|0);
                HEAP8[$2462>>0] = 1;
                $2463 = +HEAPF64[$136>>3];
                $2464 = HEAP32[$vinfos54>>2]|0;
                $2465 = ((($2464)) + 32|0);
                HEAPF64[$2465>>3] = $2463;
                $2466 = HEAP8[$137>>0]|0;
                $2467 = HEAP32[$vinfos54>>2]|0;
                $2468 = ((($2467)) + 43|0);
                HEAP8[$2468>>0] = $2466;
                $2469 = HEAP8[$138>>0]|0;
                $2470 = HEAP32[$vinfos54>>2]|0;
                $2471 = ((($2470)) + 44|0);
                HEAP8[$2471>>0] = $2469;
                $2472 = HEAP8[$139>>0]|0;
                $2473 = HEAP32[$vinfos54>>2]|0;
                $2474 = ((($2473)) + 42|0);
                HEAP8[$2474>>0] = $2472;
                $2475 = HEAP32[$vinfos54>>2]|0;
                $2476 = ((($2475)) + 65|0);
                HEAP8[$2476>>0] = 1;
                $2477 = +HEAPF64[$140>>3];
                $2478 = HEAP32[$vinfos54>>2]|0;
                $2479 = ((($2478)) + 56|0);
                HEAPF64[$2479>>3] = $2477;
                $2480 = HEAP8[$141>>0]|0;
                $2481 = HEAP32[$vinfos54>>2]|0;
                $2482 = ((($2481)) + 67|0);
                HEAP8[$2482>>0] = $2480;
                $2483 = HEAP8[$142>>0]|0;
                $2484 = HEAP32[$vinfos54>>2]|0;
                $2485 = ((($2484)) + 68|0);
                HEAP8[$2485>>0] = $2483;
                $2486 = HEAP8[$143>>0]|0;
                $2487 = HEAP32[$vinfos54>>2]|0;
                $2488 = ((($2487)) + 66|0);
                HEAP8[$2488>>0] = $2486;
                $2489 = HEAP32[$vinfos54>>2]|0;
                $2490 = ((($2489)) + 89|0);
                HEAP8[$2490>>0] = 1;
                $2491 = +HEAPF64[$144>>3];
                $2492 = HEAP32[$vinfos54>>2]|0;
                $2493 = ((($2492)) + 80|0);
                HEAPF64[$2493>>3] = $2491;
                $2494 = HEAP8[$145>>0]|0;
                $2495 = HEAP32[$vinfos54>>2]|0;
                $2496 = ((($2495)) + 91|0);
                HEAP8[$2496>>0] = $2494;
                $2497 = HEAP8[$146>>0]|0;
                $2498 = HEAP32[$vinfos54>>2]|0;
                $2499 = ((($2498)) + 92|0);
                HEAP8[$2499>>0] = $2497;
                $2500 = HEAP8[$147>>0]|0;
                $2501 = HEAP32[$vinfos54>>2]|0;
                $2502 = ((($2501)) + 90|0);
                HEAP8[$2502>>0] = $2500;
                $2503 = HEAP32[$vinfos54>>2]|0;
                $2504 = ((($2503)) + 113|0);
                HEAP8[$2504>>0] = 1;
                $2505 = +HEAPF64[$101>>3];
                $2506 = HEAP32[$vinfos54>>2]|0;
                $2507 = ((($2506)) + 104|0);
                HEAPF64[$2507>>3] = $2505;
                $2508 = HEAP8[$99>>0]|0;
                $2509 = HEAP32[$vinfos54>>2]|0;
                $2510 = ((($2509)) + 115|0);
                HEAP8[$2510>>0] = $2508;
                $2511 = HEAP8[$100>>0]|0;
                $2512 = HEAP32[$vinfos54>>2]|0;
                $2513 = ((($2512)) + 116|0);
                HEAP8[$2513>>0] = $2511;
                $2514 = HEAP8[$96>>0]|0;
                $2515 = HEAP32[$vinfos54>>2]|0;
                $2516 = ((($2515)) + 114|0);
                HEAP8[$2516>>0] = $2514;
                $2517 = HEAP32[$vinfos54>>2]|0;
                $2518 = ((($2517)) + 137|0);
                HEAP8[$2518>>0] = 1;
                $2519 = +HEAPF64[$29>>3];
                $2520 = HEAP32[$vinfos54>>2]|0;
                $2521 = ((($2520)) + 128|0);
                HEAPF64[$2521>>3] = $2519;
                $2522 = HEAP8[$27>>0]|0;
                $2523 = HEAP32[$vinfos54>>2]|0;
                $2524 = ((($2523)) + 139|0);
                HEAP8[$2524>>0] = $2522;
                $2525 = HEAP8[$28>>0]|0;
                $2526 = HEAP32[$vinfos54>>2]|0;
                $2527 = ((($2526)) + 140|0);
                HEAP8[$2527>>0] = $2525;
                $2528 = HEAP8[$26>>0]|0;
                $2529 = HEAP32[$vinfos54>>2]|0;
                $2530 = ((($2529)) + 138|0);
                HEAP8[$2530>>0] = $2528;
                $2531 = HEAP32[$vinfos54>>2]|0;
                $2532 = ((($2531)) + 161|0);
                HEAP8[$2532>>0] = 1;
                $2533 = +HEAPF64[$130>>3];
                $2534 = HEAP32[$vinfos54>>2]|0;
                $2535 = ((($2534)) + 152|0);
                HEAPF64[$2535>>3] = $2533;
                $2536 = HEAP8[$128>>0]|0;
                $2537 = HEAP32[$vinfos54>>2]|0;
                $2538 = ((($2537)) + 163|0);
                HEAP8[$2538>>0] = $2536;
                $2539 = HEAP8[$129>>0]|0;
                $2540 = HEAP32[$vinfos54>>2]|0;
                $2541 = ((($2540)) + 164|0);
                HEAP8[$2541>>0] = $2539;
                $2542 = HEAP8[$127>>0]|0;
                $2543 = HEAP32[$vinfos54>>2]|0;
                $2544 = ((($2543)) + 162|0);
                HEAP8[$2544>>0] = $2542;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree55,0);
                $2545 = HEAP32[$solutions>>2]|0;
                $2546 = ((($2545)) + 8|0);
                $2547 = HEAP32[$2546>>2]|0;
                (FUNCTION_TABLE_iiii[$2547 & 31]($solutions,$vinfos54,$vfree55)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree55);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos54);
                break L7;
               }
              } while(0);
              $2548 = +HEAPF64[$103>>3];
              $2549 = +HEAPF64[$102>>3];
              $2550 = +HEAPF64[$22>>3];
              $2551 = $2549 * $2550;
              $2552 = +HEAPF64[$19>>3];
              $2553 = $2548 * $2552;
              $2554 = $2551 - $2553;
              $2555 = +HEAPF64[$29>>3];
              $2556 = $2555 + -1.5707963267949001;
              $2557 = (+__Z5IKabsd($2556));
              $2558 = $2557 + 3.14159265358979;
              $2559 = (+__Z6IKfmoddd($2558,6.2831853071795898));
              $2560 = $2559 + -3.14159265358979;
              $2561 = $2552 - $2549;
              $2562 = $2550 - $2548;
              $2563 = $2548 * $2550;
              $2564 = $2563 + -1.0;
              $2565 = $2549 * $2552;
              $2566 = $2564 + $2565;
              $2567 = +HEAPF64[$21>>3];
              $2568 = $2548 * $2567;
              $2569 = +HEAPF64[$15>>3];
              $2570 = $2549 * $2569;
              $2571 = $2568 + $2570;
              $2572 = +HEAPF64[$20>>3];
              $2573 = $2548 * $2572;
              $2574 = +HEAPF64[$11>>3];
              $2575 = $2549 * $2574;
              $2576 = $2573 + $2575;
              $2577 = -$2573;
              $2578 = $2577 - $2575;
              $2579 = -$2568;
              $2580 = $2579 - $2570;
              $2581 = 1.0 - $2565;
              $2582 = $2581 - $2563;
              $2583 = (+__Z5IKabsd($2560));
              $2584 = $2583 < 9.9999999999999995E-7;
              do {
               if ($2584) {
                $2585 = +HEAPF64[$25>>3];
                $2586 = (+__Z5IKabsd($2585));
                $2587 = $2586 < 9.9999999999999995E-7;
                if (!($2587)) {
                 break;
                }
                $2588 = (+__Z5IKabsd($2561));
                $2589 = $2588 < 9.9999999999999995E-7;
                if (!($2589)) {
                 break;
                }
                $2590 = (+__Z5IKabsd($2562));
                $2591 = $2590 < 9.9999999999999995E-7;
                if (!($2591)) {
                 break;
                }
                $2592 = (+__Z5IKabsd($2554));
                $2593 = $2592 < 9.9999999999999995E-7;
                if (!($2593)) {
                 break;
                }
                $2594 = (+__Z5IKabsd($2566));
                $2595 = $2594 < 9.9999999999999995E-7;
                if (!($2595)) {
                 break;
                }
                $2596 = (+__Z5IKabsd($2571));
                $2597 = $2596 < 9.9999999999999995E-7;
                if (!($2597)) {
                 break;
                }
                $2598 = (+__Z5IKabsd($2576));
                $2599 = $2598 < 9.9999999999999995E-7;
                if (!($2599)) {
                 break;
                }
                $2600 = (+__Z5IKabsd($2578));
                $2601 = $2600 < 9.9999999999999995E-7;
                if (!($2601)) {
                 break;
                }
                $2602 = (+__Z5IKabsd($2580));
                $2603 = $2602 < 9.9999999999999995E-7;
                if (!($2603)) {
                 break;
                }
                $2604 = (+__Z5IKabsd($2582));
                $2605 = $2604 < 9.9999999999999995E-7;
                if (!($2605)) {
                 break;
                }
                HEAP8[$148>>0] = 1;
                $2606 = +HEAPF64[$24>>3];
                $2607 = (+__Z5IKabsd($2606));
                $2608 = $2607 < 1.9999999999999999E-6;
                do {
                 if ($2608) {
                  $2609 = +HEAPF64[$23>>3];
                  $2610 = -$2609;
                  $2611 = (+__Z5IKabsd($2610));
                  $2612 = $2611 < 1.9999999999999999E-6;
                  if (!($2612)) {
                   break;
                  }
                  $2613 = (+__Z5IKsqrd($2606));
                  $2614 = (+__Z5IKsqrd($2610));
                  $2615 = $2613 + $2614;
                  $2616 = $2615 + -1.0;
                  $2617 = (+__Z5IKabsd($2616));
                  $2618 = !($2617 <= 1.9999999999999999E-6);
                  if (!($2618)) {
                   break L7;
                  }
                 }
                } while(0);
                $2619 = +HEAPF64[$24>>3];
                $2620 = +HEAPF64[$23>>3];
                $2621 = -$2620;
                $2622 = (+__Z7IKatan2dd($2619,$2621));
                $2623 = (+__Z5IKsind($2622));
                $2624 = (+__Z5IKcosd($2622));
                $2625 = $2622 > 3.14159265358979;
                do {
                 if ($2625) {
                  $2626 = $2622 + -6.2831853071795898;
                  $2629 = $2626;
                 } else {
                  $2627 = $2622 < -3.14159265358979;
                  if (!($2627)) {
                   $2629 = $2622;
                   break;
                  }
                  $2628 = $2622 + 6.2831853071795898;
                  $2629 = $2628;
                 }
                } while(0);
                HEAP8[$149>>0] = 0;
                HEAP8[$150>>0] = -1;
                HEAPF64[$151>>3] = $2629;
                HEAPF64[$152>>3] = $2624;
                HEAPF64[$153>>3] = $2623;
                $2630 = +HEAPF64[$151>>3];
                $2631 = (+__Z5IKcosd($2630));
                $2632 = (+__Z5IKsind($2630));
                $2633 = +HEAPF64[$22>>3];
                $2634 = +HEAPF64[$23>>3];
                $2635 = $2631 + $2634;
                $2636 = $2631 * $2633;
                $2637 = +HEAPF64[$15>>3];
                $2638 = $2636 + $2637;
                $2639 = $2632 * $2633;
                $2640 = +HEAPF64[$11>>3];
                $2641 = $2639 + $2640;
                $2642 = +HEAPF64[$19>>3];
                $2643 = -$2642;
                $2644 = $2631 * $2643;
                $2645 = +HEAPF64[$21>>3];
                $2646 = $2644 + $2645;
                $2647 = $2632 * $2643;
                $2648 = +HEAPF64[$20>>3];
                $2649 = $2647 + $2648;
                $2650 = $2633 * $2640;
                $2651 = -$2650;
                $2652 = $2651 - $2632;
                $2653 = $2642 * $2648;
                $2654 = $2652 + $2653;
                $2655 = $2633 * $2637;
                $2656 = -$2655;
                $2657 = $2656 - $2631;
                $2658 = $2642 * $2645;
                $2659 = $2657 + $2658;
                $2660 = (+__Z5IKabsd($2635));
                $2661 = $2660 > 5.0000000000000004E-6;
                if ($2661) {
                 break L7;
                }
                $2662 = +HEAPF64[$24>>3];
                $2663 = $2662 - $2632;
                $2664 = (+__Z5IKabsd($2663));
                $2665 = $2664 > 5.0000000000000004E-6;
                if ($2665) {
                 break L7;
                }
                $2666 = (+__Z5IKabsd($2638));
                $2667 = $2666 > 5.0000000000000004E-6;
                if ($2667) {
                 break L7;
                }
                $2668 = (+__Z5IKabsd($2641));
                $2669 = $2668 > 5.0000000000000004E-6;
                if ($2669) {
                 break L7;
                }
                $2670 = (+__Z5IKabsd($2646));
                $2671 = $2670 > 5.0000000000000004E-6;
                if ($2671) {
                 break L7;
                }
                $2672 = (+__Z5IKabsd($2649));
                $2673 = $2672 > 5.0000000000000004E-6;
                if ($2673) {
                 break L7;
                }
                $2674 = (+__Z5IKabsd($2654));
                $2675 = $2674 > 5.0000000000000004E-6;
                if ($2675) {
                 break L7;
                }
                $2676 = (+__Z5IKabsd($2659));
                $2677 = $2676 > 5.0000000000000004E-6;
                if ($2677) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos65,7);
                $2678 = HEAP32[$vinfos65>>2]|0;
                $2679 = ((($2678)) + 17|0);
                HEAP8[$2679>>0] = 1;
                $2680 = +HEAPF64[$this>>3];
                $2681 = HEAP32[$vinfos65>>2]|0;
                $2682 = ((($2681)) + 8|0);
                HEAPF64[$2682>>3] = $2680;
                $2683 = HEAP8[$154>>0]|0;
                $2684 = HEAP32[$vinfos65>>2]|0;
                $2685 = ((($2684)) + 19|0);
                HEAP8[$2685>>0] = $2683;
                $2686 = HEAP8[$155>>0]|0;
                $2687 = HEAP32[$vinfos65>>2]|0;
                $2688 = ((($2687)) + 20|0);
                HEAP8[$2688>>0] = $2686;
                $2689 = HEAP8[$156>>0]|0;
                $2690 = HEAP32[$vinfos65>>2]|0;
                $2691 = ((($2690)) + 18|0);
                HEAP8[$2691>>0] = $2689;
                $2692 = HEAP32[$vinfos65>>2]|0;
                $2693 = ((($2692)) + 41|0);
                HEAP8[$2693>>0] = 1;
                $2694 = +HEAPF64[$157>>3];
                $2695 = HEAP32[$vinfos65>>2]|0;
                $2696 = ((($2695)) + 32|0);
                HEAPF64[$2696>>3] = $2694;
                $2697 = HEAP8[$158>>0]|0;
                $2698 = HEAP32[$vinfos65>>2]|0;
                $2699 = ((($2698)) + 43|0);
                HEAP8[$2699>>0] = $2697;
                $2700 = HEAP8[$159>>0]|0;
                $2701 = HEAP32[$vinfos65>>2]|0;
                $2702 = ((($2701)) + 44|0);
                HEAP8[$2702>>0] = $2700;
                $2703 = HEAP8[$160>>0]|0;
                $2704 = HEAP32[$vinfos65>>2]|0;
                $2705 = ((($2704)) + 42|0);
                HEAP8[$2705>>0] = $2703;
                $2706 = HEAP32[$vinfos65>>2]|0;
                $2707 = ((($2706)) + 65|0);
                HEAP8[$2707>>0] = 1;
                $2708 = +HEAPF64[$161>>3];
                $2709 = HEAP32[$vinfos65>>2]|0;
                $2710 = ((($2709)) + 56|0);
                HEAPF64[$2710>>3] = $2708;
                $2711 = HEAP8[$162>>0]|0;
                $2712 = HEAP32[$vinfos65>>2]|0;
                $2713 = ((($2712)) + 67|0);
                HEAP8[$2713>>0] = $2711;
                $2714 = HEAP8[$163>>0]|0;
                $2715 = HEAP32[$vinfos65>>2]|0;
                $2716 = ((($2715)) + 68|0);
                HEAP8[$2716>>0] = $2714;
                $2717 = HEAP8[$164>>0]|0;
                $2718 = HEAP32[$vinfos65>>2]|0;
                $2719 = ((($2718)) + 66|0);
                HEAP8[$2719>>0] = $2717;
                $2720 = HEAP32[$vinfos65>>2]|0;
                $2721 = ((($2720)) + 89|0);
                HEAP8[$2721>>0] = 1;
                $2722 = +HEAPF64[$165>>3];
                $2723 = HEAP32[$vinfos65>>2]|0;
                $2724 = ((($2723)) + 80|0);
                HEAPF64[$2724>>3] = $2722;
                $2725 = HEAP8[$166>>0]|0;
                $2726 = HEAP32[$vinfos65>>2]|0;
                $2727 = ((($2726)) + 91|0);
                HEAP8[$2727>>0] = $2725;
                $2728 = HEAP8[$167>>0]|0;
                $2729 = HEAP32[$vinfos65>>2]|0;
                $2730 = ((($2729)) + 92|0);
                HEAP8[$2730>>0] = $2728;
                $2731 = HEAP8[$168>>0]|0;
                $2732 = HEAP32[$vinfos65>>2]|0;
                $2733 = ((($2732)) + 90|0);
                HEAP8[$2733>>0] = $2731;
                $2734 = HEAP32[$vinfos65>>2]|0;
                $2735 = ((($2734)) + 113|0);
                HEAP8[$2735>>0] = 1;
                $2736 = +HEAPF64[$101>>3];
                $2737 = HEAP32[$vinfos65>>2]|0;
                $2738 = ((($2737)) + 104|0);
                HEAPF64[$2738>>3] = $2736;
                $2739 = HEAP8[$99>>0]|0;
                $2740 = HEAP32[$vinfos65>>2]|0;
                $2741 = ((($2740)) + 115|0);
                HEAP8[$2741>>0] = $2739;
                $2742 = HEAP8[$100>>0]|0;
                $2743 = HEAP32[$vinfos65>>2]|0;
                $2744 = ((($2743)) + 116|0);
                HEAP8[$2744>>0] = $2742;
                $2745 = HEAP8[$96>>0]|0;
                $2746 = HEAP32[$vinfos65>>2]|0;
                $2747 = ((($2746)) + 114|0);
                HEAP8[$2747>>0] = $2745;
                $2748 = HEAP32[$vinfos65>>2]|0;
                $2749 = ((($2748)) + 137|0);
                HEAP8[$2749>>0] = 1;
                $2750 = +HEAPF64[$29>>3];
                $2751 = HEAP32[$vinfos65>>2]|0;
                $2752 = ((($2751)) + 128|0);
                HEAPF64[$2752>>3] = $2750;
                $2753 = HEAP8[$27>>0]|0;
                $2754 = HEAP32[$vinfos65>>2]|0;
                $2755 = ((($2754)) + 139|0);
                HEAP8[$2755>>0] = $2753;
                $2756 = HEAP8[$28>>0]|0;
                $2757 = HEAP32[$vinfos65>>2]|0;
                $2758 = ((($2757)) + 140|0);
                HEAP8[$2758>>0] = $2756;
                $2759 = HEAP8[$26>>0]|0;
                $2760 = HEAP32[$vinfos65>>2]|0;
                $2761 = ((($2760)) + 138|0);
                HEAP8[$2761>>0] = $2759;
                $2762 = HEAP32[$vinfos65>>2]|0;
                $2763 = ((($2762)) + 161|0);
                HEAP8[$2763>>0] = 1;
                $2764 = +HEAPF64[$151>>3];
                $2765 = HEAP32[$vinfos65>>2]|0;
                $2766 = ((($2765)) + 152|0);
                HEAPF64[$2766>>3] = $2764;
                $2767 = HEAP8[$149>>0]|0;
                $2768 = HEAP32[$vinfos65>>2]|0;
                $2769 = ((($2768)) + 163|0);
                HEAP8[$2769>>0] = $2767;
                $2770 = HEAP8[$150>>0]|0;
                $2771 = HEAP32[$vinfos65>>2]|0;
                $2772 = ((($2771)) + 164|0);
                HEAP8[$2772>>0] = $2770;
                $2773 = HEAP8[$148>>0]|0;
                $2774 = HEAP32[$vinfos65>>2]|0;
                $2775 = ((($2774)) + 162|0);
                HEAP8[$2775>>0] = $2773;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree66,0);
                $2776 = HEAP32[$solutions>>2]|0;
                $2777 = ((($2776)) + 8|0);
                $2778 = HEAP32[$2777>>2]|0;
                (FUNCTION_TABLE_iiii[$2778 & 31]($solutions,$vinfos65,$vfree66)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree66);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos65);
                break L7;
               }
              } while(0);
              $2779 = +HEAPF64[$19>>3];
              $2780 = +HEAPF64[$103>>3];
              $2781 = $2779 * $2780;
              $2782 = +HEAPF64[$102>>3];
              $2783 = +HEAPF64[$22>>3];
              $2784 = $2782 * $2783;
              $2785 = $2784 - $2781;
              $2786 = +HEAPF64[$20>>3];
              $2787 = $2780 * $2786;
              $2788 = +HEAPF64[$11>>3];
              $2789 = $2782 * $2788;
              $2790 = $2787 + $2789;
              $2791 = +HEAPF64[$21>>3];
              $2792 = $2780 * $2791;
              $2793 = +HEAPF64[$15>>3];
              $2794 = $2782 * $2793;
              $2795 = $2792 + $2794;
              $2796 = $2780 * $2783;
              $2797 = $2796 + 1.0;
              $2798 = $2779 * $2782;
              $2799 = $2798 + $2797;
              $2800 = +HEAPF64[$29>>3];
              $2801 = $2800 + 1.5707963267949001;
              $2802 = (+__Z5IKabsd($2801));
              $2803 = $2802 + 3.14159265358979;
              $2804 = (+__Z6IKfmoddd($2803,6.2831853071795898));
              $2805 = $2804 + -3.14159265358979;
              $2806 = $2779 + $2782;
              $2807 = $2780 + $2783;
              $2808 = (+__Z5IKabsd($2805));
              $2809 = $2808 < 9.9999999999999995E-7;
              do {
               if ($2809) {
                $2810 = +HEAPF64[$25>>3];
                $2811 = (+__Z5IKabsd($2810));
                $2812 = $2811 < 9.9999999999999995E-7;
                if (!($2812)) {
                 break;
                }
                $2813 = (+__Z5IKabsd($2806));
                $2814 = $2813 < 9.9999999999999995E-7;
                if (!($2814)) {
                 break;
                }
                $2815 = (+__Z5IKabsd($2807));
                $2816 = $2815 < 9.9999999999999995E-7;
                if (!($2816)) {
                 break;
                }
                $2817 = (+__Z5IKabsd($2785));
                $2818 = $2817 < 9.9999999999999995E-7;
                if (!($2818)) {
                 break;
                }
                $2819 = (+__Z5IKabsd($2799));
                $2820 = $2819 < 9.9999999999999995E-7;
                if (!($2820)) {
                 break;
                }
                $2821 = (+__Z5IKabsd($2795));
                $2822 = $2821 < 9.9999999999999995E-7;
                if (!($2822)) {
                 break;
                }
                $2823 = (+__Z5IKabsd($2790));
                $2824 = $2823 < 9.9999999999999995E-7;
                if (!($2824)) {
                 break;
                }
                HEAP8[$169>>0] = 1;
                $2825 = +HEAPF64[$24>>3];
                $2826 = -$2825;
                $2827 = (+__Z5IKabsd($2826));
                $2828 = $2827 < 1.9999999999999999E-6;
                do {
                 if ($2828) {
                  $2829 = +HEAPF64[$23>>3];
                  $2830 = (+__Z5IKabsd($2829));
                  $2831 = $2830 < 1.9999999999999999E-6;
                  if (!($2831)) {
                   break;
                  }
                  $2832 = (+__Z5IKsqrd($2826));
                  $2833 = (+__Z5IKsqrd($2829));
                  $2834 = $2832 + $2833;
                  $2835 = $2834 + -1.0;
                  $2836 = (+__Z5IKabsd($2835));
                  $2837 = !($2836 <= 1.9999999999999999E-6);
                  if (!($2837)) {
                   break L7;
                  }
                 }
                } while(0);
                $2838 = +HEAPF64[$24>>3];
                $2839 = -$2838;
                $2840 = +HEAPF64[$23>>3];
                $2841 = (+__Z7IKatan2dd($2839,$2840));
                $2842 = (+__Z5IKsind($2841));
                $2843 = (+__Z5IKcosd($2841));
                $2844 = $2841 > 3.14159265358979;
                do {
                 if ($2844) {
                  $2845 = $2841 + -6.2831853071795898;
                  $2848 = $2845;
                 } else {
                  $2846 = $2841 < -3.14159265358979;
                  if (!($2846)) {
                   $2848 = $2841;
                   break;
                  }
                  $2847 = $2841 + 6.2831853071795898;
                  $2848 = $2847;
                 }
                } while(0);
                HEAP8[$170>>0] = 0;
                HEAP8[$171>>0] = -1;
                HEAPF64[$172>>3] = $2848;
                HEAPF64[$173>>3] = $2843;
                HEAPF64[$174>>3] = $2842;
                $2849 = +HEAPF64[$172>>3];
                $2850 = (+__Z5IKcosd($2849));
                $2851 = (+__Z5IKsind($2849));
                $2852 = +HEAPF64[$19>>3];
                $2853 = +HEAPF64[$24>>3];
                $2854 = $2851 + $2853;
                $2855 = $2850 * $2852;
                $2856 = +HEAPF64[$21>>3];
                $2857 = $2855 + $2856;
                $2858 = $2851 * $2852;
                $2859 = +HEAPF64[$20>>3];
                $2860 = $2858 + $2859;
                $2861 = +HEAPF64[$15>>3];
                $2862 = +HEAPF64[$22>>3];
                $2863 = -$2862;
                $2864 = $2850 * $2863;
                $2865 = $2861 + $2864;
                $2866 = +HEAPF64[$11>>3];
                $2867 = $2851 * $2863;
                $2868 = $2866 + $2867;
                $2869 = $2852 * $2859;
                $2870 = $2862 * $2866;
                $2871 = $2870 - $2869;
                $2872 = $2871 - $2851;
                $2873 = $2852 * $2856;
                $2874 = $2861 * $2862;
                $2875 = $2874 - $2873;
                $2876 = $2875 - $2850;
                $2877 = (+__Z5IKabsd($2854));
                $2878 = $2877 > 5.0000000000000004E-6;
                if ($2878) {
                 break L7;
                }
                $2879 = +HEAPF64[$23>>3];
                $2880 = $2879 - $2850;
                $2881 = (+__Z5IKabsd($2880));
                $2882 = $2881 > 5.0000000000000004E-6;
                if ($2882) {
                 break L7;
                }
                $2883 = (+__Z5IKabsd($2857));
                $2884 = $2883 > 5.0000000000000004E-6;
                if ($2884) {
                 break L7;
                }
                $2885 = (+__Z5IKabsd($2860));
                $2886 = $2885 > 5.0000000000000004E-6;
                if ($2886) {
                 break L7;
                }
                $2887 = (+__Z5IKabsd($2865));
                $2888 = $2887 > 5.0000000000000004E-6;
                if ($2888) {
                 break L7;
                }
                $2889 = (+__Z5IKabsd($2868));
                $2890 = $2889 > 5.0000000000000004E-6;
                if ($2890) {
                 break L7;
                }
                $2891 = (+__Z5IKabsd($2872));
                $2892 = $2891 > 5.0000000000000004E-6;
                if ($2892) {
                 break L7;
                }
                $2893 = (+__Z5IKabsd($2876));
                $2894 = $2893 > 5.0000000000000004E-6;
                if ($2894) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos76,7);
                $2895 = HEAP32[$vinfos76>>2]|0;
                $2896 = ((($2895)) + 17|0);
                HEAP8[$2896>>0] = 1;
                $2897 = +HEAPF64[$this>>3];
                $2898 = HEAP32[$vinfos76>>2]|0;
                $2899 = ((($2898)) + 8|0);
                HEAPF64[$2899>>3] = $2897;
                $2900 = HEAP8[$175>>0]|0;
                $2901 = HEAP32[$vinfos76>>2]|0;
                $2902 = ((($2901)) + 19|0);
                HEAP8[$2902>>0] = $2900;
                $2903 = HEAP8[$176>>0]|0;
                $2904 = HEAP32[$vinfos76>>2]|0;
                $2905 = ((($2904)) + 20|0);
                HEAP8[$2905>>0] = $2903;
                $2906 = HEAP8[$177>>0]|0;
                $2907 = HEAP32[$vinfos76>>2]|0;
                $2908 = ((($2907)) + 18|0);
                HEAP8[$2908>>0] = $2906;
                $2909 = HEAP32[$vinfos76>>2]|0;
                $2910 = ((($2909)) + 41|0);
                HEAP8[$2910>>0] = 1;
                $2911 = +HEAPF64[$178>>3];
                $2912 = HEAP32[$vinfos76>>2]|0;
                $2913 = ((($2912)) + 32|0);
                HEAPF64[$2913>>3] = $2911;
                $2914 = HEAP8[$179>>0]|0;
                $2915 = HEAP32[$vinfos76>>2]|0;
                $2916 = ((($2915)) + 43|0);
                HEAP8[$2916>>0] = $2914;
                $2917 = HEAP8[$180>>0]|0;
                $2918 = HEAP32[$vinfos76>>2]|0;
                $2919 = ((($2918)) + 44|0);
                HEAP8[$2919>>0] = $2917;
                $2920 = HEAP8[$181>>0]|0;
                $2921 = HEAP32[$vinfos76>>2]|0;
                $2922 = ((($2921)) + 42|0);
                HEAP8[$2922>>0] = $2920;
                $2923 = HEAP32[$vinfos76>>2]|0;
                $2924 = ((($2923)) + 65|0);
                HEAP8[$2924>>0] = 1;
                $2925 = +HEAPF64[$182>>3];
                $2926 = HEAP32[$vinfos76>>2]|0;
                $2927 = ((($2926)) + 56|0);
                HEAPF64[$2927>>3] = $2925;
                $2928 = HEAP8[$183>>0]|0;
                $2929 = HEAP32[$vinfos76>>2]|0;
                $2930 = ((($2929)) + 67|0);
                HEAP8[$2930>>0] = $2928;
                $2931 = HEAP8[$184>>0]|0;
                $2932 = HEAP32[$vinfos76>>2]|0;
                $2933 = ((($2932)) + 68|0);
                HEAP8[$2933>>0] = $2931;
                $2934 = HEAP8[$185>>0]|0;
                $2935 = HEAP32[$vinfos76>>2]|0;
                $2936 = ((($2935)) + 66|0);
                HEAP8[$2936>>0] = $2934;
                $2937 = HEAP32[$vinfos76>>2]|0;
                $2938 = ((($2937)) + 89|0);
                HEAP8[$2938>>0] = 1;
                $2939 = +HEAPF64[$186>>3];
                $2940 = HEAP32[$vinfos76>>2]|0;
                $2941 = ((($2940)) + 80|0);
                HEAPF64[$2941>>3] = $2939;
                $2942 = HEAP8[$187>>0]|0;
                $2943 = HEAP32[$vinfos76>>2]|0;
                $2944 = ((($2943)) + 91|0);
                HEAP8[$2944>>0] = $2942;
                $2945 = HEAP8[$188>>0]|0;
                $2946 = HEAP32[$vinfos76>>2]|0;
                $2947 = ((($2946)) + 92|0);
                HEAP8[$2947>>0] = $2945;
                $2948 = HEAP8[$189>>0]|0;
                $2949 = HEAP32[$vinfos76>>2]|0;
                $2950 = ((($2949)) + 90|0);
                HEAP8[$2950>>0] = $2948;
                $2951 = HEAP32[$vinfos76>>2]|0;
                $2952 = ((($2951)) + 113|0);
                HEAP8[$2952>>0] = 1;
                $2953 = +HEAPF64[$101>>3];
                $2954 = HEAP32[$vinfos76>>2]|0;
                $2955 = ((($2954)) + 104|0);
                HEAPF64[$2955>>3] = $2953;
                $2956 = HEAP8[$99>>0]|0;
                $2957 = HEAP32[$vinfos76>>2]|0;
                $2958 = ((($2957)) + 115|0);
                HEAP8[$2958>>0] = $2956;
                $2959 = HEAP8[$100>>0]|0;
                $2960 = HEAP32[$vinfos76>>2]|0;
                $2961 = ((($2960)) + 116|0);
                HEAP8[$2961>>0] = $2959;
                $2962 = HEAP8[$96>>0]|0;
                $2963 = HEAP32[$vinfos76>>2]|0;
                $2964 = ((($2963)) + 114|0);
                HEAP8[$2964>>0] = $2962;
                $2965 = HEAP32[$vinfos76>>2]|0;
                $2966 = ((($2965)) + 137|0);
                HEAP8[$2966>>0] = 1;
                $2967 = +HEAPF64[$29>>3];
                $2968 = HEAP32[$vinfos76>>2]|0;
                $2969 = ((($2968)) + 128|0);
                HEAPF64[$2969>>3] = $2967;
                $2970 = HEAP8[$27>>0]|0;
                $2971 = HEAP32[$vinfos76>>2]|0;
                $2972 = ((($2971)) + 139|0);
                HEAP8[$2972>>0] = $2970;
                $2973 = HEAP8[$28>>0]|0;
                $2974 = HEAP32[$vinfos76>>2]|0;
                $2975 = ((($2974)) + 140|0);
                HEAP8[$2975>>0] = $2973;
                $2976 = HEAP8[$26>>0]|0;
                $2977 = HEAP32[$vinfos76>>2]|0;
                $2978 = ((($2977)) + 138|0);
                HEAP8[$2978>>0] = $2976;
                $2979 = HEAP32[$vinfos76>>2]|0;
                $2980 = ((($2979)) + 161|0);
                HEAP8[$2980>>0] = 1;
                $2981 = +HEAPF64[$172>>3];
                $2982 = HEAP32[$vinfos76>>2]|0;
                $2983 = ((($2982)) + 152|0);
                HEAPF64[$2983>>3] = $2981;
                $2984 = HEAP8[$170>>0]|0;
                $2985 = HEAP32[$vinfos76>>2]|0;
                $2986 = ((($2985)) + 163|0);
                HEAP8[$2986>>0] = $2984;
                $2987 = HEAP8[$171>>0]|0;
                $2988 = HEAP32[$vinfos76>>2]|0;
                $2989 = ((($2988)) + 164|0);
                HEAP8[$2989>>0] = $2987;
                $2990 = HEAP8[$169>>0]|0;
                $2991 = HEAP32[$vinfos76>>2]|0;
                $2992 = ((($2991)) + 162|0);
                HEAP8[$2992>>0] = $2990;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree77,0);
                $2993 = HEAP32[$solutions>>2]|0;
                $2994 = ((($2993)) + 8|0);
                $2995 = HEAP32[$2994>>2]|0;
                (FUNCTION_TABLE_iiii[$2995 & 31]($solutions,$vinfos76,$vfree77)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree77);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos76);
                break L7;
               }
              } while(0);
              $2996 = +HEAPF64[$19>>3];
              $2997 = +HEAPF64[$103>>3];
              $2998 = $2996 * $2997;
              $2999 = +HEAPF64[$102>>3];
              $3000 = +HEAPF64[$22>>3];
              $3001 = $2999 * $3000;
              $3002 = $3001 - $2998;
              $3003 = $2997 * $3000;
              $3004 = $2996 * $2999;
              $3005 = $3004 + $3003;
              $3006 = +HEAPF64[$29>>3];
              $3007 = (+__Z5IKabsd($3006));
              $3008 = $3007 + 3.14159265358979;
              $3009 = (+__Z6IKfmoddd($3008,6.2831853071795898));
              $3010 = $3009 + -3.14159265358979;
              $3011 = +HEAPF64[$23>>3];
              $3012 = +HEAPF64[$24>>3];
              $3013 = (+__Z5IKabsd($3010));
              $3014 = $3013 < 9.9999999999999995E-7;
              do {
               if ($3014) {
                $3015 = +HEAPF64[$25>>3];
                $3016 = $3015 + -1.0;
                $3017 = (+__Z5IKabsd($3016));
                $3018 = $3017 < 9.9999999999999995E-7;
                if (!($3018)) {
                 break;
                }
                $3019 = (+__Z5IKabsd($3011));
                $3020 = $3019 < 9.9999999999999995E-7;
                if (!($3020)) {
                 break;
                }
                $3021 = (+__Z5IKabsd($2996));
                $3022 = $3021 < 9.9999999999999995E-7;
                if (!($3022)) {
                 break;
                }
                $3023 = (+__Z5IKabsd($3000));
                $3024 = $3023 < 9.9999999999999995E-7;
                if (!($3024)) {
                 break;
                }
                $3025 = (+__Z5IKabsd($3012));
                $3026 = $3025 < 9.9999999999999995E-7;
                if (!($3026)) {
                 break;
                }
                $3027 = (+__Z5IKabsd($3002));
                $3028 = $3027 < 9.9999999999999995E-7;
                if (!($3028)) {
                 break;
                }
                $3029 = (+__Z5IKabsd($3005));
                $3030 = $3029 < 9.9999999999999995E-7;
                if (!($3030)) {
                 break;
                }
                HEAP8[$190>>0] = 1;
                $3031 = +HEAPF64[$15>>3];
                $3032 = +HEAPF64[$102>>3];
                $3033 = $3031 * $3032;
                $3034 = +HEAPF64[$11>>3];
                $3035 = +HEAPF64[$103>>3];
                $3036 = $3034 * $3035;
                $3037 = -$3036;
                $3038 = $3037 - $3033;
                $3039 = (+__Z5IKabsd($3038));
                $3040 = $3039 < 1.9999999999999999E-6;
                do {
                 if ($3040) {
                  $3041 = $3031 * $3035;
                  $3042 = $3032 * $3034;
                  $3043 = $3042 - $3041;
                  $3044 = (+__Z5IKabsd($3043));
                  $3045 = $3044 < 1.9999999999999999E-6;
                  if (!($3045)) {
                   break;
                  }
                  $3046 = (+__Z5IKsqrd($3038));
                  $3047 = (+__Z5IKsqrd($3043));
                  $3048 = $3046 + $3047;
                  $3049 = $3048 + -1.0;
                  $3050 = (+__Z5IKabsd($3049));
                  $3051 = !($3050 <= 1.9999999999999999E-6);
                  if (!($3051)) {
                   break L7;
                  }
                 }
                } while(0);
                $3052 = +HEAPF64[$102>>3];
                $3053 = $3031 * $3052;
                $3054 = +HEAPF64[$11>>3];
                $3055 = +HEAPF64[$103>>3];
                $3056 = $3054 * $3055;
                $3057 = -$3056;
                $3058 = $3057 - $3053;
                $3059 = $3031 * $3055;
                $3060 = $3052 * $3054;
                $3061 = $3060 - $3059;
                $3062 = (+__Z7IKatan2dd($3058,$3061));
                $3063 = (+__Z5IKsind($3062));
                $3064 = (+__Z5IKcosd($3062));
                $3065 = $3062 > 3.14159265358979;
                do {
                 if ($3065) {
                  $3066 = $3062 + -6.2831853071795898;
                  $3069 = $3066;
                 } else {
                  $3067 = $3062 < -3.14159265358979;
                  if (!($3067)) {
                   $3069 = $3062;
                   break;
                  }
                  $3068 = $3062 + 6.2831853071795898;
                  $3069 = $3068;
                 }
                } while(0);
                HEAP8[$191>>0] = 0;
                HEAP8[$192>>0] = -1;
                HEAPF64[$193>>3] = $3069;
                HEAPF64[$194>>3] = $3064;
                HEAPF64[$195>>3] = $3063;
                $3070 = +HEAPF64[$193>>3];
                $3071 = (+__Z5IKsind($3070));
                $3072 = (+__Z5IKcosd($3070));
                $3073 = +HEAPF64[$103>>3];
                $3074 = $3071 * $3073;
                $3075 = +HEAPF64[$102>>3];
                $3076 = $3071 * $3075;
                $3077 = $3072 * $3075;
                $3078 = +HEAPF64[$21>>3];
                $3079 = $3073 * $3078;
                $3080 = +HEAPF64[$15>>3];
                $3081 = $3075 * $3080;
                $3082 = $3079 + $3081;
                $3083 = $3071 + $3082;
                $3084 = +HEAPF64[$20>>3];
                $3085 = $3073 * $3084;
                $3086 = -$3072;
                $3087 = $3085 - $3072;
                $3088 = +HEAPF64[$11>>3];
                $3089 = $3075 * $3088;
                $3090 = $3087 + $3089;
                $3091 = $3075 * $3084;
                $3092 = $3091 - $3071;
                $3093 = $3073 * $3088;
                $3094 = $3092 - $3093;
                $3095 = $3073 * $3080;
                $3096 = $3086 - $3095;
                $3097 = $3075 * $3078;
                $3098 = $3097 + $3096;
                $3099 = $3074 - $3077;
                $3100 = $3099 + $3088;
                $3101 = $3078 + $3099;
                $3102 = $3073 * $3086;
                $3103 = $3102 - $3076;
                $3104 = $3103 + $3084;
                $3105 = (+__Z5IKabsd($3083));
                $3106 = $3105 > 5.0000000000000004E-6;
                if ($3106) {
                 break L7;
                }
                $3107 = $3076 + $3080;
                $3108 = $3072 * $3073;
                $3109 = $3108 + $3107;
                $3110 = (+__Z5IKabsd($3109));
                $3111 = $3110 > 5.0000000000000004E-6;
                if ($3111) {
                 break L7;
                }
                $3112 = (+__Z5IKabsd($3090));
                $3113 = $3112 > 5.0000000000000004E-6;
                if ($3113) {
                 break L7;
                }
                $3114 = (+__Z5IKabsd($3094));
                $3115 = $3114 > 5.0000000000000004E-6;
                if ($3115) {
                 break L7;
                }
                $3116 = (+__Z5IKabsd($3098));
                $3117 = $3116 > 5.0000000000000004E-6;
                if ($3117) {
                 break L7;
                }
                $3118 = (+__Z5IKabsd($3100));
                $3119 = $3118 > 5.0000000000000004E-6;
                if ($3119) {
                 break L7;
                }
                $3120 = (+__Z5IKabsd($3101));
                $3121 = $3120 > 5.0000000000000004E-6;
                if ($3121) {
                 break L7;
                }
                $3122 = (+__Z5IKabsd($3104));
                $3123 = $3122 > 5.0000000000000004E-6;
                if ($3123) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos87,7);
                $3124 = HEAP32[$vinfos87>>2]|0;
                $3125 = ((($3124)) + 17|0);
                HEAP8[$3125>>0] = 1;
                $3126 = +HEAPF64[$this>>3];
                $3127 = HEAP32[$vinfos87>>2]|0;
                $3128 = ((($3127)) + 8|0);
                HEAPF64[$3128>>3] = $3126;
                $3129 = HEAP8[$196>>0]|0;
                $3130 = HEAP32[$vinfos87>>2]|0;
                $3131 = ((($3130)) + 19|0);
                HEAP8[$3131>>0] = $3129;
                $3132 = HEAP8[$197>>0]|0;
                $3133 = HEAP32[$vinfos87>>2]|0;
                $3134 = ((($3133)) + 20|0);
                HEAP8[$3134>>0] = $3132;
                $3135 = HEAP8[$198>>0]|0;
                $3136 = HEAP32[$vinfos87>>2]|0;
                $3137 = ((($3136)) + 18|0);
                HEAP8[$3137>>0] = $3135;
                $3138 = HEAP32[$vinfos87>>2]|0;
                $3139 = ((($3138)) + 41|0);
                HEAP8[$3139>>0] = 1;
                $3140 = +HEAPF64[$199>>3];
                $3141 = HEAP32[$vinfos87>>2]|0;
                $3142 = ((($3141)) + 32|0);
                HEAPF64[$3142>>3] = $3140;
                $3143 = HEAP8[$200>>0]|0;
                $3144 = HEAP32[$vinfos87>>2]|0;
                $3145 = ((($3144)) + 43|0);
                HEAP8[$3145>>0] = $3143;
                $3146 = HEAP8[$201>>0]|0;
                $3147 = HEAP32[$vinfos87>>2]|0;
                $3148 = ((($3147)) + 44|0);
                HEAP8[$3148>>0] = $3146;
                $3149 = HEAP8[$202>>0]|0;
                $3150 = HEAP32[$vinfos87>>2]|0;
                $3151 = ((($3150)) + 42|0);
                HEAP8[$3151>>0] = $3149;
                $3152 = HEAP32[$vinfos87>>2]|0;
                $3153 = ((($3152)) + 65|0);
                HEAP8[$3153>>0] = 1;
                $3154 = +HEAPF64[$203>>3];
                $3155 = HEAP32[$vinfos87>>2]|0;
                $3156 = ((($3155)) + 56|0);
                HEAPF64[$3156>>3] = $3154;
                $3157 = HEAP8[$204>>0]|0;
                $3158 = HEAP32[$vinfos87>>2]|0;
                $3159 = ((($3158)) + 67|0);
                HEAP8[$3159>>0] = $3157;
                $3160 = HEAP8[$205>>0]|0;
                $3161 = HEAP32[$vinfos87>>2]|0;
                $3162 = ((($3161)) + 68|0);
                HEAP8[$3162>>0] = $3160;
                $3163 = HEAP8[$206>>0]|0;
                $3164 = HEAP32[$vinfos87>>2]|0;
                $3165 = ((($3164)) + 66|0);
                HEAP8[$3165>>0] = $3163;
                $3166 = HEAP32[$vinfos87>>2]|0;
                $3167 = ((($3166)) + 89|0);
                HEAP8[$3167>>0] = 1;
                $3168 = +HEAPF64[$207>>3];
                $3169 = HEAP32[$vinfos87>>2]|0;
                $3170 = ((($3169)) + 80|0);
                HEAPF64[$3170>>3] = $3168;
                $3171 = HEAP8[$208>>0]|0;
                $3172 = HEAP32[$vinfos87>>2]|0;
                $3173 = ((($3172)) + 91|0);
                HEAP8[$3173>>0] = $3171;
                $3174 = HEAP8[$209>>0]|0;
                $3175 = HEAP32[$vinfos87>>2]|0;
                $3176 = ((($3175)) + 92|0);
                HEAP8[$3176>>0] = $3174;
                $3177 = HEAP8[$210>>0]|0;
                $3178 = HEAP32[$vinfos87>>2]|0;
                $3179 = ((($3178)) + 90|0);
                HEAP8[$3179>>0] = $3177;
                $3180 = HEAP32[$vinfos87>>2]|0;
                $3181 = ((($3180)) + 113|0);
                HEAP8[$3181>>0] = 1;
                $3182 = +HEAPF64[$101>>3];
                $3183 = HEAP32[$vinfos87>>2]|0;
                $3184 = ((($3183)) + 104|0);
                HEAPF64[$3184>>3] = $3182;
                $3185 = HEAP8[$99>>0]|0;
                $3186 = HEAP32[$vinfos87>>2]|0;
                $3187 = ((($3186)) + 115|0);
                HEAP8[$3187>>0] = $3185;
                $3188 = HEAP8[$100>>0]|0;
                $3189 = HEAP32[$vinfos87>>2]|0;
                $3190 = ((($3189)) + 116|0);
                HEAP8[$3190>>0] = $3188;
                $3191 = HEAP8[$96>>0]|0;
                $3192 = HEAP32[$vinfos87>>2]|0;
                $3193 = ((($3192)) + 114|0);
                HEAP8[$3193>>0] = $3191;
                $3194 = HEAP32[$vinfos87>>2]|0;
                $3195 = ((($3194)) + 137|0);
                HEAP8[$3195>>0] = 1;
                $3196 = +HEAPF64[$29>>3];
                $3197 = HEAP32[$vinfos87>>2]|0;
                $3198 = ((($3197)) + 128|0);
                HEAPF64[$3198>>3] = $3196;
                $3199 = HEAP8[$27>>0]|0;
                $3200 = HEAP32[$vinfos87>>2]|0;
                $3201 = ((($3200)) + 139|0);
                HEAP8[$3201>>0] = $3199;
                $3202 = HEAP8[$28>>0]|0;
                $3203 = HEAP32[$vinfos87>>2]|0;
                $3204 = ((($3203)) + 140|0);
                HEAP8[$3204>>0] = $3202;
                $3205 = HEAP8[$26>>0]|0;
                $3206 = HEAP32[$vinfos87>>2]|0;
                $3207 = ((($3206)) + 138|0);
                HEAP8[$3207>>0] = $3205;
                $3208 = HEAP32[$vinfos87>>2]|0;
                $3209 = ((($3208)) + 161|0);
                HEAP8[$3209>>0] = 1;
                $3210 = +HEAPF64[$193>>3];
                $3211 = HEAP32[$vinfos87>>2]|0;
                $3212 = ((($3211)) + 152|0);
                HEAPF64[$3212>>3] = $3210;
                $3213 = HEAP8[$191>>0]|0;
                $3214 = HEAP32[$vinfos87>>2]|0;
                $3215 = ((($3214)) + 163|0);
                HEAP8[$3215>>0] = $3213;
                $3216 = HEAP8[$192>>0]|0;
                $3217 = HEAP32[$vinfos87>>2]|0;
                $3218 = ((($3217)) + 164|0);
                HEAP8[$3218>>0] = $3216;
                $3219 = HEAP8[$190>>0]|0;
                $3220 = HEAP32[$vinfos87>>2]|0;
                $3221 = ((($3220)) + 162|0);
                HEAP8[$3221>>0] = $3219;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree88,0);
                $3222 = HEAP32[$solutions>>2]|0;
                $3223 = ((($3222)) + 8|0);
                $3224 = HEAP32[$3223>>2]|0;
                (FUNCTION_TABLE_iiii[$3224 & 31]($solutions,$vinfos87,$vfree88)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree88);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos87);
                break L7;
               }
              } while(0);
              $3225 = +HEAPF64[$19>>3];
              $3226 = +HEAPF64[$22>>3];
              $3227 = +HEAPF64[$103>>3];
              $3228 = $3226 * $3227;
              $3229 = $3225 * $3227;
              $3230 = +HEAPF64[$102>>3];
              $3231 = $3226 * $3230;
              $3232 = $3231 - $3229;
              $3233 = +HEAPF64[$29>>3];
              $3234 = $3233 + -3.14159265358979;
              $3235 = (+__Z5IKabsd($3234));
              $3236 = $3235 + 3.14159265358979;
              $3237 = (+__Z6IKfmoddd($3236,6.2831853071795898));
              $3238 = $3237 + -3.14159265358979;
              $3239 = +HEAPF64[$23>>3];
              $3240 = +HEAPF64[$24>>3];
              $3241 = $3225 * $3230;
              $3242 = $3228 + $3241;
              $3243 = -$3241;
              $3244 = $3243 - $3228;
              $3245 = (+__Z5IKabsd($3238));
              $3246 = $3245 < 9.9999999999999995E-7;
              do {
               if ($3246) {
                $3247 = +HEAPF64[$25>>3];
                $3248 = $3247 + 1.0;
                $3249 = (+__Z5IKabsd($3248));
                $3250 = $3249 < 9.9999999999999995E-7;
                if (!($3250)) {
                 break;
                }
                $3251 = (+__Z5IKabsd($3239));
                $3252 = $3251 < 9.9999999999999995E-7;
                if (!($3252)) {
                 break;
                }
                $3253 = (+__Z5IKabsd($3225));
                $3254 = $3253 < 9.9999999999999995E-7;
                if (!($3254)) {
                 break;
                }
                $3255 = (+__Z5IKabsd($3226));
                $3256 = $3255 < 9.9999999999999995E-7;
                if (!($3256)) {
                 break;
                }
                $3257 = (+__Z5IKabsd($3240));
                $3258 = $3257 < 9.9999999999999995E-7;
                if (!($3258)) {
                 break;
                }
                $3259 = (+__Z5IKabsd($3232));
                $3260 = $3259 < 9.9999999999999995E-7;
                if (!($3260)) {
                 break;
                }
                $3261 = (+__Z5IKabsd($3242));
                $3262 = $3261 < 9.9999999999999995E-7;
                if (!($3262)) {
                 break;
                }
                $3263 = (+__Z5IKabsd($3244));
                $3264 = $3263 < 9.9999999999999995E-7;
                if (!($3264)) {
                 break;
                }
                HEAP8[$211>>0] = 1;
                $3265 = +HEAPF64[$11>>3];
                $3266 = +HEAPF64[$103>>3];
                $3267 = $3265 * $3266;
                $3268 = +HEAPF64[$102>>3];
                $3269 = +HEAPF64[$15>>3];
                $3270 = $3268 * $3269;
                $3271 = $3270 - $3267;
                $3272 = (+__Z5IKabsd($3271));
                $3273 = $3272 < 1.9999999999999999E-6;
                do {
                 if ($3273) {
                  $3274 = $3266 * $3269;
                  $3275 = $3265 * $3268;
                  $3276 = -$3275;
                  $3277 = $3276 - $3274;
                  $3278 = (+__Z5IKabsd($3277));
                  $3279 = $3278 < 1.9999999999999999E-6;
                  if (!($3279)) {
                   break;
                  }
                  $3280 = (+__Z5IKsqrd($3271));
                  $3281 = (+__Z5IKsqrd($3277));
                  $3282 = $3280 + $3281;
                  $3283 = $3282 + -1.0;
                  $3284 = (+__Z5IKabsd($3283));
                  $3285 = !($3284 <= 1.9999999999999999E-6);
                  if (!($3285)) {
                   break L7;
                  }
                 }
                } while(0);
                $3286 = +HEAPF64[$103>>3];
                $3287 = $3265 * $3286;
                $3288 = +HEAPF64[$102>>3];
                $3289 = +HEAPF64[$15>>3];
                $3290 = $3288 * $3289;
                $3291 = $3290 - $3287;
                $3292 = $3286 * $3289;
                $3293 = $3265 * $3288;
                $3294 = -$3293;
                $3295 = $3294 - $3292;
                $3296 = (+__Z7IKatan2dd($3291,$3295));
                $3297 = (+__Z5IKsind($3296));
                $3298 = (+__Z5IKcosd($3296));
                $3299 = $3296 > 3.14159265358979;
                do {
                 if ($3299) {
                  $3300 = $3296 + -6.2831853071795898;
                  $3303 = $3300;
                 } else {
                  $3301 = $3296 < -3.14159265358979;
                  if (!($3301)) {
                   $3303 = $3296;
                   break;
                  }
                  $3302 = $3296 + 6.2831853071795898;
                  $3303 = $3302;
                 }
                } while(0);
                HEAP8[$212>>0] = 0;
                HEAP8[$213>>0] = -1;
                HEAPF64[$214>>3] = $3303;
                HEAPF64[$215>>3] = $3298;
                HEAPF64[$216>>3] = $3297;
                $3304 = +HEAPF64[$214>>3];
                $3305 = (+__Z5IKsind($3304));
                $3306 = (+__Z5IKcosd($3304));
                $3307 = +HEAPF64[$103>>3];
                $3308 = $3306 * $3307;
                $3309 = +HEAPF64[$102>>3];
                $3310 = $3305 * $3309;
                $3311 = +HEAPF64[$20>>3];
                $3312 = $3307 * $3311;
                $3313 = +HEAPF64[$11>>3];
                $3314 = $3309 * $3313;
                $3315 = $3312 + $3314;
                $3316 = $3306 + $3315;
                $3317 = +HEAPF64[$21>>3];
                $3318 = -$3305;
                $3319 = +HEAPF64[$15>>3];
                $3320 = $3306 * $3309;
                $3321 = $3305 * $3307;
                $3322 = $3321 + $3320;
                $3323 = $3322 + $3313;
                $3324 = $3307 * $3313;
                $3325 = $3318 - $3324;
                $3326 = $3309 * $3311;
                $3327 = $3326 + $3325;
                $3328 = $3307 * $3319;
                $3329 = -$3328;
                $3330 = $3329 - $3306;
                $3331 = $3309 * $3317;
                $3332 = $3331 + $3330;
                $3333 = $3308 - $3310;
                $3334 = $3333 + $3319;
                $3335 = $3311 + $3333;
                $3336 = $3317 - $3320;
                $3337 = $3307 * $3318;
                $3338 = $3337 + $3336;
                $3339 = (+__Z5IKabsd($3316));
                $3340 = $3339 > 5.0000000000000004E-6;
                if ($3340) {
                 break L7;
                }
                $3341 = $3307 * $3317;
                $3342 = $3341 - $3305;
                $3343 = $3309 * $3319;
                $3344 = $3342 + $3343;
                $3345 = (+__Z5IKabsd($3344));
                $3346 = $3345 > 5.0000000000000004E-6;
                if ($3346) {
                 break L7;
                }
                $3347 = (+__Z5IKabsd($3323));
                $3348 = $3347 > 5.0000000000000004E-6;
                if ($3348) {
                 break L7;
                }
                $3349 = (+__Z5IKabsd($3327));
                $3350 = $3349 > 5.0000000000000004E-6;
                if ($3350) {
                 break L7;
                }
                $3351 = (+__Z5IKabsd($3332));
                $3352 = $3351 > 5.0000000000000004E-6;
                if ($3352) {
                 break L7;
                }
                $3353 = (+__Z5IKabsd($3334));
                $3354 = $3353 > 5.0000000000000004E-6;
                if ($3354) {
                 break L7;
                }
                $3355 = (+__Z5IKabsd($3335));
                $3356 = $3355 > 5.0000000000000004E-6;
                if ($3356) {
                 break L7;
                }
                $3357 = (+__Z5IKabsd($3338));
                $3358 = $3357 > 5.0000000000000004E-6;
                if ($3358) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos98,7);
                $3359 = HEAP32[$vinfos98>>2]|0;
                $3360 = ((($3359)) + 17|0);
                HEAP8[$3360>>0] = 1;
                $3361 = +HEAPF64[$this>>3];
                $3362 = HEAP32[$vinfos98>>2]|0;
                $3363 = ((($3362)) + 8|0);
                HEAPF64[$3363>>3] = $3361;
                $3364 = HEAP8[$217>>0]|0;
                $3365 = HEAP32[$vinfos98>>2]|0;
                $3366 = ((($3365)) + 19|0);
                HEAP8[$3366>>0] = $3364;
                $3367 = HEAP8[$218>>0]|0;
                $3368 = HEAP32[$vinfos98>>2]|0;
                $3369 = ((($3368)) + 20|0);
                HEAP8[$3369>>0] = $3367;
                $3370 = HEAP8[$219>>0]|0;
                $3371 = HEAP32[$vinfos98>>2]|0;
                $3372 = ((($3371)) + 18|0);
                HEAP8[$3372>>0] = $3370;
                $3373 = HEAP32[$vinfos98>>2]|0;
                $3374 = ((($3373)) + 41|0);
                HEAP8[$3374>>0] = 1;
                $3375 = +HEAPF64[$220>>3];
                $3376 = HEAP32[$vinfos98>>2]|0;
                $3377 = ((($3376)) + 32|0);
                HEAPF64[$3377>>3] = $3375;
                $3378 = HEAP8[$221>>0]|0;
                $3379 = HEAP32[$vinfos98>>2]|0;
                $3380 = ((($3379)) + 43|0);
                HEAP8[$3380>>0] = $3378;
                $3381 = HEAP8[$222>>0]|0;
                $3382 = HEAP32[$vinfos98>>2]|0;
                $3383 = ((($3382)) + 44|0);
                HEAP8[$3383>>0] = $3381;
                $3384 = HEAP8[$223>>0]|0;
                $3385 = HEAP32[$vinfos98>>2]|0;
                $3386 = ((($3385)) + 42|0);
                HEAP8[$3386>>0] = $3384;
                $3387 = HEAP32[$vinfos98>>2]|0;
                $3388 = ((($3387)) + 65|0);
                HEAP8[$3388>>0] = 1;
                $3389 = +HEAPF64[$224>>3];
                $3390 = HEAP32[$vinfos98>>2]|0;
                $3391 = ((($3390)) + 56|0);
                HEAPF64[$3391>>3] = $3389;
                $3392 = HEAP8[$225>>0]|0;
                $3393 = HEAP32[$vinfos98>>2]|0;
                $3394 = ((($3393)) + 67|0);
                HEAP8[$3394>>0] = $3392;
                $3395 = HEAP8[$226>>0]|0;
                $3396 = HEAP32[$vinfos98>>2]|0;
                $3397 = ((($3396)) + 68|0);
                HEAP8[$3397>>0] = $3395;
                $3398 = HEAP8[$227>>0]|0;
                $3399 = HEAP32[$vinfos98>>2]|0;
                $3400 = ((($3399)) + 66|0);
                HEAP8[$3400>>0] = $3398;
                $3401 = HEAP32[$vinfos98>>2]|0;
                $3402 = ((($3401)) + 89|0);
                HEAP8[$3402>>0] = 1;
                $3403 = +HEAPF64[$228>>3];
                $3404 = HEAP32[$vinfos98>>2]|0;
                $3405 = ((($3404)) + 80|0);
                HEAPF64[$3405>>3] = $3403;
                $3406 = HEAP8[$229>>0]|0;
                $3407 = HEAP32[$vinfos98>>2]|0;
                $3408 = ((($3407)) + 91|0);
                HEAP8[$3408>>0] = $3406;
                $3409 = HEAP8[$230>>0]|0;
                $3410 = HEAP32[$vinfos98>>2]|0;
                $3411 = ((($3410)) + 92|0);
                HEAP8[$3411>>0] = $3409;
                $3412 = HEAP8[$231>>0]|0;
                $3413 = HEAP32[$vinfos98>>2]|0;
                $3414 = ((($3413)) + 90|0);
                HEAP8[$3414>>0] = $3412;
                $3415 = HEAP32[$vinfos98>>2]|0;
                $3416 = ((($3415)) + 113|0);
                HEAP8[$3416>>0] = 1;
                $3417 = +HEAPF64[$101>>3];
                $3418 = HEAP32[$vinfos98>>2]|0;
                $3419 = ((($3418)) + 104|0);
                HEAPF64[$3419>>3] = $3417;
                $3420 = HEAP8[$99>>0]|0;
                $3421 = HEAP32[$vinfos98>>2]|0;
                $3422 = ((($3421)) + 115|0);
                HEAP8[$3422>>0] = $3420;
                $3423 = HEAP8[$100>>0]|0;
                $3424 = HEAP32[$vinfos98>>2]|0;
                $3425 = ((($3424)) + 116|0);
                HEAP8[$3425>>0] = $3423;
                $3426 = HEAP8[$96>>0]|0;
                $3427 = HEAP32[$vinfos98>>2]|0;
                $3428 = ((($3427)) + 114|0);
                HEAP8[$3428>>0] = $3426;
                $3429 = HEAP32[$vinfos98>>2]|0;
                $3430 = ((($3429)) + 137|0);
                HEAP8[$3430>>0] = 1;
                $3431 = +HEAPF64[$29>>3];
                $3432 = HEAP32[$vinfos98>>2]|0;
                $3433 = ((($3432)) + 128|0);
                HEAPF64[$3433>>3] = $3431;
                $3434 = HEAP8[$27>>0]|0;
                $3435 = HEAP32[$vinfos98>>2]|0;
                $3436 = ((($3435)) + 139|0);
                HEAP8[$3436>>0] = $3434;
                $3437 = HEAP8[$28>>0]|0;
                $3438 = HEAP32[$vinfos98>>2]|0;
                $3439 = ((($3438)) + 140|0);
                HEAP8[$3439>>0] = $3437;
                $3440 = HEAP8[$26>>0]|0;
                $3441 = HEAP32[$vinfos98>>2]|0;
                $3442 = ((($3441)) + 138|0);
                HEAP8[$3442>>0] = $3440;
                $3443 = HEAP32[$vinfos98>>2]|0;
                $3444 = ((($3443)) + 161|0);
                HEAP8[$3444>>0] = 1;
                $3445 = +HEAPF64[$214>>3];
                $3446 = HEAP32[$vinfos98>>2]|0;
                $3447 = ((($3446)) + 152|0);
                HEAPF64[$3447>>3] = $3445;
                $3448 = HEAP8[$212>>0]|0;
                $3449 = HEAP32[$vinfos98>>2]|0;
                $3450 = ((($3449)) + 163|0);
                HEAP8[$3450>>0] = $3448;
                $3451 = HEAP8[$213>>0]|0;
                $3452 = HEAP32[$vinfos98>>2]|0;
                $3453 = ((($3452)) + 164|0);
                HEAP8[$3453>>0] = $3451;
                $3454 = HEAP8[$211>>0]|0;
                $3455 = HEAP32[$vinfos98>>2]|0;
                $3456 = ((($3455)) + 162|0);
                HEAP8[$3456>>0] = $3454;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree99,0);
                $3457 = HEAP32[$solutions>>2]|0;
                $3458 = ((($3457)) + 8|0);
                $3459 = HEAP32[$3458>>2]|0;
                (FUNCTION_TABLE_iiii[$3459 & 31]($solutions,$vinfos98,$vfree99)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree99);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos98);
                break L7;
               }
              } while(0);
              $3460 = +HEAPF64[$25>>3];
              $3461 = +HEAPF64[$30>>3];
              $3462 = +HEAPF64[$31>>3];
              $3463 = +HEAPF64[$19>>3];
              $3464 = $3463 - $3462;
              $3465 = +HEAPF64[$101>>3];
              $3466 = (+__Z5IKabsd($3465));
              $3467 = $3466 + 3.14159265358979;
              $3468 = (+__Z6IKfmoddd($3467,6.2831853071795898));
              $3469 = $3468 + -3.14159265358979;
              $3470 = +HEAPF64[$22>>3];
              $3471 = -$3460;
              $3472 = $3462 * $3471;
              $3473 = $3461 * $3463;
              $3474 = $3472 + $3473;
              $3475 = +HEAPF64[$11>>3];
              $3476 = $3462 * $3475;
              $3477 = +HEAPF64[$23>>3];
              $3478 = $3461 * $3477;
              $3479 = -$3478;
              $3480 = $3479 - $3476;
              $3481 = +HEAPF64[$24>>3];
              $3482 = $3461 * $3481;
              $3483 = +HEAPF64[$15>>3];
              $3484 = $3462 * $3483;
              $3485 = -$3484;
              $3486 = $3485 - $3482;
              $3487 = $3462 * $3463;
              $3488 = 1.0 - $3487;
              $3489 = $3461 * $3471;
              $3490 = $3489 + $3488;
              $3491 = (+__Z5IKabsd($3469));
              $3492 = $3491 < 9.9999999999999995E-7;
              do {
               if ($3492) {
                $3493 = $3460 - $3461;
                $3494 = (+__Z5IKabsd($3493));
                $3495 = $3494 < 9.9999999999999995E-7;
                if (!($3495)) {
                 break;
                }
                $3496 = (+__Z5IKabsd($3464));
                $3497 = $3496 < 9.9999999999999995E-7;
                if (!($3497)) {
                 break;
                }
                $3498 = (+__Z5IKabsd($3470));
                $3499 = $3498 < 9.9999999999999995E-7;
                if (!($3499)) {
                 break;
                }
                $3500 = (+__Z5IKabsd($3474));
                $3501 = $3500 < 9.9999999999999995E-7;
                if (!($3501)) {
                 break;
                }
                $3502 = (+__Z5IKabsd($3480));
                $3503 = $3502 < 9.9999999999999995E-7;
                if (!($3503)) {
                 break;
                }
                $3504 = (+__Z5IKabsd($3486));
                $3505 = $3504 < 9.9999999999999995E-7;
                if (!($3505)) {
                 break;
                }
                $3506 = (+__Z5IKabsd($3490));
                $3507 = $3506 < 9.9999999999999995E-7;
                if (!($3507)) {
                 break;
                }
                HEAP8[$232>>0] = 1;
                $3508 = +HEAPF64[$20>>3];
                $3509 = (+__Z5IKabsd($3508));
                $3510 = $3509 < 1.9999999999999999E-6;
                do {
                 if ($3510) {
                  $3511 = +HEAPF64[$21>>3];
                  $3512 = (+__Z5IKabsd($3511));
                  $3513 = $3512 < 1.9999999999999999E-6;
                  if (!($3513)) {
                   break;
                  }
                  $3514 = (+__Z5IKsqrd($3508));
                  $3515 = (+__Z5IKsqrd($3511));
                  $3516 = $3514 + $3515;
                  $3517 = $3516 + -1.0;
                  $3518 = (+__Z5IKabsd($3517));
                  $3519 = !($3518 <= 1.9999999999999999E-6);
                  if (!($3519)) {
                   break L7;
                  }
                 }
                } while(0);
                $3520 = +HEAPF64[$20>>3];
                $3521 = +HEAPF64[$21>>3];
                $3522 = (+__Z7IKatan2dd($3520,$3521));
                $3523 = (+__Z5IKsind($3522));
                $3524 = (+__Z5IKcosd($3522));
                $3525 = $3522 > 3.14159265358979;
                do {
                 if ($3525) {
                  $3526 = $3522 + -6.2831853071795898;
                  $3529 = $3526;
                 } else {
                  $3527 = $3522 < -3.14159265358979;
                  if (!($3527)) {
                   $3529 = $3522;
                   break;
                  }
                  $3528 = $3522 + 6.2831853071795898;
                  $3529 = $3528;
                 }
                } while(0);
                HEAP8[$233>>0] = 0;
                HEAP8[$234>>0] = -1;
                HEAPF64[$235>>3] = $3529;
                HEAPF64[$236>>3] = $3524;
                HEAPF64[$237>>3] = $3523;
                $3530 = +HEAPF64[$235>>3];
                $3531 = (+__Z5IKcosd($3530));
                $3532 = (+__Z5IKsind($3530));
                $3533 = +HEAPF64[$19>>3];
                $3534 = $3531 * $3533;
                $3535 = +HEAPF64[$23>>3];
                $3536 = $3534 + $3535;
                $3537 = +HEAPF64[$21>>3];
                $3538 = $3537 - $3531;
                $3539 = +HEAPF64[$15>>3];
                $3540 = +HEAPF64[$25>>3];
                $3541 = $3532 * $3540;
                $3542 = $3539 + $3541;
                $3543 = $3532 * $3533;
                $3544 = +HEAPF64[$24>>3];
                $3545 = $3544 - $3543;
                $3546 = +HEAPF64[$11>>3];
                $3547 = $3531 * $3540;
                $3548 = $3546 - $3547;
                $3549 = $3533 * $3544;
                $3550 = $3539 * $3540;
                $3551 = $3550 - $3549;
                $3552 = $3532 + $3551;
                $3553 = $3540 * $3546;
                $3554 = $3553 - $3531;
                $3555 = $3533 * $3535;
                $3556 = $3554 - $3555;
                $3557 = (+__Z5IKabsd($3536));
                $3558 = $3557 > 5.0000000000000004E-6;
                if ($3558) {
                 break L7;
                }
                $3559 = +HEAPF64[$20>>3];
                $3560 = $3559 - $3532;
                $3561 = (+__Z5IKabsd($3560));
                $3562 = $3561 > 5.0000000000000004E-6;
                if ($3562) {
                 break L7;
                }
                $3563 = (+__Z5IKabsd($3538));
                $3564 = $3563 > 5.0000000000000004E-6;
                if ($3564) {
                 break L7;
                }
                $3565 = (+__Z5IKabsd($3542));
                $3566 = $3565 > 5.0000000000000004E-6;
                if ($3566) {
                 break L7;
                }
                $3567 = (+__Z5IKabsd($3545));
                $3568 = $3567 > 5.0000000000000004E-6;
                if ($3568) {
                 break L7;
                }
                $3569 = (+__Z5IKabsd($3548));
                $3570 = $3569 > 5.0000000000000004E-6;
                if ($3570) {
                 break L7;
                }
                $3571 = (+__Z5IKabsd($3552));
                $3572 = $3571 > 5.0000000000000004E-6;
                if ($3572) {
                 break L7;
                }
                $3573 = (+__Z5IKabsd($3556));
                $3574 = $3573 > 5.0000000000000004E-6;
                if ($3574) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos109,7);
                $3575 = HEAP32[$vinfos109>>2]|0;
                $3576 = ((($3575)) + 17|0);
                HEAP8[$3576>>0] = 1;
                $3577 = +HEAPF64[$this>>3];
                $3578 = HEAP32[$vinfos109>>2]|0;
                $3579 = ((($3578)) + 8|0);
                HEAPF64[$3579>>3] = $3577;
                $3580 = HEAP8[$238>>0]|0;
                $3581 = HEAP32[$vinfos109>>2]|0;
                $3582 = ((($3581)) + 19|0);
                HEAP8[$3582>>0] = $3580;
                $3583 = HEAP8[$239>>0]|0;
                $3584 = HEAP32[$vinfos109>>2]|0;
                $3585 = ((($3584)) + 20|0);
                HEAP8[$3585>>0] = $3583;
                $3586 = HEAP8[$240>>0]|0;
                $3587 = HEAP32[$vinfos109>>2]|0;
                $3588 = ((($3587)) + 18|0);
                HEAP8[$3588>>0] = $3586;
                $3589 = HEAP32[$vinfos109>>2]|0;
                $3590 = ((($3589)) + 41|0);
                HEAP8[$3590>>0] = 1;
                $3591 = +HEAPF64[$241>>3];
                $3592 = HEAP32[$vinfos109>>2]|0;
                $3593 = ((($3592)) + 32|0);
                HEAPF64[$3593>>3] = $3591;
                $3594 = HEAP8[$242>>0]|0;
                $3595 = HEAP32[$vinfos109>>2]|0;
                $3596 = ((($3595)) + 43|0);
                HEAP8[$3596>>0] = $3594;
                $3597 = HEAP8[$243>>0]|0;
                $3598 = HEAP32[$vinfos109>>2]|0;
                $3599 = ((($3598)) + 44|0);
                HEAP8[$3599>>0] = $3597;
                $3600 = HEAP8[$244>>0]|0;
                $3601 = HEAP32[$vinfos109>>2]|0;
                $3602 = ((($3601)) + 42|0);
                HEAP8[$3602>>0] = $3600;
                $3603 = HEAP32[$vinfos109>>2]|0;
                $3604 = ((($3603)) + 65|0);
                HEAP8[$3604>>0] = 1;
                $3605 = +HEAPF64[$245>>3];
                $3606 = HEAP32[$vinfos109>>2]|0;
                $3607 = ((($3606)) + 56|0);
                HEAPF64[$3607>>3] = $3605;
                $3608 = HEAP8[$246>>0]|0;
                $3609 = HEAP32[$vinfos109>>2]|0;
                $3610 = ((($3609)) + 67|0);
                HEAP8[$3610>>0] = $3608;
                $3611 = HEAP8[$247>>0]|0;
                $3612 = HEAP32[$vinfos109>>2]|0;
                $3613 = ((($3612)) + 68|0);
                HEAP8[$3613>>0] = $3611;
                $3614 = HEAP8[$248>>0]|0;
                $3615 = HEAP32[$vinfos109>>2]|0;
                $3616 = ((($3615)) + 66|0);
                HEAP8[$3616>>0] = $3614;
                $3617 = HEAP32[$vinfos109>>2]|0;
                $3618 = ((($3617)) + 89|0);
                HEAP8[$3618>>0] = 1;
                $3619 = +HEAPF64[$249>>3];
                $3620 = HEAP32[$vinfos109>>2]|0;
                $3621 = ((($3620)) + 80|0);
                HEAPF64[$3621>>3] = $3619;
                $3622 = HEAP8[$250>>0]|0;
                $3623 = HEAP32[$vinfos109>>2]|0;
                $3624 = ((($3623)) + 91|0);
                HEAP8[$3624>>0] = $3622;
                $3625 = HEAP8[$251>>0]|0;
                $3626 = HEAP32[$vinfos109>>2]|0;
                $3627 = ((($3626)) + 92|0);
                HEAP8[$3627>>0] = $3625;
                $3628 = HEAP8[$252>>0]|0;
                $3629 = HEAP32[$vinfos109>>2]|0;
                $3630 = ((($3629)) + 90|0);
                HEAP8[$3630>>0] = $3628;
                $3631 = HEAP32[$vinfos109>>2]|0;
                $3632 = ((($3631)) + 113|0);
                HEAP8[$3632>>0] = 1;
                $3633 = +HEAPF64[$101>>3];
                $3634 = HEAP32[$vinfos109>>2]|0;
                $3635 = ((($3634)) + 104|0);
                HEAPF64[$3635>>3] = $3633;
                $3636 = HEAP8[$99>>0]|0;
                $3637 = HEAP32[$vinfos109>>2]|0;
                $3638 = ((($3637)) + 115|0);
                HEAP8[$3638>>0] = $3636;
                $3639 = HEAP8[$100>>0]|0;
                $3640 = HEAP32[$vinfos109>>2]|0;
                $3641 = ((($3640)) + 116|0);
                HEAP8[$3641>>0] = $3639;
                $3642 = HEAP8[$96>>0]|0;
                $3643 = HEAP32[$vinfos109>>2]|0;
                $3644 = ((($3643)) + 114|0);
                HEAP8[$3644>>0] = $3642;
                $3645 = HEAP32[$vinfos109>>2]|0;
                $3646 = ((($3645)) + 137|0);
                HEAP8[$3646>>0] = 1;
                $3647 = +HEAPF64[$29>>3];
                $3648 = HEAP32[$vinfos109>>2]|0;
                $3649 = ((($3648)) + 128|0);
                HEAPF64[$3649>>3] = $3647;
                $3650 = HEAP8[$27>>0]|0;
                $3651 = HEAP32[$vinfos109>>2]|0;
                $3652 = ((($3651)) + 139|0);
                HEAP8[$3652>>0] = $3650;
                $3653 = HEAP8[$28>>0]|0;
                $3654 = HEAP32[$vinfos109>>2]|0;
                $3655 = ((($3654)) + 140|0);
                HEAP8[$3655>>0] = $3653;
                $3656 = HEAP8[$26>>0]|0;
                $3657 = HEAP32[$vinfos109>>2]|0;
                $3658 = ((($3657)) + 138|0);
                HEAP8[$3658>>0] = $3656;
                $3659 = HEAP32[$vinfos109>>2]|0;
                $3660 = ((($3659)) + 161|0);
                HEAP8[$3660>>0] = 1;
                $3661 = +HEAPF64[$235>>3];
                $3662 = HEAP32[$vinfos109>>2]|0;
                $3663 = ((($3662)) + 152|0);
                HEAPF64[$3663>>3] = $3661;
                $3664 = HEAP8[$233>>0]|0;
                $3665 = HEAP32[$vinfos109>>2]|0;
                $3666 = ((($3665)) + 163|0);
                HEAP8[$3666>>0] = $3664;
                $3667 = HEAP8[$234>>0]|0;
                $3668 = HEAP32[$vinfos109>>2]|0;
                $3669 = ((($3668)) + 164|0);
                HEAP8[$3669>>0] = $3667;
                $3670 = HEAP8[$232>>0]|0;
                $3671 = HEAP32[$vinfos109>>2]|0;
                $3672 = ((($3671)) + 162|0);
                HEAP8[$3672>>0] = $3670;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree110,0);
                $3673 = HEAP32[$solutions>>2]|0;
                $3674 = ((($3673)) + 8|0);
                $3675 = HEAP32[$3674>>2]|0;
                (FUNCTION_TABLE_iiii[$3675 & 31]($solutions,$vinfos109,$vfree110)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree110);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos109);
                break L7;
               }
              } while(0);
              $3676 = +HEAPF64[$25>>3];
              $3677 = +HEAPF64[$30>>3];
              $3678 = +HEAPF64[$31>>3];
              $3679 = +HEAPF64[$101>>3];
              $3680 = $3679 + -3.14159265358979;
              $3681 = (+__Z5IKabsd($3680));
              $3682 = $3681 + 3.14159265358979;
              $3683 = (+__Z6IKfmoddd($3682,6.2831853071795898));
              $3684 = $3683 + -3.14159265358979;
              $3685 = +HEAPF64[$19>>3];
              $3686 = $3678 + $3685;
              $3687 = +HEAPF64[$22>>3];
              $3688 = -$3685;
              $3689 = $3688 - $3678;
              $3690 = $3677 * $3688;
              $3691 = -$3676;
              $3692 = $3678 * $3691;
              $3693 = $3692 + $3690;
              $3694 = +HEAPF64[$23>>3];
              $3695 = $3677 * $3694;
              $3696 = +HEAPF64[$11>>3];
              $3697 = $3678 * $3696;
              $3698 = $3697 - $3695;
              $3699 = +HEAPF64[$24>>3];
              $3700 = $3677 * $3699;
              $3701 = +HEAPF64[$15>>3];
              $3702 = $3678 * $3701;
              $3703 = $3702 - $3700;
              $3704 = $3678 * $3685;
              $3705 = $3704 + 1.0;
              $3706 = $3677 * $3691;
              $3707 = $3706 + $3705;
              $3708 = (+__Z5IKabsd($3684));
              $3709 = $3708 < 9.9999999999999995E-7;
              if (!($3709)) {
               break;
              }
              $3710 = $3676 - $3677;
              $3711 = (+__Z5IKabsd($3710));
              $3712 = $3711 < 9.9999999999999995E-7;
              if (!($3712)) {
               break;
              }
              $3713 = (+__Z5IKabsd($3686));
              $3714 = $3713 < 9.9999999999999995E-7;
              if (!($3714)) {
               break;
              }
              $3715 = (+__Z5IKabsd($3687));
              $3716 = $3715 < 9.9999999999999995E-7;
              if (!($3716)) {
               break;
              }
              $3717 = (+__Z5IKabsd($3689));
              $3718 = $3717 < 9.9999999999999995E-7;
              if (!($3718)) {
               break;
              }
              $3719 = (+__Z5IKabsd($3693));
              $3720 = $3719 < 9.9999999999999995E-7;
              if (!($3720)) {
               break;
              }
              $3721 = (+__Z5IKabsd($3698));
              $3722 = $3721 < 9.9999999999999995E-7;
              if (!($3722)) {
               break;
              }
              $3723 = (+__Z5IKabsd($3703));
              $3724 = $3723 < 9.9999999999999995E-7;
              if (!($3724)) {
               break;
              }
              $3725 = (+__Z5IKabsd($3707));
              $3726 = $3725 < 9.9999999999999995E-7;
              if (!($3726)) {
               break;
              }
              HEAP8[$253>>0] = 1;
              $3727 = +HEAPF64[$24>>3];
              $3728 = -$3727;
              $3729 = +HEAPF64[$23>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x488,$3728,$3729,1.9999999999999999E-6);
              $3730 = HEAP8[$254>>0]|0;
              $3731 = ($3730<<24>>24)==(0);
              if ($3731) {
               break;
              }
              $3732 = +HEAPF64[$19>>3];
              $3733 = (+__Z6IKsignd($3732));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x489,$3733,-1);
              $3734 = HEAP8[$255>>0]|0;
              $3735 = ($3734<<24>>24)==(0);
              if ($3735) {
               break;
              }
              $3736 = +HEAPF64[$x488>>3];
              $3737 = $3736 + -1.5707963267949001;
              $3738 = +HEAPF64[$x489>>3];
              $3739 = $3738 * 1.5707963267949001;
              $3740 = $3737 + $3739;
              $3741 = (+__Z5IKsind($3740));
              $3742 = (+__Z5IKcosd($3740));
              $3743 = $3740 > 3.14159265358979;
              do {
               if ($3743) {
                $3744 = $3740 + -6.2831853071795898;
                $3747 = $3744;
               } else {
                $3745 = $3740 < -3.14159265358979;
                if (!($3745)) {
                 $3747 = $3740;
                 break;
                }
                $3746 = $3740 + 6.2831853071795898;
                $3747 = $3746;
               }
              } while(0);
              HEAP8[$256>>0] = 0;
              HEAP8[$257>>0] = -1;
              HEAPF64[$258>>3] = $3747;
              HEAPF64[$259>>3] = $3742;
              HEAPF64[$260>>3] = $3741;
              $3748 = +HEAPF64[$258>>3];
              $3749 = (+__Z5IKsind($3748));
              $3750 = (+__Z5IKcosd($3748));
              $3751 = +HEAPF64[$25>>3];
              $3752 = +HEAPF64[$19>>3];
              $3753 = $3749 * $3752;
              $3754 = +HEAPF64[$24>>3];
              $3755 = $3753 + $3754;
              $3756 = +HEAPF64[$23>>3];
              $3757 = +HEAPF64[$20>>3];
              $3758 = -$3757;
              $3759 = $3758 - $3749;
              $3760 = -$3750;
              $3761 = +HEAPF64[$21>>3];
              $3762 = -$3761;
              $3763 = $3762 - $3750;
              $3764 = $3749 * $3751;
              $3765 = +HEAPF64[$15>>3];
              $3766 = $3764 - $3765;
              $3767 = $3751 * $3760;
              $3768 = +HEAPF64[$11>>3];
              $3769 = $3767 - $3768;
              $3770 = $3751 * $3765;
              $3771 = $3749 - $3770;
              $3772 = $3752 * $3754;
              $3773 = $3772 + $3771;
              $3774 = $3751 * $3768;
              $3775 = $3760 - $3774;
              $3776 = $3752 * $3756;
              $3777 = $3776 + $3775;
              $3778 = (+__Z5IKabsd($3755));
              $3779 = $3778 > 5.0000000000000004E-6;
              if ($3779) {
               break;
              }
              $3780 = $3750 * $3752;
              $3781 = $3756 - $3780;
              $3782 = (+__Z5IKabsd($3781));
              $3783 = $3782 > 5.0000000000000004E-6;
              if ($3783) {
               break;
              }
              $3784 = (+__Z5IKabsd($3759));
              $3785 = $3784 > 5.0000000000000004E-6;
              if ($3785) {
               break;
              }
              $3786 = (+__Z5IKabsd($3763));
              $3787 = $3786 > 5.0000000000000004E-6;
              if ($3787) {
               break;
              }
              $3788 = (+__Z5IKabsd($3766));
              $3789 = $3788 > 5.0000000000000004E-6;
              if ($3789) {
               break;
              }
              $3790 = (+__Z5IKabsd($3769));
              $3791 = $3790 > 5.0000000000000004E-6;
              if ($3791) {
               break;
              }
              $3792 = (+__Z5IKabsd($3773));
              $3793 = $3792 > 5.0000000000000004E-6;
              if ($3793) {
               break;
              }
              $3794 = (+__Z5IKabsd($3777));
              $3795 = $3794 > 5.0000000000000004E-6;
              if ($3795) {
               break;
              }
              __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos120,7);
              $3796 = HEAP32[$vinfos120>>2]|0;
              $3797 = ((($3796)) + 17|0);
              HEAP8[$3797>>0] = 1;
              $3798 = +HEAPF64[$this>>3];
              $3799 = HEAP32[$vinfos120>>2]|0;
              $3800 = ((($3799)) + 8|0);
              HEAPF64[$3800>>3] = $3798;
              $3801 = HEAP8[$261>>0]|0;
              $3802 = HEAP32[$vinfos120>>2]|0;
              $3803 = ((($3802)) + 19|0);
              HEAP8[$3803>>0] = $3801;
              $3804 = HEAP8[$262>>0]|0;
              $3805 = HEAP32[$vinfos120>>2]|0;
              $3806 = ((($3805)) + 20|0);
              HEAP8[$3806>>0] = $3804;
              $3807 = HEAP8[$263>>0]|0;
              $3808 = HEAP32[$vinfos120>>2]|0;
              $3809 = ((($3808)) + 18|0);
              HEAP8[$3809>>0] = $3807;
              $3810 = HEAP32[$vinfos120>>2]|0;
              $3811 = ((($3810)) + 41|0);
              HEAP8[$3811>>0] = 1;
              $3812 = +HEAPF64[$264>>3];
              $3813 = HEAP32[$vinfos120>>2]|0;
              $3814 = ((($3813)) + 32|0);
              HEAPF64[$3814>>3] = $3812;
              $3815 = HEAP8[$265>>0]|0;
              $3816 = HEAP32[$vinfos120>>2]|0;
              $3817 = ((($3816)) + 43|0);
              HEAP8[$3817>>0] = $3815;
              $3818 = HEAP8[$266>>0]|0;
              $3819 = HEAP32[$vinfos120>>2]|0;
              $3820 = ((($3819)) + 44|0);
              HEAP8[$3820>>0] = $3818;
              $3821 = HEAP8[$267>>0]|0;
              $3822 = HEAP32[$vinfos120>>2]|0;
              $3823 = ((($3822)) + 42|0);
              HEAP8[$3823>>0] = $3821;
              $3824 = HEAP32[$vinfos120>>2]|0;
              $3825 = ((($3824)) + 65|0);
              HEAP8[$3825>>0] = 1;
              $3826 = +HEAPF64[$268>>3];
              $3827 = HEAP32[$vinfos120>>2]|0;
              $3828 = ((($3827)) + 56|0);
              HEAPF64[$3828>>3] = $3826;
              $3829 = HEAP8[$269>>0]|0;
              $3830 = HEAP32[$vinfos120>>2]|0;
              $3831 = ((($3830)) + 67|0);
              HEAP8[$3831>>0] = $3829;
              $3832 = HEAP8[$270>>0]|0;
              $3833 = HEAP32[$vinfos120>>2]|0;
              $3834 = ((($3833)) + 68|0);
              HEAP8[$3834>>0] = $3832;
              $3835 = HEAP8[$271>>0]|0;
              $3836 = HEAP32[$vinfos120>>2]|0;
              $3837 = ((($3836)) + 66|0);
              HEAP8[$3837>>0] = $3835;
              $3838 = HEAP32[$vinfos120>>2]|0;
              $3839 = ((($3838)) + 89|0);
              HEAP8[$3839>>0] = 1;
              $3840 = +HEAPF64[$272>>3];
              $3841 = HEAP32[$vinfos120>>2]|0;
              $3842 = ((($3841)) + 80|0);
              HEAPF64[$3842>>3] = $3840;
              $3843 = HEAP8[$273>>0]|0;
              $3844 = HEAP32[$vinfos120>>2]|0;
              $3845 = ((($3844)) + 91|0);
              HEAP8[$3845>>0] = $3843;
              $3846 = HEAP8[$274>>0]|0;
              $3847 = HEAP32[$vinfos120>>2]|0;
              $3848 = ((($3847)) + 92|0);
              HEAP8[$3848>>0] = $3846;
              $3849 = HEAP8[$275>>0]|0;
              $3850 = HEAP32[$vinfos120>>2]|0;
              $3851 = ((($3850)) + 90|0);
              HEAP8[$3851>>0] = $3849;
              $3852 = HEAP32[$vinfos120>>2]|0;
              $3853 = ((($3852)) + 113|0);
              HEAP8[$3853>>0] = 1;
              $3854 = +HEAPF64[$101>>3];
              $3855 = HEAP32[$vinfos120>>2]|0;
              $3856 = ((($3855)) + 104|0);
              HEAPF64[$3856>>3] = $3854;
              $3857 = HEAP8[$99>>0]|0;
              $3858 = HEAP32[$vinfos120>>2]|0;
              $3859 = ((($3858)) + 115|0);
              HEAP8[$3859>>0] = $3857;
              $3860 = HEAP8[$100>>0]|0;
              $3861 = HEAP32[$vinfos120>>2]|0;
              $3862 = ((($3861)) + 116|0);
              HEAP8[$3862>>0] = $3860;
              $3863 = HEAP8[$96>>0]|0;
              $3864 = HEAP32[$vinfos120>>2]|0;
              $3865 = ((($3864)) + 114|0);
              HEAP8[$3865>>0] = $3863;
              $3866 = HEAP32[$vinfos120>>2]|0;
              $3867 = ((($3866)) + 137|0);
              HEAP8[$3867>>0] = 1;
              $3868 = +HEAPF64[$29>>3];
              $3869 = HEAP32[$vinfos120>>2]|0;
              $3870 = ((($3869)) + 128|0);
              HEAPF64[$3870>>3] = $3868;
              $3871 = HEAP8[$27>>0]|0;
              $3872 = HEAP32[$vinfos120>>2]|0;
              $3873 = ((($3872)) + 139|0);
              HEAP8[$3873>>0] = $3871;
              $3874 = HEAP8[$28>>0]|0;
              $3875 = HEAP32[$vinfos120>>2]|0;
              $3876 = ((($3875)) + 140|0);
              HEAP8[$3876>>0] = $3874;
              $3877 = HEAP8[$26>>0]|0;
              $3878 = HEAP32[$vinfos120>>2]|0;
              $3879 = ((($3878)) + 138|0);
              HEAP8[$3879>>0] = $3877;
              $3880 = HEAP32[$vinfos120>>2]|0;
              $3881 = ((($3880)) + 161|0);
              HEAP8[$3881>>0] = 1;
              $3882 = +HEAPF64[$258>>3];
              $3883 = HEAP32[$vinfos120>>2]|0;
              $3884 = ((($3883)) + 152|0);
              HEAPF64[$3884>>3] = $3882;
              $3885 = HEAP8[$256>>0]|0;
              $3886 = HEAP32[$vinfos120>>2]|0;
              $3887 = ((($3886)) + 163|0);
              HEAP8[$3887>>0] = $3885;
              $3888 = HEAP8[$257>>0]|0;
              $3889 = HEAP32[$vinfos120>>2]|0;
              $3890 = ((($3889)) + 164|0);
              HEAP8[$3890>>0] = $3888;
              $3891 = HEAP8[$253>>0]|0;
              $3892 = HEAP32[$vinfos120>>2]|0;
              $3893 = ((($3892)) + 162|0);
              HEAP8[$3893>>0] = $3891;
              __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree121,0);
              $3894 = HEAP32[$solutions>>2]|0;
              $3895 = ((($3894)) + 8|0);
              $3896 = HEAP32[$3895>>2]|0;
              (FUNCTION_TABLE_iiii[$3896 & 31]($solutions,$vinfos120,$vfree121)|0);
              __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree121);
              __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos120);
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while(0);
  $7578 = (($ij9$0369) + 1)|0;
  $7579 = ($7578|0)<(2);
  if ($7579) {
   $ij9$0369 = $7578;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZN8IKSolver10polyroots2EPdS0_Ri($rawcoeffs,$rawroots,$numroots) {
 $rawcoeffs = $rawcoeffs|0;
 $rawroots = $rawroots|0;
 $numroots = $numroots|0;
 var $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0, $3 = 0.0, $4 = 0.0, $5 = 0;
 var $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($rawcoeffs)) + 8|0);
 $1 = +HEAPF64[$0>>3];
 $2 = $1 * $1;
 $3 = +HEAPF64[$rawcoeffs>>3];
 $4 = $3 * 4.0;
 $5 = ((($rawcoeffs)) + 16|0);
 $6 = +HEAPF64[$5>>3];
 $7 = $4 * $6;
 $8 = $2 - $7;
 $9 = $8 < 0.0;
 if ($9) {
  HEAP32[$numroots>>2] = 0;
  return;
 }
 $10 = $8 == 0.0;
 if ($10) {
  $11 = $1 * -0.5;
  $12 = $11 / $3;
  HEAPF64[$rawroots>>3] = $12;
  HEAP32[$numroots>>2] = 1;
  return;
 } else {
  $13 = (+__Z6IKsqrtd($8));
  $14 = $13 - $1;
  $15 = $3 * 2.0;
  $16 = $14 / $15;
  HEAPF64[$rawroots>>3] = $16;
  $17 = +HEAPF64[$0>>3];
  $18 = -$17;
  $19 = $18 - $13;
  $20 = +HEAPF64[$rawcoeffs>>3];
  $21 = $20 * 2.0;
  $22 = $19 / $21;
  $23 = ((($rawroots)) + 8|0);
  HEAPF64[$23>>3] = $22;
  HEAP32[$numroots>>2] = 2;
  return;
 }
}
function __Z5IKtand($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_tan((+$f)));
 return (+$0);
}
function __Z5IKsqrd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f * $f;
 return (+$0);
}
function __Z7IKatan2dd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $$05 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = (__Z13__DOUBLE_BITSd($fy)|0);
 $3 = tempRet0;
 $4 = $3 & 2147483647;
 $5 = ($4>>>0)>(2146435072);
 $6 = ($2>>>0)>(0);
 $7 = ($4|0)==(2146435072);
 $8 = $7 & $6;
 $9 = $5 | $8;
 $10 = (__Z13__DOUBLE_BITSd($fx)|0);
 $11 = tempRet0;
 $12 = $11 & 2147483647;
 $13 = ($12>>>0)>(2146435072);
 $14 = ($10>>>0)>(0);
 $15 = ($12|0)==(2146435072);
 $16 = $15 & $14;
 $17 = $13 | $16;
 if ($9) {
  if ($17) {
   $18 = ((($ss)) + 64|0);
   $19 = ((($ss)) + 8|0);
   HEAP32[$19>>2] = (896);
   $20 = ((($ss)) + 12|0);
   HEAP32[$ss>>2] = ((940));
   HEAP32[$18>>2] = ((960));
   $21 = ((($ss)) + 4|0);
   HEAP32[$21>>2] = 0;
   $22 = HEAP32[$ss>>2]|0;
   $23 = ((($22)) + -12|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (($ss) + ($24)|0);
   __ZNSt3__18ios_base4initEPv($25,$20);
   $26 = ((($ss)) + 64|0);
   $$sum$i$i$i = (($24) + 72)|0;
   $27 = (($ss) + ($$sum$i$i$i)|0);
   HEAP32[$27>>2] = 0;
   $$sum1$i$i$i = (($24) + 76)|0;
   $28 = (($ss) + ($$sum1$i$i$i)|0);
   HEAP32[$28>>2] = -1;
   HEAP32[$ss>>2] = (876);
   HEAP32[$26>>2] = (916);
   HEAP32[$19>>2] = (896);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($20);
   HEAP32[$20>>2] = (976);
   $29 = ((($ss)) + 44|0);
   $30 = ((($ss)) + 60|0);
   ;HEAP32[$29>>2]=0|0;HEAP32[$29+4>>2]=0|0;HEAP32[$29+8>>2]=0|0;HEAP32[$29+12>>2]=0|0;
   HEAP32[$30>>2] = 24;
   ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
   __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($20,$0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $31 = ((($ss)) + 8|0);
   $32 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($31,1072)|0);
   $33 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($32,1096)|0);
   $34 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($33,1144)|0);
   $35 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($34,194)|0);
   $36 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($35,1152)|0);
   $37 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($36,1160)|0);
   $38 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($37,1168)|0);
   $39 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($38,1184)|0);
   (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($39,1200)|0);
   $40 = (___cxa_allocate_exception(8)|0);
   __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$20);
   __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($40,$1);
   ___cxa_throw(($40|0),(1944|0),(35|0));
   // unreachable;
  } else {
   $$05 = 1.5707963267949001;
   STACKTOP = sp;return (+$$05);
  }
 }
 if ($17) {
  $$05 = 0.0;
  STACKTOP = sp;return (+$$05);
 }
 $41 = (+Math_atan2((+$fy),(+$fx)));
 $$05 = $41;
 STACKTOP = sp;return (+$$05);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 32|0);
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0,$__s)|0);
 $1 = ((($this)) + 44|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 8;
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = HEAP8[$0>>0]|0;
  $7 = $6 & 1;
  $8 = ($7<<24>>24)==(0);
  if ($8) {
   $11 = ((($0)) + 1|0);
   $20 = $11;
  } else {
   $9 = ((($this)) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $20 = $10;
  }
  $12 = HEAP8[$0>>0]|0;
  $13 = $12 & 1;
  $14 = ($13<<24>>24)==(0);
  if ($14) {
   $17 = $12&255;
   $18 = $17 >>> 1;
   $21 = $18;
  } else {
   $15 = ((($this)) + 36|0);
   $16 = HEAP32[$15>>2]|0;
   $21 = $16;
  }
  $19 = (($20) + ($21)|0);
  HEAP32[$1>>2] = $19;
  $22 = HEAP8[$0>>0]|0;
  $23 = $22 & 1;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $27 = ((($0)) + 1|0);
   $36 = $27;
  } else {
   $25 = ((($this)) + 40|0);
   $26 = HEAP32[$25>>2]|0;
   $36 = $26;
  }
  $28 = HEAP8[$0>>0]|0;
  $29 = $28 & 1;
  $30 = ($29<<24>>24)==(0);
  if ($30) {
   $33 = ((($0)) + 1|0);
   $38 = $33;
  } else {
   $31 = ((($this)) + 40|0);
   $32 = HEAP32[$31>>2]|0;
   $38 = $32;
  }
  $34 = HEAP32[$1>>2]|0;
  $35 = ((($this)) + 8|0);
  HEAP32[$35>>2] = $36;
  $37 = ((($this)) + 12|0);
  HEAP32[$37>>2] = $38;
  $39 = ((($this)) + 16|0);
  HEAP32[$39>>2] = $34;
 }
 $40 = HEAP32[$2>>2]|0;
 $41 = $40 & 16;
 $42 = ($41|0)==(0);
 if ($42) {
  return;
 }
 $43 = HEAP8[$0>>0]|0;
 $44 = $43 & 1;
 $45 = ($44<<24>>24)==(0);
 if ($45) {
  $48 = $43&255;
  $49 = $48 >>> 1;
  $58 = $49;
 } else {
  $46 = ((($this)) + 36|0);
  $47 = HEAP32[$46>>2]|0;
  $58 = $47;
 }
 $50 = HEAP8[$0>>0]|0;
 $51 = $50 & 1;
 $52 = ($51<<24>>24)==(0);
 if ($52) {
  $55 = ((($0)) + 1|0);
  $57 = $55;
 } else {
  $53 = ((($this)) + 40|0);
  $54 = HEAP32[$53>>2]|0;
  $57 = $54;
 }
 $56 = (($57) + ($58)|0);
 HEAP32[$1>>2] = $56;
 $59 = HEAP8[$0>>0]|0;
 $60 = $59 & 1;
 $61 = ($60<<24>>24)==(0);
 if ($61) {
  $64 = 10;
 } else {
  $62 = HEAP32[$0>>2]|0;
  $63 = $62 & -2;
  $phitmp$i = (($63) + -1)|0;
  $64 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0,$64,0);
 $65 = HEAP8[$0>>0]|0;
 $66 = $65 & 1;
 $67 = ($66<<24>>24)==(0);
 if ($67) {
  $70 = ((($0)) + 1|0);
  $88 = $70;
 } else {
  $68 = ((($this)) + 40|0);
  $69 = HEAP32[$68>>2]|0;
  $88 = $69;
 }
 $71 = HEAP8[$0>>0]|0;
 $72 = $71 & 1;
 $73 = ($72<<24>>24)==(0);
 if ($73) {
  $76 = ((($0)) + 1|0);
  $85 = $76;
 } else {
  $74 = ((($this)) + 40|0);
  $75 = HEAP32[$74>>2]|0;
  $85 = $75;
 }
 $77 = HEAP8[$0>>0]|0;
 $78 = $77 & 1;
 $79 = ($78<<24>>24)==(0);
 if ($79) {
  $82 = $77&255;
  $83 = $82 >>> 1;
  $86 = $83;
 } else {
  $80 = ((($this)) + 36|0);
  $81 = HEAP32[$80>>2]|0;
  $86 = $81;
 }
 $84 = (($85) + ($86)|0);
 $87 = ((($this)) + 24|0);
 HEAP32[$87>>2] = $88;
 $89 = ((($this)) + 20|0);
 HEAP32[$89>>2] = $88;
 $90 = ((($this)) + 28|0);
 HEAP32[$90>>2] = $84;
 $91 = HEAP32[$2>>2]|0;
 $92 = $91 & 3;
 $93 = ($92|0)==(0);
 if ($93) {
  return;
 }
 $94 = HEAP32[$87>>2]|0;
 $95 = (($94) + ($58)|0);
 HEAP32[$87>>2] = $95;
 return;
}
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__111char_traitsIcE6lengthEPKc($__str)|0);
 $1 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$0)|0);
 return ($1|0);
}
function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 48|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 16;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($this)) + 44|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($this)) + 24|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5>>>0)<($7>>>0);
  if ($8) {
   HEAP32[$4>>2] = $7;
  }
  $9 = ((($this)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$4>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($agg$result,$10,$11);
  return;
 }
 $12 = $1 & 8;
 $13 = ($12|0)==(0);
 if ($13) {
  ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
  return;
 } else {
  $14 = ((($this)) + 8|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($this)) + 16|0);
  $17 = HEAP32[$16>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($agg$result,$15,$17);
  return;
 }
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,1032);
 $0 = ((($this)) + 64|0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var $$cast = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$vtt>>2]|0;
 HEAP32[$this>>2] = $0;
 $1 = ((($vtt)) + 32|0);
 $2 = HEAP32[$1>>2]|0;
 $$cast = $0;
 $3 = ((($$cast)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($this) + ($4)|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($vtt)) + 36|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($this)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($this)) + 12|0);
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (976);
 $0 = ((($this)) + 32|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0$lcssa = 0, $__p$0$ph = 0, $__p$02 = 0, $scevgep5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $__first;
 $1 = sp;
 $2 = $__last;
 $3 = (($2) - ($0))|0;
 $4 = ($3>>>0)>(4294967279);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(11);
 if ($5) {
  $6 = $3 << 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 1|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 16)|0;
  $10 = $9 & -16;
  $11 = (__Znwj($10)|0);
  $12 = ((($this)) + 8|0);
  HEAP32[$12>>2] = $11;
  $13 = $10 | 1;
  HEAP32[$this>>2] = $13;
  $14 = ((($this)) + 4|0);
  HEAP32[$14>>2] = $3;
  $__p$0$ph = $11;
 }
 $15 = ($__first|0)==($__last|0);
 if ($15) {
  $__p$0$lcssa = $__p$0$ph;
  HEAP8[$1>>0] = 0;
  __ZNSt3__111char_traitsIcE6assignERcRKc($__p$0$lcssa,$1);
  STACKTOP = sp;return;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $$03 = $__first;$__p$02 = $__p$0$ph;
 while(1) {
  __ZNSt3__111char_traitsIcE6assignERcRKc($__p$02,$$03);
  $18 = ((($$03)) + 1|0);
  $19 = ((($__p$02)) + 1|0);
  $20 = ($18|0)==($__last|0);
  if ($20) {
   break;
  } else {
   $$03 = $18;$__p$02 = $19;
  }
 }
 $scevgep5 = (($__p$0$ph) + ($17)|0);
 $__p$0$lcssa = $scevgep5;
 HEAP8[$1>>0] = 0;
 __ZNSt3__111char_traitsIcE6assignERcRKc($__p$0$lcssa,$1);
 STACKTOP = sp;return;
}
function __ZNSt3__111char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__c2>>0]|0;
 HEAP8[$__c1>>0] = $0;
 return;
}
function __ZNSt3__111char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 return ($0|0);
}
function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$__len) {
 $__os = $__os|0;
 $__str = $__str|0;
 $__len = $__len|0;
 var $$byval_copy = 0, $$sum = 0, $$sum$i = 0, $$sum2 = 0, $$sum3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 16|0;
 $__s = sp + 8|0;
 $0 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$__os);
 $1 = HEAP8[$__s>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;return ($__os|0);
 }
 $3 = HEAP32[$__os>>2]|0;
 $4 = ((($3)) + -12|0);
 $5 = HEAP32[$4>>2]|0;
 $$sum$i = (($5) + 24)|0;
 $6 = (($__os) + ($$sum$i)|0);
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__os>>2]|0;
 $9 = ((($8)) + -12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($__os) + ($10)|0);
 $$sum = (($10) + 4)|0;
 $12 = (($__os) + ($$sum)|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($__str) + ($__len)|0);
 $$sum2 = (($10) + 76)|0;
 $15 = (($__os) + ($$sum2)|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii(-1,$16)|0);
 if ($17) {
  $18 = (__ZNKSt3__18ios_base6getlocEv($11)|0);
  HEAP32[$$byval_copy>>2] = $18;
  $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy,6168)|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($20)) + 28|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (FUNCTION_TABLE_iii[$22 & 15]($19,32)|0);
  __ZNSt3__16localeD2Ev($$byval_copy);
  $24 = $23 << 24 >> 24;
  HEAP32[$15>>2] = $24;
 }
 $25 = HEAP32[$15>>2]|0;
 $26 = $25&255;
 $27 = $13 & 176;
 $28 = ($27|0)==(32);
 $29 = $28 ? $14 : $__str;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $30 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__str,$29,$14,$11,$26)|0);
 $31 = ($30|0)==(0|0);
 if (!($31)) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;return ($__os|0);
 }
 $32 = HEAP32[$__os>>2]|0;
 $33 = ((($32)) + -12|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($__os) + ($34)|0);
 $$sum3 = (($34) + 16)|0;
 $36 = (($__os) + ($$sum3)|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = $37 | 5;
 __ZNSt3__18ios_base5clearEj($35,$38);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;return ($__os|0);
}
function __ZNSt3__111char_traitsIcE11eq_int_typeEii($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c1|0)==($__c2|0);
 return ($0|0);
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$sroa$0$1 = 0;
  STACKTOP = sp;return ($$sroa$0$1|0);
 }
 $2 = $__oe;
 $3 = $__ob;
 $4 = (($2) - ($3))|0;
 $5 = ((($__iob)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)>($4|0);
 $8 = (($6) - ($4))|0;
 $__ns$0 = $7 ? $8 : 0;
 $9 = $__op;
 $10 = (($9) - ($3))|0;
 $11 = ($10|0)>(0);
 if ($11) {
  $12 = HEAP32[$0>>2]|0;
  $13 = ((($12)) + 48|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (FUNCTION_TABLE_iiii[$14 & 31]($0,$__ob,$10)|0);
  $16 = ($15|0)==($10|0);
  if (!($16)) {
   HEAP32[$__s>>2] = 0;
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 }
 $17 = ($__ns$0|0)>(0);
 do {
  if ($17) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($__sp,$__ns$0,$__fl);
   $18 = HEAP32[$__s>>2]|0;
   $19 = HEAP8[$__sp>>0]|0;
   $20 = $19 & 1;
   $21 = ($20<<24>>24)==(0);
   $22 = ((($__sp)) + 8|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($__sp)) + 1|0);
   $25 = $21 ? $24 : $23;
   $26 = HEAP32[$18>>2]|0;
   $27 = ((($26)) + 48|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (FUNCTION_TABLE_iiii[$28 & 31]($18,$25,$__ns$0)|0);
   $30 = ($29|0)==($__ns$0|0);
   if ($30) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
    break;
   }
   HEAP32[$__s>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 } while(0);
 $31 = (($2) - ($9))|0;
 $32 = ($31|0)>(0);
 if ($32) {
  $33 = HEAP32[$__s>>2]|0;
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 48|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = (FUNCTION_TABLE_iiii[$36 & 31]($33,$__op,$31)|0);
  $38 = ($37|0)==($31|0);
  if (!($38)) {
   HEAP32[$__s>>2] = 0;
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 }
 HEAP32[$5>>2] = 0;
 $39 = HEAP32[$__s>>2]|0;
 $$sroa$0$1 = $39;
 STACKTOP = sp;return ($$sroa$0$1|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$__way,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $__way = $__way|0;
 $__wch = $__wch|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($this)) + 44|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($this)) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  HEAP32[$2>>2] = $5;
 }
 $7 = $__wch & 24;
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = $agg$result;
  $10 = $9;
  HEAP32[$10>>2] = 0;
  $11 = (($9) + 4)|0;
  $12 = $11;
  HEAP32[$12>>2] = 0;
  $13 = ((($agg$result)) + 8|0);
  $14 = $13;
  $15 = $14;
  HEAP32[$15>>2] = -1;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = -1;
  return;
 }
 $18 = ($7|0)==(24);
 $19 = ($__way|0)==(1);
 $or$cond = $19 & $18;
 if ($or$cond) {
  $20 = $agg$result;
  $21 = $20;
  HEAP32[$21>>2] = 0;
  $22 = (($20) + 4)|0;
  $23 = $22;
  HEAP32[$23>>2] = 0;
  $24 = ((($agg$result)) + 8|0);
  $25 = $24;
  $26 = $25;
  HEAP32[$26>>2] = -1;
  $27 = (($25) + 4)|0;
  $28 = $27;
  HEAP32[$28>>2] = -1;
  return;
 }
 do {
  if ((($__way|0) == 2)) {
   $48 = HEAP32[$2>>2]|0;
   $49 = ((($this)) + 32|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50 & 1;
   $52 = ($51<<24>>24)==(0);
   if ($52) {
    $55 = ((($49)) + 1|0);
    $57 = $55;
   } else {
    $53 = ((($this)) + 40|0);
    $54 = HEAP32[$53>>2]|0;
    $57 = $54;
   }
   $56 = $48;
   $58 = $57;
   $59 = (($56) - ($58))|0;
   $60 = ($59|0)<(0);
   $61 = $60 << 31 >> 31;
   $71 = $59;$72 = $61;
  } else if ((($__way|0) == 1)) {
   $29 = $__wch & 8;
   $30 = ($29|0)==(0);
   if ($30) {
    $40 = HEAP32[$4>>2]|0;
    $41 = ((($this)) + 20|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = $40;
    $44 = $42;
    $45 = (($43) - ($44))|0;
    $46 = ($45|0)<(0);
    $47 = $46 << 31 >> 31;
    $71 = $45;$72 = $47;
    break;
   } else {
    $31 = ((($this)) + 12|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ((($this)) + 8|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = $32;
    $36 = $34;
    $37 = (($35) - ($36))|0;
    $38 = ($37|0)<(0);
    $39 = $38 << 31 >> 31;
    $71 = $37;$72 = $39;
    break;
   }
  } else if ((($__way|0) == 0)) {
   $71 = 0;$72 = 0;
  } else {
   $62 = $agg$result;
   $63 = $62;
   HEAP32[$63>>2] = 0;
   $64 = (($62) + 4)|0;
   $65 = $64;
   HEAP32[$65>>2] = 0;
   $66 = ((($agg$result)) + 8|0);
   $67 = $66;
   $68 = $67;
   HEAP32[$68>>2] = -1;
   $69 = (($67) + 4)|0;
   $70 = $69;
   HEAP32[$70>>2] = -1;
   return;
  }
 } while(0);
 $73 = (_i64Add(($71|0),($72|0),($0|0),($1|0))|0);
 $74 = tempRet0;
 $75 = ($74|0)<(0);
 if (!($75)) {
  $76 = HEAP32[$2>>2]|0;
  $77 = ((($this)) + 32|0);
  $78 = HEAP8[$77>>0]|0;
  $79 = $78 & 1;
  $80 = ($79<<24>>24)==(0);
  if ($80) {
   $83 = ((($77)) + 1|0);
   $85 = $83;
  } else {
   $81 = ((($this)) + 40|0);
   $82 = HEAP32[$81>>2]|0;
   $85 = $82;
  }
  $84 = $76;
  $86 = $85;
  $87 = (($84) - ($86))|0;
  $88 = ($87|0)<(0);
  $89 = $88 << 31 >> 31;
  $90 = ($89|0)<($74|0);
  $91 = ($87>>>0)<($73>>>0);
  $92 = ($89|0)==($74|0);
  $93 = $92 & $91;
  $94 = $90 | $93;
  if (!($94)) {
   $104 = ($73|0)==(0);
   $105 = ($74|0)==(0);
   $106 = $104 & $105;
   if (!($106)) {
    $107 = $__wch & 8;
    $108 = ($107|0)==(0);
    if (!($108)) {
     $109 = ((($this)) + 12|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $112 = $agg$result;
      $113 = $112;
      HEAP32[$113>>2] = 0;
      $114 = (($112) + 4)|0;
      $115 = $114;
      HEAP32[$115>>2] = 0;
      $116 = ((($agg$result)) + 8|0);
      $117 = $116;
      $118 = $117;
      HEAP32[$118>>2] = -1;
      $119 = (($117) + 4)|0;
      $120 = $119;
      HEAP32[$120>>2] = -1;
      return;
     }
    }
    $121 = $__wch & 16;
    $122 = ($121|0)==(0);
    if (!($122)) {
     $123 = HEAP32[$4>>2]|0;
     $124 = ($123|0)==(0|0);
     if ($124) {
      $125 = $agg$result;
      $126 = $125;
      HEAP32[$126>>2] = 0;
      $127 = (($125) + 4)|0;
      $128 = $127;
      HEAP32[$128>>2] = 0;
      $129 = ((($agg$result)) + 8|0);
      $130 = $129;
      $131 = $130;
      HEAP32[$131>>2] = -1;
      $132 = (($130) + 4)|0;
      $133 = $132;
      HEAP32[$133>>2] = -1;
      return;
     }
    }
   }
   $134 = $__wch & 8;
   $135 = ($134|0)==(0);
   if (!($135)) {
    $136 = ((($this)) + 8|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = (($137) + ($73)|0);
    $139 = HEAP32[$2>>2]|0;
    $140 = ((($this)) + 12|0);
    HEAP32[$140>>2] = $138;
    $141 = ((($this)) + 16|0);
    HEAP32[$141>>2] = $139;
   }
   $142 = $__wch & 16;
   $143 = ($142|0)==(0);
   if (!($143)) {
    $144 = ((($this)) + 20|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = ((($this)) + 28|0);
    $147 = HEAP32[$146>>2]|0;
    HEAP32[$4>>2] = $145;
    HEAP32[$144>>2] = $145;
    HEAP32[$146>>2] = $147;
    $148 = HEAP32[$4>>2]|0;
    $149 = (($148) + ($73)|0);
    HEAP32[$4>>2] = $149;
   }
   $150 = $agg$result;
   $151 = $150;
   HEAP32[$151>>2] = 0;
   $152 = (($150) + 4)|0;
   $153 = $152;
   HEAP32[$153>>2] = 0;
   $154 = ((($agg$result)) + 8|0);
   $155 = $154;
   $156 = $155;
   HEAP32[$156>>2] = $73;
   $157 = (($155) + 4)|0;
   $158 = $157;
   HEAP32[$158>>2] = $74;
   return;
  }
 }
 $95 = $agg$result;
 $96 = $95;
 HEAP32[$96>>2] = 0;
 $97 = (($95) + 4)|0;
 $98 = $97;
 HEAP32[$98>>2] = 0;
 $99 = ((($agg$result)) + 8|0);
 $100 = $99;
 $101 = $100;
 HEAP32[$101>>2] = -1;
 $102 = (($100) + 4)|0;
 $103 = $102;
 HEAP32[$103>>2] = -1;
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$__sp,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__sp = $__sp|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__sp)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 FUNCTION_TABLE_viiiiii[$2 & 7]($agg$result,$this,$6,$9,0,$__wch);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  HEAP32[$0>>2] = $3;
 }
 $5 = ((($this)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $$0 = -1;
  return ($$0|0);
 }
 $9 = ((($this)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = ($10>>>0)<($11>>>0);
 if ($12) {
  $13 = ((($this)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($this)) + 12|0);
  $16 = HEAP32[$15>>2]|0;
  HEAP32[$13>>2] = $14;
  HEAP32[$15>>2] = $16;
  HEAP32[$9>>2] = $11;
 }
 $17 = ((($this)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$9>>2]|0;
 $20 = ($18>>>0)<($19>>>0);
 if (!($20)) {
  $$0 = -1;
  return ($$0|0);
 }
 $21 = HEAP8[$18>>0]|0;
 $22 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($21)|0);
 $$0 = $22;
 return ($$0|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  HEAP32[$0>>2] = $3;
 }
 $5 = ((($this)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($this)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($6>>>0)<($8>>>0);
 if (!($9)) {
  $$0 = -1;
  return ($$0|0);
 }
 $10 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 if ($10) {
  $11 = ((($8)) + -1|0);
  $12 = HEAP32[$0>>2]|0;
  HEAP32[$5>>2] = $6;
  HEAP32[$7>>2] = $11;
  $13 = ((($this)) + 16|0);
  HEAP32[$13>>2] = $12;
  $14 = (__ZNSt3__111char_traitsIcE7not_eofEi($__c)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = ((($this)) + 48|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16 & 16;
 $18 = ($17|0)==(0);
 if ($18) {
  $19 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($__c)|0);
  $20 = ((($8)) + -1|0);
  $21 = HEAP8[$20>>0]|0;
  $22 = (__ZNSt3__111char_traitsIcE2eqEcc($19,$21)|0);
  if (!($22)) {
   $$0 = -1;
   return ($$0|0);
  }
 }
 $23 = HEAP32[$5>>2]|0;
 $24 = HEAP32[$7>>2]|0;
 $25 = ((($24)) + -1|0);
 $26 = HEAP32[$0>>2]|0;
 HEAP32[$5>>2] = $23;
 HEAP32[$7>>2] = $25;
 $27 = ((($this)) + 16|0);
 HEAP32[$27>>2] = $26;
 $28 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($__c)|0);
 $29 = HEAP32[$7>>2]|0;
 HEAP8[$29>>0] = $28;
 $$0 = $__c;
 return ($$0|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 if ($1) {
  $87 = (__ZNSt3__111char_traitsIcE7not_eofEi($__c)|0);
  $$0 = $87;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ((($this)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = ((($this)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($this)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10|0)==($12|0);
 if ($13) {
  $14 = ((($this)) + 48|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = $15 & 16;
  $17 = ($16|0)==(0);
  if ($17) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
  $18 = ((($this)) + 20|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = $10;
  $21 = $19;
  $22 = (($20) - ($21))|0;
  $23 = ((($this)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = $24;
  $26 = (($25) - ($21))|0;
  $27 = ((($this)) + 32|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($27,0);
  $28 = HEAP8[$27>>0]|0;
  $29 = $28 & 1;
  $30 = ($29<<24>>24)==(0);
  if ($30) {
   $33 = 10;
  } else {
   $31 = HEAP32[$27>>2]|0;
   $32 = $31 & -2;
   $phitmp$i = (($32) + -1)|0;
   $33 = $phitmp$i;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($27,$33,0);
  $34 = HEAP8[$27>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  if ($36) {
   $39 = ((($27)) + 1|0);
   $48 = $39;
  } else {
   $37 = ((($this)) + 40|0);
   $38 = HEAP32[$37>>2]|0;
   $48 = $38;
  }
  $40 = HEAP8[$27>>0]|0;
  $41 = $40 & 1;
  $42 = ($41<<24>>24)==(0);
  if ($42) {
   $45 = $40&255;
   $46 = $45 >>> 1;
   $49 = $46;
  } else {
   $43 = ((($this)) + 36|0);
   $44 = HEAP32[$43>>2]|0;
   $49 = $44;
  }
  $47 = (($48) + ($49)|0);
  HEAP32[$9>>2] = $48;
  HEAP32[$18>>2] = $48;
  HEAP32[$11>>2] = $47;
  $50 = HEAP32[$9>>2]|0;
  $51 = (($50) + ($22)|0);
  HEAP32[$9>>2] = $51;
  $52 = HEAP32[$18>>2]|0;
  $53 = (($52) + ($26)|0);
  HEAP32[$23>>2] = $53;
 }
 $54 = HEAP32[$9>>2]|0;
 $55 = ((($54)) + 1|0);
 HEAP32[$0>>2] = $55;
 $56 = ((($this)) + 44|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = ($55>>>0)<($57>>>0);
 $59 = $58 ? $56 : $0;
 $60 = HEAP32[$59>>2]|0;
 HEAP32[$56>>2] = $60;
 $61 = ((($this)) + 48|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = $62 & 8;
 $64 = ($63|0)==(0);
 if (!($64)) {
  $65 = ((($this)) + 32|0);
  $66 = HEAP8[$65>>0]|0;
  $67 = $66 & 1;
  $68 = ($67<<24>>24)==(0);
  if ($68) {
   $71 = ((($65)) + 1|0);
   $73 = $71;
  } else {
   $69 = ((($this)) + 40|0);
   $70 = HEAP32[$69>>2]|0;
   $73 = $70;
  }
  $72 = (($73) + ($8)|0);
  $74 = HEAP32[$56>>2]|0;
  HEAP32[$4>>2] = $73;
  HEAP32[$2>>2] = $72;
  $75 = ((($this)) + 16|0);
  HEAP32[$75>>2] = $74;
 }
 $76 = $__c&255;
 $77 = HEAP32[$9>>2]|0;
 $78 = HEAP32[$11>>2]|0;
 $79 = ($77|0)==($78|0);
 if ($79) {
  $80 = HEAP32[$this>>2]|0;
  $81 = ((($80)) + 52|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($76)|0);
  $84 = (FUNCTION_TABLE_iii[$82 & 15]($this,$83)|0);
  $$0 = $84;
  STACKTOP = sp;return ($$0|0);
 } else {
  $85 = ((($77)) + 1|0);
  HEAP32[$9>>2] = $85;
  HEAP8[$77>>0] = $76;
  $86 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($76)|0);
  $$0 = $86;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE11to_int_typeEc($__c) {
 $__c = $__c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__c&255;
 return ($0|0);
}
function __ZNSt3__111char_traitsIcE7not_eofEi($__c) {
 $__c = $__c|0;
 var $$__c = 0, $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 $$__c = $0 ? 0 : $__c;
 return ($$__c|0);
}
function __ZNSt3__111char_traitsIcE12to_char_typeEi($__c) {
 $__c = $__c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__c&255;
 return ($0|0);
}
function __ZNSt3__111char_traitsIcE2eqEcc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c1<<24>>24)==($__c2<<24>>24);
 return ($0|0);
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
 return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
 return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($3);
 return;
}
function __Z6IKacosd($f) {
 $f = +$f;
 var $$06 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = $f > -1.0000020000000001;
 $3 = $f < 1.0000020000000001;
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $4 = ((($ss)) + 64|0);
  $5 = ((($ss)) + 8|0);
  HEAP32[$5>>2] = (896);
  $6 = ((($ss)) + 12|0);
  HEAP32[$ss>>2] = ((940));
  HEAP32[$4>>2] = ((960));
  $7 = ((($ss)) + 4|0);
  HEAP32[$7>>2] = 0;
  $8 = HEAP32[$ss>>2]|0;
  $9 = ((($8)) + -12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($ss) + ($10)|0);
  __ZNSt3__18ios_base4initEPv($11,$6);
  $12 = ((($ss)) + 64|0);
  $$sum$i$i$i = (($10) + 72)|0;
  $13 = (($ss) + ($$sum$i$i$i)|0);
  HEAP32[$13>>2] = 0;
  $$sum1$i$i$i = (($10) + 76)|0;
  $14 = (($ss) + ($$sum1$i$i$i)|0);
  HEAP32[$14>>2] = -1;
  HEAP32[$ss>>2] = (876);
  HEAP32[$12>>2] = (916);
  HEAP32[$5>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
  HEAP32[$6>>2] = (976);
  $15 = ((($ss)) + 44|0);
  $16 = ((($ss)) + 60|0);
  ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;HEAP32[$15+12>>2]=0|0;
  HEAP32[$16>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $17 = ((($ss)) + 8|0);
  $18 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($17,1072)|0);
  $19 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($18,1096)|0);
  $20 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($19,1144)|0);
  $21 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($20,163)|0);
  $22 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($21,1152)|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1496)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1168)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1504)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($25,1200)|0);
  $26 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$6);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($26,$1);
  ___cxa_throw(($26|0),(1944|0),(35|0));
  // unreachable;
 }
 $27 = !($f <= -1.0);
 if (!($27)) {
  $$06 = 3.14159265358979;
  STACKTOP = sp;return (+$$06);
 }
 $28 = !($f >= 1.0);
 if (!($28)) {
  $$06 = 0.0;
  STACKTOP = sp;return (+$$06);
 }
 $29 = (+Math_acos((+$f)));
 $$06 = $29;
 STACKTOP = sp;return (+$$06);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$0 = $__n;
 while(1) {
  $1 = HEAP32[$0>>2]|0;
  __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($1);
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 24|0);
  HEAP32[$0>>2] = $3;
  $4 = (($$0) + -1)|0;
  $5 = ($4|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;
  }
 }
 return;
}
function __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;HEAP32[$this+12>>2]=0|0;
 HEAP8[$0>>0] = -1;
 $1 = ((($this)) + 18|0);
 HEAP8[$1>>0] = 1;
 $2 = ((($this)) + 19|0);
 ;HEAP8[$2>>0]=255|0;HEAP8[$2+1>>0]=255|0;HEAP8[$2+2>>0]=255|0;HEAP8[$2+3>>0]=255|0;HEAP8[$2+4>>0]=255|0;
 return;
}
function __Z13IKatan2Simpledd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_atan2((+$fy),(+$fx)));
 return (+$0);
}
function _strtoull_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoull($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _strtoll_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoll($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _isdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $0 = $isdigit&1;
 return ($0|0);
}
function _isxdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isxdigit($c)|0);
 return ($0|0);
}
function _mbrlen($s,$n,$st) {
 $s = $s|0;
 $n = $n|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)!=(0|0);
 $1 = $0 ? $st : 1784;
 $2 = (_mbrtowc(0,$s,$n,$1)|0);
 return ($2|0);
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa34 = 0, $$st = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($st|0)==(0|0);
 $$st = $1 ? 1792 : $st;
 $2 = HEAP32[$$st>>2]|0;
 $3 = ($src|0)==(0|0);
 L1: do {
  if ($3) {
   $4 = ($2|0)==(0);
   if ($4) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $5 = ($wc|0)==(0|0);
   if ($5) {
    HEAP32[$0>>2] = $0;
    $11 = $0;
   } else {
    $11 = $wc;
   }
   $6 = ($n|0)==(0);
   if ($6) {
    $$0 = -2;
    STACKTOP = sp;return ($$0|0);
   }
   $7 = ($2|0)==(0);
   do {
    if ($7) {
     $8 = HEAP8[$src>>0]|0;
     $9 = $8&255;
     $10 = ($8<<24>>24)>(-1);
     if ($10) {
      HEAP32[$11>>2] = $9;
      $12 = ($8<<24>>24)!=(0);
      $13 = $12&1;
      $$0 = $13;
      STACKTOP = sp;return ($$0|0);
     } else {
      $14 = (($9) + -194)|0;
      $15 = ($14>>>0)>(50);
      if ($15) {
       break L1;
      }
      $16 = ((($src)) + 1|0);
      $17 = (1576 + ($14<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($n) + -1)|0;
      $20 = ($19|0)==(0);
      if ($20) {
       $c$2 = $18;
       break;
      } else {
       $$023 = $19;$c$04 = $18;$s$05 = $16;
       label = 11;
       break;
      }
     }
    } else {
     $$023 = $n;$c$04 = $2;$s$05 = $src;
     label = 11;
    }
   } while(0);
   L18: do {
    if ((label|0) == 11) {
     $21 = HEAP8[$s$05>>0]|0;
     $22 = $21&255;
     $23 = $22 >>> 3;
     $24 = (($23) + -16)|0;
     $25 = $c$04 >> 26;
     $26 = (($23) + ($25))|0;
     $27 = $24 | $26;
     $28 = ($27>>>0)>(7);
     if ($28) {
      break L1;
     } else {
      $$1 = $$023;$32 = $21;$c$1 = $c$04;$s$1 = $s$05;
     }
     while(1) {
      $29 = $c$1 << 6;
      $30 = ((($s$1)) + 1|0);
      $31 = $32&255;
      $33 = (($31) + -128)|0;
      $34 = $33 | $29;
      $35 = (($$1) + -1)|0;
      $36 = ($34|0)<(0);
      if (!($36)) {
       $$lcssa = $34;$$lcssa34 = $35;
       break;
      }
      $38 = ($35|0)==(0);
      if ($38) {
       $c$2 = $34;
       break L18;
      }
      $39 = HEAP8[$30>>0]|0;
      $40 = $39 & -64;
      $41 = ($40<<24>>24)==(-128);
      if ($41) {
       $$1 = $35;$32 = $39;$c$1 = $34;$s$1 = $30;
      } else {
       break L1;
      }
     }
     HEAP32[$$st>>2] = 0;
     HEAP32[$11>>2] = $$lcssa;
     $37 = (($n) - ($$lcssa34))|0;
     $$0 = $37;
     STACKTOP = sp;return ($$0|0);
    }
   } while(0);
   HEAP32[$$st>>2] = $c$2;
   $$0 = -2;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$$st>>2] = 0;
 $42 = (___errno_location()|0);
 HEAP32[$42>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($st) {
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)==(0|0);
 if ($0) {
  $4 = 1;
 } else {
  $1 = HEAP32[$st>>2]|0;
  $2 = ($1|0)==(0);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st) {
 $wcs = $wcs|0;
 $src = $src|0;
 $n = $n|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$02$ = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $or$cond = 0, $or$cond17 = 0, $s = 0, $wbuf = 0, $wcs$ = 0;
 var $wn$ = 0, $ws$020 = 0, $ws$020$lcssa56 = 0, $ws$09 = 0, $ws$1 = 0, $ws$215 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0;
 $wbuf = sp + 8|0;
 $s = sp;
 $0 = HEAP32[$src>>2]|0;
 HEAP32[$s>>2] = $0;
 $1 = ($wcs|0)!=(0|0);
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($wn$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $n;$$0218 = $wn$;$37 = $$cast;$cnt$019 = 0;$ws$020 = $wcs$;
   while(1) {
    $4 = $$021 >>> 2;
    $5 = ($4>>>0)>=($$0218>>>0);
    $6 = ($$021>>>0)>(131);
    $7 = $6 | $5;
    if (!($7)) {
     $$1 = $$021;$$24 = $$0218;$18 = $37;$cnt$1 = $cnt$019;$ws$09 = $ws$020;
     break L1;
    }
    $$02$ = $5 ? $$0218 : $4;
    $8 = (($$021) - ($$02$))|0;
    $9 = (_mbsrtowcs($ws$020,$s,$$02$,$st)|0);
    $10 = ($9|0)==(-1);
    if ($10) {
     $$lcssa57 = $8;$ws$020$lcssa56 = $ws$020;
     break;
    }
    $11 = ($ws$020|0)==($wbuf|0);
    $12 = (($ws$020) + ($9<<2)|0);
    $13 = $11 ? 0 : $9;
    $$13 = (($$0218) - ($13))|0;
    $ws$1 = $11 ? $ws$020 : $12;
    $14 = (($9) + ($cnt$019))|0;
    $15 = HEAP32[$s>>2]|0;
    $16 = ($15|0)!=(0|0);
    $17 = ($$0218|0)!=($13|0);
    $or$cond = $17 & $16;
    if ($or$cond) {
     $$021 = $8;$$0218 = $$13;$37 = $15;$cnt$019 = $14;$ws$020 = $ws$1;
    } else {
     $$1 = $8;$$24 = $$13;$18 = $15;$cnt$1 = $14;$ws$09 = $ws$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$s>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$18 = $$pr$pre;$cnt$1 = -1;$ws$09 = $ws$020$lcssa56;
  } else {
   $$1 = $n;$$24 = $wn$;$18 = $$cast;$cnt$1 = 0;$ws$09 = $wcs$;
  }
 } while(0);
 $19 = ($18|0)==(0|0);
 L8: do {
  if ($19) {
   $cnt$3 = $cnt$1;
  } else {
   $20 = ($$24|0)!=(0);
   $21 = ($$1|0)!=(0);
   $22 = $20 & $21;
   if ($22) {
    $$216 = $$1;$$313 = $$24;$23 = $18;$cnt$214 = $cnt$1;$ws$215 = $ws$09;
    while(1) {
     $24 = (_mbrtowc($ws$215,$23,$$216,$st)|0);
     $25 = (($24) + 2)|0;
     $26 = ($25>>>0)<(3);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $27 = HEAP32[$s>>2]|0;
     $28 = (($27) + ($24)|0);
     HEAP32[$s>>2] = $28;
     $29 = (($$216) - ($24))|0;
     $30 = ((($ws$215)) + 4|0);
     $31 = (($$313) + -1)|0;
     $32 = (($cnt$214) + 1)|0;
     $33 = ($31|0)!=(0);
     $34 = ($$216|0)!=($24|0);
     $35 = $33 & $34;
     if ($35) {
      $$216 = $29;$$313 = $31;$23 = $28;$cnt$214 = $32;$ws$215 = $30;
     } else {
      $cnt$3 = $32;
      break L8;
     }
    }
    if ((($$lcssa|0) == -1)) {
     $cnt$3 = -1;
     break;
    } else if ((($$lcssa|0) == 0)) {
     HEAP32[$s>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break;
    } else {
     HEAP32[$st>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $36 = HEAP32[$s>>2]|0;
 HEAP32[$src>>2] = $36;
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0;
 var $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa102 = 0, $$lcssa90 = 0, $$lcssa94 = 0, $$lcssa96 = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$old1 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0, $s$0 = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0;
 var $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 16;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 37;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03 = $wn;$s$0 = $0;
   label = 7;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 6;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 26;
    break;
   } else {
    $$0219 = $$02$ph;$$4718 = $$47$ph;$s$520 = $s$5$ph;
   }
   while(1) {
    $63 = HEAP8[$s$520>>0]|0;
    $64 = $63&255;
    $65 = (($64) + -1)|0;
    $66 = ($65>>>0)<(127);
    do {
     if ($66) {
      $67 = $s$520;
      $68 = $67 & 3;
      $69 = ($68|0)==(0);
      $70 = ($$4718>>>0)>(4);
      $or$cond = $70 & $69;
      if ($or$cond) {
       $$1 = $$0219;$$5 = $$4718;$s$6 = $s$520;
       while(1) {
        $71 = HEAP32[$s$6>>2]|0;
        $72 = (($71) + -16843009)|0;
        $73 = $72 | $71;
        $74 = $73 & -2139062144;
        $75 = ($74|0)==(0);
        if (!($75)) {
         $$1$lcssa = $$1;$$5$lcssa = $$5;$$lcssa94 = $71;$s$6$lcssa = $s$6;
         label = 32;
         break;
        }
        $76 = ((($s$6)) + 1|0);
        $77 = $71 & 255;
        $78 = ((($$1)) + 4|0);
        HEAP32[$$1>>2] = $77;
        $79 = ((($s$6)) + 2|0);
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $82 = ((($$1)) + 8|0);
        HEAP32[$78>>2] = $81;
        $83 = ((($s$6)) + 3|0);
        $84 = HEAP8[$79>>0]|0;
        $85 = $84&255;
        $86 = ((($$1)) + 12|0);
        HEAP32[$82>>2] = $85;
        $87 = ((($s$6)) + 4|0);
        $88 = HEAP8[$83>>0]|0;
        $89 = $88&255;
        $90 = ((($$1)) + 16|0);
        HEAP32[$86>>2] = $89;
        $91 = (($$5) + -4)|0;
        $$old1 = ($91>>>0)>(4);
        if ($$old1) {
         $$1 = $90;$$5 = $91;$s$6 = $87;
        } else {
         $$lcssa96 = $87;$$lcssa97 = $90;$$lcssa98 = $91;
         label = 31;
         break;
        }
       }
       if ((label|0) == 31) {
        label = 0;
        $$pre$pre = HEAP8[$$lcssa96>>0]|0;
        $$2 = $$lcssa97;$$6 = $$lcssa98;$94 = $$pre$pre;$s$7 = $$lcssa96;
        break;
       }
       else if ((label|0) == 32) {
        label = 0;
        $92 = $$lcssa94&255;
        $$2 = $$1$lcssa;$$6 = $$5$lcssa;$94 = $92;$s$7 = $s$6$lcssa;
        break;
       }
      } else {
       $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
      }
     } else {
      $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
     }
    } while(0);
    $93 = $94&255;
    $95 = (($93) + -1)|0;
    $96 = ($95>>>0)<(127);
    if (!($96)) {
     $$2$lcssa = $$2;$$6$lcssa = $$6;$$lcssa102 = $93;$s$7$lcssa = $s$7;
     break;
    }
    $97 = ((($s$7)) + 1|0);
    $98 = ((($$2)) + 4|0);
    HEAP32[$$2>>2] = $93;
    $99 = (($$6) + -1)|0;
    $100 = ($99|0)==(0);
    if ($100) {
     $s$5$lcssa = $97;
     label = 26;
     break L7;
    } else {
     $$0219 = $98;$$4718 = $99;$s$520 = $97;
    }
   }
   $101 = (($$lcssa102) + -194)|0;
   $102 = ($101>>>0)>(50);
   if ($102) {
    $$434 = $$2$lcssa;$$833 = $$6$lcssa;$s$1035 = $s$7$lcssa;
    label = 48;
    break;
   }
   $103 = ((($s$7$lcssa)) + 1|0);
   $104 = (1576 + ($101<<2)|0);
   $105 = HEAP32[$104>>2]|0;
   $$3 = $$2$lcssa;$$7 = $$6$lcssa;$c$4 = $105;$s$8 = $103;
   label = 37;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $7 = HEAP8[$s$0>>0]|0;
   $8 = $7&255;
   $9 = (($8) + -1)|0;
   $10 = ($9>>>0)<(127);
   if ($10) {
    $11 = $s$0;
    $12 = $11 & 3;
    $13 = ($12|0)==(0);
    if ($13) {
     $14 = HEAP32[$s$0>>2]|0;
     $15 = (($14) + -16843009)|0;
     $16 = $15 | $14;
     $17 = $16 & -2139062144;
     $18 = ($17|0)==(0);
     if ($18) {
      $$1415 = $$03;$s$116 = $s$0;
      while(1) {
       $19 = ((($s$116)) + 4|0);
       $20 = (($$1415) + -4)|0;
       $21 = HEAP32[$19>>2]|0;
       $22 = (($21) + -16843009)|0;
       $23 = $22 | $21;
       $24 = $23 & -2139062144;
       $25 = ($24|0)==(0);
       if ($25) {
        $$1415 = $20;$s$116 = $19;
       } else {
        $$14$lcssa = $20;$$in = $21;$s$1$lcssa = $19;
        break;
       }
      }
     } else {
      $$14$lcssa = $$03;$$in = $14;$s$1$lcssa = $s$0;
     }
     $26 = $$in&255;
     $$25 = $$14$lcssa;$28 = $26;$s$2 = $s$1$lcssa;
    } else {
     $$25 = $$03;$28 = $7;$s$2 = $s$0;
    }
   } else {
    $$25 = $$03;$28 = $7;$s$2 = $s$0;
   }
   $27 = $28&255;
   $29 = (($27) + -1)|0;
   $30 = ($29>>>0)<(127);
   if ($30) {
    $31 = ((($s$2)) + 1|0);
    $32 = (($$25) + -1)|0;
    $$03 = $32;$s$0 = $31;
    label = 7;
    continue;
   } else {
    $$25$lcssa = $$25;$$lcssa90 = $27;$s$2$lcssa = $s$2;
   }
   $33 = (($$lcssa90) + -194)|0;
   $34 = ($33>>>0)>(50);
   if ($34) {
    $$434 = $ws;$$833 = $$25$lcssa;$s$1035 = $s$2$lcssa;
    label = 48;
    break;
   }
   $35 = ((($s$2$lcssa)) + 1|0);
   $36 = (1576 + ($33<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $$36 = $$25$lcssa;$c$2 = $37;$s$3 = $35;
   label = 16;
   continue;
  }
  else if ((label|0) == 16) {
   label = 0;
   $38 = HEAP8[$s$3>>0]|0;
   $39 = $38&255;
   $40 = $39 >>> 3;
   $41 = (($40) + -16)|0;
   $42 = $c$2 >> 26;
   $43 = (($40) + ($42))|0;
   $44 = $41 | $43;
   $45 = ($44>>>0)>(7);
   if ($45) {
    label = 17;
    break;
   }
   $47 = ((($s$3)) + 1|0);
   $48 = $c$2 & 33554432;
   $49 = ($48|0)==(0);
   if ($49) {
    $s$4 = $47;
   } else {
    $50 = HEAP8[$47>>0]|0;
    $51 = $50 & -64;
    $52 = ($51<<24>>24)==(-128);
    if (!($52)) {
     label = 20;
     break;
    }
    $54 = ((($s$3)) + 2|0);
    $55 = $c$2 & 524288;
    $56 = ($55|0)==(0);
    if ($56) {
     $s$4 = $54;
    } else {
     $57 = HEAP8[$54>>0]|0;
     $58 = $57 & -64;
     $59 = ($58<<24>>24)==(-128);
     if (!($59)) {
      label = 23;
      break;
     }
     $61 = ((($s$3)) + 3|0);
     $s$4 = $61;
    }
   }
   $62 = (($$36) + -1)|0;
   $$03 = $62;$s$0 = $s$4;
   label = 7;
   continue;
  }
  else if ((label|0) == 37) {
   label = 0;
   $106 = HEAP8[$s$8>>0]|0;
   $107 = $106&255;
   $108 = $107 >>> 3;
   $109 = (($108) + -16)|0;
   $110 = $c$4 >> 26;
   $111 = (($108) + ($110))|0;
   $112 = $109 | $111;
   $113 = ($112>>>0)>(7);
   if ($113) {
    label = 38;
    break;
   }
   $115 = $c$4 << 6;
   $116 = ((($s$8)) + 1|0);
   $117 = (($107) + -128)|0;
   $118 = $117 | $115;
   $119 = ($118|0)<(0);
   if ($119) {
    $120 = HEAP8[$116>>0]|0;
    $121 = $120&255;
    $122 = $121 & 192;
    $123 = ($122|0)==(128);
    if (!($123)) {
     label = 41;
     break;
    }
    $125 = $118 << 6;
    $126 = ((($s$8)) + 2|0);
    $127 = (($121) + -128)|0;
    $128 = $127 | $125;
    $129 = ($128|0)<(0);
    if ($129) {
     $130 = HEAP8[$126>>0]|0;
     $131 = $130&255;
     $132 = $131 & 192;
     $133 = ($132|0)==(128);
     if (!($133)) {
      label = 44;
      break;
     }
     $135 = $128 << 6;
     $136 = ((($s$8)) + 3|0);
     $137 = (($131) + -128)|0;
     $138 = $137 | $135;
     $c$5 = $138;$s$9 = $136;
    } else {
     $c$5 = $128;$s$9 = $126;
    }
   } else {
    $c$5 = $118;$s$9 = $116;
   }
   $139 = ((($$3)) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $140 = (($$7) + -1)|0;
   $$02$ph = $139;$$47$ph = $140;$s$5$ph = $s$9;
   label = 6;
   continue;
  }
 }
 if ((label|0) == 17) {
  $46 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $46;
  label = 47;
 }
 else if ((label|0) == 20) {
  $53 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $53;
  label = 47;
 }
 else if ((label|0) == 23) {
  $60 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $60;
  label = 47;
 }
 else if ((label|0) == 26) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
  return ($$0|0);
 }
 else if ((label|0) == 38) {
  $114 = ((($s$8)) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $114;
  label = 47;
 }
 else if ((label|0) == 41) {
  $124 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $124;
 }
 else if ((label|0) == 44) {
  $134 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $134;
 }
 if ((label|0) == 47) {
  $141 = ($c$6|0)==(0);
  if ($141) {
   $$434 = $$4;$$833 = $$8;$s$1035 = $s$10;
   label = 48;
  } else {
   $$48 = $$4;$s$109 = $s$10;
  }
 }
 if ((label|0) == 48) {
  $142 = HEAP8[$s$1035>>0]|0;
  $143 = ($142<<24>>24)==(0);
  if ($143) {
   $144 = ($$434|0)==(0|0);
   if (!($144)) {
    HEAP32[$$434>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $145 = (($wn) - ($$833))|0;
   $$0 = $145;
   return ($$0|0);
  } else {
   $$48 = $$434;$s$109 = $s$1035;
  }
 }
 $146 = (___errno_location()|0);
 HEAP32[$146>>2] = 84;
 $147 = ($$48|0)==(0|0);
 if ($147) {
  $$0 = -1;
  return ($$0|0);
 }
 HEAP32[$src>>2] = $s$109;
 $$0 = -1;
 return ($$0|0);
}
function _mbtowc($wc,$src,$n) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($src|0)==(0|0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ($n|0)==(0);
 do {
  if (!($2)) {
   $3 = ($wc|0)==(0|0);
   if ($3) {
    HEAP32[$0>>2] = $0;
    $7 = $0;
   } else {
    $7 = $wc;
   }
   $4 = HEAP8[$src>>0]|0;
   $5 = $4&255;
   $6 = ($4<<24>>24)>(-1);
   if ($6) {
    HEAP32[$7>>2] = $5;
    $8 = ($4<<24>>24)!=(0);
    $9 = $8&1;
    $$0 = $9;
    STACKTOP = sp;return ($$0|0);
   }
   $10 = (($5) + -194)|0;
   $11 = ($10>>>0)>(50);
   if (!($11)) {
    $12 = ((($src)) + 1|0);
    $13 = (1576 + ($10<<2)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($n>>>0)<(4);
    if ($15) {
     $16 = ($n*6)|0;
     $17 = (($16) + -6)|0;
     $18 = -2147483648 >>> $17;
     $19 = $14 & $18;
     $20 = ($19|0)==(0);
     if (!($20)) {
      break;
     }
    }
    $21 = HEAP8[$12>>0]|0;
    $22 = $21&255;
    $23 = $22 >>> 3;
    $24 = (($23) + -16)|0;
    $25 = $14 >> 26;
    $26 = (($23) + ($25))|0;
    $27 = $24 | $26;
    $28 = ($27>>>0)>(7);
    if (!($28)) {
     $29 = $14 << 6;
     $30 = (($22) + -128)|0;
     $31 = $30 | $29;
     $32 = ($31|0)<(0);
     if (!($32)) {
      HEAP32[$7>>2] = $31;
      $$0 = 2;
      STACKTOP = sp;return ($$0|0);
     }
     $33 = ((($src)) + 2|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $35 & 192;
     $37 = ($36|0)==(128);
     if ($37) {
      $38 = $31 << 6;
      $39 = (($35) + -128)|0;
      $40 = $39 | $38;
      $41 = ($40|0)<(0);
      if (!($41)) {
       HEAP32[$7>>2] = $40;
       $$0 = 3;
       STACKTOP = sp;return ($$0|0);
      }
      $42 = ((($src)) + 3|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = $43&255;
      $45 = $44 & 192;
      $46 = ($45|0)==(128);
      if ($46) {
       $47 = $40 << 6;
       $48 = (($44) + -128)|0;
       $49 = $48 | $47;
       HEAP32[$7>>2] = $49;
       $$0 = 4;
       STACKTOP = sp;return ($$0|0);
      }
     }
    }
   }
  }
 } while(0);
 $50 = (___errno_location()|0);
 HEAP32[$50>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st) {
 $dst = $dst|0;
 $wcs = $wcs|0;
 $wn = $wn|0;
 $n = $n|0;
 $st = $st|0;
 var $$02$$0 = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $or$cond = 0;
 var $or$cond17 = 0, $s$020 = 0, $s$020$lcssa56 = 0, $s$09 = 0, $s$1 = 0, $s$215 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $buf = sp + 8|0;
 $ws = sp;
 $0 = HEAP32[$wcs>>2]|0;
 HEAP32[$ws>>2] = $0;
 $1 = ($dst|0)!=(0|0);
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($n$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $wn;$$0218 = $n$;$38 = $$cast;$cnt$019 = 0;$s$020 = $dst$;
   while(1) {
    $4 = ($$021>>>0)>=($$0218>>>0);
    $5 = ($$021>>>0)>(32);
    $6 = $4 | $5;
    if (!($6)) {
     $$1 = $$021;$$24 = $$0218;$17 = $38;$cnt$1 = $cnt$019;$s$09 = $s$020;
     break L1;
    }
    $$02$$0 = $4 ? $$0218 : $$021;
    $7 = (($$021) - ($$02$$0))|0;
    $8 = (_wcsrtombs($s$020,$ws,$$02$$0,0)|0);
    $9 = ($8|0)==(-1);
    if ($9) {
     $$lcssa57 = $7;$s$020$lcssa56 = $s$020;
     break;
    }
    $10 = ($s$020|0)==($buf|0);
    $11 = (($s$020) + ($8)|0);
    $12 = $10 ? 0 : $8;
    $$13 = (($$0218) - ($12))|0;
    $s$1 = $10 ? $s$020 : $11;
    $13 = (($8) + ($cnt$019))|0;
    $14 = HEAP32[$ws>>2]|0;
    $15 = ($14|0)!=(0|0);
    $16 = ($$0218|0)!=($12|0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$021 = $7;$$0218 = $$13;$38 = $14;$cnt$019 = $13;$s$020 = $s$1;
    } else {
     $$1 = $7;$$24 = $$13;$17 = $14;$cnt$1 = $13;$s$09 = $s$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$ws>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$17 = $$pr$pre;$cnt$1 = -1;$s$09 = $s$020$lcssa56;
  } else {
   $$1 = $wn;$$24 = $n$;$17 = $$cast;$cnt$1 = 0;$s$09 = $dst$;
  }
 } while(0);
 $18 = ($17|0)==(0|0);
 L8: do {
  if ($18) {
   $cnt$3 = $cnt$1;
  } else {
   $19 = ($$24|0)!=(0);
   $20 = ($$1|0)!=(0);
   $21 = $19 & $20;
   if ($21) {
    $$216 = $$1;$$313 = $$24;$23 = $17;$cnt$214 = $cnt$1;$s$215 = $s$09;
    while(1) {
     $22 = HEAP32[$23>>2]|0;
     $24 = (_wcrtomb($s$215,$22,0)|0);
     $25 = (($24) + 1)|0;
     $26 = ($25>>>0)<(2);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $28 = HEAP32[$ws>>2]|0;
     $29 = ((($28)) + 4|0);
     HEAP32[$ws>>2] = $29;
     $30 = (($$216) + -1)|0;
     $31 = (($s$215) + ($24)|0);
     $32 = (($$313) - ($24))|0;
     $33 = (($cnt$214) + 1)|0;
     $34 = ($$313|0)!=($24|0);
     $35 = ($30|0)!=(0);
     $36 = $34 & $35;
     if ($36) {
      $$216 = $30;$$313 = $32;$23 = $29;$cnt$214 = $33;$s$215 = $31;
     } else {
      $cnt$3 = $33;
      break L8;
     }
    }
    $27 = ($$lcssa|0)==(0);
    if ($27) {
     HEAP32[$ws>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
    } else {
     $cnt$3 = -1;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $37 = HEAP32[$ws>>2]|0;
 HEAP32[$wcs>>2] = $37;
 STACKTOP = sp;return ($cnt$3|0);
}
function _wcsrtombs($s,$ws,$n,$st) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa82 = 0, $$5 = 0, $$pn = 0, $$pre = 0;
 var $$pre43 = 0, $$pre44 = 0, $$pre45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $buf = sp;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $2 = HEAP32[$ws>>2]|0;
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==(0);
  if ($4) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$0218 = 0;$5 = $3;$ws2$019 = $2;
  }
  while(1) {
   $6 = ($5>>>0)>(127);
   if ($6) {
    $7 = (_wcrtomb($buf,$5,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     $$0 = -1;
     label = 26;
     break;
    } else {
     $$pn = $7;
    }
   } else {
    $$pn = 1;
   }
   $$13 = (($$pn) + ($$0218))|0;
   $9 = ((($ws2$019)) + 4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $$0 = $$13;
    label = 26;
    break;
   } else {
    $$0218 = $$13;$5 = $10;$ws2$019 = $9;
   }
  }
  if ((label|0) == 26) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1 = ($n>>>0)>(3);
 L14: do {
  if ($1) {
   $$pre = HEAP32[$ws>>2]|0;
   $$0129 = $s;$$2428 = $n;$14 = $$pre;
   while(1) {
    $13 = HEAP32[$14>>2]|0;
    $15 = (($13) + -1)|0;
    $16 = ($15>>>0)>(126);
    if ($16) {
     $17 = ($13|0)==(0);
     if ($17) {
      $$0129$lcssa = $$0129;$$2428$lcssa = $$2428;
      break;
     }
     $19 = (_wcrtomb($$0129,$13,0)|0);
     $20 = ($19|0)==(-1);
     if ($20) {
      $$0 = -1;
      label = 26;
      break;
     }
     $21 = (($$0129) + ($19)|0);
     $22 = (($$2428) - ($19))|0;
     $$1 = $21;$$35 = $22;$27 = $14;
    } else {
     $23 = $13&255;
     $24 = ((($$0129)) + 1|0);
     HEAP8[$$0129>>0] = $23;
     $25 = (($$2428) + -1)|0;
     $$pre43 = HEAP32[$ws>>2]|0;
     $$1 = $24;$$35 = $25;$27 = $$pre43;
    }
    $26 = ((($27)) + 4|0);
    HEAP32[$ws>>2] = $26;
    $28 = ($$35>>>0)>(3);
    if ($28) {
     $$0129 = $$1;$$2428 = $$35;$14 = $26;
    } else {
     $$01$lcssa = $$1;$$24$lcssa = $$35;
     break L14;
    }
   }
   if ((label|0) == 26) {
    STACKTOP = sp;return ($$0|0);
   }
   HEAP8[$$0129$lcssa>>0] = 0;
   HEAP32[$ws>>2] = 0;
   $18 = (($n) - ($$2428$lcssa))|0;
   $$0 = $18;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$01$lcssa = $s;$$24$lcssa = $n;
  }
 } while(0);
 $12 = ($$24$lcssa|0)==(0);
 if ($12) {
  $$0 = $n;
  STACKTOP = sp;return ($$0|0);
 }
 $$pre44 = HEAP32[$ws>>2]|0;
 $$223 = $$01$lcssa;$$422 = $$24$lcssa;$30 = $$pre44;
 while(1) {
  $29 = HEAP32[$30>>2]|0;
  $31 = (($29) + -1)|0;
  $32 = ($31>>>0)>(126);
  if ($32) {
   $33 = ($29|0)==(0);
   if ($33) {
    $$223$lcssa = $$223;$$422$lcssa = $$422;
    label = 19;
    break;
   }
   $35 = (_wcrtomb($buf,$29,0)|0);
   $36 = ($35|0)==(-1);
   if ($36) {
    $$0 = -1;
    label = 26;
    break;
   }
   $37 = ($$422>>>0)<($35>>>0);
   if ($37) {
    $$422$lcssa82 = $$422;
    label = 22;
    break;
   }
   $39 = HEAP32[$30>>2]|0;
   (_wcrtomb($$223,$39,0)|0);
   $40 = (($$223) + ($35)|0);
   $41 = (($$422) - ($35))|0;
   $$3 = $40;$$5 = $41;$46 = $30;
  } else {
   $42 = $29&255;
   $43 = ((($$223)) + 1|0);
   HEAP8[$$223>>0] = $42;
   $44 = (($$422) + -1)|0;
   $$pre45 = HEAP32[$ws>>2]|0;
   $$3 = $43;$$5 = $44;$46 = $$pre45;
  }
  $45 = ((($46)) + 4|0);
  HEAP32[$ws>>2] = $45;
  $47 = ($$5|0)==(0);
  if ($47) {
   $$0 = $n;
   label = 26;
   break;
  } else {
   $$223 = $$3;$$422 = $$5;$30 = $45;
  }
 }
 if ((label|0) == 19) {
  HEAP8[$$223$lcssa>>0] = 0;
  HEAP32[$ws>>2] = 0;
  $34 = (($n) - ($$422$lcssa))|0;
  $$0 = $34;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 22) {
  $38 = (($n) - ($$422$lcssa82))|0;
  $$0 = $38;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 26) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = (_memchr($1,0,$2)|0);
 $4 = ($3|0)==(0|0);
 $5 = $3;
 $6 = $1;
 $7 = (($5) - ($6))|0;
 $k$0 = $4 ? $2 : $7;
 $8 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $8 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $9 = (($1) + ($k$0$len)|0);
 $10 = ((($f)) + 4|0);
 HEAP32[$10>>2] = $9;
 $11 = (($1) + ($k$0)|0);
 $12 = ((($f)) + 8|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$0>>2] = $11;
 return ($k$0$len|0);
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vasprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap2 = sp;
 $0 = (_malloc(240)|0);
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = -1;
  } else {
   $vacopy_currentptr = HEAP32[$ap>>2]|0;
   HEAP32[$ap2>>2] = $vacopy_currentptr;
   $2 = (_vsnprintf($0,240,$fmt,$ap2)|0);
   $3 = ($2>>>0)<(240);
   if ($3) {
    $4 = (($2) + 1)|0;
    $5 = (_realloc($0,$4)|0);
    $6 = ($5|0)!=(0|0);
    $7 = $6 ? $5 : $0;
    HEAP32[$s>>2] = $7;
    $$0 = $2;
    break;
   }
   _free($0);
   $8 = ($2|0)<(0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = (($2) + 1)|0;
    $10 = (_malloc($9)|0);
    HEAP32[$s>>2] = $10;
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$0 = -1;
    } else {
     $12 = (_vsnprintf($10,$9,$fmt,$ap)|0);
     $$0 = $12;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _MUSL_vfscanf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$9 = 0, $$lcssa = 0, $$lcssa38 = 0, $$lcssa520 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi224Z2D = 0, $$pre208 = 0, $$pre210 = 0, $$pre212 = 0, $$pre214 = 0, $$pre216 = 0, $$pre220 = 0, $$pre222 = 0, $$pre223 = 0;
 var $$size$0 = 0, $$width$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0.0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0.0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0203 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $base$0 = 0, $c$0100 = 0, $dest$0 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0;
 var $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0, $factor16 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$lcssa = 0, $i$0$ph20 = 0, $i$0$ph20$lcssa = 0, $i$0$ph20$us105 = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0;
 var $isdigit = 0, $isdigit7 = 0, $isdigit795 = 0, $isdigittmp = 0, $isdigittmp6 = 0, $isdigittmp694 = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0$ = 0, $matches$0110 = 0, $matches$0110$lcssa = 0, $matches$0110501 = 0, $matches$1 = 0, $matches$2 = 0, $matches$3 = 0, $not$ = 0, $or$cond$us = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond8 = 0;
 var $p$0116 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$396 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0115 = 0, $pos$1 = 0, $pos$2 = 0, $s$0108 = 0, $s$0108$lcssa = 0;
 var $s$1 = 0, $s$2$ph = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $scanset = 0, $size$0 = 0, $st = 0, $vacopy_currentptr = 0, $wc = 0, $wcs$0109 = 0, $wcs$0109$lcssa = 0, $wcs$1 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph138 = 0;
 var $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$097 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $ap2$i = sp + 16|0;
 $st = sp + 8|0;
 $scanset = sp + 33|0;
 $wc = sp;
 $0 = sp + 32|0;
 $1 = HEAP8[$fmt>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $matches$3 = 0;
  STACKTOP = sp;return ($matches$3|0);
 }
 $3 = ((($f)) + 4|0);
 $4 = ((($f)) + 100|0);
 $5 = ((($f)) + 108|0);
 $6 = ((($f)) + 8|0);
 $7 = ((($scanset)) + 10|0);
 $8 = ((($scanset)) + 33|0);
 $9 = ((($st)) + 4|0);
 $10 = ((($scanset)) + 46|0);
 $11 = ((($scanset)) + 94|0);
 $13 = $1;$matches$0110 = 0;$p$0116 = $fmt;$pos$0115 = 0;$s$0108 = 0;$wcs$0109 = 0;
 L4: while(1) {
  $12 = $13&255;
  $14 = (_isspace($12)|0);
  $15 = ($14|0)==(0);
  L6: do {
   if ($15) {
    $42 = HEAP8[$p$0116>>0]|0;
    $43 = ($42<<24>>24)==(37);
    L21: do {
     if ($43) {
      $44 = ((($p$0116)) + 1|0);
      $45 = HEAP8[$44>>0]|0;
      do {
       if ((($45<<24>>24) == 37)) {
        break L21;
       } else if ((($45<<24>>24) == 42)) {
        $66 = ((($p$0116)) + 2|0);
        $dest$0 = 0;$p$2 = $66;
       } else {
        $67 = $45&255;
        $isdigittmp = (($67) + -48)|0;
        $isdigit = ($isdigittmp>>>0)<(10);
        if ($isdigit) {
         $68 = ((($p$0116)) + 2|0);
         $69 = HEAP8[$68>>0]|0;
         $70 = ($69<<24>>24)==(36);
         if ($70) {
          $vacopy_currentptr = HEAP32[$ap>>2]|0;
          HEAP32[$ap2$i>>2] = $vacopy_currentptr;
          $i$0$i = $isdigittmp;
          while(1) {
           $71 = ($i$0$i>>>0)>(1);
           $arglist_current = HEAP32[$ap2$i>>2]|0;
           $72 = $arglist_current;
           $73 = ((0) + 4|0);
           $expanded4 = $73;
           $expanded = (($expanded4) - 1)|0;
           $74 = (($72) + ($expanded))|0;
           $75 = ((0) + 4|0);
           $expanded8 = $75;
           $expanded7 = (($expanded8) - 1)|0;
           $expanded6 = $expanded7 ^ -1;
           $76 = $74 & $expanded6;
           $77 = $76;
           $78 = HEAP32[$77>>2]|0;
           $arglist_next = ((($77)) + 4|0);
           HEAP32[$ap2$i>>2] = $arglist_next;
           $79 = (($i$0$i) + -1)|0;
           if ($71) {
            $i$0$i = $79;
           } else {
            $$lcssa = $78;
            break;
           }
          }
          $80 = ((($p$0116)) + 3|0);
          $dest$0 = $$lcssa;$p$2 = $80;
          break;
         }
        }
        $arglist_current2 = HEAP32[$ap>>2]|0;
        $81 = $arglist_current2;
        $82 = ((0) + 4|0);
        $expanded11 = $82;
        $expanded10 = (($expanded11) - 1)|0;
        $83 = (($81) + ($expanded10))|0;
        $84 = ((0) + 4|0);
        $expanded15 = $84;
        $expanded14 = (($expanded15) - 1)|0;
        $expanded13 = $expanded14 ^ -1;
        $85 = $83 & $expanded13;
        $86 = $85;
        $87 = HEAP32[$86>>2]|0;
        $arglist_next3 = ((($86)) + 4|0);
        HEAP32[$ap>>2] = $arglist_next3;
        $dest$0 = $87;$p$2 = $44;
       }
      } while(0);
      $88 = HEAP8[$p$2>>0]|0;
      $89 = $88&255;
      $isdigittmp694 = (($89) + -48)|0;
      $isdigit795 = ($isdigittmp694>>>0)<(10);
      if ($isdigit795) {
       $93 = $89;$p$396 = $p$2;$width$097 = 0;
       while(1) {
        $90 = ($width$097*10)|0;
        $91 = (($90) + -48)|0;
        $92 = (($91) + ($93))|0;
        $94 = ((($p$396)) + 1|0);
        $95 = HEAP8[$94>>0]|0;
        $96 = $95&255;
        $isdigittmp6 = (($96) + -48)|0;
        $isdigit7 = ($isdigittmp6>>>0)<(10);
        if ($isdigit7) {
         $93 = $96;$p$396 = $94;$width$097 = $92;
        } else {
         $$lcssa38 = $95;$p$3$lcssa = $94;$width$0$lcssa = $92;
         break;
        }
       }
      } else {
       $$lcssa38 = $88;$p$3$lcssa = $p$2;$width$0$lcssa = 0;
      }
      $97 = ($$lcssa38<<24>>24)==(109);
      if ($97) {
       $98 = ($dest$0|0)!=(0|0);
       $99 = $98&1;
       $100 = ((($p$3$lcssa)) + 1|0);
       $$pre208 = HEAP8[$100>>0]|0;
       $103 = $$pre208;$alloc$0 = $99;$p$4 = $100;$s$1 = 0;$wcs$1 = 0;
      } else {
       $103 = $$lcssa38;$alloc$0 = 0;$p$4 = $p$3$lcssa;$s$1 = $s$0108;$wcs$1 = $wcs$0109;
      }
      $101 = ((($p$4)) + 1|0);
      $102 = $103&255;
      switch ($102|0) {
      case 108:  {
       $107 = HEAP8[$101>>0]|0;
       $108 = ($107<<24>>24)==(108);
       $109 = ((($p$4)) + 2|0);
       $$11 = $108 ? $109 : $101;
       $$12 = $108 ? 3 : 1;
       $p$5 = $$11;$size$0 = $$12;
       break;
      }
      case 116: case 122:  {
       $p$5 = $101;$size$0 = 1;
       break;
      }
      case 76:  {
       $p$5 = $101;$size$0 = 2;
       break;
      }
      case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
       $p$5 = $p$4;$size$0 = 0;
       break;
      }
      case 106:  {
       $p$5 = $101;$size$0 = 3;
       break;
      }
      case 104:  {
       $104 = HEAP8[$101>>0]|0;
       $105 = ($104<<24>>24)==(104);
       $106 = ((($p$4)) + 2|0);
       $$9 = $105 ? $106 : $101;
       $$10 = $105 ? -2 : -1;
       $p$5 = $$9;$size$0 = $$10;
       break;
      }
      default: {
       $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
       label = 164;
       break L4;
      }
      }
      $110 = HEAP8[$p$5>>0]|0;
      $111 = $110&255;
      $112 = $111 & 47;
      $113 = ($112|0)==(3);
      $114 = $111 | 32;
      $$ = $113 ? $114 : $111;
      $$size$0 = $113 ? 1 : $size$0;
      if ((($$|0) == 99)) {
       $115 = ($width$0$lcssa|0)<(1);
       $$width$0 = $115 ? 1 : $width$0$lcssa;
       $pos$1 = $pos$0115;$width$1 = $$width$0;
      } else if ((($$|0) == 91)) {
       $pos$1 = $pos$0115;$width$1 = $width$0$lcssa;
      } else if ((($$|0) == 110)) {
       $116 = ($pos$0115|0)<(0);
       $117 = $116 << 31 >> 31;
       $118 = ($dest$0|0)==(0|0);
       if ($118) {
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       switch ($$size$0|0) {
       case -2:  {
        $119 = $pos$0115&255;
        HEAP8[$dest$0>>0] = $119;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -1:  {
        $120 = $pos$0115&65535;
        HEAP16[$dest$0>>1] = $120;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 0:  {
        HEAP32[$dest$0>>2] = $pos$0115;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 1:  {
        HEAP32[$dest$0>>2] = $pos$0115;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 3:  {
        $121 = $dest$0;
        $122 = $121;
        HEAP32[$122>>2] = $pos$0115;
        $123 = (($121) + 4)|0;
        $124 = $123;
        HEAP32[$124>>2] = $117;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       default: {
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       }
      } else {
       ___shlim($f,0);
       while(1) {
        $125 = HEAP32[$3>>2]|0;
        $126 = HEAP32[$4>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = ((($125)) + 1|0);
         HEAP32[$3>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $132 = $130;
        } else {
         $131 = (___shgetc($f)|0);
         $132 = $131;
        }
        $133 = (_isspace($132)|0);
        $134 = ($133|0)==(0);
        if ($134) {
         break;
        }
       }
       $135 = HEAP32[$4>>2]|0;
       $136 = ($135|0)==(0|0);
       $$pre210 = HEAP32[$3>>2]|0;
       if ($136) {
        $140 = $$pre210;
       } else {
        $137 = ((($$pre210)) + -1|0);
        HEAP32[$3>>2] = $137;
        $140 = $137;
       }
       $138 = HEAP32[$5>>2]|0;
       $139 = HEAP32[$6>>2]|0;
       $141 = $140;
       $142 = $139;
       $143 = (($138) + ($pos$0115))|0;
       $144 = (($143) + ($141))|0;
       $145 = (($144) - ($142))|0;
       $pos$1 = $145;$width$1 = $width$0$lcssa;
      }
      ___shlim($f,$width$1);
      $146 = HEAP32[$3>>2]|0;
      $147 = HEAP32[$4>>2]|0;
      $148 = ($146>>>0)<($147>>>0);
      if ($148) {
       $149 = ((($146)) + 1|0);
       HEAP32[$3>>2] = $149;
       $152 = $147;
      } else {
       $150 = (___shgetc($f)|0);
       $151 = ($150|0)<(0);
       if ($151) {
        $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
        label = 164;
        break L4;
       }
       $$pre212 = HEAP32[$4>>2]|0;
       $152 = $$pre212;
      }
      $153 = ($152|0)==(0|0);
      if (!($153)) {
       $154 = HEAP32[$3>>2]|0;
       $155 = ((($154)) + -1|0);
       HEAP32[$3>>2] = $155;
      }
      L78: do {
       switch ($$|0) {
       case 91: case 99: case 115:  {
        $156 = ($$|0)==(99);
        $157 = $$ & 239;
        $158 = ($157|0)==(99);
        L80: do {
         if ($158) {
          $159 = ($$|0)==(115);
          _memset(($scanset|0),-1,257)|0;
          HEAP8[$scanset>>0] = 0;
          if ($159) {
           HEAP8[$8>>0] = 0;
           ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;HEAP8[$7+4>>0]=0|0;
           $p$9 = $p$5;
          } else {
           $p$9 = $p$5;
          }
         } else {
          $160 = ((($p$5)) + 1|0);
          $161 = HEAP8[$160>>0]|0;
          $162 = ($161<<24>>24)==(94);
          $163 = ((($p$5)) + 2|0);
          $invert$0 = $162&1;
          $164 = $162 ? $160 : $p$5;
          $p$6 = $162 ? $163 : $160;
          $165 = $162&1;
          _memset(($scanset|0),($165|0),257)|0;
          HEAP8[$scanset>>0] = 0;
          $166 = HEAP8[$p$6>>0]|0;
          if ((($166<<24>>24) == 45)) {
           $167 = ((($164)) + 2|0);
           $168 = $invert$0 ^ 1;
           $169 = $168&255;
           HEAP8[$10>>0] = $169;
           $$pre$phi224Z2D = $169;$p$7$ph = $167;
          } else if ((($166<<24>>24) == 93)) {
           $170 = ((($164)) + 2|0);
           $171 = $invert$0 ^ 1;
           $172 = $171&255;
           HEAP8[$11>>0] = $172;
           $$pre$phi224Z2D = $172;$p$7$ph = $170;
          } else {
           $$pre222 = $invert$0 ^ 1;
           $$pre223 = $$pre222&255;
           $$pre$phi224Z2D = $$pre223;$p$7$ph = $p$6;
          }
          $p$7 = $p$7$ph;
          while(1) {
           $173 = HEAP8[$p$7>>0]|0;
           if ((($173<<24>>24) == 93)) {
            $p$9 = $p$7;
            break L80;
           } else if ((($173<<24>>24) == 45)) {
            $174 = ((($p$7)) + 1|0);
            $175 = HEAP8[$174>>0]|0;
            if ((($175<<24>>24) == 93) | (($175<<24>>24) == 0)) {
             $186 = 45;$p$8 = $p$7;
            } else {
             $176 = ((($p$7)) + -1|0);
             $177 = HEAP8[$176>>0]|0;
             $178 = ($177&255)<($175&255);
             if ($178) {
              $179 = $177&255;
              $c$0100 = $179;
              while(1) {
               $180 = (($c$0100) + 1)|0;
               $181 = (($scanset) + ($180)|0);
               HEAP8[$181>>0] = $$pre$phi224Z2D;
               $182 = HEAP8[$174>>0]|0;
               $183 = $182&255;
               $184 = ($180|0)<($183|0);
               if ($184) {
                $c$0100 = $180;
               } else {
                $186 = $182;$p$8 = $174;
                break;
               }
              }
             } else {
              $186 = $175;$p$8 = $174;
             }
            }
           } else if ((($173<<24>>24) == 0)) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
            label = 164;
            break L4;
           } else {
            $186 = $173;$p$8 = $p$7;
           }
           $185 = $186&255;
           $187 = (($185) + 1)|0;
           $188 = (($scanset) + ($187)|0);
           HEAP8[$188>>0] = $$pre$phi224Z2D;
           $189 = ((($p$8)) + 1|0);
           $p$7 = $189;
          }
         }
        } while(0);
        $190 = (($width$1) + 1)|0;
        $191 = $156 ? $190 : 31;
        $192 = ($$size$0|0)==(1);
        $193 = ($alloc$0|0)!=(0);
        L99: do {
         if ($192) {
          if ($193) {
           $194 = $191 << 2;
           $195 = (_malloc($194)|0);
           $196 = ($195|0)==(0|0);
           if ($196) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $195;
            label = 164;
            break L4;
           } else {
            $wcs$2 = $195;
           }
          } else {
           $wcs$2 = $dest$0;
          }
          HEAP32[$st>>2] = 0;
          HEAP32[$9>>2] = 0;
          $i$0$ph = 0;$k$0$ph = $191;$wcs$3$ph = $wcs$2;
          L105: while(1) {
           $197 = ($wcs$3$ph|0)==(0|0);
           if ($197) {
            $198 = ($i$0$ph|0)==($k$0$ph|0);
            $or$cond$us = $193 & $198;
            while(1) {
             $201 = HEAP32[$3>>2]|0;
             $211 = HEAP32[$4>>2]|0;
             $212 = ($201>>>0)<($211>>>0);
             if ($212) {
              $200 = ((($201)) + 1|0);
              HEAP32[$3>>2] = $200;
              $202 = HEAP8[$201>>0]|0;
              $203 = $202&255;
              $205 = $203;
             } else {
              $199 = (___shgetc($f)|0);
              $205 = $199;
             }
             $204 = (($205) + 1)|0;
             $206 = (($scanset) + ($204)|0);
             $207 = HEAP8[$206>>0]|0;
             $208 = ($207<<24>>24)==(0);
             if ($208) {
              $i$0$ph20$lcssa = $i$0$ph;$wcs$3$ph138 = 0;
              break L105;
             }
             $209 = $205&255;
             HEAP8[$0>>0] = $209;
             $210 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($210|0) == -2)) {
              continue;
             } else if ((($210|0) == -1)) {
              $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = 0;
              label = 164;
              break L4;
             }
             if ($or$cond$us) {
              $i$1$lcssa = $i$0$ph;
              break;
             }
            }
           } else {
            if ($193) {
             $i$0$ph20$us105 = $i$0$ph;
            } else {
             $i$0$ph$lcssa = $i$0$ph;$wcs$3$ph$lcssa = $wcs$3$ph;
             label = 86;
             break;
            }
            while(1) {
             while(1) {
              $215 = HEAP32[$3>>2]|0;
              $229 = HEAP32[$4>>2]|0;
              $230 = ($215>>>0)<($229>>>0);
              if ($230) {
               $214 = ((($215)) + 1|0);
               HEAP32[$3>>2] = $214;
               $216 = HEAP8[$215>>0]|0;
               $217 = $216&255;
               $219 = $217;
              } else {
               $213 = (___shgetc($f)|0);
               $219 = $213;
              }
              $218 = (($219) + 1)|0;
              $220 = (($scanset) + ($218)|0);
              $221 = HEAP8[$220>>0]|0;
              $222 = ($221<<24>>24)==(0);
              if ($222) {
               $i$0$ph20$lcssa = $i$0$ph20$us105;$wcs$3$ph138 = $wcs$3$ph;
               break L105;
              }
              $223 = $219&255;
              HEAP8[$0>>0] = $223;
              $224 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($224|0) == -1)) {
               $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph;
               label = 164;
               break L4;
              } else if (!((($224|0) == -2))) {
               break;
              }
             }
             $225 = HEAP32[$wc>>2]|0;
             $226 = (($i$0$ph20$us105) + 1)|0;
             $227 = (($wcs$3$ph) + ($i$0$ph20$us105<<2)|0);
             HEAP32[$227>>2] = $225;
             $228 = ($226|0)==($k$0$ph|0);
             if ($228) {
              $i$1$lcssa = $k$0$ph;
              break;
             } else {
              $i$0$ph20$us105 = $226;
             }
            }
           }
           $factor = $k$0$ph << 1;
           $248 = $factor | 1;
           $249 = $248 << 2;
           $250 = (_realloc($wcs$3$ph,$249)|0);
           $251 = ($250|0)==(0|0);
           if ($251) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph;
            label = 164;
            break L4;
           }
           $i$0$ph = $i$1$lcssa;$k$0$ph = $248;$wcs$3$ph = $250;
          }
          L130: do {
           if ((label|0) == 86) {
            label = 0;
            $i$0$ph20 = $i$0$ph$lcssa;
            while(1) {
             while(1) {
              $231 = HEAP32[$3>>2]|0;
              $232 = HEAP32[$4>>2]|0;
              $233 = ($231>>>0)<($232>>>0);
              if ($233) {
               $234 = ((($231)) + 1|0);
               HEAP32[$3>>2] = $234;
               $235 = HEAP8[$231>>0]|0;
               $236 = $235&255;
               $239 = $236;
              } else {
               $237 = (___shgetc($f)|0);
               $239 = $237;
              }
              $238 = (($239) + 1)|0;
              $240 = (($scanset) + ($238)|0);
              $241 = HEAP8[$240>>0]|0;
              $242 = ($241<<24>>24)==(0);
              if ($242) {
               $i$0$ph20$lcssa = $i$0$ph20;$wcs$3$ph138 = $wcs$3$ph$lcssa;
               break L130;
              }
              $243 = $239&255;
              HEAP8[$0>>0] = $243;
              $244 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($244|0) == -1)) {
               $alloc$0203 = 0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa;
               label = 164;
               break L4;
              } else if (!((($244|0) == -2))) {
               break;
              }
             }
             $245 = HEAP32[$wc>>2]|0;
             $246 = (($i$0$ph20) + 1)|0;
             $247 = (($wcs$3$ph$lcssa) + ($i$0$ph20<<2)|0);
             HEAP32[$247>>2] = $245;
             $i$0$ph20 = $246;
            }
           }
          } while(0);
          $252 = (_mbsinit($st)|0);
          $253 = ($252|0)==(0);
          if ($253) {
           $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph138;
           label = 164;
           break L4;
          } else {
           $i$4 = $i$0$ph20$lcssa;$s$3 = 0;$wcs$4 = $wcs$3$ph138;
          }
         } else {
          if ($193) {
           $254 = (_malloc($191)|0);
           $255 = ($254|0)==(0|0);
           if ($255) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = 0;
            label = 164;
            break L4;
           } else {
            $i$2$ph = 0;$k$1$ph = $191;$s$2$ph = $254;
           }
           while(1) {
            $i$2 = $i$2$ph;
            while(1) {
             $256 = HEAP32[$3>>2]|0;
             $257 = HEAP32[$4>>2]|0;
             $258 = ($256>>>0)<($257>>>0);
             if ($258) {
              $259 = ((($256)) + 1|0);
              HEAP32[$3>>2] = $259;
              $260 = HEAP8[$256>>0]|0;
              $261 = $260&255;
              $264 = $261;
             } else {
              $262 = (___shgetc($f)|0);
              $264 = $262;
             }
             $263 = (($264) + 1)|0;
             $265 = (($scanset) + ($263)|0);
             $266 = HEAP8[$265>>0]|0;
             $267 = ($266<<24>>24)==(0);
             if ($267) {
              $i$4 = $i$2;$s$3 = $s$2$ph;$wcs$4 = 0;
              break L99;
             }
             $268 = $264&255;
             $269 = (($i$2) + 1)|0;
             $270 = (($s$2$ph) + ($i$2)|0);
             HEAP8[$270>>0] = $268;
             $271 = ($269|0)==($k$1$ph|0);
             if ($271) {
              break;
             } else {
              $i$2 = $269;
             }
            }
            $factor16 = $k$1$ph << 1;
            $272 = $factor16 | 1;
            $273 = (_realloc($s$2$ph,$272)|0);
            $274 = ($273|0)==(0|0);
            if ($274) {
             $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$2$ph;$wcs$7 = 0;
             label = 164;
             break L4;
            } else {
             $i$2$ph$phi = $k$1$ph;$k$1$ph = $272;$s$2$ph = $273;$i$2$ph = $i$2$ph$phi;
            }
           }
          }
          $275 = ($dest$0|0)==(0|0);
          if ($275) {
           $293 = $152;
           while(1) {
            $291 = HEAP32[$3>>2]|0;
            $292 = ($291>>>0)<($293>>>0);
            if ($292) {
             $294 = ((($291)) + 1|0);
             HEAP32[$3>>2] = $294;
             $295 = HEAP8[$291>>0]|0;
             $296 = $295&255;
             $299 = $296;
            } else {
             $297 = (___shgetc($f)|0);
             $299 = $297;
            }
            $298 = (($299) + 1)|0;
            $300 = (($scanset) + ($298)|0);
            $301 = HEAP8[$300>>0]|0;
            $302 = ($301<<24>>24)==(0);
            if ($302) {
             $i$4 = 0;$s$3 = 0;$wcs$4 = 0;
             break L99;
            }
            $$pre216 = HEAP32[$4>>2]|0;
            $293 = $$pre216;
           }
          } else {
           $278 = $152;$i$3 = 0;
           while(1) {
            $276 = HEAP32[$3>>2]|0;
            $277 = ($276>>>0)<($278>>>0);
            if ($277) {
             $279 = ((($276)) + 1|0);
             HEAP32[$3>>2] = $279;
             $280 = HEAP8[$276>>0]|0;
             $281 = $280&255;
             $284 = $281;
            } else {
             $282 = (___shgetc($f)|0);
             $284 = $282;
            }
            $283 = (($284) + 1)|0;
            $285 = (($scanset) + ($283)|0);
            $286 = HEAP8[$285>>0]|0;
            $287 = ($286<<24>>24)==(0);
            if ($287) {
             $i$4 = $i$3;$s$3 = $dest$0;$wcs$4 = 0;
             break L99;
            }
            $288 = $284&255;
            $289 = (($i$3) + 1)|0;
            $290 = (($dest$0) + ($i$3)|0);
            HEAP8[$290>>0] = $288;
            $$pre214 = HEAP32[$4>>2]|0;
            $278 = $$pre214;$i$3 = $289;
           }
          }
         }
        } while(0);
        $303 = HEAP32[$4>>2]|0;
        $304 = ($303|0)==(0|0);
        $$pre220 = HEAP32[$3>>2]|0;
        if ($304) {
         $308 = $$pre220;
        } else {
         $305 = ((($$pre220)) + -1|0);
         HEAP32[$3>>2] = $305;
         $308 = $305;
        }
        $306 = HEAP32[$5>>2]|0;
        $307 = HEAP32[$6>>2]|0;
        $309 = $308;
        $310 = $307;
        $311 = (($309) - ($310))|0;
        $312 = (($311) + ($306))|0;
        $313 = ($312|0)==(0);
        if ($313) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$3;$wcs$9 = $wcs$4;
         break L4;
        }
        $$not = $156 ^ 1;
        $314 = ($312|0)==($width$1|0);
        $or$cond8 = $314 | $$not;
        if (!($or$cond8)) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$3;$wcs$9 = $wcs$4;
         break L4;
        }
        do {
         if ($193) {
          if ($192) {
           HEAP32[$dest$0>>2] = $wcs$4;
           break;
          } else {
           HEAP32[$dest$0>>2] = $s$3;
           break;
          }
         }
        } while(0);
        if ($156) {
         $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
        } else {
         $315 = ($wcs$4|0)==(0|0);
         if (!($315)) {
          $316 = (($wcs$4) + ($i$4<<2)|0);
          HEAP32[$316>>2] = 0;
         }
         $317 = ($s$3|0)==(0|0);
         if ($317) {
          $p$10 = $p$9;$s$4 = 0;$wcs$5 = $wcs$4;
         } else {
          $318 = (($s$3) + ($i$4)|0);
          HEAP8[$318>>0] = 0;
          $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
         }
        }
        break;
       }
       case 111:  {
        $base$0 = 8;
        label = 146;
        break;
       }
       case 117: case 100:  {
        $base$0 = 10;
        label = 146;
        break;
       }
       case 105:  {
        $base$0 = 0;
        label = 146;
        break;
       }
       case 120: case 88: case 112:  {
        $base$0 = 16;
        label = 146;
        break;
       }
       case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
        $338 = (+___floatscan($f,$$size$0,0));
        $339 = HEAP32[$5>>2]|0;
        $340 = HEAP32[$3>>2]|0;
        $341 = HEAP32[$6>>2]|0;
        $342 = $340;
        $343 = $341;
        $344 = (($343) - ($342))|0;
        $345 = ($339|0)==($344|0);
        if ($345) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$1;$wcs$9 = $wcs$1;
         break L4;
        }
        $346 = ($dest$0|0)==(0|0);
        if ($346) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         if ((($$size$0|0) == 0)) {
          $347 = $338;
          HEAPF32[$dest$0>>2] = $347;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L78;
         } else if ((($$size$0|0) == 1)) {
          HEAPF64[$dest$0>>3] = $338;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L78;
         } else if ((($$size$0|0) == 2)) {
          HEAPF64[$dest$0>>3] = $338;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L78;
         } else {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L78;
         }
        }
        break;
       }
       default: {
        $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
       }
       }
      } while(0);
      L199: do {
       if ((label|0) == 146) {
        label = 0;
        $319 = (___intscan($f,$base$0,0,-1,-1)|0);
        $320 = tempRet0;
        $321 = HEAP32[$5>>2]|0;
        $322 = HEAP32[$3>>2]|0;
        $323 = HEAP32[$6>>2]|0;
        $324 = $322;
        $325 = $323;
        $326 = (($325) - ($324))|0;
        $327 = ($321|0)==($326|0);
        if ($327) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$1;$wcs$9 = $wcs$1;
         break L4;
        }
        $328 = ($$|0)==(112);
        $329 = ($dest$0|0)!=(0|0);
        $or$cond3 = $329 & $328;
        if ($or$cond3) {
         $330 = $319;
         HEAP32[$dest$0>>2] = $330;
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
         break;
        }
        $331 = ($dest$0|0)==(0|0);
        if ($331) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         switch ($$size$0|0) {
         case -2:  {
          $332 = $319&255;
          HEAP8[$dest$0>>0] = $332;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
          break;
         }
         case -1:  {
          $333 = $319&65535;
          HEAP16[$dest$0>>1] = $333;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
          break;
         }
         case 3:  {
          $334 = $dest$0;
          $335 = $334;
          HEAP32[$335>>2] = $319;
          $336 = (($334) + 4)|0;
          $337 = $336;
          HEAP32[$337>>2] = $320;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
          break;
         }
         case 0:  {
          HEAP32[$dest$0>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
          break;
         }
         case 1:  {
          HEAP32[$dest$0>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
          break;
         }
         default: {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
         }
         }
        }
       }
      } while(0);
      $348 = HEAP32[$5>>2]|0;
      $349 = HEAP32[$3>>2]|0;
      $350 = HEAP32[$6>>2]|0;
      $351 = $349;
      $352 = $350;
      $353 = (($348) + ($pos$1))|0;
      $354 = (($353) + ($351))|0;
      $355 = (($354) - ($352))|0;
      $not$ = ($dest$0|0)!=(0|0);
      $356 = $not$&1;
      $matches$0$ = (($356) + ($matches$0110))|0;
      $matches$1 = $matches$0$;$p$11 = $p$10;$pos$2 = $355;$s$5 = $s$4;$wcs$6 = $wcs$5;
      break L6;
     }
    } while(0);
    $46 = $43&1;
    $47 = (($p$0116) + ($46)|0);
    ___shlim($f,0);
    $48 = HEAP32[$3>>2]|0;
    $49 = HEAP32[$4>>2]|0;
    $50 = ($48>>>0)<($49>>>0);
    if ($50) {
     $51 = ((($48)) + 1|0);
     HEAP32[$3>>2] = $51;
     $52 = HEAP8[$48>>0]|0;
     $53 = $52&255;
     $57 = $53;
    } else {
     $54 = (___shgetc($f)|0);
     $57 = $54;
    }
    $55 = HEAP8[$47>>0]|0;
    $56 = $55&255;
    $58 = ($57|0)==($56|0);
    if (!($58)) {
     $$lcssa520 = $57;$matches$0110$lcssa = $matches$0110;$s$0108$lcssa = $s$0108;$wcs$0109$lcssa = $wcs$0109;
     label = 19;
     break L4;
    }
    $65 = (($pos$0115) + 1)|0;
    $matches$1 = $matches$0110;$p$11 = $47;$pos$2 = $65;$s$5 = $s$0108;$wcs$6 = $wcs$0109;
   } else {
    $p$1 = $p$0116;
    while(1) {
     $16 = ((($p$1)) + 1|0);
     $17 = HEAP8[$16>>0]|0;
     $18 = $17&255;
     $19 = (_isspace($18)|0);
     $20 = ($19|0)==(0);
     if ($20) {
      $p$1$lcssa = $p$1;
      break;
     } else {
      $p$1 = $16;
     }
    }
    ___shlim($f,0);
    while(1) {
     $21 = HEAP32[$3>>2]|0;
     $22 = HEAP32[$4>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = ((($21)) + 1|0);
      HEAP32[$3>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $28 = $26;
     } else {
      $27 = (___shgetc($f)|0);
      $28 = $27;
     }
     $29 = (_isspace($28)|0);
     $30 = ($29|0)==(0);
     if ($30) {
      break;
     }
    }
    $31 = HEAP32[$4>>2]|0;
    $32 = ($31|0)==(0|0);
    $$pre = HEAP32[$3>>2]|0;
    if ($32) {
     $36 = $$pre;
    } else {
     $33 = ((($$pre)) + -1|0);
     HEAP32[$3>>2] = $33;
     $36 = $33;
    }
    $34 = HEAP32[$5>>2]|0;
    $35 = HEAP32[$6>>2]|0;
    $37 = $36;
    $38 = $35;
    $39 = (($34) + ($pos$0115))|0;
    $40 = (($39) + ($37))|0;
    $41 = (($40) - ($38))|0;
    $matches$1 = $matches$0110;$p$11 = $p$1$lcssa;$pos$2 = $41;$s$5 = $s$0108;$wcs$6 = $wcs$0109;
   }
  } while(0);
  $357 = ((($p$11)) + 1|0);
  $358 = HEAP8[$357>>0]|0;
  $359 = ($358<<24>>24)==(0);
  if ($359) {
   $matches$3 = $matches$1;
   label = 168;
   break;
  } else {
   $13 = $358;$matches$0110 = $matches$1;$p$0116 = $357;$pos$0115 = $pos$2;$s$0108 = $s$5;$wcs$0109 = $wcs$6;
  }
 }
 if ((label|0) == 19) {
  $59 = HEAP32[$4>>2]|0;
  $60 = ($59|0)==(0|0);
  if (!($60)) {
   $61 = HEAP32[$3>>2]|0;
   $62 = ((($61)) + -1|0);
   HEAP32[$3>>2] = $62;
  }
  $63 = ($$lcssa520|0)>(-1);
  $64 = ($matches$0110$lcssa|0)!=(0);
  $or$cond5 = $64 | $63;
  if ($or$cond5) {
   $matches$3 = $matches$0110$lcssa;
   STACKTOP = sp;return ($matches$3|0);
  } else {
   $alloc$1 = 0;$s$7 = $s$0108$lcssa;$wcs$8 = $wcs$0109$lcssa;
   label = 165;
  }
 }
 else if ((label|0) == 164) {
  $$old4 = ($matches$0110501|0)==(0);
  if ($$old4) {
   $alloc$1 = $alloc$0203;$s$7 = $s$6;$wcs$8 = $wcs$7;
   label = 165;
  } else {
   $alloc$2 = $alloc$0203;$matches$2 = $matches$0110501;$s$8 = $s$6;$wcs$9 = $wcs$7;
  }
 }
 else if ((label|0) == 168) {
  STACKTOP = sp;return ($matches$3|0);
 }
 if ((label|0) == 165) {
  $alloc$2 = $alloc$1;$matches$2 = -1;$s$8 = $s$7;$wcs$9 = $wcs$8;
 }
 $360 = ($alloc$2|0)==(0);
 if ($360) {
  $matches$3 = $matches$2;
  STACKTOP = sp;return ($matches$3|0);
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;return ($matches$3|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f = sp;
 dest=$f; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f)) + 32|0);
 HEAP32[$0>>2] = 18;
 $1 = ((($f)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ((($f)) + 76|0);
 HEAP32[$2>>2] = -1;
 $3 = ((($f)) + 84|0);
 HEAP32[$3>>2] = $s;
 $4 = (_MUSL_vfscanf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($4|0);
}
function _wcslen($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP32[$$0>>2]|0;
  $1 = ($0|0)==(0);
  $2 = ((($$0)) + 4|0);
  if ($1) {
   $$0$lcssa = $$0;
   break;
  } else {
   $$0 = $2;
  }
 }
 $3 = $$0$lcssa;
 $4 = $s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 return ($6|0);
}
function _wmemcpy($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$014 = 0, $$023 = 0, $$05 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 } else {
  $$014 = $n;$$023 = $s;$$05 = $d;
 }
 while(1) {
  $1 = (($$014) + -1)|0;
  $2 = ((($$023)) + 4|0);
  $3 = HEAP32[$$023>>2]|0;
  $4 = ((($$05)) + 4|0);
  HEAP32[$$05>>2] = $3;
  $5 = ($1|0)==(0);
  if ($5) {
   break;
  } else {
   $$014 = $1;$$023 = $2;$$05 = $4;
  }
 }
 return ($d|0);
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if ($5) {
   return ($d|0);
  } else {
   $$in = $n;
  }
  while(1) {
   $6 = (($$in) + -1)|0;
   $7 = (($s) + ($6<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (($d) + ($6<<2)|0);
   HEAP32[$9>>2] = $8;
   $10 = ($6|0)==(0);
   if ($10) {
    break;
   } else {
    $$in = $6;
   }
  }
  return ($d|0);
 } else {
  if ($5) {
   return ($d|0);
  } else {
   $$025 = $s;$$07 = $d;$$16 = $n;
  }
  while(1) {
   $11 = (($$16) + -1)|0;
   $12 = ((($$025)) + 4|0);
   $13 = HEAP32[$$025>>2]|0;
   $14 = ((($$07)) + 4|0);
   HEAP32[$$07>>2] = $13;
   $15 = ($11|0)==(0);
   if ($15) {
    break;
   } else {
    $$025 = $12;$$07 = $14;$$16 = $11;
   }
  }
  return ($d|0);
 }
 return (0)|0;
}
function _wmemset($d,$c,$n) {
 $d = $d|0;
 $c = $c|0;
 $n = $n|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 } else {
  $$012 = $n;$$03 = $d;
 }
 while(1) {
  $1 = (($$012) + -1)|0;
  $2 = ((($$03)) + 4|0);
  HEAP32[$$03>>2] = $c;
  $3 = ($1|0)==(0);
  if ($3) {
   break;
  } else {
   $$012 = $1;$$03 = $2;
  }
 }
 return ($d|0);
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 return ($0|0);
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[_stderr>>2]|0;
 (_vfprintf(($0|0),($format|0),($list|0))|0);
 (_fputc(10,($0|0))|0);
 _abort();
 // unreachable;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((2440|0),(2472|0),1164,(2560|0));
 // unreachable;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((2584|0),(9536|0),303,(2560|0));
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $0 = (_pthread_once((2616|0),(3|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[2608>>2]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(2624,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 $1 = (_malloc($$size)|0);
 $2 = ($1|0)==(0|0);
 L1: do {
  if ($2) {
   while(1) {
    $3 = (__ZSt15get_new_handlerv()|0);
    $4 = ($3|0)==(0|0);
    if ($4) {
     break;
    }
    FUNCTION_TABLE_v[$3 & 3]();
    $5 = (_malloc($$size)|0);
    $6 = ($5|0)==(0|0);
    if (!($6)) {
     $$lcssa = $5;
     break L1;
    }
   }
   $7 = (___cxa_allocate_exception(4)|0);
   HEAP32[$7>>2] = (1816);
   ___cxa_throw(($7|0),(1848|0),(33|0));
   // unreachable;
  } else {
   $$lcssa = $1;
  }
 } while(0);
 return ($$lcssa|0);
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZdaPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1816);
 return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2680|0);
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 FUNCTION_TABLE_v[$func & 3]();
 _abort_message(2696,$vararg_buffer);
 // unreachable;
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 48|0);
   $5 = $4;
   $6 = $5;
   $7 = HEAP32[$6>>2]|0;
   $8 = (($5) + 4)|0;
   $9 = $8;
   $10 = HEAP32[$9>>2]|0;
   $11 = $7 & -256;
   $12 = ($11|0)==(1126902528);
   $13 = ($10|0)==(1129074247);
   $14 = $12 & $13;
   if ($14) {
    $15 = ((($2)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    __ZSt11__terminatePFvvE($16);
    // unreachable;
   }
  }
 }
 $17 = HEAP32[450]|0;HEAP32[450] = (($17+0)|0);
 $18 = $17;
 __ZSt11__terminatePFvvE($18);
 // unreachable;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1864>>2]|0;HEAP32[1864>>2] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1904);
 $0 = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,2024,2080,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = ((($info)) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = ((($info)) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = ((($info)) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = ((($7)) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 7]($2,$info,$10,1);
    $11 = ((($info)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = ((($info)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = ((($info)) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = ((($info)) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = ((($info)) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = ((($info)) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = ((($info)) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = ((($info)) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 7]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 7]($8,$info,$12,$15);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
  } else {
   $3 = ((($this)) + 16|0);
   $4 = ((($this)) + 12|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (((($this)) + 16|0) + ($5<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
   $7 = ($5|0)>(1);
   if ($7) {
    $8 = ((($this)) + 24|0);
    $9 = ((($info)) + 54|0);
    $p$0 = $8;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
     $10 = HEAP8[$9>>0]|0;
     $11 = ($10<<24>>24)==(0);
     if (!($11)) {
      break L1;
     }
     $12 = ((($p$0)) + 8|0);
     $13 = ($12>>>0)<($6>>>0);
     if ($13) {
      $p$0 = $12;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = ((($0)) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = ((($info)) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = ((($info)) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = ((($info)) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = ((($info)) + 16|0);
 $11 = ((($info)) + 20|0);
 $12 = ((($info)) + 24|0);
 $13 = ((($info)) + 28|0);
 $14 = ((($info)) + 32|0);
 $15 = ((($info)) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 do {
  if ($16) {
   $17 = ((($info)) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = ((($18)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 7]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = ((($info)) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = ((($24)) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 3]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   if ((($27|0) == 0)) {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break;
   } else if (!((($27|0) == 1))) {
    $dst_ptr$0 = 0;
    break;
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = ((($info)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = ((($info)) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = ((($info)) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = ((($info)) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = ((($info)) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = ((($info)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = ((($info)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = ((($info)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = ((($info)) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = ((($info)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = ((($info)) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = ((($info)) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off023 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off025 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0;
 var $p$024 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $57 = ((($this)) + 16|0);
    $58 = ((($this)) + 12|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (((($this)) + 16|0) + ($59<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($57,$info,$current_ptr,$path_below,$use_strcmp);
    $61 = ((($this)) + 24|0);
    $62 = ($59|0)>(1);
    if (!($62)) {
     break;
    }
    $63 = ((($this)) + 8|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = $64 & 2;
    $66 = ($65|0)==(0);
    if ($66) {
     $67 = ((($info)) + 36|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ($68|0)==(1);
     if (!($69)) {
      $75 = $64 & 1;
      $76 = ($75|0)==(0);
      if ($76) {
       $79 = ((($info)) + 54|0);
       $p2$2 = $61;
       while(1) {
        $88 = HEAP8[$79>>0]|0;
        $89 = ($88<<24>>24)==(0);
        if (!($89)) {
         break L1;
        }
        $90 = HEAP32[$67>>2]|0;
        $91 = ($90|0)==(1);
        if ($91) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $92 = ((($p2$2)) + 8|0);
        $93 = ($92>>>0)<($60>>>0);
        if ($93) {
         $p2$2 = $92;
        } else {
         break L1;
        }
       }
      }
      $77 = ((($info)) + 24|0);
      $78 = ((($info)) + 54|0);
      $p2$1 = $61;
      while(1) {
       $80 = HEAP8[$78>>0]|0;
       $81 = ($80<<24>>24)==(0);
       if (!($81)) {
        break L1;
       }
       $82 = HEAP32[$67>>2]|0;
       $83 = ($82|0)==(1);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = ($84|0)==(1);
        if ($85) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $86 = ((($p2$1)) + 8|0);
       $87 = ($86>>>0)<($60>>>0);
       if ($87) {
        $p2$1 = $86;
       } else {
        break L1;
       }
      }
     }
    }
    $70 = ((($info)) + 54|0);
    $p2$0 = $61;
    while(1) {
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(0);
     if (!($72)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $73 = ((($p2$0)) + 8|0);
     $74 = ($73>>>0)<($60>>>0);
     if ($74) {
      $p2$0 = $73;
     } else {
      break L1;
     }
    }
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($this)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (((($this)) + 16|0) + ($24<<3)|0);
     $26 = ((($info)) + 52|0);
     $27 = ((($info)) + 53|0);
     $28 = ((($info)) + 54|0);
     $29 = ((($this)) + 8|0);
     $30 = ((($info)) + 24|0);
     $31 = ($24|0)>(0);
     L34: do {
      if ($31) {
       $32 = ((($this)) + 16|0);
       $does_dst_type_point_to_our_static_type$0$off023 = 0;$is_dst_type_derived_from_static_type$0$off025 = 0;$p$024 = $32;
       while(1) {
        HEAP8[$26>>0] = 0;
        HEAP8[$27>>0] = 0;
        __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$024,$info,$current_ptr,$current_ptr,1,$use_strcmp);
        $33 = HEAP8[$28>>0]|0;
        $34 = ($33<<24>>24)==(0);
        if (!($34)) {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off025;
         label = 20;
         break L34;
        }
        $35 = HEAP8[$27>>0]|0;
        $36 = ($35<<24>>24)==(0);
        do {
         if ($36) {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off025;
         } else {
          $37 = HEAP8[$26>>0]|0;
          $38 = ($37<<24>>24)==(0);
          if ($38) {
           $44 = HEAP32[$29>>2]|0;
           $45 = $44 & 1;
           $46 = ($45|0)==(0);
           if ($46) {
            $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = 1;
            label = 20;
            break L34;
           } else {
            $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = 1;
            break;
           }
          }
          $39 = HEAP32[$30>>2]|0;
          $40 = ($39|0)==(1);
          if ($40) {
           break L34;
          }
          $41 = HEAP32[$29>>2]|0;
          $42 = $41 & 2;
          $43 = ($42|0)==(0);
          if ($43) {
           break L34;
          } else {
           $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
          }
         }
        } while(0);
        $47 = ((($p$024)) + 8|0);
        $48 = ($47>>>0)<($25>>>0);
        if ($48) {
         $does_dst_type_point_to_our_static_type$0$off023 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off025 = $is_dst_type_derived_from_static_type$1$off0;$p$024 = $47;
        } else {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
         label = 20;
         break;
        }
       }
      } else {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0;$is_dst_type_derived_from_static_type$2$off0 = 0;
       label = 20;
      }
     } while(0);
     do {
      if ((label|0) == 20) {
       if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
        label = 24;
       } else {
        HEAP32[$14>>2] = $current_ptr;
        $49 = ((($info)) + 40|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = (($50) + 1)|0;
        HEAP32[$49>>2] = $51;
        $52 = ((($info)) + 36|0);
        $53 = HEAP32[$52>>2]|0;
        $54 = ($53|0)==(1);
        if ($54) {
         $55 = HEAP32[$30>>2]|0;
         $56 = ($55|0)==(2);
         if ($56) {
          HEAP8[$28>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           break;
          }
         } else {
          label = 24;
         }
        } else {
         label = 24;
        }
       }
       if ((label|0) == 24) {
        if ($is_dst_type_derived_from_static_type$2$off0) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 7]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 3]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = ((($this)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = ((($45)) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 3]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($info)) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = ((($info)) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = ((($27)) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 7]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = ((($info)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = ((($info)) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = ((($info)) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = ((($info)) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = ((($info)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = ((($info)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = ((($info)) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = ((($info)) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = ((($info)) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = ((($info)) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = ((($info)) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = ((($info)) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = ((($info)) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($info)) + 52|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ((($info)) + 53|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ((($this)) + 16|0);
  $8 = ((($this)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (((($this)) + 16|0) + ($9<<3)|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $11 = ($9|0)>(1);
  L4: do {
   if ($11) {
    $12 = ((($this)) + 24|0);
    $13 = ((($info)) + 24|0);
    $14 = ((($this)) + 8|0);
    $15 = ((($info)) + 54|0);
    $p$0 = $12;
    while(1) {
     $16 = HEAP8[$15>>0]|0;
     $17 = ($16<<24>>24)==(0);
     if (!($17)) {
      break L4;
     }
     $18 = HEAP8[$3>>0]|0;
     $19 = ($18<<24>>24)==(0);
     if ($19) {
      $25 = HEAP8[$5>>0]|0;
      $26 = ($25<<24>>24)==(0);
      if (!($26)) {
       $27 = HEAP32[$14>>2]|0;
       $28 = $27 & 1;
       $29 = ($28|0)==(0);
       if ($29) {
        break L4;
       }
      }
     } else {
      $20 = HEAP32[$13>>2]|0;
      $21 = ($20|0)==(1);
      if ($21) {
       break L4;
      }
      $22 = HEAP32[$14>>2]|0;
      $23 = $22 & 2;
      $24 = ($23|0)==(0);
      if ($24) {
       break L4;
      }
     }
     HEAP8[$3>>0] = 0;
     HEAP8[$5>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
     $30 = ((($p$0)) + 8|0);
     $31 = ($30>>>0)<($10>>>0);
     if ($31) {
      $p$0 = $30;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$3>>0] = $4;
  HEAP8[$5>>0] = $6;
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 7]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 31]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,2024,2192,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function __ZSt17__throw_bad_allocv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(1848|0),(33|0));
 // unreachable;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 80|0);
   $5 = ((($2)) + 48|0);
   $6 = $5;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = (($6) + 4)|0;
   $10 = $9;
   $11 = HEAP32[$10>>2]|0;
   $12 = $8 & -256;
   $13 = ($12|0)==(1126902528);
   $14 = ($11|0)==(1129074247);
   $15 = $13 & $14;
   if (!($15)) {
    HEAP32[$vararg_buffer7>>2] = 3000;
    _abort_message(2944,$vararg_buffer7);
    // unreachable;
   }
   $16 = ($8|0)==(1126902529);
   $17 = ($11|0)==(1129074247);
   $18 = $16 & $17;
   if ($18) {
    $19 = ((($2)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20;
   } else {
    $21 = $4;
   }
   HEAP32[$thrown_object>>2] = $21;
   $22 = HEAP32[$2>>2]|0;
   $23 = ((($22)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = HEAP32[1888>>2]|0;
   $26 = ((($25)) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iiii[$27 & 31](1888,$22,$thrown_object)|0);
   if ($28) {
    $29 = HEAP32[$thrown_object>>2]|0;
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($30)) + 8|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($29)|0);
    HEAP32[$vararg_buffer>>2] = 3000;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $24;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $33;
    _abort_message(2848,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = 3000;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $24;
    _abort_message(2896,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(2984,$vararg_buffer10);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((2608|0),(106|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2736,$vararg_buffer);
  // unreachable;
 }
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -4|0);
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2+-1)|0);
 $3 = (($2) + -1)|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = ((($5)) + -12|0);
  __ZdlPv($6);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[2608>>2]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2792,$vararg_buffer);
  // unreachable;
 }
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0;
 var $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i14$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0;
 var $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i15$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0;
 var $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0;
 var $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0;
 var $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0;
 var $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0;
 var $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0;
 var $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0;
 var $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0;
 var $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0;
 var $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[3016>>2]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (3056 + ($13<<2)|0);
    $$sum10 = (($13) + 2)|0;
    $15 = (3056 + ($$sum10<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[3016>>2] = $22;
     } else {
      $23 = HEAP32[(3032)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = ((($18)) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[(3024)>>2]|0;
   $35 = ($4>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = (3056 + ($65<<2)|0);
     $$sum4 = (($65) + 2)|0;
     $67 = (3056 + ($$sum4<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[3016>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[(3032)>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = ((($70)) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[(3024)>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($4))|0;
     $82 = $4 | 3;
     $83 = ((($68)) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($4)|0);
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[(3036)>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = (3056 + ($92<<2)|0);
      $94 = HEAP32[3016>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[3016>>2] = $98;
       $$pre105 = (($92) + 2)|0;
       $$pre106 = (3056 + ($$pre105<<2)|0);
       $$pre$phiZ2D = $$pre106;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = (3056 + ($$sum9<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[(3032)>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = ((($F4$0)) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = ((($90)) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = ((($90)) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[(3024)>>2] = $81;
     HEAP32[(3036)>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[(3020)>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $4;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = (3320 + ($130<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($132)) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($4))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = ((($t$0$i)) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = ((($t$0$i)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = ((($144)) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($4))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[(3032)>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($4)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = ((($v$0$i$lcssa)) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ((($v$0$i$lcssa)) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = ((($v$0$i$lcssa)) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = ((($v$0$i$lcssa)) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;$RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;$RP$0$i = $167;
       }
       while(1) {
        $173 = ((($R$0$i)) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if (!($175)) {
         $R$0$i = $174;$RP$0$i = $173;
         continue;
        }
        $176 = ((($R$0$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;$RP$0$i = $176;
        }
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = ((($v$0$i$lcssa)) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = ((($159)) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = ((($156)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = ((($v$0$i$lcssa)) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = (3320 + ($182<<2)|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[(3020)>>2]|0;
         $189 = $188 & $187;
         HEAP32[(3020)>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[(3032)>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = ((($154)) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = ((($154)) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[(3032)>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = ((($R$1$i)) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = ((($v$0$i$lcssa)) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = ((($R$1$i)) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = ((($201)) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = ((($v$0$i$lcssa)) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[(3032)>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = ((($R$1$i)) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = ((($207)) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($4))|0;
      $215 = $214 | 3;
      $216 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $4 | 3;
      $221 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i35 = $4 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i35)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($4))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[(3024)>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[(3036)>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = (3056 + ($229<<2)|0);
       $231 = HEAP32[3016>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[3016>>2] = $235;
        $$pre$i = (($229) + 2)|0;
        $$pre8$i = (3056 + ($$pre$i<<2)|0);
        $$pre$phi$iZ2D = $$pre8$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = (3056 + ($$sum3$i<<2)|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(3032)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = ((($F1$0$i)) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = ((($227)) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = ((($227)) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[(3024)>>2] = $rsize$0$i$lcssa;
      HEAP32[(3036)>>2] = $151;
     }
     $243 = ((($v$0$i$lcssa)) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(3020)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = (3320 + ($idx$0$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i|0)==(31);
       $279 = $idx$0$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $282;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = ((($t$0$i14)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$331$i = $286;$t$230$i = $t$0$i14;$v$332$i = $t$0$i14;
          label = 90;
          break L123;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = ((($t$0$i14)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = (((($t$0$i14)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = (3320 + ($327<<2)|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;$v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;$v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $331 = ((($t$230$i)) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = ((($t$230$i)) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = ((($t$230$i)) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[(3024)>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[(3032)>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = ((($v$3$lcssa$i)) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = ((($v$3$lcssa$i)) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = ((($v$3$lcssa$i)) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = ((($v$3$lcssa$i)) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;$RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;$RP$0$i17 = $364;
         }
         while(1) {
          $370 = ((($R$0$i18)) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if (!($372)) {
           $R$0$i18 = $371;$RP$0$i17 = $370;
           continue;
          }
          $373 = ((($R$0$i18)) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
           break;
          } else {
           $R$0$i18 = $374;$RP$0$i17 = $373;
          }
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = ((($v$3$lcssa$i)) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = ((($356)) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = ((($353)) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = ((($v$3$lcssa$i)) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = (3320 + ($379<<2)|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[(3020)>>2]|0;
           $386 = $385 & $384;
           HEAP32[(3020)>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[(3032)>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($351)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = ((($351)) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[(3032)>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($R$1$i20)) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = ((($v$3$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($R$1$i20)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = ((($v$3$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[(3032)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($R$1$i20)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L199: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2334 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2334)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = (3056 + ($424<<2)|0);
          $426 = HEAP32[3016>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[3016>>2] = $430;
           $$pre$i25 = (($424) + 2)|0;
           $$pre43$i = (3056 + ($$pre$i25<<2)|0);
           $$pre$phi$i26Z2D = $$pre43$i;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = (3056 + ($$sum17$i<<2)|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[(3032)>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = ((($F5$0$i)) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = (3320 + ($I7$0$i<<2)|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[(3020)>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[(3020)>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ((($475)) + 4|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = $477 & -8;
         $479 = ($478|0)==($rsize$3$lcssa$i|0);
         L217: do {
          if ($479) {
           $T$0$lcssa$i = $475;
          } else {
           $480 = ($I7$0$i|0)==(31);
           $481 = $I7$0$i >>> 1;
           $482 = (25 - ($481))|0;
           $483 = $480 ? 0 : $482;
           $484 = $rsize$3$lcssa$i << $483;
           $K12$029$i = $484;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = (((($T$028$i)) + 16|0) + ($491<<2)|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa232 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = ((($487)) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L217;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           $494 = HEAP32[(3032)>>2]|0;
           $495 = ($$lcssa232>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa232>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L199;
           }
          }
         } while(0);
         $499 = ((($T$0$lcssa$i)) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[(3032)>>2]|0;
         $502 = ($500>>>0)>=($501>>>0);
         $not$$i = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = $502 & $not$$i;
         if ($503) {
          $504 = ((($500)) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = ((($v$3$lcssa$i)) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[(3024)>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[(3036)>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[(3036)>>2] = $514;
   HEAP32[(3024)>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = ((($512)) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[(3024)>>2] = 0;
   HEAP32[(3036)>>2] = 0;
   $520 = $509 | 3;
   $521 = ((($512)) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = ((($512)) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[(3028)>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[(3028)>>2] = $528;
  $529 = HEAP32[(3040)>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[(3040)>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = ((($529)) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = ((($529)) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[3488>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[(3496)>>2] = $538;
    HEAP32[(3492)>>2] = $538;
    HEAP32[(3500)>>2] = -1;
    HEAP32[(3504)>>2] = -1;
    HEAP32[(3508)>>2] = 0;
    HEAP32[(3460)>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[3488>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[(3496)>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[(3456)>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[(3448)>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[(3460)>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L258: do {
  if ($560) {
   $561 = HEAP32[(3040)>>2]|0;
   $562 = ($561|0)==(0|0);
   L260: do {
    if ($562) {
     label = 174;
    } else {
     $sp$0$i$i = (3464);
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = ((($sp$0$i$i)) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa228 = $sp$0$i$i;$$lcssa230 = $565;
        break;
       }
      }
      $569 = ((($sp$0$i$i)) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 174;
       break L260;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $594 = HEAP32[(3028)>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa228>>2]|0;
      $600 = HEAP32[$$lcssa230>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      $$3$i = $602 ? $596 : 0;
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0323944$i = $$3$i;
       } else {
        $tbase$255$i = $598;$tsize$254$i = $$3$i;
        label = 194;
        break L258;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;$tsize$0$ph$i = $$3$i;
       label = 184;
      }
     } else {
      $tsize$0323944$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 174) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0323944$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[(3492)>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[(3448)>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[(3456)>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0323944$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       $ssize$0$$i = $593 ? $ssize$0$i : 0;
       if ($593) {
        $tbase$255$i = $572;$tsize$254$i = $ssize$0$$i;
        label = 194;
        break L258;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;$tsize$0$ph$i = $ssize$0$$i;
        label = 184;
       }
      } else {
       $tsize$0323944$i = 0;
      }
     }
    }
   } while(0);
   L280: do {
    if ((label|0) == 184) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond6$i = $607 & $or$cond5$i;
     do {
      if ($or$cond6$i) {
       $608 = HEAP32[(3496)>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0323944$i = $tsize$0$ph$i;
         break L280;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0323944$i = $tsize$0$ph$i;
     } else {
      $tbase$255$i = $br$0$ph$i;$tsize$254$i = $ssize$2$i;
      label = 194;
      break L258;
     }
    }
   } while(0);
   $618 = HEAP32[(3460)>>2]|0;
   $619 = $618 | 4;
   HEAP32[(3460)>>2] = $619;
   $tsize$1$i = $tsize$0323944$i;
   label = 191;
  } else {
   $tsize$1$i = 0;
   label = 191;
  }
 } while(0);
 if ((label|0) == 191) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond8$i = $625 & $or$cond3$i;
   if ($or$cond8$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$255$i = $621;$tsize$254$i = $$tsize$1$i;
     label = 194;
    }
   }
  }
 }
 if ((label|0) == 194) {
  $631 = HEAP32[(3448)>>2]|0;
  $632 = (($631) + ($tsize$254$i))|0;
  HEAP32[(3448)>>2] = $632;
  $633 = HEAP32[(3452)>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[(3452)>>2] = $632;
  }
  $635 = HEAP32[(3040)>>2]|0;
  $636 = ($635|0)==(0|0);
  L299: do {
   if ($636) {
    $637 = HEAP32[(3032)>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$255$i>>>0)<($637>>>0);
    $or$cond9$i = $638 | $639;
    if ($or$cond9$i) {
     HEAP32[(3032)>>2] = $tbase$255$i;
    }
    HEAP32[(3464)>>2] = $tbase$255$i;
    HEAP32[(3468)>>2] = $tsize$254$i;
    HEAP32[(3476)>>2] = 0;
    $640 = HEAP32[3488>>2]|0;
    HEAP32[(3052)>>2] = $640;
    HEAP32[(3048)>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = (3056 + ($641<<2)|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = (3056 + ($$sum$i$i<<2)|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = (3056 + ($$sum1$i$i<<2)|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$254$i) + -40)|0;
    $647 = ((($tbase$255$i)) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    $651 = (0 - ($648))|0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = (($tbase$255$i) + ($653)|0);
    $655 = (($646) - ($653))|0;
    HEAP32[(3040)>>2] = $654;
    HEAP32[(3028)>>2] = $655;
    $656 = $655 | 1;
    $$sum$i13$i = (($653) + 4)|0;
    $657 = (($tbase$255$i) + ($$sum$i13$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$254$i) + -36)|0;
    $658 = (($tbase$255$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[(3504)>>2]|0;
    HEAP32[(3044)>>2] = $659;
   } else {
    $sp$084$i = (3464);
    while(1) {
     $660 = HEAP32[$sp$084$i>>2]|0;
     $661 = ((($sp$084$i)) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$255$i|0)==($663|0);
     if ($664) {
      $$lcssa222 = $660;$$lcssa224 = $661;$$lcssa226 = $662;$sp$084$i$lcssa = $sp$084$i;
      label = 204;
      break;
     }
     $665 = ((($sp$084$i)) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      break;
     } else {
      $sp$084$i = $666;
     }
    }
    if ((label|0) == 204) {
     $668 = ((($sp$084$i$lcssa)) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa222>>>0);
      $673 = ($635>>>0)<($tbase$255$i>>>0);
      $or$cond57$i = $673 & $672;
      if ($or$cond57$i) {
       $674 = (($$lcssa226) + ($tsize$254$i))|0;
       HEAP32[$$lcssa224>>2] = $674;
       $675 = HEAP32[(3028)>>2]|0;
       $676 = (($675) + ($tsize$254$i))|0;
       $677 = ((($635)) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       $681 = (0 - ($678))|0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = (($635) + ($683)|0);
       $685 = (($676) - ($683))|0;
       HEAP32[(3040)>>2] = $684;
       HEAP32[(3028)>>2] = $685;
       $686 = $685 | 1;
       $$sum$i17$i = (($683) + 4)|0;
       $687 = (($635) + ($$sum$i17$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i18$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i18$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[(3504)>>2]|0;
       HEAP32[(3044)>>2] = $689;
       break;
      }
     }
    }
    $690 = HEAP32[(3032)>>2]|0;
    $691 = ($tbase$255$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[(3032)>>2] = $tbase$255$i;
     $755 = $tbase$255$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$255$i) + ($tsize$254$i)|0);
    $sp$183$i = (3464);
    while(1) {
     $693 = HEAP32[$sp$183$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa219 = $sp$183$i;$sp$183$i$lcssa = $sp$183$i;
      label = 212;
      break;
     }
     $695 = ((($sp$183$i)) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      $sp$0$i$i$i = (3464);
      break;
     } else {
      $sp$183$i = $696;
     }
    }
    if ((label|0) == 212) {
     $698 = ((($sp$183$i$lcssa)) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa219>>2] = $tbase$255$i;
      $702 = ((($sp$183$i$lcssa)) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$254$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = ((($tbase$255$i)) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      $709 = (0 - ($706))|0;
      $710 = $709 & 7;
      $711 = $708 ? 0 : $710;
      $712 = (($tbase$255$i) + ($711)|0);
      $$sum112$i = (($tsize$254$i) + 8)|0;
      $713 = (($tbase$255$i) + ($$sum112$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      $717 = (0 - ($714))|0;
      $718 = $717 & 7;
      $719 = $716 ? 0 : $718;
      $$sum113$i = (($719) + ($tsize$254$i))|0;
      $720 = (($tbase$255$i) + ($$sum113$i)|0);
      $721 = $720;
      $722 = $712;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($711) + ($nb$0))|0;
      $724 = (($tbase$255$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($711) + 4)|0;
      $727 = (($tbase$255$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L324: do {
       if ($728) {
        $729 = HEAP32[(3028)>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[(3028)>>2] = $730;
        HEAP32[(3040)>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$255$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[(3036)>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[(3024)>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[(3024)>>2] = $736;
         HEAP32[(3036)>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$255$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$255$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$254$i) + 4)|0;
        $$sum114$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$255$i) + ($$sum114$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L331: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum124$i = (($$sum3738$i$i) + ($tsize$254$i))|0;
           $747 = (($tbase$255$i) + ($$sum124$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$254$i) + 12)|0;
           $$sum125$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$255$i) + ($$sum125$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = (3056 + ($751<<2)|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = ((($748)) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[3016>>2]|0;
            $763 = $762 & $761;
            HEAP32[3016>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre57$i$i = ((($750)) + 8|0);
             $$pre$phi58$i$iZ2D = $$pre57$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = ((($750)) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi58$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = ((($748)) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi58$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum115$i = (($$sum34$i$i) + ($tsize$254$i))|0;
           $770 = (($tbase$255$i) + ($$sum115$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$254$i) + 12)|0;
           $$sum116$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$255$i) + ($$sum116$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum122$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$255$i) + ($$sum122$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum123$i = (($$sum67$i$i) + ($tsize$254$i))|0;
              $787 = (($tbase$255$i) + ($$sum123$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $788;$RP$0$i$i = $787;
              }
             } else {
              $R$0$i$i = $785;$RP$0$i$i = $784;
             }
             while(1) {
              $790 = ((($R$0$i$i)) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if (!($792)) {
               $R$0$i$i = $791;$RP$0$i$i = $790;
               continue;
              }
              $793 = ((($R$0$i$i)) + 16|0);
              $794 = HEAP32[$793>>2]|0;
              $795 = ($794|0)==(0|0);
              if ($795) {
               $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
               break;
              } else {
               $R$0$i$i = $794;$RP$0$i$i = $793;
              }
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum117$i = (($$sum3536$i$i) + ($tsize$254$i))|0;
             $775 = (($tbase$255$i) + ($$sum117$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = ((($776)) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = ((($773)) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$254$i) + 28)|0;
           $$sum118$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$255$i) + ($$sum118$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = (3320 + ($799<<2)|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[(3020)>>2]|0;
             $806 = $805 & $804;
             HEAP32[(3020)>>2] = $806;
             break L331;
            } else {
             $807 = HEAP32[(3032)>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = ((($771)) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = ((($771)) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L331;
             }
            }
           } while(0);
           $814 = HEAP32[(3032)>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = ((($R$1$i$i)) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum119$i = (($$sum3132$i$i) + ($tsize$254$i))|0;
           $817 = (($tbase$255$i) + ($$sum119$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = ((($R$1$i$i)) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = ((($818)) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum120$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$255$i) + ($$sum120$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[(3032)>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = ((($R$1$i$i)) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = ((($824)) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum121$i = (($$sum9$i$i) + ($tsize$254$i))|0;
         $830 = (($tbase$255$i) + ($$sum121$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = ((($oldfirst$0$i$i)) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$255$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$255$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = (3056 + ($840<<2)|0);
         $842 = HEAP32[3016>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[3016>>2] = $846;
           $$pre$i22$i = (($840) + 2)|0;
           $$pre56$i$i = (3056 + ($$pre$i22$i<<2)|0);
           $$pre$phi$i23$iZ2D = $$pre56$i$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = (3056 + ($$sum29$i$i<<2)|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[(3032)>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = ((($F4$0$i$i)) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$255$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$255$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = (3320 + ($I7$0$i$i<<2)|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$255$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$255$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$255$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[(3020)>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[(3020)>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$255$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$255$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$255$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ((($891)) + 4|0);
        $893 = HEAP32[$892>>2]|0;
        $894 = $893 & -8;
        $895 = ($894|0)==($qsize$0$i$i|0);
        L417: do {
         if ($895) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $896 = ($I7$0$i$i|0)==(31);
          $897 = $I7$0$i$i >>> 1;
          $898 = (25 - ($897))|0;
          $899 = $896 ? 0 : $898;
          $900 = $qsize$0$i$i << $899;
          $K8$051$i$i = $900;$T$050$i$i = $891;
          while(1) {
           $907 = $K8$051$i$i >>> 31;
           $908 = (((($T$050$i$i)) + 16|0) + ($907<<2)|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$050$i$i$lcssa = $T$050$i$i;
            break;
           }
           $901 = $K8$051$i$i << 1;
           $902 = ((($903)) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $T$0$lcssa$i25$i = $903;
            break L417;
           } else {
            $K8$051$i$i = $901;$T$050$i$i = $903;
           }
          }
          $910 = HEAP32[(3032)>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$255$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$050$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$255$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$255$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L324;
          }
         }
        } while(0);
        $915 = ((($T$0$lcssa$i25$i)) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[(3032)>>2]|0;
        $918 = ($916>>>0)>=($917>>>0);
        $not$$i26$i = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = $918 & $not$$i26$i;
        if ($919) {
         $920 = ((($916)) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$255$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$255$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$255$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $711 | 8;
      $924 = (($tbase$255$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     } else {
      $sp$0$i$i$i = (3464);
     }
    }
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = ((($sp$0$i$i$i)) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa215 = $925;$$lcssa216 = $928;$$lcssa217 = $929;
       break;
      }
     }
     $931 = ((($sp$0$i$i$i)) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i14$i = (($$lcssa216) + -47)|0;
    $$sum1$i15$i = (($$lcssa216) + -39)|0;
    $933 = (($$lcssa215) + ($$sum1$i15$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    $937 = (0 - ($934))|0;
    $938 = $937 & 7;
    $939 = $936 ? 0 : $938;
    $$sum2$i16$i = (($$sum$i14$i) + ($939))|0;
    $940 = (($$lcssa215) + ($$sum2$i16$i)|0);
    $941 = ((($635)) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = ((($943)) + 8|0);
    $945 = (($tsize$254$i) + -40)|0;
    $946 = ((($tbase$255$i)) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    $950 = (0 - ($947))|0;
    $951 = $950 & 7;
    $952 = $949 ? 0 : $951;
    $953 = (($tbase$255$i) + ($952)|0);
    $954 = (($945) - ($952))|0;
    HEAP32[(3040)>>2] = $953;
    HEAP32[(3028)>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($952) + 4)|0;
    $956 = (($tbase$255$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$254$i) + -36)|0;
    $957 = (($tbase$255$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[(3504)>>2]|0;
    HEAP32[(3044)>>2] = $958;
    $959 = ((($943)) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944>>2]=HEAP32[(3464)>>2]|0;HEAP32[$944+4>>2]=HEAP32[(3464)+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[(3464)+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[(3464)+12>>2]|0;
    HEAP32[(3464)>>2] = $tbase$255$i;
    HEAP32[(3468)>>2] = $tsize$254$i;
    HEAP32[(3476)>>2] = 0;
    HEAP32[(3472)>>2] = $944;
    $960 = ((($943)) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = ((($943)) + 32|0);
    $962 = ($961>>>0)<($$lcssa217>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = ((($964)) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = ((($964)) + 8|0);
      $966 = ($965>>>0)<($$lcssa217>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = ((($635)) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = (3056 + ($977<<2)|0);
      $979 = HEAP32[3016>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      if ($982) {
       $983 = $979 | $980;
       HEAP32[3016>>2] = $983;
       $$pre$i$i = (($977) + 2)|0;
       $$pre14$i$i = (3056 + ($$pre$i$i<<2)|0);
       $$pre$phi$i$iZ2D = $$pre14$i$i;$F$0$i$i = $978;
      } else {
       $$sum4$i$i = (($977) + 2)|0;
       $984 = (3056 + ($$sum4$i$i<<2)|0);
       $985 = HEAP32[$984>>2]|0;
       $986 = HEAP32[(3032)>>2]|0;
       $987 = ($985>>>0)<($986>>>0);
       if ($987) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = ((($F$0$i$i)) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = ((($635)) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = ((($635)) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = (3320 + ($I1$0$i$i<<2)|0);
     $1017 = ((($635)) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = ((($635)) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[(3020)>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[(3020)>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = ((($635)) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = ((($635)) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = ((($635)) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ((($1027)) + 4|0);
     $1029 = HEAP32[$1028>>2]|0;
     $1030 = $1029 & -8;
     $1031 = ($1030|0)==($970|0);
     L459: do {
      if ($1031) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1032 = ($I1$0$i$i|0)==(31);
       $1033 = $I1$0$i$i >>> 1;
       $1034 = (25 - ($1033))|0;
       $1035 = $1032 ? 0 : $1034;
       $1036 = $970 << $1035;
       $K2$07$i$i = $1036;$T$06$i$i = $1027;
       while(1) {
        $1043 = $K2$07$i$i >>> 31;
        $1044 = (((($T$06$i$i)) + 16|0) + ($1043<<2)|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa211 = $1044;$T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        $1037 = $K2$07$i$i << 1;
        $1038 = ((($1039)) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $T$0$lcssa$i$i = $1039;
         break L459;
        } else {
         $K2$07$i$i = $1037;$T$06$i$i = $1039;
        }
       }
       $1046 = HEAP32[(3032)>>2]|0;
       $1047 = ($$lcssa211>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa211>>2] = $635;
        $1048 = ((($635)) + 24|0);
        HEAP32[$1048>>2] = $T$06$i$i$lcssa;
        $1049 = ((($635)) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = ((($635)) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L299;
       }
      }
     } while(0);
     $1051 = ((($T$0$lcssa$i$i)) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[(3032)>>2]|0;
     $1054 = ($1052>>>0)>=($1053>>>0);
     $not$$i$i = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = $1054 & $not$$i$i;
     if ($1055) {
      $1056 = ((($1052)) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = ((($635)) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = ((($635)) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = ((($635)) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[(3028)>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[(3028)>>2] = $1062;
   $1063 = HEAP32[(3040)>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[(3040)>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = ((($1063)) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = ((($1063)) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0;
 var $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0;
 var $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($mem)) + -8|0);
 $2 = HEAP32[(3032)>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = ((($mem)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[(3036)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[(3024)>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = (3056 + ($25<<2)|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = ((($22)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[3016>>2]|0;
     $36 = $35 & $34;
     HEAP32[3016>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre60 = ((($24)) + 8|0);
     $$pre$phi61Z2D = $$pre60;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = ((($24)) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi61Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = ((($22)) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi61Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;$RP$0 = $60;
      }
     } else {
      $R$0 = $58;$RP$0 = $57;
     }
     while(1) {
      $63 = ((($R$0)) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $R$0 = $64;$RP$0 = $63;
       continue;
      }
      $66 = ((($R$0)) + 16|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($67|0)==(0|0);
      if ($68) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $67;$RP$0 = $66;
      }
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = ((($49)) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = ((($46)) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (3320 + ($72<<2)|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[(3020)>>2]|0;
      $79 = $78 & $77;
      HEAP32[(3020)>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[(3032)>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = ((($44)) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = ((($44)) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[(3032)>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = ((($R$1)) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = ((($R$1)) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = ((($91)) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[(3032)>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = ((($R$1)) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = ((($97)) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[(3040)>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[(3028)>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[(3028)>>2] = $120;
   HEAP32[(3040)>>2] = $p$0;
   $121 = $120 | 1;
   $122 = ((($p$0)) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[(3036)>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[(3036)>>2] = 0;
   HEAP32[(3024)>>2] = 0;
   return;
  }
  $125 = HEAP32[(3036)>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[(3024)>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[(3024)>>2] = $128;
   HEAP32[(3036)>>2] = $p$0;
   $129 = $128 | 1;
   $130 = ((($p$0)) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = (3056 + ($140<<2)|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[(3032)>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = ((($137)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[3016>>2]|0;
     $152 = $151 & $150;
     HEAP32[3016>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre58 = ((($139)) + 8|0);
     $$pre$phi59Z2D = $$pre58;
    } else {
     $154 = HEAP32[(3032)>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = ((($139)) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi59Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = ((($137)) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi59Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;$RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;$RP9$0 = $175;
      }
      while(1) {
       $181 = ((($R7$0)) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if (!($183)) {
        $R7$0 = $182;$RP9$0 = $181;
        continue;
       }
       $184 = ((($R7$0)) + 16|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if ($186) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $185;$RP9$0 = $184;
       }
      }
      $187 = HEAP32[(3032)>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[(3032)>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = ((($166)) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = ((($163)) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = (3320 + ($191<<2)|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond47 = ($R7$1|0)==(0|0);
      if ($cond47) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[(3020)>>2]|0;
       $198 = $197 & $196;
       HEAP32[(3020)>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[(3032)>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = ((($161)) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = ((($161)) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[(3032)>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = ((($R7$1)) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = ((($R7$1)) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = ((($210)) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[(3032)>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = ((($R7$1)) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = ((($216)) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = ((($p$0)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[(3036)>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[(3024)>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = ((($p$0)) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = (3056 + ($233<<2)|0);
  $235 = HEAP32[3016>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[3016>>2] = $239;
   $$pre = (($233) + 2)|0;
   $$pre57 = (3056 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre57;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = (3056 + ($$sum11<<2)|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[(3032)>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = ((($F16$0)) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = ((($p$0)) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = ((($p$0)) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = (3320 + ($I18$0<<2)|0);
 $273 = ((($p$0)) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = ((($p$0)) + 16|0);
 $275 = ((($p$0)) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[(3020)>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L199: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[(3020)>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = ((($p$0)) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = ((($p$0)) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = ((($p$0)) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ((($284)) + 4|0);
   $286 = HEAP32[$285>>2]|0;
   $287 = $286 & -8;
   $288 = ($287|0)==($psize$1|0);
   L202: do {
    if ($288) {
     $T$0$lcssa = $284;
    } else {
     $289 = ($I18$0|0)==(31);
     $290 = $I18$0 >>> 1;
     $291 = (25 - ($290))|0;
     $292 = $289 ? 0 : $291;
     $293 = $psize$1 << $292;
     $K19$052 = $293;$T$051 = $284;
     while(1) {
      $300 = $K19$052 >>> 31;
      $301 = (((($T$051)) + 16|0) + ($300<<2)|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$051$lcssa = $T$051;
       break;
      }
      $294 = $K19$052 << 1;
      $295 = ((($296)) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $T$0$lcssa = $296;
       break L202;
      } else {
       $K19$052 = $294;$T$051 = $296;
      }
     }
     $303 = HEAP32[(3032)>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = ((($p$0)) + 24|0);
      HEAP32[$305>>2] = $T$051$lcssa;
      $306 = ((($p$0)) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = ((($p$0)) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L199;
     }
    }
   } while(0);
   $308 = ((($T$0$lcssa)) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[(3032)>>2]|0;
   $311 = ($309>>>0)>=($310>>>0);
   $not$ = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = $311 & $not$;
   if ($312) {
    $313 = ((($309)) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = ((($p$0)) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = ((($p$0)) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = ((($p$0)) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[(3048)>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[(3048)>>2] = $318;
 $319 = ($318|0)==(0);
 if ($319) {
  $sp$0$in$i = (3472);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = ((($sp$0$i)) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[(3048)>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 $5 = (($bytes) + 11)|0;
 $6 = $5 & -8;
 $7 = $4 ? 16 : $6;
 $8 = ((($oldmem)) + -8|0);
 $9 = (_try_realloc_chunk($8,$7)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($9)) + 8|0);
  $mem$0 = $11;
  return ($mem$0|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $14 = ((($oldmem)) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$0 = $12;
 return ($mem$0|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 $1 = (($c) + -9)|0;
 $2 = ($1>>>0)<(5);
 $3 = $0 | $2;
 $4 = $3&1;
 return ($4|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if ($isdigit) {
  $4 = 1;
  $3 = $4&1;
  return ($3|0);
 }
 $0 = $c | 32;
 $1 = (($0) + -97)|0;
 $2 = ($1>>>0)<(6);
 $4 = $2;
 $3 = $4&1;
 return ($3|0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$122 = 0, $$123 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa130 = 0, $$lcssa131 = 0, $$lcssa132 = 0, $$lcssa133 = 0, $$lcssa134 = 0, $$lcssa135 = 0, $$sum = 0, $$sum14 = 0, $$sum1445 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum18 = 0, $$sum1865 = 0, $$sum19 = 0;
 var $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$124 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$371 = 0;
 var $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$753 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond40 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$082 = 0, $x$146 = 0, $x$266 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 if ($2) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 22;
  $282 = 0;$283 = 0;
  tempRet0 = ($282);
  return ($283|0);
 }
 $3 = ((($f)) + 4|0);
 $4 = ((($f)) + 100|0);
 while(1) {
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = ((($6)) + 1|0);
   HEAP32[$3>>2] = $9;
   $10 = HEAP8[$6>>0]|0;
   $11 = $10&255;
   $13 = $11;
  } else {
   $12 = (___shgetc($f)|0);
   $13 = $12;
  }
  $14 = (_isspace($13)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$lcssa135 = $13;
   break;
  }
 }
 $16 = ($$lcssa135|0)==(45);
 do {
  if ((($$lcssa135|0) == 43) | (($$lcssa135|0) == 45)) {
   $17 = $16 << 31 >> 31;
   $18 = HEAP32[$3>>2]|0;
   $19 = HEAP32[$4>>2]|0;
   $20 = ($18>>>0)<($19>>>0);
   if ($20) {
    $21 = ((($18)) + 1|0);
    HEAP32[$3>>2] = $21;
    $22 = HEAP8[$18>>0]|0;
    $23 = $22&255;
    $c$0 = $23;$neg$0 = $17;
    break;
   } else {
    $24 = (___shgetc($f)|0);
    $c$0 = $24;$neg$0 = $17;
    break;
   }
  } else {
   $c$0 = $$lcssa135;$neg$0 = 0;
  }
 } while(0);
 $25 = ($base|0)==(0);
 $26 = $base & -17;
 $27 = ($26|0)==(0);
 $28 = ($c$0|0)==(48);
 $or$cond5 = $27 & $28;
 do {
  if ($or$cond5) {
   $29 = HEAP32[$3>>2]|0;
   $30 = HEAP32[$4>>2]|0;
   $31 = ($29>>>0)<($30>>>0);
   if ($31) {
    $32 = ((($29)) + 1|0);
    HEAP32[$3>>2] = $32;
    $33 = HEAP8[$29>>0]|0;
    $34 = $33&255;
    $37 = $34;
   } else {
    $35 = (___shgetc($f)|0);
    $37 = $35;
   }
   $36 = $37 | 32;
   $38 = ($36|0)==(120);
   if (!($38)) {
    if ($25) {
     $$123 = 8;$c$124 = $37;
     label = 46;
     break;
    } else {
     $$1 = $base;$c$1 = $37;
     label = 32;
     break;
    }
   }
   $39 = HEAP32[$3>>2]|0;
   $40 = HEAP32[$4>>2]|0;
   $41 = ($39>>>0)<($40>>>0);
   if ($41) {
    $42 = ((($39)) + 1|0);
    HEAP32[$3>>2] = $42;
    $43 = HEAP8[$39>>0]|0;
    $44 = $43&255;
    $46 = $44;
   } else {
    $45 = (___shgetc($f)|0);
    $46 = $45;
   }
   $$sum20 = (($46) + 1)|0;
   $47 = (3512 + ($$sum20)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48&255)>(15);
   if ($49) {
    $50 = HEAP32[$4>>2]|0;
    $51 = ($50|0)==(0|0);
    if (!($51)) {
     $52 = HEAP32[$3>>2]|0;
     $53 = ((($52)) + -1|0);
     HEAP32[$3>>2] = $53;
    }
    $54 = ($pok|0)==(0);
    if ($54) {
     ___shlim($f,0);
     $282 = 0;$283 = 0;
     tempRet0 = ($282);
     return ($283|0);
    }
    if ($51) {
     $282 = 0;$283 = 0;
     tempRet0 = ($282);
     return ($283|0);
    }
    $55 = HEAP32[$3>>2]|0;
    $56 = ((($55)) + -1|0);
    HEAP32[$3>>2] = $56;
    $282 = 0;$283 = 0;
    tempRet0 = ($282);
    return ($283|0);
   } else {
    $$123 = 16;$c$124 = $46;
    label = 46;
   }
  } else {
   $$base21 = $25 ? 10 : $base;
   $$sum = (($c$0) + 1)|0;
   $57 = (3512 + ($$sum)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58&255;
   $60 = ($59>>>0)<($$base21>>>0);
   if ($60) {
    $$1 = $$base21;$c$1 = $c$0;
    label = 32;
   } else {
    $61 = HEAP32[$4>>2]|0;
    $62 = ($61|0)==(0|0);
    if (!($62)) {
     $63 = HEAP32[$3>>2]|0;
     $64 = ((($63)) + -1|0);
     HEAP32[$3>>2] = $64;
    }
    ___shlim($f,0);
    $65 = (___errno_location()|0);
    HEAP32[$65>>2] = 22;
    $282 = 0;$283 = 0;
    tempRet0 = ($282);
    return ($283|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $66 = ($$1|0)==(10);
  if ($66) {
   $67 = (($c$1) + -48)|0;
   $68 = ($67>>>0)<(10);
   if ($68) {
    $71 = $67;$x$082 = 0;
    while(1) {
     $69 = ($x$082*10)|0;
     $70 = (($69) + ($71))|0;
     $72 = HEAP32[$3>>2]|0;
     $73 = HEAP32[$4>>2]|0;
     $74 = ($72>>>0)<($73>>>0);
     if ($74) {
      $75 = ((($72)) + 1|0);
      HEAP32[$3>>2] = $75;
      $76 = HEAP8[$72>>0]|0;
      $77 = $76&255;
      $c$2$be = $77;
     } else {
      $78 = (___shgetc($f)|0);
      $c$2$be = $78;
     }
     $79 = (($c$2$be) + -48)|0;
     $80 = ($79>>>0)<(10);
     $81 = ($70>>>0)<(429496729);
     $82 = $80 & $81;
     if ($82) {
      $71 = $79;$x$082 = $70;
     } else {
      $$lcssa134 = $70;$c$2$be$lcssa = $c$2$be;
      break;
     }
    }
    $284 = $$lcssa134;$285 = 0;$c$2$lcssa = $c$2$be$lcssa;
   } else {
    $284 = 0;$285 = 0;$c$2$lcssa = $c$1;
   }
   $83 = (($c$2$lcssa) + -48)|0;
   $84 = ($83>>>0)<(10);
   if ($84) {
    $85 = $284;$86 = $285;$89 = $83;$c$371 = $c$2$lcssa;
    while(1) {
     $87 = (___muldi3(($85|0),($86|0),10,0)|0);
     $88 = tempRet0;
     $90 = ($89|0)<(0);
     $91 = $90 << 31 >> 31;
     $92 = $89 ^ -1;
     $93 = $91 ^ -1;
     $94 = ($88>>>0)>($93>>>0);
     $95 = ($87>>>0)>($92>>>0);
     $96 = ($88|0)==($93|0);
     $97 = $96 & $95;
     $98 = $94 | $97;
     if ($98) {
      $$lcssa = $89;$286 = $85;$287 = $86;$c$3$lcssa = $c$371;
      break;
     }
     $99 = (_i64Add(($87|0),($88|0),($89|0),($91|0))|0);
     $100 = tempRet0;
     $101 = HEAP32[$3>>2]|0;
     $102 = HEAP32[$4>>2]|0;
     $103 = ($101>>>0)<($102>>>0);
     if ($103) {
      $104 = ((($101)) + 1|0);
      HEAP32[$3>>2] = $104;
      $105 = HEAP8[$101>>0]|0;
      $106 = $105&255;
      $c$3$be = $106;
     } else {
      $107 = (___shgetc($f)|0);
      $c$3$be = $107;
     }
     $108 = (($c$3$be) + -48)|0;
     $109 = ($108>>>0)<(10);
     $110 = ($100>>>0)<(429496729);
     $111 = ($99>>>0)<(2576980378);
     $112 = ($100|0)==(429496729);
     $113 = $112 & $111;
     $114 = $110 | $113;
     $or$cond7 = $109 & $114;
     if ($or$cond7) {
      $85 = $99;$86 = $100;$89 = $108;$c$371 = $c$3$be;
     } else {
      $$lcssa = $108;$286 = $99;$287 = $100;$c$3$lcssa = $c$3$be;
      break;
     }
    }
    $115 = ($$lcssa>>>0)>(9);
    if ($115) {
     $255 = $287;$257 = $286;
    } else {
     $$122 = 10;$288 = $286;$289 = $287;$c$8 = $c$3$lcssa;
     label = 72;
    }
   } else {
    $255 = $285;$257 = $284;
   }
  } else {
   $$123 = $$1;$c$124 = $c$1;
   label = 46;
  }
 }
 L69: do {
  if ((label|0) == 46) {
   $116 = (($$123) + -1)|0;
   $117 = $116 & $$123;
   $118 = ($117|0)==(0);
   if ($118) {
    $123 = ($$123*23)|0;
    $124 = $123 >>> 5;
    $125 = $124 & 7;
    $126 = (3776 + ($125)|0);
    $127 = HEAP8[$126>>0]|0;
    $128 = $127 << 24 >> 24;
    $$sum1445 = (($c$124) + 1)|0;
    $129 = (3512 + ($$sum1445)|0);
    $130 = HEAP8[$129>>0]|0;
    $131 = $130&255;
    $132 = ($131>>>0)<($$123>>>0);
    if ($132) {
     $135 = $131;$x$146 = 0;
     while(1) {
      $133 = $x$146 << $128;
      $134 = $135 | $133;
      $136 = HEAP32[$3>>2]|0;
      $137 = HEAP32[$4>>2]|0;
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $139 = ((($136)) + 1|0);
       HEAP32[$3>>2] = $139;
       $140 = HEAP8[$136>>0]|0;
       $141 = $140&255;
       $c$4$be = $141;
      } else {
       $142 = (___shgetc($f)|0);
       $c$4$be = $142;
      }
      $$sum14 = (($c$4$be) + 1)|0;
      $143 = (3512 + ($$sum14)|0);
      $144 = HEAP8[$143>>0]|0;
      $145 = $144&255;
      $146 = ($145>>>0)<($$123>>>0);
      $147 = ($134>>>0)<(134217728);
      $148 = $147 & $146;
      if ($148) {
       $135 = $145;$x$146 = $134;
      } else {
       $$lcssa130 = $134;$$lcssa131 = $144;$c$4$be$lcssa = $c$4$be;
       break;
      }
     }
     $152 = $$lcssa131;$154 = 0;$156 = $$lcssa130;$c$4$lcssa = $c$4$be$lcssa;
    } else {
     $152 = $130;$154 = 0;$156 = 0;$c$4$lcssa = $c$124;
    }
    $149 = (_bitshift64Lshr(-1,-1,($128|0))|0);
    $150 = tempRet0;
    $151 = $152&255;
    $153 = ($151>>>0)>=($$123>>>0);
    $155 = ($154>>>0)>($150>>>0);
    $157 = ($156>>>0)>($149>>>0);
    $158 = ($154|0)==($150|0);
    $159 = $158 & $157;
    $160 = $155 | $159;
    $or$cond40 = $153 | $160;
    if ($or$cond40) {
     $$122 = $$123;$288 = $156;$289 = $154;$c$8 = $c$4$lcssa;
     label = 72;
     break;
    } else {
     $161 = $156;$162 = $154;$166 = $152;
    }
    while(1) {
     $163 = (_bitshift64Shl(($161|0),($162|0),($128|0))|0);
     $164 = tempRet0;
     $165 = $166&255;
     $167 = $165 | $163;
     $168 = HEAP32[$3>>2]|0;
     $169 = HEAP32[$4>>2]|0;
     $170 = ($168>>>0)<($169>>>0);
     if ($170) {
      $171 = ((($168)) + 1|0);
      HEAP32[$3>>2] = $171;
      $172 = HEAP8[$168>>0]|0;
      $173 = $172&255;
      $c$5$be = $173;
     } else {
      $174 = (___shgetc($f)|0);
      $c$5$be = $174;
     }
     $$sum15 = (($c$5$be) + 1)|0;
     $175 = (3512 + ($$sum15)|0);
     $176 = HEAP8[$175>>0]|0;
     $177 = $176&255;
     $178 = ($177>>>0)>=($$123>>>0);
     $179 = ($164>>>0)>($150>>>0);
     $180 = ($167>>>0)>($149>>>0);
     $181 = ($164|0)==($150|0);
     $182 = $181 & $180;
     $183 = $179 | $182;
     $or$cond = $178 | $183;
     if ($or$cond) {
      $$122 = $$123;$288 = $167;$289 = $164;$c$8 = $c$5$be;
      label = 72;
      break L69;
     } else {
      $161 = $167;$162 = $164;$166 = $176;
     }
    }
   }
   $$sum1865 = (($c$124) + 1)|0;
   $119 = (3512 + ($$sum1865)|0);
   $120 = HEAP8[$119>>0]|0;
   $121 = $120&255;
   $122 = ($121>>>0)<($$123>>>0);
   if ($122) {
    $186 = $121;$x$266 = 0;
    while(1) {
     $184 = Math_imul($x$266, $$123)|0;
     $185 = (($186) + ($184))|0;
     $187 = HEAP32[$3>>2]|0;
     $188 = HEAP32[$4>>2]|0;
     $189 = ($187>>>0)<($188>>>0);
     if ($189) {
      $190 = ((($187)) + 1|0);
      HEAP32[$3>>2] = $190;
      $191 = HEAP8[$187>>0]|0;
      $192 = $191&255;
      $c$6$be = $192;
     } else {
      $193 = (___shgetc($f)|0);
      $c$6$be = $193;
     }
     $$sum18 = (($c$6$be) + 1)|0;
     $194 = (3512 + ($$sum18)|0);
     $195 = HEAP8[$194>>0]|0;
     $196 = $195&255;
     $197 = ($196>>>0)<($$123>>>0);
     $198 = ($185>>>0)<(119304647);
     $199 = $198 & $197;
     if ($199) {
      $186 = $196;$x$266 = $185;
     } else {
      $$lcssa132 = $185;$$lcssa133 = $195;$c$6$be$lcssa = $c$6$be;
      break;
     }
    }
    $201 = $$lcssa133;$290 = $$lcssa132;$291 = 0;$c$6$lcssa = $c$6$be$lcssa;
   } else {
    $201 = $120;$290 = 0;$291 = 0;$c$6$lcssa = $c$124;
   }
   $200 = $201&255;
   $202 = ($200>>>0)<($$123>>>0);
   if ($202) {
    $203 = (___udivdi3(-1,-1,($$123|0),0)|0);
    $204 = tempRet0;
    $205 = $291;$207 = $290;$215 = $201;$c$753 = $c$6$lcssa;
    while(1) {
     $206 = ($205>>>0)>($204>>>0);
     $208 = ($207>>>0)>($203>>>0);
     $209 = ($205|0)==($204|0);
     $210 = $209 & $208;
     $211 = $206 | $210;
     if ($211) {
      $$122 = $$123;$288 = $207;$289 = $205;$c$8 = $c$753;
      label = 72;
      break L69;
     }
     $212 = (___muldi3(($207|0),($205|0),($$123|0),0)|0);
     $213 = tempRet0;
     $214 = $215&255;
     $216 = $214 ^ -1;
     $217 = ($213>>>0)>(4294967295);
     $218 = ($212>>>0)>($216>>>0);
     $219 = ($213|0)==(-1);
     $220 = $219 & $218;
     $221 = $217 | $220;
     if ($221) {
      $$122 = $$123;$288 = $207;$289 = $205;$c$8 = $c$753;
      label = 72;
      break L69;
     }
     $222 = (_i64Add(($214|0),0,($212|0),($213|0))|0);
     $223 = tempRet0;
     $224 = HEAP32[$3>>2]|0;
     $225 = HEAP32[$4>>2]|0;
     $226 = ($224>>>0)<($225>>>0);
     if ($226) {
      $227 = ((($224)) + 1|0);
      HEAP32[$3>>2] = $227;
      $228 = HEAP8[$224>>0]|0;
      $229 = $228&255;
      $c$7$be = $229;
     } else {
      $230 = (___shgetc($f)|0);
      $c$7$be = $230;
     }
     $$sum19 = (($c$7$be) + 1)|0;
     $231 = (3512 + ($$sum19)|0);
     $232 = HEAP8[$231>>0]|0;
     $233 = $232&255;
     $234 = ($233>>>0)<($$123>>>0);
     if ($234) {
      $205 = $223;$207 = $222;$215 = $232;$c$753 = $c$7$be;
     } else {
      $$122 = $$123;$288 = $222;$289 = $223;$c$8 = $c$7$be;
      label = 72;
      break;
     }
    }
   } else {
    $$122 = $$123;$288 = $290;$289 = $291;$c$8 = $c$6$lcssa;
    label = 72;
   }
  }
 } while(0);
 if ((label|0) == 72) {
  $$sum16 = (($c$8) + 1)|0;
  $235 = (3512 + ($$sum16)|0);
  $236 = HEAP8[$235>>0]|0;
  $237 = $236&255;
  $238 = ($237>>>0)<($$122>>>0);
  if ($238) {
   while(1) {
    $239 = HEAP32[$3>>2]|0;
    $240 = HEAP32[$4>>2]|0;
    $241 = ($239>>>0)<($240>>>0);
    if ($241) {
     $242 = ((($239)) + 1|0);
     HEAP32[$3>>2] = $242;
     $243 = HEAP8[$239>>0]|0;
     $244 = $243&255;
     $c$9$be = $244;
    } else {
     $245 = (___shgetc($f)|0);
     $c$9$be = $245;
    }
    $$sum17 = (($c$9$be) + 1)|0;
    $246 = (3512 + ($$sum17)|0);
    $247 = HEAP8[$246>>0]|0;
    $248 = $247&255;
    $249 = ($248>>>0)<($$122>>>0);
    if (!($249)) {
     break;
    }
   }
   $250 = (___errno_location()|0);
   HEAP32[$250>>2] = 34;
   $255 = $1;$257 = $0;
  } else {
   $255 = $289;$257 = $288;
  }
 }
 $251 = HEAP32[$4>>2]|0;
 $252 = ($251|0)==(0|0);
 if (!($252)) {
  $253 = HEAP32[$3>>2]|0;
  $254 = ((($253)) + -1|0);
  HEAP32[$3>>2] = $254;
 }
 $256 = ($255>>>0)<($1>>>0);
 $258 = ($257>>>0)<($0>>>0);
 $259 = ($255|0)==($1|0);
 $260 = $259 & $258;
 $261 = $256 | $260;
 if (!($261)) {
  $262 = $0 & 1;
  $263 = ($262|0)!=(0);
  $264 = (0)!=(0);
  $265 = $263 | $264;
  $266 = ($neg$0|0)!=(0);
  $or$cond12 = $265 | $266;
  if (!($or$cond12)) {
   $267 = (___errno_location()|0);
   HEAP32[$267>>2] = 34;
   $268 = (_i64Add(($0|0),($1|0),-1,-1)|0);
   $269 = tempRet0;
   $282 = $269;$283 = $268;
   tempRet0 = ($282);
   return ($283|0);
  }
  $270 = ($255>>>0)>($1>>>0);
  $271 = ($257>>>0)>($0>>>0);
  $272 = ($255|0)==($1|0);
  $273 = $272 & $271;
  $274 = $270 | $273;
  if ($274) {
   $275 = (___errno_location()|0);
   HEAP32[$275>>2] = 34;
   $282 = $1;$283 = $0;
   tempRet0 = ($282);
   return ($283|0);
  }
 }
 $276 = ($neg$0|0)<(0);
 $277 = $276 << 31 >> 31;
 $278 = $257 ^ $neg$0;
 $279 = $255 ^ $277;
 $280 = (_i64Subtract(($278|0),($279|0),($neg$0|0),($277|0))|0);
 $281 = tempRet0;
 $282 = $281;$283 = $280;
 tempRet0 = ($282);
 return ($283|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$0$i25 = 0.0, $$010$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$09$i = 0, $$1$be$i = 0, $$1$ph$i = 0, $$11$i = 0, $$18$i = 0, $$2$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3121$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa288 = 0;
 var $$lcssa289 = 0, $$lcssa308 = 0, $$lcssa308$lcssa = 0, $$lcssa309 = 0, $$lcssa309$lcssa = 0, $$lcssa322 = 0, $$lcssa323 = 0, $$lcssa333 = 0, $$lcssa50$i = 0, $$lnz$0$i = 0, $$neg32$i = 0, $$not$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi42$iZ2D = 0.0, $$pre41$i = 0.0, $$promoted = 0, $$promoted$i = 0;
 var $$promoted185 = 0, $$sink$off0$us$i = 0, $$sink$off0$us93$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0.0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0.0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0.0;
 var $276 = 0.0, $277 = 0, $278 = 0, $279 = 0.0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0.0, $419 = 0.0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0.0, $436 = 0.0, $437 = 0.0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0.0, $448 = 0.0, $449 = 0.0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0.0, $46 = 0, $460 = 0.0, $461 = 0.0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0.0;
 var $474 = 0, $475 = 0.0, $476 = 0.0, $477 = 0, $478 = 0.0, $479 = 0, $48 = 0.0, $480 = 0.0, $481 = 0.0, $482 = 0, $483 = 0, $484 = 0, $485 = 0.0, $486 = 0.0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0, $491 = 0;
 var $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0, $496 = 0, $497 = 0, $498 = 0.0, $499 = 0.0, $5 = 0, $50 = 0.0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0.0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0.0, $643 = 0.0, $644 = 0.0, $645 = 0, $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0.0, $663 = 0, $664 = 0.0, $665 = 0.0, $666 = 0, $667 = 0, $668 = 0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0;
 var $672 = 0.0, $673 = 0, $674 = 0, $675 = 0.0, $676 = 0, $677 = 0.0, $678 = 0.0, $679 = 0.0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0.0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0.0, $69 = 0;
 var $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0.0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0.0, $702 = 0, $703 = 0, $704 = 0.0, $705 = 0.0, $706 = 0, $707 = 0;
 var $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0;
 var $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0;
 var $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a$0$lcssa177$i = 0, $a$0101$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph38$i = 0, $a$3$i = 0;
 var $a$3$i$lcssa300 = 0, $a$3$i301 = 0, $a$3$ph$i = 0, $a$3$ph183$i = 0, $a$478$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i23 = 0.0, $bits$0$ph = 0, $brmerge = 0, $brmerge$i26 = 0, $brmerge187 = 0, $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$185 = 0, $c$2 = 0;
 var $c$2$i = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0103$i = 0, $carry1$0$us$i = 0, $carry1$0$us89$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0, $carry1$1$us94$i = 0, $carry1$1$us94$i$lcssa = 0, $carry3$081$i = 0, $cond$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0;
 var $e2$0$us$i = 0, $e2$0$us84$i = 0, $e2$1$i = 0, $e2$1$i298 = 0, $e2$1$ph$i = 0, $e2$1$ph182$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa294 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa331 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0;
 var $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3117$i = 0, $gotdig$3117$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1118$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$084 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0;
 var $j$0$lcssa$i = 0, $j$0120$i = 0, $j$0120$i$lcssa = 0, $j$067$i = 0, $j$068$i = 0, $j$069$i = 0, $j$2$i = 0, $j$3110$i = 0, $k$0$lcssa$i = 0, $k$0119$i = 0, $k$0119$i$lcssa = 0, $k$063$i = 0, $k$064$i = 0, $k$065$i = 0, $k$2$i = 0, $k$3$i = 0, $k$4102$i = 0, $k$5$in$us$i = 0, $k$5$in$us88$i = 0, $k$5$us$i = 0;
 var $k$5$us90$i = 0, $k$5$z$2$us$i = 0, $k$5$z$2$us96$i = 0, $k$679$i = 0, $lnz$0$lcssa$i = 0, $lnz$0116$i = 0, $lnz$0116$i$lcssa = 0, $lnz$057$i = 0, $lnz$058$i = 0, $lnz$059$i = 0, $lnz$2$i = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i16 = 0, $or$cond13$i = 0, $or$cond15$i = 0, $or$cond16$i = 0, $or$cond17$us$i = 0;
 var $or$cond17$us95$i = 0, $or$cond19$i = 0, $or$cond20$i = 0, $or$cond216$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond8$i = 0, $or$cond9$i = 0, $or$cond9$not = 0, $rp$0$lcssa178$i = 0, $rp$0100$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph36$i = 0, $rp$3$ph$i = 0, $rp$3$ph34$i = 0, $rp$477$i = 0;
 var $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$6$i = 0, $x$i = 0;
 var $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i22 = 0.0, $y$2$i = 0.0, $y$2$i24 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$ph37$i = 0, $z$1$us$i = 0, $z$1$us85$i = 0, $z$2$us$i = 0, $z$2$us87$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0;
 var $z$3$us97$i = 0, $z$3$us97$i$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $x$i = sp;
 if ((($prec|0) == 2)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else if ((($prec|0) == 0)) {
  $bits$0$ph = 24;$emin$0$ph = -149;
 } else if ((($prec|0) == 1)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $0 = ((($f)) + 4|0);
 $1 = ((($f)) + 100|0);
 while(1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ($2>>>0)<($3>>>0);
  if ($4) {
   $5 = ((($2)) + 1|0);
   HEAP32[$0>>2] = $5;
   $6 = HEAP8[$2>>0]|0;
   $7 = $6&255;
   $9 = $7;
  } else {
   $8 = (___shgetc($f)|0);
   $9 = $8;
  }
  $10 = (_isspace($9)|0);
  $11 = ($10|0)==(0);
  if ($11) {
   $$lcssa333 = $9;
   break;
  }
 }
 $12 = ($$lcssa333|0)==(45);
 do {
  if ((($$lcssa333|0) == 43) | (($$lcssa333|0) == 45)) {
   $13 = $12&1;
   $14 = $13 << 1;
   $15 = (1 - ($14))|0;
   $16 = HEAP32[$0>>2]|0;
   $17 = HEAP32[$1>>2]|0;
   $18 = ($16>>>0)<($17>>>0);
   if ($18) {
    $19 = ((($16)) + 1|0);
    HEAP32[$0>>2] = $19;
    $20 = HEAP8[$16>>0]|0;
    $21 = $20&255;
    $c$0 = $21;$sign$0 = $15;
    break;
   } else {
    $22 = (___shgetc($f)|0);
    $c$0 = $22;$sign$0 = $15;
    break;
   }
  } else {
   $c$0 = $$lcssa333;$sign$0 = 1;
  }
 } while(0);
 $c$185 = $c$0;$i$084 = 0;
 while(1) {
  $23 = $c$185 | 32;
  $24 = (3792 + ($i$084)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25 << 24 >> 24;
  $27 = ($23|0)==($26|0);
  if (!($27)) {
   $c$1$lcssa = $c$185;$i$0$lcssa = $i$084;
   break;
  }
  $28 = ($i$084>>>0)<(7);
  do {
   if ($28) {
    $29 = HEAP32[$0>>2]|0;
    $30 = HEAP32[$1>>2]|0;
    $31 = ($29>>>0)<($30>>>0);
    if ($31) {
     $32 = ((($29)) + 1|0);
     HEAP32[$0>>2] = $32;
     $33 = HEAP8[$29>>0]|0;
     $34 = $33&255;
     $c$2 = $34;
     break;
    } else {
     $35 = (___shgetc($f)|0);
     $c$2 = $35;
     break;
    }
   } else {
    $c$2 = $c$185;
   }
  } while(0);
  $36 = (($i$084) + 1)|0;
  $37 = ($36>>>0)<(8);
  if ($37) {
   $c$185 = $c$2;$i$084 = $36;
  } else {
   $c$1$lcssa = $c$2;$i$0$lcssa = $36;
   break;
  }
 }
 do {
  if ((($i$0$lcssa|0) == 3)) {
   label = 23;
  } else if (!((($i$0$lcssa|0) == 8))) {
   $38 = ($i$0$lcssa>>>0)>(3);
   $39 = ($pok|0)!=(0);
   $or$cond5 = $39 & $38;
   if ($or$cond5) {
    $40 = ($i$0$lcssa|0)==(8);
    if ($40) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   $51 = ($i$0$lcssa|0)==(0);
   do {
    if ($51) {
     $52 = $c$1$lcssa | 32;
     $53 = ($52|0)==(110);
     if ($53) {
      $54 = HEAP32[$0>>2]|0;
      $55 = HEAP32[$1>>2]|0;
      $56 = ($54>>>0)<($55>>>0);
      if ($56) {
       $57 = ((($54)) + 1|0);
       HEAP32[$0>>2] = $57;
       $58 = HEAP8[$54>>0]|0;
       $59 = $58&255;
       $c$4 = $59;
      } else {
       $60 = (___shgetc($f)|0);
       $c$4 = $60;
      }
      $61 = $c$4 | 32;
      $62 = ($61|0)==(97);
      if (!($62)) {
       break;
      }
      $712 = HEAP32[$0>>2]|0;
      $713 = HEAP32[$1>>2]|0;
      $714 = ($712>>>0)<($713>>>0);
      if ($714) {
       $716 = ((($712)) + 1|0);
       HEAP32[$0>>2] = $716;
       $717 = HEAP8[$712>>0]|0;
       $718 = $717&255;
       $c$4$1 = $718;
      } else {
       $715 = (___shgetc($f)|0);
       $c$4$1 = $715;
      }
      $719 = $c$4$1 | 32;
      $720 = ($719|0)==(110);
      if (!($720)) {
       break;
      }
      $63 = HEAP32[$0>>2]|0;
      $64 = HEAP32[$1>>2]|0;
      $65 = ($63>>>0)<($64>>>0);
      if ($65) {
       $66 = ((($63)) + 1|0);
       HEAP32[$0>>2] = $66;
       $67 = HEAP8[$63>>0]|0;
       $68 = $67&255;
       $70 = $68;
      } else {
       $69 = (___shgetc($f)|0);
       $70 = $69;
      }
      $71 = ($70|0)==(40);
      if ($71) {
       $i$4 = 1;
      } else {
       $72 = HEAP32[$1>>2]|0;
       $73 = ($72|0)==(0|0);
       if ($73) {
        $$0 = nan;
        STACKTOP = sp;return (+$$0);
       }
       $74 = HEAP32[$0>>2]|0;
       $75 = ((($74)) + -1|0);
       HEAP32[$0>>2] = $75;
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      while(1) {
       $76 = HEAP32[$0>>2]|0;
       $77 = HEAP32[$1>>2]|0;
       $78 = ($76>>>0)<($77>>>0);
       if ($78) {
        $79 = ((($76)) + 1|0);
        HEAP32[$0>>2] = $79;
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $84 = $81;
       } else {
        $82 = (___shgetc($f)|0);
        $84 = $82;
       }
       $83 = (($84) + -48)|0;
       $85 = ($83>>>0)<(10);
       $86 = (($84) + -65)|0;
       $87 = ($86>>>0)<(26);
       $or$cond = $85 | $87;
       if (!($or$cond)) {
        $88 = (($84) + -97)|0;
        $89 = ($88>>>0)<(26);
        $90 = ($84|0)==(95);
        $or$cond7 = $90 | $89;
        if (!($or$cond7)) {
         $$lcssa289 = $84;$i$4$lcssa = $i$4;
         break;
        }
       }
       $102 = (($i$4) + 1)|0;
       $i$4 = $102;
      }
      $91 = ($$lcssa289|0)==(41);
      if ($91) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $92 = HEAP32[$1>>2]|0;
      $93 = ($92|0)==(0|0);
      if (!($93)) {
       $94 = HEAP32[$0>>2]|0;
       $95 = ((($94)) + -1|0);
       HEAP32[$0>>2] = $95;
      }
      if (!($39)) {
       $97 = (___errno_location()|0);
       HEAP32[$97>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       STACKTOP = sp;return (+$$0);
      }
      $96 = ($i$4$lcssa|0)==(0);
      $brmerge187 = $96 | $93;
      if ($brmerge187) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $$promoted185 = HEAP32[$0>>2]|0;
      $$in = $i$4$lcssa;$100 = $$promoted185;
      while(1) {
       $98 = (($$in) + -1)|0;
       $99 = ((($100)) + -1|0);
       $101 = ($98|0)==(0);
       if ($101) {
        $$lcssa288 = $99;
        break;
       } else {
        $$in = $98;$100 = $99;
       }
      }
      HEAP32[$0>>2] = $$lcssa288;
      $$0 = nan;
      STACKTOP = sp;return (+$$0);
     }
     $108 = ($c$1$lcssa|0)==(48);
     do {
      if ($108) {
       $109 = HEAP32[$0>>2]|0;
       $110 = HEAP32[$1>>2]|0;
       $111 = ($109>>>0)<($110>>>0);
       if ($111) {
        $112 = ((($109)) + 1|0);
        HEAP32[$0>>2] = $112;
        $113 = HEAP8[$109>>0]|0;
        $114 = $113&255;
        $117 = $114;
       } else {
        $115 = (___shgetc($f)|0);
        $117 = $115;
       }
       $116 = $117 | 32;
       $118 = ($116|0)==(120);
       if (!($118)) {
        $320 = HEAP32[$1>>2]|0;
        $321 = ($320|0)==(0|0);
        if ($321) {
         $c$6 = 48;
         break;
        }
        $322 = HEAP32[$0>>2]|0;
        $323 = ((($322)) + -1|0);
        HEAP32[$0>>2] = $323;
        $c$6 = 48;
        break;
       }
       $119 = HEAP32[$0>>2]|0;
       $120 = HEAP32[$1>>2]|0;
       $121 = ($119>>>0)<($120>>>0);
       if ($121) {
        $122 = ((($119)) + 1|0);
        HEAP32[$0>>2] = $122;
        $123 = HEAP8[$119>>0]|0;
        $124 = $123&255;
        $c$0$i = $124;$gotdig$0$i = 0;
       } else {
        $125 = (___shgetc($f)|0);
        $c$0$i = $125;$gotdig$0$i = 0;
       }
       while(1) {
        if ((($c$0$i|0) == 46)) {
         $gotdig$0$i$lcssa294 = $gotdig$0$i;
         label = 71;
         break;
        } else if (!((($c$0$i|0) == 48))) {
         $162 = 0;$164 = 0;$721 = 0;$722 = 0;$c$2$i = $c$0$i;$gotdig$2$i = $gotdig$0$i;$gotrad$0$i = 0;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
         break;
        }
        $126 = HEAP32[$0>>2]|0;
        $127 = HEAP32[$1>>2]|0;
        $128 = ($126>>>0)<($127>>>0);
        if ($128) {
         $129 = ((($126)) + 1|0);
         HEAP32[$0>>2] = $129;
         $130 = HEAP8[$126>>0]|0;
         $131 = $130&255;
         $c$0$i = $131;$gotdig$0$i = 1;
         continue;
        } else {
         $132 = (___shgetc($f)|0);
         $c$0$i = $132;$gotdig$0$i = 1;
         continue;
        }
       }
       if ((label|0) == 71) {
        $133 = HEAP32[$0>>2]|0;
        $134 = HEAP32[$1>>2]|0;
        $135 = ($133>>>0)<($134>>>0);
        if ($135) {
         $136 = ((($133)) + 1|0);
         HEAP32[$0>>2] = $136;
         $137 = HEAP8[$133>>0]|0;
         $138 = $137&255;
         $c$1$ph$i = $138;
        } else {
         $139 = (___shgetc($f)|0);
         $c$1$ph$i = $139;
        }
        $140 = ($c$1$ph$i|0)==(48);
        if ($140) {
         $148 = 0;$149 = 0;
         while(1) {
          $141 = HEAP32[$0>>2]|0;
          $142 = HEAP32[$1>>2]|0;
          $143 = ($141>>>0)<($142>>>0);
          if ($143) {
           $144 = ((($141)) + 1|0);
           HEAP32[$0>>2] = $144;
           $145 = HEAP8[$141>>0]|0;
           $146 = $145&255;
           $152 = $146;
          } else {
           $147 = (___shgetc($f)|0);
           $152 = $147;
          }
          $150 = (_i64Add(($148|0),($149|0),-1,-1)|0);
          $151 = tempRet0;
          $153 = ($152|0)==(48);
          if ($153) {
           $148 = $150;$149 = $151;
          } else {
           $162 = 0;$164 = 0;$721 = $150;$722 = $151;$c$2$i = $152;$gotdig$2$i = 1;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
           break;
          }
         }
        } else {
         $162 = 0;$164 = 0;$721 = 0;$722 = 0;$c$2$i = $c$1$ph$i;$gotdig$2$i = $gotdig$0$i$lcssa294;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
        }
       }
       while(1) {
        $154 = (($c$2$i) + -48)|0;
        $155 = ($154>>>0)<(10);
        $$pre$i = $c$2$i | 32;
        if ($155) {
         label = 83;
        } else {
         $156 = (($$pre$i) + -97)|0;
         $157 = ($156>>>0)<(6);
         $158 = ($c$2$i|0)==(46);
         $or$cond6$i = $158 | $157;
         if (!($or$cond6$i)) {
          $206 = $721;$207 = $164;$209 = $722;$210 = $162;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
          break;
         }
         if ($158) {
          $159 = ($gotrad$0$i|0)==(0);
          if ($159) {
           $723 = $164;$724 = $162;$725 = $164;$726 = $162;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
          } else {
           $206 = $721;$207 = $164;$209 = $722;$210 = $162;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break;
          }
         } else {
          label = 83;
         }
        }
        if ((label|0) == 83) {
         label = 0;
         $160 = ($c$2$i|0)>(57);
         $161 = (($$pre$i) + -87)|0;
         $d$0$i = $160 ? $161 : $154;
         $163 = ($162|0)<(0);
         $165 = ($164>>>0)<(8);
         $166 = ($162|0)==(0);
         $167 = $166 & $165;
         $168 = $163 | $167;
         do {
          if ($168) {
           $169 = $x$0$i << 4;
           $170 = (($d$0$i) + ($169))|0;
           $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $170;$y$1$i = $y$0$i;
          } else {
           $171 = ($162|0)<(0);
           $172 = ($164>>>0)<(14);
           $173 = ($162|0)==(0);
           $174 = $173 & $172;
           $175 = $171 | $174;
           if ($175) {
            $176 = (+($d$0$i|0));
            $177 = $scale$0$i * 0.0625;
            $178 = $177 * $176;
            $179 = $y$0$i + $178;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $177;$x$1$i = $x$0$i;$y$1$i = $179;
            break;
           }
           $180 = ($d$0$i|0)==(0);
           $181 = ($gottail$0$i|0)!=(0);
           $or$cond$i = $181 | $180;
           if ($or$cond$i) {
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
           } else {
            $182 = $scale$0$i * 0.5;
            $183 = $y$0$i + $182;
            $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $183;
           }
          }
         } while(0);
         $184 = (_i64Add(($164|0),($162|0),1,0)|0);
         $185 = tempRet0;
         $723 = $721;$724 = $722;$725 = $184;$726 = $185;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
        }
        $186 = HEAP32[$0>>2]|0;
        $187 = HEAP32[$1>>2]|0;
        $188 = ($186>>>0)<($187>>>0);
        if ($188) {
         $189 = ((($186)) + 1|0);
         HEAP32[$0>>2] = $189;
         $190 = HEAP8[$186>>0]|0;
         $191 = $190&255;
         $162 = $726;$164 = $725;$721 = $723;$722 = $724;$c$2$i = $191;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
         continue;
        } else {
         $192 = (___shgetc($f)|0);
         $162 = $726;$164 = $725;$721 = $723;$722 = $724;$c$2$i = $192;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
         continue;
        }
       }
       $193 = ($gotdig$2$i$lcssa|0)==(0);
       if ($193) {
        $194 = HEAP32[$1>>2]|0;
        $195 = ($194|0)==(0|0);
        if (!($195)) {
         $196 = HEAP32[$0>>2]|0;
         $197 = ((($196)) + -1|0);
         HEAP32[$0>>2] = $197;
        }
        $198 = ($pok|0)==(0);
        if ($198) {
         ___shlim($f,0);
        } else {
         if (!($195)) {
          $199 = HEAP32[$0>>2]|0;
          $200 = ((($199)) + -1|0);
          HEAP32[$0>>2] = $200;
          $201 = ($gotrad$0$i$lcssa|0)==(0);
          if (!($201)) {
           $202 = ((($199)) + -2|0);
           HEAP32[$0>>2] = $202;
          }
         }
        }
        $203 = (+($sign$0|0));
        $204 = $203 * 0.0;
        $$0 = $204;
        STACKTOP = sp;return (+$$0);
       }
       $205 = ($gotrad$0$i$lcssa|0)==(0);
       $208 = $205 ? $207 : $206;
       $211 = $205 ? $210 : $209;
       $212 = ($210|0)<(0);
       $213 = ($207>>>0)<(8);
       $214 = ($210|0)==(0);
       $215 = $214 & $213;
       $216 = $212 | $215;
       if ($216) {
        $218 = $207;$219 = $210;$x$324$i = $x$0$i$lcssa;
        while(1) {
         $217 = $x$324$i << 4;
         $220 = (_i64Add(($218|0),($219|0),1,0)|0);
         $221 = tempRet0;
         $222 = ($221|0)<(0);
         $223 = ($220>>>0)<(8);
         $224 = ($221|0)==(0);
         $225 = $224 & $223;
         $226 = $222 | $225;
         if ($226) {
          $218 = $220;$219 = $221;$x$324$i = $217;
         } else {
          $x$3$lcssa$i = $217;
          break;
         }
        }
       } else {
        $x$3$lcssa$i = $x$0$i$lcssa;
       }
       $227 = $c$2$lcssa$i | 32;
       $228 = ($227|0)==(112);
       do {
        if ($228) {
         $229 = (_scanexp($f,$pok)|0);
         $230 = tempRet0;
         $231 = ($229|0)==(0);
         $232 = ($230|0)==(-2147483648);
         $233 = $231 & $232;
         if ($233) {
          $234 = ($pok|0)==(0);
          if ($234) {
           ___shlim($f,0);
           $$0 = 0.0;
           STACKTOP = sp;return (+$$0);
          } else {
           $235 = HEAP32[$1>>2]|0;
           $236 = ($235|0)==(0|0);
           if ($236) {
            $247 = 0;$248 = 0;
            break;
           }
           $237 = HEAP32[$0>>2]|0;
           $238 = ((($237)) + -1|0);
           HEAP32[$0>>2] = $238;
           $247 = 0;$248 = 0;
           break;
          }
         } else {
          $247 = $229;$248 = $230;
         }
        } else {
         $239 = HEAP32[$1>>2]|0;
         $240 = ($239|0)==(0|0);
         if ($240) {
          $247 = 0;$248 = 0;
         } else {
          $241 = HEAP32[$0>>2]|0;
          $242 = ((($241)) + -1|0);
          HEAP32[$0>>2] = $242;
          $247 = 0;$248 = 0;
         }
        }
       } while(0);
       $243 = (_bitshift64Shl(($208|0),($211|0),2)|0);
       $244 = tempRet0;
       $245 = (_i64Add(($243|0),($244|0),-32,-1)|0);
       $246 = tempRet0;
       $249 = (_i64Add(($245|0),($246|0),($247|0),($248|0))|0);
       $250 = tempRet0;
       $251 = ($x$3$lcssa$i|0)==(0);
       if ($251) {
        $252 = (+($sign$0|0));
        $253 = $252 * 0.0;
        $$0 = $253;
        STACKTOP = sp;return (+$$0);
       }
       $254 = (0 - ($emin$0$ph))|0;
       $255 = ($250|0)>(0);
       $256 = ($249>>>0)>($254>>>0);
       $257 = ($250|0)==(0);
       $258 = $257 & $256;
       $259 = $255 | $258;
       if ($259) {
        $260 = (___errno_location()|0);
        HEAP32[$260>>2] = 34;
        $261 = (+($sign$0|0));
        $262 = $261 * 1.7976931348623157E+308;
        $263 = $262 * 1.7976931348623157E+308;
        $$0 = $263;
        STACKTOP = sp;return (+$$0);
       }
       $264 = (($emin$0$ph) + -106)|0;
       $265 = ($264|0)<(0);
       $266 = $265 << 31 >> 31;
       $267 = ($250|0)<($266|0);
       $268 = ($249>>>0)<($264>>>0);
       $269 = ($250|0)==($266|0);
       $270 = $269 & $268;
       $271 = $267 | $270;
       if ($271) {
        $273 = (___errno_location()|0);
        HEAP32[$273>>2] = 34;
        $274 = (+($sign$0|0));
        $275 = $274 * 2.2250738585072014E-308;
        $276 = $275 * 2.2250738585072014E-308;
        $$0 = $276;
        STACKTOP = sp;return (+$$0);
       }
       $272 = ($x$3$lcssa$i|0)>(-1);
       if ($272) {
        $282 = $249;$283 = $250;$x$419$i = $x$3$lcssa$i;$y$320$i = $y$0$i$lcssa;
        while(1) {
         $277 = !($y$320$i >= 0.5);
         $278 = $x$419$i << 1;
         $279 = $y$320$i + -1.0;
         $280 = $277&1;
         $281 = $280 | $278;
         $x$5$i = $281 ^ 1;
         $$pn$i = $277 ? $y$320$i : $279;
         $y$4$i = $y$320$i + $$pn$i;
         $284 = (_i64Add(($282|0),($283|0),-1,-1)|0);
         $285 = tempRet0;
         $286 = ($281|0)>(-1);
         if ($286) {
          $282 = $284;$283 = $285;$x$419$i = $x$5$i;$y$320$i = $y$4$i;
         } else {
          $291 = $284;$292 = $285;$x$4$lcssa$i = $x$5$i;$y$3$lcssa$i = $y$4$i;
          break;
         }
        }
       } else {
        $291 = $249;$292 = $250;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
       }
       $287 = ($emin$0$ph|0)<(0);
       $288 = $287 << 31 >> 31;
       $289 = (_i64Subtract(32,0,($emin$0$ph|0),($288|0))|0);
       $290 = tempRet0;
       $293 = (_i64Add(($291|0),($292|0),($289|0),($290|0))|0);
       $294 = tempRet0;
       $295 = (0)>($294|0);
       $296 = ($bits$0$ph>>>0)>($293>>>0);
       $297 = (0)==($294|0);
       $298 = $297 & $296;
       $299 = $295 | $298;
       if ($299) {
        $300 = ($293|0)<(0);
        if ($300) {
         $$0710$i = 0;
         label = 124;
        } else {
         $$07$i = $293;
         label = 122;
        }
       } else {
        $$07$i = $bits$0$ph;
        label = 122;
       }
       do {
        if ((label|0) == 122) {
         $301 = ($$07$i|0)<(53);
         if ($301) {
          $$0710$i = $$07$i;
          label = 124;
          break;
         }
         $$pre41$i = (+($sign$0|0));
         $$0711$i = $$07$i;$$pre$phi42$iZ2D = $$pre41$i;$bias$0$i = 0.0;
        }
       } while(0);
       if ((label|0) == 124) {
        $302 = (84 - ($$0710$i))|0;
        $303 = (+_scalbn(1.0,$302));
        $304 = (+($sign$0|0));
        $305 = (+_copysignl($303,$304));
        $$0711$i = $$0710$i;$$pre$phi42$iZ2D = $304;$bias$0$i = $305;
       }
       $306 = ($$0711$i|0)<(32);
       $307 = $y$3$lcssa$i != 0.0;
       $or$cond4$i = $307 & $306;
       $308 = $x$4$lcssa$i & 1;
       $309 = ($308|0)==(0);
       $or$cond9$i = $309 & $or$cond4$i;
       $310 = $or$cond9$i&1;
       $x$6$i = (($310) + ($x$4$lcssa$i))|0;
       $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
       $311 = (+($x$6$i>>>0));
       $312 = $$pre$phi42$iZ2D * $311;
       $313 = $bias$0$i + $312;
       $314 = $$pre$phi42$iZ2D * $y$5$i;
       $315 = $314 + $313;
       $316 = $315 - $bias$0$i;
       $317 = $316 != 0.0;
       if (!($317)) {
        $318 = (___errno_location()|0);
        HEAP32[$318>>2] = 34;
       }
       $319 = (+_scalbnl($316,$291));
       $$0 = $319;
       STACKTOP = sp;return (+$$0);
      } else {
       $c$6 = $c$1$lcssa;
      }
     } while(0);
     $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
     $324 = (0 - ($sum$i))|0;
     $$09$i = $c$6;$gotdig$0$i12 = 0;
     while(1) {
      if ((($$09$i|0) == 46)) {
       $gotdig$0$i12$lcssa331 = $gotdig$0$i12;
       label = 135;
       break;
      } else if (!((($$09$i|0) == 48))) {
       $$2$i = $$09$i;$727 = 0;$728 = 0;$gotdig$2$i13 = $gotdig$0$i12;$gotrad$0$i14 = 0;
       break;
      }
      $325 = HEAP32[$0>>2]|0;
      $326 = HEAP32[$1>>2]|0;
      $327 = ($325>>>0)<($326>>>0);
      if ($327) {
       $328 = ((($325)) + 1|0);
       HEAP32[$0>>2] = $328;
       $329 = HEAP8[$325>>0]|0;
       $330 = $329&255;
       $$09$i = $330;$gotdig$0$i12 = 1;
       continue;
      } else {
       $331 = (___shgetc($f)|0);
       $$09$i = $331;$gotdig$0$i12 = 1;
       continue;
      }
     }
     if ((label|0) == 135) {
      $332 = HEAP32[$0>>2]|0;
      $333 = HEAP32[$1>>2]|0;
      $334 = ($332>>>0)<($333>>>0);
      if ($334) {
       $335 = ((($332)) + 1|0);
       HEAP32[$0>>2] = $335;
       $336 = HEAP8[$332>>0]|0;
       $337 = $336&255;
       $$1$ph$i = $337;
      } else {
       $338 = (___shgetc($f)|0);
       $$1$ph$i = $338;
      }
      $339 = ($$1$ph$i|0)==(48);
      if ($339) {
       $340 = 0;$341 = 0;
       while(1) {
        $342 = (_i64Add(($340|0),($341|0),-1,-1)|0);
        $343 = tempRet0;
        $344 = HEAP32[$0>>2]|0;
        $345 = HEAP32[$1>>2]|0;
        $346 = ($344>>>0)<($345>>>0);
        if ($346) {
         $347 = ((($344)) + 1|0);
         HEAP32[$0>>2] = $347;
         $348 = HEAP8[$344>>0]|0;
         $349 = $348&255;
         $$1$be$i = $349;
        } else {
         $350 = (___shgetc($f)|0);
         $$1$be$i = $350;
        }
        $351 = ($$1$be$i|0)==(48);
        if ($351) {
         $340 = $342;$341 = $343;
        } else {
         $$2$i = $$1$be$i;$727 = $342;$728 = $343;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
         break;
        }
       }
      } else {
       $$2$i = $$1$ph$i;$727 = 0;$728 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa331;$gotrad$0$i14 = 1;
      }
     }
     HEAP32[$x$i>>2] = 0;
     $352 = (($$2$i) + -48)|0;
     $353 = ($352>>>0)<(10);
     $354 = ($$2$i|0)==(46);
     $355 = $354 | $353;
     L214: do {
      if ($355) {
       $356 = ((($x$i)) + 496|0);
       $$3121$i = $$2$i;$359 = 0;$360 = 0;$729 = $354;$730 = $352;$731 = $727;$732 = $728;$gotdig$3117$i = $gotdig$2$i13;$gotrad$1118$i = $gotrad$0$i14;$j$0120$i = 0;$k$0119$i = 0;$lnz$0116$i = 0;
       L216: while(1) {
        do {
         if ($729) {
          $cond$i = ($gotrad$1118$i|0)==(0);
          if ($cond$i) {
           $733 = $359;$734 = $360;$735 = $359;$736 = $360;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = 1;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
          } else {
           $737 = $731;$738 = $732;$739 = $359;$740 = $360;$gotdig$3117$i$lcssa = $gotdig$3117$i;$j$0120$i$lcssa = $j$0120$i;$k$0119$i$lcssa = $k$0119$i;$lnz$0116$i$lcssa = $lnz$0116$i;
           break L216;
          }
         } else {
          $358 = ($k$0119$i|0)<(125);
          $361 = (_i64Add(($359|0),($360|0),1,0)|0);
          $362 = tempRet0;
          $363 = ($$3121$i|0)!=(48);
          if (!($358)) {
           if (!($363)) {
            $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
            break;
           }
           $373 = HEAP32[$356>>2]|0;
           $374 = $373 | 1;
           HEAP32[$356>>2] = $374;
           $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
           break;
          }
          $$lnz$0$i = $363 ? $361 : $lnz$0116$i;
          $364 = ($j$0120$i|0)==(0);
          $365 = (($x$i) + ($k$0119$i<<2)|0);
          if ($364) {
           $storemerge$i = $730;
          } else {
           $366 = HEAP32[$365>>2]|0;
           $367 = ($366*10)|0;
           $368 = (($$3121$i) + -48)|0;
           $369 = (($368) + ($367))|0;
           $storemerge$i = $369;
          }
          HEAP32[$365>>2] = $storemerge$i;
          $370 = (($j$0120$i) + 1)|0;
          $371 = ($370|0)==(9);
          $372 = $371&1;
          $$k$0$i = (($372) + ($k$0119$i))|0;
          $$11$i = $371 ? 0 : $370;
          $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $$11$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
         }
        } while(0);
        $375 = HEAP32[$0>>2]|0;
        $376 = HEAP32[$1>>2]|0;
        $377 = ($375>>>0)<($376>>>0);
        if ($377) {
         $378 = ((($375)) + 1|0);
         HEAP32[$0>>2] = $378;
         $379 = HEAP8[$375>>0]|0;
         $380 = $379&255;
         $$3$be$i = $380;
        } else {
         $381 = (___shgetc($f)|0);
         $$3$be$i = $381;
        }
        $382 = (($$3$be$i) + -48)|0;
        $383 = ($382>>>0)<(10);
        $384 = ($$3$be$i|0)==(46);
        $385 = $384 | $383;
        if ($385) {
         $$3121$i = $$3$be$i;$359 = $735;$360 = $736;$729 = $384;$730 = $382;$731 = $733;$732 = $734;$gotdig$3117$i = $gotdig$4$i;$gotrad$1118$i = $gotrad$2$i;$j$0120$i = $j$2$i;$k$0119$i = $k$2$i;$lnz$0116$i = $lnz$2$i;
        } else {
         $$3$lcssa$i = $$3$be$i;$387 = $733;$388 = $735;$390 = $734;$391 = $736;$gotdig$3$lcssa$i = $gotdig$4$i;$gotrad$1$lcssa$i = $gotrad$2$i;$j$0$lcssa$i = $j$2$i;$k$0$lcssa$i = $k$2$i;$lnz$0$lcssa$i = $lnz$2$i;
         label = 158;
         break L214;
        }
       }
       $357 = ($gotdig$3117$i$lcssa|0)!=(0);
       $741 = $739;$742 = $740;$743 = $737;$744 = $738;$745 = $357;$j$069$i = $j$0120$i$lcssa;$k$065$i = $k$0119$i$lcssa;$lnz$059$i = $lnz$0116$i$lcssa;
       label = 166;
      } else {
       $$3$lcssa$i = $$2$i;$387 = $727;$388 = 0;$390 = $728;$391 = 0;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
       label = 158;
      }
     } while(0);
     do {
      if ((label|0) == 158) {
       $386 = ($gotrad$1$lcssa$i|0)==(0);
       $389 = $386 ? $388 : $387;
       $392 = $386 ? $391 : $390;
       $393 = ($gotdig$3$lcssa$i|0)!=(0);
       $394 = $$3$lcssa$i | 32;
       $395 = ($394|0)==(101);
       $or$cond13$i = $395 & $393;
       if (!($or$cond13$i)) {
        $410 = ($$3$lcssa$i|0)>(-1);
        if ($410) {
         $741 = $388;$742 = $391;$743 = $389;$744 = $392;$745 = $393;$j$069$i = $j$0$lcssa$i;$k$065$i = $k$0$lcssa$i;$lnz$059$i = $lnz$0$lcssa$i;
         label = 166;
         break;
        } else {
         $746 = $388;$747 = $391;$748 = $393;$749 = $389;$750 = $392;$j$068$i = $j$0$lcssa$i;$k$064$i = $k$0$lcssa$i;$lnz$058$i = $lnz$0$lcssa$i;
         label = 168;
         break;
        }
       }
       $396 = (_scanexp($f,$pok)|0);
       $397 = tempRet0;
       $398 = ($396|0)==(0);
       $399 = ($397|0)==(-2147483648);
       $400 = $398 & $399;
       if ($400) {
        $401 = ($pok|0)==(0);
        if ($401) {
         ___shlim($f,0);
         $$0$i25 = 0.0;
         break;
        }
        $402 = HEAP32[$1>>2]|0;
        $403 = ($402|0)==(0|0);
        if ($403) {
         $406 = 0;$407 = 0;
        } else {
         $404 = HEAP32[$0>>2]|0;
         $405 = ((($404)) + -1|0);
         HEAP32[$0>>2] = $405;
         $406 = 0;$407 = 0;
        }
       } else {
        $406 = $396;$407 = $397;
       }
       $408 = (_i64Add(($406|0),($407|0),($389|0),($392|0))|0);
       $409 = tempRet0;
       $420 = $408;$422 = $388;$423 = $409;$425 = $391;$j$067$i = $j$0$lcssa$i;$k$063$i = $k$0$lcssa$i;$lnz$057$i = $lnz$0$lcssa$i;
       label = 170;
      }
     } while(0);
     if ((label|0) == 166) {
      $411 = HEAP32[$1>>2]|0;
      $412 = ($411|0)==(0|0);
      if ($412) {
       $746 = $741;$747 = $742;$748 = $745;$749 = $743;$750 = $744;$j$068$i = $j$069$i;$k$064$i = $k$065$i;$lnz$058$i = $lnz$059$i;
       label = 168;
      } else {
       $413 = HEAP32[$0>>2]|0;
       $414 = ((($413)) + -1|0);
       HEAP32[$0>>2] = $414;
       if ($745) {
        $420 = $743;$422 = $741;$423 = $744;$425 = $742;$j$067$i = $j$069$i;$k$063$i = $k$065$i;$lnz$057$i = $lnz$059$i;
        label = 170;
       } else {
        label = 169;
       }
      }
     }
     if ((label|0) == 168) {
      if ($748) {
       $420 = $749;$422 = $746;$423 = $750;$425 = $747;$j$067$i = $j$068$i;$k$063$i = $k$064$i;$lnz$057$i = $lnz$058$i;
       label = 170;
      } else {
       label = 169;
      }
     }
     do {
      if ((label|0) == 169) {
       $415 = (___errno_location()|0);
       HEAP32[$415>>2] = 22;
       ___shlim($f,0);
       $$0$i25 = 0.0;
      }
      else if ((label|0) == 170) {
       $416 = HEAP32[$x$i>>2]|0;
       $417 = ($416|0)==(0);
       if ($417) {
        $418 = (+($sign$0|0));
        $419 = $418 * 0.0;
        $$0$i25 = $419;
        break;
       }
       $421 = ($420|0)==($422|0);
       $424 = ($423|0)==($425|0);
       $426 = $421 & $424;
       $427 = ($425|0)<(0);
       $428 = ($422>>>0)<(10);
       $429 = ($425|0)==(0);
       $430 = $429 & $428;
       $431 = $427 | $430;
       $or$cond$i16 = $431 & $426;
       if ($or$cond$i16) {
        $432 = ($bits$0$ph>>>0)>(30);
        $433 = $416 >>> $bits$0$ph;
        $434 = ($433|0)==(0);
        $or$cond15$i = $432 | $434;
        if ($or$cond15$i) {
         $435 = (+($sign$0|0));
         $436 = (+($416>>>0));
         $437 = $435 * $436;
         $$0$i25 = $437;
         break;
        }
       }
       $438 = (($emin$0$ph|0) / -2)&-1;
       $439 = ($438|0)<(0);
       $440 = $439 << 31 >> 31;
       $441 = ($423|0)>($440|0);
       $442 = ($420>>>0)>($438>>>0);
       $443 = ($423|0)==($440|0);
       $444 = $443 & $442;
       $445 = $441 | $444;
       if ($445) {
        $446 = (___errno_location()|0);
        HEAP32[$446>>2] = 34;
        $447 = (+($sign$0|0));
        $448 = $447 * 1.7976931348623157E+308;
        $449 = $448 * 1.7976931348623157E+308;
        $$0$i25 = $449;
        break;
       }
       $450 = (($emin$0$ph) + -106)|0;
       $451 = ($450|0)<(0);
       $452 = $451 << 31 >> 31;
       $453 = ($423|0)<($452|0);
       $454 = ($420>>>0)<($450>>>0);
       $455 = ($423|0)==($452|0);
       $456 = $455 & $454;
       $457 = $453 | $456;
       if ($457) {
        $458 = (___errno_location()|0);
        HEAP32[$458>>2] = 34;
        $459 = (+($sign$0|0));
        $460 = $459 * 2.2250738585072014E-308;
        $461 = $460 * 2.2250738585072014E-308;
        $$0$i25 = $461;
        break;
       }
       $462 = ($j$067$i|0)==(0);
       if ($462) {
        $k$3$i = $k$063$i;
       } else {
        $463 = ($j$067$i|0)<(9);
        if ($463) {
         $464 = (($x$i) + ($k$063$i<<2)|0);
         $$promoted$i = HEAP32[$464>>2]|0;
         $466 = $$promoted$i;$j$3110$i = $j$067$i;
         while(1) {
          $465 = ($466*10)|0;
          $467 = (($j$3110$i) + 1)|0;
          $exitcond$i = ($467|0)==(9);
          if ($exitcond$i) {
           $$lcssa323 = $465;
           break;
          } else {
           $466 = $465;$j$3110$i = $467;
          }
         }
         HEAP32[$464>>2] = $$lcssa323;
        }
        $468 = (($k$063$i) + 1)|0;
        $k$3$i = $468;
       }
       $469 = ($lnz$057$i|0)<(9);
       if ($469) {
        $470 = ($lnz$057$i|0)<=($420|0);
        $471 = ($420|0)<(18);
        $or$cond3$i = $470 & $471;
        if ($or$cond3$i) {
         $472 = ($420|0)==(9);
         if ($472) {
          $473 = (+($sign$0|0));
          $474 = HEAP32[$x$i>>2]|0;
          $475 = (+($474>>>0));
          $476 = $473 * $475;
          $$0$i25 = $476;
          break;
         }
         $477 = ($420|0)<(9);
         if ($477) {
          $478 = (+($sign$0|0));
          $479 = HEAP32[$x$i>>2]|0;
          $480 = (+($479>>>0));
          $481 = $478 * $480;
          $482 = (8 - ($420))|0;
          $483 = (3808 + ($482<<2)|0);
          $484 = HEAP32[$483>>2]|0;
          $485 = (+($484|0));
          $486 = $481 / $485;
          $$0$i25 = $486;
          break;
         }
         $$neg32$i = (($bits$0$ph) + 27)|0;
         $487 = Math_imul($420, -3)|0;
         $488 = (($$neg32$i) + ($487))|0;
         $489 = ($488|0)>(30);
         $$pre$i17 = HEAP32[$x$i>>2]|0;
         $490 = $$pre$i17 >>> $488;
         $491 = ($490|0)==(0);
         $or$cond216$i = $489 | $491;
         if ($or$cond216$i) {
          $492 = (+($sign$0|0));
          $493 = (+($$pre$i17>>>0));
          $494 = $492 * $493;
          $495 = (($420) + -10)|0;
          $496 = (3808 + ($495<<2)|0);
          $497 = HEAP32[$496>>2]|0;
          $498 = (+($497|0));
          $499 = $494 * $498;
          $$0$i25 = $499;
          break;
         }
        }
       }
       $500 = (($420|0) % 9)&-1;
       $501 = ($500|0)==(0);
       if ($501) {
        $a$2$ph38$i = 0;$e2$0$ph$i = 0;$rp$2$ph36$i = $420;$z$1$ph37$i = $k$3$i;
       } else {
        $502 = ($420|0)>(-1);
        $503 = (($500) + 9)|0;
        $504 = $502 ? $500 : $503;
        $505 = (8 - ($504))|0;
        $506 = (3808 + ($505<<2)|0);
        $507 = HEAP32[$506>>2]|0;
        $508 = ($k$3$i|0)==(0);
        if ($508) {
         $a$0$lcssa177$i = 0;$rp$0$lcssa178$i = $420;$z$0$i = 0;
        } else {
         $509 = (1000000000 / ($507|0))&-1;
         $a$0101$i = 0;$carry$0103$i = 0;$k$4102$i = 0;$rp$0100$i = $420;
         while(1) {
          $510 = (($x$i) + ($k$4102$i<<2)|0);
          $511 = HEAP32[$510>>2]|0;
          $512 = (($511>>>0) % ($507>>>0))&-1;
          $513 = (($511>>>0) / ($507>>>0))&-1;
          $514 = (($513) + ($carry$0103$i))|0;
          HEAP32[$510>>2] = $514;
          $515 = Math_imul($512, $509)|0;
          $516 = ($k$4102$i|0)==($a$0101$i|0);
          $517 = ($514|0)==(0);
          $or$cond16$i = $516 & $517;
          $518 = (($k$4102$i) + 1)|0;
          $519 = $518 & 127;
          $520 = (($rp$0100$i) + -9)|0;
          $rp$1$i18 = $or$cond16$i ? $520 : $rp$0100$i;
          $a$1$i = $or$cond16$i ? $519 : $a$0101$i;
          $521 = ($518|0)==($k$3$i|0);
          if ($521) {
           $$lcssa322 = $515;$a$1$i$lcssa = $a$1$i;$rp$1$i18$lcssa = $rp$1$i18;
           break;
          } else {
           $a$0101$i = $a$1$i;$carry$0103$i = $515;$k$4102$i = $518;$rp$0100$i = $rp$1$i18;
          }
         }
         $522 = ($$lcssa322|0)==(0);
         if ($522) {
          $a$0$lcssa177$i = $a$1$i$lcssa;$rp$0$lcssa178$i = $rp$1$i18$lcssa;$z$0$i = $k$3$i;
         } else {
          $523 = (($k$3$i) + 1)|0;
          $524 = (($x$i) + ($k$3$i<<2)|0);
          HEAP32[$524>>2] = $$lcssa322;
          $a$0$lcssa177$i = $a$1$i$lcssa;$rp$0$lcssa178$i = $rp$1$i18$lcssa;$z$0$i = $523;
         }
        }
        $525 = (9 - ($504))|0;
        $526 = (($525) + ($rp$0$lcssa178$i))|0;
        $a$2$ph38$i = $a$0$lcssa177$i;$e2$0$ph$i = 0;$rp$2$ph36$i = $526;$z$1$ph37$i = $z$0$i;
       }
       L296: while(1) {
        $527 = ($rp$2$ph36$i|0)<(18);
        $528 = (($x$i) + ($a$2$ph38$i<<2)|0);
        if ($527) {
         $e2$0$us$i = $e2$0$ph$i;$z$1$us$i = $z$1$ph37$i;
         while(1) {
          $530 = (($z$1$us$i) + 127)|0;
          $carry1$0$us$i = 0;$k$5$in$us$i = $530;$z$2$us$i = $z$1$us$i;
          while(1) {
           $k$5$us$i = $k$5$in$us$i & 127;
           $531 = (($x$i) + ($k$5$us$i<<2)|0);
           $532 = HEAP32[$531>>2]|0;
           $533 = (_bitshift64Shl(($532|0),0,29)|0);
           $534 = tempRet0;
           $535 = (_i64Add(($533|0),($534|0),($carry1$0$us$i|0),0)|0);
           $536 = tempRet0;
           $537 = ($536>>>0)>(0);
           $538 = ($535>>>0)>(1000000000);
           $539 = ($536|0)==(0);
           $540 = $539 & $538;
           $541 = $537 | $540;
           if ($541) {
            $542 = (___udivdi3(($535|0),($536|0),1000000000,0)|0);
            $543 = tempRet0;
            $544 = (___uremdi3(($535|0),($536|0),1000000000,0)|0);
            $545 = tempRet0;
            $$sink$off0$us$i = $544;$carry1$1$us$i = $542;
           } else {
            $$sink$off0$us$i = $535;$carry1$1$us$i = 0;
           }
           HEAP32[$531>>2] = $$sink$off0$us$i;
           $546 = (($z$2$us$i) + 127)|0;
           $547 = $546 & 127;
           $548 = ($k$5$us$i|0)!=($547|0);
           $549 = ($k$5$us$i|0)==($a$2$ph38$i|0);
           $or$cond17$us$i = $548 | $549;
           $550 = ($$sink$off0$us$i|0)==(0);
           $k$5$z$2$us$i = $550 ? $k$5$us$i : $z$2$us$i;
           $z$3$us$i = $or$cond17$us$i ? $z$2$us$i : $k$5$z$2$us$i;
           $551 = (($k$5$us$i) + -1)|0;
           if ($549) {
            $carry1$1$us$i$lcssa = $carry1$1$us$i;$z$3$us$i$lcssa = $z$3$us$i;
            break;
           } else {
            $carry1$0$us$i = $carry1$1$us$i;$k$5$in$us$i = $551;$z$2$us$i = $z$3$us$i;
           }
          }
          $552 = (($e2$0$us$i) + -29)|0;
          $553 = ($carry1$1$us$i$lcssa|0)==(0);
          if ($553) {
           $e2$0$us$i = $552;$z$1$us$i = $z$3$us$i$lcssa;
          } else {
           $$lcssa50$i = $552;$carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa;$z$3$lcssa$lcssa$i = $z$3$us$i$lcssa;
           break;
          }
         }
        } else {
         $529 = ($rp$2$ph36$i|0)==(18);
         if ($529) {
          $e2$0$us84$i = $e2$0$ph$i;$z$1$us85$i = $z$1$ph37$i;
         } else {
          $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$ph$i;$rp$3$ph34$i = $rp$2$ph36$i;$z$5$ph$i = $z$1$ph37$i;
          break;
         }
         while(1) {
          $554 = HEAP32[$528>>2]|0;
          $555 = ($554>>>0)<(9007199);
          if (!($555)) {
           $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$us84$i;$rp$3$ph34$i = 18;$z$5$ph$i = $z$1$us85$i;
           break L296;
          }
          $556 = (($z$1$us85$i) + 127)|0;
          $carry1$0$us89$i = 0;$k$5$in$us88$i = $556;$z$2$us87$i = $z$1$us85$i;
          while(1) {
           $k$5$us90$i = $k$5$in$us88$i & 127;
           $557 = (($x$i) + ($k$5$us90$i<<2)|0);
           $558 = HEAP32[$557>>2]|0;
           $559 = (_bitshift64Shl(($558|0),0,29)|0);
           $560 = tempRet0;
           $561 = (_i64Add(($559|0),($560|0),($carry1$0$us89$i|0),0)|0);
           $562 = tempRet0;
           $563 = ($562>>>0)>(0);
           $564 = ($561>>>0)>(1000000000);
           $565 = ($562|0)==(0);
           $566 = $565 & $564;
           $567 = $563 | $566;
           if ($567) {
            $568 = (___udivdi3(($561|0),($562|0),1000000000,0)|0);
            $569 = tempRet0;
            $570 = (___uremdi3(($561|0),($562|0),1000000000,0)|0);
            $571 = tempRet0;
            $$sink$off0$us93$i = $570;$carry1$1$us94$i = $568;
           } else {
            $$sink$off0$us93$i = $561;$carry1$1$us94$i = 0;
           }
           HEAP32[$557>>2] = $$sink$off0$us93$i;
           $572 = (($z$2$us87$i) + 127)|0;
           $573 = $572 & 127;
           $574 = ($k$5$us90$i|0)!=($573|0);
           $575 = ($k$5$us90$i|0)==($a$2$ph38$i|0);
           $or$cond17$us95$i = $574 | $575;
           $576 = ($$sink$off0$us93$i|0)==(0);
           $k$5$z$2$us96$i = $576 ? $k$5$us90$i : $z$2$us87$i;
           $z$3$us97$i = $or$cond17$us95$i ? $z$2$us87$i : $k$5$z$2$us96$i;
           $577 = (($k$5$us90$i) + -1)|0;
           if ($575) {
            $carry1$1$us94$i$lcssa = $carry1$1$us94$i;$z$3$us97$i$lcssa = $z$3$us97$i;
            break;
           } else {
            $carry1$0$us89$i = $carry1$1$us94$i;$k$5$in$us88$i = $577;$z$2$us87$i = $z$3$us97$i;
           }
          }
          $578 = (($e2$0$us84$i) + -29)|0;
          $579 = ($carry1$1$us94$i$lcssa|0)==(0);
          if ($579) {
           $e2$0$us84$i = $578;$z$1$us85$i = $z$3$us97$i$lcssa;
          } else {
           $$lcssa50$i = $578;$carry1$1$lcssa$lcssa$i = $carry1$1$us94$i$lcssa;$z$3$lcssa$lcssa$i = $z$3$us97$i$lcssa;
           break;
          }
         }
        }
        $580 = (($rp$2$ph36$i) + 9)|0;
        $581 = (($a$2$ph38$i) + 127)|0;
        $582 = $581 & 127;
        $583 = ($582|0)==($z$3$lcssa$lcssa$i|0);
        if ($583) {
         $584 = (($z$3$lcssa$lcssa$i) + 127)|0;
         $585 = $584 & 127;
         $586 = (($x$i) + ($585<<2)|0);
         $587 = HEAP32[$586>>2]|0;
         $588 = (($z$3$lcssa$lcssa$i) + 126)|0;
         $589 = $588 & 127;
         $590 = (($x$i) + ($589<<2)|0);
         $591 = HEAP32[$590>>2]|0;
         $592 = $591 | $587;
         HEAP32[$590>>2] = $592;
         $z$4$i = $585;
        } else {
         $z$4$i = $z$3$lcssa$lcssa$i;
        }
        $593 = (($x$i) + ($582<<2)|0);
        HEAP32[$593>>2] = $carry1$1$lcssa$lcssa$i;
        $a$2$ph38$i = $582;$e2$0$ph$i = $$lcssa50$i;$rp$2$ph36$i = $580;$z$1$ph37$i = $z$4$i;
       }
       L321: while(1) {
        $624 = (($z$5$ph$i) + 1)|0;
        $621 = $624 & 127;
        $625 = (($z$5$ph$i) + 127)|0;
        $626 = $625 & 127;
        $627 = (($x$i) + ($626<<2)|0);
        $a$3$ph183$i = $a$3$ph$i;$e2$1$ph182$i = $e2$1$ph$i;$rp$3$ph$i = $rp$3$ph34$i;
        while(1) {
         $628 = ($rp$3$ph$i|0)==(18);
         $629 = ($rp$3$ph$i|0)>(27);
         $$18$i = $629 ? 9 : 1;
         $$not$i = $628 ^ 1;
         $a$3$i = $a$3$ph183$i;$e2$1$i = $e2$1$ph182$i;
         while(1) {
          $594 = $a$3$i & 127;
          $595 = ($594|0)==($z$5$ph$i|0);
          do {
           if ($595) {
            label = 220;
           } else {
            $596 = (($x$i) + ($594<<2)|0);
            $597 = HEAP32[$596>>2]|0;
            $598 = ($597>>>0)<(9007199);
            if ($598) {
             label = 220;
             break;
            }
            $599 = ($597>>>0)>(9007199);
            if ($599) {
             break;
            }
            $600 = (($a$3$i) + 1)|0;
            $601 = $600 & 127;
            $602 = ($601|0)==($z$5$ph$i|0);
            if ($602) {
             label = 220;
             break;
            }
            $708 = (($x$i) + ($601<<2)|0);
            $709 = HEAP32[$708>>2]|0;
            $710 = ($709>>>0)<(254740991);
            if ($710) {
             label = 220;
             break;
            }
            $711 = ($709>>>0)>(254740991);
            $brmerge$i26 = $711 | $$not$i;
            if (!($brmerge$i26)) {
             $635 = $594;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $z$5$ph$i;
             break L321;
            }
           }
          } while(0);
          if ((label|0) == 220) {
           label = 0;
           if ($628) {
            label = 221;
            break L321;
           }
          }
          $603 = (($e2$1$i) + ($$18$i))|0;
          $604 = ($a$3$i|0)==($z$5$ph$i|0);
          if ($604) {
           $a$3$i = $z$5$ph$i;$e2$1$i = $603;
          } else {
           $$lcssa308 = $603;$a$3$i$lcssa300 = $a$3$i;
           break;
          }
         }
         $605 = 1 << $$18$i;
         $606 = (($605) + -1)|0;
         $607 = 1000000000 >>> $$18$i;
         $a$478$i = $a$3$i$lcssa300;$carry3$081$i = 0;$k$679$i = $a$3$i$lcssa300;$rp$477$i = $rp$3$ph$i;
         while(1) {
          $608 = (($x$i) + ($k$679$i<<2)|0);
          $609 = HEAP32[$608>>2]|0;
          $610 = $609 & $606;
          $611 = $609 >>> $$18$i;
          $612 = (($611) + ($carry3$081$i))|0;
          HEAP32[$608>>2] = $612;
          $613 = Math_imul($610, $607)|0;
          $614 = ($k$679$i|0)==($a$478$i|0);
          $615 = ($612|0)==(0);
          $or$cond19$i = $614 & $615;
          $616 = (($k$679$i) + 1)|0;
          $617 = $616 & 127;
          $618 = (($rp$477$i) + -9)|0;
          $rp$5$i = $or$cond19$i ? $618 : $rp$477$i;
          $a$5$i = $or$cond19$i ? $617 : $a$478$i;
          $619 = ($617|0)==($z$5$ph$i|0);
          if ($619) {
           $$lcssa309 = $613;$a$5$i$lcssa = $a$5$i;$rp$5$i$lcssa = $rp$5$i;
           break;
          } else {
           $a$478$i = $a$5$i;$carry3$081$i = $613;$k$679$i = $617;$rp$477$i = $rp$5$i;
          }
         }
         $620 = ($$lcssa309|0)==(0);
         if ($620) {
          $a$3$ph183$i = $a$5$i$lcssa;$e2$1$ph182$i = $$lcssa308;$rp$3$ph$i = $rp$5$i$lcssa;
          continue;
         }
         $622 = ($621|0)==($a$5$i$lcssa|0);
         if (!($622)) {
          $$lcssa308$lcssa = $$lcssa308;$$lcssa309$lcssa = $$lcssa309;$a$5$i$lcssa$lcssa = $a$5$i$lcssa;$rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
          break;
         }
         $630 = HEAP32[$627>>2]|0;
         $631 = $630 | 1;
         HEAP32[$627>>2] = $631;
         $a$3$ph183$i = $a$5$i$lcssa;$e2$1$ph182$i = $$lcssa308;$rp$3$ph$i = $rp$5$i$lcssa;
        }
        $623 = (($x$i) + ($z$5$ph$i<<2)|0);
        HEAP32[$623>>2] = $$lcssa309$lcssa;
        $a$3$ph$i = $a$5$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa308$lcssa;$rp$3$ph34$i = $rp$5$i$lcssa$lcssa;$z$5$ph$i = $621;
       }
       if ((label|0) == 221) {
        if ($595) {
         $632 = (($621) + -1)|0;
         $633 = (($x$i) + ($632<<2)|0);
         HEAP32[$633>>2] = 0;
         $635 = $z$5$ph$i;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $621;
        } else {
         $635 = $594;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $z$5$ph$i;
        }
       }
       $634 = (($x$i) + ($635<<2)|0);
       $636 = HEAP32[$634>>2]|0;
       $637 = (+($636>>>0));
       $638 = (($a$3$i301) + 1)|0;
       $639 = $638 & 127;
       $640 = ($639|0)==($z$7$i|0);
       if ($640) {
        $697 = (($a$3$i301) + 2)|0;
        $698 = $697 & 127;
        $699 = (($698) + -1)|0;
        $700 = (($x$i) + ($699<<2)|0);
        HEAP32[$700>>2] = 0;
        $z$7$1$i = $698;
       } else {
        $z$7$1$i = $z$7$i;
       }
       $701 = $637 * 1.0E+9;
       $702 = (($x$i) + ($639<<2)|0);
       $703 = HEAP32[$702>>2]|0;
       $704 = (+($703>>>0));
       $705 = $701 + $704;
       $661 = (+($sign$0|0));
       $643 = $661 * $705;
       $681 = (($e2$1$i298) + 53)|0;
       $687 = (($681) - ($emin$0$ph))|0;
       $688 = ($687|0)<($bits$0$ph|0);
       $706 = ($687|0)<(0);
       $$$i = $706 ? 0 : $687;
       $denormal$0$i = $688&1;
       $$010$i = $688 ? $$$i : $bits$0$ph;
       $707 = ($$010$i|0)<(53);
       if ($707) {
        $641 = (105 - ($$010$i))|0;
        $642 = (+_scalbn(1.0,$641));
        $644 = (+_copysignl($642,$643));
        $645 = (53 - ($$010$i))|0;
        $646 = (+_scalbn(1.0,$645));
        $647 = (+_fmodl($643,$646));
        $648 = $643 - $647;
        $649 = $644 + $648;
        $bias$0$i23 = $644;$frac$0$i = $647;$y$1$i22 = $649;
       } else {
        $bias$0$i23 = 0.0;$frac$0$i = 0.0;$y$1$i22 = $643;
       }
       $650 = (($a$3$i301) + 2)|0;
       $651 = $650 & 127;
       $652 = ($651|0)==($z$7$1$i|0);
       do {
        if ($652) {
         $frac$2$i = $frac$0$i;
        } else {
         $653 = (($x$i) + ($651<<2)|0);
         $654 = HEAP32[$653>>2]|0;
         $655 = ($654>>>0)<(500000000);
         do {
          if ($655) {
           $656 = ($654|0)==(0);
           if ($656) {
            $657 = (($a$3$i301) + 3)|0;
            $658 = $657 & 127;
            $659 = ($658|0)==($z$7$1$i|0);
            if ($659) {
             $frac$1$i = $frac$0$i;
             break;
            }
           }
           $660 = $661 * 0.25;
           $662 = $660 + $frac$0$i;
           $frac$1$i = $662;
          } else {
           $663 = ($654>>>0)>(500000000);
           if ($663) {
            $664 = $661 * 0.75;
            $665 = $664 + $frac$0$i;
            $frac$1$i = $665;
            break;
           }
           $666 = (($a$3$i301) + 3)|0;
           $667 = $666 & 127;
           $668 = ($667|0)==($z$7$1$i|0);
           if ($668) {
            $669 = $661 * 0.5;
            $670 = $669 + $frac$0$i;
            $frac$1$i = $670;
            break;
           } else {
            $671 = $661 * 0.75;
            $672 = $671 + $frac$0$i;
            $frac$1$i = $672;
            break;
           }
          }
         } while(0);
         $673 = (53 - ($$010$i))|0;
         $674 = ($673|0)>(1);
         if (!($674)) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $675 = (+_fmodl($frac$1$i,1.0));
         $676 = $675 != 0.0;
         if ($676) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $677 = $frac$1$i + 1.0;
         $frac$2$i = $677;
        }
       } while(0);
       $678 = $y$1$i22 + $frac$2$i;
       $679 = $678 - $bias$0$i23;
       $680 = $681 & 2147483647;
       $682 = (-2 - ($sum$i))|0;
       $683 = ($680|0)>($682|0);
       do {
        if ($683) {
         $684 = (+Math_abs((+$679)));
         $685 = !($684 >= 9007199254740992.0);
         if ($685) {
          $denormal$2$i = $denormal$0$i;$e2$2$i = $e2$1$i298;$y$2$i24 = $679;
         } else {
          $686 = ($$010$i|0)==($687|0);
          $or$cond20$i = $688 & $686;
          $denormal$1$i = $or$cond20$i ? 0 : $denormal$0$i;
          $689 = $679 * 0.5;
          $690 = (($e2$1$i298) + 1)|0;
          $denormal$2$i = $denormal$1$i;$e2$2$i = $690;$y$2$i24 = $689;
         }
         $691 = (($e2$2$i) + 50)|0;
         $692 = ($691|0)>($324|0);
         if (!($692)) {
          $693 = ($denormal$2$i|0)!=(0);
          $694 = $frac$2$i != 0.0;
          $or$cond8$i = $694 & $693;
          if (!($or$cond8$i)) {
           $e2$3$i = $e2$2$i;$y$3$i = $y$2$i24;
           break;
          }
         }
         $695 = (___errno_location()|0);
         HEAP32[$695>>2] = 34;
         $e2$3$i = $e2$2$i;$y$3$i = $y$2$i24;
        } else {
         $e2$3$i = $e2$1$i298;$y$3$i = $679;
        }
       } while(0);
       $696 = (+_scalbnl($y$3$i,$e2$3$i));
       $$0$i25 = $696;
      }
     } while(0);
     $$0 = $$0$i25;
     STACKTOP = sp;return (+$$0);
    }
   } while(0);
   $103 = HEAP32[$1>>2]|0;
   $104 = ($103|0)==(0|0);
   if (!($104)) {
    $105 = HEAP32[$0>>2]|0;
    $106 = ((($105)) + -1|0);
    HEAP32[$0>>2] = $106;
   }
   $107 = (___errno_location()|0);
   HEAP32[$107>>2] = 22;
   ___shlim($f,0);
   $$0 = 0.0;
   STACKTOP = sp;return (+$$0);
  }
 } while(0);
 if ((label|0) == 23) {
  $41 = HEAP32[$1>>2]|0;
  $42 = ($41|0)==(0|0);
  if (!($42)) {
   $43 = HEAP32[$0>>2]|0;
   $44 = ((($43)) + -1|0);
   HEAP32[$0>>2] = $44;
  }
  $notlhs = ($pok|0)==(0);
  $notrhs = ($i$0$lcssa>>>0)<(4);
  $or$cond9$not = $notrhs | $notlhs;
  $brmerge = $or$cond9$not | $42;
  if (!($brmerge)) {
   $$promoted = HEAP32[$0>>2]|0;
   $46 = $$promoted;$i$1 = $i$0$lcssa;
   while(1) {
    $45 = ((($46)) + -1|0);
    $47 = (($i$1) + -1)|0;
    $$old8 = ($47>>>0)>(3);
    if ($$old8) {
     $46 = $45;$i$1 = $47;
    } else {
     $$lcssa = $45;
     break;
    }
   }
   HEAP32[$0>>2] = $$lcssa;
  }
 }
 $48 = (+($sign$0|0));
 $49 = $48 * inf;
 $50 = $49;
 $$0 = $50;
 STACKTOP = sp;return (+$$0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = ((($f)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($f)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ((($f)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if ($or$cond) {
  $11 = (($4) + ($lim)|0);
  $12 = ((($f)) + 100|0);
  HEAP32[$12>>2] = $11;
  return;
 } else {
  $13 = ((($f)) + 100|0);
  HEAP32[$13>>2] = $5;
  return;
 }
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert3 = 0, $$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = ((($f)) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = ((($f)) + 8|0);
   if ($10) {
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $11 = $$pre;
    $26 = $$pre;$41 = $11;
    label = 9;
   } else {
    $12 = HEAP32[$$phi$trans$insert>>2]|0;
    $13 = ((($f)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $12;
    $16 = $14;
    $17 = (($15) - ($16))|0;
    $18 = ((($f)) + 108|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (($9) - ($19))|0;
    $21 = (($20) + -1)|0;
    $22 = ($17|0)>($21|0);
    if ($22) {
     $23 = (($14) + ($21)|0);
     $24 = ((($f)) + 100|0);
     HEAP32[$24>>2] = $23;
     $27 = $12;
    } else {
     $26 = $15;$41 = $12;
     label = 9;
    }
   }
   if ((label|0) == 9) {
    $25 = ((($f)) + 100|0);
    HEAP32[$25>>2] = $26;
    $27 = $41;
   }
   $28 = ($27|0)==(0|0);
   $$phi$trans$insert3 = ((($f)) + 4|0);
   $$pre4 = HEAP32[$$phi$trans$insert3>>2]|0;
   if (!($28)) {
    $29 = $27;
    $30 = $$pre4;
    $31 = ((($f)) + 108|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (($29) + 1)|0;
    $34 = (($33) - ($30))|0;
    $35 = (($34) + ($32))|0;
    HEAP32[$31>>2] = $35;
   }
   $36 = ((($$pre4)) + -1|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($38|0)==($6|0);
   if ($39) {
    $$0 = $6;
    return ($$0|0);
   }
   $40 = $6&255;
   HEAP8[$36>>0] = $40;
   $$0 = $6;
   return ($$0|0);
  }
 }
 $8 = ((($f)) + 100|0);
 HEAP32[$8>>2] = 0;
 $$0 = -1;
 return ($$0|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & -2147483648;
 $6 = $5 | $4;
 HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $6;$7 = +HEAPF64[tempDoublePtr>>3];
 return (+$7);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $$x = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0;
 var $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 if (!($15)) {
  $16 = $3 & 2147483647;
  $17 = ($16>>>0)>(2146435072);
  $18 = ($2>>>0)>(0);
  $19 = ($16|0)==(2146435072);
  $20 = $19 & $18;
  $21 = $17 | $20;
  $22 = ($6|0)==(2047);
  $or$cond = $21 | $22;
  if (!($or$cond)) {
   $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
   $26 = tempRet0;
   $27 = ($26>>>0)>($12>>>0);
   $28 = ($25>>>0)>($11>>>0);
   $29 = ($26|0)==($12|0);
   $30 = $29 & $28;
   $31 = $27 | $30;
   if (!($31)) {
    $32 = ($25|0)==($11|0);
    $33 = ($26|0)==($12|0);
    $34 = $32 & $33;
    $35 = $x * 0.0;
    $$x = $34 ? $35 : $x;
    return (+$$x);
   }
   $36 = ($6|0)==(0);
   if ($36) {
    $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
    $38 = tempRet0;
    $39 = ($38|0)>(-1);
    $40 = ($37>>>0)>(4294967295);
    $41 = ($38|0)==(-1);
    $42 = $41 & $40;
    $43 = $39 | $42;
    if ($43) {
     $45 = $37;$46 = $38;$ex$026 = 0;
     while(1) {
      $44 = (($ex$026) + -1)|0;
      $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
      $48 = tempRet0;
      $49 = ($48|0)>(-1);
      $50 = ($47>>>0)>(4294967295);
      $51 = ($48|0)==(-1);
      $52 = $51 & $50;
      $53 = $49 | $52;
      if ($53) {
       $45 = $47;$46 = $48;$ex$026 = $44;
      } else {
       $ex$0$lcssa = $44;
       break;
      }
     }
    } else {
     $ex$0$lcssa = 0;
    }
    $54 = (1 - ($ex$0$lcssa))|0;
    $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
    $56 = tempRet0;
    $83 = $55;$84 = $56;$ex$1 = $ex$0$lcssa;
   } else {
    $57 = $1 & 1048575;
    $58 = $57 | 1048576;
    $83 = $0;$84 = $58;$ex$1 = $6;
   }
   $59 = ($9|0)==(0);
   if ($59) {
    $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
    $61 = tempRet0;
    $62 = ($61|0)>(-1);
    $63 = ($60>>>0)>(4294967295);
    $64 = ($61|0)==(-1);
    $65 = $64 & $63;
    $66 = $62 | $65;
    if ($66) {
     $68 = $60;$69 = $61;$ey$020 = 0;
     while(1) {
      $67 = (($ey$020) + -1)|0;
      $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
      $71 = tempRet0;
      $72 = ($71|0)>(-1);
      $73 = ($70>>>0)>(4294967295);
      $74 = ($71|0)==(-1);
      $75 = $74 & $73;
      $76 = $72 | $75;
      if ($76) {
       $68 = $70;$69 = $71;$ey$020 = $67;
      } else {
       $ey$0$lcssa = $67;
       break;
      }
     }
    } else {
     $ey$0$lcssa = 0;
    }
    $77 = (1 - ($ey$0$lcssa))|0;
    $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
    $79 = tempRet0;
    $85 = $78;$86 = $79;$ey$1$ph = $ey$0$lcssa;
   } else {
    $80 = $3 & 1048575;
    $81 = $80 | 1048576;
    $85 = $2;$86 = $81;$ey$1$ph = $9;
   }
   $82 = ($ex$1|0)>($ey$1$ph|0);
   $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
   $88 = tempRet0;
   $89 = ($88|0)>(-1);
   $90 = ($87>>>0)>(4294967295);
   $91 = ($88|0)==(-1);
   $92 = $91 & $90;
   $93 = $89 | $92;
   L23: do {
    if ($82) {
     $152 = $93;$153 = $87;$154 = $88;$94 = $83;$96 = $84;$ex$212 = $ex$1;
     while(1) {
      if ($152) {
       $95 = ($94|0)==($85|0);
       $97 = ($96|0)==($86|0);
       $98 = $95 & $97;
       if ($98) {
        break;
       } else {
        $100 = $153;$101 = $154;
       }
      } else {
       $100 = $94;$101 = $96;
      }
      $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
      $103 = tempRet0;
      $104 = (($ex$212) + -1)|0;
      $105 = ($104|0)>($ey$1$ph|0);
      $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
      $107 = tempRet0;
      $108 = ($107|0)>(-1);
      $109 = ($106>>>0)>(4294967295);
      $110 = ($107|0)==(-1);
      $111 = $110 & $109;
      $112 = $108 | $111;
      if ($105) {
       $152 = $112;$153 = $106;$154 = $107;$94 = $102;$96 = $103;$ex$212 = $104;
      } else {
       $$lcssa7 = $112;$113 = $102;$115 = $103;$155 = $106;$156 = $107;$ex$2$lcssa = $104;
       break L23;
      }
     }
     $99 = $x * 0.0;
     $$0 = $99;
     return (+$$0);
    } else {
     $$lcssa7 = $93;$113 = $83;$115 = $84;$155 = $87;$156 = $88;$ex$2$lcssa = $ex$1;
    }
   } while(0);
   if ($$lcssa7) {
    $114 = ($113|0)==($85|0);
    $116 = ($115|0)==($86|0);
    $117 = $114 & $116;
    if ($117) {
     $125 = $x * 0.0;
     $$0 = $125;
     return (+$$0);
    } else {
     $118 = $156;$120 = $155;
    }
   } else {
    $118 = $115;$120 = $113;
   }
   $119 = ($118>>>0)<(1048576);
   $121 = ($120>>>0)<(0);
   $122 = ($118|0)==(1048576);
   $123 = $122 & $121;
   $124 = $119 | $123;
   if ($124) {
    $126 = $120;$127 = $118;$ex$39 = $ex$2$lcssa;
    while(1) {
     $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
     $129 = tempRet0;
     $130 = (($ex$39) + -1)|0;
     $131 = ($129>>>0)<(1048576);
     $132 = ($128>>>0)<(0);
     $133 = ($129|0)==(1048576);
     $134 = $133 & $132;
     $135 = $131 | $134;
     if ($135) {
      $126 = $128;$127 = $129;$ex$39 = $130;
     } else {
      $137 = $128;$138 = $129;$ex$3$lcssa = $130;
      break;
     }
    }
   } else {
    $137 = $120;$138 = $118;$ex$3$lcssa = $ex$2$lcssa;
   }
   $136 = ($ex$3$lcssa|0)>(0);
   if ($136) {
    $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
    $140 = tempRet0;
    $141 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
    $142 = tempRet0;
    $143 = $139 | $141;
    $144 = $140 | $142;
    $149 = $144;$151 = $143;
   } else {
    $145 = (1 - ($ex$3$lcssa))|0;
    $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
    $147 = tempRet0;
    $149 = $147;$151 = $146;
   }
   $148 = $149 | $10;
   HEAP32[tempDoublePtr>>2] = $151;HEAP32[tempDoublePtr+4>>2] = $148;$150 = +HEAPF64[tempDoublePtr>>3];
   $$0 = $150;
   return (+$$0);
  }
 }
 $23 = $x * $y;
 $24 = $23 / $23;
 $$0 = $24;
 return (+$$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 if ((($4|0) == 0)) {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  return (+$$0);
 } else if ((($4|0) == 2047)) {
  $$0 = $x;
  return (+$$0);
 } else {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
  return (+$$0);
 }
 return +(0.0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 1;
  return ($$0|0);
 }
 $1 = ($wc>>>0)<(128);
 if ($1) {
  $2 = $wc&255;
  HEAP8[$s>>0] = $2;
  $$0 = 1;
  return ($$0|0);
 }
 $3 = ($wc>>>0)<(2048);
 if ($3) {
  $4 = $wc >>> 6;
  $5 = $4 | 192;
  $6 = $5&255;
  $7 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $6;
  $8 = $wc & 63;
  $9 = $8 | 128;
  $10 = $9&255;
  HEAP8[$7>>0] = $10;
  $$0 = 2;
  return ($$0|0);
 }
 $11 = ($wc>>>0)<(55296);
 $12 = $wc & -8192;
 $13 = ($12|0)==(57344);
 $or$cond = $11 | $13;
 if ($or$cond) {
  $14 = $wc >>> 12;
  $15 = $14 | 224;
  $16 = $15&255;
  $17 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $16;
  $18 = $wc >>> 6;
  $19 = $18 & 63;
  $20 = $19 | 128;
  $21 = $20&255;
  $22 = ((($s)) + 2|0);
  HEAP8[$17>>0] = $21;
  $23 = $wc & 63;
  $24 = $23 | 128;
  $25 = $24&255;
  HEAP8[$22>>0] = $25;
  $$0 = 3;
  return ($$0|0);
 }
 $26 = (($wc) + -65536)|0;
 $27 = ($26>>>0)<(1048576);
 if ($27) {
  $28 = $wc >>> 18;
  $29 = $28 | 240;
  $30 = $29&255;
  $31 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $30;
  $32 = $wc >>> 12;
  $33 = $32 & 63;
  $34 = $33 | 128;
  $35 = $34&255;
  $36 = ((($s)) + 2|0);
  HEAP8[$31>>0] = $35;
  $37 = $wc >>> 6;
  $38 = $37 & 63;
  $39 = $38 | 128;
  $40 = $39&255;
  $41 = ((($s)) + 3|0);
  HEAP8[$36>>0] = $40;
  $42 = $wc & 63;
  $43 = $42 | 128;
  $44 = $43&255;
  HEAP8[$41>>0] = $44;
  $$0 = 4;
  return ($$0|0);
 } else {
  $45 = (___errno_location()|0);
  HEAP32[$45>>2] = 84;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = ((($f)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($f)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = ((($f)) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 31]($f,0,0)|0);
 }
 $13 = ((($f)) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($f)) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = ((($f)) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = ((($f)) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
  return ($$0|0);
 }
 $18 = $15 & 4;
 $19 = ($18|0)==(0);
 if ($19) {
  $$0 = -1;
  return ($$0|0);
 }
 $20 = $15 | 32;
 HEAP32[$f>>2] = $20;
 $$0 = -1;
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = ((($f)) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($f)) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($f)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($f)) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = ((($f)) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = $13;
  $17 = ((($f)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + ($18)|0);
  $20 = ((($f)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
  return ($$0|0);
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $c = sp;
 $0 = ((($f)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = ((($f)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 31]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa10 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $3 = (___towrite($f)|0);
   $4 = ($3|0)==(0);
   if ($4) {
    $$pre = HEAP32[$0>>2]|0;
    $7 = $$pre;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $7 = $1;
  }
 } while(0);
 $5 = ((($f)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $8 = $7;
 $9 = $6;
 $10 = (($8) - ($9))|0;
 $11 = ($10>>>0)<($l>>>0);
 if ($11) {
  $12 = ((($f)) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iiii[$13 & 31]($f,$s,$l)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = ((($f)) + 75|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)>(-1);
 L11: do {
  if ($17) {
   $i$0 = $l;
   while(1) {
    $18 = ($i$0|0)==(0);
    if ($18) {
     $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
     break L11;
    }
    $19 = (($i$0) + -1)|0;
    $20 = (($s) + ($19)|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = ($21<<24>>24)==(10);
    if ($22) {
     $i$0$lcssa10 = $i$0;
     break;
    } else {
     $i$0 = $19;
    }
   }
   $23 = ((($f)) + 36|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (FUNCTION_TABLE_iiii[$24 & 31]($f,$s,$i$0$lcssa10)|0);
   $26 = ($25>>>0)<($i$0$lcssa10>>>0);
   if ($26) {
    $$0 = $i$0$lcssa10;
    return ($$0|0);
   } else {
    $27 = (($s) + ($i$0$lcssa10)|0);
    $28 = (($l) - ($i$0$lcssa10))|0;
    $$pre6 = HEAP32[$5>>2]|0;
    $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa10;
    break;
   }
  } else {
   $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
  }
 } while(0);
 _memcpy(($29|0),($$02|0),($$01|0))|0;
 $30 = HEAP32[$5>>2]|0;
 $31 = (($30) + ($$01)|0);
 HEAP32[$5>>2] = $31;
 $32 = (($i$1) + ($$01))|0;
 $$0 = $32;
 return ($$0|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _MUSL_vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ((($f)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $6 = ((($f)) + 44|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$6>>2] = $internal_buf;
  $8 = ((($f)) + 28|0);
  HEAP32[$8>>2] = $internal_buf;
  $9 = ((($f)) + 20|0);
  HEAP32[$9>>2] = $internal_buf;
  HEAP32[$2>>2] = 80;
  $10 = ((($internal_buf)) + 80|0);
  $11 = ((($f)) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $13 = ($7|0)==(0|0);
  if ($13) {
   $ret$1 = $12;
  } else {
   $14 = ((($f)) + 36|0);
   $15 = HEAP32[$14>>2]|0;
   (FUNCTION_TABLE_iiii[$15 & 31]($f,0,0)|0);
   $16 = HEAP32[$9>>2]|0;
   $17 = ($16|0)==(0|0);
   $$ = $17 ? -1 : $12;
   HEAP32[$6>>2] = $7;
   HEAP32[$2>>2] = 0;
   HEAP32[$11>>2] = 0;
   HEAP32[$8>>2] = 0;
   HEAP32[$9>>2] = 0;
   $ret$1 = $$;
  }
 } else {
  $5 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $ret$1 = $5;
 }
 $$0 = $ret$1;
 STACKTOP = sp;return ($$0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $b = sp + 112|0;
 $f = sp;
 dest=$f; src=3840; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $$01 = $s;$$02 = $n;
 }
 $4 = $$01;
 $5 = (-2 - ($4))|0;
 $6 = ($$02>>>0)>($5>>>0);
 $$$02 = $6 ? $5 : $$02;
 $7 = ((($f)) + 48|0);
 HEAP32[$7>>2] = $$$02;
 $8 = ((($f)) + 20|0);
 HEAP32[$8>>2] = $$01;
 $9 = ((($f)) + 44|0);
 HEAP32[$9>>2] = $$01;
 $10 = (($$01) + ($$$02)|0);
 $11 = ((($f)) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = ((($f)) + 28|0);
 HEAP32[$12>>2] = $10;
 $13 = (_MUSL_vfprintf($f,$fmt,$ap)|0);
 $14 = ($$$02|0)==(0);
 if ($14) {
  $$0 = $13;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = HEAP32[$8>>2]|0;
 $16 = HEAP32[$11>>2]|0;
 $17 = ($15|0)==($16|0);
 $18 = $17 << 31 >> 31;
 $19 = (($15) + ($18)|0);
 HEAP8[$19>>0] = 0;
 $$0 = $13;
 STACKTOP = sp;return ($$0|0);
}
function _atof($s) {
 $s = $s|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtod($s,0));
 return (+$0);
}
function _strtod($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 dest=$f$i; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f$i)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f$i)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i,0);
 $4 = (+___floatscan($f$i,1,1));
 $5 = ((($f$i)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)!=(0);
 $15 = (($s) + ($12)|0);
 $16 = $14 ? $15 : $s;
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtold_l($s,$p,$loc) {
 $s = $s|0;
 $p = $p|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i$i = sp;
 dest=$f$i$i; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f$i$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i$i)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f$i$i)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f$i$i)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i$i,0);
 $4 = (+___floatscan($f$i$i,2,1));
 $5 = ((($f$i$i)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)!=(0);
 $15 = (($s) + ($12)|0);
 $16 = $14 ? $15 : $s;
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = ((($s)) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = ((($f$i)) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = ((($f$i)) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,-1,-1)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = ($7);
  STACKTOP = sp;return ($6|0);
 }
 $9 = ((($f$i)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = ($7);
 STACKTOP = sp;return ($6|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = ((($s)) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = ((($f$i)) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = ((($f$i)) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,0,-2147483648)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = ($7);
  STACKTOP = sp;return ($6|0);
 }
 $9 = ((($f$i)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = ($7);
 STACKTOP = sp;return ($6|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 L1: do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$0$lcssa44 = $$019;$s$0$lcssa43 = $s$020;
     label = 6;
     break L1;
    }
    $8 = ((($s$020)) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$0$lcssa = $9;$$lcssa = $13;$s$0$lcssa = $8;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
   label = 6;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $14 = HEAP8[$s$0$lcssa43>>0]|0;
   $15 = $c&255;
   $16 = ($14<<24>>24)==($15<<24>>24);
   if ($16) {
    $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
   } else {
    $17 = Math_imul($0, 16843009)|0;
    $18 = ($$0$lcssa44>>>0)>(3);
    L11: do {
     if ($18) {
      $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
      while(1) {
       $19 = HEAP32[$w$011>>2]|0;
       $20 = $19 ^ $17;
       $21 = (($20) + -16843009)|0;
       $22 = $20 & -2139062144;
       $23 = $22 ^ -2139062144;
       $24 = $23 & $21;
       $25 = ($24|0)==(0);
       if (!($25)) {
        $$110$lcssa = $$110;$w$011$lcssa = $w$011;
        break;
       }
       $26 = ((($w$011)) + 4|0);
       $27 = (($$110) + -4)|0;
       $28 = ($27>>>0)>(3);
       if ($28) {
        $$110 = $27;$w$011 = $26;
       } else {
        $$1$lcssa = $27;$w$0$lcssa = $26;
        label = 11;
        break L11;
       }
      }
      $$24 = $$110$lcssa;$s$15 = $w$011$lcssa;
     } else {
      $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $29 = ($$1$lcssa|0)==(0);
     if ($29) {
      $$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $$24 = $$1$lcssa;$s$15 = $w$0$lcssa;
     }
    }
    while(1) {
     $30 = HEAP8[$s$15>>0]|0;
     $31 = ($30<<24>>24)==($15<<24>>24);
     if ($31) {
      $$3 = $$24;$s$2 = $s$15;
      break L8;
     }
     $32 = ((($s$15)) + 1|0);
     $33 = (($$24) + -1)|0;
     $34 = ($33|0)==(0);
     if ($34) {
      $$3 = 0;$s$2 = $32;
      break;
     } else {
      $$24 = $33;$s$15 = $32;
     }
    }
   }
  }
 } while(0);
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $cond = 0, $newp$0 = 0, $notlhs = 0;
 var $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[(3032)>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if (!($or$cond30)) {
  _abort();
  // unreachable;
 }
 $$sum2728 = $2 | 4;
 $7 = (($p) + ($$sum2728)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[(3496)>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$0 = $p;
    return ($newp$0|0);
   }
  }
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$0 = $p;
   return ($newp$0|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $$sum23 = (($nb) + 4)|0;
  $26 = (($p) + ($$sum23)|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = HEAP32[$7>>2]|0;
  $29 = $28 | 1;
  HEAP32[$7>>2] = $29;
  _dispose_chunk($22,$20);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $30 = HEAP32[(3040)>>2]|0;
 $31 = ($3|0)==($30|0);
 if ($31) {
  $32 = HEAP32[(3028)>>2]|0;
  $33 = (($32) + ($2))|0;
  $34 = ($33>>>0)>($nb>>>0);
  if (!($34)) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $35 = (($33) - ($nb))|0;
  $36 = (($p) + ($nb)|0);
  $37 = $1 & 1;
  $38 = $37 | $nb;
  $39 = $38 | 2;
  HEAP32[$0>>2] = $39;
  $$sum22 = (($nb) + 4)|0;
  $40 = (($p) + ($$sum22)|0);
  $41 = $35 | 1;
  HEAP32[$40>>2] = $41;
  HEAP32[(3040)>>2] = $36;
  HEAP32[(3028)>>2] = $35;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $42 = HEAP32[(3036)>>2]|0;
 $43 = ($3|0)==($42|0);
 if ($43) {
  $44 = HEAP32[(3024)>>2]|0;
  $45 = (($44) + ($2))|0;
  $46 = ($45>>>0)<($nb>>>0);
  if ($46) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $47 = (($45) - ($nb))|0;
  $48 = ($47>>>0)>(15);
  if ($48) {
   $49 = (($p) + ($nb)|0);
   $50 = (($p) + ($45)|0);
   $51 = $1 & 1;
   $52 = $51 | $nb;
   $53 = $52 | 2;
   HEAP32[$0>>2] = $53;
   $$sum19 = (($nb) + 4)|0;
   $54 = (($p) + ($$sum19)|0);
   $55 = $47 | 1;
   HEAP32[$54>>2] = $55;
   HEAP32[$50>>2] = $47;
   $$sum20 = (($45) + 4)|0;
   $56 = (($p) + ($$sum20)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $57 & -2;
   HEAP32[$56>>2] = $58;
   $storemerge = $49;$storemerge21 = $47;
  } else {
   $59 = $1 & 1;
   $60 = $59 | $45;
   $61 = $60 | 2;
   HEAP32[$0>>2] = $61;
   $$sum17 = (($45) + 4)|0;
   $62 = (($p) + ($$sum17)|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 | 1;
   HEAP32[$62>>2] = $64;
   $storemerge = 0;$storemerge21 = 0;
  }
  HEAP32[(3024)>>2] = $storemerge21;
  HEAP32[(3036)>>2] = $storemerge;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $65 = $8 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $67 = $8 & -8;
 $68 = (($67) + ($2))|0;
 $69 = ($68>>>0)<($nb>>>0);
 if ($69) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $70 = (($68) - ($nb))|0;
 $71 = $8 >>> 3;
 $72 = ($8>>>0)<(256);
 do {
  if ($72) {
   $$sum15 = (($2) + 8)|0;
   $73 = (($p) + ($$sum15)|0);
   $74 = HEAP32[$73>>2]|0;
   $$sum16 = (($2) + 12)|0;
   $75 = (($p) + ($$sum16)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $71 << 1;
   $78 = (3056 + ($77<<2)|0);
   $79 = ($74|0)==($78|0);
   if (!($79)) {
    $80 = ($74>>>0)<($4>>>0);
    if ($80) {
     _abort();
     // unreachable;
    }
    $81 = ((($74)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($3|0);
    if (!($83)) {
     _abort();
     // unreachable;
    }
   }
   $84 = ($76|0)==($74|0);
   if ($84) {
    $85 = 1 << $71;
    $86 = $85 ^ -1;
    $87 = HEAP32[3016>>2]|0;
    $88 = $87 & $86;
    HEAP32[3016>>2] = $88;
    break;
   }
   $89 = ($76|0)==($78|0);
   if ($89) {
    $$pre = ((($76)) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $90 = ($76>>>0)<($4>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = ((($76)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==($3|0);
    if ($93) {
     $$pre$phiZ2D = $91;
    } else {
     _abort();
     // unreachable;
    }
   }
   $94 = ((($74)) + 12|0);
   HEAP32[$94>>2] = $76;
   HEAP32[$$pre$phiZ2D>>2] = $74;
  } else {
   $$sum = (($2) + 24)|0;
   $95 = (($p) + ($$sum)|0);
   $96 = HEAP32[$95>>2]|0;
   $$sum2 = (($2) + 12)|0;
   $97 = (($p) + ($$sum2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($3|0);
   do {
    if ($99) {
     $$sum4 = (($2) + 20)|0;
     $109 = (($p) + ($$sum4)|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$sum3 = (($2) + 16)|0;
      $112 = (($p) + ($$sum3)|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ($113|0)==(0|0);
      if ($114) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $113;$RP$0 = $112;
      }
     } else {
      $R$0 = $110;$RP$0 = $109;
     }
     while(1) {
      $115 = ((($R$0)) + 20|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($116|0)==(0|0);
      if (!($117)) {
       $R$0 = $116;$RP$0 = $115;
       continue;
      }
      $118 = ((($R$0)) + 16|0);
      $119 = HEAP32[$118>>2]|0;
      $120 = ($119|0)==(0|0);
      if ($120) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $119;$RP$0 = $118;
      }
     }
     $121 = ($RP$0$lcssa>>>0)<($4>>>0);
     if ($121) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum14 = (($2) + 8)|0;
     $100 = (($p) + ($$sum14)|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = ($101>>>0)<($4>>>0);
     if ($102) {
      _abort();
      // unreachable;
     }
     $103 = ((($101)) + 12|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104|0)==($3|0);
     if (!($105)) {
      _abort();
      // unreachable;
     }
     $106 = ((($98)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if ($108) {
      HEAP32[$103>>2] = $98;
      HEAP32[$106>>2] = $101;
      $R$1 = $98;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $122 = ($96|0)==(0|0);
   if (!($122)) {
    $$sum11 = (($2) + 28)|0;
    $123 = (($p) + ($$sum11)|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (3320 + ($124<<2)|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($3|0)==($126|0);
    if ($127) {
     HEAP32[$125>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $128 = 1 << $124;
      $129 = $128 ^ -1;
      $130 = HEAP32[(3020)>>2]|0;
      $131 = $130 & $129;
      HEAP32[(3020)>>2] = $131;
      break;
     }
    } else {
     $132 = HEAP32[(3032)>>2]|0;
     $133 = ($96>>>0)<($132>>>0);
     if ($133) {
      _abort();
      // unreachable;
     }
     $134 = ((($96)) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($135|0)==($3|0);
     if ($136) {
      HEAP32[$134>>2] = $R$1;
     } else {
      $137 = ((($96)) + 20|0);
      HEAP32[$137>>2] = $R$1;
     }
     $138 = ($R$1|0)==(0|0);
     if ($138) {
      break;
     }
    }
    $139 = HEAP32[(3032)>>2]|0;
    $140 = ($R$1>>>0)<($139>>>0);
    if ($140) {
     _abort();
     // unreachable;
    }
    $141 = ((($R$1)) + 24|0);
    HEAP32[$141>>2] = $96;
    $$sum12 = (($2) + 16)|0;
    $142 = (($p) + ($$sum12)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)==(0|0);
    do {
     if (!($144)) {
      $145 = ($143>>>0)<($139>>>0);
      if ($145) {
       _abort();
       // unreachable;
      } else {
       $146 = ((($R$1)) + 16|0);
       HEAP32[$146>>2] = $143;
       $147 = ((($143)) + 24|0);
       HEAP32[$147>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum13 = (($2) + 20)|0;
    $148 = (($p) + ($$sum13)|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $151 = HEAP32[(3032)>>2]|0;
     $152 = ($149>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     } else {
      $153 = ((($R$1)) + 20|0);
      HEAP32[$153>>2] = $149;
      $154 = ((($149)) + 24|0);
      HEAP32[$154>>2] = $R$1;
      break;
     }
    }
   }
  }
 } while(0);
 $155 = ($70>>>0)<(16);
 if ($155) {
  $156 = $1 & 1;
  $157 = $68 | $156;
  $158 = $157 | 2;
  HEAP32[$0>>2] = $158;
  $$sum910 = $68 | 4;
  $159 = (($p) + ($$sum910)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160 | 1;
  HEAP32[$159>>2] = $161;
  $newp$0 = $p;
  return ($newp$0|0);
 } else {
  $162 = (($p) + ($nb)|0);
  $163 = $1 & 1;
  $164 = $163 | $nb;
  $165 = $164 | 2;
  HEAP32[$0>>2] = $165;
  $$sum5 = (($nb) + 4)|0;
  $166 = (($p) + ($$sum5)|0);
  $167 = $70 | 3;
  HEAP32[$166>>2] = $167;
  $$sum78 = $68 | 4;
  $168 = (($p) + ($$sum78)|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 | 1;
  HEAP32[$168>>2] = $170;
  _dispose_chunk($162,$70);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$pre = 0, $$pre$phi50Z2D = 0, $$pre$phi52Z2D = 0, $$pre$phiZ2D = 0, $$pre48 = 0, $$pre49 = 0, $$pre51 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$043 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$042 = 0, $T$042$lcssa = 0, $cond = 0;
 var $cond39 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = ((($p)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[(3032)>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[(3036)>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[(3024)>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum14 = (4 - ($5))|0;
    $105 = (($p) + ($$sum14)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum24 = (8 - ($5))|0;
    $17 = (($p) + ($$sum24)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum25 = (12 - ($5))|0;
    $19 = (($p) + ($$sum25)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = (3056 + ($21<<2)|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = ((($18)) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[3016>>2]|0;
     $32 = $31 & $30;
     HEAP32[3016>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre51 = ((($20)) + 8|0);
     $$pre$phi52Z2D = $$pre51;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = ((($20)) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi52Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = ((($18)) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi52Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum16 = (24 - ($5))|0;
   $39 = (($p) + ($$sum16)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum17 = (12 - ($5))|0;
   $41 = (($p) + ($$sum17)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum18 = (16 - ($5))|0;
     $$sum19 = (($$sum18) + 4)|0;
     $53 = (($p) + ($$sum19)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum18)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $57;$RP$0 = $56;
      }
     } else {
      $R$0 = $54;$RP$0 = $53;
     }
     while(1) {
      $59 = ((($R$0)) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       $R$0 = $60;$RP$0 = $59;
       continue;
      }
      $62 = ((($R$0)) + 16|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $63;$RP$0 = $62;
      }
     }
     $65 = ($RP$0$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum23 = (8 - ($5))|0;
     $44 = (($p) + ($$sum23)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = ((($45)) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = ((($42)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum20 = (28 - ($5))|0;
    $67 = (($p) + ($$sum20)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = (3320 + ($68<<2)|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[(3020)>>2]|0;
      $75 = $74 & $73;
      HEAP32[(3020)>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[(3032)>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = ((($40)) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = ((($40)) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[(3032)>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = ((($R$1)) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum21 = (16 - ($5))|0;
    $86 = (($p) + ($$sum21)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = ((($R$1)) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = ((($87)) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum22 = (($$sum21) + 4)|0;
    $92 = (($p) + ($$sum22)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[(3032)>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = ((($R$1)) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = ((($93)) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[(3032)>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[(3040)>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[(3028)>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[(3028)>>2] = $115;
   HEAP32[(3040)>>2] = $$0;
   $116 = $115 | 1;
   $117 = ((($$0)) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[(3036)>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    return;
   }
   HEAP32[(3036)>>2] = 0;
   HEAP32[(3024)>>2] = 0;
   return;
  }
  $120 = HEAP32[(3036)>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[(3024)>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[(3024)>>2] = $123;
   HEAP32[(3036)>>2] = $$0;
   $124 = $123 | 1;
   $125 = ((($$0)) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum12 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum12)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum13 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum13)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = (3056 + ($135<<2)|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = ((($132)) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[3016>>2]|0;
     $146 = $145 & $144;
     HEAP32[3016>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre49 = ((($134)) + 8|0);
     $$pre$phi50Z2D = $$pre49;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = ((($134)) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi50Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = ((($132)) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi50Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $171;$RP9$0 = $170;
       }
      } else {
       $R7$0 = $168;$RP9$0 = $167;
      }
      while(1) {
       $173 = ((($R7$0)) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if (!($175)) {
        $R7$0 = $174;$RP9$0 = $173;
        continue;
       }
       $176 = ((($R7$0)) + 16|0);
       $177 = HEAP32[$176>>2]|0;
       $178 = ($177|0)==(0|0);
       if ($178) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $177;$RP9$0 = $176;
       }
      }
      $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $$sum11 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum11)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = ((($159)) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = ((($156)) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum8 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum8)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = (3320 + ($182<<2)|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond39 = ($R7$1|0)==(0|0);
      if ($cond39) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[(3020)>>2]|0;
       $189 = $188 & $187;
       HEAP32[(3020)>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[(3032)>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = ((($154)) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = ((($154)) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[(3032)>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = ((($R7$1)) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum9 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum9)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = ((($R7$1)) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = ((($201)) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum10 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum10)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[(3032)>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = ((($R7$1)) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = ((($207)) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = ((($$0)) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[(3036)>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[(3024)>>2] = $128;
   return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = ((($$0)) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = (3056 + ($224<<2)|0);
  $226 = HEAP32[3016>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[3016>>2] = $230;
   $$pre = (($224) + 2)|0;
   $$pre48 = (3056 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre48;$F16$0 = $225;
  } else {
   $$sum7 = (($224) + 2)|0;
   $231 = (3056 + ($$sum7<<2)|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[(3032)>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = ((($F16$0)) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = ((($$0)) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = ((($$0)) + 12|0);
  HEAP32[$237>>2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = (3320 + ($I19$0<<2)|0);
 $264 = ((($$0)) + 28|0);
 HEAP32[$264>>2] = $I19$0;
 $265 = ((($$0)) + 16|0);
 $266 = ((($$0)) + 20|0);
 HEAP32[$266>>2] = 0;
 HEAP32[$265>>2] = 0;
 $267 = HEAP32[(3020)>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[(3020)>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = ((($$0)) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = ((($$0)) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = ((($$0)) + 8|0);
  HEAP32[$274>>2] = $$0;
  return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ((($275)) + 4|0);
 $277 = HEAP32[$276>>2]|0;
 $278 = $277 & -8;
 $279 = ($278|0)==($$1|0);
 L191: do {
  if ($279) {
   $T$0$lcssa = $275;
  } else {
   $280 = ($I19$0|0)==(31);
   $281 = $I19$0 >>> 1;
   $282 = (25 - ($281))|0;
   $283 = $280 ? 0 : $282;
   $284 = $$1 << $283;
   $K20$043 = $284;$T$042 = $275;
   while(1) {
    $291 = $K20$043 >>> 31;
    $292 = (((($T$042)) + 16|0) + ($291<<2)|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     $$lcssa = $292;$T$042$lcssa = $T$042;
     break;
    }
    $285 = $K20$043 << 1;
    $286 = ((($287)) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $T$0$lcssa = $287;
     break L191;
    } else {
     $K20$043 = $285;$T$042 = $287;
    }
   }
   $294 = HEAP32[(3032)>>2]|0;
   $295 = ($$lcssa>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$$lcssa>>2] = $$0;
   $296 = ((($$0)) + 24|0);
   HEAP32[$296>>2] = $T$042$lcssa;
   $297 = ((($$0)) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = ((($$0)) + 8|0);
   HEAP32[$298>>2] = $$0;
   return;
  }
 } while(0);
 $299 = ((($T$0$lcssa)) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[(3032)>>2]|0;
 $302 = ($300>>>0)>=($301>>>0);
 $not$ = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = $302 & $not$;
 if (!($303)) {
  _abort();
  // unreachable;
 }
 $304 = ((($300)) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = ((($$0)) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = ((($$0)) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = ((($$0)) + 24|0);
 HEAP32[$307>>2] = 0;
 return;
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $x$013 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = ((($1)) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $9 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $9 = $8;
 }
 $10 = ($9|0)==(45);
 if ((($9|0) == 43) | (($9|0) == 45)) {
  $11 = $10&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = ((($12)) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
 } else {
  $c$0 = $9;$neg$0 = 0;
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $98 = -2147483648;$99 = 0;
   tempRet0 = ($98);
   return ($99|0);
  }
  $31 = HEAP32[$0>>2]|0;
  $32 = ((($31)) + -1|0);
  HEAP32[$0>>2] = $32;
  $98 = -2147483648;$99 = 0;
  tempRet0 = ($98);
  return ($99|0);
 } else {
  $c$112 = $c$0;$x$013 = 0;
 }
 while(1) {
  $33 = ($x$013*10)|0;
  $34 = (($c$112) + -48)|0;
  $35 = (($34) + ($33))|0;
  $36 = HEAP32[$0>>2]|0;
  $37 = HEAP32[$2>>2]|0;
  $38 = ($36>>>0)<($37>>>0);
  if ($38) {
   $39 = ((($36)) + 1|0);
   HEAP32[$0>>2] = $39;
   $40 = HEAP8[$36>>0]|0;
   $41 = $40&255;
   $c$1$be = $41;
  } else {
   $42 = (___shgetc($f)|0);
   $c$1$be = $42;
  }
  $43 = (($c$1$be) + -48)|0;
  $44 = ($43>>>0)<(10);
  $45 = ($35|0)<(214748364);
  $46 = $44 & $45;
  if ($46) {
   $c$112 = $c$1$be;$x$013 = $35;
  } else {
   $$lcssa22 = $35;$c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $47 = ($$lcssa22|0)<(0);
 $48 = $47 << 31 >> 31;
 $49 = (($c$1$be$lcssa) + -48)|0;
 $50 = ($49>>>0)<(10);
 if ($50) {
  $53 = $$lcssa22;$54 = $48;$c$27 = $c$1$be$lcssa;
  while(1) {
   $55 = (___muldi3(($53|0),($54|0),10,0)|0);
   $56 = tempRet0;
   $57 = ($c$27|0)<(0);
   $58 = $57 << 31 >> 31;
   $59 = (_i64Add(($c$27|0),($58|0),-48,-1)|0);
   $60 = tempRet0;
   $61 = (_i64Add(($59|0),($60|0),($55|0),($56|0))|0);
   $62 = tempRet0;
   $63 = HEAP32[$0>>2]|0;
   $64 = HEAP32[$2>>2]|0;
   $65 = ($63>>>0)<($64>>>0);
   if ($65) {
    $66 = ((($63)) + 1|0);
    HEAP32[$0>>2] = $66;
    $67 = HEAP8[$63>>0]|0;
    $68 = $67&255;
    $c$2$be = $68;
   } else {
    $69 = (___shgetc($f)|0);
    $c$2$be = $69;
   }
   $70 = (($c$2$be) + -48)|0;
   $71 = ($70>>>0)<(10);
   $72 = ($62|0)<(21474836);
   $73 = ($61>>>0)<(2061584302);
   $74 = ($62|0)==(21474836);
   $75 = $74 & $73;
   $76 = $72 | $75;
   $77 = $71 & $76;
   if ($77) {
    $53 = $61;$54 = $62;$c$27 = $c$2$be;
   } else {
    $92 = $61;$93 = $62;$c$2$lcssa = $c$2$be;
    break;
   }
  }
 } else {
  $92 = $$lcssa22;$93 = $48;$c$2$lcssa = $c$1$be$lcssa;
 }
 $51 = (($c$2$lcssa) + -48)|0;
 $52 = ($51>>>0)<(10);
 if ($52) {
  while(1) {
   $78 = HEAP32[$0>>2]|0;
   $79 = HEAP32[$2>>2]|0;
   $80 = ($78>>>0)<($79>>>0);
   if ($80) {
    $81 = ((($78)) + 1|0);
    HEAP32[$0>>2] = $81;
    $82 = HEAP8[$78>>0]|0;
    $83 = $82&255;
    $c$3$be = $83;
   } else {
    $84 = (___shgetc($f)|0);
    $c$3$be = $84;
   }
   $85 = (($c$3$be) + -48)|0;
   $86 = ($85>>>0)<(10);
   if (!($86)) {
    break;
   }
  }
 }
 $87 = HEAP32[$2>>2]|0;
 $88 = ($87|0)==(0|0);
 if (!($88)) {
  $89 = HEAP32[$0>>2]|0;
  $90 = ((($89)) + -1|0);
  HEAP32[$0>>2] = $90;
 }
 $91 = ($neg$0|0)!=(0);
 $94 = (_i64Subtract(0,0,($92|0),($93|0))|0);
 $95 = tempRet0;
 $96 = $91 ? $94 : $92;
 $97 = $91 ? $95 : $93;
 $98 = $97;$99 = $96;
 tempRet0 = ($98);
 return ($99|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i104$i = 0, $$0$lcssa$i128$i = 0, $$0$lcssa$i143$i = 0, $$0$lcssa$i39$i = 0, $$0$lcssa$i46 = 0, $$0$lcssa$i46$i = 0, $$0$lcssa$i48$i = 0, $$0$lcssa$i51 = 0, $$0$lcssa$i53 = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i61 = 0, $$0$lcssa$i63$i = 0, $$0$lcssa$i68 = 0, $$0$lcssa$i69$i = 0;
 var $$0$lcssa$i75 = 0, $$0$lcssa$i76$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i85 = 0, $$0$lcssa$i97$i = 0, $$01$i = 0, $$01$i$i = 0, $$01$i102$i = 0, $$01$i126$i = 0, $$01$i141$i = 0, $$01$i37$i = 0, $$01$i44 = 0, $$01$i44$i = 0, $$01$i54$i = 0, $$01$i59 = 0, $$01$i61$i = 0, $$01$i66 = 0, $$01$i67$i = 0, $$01$i73 = 0, $$01$i74$i = 0;
 var $$01$i83 = 0, $$01$i95$i = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i85$i = 0, $$012$i = 0, $$013$i = 0, $$03$i48 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i79$i = 0, $$07$i = 0.0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i112$i = 0, $$114$i = 0, $$12$i = 0, $$12$i$i = 0, $$12$i110$i = 0, $$12$i119$i = 0;
 var $$12$i134$i = 0, $$12$i134$i$lcssa = 0, $$12$i87$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$$22$i = 0, $$210$$24$i = 0, $$210$i = 0, $$23$i = 0, $$24 = 0, $$25 = 0, $$3$i = 0.0, $$31$i = 0, $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$412184$i = 0;
 var $$5196$i = 0, $$92 = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us303$i = 0, $$a$3$us304$i = 0, $$a$3305$i = 0, $$a$3306$i = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa106 = 0, $$lcssa275$i = 0, $$lcssa450 = 0, $$lcssa451 = 0, $$lcssa455 = 0, $$lcssa457 = 0, $$lcssa458 = 0, $$lcssa459 = 0, $$lcssa460 = 0, $$lcssa461 = 0;
 var $$lcssa463 = 0, $$lcssa464 = 0, $$lcssa470 = 0, $$lcssa474 = 0, $$lcssa476 = 0, $$lcssa479 = 0, $$lcssa480 = 0, $$lcssa483 = 0.0, $$lcssa484 = 0, $$lcssa487 = 0, $$lcssa491 = 0, $$mask$i = 0, $$mask$i38 = 0, $$mask1$i = 0, $$mask1$i37 = 0, $$neg151$i = 0, $$neg152$i = 0, $$p$$i = 0, $$p$5 = 0, $$p$i = 0;
 var $$pn$i = 0, $$pr$i = 0, $$pr146$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi302$iZ2D = 0, $$pre270 = 0, $$pre300$i = 0, $$pre301$i = 0, $$sum$i = 0, $$sum15$i = 0, $$sum16$i = 0, $$z$3$i = 0, $$z$4$i = 0, $$z$4$us$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0;
 var $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0;
 var $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0;
 var $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0;
 var $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0;
 var $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0;
 var $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0;
 var $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0;
 var $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0;
 var $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0.0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0.0, $1162 = 0, $1163 = 0;
 var $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $1169$phi = 0, $117 = 0, $1170 = 0, $1170$phi = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0;
 var $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0.0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0.0, $431 = 0, $432 = 0.0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0.0;
 var $472 = 0.0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0.0, $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0.0, $496 = 0.0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0.0, $545 = 0.0, $546 = 0.0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0.0, $56 = 0, $560 = 0.0, $561 = 0.0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0.0, $575 = 0.0, $576 = 0.0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0.0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0.0, $64 = 0, $640 = 0.0, $641 = 0.0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0.0, $781 = 0.0, $782 = 0, $783 = 0.0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1253$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3240$i = 0, $a$3240$us$i = 0, $a$5$lcssa$i = 0, $a$5215$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arglist_current = 0;
 var $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0, $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0, $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0, $arglist_next48 = 0, $arglist_next51 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0;
 var $arglist_next60 = 0, $arglist_next63 = 0, $arglist_next9 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0246$i = 0, $carry3$0234$i = 0, $carry3$0234$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0245$i = 0, $d$0247$i = 0, $d$1233$i = 0, $d$1233$us$i = 0, $d$2$lcssa$i = 0, $d$2214$i = 0;
 var $d$3$i = 0, $d$4191$i = 0, $d$5183$i = 0, $d$6195$i = 0, $e$0229$i = 0, $e$1$i = 0, $e$2210$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1201$i = 0, $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded101 = 0, $expanded102 = 0;
 var $expanded103 = 0, $expanded105 = 0, $expanded106 = 0, $expanded108 = 0, $expanded109 = 0, $expanded110 = 0, $expanded112 = 0, $expanded113 = 0, $expanded115 = 0, $expanded116 = 0, $expanded117 = 0, $expanded119 = 0, $expanded120 = 0, $expanded122 = 0, $expanded123 = 0, $expanded124 = 0, $expanded126 = 0, $expanded127 = 0, $expanded129 = 0, $expanded130 = 0;
 var $expanded131 = 0, $expanded133 = 0, $expanded134 = 0, $expanded136 = 0, $expanded137 = 0, $expanded138 = 0, $expanded140 = 0, $expanded141 = 0, $expanded143 = 0, $expanded144 = 0, $expanded145 = 0, $expanded147 = 0, $expanded148 = 0, $expanded150 = 0, $expanded151 = 0, $expanded152 = 0, $expanded154 = 0, $expanded155 = 0, $expanded157 = 0, $expanded158 = 0;
 var $expanded159 = 0, $expanded161 = 0, $expanded162 = 0, $expanded164 = 0, $expanded165 = 0, $expanded166 = 0, $expanded168 = 0, $expanded169 = 0, $expanded171 = 0, $expanded172 = 0, $expanded173 = 0, $expanded175 = 0, $expanded176 = 0, $expanded178 = 0, $expanded179 = 0, $expanded180 = 0, $expanded182 = 0, $expanded183 = 0, $expanded185 = 0, $expanded186 = 0;
 var $expanded187 = 0, $expanded189 = 0, $expanded190 = 0, $expanded192 = 0, $expanded193 = 0, $expanded194 = 0, $expanded196 = 0, $expanded197 = 0, $expanded199 = 0, $expanded200 = 0, $expanded201 = 0, $expanded203 = 0, $expanded204 = 0, $expanded206 = 0, $expanded207 = 0, $expanded208 = 0, $expanded210 = 0, $expanded211 = 0, $expanded213 = 0, $expanded214 = 0;
 var $expanded215 = 0, $expanded64 = 0, $expanded66 = 0, $expanded67 = 0, $expanded68 = 0, $expanded70 = 0, $expanded71 = 0, $expanded73 = 0, $expanded74 = 0, $expanded75 = 0, $expanded77 = 0, $expanded78 = 0, $expanded80 = 0, $expanded81 = 0, $expanded82 = 0, $expanded84 = 0, $expanded85 = 0, $expanded87 = 0, $expanded88 = 0, $expanded89 = 0;
 var $expanded91 = 0, $expanded92 = 0, $expanded94 = 0, $expanded95 = 0, $expanded96 = 0, $expanded98 = 0, $expanded99 = 0, $fl$0110 = 0, $fl$0170 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa273 = 0, $i$0175 = 0, $i$0228$i = 0, $i$03$i = 0, $i$03$i30 = 0;
 var $i$1$lcssa$i = 0, $i$1186 = 0, $i$1222$i = 0, $i$2162 = 0, $i$2162$lcssa = 0, $i$2209$i = 0, $i$3160 = 0, $i$3205$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i32 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0, $isdigit2$i28 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i31 = 0, $isdigittmp1$i = 0;
 var $isdigittmp1$i27 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i29 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0221$i = 0, $j$0223$i = 0, $j$1206$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1174 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$0$phi = 0, $l10n$1 = 0, $l10n$2 = 0;
 var $l10n$3 = 0, $mb = 0, $notlhs$us$us$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i100$i = 0, $or$cond$i35$i = 0, $or$cond$i42$i = 0, $or$cond$i52$i = 0, $or$cond$i57 = 0, $or$cond$i59$i = 0, $or$cond$i64 = 0, $or$cond$i71 = 0, $or$cond$i72$i = 0, $or$cond$i79 = 0, $or$cond$i81 = 0, $or$cond$i93$i = 0, $or$cond15 = 0;
 var $or$cond19 = 0, $or$cond22 = 0, $or$cond29$i = 0, $or$cond332 = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$3 = 0, $p$4272 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0;
 var $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1179$i = 0, $round$0178$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0, $s$1$i = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$us$i = 0, $s1$0$i = 0, $s7$0188$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0180$i = 0, $s9$0$i = 0;
 var $s9$1192$i = 0, $s9$2$i = 0, $sext = 0, $sext93 = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa456 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8108 = 0, $storemerge8169 = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $w$30$i = 0, $wc = 0;
 var $ws$0176 = 0, $ws$1187 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i109$i = 0, $y$03$i118$i = 0, $y$03$i133$i = 0, $y$03$i86$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0163 = 0, $z$1 = 0, $z$1$lcssa$i = 0, $z$1252$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3239$i = 0, $z$3239$us$i = 0;
 var $z$4$i = 0, $z$4$us$i = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0;
 $big$i = sp + 16|0;
 $e2$i = sp + 8|0;
 $buf$i = sp + 836|0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824|0;
 $pad$i = sp + 568|0;
 $buf = sp + 528|0;
 $wc = sp;
 $mb = sp + 520|0;
 $1 = ($f|0)!=(0|0);
 $2 = ((($buf)) + 40|0);
 $3 = $2;
 $4 = ((($buf)) + 39|0);
 $5 = ((($wc)) + 4|0);
 $6 = $wc;
 $7 = ((($ebuf0$i)) + 12|0);
 $8 = ((($ebuf0$i)) + 11|0);
 $9 = $7;
 $10 = (($9) - ($0))|0;
 $11 = (-2 - ($0))|0;
 $12 = (($9) + 2)|0;
 $13 = ((($big$i)) + 288|0);
 $14 = ((($buf$i)) + 9|0);
 $15 = $14;
 $16 = ((($buf$i)) + 8|0);
 $1169 = 0;$1170 = 0;$23 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $17 = ($cnt$0|0)>(-1);
  do {
   if ($17) {
    $18 = (2147483647 - ($cnt$0))|0;
    $19 = ($l$0|0)>($18|0);
    if ($19) {
     $20 = (___errno_location()|0);
     HEAP32[$20>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $21 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $21;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $22 = HEAP8[$23>>0]|0;
  $24 = ($22<<24>>24)==(0);
  if ($24) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 344;
   break;
  } else {
   $1171 = $22;$26 = $23;
  }
  while(1) {
   if ((($1171<<24>>24) == 37)) {
    $28 = $26;$z$0163 = $26;
    label = 9;
    break;
   } else if ((($1171<<24>>24) == 0)) {
    $$lcssa106 = $26;$z$0$lcssa = $26;
    break;
   }
   $25 = ((($26)) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $1171 = $$pre;$26 = $25;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $27 = ((($28)) + 1|0);
     $29 = HEAP8[$27>>0]|0;
     $30 = ($29<<24>>24)==(37);
     if (!($30)) {
      $$lcssa106 = $28;$z$0$lcssa = $z$0163;
      break L12;
     }
     $31 = ((($z$0163)) + 1|0);
     $32 = ((($28)) + 2|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = ($33<<24>>24)==(37);
     if ($34) {
      $28 = $32;$z$0163 = $31;
      label = 9;
     } else {
      $$lcssa106 = $32;$z$0$lcssa = $31;
      break;
     }
    }
   }
  } while(0);
  $35 = $z$0$lcssa;
  $36 = $23;
  $37 = (($35) - ($36))|0;
  if ($1) {
   (___fwritex($23,$37,$f)|0);
  }
  $38 = ($z$0$lcssa|0)==($23|0);
  if (!($38)) {
   $l10n$0$phi = $l10n$0;$1170$phi = $1170;$1169$phi = $1169;$23 = $$lcssa106;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$0$phi;$1170 = $1170$phi;$1169 = $1169$phi;
   continue;
  }
  $39 = ((($$lcssa106)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $isdigittmp = (($41) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $42 = ((($$lcssa106)) + 2|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(36);
   $45 = ((($$lcssa106)) + 3|0);
   $$92 = $44 ? $45 : $39;
   $$l10n$0 = $44 ? 1 : $l10n$0;
   $isdigittmp$ = $44 ? $isdigittmp : -1;
   $$pre270 = HEAP8[$$92>>0]|0;
   $47 = $$pre270;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$92;
  } else {
   $47 = $40;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $39;
  }
  $46 = $47 << 24 >> 24;
  $48 = $46 & -32;
  $49 = ($48|0)==(32);
  L24: do {
   if ($49) {
    $51 = $46;$56 = $47;$fl$0170 = 0;$storemerge8169 = $storemerge;
    while(1) {
     $50 = (($51) + -32)|0;
     $52 = 1 << $50;
     $53 = $52 & 75913;
     $54 = ($53|0)==(0);
     if ($54) {
      $65 = $56;$fl$0110 = $fl$0170;$storemerge8108 = $storemerge8169;
      break L24;
     }
     $55 = $56 << 24 >> 24;
     $57 = (($55) + -32)|0;
     $58 = 1 << $57;
     $59 = $58 | $fl$0170;
     $60 = ((($storemerge8169)) + 1|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61 << 24 >> 24;
     $63 = $62 & -32;
     $64 = ($63|0)==(32);
     if ($64) {
      $51 = $62;$56 = $61;$fl$0170 = $59;$storemerge8169 = $60;
     } else {
      $65 = $61;$fl$0110 = $59;$storemerge8108 = $60;
      break;
     }
    }
   } else {
    $65 = $47;$fl$0110 = 0;$storemerge8108 = $storemerge;
   }
  } while(0);
  $66 = ($65<<24>>24)==(42);
  do {
   if ($66) {
    $67 = ((($storemerge8108)) + 1|0);
    $68 = HEAP8[$67>>0]|0;
    $69 = $68 << 24 >> 24;
    $isdigittmp11 = (($69) + -48)|0;
    $isdigit12 = ($isdigittmp11>>>0)<(10);
    if ($isdigit12) {
     $70 = ((($storemerge8108)) + 2|0);
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(36);
     if ($72) {
      $73 = (($nl_type) + ($isdigittmp11<<2)|0);
      HEAP32[$73>>2] = 10;
      $74 = HEAP8[$67>>0]|0;
      $75 = $74 << 24 >> 24;
      $76 = (($75) + -48)|0;
      $77 = (($nl_arg) + ($76<<3)|0);
      $78 = $77;
      $79 = $78;
      $80 = HEAP32[$79>>2]|0;
      $81 = (($78) + 4)|0;
      $82 = $81;
      $83 = HEAP32[$82>>2]|0;
      $84 = ((($storemerge8108)) + 3|0);
      $l10n$2 = 1;$storemerge13 = $84;$w$0 = $80;
     } else {
      label = 23;
     }
    } else {
     label = 23;
    }
    if ((label|0) == 23) {
     label = 0;
     $85 = ($l10n$1|0)==(0);
     if (!($85)) {
      $$0 = -1;
      label = 363;
      break L1;
     }
     if (!($1)) {
      $105 = $67;$fl$1 = $fl$0110;$l10n$3 = 0;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $86 = $arglist_current;
     $87 = ((0) + 4|0);
     $expanded64 = $87;
     $expanded = (($expanded64) - 1)|0;
     $88 = (($86) + ($expanded))|0;
     $89 = ((0) + 4|0);
     $expanded68 = $89;
     $expanded67 = (($expanded68) - 1)|0;
     $expanded66 = $expanded67 ^ -1;
     $90 = $88 & $expanded66;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $arglist_next = ((($91)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge13 = $67;$w$0 = $92;
    }
    $93 = ($w$0|0)<(0);
    if ($93) {
     $94 = $fl$0110 | 8192;
     $95 = (0 - ($w$0))|0;
     $105 = $storemerge13;$fl$1 = $94;$l10n$3 = $l10n$2;$w$1 = $95;
    } else {
     $105 = $storemerge13;$fl$1 = $fl$0110;$l10n$3 = $l10n$2;$w$1 = $w$0;
    }
   } else {
    $96 = $65 << 24 >> 24;
    $isdigittmp1$i = (($96) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $100 = $storemerge8108;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
     while(1) {
      $97 = ($i$03$i*10)|0;
      $98 = (($97) + ($isdigittmp4$i))|0;
      $99 = ((($100)) + 1|0);
      $101 = HEAP8[$99>>0]|0;
      $102 = $101 << 24 >> 24;
      $isdigittmp$i = (($102) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $100 = $99;$i$03$i = $98;$isdigittmp4$i = $isdigittmp$i;
      } else {
       $$lcssa450 = $98;$$lcssa451 = $99;
       break;
      }
     }
     $103 = ($$lcssa450|0)<(0);
     if ($103) {
      $$0 = -1;
      label = 363;
      break L1;
     } else {
      $105 = $$lcssa451;$fl$1 = $fl$0110;$l10n$3 = $l10n$1;$w$1 = $$lcssa450;
     }
    } else {
     $105 = $storemerge8108;$fl$1 = $fl$0110;$l10n$3 = $l10n$1;$w$1 = 0;
    }
   }
  } while(0);
  $104 = HEAP8[$105>>0]|0;
  $106 = ($104<<24>>24)==(46);
  L45: do {
   if ($106) {
    $107 = ((($105)) + 1|0);
    $108 = HEAP8[$107>>0]|0;
    $109 = ($108<<24>>24)==(42);
    if (!($109)) {
     $136 = $108 << 24 >> 24;
     $isdigittmp1$i27 = (($136) + -48)|0;
     $isdigit2$i28 = ($isdigittmp1$i27>>>0)<(10);
     if ($isdigit2$i28) {
      $140 = $107;$i$03$i30 = 0;$isdigittmp4$i29 = $isdigittmp1$i27;
     } else {
      $1172 = $107;$p$0 = 0;
      break;
     }
     while(1) {
      $137 = ($i$03$i30*10)|0;
      $138 = (($137) + ($isdigittmp4$i29))|0;
      $139 = ((($140)) + 1|0);
      $141 = HEAP8[$139>>0]|0;
      $142 = $141 << 24 >> 24;
      $isdigittmp$i31 = (($142) + -48)|0;
      $isdigit$i32 = ($isdigittmp$i31>>>0)<(10);
      if ($isdigit$i32) {
       $140 = $139;$i$03$i30 = $138;$isdigittmp4$i29 = $isdigittmp$i31;
      } else {
       $1172 = $139;$p$0 = $138;
       break L45;
      }
     }
    }
    $110 = ((($105)) + 2|0);
    $111 = HEAP8[$110>>0]|0;
    $112 = $111 << 24 >> 24;
    $isdigittmp9 = (($112) + -48)|0;
    $isdigit10 = ($isdigittmp9>>>0)<(10);
    if ($isdigit10) {
     $113 = ((($105)) + 3|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)==(36);
     if ($115) {
      $116 = (($nl_type) + ($isdigittmp9<<2)|0);
      HEAP32[$116>>2] = 10;
      $117 = HEAP8[$110>>0]|0;
      $118 = $117 << 24 >> 24;
      $119 = (($118) + -48)|0;
      $120 = (($nl_arg) + ($119<<3)|0);
      $121 = $120;
      $122 = $121;
      $123 = HEAP32[$122>>2]|0;
      $124 = (($121) + 4)|0;
      $125 = $124;
      $126 = HEAP32[$125>>2]|0;
      $127 = ((($105)) + 4|0);
      $1172 = $127;$p$0 = $123;
      break;
     }
    }
    $128 = ($l10n$3|0)==(0);
    if (!($128)) {
     $$0 = -1;
     label = 363;
     break L1;
    }
    if ($1) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $129 = $arglist_current2;
     $130 = ((0) + 4|0);
     $expanded71 = $130;
     $expanded70 = (($expanded71) - 1)|0;
     $131 = (($129) + ($expanded70))|0;
     $132 = ((0) + 4|0);
     $expanded75 = $132;
     $expanded74 = (($expanded75) - 1)|0;
     $expanded73 = $expanded74 ^ -1;
     $133 = $131 & $expanded73;
     $134 = $133;
     $135 = HEAP32[$134>>2]|0;
     $arglist_next3 = ((($134)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $1172 = $110;$p$0 = $135;
    } else {
     $1172 = $110;$p$0 = 0;
    }
   } else {
    $1172 = $105;$p$0 = -1;
   }
  } while(0);
  $144 = $1172;$st$0 = 0;
  while(1) {
   $143 = HEAP8[$144>>0]|0;
   $145 = $143 << 24 >> 24;
   $146 = (($145) + -65)|0;
   $147 = ($146>>>0)>(57);
   if ($147) {
    $$0 = -1;
    label = 363;
    break L1;
   }
   $148 = ((($144)) + 1|0);
   $149 = ((3952 + (($st$0*58)|0)|0) + ($146)|0);
   $150 = HEAP8[$149>>0]|0;
   $151 = $150&255;
   $152 = (($151) + -1)|0;
   $153 = ($152>>>0)<(8);
   if ($153) {
    $144 = $148;$st$0 = $151;
   } else {
    $$lcssa455 = $144;$$lcssa457 = $148;$$lcssa458 = $150;$$lcssa459 = $151;$st$0$lcssa456 = $st$0;
    break;
   }
  }
  $154 = ($$lcssa458<<24>>24)==(0);
  if ($154) {
   $$0 = -1;
   label = 363;
   break;
  }
  $155 = ($$lcssa458<<24>>24)==(19);
  $156 = ($argpos$0|0)>(-1);
  L64: do {
   if ($155) {
    if ($156) {
     $$0 = -1;
     label = 363;
     break L1;
    } else {
     $1173 = $1169;$1174 = $1170;
     label = 62;
    }
   } else {
    if ($156) {
     $157 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$157>>2] = $$lcssa459;
     $158 = (($nl_arg) + ($argpos$0<<3)|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ((($158)) + 4|0);
     $161 = HEAP32[$160>>2]|0;
     $1173 = $161;$1174 = $159;
     label = 62;
     break;
    }
    if (!($1)) {
     $$0 = 0;
     label = 363;
     break L1;
    }
    $162 = ($$lcssa458&255)>(20);
    if ($162) {
     $264 = $1170;$291 = $1169;
    } else {
     do {
      switch ($$lcssa459|0) {
      case 15:  {
       $arglist_current23 = HEAP32[$ap>>2]|0;
       $218 = $arglist_current23;
       $219 = ((0) + 4|0);
       $expanded120 = $219;
       $expanded119 = (($expanded120) - 1)|0;
       $220 = (($218) + ($expanded119))|0;
       $221 = ((0) + 4|0);
       $expanded124 = $221;
       $expanded123 = (($expanded124) - 1)|0;
       $expanded122 = $expanded123 ^ -1;
       $222 = $220 & $expanded122;
       $223 = $222;
       $224 = HEAP32[$223>>2]|0;
       $arglist_next24 = ((($223)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next24;
       $225 = $224&255;
       $226 = $225 << 24 >> 24;
       $227 = ($226|0)<(0);
       $228 = $227 << 31 >> 31;
       $sext = $224 << 24;
       $229 = $sext >> 24;
       $264 = $229;$291 = $228;
       break L64;
       break;
      }
      case 18:  {
       $arglist_current32 = HEAP32[$ap>>2]|0;
       $246 = $arglist_current32;
       $247 = ((0) + 8|0);
       $expanded141 = $247;
       $expanded140 = (($expanded141) - 1)|0;
       $248 = (($246) + ($expanded140))|0;
       $249 = ((0) + 8|0);
       $expanded145 = $249;
       $expanded144 = (($expanded145) - 1)|0;
       $expanded143 = $expanded144 ^ -1;
       $250 = $248 & $expanded143;
       $251 = $250;
       $252 = +HEAPF64[$251>>3];
       $arglist_next33 = ((($251)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next33;
       HEAPF64[tempDoublePtr>>3] = $252;$253 = HEAP32[tempDoublePtr>>2]|0;
       $254 = HEAP32[tempDoublePtr+4>>2]|0;
       $264 = $253;$291 = $254;
       break L64;
       break;
      }
      case 13:  {
       $arglist_current17 = HEAP32[$ap>>2]|0;
       $199 = $arglist_current17;
       $200 = ((0) + 4|0);
       $expanded106 = $200;
       $expanded105 = (($expanded106) - 1)|0;
       $201 = (($199) + ($expanded105))|0;
       $202 = ((0) + 4|0);
       $expanded110 = $202;
       $expanded109 = (($expanded110) - 1)|0;
       $expanded108 = $expanded109 ^ -1;
       $203 = $201 & $expanded108;
       $204 = $203;
       $205 = HEAP32[$204>>2]|0;
       $arglist_next18 = ((($204)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next18;
       $206 = $205&65535;
       $207 = $206 << 16 >> 16;
       $208 = ($207|0)<(0);
       $209 = $208 << 31 >> 31;
       $sext93 = $205 << 16;
       $210 = $sext93 >> 16;
       $264 = $210;$291 = $209;
       break L64;
       break;
      }
      case 17:  {
       $arglist_current29 = HEAP32[$ap>>2]|0;
       $237 = $arglist_current29;
       $238 = ((0) + 8|0);
       $expanded134 = $238;
       $expanded133 = (($expanded134) - 1)|0;
       $239 = (($237) + ($expanded133))|0;
       $240 = ((0) + 8|0);
       $expanded138 = $240;
       $expanded137 = (($expanded138) - 1)|0;
       $expanded136 = $expanded137 ^ -1;
       $241 = $239 & $expanded136;
       $242 = $241;
       $243 = +HEAPF64[$242>>3];
       $arglist_next30 = ((($242)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next30;
       HEAPF64[tempDoublePtr>>3] = $243;$244 = HEAP32[tempDoublePtr>>2]|0;
       $245 = HEAP32[tempDoublePtr+4>>2]|0;
       $264 = $244;$291 = $245;
       break L64;
       break;
      }
      case 14:  {
       $arglist_current20 = HEAP32[$ap>>2]|0;
       $211 = $arglist_current20;
       $212 = ((0) + 4|0);
       $expanded113 = $212;
       $expanded112 = (($expanded113) - 1)|0;
       $213 = (($211) + ($expanded112))|0;
       $214 = ((0) + 4|0);
       $expanded117 = $214;
       $expanded116 = (($expanded117) - 1)|0;
       $expanded115 = $expanded116 ^ -1;
       $215 = $213 & $expanded115;
       $216 = $215;
       $217 = HEAP32[$216>>2]|0;
       $arglist_next21 = ((($216)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next21;
       $$mask1$i37 = $217 & 65535;
       $264 = $$mask1$i37;$291 = 0;
       break L64;
       break;
      }
      case 11:  {
       $arglist_current11 = HEAP32[$ap>>2]|0;
       $180 = $arglist_current11;
       $181 = ((0) + 4|0);
       $expanded92 = $181;
       $expanded91 = (($expanded92) - 1)|0;
       $182 = (($180) + ($expanded91))|0;
       $183 = ((0) + 4|0);
       $expanded96 = $183;
       $expanded95 = (($expanded96) - 1)|0;
       $expanded94 = $expanded95 ^ -1;
       $184 = $182 & $expanded94;
       $185 = $184;
       $186 = HEAP32[$185>>2]|0;
       $arglist_next12 = ((($185)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next12;
       $264 = $186;$291 = 0;
       break L64;
       break;
      }
      case 10:  {
       $arglist_current8 = HEAP32[$ap>>2]|0;
       $171 = $arglist_current8;
       $172 = ((0) + 4|0);
       $expanded85 = $172;
       $expanded84 = (($expanded85) - 1)|0;
       $173 = (($171) + ($expanded84))|0;
       $174 = ((0) + 4|0);
       $expanded89 = $174;
       $expanded88 = (($expanded89) - 1)|0;
       $expanded87 = $expanded88 ^ -1;
       $175 = $173 & $expanded87;
       $176 = $175;
       $177 = HEAP32[$176>>2]|0;
       $arglist_next9 = ((($176)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next9;
       $178 = ($177|0)<(0);
       $179 = $178 << 31 >> 31;
       $264 = $177;$291 = $179;
       break L64;
       break;
      }
      case 9:  {
       $arglist_current5 = HEAP32[$ap>>2]|0;
       $163 = $arglist_current5;
       $164 = ((0) + 4|0);
       $expanded78 = $164;
       $expanded77 = (($expanded78) - 1)|0;
       $165 = (($163) + ($expanded77))|0;
       $166 = ((0) + 4|0);
       $expanded82 = $166;
       $expanded81 = (($expanded82) - 1)|0;
       $expanded80 = $expanded81 ^ -1;
       $167 = $165 & $expanded80;
       $168 = $167;
       $169 = HEAP32[$168>>2]|0;
       $arglist_next6 = ((($168)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next6;
       $170 = $169;
       $264 = $170;$291 = $1169;
       break L64;
       break;
      }
      case 12:  {
       $arglist_current14 = HEAP32[$ap>>2]|0;
       $187 = $arglist_current14;
       $188 = ((0) + 8|0);
       $expanded99 = $188;
       $expanded98 = (($expanded99) - 1)|0;
       $189 = (($187) + ($expanded98))|0;
       $190 = ((0) + 8|0);
       $expanded103 = $190;
       $expanded102 = (($expanded103) - 1)|0;
       $expanded101 = $expanded102 ^ -1;
       $191 = $189 & $expanded101;
       $192 = $191;
       $193 = $192;
       $194 = $193;
       $195 = HEAP32[$194>>2]|0;
       $196 = (($193) + 4)|0;
       $197 = $196;
       $198 = HEAP32[$197>>2]|0;
       $arglist_next15 = ((($192)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next15;
       $264 = $195;$291 = $198;
       break L64;
       break;
      }
      case 16:  {
       $arglist_current26 = HEAP32[$ap>>2]|0;
       $230 = $arglist_current26;
       $231 = ((0) + 4|0);
       $expanded127 = $231;
       $expanded126 = (($expanded127) - 1)|0;
       $232 = (($230) + ($expanded126))|0;
       $233 = ((0) + 4|0);
       $expanded131 = $233;
       $expanded130 = (($expanded131) - 1)|0;
       $expanded129 = $expanded130 ^ -1;
       $234 = $232 & $expanded129;
       $235 = $234;
       $236 = HEAP32[$235>>2]|0;
       $arglist_next27 = ((($235)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next27;
       $$mask$i38 = $236 & 255;
       $264 = $$mask$i38;$291 = 0;
       break L64;
       break;
      }
      default: {
       $264 = $1170;$291 = $1169;
       break L64;
      }
      }
     } while(0);
    }
   }
  } while(0);
  if ((label|0) == 62) {
   label = 0;
   if ($1) {
    $264 = $1174;$291 = $1173;
   } else {
    $1169 = $1173;$1170 = $1174;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $255 = HEAP8[$$lcssa455>>0]|0;
  $256 = $255 << 24 >> 24;
  $257 = ($st$0$lcssa456|0)!=(0);
  $258 = $256 & 15;
  $259 = ($258|0)==(3);
  $or$cond15 = $257 & $259;
  $260 = $256 & -33;
  $t$0 = $or$cond15 ? $260 : $256;
  $261 = $fl$1 & 8192;
  $262 = ($261|0)==(0);
  $263 = $fl$1 & -65537;
  $fl$1$ = $262 ? $fl$1 : $263;
  L86: do {
   switch ($t$0|0) {
   case 105: case 100:  {
    $329 = ($291|0)<(0);
    if ($329) {
     $330 = (_i64Subtract(0,0,($264|0),($291|0))|0);
     $331 = tempRet0;
     $336 = $331;$338 = $330;$pl$0 = 1;$prefix$0 = 4432;
     label = 84;
     break L86;
    }
    $332 = $fl$1$ & 2048;
    $333 = ($332|0)==(0);
    if ($333) {
     $334 = $fl$1$ & 1;
     $335 = ($334|0)==(0);
     $$ = $335 ? 4432 : (4434);
     $336 = $291;$338 = $264;$pl$0 = $334;$prefix$0 = $$;
     label = 84;
    } else {
     $336 = $291;$338 = $264;$pl$0 = 1;$prefix$0 = (4433);
     label = 84;
    }
    break;
   }
   case 111:  {
    $312 = ($264|0)==(0);
    $313 = ($291|0)==(0);
    $314 = $312 & $313;
    if ($314) {
     $$0$lcssa$i51 = $2;
    } else {
     $$03$i48 = $2;$316 = $264;$320 = $291;
     while(1) {
      $315 = $316 & 7;
      $317 = $315 | 48;
      $318 = $317&255;
      $319 = ((($$03$i48)) + -1|0);
      HEAP8[$319>>0] = $318;
      $321 = (_bitshift64Lshr(($316|0),($320|0),3)|0);
      $322 = tempRet0;
      $323 = ($321|0)==(0);
      $324 = ($322|0)==(0);
      $325 = $323 & $324;
      if ($325) {
       $$0$lcssa$i51 = $319;
       break;
      } else {
       $$03$i48 = $319;$316 = $321;$320 = $322;
      }
     }
    }
    $326 = $fl$1$ & 8;
    $327 = ($326|0)==(0);
    $or$cond19 = $327 | $314;
    $$24 = $or$cond19 ? 4432 : (4437);
    $328 = $or$cond19&1;
    $$25 = $328 ^ 1;
    $366 = $264;$368 = $291;$a$0 = $$0$lcssa$i51;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $$25;$prefix$1 = $$24;
    label = 89;
    break;
   }
   case 99:  {
    $378 = $264&255;
    HEAP8[$4>>0] = $378;
    $1175 = $291;$1176 = $264;$a$2 = $4;$fl$6 = $263;$p$5 = 1;$pl$2 = 0;$prefix$2 = 4432;$z$2 = $2;
    break;
   }
   case 109:  {
    $379 = (___errno_location()|0);
    $380 = HEAP32[$379>>2]|0;
    $381 = (_strerror(($380|0))|0);
    $a$1 = $381;
    label = 94;
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    HEAP32[tempDoublePtr>>2] = $264;HEAP32[tempDoublePtr+4>>2] = $291;$430 = +HEAPF64[tempDoublePtr>>3];
    HEAP32[$e2$i>>2] = 0;
    $431 = ($291|0)<(0);
    if ($431) {
     $432 = -$430;
     $$07$i = $432;$pl$0$i = 1;$prefix$0$i = 4456;
    } else {
     $433 = $fl$1$ & 2048;
     $434 = ($433|0)==(0);
     if ($434) {
      $435 = $fl$1$ & 1;
      $436 = ($435|0)==(0);
      $$$i = $436 ? (4457) : (4462);
      $$07$i = $430;$pl$0$i = $435;$prefix$0$i = $$$i;
     } else {
      $$07$i = $430;$pl$0$i = 1;$prefix$0$i = (4459);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$07$i;$437 = HEAP32[tempDoublePtr>>2]|0;
    $438 = HEAP32[tempDoublePtr+4>>2]|0;
    $439 = $438 & 2146435072;
    $440 = ($439>>>0)<(2146435072);
    $441 = (0)<(0);
    $442 = ($439|0)==(2146435072);
    $443 = $442 & $441;
    $444 = $440 | $443;
    do {
     if ($444) {
      $471 = (+_frexpl($$07$i,$e2$i));
      $472 = $471 * 2.0;
      $473 = $472 != 0.0;
      if ($473) {
       $474 = HEAP32[$e2$i>>2]|0;
       $475 = (($474) + -1)|0;
       HEAP32[$e2$i>>2] = $475;
      }
      $476 = $t$0 | 32;
      $477 = ($476|0)==(97);
      if ($477) {
       $478 = $t$0 & 32;
       $479 = ($478|0)==(0);
       $480 = ((($prefix$0$i)) + 9|0);
       $prefix$0$$i = $479 ? $prefix$0$i : $480;
       $481 = $pl$0$i | 2;
       $482 = ($p$0>>>0)>(11);
       $483 = (12 - ($p$0))|0;
       $484 = ($483|0)==(0);
       $485 = $482 | $484;
       do {
        if ($485) {
         $$1$i = $472;
        } else {
         $re$1179$i = $483;$round$0178$i = 8.0;
         while(1) {
          $486 = (($re$1179$i) + -1)|0;
          $487 = $round$0178$i * 16.0;
          $488 = ($486|0)==(0);
          if ($488) {
           $$lcssa483 = $487;
           break;
          } else {
           $re$1179$i = $486;$round$0178$i = $487;
          }
         }
         $489 = HEAP8[$prefix$0$$i>>0]|0;
         $490 = ($489<<24>>24)==(45);
         if ($490) {
          $491 = -$472;
          $492 = $491 - $$lcssa483;
          $493 = $$lcssa483 + $492;
          $494 = -$493;
          $$1$i = $494;
          break;
         } else {
          $495 = $472 + $$lcssa483;
          $496 = $495 - $$lcssa483;
          $$1$i = $496;
          break;
         }
        }
       } while(0);
       $497 = HEAP32[$e2$i>>2]|0;
       $498 = ($497|0)<(0);
       $499 = (0 - ($497))|0;
       $500 = $498 ? $499 : $497;
       $501 = ($500|0)<(0);
       if ($501) {
        $502 = ($500|0)<(0);
        $503 = $502 << 31 >> 31;
        $$05$i$i = $7;$504 = $500;$505 = $503;
        while(1) {
         $506 = (___uremdi3(($504|0),($505|0),10,0)|0);
         $507 = tempRet0;
         $508 = $506 | 48;
         $509 = $508&255;
         $510 = ((($$05$i$i)) + -1|0);
         HEAP8[$510>>0] = $509;
         $511 = (___udivdi3(($504|0),($505|0),10,0)|0);
         $512 = tempRet0;
         $513 = ($505>>>0)>(9);
         $514 = ($504>>>0)>(4294967295);
         $515 = ($505|0)==(9);
         $516 = $515 & $514;
         $517 = $513 | $516;
         if ($517) {
          $$05$i$i = $510;$504 = $511;$505 = $512;
         } else {
          $$lcssa484 = $510;$1183 = $511;$1184 = $512;
          break;
         }
        }
        $$0$lcssa$i48$i = $$lcssa484;$$01$lcssa$off0$i$i = $1183;
       } else {
        $$0$lcssa$i48$i = $7;$$01$lcssa$off0$i$i = $500;
       }
       $518 = ($$01$lcssa$off0$i$i|0)==(0);
       if ($518) {
        $$1$lcssa$i$i = $$0$lcssa$i48$i;
       } else {
        $$12$i$i = $$0$lcssa$i48$i;$y$03$i$i = $$01$lcssa$off0$i$i;
        while(1) {
         $519 = (($y$03$i$i>>>0) % 10)&-1;
         $520 = $519 | 48;
         $521 = $520&255;
         $522 = ((($$12$i$i)) + -1|0);
         HEAP8[$522>>0] = $521;
         $523 = (($y$03$i$i>>>0) / 10)&-1;
         $524 = ($y$03$i$i>>>0)<(10);
         if ($524) {
          $$1$lcssa$i$i = $522;
          break;
         } else {
          $$12$i$i = $522;$y$03$i$i = $523;
         }
        }
       }
       $525 = ($$1$lcssa$i$i|0)==($7|0);
       if ($525) {
        HEAP8[$8>>0] = 48;
        $estr$0$i = $8;
       } else {
        $estr$0$i = $$1$lcssa$i$i;
       }
       $526 = HEAP32[$e2$i>>2]|0;
       $527 = $526 >> 31;
       $528 = $527 & 2;
       $529 = (($528) + 43)|0;
       $530 = $529&255;
       $531 = ((($estr$0$i)) + -1|0);
       HEAP8[$531>>0] = $530;
       $532 = (($t$0) + 15)|0;
       $533 = $532&255;
       $534 = ((($estr$0$i)) + -2|0);
       HEAP8[$534>>0] = $533;
       $535 = $fl$1$ & 8;
       $536 = ($535|0)==(0);
       if ($536) {
        $notrhs$i = ($p$0|0)<(1);
        if ($notrhs$i) {
         $$2$us$us$i = $$1$i;$s$0$us$us$i = $buf$i;
         while(1) {
          $537 = (~~(($$2$us$us$i)));
          $538 = (4416 + ($537)|0);
          $539 = HEAP8[$538>>0]|0;
          $540 = $539&255;
          $541 = $540 | $478;
          $542 = $541&255;
          $543 = ((($s$0$us$us$i)) + 1|0);
          HEAP8[$s$0$us$us$i>>0] = $542;
          $544 = (+($537|0));
          $545 = $$2$us$us$i - $544;
          $546 = $545 * 16.0;
          $547 = $543;
          $548 = (($547) - ($0))|0;
          $549 = ($548|0)!=(1);
          $notlhs$us$us$i = $546 == 0.0;
          $or$cond$i79 = $549 | $notlhs$us$us$i;
          if ($or$cond$i79) {
           $s$1$us$us$i = $543;
          } else {
           $550 = ((($s$0$us$us$i)) + 2|0);
           HEAP8[$543>>0] = 46;
           $s$1$us$us$i = $550;
          }
          $551 = $546 != 0.0;
          if ($551) {
           $$2$us$us$i = $546;$s$0$us$us$i = $s$1$us$us$i;
          } else {
           $s$1$lcssa$i = $s$1$us$us$i;
           break;
          }
         }
        } else {
         $$2$us$i = $$1$i;$s$0$us$i = $buf$i;
         while(1) {
          $552 = (~~(($$2$us$i)));
          $553 = (4416 + ($552)|0);
          $554 = HEAP8[$553>>0]|0;
          $555 = $554&255;
          $556 = $555 | $478;
          $557 = $556&255;
          $558 = ((($s$0$us$i)) + 1|0);
          HEAP8[$s$0$us$i>>0] = $557;
          $559 = (+($552|0));
          $560 = $$2$us$i - $559;
          $561 = $560 * 16.0;
          $562 = $558;
          $563 = (($562) - ($0))|0;
          $564 = ($563|0)==(1);
          if ($564) {
           $565 = ((($s$0$us$i)) + 2|0);
           HEAP8[$558>>0] = 46;
           $s$1$us$i = $565;
          } else {
           $s$1$us$i = $558;
          }
          $566 = $561 != 0.0;
          if ($566) {
           $$2$us$i = $561;$s$0$us$i = $s$1$us$i;
          } else {
           $s$1$lcssa$i = $s$1$us$i;
           break;
          }
         }
        }
       } else {
        $$2$i = $$1$i;$s$0$i = $buf$i;
        while(1) {
         $567 = (~~(($$2$i)));
         $568 = (4416 + ($567)|0);
         $569 = HEAP8[$568>>0]|0;
         $570 = $569&255;
         $571 = $570 | $478;
         $572 = $571&255;
         $573 = ((($s$0$i)) + 1|0);
         HEAP8[$s$0$i>>0] = $572;
         $574 = (+($567|0));
         $575 = $$2$i - $574;
         $576 = $575 * 16.0;
         $577 = $573;
         $578 = (($577) - ($0))|0;
         $579 = ($578|0)==(1);
         if ($579) {
          $580 = ((($s$0$i)) + 2|0);
          HEAP8[$573>>0] = 46;
          $s$1$i = $580;
         } else {
          $s$1$i = $573;
         }
         $581 = $576 != 0.0;
         if ($581) {
          $$2$i = $576;$s$0$i = $s$1$i;
         } else {
          $s$1$lcssa$i = $s$1$i;
          break;
         }
        }
       }
       $582 = ($p$0|0)!=(0);
       $$pre300$i = $s$1$lcssa$i;
       $583 = (($11) + ($$pre300$i))|0;
       $584 = ($583|0)<($p$0|0);
       $or$cond332 = $582 & $584;
       $585 = $534;
       $586 = (($12) + ($p$0))|0;
       $587 = (($586) - ($585))|0;
       $588 = $534;
       $589 = (($10) - ($588))|0;
       $590 = (($589) + ($$pre300$i))|0;
       $l$0$i = $or$cond332 ? $587 : $590;
       $591 = (($l$0$i) + ($481))|0;
       $592 = $fl$1$ & 73728;
       $593 = ($592|0)==(0);
       $594 = ($w$1|0)>($591|0);
       $or$cond$i52$i = $593 & $594;
       if ($or$cond$i52$i) {
        $595 = (($w$1) - ($591))|0;
        $596 = ($595>>>0)>(256);
        $597 = $596 ? 256 : $595;
        _memset(($pad$i|0),32,($597|0))|0;
        $598 = ($595>>>0)>(255);
        if ($598) {
         $$01$i54$i = $595;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $599 = (($$01$i54$i) + -256)|0;
          $600 = ($599>>>0)>(255);
          if ($600) {
           $$01$i54$i = $599;
          } else {
           break;
          }
         }
         $601 = $595 & 255;
         $$0$lcssa$i56$i = $601;
        } else {
         $$0$lcssa$i56$i = $595;
        }
        (___fwritex($pad$i,$$0$lcssa$i56$i,$f)|0);
       }
       (___fwritex($prefix$0$$i,$481,$f)|0);
       $602 = ($592|0)==(65536);
       $or$cond$i59$i = $602 & $594;
       if ($or$cond$i59$i) {
        $603 = (($w$1) - ($591))|0;
        $604 = ($603>>>0)>(256);
        $605 = $604 ? 256 : $603;
        _memset(($pad$i|0),48,($605|0))|0;
        $606 = ($603>>>0)>(255);
        if ($606) {
         $$01$i61$i = $603;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $607 = (($$01$i61$i) + -256)|0;
          $608 = ($607>>>0)>(255);
          if ($608) {
           $$01$i61$i = $607;
          } else {
           break;
          }
         }
         $609 = $603 & 255;
         $$0$lcssa$i63$i = $609;
        } else {
         $$0$lcssa$i63$i = $603;
        }
        (___fwritex($pad$i,$$0$lcssa$i63$i,$f)|0);
       }
       $610 = (($$pre300$i) - ($0))|0;
       (___fwritex($buf$i,$610,$f)|0);
       $611 = $534;
       $612 = (($9) - ($611))|0;
       $613 = (($l$0$i) - ($612))|0;
       $614 = (($613) - ($610))|0;
       $615 = ($614|0)>(0);
       if ($615) {
        $616 = ($614>>>0)>(256);
        $617 = $616 ? 256 : $614;
        _memset(($pad$i|0),48,($617|0))|0;
        $618 = ($614>>>0)>(255);
        if ($618) {
         $$01$i67$i = $614;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $619 = (($$01$i67$i) + -256)|0;
          $620 = ($619>>>0)>(255);
          if ($620) {
           $$01$i67$i = $619;
          } else {
           break;
          }
         }
         $621 = $614 & 255;
         $$0$lcssa$i69$i = $621;
        } else {
         $$0$lcssa$i69$i = $614;
        }
        (___fwritex($pad$i,$$0$lcssa$i69$i,$f)|0);
       }
       (___fwritex($534,$612,$f)|0);
       $622 = ($592|0)==(8192);
       $or$cond$i72$i = $622 & $594;
       if ($or$cond$i72$i) {
        $623 = (($w$1) - ($591))|0;
        $624 = ($623>>>0)>(256);
        $625 = $624 ? 256 : $623;
        _memset(($pad$i|0),32,($625|0))|0;
        $626 = ($623>>>0)>(255);
        if ($626) {
         $$01$i74$i = $623;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $627 = (($$01$i74$i) + -256)|0;
          $628 = ($627>>>0)>(255);
          if ($628) {
           $$01$i74$i = $627;
          } else {
           break;
          }
         }
         $629 = $623 & 255;
         $$0$lcssa$i76$i = $629;
        } else {
         $$0$lcssa$i76$i = $623;
        }
        (___fwritex($pad$i,$$0$lcssa$i76$i,$f)|0);
       }
       $w$$i = $594 ? $w$1 : $591;
       $$0$i = $w$$i;
       break;
      }
      $630 = ($p$0|0)<(0);
      $$p$i = $630 ? 6 : $p$0;
      if ($473) {
       $631 = $472 * 268435456.0;
       $632 = HEAP32[$e2$i>>2]|0;
       $633 = (($632) + -28)|0;
       HEAP32[$e2$i>>2] = $633;
       $$3$i = $631;$634 = $633;
      } else {
       $$pre$i = HEAP32[$e2$i>>2]|0;
       $$3$i = $472;$634 = $$pre$i;
      }
      $635 = ($634|0)<(0);
      $$31$i = $635 ? $big$i : $13;
      $636 = $$31$i;
      $$4$i = $$3$i;$z$0$i = $$31$i;
      while(1) {
       $637 = (~~(($$4$i))>>>0);
       HEAP32[$z$0$i>>2] = $637;
       $638 = ((($z$0$i)) + 4|0);
       $639 = (+($637>>>0));
       $640 = $$4$i - $639;
       $641 = $640 * 1.0E+9;
       $642 = $641 != 0.0;
       if ($642) {
        $$4$i = $641;$z$0$i = $638;
       } else {
        $$lcssa460 = $638;
        break;
       }
      }
      $$pr$i = HEAP32[$e2$i>>2]|0;
      $643 = ($$pr$i|0)>(0);
      if ($643) {
       $644 = $$pr$i;$a$1253$i = $$31$i;$z$1252$i = $$lcssa460;
       while(1) {
        $645 = ($644|0)>(29);
        $646 = $645 ? 29 : $644;
        $d$0245$i = ((($z$1252$i)) + -4|0);
        $647 = ($d$0245$i>>>0)<($a$1253$i>>>0);
        do {
         if ($647) {
          $a$2$ph$i = $a$1253$i;
         } else {
          $carry$0246$i = 0;$d$0247$i = $d$0245$i;
          while(1) {
           $648 = HEAP32[$d$0247$i>>2]|0;
           $649 = (_bitshift64Shl(($648|0),0,($646|0))|0);
           $650 = tempRet0;
           $651 = (_i64Add(($649|0),($650|0),($carry$0246$i|0),0)|0);
           $652 = tempRet0;
           $653 = (___uremdi3(($651|0),($652|0),1000000000,0)|0);
           $654 = tempRet0;
           HEAP32[$d$0247$i>>2] = $653;
           $655 = (___udivdi3(($651|0),($652|0),1000000000,0)|0);
           $656 = tempRet0;
           $d$0$i = ((($d$0247$i)) + -4|0);
           $657 = ($d$0$i>>>0)<($a$1253$i>>>0);
           if ($657) {
            $$lcssa461 = $655;
            break;
           } else {
            $carry$0246$i = $655;$d$0247$i = $d$0$i;
           }
          }
          $658 = ($$lcssa461|0)==(0);
          if ($658) {
           $a$2$ph$i = $a$1253$i;
           break;
          }
          $659 = ((($a$1253$i)) + -4|0);
          HEAP32[$659>>2] = $$lcssa461;
          $a$2$ph$i = $659;
         }
        } while(0);
        $z$2$i = $z$1252$i;
        while(1) {
         $660 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
         if (!($660)) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $661 = ((($z$2$i)) + -4|0);
         $662 = HEAP32[$661>>2]|0;
         $663 = ($662|0)==(0);
         if ($663) {
          $z$2$i = $661;
         } else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $664 = HEAP32[$e2$i>>2]|0;
        $665 = (($664) - ($646))|0;
        HEAP32[$e2$i>>2] = $665;
        $666 = ($665|0)>(0);
        if ($666) {
         $644 = $665;$a$1253$i = $a$2$ph$i;$z$1252$i = $z$2$i$lcssa;
        } else {
         $$pr146$i = $665;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i$lcssa;
         break;
        }
       }
      } else {
       $$pr146$i = $$pr$i;$a$1$lcssa$i = $$31$i;$z$1$lcssa$i = $$lcssa460;
      }
      $667 = ($$pr146$i|0)<(0);
      L207: do {
       if ($667) {
        $668 = (($$p$i) + 25)|0;
        $669 = (($668|0) / 9)&-1;
        $670 = (($669) + 1)|0;
        $671 = ($476|0)==(102);
        if (!($671)) {
         $704 = $$pr146$i;$a$3240$i = $a$1$lcssa$i;$z$3239$i = $z$1$lcssa$i;
         while(1) {
          $703 = (0 - ($704))|0;
          $705 = ($703|0)>(9);
          $706 = $705 ? 9 : $703;
          $707 = ($a$3240$i>>>0)<($z$3239$i>>>0);
          do {
           if ($707) {
            $711 = 1 << $706;
            $712 = (($711) + -1)|0;
            $713 = 1000000000 >>> $706;
            $carry3$0234$i = 0;$d$1233$i = $a$3240$i;
            while(1) {
             $714 = HEAP32[$d$1233$i>>2]|0;
             $715 = $714 & $712;
             $716 = $714 >>> $706;
             $717 = (($716) + ($carry3$0234$i))|0;
             HEAP32[$d$1233$i>>2] = $717;
             $718 = Math_imul($715, $713)|0;
             $719 = ((($d$1233$i)) + 4|0);
             $720 = ($719>>>0)<($z$3239$i>>>0);
             if ($720) {
              $carry3$0234$i = $718;$d$1233$i = $719;
             } else {
              $$lcssa463 = $718;
              break;
             }
            }
            $721 = HEAP32[$a$3240$i>>2]|0;
            $722 = ($721|0)==(0);
            $723 = ((($a$3240$i)) + 4|0);
            $$a$3$i = $722 ? $723 : $a$3240$i;
            $724 = ($$lcssa463|0)==(0);
            if ($724) {
             $$a$3306$i = $$a$3$i;$z$4$i = $z$3239$i;
             break;
            }
            $725 = ((($z$3239$i)) + 4|0);
            HEAP32[$z$3239$i>>2] = $$lcssa463;
            $$a$3306$i = $$a$3$i;$z$4$i = $725;
           } else {
            $708 = HEAP32[$a$3240$i>>2]|0;
            $709 = ($708|0)==(0);
            $710 = ((($a$3240$i)) + 4|0);
            $$a$3305$i = $709 ? $710 : $a$3240$i;
            $$a$3306$i = $$a$3305$i;$z$4$i = $z$3239$i;
           }
          } while(0);
          $726 = $z$4$i;
          $727 = $$a$3306$i;
          $728 = (($726) - ($727))|0;
          $729 = $728 >> 2;
          $730 = ($729|0)>($670|0);
          $731 = (($$a$3306$i) + ($670<<2)|0);
          $$z$4$i = $730 ? $731 : $z$4$i;
          $732 = HEAP32[$e2$i>>2]|0;
          $733 = (($732) + ($706))|0;
          HEAP32[$e2$i>>2] = $733;
          $734 = ($733|0)<(0);
          if ($734) {
           $704 = $733;$a$3240$i = $$a$3306$i;$z$3239$i = $$z$4$i;
          } else {
           $a$3$lcssa$i = $$a$3306$i;$z$3$lcssa$i = $$z$4$i;
           break L207;
          }
         }
        }
        $672 = (($$31$i) + ($670<<2)|0);
        $674 = $$pr146$i;$a$3240$us$i = $a$1$lcssa$i;$z$3239$us$i = $z$1$lcssa$i;
        while(1) {
         $673 = (0 - ($674))|0;
         $675 = ($673|0)>(9);
         $676 = $675 ? 9 : $673;
         $677 = ($a$3240$us$i>>>0)<($z$3239$us$i>>>0);
         do {
          if ($677) {
           $702 = 1 << $676;
           $695 = (($702) + -1)|0;
           $699 = 1000000000 >>> $676;
           $carry3$0234$us$i = 0;$d$1233$us$i = $a$3240$us$i;
           while(1) {
            $693 = HEAP32[$d$1233$us$i>>2]|0;
            $694 = $693 & $695;
            $696 = $693 >>> $676;
            $697 = (($696) + ($carry3$0234$us$i))|0;
            HEAP32[$d$1233$us$i>>2] = $697;
            $698 = Math_imul($694, $699)|0;
            $700 = ((($d$1233$us$i)) + 4|0);
            $701 = ($700>>>0)<($z$3239$us$i>>>0);
            if ($701) {
             $carry3$0234$us$i = $698;$d$1233$us$i = $700;
            } else {
             $$lcssa464 = $698;
             break;
            }
           }
           $681 = HEAP32[$a$3240$us$i>>2]|0;
           $682 = ($681|0)==(0);
           $683 = ((($a$3240$us$i)) + 4|0);
           $$a$3$us$i = $682 ? $683 : $a$3240$us$i;
           $684 = ($$lcssa464|0)==(0);
           if ($684) {
            $$a$3$us304$i = $$a$3$us$i;$z$4$us$i = $z$3239$us$i;
            break;
           }
           $685 = ((($z$3239$us$i)) + 4|0);
           HEAP32[$z$3239$us$i>>2] = $$lcssa464;
           $$a$3$us304$i = $$a$3$us$i;$z$4$us$i = $685;
          } else {
           $678 = HEAP32[$a$3240$us$i>>2]|0;
           $679 = ($678|0)==(0);
           $680 = ((($a$3240$us$i)) + 4|0);
           $$a$3$us303$i = $679 ? $680 : $a$3240$us$i;
           $$a$3$us304$i = $$a$3$us303$i;$z$4$us$i = $z$3239$us$i;
          }
         } while(0);
         $686 = $z$4$us$i;
         $687 = (($686) - ($636))|0;
         $688 = $687 >> 2;
         $689 = ($688|0)>($670|0);
         $$z$4$us$i = $689 ? $672 : $z$4$us$i;
         $690 = HEAP32[$e2$i>>2]|0;
         $691 = (($690) + ($676))|0;
         HEAP32[$e2$i>>2] = $691;
         $692 = ($691|0)<(0);
         if ($692) {
          $674 = $691;$a$3240$us$i = $$a$3$us304$i;$z$3239$us$i = $$z$4$us$i;
         } else {
          $a$3$lcssa$i = $$a$3$us304$i;$z$3$lcssa$i = $$z$4$us$i;
          break;
         }
        }
       } else {
        $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
       }
      } while(0);
      $735 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
      do {
       if ($735) {
        $736 = $a$3$lcssa$i;
        $737 = (($636) - ($736))|0;
        $738 = $737 >> 2;
        $739 = ($738*9)|0;
        $740 = HEAP32[$a$3$lcssa$i>>2]|0;
        $741 = ($740>>>0)<(10);
        if ($741) {
         $e$1$i = $739;
         break;
        } else {
         $e$0229$i = $739;$i$0228$i = 10;
        }
        while(1) {
         $742 = ($i$0228$i*10)|0;
         $743 = (($e$0229$i) + 1)|0;
         $744 = ($740>>>0)<($742>>>0);
         if ($744) {
          $e$1$i = $743;
          break;
         } else {
          $e$0229$i = $743;$i$0228$i = $742;
         }
        }
       } else {
        $e$1$i = 0;
       }
      } while(0);
      $745 = ($476|0)!=(102);
      $746 = $745 ? $e$1$i : 0;
      $747 = (($$p$i) - ($746))|0;
      $748 = ($476|0)==(103);
      $749 = ($$p$i|0)!=(0);
      $750 = $749 & $748;
      $$neg151$i = $750 << 31 >> 31;
      $751 = (($747) + ($$neg151$i))|0;
      $752 = $z$3$lcssa$i;
      $753 = (($752) - ($636))|0;
      $754 = $753 >> 2;
      $755 = ($754*9)|0;
      $756 = (($755) + -9)|0;
      $757 = ($751|0)<($756|0);
      if ($757) {
       $758 = (($751) + 9216)|0;
       $759 = (($758|0) / 9)&-1;
       $$sum$i = (($759) + -1023)|0;
       $760 = (($$31$i) + ($$sum$i<<2)|0);
       $761 = (($758|0) % 9)&-1;
       $j$0221$i = (($761) + 1)|0;
       $762 = ($j$0221$i|0)<(9);
       if ($762) {
        $i$1222$i = 10;$j$0223$i = $j$0221$i;
        while(1) {
         $763 = ($i$1222$i*10)|0;
         $j$0$i = (($j$0223$i) + 1)|0;
         $exitcond$i = ($j$0$i|0)==(9);
         if ($exitcond$i) {
          $i$1$lcssa$i = $763;
          break;
         } else {
          $i$1222$i = $763;$j$0223$i = $j$0$i;
         }
        }
       } else {
        $i$1$lcssa$i = 10;
       }
       $764 = HEAP32[$760>>2]|0;
       $765 = (($764>>>0) % ($i$1$lcssa$i>>>0))&-1;
       $766 = ($765|0)==(0);
       if ($766) {
        $$sum15$i = (($759) + -1022)|0;
        $767 = (($$31$i) + ($$sum15$i<<2)|0);
        $768 = ($767|0)==($z$3$lcssa$i|0);
        if ($768) {
         $a$7$i = $a$3$lcssa$i;$d$3$i = $760;$e$3$i = $e$1$i;
        } else {
         label = 221;
        }
       } else {
        label = 221;
       }
       do {
        if ((label|0) == 221) {
         label = 0;
         $769 = (($764>>>0) / ($i$1$lcssa$i>>>0))&-1;
         $770 = $769 & 1;
         $771 = ($770|0)==(0);
         $$20$i = $771 ? 9007199254740992.0 : 9007199254740994.0;
         $772 = (($i$1$lcssa$i|0) / 2)&-1;
         $773 = ($765>>>0)<($772>>>0);
         do {
          if ($773) {
           $small$0$i = 0.5;
          } else {
           $774 = ($765|0)==($772|0);
           if ($774) {
            $$sum16$i = (($759) + -1022)|0;
            $775 = (($$31$i) + ($$sum16$i<<2)|0);
            $776 = ($775|0)==($z$3$lcssa$i|0);
            if ($776) {
             $small$0$i = 1.0;
             break;
            }
           }
           $small$0$i = 1.5;
          }
         } while(0);
         $777 = ($pl$0$i|0)==(0);
         do {
          if ($777) {
           $round6$1$i = $$20$i;$small$1$i = $small$0$i;
          } else {
           $778 = HEAP8[$prefix$0$i>>0]|0;
           $779 = ($778<<24>>24)==(45);
           if (!($779)) {
            $round6$1$i = $$20$i;$small$1$i = $small$0$i;
            break;
           }
           $780 = -$$20$i;
           $781 = -$small$0$i;
           $round6$1$i = $780;$small$1$i = $781;
          }
         } while(0);
         $782 = (($764) - ($765))|0;
         HEAP32[$760>>2] = $782;
         $783 = $round6$1$i + $small$1$i;
         $784 = $783 != $round6$1$i;
         if (!($784)) {
          $a$7$i = $a$3$lcssa$i;$d$3$i = $760;$e$3$i = $e$1$i;
          break;
         }
         $785 = (($782) + ($i$1$lcssa$i))|0;
         HEAP32[$760>>2] = $785;
         $786 = ($785>>>0)>(999999999);
         if ($786) {
          $a$5215$i = $a$3$lcssa$i;$d$2214$i = $760;
          while(1) {
           $787 = ((($d$2214$i)) + -4|0);
           HEAP32[$d$2214$i>>2] = 0;
           $788 = ($787>>>0)<($a$5215$i>>>0);
           if ($788) {
            $789 = ((($a$5215$i)) + -4|0);
            HEAP32[$789>>2] = 0;
            $a$6$i = $789;
           } else {
            $a$6$i = $a$5215$i;
           }
           $790 = HEAP32[$787>>2]|0;
           $791 = (($790) + 1)|0;
           HEAP32[$787>>2] = $791;
           $792 = ($791>>>0)>(999999999);
           if ($792) {
            $a$5215$i = $a$6$i;$d$2214$i = $787;
           } else {
            $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $787;
            break;
           }
          }
         } else {
          $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $760;
         }
         $793 = $a$5$lcssa$i;
         $794 = (($636) - ($793))|0;
         $795 = $794 >> 2;
         $796 = ($795*9)|0;
         $797 = HEAP32[$a$5$lcssa$i>>2]|0;
         $798 = ($797>>>0)<(10);
         if ($798) {
          $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $796;
          break;
         } else {
          $e$2210$i = $796;$i$2209$i = 10;
         }
         while(1) {
          $799 = ($i$2209$i*10)|0;
          $800 = (($e$2210$i) + 1)|0;
          $801 = ($797>>>0)<($799>>>0);
          if ($801) {
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $800;
           break;
          } else {
           $e$2210$i = $800;$i$2209$i = $799;
          }
         }
        }
       } while(0);
       $802 = ((($d$3$i)) + 4|0);
       $803 = ($z$3$lcssa$i>>>0)>($802>>>0);
       $$z$3$i = $803 ? $802 : $z$3$lcssa$i;
       $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
      }
      $804 = (0 - ($e$4$ph$i))|0;
      $z$6$i = $z$6$ph$i;
      while(1) {
       $805 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
       if (!($805)) {
        $$lcssa275$i = 0;$z$6$i$lcssa = $z$6$i;
        break;
       }
       $806 = ((($z$6$i)) + -4|0);
       $807 = HEAP32[$806>>2]|0;
       $808 = ($807|0)==(0);
       if ($808) {
        $z$6$i = $806;
       } else {
        $$lcssa275$i = 1;$z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do {
       if ($748) {
        $809 = $749&1;
        $810 = $809 ^ 1;
        $$p$$i = (($810) + ($$p$i))|0;
        $811 = ($$p$$i|0)>($e$4$ph$i|0);
        $812 = ($e$4$ph$i|0)>(-5);
        $or$cond6$i = $811 & $812;
        if ($or$cond6$i) {
         $813 = (($t$0) + -1)|0;
         $$neg152$i = (($$p$$i) + -1)|0;
         $814 = (($$neg152$i) - ($e$4$ph$i))|0;
         $$013$i = $813;$$210$i = $814;
        } else {
         $815 = (($t$0) + -2)|0;
         $816 = (($$p$$i) + -1)|0;
         $$013$i = $815;$$210$i = $816;
        }
        $817 = $fl$1$ & 8;
        $818 = ($817|0)==(0);
        if (!($818)) {
         $$114$i = $$013$i;$$311$i = $$210$i;$$pre$phi302$iZ2D = $817;
         break;
        }
        do {
         if ($$lcssa275$i) {
          $819 = ((($z$6$i$lcssa)) + -4|0);
          $820 = HEAP32[$819>>2]|0;
          $821 = ($820|0)==(0);
          if ($821) {
           $j$2$i = 9;
           break;
          }
          $822 = (($820>>>0) % 10)&-1;
          $823 = ($822|0)==(0);
          if ($823) {
           $i$3205$i = 10;$j$1206$i = 0;
          } else {
           $j$2$i = 0;
           break;
          }
          while(1) {
           $824 = ($i$3205$i*10)|0;
           $825 = (($j$1206$i) + 1)|0;
           $826 = (($820>>>0) % ($824>>>0))&-1;
           $827 = ($826|0)==(0);
           if ($827) {
            $i$3205$i = $824;$j$1206$i = $825;
           } else {
            $j$2$i = $825;
            break;
           }
          }
         } else {
          $j$2$i = 9;
         }
        } while(0);
        $828 = $$013$i | 32;
        $829 = ($828|0)==(102);
        $830 = $z$6$i$lcssa;
        $831 = (($830) - ($636))|0;
        $832 = $831 >> 2;
        $833 = ($832*9)|0;
        $834 = (($833) + -9)|0;
        if ($829) {
         $835 = (($834) - ($j$2$i))|0;
         $836 = ($835|0)<(0);
         $$21$i = $836 ? 0 : $835;
         $837 = ($$210$i|0)<($$21$i|0);
         $$210$$22$i = $837 ? $$210$i : $$21$i;
         $$114$i = $$013$i;$$311$i = $$210$$22$i;$$pre$phi302$iZ2D = 0;
         break;
        } else {
         $838 = (($834) + ($e$4$ph$i))|0;
         $839 = (($838) - ($j$2$i))|0;
         $840 = ($839|0)<(0);
         $$23$i = $840 ? 0 : $839;
         $841 = ($$210$i|0)<($$23$i|0);
         $$210$$24$i = $841 ? $$210$i : $$23$i;
         $$114$i = $$013$i;$$311$i = $$210$$24$i;$$pre$phi302$iZ2D = 0;
         break;
        }
       } else {
        $$pre301$i = $fl$1$ & 8;
        $$114$i = $t$0;$$311$i = $$p$i;$$pre$phi302$iZ2D = $$pre301$i;
       }
      } while(0);
      $842 = $$311$i | $$pre$phi302$iZ2D;
      $843 = ($842|0)!=(0);
      $844 = $843&1;
      $845 = $$114$i | 32;
      $846 = ($845|0)==(102);
      if ($846) {
       $847 = ($e$4$ph$i|0)>(0);
       $848 = $847 ? $e$4$ph$i : 0;
       $$pn$i = $848;$estr$2$i = 0;
      } else {
       $849 = ($e$4$ph$i|0)<(0);
       $850 = $849 ? $804 : $e$4$ph$i;
       $851 = ($850|0)<(0);
       if ($851) {
        $852 = ($850|0)<(0);
        $853 = $852 << 31 >> 31;
        $$05$i79$i = $7;$854 = $850;$855 = $853;
        while(1) {
         $856 = (___uremdi3(($854|0),($855|0),10,0)|0);
         $857 = tempRet0;
         $858 = $856 | 48;
         $859 = $858&255;
         $860 = ((($$05$i79$i)) + -1|0);
         HEAP8[$860>>0] = $859;
         $861 = (___udivdi3(($854|0),($855|0),10,0)|0);
         $862 = tempRet0;
         $863 = ($855>>>0)>(9);
         $864 = ($854>>>0)>(4294967295);
         $865 = ($855|0)==(9);
         $866 = $865 & $864;
         $867 = $863 | $866;
         if ($867) {
          $$05$i79$i = $860;$854 = $861;$855 = $862;
         } else {
          $$lcssa470 = $860;$1185 = $861;$1186 = $862;
          break;
         }
        }
        $$0$lcssa$i84$i = $$lcssa470;$$01$lcssa$off0$i85$i = $1185;
       } else {
        $$0$lcssa$i84$i = $7;$$01$lcssa$off0$i85$i = $850;
       }
       $868 = ($$01$lcssa$off0$i85$i|0)==(0);
       if ($868) {
        $estr$1$ph$i = $$0$lcssa$i84$i;
       } else {
        $$12$i87$i = $$0$lcssa$i84$i;$y$03$i86$i = $$01$lcssa$off0$i85$i;
        while(1) {
         $869 = (($y$03$i86$i>>>0) % 10)&-1;
         $870 = $869 | 48;
         $871 = $870&255;
         $872 = ((($$12$i87$i)) + -1|0);
         HEAP8[$872>>0] = $871;
         $873 = (($y$03$i86$i>>>0) / 10)&-1;
         $874 = ($y$03$i86$i>>>0)<(10);
         if ($874) {
          $estr$1$ph$i = $872;
          break;
         } else {
          $$12$i87$i = $872;$y$03$i86$i = $873;
         }
        }
       }
       $875 = $estr$1$ph$i;
       $876 = (($9) - ($875))|0;
       $877 = ($876|0)<(2);
       if ($877) {
        $estr$1201$i = $estr$1$ph$i;
        while(1) {
         $878 = ((($estr$1201$i)) + -1|0);
         HEAP8[$878>>0] = 48;
         $879 = $878;
         $880 = (($9) - ($879))|0;
         $881 = ($880|0)<(2);
         if ($881) {
          $estr$1201$i = $878;
         } else {
          $estr$1$lcssa$i = $878;
          break;
         }
        }
       } else {
        $estr$1$lcssa$i = $estr$1$ph$i;
       }
       $882 = $e$4$ph$i >> 31;
       $883 = $882 & 2;
       $884 = (($883) + 43)|0;
       $885 = $884&255;
       $886 = ((($estr$1$lcssa$i)) + -1|0);
       HEAP8[$886>>0] = $885;
       $887 = $$114$i&255;
       $888 = ((($estr$1$lcssa$i)) + -2|0);
       HEAP8[$888>>0] = $887;
       $889 = $888;
       $890 = (($9) - ($889))|0;
       $$pn$i = $890;$estr$2$i = $888;
      }
      $891 = (($pl$0$i) + 1)|0;
      $892 = (($891) + ($$311$i))|0;
      $l$1$i = (($892) + ($844))|0;
      $893 = (($l$1$i) + ($$pn$i))|0;
      $894 = $fl$1$ & 73728;
      $895 = ($894|0)==(0);
      $896 = ($w$1|0)>($893|0);
      $or$cond$i93$i = $895 & $896;
      if ($or$cond$i93$i) {
       $897 = (($w$1) - ($893))|0;
       $898 = ($897>>>0)>(256);
       $899 = $898 ? 256 : $897;
       _memset(($pad$i|0),32,($899|0))|0;
       $900 = ($897>>>0)>(255);
       if ($900) {
        $$01$i95$i = $897;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $901 = (($$01$i95$i) + -256)|0;
         $902 = ($901>>>0)>(255);
         if ($902) {
          $$01$i95$i = $901;
         } else {
          break;
         }
        }
        $903 = $897 & 255;
        $$0$lcssa$i97$i = $903;
       } else {
        $$0$lcssa$i97$i = $897;
       }
       (___fwritex($pad$i,$$0$lcssa$i97$i,$f)|0);
      }
      (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
      $904 = ($894|0)==(65536);
      $or$cond$i100$i = $904 & $896;
      if ($or$cond$i100$i) {
       $905 = (($w$1) - ($893))|0;
       $906 = ($905>>>0)>(256);
       $907 = $906 ? 256 : $905;
       _memset(($pad$i|0),48,($907|0))|0;
       $908 = ($905>>>0)>(255);
       if ($908) {
        $$01$i102$i = $905;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $909 = (($$01$i102$i) + -256)|0;
         $910 = ($909>>>0)>(255);
         if ($910) {
          $$01$i102$i = $909;
         } else {
          break;
         }
        }
        $911 = $905 & 255;
        $$0$lcssa$i104$i = $911;
       } else {
        $$0$lcssa$i104$i = $905;
       }
       (___fwritex($pad$i,$$0$lcssa$i104$i,$f)|0);
      }
      if ($846) {
       $912 = ($a$8$ph$i>>>0)>($$31$i>>>0);
       $r$0$a$8$i = $912 ? $$31$i : $a$8$ph$i;
       $d$4191$i = $r$0$a$8$i;
       while(1) {
        $913 = HEAP32[$d$4191$i>>2]|0;
        $914 = ($913|0)==(0);
        if ($914) {
         $$1$lcssa$i112$i = $14;
        } else {
         $$12$i110$i = $14;$y$03$i109$i = $913;
         while(1) {
          $915 = (($y$03$i109$i>>>0) % 10)&-1;
          $916 = $915 | 48;
          $917 = $916&255;
          $918 = ((($$12$i110$i)) + -1|0);
          HEAP8[$918>>0] = $917;
          $919 = (($y$03$i109$i>>>0) / 10)&-1;
          $920 = ($y$03$i109$i>>>0)<(10);
          if ($920) {
           $$1$lcssa$i112$i = $918;
           break;
          } else {
           $$12$i110$i = $918;$y$03$i109$i = $919;
          }
         }
        }
        $921 = ($d$4191$i|0)==($r$0$a$8$i|0);
        do {
         if ($921) {
          $925 = ($$1$lcssa$i112$i|0)==($14|0);
          if (!($925)) {
           $s7$1$i = $$1$lcssa$i112$i;
           break;
          }
          HEAP8[$16>>0] = 48;
          $s7$1$i = $16;
         } else {
          $922 = ($$1$lcssa$i112$i>>>0)>($buf$i>>>0);
          if ($922) {
           $s7$0188$i = $$1$lcssa$i112$i;
          } else {
           $s7$1$i = $$1$lcssa$i112$i;
           break;
          }
          while(1) {
           $923 = ((($s7$0188$i)) + -1|0);
           HEAP8[$923>>0] = 48;
           $924 = ($923>>>0)>($buf$i>>>0);
           if ($924) {
            $s7$0188$i = $923;
           } else {
            $s7$1$i = $923;
            break;
           }
          }
         }
        } while(0);
        $926 = $s7$1$i;
        $927 = (($15) - ($926))|0;
        (___fwritex($s7$1$i,$927,$f)|0);
        $928 = ((($d$4191$i)) + 4|0);
        $929 = ($928>>>0)>($$31$i>>>0);
        if ($929) {
         $$lcssa479 = $928;
         break;
        } else {
         $d$4191$i = $928;
        }
       }
       $930 = ($842|0)==(0);
       if (!($930)) {
        (___fwritex(4512,1,$f)|0);
       }
       $931 = ($$lcssa479>>>0)<($z$6$i$lcssa>>>0);
       $932 = ($$311$i|0)>(0);
       $933 = $932 & $931;
       if ($933) {
        $$412184$i = $$311$i;$d$5183$i = $$lcssa479;
        while(1) {
         $934 = HEAP32[$d$5183$i>>2]|0;
         $935 = ($934|0)==(0);
         if ($935) {
          $s8$0180$i = $14;
          label = 289;
         } else {
          $$12$i119$i = $14;$y$03$i118$i = $934;
          while(1) {
           $936 = (($y$03$i118$i>>>0) % 10)&-1;
           $937 = $936 | 48;
           $938 = $937&255;
           $939 = ((($$12$i119$i)) + -1|0);
           HEAP8[$939>>0] = $938;
           $940 = (($y$03$i118$i>>>0) / 10)&-1;
           $941 = ($y$03$i118$i>>>0)<(10);
           if ($941) {
            $$lcssa480 = $939;
            break;
           } else {
            $$12$i119$i = $939;$y$03$i118$i = $940;
           }
          }
          $942 = ($$lcssa480>>>0)>($buf$i>>>0);
          if ($942) {
           $s8$0180$i = $$lcssa480;
           label = 289;
          } else {
           $s8$0$lcssa$i = $$lcssa480;
          }
         }
         if ((label|0) == 289) {
          while(1) {
           label = 0;
           $943 = ((($s8$0180$i)) + -1|0);
           HEAP8[$943>>0] = 48;
           $944 = ($943>>>0)>($buf$i>>>0);
           if ($944) {
            $s8$0180$i = $943;
            label = 289;
           } else {
            $s8$0$lcssa$i = $943;
            break;
           }
          }
         }
         $945 = ($$412184$i|0)>(9);
         $946 = $945 ? 9 : $$412184$i;
         (___fwritex($s8$0$lcssa$i,$946,$f)|0);
         $947 = ((($d$5183$i)) + 4|0);
         $948 = (($$412184$i) + -9)|0;
         $949 = ($947>>>0)<($z$6$i$lcssa>>>0);
         $950 = $945 & $949;
         if ($950) {
          $$412184$i = $948;$d$5183$i = $947;
         } else {
          $$412$lcssa$i = $948;
          break;
         }
        }
       } else {
        $$412$lcssa$i = $$311$i;
       }
       $951 = ($$412$lcssa$i|0)>(0);
       if ($951) {
        $952 = ($$412$lcssa$i>>>0)>(256);
        $953 = $952 ? 256 : $$412$lcssa$i;
        _memset(($pad$i|0),48,($953|0))|0;
        $954 = ($$412$lcssa$i>>>0)>(255);
        if ($954) {
         $$01$i126$i = $$412$lcssa$i;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $955 = (($$01$i126$i) + -256)|0;
          $956 = ($955>>>0)>(255);
          if ($956) {
           $$01$i126$i = $955;
          } else {
           break;
          }
         }
         $957 = $$412$lcssa$i & 255;
         $$0$lcssa$i128$i = $957;
        } else {
         $$0$lcssa$i128$i = $$412$lcssa$i;
        }
        (___fwritex($pad$i,$$0$lcssa$i128$i,$f)|0);
       }
      } else {
       $958 = ((($a$8$ph$i)) + 4|0);
       $z$6$$i = $$lcssa275$i ? $z$6$i$lcssa : $958;
       $959 = ($$311$i|0)>(-1);
       do {
        if ($959) {
         $960 = ($$pre$phi302$iZ2D|0)==(0);
         $$5196$i = $$311$i;$d$6195$i = $a$8$ph$i;
         while(1) {
          $961 = HEAP32[$d$6195$i>>2]|0;
          $962 = ($961|0)==(0);
          if ($962) {
           label = 303;
          } else {
           $$12$i134$i = $14;$y$03$i133$i = $961;
           while(1) {
            $963 = (($y$03$i133$i>>>0) % 10)&-1;
            $964 = $963 | 48;
            $965 = $964&255;
            $966 = ((($$12$i134$i)) + -1|0);
            HEAP8[$966>>0] = $965;
            $967 = (($y$03$i133$i>>>0) / 10)&-1;
            $968 = ($y$03$i133$i>>>0)<(10);
            if ($968) {
             $$12$i134$i$lcssa = $$12$i134$i;$$lcssa474 = $966;
             break;
            } else {
             $$12$i134$i = $966;$y$03$i133$i = $967;
            }
           }
           $969 = ($$lcssa474|0)==($14|0);
           if ($969) {
            label = 303;
           } else {
            $1187 = $$12$i134$i$lcssa;$s9$0$i = $$lcssa474;
           }
          }
          if ((label|0) == 303) {
           label = 0;
           HEAP8[$16>>0] = 48;
           $1187 = $14;$s9$0$i = $16;
          }
          $970 = ($d$6195$i|0)==($a$8$ph$i|0);
          do {
           if ($970) {
            (___fwritex($s9$0$i,1,$f)|0);
            $974 = ($$5196$i|0)<(1);
            $or$cond29$i = $960 & $974;
            if ($or$cond29$i) {
             $s9$2$i = $1187;
             break;
            }
            (___fwritex(4512,1,$f)|0);
            $s9$2$i = $1187;
           } else {
            $971 = ($s9$0$i>>>0)>($buf$i>>>0);
            if ($971) {
             $s9$1192$i = $s9$0$i;
            } else {
             $s9$2$i = $s9$0$i;
             break;
            }
            while(1) {
             $972 = ((($s9$1192$i)) + -1|0);
             HEAP8[$972>>0] = 48;
             $973 = ($972>>>0)>($buf$i>>>0);
             if ($973) {
              $s9$1192$i = $972;
             } else {
              $s9$2$i = $972;
              break;
             }
            }
           }
          } while(0);
          $975 = $s9$2$i;
          $976 = (($15) - ($975))|0;
          $977 = ($$5196$i|0)>($976|0);
          $978 = $977 ? $976 : $$5196$i;
          (___fwritex($s9$2$i,$978,$f)|0);
          $979 = (($$5196$i) - ($976))|0;
          $980 = ((($d$6195$i)) + 4|0);
          $981 = ($980>>>0)<($z$6$$i>>>0);
          $982 = ($979|0)>(-1);
          $983 = $981 & $982;
          if ($983) {
           $$5196$i = $979;$d$6195$i = $980;
          } else {
           $$lcssa476 = $979;
           break;
          }
         }
         $984 = ($$lcssa476|0)>(0);
         if (!($984)) {
          break;
         }
         $985 = ($$lcssa476>>>0)>(256);
         $986 = $985 ? 256 : $$lcssa476;
         _memset(($pad$i|0),48,($986|0))|0;
         $987 = ($$lcssa476>>>0)>(255);
         if ($987) {
          $$01$i141$i = $$lcssa476;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $988 = (($$01$i141$i) + -256)|0;
           $989 = ($988>>>0)>(255);
           if ($989) {
            $$01$i141$i = $988;
           } else {
            break;
           }
          }
          $990 = $$lcssa476 & 255;
          $$0$lcssa$i143$i = $990;
         } else {
          $$0$lcssa$i143$i = $$lcssa476;
         }
         (___fwritex($pad$i,$$0$lcssa$i143$i,$f)|0);
        } else {
        }
       } while(0);
       $991 = $estr$2$i;
       $992 = (($9) - ($991))|0;
       (___fwritex($estr$2$i,$992,$f)|0);
      }
      $993 = ($894|0)==(8192);
      $or$cond$i$i = $993 & $896;
      if ($or$cond$i$i) {
       $994 = (($w$1) - ($893))|0;
       $995 = ($994>>>0)>(256);
       $996 = $995 ? 256 : $994;
       _memset(($pad$i|0),32,($996|0))|0;
       $997 = ($994>>>0)>(255);
       if ($997) {
        $$01$i$i = $994;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $998 = (($$01$i$i) + -256)|0;
         $999 = ($998>>>0)>(255);
         if ($999) {
          $$01$i$i = $998;
         } else {
          break;
         }
        }
        $1000 = $994 & 255;
        $$0$lcssa$i$i = $1000;
       } else {
        $$0$lcssa$i$i = $994;
       }
       (___fwritex($pad$i,$$0$lcssa$i$i,$f)|0);
      }
      $w$30$i = $896 ? $w$1 : $893;
      $$0$i = $w$30$i;
     } else {
      $445 = $t$0 & 32;
      $446 = ($445|0)!=(0);
      $447 = $446 ? 4480 : 4488;
      $448 = ($$07$i != $$07$i) | (0.0 != 0.0);
      $449 = $446 ? 4496 : 4504;
      $pl$1$i = $448 ? 0 : $pl$0$i;
      $s1$0$i = $448 ? $449 : $447;
      $450 = (($pl$1$i) + 3)|0;
      $451 = $fl$1$ & 8192;
      $452 = ($451|0)==(0);
      $453 = ($w$1|0)>($450|0);
      $or$cond$i35$i = $452 & $453;
      if ($or$cond$i35$i) {
       $454 = (($w$1) - ($450))|0;
       $455 = ($454>>>0)>(256);
       $456 = $455 ? 256 : $454;
       _memset(($pad$i|0),32,($456|0))|0;
       $457 = ($454>>>0)>(255);
       if ($457) {
        $$01$i37$i = $454;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $458 = (($$01$i37$i) + -256)|0;
         $459 = ($458>>>0)>(255);
         if ($459) {
          $$01$i37$i = $458;
         } else {
          break;
         }
        }
        $460 = $454 & 255;
        $$0$lcssa$i39$i = $460;
       } else {
        $$0$lcssa$i39$i = $454;
       }
       (___fwritex($pad$i,$$0$lcssa$i39$i,$f)|0);
      }
      (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
      (___fwritex($s1$0$i,3,$f)|0);
      $461 = $fl$1$ & 73728;
      $462 = ($461|0)==(8192);
      $or$cond$i42$i = $462 & $453;
      if ($or$cond$i42$i) {
       $463 = (($w$1) - ($450))|0;
       $464 = ($463>>>0)>(256);
       $465 = $464 ? 256 : $463;
       _memset(($pad$i|0),32,($465|0))|0;
       $466 = ($463>>>0)>(255);
       if ($466) {
        $$01$i44$i = $463;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $467 = (($$01$i44$i) + -256)|0;
         $468 = ($467>>>0)>(255);
         if ($468) {
          $$01$i44$i = $467;
         } else {
          break;
         }
        }
        $469 = $463 & 255;
        $$0$lcssa$i46$i = $469;
       } else {
        $$0$lcssa$i46$i = $463;
       }
       (___fwritex($pad$i,$$0$lcssa$i46$i,$f)|0);
      }
      $470 = $453 ? $w$1 : $450;
      $$0$i = $470;
     }
    } while(0);
    $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $$0$i;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   case 115:  {
    $382 = $264;
    $383 = ($264|0)!=(0);
    $384 = $383 ? $382 : 4448;
    $a$1 = $384;
    label = 94;
    break;
   }
   case 67:  {
    HEAP32[$wc>>2] = $264;
    HEAP32[$5>>2] = 0;
    $1179 = $wc;$1180 = $6;$p$4272 = -1;
    label = 97;
    break;
   }
   case 83:  {
    $391 = $264;
    $392 = ($p$0|0)==(0);
    if ($392) {
     $1181 = $264;$1182 = $391;$i$0$lcssa273 = 0;
     label = 102;
    } else {
     $1179 = $391;$1180 = $264;$p$4272 = $p$0;
     label = 97;
    }
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 73;
    break;
   }
   case 117:  {
    $336 = $291;$338 = $264;$pl$0 = 0;$prefix$0 = 4432;
    label = 84;
    break;
   }
   case 112:  {
    $286 = ($p$0>>>0)>(8);
    $287 = $286 ? $p$0 : 8;
    $288 = $fl$1$ | 8;
    $fl$3 = $288;$p$1 = $287;$t$1 = 120;
    label = 73;
    break;
   }
   case 110:  {
    switch ($st$0$lcssa456|0) {
    case 3:  {
     $274 = $cnt$1&65535;
     $275 = $264;
     HEAP16[$275>>1] = $274;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $276 = $cnt$1&255;
     $277 = $264;
     HEAP8[$277>>0] = $276;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $278 = $264;
     HEAP32[$278>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 0:  {
     $265 = $264;
     HEAP32[$265>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $266 = $264;
     HEAP32[$266>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $267 = ($cnt$1|0)<(0);
     $268 = $267 << 31 >> 31;
     $269 = $264;
     $270 = $269;
     $271 = $270;
     HEAP32[$271>>2] = $cnt$1;
     $272 = (($270) + 4)|0;
     $273 = $272;
     HEAP32[$273>>2] = $268;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $279 = ($cnt$1|0)<(0);
     $280 = $279 << 31 >> 31;
     $281 = $264;
     $282 = $281;
     $283 = $282;
     HEAP32[$283>>2] = $cnt$1;
     $284 = (($282) + 4)|0;
     $285 = $284;
     HEAP32[$285>>2] = $280;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   default: {
    $1175 = $291;$1176 = $264;$a$2 = $23;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4432;$z$2 = $2;
   }
   }
  } while(0);
  if ((label|0) == 73) {
   label = 0;
   $289 = $t$1 & 32;
   $290 = ($264|0)==(0);
   $292 = ($291|0)==(0);
   $293 = $290 & $292;
   if ($293) {
    $366 = $264;$368 = $291;$a$0 = $2;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4432;
    label = 89;
   } else {
    $$012$i = $2;$295 = $264;$302 = $291;
    while(1) {
     $294 = $295 & 15;
     $296 = (4416 + ($294)|0);
     $297 = HEAP8[$296>>0]|0;
     $298 = $297&255;
     $299 = $298 | $289;
     $300 = $299&255;
     $301 = ((($$012$i)) + -1|0);
     HEAP8[$301>>0] = $300;
     $303 = (_bitshift64Lshr(($295|0),($302|0),4)|0);
     $304 = tempRet0;
     $305 = ($303|0)==(0);
     $306 = ($304|0)==(0);
     $307 = $305 & $306;
     if ($307) {
      $$lcssa491 = $301;
      break;
     } else {
      $$012$i = $301;$295 = $303;$302 = $304;
     }
    }
    $308 = $fl$3 & 8;
    $309 = ($308|0)==(0);
    if ($309) {
     $366 = $264;$368 = $291;$a$0 = $$lcssa491;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4432;
     label = 89;
    } else {
     $310 = $t$1 >> 4;
     $311 = (4432 + ($310)|0);
     $366 = $264;$368 = $291;$a$0 = $$lcssa491;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $311;
     label = 89;
    }
   }
  }
  else if ((label|0) == 84) {
   label = 0;
   $337 = ($336>>>0)>(0);
   $339 = ($338>>>0)>(4294967295);
   $340 = ($336|0)==(0);
   $341 = $340 & $339;
   $342 = $337 | $341;
   if ($342) {
    $$05$i = $2;$343 = $338;$344 = $336;
    while(1) {
     $345 = (___uremdi3(($343|0),($344|0),10,0)|0);
     $346 = tempRet0;
     $347 = $345 | 48;
     $348 = $347&255;
     $349 = ((($$05$i)) + -1|0);
     HEAP8[$349>>0] = $348;
     $350 = (___udivdi3(($343|0),($344|0),10,0)|0);
     $351 = tempRet0;
     $352 = ($344>>>0)>(9);
     $353 = ($343>>>0)>(4294967295);
     $354 = ($344|0)==(9);
     $355 = $354 & $353;
     $356 = $352 | $355;
     if ($356) {
      $$05$i = $349;$343 = $350;$344 = $351;
     } else {
      $$lcssa487 = $349;$1177 = $350;$1178 = $351;
      break;
     }
    }
    $$0$lcssa$i53 = $$lcssa487;$$01$lcssa$off0$i = $1177;
   } else {
    $$0$lcssa$i53 = $2;$$01$lcssa$off0$i = $338;
   }
   $357 = ($$01$lcssa$off0$i|0)==(0);
   if ($357) {
    $366 = $338;$368 = $336;$a$0 = $$0$lcssa$i53;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 89;
   } else {
    $$12$i = $$0$lcssa$i53;$y$03$i = $$01$lcssa$off0$i;
    while(1) {
     $358 = (($y$03$i>>>0) % 10)&-1;
     $359 = $358 | 48;
     $360 = $359&255;
     $361 = ((($$12$i)) + -1|0);
     HEAP8[$361>>0] = $360;
     $362 = (($y$03$i>>>0) / 10)&-1;
     $363 = ($y$03$i>>>0)<(10);
     if ($363) {
      $366 = $338;$368 = $336;$a$0 = $361;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
      label = 89;
      break;
     } else {
      $$12$i = $361;$y$03$i = $362;
     }
    }
   }
  }
  else if ((label|0) == 94) {
   label = 0;
   $385 = (_memchr($a$1,0,$p$0)|0);
   $386 = ($385|0)==(0|0);
   $387 = $385;
   $388 = $a$1;
   $389 = (($387) - ($388))|0;
   $390 = (($a$1) + ($p$0)|0);
   $z$1 = $386 ? $390 : $385;
   $p$3 = $386 ? $p$0 : $389;
   $1175 = $291;$1176 = $264;$a$2 = $a$1;$fl$6 = $263;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 4432;$z$2 = $z$1;
  }
  else if ((label|0) == 97) {
   label = 0;
   $i$0175 = 0;$l$1174 = 0;$ws$0176 = $1179;
   while(1) {
    $393 = HEAP32[$ws$0176>>2]|0;
    $394 = ($393|0)==(0);
    if ($394) {
     $i$0$lcssa = $i$0175;$l$2 = $l$1174;
     break;
    }
    $395 = (_wctomb($mb,$393)|0);
    $396 = ($395|0)<(0);
    $397 = (($p$4272) - ($i$0175))|0;
    $398 = ($395>>>0)>($397>>>0);
    $or$cond22 = $396 | $398;
    if ($or$cond22) {
     $i$0$lcssa = $i$0175;$l$2 = $395;
     break;
    }
    $399 = ((($ws$0176)) + 4|0);
    $400 = (($395) + ($i$0175))|0;
    $401 = ($p$4272>>>0)>($400>>>0);
    if ($401) {
     $i$0175 = $400;$l$1174 = $395;$ws$0176 = $399;
    } else {
     $i$0$lcssa = $400;$l$2 = $395;
     break;
    }
   }
   $402 = ($l$2|0)<(0);
   if ($402) {
    $$0 = -1;
    label = 363;
    break;
   } else {
    $1181 = $1180;$1182 = $1179;$i$0$lcssa273 = $i$0$lcssa;
    label = 102;
   }
  }
  if ((label|0) == 89) {
   label = 0;
   $364 = ($p$2|0)>(-1);
   $365 = $fl$4 & -65537;
   $$fl$4 = $364 ? $365 : $fl$4;
   $367 = ($366|0)!=(0);
   $369 = ($368|0)!=(0);
   $370 = $367 | $369;
   $371 = ($p$2|0)!=(0);
   $or$cond = $370 | $371;
   if ($or$cond) {
    $372 = $a$0;
    $373 = (($3) - ($372))|0;
    $374 = $370&1;
    $375 = $374 ^ 1;
    $376 = (($375) + ($373))|0;
    $377 = ($p$2|0)>($376|0);
    $p$2$ = $377 ? $p$2 : $376;
    $1175 = $368;$1176 = $366;$a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   } else {
    $1175 = $368;$1176 = $366;$a$2 = $2;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   }
  }
  else if ((label|0) == 102) {
   label = 0;
   $403 = $fl$1$ & 73728;
   $404 = ($403|0)==(0);
   $405 = ($w$1|0)>($i$0$lcssa273|0);
   $or$cond$i64 = $404 & $405;
   if ($or$cond$i64) {
    $406 = (($w$1) - ($i$0$lcssa273))|0;
    $407 = ($406>>>0)>(256);
    $408 = $407 ? 256 : $406;
    _memset(($pad$i|0),32,($408|0))|0;
    $409 = ($406>>>0)>(255);
    if ($409) {
     $$01$i66 = $406;
     while(1) {
      (___fwritex($pad$i,256,$f)|0);
      $410 = (($$01$i66) + -256)|0;
      $411 = ($410>>>0)>(255);
      if ($411) {
       $$01$i66 = $410;
      } else {
       break;
      }
     }
     $412 = $406 & 255;
     $$0$lcssa$i68 = $412;
    } else {
     $$0$lcssa$i68 = $406;
    }
    (___fwritex($pad$i,$$0$lcssa$i68,$f)|0);
   }
   $413 = ($i$0$lcssa273|0)==(0);
   L463: do {
    if (!($413)) {
     $i$1186 = 0;$ws$1187 = $1182;
     while(1) {
      $414 = HEAP32[$ws$1187>>2]|0;
      $415 = ($414|0)==(0);
      if ($415) {
       break L463;
      }
      $416 = (_wctomb($mb,$414)|0);
      $417 = (($416) + ($i$1186))|0;
      $418 = ($417|0)>($i$0$lcssa273|0);
      if ($418) {
       break L463;
      }
      $419 = ((($ws$1187)) + 4|0);
      (___fwritex($mb,$416,$f)|0);
      $420 = ($417>>>0)<($i$0$lcssa273>>>0);
      if ($420) {
       $i$1186 = $417;$ws$1187 = $419;
      } else {
       break;
      }
     }
    }
   } while(0);
   $421 = ($403|0)==(8192);
   $or$cond$i71 = $421 & $405;
   if ($or$cond$i71) {
    $422 = (($w$1) - ($i$0$lcssa273))|0;
    $423 = ($422>>>0)>(256);
    $424 = $423 ? 256 : $422;
    _memset(($pad$i|0),32,($424|0))|0;
    $425 = ($422>>>0)>(255);
    if ($425) {
     $$01$i73 = $422;
     while(1) {
      (___fwritex($pad$i,256,$f)|0);
      $426 = (($$01$i73) + -256)|0;
      $427 = ($426>>>0)>(255);
      if ($427) {
       $$01$i73 = $426;
      } else {
       break;
      }
     }
     $428 = $422 & 255;
     $$0$lcssa$i75 = $428;
    } else {
     $$0$lcssa$i75 = $422;
    }
    (___fwritex($pad$i,$$0$lcssa$i75,$f)|0);
   }
   $429 = $405 ? $w$1 : $i$0$lcssa273;
   $1169 = $291;$1170 = $1181;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $429;$l10n$0 = $l10n$3;
   continue;
  }
  $1001 = $z$2;
  $1002 = $a$2;
  $1003 = (($1001) - ($1002))|0;
  $1004 = ($p$5|0)<($1003|0);
  $$p$5 = $1004 ? $1003 : $p$5;
  $1005 = (($pl$2) + ($$p$5))|0;
  $1006 = ($w$1|0)<($1005|0);
  $w$2 = $1006 ? $1005 : $w$1;
  $1007 = $fl$6 & 73728;
  $1008 = ($1007|0)==(0);
  $1009 = ($w$2|0)>($1005|0);
  $or$cond$i81 = $1008 & $1009;
  if ($or$cond$i81) {
   $1010 = (($w$2) - ($1005))|0;
   $1011 = ($1010>>>0)>(256);
   $1012 = $1011 ? 256 : $1010;
   _memset(($pad$i|0),32,($1012|0))|0;
   $1013 = ($1010>>>0)>(255);
   if ($1013) {
    $$01$i83 = $1010;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1014 = (($$01$i83) + -256)|0;
     $1015 = ($1014>>>0)>(255);
     if ($1015) {
      $$01$i83 = $1014;
     } else {
      break;
     }
    }
    $1016 = $1010 & 255;
    $$0$lcssa$i85 = $1016;
   } else {
    $$0$lcssa$i85 = $1010;
   }
   (___fwritex($pad$i,$$0$lcssa$i85,$f)|0);
  }
  (___fwritex($prefix$2,$pl$2,$f)|0);
  $1017 = ($1007|0)==(65536);
  $or$cond$i57 = $1017 & $1009;
  if ($or$cond$i57) {
   $1018 = (($w$2) - ($1005))|0;
   $1019 = ($1018>>>0)>(256);
   $1020 = $1019 ? 256 : $1018;
   _memset(($pad$i|0),48,($1020|0))|0;
   $1021 = ($1018>>>0)>(255);
   if ($1021) {
    $$01$i59 = $1018;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1022 = (($$01$i59) + -256)|0;
     $1023 = ($1022>>>0)>(255);
     if ($1023) {
      $$01$i59 = $1022;
     } else {
      break;
     }
    }
    $1024 = $1018 & 255;
    $$0$lcssa$i61 = $1024;
   } else {
    $$0$lcssa$i61 = $1018;
   }
   (___fwritex($pad$i,$$0$lcssa$i61,$f)|0);
  }
  $1025 = ($$p$5|0)>($1003|0);
  if ($1025) {
   $1026 = (($$p$5) - ($1003))|0;
   $1027 = ($1026>>>0)>(256);
   $1028 = $1027 ? 256 : $1026;
   _memset(($pad$i|0),48,($1028|0))|0;
   $1029 = ($1026>>>0)>(255);
   if ($1029) {
    $$01$i44 = $1026;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1030 = (($$01$i44) + -256)|0;
     $1031 = ($1030>>>0)>(255);
     if ($1031) {
      $$01$i44 = $1030;
     } else {
      break;
     }
    }
    $1032 = $1026 & 255;
    $$0$lcssa$i46 = $1032;
   } else {
    $$0$lcssa$i46 = $1026;
   }
   (___fwritex($pad$i,$$0$lcssa$i46,$f)|0);
  }
  (___fwritex($a$2,$1003,$f)|0);
  $1033 = ($1007|0)==(8192);
  $or$cond$i = $1033 & $1009;
  if ($or$cond$i) {
   $1034 = (($w$2) - ($1005))|0;
   $1035 = ($1034>>>0)>(256);
   $1036 = $1035 ? 256 : $1034;
   _memset(($pad$i|0),32,($1036|0))|0;
   $1037 = ($1034>>>0)>(255);
   if ($1037) {
    $$01$i = $1034;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1038 = (($$01$i) + -256)|0;
     $1039 = ($1038>>>0)>(255);
     if ($1039) {
      $$01$i = $1038;
     } else {
      break;
     }
    }
    $1040 = $1034 & 255;
    $$0$lcssa$i = $1040;
   } else {
    $$0$lcssa$i = $1034;
   }
   (___fwritex($pad$i,$$0$lcssa$i,$f)|0);
  }
  $1169 = $1175;$1170 = $1176;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 if ((label|0) == 344) {
  $1041 = ($f|0)==(0|0);
  if (!($1041)) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;return ($$0|0);
  }
  $1042 = ($l10n$0$lcssa|0)==(0);
  if ($1042) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $i$2162 = 1;
  }
  while(1) {
   $1043 = (($nl_type) + ($i$2162<<2)|0);
   $1044 = HEAP32[$1043>>2]|0;
   $1045 = ($1044|0)==(0);
   if ($1045) {
    $i$2162$lcssa = $i$2162;
    break;
   }
   $1047 = (($nl_arg) + ($i$2162<<3)|0);
   $1048 = ($1044>>>0)>(20);
   L530: do {
    if (!($1048)) {
     do {
      switch ($1044|0) {
      case 15:  {
       $arglist_current53 = HEAP32[$ap>>2]|0;
       $1122 = $arglist_current53;
       $1123 = ((0) + 4|0);
       $expanded190 = $1123;
       $expanded189 = (($expanded190) - 1)|0;
       $1124 = (($1122) + ($expanded189))|0;
       $1125 = ((0) + 4|0);
       $expanded194 = $1125;
       $expanded193 = (($expanded194) - 1)|0;
       $expanded192 = $expanded193 ^ -1;
       $1126 = $1124 & $expanded192;
       $1127 = $1126;
       $1128 = HEAP32[$1127>>2]|0;
       $arglist_next54 = ((($1127)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next54;
       $1129 = $1128&255;
       $1130 = $1129 << 24 >> 24;
       $1131 = ($1130|0)<(0);
       $1132 = $1131 << 31 >> 31;
       $1133 = $1047;
       $1134 = $1133;
       HEAP32[$1134>>2] = $1130;
       $1135 = (($1133) + 4)|0;
       $1136 = $1135;
       HEAP32[$1136>>2] = $1132;
       break L530;
       break;
      }
      case 16:  {
       $arglist_current56 = HEAP32[$ap>>2]|0;
       $1137 = $arglist_current56;
       $1138 = ((0) + 4|0);
       $expanded197 = $1138;
       $expanded196 = (($expanded197) - 1)|0;
       $1139 = (($1137) + ($expanded196))|0;
       $1140 = ((0) + 4|0);
       $expanded201 = $1140;
       $expanded200 = (($expanded201) - 1)|0;
       $expanded199 = $expanded200 ^ -1;
       $1141 = $1139 & $expanded199;
       $1142 = $1141;
       $1143 = HEAP32[$1142>>2]|0;
       $arglist_next57 = ((($1142)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next57;
       $$mask$i = $1143 & 255;
       $1144 = $1047;
       $1145 = $1144;
       HEAP32[$1145>>2] = $$mask$i;
       $1146 = (($1144) + 4)|0;
       $1147 = $1146;
       HEAP32[$1147>>2] = 0;
       break L530;
       break;
      }
      case 17:  {
       $arglist_current59 = HEAP32[$ap>>2]|0;
       $1148 = $arglist_current59;
       $1149 = ((0) + 8|0);
       $expanded204 = $1149;
       $expanded203 = (($expanded204) - 1)|0;
       $1150 = (($1148) + ($expanded203))|0;
       $1151 = ((0) + 8|0);
       $expanded208 = $1151;
       $expanded207 = (($expanded208) - 1)|0;
       $expanded206 = $expanded207 ^ -1;
       $1152 = $1150 & $expanded206;
       $1153 = $1152;
       $1154 = +HEAPF64[$1153>>3];
       $arglist_next60 = ((($1153)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next60;
       HEAPF64[$1047>>3] = $1154;
       break L530;
       break;
      }
      case 18:  {
       $arglist_current62 = HEAP32[$ap>>2]|0;
       $1155 = $arglist_current62;
       $1156 = ((0) + 8|0);
       $expanded211 = $1156;
       $expanded210 = (($expanded211) - 1)|0;
       $1157 = (($1155) + ($expanded210))|0;
       $1158 = ((0) + 8|0);
       $expanded215 = $1158;
       $expanded214 = (($expanded215) - 1)|0;
       $expanded213 = $expanded214 ^ -1;
       $1159 = $1157 & $expanded213;
       $1160 = $1159;
       $1161 = +HEAPF64[$1160>>3];
       $arglist_next63 = ((($1160)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next63;
       HEAPF64[$1047>>3] = $1161;
       break L530;
       break;
      }
      case 9:  {
       $arglist_current35 = HEAP32[$ap>>2]|0;
       $1049 = $arglist_current35;
       $1050 = ((0) + 4|0);
       $expanded148 = $1050;
       $expanded147 = (($expanded148) - 1)|0;
       $1051 = (($1049) + ($expanded147))|0;
       $1052 = ((0) + 4|0);
       $expanded152 = $1052;
       $expanded151 = (($expanded152) - 1)|0;
       $expanded150 = $expanded151 ^ -1;
       $1053 = $1051 & $expanded150;
       $1054 = $1053;
       $1055 = HEAP32[$1054>>2]|0;
       $arglist_next36 = ((($1054)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next36;
       HEAP32[$1047>>2] = $1055;
       break L530;
       break;
      }
      case 10:  {
       $arglist_current38 = HEAP32[$ap>>2]|0;
       $1056 = $arglist_current38;
       $1057 = ((0) + 4|0);
       $expanded155 = $1057;
       $expanded154 = (($expanded155) - 1)|0;
       $1058 = (($1056) + ($expanded154))|0;
       $1059 = ((0) + 4|0);
       $expanded159 = $1059;
       $expanded158 = (($expanded159) - 1)|0;
       $expanded157 = $expanded158 ^ -1;
       $1060 = $1058 & $expanded157;
       $1061 = $1060;
       $1062 = HEAP32[$1061>>2]|0;
       $arglist_next39 = ((($1061)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next39;
       $1063 = ($1062|0)<(0);
       $1064 = $1063 << 31 >> 31;
       $1065 = $1047;
       $1066 = $1065;
       HEAP32[$1066>>2] = $1062;
       $1067 = (($1065) + 4)|0;
       $1068 = $1067;
       HEAP32[$1068>>2] = $1064;
       break L530;
       break;
      }
      case 11:  {
       $arglist_current41 = HEAP32[$ap>>2]|0;
       $1069 = $arglist_current41;
       $1070 = ((0) + 4|0);
       $expanded162 = $1070;
       $expanded161 = (($expanded162) - 1)|0;
       $1071 = (($1069) + ($expanded161))|0;
       $1072 = ((0) + 4|0);
       $expanded166 = $1072;
       $expanded165 = (($expanded166) - 1)|0;
       $expanded164 = $expanded165 ^ -1;
       $1073 = $1071 & $expanded164;
       $1074 = $1073;
       $1075 = HEAP32[$1074>>2]|0;
       $arglist_next42 = ((($1074)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next42;
       $1076 = $1047;
       $1077 = $1076;
       HEAP32[$1077>>2] = $1075;
       $1078 = (($1076) + 4)|0;
       $1079 = $1078;
       HEAP32[$1079>>2] = 0;
       break L530;
       break;
      }
      case 12:  {
       $arglist_current44 = HEAP32[$ap>>2]|0;
       $1080 = $arglist_current44;
       $1081 = ((0) + 8|0);
       $expanded169 = $1081;
       $expanded168 = (($expanded169) - 1)|0;
       $1082 = (($1080) + ($expanded168))|0;
       $1083 = ((0) + 8|0);
       $expanded173 = $1083;
       $expanded172 = (($expanded173) - 1)|0;
       $expanded171 = $expanded172 ^ -1;
       $1084 = $1082 & $expanded171;
       $1085 = $1084;
       $1086 = $1085;
       $1087 = $1086;
       $1088 = HEAP32[$1087>>2]|0;
       $1089 = (($1086) + 4)|0;
       $1090 = $1089;
       $1091 = HEAP32[$1090>>2]|0;
       $arglist_next45 = ((($1085)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next45;
       $1092 = $1047;
       $1093 = $1092;
       HEAP32[$1093>>2] = $1088;
       $1094 = (($1092) + 4)|0;
       $1095 = $1094;
       HEAP32[$1095>>2] = $1091;
       break L530;
       break;
      }
      case 13:  {
       $arglist_current47 = HEAP32[$ap>>2]|0;
       $1096 = $arglist_current47;
       $1097 = ((0) + 4|0);
       $expanded176 = $1097;
       $expanded175 = (($expanded176) - 1)|0;
       $1098 = (($1096) + ($expanded175))|0;
       $1099 = ((0) + 4|0);
       $expanded180 = $1099;
       $expanded179 = (($expanded180) - 1)|0;
       $expanded178 = $expanded179 ^ -1;
       $1100 = $1098 & $expanded178;
       $1101 = $1100;
       $1102 = HEAP32[$1101>>2]|0;
       $arglist_next48 = ((($1101)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next48;
       $1103 = $1102&65535;
       $1104 = $1103 << 16 >> 16;
       $1105 = ($1104|0)<(0);
       $1106 = $1105 << 31 >> 31;
       $1107 = $1047;
       $1108 = $1107;
       HEAP32[$1108>>2] = $1104;
       $1109 = (($1107) + 4)|0;
       $1110 = $1109;
       HEAP32[$1110>>2] = $1106;
       break L530;
       break;
      }
      case 14:  {
       $arglist_current50 = HEAP32[$ap>>2]|0;
       $1111 = $arglist_current50;
       $1112 = ((0) + 4|0);
       $expanded183 = $1112;
       $expanded182 = (($expanded183) - 1)|0;
       $1113 = (($1111) + ($expanded182))|0;
       $1114 = ((0) + 4|0);
       $expanded187 = $1114;
       $expanded186 = (($expanded187) - 1)|0;
       $expanded185 = $expanded186 ^ -1;
       $1115 = $1113 & $expanded185;
       $1116 = $1115;
       $1117 = HEAP32[$1116>>2]|0;
       $arglist_next51 = ((($1116)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next51;
       $$mask1$i = $1117 & 65535;
       $1118 = $1047;
       $1119 = $1118;
       HEAP32[$1119>>2] = $$mask1$i;
       $1120 = (($1118) + 4)|0;
       $1121 = $1120;
       HEAP32[$1121>>2] = 0;
       break L530;
       break;
      }
      default: {
       break L530;
      }
      }
     } while(0);
    }
   } while(0);
   $1162 = (($i$2162) + 1)|0;
   $1163 = ($1162|0)<(10);
   if ($1163) {
    $i$2162 = $1162;
   } else {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label|0) == 363) {
   STACKTOP = sp;return ($$0|0);
  }
  $1046 = ($i$2162$lcssa|0)<(10);
  if ($1046) {
   $i$3160 = $i$2162$lcssa;
  } else {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  while(1) {
   $1166 = (($nl_type) + ($i$3160<<2)|0);
   $1167 = HEAP32[$1166>>2]|0;
   $1168 = ($1167|0)==(0);
   $1164 = (($i$3160) + 1)|0;
   if (!($1168)) {
    $$0 = -1;
    label = 363;
    break;
   }
   $1165 = ($1164|0)<(10);
   if ($1165) {
    $i$3160 = $1164;
   } else {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label|0) == 363) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 else if ((label|0) == 363) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1904);
 $0 = ((($this)) + 4|0);
 $1 = HEAP8[$msg>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($msg)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($msg)) + 1|0);
 $7 = $3 ? $6 : $5;
 __ZNSt3__118__libcpp_refstringC2EPKc($0,$7);
 return;
}
function __ZNSt13runtime_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1904);
 $0 = ((($this)) + 4|0);
 __ZNSt3__118__libcpp_refstringC2EPKc($0,$msg);
 return;
}
function __ZNSt3__118__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($msg|0))|0);
 $1 = (($0) + 13)|0;
 $2 = (__Znwj($1)|0);
 HEAP32[$2>>2] = $0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($2)) + 12|0);
 $6 = (($0) + 1)|0;
 _memcpy(($5|0),($msg|0),($6|0))|0;
 HEAP32[$this>>2] = $5;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this>>2]=HEAP32[$__str>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = ((($__str)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ((($__str)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(11);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__n;
  $__p$0 = $7;
 }
 _memset(($__p$0|0),($__c|0),($__n|0))|0;
 $11 = (($__p$0) + ($__n)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if (!($0)) {
  $1 = HEAP8[$__str>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  $4 = ((($__str)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($__str)) + 1|0);
  $7 = $3 ? $6 : $5;
  $8 = ((($__str)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $1&255;
  $11 = $10 >>> 1;
  $12 = $3 ? $11 : $9;
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$7,$12)|0);
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 1|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__n>>>0);
 do {
  if ($8) {
   $9 = (($__n) - ($7))|0;
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$9,$__c)|0);
  } else {
   if ($2) {
    $14 = (((($this)) + 1|0) + ($__n)|0);
    HEAP8[$14>>0] = 0;
    $15 = $__n << 1;
    $16 = $15&255;
    HEAP8[$this>>0] = $16;
    break;
   } else {
    $10 = ((($this)) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($11) + ($__n)|0);
    HEAP8[$12>>0] = 0;
    $13 = ((($this)) + 4|0);
    HEAP32[$13>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)==(0);
 if (!($0)) {
  $1 = HEAP8[$this>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $16 = 10;$8 = $1;
  } else {
   $4 = HEAP32[$this>>2]|0;
   $5 = $4 & -2;
   $phitmp$i = (($5) + -1)|0;
   $6 = $4&255;
   $16 = $phitmp$i;$8 = $6;
  }
  $7 = $8 & 1;
  $9 = ($7<<24>>24)==(0);
  if ($9) {
   $12 = $8&255;
   $13 = $12 >>> 1;
   $15 = $13;
  } else {
   $10 = ((($this)) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   $15 = $11;
  }
  $14 = (($16) - ($15))|0;
  $17 = ($14>>>0)<($__n>>>0);
  if ($17) {
   $18 = (($__n) - ($16))|0;
   $19 = (($18) + ($15))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
   $$pre = HEAP8[$this>>0]|0;
   $21 = $$pre;
  } else {
   $21 = $8;
  }
  $20 = $21 & 1;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   $25 = ((($this)) + 1|0);
   $27 = $25;
  } else {
   $23 = ((($this)) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $27 = $24;
  }
  $26 = (($27) + ($15)|0);
  _memset(($26|0),($__c|0),($__n|0))|0;
  $28 = (($15) + ($__n))|0;
  $29 = HEAP8[$this>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $33 = $28 << 1;
   $34 = $33&255;
   HEAP8[$this>>0] = $34;
  } else {
   $32 = ((($this)) + 4|0);
   HEAP32[$32>>2] = $28;
  }
  $35 = (($27) + ($28)|0);
  HEAP8[$35>>0] = 0;
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0, $phitmp$i3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 10;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(11);
 if ($17) {
  $20 = 10;
 } else {
  $18 = (($16) + 16)|0;
  $19 = $18 & -16;
  $phitmp$i3 = (($19) + -1)|0;
  $20 = $phitmp$i3;
 }
 $21 = ($20|0)==($22|0);
 do {
  if (!($21)) {
   $23 = ($20|0)==(10);
   do {
    if ($23) {
     $24 = ((($this)) + 1|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$0 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = (($20) + 1)|0;
     $28 = (__Znwj($27)|0);
     $29 = $8 & 1;
     $30 = ($29<<24>>24)==(0);
     if ($30) {
      $33 = ((($this)) + 1|0);
      $__new_data$0 = $28;$__now_long$0$off0 = 1;$__p$0 = $33;$__was_long$0$off0 = 0;
      break;
     } else {
      $31 = ((($this)) + 8|0);
      $32 = HEAP32[$31>>2]|0;
      $__new_data$0 = $28;$__now_long$0$off0 = 1;$__p$0 = $32;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $34 = $8 & 1;
   $35 = ($34<<24>>24)==(0);
   if ($35) {
    $38 = $8&255;
    $39 = $38 >>> 1;
    $41 = $39;
   } else {
    $36 = ((($this)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $41 = $37;
   }
   $40 = (($41) + 1)|0;
   _memcpy(($__new_data$0|0),($__p$0|0),($40|0))|0;
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $42 = (($20) + 1)|0;
    $43 = $42 | 1;
    HEAP32[$this>>2] = $43;
    $44 = ((($this)) + 4|0);
    HEAP32[$44>>2] = $14;
    $45 = ((($this)) + 8|0);
    HEAP32[$45>>2] = $__new_data$0;
    break;
   } else {
    $46 = $14 << 1;
    $47 = $46&255;
    HEAP8[$this>>0] = $47;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy)|0);
  _memcpy(($22|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $26 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $27 = (($20) + ($$sum1)|0);
  _memcpy(($26|0),($27|0),($25|0))|0;
 }
 $28 = ($__old_cap|0)==(10);
 if (!($28)) {
  __ZdlPv($20);
 }
 $29 = ((($this)) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 $31 = (($23) + ($__n_add))|0;
 $32 = ((($this)) + 4|0);
 HEAP32[$32>>2] = $31;
 $33 = (($18) + ($31)|0);
 HEAP8[$33>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = (($__old_sz) - ($__n_del))|0;
 $22 = ($21|0)==($__n_copy|0);
 if (!($22)) {
  $23 = (($21) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $24 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $25 = (($20) + ($$sum1)|0);
  _memcpy(($24|0),($25|0),($23|0))|0;
 }
 $26 = ($__old_cap|0)==(10);
 if (!($26)) {
  __ZdlPv($20);
 }
 $27 = ((($this)) + 8|0);
 HEAP32[$27>>2] = $18;
 $28 = $17 | 1;
 HEAP32[$this>>2] = $28;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 (_wmemcpy($__p$0,$__s,$__sz)|0);
 $12 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 (_wmemset($__p$0,$__c,$__n)|0);
 $12 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 1;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 4|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   (_wmemmove($14,$__s,$__n)|0);
   $15 = (($14) + ($__n<<2)|0);
   HEAP32[$15>>2] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0, $phitmp$i3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 1;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $20 = 1;
 } else {
  $18 = (($16) + 4)|0;
  $19 = $18 & -4;
  $phitmp$i3 = (($19) + -1)|0;
  $20 = $phitmp$i3;
 }
 $21 = ($20|0)==($22|0);
 do {
  if (!($21)) {
   $23 = ($20|0)==(1);
   do {
    if ($23) {
     $24 = ((($this)) + 4|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$0 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = $20 << 2;
     $28 = (($27) + 4)|0;
     $29 = (__Znwj($28)|0);
     $30 = $8 & 1;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $34 = ((($this)) + 4|0);
      $__new_data$0 = $29;$__now_long$0$off0 = 1;$__p$0 = $34;$__was_long$0$off0 = 0;
      break;
     } else {
      $32 = ((($this)) + 8|0);
      $33 = HEAP32[$32>>2]|0;
      $__new_data$0 = $29;$__now_long$0$off0 = 1;$__p$0 = $33;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $35 = $8 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $39 = $8&255;
    $40 = $39 >>> 1;
    $42 = $40;
   } else {
    $37 = ((($this)) + 4|0);
    $38 = HEAP32[$37>>2]|0;
    $42 = $38;
   }
   $41 = (($42) + 1)|0;
   (_wmemcpy($__new_data$0,$__p$0,$41)|0);
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $43 = (($20) + 1)|0;
    $44 = $43 | 1;
    HEAP32[$this>>2] = $44;
    $45 = ((($this)) + 4|0);
    HEAP32[$45>>2] = $14;
    $46 = ((($this)) + 8|0);
    HEAP32[$46>>2] = $__new_data$0;
    break;
   } else {
    $47 = $14 << 1;
    $48 = $47&255;
    HEAP8[$this>>0] = $48;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0<<2)|0);
 HEAP32[$__p$0>>2] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
 HEAP32[$22>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741806 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = ($__n_add|0)==(0);
 if (!($22)) {
  $23 = (($19) + ($__n_copy<<2)|0);
  (_wmemcpy($23,$__p_new_stuff,$__n_add)|0);
 }
 $24 = (($__old_sz) - ($__n_del))|0;
 $25 = ($24|0)==($__n_copy|0);
 if (!($25)) {
  $26 = (($24) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $27 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $28 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($27,$28,$26)|0);
 }
 $29 = ($__old_cap|0)==(1);
 if (!($29)) {
  __ZdlPv($21);
 }
 $30 = ((($this)) + 8|0);
 HEAP32[$30>>2] = $19;
 $31 = $18 | 1;
 HEAP32[$this>>2] = $31;
 $32 = (($24) + ($__n_add))|0;
 $33 = ((($this)) + 4|0);
 HEAP32[$33>>2] = $32;
 $34 = (($19) + ($32<<2)|0);
 HEAP32[$34>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($25,$26,$24)|0);
 }
 $27 = ($__old_cap|0)==(1);
 if (!($27)) {
  __ZdlPv($21);
 }
 $28 = ((($this)) + 8|0);
 HEAP32[$28>>2] = $19;
 $29 = $18 | 1;
 HEAP32[$this>>2] = $29;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = ((($this)) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = ((($this)) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = ((($this)) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = $__last;
 $15 = (($14) - ($0))|0;
 $16 = ($__first|0)==($__last|0);
 if (!($16)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $17 = HEAP8[$$04>>0]|0;
   HEAP8[$__p$03>>0] = $17;
   $18 = ((($$04)) + 1|0);
   $19 = ((($__p$03)) + 1|0);
   $20 = ($18|0)==($__last|0);
   if ($20) {
    break;
   } else {
    $$04 = $18;$__p$03 = $19;
   }
  }
 }
 $scevgep2 = (($__p$0$ph) + ($15)|0);
 HEAP8[$scevgep2>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = ((($this)) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = ((($this)) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $18 = $17 >>> 2;
 $19 = ($__first|0)==($__last|0);
 if (!($19)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $20 = HEAP32[$$04>>2]|0;
   HEAP32[$__p$03>>2] = $20;
   $21 = ((($$04)) + 4|0);
   $22 = ((($__p$03)) + 4|0);
   $23 = ($21|0)==($__last|0);
   if ($23) {
    break;
   } else {
    $$04 = $21;$__p$03 = $22;
   }
  }
 }
 $scevgep = (($__p$0$ph) + ($18<<2)|0);
 HEAP32[$scevgep>>2] = 0;
 return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $$state = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 $3 = $2&1;
 $$state = $3 | $state;
 $4 = ((($this)) + 16|0);
 HEAP32[$4>>2] = $$state;
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4592);
 __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,0);
 $0 = ((($this)) + 28|0);
 __ZNSt3__16localeD2Ev($0);
 $1 = ((($this)) + 32|0);
 $2 = HEAP32[$1>>2]|0;
 _free($2);
 $3 = ((($this)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 _free($4);
 $5 = ((($this)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 _free($6);
 $7 = ((($this)) + 60|0);
 $8 = HEAP32[$7>>2]|0;
 _free($8);
 return;
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 32|0);
 $3 = ((($this)) + 36|0);
 $4 = ($1|0)==(0);
 if (!($4)) {
  $i$01 = $1;
  while(1) {
   $5 = (($i$01) + -1)|0;
   $6 = HEAP32[$2>>2]|0;
   $7 = (($6) + ($5<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$3>>2]|0;
   $10 = (($9) + ($5<<2)|0);
   $11 = HEAP32[$10>>2]|0;
   FUNCTION_TABLE_viii[$8 & 3]($ev,$this,$11);
   $12 = ($5|0)==(0);
   if ($12) {
    break;
   } else {
    $i$01 = $5;
   }
  }
 }
 return;
}
function __ZNKSt3__18ios_base6getlocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = ((($this)) + 28|0);
 __ZNSt3__16localeC2ERKS0_($0,$1);
 $2 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__18ios_base4initEPv($this,$sb) {
 $this = $this|0;
 $sb = $sb|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 HEAP32[$0>>2] = $sb;
 $not$ = ($sb|0)==(0|0);
 $1 = $not$&1;
 $2 = ((($this)) + 16|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($this)) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($this)) + 4|0);
 HEAP32[$4>>2] = 4098;
 $5 = ((($this)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($this)) + 8|0);
 HEAP32[$6>>2] = 6;
 $7 = ((($this)) + 32|0);
 $8 = ((($this)) + 28|0);
 dest=$7; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev($8);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4528);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4528);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4528);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = ((($this)) + 8|0);
 ;HEAP32[$1>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($agg$result)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($agg$result)) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$02 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = ((($this)) + 16|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$01 = $__s;$__i$02 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $6;
     $7 = HEAP8[$3>>0]|0;
     $storemerge = $7;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 40|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 63]($this)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      $__i$0$lcssa = $__i$02;
      break L1;
     }
     $13 = $11&255;
     $storemerge = $13;
    }
    HEAP8[$$01>>0] = $storemerge;
    $14 = (($__i$02) + 1)|0;
    $15 = ((($$01)) + 1|0);
    $16 = ($14|0)<($__n|0);
    if ($16) {
     $$01 = $15;$__i$02 = $14;
    } else {
     $__i$0$lcssa = $14;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = ((($this)) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 1|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP8[$6>>0]|0;
  $9 = $8&255;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0;
 var $__i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = ((($this)) + 28|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$02 = $__s;$__i$01 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = HEAP8[$$02>>0]|0;
     $7 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $7;
     HEAP8[$3>>0] = $6;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 52|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = HEAP8[$$02>>0]|0;
     $12 = $11&255;
     $13 = (FUNCTION_TABLE_iii[$10 & 15]($this,$12)|0);
     $14 = ($13|0)==(-1);
     if ($14) {
      $__i$0$lcssa = $__i$01;
      break L1;
     }
    }
    $15 = ((($$02)) + 1|0);
    $16 = (($__i$01) + 1)|0;
    $17 = ($16|0)<($__n|0);
    if ($17) {
     $$02 = $15;$__i$01 = $16;
    } else {
     $__i$0$lcssa = $16;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$this);
  $6 = HEAP8[$__s>>0]|0;
  $7 = ($6<<24>>24)==(0);
  if (!($7)) {
   $8 = HEAP32[$this>>2]|0;
   $9 = ((($8)) + -12|0);
   $10 = HEAP32[$9>>2]|0;
   $$sum1 = (($10) + 24)|0;
   $11 = (($this) + ($$sum1)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$12>>2]|0;
   $14 = ((($13)) + 24|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = (FUNCTION_TABLE_ii[$15 & 63]($12)|0);
   $17 = ($16|0)==(-1);
   if ($17) {
    $18 = HEAP32[$this>>2]|0;
    $19 = ((($18)) + -12|0);
    $20 = HEAP32[$19>>2]|0;
    $$sum2 = (($20) + 16)|0;
    $21 = (($this) + ($$sum2)|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = $22 | 1;
    HEAP32[$21>>2] = $23;
   }
  }
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 }
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $$sum = (($3) + 16)|0;
 $4 = (($__os) + ($$sum)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$sum1 = (($3) + 72)|0;
  $7 = (($__os) + ($$sum1)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  $$sum1 = (($4) + 16)|0;
  $8 = (($1) + ($$sum1)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0);
  if ($10) {
   $$sum2 = (($4) + 4)|0;
   $11 = (($1) + ($$sum2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = $12 & 8192;
   $14 = ($13|0)==(0);
   if (!($14)) {
    $15 = (__ZSt18uncaught_exceptionv()|0);
    if (!($15)) {
     $16 = HEAP32[$0>>2]|0;
     $17 = HEAP32[$16>>2]|0;
     $18 = ((($17)) + -12|0);
     $19 = HEAP32[$18>>2]|0;
     $$sum3 = (($19) + 24)|0;
     $20 = (($16) + ($$sum3)|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($22)) + 24|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_ii[$24 & 63]($21)|0);
     $26 = ($25|0)==(-1);
     if ($26) {
      $27 = HEAP32[$0>>2]|0;
      $28 = HEAP32[$27>>2]|0;
      $29 = ((($28)) + -12|0);
      $30 = HEAP32[$29>>2]|0;
      $$sum4 = (($30) + 16)|0;
      $31 = (($27) + ($$sum4)|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = $32 | 1;
      HEAP32[$31>>2] = $33;
     }
    }
   }
  }
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $$sum = 0, $$sum$i = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $__s = sp + 8|0;
 $1 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$this);
 $2 = HEAP8[$__s>>0]|0;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = HEAP32[$this>>2]|0;
  $5 = ((($4)) + -12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($this) + ($6)|0);
  $8 = (__ZNKSt3__18ios_base6getlocEv($7)|0);
  HEAP32[$1>>2] = $8;
  $9 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,5304)|0);
  __ZNSt3__16localeD2Ev($1);
  $10 = HEAP32[$this>>2]|0;
  $11 = ((($10)) + -12|0);
  $12 = HEAP32[$11>>2]|0;
  $$sum$i = (($12) + 24)|0;
  $13 = (($this) + ($$sum$i)|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($this) + ($12)|0);
  $$sum = (($12) + 76)|0;
  $16 = (($this) + ($$sum)|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)==(-1);
  if ($18) {
   $19 = (__ZNKSt3__18ios_base6getlocEv($15)|0);
   HEAP32[$$byval_copy>>2] = $19;
   $20 = (__ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy,6168)|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($21)) + 28|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (FUNCTION_TABLE_iii[$23 & 15]($20,32)|0);
   __ZNSt3__16localeD2Ev($$byval_copy);
   $25 = $24 << 24 >> 24;
   HEAP32[$16>>2] = $25;
   $27 = $25;
  } else {
   $27 = $17;
  }
  $26 = $27&255;
  $28 = HEAP32[$9>>2]|0;
  $29 = ((($28)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  HEAP32[$0>>2] = $14;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $31 = (FUNCTION_TABLE_iiiiii[$30 & 31]($9,$$byval_copy,$15,$26,$__n)|0);
  $32 = ($31|0)==(0|0);
  if ($32) {
   $33 = HEAP32[$this>>2]|0;
   $34 = ((($33)) + -12|0);
   $35 = HEAP32[$34>>2]|0;
   $$sum4 = (($35) + 16)|0;
   $36 = (($this) + ($$sum4)|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = $37 | 5;
   HEAP32[$36>>2] = $38;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 $1 = ((($0)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($1);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 12)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 return;
}
function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP8[$$027>>0]|0;
    $3 = HEAP8[$$018>>0]|0;
    $4 = ($2<<24>>24)<($3<<24>>24);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3<<24>>24)<($2<<24>>24);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 1|0);
    $7 = ((($$018)) + 1|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP8[$__p$01>>0]|0;
   $3 = $2 << 24 >> 24;
   $4 = (($3) + ($1))|0;
   $5 = $4 & -268435456;
   $6 = $5 >>> 24;
   $7 = $6 | $5;
   $8 = $7 ^ $4;
   $9 = ((($__p$01)) + 1|0);
   $10 = ($9|0)==($__hi|0);
   if ($10) {
    $__h$0$lcssa = $8;
    break;
   } else {
    $__h$02 = $8;$__p$01 = $9;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP32[$$027>>2]|0;
    $3 = HEAP32[$$018>>2]|0;
    $4 = ($2|0)<($3|0);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3|0)<($2|0);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 4|0);
    $7 = ((($$018)) + 4|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP32[$__p$01>>2]|0;
   $3 = (($2) + ($1))|0;
   $4 = $3 & -268435456;
   $5 = $4 >>> 24;
   $6 = $5 | $4;
   $7 = $6 ^ $3;
   $8 = ((($__p$01)) + 4|0);
   $9 = ($8|0)==($__hi|0);
   if ($9) {
    $__h$0$lcssa = $7;
    break;
   } else {
    $__h$02 = $7;$__p$01 = $8;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy2 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 63]($this,$$byval_copy,$$byval_copy2,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   if ((($15|0) == 0)) {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break;
   } else if ((($15|0) == 1)) {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break;
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   $17 = (__ZNKSt3__16locale9use_facetERNS0_2idE($2,6168)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
   $18 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$3>>2] = $18;
   $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($3,6312)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($18)|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   FUNCTION_TABLE_vii[$22 & 63]($__names,$19);
   $23 = ((($__names)) + 12|0);
   $24 = HEAP32[$19>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_vii[$26 & 63]($23,$19);
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$4>>2] = $27;
   $28 = ((($__names)) + 24|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy2,$__names,$28,$17,$__err,1)|0);
   $30 = ($29|0)==($__names|0);
   $31 = $30&1;
   HEAP8[$__v>>0] = $31;
   $32 = HEAP32[$__b>>2]|0;
   $33 = ((($__names)) + 12|0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
   $$sroa$01$0 = $32;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $phitmp$i = 0, $phitmp$i14 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 (FUNCTION_TABLE_iiiii[$7 & 7]($4,5136,(5162),$__atoms)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__buf>>2] = 0;
 $8 = ((($__buf)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__buf)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = HEAP8[$__buf>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = 10;
 } else {
  $13 = HEAP32[$__buf>>2]|0;
  $14 = $13 & -2;
  $phitmp$i = (($14) + -1)|0;
  $15 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$15,0);
 $16 = HEAP8[$__buf>>0]|0;
 $17 = $16 & 1;
 $18 = ($17<<24>>24)==(0);
 $19 = ((($__buf)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($__buf)) + 1|0);
 $22 = $18 ? $21 : $20;
 HEAP32[$__a_end>>2] = $22;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $23 = ((($__buf)) + 4|0);
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i5 = $$pre;$__a$0 = $22;
 L4: while(1) {
  $24 = ($$pre$i$i$i5|0)==(0|0);
  if ($24) {
   $$pre$i$i$i = 0;
  } else {
   $25 = ((($$pre$i$i$i5)) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($$pre$i$i$i5)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$pre$i$i$i5>>2]|0;
    $31 = ((($30)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($$pre$i$i$i5)|0);
    $34 = ($33|0)==(-1);
    if ($34) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i5;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i5;
   }
  }
  $35 = ($$pre$i$i$i|0)==(0|0);
  $36 = HEAP32[$__e>>2]|0;
  $37 = ($36|0)==(0|0);
  do {
   if ($37) {
    label = 13;
   } else {
    $38 = ((($36)) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($36)) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($39|0)==($41|0);
    if (!($42)) {
     if ($35) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
    $43 = HEAP32[$36>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
    $47 = ($46|0)==(-1);
    if ($47) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($35) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($35) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $48 = HEAP32[$__a_end>>2]|0;
  $49 = HEAP8[$__buf>>0]|0;
  $50 = $49 & 1;
  $51 = ($50<<24>>24)==(0);
  $52 = HEAP32[$23>>2]|0;
  $53 = $49&255;
  $54 = $53 >>> 1;
  $55 = $51 ? $54 : $52;
  $56 = (($__a$0) + ($55)|0);
  $57 = ($48|0)==($56|0);
  if ($57) {
   $58 = $55 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = 10;
   } else {
    $62 = HEAP32[$__buf>>2]|0;
    $63 = $62 & -2;
    $phitmp$i14 = (($63) + -1)|0;
    $64 = $phitmp$i14;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$64,0);
   $65 = HEAP8[$__buf>>0]|0;
   $66 = $65 & 1;
   $67 = ($66<<24>>24)==(0);
   $68 = HEAP32[$19>>2]|0;
   $69 = $67 ? $21 : $68;
   $70 = (($69) + ($55)|0);
   HEAP32[$__a_end>>2] = $70;
   $__a$1 = $69;
  } else {
   $__a$1 = $__a$0;
  }
  $71 = ((($$pre$i$i$i)) + 12|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = ((($$pre$i$i$i)) + 16|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = ($72|0)==($74|0);
  if ($75) {
   $76 = HEAP32[$$pre$i$i$i>>2]|0;
   $77 = ((($76)) + 36|0);
   $78 = HEAP32[$77>>2]|0;
   $79 = (FUNCTION_TABLE_ii[$78 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $79;
  } else {
   $80 = HEAP8[$72>>0]|0;
   $81 = $80&255;
   $$0$i$i = $81;
  }
  $82 = $$0$i$i&255;
  $83 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($82,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
  $84 = ($83|0)==(0);
  if (!($84)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $85 = HEAP32[$71>>2]|0;
  $86 = HEAP32[$73>>2]|0;
  $87 = ($85|0)==($86|0);
  if ($87) {
   $88 = HEAP32[$$pre$i$i$i>>2]|0;
   $89 = ((($88)) + 40|0);
   $90 = HEAP32[$89>>2]|0;
   (FUNCTION_TABLE_ii[$90 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $91 = ((($85)) + 1|0);
   HEAP32[$71>>2] = $91;
   $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $92 = HEAP32[$__a_end>>2]|0;
 $93 = $92;
 $94 = $__a$2;
 $95 = (($93) - ($94))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$95,0);
 $96 = HEAP8[$__buf>>0]|0;
 $97 = $96 & 1;
 $98 = ($97<<24>>24)==(0);
 $99 = HEAP32[$19>>2]|0;
 $100 = $98 ? $21 : $99;
 $101 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $102 = (__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($100,$101,9128,$vararg_buffer)|0);
 $103 = ($102|0)==(1);
 if (!($103)) {
  HEAP32[$__err>>2] = 4;
 }
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 37;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 37;
     break;
    }
   }
   if (!($116)) {
    label = 38;
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($116) {
   label = 38;
  }
 }
 if ((label|0) == 38) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = ((($__atoms)) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 26|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP8[$$0$i2>>0]|0;
    $29 = ($28<<24>>24)==($__ct<<24>>24);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 1|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = ($34|0)>(23);
   if ($35) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $36 = ($34|0)<($__base|0);
     if (!($36)) {
      $$0 = -1;
      break;
     }
    } else if ((($__base|0) == 16)) {
     $37 = ($34|0)<(22);
     if (!($37)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $38 = $0;
      $39 = $__a;
      $40 = (($38) - ($39))|0;
      $41 = ($40|0)<(3);
      if (!($41)) {
       $$0 = -1;
       break;
      }
      $42 = ((($0)) + -1|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(48);
      if (!($44)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $45 = (5136 + ($34)|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $47;
      HEAP8[$0>>0] = $46;
      $$0 = 0;
      break;
     }
    }
    $48 = (5136 + ($34)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $50;
    HEAP8[$0>>0] = $49;
    $51 = HEAP32[$__dc>>2]|0;
    $52 = (($51) + 1)|0;
    HEAP32[$__dc>>2] = $52;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[9136>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((9136|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_newlocale(2147483647,(9144|0),(0|0))|0);
   HEAP32[9152>>2] = $4;
   ___cxa_guard_release((9136|0));
  }
 }
 $5 = HEAP32[9152>>2]|0;
 return ($5|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy2 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 63]($this,$$byval_copy,$$byval_copy2,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   if ((($15|0) == 0)) {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break;
   } else if ((($15|0) == 1)) {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break;
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   $17 = (__ZNKSt3__16locale9use_facetERNS0_2idE($2,6160)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
   $18 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$3>>2] = $18;
   $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($3,6320)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($18)|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   FUNCTION_TABLE_vii[$22 & 63]($__names,$19);
   $23 = ((($__names)) + 12|0);
   $24 = HEAP32[$19>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_vii[$26 & 63]($23,$19);
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$4>>2] = $27;
   $28 = ((($__names)) + 24|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy2,$__names,$28,$17,$__err,1)|0);
   $30 = ($29|0)==($__names|0);
   $31 = $30&1;
   HEAP8[$__v>>0] = $31;
   $32 = HEAP32[$__b>>2]|0;
   $33 = ((($__names)) + 12|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($33);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
   $$sroa$01$0 = $32;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $phitmp$i = 0, $phitmp$i18 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0;
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 (FUNCTION_TABLE_iiiii[$7 & 7]($4,5136,(5162),$__atoms)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__buf>>2] = 0;
 $8 = ((($__buf)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__buf)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = HEAP8[$__buf>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = 10;
 } else {
  $13 = HEAP32[$__buf>>2]|0;
  $14 = $13 & -2;
  $phitmp$i = (($14) + -1)|0;
  $15 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$15,0);
 $16 = HEAP8[$__buf>>0]|0;
 $17 = $16 & 1;
 $18 = ($17<<24>>24)==(0);
 $19 = ((($__buf)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($__buf)) + 1|0);
 $22 = $18 ? $21 : $20;
 HEAP32[$__a_end>>2] = $22;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $23 = ((($__buf)) + 4|0);
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i6 = $$pre;$__a$0 = $22;
 L4: while(1) {
  $24 = ($$pre$i$i$i6|0)==(0|0);
  if ($24) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $25 = ((($$pre$i$i$i6)) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($$pre$i$i$i6)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$pre$i$i$i6>>2]|0;
    $31 = ((($30)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($$pre$i$i$i6)|0);
    $$0$i$i$i$i4 = $33;
   } else {
    $34 = HEAP32[$26>>2]|0;
    $$0$i$i$i$i4 = $34;
   }
   $35 = ($$0$i$i$i$i4|0)==(-1);
   if ($35) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i6;$130 = 0;
   }
  }
  $36 = HEAP32[$__e>>2]|0;
  $37 = ($36|0)==(0|0);
  do {
   if ($37) {
    label = 16;
   } else {
    $38 = ((($36)) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($36)) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($39|0)==($41|0);
    if ($42) {
     $43 = HEAP32[$36>>2]|0;
     $44 = ((($43)) + 36|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
     $$0$i$i1$i$i10 = $46;
    } else {
     $47 = HEAP32[$39>>2]|0;
     $$0$i$i1$i$i10 = $47;
    }
    $48 = ($$0$i$i1$i$i10|0)==(-1);
    if ($48) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $49 = HEAP32[$__a_end>>2]|0;
  $50 = HEAP8[$__buf>>0]|0;
  $51 = $50 & 1;
  $52 = ($51<<24>>24)==(0);
  $53 = HEAP32[$23>>2]|0;
  $54 = $50&255;
  $55 = $54 >>> 1;
  $56 = $52 ? $55 : $53;
  $57 = (($__a$0) + ($56)|0);
  $58 = ($49|0)==($57|0);
  if ($58) {
   $59 = $56 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   if ($62) {
    $65 = 10;
   } else {
    $63 = HEAP32[$__buf>>2]|0;
    $64 = $63 & -2;
    $phitmp$i18 = (($64) + -1)|0;
    $65 = $phitmp$i18;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$65,0);
   $66 = HEAP8[$__buf>>0]|0;
   $67 = $66 & 1;
   $68 = ($67<<24>>24)==(0);
   $69 = HEAP32[$19>>2]|0;
   $70 = $68 ? $21 : $69;
   $71 = (($70) + ($56)|0);
   HEAP32[$__a_end>>2] = $71;
   $__a$1 = $70;
  } else {
   $__a$1 = $__a$0;
  }
  $72 = ((($$pre$i$i$i)) + 12|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ((($$pre$i$i$i)) + 16|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = ($73|0)==($75|0);
  if ($76) {
   $77 = HEAP32[$$pre$i$i$i>>2]|0;
   $78 = ((($77)) + 36|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = (FUNCTION_TABLE_ii[$79 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $80;
  } else {
   $81 = HEAP32[$73>>2]|0;
   $$0$i$i = $81;
  }
  $82 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
  $83 = ($82|0)==(0);
  if (!($83)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $84 = HEAP32[$72>>2]|0;
  $85 = HEAP32[$74>>2]|0;
  $86 = ($84|0)==($85|0);
  if ($86) {
   $87 = HEAP32[$$pre$i$i$i>>2]|0;
   $88 = ((($87)) + 40|0);
   $89 = HEAP32[$88>>2]|0;
   (FUNCTION_TABLE_ii[$89 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $90 = ((($84)) + 4|0);
   HEAP32[$72>>2] = $90;
   $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $91 = HEAP32[$__a_end>>2]|0;
 $92 = $91;
 $93 = $__a$2;
 $94 = (($92) - ($93))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$94,0);
 $95 = HEAP8[$__buf>>0]|0;
 $96 = $95 & 1;
 $97 = ($96<<24>>24)==(0);
 $98 = HEAP32[$19>>2]|0;
 $99 = $97 ? $21 : $98;
 $100 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $101 = (__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($99,$100,9128,$vararg_buffer)|0);
 $102 = ($101|0)==(1);
 if (!($102)) {
  HEAP32[$__err>>2] = 4;
 }
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 43;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 43;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 45;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 43) {
  if ($132) {
   label = 45;
  }
 }
 if ((label|0) == 45) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = ((($__atoms)) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct|0)==($__thousands_sep|0);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 104|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP32[$$0$i2>>2]|0;
    $29 = ($28|0)==($__ct|0);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 4|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = $34 >> 2;
   $36 = ($34|0)>(92);
   if ($36) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $37 = ($35|0)<($__base|0);
     if (!($37)) {
      $$0 = -1;
      break;
     }
    } else if ((($__base|0) == 16)) {
     $38 = ($34|0)<(88);
     if (!($38)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $39 = $0;
      $40 = $__a;
      $41 = (($39) - ($40))|0;
      $42 = ($41|0)<(3);
      if (!($42)) {
       $$0 = -1;
       break;
      }
      $43 = ((($0)) + -1|0);
      $44 = HEAP8[$43>>0]|0;
      $45 = ($44<<24>>24)==(48);
      if (!($45)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $46 = (5136 + ($35)|0);
      $47 = HEAP8[$46>>0]|0;
      $48 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $48;
      HEAP8[$0>>0] = $47;
      $$0 = 0;
      break;
     }
    }
    $49 = (5136 + ($35)|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $51;
    HEAP8[$0>>0] = $50;
    $52 = HEAP32[$__dc>>2]|0;
    $53 = (($52) + 1)|0;
    HEAP32[$__dc>>2] = $53;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5136,(5162),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6312)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP8[$__thousands_sep>>0] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5136,(5168),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6312)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP8[$__decimal_point>>0] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 63]($5)|0);
 HEAP8[$__thousands_sep>>0] = $13;
 $14 = HEAP32[$5>>2]|0;
 $15 = ((($14)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 FUNCTION_TABLE_vii[$16 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 32|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP8[$$0$i3>>0]|0;
    $42 = ($41<<24>>24)==($__ct<<24>>24);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 1|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = ($47|0)>(31);
   if ($48) {
    $$0 = -1;
   } else {
    $49 = (5136 + ($47)|0);
    $50 = HEAP8[$49>>0]|0;
    if ((($47|0) == 23) | (($47|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
     $62 = HEAP32[$__a_end>>2]|0;
     $63 = ((($62)) + 1|0);
     HEAP32[$__a_end>>2] = $63;
     HEAP8[$62>>0] = $50;
     $$0 = 0;
     break;
    } else if ((($47|0) == 24) | (($47|0) == 25)) {
     $51 = HEAP32[$__a_end>>2]|0;
     $52 = ($51|0)==($__a|0);
     if (!($52)) {
      $53 = ((($51)) + -1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54&255;
      $56 = $55 & 95;
      $57 = HEAP8[$__exp>>0]|0;
      $58 = $57&255;
      $59 = $58 & 127;
      $60 = ($56|0)==($59|0);
      if (!($60)) {
       $$0 = -1;
       break;
      }
     }
     $61 = ((($51)) + 1|0);
     HEAP32[$__a_end>>2] = $61;
     HEAP8[$51>>0] = $50;
     $$0 = 0;
     break;
    } else {
     $64 = $50&255;
     $65 = $64 & 95;
     $66 = HEAP8[$__exp>>0]|0;
     $67 = $66 << 24 >> 24;
     $68 = ($65|0)==($67|0);
     if ($68) {
      $69 = $65 | 128;
      $70 = $69&255;
      HEAP8[$__exp>>0] = $70;
      $71 = HEAP8[$__in_units>>0]|0;
      $72 = ($71<<24>>24)==(0);
      if (!($72)) {
       HEAP8[$__in_units>>0] = 0;
       $73 = HEAP8[$__grouping>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       $76 = ((($__grouping)) + 4|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = $73&255;
       $79 = $78 >>> 1;
       $80 = $75 ? $79 : $77;
       $81 = ($80|0)==(0);
       if (!($81)) {
        $82 = HEAP32[$__g_end>>2]|0;
        $83 = $82;
        $84 = $__g;
        $85 = (($83) - ($84))|0;
        $86 = ($85|0)<(160);
        if ($86) {
         $87 = HEAP32[$__dc>>2]|0;
         $88 = ((($82)) + 4|0);
         HEAP32[$__g_end>>2] = $88;
         HEAP32[$82>>2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end>>2]|0;
     $90 = ((($89)) + 1|0);
     HEAP32[$__a_end>>2] = $90;
     HEAP8[$89>>0] = $50;
     $91 = ($47|0)>(21);
     if ($91) {
      $$0 = 0;
      break;
     }
     $92 = HEAP32[$__dc>>2]|0;
     $93 = (($92) + 1)|0;
     HEAP32[$__dc>>2] = $93;
     $$0 = 0;
     break;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5136,(5162),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6320)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP32[$__thousands_sep>>2] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5136,(5168),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6320)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP32[$__decimal_point>>2] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 63]($5)|0);
 HEAP32[$__thousands_sep>>2] = $13;
 $14 = HEAP32[$5>>2]|0;
 $15 = ((($14)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 FUNCTION_TABLE_vii[$16 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct|0)==($__thousands_sep|0);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 128|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP32[$$0$i3>>2]|0;
    $42 = ($41|0)==($__ct|0);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 4|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = $47 >> 2;
   $49 = ($47|0)>(124);
   if ($49) {
    $$0 = -1;
   } else {
    $50 = (5136 + ($48)|0);
    $51 = HEAP8[$50>>0]|0;
    if ((($48|0) == 24) | (($48|0) == 25)) {
     $52 = HEAP32[$__a_end>>2]|0;
     $53 = ($52|0)==($__a|0);
     if (!($53)) {
      $54 = ((($52)) + -1|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55&255;
      $57 = $56 & 95;
      $58 = HEAP8[$__exp>>0]|0;
      $59 = $58&255;
      $60 = $59 & 127;
      $61 = ($57|0)==($60|0);
      if (!($61)) {
       $$0 = -1;
       break;
      }
     }
     $62 = ((($52)) + 1|0);
     HEAP32[$__a_end>>2] = $62;
     HEAP8[$52>>0] = $51;
     $$0 = 0;
     break;
    } else if ((($48|0) == 23) | (($48|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
    } else {
     $63 = $51&255;
     $64 = $63 & 95;
     $65 = HEAP8[$__exp>>0]|0;
     $66 = $65 << 24 >> 24;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = $64 | 128;
      $69 = $68&255;
      HEAP8[$__exp>>0] = $69;
      $70 = HEAP8[$__in_units>>0]|0;
      $71 = ($70<<24>>24)==(0);
      if (!($71)) {
       HEAP8[$__in_units>>0] = 0;
       $72 = HEAP8[$__grouping>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       $75 = ((($__grouping)) + 4|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = $72&255;
       $78 = $77 >>> 1;
       $79 = $74 ? $78 : $76;
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = HEAP32[$__g_end>>2]|0;
        $82 = $81;
        $83 = $__g;
        $84 = (($82) - ($83))|0;
        $85 = ($84|0)<(160);
        if ($85) {
         $86 = HEAP32[$__dc>>2]|0;
         $87 = ((($81)) + 4|0);
         HEAP32[$__g_end>>2] = $87;
         HEAP32[$81>>2] = $86;
        }
       }
      }
     }
    }
    $88 = HEAP32[$__a_end>>2]|0;
    $89 = ((($88)) + 1|0);
    HEAP32[$__a_end>>2] = $89;
    HEAP8[$88>>0] = $51;
    $90 = ($47|0)>(84);
    if ($90) {
     $$0 = 0;
    } else {
     $91 = HEAP32[$__dc>>2]|0;
     $92 = (($91) + 1)|0;
     HEAP32[$__dc>>2] = $92;
     $$0 = 0;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi5Z2D = 0, $$pre1 = 0, $$pre1$val = 0, $$pre1$val6 = 0, $$pre4 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$this>>2]|0;
  $7 = ((($6)) + 24|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$__s>>2]|0;
  HEAP32[$0>>2] = $9;
  $10 = $__v&1;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $11 = (FUNCTION_TABLE_iiiiii[$8 & 31]($this,$$byval_copy,$__iob,$__fl,$10)|0);
  $$sroa$0$0 = $11;
 } else {
  $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
  HEAP32[$1>>2] = $12;
  $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6312)|0);
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $14 = HEAP32[$13>>2]|0;
  if ($__v) {
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_vii[$16 & 63]($__nm,$13);
  } else {
   $17 = ((($14)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   FUNCTION_TABLE_vii[$18 & 63]($__nm,$13);
  }
  $19 = HEAP8[$__nm>>0]|0;
  $20 = $19 & 1;
  $21 = ($20<<24>>24)==(0);
  $22 = ((($__nm)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $$pre4 = ((($__nm)) + 1|0);
  $24 = ((($__nm)) + 1|0);
  $$pre1 = ((($__nm)) + 8|0);
  $$pre$phi5Z2D = $21 ? $24 : $$pre4;
  $$ph = $21 ? $24 : $23;
  $25 = ((($__nm)) + 4|0);
  $26 = $19 & 1;
  $27 = ($26<<24>>24)==(0);
  $$pre1$val6 = HEAP32[$$pre1>>2]|0;
  $28 = HEAP32[$25>>2]|0;
  $29 = $19&255;
  $30 = $29 >>> 1;
  $31 = $27 ? $$pre$phi5Z2D : $$pre1$val6;
  $32 = $27 ? $30 : $28;
  $33 = (($31) + ($32)|0);
  $34 = ($$ph|0)==($33|0);
  if (!($34)) {
   $36 = $$ph;
   while(1) {
    $35 = HEAP8[$36>>0]|0;
    $37 = HEAP32[$__s>>2]|0;
    $38 = ($37|0)==(0|0);
    do {
     if (!($38)) {
      $39 = ((($37)) + 24|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ((($37)) + 28|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = ($40|0)==($42|0);
      if (!($43)) {
       $44 = ((($40)) + 1|0);
       HEAP32[$39>>2] = $44;
       HEAP8[$40>>0] = $35;
       break;
      }
      $45 = HEAP32[$37>>2]|0;
      $46 = ((($45)) + 52|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = $35&255;
      $49 = (FUNCTION_TABLE_iii[$47 & 15]($37,$48)|0);
      $50 = ($49|0)==(-1);
      if ($50) {
       HEAP32[$__s>>2] = 0;
      }
     }
    } while(0);
    $51 = ((($36)) + 1|0);
    $$pre = HEAP8[$__nm>>0]|0;
    $52 = $$pre & 1;
    $53 = ($52<<24>>24)==(0);
    $$pre1$val = HEAP32[$$pre1>>2]|0;
    $54 = HEAP32[$25>>2]|0;
    $55 = $$pre&255;
    $56 = $55 >>> 1;
    $57 = $53 ? $$pre$phi5Z2D : $$pre1$val;
    $58 = $53 ? $56 : $54;
    $59 = (($57) + ($58)|0);
    $60 = ($51|0)==($59|0);
    if ($60) {
     break;
    } else {
     $36 = $51;
    }
   }
  }
  $61 = HEAP32[$__s>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
  $$sroa$0$0 = $61;
 }
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy = sp;
 $__fmt = sp + 56|0;
 $__nar = sp + 44|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9160>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9160+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9160+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9160+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9160+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9160+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9168,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1$lcssa = 0, $$1$ph = 0, $$13 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1$ph = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1$ph = $5;
 }
 $6 = HEAP8[$__len>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $$1$lcssa = $$1$ph;
 } else {
  $$012 = $__len;$$13 = $$1$ph;$10 = $6;
  while(1) {
   $8 = ((($$012)) + 1|0);
   $9 = ((($$13)) + 1|0);
   HEAP8[$$13>>0] = $10;
   $11 = HEAP8[$8>>0]|0;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $$1$lcssa = $9;
    break;
   } else {
    $$012 = $8;$$13 = $9;$10 = $11;
   }
  }
 }
 $13 = $__flags & 74;
 do {
  if ((($13|0) == 8)) {
   $14 = $__flags & 16384;
   $15 = ($14|0)==(0);
   if ($15) {
    HEAP8[$$1$lcssa>>0] = 120;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 88;
    break;
   }
  } else if ((($13|0) == 64)) {
   HEAP8[$$1$lcssa>>0] = 111;
  } else {
   if ($__signd) {
    HEAP8[$$1$lcssa>>0] = 100;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 117;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb,$__ne,$__iob) {
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__iob = $__iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 176;
 do {
  if ((($2|0) == 16)) {
   $3 = HEAP8[$__nb>>0]|0;
   if ((($3<<24>>24) == 43) | (($3<<24>>24) == 45)) {
    $4 = ((($__nb)) + 1|0);
    $$0 = $4;
    break;
   }
   $5 = $__ne;
   $6 = $__nb;
   $7 = (($5) - ($6))|0;
   $8 = ($7|0)>(1);
   $9 = ($3<<24>>24)==(48);
   $or$cond = $8 & $9;
   if ($or$cond) {
    $10 = ((($__nb)) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    if ((($11<<24>>24) == 88) | (($11<<24>>24) == 120)) {
     $12 = ((($__nb)) + 2|0);
     $$0 = $12;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else if ((($2|0) == 32)) {
   $$0 = $__ne;
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $__nb;
 }
 return ($$0|0);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i111 = 0, $$01$i$i7 = 0, $$__dg$0 = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__dc$08 = 0, $__dc$1 = 0, $__dg$09 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$010 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6312)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $15 = ((($14)) + 32|0);
  $16 = HEAP32[$15>>2]|0;
  (FUNCTION_TABLE_iiiii[$16 & 7]($0,$__nb,$__ne,$__ob)|0);
  $17 = $__ne;
  $18 = $__nb;
  $19 = (($17) - ($18))|0;
  $20 = (($__ob) + ($19)|0);
  HEAP32[$__oe>>2] = $20;
  $$pre$phiZ2D = $18;$117 = $20;
 } else {
  HEAP32[$__oe>>2] = $__ob;
  $21 = HEAP8[$__nb>>0]|0;
  if ((($21<<24>>24) == 43) | (($21<<24>>24) == 45)) {
   $22 = ((($__nb)) + 1|0);
   $23 = HEAP32[$0>>2]|0;
   $24 = ((($23)) + 28|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 15]($0,$21)|0);
   $27 = HEAP32[$__oe>>2]|0;
   $28 = ((($27)) + 1|0);
   HEAP32[$__oe>>2] = $28;
   HEAP8[$27>>0] = $26;
   $__nf$0 = $22;
  } else {
   $__nf$0 = $__nb;
  }
  $29 = $__ne;
  $30 = $__nf$0;
  $31 = (($29) - ($30))|0;
  $32 = ($31|0)>(1);
  if ($32) {
   $33 = HEAP8[$__nf$0>>0]|0;
   $34 = ($33<<24>>24)==(48);
   if ($34) {
    $35 = ((($__nf$0)) + 1|0);
    $36 = HEAP8[$35>>0]|0;
    if ((($36<<24>>24) == 88) | (($36<<24>>24) == 120)) {
     $37 = HEAP32[$0>>2]|0;
     $38 = ((($37)) + 28|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_iii[$39 & 15]($0,48)|0);
     $41 = HEAP32[$__oe>>2]|0;
     $42 = ((($41)) + 1|0);
     HEAP32[$__oe>>2] = $42;
     HEAP8[$41>>0] = $40;
     $43 = ((($__nf$0)) + 2|0);
     $44 = HEAP8[$35>>0]|0;
     $45 = HEAP32[$0>>2]|0;
     $46 = ((($45)) + 28|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = (FUNCTION_TABLE_iii[$47 & 15]($0,$44)|0);
     $49 = HEAP32[$__oe>>2]|0;
     $50 = ((($49)) + 1|0);
     HEAP32[$__oe>>2] = $50;
     HEAP8[$49>>0] = $48;
     $__nf$1 = $43;
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
  } else {
   $__nf$1 = $__nf$0;
  }
  $51 = ($__nf$1|0)==($__ne|0);
  if (!($51)) {
   $52 = ((($__ne)) + -1|0);
   $53 = ($__nf$1>>>0)<($52>>>0);
   if ($53) {
    $$01$i$i111 = $__nf$1;$56 = $52;
    while(1) {
     $54 = HEAP8[$$01$i$i111>>0]|0;
     $55 = HEAP8[$56>>0]|0;
     HEAP8[$$01$i$i111>>0] = $55;
     HEAP8[$56>>0] = $54;
     $57 = ((($$01$i$i111)) + 1|0);
     $58 = ((($56)) + -1|0);
     $59 = ($57>>>0)<($58>>>0);
     if ($59) {
      $$01$i$i111 = $57;$56 = $58;
     } else {
      break;
     }
    }
   }
  }
  $60 = HEAP32[$1>>2]|0;
  $61 = ((($60)) + 16|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = (FUNCTION_TABLE_ii[$62 & 63]($1)|0);
  $64 = ((($__grouping)) + 8|0);
  $65 = ((($__grouping)) + 1|0);
  $66 = ($__nf$1>>>0)<($__ne>>>0);
  if ($66) {
   $__dc$08 = 0;$__dg$09 = 0;$__p$010 = $__nf$1;
   while(1) {
    $67 = HEAP8[$__grouping>>0]|0;
    $68 = $67 & 1;
    $69 = ($68<<24>>24)==(0);
    $70 = HEAP32[$64>>2]|0;
    $71 = $69 ? $65 : $70;
    $72 = (($71) + ($__dg$09)|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = ($73<<24>>24)!=(0);
    $75 = $73 << 24 >> 24;
    $76 = ($__dc$08|0)==($75|0);
    $or$cond = $74 & $76;
    if ($or$cond) {
     $77 = HEAP32[$__oe>>2]|0;
     $78 = ((($77)) + 1|0);
     HEAP32[$__oe>>2] = $78;
     HEAP8[$77>>0] = $63;
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$8>>2]|0;
     $83 = $79&255;
     $84 = $83 >>> 1;
     $85 = $81 ? $84 : $82;
     $86 = (($85) + -1)|0;
     $87 = ($__dg$09>>>0)<($86>>>0);
     $88 = $87&1;
     $$__dg$0 = (($88) + ($__dg$09))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$08;$__dg$1 = $__dg$09;
    }
    $89 = HEAP8[$__p$010>>0]|0;
    $90 = HEAP32[$0>>2]|0;
    $91 = ((($90)) + 28|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (FUNCTION_TABLE_iii[$92 & 15]($0,$89)|0);
    $94 = HEAP32[$__oe>>2]|0;
    $95 = ((($94)) + 1|0);
    HEAP32[$__oe>>2] = $95;
    HEAP8[$94>>0] = $93;
    $96 = (($__dc$1) + 1)|0;
    $97 = ((($__p$010)) + 1|0);
    $98 = ($97>>>0)<($__ne>>>0);
    if ($98) {
     $__dc$08 = $96;$__dg$09 = $__dg$1;$__p$010 = $97;
    } else {
     break;
    }
   }
  }
  $99 = $__nf$1;
  $100 = $__nb;
  $101 = (($99) - ($100))|0;
  $102 = (($__ob) + ($101)|0);
  $103 = HEAP32[$__oe>>2]|0;
  $104 = ($102|0)==($103|0);
  if ($104) {
   $$pre$phiZ2D = $100;$117 = $102;
  } else {
   $105 = ((($103)) + -1|0);
   $106 = ($102>>>0)<($105>>>0);
   if ($106) {
    $$01$i$i7 = $102;$109 = $105;
    while(1) {
     $107 = HEAP8[$$01$i$i7>>0]|0;
     $108 = HEAP8[$109>>0]|0;
     HEAP8[$$01$i$i7>>0] = $108;
     HEAP8[$109>>0] = $107;
     $110 = ((($$01$i$i7)) + 1|0);
     $111 = ((($109)) + -1|0);
     $112 = ($110>>>0)<($111>>>0);
     if ($112) {
      $$01$i$i7 = $110;$109 = $111;
     } else {
      break;
     }
    }
   }
   $$pre = HEAP32[$__oe>>2]|0;
   $$pre$phiZ2D = $100;$117 = $$pre;
  }
 }
 $113 = ($__np|0)==($__ne|0);
 $114 = $__np;
 $115 = (($114) - ($$pre$phiZ2D))|0;
 $116 = (($__ob) + ($115)|0);
 $storemerge = $113 ? $117 : $116;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 74|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9176,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy = sp;
 $__fmt = sp + 56|0;
 $__nar = sp + 44|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9160>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9160+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9160+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9160+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9160+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9160+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9168,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 75|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9176,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0;
 $$byval_copy = sp + 68|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 130|0;
 $__nb = sp + 64|0;
 $__o = sp + 72|0;
 $__op = sp + 60|0;
 $__oe = sp + 56|0;
 $0 = sp + 52|0;
 $1 = sp + 48|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9184,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  $17 = ((($__iob)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $18;
  $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
  HEAPF64[$vararg_ptr8>>3] = $__v;
  $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
  $20 = HEAP32[$__nb>>2]|0;
  $21 = ($20|0)==(0|0);
  if ($21) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $23 = $20;$36 = $20;$__nc$1 = $19;
  }
 } else {
  $$pre4 = HEAP32[$__nb>>2]|0;
  $23 = $$pre4;$36 = 0;$__nc$1 = $__nc$0;
 }
 $22 = (($23) + ($__nc$1)|0);
 $24 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23,$22,$__iob)|0);
 $25 = ($23|0)==($__nar|0);
 if ($25) {
  $30 = $__nar;$35 = 0;$__ob$0 = $__o;
 } else {
  $26 = $__nc$1 << 1;
  $27 = (_malloc($26)|0);
  $28 = ($27|0)==(0|0);
  if ($28) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $30 = $23;$35 = $27;$__ob$0 = $27;
  }
 }
 $29 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $29;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($30,$24,$22,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($29)|0);
 $31 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $31;
 $32 = HEAP32[$__op>>2]|0;
 $33 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $34 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$32,$33,$__iob,$__fl)|0);
 _free($35);
 _free($36);
 STACKTOP = sp;return ($34|0);
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1 = 0, $$2$lcssa = 0, $$2$ph = 0, $$23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = ((($$1)) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = ((($$1)) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $11 = HEAP8[$__len>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $$2$lcssa = $$2$ph;
 } else {
  $$012 = $__len;$$23 = $$2$ph;$15 = $11;
  while(1) {
   $13 = ((($$012)) + 1|0);
   $14 = ((($$23)) + 1|0);
   HEAP8[$$23>>0] = $15;
   $16 = HEAP8[$13>>0]|0;
   $17 = ($16<<24>>24)==(0);
   if ($17) {
    $$2$lcssa = $14;
    break;
   } else {
    $$012 = $13;$$23 = $14;$15 = $16;
   }
  }
 }
 do {
  if ((($6|0) == 256)) {
   $20 = $7 & 1;
   $21 = ($20|0)==(0);
   if ($21) {
    HEAP8[$$2$lcssa>>0] = 101;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break;
   }
  } else if ((($6|0) == 4)) {
   $18 = $7 & 1;
   $19 = ($18|0)==(0);
   if ($19) {
    HEAP8[$$2$lcssa>>0] = 102;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break;
   }
  } else {
   $22 = $7 & 1;
   $23 = ($22|0)!=(0);
   if ($8) {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 65;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break;
    }
   } else {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 71;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break;
    }
   }
  }
 } while(0);
 return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i20 = 0, $$01$i$i215 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$017 = 0, $__dc$1 = 0, $__dg$018 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$214 = 0, $__nf$214$lcssa = 0, $__nf$3 = 0, $__ns$026 = 0, $__ns$122 = 0, $__ns$2 = 0, $__p$019 = 0;
 var $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6312)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = ((($__nb)) + 1|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ((($7)) + 28|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iii[$9 & 15]($0,$5)|0);
  $11 = HEAP32[$__oe>>2]|0;
  $12 = ((($11)) + 1|0);
  HEAP32[$__oe>>2] = $12;
  HEAP8[$11>>0] = $10;
  $__nf$0 = $6;
 } else {
  $__nf$0 = $__nb;
 }
 $13 = $__ne;
 $14 = $__nf$0;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(1);
 L4: do {
  if ($16) {
   $18 = HEAP8[$__nf$0>>0]|0;
   $19 = ($18<<24>>24)==(48);
   if ($19) {
    $20 = ((($__nf$0)) + 1|0);
    $21 = HEAP8[$20>>0]|0;
    if ((($21<<24>>24) == 88) | (($21<<24>>24) == 120)) {
     $22 = HEAP32[$0>>2]|0;
     $23 = ((($22)) + 28|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iii[$24 & 15]($0,48)|0);
     $26 = HEAP32[$__oe>>2]|0;
     $27 = ((($26)) + 1|0);
     HEAP32[$__oe>>2] = $27;
     HEAP8[$26>>0] = $25;
     $28 = ((($__nf$0)) + 2|0);
     $29 = HEAP8[$20>>0]|0;
     $30 = HEAP32[$0>>2]|0;
     $31 = ((($30)) + 28|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = (FUNCTION_TABLE_iii[$32 & 15]($0,$29)|0);
     $34 = HEAP32[$__oe>>2]|0;
     $35 = ((($34)) + 1|0);
     HEAP32[$__oe>>2] = $35;
     HEAP8[$34>>0] = $33;
     $36 = ($28>>>0)<($__ne>>>0);
     if ($36) {
      $__ns$026 = $28;
      while(1) {
       $37 = HEAP8[$__ns$026>>0]|0;
       $38 = $37 << 24 >> 24;
       $39 = (__ZNSt3__16__clocEv()|0);
       $40 = (_isxdigit_l($38,$39)|0);
       $41 = ($40|0)==(0);
       if ($41) {
        $__nf$1 = $28;$__ns$2 = $__ns$026;
        break L4;
       }
       $42 = ((($__ns$026)) + 1|0);
       $43 = ($42>>>0)<($__ne>>>0);
       if ($43) {
        $__ns$026 = $42;
       } else {
        $__nf$1 = $28;$__ns$2 = $42;
        break;
       }
      }
     } else {
      $__nf$1 = $28;$__ns$2 = $28;
     }
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L11: do {
  if ((label|0) == 4) {
   $17 = ($__nf$0>>>0)<($__ne>>>0);
   if ($17) {
    $__ns$122 = $__nf$0;
    while(1) {
     $44 = HEAP8[$__ns$122>>0]|0;
     $45 = $44 << 24 >> 24;
     $46 = (__ZNSt3__16__clocEv()|0);
     $47 = (_isdigit_l($45,$46)|0);
     $48 = ($47|0)==(0);
     if ($48) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$122;
      break L11;
     }
     $49 = ((($__ns$122)) + 1|0);
     $50 = ($49>>>0)<($__ne>>>0);
     if ($50) {
      $__ns$122 = $49;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $49;
      break;
     }
    }
   } else {
    $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
   }
  }
 } while(0);
 $51 = HEAP8[$__grouping>>0]|0;
 $52 = $51 & 1;
 $53 = ($52<<24>>24)==(0);
 $54 = ((($__grouping)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = $51&255;
 $57 = $56 >>> 1;
 $58 = $53 ? $57 : $55;
 $59 = ($58|0)==(0);
 if ($59) {
  $60 = HEAP32[$__oe>>2]|0;
  $61 = HEAP32[$0>>2]|0;
  $62 = ((($61)) + 32|0);
  $63 = HEAP32[$62>>2]|0;
  (FUNCTION_TABLE_iiiii[$63 & 7]($0,$__nf$1,$__ns$2,$60)|0);
  $64 = $__ns$2;
  $65 = $__nf$1;
  $66 = (($64) - ($65))|0;
  $67 = HEAP32[$__oe>>2]|0;
  $68 = (($67) + ($66)|0);
  HEAP32[$__oe>>2] = $68;
  $$pre$phiZ2D = $0;
 } else {
  $69 = ($__nf$1|0)==($__ns$2|0);
  if (!($69)) {
   $70 = ((($__ns$2)) + -1|0);
   $71 = ($__nf$1>>>0)<($70>>>0);
   if ($71) {
    $$01$i$i20 = $__nf$1;$74 = $70;
    while(1) {
     $72 = HEAP8[$$01$i$i20>>0]|0;
     $73 = HEAP8[$74>>0]|0;
     HEAP8[$$01$i$i20>>0] = $73;
     HEAP8[$74>>0] = $72;
     $75 = ((($$01$i$i20)) + 1|0);
     $76 = ((($74)) + -1|0);
     $77 = ($75>>>0)<($76>>>0);
     if ($77) {
      $$01$i$i20 = $75;$74 = $76;
     } else {
      break;
     }
    }
   }
  }
  $78 = HEAP32[$1>>2]|0;
  $79 = ((($78)) + 16|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (FUNCTION_TABLE_ii[$80 & 63]($1)|0);
  $82 = ((($__grouping)) + 8|0);
  $83 = ((($__grouping)) + 1|0);
  $84 = ($__nf$1>>>0)<($__ns$2>>>0);
  if ($84) {
   $__dc$017 = 0;$__dg$018 = 0;$__p$019 = $__nf$1;
   while(1) {
    $85 = HEAP8[$__grouping>>0]|0;
    $86 = $85 & 1;
    $87 = ($86<<24>>24)==(0);
    $88 = HEAP32[$82>>2]|0;
    $89 = $87 ? $83 : $88;
    $90 = (($89) + ($__dg$018)|0);
    $91 = HEAP8[$90>>0]|0;
    $92 = ($91<<24>>24)>(0);
    $93 = $91 << 24 >> 24;
    $94 = ($__dc$017|0)==($93|0);
    $or$cond = $92 & $94;
    if ($or$cond) {
     $95 = HEAP32[$__oe>>2]|0;
     $96 = ((($95)) + 1|0);
     HEAP32[$__oe>>2] = $96;
     HEAP8[$95>>0] = $81;
     $97 = HEAP8[$__grouping>>0]|0;
     $98 = $97 & 1;
     $99 = ($98<<24>>24)==(0);
     $100 = HEAP32[$54>>2]|0;
     $101 = $97&255;
     $102 = $101 >>> 1;
     $103 = $99 ? $102 : $100;
     $104 = (($103) + -1)|0;
     $105 = ($__dg$018>>>0)<($104>>>0);
     $106 = $105&1;
     $$__dg$0 = (($106) + ($__dg$018))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$017;$__dg$1 = $__dg$018;
    }
    $107 = HEAP8[$__p$019>>0]|0;
    $108 = HEAP32[$0>>2]|0;
    $109 = ((($108)) + 28|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (FUNCTION_TABLE_iii[$110 & 15]($0,$107)|0);
    $112 = HEAP32[$__oe>>2]|0;
    $113 = ((($112)) + 1|0);
    HEAP32[$__oe>>2] = $113;
    HEAP8[$112>>0] = $111;
    $114 = (($__dc$1) + 1)|0;
    $115 = ((($__p$019)) + 1|0);
    $116 = ($115>>>0)<($__ns$2>>>0);
    if ($116) {
     $__dc$017 = $114;$__dg$018 = $__dg$1;$__p$019 = $115;
    } else {
     break;
    }
   }
  }
  $117 = $__nf$1;
  $118 = $__nb;
  $119 = (($117) - ($118))|0;
  $120 = (($__ob) + ($119)|0);
  $121 = HEAP32[$__oe>>2]|0;
  $122 = ($120|0)==($121|0);
  if ($122) {
   $$pre$phiZ2D = $0;
  } else {
   $123 = ((($121)) + -1|0);
   $124 = ($120>>>0)<($123>>>0);
   if ($124) {
    $$01$i$i215 = $120;$128 = $123;
    while(1) {
     $126 = HEAP8[$$01$i$i215>>0]|0;
     $127 = HEAP8[$128>>0]|0;
     HEAP8[$$01$i$i215>>0] = $127;
     HEAP8[$128>>0] = $126;
     $129 = ((($$01$i$i215)) + 1|0);
     $130 = ((($128)) + -1|0);
     $131 = ($129>>>0)<($130>>>0);
     if ($131) {
      $$01$i$i215 = $129;$128 = $130;
     } else {
      $$pre$phiZ2D = $0;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $0;
   }
  }
 }
 $125 = ($__ns$2>>>0)<($__ne>>>0);
 L36: do {
  if ($125) {
   $__nf$214 = $__ns$2;
   while(1) {
    $132 = HEAP8[$__nf$214>>0]|0;
    $133 = ($132<<24>>24)==(46);
    if ($133) {
     $__nf$214$lcssa = $__nf$214;
     break;
    }
    $141 = HEAP32[$$pre$phiZ2D>>2]|0;
    $142 = ((($141)) + 28|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = (FUNCTION_TABLE_iii[$143 & 15]($0,$132)|0);
    $145 = HEAP32[$__oe>>2]|0;
    $146 = ((($145)) + 1|0);
    HEAP32[$__oe>>2] = $146;
    HEAP8[$145>>0] = $144;
    $147 = ((($__nf$214)) + 1|0);
    $148 = ($147>>>0)<($__ne>>>0);
    if ($148) {
     $__nf$214 = $147;
    } else {
     $__nf$3 = $147;
     break L36;
    }
   }
   $134 = HEAP32[$1>>2]|0;
   $135 = ((($134)) + 12|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = (FUNCTION_TABLE_ii[$136 & 63]($1)|0);
   $138 = HEAP32[$__oe>>2]|0;
   $139 = ((($138)) + 1|0);
   HEAP32[$__oe>>2] = $139;
   HEAP8[$138>>0] = $137;
   $140 = ((($__nf$214$lcssa)) + 1|0);
   $__nf$3 = $140;
  } else {
   $__nf$3 = $__ns$2;
  }
 } while(0);
 $149 = HEAP32[$__oe>>2]|0;
 $150 = HEAP32[$0>>2]|0;
 $151 = ((($150)) + 32|0);
 $152 = HEAP32[$151>>2]|0;
 (FUNCTION_TABLE_iiiii[$152 & 7]($0,$__nf$3,$__ne,$149)|0);
 $153 = $__nf$3;
 $154 = (($13) - ($153))|0;
 $155 = HEAP32[$__oe>>2]|0;
 $156 = (($155) + ($154)|0);
 HEAP32[$__oe>>2] = $156;
 $157 = ($__np|0)==($__ne|0);
 $158 = $__np;
 $159 = $__nb;
 $160 = (($158) - ($159))|0;
 $161 = (($__ob) + ($160)|0);
 $storemerge = $157 ? $156 : $161;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $$byval_copy = sp + 76|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 138|0;
 $__nb = sp + 72|0;
 $__o = sp + 80|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9192,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  if ($9) {
   $17 = ((($__iob)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $18;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $__v;
   $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
   $__nc$1 = $19;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $__v;
   $20 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $20;
  }
  $21 = HEAP32[$__nb>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $24 = $21;$37 = $21;$__nc$2 = $__nc$1;
  }
 } else {
  $$pre4 = HEAP32[$__nb>>2]|0;
  $24 = $$pre4;$37 = 0;$__nc$2 = $__nc$0;
 }
 $23 = (($24) + ($__nc$2)|0);
 $25 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($24,$23,$__iob)|0);
 $26 = ($24|0)==($__nar|0);
 if ($26) {
  $31 = $__nar;$36 = 0;$__ob$0 = $__o;
 } else {
  $27 = $__nc$2 << 1;
  $28 = (_malloc($27)|0);
  $29 = ($28|0)==(0|0);
  if ($29) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $31 = $24;$36 = $28;$__ob$0 = $28;
  }
 }
 $30 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $30;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($31,$25,$23,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($30)|0);
 $32 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $32;
 $33 = HEAP32[$__op>>2]|0;
 $34 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $35 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$33,$34,$__iob,$__fl)|0);
 _free($36);
 _free($37);
 STACKTOP = sp;return ($35|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $$byval_copy = sp;
 $__fmt = sp + 72|0;
 $__nar = sp + 52|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9200>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9200+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9200+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9200+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9200+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9200+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$$byval_copy)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 $7 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 32|0);
 $10 = HEAP32[$9>>2]|0;
 (FUNCTION_TABLE_iiiii[$10 & 7]($7,$__nar,$4,$__o)|0);
 $11 = (($__o) + ($3)|0);
 $12 = ($5|0)==($4|0);
 $13 = $__nar;
 $14 = $5;
 $15 = (($14) - ($13))|0;
 $16 = (($__o) + ($15)|0);
 $__op$0 = $12 ? $11 : $16;
 $17 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $17;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $18 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$11,$__iob,$__fl)|0);
 STACKTOP = sp;return ($18|0);
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi3Z2D = 0, $$pre1 = 0, $$pre1$val = 0, $$pre1$val4 = 0, $$pre2 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$this>>2]|0;
  $7 = ((($6)) + 24|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$__s>>2]|0;
  HEAP32[$0>>2] = $9;
  $10 = $__v&1;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $11 = (FUNCTION_TABLE_iiiiii[$8 & 31]($this,$$byval_copy,$__iob,$__fl,$10)|0);
  $$sroa$0$0 = $11;
 } else {
  $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
  HEAP32[$1>>2] = $12;
  $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6320)|0);
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $14 = HEAP32[$13>>2]|0;
  if ($__v) {
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_vii[$16 & 63]($__nm,$13);
  } else {
   $17 = ((($14)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   FUNCTION_TABLE_vii[$18 & 63]($__nm,$13);
  }
  $19 = HEAP8[$__nm>>0]|0;
  $20 = $19 & 1;
  $21 = ($20<<24>>24)==(0);
  $22 = ((($__nm)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $$pre2 = ((($__nm)) + 4|0);
  $24 = ((($__nm)) + 4|0);
  $$pre1 = ((($__nm)) + 8|0);
  $$pre$phi3Z2D = $21 ? $24 : $$pre2;
  $$ph = $21 ? $24 : $23;
  $25 = $19 & 1;
  $26 = ($25<<24>>24)==(0);
  $$pre1$val4 = HEAP32[$$pre1>>2]|0;
  $27 = HEAP32[$$pre$phi3Z2D>>2]|0;
  $28 = $19&255;
  $29 = $28 >>> 1;
  $30 = $26 ? $$pre$phi3Z2D : $$pre1$val4;
  $31 = $26 ? $29 : $27;
  $32 = (($30) + ($31<<2)|0);
  $33 = ($$ph|0)==($32|0);
  if (!($33)) {
   $35 = $$ph;
   while(1) {
    $34 = HEAP32[$35>>2]|0;
    $36 = HEAP32[$__s>>2]|0;
    $37 = ($36|0)==(0|0);
    if (!($37)) {
     $38 = ((($36)) + 24|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ((($36)) + 28|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = ($39|0)==($41|0);
     if ($42) {
      $43 = HEAP32[$36>>2]|0;
      $44 = ((($43)) + 52|0);
      $45 = HEAP32[$44>>2]|0;
      $46 = (FUNCTION_TABLE_iii[$45 & 15]($36,$34)|0);
      $$0$i$i = $46;
     } else {
      $47 = ((($39)) + 4|0);
      HEAP32[$38>>2] = $47;
      HEAP32[$39>>2] = $34;
      $$0$i$i = $34;
     }
     $48 = ($$0$i$i|0)==(-1);
     if ($48) {
      HEAP32[$__s>>2] = 0;
     }
    }
    $49 = ((($35)) + 4|0);
    $$pre = HEAP8[$__nm>>0]|0;
    $50 = $$pre & 1;
    $51 = ($50<<24>>24)==(0);
    $$pre1$val = HEAP32[$$pre1>>2]|0;
    $52 = HEAP32[$$pre$phi3Z2D>>2]|0;
    $53 = $$pre&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $$pre$phi3Z2D : $$pre1$val;
    $56 = $51 ? $54 : $52;
    $57 = (($55) + ($56<<2)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     break;
    } else {
     $35 = $49;
    }
   }
  }
  $59 = HEAP32[$__s>>2]|0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
  $$sroa$0$0 = $59;
 }
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $$byval_copy = sp;
 $__fmt = sp + 116|0;
 $__nar = sp + 104|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9160>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9160+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9160+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9160+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9160+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9160+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9168,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i110 = 0, $$01$i$i6 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dc$07 = 0, $__dc$1 = 0, $__dg$08 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$09 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6320)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $15 = ((($14)) + 48|0);
  $16 = HEAP32[$15>>2]|0;
  (FUNCTION_TABLE_iiiii[$16 & 7]($0,$__nb,$__ne,$__ob)|0);
  $17 = $__ne;
  $18 = $__nb;
  $19 = (($17) - ($18))|0;
  $20 = (($__ob) + ($19<<2)|0);
  HEAP32[$__oe>>2] = $20;
  $$pre$phiZ2D = $18;$117 = $20;
 } else {
  HEAP32[$__oe>>2] = $__ob;
  $21 = HEAP8[$__nb>>0]|0;
  if ((($21<<24>>24) == 43) | (($21<<24>>24) == 45)) {
   $22 = ((($__nb)) + 1|0);
   $23 = HEAP32[$0>>2]|0;
   $24 = ((($23)) + 44|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 15]($0,$21)|0);
   $27 = HEAP32[$__oe>>2]|0;
   $28 = ((($27)) + 4|0);
   HEAP32[$__oe>>2] = $28;
   HEAP32[$27>>2] = $26;
   $__nf$0 = $22;
  } else {
   $__nf$0 = $__nb;
  }
  $29 = $__ne;
  $30 = $__nf$0;
  $31 = (($29) - ($30))|0;
  $32 = ($31|0)>(1);
  if ($32) {
   $33 = HEAP8[$__nf$0>>0]|0;
   $34 = ($33<<24>>24)==(48);
   if ($34) {
    $35 = ((($__nf$0)) + 1|0);
    $36 = HEAP8[$35>>0]|0;
    if ((($36<<24>>24) == 88) | (($36<<24>>24) == 120)) {
     $37 = HEAP32[$0>>2]|0;
     $38 = ((($37)) + 44|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_iii[$39 & 15]($0,48)|0);
     $41 = HEAP32[$__oe>>2]|0;
     $42 = ((($41)) + 4|0);
     HEAP32[$__oe>>2] = $42;
     HEAP32[$41>>2] = $40;
     $43 = ((($__nf$0)) + 2|0);
     $44 = HEAP8[$35>>0]|0;
     $45 = HEAP32[$0>>2]|0;
     $46 = ((($45)) + 44|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = (FUNCTION_TABLE_iii[$47 & 15]($0,$44)|0);
     $49 = HEAP32[$__oe>>2]|0;
     $50 = ((($49)) + 4|0);
     HEAP32[$__oe>>2] = $50;
     HEAP32[$49>>2] = $48;
     $__nf$1 = $43;
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
  } else {
   $__nf$1 = $__nf$0;
  }
  $51 = ($__nf$1|0)==($__ne|0);
  if (!($51)) {
   $52 = ((($__ne)) + -1|0);
   $53 = ($__nf$1>>>0)<($52>>>0);
   if ($53) {
    $$01$i$i110 = $__nf$1;$56 = $52;
    while(1) {
     $54 = HEAP8[$$01$i$i110>>0]|0;
     $55 = HEAP8[$56>>0]|0;
     HEAP8[$$01$i$i110>>0] = $55;
     HEAP8[$56>>0] = $54;
     $57 = ((($$01$i$i110)) + 1|0);
     $58 = ((($56)) + -1|0);
     $59 = ($57>>>0)<($58>>>0);
     if ($59) {
      $$01$i$i110 = $57;$56 = $58;
     } else {
      break;
     }
    }
   }
  }
  $60 = HEAP32[$1>>2]|0;
  $61 = ((($60)) + 16|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = (FUNCTION_TABLE_ii[$62 & 63]($1)|0);
  $64 = ((($__grouping)) + 8|0);
  $65 = ((($__grouping)) + 1|0);
  $66 = ($__nf$1>>>0)<($__ne>>>0);
  if ($66) {
   $__dc$07 = 0;$__dg$08 = 0;$__p$09 = $__nf$1;
   while(1) {
    $67 = HEAP8[$__grouping>>0]|0;
    $68 = $67 & 1;
    $69 = ($68<<24>>24)==(0);
    $70 = HEAP32[$64>>2]|0;
    $71 = $69 ? $65 : $70;
    $72 = (($71) + ($__dg$08)|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = ($73<<24>>24)!=(0);
    $75 = $73 << 24 >> 24;
    $76 = ($__dc$07|0)==($75|0);
    $or$cond = $74 & $76;
    if ($or$cond) {
     $77 = HEAP32[$__oe>>2]|0;
     $78 = ((($77)) + 4|0);
     HEAP32[$__oe>>2] = $78;
     HEAP32[$77>>2] = $63;
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$8>>2]|0;
     $83 = $79&255;
     $84 = $83 >>> 1;
     $85 = $81 ? $84 : $82;
     $86 = (($85) + -1)|0;
     $87 = ($__dg$08>>>0)<($86>>>0);
     $88 = $87&1;
     $$__dg$0 = (($88) + ($__dg$08))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$07;$__dg$1 = $__dg$08;
    }
    $89 = HEAP8[$__p$09>>0]|0;
    $90 = HEAP32[$0>>2]|0;
    $91 = ((($90)) + 44|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (FUNCTION_TABLE_iii[$92 & 15]($0,$89)|0);
    $94 = HEAP32[$__oe>>2]|0;
    $95 = ((($94)) + 4|0);
    HEAP32[$__oe>>2] = $95;
    HEAP32[$94>>2] = $93;
    $96 = (($__dc$1) + 1)|0;
    $97 = ((($__p$09)) + 1|0);
    $98 = ($97>>>0)<($__ne>>>0);
    if ($98) {
     $__dc$07 = $96;$__dg$08 = $__dg$1;$__p$09 = $97;
    } else {
     break;
    }
   }
  }
  $99 = $__nf$1;
  $100 = $__nb;
  $101 = (($99) - ($100))|0;
  $102 = (($__ob) + ($101<<2)|0);
  $103 = HEAP32[$__oe>>2]|0;
  $104 = ($102|0)==($103|0);
  if ($104) {
   $$pre$phiZ2D = $100;$117 = $102;
  } else {
   $105 = ((($103)) + -4|0);
   $106 = ($102>>>0)<($105>>>0);
   if ($106) {
    $$01$i$i6 = $102;$109 = $105;
    while(1) {
     $107 = HEAP32[$$01$i$i6>>2]|0;
     $108 = HEAP32[$109>>2]|0;
     HEAP32[$$01$i$i6>>2] = $108;
     HEAP32[$109>>2] = $107;
     $110 = ((($$01$i$i6)) + 4|0);
     $111 = ((($109)) + -4|0);
     $112 = ($110>>>0)<($111>>>0);
     if ($112) {
      $$01$i$i6 = $110;$109 = $111;
     } else {
      $$pre$phiZ2D = $100;$117 = $103;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $100;$117 = $103;
   }
  }
 }
 $113 = ($__np|0)==($__ne|0);
 $114 = $__np;
 $115 = (($114) - ($$pre$phiZ2D))|0;
 $116 = (($__ob) + ($115<<2)|0);
 $storemerge = $113 ? $117 : $116;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 196|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9176,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $$byval_copy = sp;
 $__fmt = sp + 116|0;
 $__nar = sp + 104|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9160>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9160+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9160+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9160+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9160+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9160+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9168,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 204|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9176,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0;
 $$byval_copy = sp + 296|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 300|0;
 $__nb = sp + 292|0;
 $__o = sp + 64|0;
 $__op = sp + 60|0;
 $__oe = sp + 56|0;
 $0 = sp + 52|0;
 $1 = sp + 48|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9184,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  $17 = ((($__iob)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $18;
  $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
  HEAPF64[$vararg_ptr8>>3] = $__v;
  $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
  $20 = HEAP32[$__nb>>2]|0;
  $21 = ($20|0)==(0|0);
  if ($21) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $23 = $20;$37 = $20;$__nc$1 = $19;
  }
 } else {
  $$pre3 = HEAP32[$__nb>>2]|0;
  $23 = $$pre3;$37 = 0;$__nc$1 = $__nc$0;
 }
 $22 = (($23) + ($__nc$1)|0);
 $24 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23,$22,$__iob)|0);
 $25 = ($23|0)==($__nar|0);
 if ($25) {
  $30 = $__nar;$35 = 0;$__ob$0 = $__o;
 } else {
  $26 = $__nc$1 << 3;
  $27 = (_malloc($26)|0);
  $28 = ($27|0)==(0|0);
  if ($28) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $30 = $23;$35 = $27;$__ob$0 = $27;
  }
 }
 $29 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $29;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($30,$24,$22,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($29)|0);
 $31 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $31;
 $32 = HEAP32[$__op>>2]|0;
 $33 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $34 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$32,$33,$__iob,$__fl)|0);
 HEAP32[$__s>>2] = $34;
 $36 = ($35|0)==(0|0);
 if (!($36)) {
  _free($35);
 }
 _free($37);
 STACKTOP = sp;return ($34|0);
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i217 = 0, $$01$i$i22 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$019 = 0, $__dc$1 = 0, $__dg$020 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$215 = 0, $__nf$215$lcssa = 0, $__nf$3 = 0, $__ns$028 = 0, $__ns$124 = 0, $__ns$2 = 0;
 var $__p$021 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6320)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = ((($__nb)) + 1|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ((($7)) + 44|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iii[$9 & 15]($0,$5)|0);
  $11 = HEAP32[$__oe>>2]|0;
  $12 = ((($11)) + 4|0);
  HEAP32[$__oe>>2] = $12;
  HEAP32[$11>>2] = $10;
  $__nf$0 = $6;
 } else {
  $__nf$0 = $__nb;
 }
 $13 = $__ne;
 $14 = $__nf$0;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(1);
 L4: do {
  if ($16) {
   $18 = HEAP8[$__nf$0>>0]|0;
   $19 = ($18<<24>>24)==(48);
   if ($19) {
    $20 = ((($__nf$0)) + 1|0);
    $21 = HEAP8[$20>>0]|0;
    if ((($21<<24>>24) == 88) | (($21<<24>>24) == 120)) {
     $22 = HEAP32[$0>>2]|0;
     $23 = ((($22)) + 44|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iii[$24 & 15]($0,48)|0);
     $26 = HEAP32[$__oe>>2]|0;
     $27 = ((($26)) + 4|0);
     HEAP32[$__oe>>2] = $27;
     HEAP32[$26>>2] = $25;
     $28 = ((($__nf$0)) + 2|0);
     $29 = HEAP8[$20>>0]|0;
     $30 = HEAP32[$0>>2]|0;
     $31 = ((($30)) + 44|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = (FUNCTION_TABLE_iii[$32 & 15]($0,$29)|0);
     $34 = HEAP32[$__oe>>2]|0;
     $35 = ((($34)) + 4|0);
     HEAP32[$__oe>>2] = $35;
     HEAP32[$34>>2] = $33;
     $36 = ($28>>>0)<($__ne>>>0);
     if ($36) {
      $__ns$028 = $28;
      while(1) {
       $37 = HEAP8[$__ns$028>>0]|0;
       $38 = $37 << 24 >> 24;
       $39 = (__ZNSt3__16__clocEv()|0);
       $40 = (_isxdigit_l($38,$39)|0);
       $41 = ($40|0)==(0);
       if ($41) {
        $__nf$1 = $28;$__ns$2 = $__ns$028;
        break L4;
       }
       $42 = ((($__ns$028)) + 1|0);
       $43 = ($42>>>0)<($__ne>>>0);
       if ($43) {
        $__ns$028 = $42;
       } else {
        $__nf$1 = $28;$__ns$2 = $42;
        break;
       }
      }
     } else {
      $__nf$1 = $28;$__ns$2 = $28;
     }
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L11: do {
  if ((label|0) == 4) {
   $17 = ($__nf$0>>>0)<($__ne>>>0);
   if ($17) {
    $__ns$124 = $__nf$0;
    while(1) {
     $44 = HEAP8[$__ns$124>>0]|0;
     $45 = $44 << 24 >> 24;
     $46 = (__ZNSt3__16__clocEv()|0);
     $47 = (_isdigit_l($45,$46)|0);
     $48 = ($47|0)==(0);
     if ($48) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$124;
      break L11;
     }
     $49 = ((($__ns$124)) + 1|0);
     $50 = ($49>>>0)<($__ne>>>0);
     if ($50) {
      $__ns$124 = $49;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $49;
      break;
     }
    }
   } else {
    $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
   }
  }
 } while(0);
 $51 = HEAP8[$__grouping>>0]|0;
 $52 = $51 & 1;
 $53 = ($52<<24>>24)==(0);
 $54 = ((($__grouping)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = $51&255;
 $57 = $56 >>> 1;
 $58 = $53 ? $57 : $55;
 $59 = ($58|0)==(0);
 if ($59) {
  $60 = HEAP32[$__oe>>2]|0;
  $61 = HEAP32[$0>>2]|0;
  $62 = ((($61)) + 48|0);
  $63 = HEAP32[$62>>2]|0;
  (FUNCTION_TABLE_iiiii[$63 & 7]($0,$__nf$1,$__ns$2,$60)|0);
  $64 = $__ns$2;
  $65 = $__nf$1;
  $66 = (($64) - ($65))|0;
  $67 = HEAP32[$__oe>>2]|0;
  $68 = (($67) + ($66<<2)|0);
  HEAP32[$__oe>>2] = $68;
  $$pre$phiZ2D = $0;$162 = $68;
 } else {
  $69 = ($__nf$1|0)==($__ns$2|0);
  if (!($69)) {
   $70 = ((($__ns$2)) + -1|0);
   $71 = ($__nf$1>>>0)<($70>>>0);
   if ($71) {
    $$01$i$i22 = $__nf$1;$74 = $70;
    while(1) {
     $72 = HEAP8[$$01$i$i22>>0]|0;
     $73 = HEAP8[$74>>0]|0;
     HEAP8[$$01$i$i22>>0] = $73;
     HEAP8[$74>>0] = $72;
     $75 = ((($$01$i$i22)) + 1|0);
     $76 = ((($74)) + -1|0);
     $77 = ($75>>>0)<($76>>>0);
     if ($77) {
      $$01$i$i22 = $75;$74 = $76;
     } else {
      break;
     }
    }
   }
  }
  $78 = HEAP32[$1>>2]|0;
  $79 = ((($78)) + 16|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (FUNCTION_TABLE_ii[$80 & 63]($1)|0);
  $82 = ((($__grouping)) + 8|0);
  $83 = ((($__grouping)) + 1|0);
  $84 = ($__nf$1>>>0)<($__ns$2>>>0);
  if ($84) {
   $__dc$019 = 0;$__dg$020 = 0;$__p$021 = $__nf$1;
   while(1) {
    $85 = HEAP8[$__grouping>>0]|0;
    $86 = $85 & 1;
    $87 = ($86<<24>>24)==(0);
    $88 = HEAP32[$82>>2]|0;
    $89 = $87 ? $83 : $88;
    $90 = (($89) + ($__dg$020)|0);
    $91 = HEAP8[$90>>0]|0;
    $92 = ($91<<24>>24)>(0);
    $93 = $91 << 24 >> 24;
    $94 = ($__dc$019|0)==($93|0);
    $or$cond = $92 & $94;
    if ($or$cond) {
     $95 = HEAP32[$__oe>>2]|0;
     $96 = ((($95)) + 4|0);
     HEAP32[$__oe>>2] = $96;
     HEAP32[$95>>2] = $81;
     $97 = HEAP8[$__grouping>>0]|0;
     $98 = $97 & 1;
     $99 = ($98<<24>>24)==(0);
     $100 = HEAP32[$54>>2]|0;
     $101 = $97&255;
     $102 = $101 >>> 1;
     $103 = $99 ? $102 : $100;
     $104 = (($103) + -1)|0;
     $105 = ($__dg$020>>>0)<($104>>>0);
     $106 = $105&1;
     $$__dg$0 = (($106) + ($__dg$020))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$019;$__dg$1 = $__dg$020;
    }
    $107 = HEAP8[$__p$021>>0]|0;
    $108 = HEAP32[$0>>2]|0;
    $109 = ((($108)) + 44|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (FUNCTION_TABLE_iii[$110 & 15]($0,$107)|0);
    $112 = HEAP32[$__oe>>2]|0;
    $113 = ((($112)) + 4|0);
    HEAP32[$__oe>>2] = $113;
    HEAP32[$112>>2] = $111;
    $114 = (($__dc$1) + 1)|0;
    $115 = ((($__p$021)) + 1|0);
    $116 = ($115>>>0)<($__ns$2>>>0);
    if ($116) {
     $__dc$019 = $114;$__dg$020 = $__dg$1;$__p$021 = $115;
    } else {
     break;
    }
   }
  }
  $117 = $__nf$1;
  $118 = $__nb;
  $119 = (($117) - ($118))|0;
  $120 = (($__ob) + ($119<<2)|0);
  $121 = HEAP32[$__oe>>2]|0;
  $122 = ($120|0)==($121|0);
  if ($122) {
   $$pre$phiZ2D = $0;$162 = $120;
  } else {
   $123 = ((($121)) + -4|0);
   $124 = ($120>>>0)<($123>>>0);
   if ($124) {
    $$01$i$i217 = $120;$128 = $123;
    while(1) {
     $126 = HEAP32[$$01$i$i217>>2]|0;
     $127 = HEAP32[$128>>2]|0;
     HEAP32[$$01$i$i217>>2] = $127;
     HEAP32[$128>>2] = $126;
     $129 = ((($$01$i$i217)) + 4|0);
     $130 = ((($128)) + -4|0);
     $131 = ($129>>>0)<($130>>>0);
     if ($131) {
      $$01$i$i217 = $129;$128 = $130;
     } else {
      $$pre$phiZ2D = $0;$162 = $121;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $0;$162 = $121;
   }
  }
 }
 $125 = ($__ns$2>>>0)<($__ne>>>0);
 L36: do {
  if ($125) {
   $__nf$215 = $__ns$2;
   while(1) {
    $132 = HEAP8[$__nf$215>>0]|0;
    $133 = ($132<<24>>24)==(46);
    if ($133) {
     $__nf$215$lcssa = $__nf$215;
     break;
    }
    $141 = HEAP32[$$pre$phiZ2D>>2]|0;
    $142 = ((($141)) + 44|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = (FUNCTION_TABLE_iii[$143 & 15]($0,$132)|0);
    $145 = HEAP32[$__oe>>2]|0;
    $146 = ((($145)) + 4|0);
    HEAP32[$__oe>>2] = $146;
    HEAP32[$145>>2] = $144;
    $147 = ((($__nf$215)) + 1|0);
    $148 = ($147>>>0)<($__ne>>>0);
    if ($148) {
     $__nf$215 = $147;
    } else {
     $152 = $146;$__nf$3 = $147;
     break L36;
    }
   }
   $134 = HEAP32[$1>>2]|0;
   $135 = ((($134)) + 12|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = (FUNCTION_TABLE_ii[$136 & 63]($1)|0);
   $138 = HEAP32[$__oe>>2]|0;
   $139 = ((($138)) + 4|0);
   HEAP32[$__oe>>2] = $139;
   HEAP32[$138>>2] = $137;
   $140 = ((($__nf$215$lcssa)) + 1|0);
   $152 = $139;$__nf$3 = $140;
  } else {
   $152 = $162;$__nf$3 = $__ns$2;
  }
 } while(0);
 $149 = HEAP32[$0>>2]|0;
 $150 = ((($149)) + 48|0);
 $151 = HEAP32[$150>>2]|0;
 (FUNCTION_TABLE_iiiii[$151 & 7]($0,$__nf$3,$__ne,$152)|0);
 $153 = $__nf$3;
 $154 = (($13) - ($153))|0;
 $155 = HEAP32[$__oe>>2]|0;
 $156 = (($155) + ($154<<2)|0);
 HEAP32[$__oe>>2] = $156;
 $157 = ($__np|0)==($__ne|0);
 $158 = $__np;
 $159 = $__nb;
 $160 = (($158) - ($159))|0;
 $161 = (($__ob) + ($160<<2)|0);
 $storemerge = $157 ? $156 : $161;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $$byval_copy = sp + 304|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 308|0;
 $__nb = sp + 300|0;
 $__o = sp + 72|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9192,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  if ($9) {
   $17 = ((($__iob)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $18;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $__v;
   $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
   $__nc$1 = $19;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $__v;
   $20 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $20;
  }
  $21 = HEAP32[$__nb>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $24 = $21;$38 = $21;$__nc$2 = $__nc$1;
  }
 } else {
  $$pre3 = HEAP32[$__nb>>2]|0;
  $24 = $$pre3;$38 = 0;$__nc$2 = $__nc$0;
 }
 $23 = (($24) + ($__nc$2)|0);
 $25 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($24,$23,$__iob)|0);
 $26 = ($24|0)==($__nar|0);
 if ($26) {
  $31 = $__nar;$36 = 0;$__ob$0 = $__o;
 } else {
  $27 = $__nc$2 << 3;
  $28 = (_malloc($27)|0);
  $29 = ($28|0)==(0|0);
  if ($29) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $31 = $24;$36 = $28;$__ob$0 = $28;
  }
 }
 $30 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $30;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($31,$25,$23,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($30)|0);
 $32 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $32;
 $33 = HEAP32[$__op>>2]|0;
 $34 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $35 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$33,$34,$__iob,$__fl)|0);
 HEAP32[$__s>>2] = $35;
 $37 = ($36|0)==(0|0);
 if (!($37)) {
  _free($36);
 }
 _free($38);
 STACKTOP = sp;return ($35|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $$byval_copy = sp;
 $__fmt = sp + 180|0;
 $__nar = sp + 160|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9200>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9200+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9200+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9200+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9200+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9200+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$$byval_copy)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 $7 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 (FUNCTION_TABLE_iiiii[$10 & 7]($7,$__nar,$4,$__o)|0);
 $11 = (($__o) + ($3<<2)|0);
 $12 = ($5|0)==($4|0);
 $13 = $__nar;
 $14 = $5;
 $15 = (($14) - ($13))|0;
 $16 = (($__o) + ($15<<2)|0);
 $__op$0 = $12 ? $11 : $16;
 $17 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $17;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $18 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$11,$__iob,$__fl)|0);
 STACKTOP = sp;return ($18|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i26 = 0, $$0$ph$be = 0, $$0$ph86 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa94 = 0, $$lcssa95 = 0, $$pre$i$i$i17 = 0, $$pre$i$i$i8 = 0, $$pre$i2$i$i21 = 0, $$pre$i2$i$i2139 = 0, $$pre$i2$i$i2140 = 0, $$pre$pre = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i24 = 0, $isascii1$i5 = 0, $or$cond84 = 0, $sext = 0, $tmp$i$i23 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $5 = ((($4)) + 8|0);
 $6 = ($__fmtb|0)==($__fmte|0);
 $7 = HEAP32[$__b>>2]|0;
 L1: do {
  if ($6) {
   $$pre$i$i$i8 = $7;
  } else {
   $$0$ph86 = $__fmtb;$8 = $7;
   L2: while(1) {
    $9 = ($8|0)==(0|0);
    $10 = $8;
    if ($9) {
     $21 = 0;$59 = $10;
    } else {
     $11 = ((($8)) + 12|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($8)) + 16|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($12|0)==($14|0);
     if ($15) {
      $16 = HEAP32[$8>>2]|0;
      $17 = ((($16)) + 36|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (FUNCTION_TABLE_ii[$18 & 63]($8)|0);
      $20 = ($19|0)==(-1);
      if ($20) {
       HEAP32[$__b>>2] = 0;
       $21 = 0;$59 = 0;
      } else {
       $21 = $8;$59 = $10;
      }
     } else {
      $21 = $8;$59 = $10;
     }
    }
    $22 = ($21|0)==(0|0);
    $23 = HEAP32[$__e>>2]|0;
    $24 = ($23|0)==(0|0);
    $25 = $23;
    do {
     if ($24) {
      $190 = $25;
      label = 11;
     } else {
      $26 = ((($23)) + 12|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ((($23)) + 16|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = ($27|0)==($29|0);
      if ($30) {
       $31 = HEAP32[$23>>2]|0;
       $32 = ((($31)) + 36|0);
       $33 = HEAP32[$32>>2]|0;
       $34 = (FUNCTION_TABLE_ii[$33 & 63]($23)|0);
       $35 = ($34|0)==(-1);
       if ($35) {
        HEAP32[$__e>>2] = 0;
        $190 = 0;
        label = 11;
        break;
       }
      }
      if ($22) {
       $191 = $23;$60 = $25;
      } else {
       $$lcssa = $21;
       label = 12;
       break L2;
      }
     }
    } while(0);
    if ((label|0) == 11) {
     label = 0;
     if ($22) {
      $$lcssa = $21;
      label = 12;
      break;
     } else {
      $191 = 0;$60 = $190;
     }
    }
    $36 = HEAP8[$$0$ph86>>0]|0;
    $37 = HEAP32[$4>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_iiii[$39 & 31]($4,$36,0)|0);
    $41 = ($40<<24>>24)==(37);
    L18: do {
     if ($41) {
      $42 = ((($$0$ph86)) + 1|0);
      $43 = ($42|0)==($__fmte|0);
      if ($43) {
       $$lcssa94 = $21;
       label = 15;
       break L2;
      }
      $44 = HEAP8[$42>>0]|0;
      $45 = HEAP32[$4>>2]|0;
      $46 = ((($45)) + 36|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = (FUNCTION_TABLE_iiii[$47 & 31]($4,$44,0)|0);
      if ((($48<<24>>24) == 48) | (($48<<24>>24) == 69)) {
       $49 = ((($$0$ph86)) + 2|0);
       $50 = ($49|0)==($__fmte|0);
       if ($50) {
        $$lcssa95 = $21;
        label = 18;
        break L2;
       }
       $51 = HEAP8[$49>>0]|0;
       $52 = HEAP32[$4>>2]|0;
       $53 = ((($52)) + 36|0);
       $54 = HEAP32[$53>>2]|0;
       $55 = (FUNCTION_TABLE_iiii[$54 & 31]($4,$51,0)|0);
       $63 = $42;$__cmd$0 = $55;$__opt$0 = $48;
      } else {
       $63 = $$0$ph86;$__cmd$0 = $48;$__opt$0 = 0;
      }
      $56 = HEAP32[$this>>2]|0;
      $57 = ((($56)) + 36|0);
      $58 = HEAP32[$57>>2]|0;
      HEAP32[$1>>2] = $59;
      HEAP32[$2>>2] = $60;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $61 = (FUNCTION_TABLE_iiiiiiiii[$58 & 15]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $61;
      $62 = ((($63)) + 2|0);
      $$0$ph$be = $62;
     } else {
      $67 = HEAP8[$$0$ph86>>0]|0;
      $isascii1$i = ($67<<24>>24)>(-1);
      if ($isascii1$i) {
       $68 = $67 << 24 >> 24;
       $69 = HEAP32[$5>>2]|0;
       $70 = (($69) + ($68<<1)|0);
       $71 = HEAP16[$70>>1]|0;
       $72 = $71 & 8192;
       $73 = ($72<<16>>16)==(0);
       if (!($73)) {
        $$0$pn = $$0$ph86;
        while(1) {
         $$2 = ((($$0$pn)) + 1|0);
         $74 = ($$2|0)==($__fmte|0);
         if ($74) {
          $$2$lcssa = $__fmte;
          break;
         }
         $75 = HEAP8[$$2>>0]|0;
         $isascii1$i5 = ($75<<24>>24)>(-1);
         if (!($isascii1$i5)) {
          $$2$lcssa = $$2;
          break;
         }
         $76 = $75 << 24 >> 24;
         $77 = (($69) + ($76<<1)|0);
         $78 = HEAP16[$77>>1]|0;
         $79 = $78 & 8192;
         $80 = ($79<<16>>16)==(0);
         if ($80) {
          $$2$lcssa = $$2;
          break;
         } else {
          $$0$pn = $$2;
         }
        }
        $$pre$i$i$i17 = $21;$$pre$i2$i$i21 = $191;$94 = $191;
        while(1) {
         $81 = ($$pre$i$i$i17|0)==(0|0);
         if ($81) {
          $92 = 0;
         } else {
          $82 = ((($$pre$i$i$i17)) + 12|0);
          $83 = HEAP32[$82>>2]|0;
          $84 = ((($$pre$i$i$i17)) + 16|0);
          $85 = HEAP32[$84>>2]|0;
          $86 = ($83|0)==($85|0);
          if ($86) {
           $87 = HEAP32[$$pre$i$i$i17>>2]|0;
           $88 = ((($87)) + 36|0);
           $89 = HEAP32[$88>>2]|0;
           $90 = (FUNCTION_TABLE_ii[$89 & 63]($$pre$i$i$i17)|0);
           $91 = ($90|0)==(-1);
           if ($91) {
            HEAP32[$__b>>2] = 0;
            $92 = 0;
           } else {
            $92 = $$pre$i$i$i17;
           }
          } else {
           $92 = $$pre$i$i$i17;
          }
         }
         $93 = ($92|0)==(0|0);
         $95 = ($94|0)==(0|0);
         do {
          if ($95) {
           $$pre$i2$i$i2140 = $$pre$i2$i$i21;
           label = 37;
          } else {
           $96 = ((($94)) + 12|0);
           $97 = HEAP32[$96>>2]|0;
           $98 = ((($94)) + 16|0);
           $99 = HEAP32[$98>>2]|0;
           $100 = ($97|0)==($99|0);
           if (!($100)) {
            if ($93) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$192 = $94;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L18;
            }
           }
           $101 = HEAP32[$94>>2]|0;
           $102 = ((($101)) + 36|0);
           $103 = HEAP32[$102>>2]|0;
           $104 = (FUNCTION_TABLE_ii[$103 & 63]($94)|0);
           $105 = ($104|0)==(-1);
           if ($105) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i2140 = 0;
            label = 37;
            break;
           } else {
            $106 = ($$pre$i2$i$i21|0)==(0|0);
            $tmp$i$i23 = $93 ^ $106;
            if ($tmp$i$i23) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$192 = $$pre$i2$i$i21;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L18;
            }
           }
          }
         } while(0);
         if ((label|0) == 37) {
          label = 0;
          if ($93) {
           $$0$ph$be = $$2$lcssa;
           break L18;
          } else {
           $$pre$i2$i$i2139 = $$pre$i2$i$i2140;$192 = 0;
          }
         }
         $107 = ((($92)) + 12|0);
         $108 = HEAP32[$107>>2]|0;
         $109 = ((($92)) + 16|0);
         $110 = HEAP32[$109>>2]|0;
         $111 = ($108|0)==($110|0);
         if ($111) {
          $112 = HEAP32[$92>>2]|0;
          $113 = ((($112)) + 36|0);
          $114 = HEAP32[$113>>2]|0;
          $115 = (FUNCTION_TABLE_ii[$114 & 63]($92)|0);
          $$0$i$i = $115;
         } else {
          $116 = HEAP8[$108>>0]|0;
          $117 = $116&255;
          $$0$i$i = $117;
         }
         $118 = $$0$i$i&255;
         $isascii1$i24 = ($118<<24>>24)>(-1);
         if (!($isascii1$i24)) {
          $$0$ph$be = $$2$lcssa;
          break L18;
         }
         $sext = $$0$i$i << 24;
         $119 = $sext >> 24;
         $120 = HEAP32[$5>>2]|0;
         $121 = (($120) + ($119<<1)|0);
         $122 = HEAP16[$121>>1]|0;
         $123 = $122 & 8192;
         $124 = ($123<<16>>16)==(0);
         if ($124) {
          $$0$ph$be = $$2$lcssa;
          break L18;
         }
         $125 = HEAP32[$107>>2]|0;
         $126 = HEAP32[$109>>2]|0;
         $127 = ($125|0)==($126|0);
         if ($127) {
          $128 = HEAP32[$92>>2]|0;
          $129 = ((($128)) + 40|0);
          $130 = HEAP32[$129>>2]|0;
          (FUNCTION_TABLE_ii[$130 & 63]($92)|0);
          $$pre$i$i$i17 = $92;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$94 = $192;
          continue;
         } else {
          $131 = ((($125)) + 1|0);
          HEAP32[$107>>2] = $131;
          $$pre$i$i$i17 = $92;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$94 = $192;
          continue;
         }
        }
       }
      }
      $132 = ((($21)) + 12|0);
      $133 = HEAP32[$132>>2]|0;
      $134 = ((($21)) + 16|0);
      $135 = HEAP32[$134>>2]|0;
      $136 = ($133|0)==($135|0);
      if ($136) {
       $137 = HEAP32[$21>>2]|0;
       $138 = ((($137)) + 36|0);
       $139 = HEAP32[$138>>2]|0;
       $140 = (FUNCTION_TABLE_ii[$139 & 63]($21)|0);
       $$0$i$i26 = $140;
      } else {
       $141 = HEAP8[$133>>0]|0;
       $142 = $141&255;
       $$0$i$i26 = $142;
      }
      $143 = $$0$i$i26&255;
      $144 = HEAP32[$4>>2]|0;
      $145 = ((($144)) + 12|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = (FUNCTION_TABLE_iii[$146 & 15]($4,$143)|0);
      $148 = HEAP8[$$0$ph86>>0]|0;
      $149 = HEAP32[$4>>2]|0;
      $150 = ((($149)) + 12|0);
      $151 = HEAP32[$150>>2]|0;
      $152 = (FUNCTION_TABLE_iii[$151 & 15]($4,$148)|0);
      $153 = ($147<<24>>24)==($152<<24>>24);
      if (!($153)) {
       label = 55;
       break L2;
      }
      $154 = HEAP32[$132>>2]|0;
      $155 = HEAP32[$134>>2]|0;
      $156 = ($154|0)==($155|0);
      if ($156) {
       $157 = HEAP32[$21>>2]|0;
       $158 = ((($157)) + 40|0);
       $159 = HEAP32[$158>>2]|0;
       (FUNCTION_TABLE_ii[$159 & 63]($21)|0);
      } else {
       $160 = ((($154)) + 1|0);
       HEAP32[$132>>2] = $160;
      }
      $161 = ((($$0$ph86)) + 1|0);
      $$0$ph$be = $161;
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $64 = ($$0$ph$be|0)!=($__fmte|0);
    $65 = ($$pre$pre|0)==(0);
    $or$cond84 = $64 & $65;
    $66 = HEAP32[$__b>>2]|0;
    if ($or$cond84) {
     $$0$ph86 = $$0$ph$be;$8 = $66;
    } else {
     $$pre$i$i$i8 = $66;
     break L1;
    }
   }
   if ((label|0) == 12) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa;
    break;
   }
   else if ((label|0) == 15) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa94;
    break;
   }
   else if ((label|0) == 18) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa95;
    break;
   }
   else if ((label|0) == 55) {
    HEAP32[$__err>>2] = 4;
    $162 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i8 = $162;
    break;
   }
  }
 } while(0);
 $163 = ($$pre$i$i$i8|0)==(0|0);
 if ($163) {
  $174 = 0;
 } else {
  $164 = ((($$pre$i$i$i8)) + 12|0);
  $165 = HEAP32[$164>>2]|0;
  $166 = ((($$pre$i$i$i8)) + 16|0);
  $167 = HEAP32[$166>>2]|0;
  $168 = ($165|0)==($167|0);
  if ($168) {
   $169 = HEAP32[$$pre$i$i$i8>>2]|0;
   $170 = ((($169)) + 36|0);
   $171 = HEAP32[$170>>2]|0;
   $172 = (FUNCTION_TABLE_ii[$171 & 63]($$pre$i$i$i8)|0);
   $173 = ($172|0)==(-1);
   if ($173) {
    HEAP32[$__b>>2] = 0;
    $174 = 0;
   } else {
    $174 = $$pre$i$i$i8;
   }
  } else {
   $174 = $$pre$i$i$i8;
  }
 }
 $175 = ($174|0)==(0|0);
 $176 = HEAP32[$__e>>2]|0;
 $177 = ($176|0)==(0|0);
 do {
  if ($177) {
   label = 65;
  } else {
   $178 = ((($176)) + 12|0);
   $179 = HEAP32[$178>>2]|0;
   $180 = ((($176)) + 16|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = ($179|0)==($181|0);
   if ($182) {
    $183 = HEAP32[$176>>2]|0;
    $184 = ((($183)) + 36|0);
    $185 = HEAP32[$184>>2]|0;
    $186 = (FUNCTION_TABLE_ii[$185 & 63]($176)|0);
    $187 = ($186|0)==(-1);
    if ($187) {
     HEAP32[$__e>>2] = 0;
     label = 65;
     break;
    }
   }
   if (!($175)) {
    label = 66;
   }
  }
 } while(0);
 if ((label|0) == 65) {
  if ($175) {
   label = 66;
  }
 }
 if ((label|0) == 66) {
  $188 = HEAP32[$__err>>2]|0;
  $189 = $188 | 2;
  HEAP32[$__err>>2] = $189;
 }
 STACKTOP = sp;return ($174|0);
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,9208,(9216))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 63]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 1|0);
 $15 = $11 ? $14 : $13;
 $16 = ((($6)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $9&255;
 $19 = $18 >>> 1;
 $20 = $11 ? $19 : $17;
 $21 = (($15) + ($20)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $22 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$21)|0);
 STACKTOP = sp;return ($22|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 24|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 63]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 16|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 20|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy30 = sp + 132|0;
 $$byval_copy26 = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 $34 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6168)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $35 = $__fmt << 24 >> 24;
 do {
  switch ($35|0) {
  case 88:  {
   $100 = ((($this)) + 8|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = ((($101)) + 24|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = (FUNCTION_TABLE_ii[$103 & 63]($100)|0);
   $105 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $105;
   $106 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $106;
   $107 = HEAP8[$104>>0]|0;
   $108 = $107 & 1;
   $109 = ($108<<24>>24)==(0);
   $110 = ((($104)) + 8|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = ((($104)) + 1|0);
   $113 = $109 ? $112 : $111;
   $114 = ((($104)) + 4|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = $107&255;
   $117 = $116 >>> 1;
   $118 = $109 ? $117 : $115;
   $119 = (($113) + ($118)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$29>>2]|0;
   $120 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$113,$119)|0);
   HEAP32[$__b>>2] = $120;
   label = 26;
   break;
  }
  case 65: case 97:  {
   $36 = ((($__tm)) + 24|0);
   $37 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $37;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$36,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 82:  {
   $85 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $85;
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $86;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$21>>2]|0;
   $87 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9248,(9253))|0);
   HEAP32[$__b>>2] = $87;
   label = 26;
   break;
  }
  case 121:  {
   $121 = ((($__tm)) + 20|0);
   $122 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $122;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$121,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 119:  {
   $92 = ((($__tm)) + 24|0);
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $93;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$92,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 106:  {
   $73 = ((($__tm)) + 28|0);
   $74 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $74;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$73,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 77:  {
   $77 = ((($__tm)) + 4|0);
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $78;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$77,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 83:  {
   $88 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $88;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__tm,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 112:  {
   $80 = ((($__tm)) + 8|0);
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $81;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$80,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 120:  {
   $94 = HEAP32[$this>>2]|0;
   $95 = ((($94)) + 20|0);
   $96 = HEAP32[$95>>2]|0;
   $97 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $97;
   $98 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $98;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$27>>2]|0;
   $99 = (FUNCTION_TABLE_iiiiiii[$96 & 63]($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $99;
   break;
  }
  case 84:  {
   $89 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $89;
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $90;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$24>>2]|0;
   $91 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9256,(9264))|0);
   HEAP32[$__b>>2] = $91;
   label = 26;
   break;
  }
  case 114:  {
   $82 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $82;
   $83 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $83;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$19>>2]|0;
   $84 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9232,(9243))|0);
   HEAP32[$__b>>2] = $84;
   label = 26;
   break;
  }
  case 116: case 110:  {
   $79 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $79;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 101: case 100:  {
   $61 = ((($__tm)) + 12|0);
   $62 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $62;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$61,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 109:  {
   $75 = ((($__tm)) + 16|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $76;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$75,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 72:  {
   $69 = ((($__tm)) + 8|0);
   $70 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $70;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$69,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 70:  {
   $66 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $66;
   $67 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $67;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$10>>2]|0;
   $68 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9224,(9232))|0);
   HEAP32[$__b>>2] = $68;
   label = 26;
   break;
  }
  case 99:  {
   $40 = ((($this)) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($41)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_ii[$43 & 63]($40)|0);
   $45 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $45;
   $46 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $46;
   $47 = HEAP8[$44>>0]|0;
   $48 = $47 & 1;
   $49 = ($48<<24>>24)==(0);
   $50 = ((($44)) + 8|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($44)) + 1|0);
   $53 = $49 ? $52 : $51;
   $54 = ((($44)) + 4|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = $47&255;
   $57 = $56 >>> 1;
   $58 = $49 ? $57 : $55;
   $59 = (($53) + ($58)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$5>>2]|0;
   $60 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$53,$59)|0);
   HEAP32[$__b>>2] = $60;
   label = 26;
   break;
  }
  case 68:  {
   $63 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $63;
   $64 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $64;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$8>>2]|0;
   $65 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9216,(9224))|0);
   HEAP32[$__b>>2] = $65;
   label = 26;
   break;
  }
  case 37:  {
   $125 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $125;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 73:  {
   $71 = ((($__tm)) + 8|0);
   $72 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $72;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$71,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 89:  {
   $123 = ((($__tm)) + 20|0);
   $124 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $124;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$123,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 104: case 66: case 98:  {
   $38 = ((($__tm)) + 16|0);
   $39 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $39;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$38,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  default: {
   $126 = HEAP32[$__err>>2]|0;
   $127 = $126 | 4;
   HEAP32[$__err>>2] = $127;
   label = 26;
  }
  }
 } while(0);
 if ((label|0) == 26) {
  $128 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $128;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__ct)) + 8|0);
 L1: while(1) {
  $1 = HEAP32[$__b>>2]|0;
  $2 = ($1|0)==(0|0);
  do {
   if ($2) {
    $13 = 0;
   } else {
    $3 = ((($1)) + 12|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = ((($1)) + 16|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($4|0)==($6|0);
    if ($7) {
     $8 = HEAP32[$1>>2]|0;
     $9 = ((($8)) + 36|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 63]($1)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      HEAP32[$__b>>2] = 0;
      $13 = 0;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $13 = $$pre$i$i$i;
      break;
     }
    } else {
     $13 = $1;
    }
   }
  } while(0);
  $14 = ($13|0)==(0|0);
  $15 = HEAP32[$__e>>2]|0;
  $16 = ($15|0)==(0|0);
  do {
   if ($16) {
    label = 12;
   } else {
    $17 = ((($15)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($15)) + 16|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($18|0)==($20|0);
    if (!($21)) {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
    $22 = HEAP32[$15>>2]|0;
    $23 = ((($22)) + 36|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (FUNCTION_TABLE_ii[$24 & 63]($15)|0);
    $26 = ($25|0)==(-1);
    if ($26) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else {
    $83 = 0;
   }
  }
  $27 = HEAP32[$__b>>2]|0;
  $28 = ((($27)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($27)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $33 = HEAP32[$27>>2]|0;
   $34 = ((($33)) + 36|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (FUNCTION_TABLE_ii[$35 & 63]($27)|0);
   $$0$i$i = $36;
  } else {
   $37 = HEAP8[$29>>0]|0;
   $38 = $37&255;
   $$0$i$i = $38;
  }
  $39 = $$0$i$i&255;
  $isascii1$i = ($39<<24>>24)>(-1);
  if (!($isascii1$i)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = HEAP32[$0>>2]|0;
  $42 = (($41) + ($40<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 8192;
  $45 = ($44<<16>>16)==(0);
  if ($45) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b>>2]|0;
  $47 = ((($46)) + 12|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($46)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($48|0)==($50|0);
  if ($51) {
   $52 = HEAP32[$46>>2]|0;
   $53 = ((($52)) + 40|0);
   $54 = HEAP32[$53>>2]|0;
   (FUNCTION_TABLE_ii[$54 & 63]($46)|0);
   continue;
  } else {
   $55 = ((($48)) + 1|0);
   HEAP32[$47>>2] = $55;
   continue;
  }
 }
 $56 = HEAP32[$__b>>2]|0;
 $57 = ($56|0)==(0|0);
 do {
  if ($57) {
   $68 = 0;
  } else {
   $58 = ((($56)) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($56)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$56>>2]|0;
    $64 = ((($63)) + 36|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_ii[$65 & 63]($56)|0);
    $67 = ($66|0)==(-1);
    if ($67) {
     HEAP32[$__b>>2] = 0;
     $68 = 0;
     break;
    } else {
     $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
     $68 = $$pre$i$i$i2;
     break;
    }
   } else {
    $68 = $56;
   }
  }
 } while(0);
 $69 = ($68|0)==(0|0);
 $70 = ($$pre$i2$i$i6|0)==(0|0);
 do {
  if ($70) {
   label = 32;
  } else {
   $71 = ((($$pre$i2$i$i6)) + 12|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ((($$pre$i2$i$i6)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($72|0)==($74|0);
   if ($75) {
    $76 = HEAP32[$$pre$i2$i$i6>>2]|0;
    $77 = ((($76)) + 36|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_ii[$78 & 63]($$pre$i2$i$i6)|0);
    $80 = ($79|0)==(-1);
    if ($80) {
     HEAP32[$__e>>2] = 0;
     label = 32;
     break;
    }
   }
   if (!($69)) {
    label = 33;
   }
  }
 } while(0);
 if ((label|0) == 32) {
  if ($69) {
   label = 33;
  }
 }
 if ((label|0) == 33) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i611 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 63]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $$pre$i2$i$i611 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $$pre$i2$i$i611 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $41 = HEAP32[$__ct>>2]|0;
   $42 = ((($41)) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 31]($__ct,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if (!($45)) {
    $46 = HEAP32[$__err>>2]|0;
    $47 = $46 | 4;
    HEAP32[$__err>>2] = $47;
    break;
   }
   $48 = HEAP32[$__b>>2]|0;
   $49 = ((($48)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($48)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $55 = HEAP32[$48>>2]|0;
    $56 = ((($55)) + 40|0);
    $57 = HEAP32[$56>>2]|0;
    (FUNCTION_TABLE_ii[$57 & 63]($48)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $58 = ($$pre|0)==(0|0);
    if ($58) {
     $70 = 0;
    } else {
     $60 = $$pre;
     label = 21;
    }
   } else {
    $54 = ((($50)) + 1|0);
    HEAP32[$49>>2] = $54;
    $60 = $48;
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     $59 = ((($60)) + 12|0);
     $61 = HEAP32[$59>>2]|0;
     $62 = ((($60)) + 16|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($61|0)==($63|0);
     if ($64) {
      $65 = HEAP32[$60>>2]|0;
      $66 = ((($65)) + 36|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (FUNCTION_TABLE_ii[$67 & 63]($60)|0);
      $69 = ($68|0)==(-1);
      if ($69) {
       HEAP32[$__b>>2] = 0;
       $70 = 0;
       break;
      } else {
       $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
       $70 = $$pre$i$i$i2;
       break;
      }
     } else {
      $70 = $60;
     }
    }
   } while(0);
   $71 = ($70|0)==(0|0);
   $72 = ($$pre$i2$i$i611|0)==(0|0);
   do {
    if ($72) {
     label = 30;
    } else {
     $73 = ((($$pre$i2$i$i611)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($$pre$i2$i$i611)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$$pre$i2$i$i611>>2]|0;
      $79 = ((($78)) + 36|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 63]($$pre$i2$i$i611)|0);
      $82 = ($81|0)==(-1);
      if ($82) {
       HEAP32[$__e>>2] = 0;
       label = 30;
       break;
      }
     }
     if ($71) {
      break L16;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    if (!($71)) {
     break;
    }
   }
   $83 = HEAP32[$__err>>2]|0;
   $84 = $83 | 2;
   HEAP32[$__err>>2] = $84;
  }
 } while(0);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i$i$i5 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i11 = 0, $$0$i$i1$i$i26 = 0, $$0$i$i17 = 0, $$0$ph$be = 0, $$0$ph89 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$ph = 0, $$pre$i$i$i22 = 0;
 var $$pre$i$i$i7 = 0, $$pre$i3$i$i13 = 0, $$pre$i3$i$i1344 = 0, $$pre$i3$i$i1345 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $or$cond87 = 0, $phitmp$i4$i$i14 = 0, $tmp$i$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $5 = ($__fmtb|0)==($__fmte|0);
 $6 = HEAP32[$__b>>2]|0;
 L1: do {
  if ($5) {
   $$pre$i$i$i22 = $6;
  } else {
   $$0$ph89 = $__fmtb;$7 = $6;
   L2: while(1) {
    $8 = ($7|0)==(0|0);
    $9 = $7;
    if ($8) {
     $126 = 0;$183 = 1;$58 = $9;
    } else {
     $10 = ((($7)) + 12|0);
     $11 = HEAP32[$10>>2]|0;
     $12 = ((($7)) + 16|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ($11|0)==($13|0);
     if ($14) {
      $15 = HEAP32[$7>>2]|0;
      $16 = ((($15)) + 36|0);
      $17 = HEAP32[$16>>2]|0;
      $18 = (FUNCTION_TABLE_ii[$17 & 63]($7)|0);
      $$0$i$i$i$i = $18;
     } else {
      $19 = HEAP32[$11>>2]|0;
      $$0$i$i$i$i = $19;
     }
     $20 = ($$0$i$i$i$i|0)==(-1);
     if ($20) {
      HEAP32[$__b>>2] = 0;
      $126 = 0;$183 = 1;$58 = 0;
     } else {
      $126 = $7;$183 = 0;$58 = $9;
     }
    }
    $21 = HEAP32[$__e>>2]|0;
    $22 = ($21|0)==(0|0);
    $23 = $21;
    do {
     if ($22) {
      $$ph = $23;
      label = 14;
     } else {
      $24 = ((($21)) + 12|0);
      $25 = HEAP32[$24>>2]|0;
      $26 = ((($21)) + 16|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ($25|0)==($27|0);
      if ($28) {
       $29 = HEAP32[$21>>2]|0;
       $30 = ((($29)) + 36|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = (FUNCTION_TABLE_ii[$31 & 63]($21)|0);
       $$0$i$i1$i$i = $32;
      } else {
       $33 = HEAP32[$25>>2]|0;
       $$0$i$i1$i$i = $33;
      }
      $34 = ($$0$i$i1$i$i|0)==(-1);
      if ($34) {
       HEAP32[$__e>>2] = 0;
       $$ph = 0;
       label = 14;
       break;
      } else {
       if ($183) {
        $184 = $21;$59 = $23;
        break;
       } else {
        $$lcssa = $126;
        label = 16;
        break L2;
       }
      }
     }
    } while(0);
    if ((label|0) == 14) {
     label = 0;
     if ($183) {
      $$lcssa = $126;
      label = 16;
      break;
     } else {
      $184 = 0;$59 = $$ph;
     }
    }
    $35 = HEAP32[$$0$ph89>>2]|0;
    $36 = HEAP32[$4>>2]|0;
    $37 = ((($36)) + 52|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = (FUNCTION_TABLE_iiii[$38 & 31]($4,$35,0)|0);
    $40 = ($39<<24>>24)==(37);
    L24: do {
     if ($40) {
      $41 = ((($$0$ph89)) + 4|0);
      $42 = ($41|0)==($__fmte|0);
      if ($42) {
       $$lcssa97 = $126;
       label = 19;
       break L2;
      }
      $43 = HEAP32[$41>>2]|0;
      $44 = HEAP32[$4>>2]|0;
      $45 = ((($44)) + 52|0);
      $46 = HEAP32[$45>>2]|0;
      $47 = (FUNCTION_TABLE_iiii[$46 & 31]($4,$43,0)|0);
      if ((($47<<24>>24) == 48) | (($47<<24>>24) == 69)) {
       $48 = ((($$0$ph89)) + 8|0);
       $49 = ($48|0)==($__fmte|0);
       if ($49) {
        $$lcssa98 = $126;
        label = 22;
        break L2;
       }
       $50 = HEAP32[$48>>2]|0;
       $51 = HEAP32[$4>>2]|0;
       $52 = ((($51)) + 52|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = (FUNCTION_TABLE_iiii[$53 & 31]($4,$50,0)|0);
       $62 = $41;$__cmd$0 = $54;$__opt$0 = $47;
      } else {
       $62 = $$0$ph89;$__cmd$0 = $47;$__opt$0 = 0;
      }
      $55 = HEAP32[$this>>2]|0;
      $56 = ((($55)) + 36|0);
      $57 = HEAP32[$56>>2]|0;
      HEAP32[$1>>2] = $58;
      HEAP32[$2>>2] = $59;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $60 = (FUNCTION_TABLE_iiiiiiiii[$57 & 15]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $60;
      $61 = ((($62)) + 8|0);
      $$0$ph$be = $61;
     } else {
      $66 = HEAP32[$$0$ph89>>2]|0;
      $67 = HEAP32[$4>>2]|0;
      $68 = ((($67)) + 12|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = (FUNCTION_TABLE_iiii[$69 & 31]($4,8192,$66)|0);
      if ($70) {
       $$0$pn = $$0$ph89;
      } else {
       $125 = ((($126)) + 12|0);
       $127 = HEAP32[$125>>2]|0;
       $128 = ((($126)) + 16|0);
       $129 = HEAP32[$128>>2]|0;
       $130 = ($127|0)==($129|0);
       if ($130) {
        $131 = HEAP32[$126>>2]|0;
        $132 = ((($131)) + 36|0);
        $133 = HEAP32[$132>>2]|0;
        $134 = (FUNCTION_TABLE_ii[$133 & 63]($126)|0);
        $$0$i$i17 = $134;
       } else {
        $135 = HEAP32[$127>>2]|0;
        $$0$i$i17 = $135;
       }
       $136 = HEAP32[$4>>2]|0;
       $137 = ((($136)) + 28|0);
       $138 = HEAP32[$137>>2]|0;
       $139 = (FUNCTION_TABLE_iii[$138 & 15]($4,$$0$i$i17)|0);
       $140 = HEAP32[$$0$ph89>>2]|0;
       $141 = HEAP32[$4>>2]|0;
       $142 = ((($141)) + 28|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = (FUNCTION_TABLE_iii[$143 & 15]($4,$140)|0);
       $145 = ($139|0)==($144|0);
       if (!($145)) {
        label = 59;
        break L2;
       }
       $146 = HEAP32[$125>>2]|0;
       $147 = HEAP32[$128>>2]|0;
       $148 = ($146|0)==($147|0);
       if ($148) {
        $149 = HEAP32[$126>>2]|0;
        $150 = ((($149)) + 40|0);
        $151 = HEAP32[$150>>2]|0;
        (FUNCTION_TABLE_ii[$151 & 63]($126)|0);
       } else {
        $152 = ((($146)) + 4|0);
        HEAP32[$125>>2] = $152;
       }
       $153 = ((($$0$ph89)) + 4|0);
       $$0$ph$be = $153;
       break;
      }
      while(1) {
       $$2 = ((($$0$pn)) + 4|0);
       $71 = ($$2|0)==($__fmte|0);
       if ($71) {
        $$2$lcssa = $__fmte;
        break;
       }
       $72 = HEAP32[$$2>>2]|0;
       $73 = HEAP32[$4>>2]|0;
       $74 = ((($73)) + 12|0);
       $75 = HEAP32[$74>>2]|0;
       $76 = (FUNCTION_TABLE_iiii[$75 & 31]($4,8192,$72)|0);
       if ($76) {
        $$0$pn = $$2;
       } else {
        $$2$lcssa = $$2;
        break;
       }
      }
      $$pre$i$i$i7 = $126;$$pre$i3$i$i13 = $184;$89 = $184;
      while(1) {
       $77 = ($$pre$i$i$i7|0)==(0|0);
       if ($77) {
        $102 = 1;$104 = 0;
       } else {
        $78 = ((($$pre$i$i$i7)) + 12|0);
        $79 = HEAP32[$78>>2]|0;
        $80 = ((($$pre$i$i$i7)) + 16|0);
        $81 = HEAP32[$80>>2]|0;
        $82 = ($79|0)==($81|0);
        if ($82) {
         $83 = HEAP32[$$pre$i$i$i7>>2]|0;
         $84 = ((($83)) + 36|0);
         $85 = HEAP32[$84>>2]|0;
         $86 = (FUNCTION_TABLE_ii[$85 & 63]($$pre$i$i$i7)|0);
         $$0$i$i$i$i5 = $86;
        } else {
         $87 = HEAP32[$79>>2]|0;
         $$0$i$i$i$i5 = $87;
        }
        $88 = ($$0$i$i$i$i5|0)==(-1);
        if ($88) {
         HEAP32[$__b>>2] = 0;
         $102 = 1;$104 = 0;
        } else {
         $102 = 0;$104 = $$pre$i$i$i7;
        }
       }
       $90 = ($89|0)==(0|0);
       do {
        if ($90) {
         $$pre$i3$i$i1345 = $$pre$i3$i$i13;
         label = 42;
        } else {
         $91 = ((($89)) + 12|0);
         $92 = HEAP32[$91>>2]|0;
         $93 = ((($89)) + 16|0);
         $94 = HEAP32[$93>>2]|0;
         $95 = ($92|0)==($94|0);
         if ($95) {
          $96 = HEAP32[$89>>2]|0;
          $97 = ((($96)) + 36|0);
          $98 = HEAP32[$97>>2]|0;
          $99 = (FUNCTION_TABLE_ii[$98 & 63]($89)|0);
          $$0$i$i1$i$i11 = $99;
         } else {
          $100 = HEAP32[$92>>2]|0;
          $$0$i$i1$i$i11 = $100;
         }
         $101 = ($$0$i$i1$i$i11|0)==(-1);
         if ($101) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i1345 = 0;
          label = 42;
          break;
         } else {
          $phitmp$i4$i$i14 = ($$pre$i3$i$i13|0)==(0|0);
          $tmp$i$i16 = $102 ^ $phitmp$i4$i$i14;
          if ($tmp$i$i16) {
           $$pre$i3$i$i1344 = $$pre$i3$i$i13;$185 = $$pre$i3$i$i13;
           break;
          } else {
           $$0$ph$be = $$2$lcssa;
           break L24;
          }
         }
        }
       } while(0);
       if ((label|0) == 42) {
        label = 0;
        if ($102) {
         $$0$ph$be = $$2$lcssa;
         break L24;
        } else {
         $$pre$i3$i$i1344 = $$pre$i3$i$i1345;$185 = 0;
        }
       }
       $103 = ((($104)) + 12|0);
       $105 = HEAP32[$103>>2]|0;
       $106 = ((($104)) + 16|0);
       $107 = HEAP32[$106>>2]|0;
       $108 = ($105|0)==($107|0);
       if ($108) {
        $109 = HEAP32[$104>>2]|0;
        $110 = ((($109)) + 36|0);
        $111 = HEAP32[$110>>2]|0;
        $112 = (FUNCTION_TABLE_ii[$111 & 63]($104)|0);
        $$0$i$i = $112;
       } else {
        $113 = HEAP32[$105>>2]|0;
        $$0$i$i = $113;
       }
       $114 = HEAP32[$4>>2]|0;
       $115 = ((($114)) + 12|0);
       $116 = HEAP32[$115>>2]|0;
       $117 = (FUNCTION_TABLE_iiii[$116 & 31]($4,8192,$$0$i$i)|0);
       if (!($117)) {
        $$0$ph$be = $$2$lcssa;
        break L24;
       }
       $118 = HEAP32[$103>>2]|0;
       $119 = HEAP32[$106>>2]|0;
       $120 = ($118|0)==($119|0);
       if ($120) {
        $121 = HEAP32[$104>>2]|0;
        $122 = ((($121)) + 40|0);
        $123 = HEAP32[$122>>2]|0;
        (FUNCTION_TABLE_ii[$123 & 63]($104)|0);
        $$pre$i$i$i7 = $104;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$89 = $185;
        continue;
       } else {
        $124 = ((($118)) + 4|0);
        HEAP32[$103>>2] = $124;
        $$pre$i$i$i7 = $104;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$89 = $185;
        continue;
       }
      }
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $63 = ($$0$ph$be|0)!=($__fmte|0);
    $64 = ($$pre$pre|0)==(0);
    $or$cond87 = $63 & $64;
    $65 = HEAP32[$__b>>2]|0;
    if ($or$cond87) {
     $$0$ph89 = $$0$ph$be;$7 = $65;
    } else {
     $$pre$i$i$i22 = $65;
     break L1;
    }
   }
   if ((label|0) == 16) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa;
    break;
   }
   else if ((label|0) == 19) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa97;
    break;
   }
   else if ((label|0) == 22) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa98;
    break;
   }
   else if ((label|0) == 59) {
    HEAP32[$__err>>2] = 4;
    $154 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i22 = $154;
    break;
   }
  }
 } while(0);
 $155 = ($$pre$i$i$i22|0)==(0|0);
 if ($155) {
  $182 = 0;$186 = 1;
 } else {
  $156 = ((($$pre$i$i$i22)) + 12|0);
  $157 = HEAP32[$156>>2]|0;
  $158 = ((($$pre$i$i$i22)) + 16|0);
  $159 = HEAP32[$158>>2]|0;
  $160 = ($157|0)==($159|0);
  if ($160) {
   $161 = HEAP32[$$pre$i$i$i22>>2]|0;
   $162 = ((($161)) + 36|0);
   $163 = HEAP32[$162>>2]|0;
   $164 = (FUNCTION_TABLE_ii[$163 & 63]($$pre$i$i$i22)|0);
   $$0$i$i$i$i20 = $164;
  } else {
   $165 = HEAP32[$157>>2]|0;
   $$0$i$i$i$i20 = $165;
  }
  $166 = ($$0$i$i$i$i20|0)==(-1);
  if ($166) {
   HEAP32[$__b>>2] = 0;
   $182 = 0;$186 = 1;
  } else {
   $182 = $$pre$i$i$i22;$186 = 0;
  }
 }
 $167 = HEAP32[$__e>>2]|0;
 $168 = ($167|0)==(0|0);
 do {
  if ($168) {
   label = 72;
  } else {
   $169 = ((($167)) + 12|0);
   $170 = HEAP32[$169>>2]|0;
   $171 = ((($167)) + 16|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = ($170|0)==($172|0);
   if ($173) {
    $174 = HEAP32[$167>>2]|0;
    $175 = ((($174)) + 36|0);
    $176 = HEAP32[$175>>2]|0;
    $177 = (FUNCTION_TABLE_ii[$176 & 63]($167)|0);
    $$0$i$i1$i$i26 = $177;
   } else {
    $178 = HEAP32[$170>>2]|0;
    $$0$i$i1$i$i26 = $178;
   }
   $179 = ($$0$i$i1$i$i26|0)==(-1);
   if ($179) {
    HEAP32[$__e>>2] = 0;
    label = 72;
    break;
   } else {
    if ($186) {
     break;
    } else {
     label = 74;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 72) {
  if ($186) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $180 = HEAP32[$__err>>2]|0;
  $181 = $180 | 2;
  HEAP32[$__err>>2] = $181;
 }
 STACKTOP = sp;return ($182|0);
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,9264,(9296))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 63]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 4|0);
 $15 = $11 ? $14 : $13;
 $16 = HEAP32[$14>>2]|0;
 $17 = $9&255;
 $18 = $17 >>> 1;
 $19 = $11 ? $18 : $16;
 $20 = (($15) + ($19<<2)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $21 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$20)|0);
 STACKTOP = sp;return ($21|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 24|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 63]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 16|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 20|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy30 = sp + 132|0;
 $$byval_copy26 = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 $34 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6160)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $35 = $__fmt << 24 >> 24;
 do {
  switch ($35|0) {
  case 104: case 66: case 98:  {
   $38 = ((($__tm)) + 16|0);
   $39 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $39;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$38,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 101: case 100:  {
   $60 = ((($__tm)) + 12|0);
   $61 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $61;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$60,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 82:  {
   $84 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $84;
   $85 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $85;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$21>>2]|0;
   $86 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9408,(9428))|0);
   HEAP32[$__b>>2] = $86;
   label = 26;
   break;
  }
  case 70:  {
   $65 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $65;
   $66 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $66;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$10>>2]|0;
   $67 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9328,(9360))|0);
   HEAP32[$__b>>2] = $67;
   label = 26;
   break;
  }
  case 89:  {
   $121 = ((($__tm)) + 20|0);
   $122 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $122;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$121,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 119:  {
   $91 = ((($__tm)) + 24|0);
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $92;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$91,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 65: case 97:  {
   $36 = ((($__tm)) + 24|0);
   $37 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $37;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$36,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 114:  {
   $81 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $81;
   $82 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $82;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$19>>2]|0;
   $83 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9360,(9404))|0);
   HEAP32[$__b>>2] = $83;
   label = 26;
   break;
  }
  case 77:  {
   $76 = ((($__tm)) + 4|0);
   $77 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $77;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$76,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 120:  {
   $93 = HEAP32[$this>>2]|0;
   $94 = ((($93)) + 20|0);
   $95 = HEAP32[$94>>2]|0;
   $96 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $96;
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $97;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$27>>2]|0;
   $98 = (FUNCTION_TABLE_iiiiiii[$95 & 63]($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $98;
   break;
  }
  case 106:  {
   $72 = ((($__tm)) + 28|0);
   $73 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $73;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$72,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 112:  {
   $79 = ((($__tm)) + 8|0);
   $80 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $80;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$79,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 88:  {
   $99 = ((($this)) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = ((($100)) + 24|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = (FUNCTION_TABLE_ii[$102 & 63]($99)|0);
   $104 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $104;
   $105 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $105;
   $106 = HEAP8[$103>>0]|0;
   $107 = $106 & 1;
   $108 = ($107<<24>>24)==(0);
   $109 = ((($103)) + 8|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = ((($103)) + 4|0);
   $112 = $108 ? $111 : $110;
   $113 = HEAP32[$111>>2]|0;
   $114 = $106&255;
   $115 = $114 >>> 1;
   $116 = $108 ? $115 : $113;
   $117 = (($112) + ($116<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$29>>2]|0;
   $118 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$112,$117)|0);
   HEAP32[$__b>>2] = $118;
   label = 26;
   break;
  }
  case 84:  {
   $88 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $88;
   $89 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $89;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$24>>2]|0;
   $90 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9432,(9464))|0);
   HEAP32[$__b>>2] = $90;
   label = 26;
   break;
  }
  case 72:  {
   $68 = ((($__tm)) + 8|0);
   $69 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $69;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$68,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 121:  {
   $119 = ((($__tm)) + 20|0);
   $120 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $120;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$119,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 73:  {
   $70 = ((($__tm)) + 8|0);
   $71 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $71;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$70,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 109:  {
   $74 = ((($__tm)) + 16|0);
   $75 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $75;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$74,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 116: case 110:  {
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $78;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 83:  {
   $87 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $87;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__tm,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 99:  {
   $40 = ((($this)) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($41)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_ii[$43 & 63]($40)|0);
   $45 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $45;
   $46 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $46;
   $47 = HEAP8[$44>>0]|0;
   $48 = $47 & 1;
   $49 = ($48<<24>>24)==(0);
   $50 = ((($44)) + 8|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($44)) + 4|0);
   $53 = $49 ? $52 : $51;
   $54 = HEAP32[$52>>2]|0;
   $55 = $47&255;
   $56 = $55 >>> 1;
   $57 = $49 ? $56 : $54;
   $58 = (($53) + ($57<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$5>>2]|0;
   $59 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$53,$58)|0);
   HEAP32[$__b>>2] = $59;
   label = 26;
   break;
  }
  case 37:  {
   $123 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $123;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 68:  {
   $62 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $62;
   $63 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $63;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$8>>2]|0;
   $64 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9296,(9328))|0);
   HEAP32[$__b>>2] = $64;
   label = 26;
   break;
  }
  default: {
   $124 = HEAP32[$__err>>2]|0;
   $125 = $124 | 4;
   HEAP32[$__err>>2] = $125;
   label = 26;
  }
  }
 } while(0);
 if ((label|0) == 26) {
  $126 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $126;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $0 = HEAP32[$__b>>2]|0;
  $1 = ($0|0)==(0|0);
  do {
   if ($1) {
    $78 = 1;
   } else {
    $2 = ((($0)) + 12|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = ((($0)) + 16|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($3|0)==($5|0);
    if ($6) {
     $7 = HEAP32[$0>>2]|0;
     $8 = ((($7)) + 36|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
     $$0$i$i$i$i = $10;
    } else {
     $11 = HEAP32[$3>>2]|0;
     $$0$i$i$i$i = $11;
    }
    $12 = ($$0$i$i$i$i|0)==(-1);
    if ($12) {
     HEAP32[$__b>>2] = 0;
     $78 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $78 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $13 = HEAP32[$__e>>2]|0;
  $14 = ($13|0)==(0|0);
  do {
   if ($14) {
    label = 15;
   } else {
    $15 = ((($13)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($13)) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)==($18|0);
    if ($19) {
     $20 = HEAP32[$13>>2]|0;
     $21 = ((($20)) + 36|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
     $$0$i$i1$i$i = $23;
    } else {
     $24 = HEAP32[$16>>2]|0;
     $$0$i$i1$i$i = $24;
    }
    $25 = ($$0$i$i1$i$i|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($78) {
      $79 = $13;
      break;
     } else {
      $$pre$i3$i$i9 = $13;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else {
    $79 = 0;
   }
  }
  $26 = HEAP32[$__b>>2]|0;
  $27 = ((($26)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ((($26)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($28|0)==($30|0);
  if ($31) {
   $32 = HEAP32[$26>>2]|0;
   $33 = ((($32)) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_ii[$34 & 63]($26)|0);
   $$0$i$i = $35;
  } else {
   $36 = HEAP32[$28>>2]|0;
   $$0$i$i = $36;
  }
  $37 = HEAP32[$__ct>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 31]($__ct,8192,$$0$i$i)|0);
  if (!($40)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b>>2]|0;
  $42 = ((($41)) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ((($41)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43|0)==($45|0);
  if ($46) {
   $47 = HEAP32[$41>>2]|0;
   $48 = ((($47)) + 40|0);
   $49 = HEAP32[$48>>2]|0;
   (FUNCTION_TABLE_ii[$49 & 63]($41)|0);
   continue;
  } else {
   $50 = ((($43)) + 4|0);
   HEAP32[$42>>2] = $50;
   continue;
  }
 }
 $51 = HEAP32[$__b>>2]|0;
 $52 = ($51|0)==(0|0);
 do {
  if ($52) {
   $80 = 1;
  } else {
   $53 = ((($51)) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($51)) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($54|0)==($56|0);
   if ($57) {
    $58 = HEAP32[$51>>2]|0;
    $59 = ((($58)) + 36|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_ii[$60 & 63]($51)|0);
    $$0$i$i$i$i1 = $61;
   } else {
    $62 = HEAP32[$54>>2]|0;
    $$0$i$i$i$i1 = $62;
   }
   $63 = ($$0$i$i$i$i1|0)==(-1);
   if ($63) {
    HEAP32[$__b>>2] = 0;
    $80 = 1;
    break;
   } else {
    $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
    $80 = $phitmp$i$i$i4;
    break;
   }
  }
 } while(0);
 $64 = ($$pre$i3$i$i9|0)==(0|0);
 do {
  if ($64) {
   label = 37;
  } else {
   $65 = ((($$pre$i3$i$i9)) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ((($$pre$i3$i$i9)) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$$pre$i3$i$i9>>2]|0;
    $71 = ((($70)) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i3$i$i9)|0);
    $$0$i$i1$i$i7 = $73;
   } else {
    $74 = HEAP32[$66>>2]|0;
    $$0$i$i1$i$i7 = $74;
   }
   $75 = ($$0$i$i1$i$i7|0)==(-1);
   if ($75) {
    HEAP32[$__e>>2] = 0;
    label = 37;
    break;
   } else {
    if ($80) {
     break;
    } else {
     label = 39;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($80) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $76 = HEAP32[$__err>>2]|0;
  $77 = $76 | 2;
  HEAP32[$__err>>2] = $77;
 }
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $83 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($83) {
     $$pre$i3$i$i915 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($83) {
   label = 16;
  } else {
   $$pre$i3$i$i915 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 52|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 31]($__ct,$$0$i$i,0)|0);
   $43 = ($42<<24>>24)==(37);
   if (!($43)) {
    $44 = HEAP32[$__err>>2]|0;
    $45 = $44 | 4;
    HEAP32[$__err>>2] = $45;
    break;
   }
   $46 = HEAP32[$__b>>2]|0;
   $47 = ((($46)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($46)) + 16|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)==($50|0);
   if ($51) {
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 40|0);
    $55 = HEAP32[$54>>2]|0;
    (FUNCTION_TABLE_ii[$55 & 63]($46)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $56 = ($$pre|0)==(0|0);
    if ($56) {
     $84 = 1;
    } else {
     $58 = $$pre;
     label = 25;
    }
   } else {
    $52 = ((($48)) + 4|0);
    HEAP32[$47>>2] = $52;
    $58 = $46;
    label = 25;
   }
   do {
    if ((label|0) == 25) {
     $57 = ((($58)) + 12|0);
     $59 = HEAP32[$57>>2]|0;
     $60 = ((($58)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$58>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 63]($58)|0);
      $$0$i$i$i$i1 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i$i$i1 = $67;
     }
     $68 = ($$0$i$i$i$i1|0)==(-1);
     if ($68) {
      HEAP32[$__b>>2] = 0;
      $84 = 1;
      break;
     } else {
      $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
      $84 = $phitmp$i$i$i4;
      break;
     }
    }
   } while(0);
   $69 = ($$pre$i3$i$i915|0)==(0|0);
   do {
    if ($69) {
     label = 37;
    } else {
     $70 = ((($$pre$i3$i$i915)) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($$pre$i3$i$i915)) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$$pre$i3$i$i915>>2]|0;
      $76 = ((($75)) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 63]($$pre$i3$i$i915)|0);
      $$0$i$i1$i$i7 = $78;
     } else {
      $79 = HEAP32[$71>>2]|0;
      $$0$i$i1$i$i7 = $79;
     }
     $80 = ($$0$i$i1$i$i7|0)==(-1);
     if ($80) {
      HEAP32[$__e>>2] = 0;
      label = 37;
      break;
     } else {
      if ($84) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 37) {
    if (!($84)) {
     break;
    }
   }
   $81 = HEAP32[$__err>>2]|0;
   $82 = $81 | 2;
   HEAP32[$__err>>2] = $82;
  }
 } while(0);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16__clocEv()|0);
 $2 = ($0|0)==($1|0);
 if (!($2)) {
  $3 = HEAP32[$this>>2]|0;
  _freelocale(($3|0));
 }
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$9 = $6;
  while(1) {
   $8 = HEAP8[$$0$i$i2>>0]|0;
   $10 = ($9|0)==(0|0);
   do {
    if ($10) {
     $25 = 0;
    } else {
     $11 = ((($9)) + 24|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($9)) + 28|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($12|0)==($14|0);
     if ($15) {
      $17 = HEAP32[$9>>2]|0;
      $18 = ((($17)) + 52|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = $8&255;
      $21 = (FUNCTION_TABLE_iii[$19 & 15]($9,$20)|0);
      $22 = ($21|0)==(-1);
      $$$i = $22 ? 0 : $9;
      $25 = $$$i;
      break;
     } else {
      $16 = ((($12)) + 1|0);
      HEAP32[$11>>2] = $16;
      HEAP8[$12>>0] = $8;
      $25 = $9;
      break;
     }
    }
   } while(0);
   $23 = ((($$0$i$i2)) + 1|0);
   $24 = ($23|0)==($4|0);
   if ($24) {
    $$lcssa = $25;
    break;
   } else {
    $$0$i$i2 = $23;$9 = $25;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = ((($fmt)) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = ((($fmt)) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = ((($fmt)) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $4;
 $6 = $__nb;
 $7 = (($5) - ($6))|0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (_strftime_l(($__nb|0),($7|0),($fmt|0),($__tm|0),($8|0))|0);
 $10 = (($__nb) + ($9)|0);
 HEAP32[$__ne>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i$i$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0;
 $__nar = sp + 8|0;
 $__ne = sp;
 $2 = ((($__nar)) + 400|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$9 = $6;
  while(1) {
   $8 = HEAP32[$$0$i$i2>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $24 = 0;
   } else {
    $11 = ((($9)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($9)) + 28|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($12|0)==($14|0);
    if ($15) {
     $16 = HEAP32[$9>>2]|0;
     $17 = ((($16)) + 52|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = (FUNCTION_TABLE_iii[$18 & 15]($9,$8)|0);
     $$0$i$i$i$i = $19;
    } else {
     $20 = ((($12)) + 4|0);
     HEAP32[$11>>2] = $20;
     HEAP32[$12>>2] = $8;
     $$0$i$i$i$i = $8;
    }
    $21 = ($$0$i$i$i$i|0)==(-1);
    $$$i = $21 ? 0 : $9;
    $24 = $$$i;
   }
   $22 = ((($$0$i$i2)) + 4|0);
   $23 = ($22|0)==($4|0);
   if ($23) {
    $$lcssa = $24;
    break;
   } else {
    $$0$i$i2 = $22;$9 = $24;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__wb = $__wb|0;
 $__we = $__we|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $__nar = sp + 16|0;
 $__ne = sp + 12|0;
 $mb = sp;
 $__nb = sp + 8|0;
 $0 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $0;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $1 = $mb;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[$__nb>>2] = $__nar;
 $5 = HEAP32[$__we>>2]|0;
 $6 = $5;
 $7 = $__wb;
 $8 = (($6) - ($7))|0;
 $9 = $8 >> 2;
 $10 = HEAP32[$this>>2]|0;
 $11 = (_uselocale(($10|0))|0);
 $12 = (_mbsrtowcs($__wb,$__nb,$9,$mb)|0);
 $13 = ($11|0)==(0|0);
 if (!($13)) {
  (_uselocale(($11|0))|0);
 }
 $14 = (($__wb) + ($12<<2)|0);
 HEAP32[$__we>>2] = $14;
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0$lcssa$i = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$25 = 0, $__neg = 0, $__w$04 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $$byval_copy = sp + 24|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 136|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 134|0;
 $0 = sp + 4|0;
 $__atoms = sp + 124|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 100|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 if ($9) {
  $10 = HEAP32[$5>>2]|0;
  $11 = ((($10)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 7]($5,9464,(9474),$__atoms)|0);
  $13 = HEAP32[$__wn>>2]|0;
  $14 = HEAP32[$__wb>>2]|0;
  $15 = $13;
  $16 = $14;
  $17 = (($15) - ($16))|0;
  $18 = ($17|0)>(98);
  if ($18) {
   $19 = (($17) + 2)|0;
   $20 = (_malloc($19)|0);
   $21 = $20;
   $22 = ($20|0)==(0|0);
   if ($22) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $50 = $21;$__nc$0 = $20;
   }
  } else {
   $50 = 0;$__nc$0 = $$byval_copy;
  }
  $23 = HEAP8[$__neg>>0]|0;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $__nc$1 = $__nc$0;
  } else {
   $25 = ((($__nc$0)) + 1|0);
   HEAP8[$__nc$0>>0] = 45;
   $__nc$1 = $25;
  }
  $26 = ((($__atoms)) + 10|0);
  $27 = $__atoms;
  $28 = ($14>>>0)<($13>>>0);
  if ($28) {
   $29 = ((($__atoms)) + 1|0);
   $30 = ((($29)) + 1|0);
   $31 = ((($30)) + 1|0);
   $32 = ((($31)) + 1|0);
   $33 = ((($32)) + 1|0);
   $34 = ((($33)) + 1|0);
   $35 = ((($34)) + 1|0);
   $36 = ((($35)) + 1|0);
   $37 = ((($36)) + 1|0);
   $__nc$25 = $__nc$1;$__w$04 = $14;
   while(1) {
    $38 = HEAP8[$__w$04>>0]|0;
    $39 = HEAP8[$__atoms>>0]|0;
    $40 = ($39<<24>>24)==($38<<24>>24);
    if ($40) {
     $$0$lcssa$i = $__atoms;
    } else {
     $41 = HEAP8[$29>>0]|0;
     $42 = ($41<<24>>24)==($38<<24>>24);
     if ($42) {
      $$0$lcssa$i = $29;
     } else {
      $86 = HEAP8[$30>>0]|0;
      $87 = ($86<<24>>24)==($38<<24>>24);
      if ($87) {
       $$0$lcssa$i = $30;
      } else {
       $88 = HEAP8[$31>>0]|0;
       $89 = ($88<<24>>24)==($38<<24>>24);
       if ($89) {
        $$0$lcssa$i = $31;
       } else {
        $90 = HEAP8[$32>>0]|0;
        $91 = ($90<<24>>24)==($38<<24>>24);
        if ($91) {
         $$0$lcssa$i = $32;
        } else {
         $92 = HEAP8[$33>>0]|0;
         $93 = ($92<<24>>24)==($38<<24>>24);
         if ($93) {
          $$0$lcssa$i = $33;
         } else {
          $94 = HEAP8[$34>>0]|0;
          $95 = ($94<<24>>24)==($38<<24>>24);
          if ($95) {
           $$0$lcssa$i = $34;
          } else {
           $96 = HEAP8[$35>>0]|0;
           $97 = ($96<<24>>24)==($38<<24>>24);
           if ($97) {
            $$0$lcssa$i = $35;
           } else {
            $98 = HEAP8[$36>>0]|0;
            $99 = ($98<<24>>24)==($38<<24>>24);
            if ($99) {
             $$0$lcssa$i = $36;
            } else {
             $100 = HEAP8[$37>>0]|0;
             $101 = ($100<<24>>24)==($38<<24>>24);
             $$ = $101 ? $37 : $26;
             $$0$lcssa$i = $$;
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $43 = $$0$lcssa$i;
    $44 = (($43) - ($27))|0;
    $45 = (9464 + ($44)|0);
    $46 = HEAP8[$45>>0]|0;
    HEAP8[$__nc$25>>0] = $46;
    $47 = ((($__w$04)) + 1|0);
    $48 = ((($__nc$25)) + 1|0);
    $$pre = HEAP32[$__wn>>2]|0;
    $49 = ($47>>>0)<($$pre>>>0);
    if ($49) {
     $__nc$25 = $48;$__w$04 = $47;
    } else {
     $__nc$2$lcssa = $48;
     break;
    }
   }
  } else {
   $__nc$2$lcssa = $__nc$1;
  }
  HEAP8[$__nc$2$lcssa>>0] = 0;
  HEAP32[$vararg_buffer>>2] = $__v;
  (_sscanf($$byval_copy,9480,$vararg_buffer)|0);
  $51 = ($50|0)==(0);
  if (!($51)) {
   $52 = $50;
   _free($52);
  }
 }
 $53 = HEAP32[$__b>>2]|0;
 $54 = ($53|0)==(0|0);
 do {
  if ($54) {
   $65 = 0;
  } else {
   $55 = ((($53)) + 12|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ((($53)) + 16|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ($56|0)==($58|0);
   if ($59) {
    $60 = HEAP32[$53>>2]|0;
    $61 = ((($60)) + 36|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = (FUNCTION_TABLE_ii[$62 & 63]($53)|0);
    $64 = ($63|0)==(-1);
    if ($64) {
     HEAP32[$__b>>2] = 0;
     $65 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $65 = $$pre$i$i$i;
     break;
    }
   } else {
    $65 = $53;
   }
  }
 } while(0);
 $66 = ($65|0)==(0|0);
 $67 = HEAP32[$__e>>2]|0;
 $68 = ($67|0)==(0|0);
 do {
  if ($68) {
   label = 25;
  } else {
   $69 = ((($67)) + 12|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ((($67)) + 16|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ($70|0)==($72|0);
   if ($73) {
    $74 = HEAP32[$67>>2]|0;
    $75 = ((($74)) + 36|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (FUNCTION_TABLE_ii[$76 & 63]($67)|0);
    $78 = ($77|0)==(-1);
    if ($78) {
     HEAP32[$__e>>2] = 0;
     label = 25;
     break;
    }
   }
   if (!($66)) {
    label = 26;
   }
  }
 } while(0);
 if ((label|0) == 25) {
  if ($66) {
   label = 26;
  }
 }
 if ((label|0) == 26) {
  $79 = HEAP32[$__err>>2]|0;
  $80 = $79 | 2;
  HEAP32[$__err>>2] = $80;
 }
 $81 = HEAP32[$__b>>2]|0;
 $82 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($82)|0);
 $83 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $84 = ($83|0)==(0|0);
 if (!($84)) {
  $85 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$85 & 127]($83);
 }
 STACKTOP = sp;return ($81|0);
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i103 = 0, $$0$i$i105 = 0, $$0$i$i120 = 0, $$0$i$i27 = 0, $$0$i$i37 = 0, $$0$i$i39 = 0, $$0$i$i49 = 0, $$0$i$i55 = 0, $$0$i$i59 = 0, $$0$i$i75 = 0, $$0$i$i87 = 0, $$0$i$i95 = 0, $$in241 = 0, $$lcssa = 0, $$lcssa176 = 0, $$lcssa223 = 0, $$lcssa224 = 0, $$ph = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert198 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i109 = 0, $$pre$i$i$i124 = 0, $$pre$i$i$i30 = 0, $$pre$i$i$i41 = 0, $$pre$i$i$i63 = 0, $$pre$i$i$i79 = 0, $$pre$i2$i$i113 = 0, $$pre$i2$i$i113183 = 0, $$pre$i2$i$i113185 = 0, $$pre$i2$i$i128192 = 0, $$pre$i2$i$i128193 = 0, $$pre$i2$i$i128246 = 0, $$pre$i2$i$i45 = 0, $$pre$i2$i$i45200 = 0, $$pre$i2$i$i45202 = 0, $$pre$i2$i$i67188$ph = 0;
 var $$pre$i2$i$i67188205 = 0, $$pre$i2$i$i67237 = 0, $$pre$i2$i$i83 = 0, $$pre186 = 0, $$pre187 = 0, $$pre190 = 0, $$pre191 = 0, $$pre195 = 0, $$pre196 = 0, $$pre197 = 0, $$pre199 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0;
 var $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0253 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0255 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0;
 var $cond = 0, $isascii1$i = 0, $isascii1$i101 = 0, $isascii1$i140 = 0, $isascii1$i51 = 0, $isascii1$i57 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond222 = 0, $or$cond7 = 0, $or$cond9 = 0, $sext = 0, $sext165 = 0, $sext166 = 0, $sext167 = 0, $switch = 0, $tmp$i$i115 = 0, $tmp$i$i130 = 0, $tmp$i$i47 = 0, $tmp$i$i69 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $0 = sp + 488|0;
 $__gbuf = sp + 88|0;
 $__gb = sp + 80|0;
 $__gn = sp + 72|0;
 $__ge = sp + 68|0;
 $__pat = sp + 496|0;
 $__dp = sp + 493|0;
 $__ts = sp + 492|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (107);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd);
 $14 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wn>>2] = $14;
 $15 = ((($__ct)) + 8|0);
 $16 = ((($__psn)) + 4|0);
 $17 = ((($__nsn)) + 4|0);
 $18 = ((($__nsn)) + 8|0);
 $19 = ((($__nsn)) + 1|0);
 $20 = ((($__psn)) + 8|0);
 $21 = ((($__psn)) + 1|0);
 $22 = $__flags & 512;
 $23 = ($22|0)!=(0);
 $24 = ((($__sym)) + 8|0);
 $25 = ((($__sym)) + 1|0);
 $26 = ((($__sym)) + 4|0);
 $27 = ((($__spaces)) + 4|0);
 $28 = ((($__spaces)) + 8|0);
 $29 = ((($__spaces)) + 1|0);
 $30 = ((($__pat)) + 3|0);
 $31 = ((($__grp)) + 4|0);
 $750 = $__gbuf;$__p$0253 = 0;$__trailing_sign$0255 = 0;
 L1: while(1) {
  $32 = HEAP32[$__b>>2]|0;
  $33 = ($32|0)==(0|0);
  do {
   if ($33) {
    $44 = 0;
   } else {
    $34 = ((($32)) + 12|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ((($32)) + 16|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($35|0)==($37|0);
    if ($38) {
     $39 = HEAP32[$32>>2]|0;
     $40 = ((($39)) + 36|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = (FUNCTION_TABLE_ii[$41 & 63]($32)|0);
     $43 = ($42|0)==(-1);
     if ($43) {
      HEAP32[$__b>>2] = 0;
      $44 = 0;
      break;
     } else {
      $$pre$i$i$i30 = HEAP32[$__b>>2]|0;
      $44 = $$pre$i$i$i30;
      break;
     }
    } else {
     $44 = $32;
    }
   }
  } while(0);
  $45 = ($44|0)==(0|0);
  $46 = HEAP32[$__e>>2]|0;
  $47 = ($46|0)==(0|0);
  do {
   if ($47) {
    label = 12;
   } else {
    $48 = ((($46)) + 12|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ((($46)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if (!($52)) {
     if ($45) {
      $751 = $46;
      break;
     } else {
      $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
      label = 202;
      break L1;
     }
    }
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 36|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (FUNCTION_TABLE_ii[$55 & 63]($46)|0);
    $57 = ($56|0)==(-1);
    if ($57) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($45) {
      $751 = $46;
      break;
     } else {
      $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
      label = 202;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($45) {
    $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
    label = 202;
    break;
   } else {
    $751 = 0;
   }
  }
  $58 = (($__pat) + ($__p$0253)|0);
  $59 = HEAP8[$58>>0]|0;
  $60 = $59 << 24 >> 24;
  L21: do {
   switch ($60|0) {
   case 3:  {
    $158 = HEAP8[$__psn>>0]|0;
    $159 = $158 & 1;
    $160 = ($159<<24>>24)==(0);
    $161 = HEAP32[$16>>2]|0;
    $162 = $158&255;
    $163 = $162 >>> 1;
    $164 = $160 ? $163 : $161;
    $165 = HEAP8[$__nsn>>0]|0;
    $166 = $165 & 1;
    $167 = ($166<<24>>24)==(0);
    $168 = HEAP32[$17>>2]|0;
    $169 = $165&255;
    $170 = $169 >>> 1;
    $171 = $167 ? $170 : $168;
    $172 = (0 - ($171))|0;
    $173 = ($164|0)==($172|0);
    if ($173) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $174 = ($164|0)==(0);
     $175 = ($171|0)==(0);
     $or$cond222 = $174 | $175;
     $176 = HEAP32[$__b>>2]|0;
     $177 = ((($176)) + 12|0);
     $178 = HEAP32[$177>>2]|0;
     $179 = ((($176)) + 16|0);
     $180 = HEAP32[$179>>2]|0;
     $181 = ($178|0)==($180|0);
     if ($or$cond222) {
      if ($181) {
       $182 = HEAP32[$176>>2]|0;
       $183 = ((($182)) + 36|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = (FUNCTION_TABLE_ii[$184 & 63]($176)|0);
       $$0$i$i87 = $185;
      } else {
       $186 = HEAP8[$178>>0]|0;
       $187 = $186&255;
       $$0$i$i87 = $187;
      }
      $188 = $$0$i$i87&255;
      if ($174) {
       $214 = HEAP8[$__nsn>>0]|0;
       $215 = $214 & 1;
       $216 = ($215<<24>>24)==(0);
       $217 = HEAP32[$18>>2]|0;
       $218 = $216 ? $19 : $217;
       $219 = HEAP8[$218>>0]|0;
       $220 = ($188<<24>>24)==($219<<24>>24);
       if (!($220)) {
        $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
        break L21;
       }
       $221 = HEAP32[$__b>>2]|0;
       $222 = ((($221)) + 12|0);
       $223 = HEAP32[$222>>2]|0;
       $224 = ((($221)) + 16|0);
       $225 = HEAP32[$224>>2]|0;
       $226 = ($223|0)==($225|0);
       if ($226) {
        $227 = HEAP32[$221>>2]|0;
        $228 = ((($227)) + 40|0);
        $229 = HEAP32[$228>>2]|0;
        (FUNCTION_TABLE_ii[$229 & 63]($221)|0);
       } else {
        $230 = ((($223)) + 1|0);
        HEAP32[$222>>2] = $230;
       }
       HEAP8[$__neg>>0] = 1;
       $231 = HEAP8[$__nsn>>0]|0;
       $232 = $231 & 1;
       $233 = ($232<<24>>24)==(0);
       $234 = HEAP32[$17>>2]|0;
       $235 = $231&255;
       $236 = $235 >>> 1;
       $237 = $233 ? $236 : $234;
       $238 = ($237>>>0)>(1);
       $__nsn$__trailing_sign$0 = $238 ? $__nsn : $__trailing_sign$0255;
       $752 = $750;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
       break L21;
      }
      $189 = HEAP8[$__psn>>0]|0;
      $190 = $189 & 1;
      $191 = ($190<<24>>24)==(0);
      $192 = HEAP32[$20>>2]|0;
      $193 = $191 ? $21 : $192;
      $194 = HEAP8[$193>>0]|0;
      $195 = ($188<<24>>24)==($194<<24>>24);
      if (!($195)) {
       HEAP8[$__neg>>0] = 1;
       $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
       break L21;
      }
      $196 = HEAP32[$__b>>2]|0;
      $197 = ((($196)) + 12|0);
      $198 = HEAP32[$197>>2]|0;
      $199 = ((($196)) + 16|0);
      $200 = HEAP32[$199>>2]|0;
      $201 = ($198|0)==($200|0);
      if ($201) {
       $202 = HEAP32[$196>>2]|0;
       $203 = ((($202)) + 40|0);
       $204 = HEAP32[$203>>2]|0;
       (FUNCTION_TABLE_ii[$204 & 63]($196)|0);
      } else {
       $205 = ((($198)) + 1|0);
       HEAP32[$197>>2] = $205;
      }
      $206 = HEAP8[$__psn>>0]|0;
      $207 = $206 & 1;
      $208 = ($207<<24>>24)==(0);
      $209 = HEAP32[$16>>2]|0;
      $210 = $206&255;
      $211 = $210 >>> 1;
      $212 = $208 ? $211 : $209;
      $213 = ($212>>>0)>(1);
      $__psn$__trailing_sign$0 = $213 ? $__psn : $__trailing_sign$0255;
      $752 = $750;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      break L21;
     }
     if ($181) {
      $239 = HEAP32[$176>>2]|0;
      $240 = ((($239)) + 36|0);
      $241 = HEAP32[$240>>2]|0;
      $242 = (FUNCTION_TABLE_ii[$241 & 63]($176)|0);
      $$pre195 = HEAP8[$__psn>>0]|0;
      $$pre196 = HEAP32[$__b>>2]|0;
      $$phi$trans$insert = ((($$pre196)) + 12|0);
      $$pre197 = HEAP32[$$phi$trans$insert>>2]|0;
      $$phi$trans$insert198 = ((($$pre196)) + 16|0);
      $$pre199 = HEAP32[$$phi$trans$insert198>>2]|0;
      $$0$i$i95 = $242;$247 = $$pre195;$254 = $$pre196;$255 = $$pre197;$257 = $$pre199;
     } else {
      $243 = HEAP8[$178>>0]|0;
      $244 = $243&255;
      $$0$i$i95 = $244;$247 = $158;$254 = $176;$255 = $178;$257 = $180;
     }
     $245 = $$0$i$i95&255;
     $246 = $247 & 1;
     $248 = ($246<<24>>24)==(0);
     $249 = HEAP32[$20>>2]|0;
     $250 = $248 ? $21 : $249;
     $251 = HEAP8[$250>>0]|0;
     $252 = ($245<<24>>24)==($251<<24>>24);
     $253 = ((($254)) + 12|0);
     $256 = ($255|0)==($257|0);
     if ($252) {
      if ($256) {
       $258 = HEAP32[$254>>2]|0;
       $259 = ((($258)) + 40|0);
       $260 = HEAP32[$259>>2]|0;
       (FUNCTION_TABLE_ii[$260 & 63]($254)|0);
      } else {
       $261 = ((($255)) + 1|0);
       HEAP32[$253>>2] = $261;
      }
      $262 = HEAP8[$__psn>>0]|0;
      $263 = $262 & 1;
      $264 = ($263<<24>>24)==(0);
      $265 = HEAP32[$16>>2]|0;
      $266 = $262&255;
      $267 = $266 >>> 1;
      $268 = $264 ? $267 : $265;
      $269 = ($268>>>0)>(1);
      $__psn$__trailing_sign$010 = $269 ? $__psn : $__trailing_sign$0255;
      $752 = $750;$__trailing_sign$1 = $__psn$__trailing_sign$010;
      break L21;
     }
     if ($256) {
      $270 = HEAP32[$254>>2]|0;
      $271 = ((($270)) + 36|0);
      $272 = HEAP32[$271>>2]|0;
      $273 = (FUNCTION_TABLE_ii[$272 & 63]($254)|0);
      $$0$i$i105 = $273;
     } else {
      $274 = HEAP8[$255>>0]|0;
      $275 = $274&255;
      $$0$i$i105 = $275;
     }
     $276 = $$0$i$i105&255;
     $277 = HEAP8[$__nsn>>0]|0;
     $278 = $277 & 1;
     $279 = ($278<<24>>24)==(0);
     $280 = HEAP32[$18>>2]|0;
     $281 = $279 ? $19 : $280;
     $282 = HEAP8[$281>>0]|0;
     $283 = ($276<<24>>24)==($282<<24>>24);
     if (!($283)) {
      label = 82;
      break L1;
     }
     $284 = HEAP32[$__b>>2]|0;
     $285 = ((($284)) + 12|0);
     $286 = HEAP32[$285>>2]|0;
     $287 = ((($284)) + 16|0);
     $288 = HEAP32[$287>>2]|0;
     $289 = ($286|0)==($288|0);
     if ($289) {
      $290 = HEAP32[$284>>2]|0;
      $291 = ((($290)) + 40|0);
      $292 = HEAP32[$291>>2]|0;
      (FUNCTION_TABLE_ii[$292 & 63]($284)|0);
     } else {
      $293 = ((($286)) + 1|0);
      HEAP32[$285>>2] = $293;
     }
     HEAP8[$__neg>>0] = 1;
     $294 = HEAP8[$__nsn>>0]|0;
     $295 = $294 & 1;
     $296 = ($295<<24>>24)==(0);
     $297 = HEAP32[$17>>2]|0;
     $298 = $294&255;
     $299 = $298 >>> 1;
     $300 = $296 ? $299 : $297;
     $301 = ($300>>>0)>(1);
     $__nsn$__trailing_sign$011 = $301 ? $__nsn : $__trailing_sign$0255;
     $752 = $750;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
    }
    break;
   }
   case 0:  {
    $97 = ($__p$0253|0)==(3);
    if ($97) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $$pre$i2$i$i45 = $751;$112 = $751;
     label = 28;
    }
    break;
   }
   case 2:  {
    $304 = ($__trailing_sign$0255|0)!=(0|0);
    $305 = ($__p$0253>>>0)<(2);
    $or$cond = $305 | $304;
    if (!($or$cond)) {
     $306 = ($__p$0253|0)==(2);
     $307 = HEAP8[$30>>0]|0;
     $308 = ($307<<24>>24)!=(0);
     $309 = $306 & $308;
     $brmerge = $23 | $309;
     if (!($brmerge)) {
      $752 = $750;$__trailing_sign$1 = 0;
      break L21;
     }
    }
    $310 = HEAP8[$__sym>>0]|0;
    $311 = $310 & 1;
    $312 = ($311<<24>>24)==(0);
    $313 = HEAP32[$24>>2]|0;
    $314 = $312 ? $25 : $313;
    $315 = $314;
    $316 = ($__p$0253|0)==(0);
    L71: do {
     if ($316) {
      $$ph = $315;
     } else {
      $327 = (($__p$0253) + -1)|0;
      $328 = (($__pat) + ($327)|0);
      $329 = HEAP8[$328>>0]|0;
      $switch = ($329&255)<(2);
      if ($switch) {
       $330 = HEAP32[$26>>2]|0;
       $331 = $310&255;
       $332 = $331 >>> 1;
       $333 = $312 ? $332 : $330;
       $334 = (($314) + ($333)|0);
       $335 = HEAP32[$15>>2]|0;
       $336 = ($333|0)==(0);
       L74: do {
        if ($336) {
         $$lcssa223 = $315;
        } else {
         $338 = $314;$754 = $315;
         while(1) {
          $337 = HEAP8[$338>>0]|0;
          $isascii1$i140 = ($337<<24>>24)>(-1);
          if (!($isascii1$i140)) {
           $$lcssa223 = $754;
           break L74;
          }
          $339 = $337 << 24 >> 24;
          $340 = (($335) + ($339<<1)|0);
          $341 = HEAP16[$340>>1]|0;
          $342 = $341 & 8192;
          $343 = ($342<<16>>16)==(0);
          if ($343) {
           $$lcssa223 = $754;
           break L74;
          }
          $344 = ((($338)) + 1|0);
          $345 = $344;
          $346 = ($344|0)==($334|0);
          if ($346) {
           $$lcssa223 = $345;
           break;
          } else {
           $338 = $344;$754 = $345;
          }
         }
        }
       } while(0);
       $347 = (($$lcssa223) - ($315))|0;
       $348 = HEAP8[$__spaces>>0]|0;
       $349 = $348 & 1;
       $350 = ($349<<24>>24)==(0);
       $351 = HEAP32[$27>>2]|0;
       $352 = $348&255;
       $353 = $352 >>> 1;
       $354 = $350 ? $353 : $351;
       $355 = ($354>>>0)<($347>>>0);
       if ($355) {
        $$ph = $315;
       } else {
        $356 = HEAP32[$28>>2]|0;
        $357 = $350 ? $29 : $356;
        $358 = (($357) + ($354)|0);
        $359 = ($$lcssa223|0)==($315|0);
        if ($359) {
         $$ph = $$lcssa223;
        } else {
         $$sum = (($354) - ($347))|0;
         $360 = (($357) + ($$sum)|0);
         $$in241 = $314;$362 = $360;
         while(1) {
          $361 = HEAP8[$362>>0]|0;
          $363 = HEAP8[$$in241>>0]|0;
          $364 = ($361<<24>>24)==($363<<24>>24);
          if (!($364)) {
           $$ph = $315;
           break L71;
          }
          $365 = ((($362)) + 1|0);
          $366 = ((($$in241)) + 1|0);
          $367 = ($365|0)==($358|0);
          if ($367) {
           $$ph = $$lcssa223;
           break;
          } else {
           $$in241 = $366;$362 = $365;
          }
         }
        }
       }
      } else {
       $$ph = $315;
      }
     }
    } while(0);
    $317 = $310 & 1;
    $318 = ($317<<24>>24)==(0);
    $319 = HEAP32[$26>>2]|0;
    $320 = $310&255;
    $321 = $320 >>> 1;
    $322 = $318 ? $25 : $313;
    $323 = $318 ? $321 : $319;
    $324 = (($322) + ($323)|0);
    $325 = $$ph;
    $326 = ($325|0)==($324|0);
    L86: do {
     if ($326) {
      $$lcssa176 = $324;
     } else {
      $$pre$i2$i$i128246 = $751;$382 = $751;$409 = $325;
      while(1) {
       $368 = HEAP32[$__b>>2]|0;
       $369 = ($368|0)==(0|0);
       do {
        if ($369) {
         $380 = 0;
        } else {
         $370 = ((($368)) + 12|0);
         $371 = HEAP32[$370>>2]|0;
         $372 = ((($368)) + 16|0);
         $373 = HEAP32[$372>>2]|0;
         $374 = ($371|0)==($373|0);
         if ($374) {
          $375 = HEAP32[$368>>2]|0;
          $376 = ((($375)) + 36|0);
          $377 = HEAP32[$376>>2]|0;
          $378 = (FUNCTION_TABLE_ii[$377 & 63]($368)|0);
          $379 = ($378|0)==(-1);
          if ($379) {
           HEAP32[$__b>>2] = 0;
           $380 = 0;
           break;
          } else {
           $$pre$i$i$i124 = HEAP32[$__b>>2]|0;
           $380 = $$pre$i$i$i124;
           break;
          }
         } else {
          $380 = $368;
         }
        }
       } while(0);
       $381 = ($380|0)==(0|0);
       $383 = ($382|0)==(0|0);
       do {
        if ($383) {
         $$pre$i2$i$i128193 = $$pre$i2$i$i128246;
         label = 107;
        } else {
         $384 = ((($382)) + 12|0);
         $385 = HEAP32[$384>>2]|0;
         $386 = ((($382)) + 16|0);
         $387 = HEAP32[$386>>2]|0;
         $388 = ($385|0)==($387|0);
         if (!($388)) {
          if ($381) {
           $$pre$i2$i$i128192 = $$pre$i2$i$i128246;$755 = $382;
           break;
          } else {
           $$lcssa176 = $409;
           break L86;
          }
         }
         $389 = HEAP32[$382>>2]|0;
         $390 = ((($389)) + 36|0);
         $391 = HEAP32[$390>>2]|0;
         $392 = (FUNCTION_TABLE_ii[$391 & 63]($382)|0);
         $393 = ($392|0)==(-1);
         if ($393) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i128193 = 0;
          label = 107;
          break;
         } else {
          $394 = ($$pre$i2$i$i128246|0)==(0|0);
          $tmp$i$i130 = $381 ^ $394;
          if ($tmp$i$i130) {
           $$pre$i2$i$i128192 = $$pre$i2$i$i128246;$755 = $$pre$i2$i$i128246;
           break;
          } else {
           $$lcssa176 = $409;
           break L86;
          }
         }
        }
       } while(0);
       if ((label|0) == 107) {
        label = 0;
        if ($381) {
         $$lcssa176 = $409;
         break L86;
        } else {
         $$pre$i2$i$i128192 = $$pre$i2$i$i128193;$755 = 0;
        }
       }
       $395 = HEAP32[$__b>>2]|0;
       $396 = ((($395)) + 12|0);
       $397 = HEAP32[$396>>2]|0;
       $398 = ((($395)) + 16|0);
       $399 = HEAP32[$398>>2]|0;
       $400 = ($397|0)==($399|0);
       if ($400) {
        $401 = HEAP32[$395>>2]|0;
        $402 = ((($401)) + 36|0);
        $403 = HEAP32[$402>>2]|0;
        $404 = (FUNCTION_TABLE_ii[$403 & 63]($395)|0);
        $$0$i$i120 = $404;
       } else {
        $405 = HEAP8[$397>>0]|0;
        $406 = $405&255;
        $$0$i$i120 = $406;
       }
       $407 = $$0$i$i120&255;
       $408 = HEAP8[$409>>0]|0;
       $410 = ($407<<24>>24)==($408<<24>>24);
       if (!($410)) {
        $$lcssa176 = $409;
        break L86;
       }
       $411 = HEAP32[$__b>>2]|0;
       $412 = ((($411)) + 12|0);
       $413 = HEAP32[$412>>2]|0;
       $414 = ((($411)) + 16|0);
       $415 = HEAP32[$414>>2]|0;
       $416 = ($413|0)==($415|0);
       if ($416) {
        $417 = HEAP32[$411>>2]|0;
        $418 = ((($417)) + 40|0);
        $419 = HEAP32[$418>>2]|0;
        (FUNCTION_TABLE_ii[$419 & 63]($411)|0);
       } else {
        $420 = ((($413)) + 1|0);
        HEAP32[$412>>2] = $420;
       }
       $421 = ((($409)) + 1|0);
       $$pre190 = HEAP8[$__sym>>0]|0;
       $$pre191 = HEAP32[$24>>2]|0;
       $422 = $$pre190 & 1;
       $423 = ($422<<24>>24)==(0);
       $424 = HEAP32[$26>>2]|0;
       $425 = $$pre190&255;
       $426 = $425 >>> 1;
       $427 = $423 ? $25 : $$pre191;
       $428 = $423 ? $426 : $424;
       $429 = (($427) + ($428)|0);
       $430 = ($421|0)==($429|0);
       if ($430) {
        $$lcssa176 = $429;
        break;
       } else {
        $$pre$i2$i$i128246 = $$pre$i2$i$i128192;$382 = $755;$409 = $421;
       }
      }
     }
    } while(0);
    if ($23) {
     $431 = HEAP8[$__sym>>0]|0;
     $432 = $431 & 1;
     $433 = ($432<<24>>24)==(0);
     $434 = HEAP32[$24>>2]|0;
     $435 = HEAP32[$26>>2]|0;
     $436 = $431&255;
     $437 = $436 >>> 1;
     $438 = $433 ? $25 : $434;
     $439 = $433 ? $437 : $435;
     $440 = (($438) + ($439)|0);
     $441 = ($$lcssa176|0)==($440|0);
     if ($441) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
     } else {
      label = 119;
      break L1;
     }
    } else {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    }
    break;
   }
   case 4:  {
    $61 = HEAP8[$__ts>>0]|0;
    $$pre$i2$i$i113 = $751;$458 = $751;$507 = $750;$__ng$0 = 0;
    L119: while(1) {
     $444 = HEAP32[$__b>>2]|0;
     $445 = ($444|0)==(0|0);
     do {
      if ($445) {
       $456 = 0;
      } else {
       $446 = ((($444)) + 12|0);
       $447 = HEAP32[$446>>2]|0;
       $448 = ((($444)) + 16|0);
       $449 = HEAP32[$448>>2]|0;
       $450 = ($447|0)==($449|0);
       if ($450) {
        $451 = HEAP32[$444>>2]|0;
        $452 = ((($451)) + 36|0);
        $453 = HEAP32[$452>>2]|0;
        $454 = (FUNCTION_TABLE_ii[$453 & 63]($444)|0);
        $455 = ($454|0)==(-1);
        if ($455) {
         HEAP32[$__b>>2] = 0;
         $456 = 0;
         break;
        } else {
         $$pre$i$i$i109 = HEAP32[$__b>>2]|0;
         $456 = $$pre$i$i$i109;
         break;
        }
       } else {
        $456 = $444;
       }
      }
     } while(0);
     $457 = ($456|0)==(0|0);
     $459 = ($458|0)==(0|0);
     do {
      if ($459) {
       $$pre$i2$i$i113183 = $$pre$i2$i$i113;
       label = 130;
      } else {
       $460 = ((($458)) + 12|0);
       $461 = HEAP32[$460>>2]|0;
       $462 = ((($458)) + 16|0);
       $463 = HEAP32[$462>>2]|0;
       $464 = ($461|0)==($463|0);
       if (!($464)) {
        if ($457) {
         $$pre$i2$i$i113185 = $$pre$i2$i$i113;$756 = $458;
         break;
        } else {
         $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113;$__ng$0$lcssa = $__ng$0;
         break L119;
        }
       }
       $465 = HEAP32[$458>>2]|0;
       $466 = ((($465)) + 36|0);
       $467 = HEAP32[$466>>2]|0;
       $468 = (FUNCTION_TABLE_ii[$467 & 63]($458)|0);
       $469 = ($468|0)==(-1);
       if ($469) {
        HEAP32[$__e>>2] = 0;
        $$pre$i2$i$i113183 = 0;
        label = 130;
        break;
       } else {
        $470 = ($$pre$i2$i$i113|0)==(0|0);
        $tmp$i$i115 = $457 ^ $470;
        if ($tmp$i$i115) {
         $$pre$i2$i$i113185 = $$pre$i2$i$i113;$756 = $$pre$i2$i$i113;
         break;
        } else {
         $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113;$__ng$0$lcssa = $__ng$0;
         break L119;
        }
       }
      }
     } while(0);
     if ((label|0) == 130) {
      label = 0;
      if ($457) {
       $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113183;$__ng$0$lcssa = $__ng$0;
       break;
      } else {
       $$pre$i2$i$i113185 = $$pre$i2$i$i113183;$756 = 0;
      }
     }
     $471 = HEAP32[$__b>>2]|0;
     $472 = ((($471)) + 12|0);
     $473 = HEAP32[$472>>2]|0;
     $474 = ((($471)) + 16|0);
     $475 = HEAP32[$474>>2]|0;
     $476 = ($473|0)==($475|0);
     if ($476) {
      $477 = HEAP32[$471>>2]|0;
      $478 = ((($477)) + 36|0);
      $479 = HEAP32[$478>>2]|0;
      $480 = (FUNCTION_TABLE_ii[$479 & 63]($471)|0);
      $$0$i$i103 = $480;
     } else {
      $481 = HEAP8[$473>>0]|0;
      $482 = $481&255;
      $$0$i$i103 = $482;
     }
     $483 = $$0$i$i103&255;
     $isascii1$i101 = ($483<<24>>24)>(-1);
     if ($isascii1$i101) {
      $sext165 = $$0$i$i103 << 24;
      $484 = $sext165 >> 24;
      $485 = HEAP32[$15>>2]|0;
      $486 = (($485) + ($484<<1)|0);
      $487 = HEAP16[$486>>1]|0;
      $488 = $487 & 2048;
      $489 = ($488<<16>>16)==(0);
      if ($489) {
       label = 140;
      } else {
       $490 = HEAP32[$__wn>>2]|0;
       $491 = HEAP32[$0>>2]|0;
       $492 = ($490|0)==($491|0);
       if ($492) {
        __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
        $$pre = HEAP32[$__wn>>2]|0;
        $494 = $$pre;
       } else {
        $494 = $490;
       }
       $493 = ((($494)) + 1|0);
       HEAP32[$__wn>>2] = $493;
       HEAP8[$494>>0] = $483;
       $495 = (($__ng$0) + 1)|0;
       $757 = $507;$__ng$1 = $495;
      }
     } else {
      label = 140;
     }
     if ((label|0) == 140) {
      label = 0;
      $496 = HEAP8[$__grp>>0]|0;
      $497 = $496 & 1;
      $498 = ($497<<24>>24)==(0);
      $499 = HEAP32[$31>>2]|0;
      $500 = $496&255;
      $501 = $500 >>> 1;
      $502 = $498 ? $501 : $499;
      $503 = ($502|0)!=(0);
      $504 = ($__ng$0|0)!=(0);
      $or$cond7 = $504 & $503;
      $505 = ($483<<24>>24)==($61<<24>>24);
      $or$cond13 = $505 & $or$cond7;
      if (!($or$cond13)) {
       $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113185;$__ng$0$lcssa = $__ng$0;
       break;
      }
      $506 = HEAP32[$__ge>>2]|0;
      $508 = ($507|0)==($506|0);
      if ($508) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
       $$pre186 = HEAP32[$__gn>>2]|0;
       $510 = $$pre186;
      } else {
       $510 = $507;
      }
      $509 = ((($510)) + 4|0);
      HEAP32[$__gn>>2] = $509;
      HEAP32[$510>>2] = $__ng$0;
      $757 = $509;$__ng$1 = 0;
     }
     $511 = HEAP32[$__b>>2]|0;
     $512 = ((($511)) + 12|0);
     $513 = HEAP32[$512>>2]|0;
     $514 = ((($511)) + 16|0);
     $515 = HEAP32[$514>>2]|0;
     $516 = ($513|0)==($515|0);
     if ($516) {
      $517 = HEAP32[$511>>2]|0;
      $518 = ((($517)) + 40|0);
      $519 = HEAP32[$518>>2]|0;
      (FUNCTION_TABLE_ii[$519 & 63]($511)|0);
      $$pre$i2$i$i113 = $$pre$i2$i$i113185;$458 = $756;$507 = $757;$__ng$0 = $__ng$1;
      continue;
     } else {
      $520 = ((($513)) + 1|0);
      HEAP32[$512>>2] = $520;
      $$pre$i2$i$i113 = $$pre$i2$i$i113185;$458 = $756;$507 = $757;$__ng$0 = $__ng$1;
      continue;
     }
    }
    $521 = HEAP32[$__gb>>2]|0;
    $522 = ($521|0)!=($$lcssa|0);
    $523 = ($__ng$0$lcssa|0)!=(0);
    $or$cond9 = $523 & $522;
    if ($or$cond9) {
     $524 = HEAP32[$__ge>>2]|0;
     $525 = ($$lcssa|0)==($524|0);
     if ($525) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
      $$pre187 = HEAP32[$__gn>>2]|0;
      $527 = $$pre187;
     } else {
      $527 = $$lcssa;
     }
     $526 = ((($527)) + 4|0);
     HEAP32[$__gn>>2] = $526;
     HEAP32[$527>>2] = $__ng$0$lcssa;
     $758 = $526;
    } else {
     $758 = $$lcssa;
    }
    $528 = HEAP32[$__fd>>2]|0;
    $529 = ($528|0)>(0);
    if ($529) {
     $530 = HEAP32[$__b>>2]|0;
     $531 = ($530|0)==(0|0);
     do {
      if ($531) {
       $542 = 0;
      } else {
       $532 = ((($530)) + 12|0);
       $533 = HEAP32[$532>>2]|0;
       $534 = ((($530)) + 16|0);
       $535 = HEAP32[$534>>2]|0;
       $536 = ($533|0)==($535|0);
       if ($536) {
        $537 = HEAP32[$530>>2]|0;
        $538 = ((($537)) + 36|0);
        $539 = HEAP32[$538>>2]|0;
        $540 = (FUNCTION_TABLE_ii[$539 & 63]($530)|0);
        $541 = ($540|0)==(-1);
        if ($541) {
         HEAP32[$__b>>2] = 0;
         $542 = 0;
         break;
        } else {
         $$pre$i$i$i79 = HEAP32[$__b>>2]|0;
         $542 = $$pre$i$i$i79;
         break;
        }
       } else {
        $542 = $530;
       }
      }
     } while(0);
     $543 = ($542|0)==(0|0);
     $544 = ($$pre$i2$i$i83|0)==(0|0);
     do {
      if ($544) {
       label = 162;
      } else {
       $545 = ((($$pre$i2$i$i83)) + 12|0);
       $546 = HEAP32[$545>>2]|0;
       $547 = ((($$pre$i2$i$i83)) + 16|0);
       $548 = HEAP32[$547>>2]|0;
       $549 = ($546|0)==($548|0);
       if ($549) {
        $550 = HEAP32[$$pre$i2$i$i83>>2]|0;
        $551 = ((($550)) + 36|0);
        $552 = HEAP32[$551>>2]|0;
        $553 = (FUNCTION_TABLE_ii[$552 & 63]($$pre$i2$i$i83)|0);
        $554 = ($553|0)==(-1);
        if ($554) {
         HEAP32[$__e>>2] = 0;
         label = 162;
         break;
        }
       }
       if ($543) {
        $759 = $$pre$i2$i$i83;
       } else {
        label = 167;
        break L1;
       }
      }
     } while(0);
     if ((label|0) == 162) {
      label = 0;
      if ($543) {
       label = 167;
       break L1;
      } else {
       $759 = 0;
      }
     }
     $555 = HEAP32[$__b>>2]|0;
     $556 = ((($555)) + 12|0);
     $557 = HEAP32[$556>>2]|0;
     $558 = ((($555)) + 16|0);
     $559 = HEAP32[$558>>2]|0;
     $560 = ($557|0)==($559|0);
     if ($560) {
      $561 = HEAP32[$555>>2]|0;
      $562 = ((($561)) + 36|0);
      $563 = HEAP32[$562>>2]|0;
      $564 = (FUNCTION_TABLE_ii[$563 & 63]($555)|0);
      $$0$i$i75 = $564;
     } else {
      $565 = HEAP8[$557>>0]|0;
      $566 = $565&255;
      $$0$i$i75 = $566;
     }
     $567 = $$0$i$i75&255;
     $568 = HEAP8[$__dp>>0]|0;
     $569 = ($567<<24>>24)==($568<<24>>24);
     if (!($569)) {
      label = 167;
      break L1;
     }
     $572 = HEAP32[$__b>>2]|0;
     $573 = ((($572)) + 12|0);
     $574 = HEAP32[$573>>2]|0;
     $575 = ((($572)) + 16|0);
     $576 = HEAP32[$575>>2]|0;
     $577 = ($574|0)==($576|0);
     if ($577) {
      $578 = HEAP32[$572>>2]|0;
      $579 = ((($578)) + 40|0);
      $580 = HEAP32[$579>>2]|0;
      (FUNCTION_TABLE_ii[$580 & 63]($572)|0);
     } else {
      $581 = ((($574)) + 1|0);
      HEAP32[$573>>2] = $581;
     }
     $582 = ($528|0)>(0);
     if ($582) {
      $$pre$i2$i$i67237 = $759;$597 = $759;$650 = $528;
      while(1) {
       $583 = HEAP32[$__b>>2]|0;
       $584 = ($583|0)==(0|0);
       do {
        if ($584) {
         $595 = 0;
        } else {
         $585 = ((($583)) + 12|0);
         $586 = HEAP32[$585>>2]|0;
         $587 = ((($583)) + 16|0);
         $588 = HEAP32[$587>>2]|0;
         $589 = ($586|0)==($588|0);
         if ($589) {
          $590 = HEAP32[$583>>2]|0;
          $591 = ((($590)) + 36|0);
          $592 = HEAP32[$591>>2]|0;
          $593 = (FUNCTION_TABLE_ii[$592 & 63]($583)|0);
          $594 = ($593|0)==(-1);
          if ($594) {
           HEAP32[$__b>>2] = 0;
           $595 = 0;
           break;
          } else {
           $$pre$i$i$i63 = HEAP32[$__b>>2]|0;
           $595 = $$pre$i$i$i63;
           break;
          }
         } else {
          $595 = $583;
         }
        }
       } while(0);
       $596 = ($595|0)==(0|0);
       $598 = ($597|0)==(0|0);
       do {
        if ($598) {
         $$pre$i2$i$i67188$ph = $$pre$i2$i$i67237;
         label = 182;
        } else {
         $599 = ((($597)) + 12|0);
         $600 = HEAP32[$599>>2]|0;
         $601 = ((($597)) + 16|0);
         $602 = HEAP32[$601>>2]|0;
         $603 = ($600|0)==($602|0);
         if (!($603)) {
          if ($596) {
           $$pre$i2$i$i67188205 = $$pre$i2$i$i67237;$760 = $597;
           break;
          } else {
           label = 189;
           break L1;
          }
         }
         $604 = HEAP32[$597>>2]|0;
         $605 = ((($604)) + 36|0);
         $606 = HEAP32[$605>>2]|0;
         $607 = (FUNCTION_TABLE_ii[$606 & 63]($597)|0);
         $608 = ($607|0)==(-1);
         if ($608) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i67188$ph = 0;
          label = 182;
          break;
         } else {
          $609 = ($$pre$i2$i$i67237|0)==(0|0);
          $tmp$i$i69 = $596 ^ $609;
          if ($tmp$i$i69) {
           $$pre$i2$i$i67188205 = $$pre$i2$i$i67237;$760 = $$pre$i2$i$i67237;
           break;
          } else {
           label = 189;
           break L1;
          }
         }
        }
       } while(0);
       if ((label|0) == 182) {
        label = 0;
        if ($596) {
         label = 189;
         break L1;
        } else {
         $$pre$i2$i$i67188205 = $$pre$i2$i$i67188$ph;$760 = 0;
        }
       }
       $610 = HEAP32[$__b>>2]|0;
       $611 = ((($610)) + 12|0);
       $612 = HEAP32[$611>>2]|0;
       $613 = ((($610)) + 16|0);
       $614 = HEAP32[$613>>2]|0;
       $615 = ($612|0)==($614|0);
       if ($615) {
        $616 = HEAP32[$610>>2]|0;
        $617 = ((($616)) + 36|0);
        $618 = HEAP32[$617>>2]|0;
        $619 = (FUNCTION_TABLE_ii[$618 & 63]($610)|0);
        $$0$i$i59 = $619;
       } else {
        $620 = HEAP8[$612>>0]|0;
        $621 = $620&255;
        $$0$i$i59 = $621;
       }
       $622 = $$0$i$i59&255;
       $isascii1$i57 = ($622<<24>>24)>(-1);
       if (!($isascii1$i57)) {
        label = 189;
        break L1;
       }
       $sext = $$0$i$i59 << 24;
       $623 = $sext >> 24;
       $624 = HEAP32[$15>>2]|0;
       $625 = (($624) + ($623<<1)|0);
       $626 = HEAP16[$625>>1]|0;
       $627 = $626 & 2048;
       $628 = ($627<<16>>16)==(0);
       if ($628) {
        label = 189;
        break L1;
       }
       $631 = HEAP32[$__wn>>2]|0;
       $632 = HEAP32[$0>>2]|0;
       $633 = ($631|0)==($632|0);
       if ($633) {
        __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       }
       $634 = HEAP32[$__b>>2]|0;
       $635 = ((($634)) + 12|0);
       $636 = HEAP32[$635>>2]|0;
       $637 = ((($634)) + 16|0);
       $638 = HEAP32[$637>>2]|0;
       $639 = ($636|0)==($638|0);
       if ($639) {
        $640 = HEAP32[$634>>2]|0;
        $641 = ((($640)) + 36|0);
        $642 = HEAP32[$641>>2]|0;
        $643 = (FUNCTION_TABLE_ii[$642 & 63]($634)|0);
        $$0$i$i27 = $643;
       } else {
        $644 = HEAP8[$636>>0]|0;
        $645 = $644&255;
        $$0$i$i27 = $645;
       }
       $646 = $$0$i$i27&255;
       $647 = HEAP32[$__wn>>2]|0;
       $648 = ((($647)) + 1|0);
       HEAP32[$__wn>>2] = $648;
       HEAP8[$647>>0] = $646;
       $649 = (($650) + -1)|0;
       HEAP32[$__fd>>2] = $649;
       $651 = HEAP32[$__b>>2]|0;
       $652 = ((($651)) + 12|0);
       $653 = HEAP32[$652>>2]|0;
       $654 = ((($651)) + 16|0);
       $655 = HEAP32[$654>>2]|0;
       $656 = ($653|0)==($655|0);
       if ($656) {
        $657 = HEAP32[$651>>2]|0;
        $658 = ((($657)) + 40|0);
        $659 = HEAP32[$658>>2]|0;
        (FUNCTION_TABLE_ii[$659 & 63]($651)|0);
       } else {
        $661 = ((($653)) + 1|0);
        HEAP32[$652>>2] = $661;
       }
       $660 = ($650|0)>(1);
       if ($660) {
        $$pre$i2$i$i67237 = $$pre$i2$i$i67188205;$597 = $760;$650 = $649;
       } else {
        break;
       }
      }
     }
    }
    $662 = HEAP32[$__wn>>2]|0;
    $663 = HEAP32[$__wb>>2]|0;
    $664 = ($662|0)==($663|0);
    if ($664) {
     label = 200;
     break L1;
    } else {
     $752 = $758;$__trailing_sign$1 = $__trailing_sign$0255;
    }
    break;
   }
   case 1:  {
    $cond = ($__p$0253|0)==(3);
    if ($cond) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $62 = HEAP32[$__b>>2]|0;
     $63 = ((($62)) + 12|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = ((($62)) + 16|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = HEAP32[$62>>2]|0;
      $69 = ((($68)) + 36|0);
      $70 = HEAP32[$69>>2]|0;
      $71 = (FUNCTION_TABLE_ii[$70 & 63]($62)|0);
      $$0$i$i37 = $71;
     } else {
      $72 = HEAP8[$64>>0]|0;
      $73 = $72&255;
      $$0$i$i37 = $73;
     }
     $74 = $$0$i$i37&255;
     $isascii1$i = ($74<<24>>24)>(-1);
     if (!($isascii1$i)) {
      label = 26;
      break L1;
     }
     $sext167 = $$0$i$i37 << 24;
     $75 = $sext167 >> 24;
     $76 = HEAP32[$15>>2]|0;
     $77 = (($76) + ($75<<1)|0);
     $78 = HEAP16[$77>>1]|0;
     $79 = $78 & 8192;
     $80 = ($79<<16>>16)==(0);
     if ($80) {
      label = 26;
      break L1;
     }
     $81 = HEAP32[$__b>>2]|0;
     $82 = ((($81)) + 12|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ((($81)) + 16|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ($83|0)==($85|0);
     if ($86) {
      $87 = HEAP32[$81>>2]|0;
      $88 = ((($87)) + 40|0);
      $89 = HEAP32[$88>>2]|0;
      $90 = (FUNCTION_TABLE_ii[$89 & 63]($81)|0);
      $$0$i$i39 = $90;
     } else {
      $91 = ((($83)) + 1|0);
      HEAP32[$82>>2] = $91;
      $92 = HEAP8[$83>>0]|0;
      $93 = $92&255;
      $$0$i$i39 = $93;
     }
     $94 = $$0$i$i39&255;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$94);
     $$pre$i2$i$i45 = $751;$112 = $751;
     label = 28;
    }
    break;
   }
   default: {
    $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
   }
   }
  } while(0);
  L243: do {
   if ((label|0) == 28) {
    while(1) {
     label = 0;
     $98 = HEAP32[$__b>>2]|0;
     $99 = ($98|0)==(0|0);
     do {
      if ($99) {
       $110 = 0;
      } else {
       $100 = ((($98)) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       $102 = ((($98)) + 16|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ($101|0)==($103|0);
       if ($104) {
        $105 = HEAP32[$98>>2]|0;
        $106 = ((($105)) + 36|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = (FUNCTION_TABLE_ii[$107 & 63]($98)|0);
        $109 = ($108|0)==(-1);
        if ($109) {
         HEAP32[$__b>>2] = 0;
         $110 = 0;
         break;
        } else {
         $$pre$i$i$i41 = HEAP32[$__b>>2]|0;
         $110 = $$pre$i$i$i41;
         break;
        }
       } else {
        $110 = $98;
       }
      }
     } while(0);
     $111 = ($110|0)==(0|0);
     $113 = ($112|0)==(0|0);
     do {
      if ($113) {
       $$pre$i2$i$i45200 = $$pre$i2$i$i45;
       label = 38;
      } else {
       $114 = ((($112)) + 12|0);
       $115 = HEAP32[$114>>2]|0;
       $116 = ((($112)) + 16|0);
       $117 = HEAP32[$116>>2]|0;
       $118 = ($115|0)==($117|0);
       if (!($118)) {
        if ($111) {
         $$pre$i2$i$i45202 = $$pre$i2$i$i45;$753 = $112;
         break;
        } else {
         $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
         break L243;
        }
       }
       $119 = HEAP32[$112>>2]|0;
       $120 = ((($119)) + 36|0);
       $121 = HEAP32[$120>>2]|0;
       $122 = (FUNCTION_TABLE_ii[$121 & 63]($112)|0);
       $123 = ($122|0)==(-1);
       if ($123) {
        HEAP32[$__e>>2] = 0;
        $$pre$i2$i$i45200 = 0;
        label = 38;
        break;
       } else {
        $124 = ($$pre$i2$i$i45|0)==(0|0);
        $tmp$i$i47 = $111 ^ $124;
        if ($tmp$i$i47) {
         $$pre$i2$i$i45202 = $$pre$i2$i$i45;$753 = $$pre$i2$i$i45;
         break;
        } else {
         $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
         break L243;
        }
       }
      }
     } while(0);
     if ((label|0) == 38) {
      label = 0;
      if ($111) {
       $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
       break L243;
      } else {
       $$pre$i2$i$i45202 = $$pre$i2$i$i45200;$753 = 0;
      }
     }
     $125 = HEAP32[$__b>>2]|0;
     $126 = ((($125)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($125)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$125>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      $134 = (FUNCTION_TABLE_ii[$133 & 63]($125)|0);
      $$0$i$i49 = $134;
     } else {
      $135 = HEAP8[$127>>0]|0;
      $136 = $135&255;
      $$0$i$i49 = $136;
     }
     $137 = $$0$i$i49&255;
     $isascii1$i51 = ($137<<24>>24)>(-1);
     if (!($isascii1$i51)) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
      break L243;
     }
     $sext166 = $$0$i$i49 << 24;
     $138 = $sext166 >> 24;
     $139 = HEAP32[$15>>2]|0;
     $140 = (($139) + ($138<<1)|0);
     $141 = HEAP16[$140>>1]|0;
     $142 = $141 & 8192;
     $143 = ($142<<16>>16)==(0);
     if ($143) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
      break L243;
     }
     $144 = HEAP32[$__b>>2]|0;
     $145 = ((($144)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ((($144)) + 16|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ($146|0)==($148|0);
     if ($149) {
      $150 = HEAP32[$144>>2]|0;
      $151 = ((($150)) + 40|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (FUNCTION_TABLE_ii[$152 & 63]($144)|0);
      $$0$i$i55 = $153;
     } else {
      $154 = ((($146)) + 1|0);
      HEAP32[$145>>2] = $154;
      $155 = HEAP8[$146>>0]|0;
      $156 = $155&255;
      $$0$i$i55 = $156;
     }
     $157 = $$0$i$i55&255;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$157);
     $$pre$i2$i$i45 = $$pre$i2$i$i45202;$112 = $753;
     label = 28;
    }
   }
  } while(0);
  $667 = (($__p$0253) + 1)|0;
  $668 = ($667>>>0)<(4);
  if ($668) {
   $750 = $752;$__p$0253 = $667;$__trailing_sign$0255 = $__trailing_sign$1;
  } else {
   $$lcssa224 = $752;$__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 202;
   break;
  }
 }
 L275: do {
  if ((label|0) == 26) {
   $95 = HEAP32[$__err>>2]|0;
   $96 = $95 | 4;
   HEAP32[$__err>>2] = $96;
   $$0 = 0;
  }
  else if ((label|0) == 82) {
   $302 = HEAP32[$__err>>2]|0;
   $303 = $302 | 4;
   HEAP32[$__err>>2] = $303;
   $$0 = 0;
  }
  else if ((label|0) == 119) {
   $442 = HEAP32[$__err>>2]|0;
   $443 = $442 | 4;
   HEAP32[$__err>>2] = $443;
   $$0 = 0;
  }
  else if ((label|0) == 167) {
   $570 = HEAP32[$__err>>2]|0;
   $571 = $570 | 4;
   HEAP32[$__err>>2] = $571;
   $$0 = 0;
  }
  else if ((label|0) == 189) {
   $629 = HEAP32[$__err>>2]|0;
   $630 = $629 | 4;
   HEAP32[$__err>>2] = $630;
   $$0 = 0;
  }
  else if ((label|0) == 200) {
   $665 = HEAP32[$__err>>2]|0;
   $666 = $665 | 4;
   HEAP32[$__err>>2] = $666;
   $$0 = 0;
  }
  else if ((label|0) == 202) {
   $669 = ($__trailing_sign$0$lcssa|0)==(0|0);
   L279: do {
    if (!($669)) {
     $670 = ((($__trailing_sign$0$lcssa)) + 1|0);
     $671 = ((($__trailing_sign$0$lcssa)) + 8|0);
     $672 = ((($__trailing_sign$0$lcssa)) + 4|0);
     $__i$0 = 1;
     L281: while(1) {
      $673 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $674 = $673 & 1;
      $675 = ($674<<24>>24)==(0);
      if ($675) {
       $677 = $673&255;
       $678 = $677 >>> 1;
       $680 = $678;
      } else {
       $676 = HEAP32[$672>>2]|0;
       $680 = $676;
      }
      $679 = ($__i$0>>>0)<($680>>>0);
      if (!($679)) {
       break L279;
      }
      $681 = HEAP32[$__b>>2]|0;
      $682 = ($681|0)==(0|0);
      do {
       if ($682) {
        $693 = 0;
       } else {
        $683 = ((($681)) + 12|0);
        $684 = HEAP32[$683>>2]|0;
        $685 = ((($681)) + 16|0);
        $686 = HEAP32[$685>>2]|0;
        $687 = ($684|0)==($686|0);
        if ($687) {
         $688 = HEAP32[$681>>2]|0;
         $689 = ((($688)) + 36|0);
         $690 = HEAP32[$689>>2]|0;
         $691 = (FUNCTION_TABLE_ii[$690 & 63]($681)|0);
         $692 = ($691|0)==(-1);
         if ($692) {
          HEAP32[$__b>>2] = 0;
          $693 = 0;
          break;
         } else {
          $$pre$i$i$i = HEAP32[$__b>>2]|0;
          $693 = $$pre$i$i$i;
          break;
         }
        } else {
         $693 = $681;
        }
       }
      } while(0);
      $694 = ($693|0)==(0|0);
      $695 = HEAP32[$__e>>2]|0;
      $696 = ($695|0)==(0|0);
      do {
       if ($696) {
        label = 218;
       } else {
        $697 = ((($695)) + 12|0);
        $698 = HEAP32[$697>>2]|0;
        $699 = ((($695)) + 16|0);
        $700 = HEAP32[$699>>2]|0;
        $701 = ($698|0)==($700|0);
        if ($701) {
         $702 = HEAP32[$695>>2]|0;
         $703 = ((($702)) + 36|0);
         $704 = HEAP32[$703>>2]|0;
         $705 = (FUNCTION_TABLE_ii[$704 & 63]($695)|0);
         $706 = ($705|0)==(-1);
         if ($706) {
          HEAP32[$__e>>2] = 0;
          label = 218;
          break;
         }
        }
        if (!($694)) {
         break L281;
        }
       }
      } while(0);
      if ((label|0) == 218) {
       label = 0;
       if ($694) {
        break;
       }
      }
      $707 = HEAP32[$__b>>2]|0;
      $708 = ((($707)) + 12|0);
      $709 = HEAP32[$708>>2]|0;
      $710 = ((($707)) + 16|0);
      $711 = HEAP32[$710>>2]|0;
      $712 = ($709|0)==($711|0);
      if ($712) {
       $713 = HEAP32[$707>>2]|0;
       $714 = ((($713)) + 36|0);
       $715 = HEAP32[$714>>2]|0;
       $716 = (FUNCTION_TABLE_ii[$715 & 63]($707)|0);
       $$0$i$i = $716;
      } else {
       $717 = HEAP8[$709>>0]|0;
       $718 = $717&255;
       $$0$i$i = $718;
      }
      $719 = $$0$i$i&255;
      $720 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $721 = $720 & 1;
      $722 = ($721<<24>>24)==(0);
      if ($722) {
       $725 = $670;
      } else {
       $723 = HEAP32[$671>>2]|0;
       $725 = $723;
      }
      $724 = (($725) + ($__i$0)|0);
      $726 = HEAP8[$724>>0]|0;
      $727 = ($719<<24>>24)==($726<<24>>24);
      if (!($727)) {
       break;
      }
      $730 = (($__i$0) + 1)|0;
      $731 = HEAP32[$__b>>2]|0;
      $732 = ((($731)) + 12|0);
      $733 = HEAP32[$732>>2]|0;
      $734 = ((($731)) + 16|0);
      $735 = HEAP32[$734>>2]|0;
      $736 = ($733|0)==($735|0);
      if ($736) {
       $737 = HEAP32[$731>>2]|0;
       $738 = ((($737)) + 40|0);
       $739 = HEAP32[$738>>2]|0;
       (FUNCTION_TABLE_ii[$739 & 63]($731)|0);
       $__i$0 = $730;
       continue;
      } else {
       $740 = ((($733)) + 1|0);
       HEAP32[$732>>2] = $740;
       $__i$0 = $730;
       continue;
      }
     }
     $728 = HEAP32[$__err>>2]|0;
     $729 = $728 | 4;
     HEAP32[$__err>>2] = $729;
     $$0 = 0;
     break L275;
    }
   } while(0);
   $741 = HEAP32[$__gb>>2]|0;
   $742 = ($741|0)==($$lcssa224|0);
   if ($742) {
    $$0 = 1;
   } else {
    HEAP32[$__et>>2] = 0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$741,$$lcssa224,$__et);
    $743 = HEAP32[$__et>>2]|0;
    $744 = ($743|0)==(0);
    if ($744) {
     $$0 = 1;
    } else {
     $745 = HEAP32[$__err>>2]|0;
     $746 = $745 | 4;
     HEAP32[$__err>>2] = $746;
     $$0 = 0;
    }
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $747 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $748 = ($747|0)==(0|0);
 if (!($748)) {
  $749 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$749 & 127]($747);
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$02 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy = sp + 24|0;
 $__wbuf = sp + 32|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 28|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 100|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 $10 = $6;
 if ($9) {
  $11 = HEAP8[$__v>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   $17 = ((($__v)) + 1|0);
   HEAP8[$17>>0] = 0;
   HEAP8[$__v>>0] = 0;
  } else {
   $14 = ((($__v)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP8[$15>>0] = 0;
   $16 = ((($__v)) + 4|0);
   HEAP32[$16>>2] = 0;
  }
  $18 = HEAP8[$__neg>>0]|0;
  $19 = ($18<<24>>24)==(0);
  if (!($19)) {
   $20 = HEAP32[$5>>2]|0;
   $21 = ((($20)) + 28|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (FUNCTION_TABLE_iii[$22 & 15]($5,45)|0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__v,$23);
  }
  $24 = HEAP32[$5>>2]|0;
  $25 = ((($24)) + 28|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (FUNCTION_TABLE_iii[$26 & 15]($5,48)|0);
  $28 = HEAP32[$__wb>>2]|0;
  $29 = HEAP32[$__wn>>2]|0;
  $30 = ((($29)) + -1|0);
  $31 = ($28>>>0)<($30>>>0);
  L10: do {
   if ($31) {
    $__w$02 = $28;
    while(1) {
     $32 = HEAP8[$__w$02>>0]|0;
     $33 = ($32<<24>>24)==($27<<24>>24);
     if (!($33)) {
      $__w$0$lcssa = $__w$02;
      break L10;
     }
     $34 = ((($__w$02)) + 1|0);
     $35 = ($34>>>0)<($30>>>0);
     if ($35) {
      $__w$02 = $34;
     } else {
      $__w$0$lcssa = $34;
      break;
     }
    }
   } else {
    $__w$0$lcssa = $28;
   }
  } while(0);
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v,$__w$0$lcssa,$29)|0);
 }
 $36 = HEAP32[$__b>>2]|0;
 $37 = ($36|0)==(0|0);
 do {
  if ($37) {
   $48 = 0;
  } else {
   $38 = ((($36)) + 12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($36)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ($39|0)==($41|0);
   if ($42) {
    $43 = HEAP32[$36>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
    $47 = ($46|0)==(-1);
    if ($47) {
     HEAP32[$__b>>2] = 0;
     $48 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $48 = $$pre$i$i$i;
     break;
    }
   } else {
    $48 = $36;
   }
  }
 } while(0);
 $49 = ($48|0)==(0|0);
 $50 = ($6|0)==(0);
 do {
  if ($50) {
   label = 21;
  } else {
   $51 = ((($10)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($10)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = $6;
    $57 = HEAP32[$56>>2]|0;
    $58 = ((($57)) + 36|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (FUNCTION_TABLE_ii[$59 & 63]($10)|0);
    $61 = ($60|0)==(-1);
    if ($61) {
     HEAP32[$__e>>2] = 0;
     label = 21;
     break;
    }
   }
   if (!($49)) {
    label = 22;
   }
  }
 } while(0);
 if ((label|0) == 21) {
  if ($49) {
   label = 22;
  }
 }
 if ((label|0) == 22) {
  $62 = HEAP32[$__err>>2]|0;
  $63 = $62 | 2;
  HEAP32[$__err>>2] = $63;
 }
 $64 = HEAP32[$__b>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
 $65 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $66 = ($65|0)==(0|0);
 if (!($66)) {
  $67 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$67 & 127]($65);
 }
 STACKTOP = sp;return ($64|0);
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5752)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 63]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 63]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   $24 = ((($__nsn)) + 1|0);
   HEAP8[$24>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = ((($__nsn)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP8[$22>>0] = 0;
   $23 = ((($__nsn)) + 4|0);
   HEAP32[$23>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  HEAP32[$1>>2] = 0;
  $25 = ((($1)) + 4|0);
  HEAP32[$25>>2] = 0;
  $26 = ((($1)) + 8|0);
  HEAP32[$26>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $27 = HEAP32[$10>>2]|0;
  $28 = ((($27)) + 28|0);
  $29 = HEAP32[$28>>2]|0;
  FUNCTION_TABLE_vii[$29 & 63]($2,$10);
  $30 = HEAP8[$__psn>>0]|0;
  $31 = $30 & 1;
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $36 = ((($__psn)) + 1|0);
   HEAP8[$36>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $33 = ((($__psn)) + 8|0);
   $34 = HEAP32[$33>>2]|0;
   HEAP8[$34>>0] = 0;
   $35 = ((($__psn)) + 4|0);
   HEAP32[$35>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  HEAP32[$2>>2] = 0;
  $37 = ((($2)) + 4|0);
  HEAP32[$37>>2] = 0;
  $38 = ((($2)) + 8|0);
  HEAP32[$38>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $39 = HEAP32[$10>>2]|0;
  $40 = ((($39)) + 12|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = (FUNCTION_TABLE_ii[$41 & 63]($10)|0);
  HEAP8[$__dp>>0] = $42;
  $43 = HEAP32[$10>>2]|0;
  $44 = ((($43)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = (FUNCTION_TABLE_ii[$45 & 63]($10)|0);
  HEAP8[$__ts>>0] = $46;
  $47 = HEAP32[$10>>2]|0;
  $48 = ((($47)) + 20|0);
  $49 = HEAP32[$48>>2]|0;
  FUNCTION_TABLE_vii[$49 & 63]($3,$10);
  $50 = HEAP8[$__grp>>0]|0;
  $51 = $50 & 1;
  $52 = ($51<<24>>24)==(0);
  if ($52) {
   $56 = ((($__grp)) + 1|0);
   HEAP8[$56>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $53 = ((($__grp)) + 8|0);
   $54 = HEAP32[$53>>2]|0;
   HEAP8[$54>>0] = 0;
   $55 = ((($__grp)) + 4|0);
   HEAP32[$55>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  HEAP32[$3>>2] = 0;
  $57 = ((($3)) + 4|0);
  HEAP32[$57>>2] = 0;
  $58 = ((($3)) + 8|0);
  HEAP32[$58>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $59 = HEAP32[$10>>2]|0;
  $60 = ((($59)) + 24|0);
  $61 = HEAP32[$60>>2]|0;
  FUNCTION_TABLE_vii[$61 & 63]($4,$10);
  $62 = HEAP8[$__sym>>0]|0;
  $63 = $62 & 1;
  $64 = ($63<<24>>24)==(0);
  if ($64) {
   $68 = ((($__sym)) + 1|0);
   HEAP8[$68>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $65 = ((($__sym)) + 8|0);
   $66 = HEAP32[$65>>2]|0;
   HEAP8[$66>>0] = 0;
   $67 = ((($__sym)) + 4|0);
   HEAP32[$67>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $69 = ((($4)) + 4|0);
  HEAP32[$69>>2] = 0;
  $70 = ((($4)) + 8|0);
  HEAP32[$70>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $71 = HEAP32[$10>>2]|0;
  $72 = ((($71)) + 36|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = (FUNCTION_TABLE_ii[$73 & 63]($10)|0);
  $storemerge = $74;
 } else {
  $75 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5688)|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($76)) + 44|0);
  $78 = HEAP32[$77>>2]|0;
  FUNCTION_TABLE_vii[$78 & 63]($5,$75);
  $79 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$79&255;HEAP8[$__pat+1>>0]=($79>>8)&255;HEAP8[$__pat+2>>0]=($79>>16)&255;HEAP8[$__pat+3>>0]=$79>>24;
  $80 = HEAP32[$75>>2]|0;
  $81 = ((($80)) + 32|0);
  $82 = HEAP32[$81>>2]|0;
  FUNCTION_TABLE_vii[$82 & 63]($6,$75);
  $83 = HEAP8[$__nsn>>0]|0;
  $84 = $83 & 1;
  $85 = ($84<<24>>24)==(0);
  if ($85) {
   $89 = ((($__nsn)) + 1|0);
   HEAP8[$89>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $86 = ((($__nsn)) + 8|0);
   $87 = HEAP32[$86>>2]|0;
   HEAP8[$87>>0] = 0;
   $88 = ((($__nsn)) + 4|0);
   HEAP32[$88>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  HEAP32[$6>>2] = 0;
  $90 = ((($6)) + 4|0);
  HEAP32[$90>>2] = 0;
  $91 = ((($6)) + 8|0);
  HEAP32[$91>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $92 = HEAP32[$75>>2]|0;
  $93 = ((($92)) + 28|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_vii[$94 & 63]($7,$75);
  $95 = HEAP8[$__psn>>0]|0;
  $96 = $95 & 1;
  $97 = ($96<<24>>24)==(0);
  if ($97) {
   $101 = ((($__psn)) + 1|0);
   HEAP8[$101>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $98 = ((($__psn)) + 8|0);
   $99 = HEAP32[$98>>2]|0;
   HEAP8[$99>>0] = 0;
   $100 = ((($__psn)) + 4|0);
   HEAP32[$100>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  HEAP32[$7>>2] = 0;
  $102 = ((($7)) + 4|0);
  HEAP32[$102>>2] = 0;
  $103 = ((($7)) + 8|0);
  HEAP32[$103>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  $104 = HEAP32[$75>>2]|0;
  $105 = ((($104)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (FUNCTION_TABLE_ii[$106 & 63]($75)|0);
  HEAP8[$__dp>>0] = $107;
  $108 = HEAP32[$75>>2]|0;
  $109 = ((($108)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = (FUNCTION_TABLE_ii[$110 & 63]($75)|0);
  HEAP8[$__ts>>0] = $111;
  $112 = HEAP32[$75>>2]|0;
  $113 = ((($112)) + 20|0);
  $114 = HEAP32[$113>>2]|0;
  FUNCTION_TABLE_vii[$114 & 63]($8,$75);
  $115 = HEAP8[$__grp>>0]|0;
  $116 = $115 & 1;
  $117 = ($116<<24>>24)==(0);
  if ($117) {
   $121 = ((($__grp)) + 1|0);
   HEAP8[$121>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $118 = ((($__grp)) + 8|0);
   $119 = HEAP32[$118>>2]|0;
   HEAP8[$119>>0] = 0;
   $120 = ((($__grp)) + 4|0);
   HEAP32[$120>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  HEAP32[$8>>2] = 0;
  $122 = ((($8)) + 4|0);
  HEAP32[$122>>2] = 0;
  $123 = ((($8)) + 8|0);
  HEAP32[$123>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $124 = HEAP32[$75>>2]|0;
  $125 = ((($124)) + 24|0);
  $126 = HEAP32[$125>>2]|0;
  FUNCTION_TABLE_vii[$126 & 63]($9,$75);
  $127 = HEAP8[$__sym>>0]|0;
  $128 = $127 & 1;
  $129 = ($128<<24>>24)==(0);
  if ($129) {
   $133 = ((($__sym)) + 1|0);
   HEAP8[$133>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $130 = ((($__sym)) + 8|0);
   $131 = HEAP32[$130>>2]|0;
   HEAP8[$131>>0] = 0;
   $132 = ((($__sym)) + 4|0);
   HEAP32[$132>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  HEAP32[$9>>2] = 0;
  $134 = ((($9)) + 4|0);
  HEAP32[$134>>2] = 0;
  $135 = ((($9)) + 8|0);
  HEAP32[$135>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $136 = HEAP32[$75>>2]|0;
  $137 = ((($136)) + 36|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (FUNCTION_TABLE_ii[$138 & 63]($75)|0);
  $storemerge = $139;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$01$i$i22 = 0, $$__ig$0 = 0, $$lcssa = 0, $$not = 0, $$not16 = 0, $$pre = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$018 = 0, $__r$019 = 0;
 var $or$cond2 = 0, $or$cond2$lcssa = 0, $or$cond217 = 0, $or$cond220 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 $3 = ((($__grouping)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0&255;
 $6 = $5 >>> 1;
 $7 = $2 ? $6 : $4;
 $8 = ($7|0)==(0);
 L1: do {
  if (!($8)) {
   $9 = ($__g|0)==($__g_end|0);
   if ($9) {
    $19 = $0;$27 = $4;
   } else {
    $10 = ((($__g_end)) + -4|0);
    $11 = ($10>>>0)>($__g>>>0);
    if ($11) {
     $$01$i$i22 = $__g;$14 = $10;
     while(1) {
      $12 = HEAP32[$$01$i$i22>>2]|0;
      $13 = HEAP32[$14>>2]|0;
      HEAP32[$$01$i$i22>>2] = $13;
      HEAP32[$14>>2] = $12;
      $15 = ((($$01$i$i22)) + 4|0);
      $16 = ((($14)) + -4|0);
      $17 = ($15>>>0)<($16>>>0);
      if ($17) {
       $$01$i$i22 = $15;$14 = $16;
      } else {
       break;
      }
     }
    }
    $$pre = HEAP8[$__grouping>>0]|0;
    $$pre11 = HEAP32[$3>>2]|0;
    $19 = $$pre;$27 = $$pre11;
   }
   $18 = $19 & 1;
   $20 = ($18<<24>>24)==(0);
   $21 = ((($__grouping)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ((($__grouping)) + 1|0);
   $24 = $20 ? $23 : $22;
   $25 = $19&255;
   $26 = $25 >>> 1;
   $28 = $20 ? $26 : $27;
   $29 = (($24) + ($28)|0);
   $30 = ((($__g_end)) + -4|0);
   $31 = $29;
   $32 = ($30>>>0)>($__g>>>0);
   $33 = HEAP8[$24>>0]|0;
   $$not16 = ($33<<24>>24)<(1);
   $34 = ($33<<24>>24)==(127);
   $or$cond217 = $$not16 | $34;
   L10: do {
    if ($32) {
     $36 = $33;$__ig$018 = $24;$__r$019 = $__g;$or$cond220 = $or$cond217;
     while(1) {
      if (!($or$cond220)) {
       $35 = $36 << 24 >> 24;
       $37 = HEAP32[$__r$019>>2]|0;
       $38 = ($35|0)==($37|0);
       if (!($38)) {
        break;
       }
      }
      $39 = $__ig$018;
      $40 = (($31) - ($39))|0;
      $41 = ($40|0)>(1);
      $42 = ((($__ig$018)) + 1|0);
      $$__ig$0 = $41 ? $42 : $__ig$018;
      $43 = ((($__r$019)) + 4|0);
      $44 = ($43>>>0)<($30>>>0);
      $45 = HEAP8[$$__ig$0>>0]|0;
      $$not = ($45<<24>>24)<(1);
      $46 = ($45<<24>>24)==(127);
      $or$cond2 = $$not | $46;
      if ($44) {
       $36 = $45;$__ig$018 = $$__ig$0;$__r$019 = $43;$or$cond220 = $or$cond2;
      } else {
       $$lcssa = $45;$or$cond2$lcssa = $or$cond2;
       break L10;
      }
     }
     HEAP32[$__err>>2] = 4;
     break L1;
    } else {
     $$lcssa = $33;$or$cond2$lcssa = $or$cond217;
    }
   } while(0);
   if (!($or$cond2$lcssa)) {
    $47 = $$lcssa << 24 >> 24;
    $48 = HEAP32[$30>>2]|0;
    $49 = (($48) + -1)|0;
    $50 = ($49>>>0)<($47>>>0);
    if (!($50)) {
     HEAP32[$__err>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$24 = 0, $__neg = 0, $__w$03 = 0;
 var $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576|0;
 $$byval_copy = sp + 424|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 564|0;
 $0 = sp + 4|0;
 $__nbuf = sp + 464|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 400|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 if ($9) {
  $10 = HEAP32[$5>>2]|0;
  $11 = ((($10)) + 48|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 7]($5,9488,(9498),$$byval_copy)|0);
  $13 = HEAP32[$__wn>>2]|0;
  $14 = HEAP32[$__wb>>2]|0;
  $15 = $13;
  $16 = $14;
  $17 = (($15) - ($16))|0;
  $18 = ($17|0)>(392);
  if ($18) {
   $19 = $17 >> 2;
   $20 = (($19) + 2)|0;
   $21 = (_malloc($20)|0);
   $22 = $21;
   $23 = ($21|0)==(0|0);
   if ($23) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $52 = $22;$__nc$0 = $21;
   }
  } else {
   $52 = 0;$__nc$0 = $__nbuf;
  }
  $24 = HEAP8[$__neg>>0]|0;
  $25 = ($24<<24>>24)==(0);
  if ($25) {
   $__nc$1 = $__nc$0;
  } else {
   $26 = ((($__nc$0)) + 1|0);
   HEAP8[$__nc$0>>0] = 45;
   $__nc$1 = $26;
  }
  $27 = ((($$byval_copy)) + 40|0);
  $28 = $$byval_copy;
  $29 = ($14>>>0)<($13>>>0);
  if ($29) {
   $30 = ((($$byval_copy)) + 4|0);
   $31 = ((($30)) + 4|0);
   $32 = ((($31)) + 4|0);
   $33 = ((($32)) + 4|0);
   $34 = ((($33)) + 4|0);
   $35 = ((($34)) + 4|0);
   $36 = ((($35)) + 4|0);
   $37 = ((($36)) + 4|0);
   $38 = ((($37)) + 4|0);
   $__nc$24 = $__nc$1;$__w$03 = $14;
   while(1) {
    $39 = HEAP32[$__w$03>>2]|0;
    $40 = HEAP32[$$byval_copy>>2]|0;
    $41 = ($40|0)==($39|0);
    if ($41) {
     $$0$lcssa$i = $$byval_copy;
    } else {
     $42 = HEAP32[$30>>2]|0;
     $43 = ($42|0)==($39|0);
     if ($43) {
      $$0$lcssa$i = $30;
     } else {
      $88 = HEAP32[$31>>2]|0;
      $89 = ($88|0)==($39|0);
      if ($89) {
       $$0$lcssa$i = $31;
      } else {
       $90 = HEAP32[$32>>2]|0;
       $91 = ($90|0)==($39|0);
       if ($91) {
        $$0$lcssa$i = $32;
       } else {
        $92 = HEAP32[$33>>2]|0;
        $93 = ($92|0)==($39|0);
        if ($93) {
         $$0$lcssa$i = $33;
        } else {
         $94 = HEAP32[$34>>2]|0;
         $95 = ($94|0)==($39|0);
         if ($95) {
          $$0$lcssa$i = $34;
         } else {
          $96 = HEAP32[$35>>2]|0;
          $97 = ($96|0)==($39|0);
          if ($97) {
           $$0$lcssa$i = $35;
          } else {
           $98 = HEAP32[$36>>2]|0;
           $99 = ($98|0)==($39|0);
           if ($99) {
            $$0$lcssa$i = $36;
           } else {
            $100 = HEAP32[$37>>2]|0;
            $101 = ($100|0)==($39|0);
            if ($101) {
             $$0$lcssa$i = $37;
            } else {
             $102 = HEAP32[$38>>2]|0;
             $103 = ($102|0)==($39|0);
             $$ = $103 ? $38 : $27;
             $$0$lcssa$i = $$;
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $44 = $$0$lcssa$i;
    $45 = (($44) - ($28))|0;
    $46 = $45 >> 2;
    $47 = (9488 + ($46)|0);
    $48 = HEAP8[$47>>0]|0;
    HEAP8[$__nc$24>>0] = $48;
    $49 = ((($__w$03)) + 4|0);
    $50 = ((($__nc$24)) + 1|0);
    $$pre = HEAP32[$__wn>>2]|0;
    $51 = ($49>>>0)<($$pre>>>0);
    if ($51) {
     $__nc$24 = $50;$__w$03 = $49;
    } else {
     $__nc$2$lcssa = $50;
     break;
    }
   }
  } else {
   $__nc$2$lcssa = $__nc$1;
  }
  HEAP8[$__nc$2$lcssa>>0] = 0;
  HEAP32[$vararg_buffer>>2] = $__v;
  (_sscanf($__nbuf,9480,$vararg_buffer)|0);
  $53 = ($52|0)==(0);
  if (!($53)) {
   $54 = $52;
   _free($54);
  }
 }
 $55 = HEAP32[$__b>>2]|0;
 $56 = ($55|0)==(0|0);
 do {
  if ($56) {
   $104 = 1;
  } else {
   $57 = ((($55)) + 12|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ((($55)) + 16|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = ($58|0)==($60|0);
   if ($61) {
    $62 = HEAP32[$55>>2]|0;
    $63 = ((($62)) + 36|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = (FUNCTION_TABLE_ii[$64 & 63]($55)|0);
    $$0$i$i$i$i = $65;
   } else {
    $66 = HEAP32[$58>>2]|0;
    $$0$i$i$i$i = $66;
   }
   $67 = ($$0$i$i$i$i|0)==(-1);
   if ($67) {
    HEAP32[$__b>>2] = 0;
    $104 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $104 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $68 = HEAP32[$__e>>2]|0;
 $69 = ($68|0)==(0|0);
 do {
  if ($69) {
   label = 28;
  } else {
   $70 = ((($68)) + 12|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = ((($68)) + 16|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = ($71|0)==($73|0);
   if ($74) {
    $75 = HEAP32[$68>>2]|0;
    $76 = ((($75)) + 36|0);
    $77 = HEAP32[$76>>2]|0;
    $78 = (FUNCTION_TABLE_ii[$77 & 63]($68)|0);
    $$0$i$i1$i$i = $78;
   } else {
    $79 = HEAP32[$71>>2]|0;
    $$0$i$i1$i$i = $79;
   }
   $80 = ($$0$i$i1$i$i|0)==(-1);
   if ($80) {
    HEAP32[$__e>>2] = 0;
    label = 28;
    break;
   } else {
    if ($104) {
     break;
    } else {
     label = 30;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 28) {
  if ($104) {
   label = 30;
  }
 }
 if ((label|0) == 30) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 $83 = HEAP32[$__b>>2]|0;
 $84 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($84)|0);
 $85 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $86 = ($85|0)==(0|0);
 if (!($86)) {
  $87 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$87 & 127]($85);
 }
 STACKTOP = sp;return ($83|0);
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i118 = 0, $$0$i$i$i$i136 = 0, $$0$i$i$i$i28 = 0, $$0$i$i$i$i43 = 0, $$0$i$i$i$i68 = 0, $$0$i$i$i$i90 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i124 = 0, $$0$i$i1$i$i142 = 0, $$0$i$i1$i$i34 = 0, $$0$i$i1$i$i49 = 0, $$0$i$i1$i$i74 = 0, $$0$i$i1$i$i96 = 0, $$0$i$i105 = 0, $$0$i$i111 = 0, $$0$i$i116 = 0, $$0$i$i133 = 0;
 var $$0$i$i26 = 0, $$0$i$i40 = 0, $$0$i$i42 = 0, $$0$i$i56 = 0, $$0$i$i60 = 0, $$0$i$i65 = 0, $$0$i$i82 = 0, $$0$i$i87 = 0, $$in265 = 0, $$lcssa = 0, $$lcssa183 = 0, $$lcssa248 = 0, $$lcssa294 = 0, $$ph = 0, $$ph240 = 0, $$ph241 = 0, $$phi$trans$insert = 0, $$phi$trans$insert209 = 0, $$pre = 0, $$pre$i$i$i = 0;
 var $$pre$i$i$i120 = 0, $$pre$i$i$i138 = 0, $$pre$i$i$i30 = 0, $$pre$i$i$i45 = 0, $$pre$i$i$i70 = 0, $$pre$i$i$i92 = 0, $$pre$i3$i$i126 = 0, $$pre$i3$i$i126190 = 0, $$pre$i3$i$i126192 = 0, $$pre$i3$i$i144203 = 0, $$pre$i3$i$i144204 = 0, $$pre$i3$i$i144270 = 0, $$pre$i3$i$i51 = 0, $$pre$i3$i$i51211 = 0, $$pre$i3$i$i51213 = 0, $$pre$i3$i$i76195$ph = 0, $$pre$i3$i$i76195216 = 0, $$pre$i3$i$i76261 = 0, $$pre$i3$i$i98 = 0, $$pre193 = 0;
 var $$pre194 = 0, $$pre197 = 0, $$pre198 = 0, $$pre199 = 0, $$pre200 = 0, $$pre201 = 0, $$pre202 = 0, $$pre206 = 0, $$pre207 = 0, $$pre208 = 0, $$pre210 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0;
 var $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0276 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0278 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0;
 var $cond = 0, $or$cond = 0, $or$cond13 = 0, $or$cond239 = 0, $or$cond7 = 0, $or$cond9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i121 = 0, $phitmp$i$i$i139 = 0, $phitmp$i$i$i31 = 0, $phitmp$i$i$i46 = 0, $phitmp$i$i$i71 = 0, $phitmp$i$i$i93 = 0, $phitmp$i4$i$i127 = 0, $phitmp$i4$i$i145 = 0, $phitmp$i4$i$i52 = 0, $phitmp$i4$i$i77 = 0, $switch = 0, $tmp$i$i129 = 0, $tmp$i$i147 = 0;
 var $tmp$i$i54 = 0, $tmp$i$i79 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $0 = sp + 496|0;
 $__gbuf = sp + 96|0;
 $__gb = sp + 88|0;
 $__gn = sp + 80|0;
 $__ge = sp + 76|0;
 $__pat = sp + 500|0;
 $__dp = sp + 72|0;
 $__ts = sp + 68|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (107);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd);
 $14 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wn>>2] = $14;
 $15 = ((($__psn)) + 4|0);
 $16 = ((($__nsn)) + 4|0);
 $17 = ((($__nsn)) + 8|0);
 $18 = ((($__psn)) + 8|0);
 $19 = $__flags & 512;
 $20 = ($19|0)!=(0);
 $21 = ((($__sym)) + 8|0);
 $22 = ((($__sym)) + 4|0);
 $23 = ((($__spaces)) + 4|0);
 $24 = ((($__spaces)) + 8|0);
 $25 = ((($__pat)) + 3|0);
 $26 = ((($__grp)) + 4|0);
 $727 = $__gbuf;$__p$0276 = 0;$__trailing_sign$0278 = 0;
 L1: while(1) {
  $27 = HEAP32[$__b>>2]|0;
  $28 = ($27|0)==(0|0);
  do {
   if ($28) {
    $728 = 1;
   } else {
    $29 = ((($27)) + 12|0);
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($27)) + 16|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ($30|0)==($32|0);
    if ($33) {
     $34 = HEAP32[$27>>2]|0;
     $35 = ((($34)) + 36|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (FUNCTION_TABLE_ii[$36 & 63]($27)|0);
     $$0$i$i$i$i28 = $37;
    } else {
     $38 = HEAP32[$30>>2]|0;
     $$0$i$i$i$i28 = $38;
    }
    $39 = ($$0$i$i$i$i28|0)==(-1);
    if ($39) {
     HEAP32[$__b>>2] = 0;
     $728 = 1;
     break;
    } else {
     $$pre$i$i$i30 = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i31 = ($$pre$i$i$i30|0)==(0|0);
     $728 = $phitmp$i$i$i31;
     break;
    }
   }
  } while(0);
  $40 = HEAP32[$__e>>2]|0;
  $41 = ($40|0)==(0|0);
  do {
   if ($41) {
    label = 15;
   } else {
    $42 = ((($40)) + 12|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = ((($40)) + 16|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = ($43|0)==($45|0);
    if ($46) {
     $47 = HEAP32[$40>>2]|0;
     $48 = ((($47)) + 36|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = (FUNCTION_TABLE_ii[$49 & 63]($40)|0);
     $$0$i$i1$i$i34 = $50;
    } else {
     $51 = HEAP32[$43>>2]|0;
     $$0$i$i1$i$i34 = $51;
    }
    $52 = ($$0$i$i1$i$i34|0)==(-1);
    if ($52) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($728) {
      $729 = $40;
      break;
     } else {
      $$lcssa248 = $727;$__trailing_sign$0$lcssa = $__trailing_sign$0278;
      label = 217;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($728) {
    $$lcssa248 = $727;$__trailing_sign$0$lcssa = $__trailing_sign$0278;
    label = 217;
    break;
   } else {
    $729 = 0;
   }
  }
  $53 = (($__pat) + ($__p$0276)|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = $54 << 24 >> 24;
  L25: do {
   switch ($55|0) {
   case 0:  {
    $86 = ($__p$0276|0)==(3);
    if ($86) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $$pre$i3$i$i51 = $729;$100 = $729;
     label = 30;
    }
    break;
   }
   case 1:  {
    $cond = ($__p$0276|0)==(3);
    if ($cond) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $57 = HEAP32[$__b>>2]|0;
     $58 = ((($57)) + 12|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ((($57)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$57>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 63]($57)|0);
      $$0$i$i40 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i40 = $67;
     }
     $68 = HEAP32[$__ct>>2]|0;
     $69 = ((($68)) + 12|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = (FUNCTION_TABLE_iiii[$70 & 31]($__ct,8192,$$0$i$i40)|0);
     if (!($71)) {
      label = 28;
      break L1;
     }
     $72 = HEAP32[$__b>>2]|0;
     $73 = ((($72)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($72)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$72>>2]|0;
      $79 = ((($78)) + 40|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 63]($72)|0);
      $$0$i$i42 = $81;
     } else {
      $82 = ((($74)) + 4|0);
      HEAP32[$73>>2] = $82;
      $83 = HEAP32[$74>>2]|0;
      $$0$i$i42 = $83;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$$0$i$i42);
     $$pre$i3$i$i51 = $729;$100 = $729;
     label = 30;
    }
    break;
   }
   case 2:  {
    $281 = ($__trailing_sign$0278|0)!=(0|0);
    $282 = ($__p$0276>>>0)<(2);
    $or$cond = $282 | $281;
    if (!($or$cond)) {
     $283 = ($__p$0276|0)==(2);
     $284 = HEAP8[$25>>0]|0;
     $285 = ($284<<24>>24)!=(0);
     $286 = $283 & $285;
     $brmerge = $20 | $286;
     if (!($brmerge)) {
      $730 = $727;$__trailing_sign$1 = 0;
      break L25;
     }
    }
    $287 = HEAP8[$__sym>>0]|0;
    $288 = $287 & 1;
    $289 = ($288<<24>>24)==(0);
    $290 = HEAP32[$21>>2]|0;
    $291 = $289 ? $22 : $290;
    $292 = $291;
    $293 = ($__p$0276|0)==(0);
    L42: do {
     if ($293) {
      $$ph = $290;$$ph240 = $287;$$ph241 = $292;
     } else {
      $304 = (($__p$0276) + -1)|0;
      $305 = (($__pat) + ($304)|0);
      $306 = HEAP8[$305>>0]|0;
      $switch = ($306&255)<(2);
      if ($switch) {
       $307 = $287 & 1;
       $308 = ($307<<24>>24)==(0);
       $309 = HEAP32[$22>>2]|0;
       $310 = $287&255;
       $311 = $310 >>> 1;
       $312 = $308 ? $22 : $290;
       $313 = $308 ? $311 : $309;
       $314 = (($312) + ($313<<2)|0);
       $315 = ($291|0)==($314|0);
       L45: do {
        if ($315) {
         $334 = $287;$336 = $290;$340 = $292;
        } else {
         $317 = $291;$732 = $292;
         while(1) {
          $316 = HEAP32[$317>>2]|0;
          $318 = HEAP32[$__ct>>2]|0;
          $319 = ((($318)) + 12|0);
          $320 = HEAP32[$319>>2]|0;
          $321 = (FUNCTION_TABLE_iiii[$320 & 31]($__ct,8192,$316)|0);
          if (!($321)) {
           $$lcssa294 = $732;
           break;
          }
          $322 = ((($317)) + 4|0);
          $323 = $322;
          $$pre197 = HEAP8[$__sym>>0]|0;
          $$pre198 = HEAP32[$21>>2]|0;
          $324 = $$pre197 & 1;
          $325 = ($324<<24>>24)==(0);
          $326 = HEAP32[$22>>2]|0;
          $327 = $$pre197&255;
          $328 = $327 >>> 1;
          $329 = $325 ? $22 : $$pre198;
          $330 = $325 ? $328 : $326;
          $331 = (($329) + ($330<<2)|0);
          $332 = ($322|0)==($331|0);
          if ($332) {
           $334 = $$pre197;$336 = $$pre198;$340 = $323;
           break L45;
          } else {
           $317 = $322;$732 = $323;
          }
         }
         $$pre199 = HEAP8[$__sym>>0]|0;
         $$pre200 = HEAP32[$21>>2]|0;
         $334 = $$pre199;$336 = $$pre200;$340 = $$lcssa294;
        }
       } while(0);
       $333 = $334 & 1;
       $335 = ($333<<24>>24)==(0);
       $337 = $335 ? $22 : $336;
       $338 = $337;
       $339 = (($340) - ($338))|0;
       $341 = $339 >> 2;
       $342 = HEAP8[$__spaces>>0]|0;
       $343 = $342 & 1;
       $344 = ($343<<24>>24)==(0);
       $345 = HEAP32[$23>>2]|0;
       $346 = $342&255;
       $347 = $346 >>> 1;
       $348 = $344 ? $347 : $345;
       $349 = ($348>>>0)<($341>>>0);
       if ($349) {
        $$ph = $336;$$ph240 = $334;$$ph241 = $338;
       } else {
        $350 = HEAP32[$24>>2]|0;
        $351 = $344 ? $23 : $350;
        $352 = (($351) + ($348<<2)|0);
        $353 = ($341|0)==(0);
        if ($353) {
         $$ph = $336;$$ph240 = $334;$$ph241 = $340;
        } else {
         $$sum = (($348) - ($341))|0;
         $354 = (($351) + ($$sum<<2)|0);
         $$in265 = $337;$356 = $354;
         while(1) {
          $355 = HEAP32[$356>>2]|0;
          $357 = HEAP32[$$in265>>2]|0;
          $358 = ($355|0)==($357|0);
          if (!($358)) {
           $$ph = $336;$$ph240 = $334;$$ph241 = $338;
           break L42;
          }
          $359 = ((($356)) + 4|0);
          $360 = ((($$in265)) + 4|0);
          $361 = ($359|0)==($352|0);
          if ($361) {
           $$ph = $336;$$ph240 = $334;$$ph241 = $340;
           break;
          } else {
           $$in265 = $360;$356 = $359;
          }
         }
        }
       }
      } else {
       $$ph = $290;$$ph240 = $287;$$ph241 = $292;
      }
     }
    } while(0);
    $294 = $$ph240 & 1;
    $295 = ($294<<24>>24)==(0);
    $296 = HEAP32[$22>>2]|0;
    $297 = $$ph240&255;
    $298 = $297 >>> 1;
    $299 = $295 ? $22 : $$ph;
    $300 = $295 ? $298 : $296;
    $301 = (($299) + ($300<<2)|0);
    $302 = $$ph241;
    $303 = ($302|0)==($301|0);
    L57: do {
     if ($303) {
      $$lcssa183 = $301;
     } else {
      $$pre$i3$i$i144270 = $729;$375 = $729;$401 = $302;
      while(1) {
       $362 = HEAP32[$__b>>2]|0;
       $363 = ($362|0)==(0|0);
       do {
        if ($363) {
         $388 = 1;
        } else {
         $364 = ((($362)) + 12|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ((($362)) + 16|0);
         $367 = HEAP32[$366>>2]|0;
         $368 = ($365|0)==($367|0);
         if ($368) {
          $369 = HEAP32[$362>>2]|0;
          $370 = ((($369)) + 36|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = (FUNCTION_TABLE_ii[$371 & 63]($362)|0);
          $$0$i$i$i$i136 = $372;
         } else {
          $373 = HEAP32[$365>>2]|0;
          $$0$i$i$i$i136 = $373;
         }
         $374 = ($$0$i$i$i$i136|0)==(-1);
         if ($374) {
          HEAP32[$__b>>2] = 0;
          $388 = 1;
          break;
         } else {
          $$pre$i$i$i138 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i139 = ($$pre$i$i$i138|0)==(0|0);
          $388 = $phitmp$i$i$i139;
          break;
         }
        }
       } while(0);
       $376 = ($375|0)==(0|0);
       do {
        if ($376) {
         $$pre$i3$i$i144204 = $$pre$i3$i$i144270;
         label = 114;
        } else {
         $377 = ((($375)) + 12|0);
         $378 = HEAP32[$377>>2]|0;
         $379 = ((($375)) + 16|0);
         $380 = HEAP32[$379>>2]|0;
         $381 = ($378|0)==($380|0);
         if ($381) {
          $382 = HEAP32[$375>>2]|0;
          $383 = ((($382)) + 36|0);
          $384 = HEAP32[$383>>2]|0;
          $385 = (FUNCTION_TABLE_ii[$384 & 63]($375)|0);
          $$0$i$i1$i$i142 = $385;
         } else {
          $386 = HEAP32[$378>>2]|0;
          $$0$i$i1$i$i142 = $386;
         }
         $387 = ($$0$i$i1$i$i142|0)==(-1);
         if ($387) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i144204 = 0;
          label = 114;
          break;
         } else {
          $phitmp$i4$i$i145 = ($$pre$i3$i$i144270|0)==(0|0);
          $tmp$i$i147 = $388 ^ $phitmp$i4$i$i145;
          if ($tmp$i$i147) {
           $$pre$i3$i$i144203 = $$pre$i3$i$i144270;$733 = $$pre$i3$i$i144270;
           break;
          } else {
           $$lcssa183 = $401;
           break L57;
          }
         }
        }
       } while(0);
       if ((label|0) == 114) {
        label = 0;
        if ($388) {
         $$lcssa183 = $401;
         break L57;
        } else {
         $$pre$i3$i$i144203 = $$pre$i3$i$i144204;$733 = 0;
        }
       }
       $389 = HEAP32[$__b>>2]|0;
       $390 = ((($389)) + 12|0);
       $391 = HEAP32[$390>>2]|0;
       $392 = ((($389)) + 16|0);
       $393 = HEAP32[$392>>2]|0;
       $394 = ($391|0)==($393|0);
       if ($394) {
        $395 = HEAP32[$389>>2]|0;
        $396 = ((($395)) + 36|0);
        $397 = HEAP32[$396>>2]|0;
        $398 = (FUNCTION_TABLE_ii[$397 & 63]($389)|0);
        $$0$i$i133 = $398;
       } else {
        $399 = HEAP32[$391>>2]|0;
        $$0$i$i133 = $399;
       }
       $400 = HEAP32[$401>>2]|0;
       $402 = ($$0$i$i133|0)==($400|0);
       if (!($402)) {
        $$lcssa183 = $401;
        break L57;
       }
       $403 = HEAP32[$__b>>2]|0;
       $404 = ((($403)) + 12|0);
       $405 = HEAP32[$404>>2]|0;
       $406 = ((($403)) + 16|0);
       $407 = HEAP32[$406>>2]|0;
       $408 = ($405|0)==($407|0);
       if ($408) {
        $409 = HEAP32[$403>>2]|0;
        $410 = ((($409)) + 40|0);
        $411 = HEAP32[$410>>2]|0;
        (FUNCTION_TABLE_ii[$411 & 63]($403)|0);
       } else {
        $412 = ((($405)) + 4|0);
        HEAP32[$404>>2] = $412;
       }
       $413 = ((($401)) + 4|0);
       $$pre201 = HEAP8[$__sym>>0]|0;
       $$pre202 = HEAP32[$21>>2]|0;
       $414 = $$pre201 & 1;
       $415 = ($414<<24>>24)==(0);
       $416 = HEAP32[$22>>2]|0;
       $417 = $$pre201&255;
       $418 = $417 >>> 1;
       $419 = $415 ? $22 : $$pre202;
       $420 = $415 ? $418 : $416;
       $421 = (($419) + ($420<<2)|0);
       $422 = ($413|0)==($421|0);
       if ($422) {
        $$lcssa183 = $421;
        break;
       } else {
        $$pre$i3$i$i144270 = $$pre$i3$i$i144203;$375 = $733;$401 = $413;
       }
      }
     }
    } while(0);
    if ($20) {
     $423 = HEAP8[$__sym>>0]|0;
     $424 = $423 & 1;
     $425 = ($424<<24>>24)==(0);
     $426 = HEAP32[$21>>2]|0;
     $427 = HEAP32[$22>>2]|0;
     $428 = $423&255;
     $429 = $428 >>> 1;
     $430 = $425 ? $22 : $426;
     $431 = $425 ? $429 : $427;
     $432 = (($430) + ($431<<2)|0);
     $433 = ($$lcssa183|0)==($432|0);
     if ($433) {
      $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
     } else {
      label = 126;
      break L1;
     }
    } else {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    }
    break;
   }
   case 3:  {
    $141 = HEAP8[$__psn>>0]|0;
    $142 = $141 & 1;
    $143 = ($142<<24>>24)==(0);
    $144 = HEAP32[$15>>2]|0;
    $145 = $141&255;
    $146 = $145 >>> 1;
    $147 = $143 ? $146 : $144;
    $148 = HEAP8[$__nsn>>0]|0;
    $149 = $148 & 1;
    $150 = ($149<<24>>24)==(0);
    $151 = HEAP32[$16>>2]|0;
    $152 = $148&255;
    $153 = $152 >>> 1;
    $154 = $150 ? $153 : $151;
    $155 = (0 - ($154))|0;
    $156 = ($147|0)==($155|0);
    if ($156) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $157 = ($147|0)==(0);
     $158 = ($154|0)==(0);
     $or$cond239 = $157 | $158;
     $159 = HEAP32[$__b>>2]|0;
     $160 = ((($159)) + 12|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = ((($159)) + 16|0);
     $163 = HEAP32[$162>>2]|0;
     $164 = ($161|0)==($163|0);
     if ($or$cond239) {
      if ($164) {
       $165 = HEAP32[$159>>2]|0;
       $166 = ((($165)) + 36|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = (FUNCTION_TABLE_ii[$167 & 63]($159)|0);
       $$0$i$i82 = $168;
      } else {
       $169 = HEAP32[$161>>2]|0;
       $$0$i$i82 = $169;
      }
      if ($157) {
       $195 = HEAP8[$__nsn>>0]|0;
       $196 = $195 & 1;
       $197 = ($196<<24>>24)==(0);
       $198 = HEAP32[$17>>2]|0;
       $199 = $197 ? $16 : $198;
       $200 = HEAP32[$199>>2]|0;
       $201 = ($$0$i$i82|0)==($200|0);
       if (!($201)) {
        $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
        break L25;
       }
       $202 = HEAP32[$__b>>2]|0;
       $203 = ((($202)) + 12|0);
       $204 = HEAP32[$203>>2]|0;
       $205 = ((($202)) + 16|0);
       $206 = HEAP32[$205>>2]|0;
       $207 = ($204|0)==($206|0);
       if ($207) {
        $208 = HEAP32[$202>>2]|0;
        $209 = ((($208)) + 40|0);
        $210 = HEAP32[$209>>2]|0;
        (FUNCTION_TABLE_ii[$210 & 63]($202)|0);
       } else {
        $211 = ((($204)) + 4|0);
        HEAP32[$203>>2] = $211;
       }
       HEAP8[$__neg>>0] = 1;
       $212 = HEAP8[$__nsn>>0]|0;
       $213 = $212 & 1;
       $214 = ($213<<24>>24)==(0);
       $215 = HEAP32[$16>>2]|0;
       $216 = $212&255;
       $217 = $216 >>> 1;
       $218 = $214 ? $217 : $215;
       $219 = ($218>>>0)>(1);
       $__nsn$__trailing_sign$0 = $219 ? $__nsn : $__trailing_sign$0278;
       $730 = $727;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
       break L25;
      }
      $170 = HEAP8[$__psn>>0]|0;
      $171 = $170 & 1;
      $172 = ($171<<24>>24)==(0);
      $173 = HEAP32[$18>>2]|0;
      $174 = $172 ? $15 : $173;
      $175 = HEAP32[$174>>2]|0;
      $176 = ($$0$i$i82|0)==($175|0);
      if (!($176)) {
       HEAP8[$__neg>>0] = 1;
       $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
       break L25;
      }
      $177 = HEAP32[$__b>>2]|0;
      $178 = ((($177)) + 12|0);
      $179 = HEAP32[$178>>2]|0;
      $180 = ((($177)) + 16|0);
      $181 = HEAP32[$180>>2]|0;
      $182 = ($179|0)==($181|0);
      if ($182) {
       $183 = HEAP32[$177>>2]|0;
       $184 = ((($183)) + 40|0);
       $185 = HEAP32[$184>>2]|0;
       (FUNCTION_TABLE_ii[$185 & 63]($177)|0);
      } else {
       $186 = ((($179)) + 4|0);
       HEAP32[$178>>2] = $186;
      }
      $187 = HEAP8[$__psn>>0]|0;
      $188 = $187 & 1;
      $189 = ($188<<24>>24)==(0);
      $190 = HEAP32[$15>>2]|0;
      $191 = $187&255;
      $192 = $191 >>> 1;
      $193 = $189 ? $192 : $190;
      $194 = ($193>>>0)>(1);
      $__psn$__trailing_sign$0 = $194 ? $__psn : $__trailing_sign$0278;
      $730 = $727;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      break L25;
     }
     if ($164) {
      $220 = HEAP32[$159>>2]|0;
      $221 = ((($220)) + 36|0);
      $222 = HEAP32[$221>>2]|0;
      $223 = (FUNCTION_TABLE_ii[$222 & 63]($159)|0);
      $$pre206 = HEAP8[$__psn>>0]|0;
      $$pre207 = HEAP32[$__b>>2]|0;
      $$phi$trans$insert = ((($$pre207)) + 12|0);
      $$pre208 = HEAP32[$$phi$trans$insert>>2]|0;
      $$phi$trans$insert209 = ((($$pre207)) + 16|0);
      $$pre210 = HEAP32[$$phi$trans$insert209>>2]|0;
      $$0$i$i105 = $223;$226 = $$pre206;$233 = $$pre207;$234 = $$pre208;$236 = $$pre210;
     } else {
      $224 = HEAP32[$161>>2]|0;
      $$0$i$i105 = $224;$226 = $141;$233 = $159;$234 = $161;$236 = $163;
     }
     $225 = $226 & 1;
     $227 = ($225<<24>>24)==(0);
     $228 = HEAP32[$18>>2]|0;
     $229 = $227 ? $15 : $228;
     $230 = HEAP32[$229>>2]|0;
     $231 = ($$0$i$i105|0)==($230|0);
     $232 = ((($233)) + 12|0);
     $235 = ($234|0)==($236|0);
     if ($231) {
      if ($235) {
       $237 = HEAP32[$233>>2]|0;
       $238 = ((($237)) + 40|0);
       $239 = HEAP32[$238>>2]|0;
       (FUNCTION_TABLE_ii[$239 & 63]($233)|0);
      } else {
       $240 = ((($234)) + 4|0);
       HEAP32[$232>>2] = $240;
      }
      $241 = HEAP8[$__psn>>0]|0;
      $242 = $241 & 1;
      $243 = ($242<<24>>24)==(0);
      $244 = HEAP32[$15>>2]|0;
      $245 = $241&255;
      $246 = $245 >>> 1;
      $247 = $243 ? $246 : $244;
      $248 = ($247>>>0)>(1);
      $__psn$__trailing_sign$010 = $248 ? $__psn : $__trailing_sign$0278;
      $730 = $727;$__trailing_sign$1 = $__psn$__trailing_sign$010;
      break L25;
     }
     if ($235) {
      $249 = HEAP32[$233>>2]|0;
      $250 = ((($249)) + 36|0);
      $251 = HEAP32[$250>>2]|0;
      $252 = (FUNCTION_TABLE_ii[$251 & 63]($233)|0);
      $$0$i$i111 = $252;
     } else {
      $253 = HEAP32[$234>>2]|0;
      $$0$i$i111 = $253;
     }
     $254 = HEAP8[$__nsn>>0]|0;
     $255 = $254 & 1;
     $256 = ($255<<24>>24)==(0);
     $257 = HEAP32[$17>>2]|0;
     $258 = $256 ? $16 : $257;
     $259 = HEAP32[$258>>2]|0;
     $260 = ($$0$i$i111|0)==($259|0);
     if (!($260)) {
      label = 86;
      break L1;
     }
     $261 = HEAP32[$__b>>2]|0;
     $262 = ((($261)) + 12|0);
     $263 = HEAP32[$262>>2]|0;
     $264 = ((($261)) + 16|0);
     $265 = HEAP32[$264>>2]|0;
     $266 = ($263|0)==($265|0);
     if ($266) {
      $267 = HEAP32[$261>>2]|0;
      $268 = ((($267)) + 40|0);
      $269 = HEAP32[$268>>2]|0;
      (FUNCTION_TABLE_ii[$269 & 63]($261)|0);
     } else {
      $270 = ((($263)) + 4|0);
      HEAP32[$262>>2] = $270;
     }
     HEAP8[$__neg>>0] = 1;
     $271 = HEAP8[$__nsn>>0]|0;
     $272 = $271 & 1;
     $273 = ($272<<24>>24)==(0);
     $274 = HEAP32[$16>>2]|0;
     $275 = $271&255;
     $276 = $275 >>> 1;
     $277 = $273 ? $276 : $274;
     $278 = ($277>>>0)>(1);
     $__nsn$__trailing_sign$011 = $278 ? $__nsn : $__trailing_sign$0278;
     $730 = $727;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
    }
    break;
   }
   case 4:  {
    $56 = HEAP32[$__ts>>2]|0;
    $$pre$i3$i$i126 = $729;$449 = $729;$495 = $727;$__ng$0 = 0;
    L138: while(1) {
     $436 = HEAP32[$__b>>2]|0;
     $437 = ($436|0)==(0|0);
     do {
      if ($437) {
       $462 = 1;
      } else {
       $438 = ((($436)) + 12|0);
       $439 = HEAP32[$438>>2]|0;
       $440 = ((($436)) + 16|0);
       $441 = HEAP32[$440>>2]|0;
       $442 = ($439|0)==($441|0);
       if ($442) {
        $443 = HEAP32[$436>>2]|0;
        $444 = ((($443)) + 36|0);
        $445 = HEAP32[$444>>2]|0;
        $446 = (FUNCTION_TABLE_ii[$445 & 63]($436)|0);
        $$0$i$i$i$i118 = $446;
       } else {
        $447 = HEAP32[$439>>2]|0;
        $$0$i$i$i$i118 = $447;
       }
       $448 = ($$0$i$i$i$i118|0)==(-1);
       if ($448) {
        HEAP32[$__b>>2] = 0;
        $462 = 1;
        break;
       } else {
        $$pre$i$i$i120 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i121 = ($$pre$i$i$i120|0)==(0|0);
        $462 = $phitmp$i$i$i121;
        break;
       }
      }
     } while(0);
     $450 = ($449|0)==(0|0);
     do {
      if ($450) {
       $$pre$i3$i$i126190 = $$pre$i3$i$i126;
       label = 140;
      } else {
       $451 = ((($449)) + 12|0);
       $452 = HEAP32[$451>>2]|0;
       $453 = ((($449)) + 16|0);
       $454 = HEAP32[$453>>2]|0;
       $455 = ($452|0)==($454|0);
       if ($455) {
        $456 = HEAP32[$449>>2]|0;
        $457 = ((($456)) + 36|0);
        $458 = HEAP32[$457>>2]|0;
        $459 = (FUNCTION_TABLE_ii[$458 & 63]($449)|0);
        $$0$i$i1$i$i124 = $459;
       } else {
        $460 = HEAP32[$452>>2]|0;
        $$0$i$i1$i$i124 = $460;
       }
       $461 = ($$0$i$i1$i$i124|0)==(-1);
       if ($461) {
        HEAP32[$__e>>2] = 0;
        $$pre$i3$i$i126190 = 0;
        label = 140;
        break;
       } else {
        $phitmp$i4$i$i127 = ($$pre$i3$i$i126|0)==(0|0);
        $tmp$i$i129 = $462 ^ $phitmp$i4$i$i127;
        if ($tmp$i$i129) {
         $$pre$i3$i$i126192 = $$pre$i3$i$i126;$734 = $$pre$i3$i$i126;
         break;
        } else {
         $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126;$__ng$0$lcssa = $__ng$0;
         break L138;
        }
       }
      }
     } while(0);
     if ((label|0) == 140) {
      label = 0;
      if ($462) {
       $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126190;$__ng$0$lcssa = $__ng$0;
       break;
      } else {
       $$pre$i3$i$i126192 = $$pre$i3$i$i126190;$734 = 0;
      }
     }
     $463 = HEAP32[$__b>>2]|0;
     $464 = ((($463)) + 12|0);
     $465 = HEAP32[$464>>2]|0;
     $466 = ((($463)) + 16|0);
     $467 = HEAP32[$466>>2]|0;
     $468 = ($465|0)==($467|0);
     if ($468) {
      $469 = HEAP32[$463>>2]|0;
      $470 = ((($469)) + 36|0);
      $471 = HEAP32[$470>>2]|0;
      $472 = (FUNCTION_TABLE_ii[$471 & 63]($463)|0);
      $$0$i$i116 = $472;
     } else {
      $473 = HEAP32[$465>>2]|0;
      $$0$i$i116 = $473;
     }
     $474 = HEAP32[$__ct>>2]|0;
     $475 = ((($474)) + 12|0);
     $476 = HEAP32[$475>>2]|0;
     $477 = (FUNCTION_TABLE_iiii[$476 & 31]($__ct,2048,$$0$i$i116)|0);
     if ($477) {
      $478 = HEAP32[$__wn>>2]|0;
      $479 = HEAP32[$0>>2]|0;
      $480 = ($478|0)==($479|0);
      if ($480) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       $$pre193 = HEAP32[$__wn>>2]|0;
       $482 = $$pre193;
      } else {
       $482 = $478;
      }
      $481 = ((($482)) + 4|0);
      HEAP32[$__wn>>2] = $481;
      HEAP32[$482>>2] = $$0$i$i116;
      $483 = (($__ng$0) + 1)|0;
      $735 = $495;$__ng$1 = $483;
     } else {
      $484 = HEAP8[$__grp>>0]|0;
      $485 = $484 & 1;
      $486 = ($485<<24>>24)==(0);
      $487 = HEAP32[$26>>2]|0;
      $488 = $484&255;
      $489 = $488 >>> 1;
      $490 = $486 ? $489 : $487;
      $491 = ($490|0)!=(0);
      $492 = ($__ng$0|0)!=(0);
      $or$cond7 = $492 & $491;
      $493 = ($$0$i$i116|0)==($56|0);
      $or$cond13 = $493 & $or$cond7;
      if (!($or$cond13)) {
       $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126192;$__ng$0$lcssa = $__ng$0;
       break;
      }
      $494 = HEAP32[$__ge>>2]|0;
      $496 = ($495|0)==($494|0);
      if ($496) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
       $$pre = HEAP32[$__gn>>2]|0;
       $498 = $$pre;
      } else {
       $498 = $495;
      }
      $497 = ((($498)) + 4|0);
      HEAP32[$__gn>>2] = $497;
      HEAP32[$498>>2] = $__ng$0;
      $735 = $497;$__ng$1 = 0;
     }
     $499 = HEAP32[$__b>>2]|0;
     $500 = ((($499)) + 12|0);
     $501 = HEAP32[$500>>2]|0;
     $502 = ((($499)) + 16|0);
     $503 = HEAP32[$502>>2]|0;
     $504 = ($501|0)==($503|0);
     if ($504) {
      $505 = HEAP32[$499>>2]|0;
      $506 = ((($505)) + 40|0);
      $507 = HEAP32[$506>>2]|0;
      (FUNCTION_TABLE_ii[$507 & 63]($499)|0);
      $$pre$i3$i$i126 = $$pre$i3$i$i126192;$449 = $734;$495 = $735;$__ng$0 = $__ng$1;
      continue;
     } else {
      $508 = ((($501)) + 4|0);
      HEAP32[$500>>2] = $508;
      $$pre$i3$i$i126 = $$pre$i3$i$i126192;$449 = $734;$495 = $735;$__ng$0 = $__ng$1;
      continue;
     }
    }
    $509 = HEAP32[$__gb>>2]|0;
    $510 = ($509|0)!=($$lcssa|0);
    $511 = ($__ng$0$lcssa|0)!=(0);
    $or$cond9 = $511 & $510;
    if ($or$cond9) {
     $512 = HEAP32[$__ge>>2]|0;
     $513 = ($$lcssa|0)==($512|0);
     if ($513) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
      $$pre194 = HEAP32[$__gn>>2]|0;
      $515 = $$pre194;
     } else {
      $515 = $$lcssa;
     }
     $514 = ((($515)) + 4|0);
     HEAP32[$__gn>>2] = $514;
     HEAP32[$515>>2] = $__ng$0$lcssa;
     $736 = $514;
    } else {
     $736 = $$lcssa;
    }
    $516 = HEAP32[$__fd>>2]|0;
    $517 = ($516|0)>(0);
    if ($517) {
     $518 = HEAP32[$__b>>2]|0;
     $519 = ($518|0)==(0|0);
     do {
      if ($519) {
       $737 = 1;
      } else {
       $520 = ((($518)) + 12|0);
       $521 = HEAP32[$520>>2]|0;
       $522 = ((($518)) + 16|0);
       $523 = HEAP32[$522>>2]|0;
       $524 = ($521|0)==($523|0);
       if ($524) {
        $525 = HEAP32[$518>>2]|0;
        $526 = ((($525)) + 36|0);
        $527 = HEAP32[$526>>2]|0;
        $528 = (FUNCTION_TABLE_ii[$527 & 63]($518)|0);
        $$0$i$i$i$i90 = $528;
       } else {
        $529 = HEAP32[$521>>2]|0;
        $$0$i$i$i$i90 = $529;
       }
       $530 = ($$0$i$i$i$i90|0)==(-1);
       if ($530) {
        HEAP32[$__b>>2] = 0;
        $737 = 1;
        break;
       } else {
        $$pre$i$i$i92 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i93 = ($$pre$i$i$i92|0)==(0|0);
        $737 = $phitmp$i$i$i93;
        break;
       }
      }
     } while(0);
     $531 = ($$pre$i3$i$i98|0)==(0|0);
     do {
      if ($531) {
       label = 174;
      } else {
       $532 = ((($$pre$i3$i$i98)) + 12|0);
       $533 = HEAP32[$532>>2]|0;
       $534 = ((($$pre$i3$i$i98)) + 16|0);
       $535 = HEAP32[$534>>2]|0;
       $536 = ($533|0)==($535|0);
       if ($536) {
        $537 = HEAP32[$$pre$i3$i$i98>>2]|0;
        $538 = ((($537)) + 36|0);
        $539 = HEAP32[$538>>2]|0;
        $540 = (FUNCTION_TABLE_ii[$539 & 63]($$pre$i3$i$i98)|0);
        $$0$i$i1$i$i96 = $540;
       } else {
        $541 = HEAP32[$533>>2]|0;
        $$0$i$i1$i$i96 = $541;
       }
       $542 = ($$0$i$i1$i$i96|0)==(-1);
       if ($542) {
        HEAP32[$__e>>2] = 0;
        label = 174;
        break;
       } else {
        if ($737) {
         $738 = $$pre$i3$i$i98;
         break;
        } else {
         label = 180;
         break L1;
        }
       }
      }
     } while(0);
     if ((label|0) == 174) {
      label = 0;
      if ($737) {
       label = 180;
       break L1;
      } else {
       $738 = 0;
      }
     }
     $543 = HEAP32[$__b>>2]|0;
     $544 = ((($543)) + 12|0);
     $545 = HEAP32[$544>>2]|0;
     $546 = ((($543)) + 16|0);
     $547 = HEAP32[$546>>2]|0;
     $548 = ($545|0)==($547|0);
     if ($548) {
      $549 = HEAP32[$543>>2]|0;
      $550 = ((($549)) + 36|0);
      $551 = HEAP32[$550>>2]|0;
      $552 = (FUNCTION_TABLE_ii[$551 & 63]($543)|0);
      $$0$i$i87 = $552;
     } else {
      $553 = HEAP32[$545>>2]|0;
      $$0$i$i87 = $553;
     }
     $554 = HEAP32[$__dp>>2]|0;
     $555 = ($$0$i$i87|0)==($554|0);
     if (!($555)) {
      label = 180;
      break L1;
     }
     $558 = HEAP32[$__b>>2]|0;
     $559 = ((($558)) + 12|0);
     $560 = HEAP32[$559>>2]|0;
     $561 = ((($558)) + 16|0);
     $562 = HEAP32[$561>>2]|0;
     $563 = ($560|0)==($562|0);
     if ($563) {
      $564 = HEAP32[$558>>2]|0;
      $565 = ((($564)) + 40|0);
      $566 = HEAP32[$565>>2]|0;
      (FUNCTION_TABLE_ii[$566 & 63]($558)|0);
     } else {
      $567 = ((($560)) + 4|0);
      HEAP32[$559>>2] = $567;
     }
     $568 = ($516|0)>(0);
     if ($568) {
      $$pre$i3$i$i76261 = $738;$582 = $738;$630 = $516;
      while(1) {
       $569 = HEAP32[$__b>>2]|0;
       $570 = ($569|0)==(0|0);
       do {
        if ($570) {
         $595 = 1;
        } else {
         $571 = ((($569)) + 12|0);
         $572 = HEAP32[$571>>2]|0;
         $573 = ((($569)) + 16|0);
         $574 = HEAP32[$573>>2]|0;
         $575 = ($572|0)==($574|0);
         if ($575) {
          $576 = HEAP32[$569>>2]|0;
          $577 = ((($576)) + 36|0);
          $578 = HEAP32[$577>>2]|0;
          $579 = (FUNCTION_TABLE_ii[$578 & 63]($569)|0);
          $$0$i$i$i$i68 = $579;
         } else {
          $580 = HEAP32[$572>>2]|0;
          $$0$i$i$i$i68 = $580;
         }
         $581 = ($$0$i$i$i$i68|0)==(-1);
         if ($581) {
          HEAP32[$__b>>2] = 0;
          $595 = 1;
          break;
         } else {
          $$pre$i$i$i70 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i71 = ($$pre$i$i$i70|0)==(0|0);
          $595 = $phitmp$i$i$i71;
          break;
         }
        }
       } while(0);
       $583 = ($582|0)==(0|0);
       do {
        if ($583) {
         $$pre$i3$i$i76195$ph = $$pre$i3$i$i76261;
         label = 198;
        } else {
         $584 = ((($582)) + 12|0);
         $585 = HEAP32[$584>>2]|0;
         $586 = ((($582)) + 16|0);
         $587 = HEAP32[$586>>2]|0;
         $588 = ($585|0)==($587|0);
         if ($588) {
          $589 = HEAP32[$582>>2]|0;
          $590 = ((($589)) + 36|0);
          $591 = HEAP32[$590>>2]|0;
          $592 = (FUNCTION_TABLE_ii[$591 & 63]($582)|0);
          $$0$i$i1$i$i74 = $592;
         } else {
          $593 = HEAP32[$585>>2]|0;
          $$0$i$i1$i$i74 = $593;
         }
         $594 = ($$0$i$i1$i$i74|0)==(-1);
         if ($594) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i76195$ph = 0;
          label = 198;
          break;
         } else {
          $phitmp$i4$i$i77 = ($$pre$i3$i$i76261|0)==(0|0);
          $tmp$i$i79 = $595 ^ $phitmp$i4$i$i77;
          if ($tmp$i$i79) {
           $$pre$i3$i$i76195216 = $$pre$i3$i$i76261;$739 = $$pre$i3$i$i76261;
           break;
          } else {
           label = 204;
           break L1;
          }
         }
        }
       } while(0);
       if ((label|0) == 198) {
        label = 0;
        if ($595) {
         label = 204;
         break L1;
        } else {
         $$pre$i3$i$i76195216 = $$pre$i3$i$i76195$ph;$739 = 0;
        }
       }
       $596 = HEAP32[$__b>>2]|0;
       $597 = ((($596)) + 12|0);
       $598 = HEAP32[$597>>2]|0;
       $599 = ((($596)) + 16|0);
       $600 = HEAP32[$599>>2]|0;
       $601 = ($598|0)==($600|0);
       if ($601) {
        $602 = HEAP32[$596>>2]|0;
        $603 = ((($602)) + 36|0);
        $604 = HEAP32[$603>>2]|0;
        $605 = (FUNCTION_TABLE_ii[$604 & 63]($596)|0);
        $$0$i$i65 = $605;
       } else {
        $606 = HEAP32[$598>>2]|0;
        $$0$i$i65 = $606;
       }
       $607 = HEAP32[$__ct>>2]|0;
       $608 = ((($607)) + 12|0);
       $609 = HEAP32[$608>>2]|0;
       $610 = (FUNCTION_TABLE_iiii[$609 & 31]($__ct,2048,$$0$i$i65)|0);
       if (!($610)) {
        label = 204;
        break L1;
       }
       $613 = HEAP32[$__wn>>2]|0;
       $614 = HEAP32[$0>>2]|0;
       $615 = ($613|0)==($614|0);
       if ($615) {
        __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       }
       $616 = HEAP32[$__b>>2]|0;
       $617 = ((($616)) + 12|0);
       $618 = HEAP32[$617>>2]|0;
       $619 = ((($616)) + 16|0);
       $620 = HEAP32[$619>>2]|0;
       $621 = ($618|0)==($620|0);
       if ($621) {
        $622 = HEAP32[$616>>2]|0;
        $623 = ((($622)) + 36|0);
        $624 = HEAP32[$623>>2]|0;
        $625 = (FUNCTION_TABLE_ii[$624 & 63]($616)|0);
        $$0$i$i26 = $625;
       } else {
        $626 = HEAP32[$618>>2]|0;
        $$0$i$i26 = $626;
       }
       $627 = HEAP32[$__wn>>2]|0;
       $628 = ((($627)) + 4|0);
       HEAP32[$__wn>>2] = $628;
       HEAP32[$627>>2] = $$0$i$i26;
       $629 = (($630) + -1)|0;
       HEAP32[$__fd>>2] = $629;
       $631 = HEAP32[$__b>>2]|0;
       $632 = ((($631)) + 12|0);
       $633 = HEAP32[$632>>2]|0;
       $634 = ((($631)) + 16|0);
       $635 = HEAP32[$634>>2]|0;
       $636 = ($633|0)==($635|0);
       if ($636) {
        $637 = HEAP32[$631>>2]|0;
        $638 = ((($637)) + 40|0);
        $639 = HEAP32[$638>>2]|0;
        (FUNCTION_TABLE_ii[$639 & 63]($631)|0);
       } else {
        $641 = ((($633)) + 4|0);
        HEAP32[$632>>2] = $641;
       }
       $640 = ($630|0)>(1);
       if ($640) {
        $$pre$i3$i$i76261 = $$pre$i3$i$i76195216;$582 = $739;$630 = $629;
       } else {
        break;
       }
      }
     }
    }
    $642 = HEAP32[$__wn>>2]|0;
    $643 = HEAP32[$__wb>>2]|0;
    $644 = ($642|0)==($643|0);
    if ($644) {
     label = 215;
     break L1;
    } else {
     $730 = $736;$__trailing_sign$1 = $__trailing_sign$0278;
    }
    break;
   }
   default: {
    $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
   }
   }
  } while(0);
  L261: do {
   if ((label|0) == 30) {
    while(1) {
     label = 0;
     $87 = HEAP32[$__b>>2]|0;
     $88 = ($87|0)==(0|0);
     do {
      if ($88) {
       $113 = 1;
      } else {
       $89 = ((($87)) + 12|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ((($87)) + 16|0);
       $92 = HEAP32[$91>>2]|0;
       $93 = ($90|0)==($92|0);
       if ($93) {
        $94 = HEAP32[$87>>2]|0;
        $95 = ((($94)) + 36|0);
        $96 = HEAP32[$95>>2]|0;
        $97 = (FUNCTION_TABLE_ii[$96 & 63]($87)|0);
        $$0$i$i$i$i43 = $97;
       } else {
        $98 = HEAP32[$90>>2]|0;
        $$0$i$i$i$i43 = $98;
       }
       $99 = ($$0$i$i$i$i43|0)==(-1);
       if ($99) {
        HEAP32[$__b>>2] = 0;
        $113 = 1;
        break;
       } else {
        $$pre$i$i$i45 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i46 = ($$pre$i$i$i45|0)==(0|0);
        $113 = $phitmp$i$i$i46;
        break;
       }
      }
     } while(0);
     $101 = ($100|0)==(0|0);
     do {
      if ($101) {
       $$pre$i3$i$i51211 = $$pre$i3$i$i51;
       label = 43;
      } else {
       $102 = ((($100)) + 12|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ((($100)) + 16|0);
       $105 = HEAP32[$104>>2]|0;
       $106 = ($103|0)==($105|0);
       if ($106) {
        $107 = HEAP32[$100>>2]|0;
        $108 = ((($107)) + 36|0);
        $109 = HEAP32[$108>>2]|0;
        $110 = (FUNCTION_TABLE_ii[$109 & 63]($100)|0);
        $$0$i$i1$i$i49 = $110;
       } else {
        $111 = HEAP32[$103>>2]|0;
        $$0$i$i1$i$i49 = $111;
       }
       $112 = ($$0$i$i1$i$i49|0)==(-1);
       if ($112) {
        HEAP32[$__e>>2] = 0;
        $$pre$i3$i$i51211 = 0;
        label = 43;
        break;
       } else {
        $phitmp$i4$i$i52 = ($$pre$i3$i$i51|0)==(0|0);
        $tmp$i$i54 = $113 ^ $phitmp$i4$i$i52;
        if ($tmp$i$i54) {
         $$pre$i3$i$i51213 = $$pre$i3$i$i51;$731 = $$pre$i3$i$i51;
         break;
        } else {
         $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
         break L261;
        }
       }
      }
     } while(0);
     if ((label|0) == 43) {
      label = 0;
      if ($113) {
       $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
       break L261;
      } else {
       $$pre$i3$i$i51213 = $$pre$i3$i$i51211;$731 = 0;
      }
     }
     $114 = HEAP32[$__b>>2]|0;
     $115 = ((($114)) + 12|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ((($114)) + 16|0);
     $118 = HEAP32[$117>>2]|0;
     $119 = ($116|0)==($118|0);
     if ($119) {
      $120 = HEAP32[$114>>2]|0;
      $121 = ((($120)) + 36|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = (FUNCTION_TABLE_ii[$122 & 63]($114)|0);
      $$0$i$i56 = $123;
     } else {
      $124 = HEAP32[$116>>2]|0;
      $$0$i$i56 = $124;
     }
     $125 = HEAP32[$__ct>>2]|0;
     $126 = ((($125)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = (FUNCTION_TABLE_iiii[$127 & 31]($__ct,8192,$$0$i$i56)|0);
     if (!($128)) {
      $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
      break L261;
     }
     $129 = HEAP32[$__b>>2]|0;
     $130 = ((($129)) + 12|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ((($129)) + 16|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ($131|0)==($133|0);
     if ($134) {
      $135 = HEAP32[$129>>2]|0;
      $136 = ((($135)) + 40|0);
      $137 = HEAP32[$136>>2]|0;
      $138 = (FUNCTION_TABLE_ii[$137 & 63]($129)|0);
      $$0$i$i60 = $138;
     } else {
      $139 = ((($131)) + 4|0);
      HEAP32[$130>>2] = $139;
      $140 = HEAP32[$131>>2]|0;
      $$0$i$i60 = $140;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$$0$i$i60);
     $$pre$i3$i$i51 = $$pre$i3$i$i51213;$100 = $731;
     label = 30;
    }
   }
  } while(0);
  $647 = (($__p$0276) + 1)|0;
  $648 = ($647>>>0)<(4);
  if ($648) {
   $727 = $730;$__p$0276 = $647;$__trailing_sign$0278 = $__trailing_sign$1;
  } else {
   $$lcssa248 = $730;$__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 217;
   break;
  }
 }
 L296: do {
  if ((label|0) == 28) {
   $84 = HEAP32[$__err>>2]|0;
   $85 = $84 | 4;
   HEAP32[$__err>>2] = $85;
   $$0 = 0;
  }
  else if ((label|0) == 86) {
   $279 = HEAP32[$__err>>2]|0;
   $280 = $279 | 4;
   HEAP32[$__err>>2] = $280;
   $$0 = 0;
  }
  else if ((label|0) == 126) {
   $434 = HEAP32[$__err>>2]|0;
   $435 = $434 | 4;
   HEAP32[$__err>>2] = $435;
   $$0 = 0;
  }
  else if ((label|0) == 180) {
   $556 = HEAP32[$__err>>2]|0;
   $557 = $556 | 4;
   HEAP32[$__err>>2] = $557;
   $$0 = 0;
  }
  else if ((label|0) == 204) {
   $611 = HEAP32[$__err>>2]|0;
   $612 = $611 | 4;
   HEAP32[$__err>>2] = $612;
   $$0 = 0;
  }
  else if ((label|0) == 215) {
   $645 = HEAP32[$__err>>2]|0;
   $646 = $645 | 4;
   HEAP32[$__err>>2] = $646;
   $$0 = 0;
  }
  else if ((label|0) == 217) {
   $649 = ($__trailing_sign$0$lcssa|0)==(0|0);
   L304: do {
    if (!($649)) {
     $650 = ((($__trailing_sign$0$lcssa)) + 4|0);
     $651 = ((($__trailing_sign$0$lcssa)) + 8|0);
     $__i$0 = 1;
     L306: while(1) {
      $652 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $653 = $652 & 1;
      $654 = ($653<<24>>24)==(0);
      if ($654) {
       $656 = $652&255;
       $657 = $656 >>> 1;
       $659 = $657;
      } else {
       $655 = HEAP32[$650>>2]|0;
       $659 = $655;
      }
      $658 = ($__i$0>>>0)<($659>>>0);
      if (!($658)) {
       break L304;
      }
      $660 = HEAP32[$__b>>2]|0;
      $661 = ($660|0)==(0|0);
      do {
       if ($661) {
        $740 = 1;
       } else {
        $662 = ((($660)) + 12|0);
        $663 = HEAP32[$662>>2]|0;
        $664 = ((($660)) + 16|0);
        $665 = HEAP32[$664>>2]|0;
        $666 = ($663|0)==($665|0);
        if ($666) {
         $667 = HEAP32[$660>>2]|0;
         $668 = ((($667)) + 36|0);
         $669 = HEAP32[$668>>2]|0;
         $670 = (FUNCTION_TABLE_ii[$669 & 63]($660)|0);
         $$0$i$i$i$i = $670;
        } else {
         $671 = HEAP32[$663>>2]|0;
         $$0$i$i$i$i = $671;
        }
        $672 = ($$0$i$i$i$i|0)==(-1);
        if ($672) {
         HEAP32[$__b>>2] = 0;
         $740 = 1;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
         $740 = $phitmp$i$i$i;
         break;
        }
       }
      } while(0);
      $673 = HEAP32[$__e>>2]|0;
      $674 = ($673|0)==(0|0);
      do {
       if ($674) {
        label = 236;
       } else {
        $675 = ((($673)) + 12|0);
        $676 = HEAP32[$675>>2]|0;
        $677 = ((($673)) + 16|0);
        $678 = HEAP32[$677>>2]|0;
        $679 = ($676|0)==($678|0);
        if ($679) {
         $680 = HEAP32[$673>>2]|0;
         $681 = ((($680)) + 36|0);
         $682 = HEAP32[$681>>2]|0;
         $683 = (FUNCTION_TABLE_ii[$682 & 63]($673)|0);
         $$0$i$i1$i$i = $683;
        } else {
         $684 = HEAP32[$676>>2]|0;
         $$0$i$i1$i$i = $684;
        }
        $685 = ($$0$i$i1$i$i|0)==(-1);
        if ($685) {
         HEAP32[$__e>>2] = 0;
         label = 236;
         break;
        } else {
         if ($740) {
          break;
         } else {
          break L306;
         }
        }
       }
      } while(0);
      if ((label|0) == 236) {
       label = 0;
       if ($740) {
        break;
       }
      }
      $686 = HEAP32[$__b>>2]|0;
      $687 = ((($686)) + 12|0);
      $688 = HEAP32[$687>>2]|0;
      $689 = ((($686)) + 16|0);
      $690 = HEAP32[$689>>2]|0;
      $691 = ($688|0)==($690|0);
      if ($691) {
       $692 = HEAP32[$686>>2]|0;
       $693 = ((($692)) + 36|0);
       $694 = HEAP32[$693>>2]|0;
       $695 = (FUNCTION_TABLE_ii[$694 & 63]($686)|0);
       $$0$i$i = $695;
      } else {
       $696 = HEAP32[$688>>2]|0;
       $$0$i$i = $696;
      }
      $697 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $698 = $697 & 1;
      $699 = ($698<<24>>24)==(0);
      if ($699) {
       $702 = $650;
      } else {
       $700 = HEAP32[$651>>2]|0;
       $702 = $700;
      }
      $701 = (($702) + ($__i$0<<2)|0);
      $703 = HEAP32[$701>>2]|0;
      $704 = ($$0$i$i|0)==($703|0);
      if (!($704)) {
       break;
      }
      $707 = (($__i$0) + 1)|0;
      $708 = HEAP32[$__b>>2]|0;
      $709 = ((($708)) + 12|0);
      $710 = HEAP32[$709>>2]|0;
      $711 = ((($708)) + 16|0);
      $712 = HEAP32[$711>>2]|0;
      $713 = ($710|0)==($712|0);
      if ($713) {
       $714 = HEAP32[$708>>2]|0;
       $715 = ((($714)) + 40|0);
       $716 = HEAP32[$715>>2]|0;
       (FUNCTION_TABLE_ii[$716 & 63]($708)|0);
       $__i$0 = $707;
       continue;
      } else {
       $717 = ((($710)) + 4|0);
       HEAP32[$709>>2] = $717;
       $__i$0 = $707;
       continue;
      }
     }
     $705 = HEAP32[$__err>>2]|0;
     $706 = $705 | 4;
     HEAP32[$__err>>2] = $706;
     $$0 = 0;
     break L296;
    }
   } while(0);
   $718 = HEAP32[$__gb>>2]|0;
   $719 = ($718|0)==($$lcssa248|0);
   if ($719) {
    $$0 = 1;
   } else {
    HEAP32[$__et>>2] = 0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$718,$$lcssa248,$__et);
    $720 = HEAP32[$__et>>2]|0;
    $721 = ($720|0)==(0);
    if ($721) {
     $$0 = 1;
    } else {
     $722 = HEAP32[$__err>>2]|0;
     $723 = $722 | 4;
     HEAP32[$__err>>2] = $723;
     $$0 = 0;
    }
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $724 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $725 = ($724|0)==(0|0);
 if (!($725)) {
  $726 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$726 & 127]($724);
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$byval_copy = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$02 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0;
 $$byval_copy = sp + 424|0;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 428|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 400|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 $10 = $6;
 if ($9) {
  $11 = HEAP8[$__v>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   HEAP8[$__v>>0] = 0;
  } else {
   $14 = ((($__v)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$15>>2] = 0;
  }
  $16 = ((($__v)) + 4|0);
  HEAP32[$16>>2] = 0;
  $17 = HEAP8[$__neg>>0]|0;
  $18 = ($17<<24>>24)==(0);
  if (!($18)) {
   $19 = HEAP32[$5>>2]|0;
   $20 = ((($19)) + 44|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_iii[$21 & 15]($5,45)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__v,$22);
  }
  $23 = HEAP32[$5>>2]|0;
  $24 = ((($23)) + 44|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = (FUNCTION_TABLE_iii[$25 & 15]($5,48)|0);
  $27 = HEAP32[$__wb>>2]|0;
  $28 = HEAP32[$__wn>>2]|0;
  $29 = ((($28)) + -4|0);
  $30 = ($27>>>0)<($29>>>0);
  L10: do {
   if ($30) {
    $__w$02 = $27;
    while(1) {
     $31 = HEAP32[$__w$02>>2]|0;
     $32 = ($31|0)==($26|0);
     if (!($32)) {
      $__w$0$lcssa = $__w$02;
      break L10;
     }
     $33 = ((($__w$02)) + 4|0);
     $34 = ($33>>>0)<($29>>>0);
     if ($34) {
      $__w$02 = $33;
     } else {
      $__w$0$lcssa = $33;
      break;
     }
    }
   } else {
    $__w$0$lcssa = $27;
   }
  } while(0);
  (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v,$__w$0$lcssa,$28)|0);
 }
 $35 = HEAP32[$__b>>2]|0;
 $36 = ($35|0)==(0|0);
 do {
  if ($36) {
   $67 = 1;
  } else {
   $37 = ((($35)) + 12|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ((($35)) + 16|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ($38|0)==($40|0);
   if ($41) {
    $42 = HEAP32[$35>>2]|0;
    $43 = ((($42)) + 36|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = (FUNCTION_TABLE_ii[$44 & 63]($35)|0);
    $$0$i$i$i$i = $45;
   } else {
    $46 = HEAP32[$38>>2]|0;
    $$0$i$i$i$i = $46;
   }
   $47 = ($$0$i$i$i$i|0)==(-1);
   if ($47) {
    HEAP32[$__b>>2] = 0;
    $67 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $67 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $48 = ($6|0)==(0);
 do {
  if ($48) {
   label = 24;
  } else {
   $49 = ((($10)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($10)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $54 = $6;
    $55 = HEAP32[$54>>2]|0;
    $56 = ((($55)) + 36|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = (FUNCTION_TABLE_ii[$57 & 63]($10)|0);
    $$0$i$i1$i$i = $58;
   } else {
    $59 = HEAP32[$50>>2]|0;
    $$0$i$i1$i$i = $59;
   }
   $60 = ($$0$i$i1$i$i|0)==(-1);
   if ($60) {
    HEAP32[$__e>>2] = 0;
    label = 24;
    break;
   } else {
    if ($67) {
     break;
    } else {
     label = 26;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 24) {
  if ($67) {
   label = 26;
  }
 }
 if ((label|0) == 26) {
  $61 = HEAP32[$__err>>2]|0;
  $62 = $61 | 2;
  HEAP32[$__err>>2] = $62;
 }
 $63 = HEAP32[$__b>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
 $64 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $65 = ($64|0)==(0|0);
 if (!($65)) {
  $66 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$66 & 127]($64);
 }
 STACKTOP = sp;return ($63|0);
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5880)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 63]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 63]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = ((($__nsn)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP32[$22>>2] = 0;
  }
  $23 = ((($__nsn)) + 4|0);
  HEAP32[$23>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  HEAP32[$1>>2] = 0;
  $24 = ((($1)) + 4|0);
  HEAP32[$24>>2] = 0;
  $25 = ((($1)) + 8|0);
  HEAP32[$25>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  $26 = HEAP32[$10>>2]|0;
  $27 = ((($26)) + 28|0);
  $28 = HEAP32[$27>>2]|0;
  FUNCTION_TABLE_vii[$28 & 63]($2,$10);
  $29 = HEAP8[$__psn>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $32 = ((($__psn)) + 8|0);
   $33 = HEAP32[$32>>2]|0;
   HEAP32[$33>>2] = 0;
  }
  $34 = ((($__psn)) + 4|0);
  HEAP32[$34>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  HEAP32[$2>>2] = 0;
  $35 = ((($2)) + 4|0);
  HEAP32[$35>>2] = 0;
  $36 = ((($2)) + 8|0);
  HEAP32[$36>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  $37 = HEAP32[$10>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_ii[$39 & 63]($10)|0);
  HEAP32[$__dp>>2] = $40;
  $41 = HEAP32[$10>>2]|0;
  $42 = ((($41)) + 16|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (FUNCTION_TABLE_ii[$43 & 63]($10)|0);
  HEAP32[$__ts>>2] = $44;
  $45 = HEAP32[$10>>2]|0;
  $46 = ((($45)) + 20|0);
  $47 = HEAP32[$46>>2]|0;
  FUNCTION_TABLE_vii[$47 & 63]($3,$10);
  $48 = HEAP8[$__grp>>0]|0;
  $49 = $48 & 1;
  $50 = ($49<<24>>24)==(0);
  if ($50) {
   $54 = ((($__grp)) + 1|0);
   HEAP8[$54>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $51 = ((($__grp)) + 8|0);
   $52 = HEAP32[$51>>2]|0;
   HEAP8[$52>>0] = 0;
   $53 = ((($__grp)) + 4|0);
   HEAP32[$53>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  HEAP32[$3>>2] = 0;
  $55 = ((($3)) + 4|0);
  HEAP32[$55>>2] = 0;
  $56 = ((($3)) + 8|0);
  HEAP32[$56>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $57 = HEAP32[$10>>2]|0;
  $58 = ((($57)) + 24|0);
  $59 = HEAP32[$58>>2]|0;
  FUNCTION_TABLE_vii[$59 & 63]($4,$10);
  $60 = HEAP8[$__sym>>0]|0;
  $61 = $60 & 1;
  $62 = ($61<<24>>24)==(0);
  if ($62) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $63 = ((($__sym)) + 8|0);
   $64 = HEAP32[$63>>2]|0;
   HEAP32[$64>>2] = 0;
  }
  $65 = ((($__sym)) + 4|0);
  HEAP32[$65>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $66 = ((($4)) + 4|0);
  HEAP32[$66>>2] = 0;
  $67 = ((($4)) + 8|0);
  HEAP32[$67>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $68 = HEAP32[$10>>2]|0;
  $69 = ((($68)) + 36|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = (FUNCTION_TABLE_ii[$70 & 63]($10)|0);
  $storemerge = $71;
 } else {
  $72 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5816)|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ((($73)) + 44|0);
  $75 = HEAP32[$74>>2]|0;
  FUNCTION_TABLE_vii[$75 & 63]($5,$72);
  $76 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$76&255;HEAP8[$__pat+1>>0]=($76>>8)&255;HEAP8[$__pat+2>>0]=($76>>16)&255;HEAP8[$__pat+3>>0]=$76>>24;
  $77 = HEAP32[$72>>2]|0;
  $78 = ((($77)) + 32|0);
  $79 = HEAP32[$78>>2]|0;
  FUNCTION_TABLE_vii[$79 & 63]($6,$72);
  $80 = HEAP8[$__nsn>>0]|0;
  $81 = $80 & 1;
  $82 = ($81<<24>>24)==(0);
  if ($82) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $83 = ((($__nsn)) + 8|0);
   $84 = HEAP32[$83>>2]|0;
   HEAP32[$84>>2] = 0;
  }
  $85 = ((($__nsn)) + 4|0);
  HEAP32[$85>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  HEAP32[$6>>2] = 0;
  $86 = ((($6)) + 4|0);
  HEAP32[$86>>2] = 0;
  $87 = ((($6)) + 8|0);
  HEAP32[$87>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  $88 = HEAP32[$72>>2]|0;
  $89 = ((($88)) + 28|0);
  $90 = HEAP32[$89>>2]|0;
  FUNCTION_TABLE_vii[$90 & 63]($7,$72);
  $91 = HEAP8[$__psn>>0]|0;
  $92 = $91 & 1;
  $93 = ($92<<24>>24)==(0);
  if ($93) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $94 = ((($__psn)) + 8|0);
   $95 = HEAP32[$94>>2]|0;
   HEAP32[$95>>2] = 0;
  }
  $96 = ((($__psn)) + 4|0);
  HEAP32[$96>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  HEAP32[$7>>2] = 0;
  $97 = ((($7)) + 4|0);
  HEAP32[$97>>2] = 0;
  $98 = ((($7)) + 8|0);
  HEAP32[$98>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  $99 = HEAP32[$72>>2]|0;
  $100 = ((($99)) + 12|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = (FUNCTION_TABLE_ii[$101 & 63]($72)|0);
  HEAP32[$__dp>>2] = $102;
  $103 = HEAP32[$72>>2]|0;
  $104 = ((($103)) + 16|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = (FUNCTION_TABLE_ii[$105 & 63]($72)|0);
  HEAP32[$__ts>>2] = $106;
  $107 = HEAP32[$72>>2]|0;
  $108 = ((($107)) + 20|0);
  $109 = HEAP32[$108>>2]|0;
  FUNCTION_TABLE_vii[$109 & 63]($8,$72);
  $110 = HEAP8[$__grp>>0]|0;
  $111 = $110 & 1;
  $112 = ($111<<24>>24)==(0);
  if ($112) {
   $116 = ((($__grp)) + 1|0);
   HEAP8[$116>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $113 = ((($__grp)) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   HEAP8[$114>>0] = 0;
   $115 = ((($__grp)) + 4|0);
   HEAP32[$115>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  HEAP32[$8>>2] = 0;
  $117 = ((($8)) + 4|0);
  HEAP32[$117>>2] = 0;
  $118 = ((($8)) + 8|0);
  HEAP32[$118>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $119 = HEAP32[$72>>2]|0;
  $120 = ((($119)) + 24|0);
  $121 = HEAP32[$120>>2]|0;
  FUNCTION_TABLE_vii[$121 & 63]($9,$72);
  $122 = HEAP8[$__sym>>0]|0;
  $123 = $122 & 1;
  $124 = ($123<<24>>24)==(0);
  if ($124) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $125 = ((($__sym)) + 8|0);
   $126 = HEAP32[$125>>2]|0;
   HEAP32[$126>>2] = 0;
  }
  $127 = ((($__sym)) + 4|0);
  HEAP32[$127>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  HEAP32[$9>>2] = 0;
  $128 = ((($9)) + 4|0);
  HEAP32[$128>>2] = 0;
  $129 = ((($9)) + 8|0);
  HEAP32[$129>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $130 = HEAP32[$72>>2]|0;
  $131 = ((($130)) + 36|0);
  $132 = HEAP32[$131>>2]|0;
  $133 = (FUNCTION_TABLE_ii[$132 & 63]($72)|0);
  $storemerge = $133;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$byval_copy = 0, $$pre14 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__bb = 0, $__buf = 0;
 var $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384|0;
 $$byval_copy = sp + 8|0;
 $vararg_buffer1 = sp;
 $__buf = sp + 284|0;
 $__bb = sp + 72|0;
 $__digits = sp + 184|0;
 $__loc = sp + 68|0;
 $__pat = sp + 180|0;
 $__dp = sp + 177|0;
 $__ts = sp + 176|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__sn = sp + 32|0;
 $__fd = sp + 28|0;
 $__mbuf = sp + 76|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$$byval_copy>>3] = $__units;
 $1 = (_snprintf($__buf,100,9504,$$byval_copy)|0);
 $2 = ($1>>>0)>(99);
 if ($2) {
  $3 = (__ZNSt3__16__clocEv()|0);
  HEAPF64[$vararg_buffer1>>3] = $__units;
  $4 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$3,9504,$vararg_buffer1)|0);
  $5 = HEAP32[$__bb>>2]|0;
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  }
  $7 = $5;
  $8 = (_malloc($4)|0);
  $9 = $8;
  $10 = ($8|0)==(0|0);
  if ($10) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $90 = $9;$93 = $7;$__db$0 = $8;$__n$0 = $4;
  }
 } else {
  $90 = 0;$93 = 0;$__db$0 = $__digits;$__n$0 = $1;
 }
 $11 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $11;
 $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $13 = HEAP32[$__bb>>2]|0;
 $14 = (($13) + ($__n$0)|0);
 $15 = HEAP32[$12>>2]|0;
 $16 = ((($15)) + 32|0);
 $17 = HEAP32[$16>>2]|0;
 (FUNCTION_TABLE_iiiii[$17 & 7]($12,$13,$14,$__db$0)|0);
 $18 = ($__n$0|0)==(0);
 if ($18) {
  $28 = 0;
 } else {
  $19 = HEAP32[$__bb>>2]|0;
  $20 = HEAP8[$19>>0]|0;
  $21 = ($20<<24>>24)==(45);
  $28 = $21;
 }
 HEAP32[$__grp>>2] = 0;
 $22 = ((($__grp)) + 4|0);
 HEAP32[$22>>2] = 0;
 $23 = ((($__grp)) + 8|0);
 HEAP32[$23>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $24 = ((($__sym)) + 4|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($__sym)) + 8|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $26 = ((($__sn)) + 4|0);
 HEAP32[$26>>2] = 0;
 $27 = ((($__sn)) + 8|0);
 HEAP32[$27>>2] = 0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$28,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $29 = HEAP32[$__fd>>2]|0;
 $30 = ($__n$0|0)>($29|0);
 if ($30) {
  $31 = (($__n$0) - ($29))|0;
  $32 = $31 << 1;
  $33 = HEAP8[$__sn>>0]|0;
  $34 = $33 & 1;
  $35 = ($34<<24>>24)==(0);
  $36 = ((($__sn)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = $33&255;
  $39 = $38 >>> 1;
  $40 = $35 ? $39 : $37;
  $41 = HEAP8[$__sym>>0]|0;
  $42 = $41 & 1;
  $43 = ($42<<24>>24)==(0);
  $44 = ((($__sym)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = $41&255;
  $47 = $46 >>> 1;
  $48 = $43 ? $47 : $45;
  $49 = $32 | 1;
  $50 = (($49) + ($29))|0;
  $51 = (($50) + ($40))|0;
  $52 = (($51) + ($48))|0;
  $72 = $52;
 } else {
  $53 = HEAP8[$__sn>>0]|0;
  $54 = $53 & 1;
  $55 = ($54<<24>>24)==(0);
  $56 = ((($__sn)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = $53&255;
  $59 = $58 >>> 1;
  $60 = $55 ? $59 : $57;
  $61 = HEAP8[$__sym>>0]|0;
  $62 = $61 & 1;
  $63 = ($62<<24>>24)==(0);
  $64 = ((($__sym)) + 4|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = $61&255;
  $67 = $66 >>> 1;
  $68 = $63 ? $67 : $65;
  $69 = (($29) + 2)|0;
  $70 = (($69) + ($60))|0;
  $71 = (($70) + ($68))|0;
  $72 = $71;
 }
 $73 = ($72>>>0)>(100);
 if ($73) {
  $74 = (_malloc($72)|0);
  $75 = $74;
  $76 = ($74|0)==(0|0);
  if ($76) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $86 = $75;$__mb$0 = $74;
  }
 } else {
  $86 = 0;$__mb$0 = $__mbuf;
 }
 $77 = ((($__iob)) + 4|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = (($__db$0) + ($__n$0)|0);
 $80 = HEAP8[$__dp>>0]|0;
 $81 = HEAP8[$__ts>>0]|0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0,$__mi,$__me,$78,$__db$0,$79,$12,$28,$__pat,$80,$81,$__grp,$__sym,$__sn,$29);
 $82 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $82;
 $83 = HEAP32[$__mi>>2]|0;
 $84 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $85 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$83,$84,$__iob,$__fl)|0);
 $87 = ($86|0)==(0);
 if ($87) {
  $89 = $11;
 } else {
  $88 = $86;
  _free($88);
  $$pre14 = HEAP32[$__loc>>2]|0;
  $89 = $$pre14;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($89)|0);
 $91 = ($90|0)==(0);
 if (!($91)) {
  $92 = $90;
  _free($92);
 }
 $94 = ($93|0)==(0);
 if (!($94)) {
  $95 = $93;
  _free($95);
 }
 STACKTOP = sp;return ($85|0);
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$pre$phi32Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5752)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = ((($13)) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 63]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = ((($17)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 63]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $26 = ((($__sn)) + 1|0);
    HEAP8[$26>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = ((($__sn)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP8[$24>>0] = 0;
    $25 = ((($__sn)) + 4|0);
    HEAP32[$25>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $27 = ((($1)) + 4|0);
   HEAP32[$27>>2] = 0;
   $28 = ((($1)) + 8|0);
   HEAP32[$28>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$pre$phiZ2D = $12;
  } else {
   $29 = ((($13)) + 40|0);
   $30 = HEAP32[$29>>2]|0;
   FUNCTION_TABLE_vii[$30 & 63]($2,$12);
   $31 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$31&255;HEAP8[$__pat+1>>0]=($31>>8)&255;HEAP8[$__pat+2>>0]=($31>>16)&255;HEAP8[$__pat+3>>0]=$31>>24;
   $32 = HEAP32[$12>>2]|0;
   $33 = ((($32)) + 28|0);
   $34 = HEAP32[$33>>2]|0;
   FUNCTION_TABLE_vii[$34 & 63]($3,$12);
   $35 = HEAP8[$__sn>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $41 = ((($__sn)) + 1|0);
    HEAP8[$41>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $38 = ((($__sn)) + 8|0);
    $39 = HEAP32[$38>>2]|0;
    HEAP8[$39>>0] = 0;
    $40 = ((($__sn)) + 4|0);
    HEAP32[$40>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $42 = ((($3)) + 4|0);
   HEAP32[$42>>2] = 0;
   $43 = ((($3)) + 8|0);
   HEAP32[$43>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$pre$phiZ2D = $12;
  }
  $44 = HEAP32[$12>>2]|0;
  $45 = ((($44)) + 12|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = (FUNCTION_TABLE_ii[$46 & 63]($12)|0);
  HEAP8[$__dp>>0] = $47;
  $48 = HEAP32[$12>>2]|0;
  $49 = ((($48)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = (FUNCTION_TABLE_ii[$50 & 63]($12)|0);
  HEAP8[$__ts>>0] = $51;
  $52 = HEAP32[$$pre$phiZ2D>>2]|0;
  $53 = ((($52)) + 20|0);
  $54 = HEAP32[$53>>2]|0;
  FUNCTION_TABLE_vii[$54 & 63]($4,$12);
  $55 = HEAP8[$__grp>>0]|0;
  $56 = $55 & 1;
  $57 = ($56<<24>>24)==(0);
  if ($57) {
   $61 = ((($__grp)) + 1|0);
   HEAP8[$61>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $58 = ((($__grp)) + 8|0);
   $59 = HEAP32[$58>>2]|0;
   HEAP8[$59>>0] = 0;
   $60 = ((($__grp)) + 4|0);
   HEAP32[$60>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $62 = ((($4)) + 4|0);
  HEAP32[$62>>2] = 0;
  $63 = ((($4)) + 8|0);
  HEAP32[$63>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $64 = HEAP32[$$pre$phiZ2D>>2]|0;
  $65 = ((($64)) + 24|0);
  $66 = HEAP32[$65>>2]|0;
  FUNCTION_TABLE_vii[$66 & 63]($5,$12);
  $67 = HEAP8[$__sym>>0]|0;
  $68 = $67 & 1;
  $69 = ($68<<24>>24)==(0);
  if ($69) {
   $73 = ((($__sym)) + 1|0);
   HEAP8[$73>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $70 = ((($__sym)) + 8|0);
   $71 = HEAP32[$70>>2]|0;
   HEAP8[$71>>0] = 0;
   $72 = ((($__sym)) + 4|0);
   HEAP32[$72>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  HEAP32[$5>>2] = 0;
  $74 = ((($5)) + 4|0);
  HEAP32[$74>>2] = 0;
  $75 = ((($5)) + 8|0);
  HEAP32[$75>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $76 = HEAP32[$12>>2]|0;
  $77 = ((($76)) + 36|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (FUNCTION_TABLE_ii[$78 & 63]($12)|0);
  $storemerge = $79;
 } else {
  $80 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5688)|0);
  $81 = HEAP32[$80>>2]|0;
  if ($__neg) {
   $82 = ((($81)) + 44|0);
   $83 = HEAP32[$82>>2]|0;
   FUNCTION_TABLE_vii[$83 & 63]($6,$80);
   $84 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$84&255;HEAP8[$__pat+1>>0]=($84>>8)&255;HEAP8[$__pat+2>>0]=($84>>16)&255;HEAP8[$__pat+3>>0]=$84>>24;
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 32|0);
   $87 = HEAP32[$86>>2]|0;
   FUNCTION_TABLE_vii[$87 & 63]($7,$80);
   $88 = HEAP8[$__sn>>0]|0;
   $89 = $88 & 1;
   $90 = ($89<<24>>24)==(0);
   if ($90) {
    $94 = ((($__sn)) + 1|0);
    HEAP8[$94>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $91 = ((($__sn)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    HEAP8[$92>>0] = 0;
    $93 = ((($__sn)) + 4|0);
    HEAP32[$93>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $95 = ((($7)) + 4|0);
   HEAP32[$95>>2] = 0;
   $96 = ((($7)) + 8|0);
   HEAP32[$96>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   $$pre$phi32Z2D = $80;
  } else {
   $97 = ((($81)) + 40|0);
   $98 = HEAP32[$97>>2]|0;
   FUNCTION_TABLE_vii[$98 & 63]($8,$80);
   $99 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$99&255;HEAP8[$__pat+1>>0]=($99>>8)&255;HEAP8[$__pat+2>>0]=($99>>16)&255;HEAP8[$__pat+3>>0]=$99>>24;
   $100 = HEAP32[$80>>2]|0;
   $101 = ((($100)) + 28|0);
   $102 = HEAP32[$101>>2]|0;
   FUNCTION_TABLE_vii[$102 & 63]($9,$80);
   $103 = HEAP8[$__sn>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   if ($105) {
    $109 = ((($__sn)) + 1|0);
    HEAP8[$109>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $106 = ((($__sn)) + 8|0);
    $107 = HEAP32[$106>>2]|0;
    HEAP8[$107>>0] = 0;
    $108 = ((($__sn)) + 4|0);
    HEAP32[$108>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   HEAP32[$9>>2] = 0;
   $110 = ((($9)) + 4|0);
   HEAP32[$110>>2] = 0;
   $111 = ((($9)) + 8|0);
   HEAP32[$111>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   $$pre$phi32Z2D = $80;
  }
  $112 = HEAP32[$80>>2]|0;
  $113 = ((($112)) + 12|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = (FUNCTION_TABLE_ii[$114 & 63]($80)|0);
  HEAP8[$__dp>>0] = $115;
  $116 = HEAP32[$80>>2]|0;
  $117 = ((($116)) + 16|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (FUNCTION_TABLE_ii[$118 & 63]($80)|0);
  HEAP8[$__ts>>0] = $119;
  $120 = HEAP32[$$pre$phi32Z2D>>2]|0;
  $121 = ((($120)) + 20|0);
  $122 = HEAP32[$121>>2]|0;
  FUNCTION_TABLE_vii[$122 & 63]($10,$80);
  $123 = HEAP8[$__grp>>0]|0;
  $124 = $123 & 1;
  $125 = ($124<<24>>24)==(0);
  if ($125) {
   $129 = ((($__grp)) + 1|0);
   HEAP8[$129>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $126 = ((($__grp)) + 8|0);
   $127 = HEAP32[$126>>2]|0;
   HEAP8[$127>>0] = 0;
   $128 = ((($__grp)) + 4|0);
   HEAP32[$128>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  HEAP32[$10>>2] = 0;
  $130 = ((($10)) + 4|0);
  HEAP32[$130>>2] = 0;
  $131 = ((($10)) + 8|0);
  HEAP32[$131>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $132 = HEAP32[$$pre$phi32Z2D>>2]|0;
  $133 = ((($132)) + 24|0);
  $134 = HEAP32[$133>>2]|0;
  FUNCTION_TABLE_vii[$134 & 63]($11,$80);
  $135 = HEAP8[$__sym>>0]|0;
  $136 = $135 & 1;
  $137 = ($136<<24>>24)==(0);
  if ($137) {
   $141 = ((($__sym)) + 1|0);
   HEAP8[$141>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $138 = ((($__sym)) + 8|0);
   $139 = HEAP32[$138>>2]|0;
   HEAP8[$139>>0] = 0;
   $140 = ((($__sym)) + 4|0);
   HEAP32[$140>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  HEAP32[$11>>2] = 0;
  $142 = ((($11)) + 4|0);
  HEAP32[$142>>2] = 0;
  $143 = ((($11)) + 8|0);
  HEAP32[$143>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $144 = HEAP32[$80>>2]|0;
  $145 = ((($144)) + 36|0);
  $146 = HEAP32[$145>>2]|0;
  $147 = (FUNCTION_TABLE_ii[$146 & 63]($80)|0);
  $storemerge = $147;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$$027 = 0, $$0$i$i$lcssa = 0, $$0$i$i35 = 0, $$0$i$i9$lcssa = 0, $$0$i$i958 = 0, $$01$i$i56 = 0, $$062 = 0, $$2 = 0, $$lcssa = 0, $$lcssa34 = 0, $$op = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0, $__d$0$lcssa26 = 0, $__d$036 = 0, $__d$142 = 0, $__d$2 = 0, $__d$351 = 0, $__f$043 = 0, $__f$146 = 0;
 var $__gl$0$ph = 0, $__gl$054 = 0, $__gl$1 = 0, $__ig$053 = 0, $__ig$1 = 0, $__ng$052 = 0, $__ng$1 = 0, $__p$061 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0, $scevgep$sum = 0, $scevgep29 = 0, $umax28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sn)) + 1|0);
 $3 = ((($__sym)) + 4|0);
 $4 = $__flags & 512;
 $5 = ($4|0)==(0);
 $6 = ((($__sym)) + 8|0);
 $7 = ((($__sym)) + 1|0);
 $8 = ((($__ct)) + 8|0);
 $9 = ($__fd|0)>(0);
 $10 = ((($__grp)) + 4|0);
 $11 = ((($__grp)) + 8|0);
 $12 = ((($__grp)) + 1|0);
 $13 = (($__fd) + 1)|0;
 $14 = (-2 - ($__fd))|0;
 $15 = ($__fd|0)<(0);
 $$op = $__fd ^ -1;
 $16 = $15 ? $$op : -1;
 $17 = (($14) - ($16))|0;
 $18 = ($__fd|0)>(0);
 $$062 = $__db;$__p$061 = 0;
 while(1) {
  $19 = (($__pat) + ($__p$061)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20 << 24 >> 24;
  switch ($21|0) {
  case 4:  {
   $61 = HEAP32[$__me>>2]|0;
   $62 = ((($$062)) + 1|0);
   $$$0 = $__neg ? $62 : $$062;
   $$$027 = $$$0;
   $63 = HEAP32[$8>>2]|0;
   $64 = ($$$0>>>0)<($__de>>>0);
   L5: do {
    if ($64) {
     $__d$036 = $$$0;
     while(1) {
      $65 = HEAP8[$__d$036>>0]|0;
      $isascii1$i = ($65<<24>>24)>(-1);
      if (!($isascii1$i)) {
       $__d$0$lcssa = $__d$036;
       break L5;
      }
      $66 = $65 << 24 >> 24;
      $67 = (($63) + ($66<<1)|0);
      $68 = HEAP16[$67>>1]|0;
      $69 = $68 & 2048;
      $70 = ($69<<16>>16)==(0);
      if ($70) {
       $__d$0$lcssa = $__d$036;
       break L5;
      }
      $71 = ((($__d$036)) + 1|0);
      $72 = ($71>>>0)<($__de>>>0);
      if ($72) {
       $__d$036 = $71;
      } else {
       $__d$0$lcssa = $71;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   $__d$0$lcssa26 = $__d$0$lcssa;
   if ($9) {
    $73 = (-2 - ($__d$0$lcssa26))|0;
    $74 = ($__d$0$lcssa26>>>0)>($$$027>>>0);
    $75 = $74 ? $$$027 : $__d$0$lcssa26;
    $76 = $75 ^ -1;
    $77 = (($73) - ($76))|0;
    $78 = ($17>>>0)>($77>>>0);
    $umax28 = $78 ? $17 : $77;
    $79 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $80 = $79 & $18;
    if ($80) {
     $__d$142 = $__d$0$lcssa;$__f$043 = $__fd;
     while(1) {
      $81 = ((($__d$142)) + -1|0);
      $82 = HEAP8[$81>>0]|0;
      $83 = HEAP32[$__me>>2]|0;
      $84 = ((($83)) + 1|0);
      HEAP32[$__me>>2] = $84;
      HEAP8[$83>>0] = $82;
      $85 = (($__f$043) + -1)|0;
      $86 = ($81>>>0)>($$$0>>>0);
      $87 = ($__f$043|0)>(1);
      $88 = $86 & $87;
      if ($88) {
       $__d$142 = $81;$__f$043 = $85;
      } else {
       $$lcssa = $87;
       break;
      }
     }
    } else {
     $$lcssa = $18;
    }
    $89 = (($13) + ($umax28))|0;
    $scevgep$sum = (($umax28) + 1)|0;
    $scevgep29 = (($__d$0$lcssa) + ($scevgep$sum)|0);
    if ($$lcssa) {
     $90 = HEAP32[$__ct>>2]|0;
     $91 = ((($90)) + 28|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = (FUNCTION_TABLE_iii[$92 & 15]($__ct,48)|0);
     $97 = $93;
    } else {
     $97 = 0;
    }
    $94 = ($89|0)>(0);
    $95 = HEAP32[$__me>>2]|0;
    $96 = ((($95)) + 1|0);
    HEAP32[$__me>>2] = $96;
    if ($94) {
     $98 = $95;$__f$146 = $89;
     while(1) {
      HEAP8[$98>>0] = $97;
      $99 = (($__f$146) + -1)|0;
      $100 = ($__f$146|0)>(1);
      $101 = HEAP32[$__me>>2]|0;
      $102 = ((($101)) + 1|0);
      HEAP32[$__me>>2] = $102;
      if ($100) {
       $98 = $101;$__f$146 = $99;
      } else {
       $$lcssa34 = $101;
       break;
      }
     }
    } else {
     $$lcssa34 = $95;
    }
    HEAP8[$$lcssa34>>0] = $__dp;
    $__d$2 = $scevgep29;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $103 = ($__d$2|0)==($$$0|0);
   if ($103) {
    $104 = HEAP32[$__ct>>2]|0;
    $105 = ((($104)) + 28|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = (FUNCTION_TABLE_iii[$106 & 15]($__ct,48)|0);
    $108 = HEAP32[$__me>>2]|0;
    $109 = ((($108)) + 1|0);
    HEAP32[$__me>>2] = $109;
    HEAP8[$108>>0] = $107;
   } else {
    $110 = HEAP8[$__grp>>0]|0;
    $111 = $110 & 1;
    $112 = ($111<<24>>24)==(0);
    $113 = HEAP32[$10>>2]|0;
    $114 = $110&255;
    $115 = $114 >>> 1;
    $116 = $112 ? $115 : $113;
    $117 = ($116|0)==(0);
    if ($117) {
     $__gl$0$ph = -1;
    } else {
     $118 = HEAP32[$11>>2]|0;
     $119 = $112 ? $12 : $118;
     $120 = HEAP8[$119>>0]|0;
     $121 = $120 << 24 >> 24;
     $__gl$0$ph = $121;
    }
    $122 = ($__d$2|0)==($$$0|0);
    if (!($122)) {
     $__d$351 = $__d$2;$__gl$054 = $__gl$0$ph;$__ig$053 = 0;$__ng$052 = 0;
     while(1) {
      $123 = ($__ng$052|0)==($__gl$054|0);
      if ($123) {
       $124 = HEAP32[$__me>>2]|0;
       $125 = ((($124)) + 1|0);
       HEAP32[$__me>>2] = $125;
       HEAP8[$124>>0] = $__ts;
       $126 = (($__ig$053) + 1)|0;
       $127 = HEAP8[$__grp>>0]|0;
       $128 = $127 & 1;
       $129 = ($128<<24>>24)==(0);
       $130 = HEAP32[$10>>2]|0;
       $131 = $127&255;
       $132 = $131 >>> 1;
       $133 = $129 ? $132 : $130;
       $134 = ($126>>>0)<($133>>>0);
       if ($134) {
        $135 = HEAP32[$11>>2]|0;
        $136 = $129 ? $12 : $135;
        $137 = (($136) + ($126)|0);
        $138 = HEAP8[$137>>0]|0;
        $139 = ($138<<24>>24)==(127);
        $140 = $138 << 24 >> 24;
        $$ = $139 ? -1 : $140;
        $__gl$1 = $$;$__ig$1 = $126;$__ng$1 = 0;
       } else {
        $__gl$1 = $__ng$052;$__ig$1 = $126;$__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__gl$054;$__ig$1 = $__ig$053;$__ng$1 = $__ng$052;
      }
      $141 = ((($__d$351)) + -1|0);
      $142 = HEAP8[$141>>0]|0;
      $143 = HEAP32[$__me>>2]|0;
      $144 = ((($143)) + 1|0);
      HEAP32[$__me>>2] = $144;
      HEAP8[$143>>0] = $142;
      $145 = (($__ng$1) + 1)|0;
      $146 = ($141|0)==($$$0|0);
      if ($146) {
       break;
      } else {
       $__d$351 = $141;$__gl$054 = $__gl$1;$__ig$053 = $__ig$1;$__ng$052 = $145;
      }
     }
    }
   }
   $147 = HEAP32[$__me>>2]|0;
   $148 = ($61|0)==($147|0);
   if ($148) {
    $$2 = $$$0;
   } else {
    $149 = ((($147)) + -1|0);
    $150 = ($61>>>0)<($149>>>0);
    if ($150) {
     $$01$i$i56 = $61;$153 = $149;
     while(1) {
      $151 = HEAP8[$$01$i$i56>>0]|0;
      $152 = HEAP8[$153>>0]|0;
      HEAP8[$$01$i$i56>>0] = $152;
      HEAP8[$153>>0] = $151;
      $154 = ((($$01$i$i56)) + 1|0);
      $155 = ((($153)) + -1|0);
      $156 = ($154>>>0)<($155>>>0);
      if ($156) {
       $$01$i$i56 = $154;$153 = $155;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 3:  {
   $30 = HEAP8[$__sn>>0]|0;
   $31 = $30 & 1;
   $32 = ($31<<24>>24)==(0);
   $33 = HEAP32[$0>>2]|0;
   $34 = $30&255;
   $35 = $34 >>> 1;
   $36 = $32 ? $35 : $33;
   $37 = ($36|0)==(0);
   if ($37) {
    $$2 = $$062;
   } else {
    $38 = HEAP32[$1>>2]|0;
    $39 = $32 ? $2 : $38;
    $40 = HEAP8[$39>>0]|0;
    $41 = HEAP32[$__me>>2]|0;
    $42 = ((($41)) + 1|0);
    HEAP32[$__me>>2] = $42;
    HEAP8[$41>>0] = $40;
    $$2 = $$062;
   }
   break;
  }
  case 0:  {
   $22 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $22;
   $$2 = $$062;
   break;
  }
  case 2:  {
   $43 = HEAP8[$__sym>>0]|0;
   $44 = $43 & 1;
   $45 = ($44<<24>>24)==(0);
   $46 = HEAP32[$3>>2]|0;
   $47 = $43&255;
   $48 = $47 >>> 1;
   $49 = $45 ? $48 : $46;
   $50 = ($49|0)==(0);
   $or$cond = $5 | $50;
   if ($or$cond) {
    $$2 = $$062;
   } else {
    $51 = HEAP32[$6>>2]|0;
    $52 = $45 ? $7 : $51;
    $53 = (($52) + ($49)|0);
    $54 = HEAP32[$__me>>2]|0;
    $55 = ($49|0)==(0);
    if ($55) {
     $$0$i$i9$lcssa = $54;
    } else {
     $$0$i$i958 = $54;$57 = $52;
     while(1) {
      $56 = HEAP8[$57>>0]|0;
      HEAP8[$$0$i$i958>>0] = $56;
      $58 = ((($57)) + 1|0);
      $59 = ((($$0$i$i958)) + 1|0);
      $60 = ($58|0)==($53|0);
      if ($60) {
       $$0$i$i9$lcssa = $59;
       break;
      } else {
       $$0$i$i958 = $59;$57 = $58;
      }
     }
    }
    HEAP32[$__me>>2] = $$0$i$i9$lcssa;
    $$2 = $$062;
   }
   break;
  }
  case 1:  {
   $23 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $23;
   $24 = HEAP32[$__ct>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (FUNCTION_TABLE_iii[$26 & 15]($__ct,32)|0);
   $28 = HEAP32[$__me>>2]|0;
   $29 = ((($28)) + 1|0);
   HEAP32[$__me>>2] = $29;
   HEAP8[$28>>0] = $27;
   $$2 = $$062;
   break;
  }
  default: {
   $$2 = $$062;
  }
  }
  $157 = (($__p$061) + 1)|0;
  $exitcond = ($157|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$062 = $$2;$__p$061 = $157;
  }
 }
 $158 = HEAP8[$__sn>>0]|0;
 $159 = $158 & 1;
 $160 = ($159<<24>>24)==(0);
 $161 = HEAP32[$0>>2]|0;
 $162 = $158&255;
 $163 = $162 >>> 1;
 $164 = $160 ? $163 : $161;
 $165 = ($164>>>0)>(1);
 if ($165) {
  $166 = HEAP32[$1>>2]|0;
  $167 = $160 ? $2 : $166;
  $168 = (($167) + ($164)|0);
  $169 = HEAP32[$__me>>2]|0;
  $170 = ($164|0)==(1);
  if ($170) {
   $$0$i$i$lcssa = $169;
  } else {
   $171 = ((($167)) + 1|0);
   $$0$i$i35 = $169;$173 = $171;
   while(1) {
    $172 = HEAP8[$173>>0]|0;
    HEAP8[$$0$i$i35>>0] = $172;
    $174 = ((($$0$i$i35)) + 1|0);
    $175 = ((($173)) + 1|0);
    $176 = ($175|0)==($168|0);
    if ($176) {
     $$0$i$i$lcssa = $174;
     break;
    } else {
     $$0$i$i35 = $174;$173 = $175;
    }
   }
  }
  HEAP32[$__me>>2] = $$0$i$i$lcssa;
 }
 $177 = $__flags & 176;
 if ((($177|0) == 32)) {
  $178 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $178;
 } else if (!((($177|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$byval_copy = 0, $$pre16 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $$byval_copy = sp + 56|0;
 $__loc = sp + 52|0;
 $__pat = sp + 164|0;
 $__dp = sp + 161|0;
 $__ts = sp + 160|0;
 $__grp = sp + 40|0;
 $__sym = sp + 28|0;
 $__sn = sp + 16|0;
 $__fd = sp + 12|0;
 $__mbuf = sp + 60|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 $2 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6168)|0);
 $3 = HEAP8[$__digits>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 $6 = ((($__digits)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3&255;
 $9 = $8 >>> 1;
 $10 = $5 ? $9 : $7;
 $11 = ($10|0)==(0);
 if ($11) {
  $28 = 0;
 } else {
  $12 = ((($__digits)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($__digits)) + 1|0);
  $15 = $5 ? $14 : $13;
  $16 = HEAP8[$15>>0]|0;
  $17 = HEAP32[$2>>2]|0;
  $18 = ((($17)) + 28|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (FUNCTION_TABLE_iii[$19 & 15]($2,45)|0);
  $21 = ($16<<24>>24)==($20<<24>>24);
  $28 = $21;
 }
 HEAP32[$__grp>>2] = 0;
 $22 = ((($__grp)) + 4|0);
 HEAP32[$22>>2] = 0;
 $23 = ((($__grp)) + 8|0);
 HEAP32[$23>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $24 = ((($__sym)) + 4|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($__sym)) + 8|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $26 = ((($__sn)) + 4|0);
 HEAP32[$26>>2] = 0;
 $27 = ((($__sn)) + 8|0);
 HEAP32[$27>>2] = 0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$28,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $29 = HEAP8[$__digits>>0]|0;
 $30 = $29 & 1;
 $31 = ($30<<24>>24)==(0);
 $32 = HEAP32[$6>>2]|0;
 $33 = $29&255;
 $34 = $33 >>> 1;
 $35 = $31 ? $34 : $32;
 $36 = HEAP32[$__fd>>2]|0;
 $37 = ($35|0)>($36|0);
 if ($37) {
  $38 = (($35) - ($36))|0;
  $39 = $38 << 1;
  $40 = HEAP8[$__sn>>0]|0;
  $41 = $40 & 1;
  $42 = ($41<<24>>24)==(0);
  $43 = ((($__sn)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = $40&255;
  $46 = $45 >>> 1;
  $47 = $42 ? $46 : $44;
  $48 = HEAP8[$__sym>>0]|0;
  $49 = $48 & 1;
  $50 = ($49<<24>>24)==(0);
  $51 = ((($__sym)) + 4|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = $48&255;
  $54 = $53 >>> 1;
  $55 = $50 ? $54 : $52;
  $56 = $39 | 1;
  $57 = (($56) + ($36))|0;
  $58 = (($57) + ($47))|0;
  $59 = (($58) + ($55))|0;
  $79 = $59;
 } else {
  $60 = HEAP8[$__sn>>0]|0;
  $61 = $60 & 1;
  $62 = ($61<<24>>24)==(0);
  $63 = ((($__sn)) + 4|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = $60&255;
  $66 = $65 >>> 1;
  $67 = $62 ? $66 : $64;
  $68 = HEAP8[$__sym>>0]|0;
  $69 = $68 & 1;
  $70 = ($69<<24>>24)==(0);
  $71 = ((($__sym)) + 4|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = $68&255;
  $74 = $73 >>> 1;
  $75 = $70 ? $74 : $72;
  $76 = (($36) + 2)|0;
  $77 = (($76) + ($67))|0;
  $78 = (($77) + ($75))|0;
  $79 = $78;
 }
 $80 = ($79>>>0)>(100);
 if ($80) {
  $81 = (_malloc($79)|0);
  $82 = $81;
  $83 = ($81|0)==(0|0);
  if ($83) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $102 = $82;$__mb$0 = $81;
  }
 } else {
  $102 = 0;$__mb$0 = $__mbuf;
 }
 $84 = ((($__iob)) + 4|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = $29 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__digits)) + 8|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = ((($__digits)) + 1|0);
 $91 = $87 ? $90 : $89;
 $92 = $29&255;
 $93 = $92 >>> 1;
 $94 = $87 ? $93 : $32;
 $95 = (($91) + ($94)|0);
 $96 = HEAP8[$__dp>>0]|0;
 $97 = HEAP8[$__ts>>0]|0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0,$__mi,$__me,$85,$91,$95,$2,$28,$__pat,$96,$97,$__grp,$__sym,$__sn,$36);
 $98 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $98;
 $99 = HEAP32[$__mi>>2]|0;
 $100 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $101 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$99,$100,$__iob,$__fl)|0);
 $103 = ($102|0)==(0);
 if ($103) {
  $105 = $1;
 } else {
  $104 = $102;
  _free($104);
  $$pre16 = HEAP32[$__loc>>2]|0;
  $105 = $$pre16;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($105)|0);
 STACKTOP = sp;return ($101|0);
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$byval_copy = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0;
 $$byval_copy = sp + 8|0;
 $vararg_buffer1 = sp;
 $__buf = sp + 896|0;
 $__bb = sp + 888|0;
 $__digits = sp + 488|0;
 $__loc = sp + 480|0;
 $__pat = sp + 892|0;
 $__dp = sp + 476|0;
 $__ts = sp + 472|0;
 $__grp = sp + 460|0;
 $__sym = sp + 448|0;
 $__sn = sp + 436|0;
 $__fd = sp + 432|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$$byval_copy>>3] = $__units;
 $1 = (_snprintf($__buf,100,9504,$$byval_copy)|0);
 $2 = ($1>>>0)>(99);
 if ($2) {
  $3 = (__ZNSt3__16__clocEv()|0);
  HEAPF64[$vararg_buffer1>>3] = $__units;
  $4 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$3,9504,$vararg_buffer1)|0);
  $5 = HEAP32[$__bb>>2]|0;
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  }
  $7 = $5;
  $8 = $4 << 2;
  $9 = (_malloc($8)|0);
  $10 = $9;
  $11 = ($9|0)==(0|0);
  if ($11) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $92 = $10;$95 = $7;$__db$0 = $9;$__n$0 = $4;
  }
 } else {
  $92 = 0;$95 = 0;$__db$0 = $__digits;$__n$0 = $1;
 }
 $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $12;
 $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $14 = HEAP32[$__bb>>2]|0;
 $15 = (($14) + ($__n$0)|0);
 $16 = HEAP32[$13>>2]|0;
 $17 = ((($16)) + 48|0);
 $18 = HEAP32[$17>>2]|0;
 (FUNCTION_TABLE_iiiii[$18 & 7]($13,$14,$15,$__db$0)|0);
 $19 = ($__n$0|0)==(0);
 if ($19) {
  $29 = 0;
 } else {
  $20 = HEAP32[$__bb>>2]|0;
  $21 = HEAP8[$20>>0]|0;
  $22 = ($21<<24>>24)==(45);
  $29 = $22;
 }
 HEAP32[$__grp>>2] = 0;
 $23 = ((($__grp)) + 4|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($__grp)) + 8|0);
 HEAP32[$24>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $25 = ((($__sym)) + 4|0);
 HEAP32[$25>>2] = 0;
 $26 = ((($__sym)) + 8|0);
 HEAP32[$26>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $27 = ((($__sn)) + 4|0);
 HEAP32[$27>>2] = 0;
 $28 = ((($__sn)) + 8|0);
 HEAP32[$28>>2] = 0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$29,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $30 = HEAP32[$__fd>>2]|0;
 $31 = ($__n$0|0)>($30|0);
 if ($31) {
  $32 = (($__n$0) - ($30))|0;
  $33 = $32 << 1;
  $34 = HEAP8[$__sn>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  $37 = ((($__sn)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = $34&255;
  $40 = $39 >>> 1;
  $41 = $36 ? $40 : $38;
  $42 = HEAP8[$__sym>>0]|0;
  $43 = $42 & 1;
  $44 = ($43<<24>>24)==(0);
  $45 = ((($__sym)) + 4|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = $42&255;
  $48 = $47 >>> 1;
  $49 = $44 ? $48 : $46;
  $50 = $33 | 1;
  $51 = (($50) + ($30))|0;
  $52 = (($51) + ($41))|0;
  $53 = (($52) + ($49))|0;
  $73 = $53;
 } else {
  $54 = HEAP8[$__sn>>0]|0;
  $55 = $54 & 1;
  $56 = ($55<<24>>24)==(0);
  $57 = ((($__sn)) + 4|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = $54&255;
  $60 = $59 >>> 1;
  $61 = $56 ? $60 : $58;
  $62 = HEAP8[$__sym>>0]|0;
  $63 = $62 & 1;
  $64 = ($63<<24>>24)==(0);
  $65 = ((($__sym)) + 4|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = $62&255;
  $68 = $67 >>> 1;
  $69 = $64 ? $68 : $66;
  $70 = (($30) + 2)|0;
  $71 = (($70) + ($61))|0;
  $72 = (($71) + ($69))|0;
  $73 = $72;
 }
 $74 = ($73>>>0)>(100);
 if ($74) {
  $75 = $73 << 2;
  $76 = (_malloc($75)|0);
  $77 = $76;
  $78 = ($76|0)==(0|0);
  if ($78) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $88 = $77;$__mb$0 = $76;
  }
 } else {
  $88 = 0;$__mb$0 = $__mbuf;
 }
 $79 = ((($__iob)) + 4|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = (($__db$0) + ($__n$0<<2)|0);
 $82 = HEAP32[$__dp>>2]|0;
 $83 = HEAP32[$__ts>>2]|0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0,$__mi,$__me,$80,$__db$0,$81,$13,$29,$__pat,$82,$83,$__grp,$__sym,$__sn,$30);
 $84 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $84;
 $85 = HEAP32[$__mi>>2]|0;
 $86 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $87 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$85,$86,$__iob,$__fl)|0);
 $89 = ($88|0)==(0);
 if ($89) {
  $91 = $12;
 } else {
  $90 = $88;
  _free($90);
  $$pre11 = HEAP32[$__loc>>2]|0;
  $91 = $$pre11;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($91)|0);
 $93 = ($92|0)==(0);
 if (!($93)) {
  $94 = $92;
  _free($94);
 }
 $96 = ($95|0)==(0);
 if (!($96)) {
  $97 = $95;
  _free($97);
 }
 STACKTOP = sp;return ($87|0);
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5880)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = ((($13)) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 63]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = ((($17)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 63]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = ((($__sn)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP32[$24>>2] = 0;
   }
   $25 = ((($__sn)) + 4|0);
   HEAP32[$25>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $26 = ((($1)) + 4|0);
   HEAP32[$26>>2] = 0;
   $27 = ((($1)) + 8|0);
   HEAP32[$27>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   $28 = ((($13)) + 40|0);
   $29 = HEAP32[$28>>2]|0;
   FUNCTION_TABLE_vii[$29 & 63]($2,$12);
   $30 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$30&255;HEAP8[$__pat+1>>0]=($30>>8)&255;HEAP8[$__pat+2>>0]=($30>>16)&255;HEAP8[$__pat+3>>0]=$30>>24;
   $31 = HEAP32[$12>>2]|0;
   $32 = ((($31)) + 28|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 63]($3,$12);
   $34 = HEAP8[$__sn>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $37 = ((($__sn)) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    HEAP32[$38>>2] = 0;
   }
   $39 = ((($__sn)) + 4|0);
   HEAP32[$39>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $40 = ((($3)) + 4|0);
   HEAP32[$40>>2] = 0;
   $41 = ((($3)) + 8|0);
   HEAP32[$41>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  $42 = HEAP32[$12>>2]|0;
  $43 = ((($42)) + 12|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = (FUNCTION_TABLE_ii[$44 & 63]($12)|0);
  HEAP32[$__dp>>2] = $45;
  $46 = HEAP32[$12>>2]|0;
  $47 = ((($46)) + 16|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = (FUNCTION_TABLE_ii[$48 & 63]($12)|0);
  HEAP32[$__ts>>2] = $49;
  $50 = HEAP32[$12>>2]|0;
  $51 = ((($50)) + 20|0);
  $52 = HEAP32[$51>>2]|0;
  FUNCTION_TABLE_vii[$52 & 63]($4,$12);
  $53 = HEAP8[$__grp>>0]|0;
  $54 = $53 & 1;
  $55 = ($54<<24>>24)==(0);
  if ($55) {
   $59 = ((($__grp)) + 1|0);
   HEAP8[$59>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $56 = ((($__grp)) + 8|0);
   $57 = HEAP32[$56>>2]|0;
   HEAP8[$57>>0] = 0;
   $58 = ((($__grp)) + 4|0);
   HEAP32[$58>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $60 = ((($4)) + 4|0);
  HEAP32[$60>>2] = 0;
  $61 = ((($4)) + 8|0);
  HEAP32[$61>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $62 = HEAP32[$12>>2]|0;
  $63 = ((($62)) + 24|0);
  $64 = HEAP32[$63>>2]|0;
  FUNCTION_TABLE_vii[$64 & 63]($5,$12);
  $65 = HEAP8[$__sym>>0]|0;
  $66 = $65 & 1;
  $67 = ($66<<24>>24)==(0);
  if ($67) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $68 = ((($__sym)) + 8|0);
   $69 = HEAP32[$68>>2]|0;
   HEAP32[$69>>2] = 0;
  }
  $70 = ((($__sym)) + 4|0);
  HEAP32[$70>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  HEAP32[$5>>2] = 0;
  $71 = ((($5)) + 4|0);
  HEAP32[$71>>2] = 0;
  $72 = ((($5)) + 8|0);
  HEAP32[$72>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $73 = HEAP32[$12>>2]|0;
  $74 = ((($73)) + 36|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = (FUNCTION_TABLE_ii[$75 & 63]($12)|0);
  $storemerge = $76;
 } else {
  $77 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5816)|0);
  $78 = HEAP32[$77>>2]|0;
  if ($__neg) {
   $79 = ((($78)) + 44|0);
   $80 = HEAP32[$79>>2]|0;
   FUNCTION_TABLE_vii[$80 & 63]($6,$77);
   $81 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$81&255;HEAP8[$__pat+1>>0]=($81>>8)&255;HEAP8[$__pat+2>>0]=($81>>16)&255;HEAP8[$__pat+3>>0]=$81>>24;
   $82 = HEAP32[$77>>2]|0;
   $83 = ((($82)) + 32|0);
   $84 = HEAP32[$83>>2]|0;
   FUNCTION_TABLE_vii[$84 & 63]($7,$77);
   $85 = HEAP8[$__sn>>0]|0;
   $86 = $85 & 1;
   $87 = ($86<<24>>24)==(0);
   if ($87) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $88 = ((($__sn)) + 8|0);
    $89 = HEAP32[$88>>2]|0;
    HEAP32[$89>>2] = 0;
   }
   $90 = ((($__sn)) + 4|0);
   HEAP32[$90>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $91 = ((($7)) + 4|0);
   HEAP32[$91>>2] = 0;
   $92 = ((($7)) + 8|0);
   HEAP32[$92>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   $93 = ((($78)) + 40|0);
   $94 = HEAP32[$93>>2]|0;
   FUNCTION_TABLE_vii[$94 & 63]($8,$77);
   $95 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$95&255;HEAP8[$__pat+1>>0]=($95>>8)&255;HEAP8[$__pat+2>>0]=($95>>16)&255;HEAP8[$__pat+3>>0]=$95>>24;
   $96 = HEAP32[$77>>2]|0;
   $97 = ((($96)) + 28|0);
   $98 = HEAP32[$97>>2]|0;
   FUNCTION_TABLE_vii[$98 & 63]($9,$77);
   $99 = HEAP8[$__sn>>0]|0;
   $100 = $99 & 1;
   $101 = ($100<<24>>24)==(0);
   if ($101) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $102 = ((($__sn)) + 8|0);
    $103 = HEAP32[$102>>2]|0;
    HEAP32[$103>>2] = 0;
   }
   $104 = ((($__sn)) + 4|0);
   HEAP32[$104>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   HEAP32[$9>>2] = 0;
   $105 = ((($9)) + 4|0);
   HEAP32[$105>>2] = 0;
   $106 = ((($9)) + 8|0);
   HEAP32[$106>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  $107 = HEAP32[$77>>2]|0;
  $108 = ((($107)) + 12|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = (FUNCTION_TABLE_ii[$109 & 63]($77)|0);
  HEAP32[$__dp>>2] = $110;
  $111 = HEAP32[$77>>2]|0;
  $112 = ((($111)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = (FUNCTION_TABLE_ii[$113 & 63]($77)|0);
  HEAP32[$__ts>>2] = $114;
  $115 = HEAP32[$77>>2]|0;
  $116 = ((($115)) + 20|0);
  $117 = HEAP32[$116>>2]|0;
  FUNCTION_TABLE_vii[$117 & 63]($10,$77);
  $118 = HEAP8[$__grp>>0]|0;
  $119 = $118 & 1;
  $120 = ($119<<24>>24)==(0);
  if ($120) {
   $124 = ((($__grp)) + 1|0);
   HEAP8[$124>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $121 = ((($__grp)) + 8|0);
   $122 = HEAP32[$121>>2]|0;
   HEAP8[$122>>0] = 0;
   $123 = ((($__grp)) + 4|0);
   HEAP32[$123>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  HEAP32[$10>>2] = 0;
  $125 = ((($10)) + 4|0);
  HEAP32[$125>>2] = 0;
  $126 = ((($10)) + 8|0);
  HEAP32[$126>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $127 = HEAP32[$77>>2]|0;
  $128 = ((($127)) + 24|0);
  $129 = HEAP32[$128>>2]|0;
  FUNCTION_TABLE_vii[$129 & 63]($11,$77);
  $130 = HEAP8[$__sym>>0]|0;
  $131 = $130 & 1;
  $132 = ($131<<24>>24)==(0);
  if ($132) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $133 = ((($__sym)) + 8|0);
   $134 = HEAP32[$133>>2]|0;
   HEAP32[$134>>2] = 0;
  }
  $135 = ((($__sym)) + 4|0);
  HEAP32[$135>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  HEAP32[$11>>2] = 0;
  $136 = ((($11)) + 4|0);
  HEAP32[$136>>2] = 0;
  $137 = ((($11)) + 8|0);
  HEAP32[$137>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $138 = HEAP32[$77>>2]|0;
  $139 = ((($138)) + 36|0);
  $140 = HEAP32[$139>>2]|0;
  $141 = (FUNCTION_TABLE_ii[$140 & 63]($77)|0);
  $storemerge = $141;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0$i$i30 = 0, $$0$i$i954 = 0, $$01$i$i52 = 0, $$057 = 0, $$2 = 0, $$lcssa = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa67 = 0, $$op = 0, $$pre29 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0;
 var $__d$031 = 0, $__d$1$lcssa = 0, $__d$137 = 0, $__d$2 = 0, $__d$347 = 0, $__f$0$lcssa = 0, $__f$038 = 0, $__f$143 = 0, $__gl$0$ph = 0, $__gl$050 = 0, $__gl$1 = 0, $__ig$049 = 0, $__ig$1 = 0, $__me$promoted = 0, $__me$promoted66 = 0, $__ng$048 = 0, $__ng$1 = 0, $__p$056 = 0, $exitcond = 0, $or$cond = 0;
 var $scevgep$i = 0, $scevgep$i10 = 0, $scevgep$sum = 0, $scevgep26 = 0, $scevgep27$sum = 0, $scevgep28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sym)) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = ((($__sym)) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = ((($__grp)) + 4|0);
 $8 = ((($__grp)) + 8|0);
 $9 = ((($__grp)) + 1|0);
 $10 = ($__fd|0)>(0);
 $$057 = $__db;$__p$056 = 0;
 while(1) {
  $11 = (($__pat) + ($__p$056)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  switch ($13|0) {
  case 0:  {
   $14 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $14;
   $$2 = $$057;
   break;
  }
  case 1:  {
   $15 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $15;
   $16 = HEAP32[$__ct>>2]|0;
   $17 = ((($16)) + 44|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (FUNCTION_TABLE_iii[$18 & 15]($__ct,32)|0);
   $20 = HEAP32[$__me>>2]|0;
   $21 = ((($20)) + 4|0);
   HEAP32[$__me>>2] = $21;
   HEAP32[$20>>2] = $19;
   $$2 = $$057;
   break;
  }
  case 4:  {
   $53 = HEAP32[$__me>>2]|0;
   $54 = ((($$057)) + 4|0);
   $$$0 = $__neg ? $54 : $$057;
   $55 = ($$$0>>>0)<($__de>>>0);
   L7: do {
    if ($55) {
     $__d$031 = $$$0;
     while(1) {
      $56 = HEAP32[$__d$031>>2]|0;
      $57 = HEAP32[$__ct>>2]|0;
      $58 = ((($57)) + 12|0);
      $59 = HEAP32[$58>>2]|0;
      $60 = (FUNCTION_TABLE_iiii[$59 & 31]($__ct,2048,$56)|0);
      if (!($60)) {
       $__d$0$lcssa = $__d$031;
       break L7;
      }
      $61 = ((($__d$031)) + 4|0);
      $62 = ($61>>>0)<($__de>>>0);
      if ($62) {
       $__d$031 = $61;
      } else {
       $__d$0$lcssa = $61;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   if ($6) {
    $63 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $64 = $63 & $10;
    if ($64) {
     $__me$promoted66 = HEAP32[$__me>>2]|0;
     $68 = $__me$promoted66;$__d$137 = $__d$0$lcssa;$__f$038 = $__fd;
     while(1) {
      $65 = ((($__d$137)) + -4|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ((($68)) + 4|0);
      HEAP32[$68>>2] = $66;
      $69 = (($__f$038) + -1)|0;
      $70 = ($65>>>0)>($$$0>>>0);
      $71 = ($__f$038|0)>(1);
      $72 = $70 & $71;
      if ($72) {
       $68 = $67;$__d$137 = $65;$__f$038 = $69;
      } else {
       $$lcssa63 = $65;$$lcssa64 = $69;$$lcssa65 = $71;$$lcssa67 = $67;
       break;
      }
     }
     HEAP32[$__me>>2] = $$lcssa67;
     $$lcssa = $$lcssa65;$__d$1$lcssa = $$lcssa63;$__f$0$lcssa = $$lcssa64;
    } else {
     $$lcssa = $10;$__d$1$lcssa = $__d$0$lcssa;$__f$0$lcssa = $__fd;
    }
    if ($$lcssa) {
     $73 = HEAP32[$__ct>>2]|0;
     $74 = ((($73)) + 44|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (FUNCTION_TABLE_iii[$75 & 15]($__ct,48)|0);
     $83 = $76;
    } else {
     $83 = 0;
    }
    $__me$promoted = HEAP32[$__me>>2]|0;
    $77 = ($__f$0$lcssa|0)<(0);
    $$op = $__f$0$lcssa ^ -1;
    $78 = $77 ? $$op : -1;
    $79 = (($__f$0$lcssa) + ($78))|0;
    $80 = ($__f$0$lcssa|0)>(0);
    if ($80) {
     $82 = $__me$promoted;$__f$143 = $__f$0$lcssa;
     while(1) {
      $81 = ((($82)) + 4|0);
      HEAP32[$82>>2] = $83;
      $84 = (($__f$143) + -1)|0;
      $85 = ($__f$143|0)>(1);
      if ($85) {
       $82 = $81;$__f$143 = $84;
      } else {
       break;
      }
     }
    }
    $scevgep$sum = (($79) + 2)|0;
    $scevgep26 = (($__me$promoted) + ($scevgep$sum<<2)|0);
    $scevgep27$sum = (($79) + 1)|0;
    $scevgep28 = (($__me$promoted) + ($scevgep27$sum<<2)|0);
    HEAP32[$__me>>2] = $scevgep26;
    HEAP32[$scevgep28>>2] = $__dp;
    $__d$2 = $__d$1$lcssa;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $86 = ($__d$2|0)==($$$0|0);
   if ($86) {
    $87 = HEAP32[$__ct>>2]|0;
    $88 = ((($87)) + 44|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = (FUNCTION_TABLE_iii[$89 & 15]($__ct,48)|0);
    $91 = HEAP32[$__me>>2]|0;
    $92 = ((($91)) + 4|0);
    HEAP32[$__me>>2] = $92;
    HEAP32[$91>>2] = $90;
    $130 = $92;
   } else {
    $93 = HEAP8[$__grp>>0]|0;
    $94 = $93 & 1;
    $95 = ($94<<24>>24)==(0);
    $96 = HEAP32[$7>>2]|0;
    $97 = $93&255;
    $98 = $97 >>> 1;
    $99 = $95 ? $98 : $96;
    $100 = ($99|0)==(0);
    if ($100) {
     $__gl$0$ph = -1;
    } else {
     $101 = HEAP32[$8>>2]|0;
     $102 = $95 ? $9 : $101;
     $103 = HEAP8[$102>>0]|0;
     $104 = $103 << 24 >> 24;
     $__gl$0$ph = $104;
    }
    $105 = ($__d$2|0)==($$$0|0);
    if (!($105)) {
     $__d$347 = $__d$2;$__gl$050 = $__gl$0$ph;$__ig$049 = 0;$__ng$048 = 0;
     while(1) {
      $106 = ($__ng$048|0)==($__gl$050|0);
      $107 = HEAP32[$__me>>2]|0;
      if ($106) {
       $108 = ((($107)) + 4|0);
       HEAP32[$__me>>2] = $108;
       HEAP32[$107>>2] = $__ts;
       $109 = (($__ig$049) + 1)|0;
       $110 = HEAP8[$__grp>>0]|0;
       $111 = $110 & 1;
       $112 = ($111<<24>>24)==(0);
       $113 = $110&255;
       $114 = $113 >>> 1;
       $115 = $112 ? $114 : $96;
       $116 = ($109>>>0)<($115>>>0);
       if ($116) {
        $117 = HEAP32[$8>>2]|0;
        $118 = $112 ? $9 : $117;
        $119 = (($118) + ($109)|0);
        $120 = HEAP8[$119>>0]|0;
        $121 = ($120<<24>>24)==(127);
        $122 = $120 << 24 >> 24;
        $$ = $121 ? -1 : $122;
        $126 = $108;$__gl$1 = $$;$__ig$1 = $109;$__ng$1 = 0;
       } else {
        $126 = $108;$__gl$1 = $__ng$048;$__ig$1 = $109;$__ng$1 = 0;
       }
      } else {
       $126 = $107;$__gl$1 = $__gl$050;$__ig$1 = $__ig$049;$__ng$1 = $__ng$048;
      }
      $123 = ((($__d$347)) + -4|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ((($126)) + 4|0);
      HEAP32[$__me>>2] = $125;
      HEAP32[$126>>2] = $124;
      $127 = (($__ng$1) + 1)|0;
      $128 = ($123|0)==($$$0|0);
      if ($128) {
       break;
      } else {
       $__d$347 = $123;$__gl$050 = $__gl$1;$__ig$049 = $__ig$1;$__ng$048 = $127;
      }
     }
    }
    $$pre29 = HEAP32[$__me>>2]|0;
    $130 = $$pre29;
   }
   $129 = ($53|0)==($130|0);
   if ($129) {
    $$2 = $$$0;
   } else {
    $131 = ((($130)) + -4|0);
    $132 = ($53>>>0)<($131>>>0);
    if ($132) {
     $$01$i$i52 = $53;$135 = $131;
     while(1) {
      $133 = HEAP32[$$01$i$i52>>2]|0;
      $134 = HEAP32[$135>>2]|0;
      HEAP32[$$01$i$i52>>2] = $134;
      HEAP32[$135>>2] = $133;
      $136 = ((($$01$i$i52)) + 4|0);
      $137 = ((($135)) + -4|0);
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $$01$i$i52 = $136;$135 = $137;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 3:  {
   $22 = HEAP8[$__sn>>0]|0;
   $23 = $22 & 1;
   $24 = ($23<<24>>24)==(0);
   $25 = HEAP32[$0>>2]|0;
   $26 = $22&255;
   $27 = $26 >>> 1;
   $28 = $24 ? $27 : $25;
   $29 = ($28|0)==(0);
   if ($29) {
    $$2 = $$057;
   } else {
    $30 = HEAP32[$1>>2]|0;
    $31 = $24 ? $0 : $30;
    $32 = HEAP32[$31>>2]|0;
    $33 = HEAP32[$__me>>2]|0;
    $34 = ((($33)) + 4|0);
    HEAP32[$__me>>2] = $34;
    HEAP32[$33>>2] = $32;
    $$2 = $$057;
   }
   break;
  }
  case 2:  {
   $35 = HEAP8[$__sym>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   $38 = HEAP32[$2>>2]|0;
   $39 = $35&255;
   $40 = $39 >>> 1;
   $41 = $37 ? $40 : $38;
   $42 = ($41|0)==(0);
   $or$cond = $4 | $42;
   if ($or$cond) {
    $$2 = $$057;
   } else {
    $43 = HEAP32[$5>>2]|0;
    $44 = $37 ? $2 : $43;
    $45 = (($44) + ($41<<2)|0);
    $46 = HEAP32[$__me>>2]|0;
    $47 = ($41|0)==(0);
    if (!($47)) {
     $$0$i$i954 = $46;$49 = $44;
     while(1) {
      $48 = HEAP32[$49>>2]|0;
      HEAP32[$$0$i$i954>>2] = $48;
      $50 = ((($49)) + 4|0);
      $51 = ((($$0$i$i954)) + 4|0);
      $52 = ($50|0)==($45|0);
      if ($52) {
       break;
      } else {
       $$0$i$i954 = $51;$49 = $50;
      }
     }
    }
    $scevgep$i10 = (($46) + ($41<<2)|0);
    HEAP32[$__me>>2] = $scevgep$i10;
    $$2 = $$057;
   }
   break;
  }
  default: {
   $$2 = $$057;
  }
  }
  $139 = (($__p$056) + 1)|0;
  $exitcond = ($139|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$057 = $$2;$__p$056 = $139;
  }
 }
 $140 = HEAP8[$__sn>>0]|0;
 $141 = $140 & 1;
 $142 = ($141<<24>>24)==(0);
 $143 = HEAP32[$0>>2]|0;
 $144 = $140&255;
 $145 = $144 >>> 1;
 $146 = $142 ? $145 : $143;
 $147 = ($146>>>0)>(1);
 if ($147) {
  $148 = HEAP32[$1>>2]|0;
  $149 = $142 ? $0 : $148;
  $150 = ((($149)) + 4|0);
  $151 = (($149) + ($146<<2)|0);
  $152 = HEAP32[$__me>>2]|0;
  $153 = $150;
  $154 = $151;
  $155 = (($154) - ($153))|0;
  $156 = ($146|0)==(1);
  if (!($156)) {
   $$0$i$i30 = $152;$158 = $150;
   while(1) {
    $157 = HEAP32[$158>>2]|0;
    HEAP32[$$0$i$i30>>2] = $157;
    $159 = ((($158)) + 4|0);
    $160 = ((($$0$i$i30)) + 4|0);
    $161 = ($159|0)==($151|0);
    if ($161) {
     break;
    } else {
     $$0$i$i30 = $160;$158 = $159;
    }
   }
  }
  $162 = $155 >>> 2;
  $scevgep$i = (($152) + ($162<<2)|0);
  HEAP32[$__me>>2] = $scevgep$i;
 }
 $163 = $__flags & 176;
 if ((($163|0) == 32)) {
  $164 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $164;
 } else if (!((($163|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$byval_copy = 0, $$pre15 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0;
 $$byval_copy = sp + 468|0;
 $__loc = sp + 464|0;
 $__pat = sp + 472|0;
 $__dp = sp + 460|0;
 $__ts = sp + 456|0;
 $__grp = sp + 444|0;
 $__sym = sp + 432|0;
 $__sn = sp + 420|0;
 $__fd = sp + 416|0;
 $__mbuf = sp + 16|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 $2 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6160)|0);
 $3 = HEAP8[$__digits>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 $6 = ((($__digits)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3&255;
 $9 = $8 >>> 1;
 $10 = $5 ? $9 : $7;
 $11 = ($10|0)==(0);
 if ($11) {
  $27 = 0;
 } else {
  $12 = ((($__digits)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $5 ? $6 : $13;
  $15 = HEAP32[$14>>2]|0;
  $16 = HEAP32[$2>>2]|0;
  $17 = ((($16)) + 44|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (FUNCTION_TABLE_iii[$18 & 15]($2,45)|0);
  $20 = ($15|0)==($19|0);
  $27 = $20;
 }
 HEAP32[$__grp>>2] = 0;
 $21 = ((($__grp)) + 4|0);
 HEAP32[$21>>2] = 0;
 $22 = ((($__grp)) + 8|0);
 HEAP32[$22>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $23 = ((($__sym)) + 4|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($__sym)) + 8|0);
 HEAP32[$24>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $25 = ((($__sn)) + 4|0);
 HEAP32[$25>>2] = 0;
 $26 = ((($__sn)) + 8|0);
 HEAP32[$26>>2] = 0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$27,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $28 = HEAP8[$__digits>>0]|0;
 $29 = $28 & 1;
 $30 = ($29<<24>>24)==(0);
 $31 = HEAP32[$6>>2]|0;
 $32 = $28&255;
 $33 = $32 >>> 1;
 $34 = $30 ? $33 : $31;
 $35 = HEAP32[$__fd>>2]|0;
 $36 = ($34|0)>($35|0);
 if ($36) {
  $37 = (($34) - ($35))|0;
  $38 = $37 << 1;
  $39 = HEAP8[$__sn>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  $42 = ((($__sn)) + 4|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = $39&255;
  $45 = $44 >>> 1;
  $46 = $41 ? $45 : $43;
  $47 = HEAP8[$__sym>>0]|0;
  $48 = $47 & 1;
  $49 = ($48<<24>>24)==(0);
  $50 = ((($__sym)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = $47&255;
  $53 = $52 >>> 1;
  $54 = $49 ? $53 : $51;
  $55 = $38 | 1;
  $56 = (($55) + ($35))|0;
  $57 = (($56) + ($46))|0;
  $58 = (($57) + ($54))|0;
  $78 = $58;
 } else {
  $59 = HEAP8[$__sn>>0]|0;
  $60 = $59 & 1;
  $61 = ($60<<24>>24)==(0);
  $62 = ((($__sn)) + 4|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = $59&255;
  $65 = $64 >>> 1;
  $66 = $61 ? $65 : $63;
  $67 = HEAP8[$__sym>>0]|0;
  $68 = $67 & 1;
  $69 = ($68<<24>>24)==(0);
  $70 = ((($__sym)) + 4|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = $67&255;
  $73 = $72 >>> 1;
  $74 = $69 ? $73 : $71;
  $75 = (($35) + 2)|0;
  $76 = (($75) + ($66))|0;
  $77 = (($76) + ($74))|0;
  $78 = $77;
 }
 $79 = ($78>>>0)>(100);
 if ($79) {
  $80 = $78 << 2;
  $81 = (_malloc($80)|0);
  $82 = $81;
  $83 = ($81|0)==(0|0);
  if ($83) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $101 = $82;$__mb$0 = $81;
  }
 } else {
  $101 = 0;$__mb$0 = $__mbuf;
 }
 $84 = ((($__iob)) + 4|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = $28 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__digits)) + 8|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $87 ? $6 : $89;
 $91 = $28&255;
 $92 = $91 >>> 1;
 $93 = $87 ? $92 : $31;
 $94 = (($90) + ($93<<2)|0);
 $95 = HEAP32[$__dp>>2]|0;
 $96 = HEAP32[$__ts>>2]|0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0,$__mi,$__me,$85,$90,$94,$2,$27,$__pat,$95,$96,$__grp,$__sym,$__sn,$35);
 $97 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $97;
 $98 = HEAP32[$__mi>>2]|0;
 $99 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $100 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$98,$99,$__iob,$__fl)|0);
 $102 = ($101|0)==(0);
 if ($102) {
  $104 = $1;
 } else {
  $103 = $101;
  _free($103);
  $$pre15 = HEAP32[$__loc>>2]|0;
  $104 = $$pre15;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($104)|0);
 STACKTOP = sp;return ($100|0);
}
function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i12 = 0, $$0$i614 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ndflt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__ndflt = sp;
 HEAP32[$__ndflt>>2] = 0;
 $0 = ((($__ndflt)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__ndflt)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__dflt>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 $5 = ((($__dflt)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($__dflt)) + 1|0);
 $8 = $4 ? $7 : $6;
 $9 = ((($__dflt)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $2&255;
 $12 = $11 >>> 1;
 $13 = $4 ? $12 : $10;
 $14 = (($8) + ($13)|0);
 $15 = ($13|0)>(0);
 if ($15) {
  $$0$i614 = $8;
  while(1) {
   $16 = HEAP8[$$0$i614>>0]|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$16);
   $17 = ((($$0$i614)) + 1|0);
   $18 = ($17>>>0)<($14>>>0);
   if ($18) {
    $$0$i614 = $17;
   } else {
    break;
   }
  }
 }
 $19 = ($__c|0)==(-1);
 $20 = $__c << 1;
 $21 = $20;
 $22 = $19 ? (-1) : $21;
 $23 = HEAP8[$__ndflt>>0]|0;
 $24 = $23 & 1;
 $25 = ($24<<24>>24)==(0);
 $26 = ((($__ndflt)) + 8|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($__ndflt)) + 1|0);
 $29 = $25 ? $28 : $27;
 $30 = (_catgets(($22|0),($__set|0),($__msgid|0),($29|0))|0);
 HEAP32[$agg$result>>2] = 0;
 $31 = ((($agg$result)) + 4|0);
 HEAP32[$31>>2] = 0;
 $32 = ((($agg$result)) + 8|0);
 HEAP32[$32>>2] = 0;
 $33 = (_strlen(($30|0))|0);
 $34 = (($30) + ($33)|0);
 $35 = ($33|0)>(0);
 if ($35) {
  $$0$i12 = $30;
  while(1) {
   $36 = HEAP8[$$0$i12>>0]|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($agg$result,$36);
   $37 = ((($$0$i12)) + 1|0);
   $38 = ($37>>>0)<($34>>>0);
   if ($38) {
    $$0$i12 = $37;
   } else {
    break;
   }
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i15 = 0, $$0$i922 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $__bn$i7 = 0, $__buf$i6 = 0, $__mb$i5 = 0, $__ndflt = 0, $__p$0$i1018 = 0, $__p$0$i14 = 0;
 var $__wn$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $__mb$i5 = sp + 168|0;
 $__buf$i6 = sp + 40|0;
 $__bn$i7 = sp + 32|0;
 $__wn$i = sp + 28|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp;
 HEAP32[$__ndflt>>2] = 0;
 $2 = ((($__ndflt)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($__ndflt)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$0>>2] = (6968);
 $5 = HEAP8[$__dflt>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__dflt)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($__dflt)) + 4|0);
 $11 = $7 ? $10 : $9;
 $12 = HEAP32[$10>>2]|0;
 $13 = $5&255;
 $14 = $13 >>> 1;
 $15 = $7 ? $14 : $12;
 $16 = (($11) + ($15<<2)|0);
 $17 = ((($__buf$i6)) + 32|0);
 $18 = ($15|0)>(0);
 if ($18) {
  $$0$i922 = $11;
  while(1) {
   HEAP32[$__wn$i>>2] = $$0$i922;
   $19 = HEAP32[$0>>2]|0;
   $20 = ((($19)) + 12|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_iiiiiiiii[$21 & 15]($0,$__mb$i5,$$0$i922,$16,$__wn$i,$__buf$i6,$17,$__bn$i7)|0);
   $23 = HEAP32[$__bn$i7>>2]|0;
   $24 = ($__buf$i6>>>0)<($23>>>0);
   if ($24) {
    $__p$0$i1018 = $__buf$i6;
    while(1) {
     $25 = HEAP8[$__p$0$i1018>>0]|0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$25);
     $26 = ((($__p$0$i1018)) + 1|0);
     $27 = HEAP32[$__bn$i7>>2]|0;
     $28 = ($26>>>0)<($27>>>0);
     if ($28) {
      $__p$0$i1018 = $26;
     } else {
      break;
     }
    }
   }
   $29 = HEAP32[$__wn$i>>2]|0;
   $30 = ($29>>>0)<($16>>>0);
   $31 = ($22|0)!=(2);
   $32 = $31 & $30;
   if ($32) {
    $$0$i922 = $29;
   } else {
    break;
   }
  }
 }
 $33 = ($__c|0)==(-1);
 $34 = $__c << 1;
 $35 = $34;
 $36 = $33 ? (-1) : $35;
 $37 = HEAP8[$__ndflt>>0]|0;
 $38 = $37 & 1;
 $39 = ($38<<24>>24)==(0);
 $40 = ((($__ndflt)) + 8|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($__ndflt)) + 1|0);
 $43 = $39 ? $42 : $41;
 $44 = (_catgets(($36|0),($__set|0),($__msgid|0),($43|0))|0);
 HEAP32[$agg$result>>2] = 0;
 $45 = ((($agg$result)) + 4|0);
 HEAP32[$45>>2] = 0;
 $46 = ((($agg$result)) + 8|0);
 HEAP32[$46>>2] = 0;
 $47 = ((($1)) + 4|0);
 HEAP32[$47>>2] = 0;
 HEAP32[$1>>2] = (7072);
 $48 = (_strlen(($44|0))|0);
 $49 = (($44) + ($48)|0);
 $50 = $49;
 $51 = ((($__buf$i6)) + 128|0);
 $52 = ($48|0)>(0);
 if ($52) {
  $$0$i15 = $44;
  while(1) {
   HEAP32[$__wn$i>>2] = $$0$i15;
   $53 = HEAP32[$1>>2]|0;
   $54 = ((($53)) + 16|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = $$0$i15;
   $57 = (($50) - ($56))|0;
   $58 = ($57|0)>(32);
   $59 = ((($$0$i15)) + 32|0);
   $60 = $58 ? $59 : $49;
   $61 = (FUNCTION_TABLE_iiiiiiiii[$55 & 15]($1,$__mb$i5,$$0$i15,$60,$__wn$i,$__buf$i6,$51,$__bn$i7)|0);
   $62 = HEAP32[$__bn$i7>>2]|0;
   $63 = ($__buf$i6>>>0)<($62>>>0);
   if ($63) {
    $__p$0$i14 = $__buf$i6;
    while(1) {
     $64 = HEAP32[$__p$0$i14>>2]|0;
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($agg$result,$64);
     $65 = ((($__p$0$i14)) + 4|0);
     $66 = HEAP32[$__bn$i7>>2]|0;
     $67 = ($65>>>0)<($66>>>0);
     if ($67) {
      $__p$0$i14 = $65;
     } else {
      break;
     }
    }
   }
   $68 = HEAP32[$__wn$i>>2]|0;
   $69 = ($68>>>0)<($49>>>0);
   $70 = ($61|0)!=(2);
   $71 = $70 & $69;
   if ($71) {
    $$0$i15 = $68;
   } else {
    break;
   }
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((9512|0),(9536|0),314,(9624|0));
 // unreachable;
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6136);
 $2 = ((($this)) + 8|0);
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($2,28);
 $3 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3,9144,1);
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($this)) + 12|0);
 $$pre$i$i$i = HEAP32[$5>>2]|0;
 $6 = ($$pre$i$i$i|0)==($4|0);
 if (!($6)) {
  $8 = $$pre$i$i$i;
  while(1) {
   $7 = ((($8)) + -4|0);
   $9 = ($7|0)==($4|0);
   if ($9) {
    $$lcssa = $7;
    break;
   } else {
    $8 = $7;
   }
  }
  HEAP32[$5>>2] = $$lcssa;
 }
 HEAP32[(9652)>>2] = 0;
 HEAP32[9648>>2] = (4992);
 __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,9648);
 HEAP32[(9660)>>2] = 0;
 HEAP32[9656>>2] = (5032);
 __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,9656);
 __ZNSt3__15ctypeIcEC2EPKtbj(9664,0,0,1);
 __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,9664);
 HEAP32[(9684)>>2] = 0;
 HEAP32[9680>>2] = (6480);
 __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,9680);
 HEAP32[(9692)>>2] = 0;
 HEAP32[9688>>2] = (6608);
 __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,9688);
 HEAP32[(9700)>>2] = 0;
 HEAP32[9696>>2] = (6256);
 $10 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(9704)>>2] = $10;
 __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,9696);
 HEAP32[(9716)>>2] = 0;
 HEAP32[9712>>2] = (6728);
 __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,9712);
 HEAP32[(9724)>>2] = 0;
 HEAP32[9720>>2] = (6848);
 __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,9720);
 __ZNSt3__18numpunctIcEC2Ej(9728,1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,9728);
 __ZNSt3__18numpunctIwEC2Ej(9752,1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,9752);
 HEAP32[(9788)>>2] = 0;
 HEAP32[9784>>2] = (5072);
 __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9784);
 HEAP32[(9796)>>2] = 0;
 HEAP32[9792>>2] = (5184);
 __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9792);
 HEAP32[(9804)>>2] = 0;
 HEAP32[9800>>2] = (5256);
 __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9800);
 HEAP32[(9812)>>2] = 0;
 HEAP32[9808>>2] = (5320);
 __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9808);
 HEAP32[(9820)>>2] = 0;
 HEAP32[9816>>2] = (5640);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,9816);
 HEAP32[(9828)>>2] = 0;
 HEAP32[9824>>2] = (5704);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,9824);
 HEAP32[(9836)>>2] = 0;
 HEAP32[9832>>2] = (5768);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,9832);
 HEAP32[(9844)>>2] = 0;
 HEAP32[9840>>2] = (5832);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,9840);
 HEAP32[(9852)>>2] = 0;
 HEAP32[9848>>2] = (5896);
 __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9848);
 HEAP32[(9860)>>2] = 0;
 HEAP32[9856>>2] = (5936);
 __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9856);
 HEAP32[(9868)>>2] = 0;
 HEAP32[9864>>2] = (5976);
 __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9864);
 HEAP32[(9876)>>2] = 0;
 HEAP32[9872>>2] = (6016);
 __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9872);
 HEAP32[(9884)>>2] = 0;
 HEAP32[9880>>2] = (5384);
 HEAP32[(9888)>>2] = (5432);
 __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9880);
 HEAP32[(9900)>>2] = 0;
 HEAP32[9896>>2] = (5480);
 HEAP32[(9904)>>2] = (5528);
 __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9896);
 HEAP32[(9916)>>2] = 0;
 HEAP32[9912>>2] = (6416);
 $11 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(9920)>>2] = $11;
 HEAP32[9912>>2] = (5576);
 __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9912);
 HEAP32[(9932)>>2] = 0;
 HEAP32[9928>>2] = (6416);
 $12 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(9936)>>2] = $12;
 HEAP32[9928>>2] = (5608);
 __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9928);
 HEAP32[(9948)>>2] = 0;
 HEAP32[9944>>2] = (6056);
 __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,9944);
 HEAP32[(9956)>>2] = 0;
 HEAP32[9952>>2] = (6096);
 __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,9952);
 return;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[9960>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((9960|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   (__ZNSt3__16locale5__imp12make_classicEv()|0);
   HEAP32[9976>>2] = 9968;
   ___cxa_guard_release((9960|0));
  }
 }
 $4 = HEAP32[9976>>2]|0;
 return ($4|0);
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 if ($8) {
  $11 = $3;
 } else {
  $9 = (($id) + 1)|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($0,$9);
  $$pre = HEAP32[$0>>2]|0;
  $11 = $$pre;
 }
 $10 = (($11) + ($id<<2)|0);
 $12 = HEAP32[$10>>2]|0;
 $13 = ($12|0)==(0|0);
 if ($13) {
  $15 = $11;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $$pre1 = HEAP32[$0>>2]|0;
  $15 = $$pre1;
 }
 $14 = (($15) + ($id<<2)|0);
 HEAP32[$14>>2] = $f;
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6136);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($2|0)==($3|0);
 if (!($4)) {
  $6 = $3;$i$01 = 0;
  while(1) {
   $5 = (($6) + ($i$01<<2)|0);
   $7 = HEAP32[$5>>2]|0;
   $8 = ($7|0)==(0|0);
   if (!($8)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
   }
   $9 = (($i$01) + 1)|0;
   $10 = HEAP32[$1>>2]|0;
   $11 = HEAP32[$0>>2]|0;
   $12 = $10;
   $13 = $11;
   $14 = (($12) - ($13))|0;
   $15 = $14 >> 2;
   $16 = ($9>>>0)<($15>>>0);
   if ($16) {
    $6 = $11;$i$01 = $9;
   } else {
    break;
   }
  }
 }
 $17 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(9984,1);
 HEAP32[9968>>2] = 9984;
 return (9968|0);
}
function __ZNSt3__16locale5__imp11make_globalEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale7classicEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[10144>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return (10144|0);
}
function __ZNSt3__16locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10152>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10152|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   (__ZNSt3__16locale5__imp11make_globalEv()|0);
   HEAP32[10160>>2] = 10144;
   ___cxa_guard_release((10152|0));
  }
 }
 $4 = HEAP32[10160>>2]|0;
 return ($4|0);
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale8__globalEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$this>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return;
}
function __ZNSt3__16localeC2ERKS0_($this,$l) {
 $this = $this|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l>>2]|0;
 HEAP32[$this>>2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}
function __ZNSt3__16localeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 return;
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__p$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p$i = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 if (!($1)) {
  HEAP32[$__p$i>>2] = $this;
  $2 = ((($__p$i)) + 4|0);
  HEAP32[$2>>2] = (108);
  $3 = ((($__p$i)) + 8|0);
  HEAP32[$3>>2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this,$__p$i,109);
 }
 $4 = ((($this)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x) {
 $this = $this|0;
 $x = $x|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv($x)|0);
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + ($1<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 return ($5|0);
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if (!($0)) {
  $1 = HEAP32[$this>>2]|0;
  $2 = ((($1)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$3 & 127]($this);
 }
 return;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[6152>>2]|0;HEAP32[6152>>2] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = ((($this)) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_b_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<1)|0);
  $3 = HEAP16[$2>>1]|0;
  $4 = $3 & $m;
  $5 = ($4<<16>>16)!=(0);
  $6 = $5;
 } else {
  $6 = 0;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$015 = 0, $$06 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $vec;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_b_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<1)|0);
    $8 = HEAP16[$7>>1]|0;
    $9 = $8&65535;
    $11 = $9;
   } else {
    $11 = 0;
   }
   $10 = $11&65535;
   HEAP16[$$06>>1] = $10;
   $12 = ((($$015)) + 4|0);
   $13 = ((($$06)) + 2|0);
   $14 = ($12|0)==($high|0);
   if ($14) {
    break;
   } else {
    $$015 = $12;$$06 = $13;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if ($isascii) {
     $2 = (___ctype_b_loc()|0);
     $3 = HEAP32[$2>>2]|0;
     $4 = (($3) + ($1<<1)|0);
     $5 = HEAP16[$4>>1]|0;
     $6 = $5 & $m;
     $7 = ($6<<16>>16)==(0);
     if (!($7)) {
      $$0$lcssa = $$01;
      break L1;
     }
    }
    $8 = ((($$01)) + 4|0);
    $9 = ($8|0)==($high|0);
    if ($9) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $8;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if (!($isascii)) {
     $$0$lcssa = $$01;
     break L1;
    }
    $2 = (___ctype_b_loc()|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = (($3) + ($1<<1)|0);
    $5 = HEAP16[$4>>1]|0;
    $6 = $5 & $m;
    $7 = ($6<<16>>16)==(0);
    if ($7) {
     $$0$lcssa = $$01;
     break L1;
    }
    $8 = ((($$01)) + 4|0);
    $9 = ($8|0)==($high|0);
    if ($9) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $8;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_toupper_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3;
 } else {
  $4 = $c;
 }
 return ($4|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_toupper_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<2)|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = $8;
   } else {
    $9 = $4;
   }
   HEAP32[$$04>>2] = $9;
   $10 = ((($$04)) + 4|0);
   $11 = ($10|0)==($high|0);
   if ($11) {
    break;
   } else {
    $$04 = $10;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_tolower_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3;
 } else {
  $4 = $c;
 }
 return ($4|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_tolower_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<2)|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = $8;
   } else {
    $9 = $4;
   }
   HEAP32[$$04>>2] = $9;
   $10 = ((($$04)) + 4|0);
   $11 = ($10|0)==($high|0);
   if ($11) {
    break;
   } else {
    $$04 = $10;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   $2 = $1 << 24 >> 24;
   HEAP32[$$03>>2] = $2;
   $3 = ((($$012)) + 1|0);
   $4 = ((($$03)) + 4|0);
   $5 = ($3|0)==($high|0);
   if ($5) {
    break;
   } else {
    $$012 = $3;$$03 = $4;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$015 = 0, $$06 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $dest;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   $5 = $4&255;
   $$dfault = $isascii ? $5 : $dfault;
   HEAP8[$$06>>0] = $$dfault;
   $6 = ((($$015)) + 4|0);
   $7 = ((($$06)) + 1|0);
   $8 = ($6|0)==($high|0);
   if ($8) {
    break;
   } else {
    $$015 = $6;$$06 = $7;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__15ctypeIcEC2EPKtbj($this,$tab,$del,$refs) {
 $this = $this|0;
 $tab = $tab|0;
 $del = $del|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6184);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = $tab;
 $3 = ((($this)) + 12|0);
 $4 = $del&1;
 HEAP8[$3>>0] = $4;
 $5 = ($tab|0)==(0|0);
 if ($5) {
  $6 = (___ctype_b_loc()|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$2>>2] = $7;
 }
 return;
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6184);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = ((($this)) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   __ZdaPv($1);
  }
 }
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c&255;
  $1 = (___ctype_toupper_loc()|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = (($2) + ($0<<2)|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $4&255;
  $6 = $5;
 } else {
  $6 = $c;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (___ctype_toupper_loc()|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($4) + ($2<<2)|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = $6&255;
    $8 = $7;
   } else {
    $8 = $1;
   }
   HEAP8[$$02>>0] = $8;
   $9 = ((($$02)) + 1|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$02 = $9;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c << 24 >> 24;
  $1 = (___ctype_tolower_loc()|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = (($2) + ($0<<2)|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $4&255;
  $6 = $5;
 } else {
  $6 = $c;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (___ctype_tolower_loc()|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($4) + ($2<<2)|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = $6&255;
    $8 = $7;
   } else {
    $8 = $1;
   }
   HEAP8[$$02>>0] = $8;
   $9 = ((($$02)) + 1|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$02 = $9;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   HEAP8[$$03>>0] = $1;
   $2 = ((($$012)) + 1|0);
   $3 = ((($$03)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$012 = $2;$$03 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$013 = 0, $$04 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$013 = $low;$$04 = $dest;
  while(1) {
   $1 = HEAP8[$$013>>0]|0;
   $isascii2 = ($1<<24>>24)>(-1);
   $$dfault = $isascii2 ? $1 : $dfault;
   HEAP8[$$04>>0] = $$dfault;
   $2 = ((($$013)) + 1|0);
   $3 = ((($$04)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$013 = $2;$$04 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$0143 = 0, $$0143$lcssa = 0, $$02$be = 0, $$0242 = 0, $$0242$lcssa = 0, $$1$lcssa = 0, $$128 = 0, $$pre = 0, $$pre14 = 0, $$pre15 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $fend$0$lcssa = 0, $fend$048 = 0, $fend$1$be = 0, $fend$144 = 0, $fend$2$lcssa = 0, $fend$235 = 0, $n$032 = 0, $not$ = 0, $or$cond = 0, $or$cond41 = 0, $p$033 = 0, $save_state = 0, $tmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $save_state = sp;
 $tmp = sp + 8|0;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$048 = $frm;
   while(1) {
    $1 = HEAP32[$fend$048>>2]|0;
    $2 = ($1|0)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$048;
     break L1;
    }
    $3 = ((($fend$048)) + 4|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$048 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond41 = $8 | $7;
 L6: do {
  if ($or$cond41) {
   $72 = $frm;
   label = 29;
  } else {
   $$0143 = $frm;$$0242 = $to;$fend$144 = $fend$0$lcssa;
   while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$144;
    $20 = $$0143;
    $21 = (($19) - ($20))|0;
    $22 = $21 >> 2;
    $23 = $$0242;
    $24 = (($5) - ($23))|0;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale(($25|0))|0);
    $27 = (_wcsnrtombs($$0242,$frm_nxt,$22,$24,$st)|0);
    $28 = ($26|0)==(0|0);
    if (!($28)) {
     (_uselocale(($26|0))|0);
    }
    if ((($27|0) == 0)) {
     $$0 = 1;
     break L6;
    } else if ((($27|0) == -1)) {
     $$0143$lcssa = $$0143;$$0242$lcssa = $$0242;
     break;
    }
    $43 = HEAP32[$to_nxt>>2]|0;
    $44 = (($43) + ($27)|0);
    HEAP32[$to_nxt>>2] = $44;
    $45 = ($44|0)==($to_end|0);
    if ($45) {
     label = 15;
     break;
    }
    $46 = ($fend$144|0)==($frm_end|0);
    if ($46) {
     $$pre = HEAP32[$frm_nxt>>2]|0;
     $$01$be = $$pre;$$02$be = $44;$fend$1$be = $frm_end;
    } else {
     $49 = HEAP32[$6>>2]|0;
     $50 = (_uselocale(($49|0))|0);
     $51 = (_wcrtomb($tmp,0,$st)|0);
     $52 = ($50|0)==(0|0);
     if (!($52)) {
      (_uselocale(($50|0))|0);
     }
     $53 = ($51|0)==(-1);
     if ($53) {
      $$0 = 2;
      break L6;
     }
     $54 = HEAP32[$to_nxt>>2]|0;
     $55 = $54;
     $56 = (($5) - ($55))|0;
     $57 = ($51>>>0)>($56>>>0);
     if ($57) {
      $$0 = 1;
      break L6;
     }
     $58 = ($51|0)==(0);
     if (!($58)) {
      $n$032 = $51;$p$033 = $tmp;
      while(1) {
       $59 = ((($p$033)) + 1|0);
       $60 = HEAP8[$p$033>>0]|0;
       $61 = HEAP32[$to_nxt>>2]|0;
       $62 = ((($61)) + 1|0);
       HEAP32[$to_nxt>>2] = $62;
       HEAP8[$61>>0] = $60;
       $63 = (($n$032) + -1)|0;
       $64 = ($63|0)==(0);
       if ($64) {
        break;
       } else {
        $n$032 = $63;$p$033 = $59;
       }
      }
     }
     $65 = HEAP32[$frm_nxt>>2]|0;
     $66 = ((($65)) + 4|0);
     HEAP32[$frm_nxt>>2] = $66;
     $67 = ($66|0)==($frm_end|0);
     L25: do {
      if ($67) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$235 = $66;
       while(1) {
        $68 = HEAP32[$fend$235>>2]|0;
        $69 = ($68|0)==(0);
        if ($69) {
         $fend$2$lcssa = $fend$235;
         break L25;
        }
        $70 = ((($fend$235)) + 4|0);
        $71 = ($70|0)==($frm_end|0);
        if ($71) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$235 = $70;
        }
       }
      }
     } while(0);
     $$pre14 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $66;$$02$be = $$pre14;$fend$1$be = $fend$2$lcssa;
    }
    $47 = ($$01$be|0)==($frm_end|0);
    $48 = ($$02$be|0)==($to_end|0);
    $or$cond = $48 | $47;
    if ($or$cond) {
     $72 = $$01$be;
     label = 29;
     break L6;
    } else {
     $$0143 = $$01$be;$$0242 = $$02$be;$fend$144 = $fend$1$be;
    }
   }
   if ((label|0) == 15) {
    $$pre15 = HEAP32[$frm_nxt>>2]|0;
    $72 = $$pre15;
    label = 29;
    break;
   }
   HEAP32[$to_nxt>>2] = $$0242$lcssa;
   $29 = HEAP32[$frm_nxt>>2]|0;
   $30 = ($$0143$lcssa|0)==($29|0);
   L35: do {
    if ($30) {
     $$1$lcssa = $$0143$lcssa;
    } else {
     $$128 = $$0143$lcssa;$34 = $$0242$lcssa;
     while(1) {
      $31 = HEAP32[$$128>>2]|0;
      $32 = HEAP32[$6>>2]|0;
      $33 = (_uselocale(($32|0))|0);
      $35 = (_wcrtomb($34,$31,$save_state)|0);
      $36 = ($33|0)==(0|0);
      if (!($36)) {
       (_uselocale(($33|0))|0);
      }
      $37 = ($35|0)==(-1);
      if ($37) {
       $$1$lcssa = $$128;
       break L35;
      }
      $38 = HEAP32[$to_nxt>>2]|0;
      $39 = (($38) + ($35)|0);
      HEAP32[$to_nxt>>2] = $39;
      $40 = ((($$128)) + 4|0);
      $41 = HEAP32[$frm_nxt>>2]|0;
      $42 = ($40|0)==($41|0);
      if ($42) {
       $$1$lcssa = $40;
       break;
      } else {
       $$128 = $40;$34 = $39;
      }
     }
    }
   } while(0);
   HEAP32[$frm_nxt>>2] = $$1$lcssa;
   $$0 = 2;
  }
 } while(0);
 if ((label|0) == 29) {
  $not$ = ($72|0)!=($frm_end|0);
  $73 = $not$&1;
  $$0 = $73;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$0153 = 0, $$0153$lcssa = 0, $$02$be = 0, $$0252 = 0, $$0252$lcssa = 0, $$1$lcssa = 0, $$145 = 0, $$145$lcssa = 0, $$145$lcssa73 = 0, $$2 = 0, $$lcssa = 0, $$pre = 0, $$pre22 = 0, $$pre23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $fend$0$lcssa = 0, $fend$057 = 0, $fend$1$be = 0, $fend$154 = 0, $fend$2$lcssa = 0, $fend$246 = 0, $not$ = 0, $not$3 = 0, $or$cond = 0, $or$cond51 = 0, $save_state = 0, $storemerge44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $save_state = sp;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$057 = $frm;
   while(1) {
    $1 = HEAP8[$fend$057>>0]|0;
    $2 = ($1<<24>>24)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$057;
     break L1;
    }
    $3 = ((($fend$057)) + 1|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$057 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond51 = $8 | $7;
 L6: do {
  if ($or$cond51) {
   $64 = $frm;
   label = 29;
  } else {
   $$0153 = $frm;$$0252 = $to;$fend$154 = $fend$0$lcssa;
   while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$154;
    $20 = $$0153;
    $21 = (($19) - ($20))|0;
    $22 = $$0252;
    $23 = (($5) - ($22))|0;
    $24 = $23 >> 2;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale(($25|0))|0);
    $27 = (_mbsnrtowcs($$0252,$frm_nxt,$21,$24,$st)|0);
    $28 = ($26|0)==(0|0);
    if (!($28)) {
     (_uselocale(($26|0))|0);
    }
    if ((($27|0) == 0)) {
     $$0 = 2;
     break L6;
    } else if ((($27|0) == -1)) {
     $$0153$lcssa = $$0153;$$0252$lcssa = $$0252;$$lcssa = $19;
     break;
    }
    $44 = HEAP32[$to_nxt>>2]|0;
    $45 = (($44) + ($27<<2)|0);
    HEAP32[$to_nxt>>2] = $45;
    $46 = ($45|0)==($to_end|0);
    if ($46) {
     label = 19;
     break;
    }
    $47 = ($fend$154|0)==($frm_end|0);
    $$pre = HEAP32[$frm_nxt>>2]|0;
    if ($47) {
     $$01$be = $$pre;$$02$be = $45;$fend$1$be = $frm_end;
    } else {
     $50 = HEAP32[$6>>2]|0;
     $51 = (_uselocale(($50|0))|0);
     $52 = (_mbrtowc($45,$$pre,1,$st)|0);
     $53 = ($51|0)==(0|0);
     if (!($53)) {
      (_uselocale(($51|0))|0);
     }
     $54 = ($52|0)==(0);
     if (!($54)) {
      $$0 = 2;
      break L6;
     }
     $55 = HEAP32[$to_nxt>>2]|0;
     $56 = ((($55)) + 4|0);
     HEAP32[$to_nxt>>2] = $56;
     $57 = HEAP32[$frm_nxt>>2]|0;
     $58 = ((($57)) + 1|0);
     HEAP32[$frm_nxt>>2] = $58;
     $59 = ($58|0)==($frm_end|0);
     L20: do {
      if ($59) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$246 = $58;
       while(1) {
        $60 = HEAP8[$fend$246>>0]|0;
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         $fend$2$lcssa = $fend$246;
         break L20;
        }
        $62 = ((($fend$246)) + 1|0);
        $63 = ($62|0)==($frm_end|0);
        if ($63) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$246 = $62;
        }
       }
      }
     } while(0);
     $$pre22 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $58;$$02$be = $$pre22;$fend$1$be = $fend$2$lcssa;
    }
    $48 = ($$01$be|0)==($frm_end|0);
    $49 = ($$02$be|0)==($to_end|0);
    $or$cond = $49 | $48;
    if ($or$cond) {
     $64 = $$01$be;
     label = 29;
     break L6;
    } else {
     $$0153 = $$01$be;$$0252 = $$02$be;$fend$154 = $fend$1$be;
    }
   }
   if ((label|0) == 19) {
    $$pre23 = HEAP32[$frm_nxt>>2]|0;
    $64 = $$pre23;
    label = 29;
    break;
   }
   HEAP32[$to_nxt>>2] = $$0252$lcssa;
   $29 = HEAP32[$frm_nxt>>2]|0;
   $30 = ($$0153$lcssa|0)==($29|0);
   L29: do {
    if ($30) {
     $$1$lcssa = $$0153$lcssa;
    } else {
     $$145 = $$0153$lcssa;$storemerge44 = $$0252$lcssa;
     while(1) {
      $31 = $$145;
      $32 = (($$lcssa) - ($31))|0;
      $33 = HEAP32[$6>>2]|0;
      $34 = (_uselocale(($33|0))|0);
      $35 = (_mbrtowc($storemerge44,$$145,$32,$save_state)|0);
      $36 = ($34|0)==(0|0);
      if (!($36)) {
       (_uselocale(($34|0))|0);
      }
      if ((($35|0) == 0)) {
       $37 = ((($$145)) + 1|0);
       $$2 = $37;
      } else if ((($35|0) == -2)) {
       $$145$lcssa73 = $$145;
       label = 14;
       break;
      } else if ((($35|0) == -1)) {
       $$145$lcssa = $$145;
       label = 13;
       break;
      } else {
       $38 = (($$145) + ($35)|0);
       $$2 = $38;
      }
      $39 = HEAP32[$to_nxt>>2]|0;
      $40 = ((($39)) + 4|0);
      HEAP32[$to_nxt>>2] = $40;
      $41 = HEAP32[$frm_nxt>>2]|0;
      $42 = ($$2|0)==($41|0);
      if ($42) {
       $$1$lcssa = $$2;
       break L29;
      } else {
       $$145 = $$2;$storemerge44 = $40;
      }
     }
     if ((label|0) == 13) {
      HEAP32[$frm_nxt>>2] = $$145$lcssa;
      $$0 = 2;
      break L6;
     }
     else if ((label|0) == 14) {
      HEAP32[$frm_nxt>>2] = $$145$lcssa73;
      $$0 = 1;
      break L6;
     }
    }
   } while(0);
   HEAP32[$frm_nxt>>2] = $$1$lcssa;
   $not$3 = ($$1$lcssa|0)!=($frm_end|0);
   $43 = $not$3&1;
   $$0 = $43;
  }
 } while(0);
 if ((label|0) == 29) {
  $not$ = ($64|0)!=($frm_end|0);
  $65 = $not$&1;
  $$0 = $65;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n$02 = 0;
 var $p$03 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $tmp = sp;
 HEAP32[$to_nxt>>2] = $to;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 $3 = (_wcrtomb($tmp,0,$st)|0);
 $4 = ($2|0)==(0|0);
 if (!($4)) {
  (_uselocale(($2|0))|0);
 }
 if ((($3|0) == 0) | (($3|0) == -1)) {
  $$0 = 2;
 } else {
  $5 = (($3) + -1)|0;
  $6 = HEAP32[$to_nxt>>2]|0;
  $7 = $to_end;
  $8 = $6;
  $9 = (($7) - ($8))|0;
  $10 = ($5>>>0)>($9>>>0);
  if ($10) {
   $$0 = 1;
  } else {
   $11 = ($5|0)==(0);
   if ($11) {
    $$0 = 0;
   } else {
    $n$02 = $5;$p$03 = $tmp;
    while(1) {
     $12 = ((($p$03)) + 1|0);
     $13 = HEAP8[$p$03>>0]|0;
     $14 = HEAP32[$to_nxt>>2]|0;
     $15 = ((($14)) + 1|0);
     HEAP32[$to_nxt>>2] = $15;
     HEAP8[$14>>0] = $13;
     $16 = (($n$02) + -1)|0;
     $17 = ($16|0)==(0);
     if ($17) {
      $$0 = 0;
      break;
     } else {
      $n$02 = $16;$p$03 = $12;
     }
    }
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 $3 = (_mbtowc(0,0,4)|0);
 $4 = ($2|0)==(0|0);
 if (!($4)) {
  (_uselocale(($2|0))|0);
 }
 $5 = ($3|0)==(0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = ($6|0)==(0|0);
  if ($7) {
   $$0 = 1;
  } else {
   $8 = (_uselocale(($6|0))|0);
   $9 = ($8|0)==(0|0);
   if ($9) {
    $$0 = 0;
   } else {
    (_uselocale(($8|0))|0);
    $$0 = 0;
   }
  }
 } else {
  $$0 = -1;
 }
 return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$013 = 0, $$1 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0$lcssa = 0, $nbytes$04 = 0;
 var $nbytes$1 = 0, $nwchar_t$05 = 0, $or$cond = 0, $or$cond2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $frm_end;
 $1 = ((($this)) + 8|0);
 $2 = ($mx|0)==(0);
 $3 = ($frm|0)==($frm_end|0);
 $or$cond2 = $3 | $2;
 L1: do {
  if ($or$cond2) {
   $nbytes$0$lcssa = 0;
  } else {
   $$013 = $frm;$nbytes$04 = 0;$nwchar_t$05 = 0;
   while(1) {
    $4 = $$013;
    $5 = (($0) - ($4))|0;
    $6 = HEAP32[$1>>2]|0;
    $7 = (_uselocale(($6|0))|0);
    $8 = (_mbrlen($$013,$5,$st)|0);
    $9 = ($7|0)==(0|0);
    if (!($9)) {
     (_uselocale(($7|0))|0);
    }
    if ((($8|0) == -2) | (($8|0) == -1)) {
     $nbytes$0$lcssa = $nbytes$04;
     break L1;
    } else if ((($8|0) == 0)) {
     $10 = ((($$013)) + 1|0);
     $$1 = $10;$$pn = 1;
    } else {
     $11 = (($$013) + ($8)|0);
     $$1 = $11;$$pn = $8;
    }
    $nbytes$1 = (($$pn) + ($nbytes$04))|0;
    $12 = (($nwchar_t$05) + 1)|0;
    $13 = ($12>>>0)>=($mx>>>0);
    $14 = ($$1|0)==($frm_end|0);
    $or$cond = $14 | $13;
    if ($or$cond) {
     $nbytes$0$lcssa = $nbytes$1;
     break;
    } else {
     $$013 = $$1;$nbytes$04 = $nbytes$1;$nwchar_t$05 = $12;
    }
   }
  }
 } while(0);
 return ($nbytes$0$lcssa|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $5 = 1;
 } else {
  $3 = (_uselocale(($1|0))|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   $5 = 4;
  } else {
   (_uselocale(($3|0))|0);
   $5 = 4;
  }
 }
 return ($5|0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIcEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6336);
 $2 = ((($this)) + 8|0);
 HEAP8[$2>>0] = 46;
 $3 = ((($this)) + 9|0);
 HEAP8[$3>>0] = 44;
 $4 = ((($this)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIwEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6376);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = 46;
 $3 = ((($this)) + 12|0);
 HEAP32[$3>>2] = 44;
 $4 = ((($this)) + 16|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6336);
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6376);
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,10168,4);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10176)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10176,$0);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,10200,5);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10208)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10208,$0);
 return;
}
function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 if ((($2|0) == 8)) {
  $$0 = 16;
 } else if ((($2|0) == 0)) {
  $$0 = 0;
 } else if ((($2|0) == 64)) {
  $$0 = 8;
 } else {
  $$0 = 10;
 }
 return ($$0|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10232>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10232|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[10240>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((10240|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 10248;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((10416)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((10240|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10248,10416)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10260),10424)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10272),10432)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10284),10440)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10296),10456)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10308),10472)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10320),10480)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10332),10496)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10344),10504)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10356),10512)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10368),10520)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10380),10528)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10392),10536)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10404),10544)|0);
   HEAP32[10552>>2] = 10248;
   ___cxa_guard_release((10232|0));
  }
 }
 $13 = HEAP32[10552>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10560>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10560|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[10568>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((10568|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 10576;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((10744)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((10568|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10576,10744)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10588),10776)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10600),10808)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10612),10840)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10624),10880)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10636),10920)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10648),10952)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10660),10992)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10672),11008)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10684),11024)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10696),11040)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10708),11056)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10720),11072)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10732),11088)|0);
   HEAP32[11104>>2] = 10576;
   ___cxa_guard_release((10560|0));
  }
 }
 $13 = HEAP32[11104>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[11112>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((11112|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[11120>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((11120|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 11128;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((11416)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((11120|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11128,11416)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11140),11424)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11152),11440)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11164),11448)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11176),11456)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11188),11464)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11200),11472)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11212),11480)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11224),11488)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11236),11504)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11248),11512)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11260),11528)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11272),11544)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11284),11552)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11296),11560)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11308),11568)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11320),11456)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11332),11576)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11344),11584)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11356),11592)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11368),11600)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11380),11608)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11392),11616)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11404),11624)|0);
   HEAP32[11632>>2] = 11128;
   ___cxa_guard_release((11112|0));
  }
 }
 $13 = HEAP32[11632>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[11640>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((11640|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[11648>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((11648|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 11656;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((11944)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((11648|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11656,11944)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11668),11976)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11680),12016)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11692),12040)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11704),12064)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11716),12080)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11728),12104)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11740),12128)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11752),12160)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11764),12200)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11776),12232)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11788),12272)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11800),12312)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11812),12328)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11824),12344)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11836),12360)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11848),12064)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11860),12376)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11872),12392)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11884),12408)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11896),12424)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11908),12440)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11920),12456)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11932),12472)|0);
   HEAP32[12488>>2] = 11656;
   ___cxa_guard_release((11640|0));
  }
 }
 $13 = HEAP32[12488>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[12496>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((12496|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[12504>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((12504|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 12512;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((12800)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((12504|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(12512,12800)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((12524),12808)|0);
   HEAP32[12816>>2] = 12512;
   ___cxa_guard_release((12496|0));
  }
 }
 $13 = HEAP32[12816>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[12824>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((12824|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[12832>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((12832|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 12840;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((13128)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((12832|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12840,13128)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((12852),13144)|0);
   HEAP32[13160>>2] = 12840;
   ___cxa_guard_release((12824|0));
  }
 }
 $13 = HEAP32[13160>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13168>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13168|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13176,13192,8);
   ___cxa_guard_release((13168|0));
  }
 }
 return (13176|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13208>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13208|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13216)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13256,13216,$4);
   ___cxa_guard_release((13208|0));
  }
 }
 return (13256|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13272>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13272|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13280,13296,8);
   ___cxa_guard_release((13272|0));
  }
 }
 return (13280|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13312>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13312|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13320)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13360,13320,$4);
   ___cxa_guard_release((13312|0));
  }
 }
 return (13360|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13376>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13376|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13384,13400,20);
   ___cxa_guard_release((13376|0));
  }
 }
 return (13384|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13424>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13424|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13432)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13520,13432,$4);
   ___cxa_guard_release((13424|0));
  }
 }
 return (13520|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13536>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13536|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13544,13560,11);
   ___cxa_guard_release((13536|0));
  }
 }
 return (13544|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13576>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13576|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13584)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13632,13584,$4);
   ___cxa_guard_release((13576|0));
  }
 }
 return (13632|0);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6256);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 $3 = ($1|0)==($2|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  _freelocale(($4|0));
 }
 return;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$021 = 0, $$033 = 0, $$lcssa = 0, $$lcssa59 = 0, $$pre$i$i$i = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$i2$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off038 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$052 = 0, $__ky1$039 = 0;
 var $__ky2$046 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$050 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$335 = 0, $__n_does_match$4 = 0, $__n_does_match$544 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$049 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$334 = 0, $__n_might_match$4 = 0, $__st$051 = 0, $__st$136 = 0, $__st$245 = 0;
 var $__st$332 = 0, $__statbuf = 0, $__status$0 = 0, $or$cond = 0, $tmp$i$i10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $162 = $5;$__status$0 = $5;
  }
 } else {
  $162 = 0;$__status$0 = $__statbuf;
 }
 $7 = ($__kb|0)==($__ke|0);
 if ($7) {
  $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
 } else {
  $__ky$052 = $__kb;$__n_does_match$050 = 0;$__n_might_match$049 = $3;$__st$051 = $__status$0;
  while(1) {
   $10 = HEAP8[$__ky$052>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = ((($__ky$052)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$__st$051>>0] = 2;
    $19 = (($__n_might_match$049) + -1)|0;
    $20 = (($__n_does_match$050) + 1)|0;
    $__n_does_match$1 = $20;$__n_might_match$1 = $19;
   } else {
    HEAP8[$__st$051>>0] = 1;
    $__n_does_match$1 = $__n_does_match$050;$__n_might_match$1 = $__n_might_match$049;
   }
   $21 = ((($__ky$052)) + 12|0);
   $22 = ((($__st$051)) + 1|0);
   $23 = ($21|0)==($__ke|0);
   if ($23) {
    $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__ky$052 = $21;$__n_does_match$050 = $__n_does_match$1;$__n_might_match$049 = $__n_might_match$1;$__st$051 = $22;
   }
  }
 }
 $8 = ($__kb|0)==($__ke|0);
 $9 = ($__kb|0)==($__ke|0);
 $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
 L17: while(1) {
  $24 = HEAP32[$__b>>2]|0;
  $25 = ($24|0)==(0|0);
  do {
   if ($25) {
    $36 = 0;
   } else {
    $26 = ((($24)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($24)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if ($30) {
     $31 = HEAP32[$24>>2]|0;
     $32 = ((($31)) + 36|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = (FUNCTION_TABLE_ii[$33 & 63]($24)|0);
     $35 = ($34|0)==(-1);
     if ($35) {
      HEAP32[$__b>>2] = 0;
      $36 = 0;
      break;
     } else {
      $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
      $36 = $$pre$i$i$i4;
      break;
     }
    } else {
     $36 = $24;
    }
   }
  } while(0);
  $37 = ($36|0)==(0|0);
  $38 = HEAP32[$__e>>2]|0;
  $39 = ($38|0)==(0|0);
  if ($39) {
   $$pre$i2$i$i = 0;
  } else {
   $40 = ((($38)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($38)) + 16|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ($41|0)==($43|0);
   if ($44) {
    $45 = HEAP32[$38>>2]|0;
    $46 = ((($45)) + 36|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = (FUNCTION_TABLE_ii[$47 & 63]($38)|0);
    $49 = ($48|0)==(-1);
    if ($49) {
     HEAP32[$__e>>2] = 0;
     $$pre$i2$i$i = 0;
    } else {
     $$pre$i2$i$i = $38;
    }
   } else {
    $$pre$i2$i$i = $38;
   }
  }
  $50 = ($$pre$i2$i$i|0)==(0|0);
  $tmp$i$i10 = $37 ^ $50;
  $51 = ($__n_might_match$2|0)!=(0);
  $52 = $51 & $tmp$i$i10;
  $53 = HEAP32[$__b>>2]|0;
  if (!($52)) {
   $$lcssa = $50;$$lcssa59 = $53;$$pre$i2$i$i$lcssa = $$pre$i2$i$i;
   break;
  }
  $54 = ((($53)) + 12|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ((($53)) + 16|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = ($55|0)==($57|0);
  if ($58) {
   $59 = HEAP32[$53>>2]|0;
   $60 = ((($59)) + 36|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = (FUNCTION_TABLE_ii[$61 & 63]($53)|0);
   $$0$i$i = $62;
  } else {
   $63 = HEAP8[$55>>0]|0;
   $64 = $63&255;
   $$0$i$i = $64;
  }
  $65 = $$0$i$i&255;
  if ($__case_sensitive) {
   $__c$0 = $65;
  } else {
   $66 = HEAP32[$__ct>>2]|0;
   $67 = ((($66)) + 12|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = (FUNCTION_TABLE_iii[$68 & 15]($__ct,$65)|0);
   $__c$0 = $69;
  }
  $70 = (($__indx$0) + 1)|0;
  if ($8) {
   $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
  } else {
   $__consume$0$off038 = 0;$__ky1$039 = $__kb;$__n_does_match$335 = $__n_does_match$2;$__n_might_match$334 = $__n_might_match$2;$__st$136 = $__status$0;
   while(1) {
    $71 = HEAP8[$__st$136>>0]|0;
    $72 = ($71<<24>>24)==(1);
    do {
     if ($72) {
      $73 = HEAP8[$__ky1$039>>0]|0;
      $74 = $73 & 1;
      $75 = ($74<<24>>24)==(0);
      if ($75) {
       $78 = ((($__ky1$039)) + 1|0);
       $80 = $78;
      } else {
       $76 = ((($__ky1$039)) + 8|0);
       $77 = HEAP32[$76>>2]|0;
       $80 = $77;
      }
      $79 = (($80) + ($__indx$0)|0);
      $81 = HEAP8[$79>>0]|0;
      if ($__case_sensitive) {
       $__kc$0 = $81;
      } else {
       $82 = HEAP32[$__ct>>2]|0;
       $83 = ((($82)) + 12|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = (FUNCTION_TABLE_iii[$84 & 15]($__ct,$81)|0);
       $__kc$0 = $85;
      }
      $86 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
      if (!($86)) {
       HEAP8[$__st$136>>0] = 0;
       $98 = (($__n_might_match$334) + -1)|0;
       $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $98;
       break;
      }
      $87 = HEAP8[$__ky1$039>>0]|0;
      $88 = $87 & 1;
      $89 = ($88<<24>>24)==(0);
      if ($89) {
       $92 = $87&255;
       $93 = $92 >>> 1;
       $94 = $93;
      } else {
       $90 = ((($__ky1$039)) + 4|0);
       $91 = HEAP32[$90>>2]|0;
       $94 = $91;
      }
      $95 = ($94|0)==($70|0);
      if ($95) {
       HEAP8[$__st$136>>0] = 2;
       $96 = (($__n_might_match$334) + -1)|0;
       $97 = (($__n_does_match$335) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $97;$__n_might_match$4 = $96;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
     }
    } while(0);
    $99 = ((($__ky1$039)) + 12|0);
    $100 = ((($__st$136)) + 1|0);
    $101 = ($99|0)==($__ke|0);
    if ($101) {
     $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
     break;
    } else {
     $__consume$0$off038 = $__consume$1$off0;$__ky1$039 = $99;$__n_does_match$335 = $__n_does_match$4;$__n_might_match$334 = $__n_might_match$4;$__st$136 = $100;
    }
   }
  }
  if (!($__consume$0$off0$lcssa)) {
   $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  }
  $102 = HEAP32[$__b>>2]|0;
  $103 = ((($102)) + 12|0);
  $104 = HEAP32[$103>>2]|0;
  $105 = ((($102)) + 16|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ($104|0)==($106|0);
  if ($107) {
   $108 = HEAP32[$102>>2]|0;
   $109 = ((($108)) + 40|0);
   $110 = HEAP32[$109>>2]|0;
   (FUNCTION_TABLE_ii[$110 & 63]($102)|0);
  } else {
   $111 = ((($104)) + 1|0);
   HEAP32[$103>>2] = $111;
  }
  $112 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
  $113 = ($112>>>0)<(2);
  $or$cond = $113 | $9;
  if ($or$cond) {
   $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  } else {
   $__ky2$046 = $__kb;$__n_does_match$544 = $__n_does_match$3$lcssa;$__st$245 = $__status$0;
  }
  while(1) {
   $114 = HEAP8[$__st$245>>0]|0;
   $115 = ($114<<24>>24)==(2);
   if ($115) {
    $116 = HEAP8[$__ky2$046>>0]|0;
    $117 = $116 & 1;
    $118 = ($117<<24>>24)==(0);
    if ($118) {
     $121 = $116&255;
     $122 = $121 >>> 1;
     $123 = $122;
    } else {
     $119 = ((($__ky2$046)) + 4|0);
     $120 = HEAP32[$119>>2]|0;
     $123 = $120;
    }
    $124 = ($123|0)==($70|0);
    if ($124) {
     $__n_does_match$6 = $__n_does_match$544;
    } else {
     HEAP8[$__st$245>>0] = 0;
     $125 = (($__n_does_match$544) + -1)|0;
     $__n_does_match$6 = $125;
    }
   } else {
    $__n_does_match$6 = $__n_does_match$544;
   }
   $126 = ((($__ky2$046)) + 12|0);
   $127 = ((($__st$245)) + 1|0);
   $128 = ($126|0)==($__ke|0);
   if ($128) {
    $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
    continue L17;
   } else {
    $__ky2$046 = $126;$__n_does_match$544 = $__n_does_match$6;$__st$245 = $127;
   }
  }
 }
 $129 = ($$lcssa59|0)==(0|0);
 do {
  if ($129) {
   $140 = 0;
  } else {
   $130 = ((($$lcssa59)) + 12|0);
   $131 = HEAP32[$130>>2]|0;
   $132 = ((($$lcssa59)) + 16|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = ($131|0)==($133|0);
   if ($134) {
    $135 = HEAP32[$$lcssa59>>2]|0;
    $136 = ((($135)) + 36|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = (FUNCTION_TABLE_ii[$137 & 63]($$lcssa59)|0);
    $139 = ($138|0)==(-1);
    if ($139) {
     HEAP32[$__b>>2] = 0;
     $140 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $140 = $$pre$i$i$i;
     break;
    }
   } else {
    $140 = $$lcssa59;
   }
  }
 } while(0);
 $141 = ($140|0)==(0|0);
 do {
  if ($$lcssa) {
   label = 65;
  } else {
   $142 = ((($$pre$i2$i$i$lcssa)) + 12|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ((($$pre$i2$i$i$lcssa)) + 16|0);
   $145 = HEAP32[$144>>2]|0;
   $146 = ($143|0)==($145|0);
   if ($146) {
    $147 = HEAP32[$$pre$i2$i$i$lcssa>>2]|0;
    $148 = ((($147)) + 36|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (FUNCTION_TABLE_ii[$149 & 63]($$pre$i2$i$i$lcssa)|0);
    $151 = ($150|0)==(-1);
    if ($151) {
     HEAP32[$__e>>2] = 0;
     label = 65;
     break;
    }
   }
   if (!($141)) {
    label = 66;
   }
  }
 } while(0);
 if ((label|0) == 65) {
  if ($141) {
   label = 66;
  }
 }
 if ((label|0) == 66) {
  $152 = HEAP32[$__err>>2]|0;
  $153 = $152 | 2;
  HEAP32[$__err>>2] = $153;
 }
 $154 = ($__kb|0)==($__ke|0);
 L95: do {
  if ($154) {
   label = 70;
  } else {
   $$033 = $__kb;$__st$332 = $__status$0;
   while(1) {
    $155 = HEAP8[$__st$332>>0]|0;
    $156 = ($155<<24>>24)==(2);
    if ($156) {
     $$021 = $$033;
     break L95;
    }
    $157 = ((($$033)) + 12|0);
    $158 = ((($__st$332)) + 1|0);
    $159 = ($157|0)==($__ke|0);
    if ($159) {
     label = 70;
     break;
    } else {
     $$033 = $157;$__st$332 = $158;
    }
   }
  }
 } while(0);
 if ((label|0) == 70) {
  $160 = HEAP32[$__err>>2]|0;
  $161 = $160 | 4;
  HEAP32[$__err>>2] = $161;
  $$021 = $__ke;
 }
 _free($162);
 STACKTOP = sp;return ($$021|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $108 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $108 = $100;
  } else {
   $108 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 $103 = tempRet0;
 $104 = $__v;
 $105 = $104;
 HEAP32[$105>>2] = $102;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$108,$__err);
 $109 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($109) {
  $120 = 0;
 } else {
  $110 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $116 = ((($115)) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 63]($$pre$i$i$i$lcssa)|0);
   $119 = ($118|0)==(-1);
   if ($119) {
    HEAP32[$__b>>2] = 0;
    $120 = 0;
   } else {
    $120 = $$pre$i$i$i$lcssa;
   }
  } else {
   $120 = $$pre$i$i$i$lcssa;
  }
 }
 $121 = ($120|0)==(0|0);
 $122 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($122) {
   label = 38;
  } else {
   $123 = ((($$pre$i2$i$i)) + 12|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ((($$pre$i2$i$i)) + 16|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($124|0)==($126|0);
   if ($127) {
    $128 = HEAP32[$$pre$i2$i$i>>2]|0;
    $129 = ((($128)) + 36|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = (FUNCTION_TABLE_ii[$130 & 63]($$pre$i2$i$i)|0);
    $132 = ($131|0)==(-1);
    if ($132) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($121)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($121) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 $135 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($135|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP16[$__v>>1] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $108 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $108 = $100;
  } else {
   $108 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 $103 = tempRet0;
 $104 = $__v;
 $105 = $104;
 HEAP32[$105>>2] = $102;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$108,$__err);
 $109 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($109) {
  $120 = 0;
 } else {
  $110 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $116 = ((($115)) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 63]($$pre$i$i$i$lcssa)|0);
   $119 = ($118|0)==(-1);
   if ($119) {
    HEAP32[$__b>>2] = 0;
    $120 = 0;
   } else {
    $120 = $$pre$i$i$i$lcssa;
   }
  } else {
   $120 = $$pre$i$i$i$lcssa;
  }
 }
 $121 = ($120|0)==(0|0);
 $122 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($122) {
   label = 38;
  } else {
   $123 = ((($$pre$i2$i$i)) + 12|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ((($$pre$i2$i$i)) + 16|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($124|0)==($126|0);
   if ($127) {
    $128 = HEAP32[$$pre$i2$i$i>>2]|0;
    $129 = ((($128)) + 36|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = (FUNCTION_TABLE_ii[$130 & 63]($$pre$i2$i$i)|0);
    $132 = ($131|0)==(-1);
    if ($132) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($121)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($121) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 $135 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($135|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF32[$__v>>2] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF64[$__v>>3] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF64[$__v>>3] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsscanf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$025 = 0, $$033 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$i3$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off038 = 0, $__consume$1$off0 = 0;
 var $__indx$0 = 0, $__kc$0 = 0, $__ky$052 = 0, $__ky1$039 = 0, $__ky2$046 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$050 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$335 = 0, $__n_does_match$4 = 0, $__n_does_match$544 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$049 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$334 = 0;
 var $__n_might_match$4 = 0, $__st$051 = 0, $__st$136 = 0, $__st$245 = 0, $__st$332 = 0, $__statbuf = 0, $__status$0 = 0, $or$cond = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i6 = 0, $tmp$i$i14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $162 = $5;$__status$0 = $5;
  }
 } else {
  $162 = 0;$__status$0 = $__statbuf;
 }
 $7 = ($__kb|0)==($__ke|0);
 if ($7) {
  $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
 } else {
  $__ky$052 = $__kb;$__n_does_match$050 = 0;$__n_might_match$049 = $3;$__st$051 = $__status$0;
  while(1) {
   $10 = HEAP8[$__ky$052>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = ((($__ky$052)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$__st$051>>0] = 2;
    $19 = (($__n_might_match$049) + -1)|0;
    $20 = (($__n_does_match$050) + 1)|0;
    $__n_does_match$1 = $20;$__n_might_match$1 = $19;
   } else {
    HEAP8[$__st$051>>0] = 1;
    $__n_does_match$1 = $__n_does_match$050;$__n_might_match$1 = $__n_might_match$049;
   }
   $21 = ((($__ky$052)) + 12|0);
   $22 = ((($__st$051)) + 1|0);
   $23 = ($21|0)==($__ke|0);
   if ($23) {
    $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__ky$052 = $21;$__n_does_match$050 = $__n_does_match$1;$__n_might_match$049 = $__n_might_match$1;$__st$051 = $22;
   }
  }
 }
 $8 = ($__kb|0)==($__ke|0);
 $9 = ($__kb|0)==($__ke|0);
 $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
 L17: while(1) {
  $24 = HEAP32[$__b>>2]|0;
  $25 = ($24|0)==(0|0);
  do {
   if ($25) {
    $51 = 1;
   } else {
    $26 = ((($24)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($24)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if ($30) {
     $31 = HEAP32[$24>>2]|0;
     $32 = ((($31)) + 36|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = (FUNCTION_TABLE_ii[$33 & 63]($24)|0);
     $$0$i$i$i$i3 = $34;
    } else {
     $35 = HEAP32[$27>>2]|0;
     $$0$i$i$i$i3 = $35;
    }
    $36 = ($$0$i$i$i$i3|0)==(-1);
    if ($36) {
     HEAP32[$__b>>2] = 0;
     $51 = 1;
     break;
    } else {
     $$pre$i$i$i5 = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i6 = ($$pre$i$i$i5|0)==(0|0);
     $51 = $phitmp$i$i$i6;
     break;
    }
   }
  } while(0);
  $37 = HEAP32[$__e>>2]|0;
  $38 = ($37|0)==(0|0);
  if ($38) {
   $$pre$i3$i$i = 0;$50 = 1;
  } else {
   $39 = ((($37)) + 12|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($37)) + 16|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($40|0)==($42|0);
   if ($43) {
    $44 = HEAP32[$37>>2]|0;
    $45 = ((($44)) + 36|0);
    $46 = HEAP32[$45>>2]|0;
    $47 = (FUNCTION_TABLE_ii[$46 & 63]($37)|0);
    $$0$i$i1$i$i9 = $47;
   } else {
    $48 = HEAP32[$40>>2]|0;
    $$0$i$i1$i$i9 = $48;
   }
   $49 = ($$0$i$i1$i$i9|0)==(-1);
   if ($49) {
    HEAP32[$__e>>2] = 0;
    $$pre$i3$i$i = 0;$50 = 1;
   } else {
    $$pre$i3$i$i = $37;$50 = 0;
   }
  }
  $tmp$i$i14 = $51 ^ $50;
  $52 = ($__n_might_match$2|0)!=(0);
  $53 = $52 & $tmp$i$i14;
  $54 = HEAP32[$__b>>2]|0;
  if (!($53)) {
   $$lcssa = $54;$$pre$i3$i$i$lcssa = $$pre$i3$i$i;
   break;
  }
  $55 = ((($54)) + 12|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($54)) + 16|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ($56|0)==($58|0);
  if ($59) {
   $60 = HEAP32[$54>>2]|0;
   $61 = ((($60)) + 36|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (FUNCTION_TABLE_ii[$62 & 63]($54)|0);
   $$0$i$i = $63;
  } else {
   $64 = HEAP32[$56>>2]|0;
   $$0$i$i = $64;
  }
  if ($__case_sensitive) {
   $__c$0 = $$0$i$i;
  } else {
   $65 = HEAP32[$__ct>>2]|0;
   $66 = ((($65)) + 28|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = (FUNCTION_TABLE_iii[$67 & 15]($__ct,$$0$i$i)|0);
   $__c$0 = $68;
  }
  $69 = (($__indx$0) + 1)|0;
  if ($8) {
   $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
  } else {
   $__consume$0$off038 = 0;$__ky1$039 = $__kb;$__n_does_match$335 = $__n_does_match$2;$__n_might_match$334 = $__n_might_match$2;$__st$136 = $__status$0;
   while(1) {
    $70 = HEAP8[$__st$136>>0]|0;
    $71 = ($70<<24>>24)==(1);
    do {
     if ($71) {
      $72 = HEAP8[$__ky1$039>>0]|0;
      $73 = $72 & 1;
      $74 = ($73<<24>>24)==(0);
      if ($74) {
       $77 = ((($__ky1$039)) + 4|0);
       $79 = $77;
      } else {
       $75 = ((($__ky1$039)) + 8|0);
       $76 = HEAP32[$75>>2]|0;
       $79 = $76;
      }
      $78 = (($79) + ($__indx$0<<2)|0);
      $80 = HEAP32[$78>>2]|0;
      if ($__case_sensitive) {
       $__kc$0 = $80;
      } else {
       $81 = HEAP32[$__ct>>2]|0;
       $82 = ((($81)) + 28|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = (FUNCTION_TABLE_iii[$83 & 15]($__ct,$80)|0);
       $__kc$0 = $84;
      }
      $85 = ($__c$0|0)==($__kc$0|0);
      if (!($85)) {
       HEAP8[$__st$136>>0] = 0;
       $97 = (($__n_might_match$334) + -1)|0;
       $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $97;
       break;
      }
      $86 = HEAP8[$__ky1$039>>0]|0;
      $87 = $86 & 1;
      $88 = ($87<<24>>24)==(0);
      if ($88) {
       $91 = $86&255;
       $92 = $91 >>> 1;
       $93 = $92;
      } else {
       $89 = ((($__ky1$039)) + 4|0);
       $90 = HEAP32[$89>>2]|0;
       $93 = $90;
      }
      $94 = ($93|0)==($69|0);
      if ($94) {
       HEAP8[$__st$136>>0] = 2;
       $95 = (($__n_might_match$334) + -1)|0;
       $96 = (($__n_does_match$335) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $96;$__n_might_match$4 = $95;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
     }
    } while(0);
    $98 = ((($__ky1$039)) + 12|0);
    $99 = ((($__st$136)) + 1|0);
    $100 = ($98|0)==($__ke|0);
    if ($100) {
     $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
     break;
    } else {
     $__consume$0$off038 = $__consume$1$off0;$__ky1$039 = $98;$__n_does_match$335 = $__n_does_match$4;$__n_might_match$334 = $__n_might_match$4;$__st$136 = $99;
    }
   }
  }
  if (!($__consume$0$off0$lcssa)) {
   $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  }
  $101 = HEAP32[$__b>>2]|0;
  $102 = ((($101)) + 12|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = ((($101)) + 16|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ($103|0)==($105|0);
  if ($106) {
   $107 = HEAP32[$101>>2]|0;
   $108 = ((($107)) + 40|0);
   $109 = HEAP32[$108>>2]|0;
   (FUNCTION_TABLE_ii[$109 & 63]($101)|0);
  } else {
   $110 = ((($103)) + 4|0);
   HEAP32[$102>>2] = $110;
  }
  $111 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
  $112 = ($111>>>0)<(2);
  $or$cond = $112 | $9;
  if ($or$cond) {
   $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  } else {
   $__ky2$046 = $__kb;$__n_does_match$544 = $__n_does_match$3$lcssa;$__st$245 = $__status$0;
  }
  while(1) {
   $113 = HEAP8[$__st$245>>0]|0;
   $114 = ($113<<24>>24)==(2);
   if ($114) {
    $115 = HEAP8[$__ky2$046>>0]|0;
    $116 = $115 & 1;
    $117 = ($116<<24>>24)==(0);
    if ($117) {
     $120 = $115&255;
     $121 = $120 >>> 1;
     $122 = $121;
    } else {
     $118 = ((($__ky2$046)) + 4|0);
     $119 = HEAP32[$118>>2]|0;
     $122 = $119;
    }
    $123 = ($122|0)==($69|0);
    if ($123) {
     $__n_does_match$6 = $__n_does_match$544;
    } else {
     HEAP8[$__st$245>>0] = 0;
     $124 = (($__n_does_match$544) + -1)|0;
     $__n_does_match$6 = $124;
    }
   } else {
    $__n_does_match$6 = $__n_does_match$544;
   }
   $125 = ((($__ky2$046)) + 12|0);
   $126 = ((($__st$245)) + 1|0);
   $127 = ($125|0)==($__ke|0);
   if ($127) {
    $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
    continue L17;
   } else {
    $__ky2$046 = $125;$__n_does_match$544 = $__n_does_match$6;$__st$245 = $126;
   }
  }
 }
 $128 = ($$lcssa|0)==(0|0);
 do {
  if ($128) {
   $163 = 1;
  } else {
   $129 = ((($$lcssa)) + 12|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ((($$lcssa)) + 16|0);
   $132 = HEAP32[$131>>2]|0;
   $133 = ($130|0)==($132|0);
   if ($133) {
    $134 = HEAP32[$$lcssa>>2]|0;
    $135 = ((($134)) + 36|0);
    $136 = HEAP32[$135>>2]|0;
    $137 = (FUNCTION_TABLE_ii[$136 & 63]($$lcssa)|0);
    $$0$i$i$i$i = $137;
   } else {
    $138 = HEAP32[$130>>2]|0;
    $$0$i$i$i$i = $138;
   }
   $139 = ($$0$i$i$i$i|0)==(-1);
   if ($139) {
    HEAP32[$__b>>2] = 0;
    $163 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $163 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $140 = ($$pre$i3$i$i$lcssa|0)==(0|0);
 do {
  if ($140) {
   label = 72;
  } else {
   $141 = ((($$pre$i3$i$i$lcssa)) + 12|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = ((($$pre$i3$i$i$lcssa)) + 16|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = ($142|0)==($144|0);
   if ($145) {
    $146 = HEAP32[$$pre$i3$i$i$lcssa>>2]|0;
    $147 = ((($146)) + 36|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = (FUNCTION_TABLE_ii[$148 & 63]($$pre$i3$i$i$lcssa)|0);
    $$0$i$i1$i$i = $149;
   } else {
    $150 = HEAP32[$142>>2]|0;
    $$0$i$i1$i$i = $150;
   }
   $151 = ($$0$i$i1$i$i|0)==(-1);
   if ($151) {
    HEAP32[$__e>>2] = 0;
    label = 72;
    break;
   } else {
    if ($163) {
     break;
    } else {
     label = 74;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 72) {
  if ($163) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $152 = HEAP32[$__err>>2]|0;
  $153 = $152 | 2;
  HEAP32[$__err>>2] = $153;
 }
 $154 = ($__kb|0)==($__ke|0);
 L107: do {
  if ($154) {
   label = 78;
  } else {
   $$033 = $__kb;$__st$332 = $__status$0;
   while(1) {
    $155 = HEAP8[$__st$332>>0]|0;
    $156 = ($155<<24>>24)==(2);
    if ($156) {
     $$025 = $$033;
     break L107;
    }
    $157 = ((($$033)) + 12|0);
    $158 = ((($__st$332)) + 1|0);
    $159 = ($157|0)==($__ke|0);
    if ($159) {
     label = 78;
     break;
    } else {
     $$033 = $157;$__st$332 = $158;
    }
   }
  }
 } while(0);
 if ((label|0) == 78) {
  $160 = HEAP32[$__err>>2]|0;
  $161 = $160 | 4;
  HEAP32[$__err>>2] = $161;
  $$025 = $__ke;
 }
 _free($162);
 STACKTOP = sp;return ($$025|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0;
 var $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$135 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$135 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$135 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($135) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($135) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $107 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $107 = $99;
  } else {
   $107 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 $102 = tempRet0;
 $103 = $__v;
 $104 = $103;
 HEAP32[$104>>2] = $101;
 $105 = (($103) + 4)|0;
 $106 = $105;
 HEAP32[$106>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$107,$__err);
 $108 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($108) {
  $137 = 1;
 } else {
  $109 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = ($110|0)==($112|0);
  if ($113) {
   $114 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $115 = ((($114)) + 36|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $117;
  } else {
   $118 = HEAP32[$110>>2]|0;
   $$0$i$i$i$i = $118;
  }
  $119 = ($$0$i$i$i$i|0)==(-1);
  if ($119) {
   HEAP32[$__b>>2] = 0;
   $137 = 1;
  } else {
   $137 = 0;
  }
 }
 $120 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($120) {
   label = 44;
  } else {
   $121 = ((($$pre$i3$i$i)) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ((($$pre$i3$i$i)) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122|0)==($124|0);
   if ($125) {
    $126 = HEAP32[$$pre$i3$i$i>>2]|0;
    $127 = ((($126)) + 36|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = (FUNCTION_TABLE_ii[$128 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $129;
   } else {
    $130 = HEAP32[$122>>2]|0;
    $$0$i$i1$i$i = $130;
   }
   $131 = ($$0$i$i1$i$i|0)==(-1);
   if ($131) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($137) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($137) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $132 = HEAP32[$__err>>2]|0;
  $133 = $132 | 2;
  HEAP32[$__err>>2] = $133;
 }
 $134 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($134|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP16[$__v>>1] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0;
 var $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$135 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$135 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$135 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($135) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($135) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $107 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $107 = $99;
  } else {
   $107 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 $102 = tempRet0;
 $103 = $__v;
 $104 = $103;
 HEAP32[$104>>2] = $101;
 $105 = (($103) + 4)|0;
 $106 = $105;
 HEAP32[$106>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$107,$__err);
 $108 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($108) {
  $137 = 1;
 } else {
  $109 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = ($110|0)==($112|0);
  if ($113) {
   $114 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $115 = ((($114)) + 36|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $117;
  } else {
   $118 = HEAP32[$110>>2]|0;
   $$0$i$i$i$i = $118;
  }
  $119 = ($$0$i$i$i$i|0)==(-1);
  if ($119) {
   HEAP32[$__b>>2] = 0;
   $137 = 1;
  } else {
   $137 = 0;
  }
 }
 $120 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($120) {
   label = 44;
  } else {
   $121 = ((($$pre$i3$i$i)) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ((($$pre$i3$i$i)) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122|0)==($124|0);
   if ($125) {
    $126 = HEAP32[$$pre$i3$i$i>>2]|0;
    $127 = ((($126)) + 36|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = (FUNCTION_TABLE_ii[$128 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $129;
   } else {
    $130 = HEAP32[$122>>2]|0;
    $$0$i$i1$i$i = $130;
   }
   $131 = ($$0$i$i1$i$i|0)==(-1);
   if ($131) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($137) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($137) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $132 = HEAP32[$__err>>2]|0;
  $133 = $132 | 2;
  HEAP32[$__err>>2] = $133;
 }
 $134 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($134|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF32[$__v>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF64[$__v>>3] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF64[$__v>>3] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vasprintf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$sroa$0$1 = 0;
  } else {
   $2 = $__oe;
   $3 = $__ob;
   $4 = (($2) - ($3))|0;
   $5 = $4 >> 2;
   $6 = ((($__iob)) + 12|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)>($5|0);
   $9 = (($7) - ($5))|0;
   $__ns$0 = $8 ? $9 : 0;
   $10 = $__op;
   $11 = (($10) - ($3))|0;
   $12 = $11 >> 2;
   $13 = ($11|0)>(0);
   if ($13) {
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 31]($0,$__ob,$12)|0);
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   $19 = ($__ns$0|0)>(0);
   do {
    if ($19) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
     $20 = HEAP8[$__sp>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     $23 = ((($__sp)) + 8|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($__sp)) + 4|0);
     $26 = $22 ? $25 : $24;
     $27 = HEAP32[$0>>2]|0;
     $28 = ((($27)) + 48|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = (FUNCTION_TABLE_iiii[$29 & 31]($0,$26,$__ns$0)|0);
     $31 = ($30|0)==($__ns$0|0);
     if ($31) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break;
     } else {
      HEAP32[$__s>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      $$sroa$0$1 = 0;
      break L1;
     }
    }
   } while(0);
   $32 = (($2) - ($10))|0;
   $33 = $32 >> 2;
   $34 = ($32|0)>(0);
   if ($34) {
    $35 = HEAP32[$0>>2]|0;
    $36 = ((($35)) + 48|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (FUNCTION_TABLE_iiii[$37 & 31]($0,$__op,$33)|0);
    $39 = ($38|0)==($33|0);
    if (!($39)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   HEAP32[$6>>2] = 0;
   $$sroa$0$1 = $0;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$1|0);
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $isascii1$i = 0, $isascii1$i12 = 0, $sext = 0, $sext24 = 0, $tmp$i$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 63]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $157 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $157 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $isascii1$i = ($40<<24>>24)>(-1);
   if ($isascii1$i) {
    $sext = $$0$i$i << 24;
    $41 = $sext >> 24;
    $42 = ((($__ct)) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (($43) + ($41<<1)|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 & 2048;
    $47 = ($46<<16>>16)==(0);
    if (!($47)) {
     $50 = HEAP32[$__ct>>2]|0;
     $51 = ((($50)) + 36|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (FUNCTION_TABLE_iiii[$52 & 31]($__ct,$40,0)|0);
     $54 = $53 << 24 >> 24;
     $55 = HEAP32[$__b>>2]|0;
     $56 = ((($55)) + 12|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ((($55)) + 16|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($57|0)==($59|0);
     if ($60) {
      $61 = HEAP32[$55>>2]|0;
      $62 = ((($61)) + 40|0);
      $63 = HEAP32[$62>>2]|0;
      (FUNCTION_TABLE_ii[$63 & 63]($55)|0);
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     } else {
      $64 = ((($57)) + 1|0);
      HEAP32[$56>>2] = $64;
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     }
     while(1) {
      $__r$0 = (($__r$0$in) + -48)|0;
      $$0 = (($$0$in) + -1)|0;
      $65 = HEAP32[$__b>>2]|0;
      $66 = ($65|0)==(0|0);
      do {
       if ($66) {
        $77 = 0;
       } else {
        $67 = ((($65)) + 12|0);
        $68 = HEAP32[$67>>2]|0;
        $69 = ((($65)) + 16|0);
        $70 = HEAP32[$69>>2]|0;
        $71 = ($68|0)==($70|0);
        if ($71) {
         $72 = HEAP32[$65>>2]|0;
         $73 = ((($72)) + 36|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (FUNCTION_TABLE_ii[$74 & 63]($65)|0);
         $76 = ($75|0)==(-1);
         if ($76) {
          HEAP32[$__b>>2] = 0;
          $77 = 0;
          break;
         } else {
          $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
          $77 = $$pre$i$i$i3;
          break;
         }
        } else {
         $77 = $65;
        }
       }
      } while(0);
      $78 = ($77|0)==(0|0);
      $80 = ($79|0)==(0|0);
      if ($80) {
       $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = 0;
      } else {
       $81 = ((($79)) + 12|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ((($79)) + 16|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($82|0)==($84|0);
       if ($85) {
        $86 = HEAP32[$79>>2]|0;
        $87 = ((($86)) + 36|0);
        $88 = HEAP32[$87>>2]|0;
        $89 = (FUNCTION_TABLE_ii[$88 & 63]($79)|0);
        $90 = ($89|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i20 = 0;$91 = 0;
        } else {
         $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $$pre$i2$i$i7;
        }
       } else {
        $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $79;
       }
      }
      $92 = ($91|0)==(0|0);
      $tmp$i$i9 = $78 ^ $92;
      $93 = ($$0$in|0)>(1);
      $94 = $93 & $tmp$i$i9;
      $95 = HEAP32[$__b>>2]|0;
      if (!($94)) {
       $$lcssa = $95;$$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;$__r$0$lcssa = $__r$0;
       break;
      }
      $96 = ((($95)) + 12|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = ((($95)) + 16|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = ($97|0)==($99|0);
      if ($100) {
       $101 = HEAP32[$95>>2]|0;
       $102 = ((($101)) + 36|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = (FUNCTION_TABLE_ii[$103 & 63]($95)|0);
       $$0$i$i10 = $104;
      } else {
       $105 = HEAP8[$97>>0]|0;
       $106 = $105&255;
       $$0$i$i10 = $106;
      }
      $107 = $$0$i$i10&255;
      $isascii1$i12 = ($107<<24>>24)>(-1);
      if (!($isascii1$i12)) {
       $$01 = $__r$0;
       break L16;
      }
      $sext24 = $$0$i$i10 << 24;
      $108 = $sext24 >> 24;
      $109 = HEAP32[$42>>2]|0;
      $110 = (($109) + ($108<<1)|0);
      $111 = HEAP16[$110>>1]|0;
      $112 = $111 & 2048;
      $113 = ($112<<16>>16)==(0);
      if ($113) {
       $$01 = $__r$0;
       break L16;
      }
      $114 = ($__r$0*10)|0;
      $115 = HEAP32[$__ct>>2]|0;
      $116 = ((($115)) + 36|0);
      $117 = HEAP32[$116>>2]|0;
      $118 = (FUNCTION_TABLE_iiii[$117 & 31]($__ct,$107,0)|0);
      $119 = $118 << 24 >> 24;
      $120 = (($119) + ($114))|0;
      $121 = HEAP32[$__b>>2]|0;
      $122 = ((($121)) + 12|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = ((($121)) + 16|0);
      $125 = HEAP32[$124>>2]|0;
      $126 = ($123|0)==($125|0);
      if ($126) {
       $127 = HEAP32[$121>>2]|0;
       $128 = ((($127)) + 40|0);
       $129 = HEAP32[$128>>2]|0;
       (FUNCTION_TABLE_ii[$129 & 63]($121)|0);
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      } else {
       $130 = ((($123)) + 1|0);
       HEAP32[$122>>2] = $130;
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      }
     }
     $131 = ($$lcssa|0)==(0|0);
     do {
      if ($131) {
       $142 = 0;
      } else {
       $132 = ((($$lcssa)) + 12|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ((($$lcssa)) + 16|0);
       $135 = HEAP32[$134>>2]|0;
       $136 = ($133|0)==($135|0);
       if ($136) {
        $137 = HEAP32[$$lcssa>>2]|0;
        $138 = ((($137)) + 36|0);
        $139 = HEAP32[$138>>2]|0;
        $140 = (FUNCTION_TABLE_ii[$139 & 63]($$lcssa)|0);
        $141 = ($140|0)==(-1);
        if ($141) {
         HEAP32[$__b>>2] = 0;
         $142 = 0;
         break;
        } else {
         $$pre$i$i$i16 = HEAP32[$__b>>2]|0;
         $142 = $$pre$i$i$i16;
         break;
        }
       } else {
        $142 = $$lcssa;
       }
      }
     } while(0);
     $143 = ($142|0)==(0|0);
     $144 = ($$pre$i2$i$i20$lcssa|0)==(0|0);
     do {
      if ($144) {
       label = 50;
      } else {
       $145 = ((($$pre$i2$i$i20$lcssa)) + 12|0);
       $146 = HEAP32[$145>>2]|0;
       $147 = ((($$pre$i2$i$i20$lcssa)) + 16|0);
       $148 = HEAP32[$147>>2]|0;
       $149 = ($146|0)==($148|0);
       if ($149) {
        $150 = HEAP32[$$pre$i2$i$i20$lcssa>>2]|0;
        $151 = ((($150)) + 36|0);
        $152 = HEAP32[$151>>2]|0;
        $153 = (FUNCTION_TABLE_ii[$152 & 63]($$pre$i2$i$i20$lcssa)|0);
        $154 = ($153|0)==(-1);
        if ($154) {
         HEAP32[$__e>>2] = 0;
         label = 50;
         break;
        }
       }
       if ($143) {
        $$01 = $__r$0$lcssa;
        break L16;
       }
      }
     } while(0);
     if ((label|0) == 50) {
      if (!($143)) {
       $$01 = $__r$0$lcssa;
       break;
      }
     }
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $48 = HEAP32[$__err>>2]|0;
   $49 = $48 | 4;
   HEAP32[$__err>>2] = $49;
   $$01 = 0;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i19 = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i20 = 0, $phitmp$i$i$i5 = 0, $phitmp$i4$i$i11 = 0, $tmp$i$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $148 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $148 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $148 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($148) {
     $149 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($148) {
   label = 16;
  } else {
   $149 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 31]($__ct,2048,$$0$i$i)|0);
   if (!($42)) {
    $43 = HEAP32[$__err>>2]|0;
    $44 = $43 | 4;
    HEAP32[$__err>>2] = $44;
    $$01 = 0;
    break;
   }
   $45 = HEAP32[$__ct>>2]|0;
   $46 = ((($45)) + 52|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_iiii[$47 & 31]($__ct,$$0$i$i,0)|0);
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$__b>>2]|0;
   $51 = ((($50)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($50)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = ((($56)) + 40|0);
    $58 = HEAP32[$57>>2]|0;
    (FUNCTION_TABLE_ii[$58 & 63]($50)|0);
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   } else {
    $59 = ((($52)) + 4|0);
    HEAP32[$51>>2] = $59;
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   }
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $60 = HEAP32[$__b>>2]|0;
    $61 = ($60|0)==(0|0);
    do {
     if ($61) {
      $87 = 1;
     } else {
      $62 = ((($60)) + 12|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ((($60)) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($63|0)==($65|0);
      if ($66) {
       $67 = HEAP32[$60>>2]|0;
       $68 = ((($67)) + 36|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = (FUNCTION_TABLE_ii[$69 & 63]($60)|0);
       $$0$i$i$i$i2 = $70;
      } else {
       $71 = HEAP32[$63>>2]|0;
       $$0$i$i$i$i2 = $71;
      }
      $72 = ($$0$i$i$i$i2|0)==(-1);
      if ($72) {
       HEAP32[$__b>>2] = 0;
       $87 = 1;
       break;
      } else {
       $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i5 = ($$pre$i$i$i4|0)==(0|0);
       $87 = $phitmp$i$i$i5;
       break;
      }
     }
    } while(0);
    $74 = ($73|0)==(0|0);
    do {
     if ($74) {
      $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = 0;$86 = 1;
     } else {
      $75 = ((($73)) + 12|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ((($73)) + 16|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($76|0)==($78|0);
      if ($79) {
       $80 = HEAP32[$73>>2]|0;
       $81 = ((($80)) + 36|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (FUNCTION_TABLE_ii[$82 & 63]($73)|0);
       $$0$i$i1$i$i8 = $83;
      } else {
       $84 = HEAP32[$76>>2]|0;
       $$0$i$i1$i$i8 = $84;
      }
      $85 = ($$0$i$i1$i$i8|0)==(-1);
      if ($85) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i25 = 0;$150 = 0;$86 = 1;
       break;
      } else {
       $phitmp$i4$i$i11 = ($$pre$i3$i$i10|0)==(0|0);
       $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = $$pre$i3$i$i10;$86 = $phitmp$i4$i$i11;
       break;
      }
     }
    } while(0);
    $tmp$i$i13 = $87 ^ $86;
    $88 = ($$0$in|0)>(1);
    $89 = $88 & $tmp$i$i13;
    $90 = HEAP32[$__b>>2]|0;
    if (!($89)) {
     $$lcssa = $90;$$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;$__r$0$lcssa = $__r$0;
     break;
    }
    $91 = ((($90)) + 12|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ((($90)) + 16|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = ($92|0)==($94|0);
    if ($95) {
     $96 = HEAP32[$90>>2]|0;
     $97 = ((($96)) + 36|0);
     $98 = HEAP32[$97>>2]|0;
     $99 = (FUNCTION_TABLE_ii[$98 & 63]($90)|0);
     $$0$i$i14 = $99;
    } else {
     $100 = HEAP32[$92>>2]|0;
     $$0$i$i14 = $100;
    }
    $101 = HEAP32[$__ct>>2]|0;
    $102 = ((($101)) + 12|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = (FUNCTION_TABLE_iiii[$103 & 31]($__ct,2048,$$0$i$i14)|0);
    if (!($104)) {
     $$01 = $__r$0;
     break L22;
    }
    $105 = ($__r$0*10)|0;
    $106 = HEAP32[$__ct>>2]|0;
    $107 = ((($106)) + 52|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = (FUNCTION_TABLE_iiii[$108 & 31]($__ct,$$0$i$i14,0)|0);
    $110 = $109 << 24 >> 24;
    $111 = (($110) + ($105))|0;
    $112 = HEAP32[$__b>>2]|0;
    $113 = ((($112)) + 12|0);
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($112)) + 16|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ($114|0)==($116|0);
    if ($117) {
     $118 = HEAP32[$112>>2]|0;
     $119 = ((($118)) + 40|0);
     $120 = HEAP32[$119>>2]|0;
     (FUNCTION_TABLE_ii[$120 & 63]($112)|0);
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    } else {
     $121 = ((($114)) + 4|0);
     HEAP32[$113>>2] = $121;
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    }
   }
   $122 = ($$lcssa|0)==(0|0);
   do {
    if ($122) {
     $151 = 1;
    } else {
     $123 = ((($$lcssa)) + 12|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($$lcssa)) + 16|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ($124|0)==($126|0);
     if ($127) {
      $128 = HEAP32[$$lcssa>>2]|0;
      $129 = ((($128)) + 36|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = (FUNCTION_TABLE_ii[$130 & 63]($$lcssa)|0);
      $$0$i$i$i$i17 = $131;
     } else {
      $132 = HEAP32[$124>>2]|0;
      $$0$i$i$i$i17 = $132;
     }
     $133 = ($$0$i$i$i$i17|0)==(-1);
     if ($133) {
      HEAP32[$__b>>2] = 0;
      $151 = 1;
      break;
     } else {
      $$pre$i$i$i19 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i20 = ($$pre$i$i$i19|0)==(0|0);
      $151 = $phitmp$i$i$i20;
      break;
     }
    }
   } while(0);
   $134 = ($$pre$i3$i$i25$lcssa|0)==(0|0);
   do {
    if ($134) {
     label = 60;
    } else {
     $135 = ((($$pre$i3$i$i25$lcssa)) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ((($$pre$i3$i$i25$lcssa)) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$pre$i3$i$i25$lcssa>>2]|0;
      $141 = ((($140)) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = (FUNCTION_TABLE_ii[$142 & 63]($$pre$i3$i$i25$lcssa)|0);
      $$0$i$i1$i$i23 = $143;
     } else {
      $144 = HEAP32[$136>>2]|0;
      $$0$i$i1$i$i23 = $144;
     }
     $145 = ($$0$i$i1$i$i23|0)==(-1);
     if ($145) {
      HEAP32[$__e>>2] = 0;
      label = 60;
      break;
     } else {
      if ($151) {
       $$01 = $__r$0$lcssa;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 60) {
    if (!($151)) {
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $146 = HEAP32[$__err>>2]|0;
   $147 = $146 | 2;
   HEAP32[$__err>>2] = $147;
   $$01 = $__r$0$lcssa;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $2 ? $4 : 0;
 $14 = (_realloc($13,$$)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $16 = $14;
  HEAP32[$__b>>2] = $16;
  $21 = $14;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $17 = $14;
  HEAP32[$__b>>2] = $17;
  $18 = ($$pr|0)==(0|0);
  if ($18) {
   $21 = $14;
  } else {
   $19 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$19 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $21 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $20 = (($21) + ($12)|0);
 HEAP32[$__n>>2] = $20;
 $22 = HEAP32[$__b>>2]|0;
 $23 = (($22) + ($$)|0);
 HEAP32[$__e>>2] = $23;
 return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $17 = $15;
  HEAP32[$__b>>2] = $17;
  $23 = $15;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $18 = $15;
  HEAP32[$__b>>2] = $18;
  $19 = ($$pr|0)==(0|0);
  if ($19) {
   $23 = $15;
  } else {
   $20 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$20 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $23 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $21 = $$ >>> 2;
 $22 = (($23) + ($13<<2)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($21<<2)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = $5;$16 = 10;$41 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $7;$16 = $phitmp$i;$41 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($16) - ($15))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($15) + ($12))|0;
    $19 = (($18) - ($16))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $41;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = ((($this)) + 1|0);
    $29 = $25;
   } else {
    $23 = ((($this)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $29 = $24;
   }
   $26 = (($15) - ($0))|0;
   $scevgep = (($__last) + ($26)|0);
   $scevgep1 = $scevgep;
   $27 = ($__first|0)==($__last|0);
   if (!($27)) {
    $28 = (($29) + ($15)|0);
    $$03 = $__first;$__p$04 = $28;
    while(1) {
     $30 = HEAP8[$$03>>0]|0;
     HEAP8[$__p$04>>0] = $30;
     $31 = ((($__p$04)) + 1|0);
     $32 = ((($$03)) + 1|0);
     $33 = ($32|0)==($__last|0);
     if ($33) {
      break;
     } else {
      $$03 = $32;$__p$04 = $31;
     }
    }
   }
   $scevgep2 = (($29) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $34 = (($15) + ($12))|0;
   $35 = HEAP8[$this>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $39 = $34 << 1;
    $40 = $39&255;
    HEAP8[$this>>0] = $40;
    break;
   } else {
    $38 = ((($this)) + 4|0);
    HEAP32[$38>>2] = $34;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $17 = $15;
  HEAP32[$__b>>2] = $17;
  $23 = $15;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $18 = $15;
  HEAP32[$__b>>2] = $18;
  $19 = ($$pr|0)==(0|0);
  if ($19) {
   $23 = $15;
  } else {
   $20 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$20 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $23 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $21 = $$ >>> 2;
 $22 = (($23) + ($13<<2)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($21<<2)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $16 = $5;$17 = 1;$45 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $16 = $7;$17 = $phitmp$i;$45 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = $12 >> 2;
 $14 = ($13|0)==(0);
 do {
  if (!($14)) {
   $15 = (($17) - ($16))|0;
   $18 = ($15>>>0)<($13>>>0);
   if ($18) {
    $19 = (($16) + ($13))|0;
    $20 = (($19) - ($17))|0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$17,$20,$16,$16,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $22 = $$pre;
   } else {
    $22 = $45;
   }
   $21 = $22 & 1;
   $23 = ($21<<24>>24)==(0);
   if ($23) {
    $26 = ((($this)) + 4|0);
    $33 = $26;
   } else {
    $24 = ((($this)) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $33 = $25;
   }
   $27 = $__last;
   $28 = (($27) - ($0))|0;
   $29 = $28 >>> 2;
   $30 = (($16) + ($29))|0;
   $31 = ($__first|0)==($__last|0);
   if (!($31)) {
    $32 = (($33) + ($16<<2)|0);
    $$03 = $__first;$__p$04 = $32;
    while(1) {
     $34 = HEAP32[$$03>>2]|0;
     HEAP32[$__p$04>>2] = $34;
     $35 = ((($__p$04)) + 4|0);
     $36 = ((($$03)) + 4|0);
     $37 = ($36|0)==($__last|0);
     if ($37) {
      break;
     } else {
      $$03 = $36;$__p$04 = $35;
     }
    }
   }
   $scevgep = (($33) + ($30<<2)|0);
   HEAP32[$scevgep>>2] = 0;
   $38 = (($16) + ($13))|0;
   $39 = HEAP8[$this>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $43 = $38 << 1;
    $44 = $43&255;
    HEAP8[$this>>0] = $44;
    break;
   } else {
    $42 = ((($this)) + 4|0);
    HEAP32[$42>>2] = $38;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 if (!($3)) {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5016)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5056)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6168)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6160)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6232)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6240)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6296)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6304)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6312)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6320)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5128)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5240)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5304)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5368)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5688)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5752)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5816)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5880)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5920)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5960)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6000)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6040)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5464)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5560)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5592)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5624)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6080)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6120)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$8);
 } else {
  $9 = ($6>>>0)>($__sz>>>0);
  if ($9) {
   $10 = (($2) + ($__sz<<2)|0);
   $11 = ($1|0)==($10|0);
   if (!($11)) {
    $13 = $1;
    while(1) {
     $12 = ((($13)) + -4|0);
     $14 = ($12|0)==($10|0);
     if ($14) {
      $$lcssa = $12;
      break;
     } else {
      $13 = $12;
     }
    }
    HEAP32[$0>>2] = $$lcssa;
   }
  }
 }
 return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if (!($1)) {
   $2 = ((($this)) + 4|0);
   $$pre$i$i = HEAP32[$2>>2]|0;
   $3 = ($$pre$i$i|0)==($0|0);
   if (!($3)) {
    $5 = $$pre$i$i;
    while(1) {
     $4 = ((($5)) + -4|0);
     $6 = ($4|0)==($0|0);
     if ($6) {
      $$lcssa = $4;
      break;
     } else {
      $5 = $4;
     }
    }
    HEAP32[$2>>2] = $$lcssa;
   }
   $7 = ((($this)) + 16|0);
   $8 = ($7|0)==($0|0);
   if ($8) {
    $9 = ((($this)) + 128|0);
    HEAP8[$9>>0] = 0;
    break;
   } else {
    __ZdlPv($0);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__vp)) + 4|0);
 $$field = HEAP32[$0>>2]|0;
 $$index1 = ((($0)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $1 = HEAP32[$__vp>>2]|0;
 $2 = $$field2 >> 1;
 $3 = (($1) + ($2)|0);
 $4 = $$field2 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $9 = $$field;
  $10 = $9;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (($6) + ($$field)|0);
  $8 = HEAP32[$7>>2]|0;
  $10 = $8;
 }
 FUNCTION_TABLE_vi[$10 & 127]($3);
 return;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $10 = $frm_end;
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $11 = ($$pre>>>0)<($frm_end>>>0);
   if ($11) {
    $13 = $$pre;
    while(1) {
     $12 = HEAP16[$13>>1]|0;
     $14 = $12&65535;
     $15 = ($14>>>0)>($Maxcode>>>0);
     if ($15) {
      $$0 = 2;
      break L4;
     }
     $16 = ($12&65535)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $12&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($12&65535)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $14 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $14 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($12&65535)<(55296);
       if ($37) {
        $38 = HEAP32[$to_nxt>>2]|0;
        $39 = $38;
        $40 = (($$pre1) - ($39))|0;
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $14 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $14 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $14 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       }
       $57 = ($12&65535)<(56320);
       if (!($57)) {
        $109 = ($12&65535)<(57344);
        if ($109) {
         $$0 = 2;
         break L4;
        }
        $110 = HEAP32[$to_nxt>>2]|0;
        $111 = $110;
        $112 = (($$pre1) - ($111))|0;
        $113 = ($112|0)<(3);
        if ($113) {
         $$0 = 1;
         break L4;
        }
        $114 = $14 >>> 12;
        $115 = $114 | 224;
        $116 = $115&255;
        $117 = ((($110)) + 1|0);
        HEAP32[$to_nxt>>2] = $117;
        HEAP8[$110>>0] = $116;
        $118 = $14 >>> 6;
        $119 = $118 & 63;
        $120 = $119 | 128;
        $121 = $120&255;
        $122 = HEAP32[$to_nxt>>2]|0;
        $123 = ((($122)) + 1|0);
        HEAP32[$to_nxt>>2] = $123;
        HEAP8[$122>>0] = $121;
        $124 = $14 & 63;
        $125 = $124 | 128;
        $126 = $125&255;
        $127 = HEAP32[$to_nxt>>2]|0;
        $128 = ((($127)) + 1|0);
        HEAP32[$to_nxt>>2] = $128;
        HEAP8[$127>>0] = $126;
        break;
       }
       $58 = $13;
       $59 = (($10) - ($58))|0;
       $60 = ($59|0)<(4);
       if ($60) {
        $$0 = 1;
        break L4;
       }
       $61 = ((($13)) + 2|0);
       $62 = HEAP16[$61>>1]|0;
       $63 = $62&65535;
       $64 = $63 & 64512;
       $65 = ($64|0)==(56320);
       if (!($65)) {
        $$0 = 2;
        break L4;
       }
       $66 = HEAP32[$to_nxt>>2]|0;
       $67 = $66;
       $68 = (($$pre1) - ($67))|0;
       $69 = ($68|0)<(4);
       if ($69) {
        $$0 = 1;
        break L4;
       }
       $70 = $14 & 960;
       $71 = $70 << 10;
       $72 = (($71) + 65536)|0;
       $73 = $14 << 10;
       $74 = $73 & 64512;
       $75 = $72 | $74;
       $76 = $63 & 1023;
       $77 = $75 | $76;
       $78 = ($77>>>0)>($Maxcode>>>0);
       if ($78) {
        $$0 = 2;
        break L4;
       }
       HEAP32[$frm_nxt>>2] = $61;
       $79 = $70 >>> 6;
       $80 = (($79) + 1)|0;
       $81 = $80 >>> 2;
       $82 = $81 | 240;
       $83 = $82&255;
       $84 = HEAP32[$to_nxt>>2]|0;
       $85 = ((($84)) + 1|0);
       HEAP32[$to_nxt>>2] = $85;
       HEAP8[$84>>0] = $83;
       $86 = $80 << 4;
       $87 = $86 & 48;
       $88 = $14 >>> 2;
       $89 = $88 & 15;
       $90 = $89 | $87;
       $91 = $90 | 128;
       $92 = $91&255;
       $93 = HEAP32[$to_nxt>>2]|0;
       $94 = ((($93)) + 1|0);
       HEAP32[$to_nxt>>2] = $94;
       HEAP8[$93>>0] = $92;
       $95 = $14 << 4;
       $96 = $95 & 48;
       $97 = $63 >>> 6;
       $98 = $97 & 15;
       $99 = $96 | $98;
       $100 = $99 | 128;
       $101 = $100&255;
       $102 = HEAP32[$to_nxt>>2]|0;
       $103 = ((($102)) + 1|0);
       HEAP32[$to_nxt>>2] = $103;
       HEAP8[$102>>0] = $101;
       $104 = $63 & 63;
       $105 = $104 | 128;
       $106 = $105&255;
       $107 = HEAP32[$to_nxt>>2]|0;
       $108 = ((($107)) + 1|0);
       HEAP32[$to_nxt>>2] = $108;
       HEAP8[$107>>0] = $106;
      }
     } while(0);
     $129 = HEAP32[$frm_nxt>>2]|0;
     $130 = ((($129)) + 2|0);
     HEAP32[$frm_nxt>>2] = $130;
     $131 = ($130>>>0)<($frm_end>>>0);
     if ($131) {
      $13 = $130;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 $17 = HEAP32[$frm_nxt>>2]|0;
 $18 = ($17>>>0)<($frm_end>>>0);
 $19 = ($$pre>>>0)<($to_end>>>0);
 $20 = $18 & $19;
 L9: do {
  if ($20) {
   $22 = $17;$27 = $$pre;
   while(1) {
    $21 = HEAP8[$22>>0]|0;
    $23 = $21&255;
    $24 = ($23>>>0)>($Maxcode>>>0);
    if ($24) {
     $$0 = 2;
     break L9;
    }
    $25 = ($21<<24>>24)>(-1);
    do {
     if ($25) {
      $26 = $21&255;
      HEAP16[$27>>1] = $26;
      $28 = ((($22)) + 1|0);
      HEAP32[$frm_nxt>>2] = $28;
     } else {
      $29 = ($21&255)<(194);
      if ($29) {
       $$0 = 2;
       break L9;
      }
      $30 = ($21&255)<(224);
      if ($30) {
       $31 = $22;
       $32 = (($$pre$phiZ2D) - ($31))|0;
       $33 = ($32|0)<(2);
       if ($33) {
        $$0 = 1;
        break L9;
       }
       $34 = ((($22)) + 1|0);
       $35 = HEAP8[$34>>0]|0;
       $36 = $35&255;
       $37 = $36 & 192;
       $38 = ($37|0)==(128);
       if (!($38)) {
        $$0 = 2;
        break L9;
       }
       $39 = $23 << 6;
       $40 = $39 & 1984;
       $41 = $36 & 63;
       $42 = $41 | $40;
       $43 = ($42>>>0)>($Maxcode>>>0);
       if ($43) {
        $$0 = 2;
        break L9;
       }
       $44 = $42&65535;
       HEAP16[$27>>1] = $44;
       $45 = ((($22)) + 2|0);
       HEAP32[$frm_nxt>>2] = $45;
       break;
      }
      $46 = ($21&255)<(240);
      if ($46) {
       $47 = $22;
       $48 = (($$pre$phiZ2D) - ($47))|0;
       $49 = ($48|0)<(3);
       if ($49) {
        $$0 = 1;
        break L9;
       }
       $50 = ((($22)) + 1|0);
       $51 = HEAP8[$50>>0]|0;
       $52 = ((($22)) + 2|0);
       $53 = HEAP8[$52>>0]|0;
       if ((($23|0) == 237)) {
        $56 = $51 & -32;
        $57 = ($56<<24>>24)==(-128);
        if (!($57)) {
         $$0 = 2;
         break L9;
        }
       } else if ((($23|0) == 224)) {
        $54 = $51 & -32;
        $55 = ($54<<24>>24)==(-96);
        if (!($55)) {
         $$0 = 2;
         break L9;
        }
       } else {
        $58 = $51 & -64;
        $59 = ($58<<24>>24)==(-128);
        if (!($59)) {
         $$0 = 2;
         break L9;
        }
       }
       $60 = $53&255;
       $61 = $60 & 192;
       $62 = ($61|0)==(128);
       if (!($62)) {
        $$0 = 2;
        break L9;
       }
       $63 = $23 << 12;
       $64 = $51&255;
       $65 = $64 << 6;
       $66 = $65 & 4032;
       $67 = $66 | $63;
       $68 = $60 & 63;
       $69 = $67 | $68;
       $70 = $69 & 65535;
       $71 = ($70>>>0)>($Maxcode>>>0);
       if ($71) {
        $$0 = 2;
        break L9;
       }
       $72 = $69&65535;
       HEAP16[$27>>1] = $72;
       $73 = ((($22)) + 3|0);
       HEAP32[$frm_nxt>>2] = $73;
       break;
      }
      $74 = ($21&255)<(245);
      if (!($74)) {
       $$0 = 2;
       break L9;
      }
      $75 = $22;
      $76 = (($$pre$phiZ2D) - ($75))|0;
      $77 = ($76|0)<(4);
      if ($77) {
       $$0 = 1;
       break L9;
      }
      $78 = ((($22)) + 1|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($22)) + 2|0);
      $81 = HEAP8[$80>>0]|0;
      $82 = ((($22)) + 3|0);
      $83 = HEAP8[$82>>0]|0;
      if ((($23|0) == 240)) {
       $$off = (($79) + 112)<<24>>24;
       $84 = ($$off&255)<(48);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      } else if ((($23|0) == 244)) {
       $85 = $79 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$0 = 2;
        break L9;
       }
      } else {
       $87 = $79 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$0 = 2;
        break L9;
       }
      }
      $89 = $81&255;
      $90 = $89 & 192;
      $91 = ($90|0)==(128);
      if (!($91)) {
       $$0 = 2;
       break L9;
      }
      $92 = $83&255;
      $93 = $92 & 192;
      $94 = ($93|0)==(128);
      if (!($94)) {
       $$0 = 2;
       break L9;
      }
      $95 = $27;
      $96 = (($16) - ($95))|0;
      $97 = ($96|0)<(4);
      if ($97) {
       $$0 = 1;
       break L9;
      }
      $98 = $23 & 7;
      $99 = $98 << 18;
      $100 = $79&255;
      $101 = $100 << 12;
      $102 = $101 & 258048;
      $103 = $102 | $99;
      $104 = $89 << 6;
      $105 = $104 & 4032;
      $106 = $103 | $105;
      $107 = $92 & 63;
      $108 = $106 | $107;
      $109 = ($108>>>0)>($Maxcode>>>0);
      if ($109) {
       $$0 = 2;
       break L9;
      }
      $110 = $98 << 2;
      $111 = $100 >>> 4;
      $112 = $111 & 3;
      $113 = $112 | $110;
      $114 = $113 << 6;
      $115 = (($114) + 16320)|0;
      $116 = $100 << 2;
      $117 = $116 & 60;
      $118 = $89 >>> 4;
      $119 = $118 & 3;
      $120 = $117 | $119;
      $121 = $120 | $115;
      $122 = $121 | 55296;
      $123 = $122&65535;
      HEAP16[$27>>1] = $123;
      $124 = $104 & 960;
      $125 = $107 | $124;
      $126 = $125 | 56320;
      $127 = $126&65535;
      $128 = ((($27)) + 2|0);
      HEAP32[$to_nxt>>2] = $128;
      HEAP16[$128>>1] = $127;
      $129 = HEAP32[$frm_nxt>>2]|0;
      $130 = ((($129)) + 4|0);
      HEAP32[$frm_nxt>>2] = $130;
     }
    } while(0);
    $131 = HEAP32[$to_nxt>>2]|0;
    $132 = ((($131)) + 2|0);
    HEAP32[$to_nxt>>2] = $132;
    $133 = HEAP32[$frm_nxt>>2]|0;
    $134 = ($133>>>0)<($frm_end>>>0);
    $135 = ($132>>>0)<($to_end>>>0);
    $136 = $134 & $135;
    if ($136) {
     $22 = $133;$27 = $132;
    } else {
     $$lcssa = $134;
     label = 39;
     break;
    }
   }
  } else {
   $$lcssa = $18;
   label = 39;
  }
 } while(0);
 if ((label|0) == 39) {
  $137 = $$lcssa&1;
  $$0 = $137;
 }
 return ($$0|0);
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$lcssa85 = 0, $$lcssa86 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$150 = 0, $frm_nxt$2 = 0, $nchar16_t$049 = 0, $nchar16_t$1 = 0, $or$cond = 0, $or$cond2 = 0, $or$cond48 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond48 = $15 & $14;
 L7: do {
  if ($or$cond48) {
   $frm_nxt$150 = $frm_nxt$1$ph;$nchar16_t$049 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$150>>0]|0;
    $17 = $16&255;
    $18 = ($17>>>0)>($Maxcode>>>0);
    if ($18) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $19 = ($16<<24>>24)>(-1);
    do {
     if ($19) {
      $20 = ((($frm_nxt$150)) + 1|0);
      $frm_nxt$2 = $20;$nchar16_t$1 = $nchar16_t$049;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$150;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$150)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$150)) + 2|0);
       $frm_nxt$2 = $36;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$150;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$150)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$150)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       if ((($17|0) == 237)) {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa84 = $38;
         label = 22;
         break L8;
        }
       } else if ((($17|0) == 224)) {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa85 = $38;
         label = 20;
         break L8;
        }
       } else {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa86 = $38;
         label = 24;
         break L8;
        }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$150)) + 3|0);
       $frm_nxt$2 = $69;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$150;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      $74 = (($mx) - ($nchar16_t$049))|0;
      $75 = ($74>>>0)<(2);
      $or$cond2 = $75 | $73;
      if ($or$cond2) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $76 = ((($frm_nxt$150)) + 1|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$150)) + 2|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($frm_nxt$150)) + 3|0);
      $81 = HEAP8[$80>>0]|0;
      if ((($17|0) == 240)) {
       $$off = (($77) + 112)<<24>>24;
       $82 = ($$off&255)<(48);
       if (!($82)) {
        $$lcssa82 = $71;
        label = 32;
        break L8;
       }
      } else if ((($17|0) == 244)) {
       $85 = $77 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
      } else {
       $89 = $77 & -64;
       $90 = ($89<<24>>24)==(-128);
       if (!($90)) {
        $$lcssa83 = $71;
        label = 36;
        break L8;
       }
      }
      $93 = $79&255;
      $94 = $93 & 192;
      $95 = ($94|0)==(128);
      if (!($95)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $96 = $81&255;
      $97 = $96 & 192;
      $98 = ($97|0)==(128);
      if (!($98)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $99 = $17 << 18;
      $100 = $99 & 1835008;
      $101 = $77&255;
      $102 = $101 << 12;
      $103 = $102 & 258048;
      $104 = $103 | $100;
      $105 = $93 << 6;
      $106 = $105 & 4032;
      $107 = $104 | $106;
      $108 = $96 & 63;
      $109 = $107 | $108;
      $110 = ($109>>>0)>($Maxcode>>>0);
      if ($110) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $111 = (($nchar16_t$049) + 1)|0;
      $112 = ((($frm_nxt$150)) + 4|0);
      $frm_nxt$2 = $112;$nchar16_t$1 = $111;
     }
    } while(0);
    $113 = (($nchar16_t$1) + 1)|0;
    $114 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $115 = ($113>>>0)<($mx>>>0);
    $or$cond = $115 & $114;
    if ($or$cond) {
     $frm_nxt$150 = $frm_nxt$2;$nchar16_t$049 = $113;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa85) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa84) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa86) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $83 = $frm;
    $84 = (($$lcssa82) - ($83))|0;
    $$0 = $84;
    break;
   }
   else if ((label|0) == 34) {
    $87 = $frm;
    $88 = (($$lcssa) - ($87))|0;
    $$0 = $88;
    break;
   }
   else if ((label|0) == 36) {
    $91 = $frm;
    $92 = (($$lcssa83) - ($91))|0;
    $$0 = $92;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $116 = $frm_nxt$1$lcssa;
  $117 = $frm;
  $118 = (($116) - ($117))|0;
  $$0 = $118;
 }
 return ($$0|0);
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $10 = ($$pre>>>0)<($frm_end>>>0);
   if ($10) {
    $12 = $$pre;
    while(1) {
     $11 = HEAP32[$12>>2]|0;
     $13 = $11 & -2048;
     $14 = ($13|0)==(55296);
     $15 = ($11>>>0)>($Maxcode>>>0);
     $or$cond = $15 | $14;
     if ($or$cond) {
      $$0 = 2;
      break L4;
     }
     $16 = ($11>>>0)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $11&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($11>>>0)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $11 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $11 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($11>>>0)<(65536);
       $38 = HEAP32[$to_nxt>>2]|0;
       $39 = $38;
       $40 = (($$pre1) - ($39))|0;
       if ($37) {
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $11 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $11 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $11 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       } else {
        $57 = ($40|0)<(4);
        if ($57) {
         $$0 = 1;
         break L4;
        }
        $58 = $11 >>> 18;
        $59 = $58 | 240;
        $60 = $59&255;
        $61 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $61;
        HEAP8[$38>>0] = $60;
        $62 = $11 >>> 12;
        $63 = $62 & 63;
        $64 = $63 | 128;
        $65 = $64&255;
        $66 = HEAP32[$to_nxt>>2]|0;
        $67 = ((($66)) + 1|0);
        HEAP32[$to_nxt>>2] = $67;
        HEAP8[$66>>0] = $65;
        $68 = $11 >>> 6;
        $69 = $68 & 63;
        $70 = $69 | 128;
        $71 = $70&255;
        $72 = HEAP32[$to_nxt>>2]|0;
        $73 = ((($72)) + 1|0);
        HEAP32[$to_nxt>>2] = $73;
        HEAP8[$72>>0] = $71;
        $74 = $11 & 63;
        $75 = $74 | 128;
        $76 = $75&255;
        $77 = HEAP32[$to_nxt>>2]|0;
        $78 = ((($77)) + 1|0);
        HEAP32[$to_nxt>>2] = $78;
        HEAP8[$77>>0] = $76;
        break;
       }
      }
     } while(0);
     $79 = HEAP32[$frm_nxt>>2]|0;
     $80 = ((($79)) + 4|0);
     HEAP32[$frm_nxt>>2] = $80;
     $81 = ($80>>>0)<($frm_end>>>0);
     if ($81) {
      $12 = $80;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = HEAP32[$frm_nxt>>2]|0;
 $17 = ($16>>>0)<($frm_end>>>0);
 $18 = ($$pre>>>0)<($to_end>>>0);
 $19 = $17 & $18;
 L9: do {
  if ($19) {
   $21 = $16;$25 = $$pre;
   while(1) {
    $20 = HEAP8[$21>>0]|0;
    $22 = $20&255;
    $23 = ($20<<24>>24)>(-1);
    do {
     if ($23) {
      $24 = ($22>>>0)>($Maxcode>>>0);
      if ($24) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $22;
      $26 = ((($21)) + 1|0);
      HEAP32[$frm_nxt>>2] = $26;
     } else {
      $27 = ($20&255)<(194);
      if ($27) {
       $$0 = 2;
       break L9;
      }
      $28 = ($20&255)<(224);
      if ($28) {
       $29 = $21;
       $30 = (($$pre$phiZ2D) - ($29))|0;
       $31 = ($30|0)<(2);
       if ($31) {
        $$0 = 1;
        break L9;
       }
       $32 = ((($21)) + 1|0);
       $33 = HEAP8[$32>>0]|0;
       $34 = $33&255;
       $35 = $34 & 192;
       $36 = ($35|0)==(128);
       if (!($36)) {
        $$0 = 2;
        break L9;
       }
       $37 = $22 << 6;
       $38 = $37 & 1984;
       $39 = $34 & 63;
       $40 = $39 | $38;
       $41 = ($40>>>0)>($Maxcode>>>0);
       if ($41) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $40;
       $42 = ((($21)) + 2|0);
       HEAP32[$frm_nxt>>2] = $42;
       break;
      }
      $43 = ($20&255)<(240);
      if ($43) {
       $44 = $21;
       $45 = (($$pre$phiZ2D) - ($44))|0;
       $46 = ($45|0)<(3);
       if ($46) {
        $$0 = 1;
        break L9;
       }
       $47 = ((($21)) + 1|0);
       $48 = HEAP8[$47>>0]|0;
       $49 = ((($21)) + 2|0);
       $50 = HEAP8[$49>>0]|0;
       if ((($22|0) == 237)) {
        $53 = $48 & -32;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$0 = 2;
         break L9;
        }
       } else if ((($22|0) == 224)) {
        $51 = $48 & -32;
        $52 = ($51<<24>>24)==(-96);
        if (!($52)) {
         $$0 = 2;
         break L9;
        }
       } else {
        $55 = $48 & -64;
        $56 = ($55<<24>>24)==(-128);
        if (!($56)) {
         $$0 = 2;
         break L9;
        }
       }
       $57 = $50&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $$0 = 2;
        break L9;
       }
       $60 = $22 << 12;
       $61 = $60 & 61440;
       $62 = $48&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $67;
       $69 = ((($21)) + 3|0);
       HEAP32[$frm_nxt>>2] = $69;
       break;
      }
      $70 = ($20&255)<(245);
      if (!($70)) {
       $$0 = 2;
       break L9;
      }
      $71 = $21;
      $72 = (($$pre$phiZ2D) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $$0 = 1;
       break L9;
      }
      $74 = ((($21)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($21)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($21)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      if ((($22|0) == 240)) {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$0 = 2;
        break L9;
       }
      } else if ((($22|0) == 244)) {
       $81 = $75 & -16;
       $82 = ($81<<24>>24)==(-128);
       if (!($82)) {
        $$0 = 2;
        break L9;
       }
      } else {
       $83 = $75 & -64;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      }
      $85 = $77&255;
      $86 = $85 & 192;
      $87 = ($86|0)==(128);
      if (!($87)) {
       $$0 = 2;
       break L9;
      }
      $88 = $79&255;
      $89 = $88 & 192;
      $90 = ($89|0)==(128);
      if (!($90)) {
       $$0 = 2;
       break L9;
      }
      $91 = $22 << 18;
      $92 = $91 & 1835008;
      $93 = $75&255;
      $94 = $93 << 12;
      $95 = $94 & 258048;
      $96 = $95 | $92;
      $97 = $85 << 6;
      $98 = $97 & 4032;
      $99 = $96 | $98;
      $100 = $88 & 63;
      $101 = $99 | $100;
      $102 = ($101>>>0)>($Maxcode>>>0);
      if ($102) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $101;
      $103 = ((($21)) + 4|0);
      HEAP32[$frm_nxt>>2] = $103;
     }
    } while(0);
    $104 = HEAP32[$to_nxt>>2]|0;
    $105 = ((($104)) + 4|0);
    HEAP32[$to_nxt>>2] = $105;
    $106 = HEAP32[$frm_nxt>>2]|0;
    $107 = ($106>>>0)<($frm_end>>>0);
    $108 = ($105>>>0)<($to_end>>>0);
    $109 = $107 & $108;
    if ($109) {
     $21 = $106;$25 = $105;
    } else {
     $$lcssa = $107;
     label = 38;
     break;
    }
   }
  } else {
   $$lcssa = $17;
   label = 38;
  }
 } while(0);
 if ((label|0) == 38) {
  $110 = $$lcssa&1;
  $$0 = $110;
 }
 return ($$0|0);
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa80 = 0, $$lcssa81 = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$148 = 0, $frm_nxt$2 = 0, $nchar32_t$047 = 0, $or$cond = 0, $or$cond46 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond46 = $15 & $14;
 L7: do {
  if ($or$cond46) {
   $frm_nxt$148 = $frm_nxt$1$ph;$nchar32_t$047 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$148>>0]|0;
    $17 = $16&255;
    $18 = ($16<<24>>24)>(-1);
    do {
     if ($18) {
      $19 = ($17>>>0)>($Maxcode>>>0);
      if ($19) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $20 = ((($frm_nxt$148)) + 1|0);
      $frm_nxt$2 = $20;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$148;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$148)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$148)) + 2|0);
       $frm_nxt$2 = $36;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$148;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$148)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$148)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       if ((($17|0) == 224)) {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa83 = $38;
         label = 20;
         break L8;
        }
       } else if ((($17|0) == 237)) {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa82 = $38;
         label = 22;
         break L8;
        }
       } else {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa84 = $38;
         label = 24;
         break L8;
        }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$148)) + 3|0);
       $frm_nxt$2 = $69;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$148;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $74 = ((($frm_nxt$148)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($frm_nxt$148)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$148)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      if ((($17|0) == 240)) {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$lcssa80 = $71;
        label = 32;
        break L8;
       }
      } else if ((($17|0) == 244)) {
       $83 = $75 & -16;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
      } else {
       $87 = $75 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$lcssa81 = $71;
        label = 36;
        break L8;
       }
      }
      $91 = $77&255;
      $92 = $91 & 192;
      $93 = ($92|0)==(128);
      if (!($93)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $94 = $79&255;
      $95 = $94 & 192;
      $96 = ($95|0)==(128);
      if (!($96)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $97 = $17 << 18;
      $98 = $97 & 1835008;
      $99 = $75&255;
      $100 = $99 << 12;
      $101 = $100 & 258048;
      $102 = $101 | $98;
      $103 = $91 << 6;
      $104 = $103 & 4032;
      $105 = $102 | $104;
      $106 = $94 & 63;
      $107 = $105 | $106;
      $108 = ($107>>>0)>($Maxcode>>>0);
      if ($108) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $109 = ((($frm_nxt$148)) + 4|0);
      $frm_nxt$2 = $109;
     }
    } while(0);
    $110 = (($nchar32_t$047) + 1)|0;
    $111 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $112 = ($110>>>0)<($mx>>>0);
    $or$cond = $112 & $111;
    if ($or$cond) {
     $frm_nxt$148 = $frm_nxt$2;$nchar32_t$047 = $110;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa83) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa82) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa84) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $81 = $frm;
    $82 = (($$lcssa80) - ($81))|0;
    $$0 = $82;
    break;
   }
   else if ((label|0) == 34) {
    $85 = $frm;
    $86 = (($$lcssa) - ($85))|0;
    $$0 = $86;
    break;
   }
   else if ((label|0) == 36) {
    $89 = $frm;
    $90 = (($$lcssa81) - ($89))|0;
    $$0 = $90;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $113 = $frm_nxt$1$lcssa;
  $114 = $frm;
  $115 = (($113) - ($114))|0;
  $$0 = $115;
 }
 return ($$0|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i1 = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if ($8) {
  $9 = ((($this)) + 16|0);
  $10 = HEAP32[$this>>2]|0;
  $11 = $10;
  $12 = (($5) - ($11))|0;
  $13 = $12 >> 2;
  $14 = (($13) + ($__n))|0;
  $15 = ($14>>>0)>(1073741823);
  if ($15) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $16 = (($4) - ($11))|0;
  $17 = $16 >> 2;
  $18 = ($17>>>0)<(536870911);
  if ($18) {
   $19 = $16 >> 1;
   $20 = ($19>>>0)<($14>>>0);
   $21 = $20 ? $14 : $19;
   $$0$i1 = $21;
  } else {
   $$0$i1 = 1073741823;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v,$$0$i1,$13,$9);
  $22 = ((($__v)) + 8|0);
  $$pre$i = HEAP32[$22>>2]|0;
  $23 = $__n << 2;
  _memset(($$pre$i|0),0,($23|0))|0;
  $scevgep = (($$pre$i) + ($__n<<2)|0);
  HEAP32[$22>>2] = $scevgep;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  HEAP32[$1>>2] = 0;
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 4|0);
  HEAP32[$0>>2] = $3;
  $4 = (($$0) + -1)|0;
  $5 = ($4|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$not$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 do {
  if ($2) {
   $8 = 0;
  } else {
   $3 = ((($__a)) + 112|0);
   $4 = HEAP8[$3>>0]|0;
   $$not$i$i = ($4<<24>>24)==(0);
   $5 = ($__cap>>>0)<(29);
   $or$cond$i$i = $5 & $$not$i$i;
   if ($or$cond$i$i) {
    HEAP8[$3>>0] = 1;
    $8 = $__a;
    break;
   } else {
    $6 = $__cap << 2;
    $7 = (__Znwj($6)|0);
    $8 = $7;
    break;
   }
  }
 } while(0);
 HEAP32[$this>>2] = $8;
 $9 = (($8) + ($__start<<2)|0);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($this)) + 4|0);
 HEAP32[$11>>2] = $9;
 $12 = (($8) + ($__cap<<2)|0);
 $13 = ((($this)) + 12|0);
 HEAP32[$13>>2] = $12;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $$pre$i$i$i = HEAP32[$2>>2]|0;
 $3 = ($$pre$i$i$i|0)==($1|0);
 if (!($3)) {
  $5 = $$pre$i$i$i;
  while(1) {
   $4 = ((($5)) + -4|0);
   $6 = ($4|0)==($1|0);
   if ($6) {
    $$lcssa = $4;
    break;
   } else {
    $5 = $4;
   }
  }
  HEAP32[$2>>2] = $$lcssa;
 }
 $7 = HEAP32[$this>>2]|0;
 $8 = ($7|0)==(0|0);
 do {
  if (!($8)) {
   $9 = ((($this)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==($7|0);
   if ($11) {
    $12 = ((($10)) + 112|0);
    HEAP8[$12>>0] = 0;
    break;
   } else {
    __ZdlPv($7);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ((($this)) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $3 & $$not$i$i;
 if ($or$cond$i$i) {
  $4 = ((($this)) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = ((($this)) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = ((($this)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
   }
   $10 = $4;
   $$0 = $10;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $13 = 0;$14 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   if ($12) {
    HEAP32[$__err>>2] = 4;
    $13 = -1;$14 = -1;
   } else {
    $13 = $7;$14 = $6;
   }
  }
 } while(0);
 tempRet0 = ($13);
 STACKTOP = sp;return ($14|0);
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(65535);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $18 = $6&65535;
    $$0 = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $18 = 0;$19 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $18 = 0;$19 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   if ($10) {
    HEAP32[$__err>>2] = 4;
    $11 = ($5|0)>(0);
    $12 = ($4>>>0)>(0);
    $13 = ($5|0)==(0);
    $14 = $13 & $12;
    $15 = $11 | $14;
    $16 = $15 ? -1 : 0;
    $17 = $15 ? 2147483647 : -2147483648;
    tempRet0 = ($17);
    STACKTOP = sp;return ($16|0);
   } else {
    $18 = $5;$19 = $4;
   }
  }
 } while(0);
 tempRet0 = ($18);
 STACKTOP = sp;return ($19|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 L1: do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   do {
    if ($10) {
     HEAP32[$__err>>2] = 4;
     $21 = ($5|0)>(0);
     $22 = ($4>>>0)>(0);
     $23 = ($5|0)==(0);
     $24 = $23 & $22;
     $25 = $21 | $24;
     if ($25) {
      $$0 = 2147483647;
      break L1;
     }
    } else {
     $11 = ($5|0)<(-1);
     $12 = ($4>>>0)<(2147483648);
     $13 = ($5|0)==(-1);
     $14 = $13 & $12;
     $15 = $11 | $14;
     if ($15) {
      HEAP32[$__err>>2] = 4;
      break;
     }
     $16 = ($5|0)>(0);
     $17 = ($4>>>0)>(2147483647);
     $18 = ($5|0)==(0);
     $19 = $18 & $17;
     $20 = $16 | $19;
     if ($20) {
      HEAP32[$__err>>2] = 4;
      $$0 = 2147483647;
      break L1;
     } else {
      $$0 = $4;
      break L1;
     }
    }
   } while(0);
   $$0 = -2147483648;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+-1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = HEAP32[$this>>2]|0;
  $4 = ((($3)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 127]($this);
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func) {
 $flag = $flag|0;
 $arg = $arg|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock((14408|0))|0);
 $0 = HEAP32[$flag>>2]|0;
 $1 = ($0|0)==(1);
 if ($1) {
  while(1) {
   (_pthread_cond_wait((14432|0),(14408|0))|0);
   $2 = HEAP32[$flag>>2]|0;
   $3 = ($2|0)==(1);
   if (!($3)) {
    break;
   }
  }
 }
 $4 = HEAP32[$flag>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  HEAP32[$flag>>2] = 1;
  (_pthread_mutex_unlock((14408|0))|0);
  FUNCTION_TABLE_vi[$func & 127]($arg);
  (_pthread_mutex_lock((14408|0))|0);
  HEAP32[$flag>>2] = -1;
  (_pthread_mutex_unlock((14408|0))|0);
  (_pthread_cond_broadcast((14432|0))|0);
 } else {
  (_pthread_mutex_unlock((14408|0))|0);
 }
 return;
}
function runPostSets() {

}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[((curr)>>0)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&7](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&31](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&3](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  return FUNCTION_TABLE_iiiiiid[index&3](a1|0,a2|0,a3|0,a4|0,a5|0,+a6)|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&127](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&63](a1|0,a2|0);
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&63](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_iiiiid(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
  return FUNCTION_TABLE_iiiiid[index&7](a1|0,a2|0,a3|0,a4|0,+a5)|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&63](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&3](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&3]();
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&7](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&7](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&15](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&7](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; abort(0);return 0; }
function b1(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(1);return 0; }
function b2(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(2); }
function b3(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; abort(3);return 0; }
function b4(p0) { p0 = p0|0; abort(4); }
function b5(p0,p1) { p0 = p0|0;p1 = p1|0; abort(5); }
function b6(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(6);return 0; }
function b7(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = +p4; abort(7);return 0; }
function b8(p0) { p0 = p0|0; abort(8);return 0; }
function b9(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(9); }
function b10() { ; abort(10); }
function ___cxa_pure_virtual__wrapper() { ; ___cxa_pure_virtual(); }
function b11(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; abort(11);return 0; }
function b12(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(12);return 0; }
function b13(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(13); }
function b14(p0,p1) { p0 = p0|0;p1 = p1|0; abort(14);return 0; }
function b15(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(15);return 0; }
function b16(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(16); }

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0];
var FUNCTION_TABLE_iiii = [b1,__ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_sn_write,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,_do_read,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1];
var FUNCTION_TABLE_viiiii = [b2,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
var FUNCTION_TABLE_iiiiiid = [b3,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b3];
var FUNCTION_TABLE_vi = [b4,__ZN6ikfast14IkSolutionListIdED2Ev,__ZN6ikfast14IkSolutionListIdED0Ev,__ZN6ikfast14IkSolutionListIdE5ClearEv,__ZN6ikfast10IkSolutionIdED2Ev,__ZN6ikfast10IkSolutionIdED0Ev,__ZNK6ikfast10IkSolutionIdE8ValidateEv,__ZN6ikfast14IkSolutionBaseIdED2Ev,__ZN6ikfast14IkSolutionBaseIdED0Ev,__ZN6ikfast18IkSolutionListBaseIdED2Ev,__ZN6ikfast18IkSolutionListBaseIdED0Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5__impD2Ev
,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,__ZNSt3__112__do_nothingEPv,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,_free,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_vii = [b5,__ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi
,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiii = [b6,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiiid = [b7,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b7,b7,b7];
var FUNCTION_TABLE_ii = [b8,__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv,__ZNK6ikfast10IkSolutionIdE7GetFreeEv,__ZNK6ikfast10IkSolutionIdE6GetDOFEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt13runtime_error4whatEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv
,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_viii = [b9,__ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd,__ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,__ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_];
var FUNCTION_TABLE_v = [b10,___cxa_pure_virtual__wrapper,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev];
var FUNCTION_TABLE_iiiiiiiii = [b11,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_iiiii = [b12,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b12,b12];
var FUNCTION_TABLE_viiiiii = [b13,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE];
var FUNCTION_TABLE_iii = [b14,__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw,__ZNKSt3__15ctypeIwE8do_widenEc,b14,b14,b14,b14];
var FUNCTION_TABLE_iiiiii = [b15,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15];
var FUNCTION_TABLE_viiii = [b16,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strlen: _strlen, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiii: dynCall_viiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }
    var request = Module['memoryInitializerRequest'];
    if (request) {
      // a network request has already been created, just use that
      if (request.response) {
        setTimeout(function() {
          applyMemoryInitializer(request.response);
        }, 0); // it's already here; but, apply it asynchronously
      } else {
        request.addEventListener('load', function() { // wait for it
          if (request.status !== 200 && request.status !== 0) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status);
          }
          if (!request.response || typeof request.response !== 'object' || !request.response.byteLength) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): ' + request.response);
          }
          applyMemoryInitializer(request.response);
        });
      }
    } else {
      // fetch it from the network ourselves
      Browser.asyncLoad(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {
    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = false;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



module.exports = Module;

