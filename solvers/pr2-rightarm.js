// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB;
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (typeof _sbrk !== 'undefined' && !_sbrk.called) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the a given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);

HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;

// === Body ===

var ASM_CONSTS = [];





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 14592;
  /* global initializers */ __ATINIT__.push();
  

/* memory initializer */ allocate([10,75,65,75,65,75,65,75,32,85,115,97,103,101,58,32,46,47,105,107,32,114,48,48,32,114,48,49,32,114,48,50,32,116,48,32,114,49,48,32,114,49,49,32,114,49,50,32,116,49,32,114,50,48,32,114,50,49,32,114,50,50,32,116,50,32,102,114,101,101,48,32,46,46,46,10,10,82,101,116,117,114,110,115,32,116,104,101,32,105,107,32,115,111,108,117,116,105,111,110,115,32,103,105,118,101,110,32,116,104,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,32,111,102,32,116,104,101,32,101,110,100,32,101,102,102,101,99,116,111,114,32,115,112,101,99,105,102,105,101,100,32,98,121,10,97,32,51,120,51,32,114,111,116,97,116,105,111,110,32,82,32,40,114,88,88,41,44,32,97,110,100,32,97,32,51,120,49,32,116,114,97,110,115,108,97,116,105,111,110,32,40,116,88,41,46,10,84,104,101,114,101,32,97,114,101,32,37,100,32,102,114,101,101,32,112,97,114,97,109,101,116,101,114,115,32,116,104,97,116,32,104,97,118,101,32,116,111,32,98,101,32,115,112,101,99,105,102,105,101,100,46,10,10,0,0,0,70,97,105,108,101,100,32,116,111,32,103,101,116,32,105,107,32,115,111,108,117,116,105,111,110,10,0,0,0,0,0,0,70,111,117,110,100,32,37,100,32,105,107,32,115,111,108,117,116,105,111,110,115,58,10,0,115,111,108,37,100,32,40,102,114,101,101,61,37,100,41,58,32,0,0,0,0,0,0,0,37,46,49,53,102,44,32,0,0,0,0,0,144,1,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,56,9,0,0,208,2,0,0,240,2,0,0,0,0,0,0,0,0,0,0,200,1,0,0,4,0,0,0,5,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,6,0,0,0,1,0,0,0,56,9,0,0,104,2,0,0,136,2,0,0,0,0,0,0,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,0,0,0,0,50,110,100,32,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,102,111,102,102,115,101,116,32,119,97,115,32,110,111,116,32,102,105,110,105,116,101,0,0,78,54,105,107,102,97,115,116,49,48,73,107,83,111,108,117,116,105,111,110,73,100,69,69,0,0,0,0,0,0,0,0,16,9,0,0,144,2,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,136,2,0,0,7,0,0,0,8,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,76,105,115,116,73,100,69,69,0,0,0,0,16,9,0,0,248,2,0,0,78,54,105,107,102,97,115,116,49,56,73,107,83,111,108,117,116,105,111,110,76,105,115,116,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,71,101,116,83,111,108,117,116,105,111,110,32,105,110,100,101,120,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,0,240,2,0,0,9,0,0,0,10,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,64,0,0,0,0,0,0,0,160,5,0,0,11,0,0,0,12,0,0,0,56,0,0,0,248,255,255,255,160,5,0,0,13,0,0,0,14,0,0,0,192,255,255,255,192,255,255,255,160,5,0,0,15,0,0,0,16,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,48,19,0,0,17,0,0,0,18,0,0,0,192,255,255,255,192,255,255,255,48,19,0,0,19,0,0,0,20,0,0,0,0,0,0,0,72,5,0,0,21,0,0,0,22,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,6,0,0,0,7,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,108,3,0,0,236,4,0,0,172,3,0,0,192,3,0,0,44,5,0,0,64,5,0,0,20,5,0,0,0,5,0,0,148,3,0,0,128,3,0,0,105,107,102,97,115,116,32,101,120,99,101,112,116,105,111,110,58,32,0,0,0,0,0,0,46,47,115,111,108,118,101,114,115,47,112,114,50,45,114,105,103,104,116,97,114,109,46,116,109,112,46,99,112,112,0,0,58,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,73,75,97,115,105,110,0,0,58,32,65,115,115,101,114,116,105,111,110,32,39,0,0,0,102,32,62,32,45,49,45,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,32,38,38,32,102,32,60,32,49,43,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,0,0,0,0,0,0,0,39,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,192,19,0,0,23,0,0,0,24,0,0,0,56,0,0,0,248,255,255,255,192,19,0,0,25,0,0,0,26,0,0,0,192,255,255,255,192,255,255,255,192,19,0,0,27,0,0,0,28,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,120,19,0,0,29,0,0,0,30,0,0,0,200,255,255,255,200,255,255,255,120,19,0,0,31,0,0,0,32,0,0,0,56,9,0,0,88,5,0,0,248,18,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,56,9,0,0,176,5,0,0,192,19,0,0,0,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,73,75,97,116,97,110,50,0,33,105,115,110,97,110,40,102,120,41,0,0,0,0,0,0,73,75,97,99,111,115,0,0,112,111,108,121,114,111,111,116,115,56,0,0,0,0,0,0,114,97,119,99,111,101,102,102,115,91,48,93,32,33,61,32,48,0,0,0,0,0,0,0,112,111,108,121,114,111,111,116,115,55,0,0,0,0,0,0,112,111,108,121,114,111,111,116,115,54,0,0,0,0,0,0,112,111,108,121,114,111,111,116,115,53,0,0,0,0,0,0,112,111,108,121,114,111,111,116,115,52,0,0,0,0,0,0,112,111,108,121,114,111,111,116,115,51,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,160,7,0,0,33,0,0,0,34,0,0,0,8,0,0,0,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,56,9,0,0,144,7,0,0,200,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,16,9,0,0,184,7,0,0,0,0,0,0,0,8,0,0,35,0,0,0,36,0,0,0,9,0,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,56,9,0,0,232,7,0,0,200,7,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,16,9,0,0,16,8,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,56,9,0,0,40,8,0,0,32,8,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,56,9,0,0,96,8,0,0,80,8,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,56,9,0,0,192,8,0,0,80,8,0,0,0,0,0,0,56,9,0,0,152,8,0,0,232,8,0,0,0,0,0,0,0,0,0,0,136,8,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,128,9,0,0,37,0,0,0,41,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,56,9,0,0,88,9,0,0,136,8,0,0,0,0,0,0,0,0,0,0,224,9,0,0,37,0,0,0,42,0,0,0,39,0,0,0,40,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,56,9,0,0,184,9,0,0,136,8,0,0,0,0,0,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,0,0,47,104,111,109,101,47,108,100,47,106,115,45,105,107,115,111,108,118,101,114,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,109,97,115,116,101,114,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,115,116,114,105,110,103,0,0,0,0,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,248,18,0,0,43,0,0,0,44,0,0,0,2,0,0,0,2,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,120,18,0,0,45,0,0,0,46,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,16,9,0,0,96,18,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,56,9,0,0,128,18,0,0,120,18,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,16,9,0,0,192,18,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,152,9,0,0,0,19,0,0,0,0,0,0,1,0,0,0,176,18,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,152,9,0,0,72,19,0,0,0,0,0,0,1,0,0,0,176,18,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,152,9,0,0,144,19,0,0,3,0,0,0,2,0,0,0,48,19,0,0,2,0,0,0,120,19,0,0,2,8,0,0,0,0,0,0,240,28,0,0,47,0,0,0,48,0,0,0,49,0,0,0,1,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,29,0,0,50,0,0,0,51,0,0,0,49,0,0,0,2,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,29,0,0,52,0,0,0,53,0,0,0,49,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,0,0,0,0,96,30,0,0,54,0,0,0,55,0,0,0,49,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,30,0,0,56,0,0,0,57,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,23,0,0,0,5,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,31,0,0,58,0,0,0,59,0,0,0,49,0,0,0,7,0,0,0,8,0,0,0,25,0,0,0,9,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,31,0,0,60,0,0,0,61,0,0,0,49,0,0,0,11,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,152,31,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,32,0,0,62,0,0,0,63,0,0,0,49,0,0,0,19,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,8,32,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,32,0,0,64,0,0,0,65,0,0,0,49,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,32,0,0,66,0,0,0,67,0,0,0,49,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,33,0,0,68,0,0,0,69,0,0,0,49,0,0,0,27,0,0,0,28,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,29,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,33,0,0,70,0,0,0,71,0,0,0,49,0,0,0,30,0,0,0,31,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,32,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,33,0,0,72,0,0,0,73,0,0,0,49,0,0,0,33,0,0,0,34,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,35,0,0,0,19,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,33,0,0,74,0,0,0,75,0,0,0,49,0,0,0,36,0,0,0,37,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,38,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,34,0,0,76,0,0,0,77,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,34,0,0,78,0,0,0,79,0,0,0,49,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,35,0,0,80,0,0,0,81,0,0,0,49,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,35,0,0,82,0,0,0,83,0,0,0,49,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,35,0,0,84,0,0,0,85,0,0,0,49,0,0,0,9,0,0,0,6,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,35,0,0,86,0,0,0,87,0,0,0,49,0,0,0,10,0,0,0,7,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,28,0,0,88,0,0,0,89,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,29,0,0,90,0,0,0,91,0,0,0,49,0,0,0,6,0,0,0,11,0,0,0,7,0,0,0,12,0,0,0,8,0,0,0,1,0,0,0,13,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,28,0,0,92,0,0,0,93,0,0,0,49,0,0,0,3,0,0,0,4,0,0,0,12,0,0,0,39,0,0,0,40,0,0,0,13,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,29,0,0,94,0,0,0,95,0,0,0,49,0,0,0,42,0,0,0,43,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,160,29,0,0,96,0,0,0,97,0,0,0,49,0,0,0,44,0,0,0,45,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,0,0,0,0,160,25,0,0,98,0,0,0,99,0,0,0,49,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,56,9,0,0,136,25,0,0,168,56,0,0,0,0,0,0,0,0,0,0,16,26,0,0,98,0,0,0,100,0,0,0,49,0,0,0,14,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,9,0,0,0,15,0,0,0,10,0,0,0,16,0,0,0,11,0,0,0,5,0,0,0,17,0,0,0,14,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,152,9,0,0,248,25,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,184,53,0,0,2,0,0,0,0,0,0,0,136,26,0,0,98,0,0,0,101,0,0,0,49,0,0,0,5,0,0,0,6,0,0,0,15,0,0,0,46,0,0,0,47,0,0,0,16,0,0,0,48,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,152,9,0,0,96,26,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,192,53,0,0,2,0,0,0,0,0,0,0,0,27,0,0,98,0,0,0,102,0,0,0,49,0,0,0,7,0,0,0,8,0,0,0,17,0,0,0,49,0,0,0,50,0,0,0,18,0,0,0,51,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,152,9,0,0,216,26,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,192,53,0,0,2,0,0,0,0,0,0,0,120,27,0,0,98,0,0,0,103,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,152,9,0,0,80,27,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,192,53,0,0,2,0,0,0,0,0,0,0,240,27,0,0,98,0,0,0,104,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,56,9,0,0,200,27,0,0,120,27,0,0,0,0,0,0,0,0,0,0,88,28,0,0,98,0,0,0,105,0,0,0,49,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,56,9,0,0,48,28,0,0,120,27,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,152,9,0,0,104,28,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,192,53,0,0,2,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,56,9,0,0,176,28,0,0,160,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,56,9,0,0,216,28,0,0,160,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,56,9,0,0,0,29,0,0,160,25,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,152,9,0,0,40,29,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,184,53,0,0,2,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,56,9,0,0,96,29,0,0,160,25,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,56,9,0,0,136,29,0,0,160,25,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,152,9,0,0,176,29,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,200,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,152,9,0,0,24,30,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,224,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,152,9,0,0,128,30,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,248,53,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,152,9,0,0,232,30,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,16,54,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,152,9,0,0,80,31,0,0,0,0,0,0,3,0,0,0,160,25,0,0,2,0,0,0,40,54,0,0,2,0,0,0,48,54,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,152,9,0,0,192,31,0,0,0,0,0,0,3,0,0,0,160,25,0,0,2,0,0,0,40,54,0,0,2,0,0,0,56,54,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,152,9,0,0,48,32,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,64,54,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,152,9,0,0,152,32,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,64,54,0,0,0,8,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,152,9,0,0,0,33,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,72,54,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,152,9,0,0,64,33,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,72,54,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,152,9,0,0,128,33,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,72,54,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,152,9,0,0,192,33,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,72,54,0,0,2,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,152,9,0,0,0,34,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,80,54,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,152,9,0,0,104,34,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,88,54,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,152,9,0,0,208,34,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,96,54,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,152,9,0,0,56,35,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,104,54,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,152,9,0,0,160,35,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,112,54,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,152,9,0,0,216,35,0,0,0,0,0,0,2,0,0,0,160,25,0,0,2,0,0,0,112,54,0,0,2,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,46,48,76,102,0,0,0,33,34,118,101,99,116,111,114,32,111,117,116,95,111,102,95,114,97,110,103,101,34,0,0,47,104,111,109,101,47,108,100,47,106,115,45,105,107,115,111,108,118,101,114,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,109,97,115,116,101,114,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,0,0,0,0,95,95,116,104,114,111,119,95,111,117,116,95,111,102,95,114,97,110,103,101], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,9,0,0,112,56,0,0,16,9,0,0,88,56,0,0,152,9,0,0,64,56,0,0,0,0,0,0,1,0,0,0,24,56,0,0,0,0,0,0,152,9,0,0,0,56,0,0,0,0,0,0,1,0,0,0,24,56,0,0,0,0,0,0,152,9,0,0,232,55,0,0,0,0,0,0,1,0,0,0,192,55,0,0,0,0,0,0,152,9,0,0,168,55,0,0,0,0,0,0,1,0,0,0,192,55,0,0,0,0,0,0,16,9,0,0,144,55,0,0,16,9,0,0,104,55,0,0,16,9,0,0,64,55,0,0,16,9,0,0,40,55,0,0,16,9,0,0,16,55,0,0,16,9,0,0,240,54,0,0,16,9,0,0,208,54,0,0,16,9,0,0,176,54,0,0,16,9,0,0,144,54,0,0,16,9,0,0,120,54,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,16,9,0,0,200,55,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,16,9,0,0,32,56,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,16,9,0,0,136,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10264);




/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_mutex_lock() {}

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }

  
  
  
  var FS=undefined;
  
  
  
  var SOCKFS=undefined;function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 7) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      // extra effort to support printf, even without a filesystem. very partial, very hackish
      var result = __formatString(format, varargs);
      var string = intArrayToString(result);
      if (string[string.length-1] === '\n') string = string.substr(0, string.length-1); // remove a final \n, as Module.print will do that
      Module.print(string);
      return result.length;
    }

  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  var _tan=Math_tan;


  var _asin=Math_asin;

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  var _fabs=Math_abs;


  var _sqrt=Math_sqrt;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _free() {
  }
  Module["_free"] = _free;function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

   
  Module["_i64Add"] = _i64Add;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  var _atan=Math_atan;

  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  var _BDtoIHigh=true;

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _pthread_cond_broadcast() {
      return 0;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_guard_release() {}

  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;


  var _cos=Math_cos;

  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);function _putchar(c) {
      // int putchar(int c);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/putchar.html
      return _fputc(c, HEAP32[((_stdout)>>2)]);
    }

  var _llvm_pow_f64=Math_pow;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  function ___errno_location() {
      return ___errno_state;
    }

  var _BItoD=true;

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  var _atan2=Math_atan2;

  function _pthread_mutex_unlock() {}

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiii": invoke_viiiii, "invoke_iiiiiid": invoke_iiiiiid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_iiiiid": invoke_iiiiid, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "_llvm_pow_f64": _llvm_pow_f64, "_uselocale": _uselocale, "___ctype_b_loc": ___ctype_b_loc, "___cxa_guard_acquire": ___cxa_guard_acquire, "_atan2": _atan2, "___setErrNo": ___setErrNo, "_vfprintf": _vfprintf, "___assert_fail": ___assert_fail, "___cxa_allocate_exception": ___cxa_allocate_exception, "_asin": _asin, "_acos": _acos, "___ctype_toupper_loc": ___ctype_toupper_loc, "_atan": _atan, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "_cos": _cos, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_sbrk": _sbrk, "_send": _send, "_catgets": _catgets, "_newlocale": _newlocale, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_fileno": _fileno, "___resumeException": ___resumeException, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_freelocale": _freelocale, "_pthread_getspecific": _pthread_getspecific, "__arraySum": __arraySum, "_putchar": _putchar, "___ctype_tolower_loc": ___ctype_tolower_loc, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "_printf": _printf, "_pthread_key_create": _pthread_key_create, "_calloc": _calloc, "_tan": _tan, "_write": _write, "__isLeapYear": __isLeapYear, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_sysconf": _sysconf, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_abort": _abort, "_catclose": _catclose, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_strerror": _strerror, "__formatString": __formatString, "_sqrt": _sqrt, "_catopen": _catopen, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "_stderr": _stderr };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var _stderr=env._stderr|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _uselocale=env._uselocale;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _atan2=env._atan2;
  var ___setErrNo=env.___setErrNo;
  var _vfprintf=env._vfprintf;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _asin=env._asin;
  var _acos=env._acos;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var _atan=env._atan;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var _cos=env._cos;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _sbrk=env._sbrk;
  var _send=env._send;
  var _catgets=env._catgets;
  var _newlocale=env._newlocale;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _fileno=env._fileno;
  var ___resumeException=env.___resumeException;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _freelocale=env._freelocale;
  var _pthread_getspecific=env._pthread_getspecific;
  var __arraySum=env.__arraySum;
  var _putchar=env._putchar;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _printf=env._printf;
  var _pthread_key_create=env._pthread_key_create;
  var _calloc=env._calloc;
  var _tan=env._tan;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _sysconf=env._sysconf;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _abort=env._abort;
  var _catclose=env._catclose;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _sqrt=env._sqrt;
  var _catopen=env._catopen;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$pfree,$solutions) {
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $solver = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0;
 $solver = sp;
 $0 = (__ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($solver,$eetrans,$eerot,$pfree,$solutions)|0);
 STACKTOP = sp;return ($0|0);
}
function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $$0 = 0, $$1 = 0, $$6 = 0, $$lcssa = 0, $$lcssa26 = 0, $$lcssa8 = 0, $0 = 0, $1 = 0, $10 = 0.0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0.0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0.0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $eerot = 0, $eetrans = 0, $i$013 = 0, $i1$010 = 0, $j$09 = 0, $phitmp = 0, $phitmp24 = 0, $solutions = 0, $solvalues = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, $vararg_ptr7 = 0, $vfree = 0;
 var $vsolfree = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $vararg_buffer8 = sp + 120|0;
 $vararg_buffer4 = sp + 112|0;
 $vararg_buffer1 = sp + 104|0;
 $vararg_buffer = sp + 96|0;
 $solutions = sp + 168|0;
 $vfree = sp + 152|0;
 $eerot = sp + 24|0;
 $eetrans = sp;
 $solvalues = sp + 140|0;
 $vsolfree = sp + 128|0;
 $0 = ($argc|0)==(14);
 if (!($0)) {
  HEAP32[$vararg_buffer>>2] = 1;
  (_printf((8|0),($vararg_buffer|0))|0);
  $$1 = 1;
  STACKTOP = sp;return ($$1|0);
 }
 __ZN6ikfast14IkSolutionListIdEC2Ev($solutions);
 __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($vfree,1);
 $1 = ((($argv)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (+_atof($2));
 HEAPF64[$eerot>>3] = $3;
 $4 = ((($argv)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (+_atof($5));
 $7 = ((($eerot)) + 8|0);
 HEAPF64[$7>>3] = $6;
 $8 = ((($argv)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (+_atof($9));
 $11 = ((($eerot)) + 16|0);
 HEAPF64[$11>>3] = $10;
 $12 = ((($argv)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (+_atof($13));
 HEAPF64[$eetrans>>3] = $14;
 $15 = ((($argv)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (+_atof($16));
 $18 = ((($eerot)) + 24|0);
 HEAPF64[$18>>3] = $17;
 $19 = ((($argv)) + 24|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (+_atof($20));
 $22 = ((($eerot)) + 32|0);
 HEAPF64[$22>>3] = $21;
 $23 = ((($argv)) + 28|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (+_atof($24));
 $26 = ((($eerot)) + 40|0);
 HEAPF64[$26>>3] = $25;
 $27 = ((($argv)) + 32|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (+_atof($28));
 $30 = ((($eetrans)) + 8|0);
 HEAPF64[$30>>3] = $29;
 $31 = ((($argv)) + 36|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (+_atof($32));
 $34 = ((($eerot)) + 48|0);
 HEAPF64[$34>>3] = $33;
 $35 = ((($argv)) + 40|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (+_atof($36));
 $38 = ((($eerot)) + 56|0);
 HEAPF64[$38>>3] = $37;
 $39 = ((($argv)) + 44|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (+_atof($40));
 $42 = ((($eerot)) + 64|0);
 HEAPF64[$42>>3] = $41;
 $43 = ((($argv)) + 48|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (+_atof($44));
 $46 = ((($eetrans)) + 16|0);
 HEAPF64[$46>>3] = $45;
 $47 = ((($vfree)) + 4|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = HEAP32[$vfree>>2]|0;
 $50 = ($48|0)==($49|0);
 if ($50) {
  $$lcssa8 = 0;
 } else {
  $56 = $49;$i$013 = 0;
  while(1) {
   $51 = (($i$013) + 13)|0;
   $52 = (($argv) + ($51<<2)|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (+_atof($53));
   $55 = (($56) + ($i$013<<3)|0);
   HEAPF64[$55>>3] = $54;
   $57 = (($i$013) + 1)|0;
   $58 = HEAP32[$47>>2]|0;
   $59 = HEAP32[$vfree>>2]|0;
   $60 = $58;
   $61 = $59;
   $62 = (($60) - ($61))|0;
   $63 = $62 >> 3;
   $64 = ($57>>>0)<($63>>>0);
   if ($64) {
    $56 = $59;$i$013 = $57;
   } else {
    $$lcssa = $59;$$lcssa26 = $63;
    break;
   }
  }
  $phitmp = ($$lcssa26|0)==(0);
  $phitmp24 = $phitmp ? 0 : $$lcssa;
  $$lcssa8 = $phitmp24;
 }
 $65 = (__Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$$lcssa8,$solutions)|0);
 if ($65) {
  $67 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
  HEAP32[$vararg_buffer1>>2] = $67;
  (_printf((312|0),($vararg_buffer1|0))|0);
  __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($solvalues,7);
  $68 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
  $69 = ($68|0)==(0);
  if (!($69)) {
   $70 = ((($vsolfree)) + 4|0);
   $71 = ((($solvalues)) + 4|0);
   $i1$010 = 0;
   while(1) {
    $72 = (__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($solutions,$i1$010)|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = ((($73)) + 16|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = (FUNCTION_TABLE_ii[$75 & 63]($72)|0);
    $77 = ((($76)) + 4|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = HEAP32[$76>>2]|0;
    $80 = $78;
    $81 = $79;
    $82 = (($80) - ($81))|0;
    $83 = $82 >> 2;
    HEAP32[$vararg_buffer4>>2] = $i1$010;
    $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
    HEAP32[$vararg_ptr7>>2] = $83;
    (_printf((336|0),($vararg_buffer4|0))|0);
    $84 = HEAP32[$72>>2]|0;
    $85 = ((($84)) + 16|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = (FUNCTION_TABLE_ii[$86 & 63]($72)|0);
    $88 = ((($87)) + 4|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = HEAP32[$87>>2]|0;
    $91 = $89;
    $92 = $90;
    $93 = (($91) - ($92))|0;
    $94 = $93 >> 2;
    __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($vsolfree,$94);
    $95 = HEAP32[$72>>2]|0;
    $96 = ((($95)) + 8|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = HEAP32[$solvalues>>2]|0;
    $99 = HEAP32[$70>>2]|0;
    $100 = HEAP32[$vsolfree>>2]|0;
    $101 = ($99|0)==($100|0);
    $$6 = $101 ? 0 : $100;
    FUNCTION_TABLE_viii[$97 & 3]($72,$98,$$6);
    $102 = HEAP32[$71>>2]|0;
    $103 = HEAP32[$solvalues>>2]|0;
    $104 = ($102|0)==($103|0);
    if (!($104)) {
     $106 = $103;$j$09 = 0;
     while(1) {
      $105 = (($106) + ($j$09<<3)|0);
      $107 = +HEAPF64[$105>>3];
      HEAPF64[$vararg_buffer8>>3] = $107;
      (_printf((360|0),($vararg_buffer8|0))|0);
      $108 = (($j$09) + 1)|0;
      $109 = HEAP32[$71>>2]|0;
      $110 = HEAP32[$solvalues>>2]|0;
      $111 = $109;
      $112 = $110;
      $113 = (($111) - ($112))|0;
      $114 = $113 >> 3;
      $115 = ($108>>>0)<($114>>>0);
      if ($115) {
       $106 = $110;$j$09 = $108;
      } else {
       break;
      }
     }
    }
    (_putchar(10)|0);
    __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($vsolfree);
    $116 = (($i1$010) + 1)|0;
    $117 = (__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($solutions)|0);
    $118 = ($116>>>0)<($117>>>0);
    if ($118) {
     $i1$010 = $116;
    } else {
     break;
    }
   }
  }
  __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($solvalues);
  $$0 = 0;
 } else {
  $66 = HEAP32[_stderr>>2]|0;
  (_fwrite((280|0),26,1,($66|0))|0);
  $$0 = -1;
 }
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($vfree);
 __ZN6ikfast14IkSolutionListIdED2Ev($solutions);
 $$1 = $$0;
 STACKTOP = sp;return ($$1|0);
}
function __Z5IKcosd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_cos((+$f)));
 return (+$0);
}
function __Z5IKsind($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_sin((+$f)));
 return (+$0);
}
function __ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($this,$eetrans,$eerot,$pfree,$solutions) {
 $this = $this|0;
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $$ = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0.0, $1001 = 0.0, $1002 = 0.0, $1003 = 0.0, $1004 = 0.0, $1005 = 0.0, $1006 = 0.0, $1007 = 0.0, $1008 = 0.0, $1009 = 0.0, $101 = 0, $1010 = 0.0, $1011 = 0.0, $1012 = 0.0;
 var $1013 = 0.0, $1014 = 0.0, $1015 = 0, $1016 = 0.0, $1017 = 0.0, $1018 = 0.0, $1019 = 0.0, $102 = 0, $1020 = 0.0, $1021 = 0.0, $1022 = 0.0, $1023 = 0.0, $1024 = 0.0, $1025 = 0.0, $1026 = 0.0, $1027 = 0.0, $1028 = 0.0, $1029 = 0.0, $103 = 0, $1030 = 0.0;
 var $1031 = 0.0, $1032 = 0.0, $1033 = 0.0, $1034 = 0.0, $1035 = 0.0, $1036 = 0.0, $1037 = 0.0, $1038 = 0.0, $1039 = 0.0, $104 = 0, $1040 = 0.0, $1041 = 0, $1042 = 0.0, $1043 = 0, $1044 = 0.0, $1045 = 0.0, $1046 = 0.0, $1047 = 0.0, $1048 = 0.0, $1049 = 0.0;
 var $105 = 0, $1050 = 0.0, $1051 = 0.0, $1052 = 0.0, $1053 = 0.0, $1054 = 0.0, $1055 = 0.0, $1056 = 0.0, $1057 = 0.0, $1058 = 0.0, $1059 = 0.0, $106 = 0, $1060 = 0.0, $1061 = 0.0, $1062 = 0.0, $1063 = 0.0, $1064 = 0.0, $1065 = 0.0, $1066 = 0.0, $1067 = 0.0;
 var $1068 = 0.0, $1069 = 0.0, $107 = 0, $1070 = 0.0, $1071 = 0.0, $1072 = 0.0, $1073 = 0.0, $1074 = 0.0, $1075 = 0.0, $1076 = 0, $1077 = 0, $1078 = 0.0, $1079 = 0.0, $108 = 0, $1080 = 0.0, $1081 = 0.0, $1082 = 0.0, $1083 = 0.0, $1084 = 0.0, $1085 = 0.0;
 var $1086 = 0.0, $1087 = 0.0, $1088 = 0.0, $1089 = 0.0, $109 = 0, $1090 = 0.0, $1091 = 0.0, $1092 = 0.0, $1093 = 0.0, $1094 = 0.0, $1095 = 0.0, $1096 = 0.0, $1097 = 0.0, $1098 = 0.0, $1099 = 0.0, $11 = 0, $110 = 0, $1100 = 0.0, $1101 = 0.0, $1102 = 0;
 var $1103 = 0, $1104 = 0.0, $1105 = 0.0, $1106 = 0.0, $1107 = 0.0, $1108 = 0.0, $1109 = 0.0, $111 = 0, $1110 = 0.0, $1111 = 0, $1112 = 0.0, $1113 = 0, $1114 = 0.0, $1115 = 0.0, $1116 = 0.0, $1117 = 0.0, $1118 = 0.0, $1119 = 0.0, $112 = 0, $1120 = 0.0;
 var $1121 = 0.0, $1122 = 0.0, $1123 = 0.0, $1124 = 0.0, $1125 = 0.0, $1126 = 0.0, $1127 = 0.0, $1128 = 0.0, $1129 = 0.0, $113 = 0, $1130 = 0.0, $1131 = 0.0, $1132 = 0.0, $1133 = 0.0, $1134 = 0.0, $1135 = 0.0, $1136 = 0.0, $1137 = 0.0, $1138 = 0.0, $1139 = 0.0;
 var $114 = 0, $1140 = 0.0, $1141 = 0.0, $1142 = 0.0, $1143 = 0.0, $1144 = 0.0, $1145 = 0.0, $1146 = 0.0, $1147 = 0.0, $1148 = 0.0, $1149 = 0.0, $115 = 0, $1150 = 0.0, $1151 = 0.0, $1152 = 0.0, $1153 = 0.0, $1154 = 0.0, $1155 = 0.0, $1156 = 0.0, $1157 = 0.0;
 var $1158 = 0.0, $1159 = 0.0, $116 = 0, $1160 = 0.0, $1161 = 0.0, $1162 = 0.0, $1163 = 0.0, $1164 = 0.0, $1165 = 0.0, $1166 = 0.0, $1167 = 0.0, $1168 = 0.0, $1169 = 0.0, $117 = 0, $1170 = 0, $1171 = 0.0, $1172 = 0.0, $1173 = 0.0, $1174 = 0.0, $1175 = 0.0;
 var $1176 = 0.0, $1177 = 0.0, $1178 = 0.0, $1179 = 0.0, $118 = 0, $1180 = 0, $1181 = 0.0, $1182 = 0, $1183 = 0.0, $1184 = 0, $1185 = 0.0, $1186 = 0, $1187 = 0.0, $1188 = 0.0, $1189 = 0.0, $119 = 0, $1190 = 0.0, $1191 = 0.0, $1192 = 0.0, $1193 = 0.0;
 var $1194 = 0.0, $1195 = 0.0, $1196 = 0.0, $1197 = 0.0, $1198 = 0.0, $1199 = 0.0, $12 = 0, $120 = 0, $1200 = 0.0, $1201 = 0.0, $1202 = 0.0, $1203 = 0.0, $1204 = 0.0, $1205 = 0.0, $1206 = 0.0, $1207 = 0.0, $1208 = 0.0, $1209 = 0.0, $121 = 0, $1210 = 0.0;
 var $1211 = 0.0, $1212 = 0.0, $1213 = 0, $1214 = 0, $1215 = 0.0, $1216 = 0.0, $1217 = 0.0, $1218 = 0.0, $1219 = 0.0, $122 = 0, $1220 = 0.0, $1221 = 0.0, $1222 = 0.0, $1223 = 0.0, $1224 = 0.0, $1225 = 0.0, $1226 = 0.0, $1227 = 0.0, $1228 = 0.0, $1229 = 0.0;
 var $123 = 0, $1230 = 0.0, $1231 = 0.0, $1232 = 0.0, $1233 = 0.0, $1234 = 0.0, $1235 = 0, $1236 = 0, $1237 = 0.0, $1238 = 0.0, $1239 = 0.0, $124 = 0, $1240 = 0.0, $1241 = 0.0, $1242 = 0.0, $1243 = 0.0, $1244 = 0, $1245 = 0.0, $1246 = 0, $1247 = 0.0;
 var $1248 = 0.0, $1249 = 0.0, $125 = 0, $1250 = 0.0, $1251 = 0.0, $1252 = 0.0, $1253 = 0.0, $1254 = 0.0, $1255 = 0.0, $1256 = 0.0, $1257 = 0.0, $1258 = 0.0, $1259 = 0.0, $126 = 0, $1260 = 0.0, $1261 = 0.0, $1262 = 0.0, $1263 = 0.0, $1264 = 0.0, $1265 = 0.0;
 var $1266 = 0.0, $1267 = 0.0, $1268 = 0.0, $1269 = 0.0, $127 = 0, $1270 = 0.0, $1271 = 0.0, $1272 = 0.0, $1273 = 0.0, $1274 = 0.0, $1275 = 0.0, $1276 = 0.0, $1277 = 0.0, $1278 = 0.0, $1279 = 0.0, $128 = 0, $1280 = 0.0, $1281 = 0.0, $1282 = 0.0, $1283 = 0.0;
 var $1284 = 0.0, $1285 = 0.0, $1286 = 0.0, $1287 = 0.0, $1288 = 0.0, $1289 = 0.0, $129 = 0, $1290 = 0.0, $1291 = 0.0, $1292 = 0.0, $1293 = 0.0, $1294 = 0.0, $1295 = 0.0, $1296 = 0.0, $1297 = 0.0, $1298 = 0.0, $1299 = 0.0, $13 = 0, $130 = 0, $1300 = 0.0;
 var $1301 = 0.0, $1302 = 0.0, $1303 = 0, $1304 = 0.0, $1305 = 0.0, $1306 = 0.0, $1307 = 0.0, $1308 = 0.0, $1309 = 0.0, $131 = 0, $1310 = 0.0, $1311 = 0.0, $1312 = 0.0, $1313 = 0, $1314 = 0.0, $1315 = 0, $1316 = 0.0, $1317 = 0, $1318 = 0.0, $1319 = 0;
 var $132 = 0, $1320 = 0.0, $1321 = 0.0, $1322 = 0.0, $1323 = 0.0, $1324 = 0.0, $1325 = 0.0, $1326 = 0.0, $1327 = 0.0, $1328 = 0.0, $1329 = 0.0, $133 = 0, $1330 = 0.0, $1331 = 0.0, $1332 = 0.0, $1333 = 0, $1334 = 0, $1335 = 0.0, $1336 = 0.0, $1337 = 0.0;
 var $1338 = 0.0, $1339 = 0.0, $134 = 0, $1340 = 0.0, $1341 = 0.0, $1342 = 0.0, $1343 = 0.0, $1344 = 0.0, $1345 = 0.0, $1346 = 0.0, $1347 = 0.0, $1348 = 0.0, $1349 = 0.0, $135 = 0, $1350 = 0.0, $1351 = 0.0, $1352 = 0.0, $1353 = 0.0, $1354 = 0.0, $1355 = 0.0;
 var $1356 = 0.0, $1357 = 0.0, $1358 = 0.0, $1359 = 0.0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0.0, $1363 = 0.0, $1364 = 0.0, $1365 = 0.0, $1366 = 0.0, $1367 = 0.0, $1368 = 0.0, $1369 = 0, $137 = 0, $1370 = 0.0, $1371 = 0, $1372 = 0.0, $1373 = 0.0;
 var $1374 = 0.0, $1375 = 0.0, $1376 = 0.0, $1377 = 0.0, $1378 = 0.0, $1379 = 0.0, $138 = 0, $1380 = 0.0, $1381 = 0.0, $1382 = 0.0, $1383 = 0.0, $1384 = 0.0, $1385 = 0.0, $1386 = 0.0, $1387 = 0.0, $1388 = 0.0, $1389 = 0.0, $139 = 0, $1390 = 0.0, $1391 = 0.0;
 var $1392 = 0.0, $1393 = 0.0, $1394 = 0.0, $1395 = 0.0, $1396 = 0.0, $1397 = 0.0, $1398 = 0.0, $1399 = 0.0, $14 = 0, $140 = 0, $1400 = 0.0, $1401 = 0.0, $1402 = 0.0, $1403 = 0.0, $1404 = 0.0, $1405 = 0.0, $1406 = 0.0, $1407 = 0.0, $1408 = 0.0, $1409 = 0.0;
 var $141 = 0, $1410 = 0.0, $1411 = 0.0, $1412 = 0.0, $1413 = 0.0, $1414 = 0.0, $1415 = 0.0, $1416 = 0.0, $1417 = 0.0, $1418 = 0.0, $1419 = 0.0, $142 = 0, $1420 = 0.0, $1421 = 0.0, $1422 = 0.0, $1423 = 0.0, $1424 = 0.0, $1425 = 0.0, $1426 = 0.0, $1427 = 0.0;
 var $1428 = 0, $1429 = 0.0, $143 = 0, $1430 = 0.0, $1431 = 0.0, $1432 = 0.0, $1433 = 0.0, $1434 = 0.0, $1435 = 0.0, $1436 = 0.0, $1437 = 0.0, $1438 = 0, $1439 = 0.0, $144 = 0, $1440 = 0, $1441 = 0.0, $1442 = 0, $1443 = 0.0, $1444 = 0, $1445 = 0;
 var $1446 = 0.0, $1447 = 0.0, $1448 = 0.0, $1449 = 0.0, $145 = 0, $1450 = 0.0, $1451 = 0.0, $1452 = 0.0, $1453 = 0.0, $1454 = 0.0, $1455 = 0.0, $1456 = 0.0, $1457 = 0.0, $1458 = 0.0, $1459 = 0.0, $146 = 0, $1460 = 0, $1461 = 0.0, $1462 = 0.0, $1463 = 0;
 var $1464 = 0.0, $1465 = 0, $1466 = 0.0, $1467 = 0.0, $1468 = 0.0, $1469 = 0.0, $147 = 0, $1470 = 0.0, $1471 = 0.0, $1472 = 0.0, $1473 = 0.0, $1474 = 0.0, $1475 = 0.0, $1476 = 0.0, $1477 = 0.0, $1478 = 0.0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0.0;
 var $1482 = 0.0, $1483 = 0.0, $1484 = 0.0, $1485 = 0.0, $1486 = 0.0, $1487 = 0.0, $1488 = 0.0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0;
 var $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0.0, $1508 = 0, $1509 = 0.0, $151 = 0, $1510 = 0.0, $1511 = 0.0, $1512 = 0, $1513 = 0.0, $1514 = 0, $1515 = 0.0, $1516 = 0.0, $1517 = 0.0;
 var $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0.0, $1522 = 0, $1523 = 0.0, $1524 = 0, $1525 = 0.0, $1526 = 0.0, $1527 = 0.0, $1528 = 0.0, $1529 = 0.0, $153 = 0, $1530 = 0.0, $1531 = 0.0, $1532 = 0.0, $1533 = 0.0, $1534 = 0.0, $1535 = 0.0;
 var $1536 = 0.0, $1537 = 0.0, $1538 = 0.0, $1539 = 0.0, $154 = 0, $1540 = 0.0, $1541 = 0.0, $1542 = 0.0, $1543 = 0.0, $1544 = 0.0, $1545 = 0.0, $1546 = 0.0, $1547 = 0.0, $1548 = 0.0, $1549 = 0.0, $155 = 0, $1550 = 0.0, $1551 = 0.0, $1552 = 0.0, $1553 = 0.0;
 var $1554 = 0.0, $1555 = 0.0, $1556 = 0.0, $1557 = 0.0, $1558 = 0.0, $1559 = 0.0, $156 = 0, $1560 = 0.0, $1561 = 0.0, $1562 = 0.0, $1563 = 0.0, $1564 = 0, $1565 = 0.0, $1566 = 0.0, $1567 = 0.0, $1568 = 0.0, $1569 = 0, $157 = 0, $1570 = 0.0, $1571 = 0;
 var $1572 = 0.0, $1573 = 0.0, $1574 = 0.0, $1575 = 0.0, $1576 = 0.0, $1577 = 0.0, $1578 = 0.0, $1579 = 0.0, $158 = 0, $1580 = 0.0, $1581 = 0.0, $1582 = 0.0, $1583 = 0.0, $1584 = 0.0, $1585 = 0.0, $1586 = 0.0, $1587 = 0.0, $1588 = 0.0, $1589 = 0.0, $159 = 0;
 var $1590 = 0.0, $1591 = 0.0, $1592 = 0.0, $1593 = 0.0, $1594 = 0.0, $1595 = 0.0, $1596 = 0.0, $1597 = 0.0, $1598 = 0.0, $1599 = 0.0, $16 = 0, $160 = 0, $1600 = 0.0, $1601 = 0.0, $1602 = 0.0, $1603 = 0.0, $1604 = 0.0, $1605 = 0.0, $1606 = 0.0, $1607 = 0.0;
 var $1608 = 0.0, $1609 = 0.0, $161 = 0, $1610 = 0, $1611 = 0.0, $1612 = 0.0, $1613 = 0.0, $1614 = 0.0, $1615 = 0.0, $1616 = 0.0, $1617 = 0.0, $1618 = 0.0, $1619 = 0.0, $162 = 0, $1620 = 0.0, $1621 = 0.0, $1622 = 0.0, $1623 = 0.0, $1624 = 0.0, $1625 = 0.0;
 var $1626 = 0.0, $1627 = 0.0, $1628 = 0.0, $1629 = 0.0, $163 = 0, $1630 = 0.0, $1631 = 0.0, $1632 = 0, $1633 = 0.0, $1634 = 0, $1635 = 0.0, $1636 = 0.0, $1637 = 0.0, $1638 = 0.0, $1639 = 0.0, $164 = 0, $1640 = 0.0, $1641 = 0.0, $1642 = 0.0, $1643 = 0.0;
 var $1644 = 0.0, $1645 = 0.0, $1646 = 0.0, $1647 = 0.0, $1648 = 0.0, $1649 = 0.0, $165 = 0, $1650 = 0.0, $1651 = 0.0, $1652 = 0.0, $1653 = 0.0, $1654 = 0.0, $1655 = 0.0, $1656 = 0.0, $1657 = 0.0, $1658 = 0.0, $1659 = 0.0, $166 = 0, $1660 = 0.0, $1661 = 0.0;
 var $1662 = 0.0, $1663 = 0.0, $1664 = 0.0, $1665 = 0.0, $1666 = 0.0, $1667 = 0.0, $1668 = 0.0, $1669 = 0.0, $167 = 0, $1670 = 0.0, $1671 = 0.0, $1672 = 0.0, $1673 = 0.0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0, $1677 = 0.0, $1678 = 0.0, $1679 = 0.0, $168 = 0;
 var $1680 = 0.0, $1681 = 0.0, $1682 = 0.0, $1683 = 0.0, $1684 = 0, $1685 = 0.0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0.0, $169 = 0, $1690 = 0.0, $1691 = 0.0, $1692 = 0.0, $1693 = 0.0, $1694 = 0.0, $1695 = 0.0, $1696 = 0.0, $1697 = 0.0, $1698 = 0.0;
 var $1699 = 0.0, $17 = 0, $170 = 0, $1700 = 0.0, $1701 = 0.0, $1702 = 0.0, $1703 = 0.0, $1704 = 0.0, $1705 = 0.0, $1706 = 0.0, $1707 = 0.0, $1708 = 0.0, $1709 = 0.0, $171 = 0, $1710 = 0, $1711 = 0.0, $1712 = 0, $1713 = 0.0, $1714 = 0.0, $1715 = 0.0;
 var $1716 = 0.0, $1717 = 0.0, $1718 = 0.0, $1719 = 0.0, $172 = 0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0.0, $1724 = 0.0, $1725 = 0.0, $1726 = 0.0, $1727 = 0.0, $1728 = 0.0, $1729 = 0.0, $173 = 0, $1730 = 0.0, $1731 = 0.0, $1732 = 0.0, $1733 = 0.0;
 var $1734 = 0.0, $1735 = 0.0, $1736 = 0.0, $1737 = 0.0, $1738 = 0.0, $1739 = 0.0, $174 = 0, $1740 = 0.0, $1741 = 0.0, $1742 = 0.0, $1743 = 0.0, $1744 = 0.0, $1745 = 0, $1746 = 0, $1747 = 0.0, $1748 = 0.0, $1749 = 0.0, $175 = 0, $1750 = 0.0, $1751 = 0.0;
 var $1752 = 0.0, $1753 = 0.0, $1754 = 0.0, $1755 = 0.0, $1756 = 0.0, $1757 = 0.0, $1758 = 0.0, $1759 = 0.0, $176 = 0, $1760 = 0.0, $1761 = 0.0, $1762 = 0.0, $1763 = 0.0, $1764 = 0.0, $1765 = 0.0, $1766 = 0.0, $1767 = 0.0, $1768 = 0.0, $1769 = 0.0, $177 = 0;
 var $1770 = 0.0, $1771 = 0.0, $1772 = 0.0, $1773 = 0, $1774 = 0, $1775 = 0.0, $1776 = 0.0, $1777 = 0.0, $1778 = 0.0, $1779 = 0.0, $178 = 0, $1780 = 0.0, $1781 = 0.0, $1782 = 0, $1783 = 0.0, $1784 = 0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0.0;
 var $1789 = 0.0, $179 = 0, $1790 = 0.0, $1791 = 0.0, $1792 = 0.0, $1793 = 0.0, $1794 = 0.0, $1795 = 0.0, $1796 = 0.0, $1797 = 0.0, $1798 = 0.0, $1799 = 0.0, $18 = 0, $180 = 0, $1800 = 0.0, $1801 = 0.0, $1802 = 0.0, $1803 = 0.0, $1804 = 0.0, $1805 = 0.0;
 var $1806 = 0.0, $1807 = 0.0, $1808 = 0.0, $1809 = 0.0, $181 = 0, $1810 = 0.0, $1811 = 0.0, $1812 = 0.0, $1813 = 0.0, $1814 = 0.0, $1815 = 0.0, $1816 = 0.0, $1817 = 0.0, $1818 = 0.0, $1819 = 0.0, $182 = 0, $1820 = 0.0, $1821 = 0.0, $1822 = 0.0, $1823 = 0.0;
 var $1824 = 0.0, $1825 = 0.0, $1826 = 0.0, $1827 = 0.0, $1828 = 0.0, $1829 = 0.0, $183 = 0, $1830 = 0.0, $1831 = 0.0, $1832 = 0.0, $1833 = 0.0, $1834 = 0.0, $1835 = 0.0, $1836 = 0.0, $1837 = 0.0, $1838 = 0.0, $1839 = 0.0, $184 = 0, $1840 = 0.0, $1841 = 0.0;
 var $1842 = 0, $1843 = 0.0, $1844 = 0.0, $1845 = 0.0, $1846 = 0.0, $1847 = 0.0, $1848 = 0.0, $1849 = 0.0, $185 = 0, $1850 = 0.0, $1851 = 0.0, $1852 = 0, $1853 = 0.0, $1854 = 0, $1855 = 0.0, $1856 = 0, $1857 = 0.0, $1858 = 0, $1859 = 0.0, $186 = 0;
 var $1860 = 0.0, $1861 = 0.0, $1862 = 0.0, $1863 = 0.0, $1864 = 0.0, $1865 = 0.0, $1866 = 0.0, $1867 = 0.0, $1868 = 0.0, $1869 = 0.0, $187 = 0, $1870 = 0.0, $1871 = 0.0, $1872 = 0.0, $1873 = 0.0, $1874 = 0.0, $1875 = 0.0, $1876 = 0.0, $1877 = 0.0, $1878 = 0.0;
 var $1879 = 0.0, $188 = 0, $1880 = 0.0, $1881 = 0.0, $1882 = 0.0, $1883 = 0.0, $1884 = 0.0, $1885 = 0.0, $1886 = 0.0, $1887 = 0, $1888 = 0, $1889 = 0.0, $189 = 0, $1890 = 0.0, $1891 = 0.0, $1892 = 0.0, $1893 = 0.0, $1894 = 0.0, $1895 = 0.0, $1896 = 0.0;
 var $1897 = 0.0, $1898 = 0.0, $1899 = 0.0, $19 = 0, $190 = 0, $1900 = 0.0, $1901 = 0.0, $1902 = 0.0, $1903 = 0.0, $1904 = 0.0, $1905 = 0.0, $1906 = 0, $1907 = 0, $1908 = 0.0, $1909 = 0.0, $191 = 0, $1910 = 0.0, $1911 = 0.0, $1912 = 0.0, $1913 = 0.0;
 var $1914 = 0.0, $1915 = 0, $1916 = 0.0, $1917 = 0, $1918 = 0.0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $1921 = 0.0, $1922 = 0.0, $1923 = 0.0, $1924 = 0.0, $1925 = 0.0, $1926 = 0.0, $1927 = 0.0, $1928 = 0.0, $1929 = 0.0, $193 = 0, $1930 = 0.0, $1931 = 0.0;
 var $1932 = 0.0, $1933 = 0.0, $1934 = 0.0, $1935 = 0.0, $1936 = 0.0, $1937 = 0.0, $1938 = 0.0, $1939 = 0.0, $194 = 0, $1940 = 0.0, $1941 = 0.0, $1942 = 0.0, $1943 = 0.0, $1944 = 0.0, $1945 = 0.0, $1946 = 0.0, $1947 = 0.0, $1948 = 0.0, $1949 = 0.0, $195 = 0;
 var $1950 = 0.0, $1951 = 0.0, $1952 = 0.0, $1953 = 0.0, $1954 = 0.0, $1955 = 0.0, $1956 = 0.0, $1957 = 0.0, $1958 = 0.0, $1959 = 0.0, $196 = 0, $1960 = 0.0, $1961 = 0.0, $1962 = 0.0, $1963 = 0.0, $1964 = 0.0, $1965 = 0.0, $1966 = 0.0, $1967 = 0.0, $1968 = 0.0;
 var $1969 = 0.0, $197 = 0, $1970 = 0.0, $1971 = 0.0, $1972 = 0.0, $1973 = 0.0, $1974 = 0.0, $1975 = 0, $1976 = 0.0, $1977 = 0.0, $1978 = 0.0, $1979 = 0.0, $198 = 0, $1980 = 0.0, $1981 = 0.0, $1982 = 0.0, $1983 = 0.0, $1984 = 0.0, $1985 = 0, $1986 = 0.0;
 var $1987 = 0, $1988 = 0.0, $1989 = 0, $199 = 0, $1990 = 0.0, $1991 = 0, $1992 = 0.0, $1993 = 0.0, $1994 = 0.0, $1995 = 0.0, $1996 = 0.0, $1997 = 0.0, $1998 = 0.0, $1999 = 0.0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0.0, $2001 = 0.0, $2002 = 0.0;
 var $2003 = 0.0, $2004 = 0.0, $2005 = 0.0, $2006 = 0.0, $2007 = 0.0, $2008 = 0.0, $2009 = 0.0, $201 = 0, $2010 = 0.0, $2011 = 0.0, $2012 = 0.0, $2013 = 0.0, $2014 = 0.0, $2015 = 0.0, $2016 = 0.0, $2017 = 0.0, $2018 = 0.0, $2019 = 0.0, $202 = 0, $2020 = 0.0;
 var $2021 = 0.0, $2022 = 0.0, $2023 = 0.0, $2024 = 0.0, $2025 = 0.0, $2026 = 0.0, $2027 = 0, $2028 = 0, $2029 = 0.0, $203 = 0, $2030 = 0.0, $2031 = 0.0, $2032 = 0.0, $2033 = 0, $2034 = 0, $2035 = 0.0, $2036 = 0.0, $2037 = 0.0, $2038 = 0.0, $2039 = 0.0;
 var $204 = 0, $2040 = 0.0, $2041 = 0.0, $2042 = 0, $2043 = 0.0, $2044 = 0, $2045 = 0.0, $2046 = 0.0, $2047 = 0.0, $2048 = 0.0, $2049 = 0.0, $205 = 0, $2050 = 0.0, $2051 = 0.0, $2052 = 0.0, $2053 = 0.0, $2054 = 0.0, $2055 = 0.0, $2056 = 0.0, $2057 = 0.0;
 var $2058 = 0.0, $2059 = 0.0, $206 = 0, $2060 = 0.0, $2061 = 0.0, $2062 = 0.0, $2063 = 0.0, $2064 = 0.0, $2065 = 0.0, $2066 = 0.0, $2067 = 0.0, $2068 = 0.0, $2069 = 0.0, $207 = 0, $2070 = 0.0, $2071 = 0.0, $2072 = 0.0, $2073 = 0.0, $2074 = 0.0, $2075 = 0.0;
 var $2076 = 0.0, $2077 = 0.0, $2078 = 0.0, $2079 = 0.0, $208 = 0, $2080 = 0.0, $2081 = 0.0, $2082 = 0.0, $2083 = 0.0, $2084 = 0.0, $2085 = 0.0, $2086 = 0.0, $2087 = 0.0, $2088 = 0.0, $2089 = 0.0, $209 = 0, $2090 = 0.0, $2091 = 0.0, $2092 = 0.0, $2093 = 0.0;
 var $2094 = 0.0, $2095 = 0.0, $2096 = 0.0, $2097 = 0.0, $2098 = 0.0, $2099 = 0.0, $21 = 0, $210 = 0, $2100 = 0.0, $2101 = 0.0, $2102 = 0, $2103 = 0.0, $2104 = 0.0, $2105 = 0.0, $2106 = 0.0, $2107 = 0.0, $2108 = 0.0, $2109 = 0.0, $211 = 0, $2110 = 0.0;
 var $2111 = 0.0, $2112 = 0, $2113 = 0.0, $2114 = 0, $2115 = 0.0, $2116 = 0, $2117 = 0.0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0.0, $2121 = 0, $2122 = 0, $2123 = 0.0, $2124 = 0.0, $2125 = 0.0, $2126 = 0.0, $2127 = 0.0, $2128 = 0.0, $2129 = 0.0;
 var $213 = 0, $2130 = 0.0, $2131 = 0.0, $2132 = 0.0, $2133 = 0.0, $2134 = 0.0, $2135 = 0.0, $2136 = 0, $2137 = 0.0, $2138 = 0.0, $2139 = 0.0, $214 = 0, $2140 = 0.0, $2141 = 0.0, $2142 = 0.0, $2143 = 0.0, $2144 = 0.0, $2145 = 0.0, $2146 = 0.0, $2147 = 0;
 var $2148 = 0.0, $2149 = 0.0, $215 = 0, $2150 = 0.0, $2151 = 0.0, $2152 = 0.0, $2153 = 0, $2154 = 0.0, $2155 = 0.0, $2156 = 0.0, $2157 = 0.0, $2158 = 0.0, $2159 = 0.0, $216 = 0, $2160 = 0.0, $2161 = 0.0, $2162 = 0.0, $2163 = 0.0, $2164 = 0.0, $2165 = 0.0;
 var $2166 = 0.0, $2167 = 0.0, $2168 = 0.0, $2169 = 0.0, $217 = 0, $2170 = 0.0, $2171 = 0.0, $2172 = 0.0, $2173 = 0.0, $2174 = 0.0, $2175 = 0.0, $2176 = 0.0, $2177 = 0.0, $2178 = 0, $2179 = 0.0, $218 = 0, $2180 = 0, $2181 = 0.0, $2182 = 0.0, $2183 = 0.0;
 var $2184 = 0.0, $2185 = 0.0, $2186 = 0.0, $2187 = 0.0, $2188 = 0.0, $2189 = 0.0, $219 = 0, $2190 = 0.0, $2191 = 0.0, $2192 = 0.0, $2193 = 0.0, $2194 = 0.0, $2195 = 0.0, $2196 = 0.0, $2197 = 0, $2198 = 0.0, $2199 = 0.0, $22 = 0, $220 = 0, $2200 = 0.0;
 var $2201 = 0.0, $2202 = 0.0, $2203 = 0.0, $2204 = 0.0, $2205 = 0.0, $2206 = 0.0, $2207 = 0.0, $2208 = 0.0, $2209 = 0.0, $221 = 0, $2210 = 0, $2211 = 0.0, $2212 = 0.0, $2213 = 0.0, $2214 = 0.0, $2215 = 0.0, $2216 = 0.0, $2217 = 0.0, $2218 = 0.0, $2219 = 0.0;
 var $222 = 0, $2220 = 0.0, $2221 = 0.0, $2222 = 0.0, $2223 = 0.0, $2224 = 0.0, $2225 = 0.0, $2226 = 0.0, $2227 = 0.0, $2228 = 0.0, $2229 = 0.0, $223 = 0, $2230 = 0.0, $2231 = 0.0, $2232 = 0.0, $2233 = 0.0, $2234 = 0.0, $2235 = 0.0, $2236 = 0.0, $2237 = 0.0;
 var $2238 = 0.0, $2239 = 0.0, $224 = 0, $2240 = 0.0, $2241 = 0.0, $2242 = 0.0, $2243 = 0.0, $2244 = 0.0, $2245 = 0.0, $2246 = 0.0, $2247 = 0.0, $2248 = 0.0, $2249 = 0.0, $225 = 0, $2250 = 0.0, $2251 = 0.0, $2252 = 0.0, $2253 = 0, $2254 = 0.0, $2255 = 0.0;
 var $2256 = 0.0, $2257 = 0.0, $2258 = 0.0, $2259 = 0.0, $226 = 0, $2260 = 0.0, $2261 = 0.0, $2262 = 0.0, $2263 = 0.0, $2264 = 0.0, $2265 = 0.0, $2266 = 0.0, $2267 = 0.0, $2268 = 0.0, $2269 = 0, $227 = 0, $2270 = 0.0, $2271 = 0, $2272 = 0.0, $2273 = 0.0;
 var $2274 = 0.0, $2275 = 0.0, $2276 = 0.0, $2277 = 0.0, $2278 = 0.0, $2279 = 0.0, $228 = 0, $2280 = 0.0, $2281 = 0.0, $2282 = 0.0, $2283 = 0.0, $2284 = 0.0, $2285 = 0.0, $2286 = 0.0, $2287 = 0.0, $2288 = 0.0, $2289 = 0.0, $229 = 0, $2290 = 0.0, $2291 = 0.0;
 var $2292 = 0.0, $2293 = 0.0, $2294 = 0.0, $2295 = 0.0, $2296 = 0.0, $2297 = 0.0, $2298 = 0.0, $2299 = 0.0, $23 = 0, $230 = 0, $2300 = 0.0, $2301 = 0.0, $2302 = 0.0, $2303 = 0.0, $2304 = 0.0, $2305 = 0.0, $2306 = 0.0, $2307 = 0.0, $2308 = 0.0, $2309 = 0.0;
 var $231 = 0, $2310 = 0.0, $2311 = 0.0, $2312 = 0.0, $2313 = 0.0, $2314 = 0.0, $2315 = 0.0, $2316 = 0.0, $2317 = 0.0, $2318 = 0.0, $2319 = 0.0, $232 = 0, $2320 = 0.0, $2321 = 0, $2322 = 0.0, $2323 = 0.0, $2324 = 0.0, $2325 = 0.0, $2326 = 0.0, $2327 = 0.0;
 var $2328 = 0.0, $2329 = 0.0, $233 = 0, $2330 = 0.0, $2331 = 0, $2332 = 0.0, $2333 = 0, $2334 = 0.0, $2335 = 0.0, $2336 = 0.0, $2337 = 0.0, $2338 = 0.0, $2339 = 0.0, $234 = 0, $2340 = 0.0, $2341 = 0.0, $2342 = 0.0, $2343 = 0.0, $2344 = 0.0, $2345 = 0.0;
 var $2346 = 0.0, $2347 = 0.0, $2348 = 0.0, $2349 = 0.0, $235 = 0, $2350 = 0.0, $2351 = 0.0, $2352 = 0.0, $2353 = 0.0, $2354 = 0.0, $2355 = 0.0, $2356 = 0.0, $2357 = 0, $2358 = 0.0, $2359 = 0.0, $236 = 0, $2360 = 0.0, $2361 = 0.0, $2362 = 0.0, $2363 = 0.0;
 var $2364 = 0.0, $2365 = 0.0, $2366 = 0.0, $2367 = 0.0, $2368 = 0.0, $2369 = 0, $237 = 0, $2370 = 0.0, $2371 = 0.0, $2372 = 0.0, $2373 = 0.0, $2374 = 0.0, $2375 = 0.0, $2376 = 0.0, $2377 = 0.0, $2378 = 0.0, $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0.0;
 var $2382 = 0.0, $2383 = 0.0, $2384 = 0.0, $2385 = 0.0, $2386 = 0.0, $2387 = 0.0, $2388 = 0.0, $2389 = 0.0, $239 = 0, $2390 = 0.0, $2391 = 0.0, $2392 = 0.0, $2393 = 0.0, $2394 = 0, $2395 = 0.0, $2396 = 0.0, $2397 = 0.0, $2398 = 0.0, $2399 = 0.0, $24 = 0;
 var $240 = 0, $2400 = 0.0, $2401 = 0.0, $2402 = 0, $2403 = 0.0, $2404 = 0, $2405 = 0.0, $2406 = 0.0, $2407 = 0.0, $2408 = 0.0, $2409 = 0.0, $241 = 0, $2410 = 0.0, $2411 = 0.0, $2412 = 0.0, $2413 = 0.0, $2414 = 0.0, $2415 = 0.0, $2416 = 0.0, $2417 = 0.0;
 var $2418 = 0.0, $2419 = 0.0, $242 = 0, $2420 = 0.0, $2421 = 0.0, $2422 = 0.0, $2423 = 0.0, $2424 = 0.0, $2425 = 0.0, $2426 = 0.0, $2427 = 0.0, $2428 = 0.0, $2429 = 0.0, $243 = 0, $2430 = 0.0, $2431 = 0.0, $2432 = 0.0, $2433 = 0.0, $2434 = 0.0, $2435 = 0.0;
 var $2436 = 0.0, $2437 = 0.0, $2438 = 0.0, $2439 = 0.0, $244 = 0, $2440 = 0.0, $2441 = 0.0, $2442 = 0.0, $2443 = 0.0, $2444 = 0.0, $2445 = 0.0, $2446 = 0.0, $2447 = 0.0, $2448 = 0.0, $2449 = 0.0, $245 = 0, $2450 = 0.0, $2451 = 0.0, $2452 = 0.0, $2453 = 0.0;
 var $2454 = 0.0, $2455 = 0.0, $2456 = 0.0, $2457 = 0.0, $2458 = 0, $2459 = 0.0, $246 = 0, $2460 = 0.0, $2461 = 0.0, $2462 = 0.0, $2463 = 0.0, $2464 = 0.0, $2465 = 0.0, $2466 = 0.0, $2467 = 0.0, $2468 = 0.0, $2469 = 0.0, $247 = 0, $2470 = 0.0, $2471 = 0.0;
 var $2472 = 0.0, $2473 = 0.0, $2474 = 0.0, $2475 = 0.0, $2476 = 0.0, $2477 = 0.0, $2478 = 0.0, $2479 = 0.0, $248 = 0, $2480 = 0.0, $2481 = 0.0, $2482 = 0.0, $2483 = 0.0, $2484 = 0.0, $2485 = 0.0, $2486 = 0.0, $2487 = 0.0, $2488 = 0.0, $2489 = 0.0, $249 = 0;
 var $2490 = 0.0, $2491 = 0.0, $2492 = 0.0, $2493 = 0.0, $2494 = 0.0, $2495 = 0.0, $2496 = 0.0, $2497 = 0.0, $2498 = 0.0, $2499 = 0.0, $25 = 0, $250 = 0, $2500 = 0.0, $2501 = 0.0, $2502 = 0.0, $2503 = 0.0, $2504 = 0, $2505 = 0.0, $2506 = 0.0, $2507 = 0.0;
 var $2508 = 0.0, $2509 = 0.0, $251 = 0, $2510 = 0.0, $2511 = 0.0, $2512 = 0, $2513 = 0.0, $2514 = 0, $2515 = 0.0, $2516 = 0.0, $2517 = 0.0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0.0, $2521 = 0.0, $2522 = 0.0, $2523 = 0.0, $2524 = 0.0, $2525 = 0.0;
 var $2526 = 0.0, $2527 = 0.0, $2528 = 0.0, $2529 = 0, $253 = 0, $2530 = 0.0, $2531 = 0, $2532 = 0, $2533 = 0.0, $2534 = 0.0, $2535 = 0, $2536 = 0, $2537 = 0.0, $2538 = 0.0, $2539 = 0.0, $254 = 0, $2540 = 0.0, $2541 = 0.0, $2542 = 0.0, $2543 = 0.0;
 var $2544 = 0.0, $2545 = 0.0, $2546 = 0.0, $2547 = 0.0, $2548 = 0.0, $2549 = 0.0, $255 = 0, $2550 = 0.0, $2551 = 0.0, $2552 = 0.0, $2553 = 0.0, $2554 = 0.0, $2555 = 0.0, $2556 = 0, $2557 = 0, $2558 = 0.0, $2559 = 0.0, $256 = 0, $2560 = 0.0, $2561 = 0;
 var $2562 = 0.0, $2563 = 0.0, $2564 = 0, $2565 = 0, $2566 = 0.0, $2567 = 0, $2568 = 0, $2569 = 0.0, $257 = 0, $2570 = 0.0, $2571 = 0.0, $2572 = 0.0, $2573 = 0.0, $2574 = 0.0, $2575 = 0.0, $2576 = 0.0, $2577 = 0.0, $2578 = 0.0, $2579 = 0.0, $258 = 0;
 var $2580 = 0.0, $2581 = 0.0, $2582 = 0.0, $2583 = 0.0, $2584 = 0.0, $2585 = 0.0, $2586 = 0.0, $2587 = 0.0, $2588 = 0.0, $2589 = 0.0, $259 = 0, $2590 = 0.0, $2591 = 0.0, $2592 = 0, $2593 = 0.0, $2594 = 0, $2595 = 0.0, $2596 = 0, $2597 = 0.0, $2598 = 0.0;
 var $2599 = 0.0, $26 = 0, $260 = 0, $2600 = 0.0, $2601 = 0.0, $2602 = 0.0, $2603 = 0, $2604 = 0, $2605 = 0.0, $2606 = 0.0, $2607 = 0.0, $2608 = 0.0, $2609 = 0.0, $261 = 0, $2610 = 0.0, $2611 = 0, $2612 = 0, $2613 = 0.0, $2614 = 0.0, $2615 = 0.0;
 var $2616 = 0.0, $2617 = 0.0, $2618 = 0.0, $2619 = 0.0, $262 = 0, $2620 = 0.0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0;
 var $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0, $2639 = 0.0, $264 = 0, $2640 = 0, $2641 = 0.0, $2642 = 0.0, $2643 = 0.0, $2644 = 0, $2645 = 0.0, $2646 = 0, $2647 = 0.0, $2648 = 0.0, $2649 = 0.0, $265 = 0, $2650 = 0, $2651 = 0;
 var $2652 = 0, $2653 = 0.0, $2654 = 0, $2655 = 0.0, $2656 = 0, $2657 = 0.0, $2658 = 0.0, $2659 = 0.0, $266 = 0, $2660 = 0.0, $2661 = 0.0, $2662 = 0.0, $2663 = 0.0, $2664 = 0.0, $2665 = 0.0, $2666 = 0.0, $2667 = 0.0, $2668 = 0.0, $2669 = 0.0, $267 = 0;
 var $2670 = 0.0, $2671 = 0.0, $2672 = 0.0, $2673 = 0.0, $2674 = 0.0, $2675 = 0.0, $2676 = 0.0, $2677 = 0.0, $2678 = 0.0, $2679 = 0.0, $268 = 0, $2680 = 0.0, $2681 = 0.0, $2682 = 0.0, $2683 = 0.0, $2684 = 0.0, $2685 = 0.0, $2686 = 0, $2687 = 0.0, $2688 = 0.0;
 var $2689 = 0.0, $269 = 0, $2690 = 0.0, $2691 = 0.0, $2692 = 0.0, $2693 = 0, $2694 = 0.0, $2695 = 0, $2696 = 0.0, $2697 = 0, $2698 = 0, $2699 = 0.0, $27 = 0, $270 = 0, $2700 = 0.0, $2701 = 0.0, $2702 = 0.0, $2703 = 0.0, $2704 = 0.0, $2705 = 0.0;
 var $2706 = 0.0, $2707 = 0, $2708 = 0.0, $2709 = 0, $271 = 0, $2710 = 0.0, $2711 = 0.0, $2712 = 0, $2713 = 0, $2714 = 0.0, $2715 = 0.0, $2716 = 0.0, $2717 = 0.0, $2718 = 0.0, $2719 = 0.0, $272 = 0, $2720 = 0.0, $2721 = 0.0, $2722 = 0.0, $2723 = 0;
 var $2724 = 0.0, $2725 = 0.0, $2726 = 0.0, $2727 = 0, $2728 = 0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0.0, $2732 = 0.0, $2733 = 0.0, $2734 = 0.0, $2735 = 0.0, $2736 = 0.0, $2737 = 0.0, $2738 = 0.0, $2739 = 0.0, $274 = 0, $2740 = 0.0, $2741 = 0.0;
 var $2742 = 0.0, $2743 = 0.0, $2744 = 0.0, $2745 = 0.0, $2746 = 0.0, $2747 = 0.0, $2748 = 0.0, $2749 = 0.0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0.0, $2753 = 0.0, $2754 = 0.0, $2755 = 0, $2756 = 0.0, $2757 = 0.0, $2758 = 0, $2759 = 0, $276 = 0;
 var $2760 = 0.0, $2761 = 0, $2762 = 0, $2763 = 0.0, $2764 = 0.0, $2765 = 0.0, $2766 = 0.0, $2767 = 0.0, $2768 = 0.0, $2769 = 0.0, $277 = 0, $2770 = 0.0, $2771 = 0.0, $2772 = 0.0, $2773 = 0.0, $2774 = 0.0, $2775 = 0.0, $2776 = 0.0, $2777 = 0.0, $2778 = 0.0;
 var $2779 = 0.0, $278 = 0, $2780 = 0.0, $2781 = 0.0, $2782 = 0.0, $2783 = 0.0, $2784 = 0.0, $2785 = 0.0, $2786 = 0.0, $2787 = 0, $2788 = 0.0, $2789 = 0, $279 = 0, $2790 = 0.0, $2791 = 0, $2792 = 0.0, $2793 = 0.0, $2794 = 0.0, $2795 = 0.0, $2796 = 0.0;
 var $2797 = 0.0, $2798 = 0, $2799 = 0, $28 = 0, $280 = 0, $2800 = 0.0, $2801 = 0.0, $2802 = 0.0, $2803 = 0.0, $2804 = 0.0, $2805 = 0.0, $2806 = 0, $2807 = 0, $2808 = 0.0, $2809 = 0.0, $281 = 0, $2810 = 0.0, $2811 = 0.0, $2812 = 0.0, $2813 = 0.0;
 var $2814 = 0.0, $2815 = 0.0, $2816 = 0, $2817 = 0, $2818 = 0, $2819 = 0, $282 = 0, $2820 = 0, $2821 = 0, $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0, $2826 = 0, $2827 = 0, $2828 = 0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0;
 var $2832 = 0, $2833 = 0, $2834 = 0.0, $2835 = 0, $2836 = 0.0, $2837 = 0.0, $2838 = 0.0, $2839 = 0, $284 = 0, $2840 = 0.0, $2841 = 0, $2842 = 0.0, $2843 = 0.0, $2844 = 0.0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0.0, $2849 = 0, $285 = 0;
 var $2850 = 0.0, $2851 = 0, $2852 = 0.0, $2853 = 0.0, $2854 = 0.0, $2855 = 0.0, $2856 = 0.0, $2857 = 0.0, $2858 = 0.0, $2859 = 0.0, $286 = 0, $2860 = 0.0, $2861 = 0.0, $2862 = 0.0, $2863 = 0.0, $2864 = 0.0, $2865 = 0.0, $2866 = 0.0, $2867 = 0.0, $2868 = 0.0;
 var $2869 = 0.0, $287 = 0, $2870 = 0.0, $2871 = 0.0, $2872 = 0.0, $2873 = 0.0, $2874 = 0.0, $2875 = 0.0, $2876 = 0.0, $2877 = 0.0, $2878 = 0.0, $2879 = 0.0, $288 = 0, $2880 = 0.0, $2881 = 0.0, $2882 = 0, $2883 = 0.0, $2884 = 0.0, $2885 = 0.0, $2886 = 0.0;
 var $2887 = 0.0, $2888 = 0.0, $2889 = 0, $289 = 0, $2890 = 0.0, $2891 = 0, $2892 = 0.0, $2893 = 0, $2894 = 0, $2895 = 0.0, $2896 = 0.0, $2897 = 0.0, $2898 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0.0, $2901 = 0.0, $2902 = 0.0, $2903 = 0.0;
 var $2904 = 0.0, $2905 = 0.0, $2906 = 0.0, $2907 = 0.0, $2908 = 0.0, $2909 = 0.0, $291 = 0, $2910 = 0.0, $2911 = 0.0, $2912 = 0, $2913 = 0, $2914 = 0.0, $2915 = 0.0, $2916 = 0.0, $2917 = 0.0, $2918 = 0.0, $2919 = 0.0, $292 = 0, $2920 = 0.0, $2921 = 0.0;
 var $2922 = 0, $2923 = 0, $2924 = 0, $2925 = 0, $2926 = 0, $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2934 = 0, $2935 = 0, $2936 = 0, $2937 = 0, $2938 = 0, $2939 = 0, $294 = 0;
 var $2940 = 0.0, $2941 = 0, $2942 = 0.0, $2943 = 0.0, $2944 = 0.0, $2945 = 0, $2946 = 0.0, $2947 = 0, $2948 = 0.0, $2949 = 0.0, $295 = 0, $2950 = 0.0, $2951 = 0, $2952 = 0, $2953 = 0, $2954 = 0.0, $2955 = 0, $2956 = 0.0, $2957 = 0, $2958 = 0.0;
 var $2959 = 0.0, $296 = 0, $2960 = 0.0, $2961 = 0.0, $2962 = 0.0, $2963 = 0.0, $2964 = 0.0, $2965 = 0.0, $2966 = 0.0, $2967 = 0.0, $2968 = 0.0, $2969 = 0.0, $297 = 0, $2970 = 0.0, $2971 = 0.0, $2972 = 0.0, $2973 = 0.0, $2974 = 0.0, $2975 = 0.0, $2976 = 0.0;
 var $2977 = 0.0, $2978 = 0.0, $2979 = 0.0, $298 = 0, $2980 = 0.0, $2981 = 0.0, $2982 = 0.0, $2983 = 0.0, $2984 = 0.0, $2985 = 0.0, $2986 = 0.0, $2987 = 0.0, $2988 = 0.0, $2989 = 0.0, $299 = 0, $2990 = 0, $2991 = 0.0, $2992 = 0.0, $2993 = 0.0, $2994 = 0.0;
 var $2995 = 0.0, $2996 = 0.0, $2997 = 0, $2998 = 0.0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0.0, $3001 = 0, $3002 = 0, $3003 = 0.0, $3004 = 0.0, $3005 = 0.0, $3006 = 0.0, $3007 = 0.0, $3008 = 0.0, $3009 = 0.0, $301 = 0, $3010 = 0.0;
 var $3011 = 0, $3012 = 0, $3013 = 0.0, $3014 = 0.0, $3015 = 0.0, $3016 = 0.0, $3017 = 0.0, $3018 = 0.0, $3019 = 0, $302 = 0, $3020 = 0, $3021 = 0.0, $3022 = 0.0, $3023 = 0.0, $3024 = 0.0, $3025 = 0.0, $3026 = 0.0, $3027 = 0.0, $3028 = 0.0, $3029 = 0;
 var $303 = 0, $3030 = 0, $3031 = 0, $3032 = 0, $3033 = 0, $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0, $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0.0;
 var $3048 = 0, $3049 = 0.0, $305 = 0.0, $3050 = 0.0, $3051 = 0.0, $3052 = 0, $3053 = 0.0, $3054 = 0, $3055 = 0.0, $3056 = 0.0, $3057 = 0.0, $3058 = 0, $3059 = 0, $306 = 0.0, $3060 = 0, $3061 = 0.0, $3062 = 0, $3063 = 0.0, $3064 = 0, $3065 = 0.0;
 var $3066 = 0.0, $3067 = 0.0, $3068 = 0.0, $3069 = 0.0, $307 = 0.0, $3070 = 0.0, $3071 = 0.0, $3072 = 0.0, $3073 = 0.0, $3074 = 0.0, $3075 = 0.0, $3076 = 0.0, $3077 = 0.0, $3078 = 0.0, $3079 = 0.0, $308 = 0.0, $3080 = 0.0, $3081 = 0.0, $3082 = 0.0, $3083 = 0.0;
 var $3084 = 0.0, $3085 = 0.0, $3086 = 0.0, $3087 = 0.0, $3088 = 0.0, $3089 = 0.0, $309 = 0.0, $3090 = 0.0, $3091 = 0.0, $3092 = 0.0, $3093 = 0.0, $3094 = 0.0, $3095 = 0.0, $3096 = 0, $3097 = 0.0, $3098 = 0.0, $3099 = 0.0, $31 = 0, $310 = 0.0, $3100 = 0.0;
 var $3101 = 0.0, $3102 = 0.0, $3103 = 0, $3104 = 0.0, $3105 = 0, $3106 = 0.0, $3107 = 0, $3108 = 0, $3109 = 0.0, $311 = 0.0, $3110 = 0.0, $3111 = 0.0, $3112 = 0.0, $3113 = 0.0, $3114 = 0.0, $3115 = 0.0, $3116 = 0.0, $3117 = 0.0, $3118 = 0.0, $3119 = 0.0;
 var $312 = 0.0, $3120 = 0.0, $3121 = 0.0, $3122 = 0.0, $3123 = 0.0, $3124 = 0.0, $3125 = 0.0, $3126 = 0.0, $3127 = 0.0, $3128 = 0.0, $3129 = 0.0, $313 = 0.0, $3130 = 0.0, $3131 = 0.0, $3132 = 0.0, $3133 = 0.0, $3134 = 0.0, $3135 = 0.0, $3136 = 0.0, $3137 = 0.0;
 var $3138 = 0.0, $3139 = 0, $314 = 0.0, $3140 = 0.0, $3141 = 0.0, $3142 = 0.0, $3143 = 0.0, $3144 = 0, $3145 = 0.0, $3146 = 0, $3147 = 0.0, $3148 = 0, $3149 = 0.0, $315 = 0.0, $3150 = 0.0, $3151 = 0.0, $3152 = 0.0, $3153 = 0.0, $3154 = 0.0, $3155 = 0.0;
 var $3156 = 0.0, $3157 = 0.0, $3158 = 0.0, $3159 = 0.0, $316 = 0.0, $3160 = 0.0, $3161 = 0.0, $3162 = 0.0, $3163 = 0.0, $3164 = 0.0, $3165 = 0.0, $3166 = 0.0, $3167 = 0.0, $3168 = 0.0, $3169 = 0.0, $317 = 0.0, $3170 = 0.0, $3171 = 0.0, $3172 = 0.0, $3173 = 0.0;
 var $3174 = 0.0, $3175 = 0.0, $3176 = 0.0, $3177 = 0.0, $3178 = 0.0, $3179 = 0.0, $318 = 0.0, $3180 = 0.0, $3181 = 0.0, $3182 = 0.0, $3183 = 0.0, $3184 = 0.0, $3185 = 0.0, $3186 = 0.0, $3187 = 0.0, $3188 = 0.0, $3189 = 0.0, $319 = 0.0, $3190 = 0.0, $3191 = 0.0;
 var $3192 = 0.0, $3193 = 0.0, $3194 = 0.0, $3195 = 0.0, $3196 = 0.0, $3197 = 0.0, $3198 = 0.0, $3199 = 0.0, $32 = 0, $320 = 0.0, $3200 = 0.0, $3201 = 0.0, $3202 = 0, $3203 = 0.0, $3204 = 0.0, $3205 = 0.0, $3206 = 0.0, $3207 = 0.0, $3208 = 0.0, $3209 = 0.0;
 var $321 = 0.0, $3210 = 0.0, $3211 = 0.0, $3212 = 0.0, $3213 = 0.0, $3214 = 0.0, $3215 = 0.0, $3216 = 0.0, $3217 = 0.0, $3218 = 0.0, $3219 = 0.0, $322 = 0.0, $3220 = 0.0, $3221 = 0.0, $3222 = 0.0, $3223 = 0.0, $3224 = 0.0, $3225 = 0.0, $3226 = 0.0, $3227 = 0.0;
 var $3228 = 0.0, $3229 = 0.0, $323 = 0.0, $3230 = 0.0, $3231 = 0.0, $3232 = 0.0, $3233 = 0.0, $3234 = 0.0, $3235 = 0.0, $3236 = 0.0, $3237 = 0.0, $3238 = 0.0, $3239 = 0.0, $324 = 0.0, $3240 = 0.0, $3241 = 0.0, $3242 = 0.0, $3243 = 0.0, $3244 = 0.0, $3245 = 0.0;
 var $3246 = 0.0, $3247 = 0.0, $3248 = 0, $3249 = 0.0, $325 = 0.0, $3250 = 0.0, $3251 = 0.0, $3252 = 0.0, $3253 = 0.0, $3254 = 0.0, $3255 = 0.0, $3256 = 0, $3257 = 0.0, $3258 = 0, $3259 = 0.0, $326 = 0.0, $3260 = 0.0, $3261 = 0.0, $3262 = 0, $3263 = 0;
 var $3264 = 0.0, $3265 = 0.0, $3266 = 0.0, $3267 = 0.0, $3268 = 0.0, $3269 = 0.0, $327 = 0.0, $3270 = 0.0, $3271 = 0.0, $3272 = 0.0, $3273 = 0, $3274 = 0.0, $3275 = 0.0, $3276 = 0.0, $3277 = 0, $3278 = 0, $3279 = 0, $328 = 0.0, $3280 = 0, $3281 = 0.0;
 var $3282 = 0.0, $3283 = 0.0, $3284 = 0.0, $3285 = 0.0, $3286 = 0.0, $3287 = 0.0, $3288 = 0.0, $3289 = 0.0, $329 = 0.0, $3290 = 0.0, $3291 = 0.0, $3292 = 0.0, $3293 = 0.0, $3294 = 0.0, $3295 = 0.0, $3296 = 0.0, $3297 = 0.0, $3298 = 0, $3299 = 0.0, $33 = 0;
 var $330 = 0.0, $3300 = 0.0, $3301 = 0, $3302 = 0, $3303 = 0.0, $3304 = 0, $3305 = 0, $3306 = 0.0, $3307 = 0.0, $3308 = 0.0, $3309 = 0.0, $331 = 0.0, $3310 = 0, $3311 = 0, $3312 = 0.0, $3313 = 0.0, $3314 = 0.0, $3315 = 0.0, $3316 = 0.0, $3317 = 0.0;
 var $3318 = 0.0, $3319 = 0.0, $332 = 0.0, $3320 = 0.0, $3321 = 0.0, $3322 = 0.0, $3323 = 0.0, $3324 = 0.0, $3325 = 0.0, $3326 = 0.0, $3327 = 0.0, $3328 = 0.0, $3329 = 0.0, $333 = 0.0, $3330 = 0.0, $3331 = 0.0, $3332 = 0.0, $3333 = 0.0, $3334 = 0.0, $3335 = 0.0;
 var $3336 = 0.0, $3337 = 0.0, $3338 = 0, $3339 = 0.0, $334 = 0.0, $3340 = 0.0, $3341 = 0.0, $3342 = 0.0, $3343 = 0, $3344 = 0.0, $3345 = 0, $3346 = 0.0, $3347 = 0, $3348 = 0.0, $3349 = 0.0, $335 = 0.0, $3350 = 0.0, $3351 = 0.0, $3352 = 0.0, $3353 = 0.0;
 var $3354 = 0, $3355 = 0, $3356 = 0.0, $3357 = 0.0, $3358 = 0.0, $3359 = 0.0, $336 = 0.0, $3360 = 0.0, $3361 = 0.0, $3362 = 0, $3363 = 0, $3364 = 0.0, $3365 = 0.0, $3366 = 0.0, $3367 = 0.0, $3368 = 0.0, $3369 = 0.0, $337 = 0.0, $3370 = 0.0, $3371 = 0.0;
 var $3372 = 0, $3373 = 0, $3374 = 0, $3375 = 0, $3376 = 0, $3377 = 0, $3378 = 0, $3379 = 0, $338 = 0.0, $3380 = 0, $3381 = 0, $3382 = 0, $3383 = 0, $3384 = 0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0, $3389 = 0, $339 = 0.0;
 var $3390 = 0.0, $3391 = 0, $3392 = 0.0, $3393 = 0.0, $3394 = 0.0, $3395 = 0, $3396 = 0.0, $3397 = 0, $3398 = 0.0, $3399 = 0.0, $34 = 0, $340 = 0.0, $3400 = 0.0, $3401 = 0, $3402 = 0, $3403 = 0, $3404 = 0.0, $3405 = 0, $3406 = 0.0, $3407 = 0;
 var $3408 = 0.0, $3409 = 0.0, $341 = 0.0, $3410 = 0.0, $3411 = 0.0, $3412 = 0.0, $3413 = 0.0, $3414 = 0.0, $3415 = 0.0, $3416 = 0.0, $3417 = 0.0, $3418 = 0.0, $3419 = 0.0, $342 = 0.0, $3420 = 0.0, $3421 = 0.0, $3422 = 0.0, $3423 = 0.0, $3424 = 0.0, $3425 = 0.0;
 var $3426 = 0.0, $3427 = 0.0, $3428 = 0.0, $3429 = 0.0, $343 = 0.0, $3430 = 0.0, $3431 = 0.0, $3432 = 0.0, $3433 = 0.0, $3434 = 0.0, $3435 = 0.0, $3436 = 0.0, $3437 = 0, $3438 = 0.0, $3439 = 0.0, $344 = 0.0, $3440 = 0.0, $3441 = 0.0, $3442 = 0.0, $3443 = 0.0;
 var $3444 = 0, $3445 = 0.0, $3446 = 0, $3447 = 0.0, $3448 = 0, $3449 = 0, $345 = 0.0, $3450 = 0.0, $3451 = 0.0, $3452 = 0.0, $3453 = 0.0, $3454 = 0.0, $3455 = 0.0, $3456 = 0.0, $3457 = 0.0, $3458 = 0, $3459 = 0.0, $346 = 0.0, $3460 = 0, $3461 = 0.0;
 var $3462 = 0.0, $3463 = 0, $3464 = 0, $3465 = 0.0, $3466 = 0.0, $3467 = 0.0, $3468 = 0.0, $3469 = 0.0, $347 = 0.0, $3470 = 0.0, $3471 = 0.0, $3472 = 0.0, $3473 = 0.0, $3474 = 0, $3475 = 0.0, $3476 = 0, $3477 = 0, $3478 = 0.0, $3479 = 0.0, $348 = 0.0;
 var $3480 = 0, $3481 = 0, $3482 = 0.0, $3483 = 0.0, $3484 = 0.0, $3485 = 0.0, $3486 = 0.0, $3487 = 0.0, $3488 = 0.0, $3489 = 0.0, $349 = 0.0, $3490 = 0.0, $3491 = 0.0, $3492 = 0.0, $3493 = 0.0, $3494 = 0.0, $3495 = 0.0, $3496 = 0.0, $3497 = 0.0, $3498 = 0.0;
 var $3499 = 0, $35 = 0, $350 = 0.0, $3500 = 0.0, $3501 = 0.0, $3502 = 0, $3503 = 0, $3504 = 0.0, $3505 = 0, $3506 = 0, $3507 = 0.0, $3508 = 0.0, $3509 = 0.0, $351 = 0.0, $3510 = 0.0, $3511 = 0, $3512 = 0, $3513 = 0.0, $3514 = 0.0, $3515 = 0.0;
 var $3516 = 0.0, $3517 = 0.0, $3518 = 0.0, $3519 = 0.0, $352 = 0.0, $3520 = 0.0, $3521 = 0.0, $3522 = 0.0, $3523 = 0.0, $3524 = 0.0, $3525 = 0.0, $3526 = 0.0, $3527 = 0.0, $3528 = 0.0, $3529 = 0.0, $353 = 0.0, $3530 = 0.0, $3531 = 0.0, $3532 = 0.0, $3533 = 0.0;
 var $3534 = 0.0, $3535 = 0.0, $3536 = 0.0, $3537 = 0.0, $3538 = 0.0, $3539 = 0.0, $354 = 0.0, $3540 = 0, $3541 = 0.0, $3542 = 0.0, $3543 = 0.0, $3544 = 0, $3545 = 0.0, $3546 = 0, $3547 = 0.0, $3548 = 0, $3549 = 0.0, $355 = 0.0, $3550 = 0.0, $3551 = 0.0;
 var $3552 = 0.0, $3553 = 0.0, $3554 = 0.0, $3555 = 0, $3556 = 0, $3557 = 0.0, $3558 = 0.0, $3559 = 0.0, $356 = 0.0, $3560 = 0.0, $3561 = 0.0, $3562 = 0.0, $3563 = 0, $3564 = 0, $3565 = 0.0, $3566 = 0.0, $3567 = 0.0, $3568 = 0.0, $3569 = 0.0, $357 = 0.0;
 var $3570 = 0.0, $3571 = 0.0, $3572 = 0.0, $3573 = 0, $3574 = 0, $3575 = 0, $3576 = 0, $3577 = 0, $3578 = 0, $3579 = 0, $358 = 0.0, $3580 = 0, $3581 = 0, $3582 = 0, $3583 = 0, $3584 = 0, $3585 = 0, $3586 = 0, $3587 = 0, $3588 = 0;
 var $3589 = 0, $359 = 0.0, $3590 = 0, $3591 = 0.0, $3592 = 0, $3593 = 0.0, $3594 = 0.0, $3595 = 0.0, $3596 = 0, $3597 = 0.0, $3598 = 0, $3599 = 0.0, $36 = 0, $360 = 0.0, $3600 = 0.0, $3601 = 0.0, $3602 = 0, $3603 = 0, $3604 = 0, $3605 = 0.0;
 var $3606 = 0, $3607 = 0.0, $3608 = 0, $3609 = 0.0, $361 = 0.0, $3610 = 0.0, $3611 = 0.0, $3612 = 0.0, $3613 = 0.0, $3614 = 0.0, $3615 = 0.0, $3616 = 0.0, $3617 = 0.0, $3618 = 0.0, $3619 = 0.0, $362 = 0.0, $3620 = 0.0, $3621 = 0.0, $3622 = 0.0, $3623 = 0.0;
 var $3624 = 0.0, $3625 = 0.0, $3626 = 0.0, $3627 = 0.0, $3628 = 0.0, $3629 = 0.0, $363 = 0.0, $3630 = 0.0, $3631 = 0.0, $3632 = 0.0, $3633 = 0.0, $3634 = 0.0, $3635 = 0.0, $3636 = 0.0, $3637 = 0.0, $3638 = 0, $3639 = 0.0, $364 = 0.0, $3640 = 0.0, $3641 = 0.0;
 var $3642 = 0.0, $3643 = 0.0, $3644 = 0.0, $3645 = 0, $3646 = 0.0, $3647 = 0, $3648 = 0.0, $3649 = 0, $365 = 0.0, $3650 = 0, $3651 = 0.0, $3652 = 0.0, $3653 = 0.0, $3654 = 0, $3655 = 0, $3656 = 0.0, $3657 = 0.0, $3658 = 0.0, $3659 = 0.0, $366 = 0.0;
 var $3660 = 0.0, $3661 = 0.0, $3662 = 0.0, $3663 = 0.0, $3664 = 0.0, $3665 = 0.0, $3666 = 0.0, $3667 = 0.0, $3668 = 0, $3669 = 0, $367 = 0.0, $3670 = 0.0, $3671 = 0.0, $3672 = 0.0, $3673 = 0.0, $3674 = 0.0, $3675 = 0.0, $3676 = 0.0, $3677 = 0.0, $3678 = 0;
 var $3679 = 0, $368 = 0.0, $3680 = 0, $3681 = 0, $3682 = 0, $3683 = 0, $3684 = 0, $3685 = 0, $3686 = 0, $3687 = 0, $3688 = 0, $3689 = 0, $369 = 0.0, $3690 = 0, $3691 = 0, $3692 = 0, $3693 = 0, $3694 = 0, $3695 = 0, $3696 = 0.0;
 var $3697 = 0, $3698 = 0.0, $3699 = 0.0, $37 = 0, $370 = 0.0, $3700 = 0.0, $3701 = 0, $3702 = 0.0, $3703 = 0, $3704 = 0.0, $3705 = 0.0, $3706 = 0.0, $3707 = 0, $3708 = 0, $3709 = 0, $371 = 0.0, $3710 = 0.0, $3711 = 0, $3712 = 0.0, $3713 = 0;
 var $3714 = 0.0, $3715 = 0.0, $3716 = 0.0, $3717 = 0.0, $3718 = 0.0, $3719 = 0.0, $372 = 0.0, $3720 = 0.0, $3721 = 0.0, $3722 = 0.0, $3723 = 0.0, $3724 = 0.0, $3725 = 0.0, $3726 = 0.0, $3727 = 0.0, $3728 = 0.0, $3729 = 0.0, $373 = 0.0, $3730 = 0.0, $3731 = 0.0;
 var $3732 = 0.0, $3733 = 0.0, $3734 = 0.0, $3735 = 0.0, $3736 = 0.0, $3737 = 0.0, $3738 = 0.0, $3739 = 0.0, $374 = 0.0, $3740 = 0.0, $3741 = 0.0, $3742 = 0.0, $3743 = 0.0, $3744 = 0.0, $3745 = 0, $3746 = 0.0, $3747 = 0.0, $3748 = 0.0, $3749 = 0.0, $375 = 0.0;
 var $3750 = 0.0, $3751 = 0.0, $3752 = 0, $3753 = 0.0, $3754 = 0, $3755 = 0.0, $3756 = 0, $3757 = 0, $3758 = 0.0, $3759 = 0.0, $376 = 0.0, $3760 = 0.0, $3761 = 0.0, $3762 = 0.0, $3763 = 0.0, $3764 = 0.0, $3765 = 0.0, $3766 = 0, $3767 = 0, $3768 = 0.0;
 var $3769 = 0.0, $377 = 0.0, $3770 = 0.0, $3771 = 0.0, $3772 = 0.0, $3773 = 0.0, $3774 = 0, $3775 = 0, $3776 = 0.0, $3777 = 0.0, $3778 = 0.0, $3779 = 0.0, $378 = 0.0, $3780 = 0.0, $3781 = 0.0, $3782 = 0.0, $3783 = 0.0, $3784 = 0, $3785 = 0, $3786 = 0;
 var $3787 = 0, $3788 = 0, $3789 = 0, $379 = 0.0, $3790 = 0, $3791 = 0, $3792 = 0, $3793 = 0, $3794 = 0, $3795 = 0, $3796 = 0, $3797 = 0, $3798 = 0, $3799 = 0, $38 = 0, $380 = 0.0, $3800 = 0, $3801 = 0, $3802 = 0.0, $3803 = 0;
 var $3804 = 0.0, $3805 = 0.0, $3806 = 0.0, $3807 = 0, $3808 = 0.0, $3809 = 0, $381 = 0.0, $3810 = 0.0, $3811 = 0.0, $3812 = 0.0, $3813 = 0, $3814 = 0, $3815 = 0, $3816 = 0.0, $3817 = 0, $3818 = 0.0, $3819 = 0, $382 = 0.0, $3820 = 0.0, $3821 = 0.0;
 var $3822 = 0.0, $3823 = 0.0, $3824 = 0.0, $3825 = 0.0, $3826 = 0.0, $3827 = 0.0, $3828 = 0.0, $3829 = 0.0, $383 = 0.0, $3830 = 0.0, $3831 = 0.0, $3832 = 0.0, $3833 = 0.0, $3834 = 0.0, $3835 = 0.0, $3836 = 0.0, $3837 = 0.0, $3838 = 0.0, $3839 = 0.0, $384 = 0.0;
 var $3840 = 0.0, $3841 = 0.0, $3842 = 0.0, $3843 = 0.0, $3844 = 0.0, $3845 = 0.0, $3846 = 0.0, $3847 = 0.0, $3848 = 0.0, $3849 = 0.0, $385 = 0.0, $3850 = 0.0, $3851 = 0, $3852 = 0.0, $3853 = 0.0, $3854 = 0.0, $3855 = 0.0, $3856 = 0.0, $3857 = 0.0, $3858 = 0;
 var $3859 = 0.0, $386 = 0.0, $3860 = 0, $3861 = 0.0, $3862 = 0, $3863 = 0, $3864 = 0.0, $3865 = 0.0, $3866 = 0.0, $3867 = 0.0, $3868 = 0.0, $3869 = 0.0, $387 = 0.0, $3870 = 0.0, $3871 = 0.0, $3872 = 0.0, $3873 = 0.0, $3874 = 0.0, $3875 = 0.0, $3876 = 0.0;
 var $3877 = 0.0, $3878 = 0.0, $3879 = 0.0, $388 = 0.0, $3880 = 0.0, $3881 = 0.0, $3882 = 0.0, $3883 = 0.0, $3884 = 0.0, $3885 = 0, $3886 = 0.0, $3887 = 0.0, $3888 = 0.0, $3889 = 0.0, $389 = 0.0, $3890 = 0, $3891 = 0.0, $3892 = 0, $3893 = 0.0, $3894 = 0.0;
 var $3895 = 0.0, $3896 = 0.0, $3897 = 0.0, $3898 = 0.0, $3899 = 0.0, $39 = 0, $390 = 0.0, $3900 = 0.0, $3901 = 0.0, $3902 = 0.0, $3903 = 0, $3904 = 0, $3905 = 0.0, $3906 = 0.0, $3907 = 0.0, $3908 = 0.0, $3909 = 0.0, $391 = 0.0, $3910 = 0.0, $3911 = 0.0;
 var $3912 = 0.0, $3913 = 0, $3914 = 0, $3915 = 0, $3916 = 0, $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0.0, $3920 = 0, $3921 = 0, $3922 = 0, $3923 = 0, $3924 = 0, $3925 = 0, $3926 = 0, $3927 = 0, $3928 = 0, $3929 = 0, $393 = 0.0;
 var $3930 = 0, $3931 = 0.0, $3932 = 0, $3933 = 0.0, $3934 = 0.0, $3935 = 0.0, $3936 = 0, $3937 = 0.0, $3938 = 0, $3939 = 0.0, $394 = 0.0, $3940 = 0.0, $3941 = 0.0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0.0, $3946 = 0, $3947 = 0.0, $3948 = 0;
 var $3949 = 0.0, $395 = 0.0, $3950 = 0.0, $3951 = 0.0, $3952 = 0.0, $3953 = 0.0, $3954 = 0, $3955 = 0, $3956 = 0.0, $3957 = 0.0, $3958 = 0.0, $3959 = 0.0, $396 = 0.0, $3960 = 0.0, $3961 = 0.0, $3962 = 0.0, $3963 = 0.0, $3964 = 0.0, $3965 = 0.0, $3966 = 0.0;
 var $3967 = 0.0, $3968 = 0.0, $3969 = 0.0, $397 = 0.0, $3970 = 0.0, $3971 = 0.0, $3972 = 0.0, $3973 = 0.0, $3974 = 0.0, $3975 = 0.0, $3976 = 0.0, $3977 = 0.0, $3978 = 0.0, $3979 = 0.0, $398 = 0.0, $3980 = 0.0, $3981 = 0.0, $3982 = 0.0, $3983 = 0.0, $3984 = 0.0;
 var $3985 = 0.0, $3986 = 0.0, $3987 = 0.0, $3988 = 0.0, $3989 = 0.0, $399 = 0.0, $3990 = 0.0, $3991 = 0, $3992 = 0.0, $3993 = 0.0, $3994 = 0.0, $3995 = 0.0, $3996 = 0.0, $3997 = 0.0, $3998 = 0.0, $3999 = 0.0, $4 = 0, $40 = 0, $400 = 0.0, $4000 = 0.0;
 var $4001 = 0.0, $4002 = 0, $4003 = 0.0, $4004 = 0, $4005 = 0.0, $4006 = 0, $4007 = 0.0, $4008 = 0, $4009 = 0, $401 = 0.0, $4010 = 0.0, $4011 = 0.0, $4012 = 0.0, $4013 = 0.0, $4014 = 0.0, $4015 = 0.0, $4016 = 0.0, $4017 = 0.0, $4018 = 0.0, $4019 = 0.0;
 var $402 = 0.0, $4020 = 0.0, $4021 = 0.0, $4022 = 0.0, $4023 = 0.0, $4024 = 0.0, $4025 = 0.0, $4026 = 0.0, $4027 = 0.0, $4028 = 0.0, $4029 = 0.0, $403 = 0.0, $4030 = 0, $4031 = 0.0, $4032 = 0.0, $4033 = 0.0, $4034 = 0.0, $4035 = 0, $4036 = 0.0, $4037 = 0;
 var $4038 = 0.0, $4039 = 0.0, $404 = 0.0, $4040 = 0.0, $4041 = 0.0, $4042 = 0.0, $4043 = 0.0, $4044 = 0.0, $4045 = 0.0, $4046 = 0.0, $4047 = 0.0, $4048 = 0, $4049 = 0, $405 = 0.0, $4050 = 0.0, $4051 = 0.0, $4052 = 0.0, $4053 = 0.0, $4054 = 0.0, $4055 = 0.0;
 var $4056 = 0.0, $4057 = 0.0, $4058 = 0, $4059 = 0, $406 = 0.0, $4060 = 0, $4061 = 0, $4062 = 0, $4063 = 0, $4064 = 0, $4065 = 0, $4066 = 0, $4067 = 0, $4068 = 0, $4069 = 0, $407 = 0.0, $4070 = 0, $4071 = 0, $4072 = 0, $4073 = 0;
 var $4074 = 0, $4075 = 0, $4076 = 0.0, $4077 = 0, $4078 = 0.0, $4079 = 0.0, $408 = 0.0, $4080 = 0.0, $4081 = 0, $4082 = 0.0, $4083 = 0, $4084 = 0.0, $4085 = 0.0, $4086 = 0.0, $4087 = 0, $4088 = 0, $4089 = 0, $409 = 0.0, $4090 = 0.0, $4091 = 0;
 var $4092 = 0.0, $4093 = 0, $4094 = 0.0, $4095 = 0.0, $4096 = 0.0, $4097 = 0.0, $4098 = 0.0, $4099 = 0, $41 = 0, $410 = 0.0, $4100 = 0, $4101 = 0.0, $4102 = 0.0, $4103 = 0.0, $4104 = 0.0, $4105 = 0.0, $4106 = 0.0, $4107 = 0.0, $4108 = 0.0, $4109 = 0.0;
 var $411 = 0.0, $4110 = 0.0, $4111 = 0.0, $4112 = 0.0, $4113 = 0.0, $4114 = 0.0, $4115 = 0.0, $4116 = 0.0, $4117 = 0.0, $4118 = 0.0, $4119 = 0.0, $412 = 0.0, $4120 = 0.0, $4121 = 0.0, $4122 = 0.0, $4123 = 0.0, $4124 = 0.0, $4125 = 0.0, $4126 = 0.0, $4127 = 0.0;
 var $4128 = 0.0, $4129 = 0.0, $413 = 0.0, $4130 = 0.0, $4131 = 0.0, $4132 = 0.0, $4133 = 0.0, $4134 = 0.0, $4135 = 0.0, $4136 = 0, $4137 = 0.0, $4138 = 0.0, $4139 = 0.0, $414 = 0.0, $4140 = 0.0, $4141 = 0.0, $4142 = 0.0, $4143 = 0.0, $4144 = 0.0, $4145 = 0.0;
 var $4146 = 0.0, $4147 = 0, $4148 = 0.0, $4149 = 0, $415 = 0.0, $4150 = 0.0, $4151 = 0, $4152 = 0.0, $4153 = 0, $4154 = 0, $4155 = 0.0, $4156 = 0.0, $4157 = 0.0, $4158 = 0.0, $4159 = 0.0, $416 = 0.0, $4160 = 0.0, $4161 = 0.0, $4162 = 0.0, $4163 = 0.0;
 var $4164 = 0.0, $4165 = 0.0, $4166 = 0.0, $4167 = 0.0, $4168 = 0.0, $4169 = 0.0, $417 = 0.0, $4170 = 0.0, $4171 = 0.0, $4172 = 0.0, $4173 = 0.0, $4174 = 0.0, $4175 = 0.0, $4176 = 0.0, $4177 = 0.0, $4178 = 0.0, $4179 = 0.0, $418 = 0.0, $4180 = 0.0, $4181 = 0.0;
 var $4182 = 0.0, $4183 = 0, $4184 = 0, $4185 = 0.0, $4186 = 0.0, $4187 = 0.0, $4188 = 0.0, $4189 = 0.0, $419 = 0.0, $4190 = 0.0, $4191 = 0.0, $4192 = 0.0, $4193 = 0.0, $4194 = 0.0, $4195 = 0.0, $4196 = 0.0, $4197 = 0.0, $4198 = 0.0, $4199 = 0.0, $42 = 0;
 var $420 = 0.0, $4200 = 0.0, $4201 = 0.0, $4202 = 0.0, $4203 = 0.0, $4204 = 0.0, $4205 = 0.0, $4206 = 0.0, $4207 = 0.0, $4208 = 0.0, $4209 = 0.0, $421 = 0.0, $4210 = 0.0, $4211 = 0.0, $4212 = 0.0, $4213 = 0.0, $4214 = 0.0, $4215 = 0.0, $4216 = 0.0, $4217 = 0;
 var $4218 = 0, $4219 = 0.0, $422 = 0.0, $4220 = 0.0, $4221 = 0.0, $4222 = 0.0, $4223 = 0.0, $4224 = 0.0, $4225 = 0.0, $4226 = 0, $4227 = 0.0, $4228 = 0, $4229 = 0.0, $423 = 0.0, $4230 = 0.0, $4231 = 0.0, $4232 = 0.0, $4233 = 0.0, $4234 = 0.0, $4235 = 0.0;
 var $4236 = 0.0, $4237 = 0.0, $4238 = 0.0, $4239 = 0.0, $424 = 0.0, $4240 = 0.0, $4241 = 0.0, $4242 = 0.0, $4243 = 0.0, $4244 = 0.0, $4245 = 0.0, $4246 = 0.0, $4247 = 0.0, $4248 = 0.0, $4249 = 0.0, $425 = 0.0, $4250 = 0.0, $4251 = 0.0, $4252 = 0.0, $4253 = 0.0;
 var $4254 = 0.0, $4255 = 0.0, $4256 = 0.0, $4257 = 0.0, $4258 = 0.0, $4259 = 0.0, $426 = 0.0, $4260 = 0.0, $4261 = 0.0, $4262 = 0.0, $4263 = 0.0, $4264 = 0.0, $4265 = 0.0, $4266 = 0.0, $4267 = 0.0, $4268 = 0.0, $4269 = 0.0, $427 = 0.0, $4270 = 0.0, $4271 = 0.0;
 var $4272 = 0.0, $4273 = 0.0, $4274 = 0.0, $4275 = 0.0, $4276 = 0.0, $4277 = 0.0, $4278 = 0.0, $4279 = 0.0, $428 = 0.0, $4280 = 0.0, $4281 = 0.0, $4282 = 0.0, $4283 = 0.0, $4284 = 0.0, $4285 = 0.0, $4286 = 0.0, $4287 = 0.0, $4288 = 0.0, $4289 = 0.0, $429 = 0.0;
 var $4290 = 0.0, $4291 = 0.0, $4292 = 0.0, $4293 = 0.0, $4294 = 0.0, $4295 = 0.0, $4296 = 0.0, $4297 = 0.0, $4298 = 0.0, $4299 = 0.0, $43 = 0, $430 = 0.0, $4300 = 0.0, $4301 = 0.0, $4302 = 0.0, $4303 = 0.0, $4304 = 0.0, $4305 = 0.0, $4306 = 0.0, $4307 = 0.0;
 var $4308 = 0.0, $4309 = 0.0, $431 = 0.0, $4310 = 0.0, $4311 = 0.0, $4312 = 0, $4313 = 0.0, $4314 = 0.0, $4315 = 0.0, $4316 = 0.0, $4317 = 0.0, $4318 = 0.0, $4319 = 0.0, $432 = 0.0, $4320 = 0.0, $4321 = 0.0, $4322 = 0, $4323 = 0.0, $4324 = 0, $4325 = 0.0;
 var $4326 = 0, $4327 = 0.0, $4328 = 0, $4329 = 0.0, $433 = 0.0, $4330 = 0, $4331 = 0.0, $4332 = 0.0, $4333 = 0.0, $4334 = 0.0, $4335 = 0.0, $4336 = 0.0, $4337 = 0.0, $4338 = 0.0, $4339 = 0.0, $434 = 0.0, $4340 = 0.0, $4341 = 0.0, $4342 = 0.0, $4343 = 0.0;
 var $4344 = 0.0, $4345 = 0.0, $4346 = 0.0, $4347 = 0.0, $4348 = 0.0, $4349 = 0.0, $435 = 0.0, $4350 = 0.0, $4351 = 0.0, $4352 = 0.0, $4353 = 0.0, $4354 = 0.0, $4355 = 0.0, $4356 = 0.0, $4357 = 0.0, $4358 = 0.0, $4359 = 0.0, $436 = 0.0, $4360 = 0.0, $4361 = 0.0;
 var $4362 = 0.0, $4363 = 0.0, $4364 = 0.0, $4365 = 0.0, $4366 = 0.0, $4367 = 0.0, $4368 = 0.0, $4369 = 0.0, $437 = 0.0, $4370 = 0, $4371 = 0, $4372 = 0.0, $4373 = 0.0, $4374 = 0.0, $4375 = 0.0, $4376 = 0.0, $4377 = 0.0, $4378 = 0.0, $4379 = 0.0, $438 = 0.0;
 var $4380 = 0.0, $4381 = 0, $4382 = 0, $4383 = 0.0, $4384 = 0.0, $4385 = 0.0, $4386 = 0.0, $4387 = 0.0, $4388 = 0.0, $4389 = 0.0, $439 = 0.0, $4390 = 0, $4391 = 0.0, $4392 = 0, $4393 = 0.0, $4394 = 0.0, $4395 = 0.0, $4396 = 0.0, $4397 = 0.0, $4398 = 0.0;
 var $4399 = 0.0, $44 = 0, $440 = 0.0, $4400 = 0.0, $4401 = 0.0, $4402 = 0.0, $4403 = 0.0, $4404 = 0.0, $4405 = 0.0, $4406 = 0.0, $4407 = 0.0, $4408 = 0.0, $4409 = 0.0, $441 = 0.0, $4410 = 0.0, $4411 = 0.0, $4412 = 0.0, $4413 = 0.0, $4414 = 0.0, $4415 = 0.0;
 var $4416 = 0.0, $4417 = 0.0, $4418 = 0.0, $4419 = 0.0, $442 = 0.0, $4420 = 0.0, $4421 = 0.0, $4422 = 0.0, $4423 = 0.0, $4424 = 0.0, $4425 = 0.0, $4426 = 0.0, $4427 = 0.0, $4428 = 0.0, $4429 = 0.0, $443 = 0.0, $4430 = 0.0, $4431 = 0.0, $4432 = 0.0, $4433 = 0.0;
 var $4434 = 0.0, $4435 = 0.0, $4436 = 0.0, $4437 = 0.0, $4438 = 0.0, $4439 = 0.0, $444 = 0.0, $4440 = 0.0, $4441 = 0.0, $4442 = 0.0, $4443 = 0.0, $4444 = 0.0, $4445 = 0.0, $4446 = 0.0, $4447 = 0.0, $4448 = 0.0, $4449 = 0.0, $445 = 0.0, $4450 = 0.0, $4451 = 0.0;
 var $4452 = 0.0, $4453 = 0.0, $4454 = 0.0, $4455 = 0.0, $4456 = 0.0, $4457 = 0.0, $4458 = 0.0, $4459 = 0.0, $446 = 0.0, $4460 = 0.0, $4461 = 0.0, $4462 = 0.0, $4463 = 0.0, $4464 = 0.0, $4465 = 0.0, $4466 = 0.0, $4467 = 0.0, $4468 = 0.0, $4469 = 0.0, $447 = 0.0;
 var $4470 = 0.0, $4471 = 0.0, $4472 = 0.0, $4473 = 0.0, $4474 = 0.0, $4475 = 0.0, $4476 = 0, $4477 = 0.0, $4478 = 0.0, $4479 = 0.0, $448 = 0.0, $4480 = 0.0, $4481 = 0.0, $4482 = 0.0, $4483 = 0.0, $4484 = 0.0, $4485 = 0.0, $4486 = 0, $4487 = 0.0, $4488 = 0;
 var $4489 = 0.0, $449 = 0.0, $4490 = 0, $4491 = 0.0, $4492 = 0, $4493 = 0.0, $4494 = 0, $4495 = 0.0, $4496 = 0.0, $4497 = 0.0, $4498 = 0.0, $4499 = 0.0, $45 = 0, $450 = 0.0, $4500 = 0.0, $4501 = 0.0, $4502 = 0.0, $4503 = 0.0, $4504 = 0.0, $4505 = 0.0;
 var $4506 = 0.0, $4507 = 0.0, $4508 = 0.0, $4509 = 0.0, $451 = 0.0, $4510 = 0.0, $4511 = 0.0, $4512 = 0.0, $4513 = 0.0, $4514 = 0.0, $4515 = 0.0, $4516 = 0.0, $4517 = 0.0, $4518 = 0.0, $4519 = 0.0, $452 = 0.0, $4520 = 0.0, $4521 = 0.0, $4522 = 0.0, $4523 = 0.0;
 var $4524 = 0.0, $4525 = 0, $4526 = 0, $4527 = 0.0, $4528 = 0.0, $4529 = 0.0, $453 = 0.0, $4530 = 0.0, $4531 = 0.0, $4532 = 0.0, $4533 = 0.0, $4534 = 0.0, $4535 = 0.0, $4536 = 0.0, $4537 = 0.0, $4538 = 0.0, $4539 = 0.0, $454 = 0.0, $4540 = 0.0, $4541 = 0.0;
 var $4542 = 0.0, $4543 = 0, $4544 = 0, $4545 = 0.0, $4546 = 0.0, $4547 = 0.0, $4548 = 0.0, $4549 = 0.0, $455 = 0.0, $4550 = 0.0, $4551 = 0.0, $4552 = 0, $4553 = 0.0, $4554 = 0, $4555 = 0.0, $4556 = 0.0, $4557 = 0.0, $4558 = 0.0, $4559 = 0.0, $456 = 0.0;
 var $4560 = 0.0, $4561 = 0.0, $4562 = 0.0, $4563 = 0.0, $4564 = 0.0, $4565 = 0.0, $4566 = 0.0, $4567 = 0.0, $4568 = 0.0, $4569 = 0.0, $457 = 0.0, $4570 = 0.0, $4571 = 0.0, $4572 = 0.0, $4573 = 0.0, $4574 = 0.0, $4575 = 0.0, $4576 = 0.0, $4577 = 0.0, $4578 = 0.0;
 var $4579 = 0.0, $458 = 0.0, $4580 = 0.0, $4581 = 0.0, $4582 = 0.0, $4583 = 0.0, $4584 = 0.0, $4585 = 0.0, $4586 = 0.0, $4587 = 0.0, $4588 = 0.0, $4589 = 0.0, $459 = 0.0, $4590 = 0.0, $4591 = 0.0, $4592 = 0.0, $4593 = 0.0, $4594 = 0.0, $4595 = 0.0, $4596 = 0.0;
 var $4597 = 0.0, $4598 = 0.0, $4599 = 0.0, $46 = 0, $460 = 0.0, $4600 = 0.0, $4601 = 0.0, $4602 = 0.0, $4603 = 0.0, $4604 = 0.0, $4605 = 0.0, $4606 = 0.0, $4607 = 0.0, $4608 = 0.0, $4609 = 0.0, $461 = 0.0, $4610 = 0.0, $4611 = 0.0, $4612 = 0.0, $4613 = 0.0;
 var $4614 = 0.0, $4615 = 0.0, $4616 = 0.0, $4617 = 0.0, $4618 = 0.0, $4619 = 0.0, $462 = 0.0, $4620 = 0.0, $4621 = 0.0, $4622 = 0.0, $4623 = 0.0, $4624 = 0.0, $4625 = 0.0, $4626 = 0.0, $4627 = 0.0, $4628 = 0.0, $4629 = 0.0, $463 = 0.0, $4630 = 0.0, $4631 = 0.0;
 var $4632 = 0.0, $4633 = 0.0, $4634 = 0.0, $4635 = 0.0, $4636 = 0.0, $4637 = 0.0, $4638 = 0, $4639 = 0.0, $464 = 0.0, $4640 = 0.0, $4641 = 0.0, $4642 = 0.0, $4643 = 0.0, $4644 = 0.0, $4645 = 0.0, $4646 = 0.0, $4647 = 0.0, $4648 = 0, $4649 = 0.0, $465 = 0.0;
 var $4650 = 0, $4651 = 0.0, $4652 = 0, $4653 = 0.0, $4654 = 0, $4655 = 0.0, $4656 = 0, $4657 = 0.0, $4658 = 0.0, $4659 = 0.0, $466 = 0.0, $4660 = 0.0, $4661 = 0.0, $4662 = 0.0, $4663 = 0.0, $4664 = 0.0, $4665 = 0.0, $4666 = 0.0, $4667 = 0.0, $4668 = 0.0;
 var $4669 = 0.0, $467 = 0.0, $4670 = 0.0, $4671 = 0.0, $4672 = 0.0, $4673 = 0.0, $4674 = 0.0, $4675 = 0.0, $4676 = 0.0, $4677 = 0.0, $4678 = 0.0, $4679 = 0.0, $468 = 0.0, $4680 = 0.0, $4681 = 0.0, $4682 = 0.0, $4683 = 0.0, $4684 = 0.0, $4685 = 0.0, $4686 = 0.0;
 var $4687 = 0.0, $4688 = 0.0, $4689 = 0.0, $469 = 0.0, $4690 = 0.0, $4691 = 0.0, $4692 = 0.0, $4693 = 0.0, $4694 = 0.0, $4695 = 0.0, $4696 = 0.0, $4697 = 0.0, $4698 = 0.0, $4699 = 0.0, $47 = 0, $470 = 0.0, $4700 = 0.0, $4701 = 0.0, $4702 = 0.0, $4703 = 0.0;
 var $4704 = 0.0, $4705 = 0.0, $4706 = 0.0, $4707 = 0.0, $4708 = 0.0, $4709 = 0.0, $471 = 0.0, $4710 = 0.0, $4711 = 0.0, $4712 = 0.0, $4713 = 0.0, $4714 = 0.0, $4715 = 0.0, $4716 = 0.0, $4717 = 0.0, $4718 = 0.0, $4719 = 0.0, $472 = 0.0, $4720 = 0.0, $4721 = 0.0;
 var $4722 = 0.0, $4723 = 0.0, $4724 = 0.0, $4725 = 0.0, $4726 = 0.0, $4727 = 0.0, $4728 = 0.0, $4729 = 0.0, $473 = 0.0, $4730 = 0.0, $4731 = 0.0, $4732 = 0.0, $4733 = 0.0, $4734 = 0, $4735 = 0, $4736 = 0.0, $4737 = 0.0, $4738 = 0.0, $4739 = 0.0, $474 = 0.0;
 var $4740 = 0.0, $4741 = 0.0, $4742 = 0.0, $4743 = 0.0, $4744 = 0.0, $4745 = 0.0, $4746 = 0.0, $4747 = 0.0, $4748 = 0.0, $4749 = 0.0, $475 = 0.0, $4750 = 0.0, $4751 = 0.0, $4752 = 0.0, $4753 = 0.0, $4754 = 0.0, $4755 = 0.0, $4756 = 0.0, $4757 = 0.0, $4758 = 0;
 var $4759 = 0, $476 = 0.0, $4760 = 0.0, $4761 = 0.0, $4762 = 0.0, $4763 = 0.0, $4764 = 0.0, $4765 = 0.0, $4766 = 0.0, $4767 = 0, $4768 = 0.0, $4769 = 0, $477 = 0.0, $4770 = 0.0, $4771 = 0.0, $4772 = 0.0, $4773 = 0.0, $4774 = 0.0, $4775 = 0.0, $4776 = 0.0;
 var $4777 = 0.0, $4778 = 0.0, $4779 = 0.0, $478 = 0.0, $4780 = 0.0, $4781 = 0.0, $4782 = 0.0, $4783 = 0.0, $4784 = 0.0, $4785 = 0.0, $4786 = 0.0, $4787 = 0.0, $4788 = 0.0, $4789 = 0.0, $479 = 0.0, $4790 = 0.0, $4791 = 0.0, $4792 = 0.0, $4793 = 0.0, $4794 = 0.0;
 var $4795 = 0.0, $4796 = 0.0, $4797 = 0.0, $4798 = 0.0, $4799 = 0.0, $48 = 0, $480 = 0.0, $4800 = 0.0, $4801 = 0.0, $4802 = 0, $4803 = 0.0, $4804 = 0.0, $4805 = 0.0, $4806 = 0.0, $4807 = 0.0, $4808 = 0.0, $4809 = 0.0, $481 = 0.0, $4810 = 0.0, $4811 = 0.0;
 var $4812 = 0.0, $4813 = 0.0, $4814 = 0.0, $4815 = 0.0, $4816 = 0.0, $4817 = 0.0, $4818 = 0, $4819 = 0.0, $482 = 0.0, $4820 = 0, $4821 = 0.0, $4822 = 0.0, $4823 = 0, $4824 = 0.0, $4825 = 0, $4826 = 0.0, $4827 = 0.0, $4828 = 0, $4829 = 0.0, $483 = 0.0;
 var $4830 = 0.0, $4831 = 0, $4832 = 0.0, $4833 = 0.0, $4834 = 0.0, $4835 = 0.0, $4836 = 0.0, $4837 = 0.0, $4838 = 0.0, $4839 = 0.0, $484 = 0.0, $4840 = 0.0, $4841 = 0.0, $4842 = 0.0, $4843 = 0.0, $4844 = 0.0, $4845 = 0.0, $4846 = 0.0, $4847 = 0.0, $4848 = 0.0;
 var $4849 = 0.0, $485 = 0.0, $4850 = 0.0, $4851 = 0.0, $4852 = 0.0, $4853 = 0.0, $4854 = 0.0, $4855 = 0.0, $4856 = 0.0, $4857 = 0.0, $4858 = 0.0, $4859 = 0.0, $486 = 0.0, $4860 = 0.0, $4861 = 0.0, $4862 = 0.0, $4863 = 0, $4864 = 0.0, $4865 = 0.0, $4866 = 0.0;
 var $4867 = 0.0, $4868 = 0, $4869 = 0.0, $487 = 0.0, $4870 = 0, $4871 = 0.0, $4872 = 0.0, $4873 = 0.0, $4874 = 0.0, $4875 = 0.0, $4876 = 0.0, $4877 = 0.0, $4878 = 0.0, $4879 = 0.0, $488 = 0.0, $4880 = 0.0, $4881 = 0.0, $4882 = 0.0, $4883 = 0.0, $4884 = 0.0;
 var $4885 = 0.0, $4886 = 0.0, $4887 = 0.0, $4888 = 0.0, $4889 = 0.0, $489 = 0.0, $4890 = 0.0, $4891 = 0, $4892 = 0.0, $4893 = 0.0, $4894 = 0.0, $4895 = 0.0, $4896 = 0.0, $4897 = 0.0, $4898 = 0.0, $4899 = 0.0, $49 = 0, $490 = 0.0, $4900 = 0.0, $4901 = 0;
 var $4902 = 0.0, $4903 = 0.0, $4904 = 0.0, $4905 = 0.0, $4906 = 0.0, $4907 = 0, $4908 = 0.0, $4909 = 0.0, $491 = 0.0, $4910 = 0.0, $4911 = 0.0, $4912 = 0.0, $4913 = 0.0, $4914 = 0.0, $4915 = 0.0, $4916 = 0.0, $4917 = 0.0, $4918 = 0.0, $4919 = 0.0, $492 = 0.0;
 var $4920 = 0.0, $4921 = 0.0, $4922 = 0.0, $4923 = 0.0, $4924 = 0.0, $4925 = 0.0, $4926 = 0.0, $4927 = 0.0, $4928 = 0, $4929 = 0.0, $493 = 0.0, $4930 = 0, $4931 = 0.0, $4932 = 0.0, $4933 = 0.0, $4934 = 0.0, $4935 = 0.0, $4936 = 0.0, $4937 = 0.0, $4938 = 0.0;
 var $4939 = 0.0, $494 = 0.0, $4940 = 0.0, $4941 = 0.0, $4942 = 0.0, $4943 = 0.0, $4944 = 0.0, $4945 = 0.0, $4946 = 0.0, $4947 = 0.0, $4948 = 0.0, $4949 = 0.0, $495 = 0.0, $4950 = 0.0, $4951 = 0.0, $4952 = 0.0, $4953 = 0.0, $4954 = 0.0, $4955 = 0.0, $4956 = 0.0;
 var $4957 = 0.0, $4958 = 0.0, $4959 = 0.0, $496 = 0.0, $4960 = 0.0, $4961 = 0.0, $4962 = 0.0, $4963 = 0, $4964 = 0, $4965 = 0.0, $4966 = 0.0, $4967 = 0.0, $4968 = 0.0, $4969 = 0.0, $497 = 0.0, $4970 = 0.0, $4971 = 0.0, $4972 = 0.0, $4973 = 0.0, $4974 = 0.0;
 var $4975 = 0.0, $4976 = 0.0, $4977 = 0.0, $4978 = 0.0, $4979 = 0.0, $498 = 0.0, $4980 = 0.0, $4981 = 0.0, $4982 = 0.0, $4983 = 0.0, $4984 = 0.0, $4985 = 0.0, $4986 = 0.0, $4987 = 0.0, $4988 = 0.0, $4989 = 0.0, $499 = 0.0, $4990 = 0.0, $4991 = 0.0, $4992 = 0.0;
 var $4993 = 0.0, $4994 = 0.0, $4995 = 0.0, $4996 = 0, $4997 = 0.0, $4998 = 0, $4999 = 0.0, $5 = 0, $50 = 0, $500 = 0.0, $5000 = 0, $5001 = 0.0, $5002 = 0, $5003 = 0.0, $5004 = 0, $5005 = 0.0, $5006 = 0.0, $5007 = 0.0, $5008 = 0.0, $5009 = 0.0;
 var $501 = 0.0, $5010 = 0.0, $5011 = 0.0, $5012 = 0.0, $5013 = 0.0, $5014 = 0.0, $5015 = 0.0, $5016 = 0.0, $5017 = 0.0, $5018 = 0.0, $5019 = 0.0, $502 = 0.0, $5020 = 0.0, $5021 = 0.0, $5022 = 0.0, $5023 = 0.0, $5024 = 0.0, $5025 = 0.0, $5026 = 0.0, $5027 = 0.0;
 var $5028 = 0.0, $5029 = 0.0, $503 = 0.0, $5030 = 0.0, $5031 = 0.0, $5032 = 0.0, $5033 = 0.0, $5034 = 0.0, $5035 = 0.0, $5036 = 0.0, $5037 = 0.0, $5038 = 0.0, $5039 = 0.0, $504 = 0.0, $5040 = 0, $5041 = 0.0, $5042 = 0.0, $5043 = 0, $5044 = 0.0, $5045 = 0;
 var $5046 = 0.0, $5047 = 0, $5048 = 0.0, $5049 = 0.0, $505 = 0.0, $5050 = 0.0, $5051 = 0.0, $5052 = 0.0, $5053 = 0.0, $5054 = 0.0, $5055 = 0.0, $5056 = 0.0, $5057 = 0.0, $5058 = 0.0, $5059 = 0.0, $506 = 0.0, $5060 = 0.0, $5061 = 0.0, $5062 = 0.0, $5063 = 0.0;
 var $5064 = 0.0, $5065 = 0.0, $5066 = 0.0, $5067 = 0, $5068 = 0.0, $5069 = 0.0, $507 = 0.0, $5070 = 0.0, $5071 = 0.0, $5072 = 0.0, $5073 = 0.0, $5074 = 0.0, $5075 = 0.0, $5076 = 0.0, $5077 = 0, $5078 = 0.0, $5079 = 0.0, $508 = 0.0, $5080 = 0.0, $5081 = 0.0;
 var $5082 = 0.0, $5083 = 0, $5084 = 0.0, $5085 = 0.0, $5086 = 0.0, $5087 = 0.0, $5088 = 0.0, $5089 = 0.0, $509 = 0.0, $5090 = 0.0, $5091 = 0.0, $5092 = 0.0, $5093 = 0.0, $5094 = 0.0, $5095 = 0.0, $5096 = 0.0, $5097 = 0.0, $5098 = 0.0, $5099 = 0.0, $51 = 0;
 var $510 = 0.0, $5100 = 0.0, $5101 = 0.0, $5102 = 0, $5103 = 0.0, $5104 = 0, $5105 = 0.0, $5106 = 0.0, $5107 = 0.0, $5108 = 0.0, $5109 = 0.0, $511 = 0.0, $5110 = 0.0, $5111 = 0.0, $5112 = 0.0, $5113 = 0.0, $5114 = 0.0, $5115 = 0.0, $5116 = 0.0, $5117 = 0.0;
 var $5118 = 0.0, $5119 = 0.0, $512 = 0.0, $5120 = 0.0, $5121 = 0.0, $5122 = 0.0, $5123 = 0.0, $5124 = 0.0, $5125 = 0.0, $5126 = 0.0, $5127 = 0.0, $5128 = 0.0, $5129 = 0.0, $513 = 0.0, $5130 = 0, $5131 = 0, $5132 = 0.0, $5133 = 0.0, $5134 = 0.0, $5135 = 0.0;
 var $5136 = 0.0, $5137 = 0.0, $5138 = 0.0, $5139 = 0.0, $514 = 0.0, $5140 = 0.0, $5141 = 0.0, $5142 = 0.0, $5143 = 0.0, $5144 = 0.0, $5145 = 0.0, $5146 = 0.0, $5147 = 0.0, $5148 = 0.0, $5149 = 0.0, $515 = 0.0, $5150 = 0.0, $5151 = 0.0, $5152 = 0.0, $5153 = 0.0;
 var $5154 = 0.0, $5155 = 0.0, $5156 = 0.0, $5157 = 0.0, $5158 = 0.0, $5159 = 0.0, $516 = 0.0, $5160 = 0.0, $5161 = 0.0, $5162 = 0.0, $5163 = 0.0, $5164 = 0.0, $5165 = 0.0, $5166 = 0.0, $5167 = 0.0, $5168 = 0.0, $5169 = 0.0, $517 = 0.0, $5170 = 0.0, $5171 = 0;
 var $5172 = 0.0, $5173 = 0, $5174 = 0.0, $5175 = 0, $5176 = 0.0, $5177 = 0, $5178 = 0.0, $5179 = 0, $518 = 0.0, $5180 = 0.0, $5181 = 0.0, $5182 = 0.0, $5183 = 0.0, $5184 = 0.0, $5185 = 0.0, $5186 = 0.0, $5187 = 0.0, $5188 = 0.0, $5189 = 0.0, $519 = 0.0;
 var $5190 = 0.0, $5191 = 0.0, $5192 = 0.0, $5193 = 0.0, $5194 = 0.0, $5195 = 0.0, $5196 = 0.0, $5197 = 0.0, $5198 = 0.0, $5199 = 0.0, $52 = 0, $520 = 0.0, $5200 = 0, $5201 = 0.0, $5202 = 0.0, $5203 = 0.0, $5204 = 0.0, $5205 = 0.0, $5206 = 0.0, $5207 = 0.0;
 var $5208 = 0, $5209 = 0.0, $521 = 0.0, $5210 = 0, $5211 = 0.0, $5212 = 0.0, $5213 = 0, $5214 = 0.0, $5215 = 0.0, $5216 = 0, $5217 = 0.0, $5218 = 0.0, $5219 = 0.0, $522 = 0.0, $5220 = 0.0, $5221 = 0.0, $5222 = 0.0, $5223 = 0.0, $5224 = 0.0, $5225 = 0.0;
 var $5226 = 0.0, $5227 = 0.0, $5228 = 0.0, $5229 = 0.0, $523 = 0.0, $5230 = 0.0, $5231 = 0.0, $5232 = 0.0, $5233 = 0, $5234 = 0.0, $5235 = 0.0, $5236 = 0.0, $5237 = 0.0, $5238 = 0, $5239 = 0.0, $524 = 0.0, $5240 = 0, $5241 = 0.0, $5242 = 0.0, $5243 = 0.0;
 var $5244 = 0, $5245 = 0.0, $5246 = 0.0, $5247 = 0.0, $5248 = 0.0, $5249 = 0, $525 = 0.0, $5250 = 0.0, $5251 = 0.0, $5252 = 0.0, $5253 = 0.0, $5254 = 0.0, $5255 = 0, $5256 = 0.0, $5257 = 0.0, $5258 = 0.0, $5259 = 0.0, $526 = 0.0, $5260 = 0.0, $5261 = 0.0;
 var $5262 = 0.0, $5263 = 0.0, $5264 = 0, $5265 = 0.0, $5266 = 0, $5267 = 0.0, $5268 = 0.0, $5269 = 0.0, $527 = 0.0, $5270 = 0.0, $5271 = 0.0, $5272 = 0.0, $5273 = 0.0, $5274 = 0.0, $5275 = 0.0, $5276 = 0.0, $5277 = 0.0, $5278 = 0.0, $5279 = 0.0, $528 = 0.0;
 var $5280 = 0, $5281 = 0.0, $5282 = 0.0, $5283 = 0.0, $5284 = 0.0, $5285 = 0.0, $5286 = 0, $5287 = 0.0, $5288 = 0, $5289 = 0.0, $529 = 0.0, $5290 = 0.0, $5291 = 0.0, $5292 = 0.0, $5293 = 0.0, $5294 = 0.0, $5295 = 0.0, $5296 = 0.0, $5297 = 0.0, $5298 = 0.0;
 var $5299 = 0.0, $53 = 0, $530 = 0.0, $5300 = 0.0, $5301 = 0.0, $5302 = 0.0, $5303 = 0.0, $5304 = 0.0, $5305 = 0.0, $5306 = 0.0, $5307 = 0.0, $5308 = 0.0, $5309 = 0, $531 = 0.0, $5310 = 0.0, $5311 = 0.0, $5312 = 0, $5313 = 0.0, $5314 = 0, $5315 = 0.0;
 var $5316 = 0, $5317 = 0.0, $5318 = 0.0, $5319 = 0.0, $532 = 0.0, $5320 = 0, $5321 = 0.0, $5322 = 0.0, $5323 = 0.0, $5324 = 0.0, $5325 = 0, $5326 = 0.0, $5327 = 0.0, $5328 = 0.0, $5329 = 0.0, $533 = 0.0, $5330 = 0.0, $5331 = 0, $5332 = 0.0, $5333 = 0.0;
 var $5334 = 0.0, $5335 = 0.0, $5336 = 0.0, $5337 = 0.0, $5338 = 0.0, $5339 = 0.0, $534 = 0.0, $5340 = 0, $5341 = 0.0, $5342 = 0, $5343 = 0.0, $5344 = 0.0, $5345 = 0.0, $5346 = 0.0, $5347 = 0.0, $5348 = 0.0, $5349 = 0.0, $535 = 0.0, $5350 = 0.0, $5351 = 0.0;
 var $5352 = 0.0, $5353 = 0.0, $5354 = 0.0, $5355 = 0.0, $5356 = 0, $5357 = 0.0, $5358 = 0.0, $5359 = 0.0, $536 = 0.0, $5360 = 0.0, $5361 = 0.0, $5362 = 0, $5363 = 0.0, $5364 = 0, $5365 = 0.0, $5366 = 0.0, $5367 = 0.0, $5368 = 0.0, $5369 = 0.0, $537 = 0.0;
 var $5370 = 0.0, $5371 = 0.0, $5372 = 0.0, $5373 = 0.0, $5374 = 0.0, $5375 = 0.0, $5376 = 0.0, $5377 = 0.0, $5378 = 0.0, $5379 = 0.0, $538 = 0.0, $5380 = 0.0, $5381 = 0.0, $5382 = 0, $5383 = 0.0, $5384 = 0.0, $5385 = 0, $5386 = 0.0, $5387 = 0, $5388 = 0.0;
 var $5389 = 0.0, $539 = 0.0, $5390 = 0.0, $5391 = 0.0, $5392 = 0.0, $5393 = 0.0, $5394 = 0.0, $5395 = 0.0, $5396 = 0.0, $5397 = 0.0, $5398 = 0, $5399 = 0.0, $54 = 0, $540 = 0.0, $5400 = 0.0, $5401 = 0.0, $5402 = 0.0, $5403 = 0, $5404 = 0.0, $5405 = 0.0;
 var $5406 = 0.0, $5407 = 0.0, $5408 = 0.0, $5409 = 0, $541 = 0.0, $5410 = 0.0, $5411 = 0.0, $5412 = 0.0, $5413 = 0.0, $5414 = 0.0, $5415 = 0.0, $5416 = 0.0, $5417 = 0.0, $5418 = 0.0, $5419 = 0.0, $542 = 0.0, $5420 = 0.0, $5421 = 0.0, $5422 = 0.0, $5423 = 0.0;
 var $5424 = 0.0, $5425 = 0, $5426 = 0.0, $5427 = 0, $5428 = 0.0, $5429 = 0.0, $543 = 0.0, $5430 = 0.0, $5431 = 0.0, $5432 = 0.0, $5433 = 0.0, $5434 = 0.0, $5435 = 0.0, $5436 = 0.0, $5437 = 0.0, $5438 = 0.0, $5439 = 0.0, $544 = 0.0, $5440 = 0.0, $5441 = 0.0;
 var $5442 = 0.0, $5443 = 0.0, $5444 = 0.0, $5445 = 0.0, $5446 = 0.0, $5447 = 0.0, $5448 = 0, $5449 = 0.0, $545 = 0.0, $5450 = 0.0, $5451 = 0.0, $5452 = 0.0, $5453 = 0, $5454 = 0.0, $5455 = 0, $5456 = 0.0, $5457 = 0.0, $5458 = 0.0, $5459 = 0.0, $546 = 0.0;
 var $5460 = 0.0, $5461 = 0.0, $5462 = 0.0, $5463 = 0.0, $5464 = 0.0, $5465 = 0.0, $5466 = 0.0, $5467 = 0.0, $5468 = 0.0, $5469 = 0.0, $547 = 0.0, $5470 = 0.0, $5471 = 0.0, $5472 = 0.0, $5473 = 0, $5474 = 0.0, $5475 = 0.0, $5476 = 0, $5477 = 0.0, $5478 = 0;
 var $5479 = 0.0, $548 = 0.0, $5480 = 0.0, $5481 = 0.0, $5482 = 0.0, $5483 = 0.0, $5484 = 0.0, $5485 = 0.0, $5486 = 0.0, $5487 = 0.0, $5488 = 0.0, $5489 = 0, $549 = 0.0, $5490 = 0.0, $5491 = 0.0, $5492 = 0.0, $5493 = 0.0, $5494 = 0, $5495 = 0.0, $5496 = 0.0;
 var $5497 = 0.0, $5498 = 0.0, $5499 = 0.0, $55 = 0, $550 = 0.0, $5500 = 0, $5501 = 0.0, $5502 = 0.0, $5503 = 0.0, $5504 = 0.0, $5505 = 0.0, $5506 = 0.0, $5507 = 0.0, $5508 = 0.0, $5509 = 0.0, $551 = 0.0, $5510 = 0.0, $5511 = 0.0, $5512 = 0.0, $5513 = 0.0;
 var $5514 = 0.0, $5515 = 0.0, $5516 = 0, $5517 = 0.0, $5518 = 0, $5519 = 0.0, $552 = 0.0, $5520 = 0.0, $5521 = 0.0, $5522 = 0.0, $5523 = 0.0, $5524 = 0.0, $5525 = 0.0, $5526 = 0.0, $5527 = 0.0, $5528 = 0.0, $5529 = 0.0, $553 = 0.0, $5530 = 0.0, $5531 = 0.0;
 var $5532 = 0.0, $5533 = 0.0, $5534 = 0.0, $5535 = 0.0, $5536 = 0.0, $5537 = 0.0, $5538 = 0.0, $5539 = 0, $554 = 0.0, $5540 = 0.0, $5541 = 0.0, $5542 = 0.0, $5543 = 0.0, $5544 = 0, $5545 = 0.0, $5546 = 0, $5547 = 0.0, $5548 = 0, $5549 = 0, $555 = 0.0;
 var $5550 = 0.0, $5551 = 0.0, $5552 = 0.0, $5553 = 0.0, $5554 = 0.0, $5555 = 0.0, $5556 = 0.0, $5557 = 0.0, $5558 = 0.0, $5559 = 0.0, $556 = 0.0, $5560 = 0.0, $5561 = 0.0, $5562 = 0.0, $5563 = 0, $5564 = 0.0, $5565 = 0.0, $5566 = 0.0, $5567 = 0.0, $5568 = 0;
 var $5569 = 0.0, $557 = 0.0, $5570 = 0.0, $5571 = 0.0, $5572 = 0.0, $5573 = 0.0, $5574 = 0, $5575 = 0.0, $5576 = 0.0, $5577 = 0.0, $5578 = 0.0, $5579 = 0.0, $558 = 0.0, $5580 = 0.0, $5581 = 0.0, $5582 = 0.0, $5583 = 0.0, $5584 = 0.0, $5585 = 0.0, $5586 = 0.0;
 var $5587 = 0.0, $5588 = 0.0, $5589 = 0.0, $559 = 0.0, $5590 = 0.0, $5591 = 0.0, $5592 = 0.0, $5593 = 0, $5594 = 0.0, $5595 = 0, $5596 = 0.0, $5597 = 0.0, $5598 = 0.0, $5599 = 0.0, $56 = 0, $560 = 0.0, $5600 = 0.0, $5601 = 0.0, $5602 = 0.0, $5603 = 0.0;
 var $5604 = 0.0, $5605 = 0.0, $5606 = 0.0, $5607 = 0.0, $5608 = 0.0, $5609 = 0.0, $561 = 0.0, $5610 = 0.0, $5611 = 0.0, $5612 = 0.0, $5613 = 0.0, $5614 = 0.0, $5615 = 0.0, $5616 = 0.0, $5617 = 0.0, $5618 = 0.0, $5619 = 0.0, $562 = 0.0, $5620 = 0.0, $5621 = 0.0;
 var $5622 = 0.0, $5623 = 0.0, $5624 = 0.0, $5625 = 0.0, $5626 = 0.0, $5627 = 0, $5628 = 0.0, $5629 = 0.0, $563 = 0.0, $5630 = 0.0, $5631 = 0.0, $5632 = 0.0, $5633 = 0, $5634 = 0.0, $5635 = 0, $5636 = 0.0, $5637 = 0, $5638 = 0.0, $5639 = 0, $564 = 0.0;
 var $5640 = 0.0, $5641 = 0, $5642 = 0, $5643 = 0.0, $5644 = 0.0, $5645 = 0.0, $5646 = 0.0, $5647 = 0.0, $5648 = 0, $5649 = 0.0, $565 = 0.0, $5650 = 0.0, $5651 = 0.0, $5652 = 0.0, $5653 = 0, $5654 = 0.0, $5655 = 0.0, $5656 = 0.0, $5657 = 0.0, $5658 = 0.0;
 var $5659 = 0, $566 = 0.0, $5660 = 0.0, $5661 = 0.0, $5662 = 0.0, $5663 = 0.0, $5664 = 0.0, $5665 = 0.0, $5666 = 0.0, $5667 = 0.0, $5668 = 0.0, $5669 = 0.0, $567 = 0.0, $5670 = 0, $5671 = 0.0, $5672 = 0, $5673 = 0.0, $5674 = 0.0, $5675 = 0.0, $5676 = 0.0;
 var $5677 = 0.0, $5678 = 0.0, $5679 = 0.0, $568 = 0.0, $5680 = 0.0, $5681 = 0.0, $5682 = 0.0, $5683 = 0.0, $5684 = 0.0, $5685 = 0.0, $5686 = 0.0, $5687 = 0.0, $5688 = 0.0, $5689 = 0.0, $569 = 0.0, $5690 = 0.0, $5691 = 0.0, $5692 = 0.0, $5693 = 0.0, $5694 = 0.0;
 var $5695 = 0.0, $5696 = 0.0, $5697 = 0.0, $5698 = 0.0, $5699 = 0.0, $57 = 0, $570 = 0.0, $5700 = 0.0, $5701 = 0.0, $5702 = 0.0, $5703 = 0.0, $5704 = 0, $5705 = 0.0, $5706 = 0.0, $5707 = 0.0, $5708 = 0.0, $5709 = 0.0, $571 = 0.0, $5710 = 0, $5711 = 0.0;
 var $5712 = 0, $5713 = 0.0, $5714 = 0, $5715 = 0.0, $5716 = 0, $5717 = 0.0, $5718 = 0.0, $5719 = 0.0, $572 = 0.0, $5720 = 0.0, $5721 = 0.0, $5722 = 0.0, $5723 = 0.0, $5724 = 0.0, $5725 = 0.0, $5726 = 0.0, $5727 = 0.0, $5728 = 0.0, $5729 = 0.0, $573 = 0.0;
 var $5730 = 0.0, $5731 = 0.0, $5732 = 0.0, $5733 = 0.0, $5734 = 0.0, $5735 = 0.0, $5736 = 0.0, $5737 = 0.0, $5738 = 0, $5739 = 0.0, $574 = 0.0, $5740 = 0.0, $5741 = 0.0, $5742 = 0.0, $5743 = 0.0, $5744 = 0.0, $5745 = 0.0, $5746 = 0.0, $5747 = 0.0, $5748 = 0;
 var $5749 = 0.0, $575 = 0.0, $5750 = 0, $5751 = 0.0, $5752 = 0.0, $5753 = 0, $5754 = 0.0, $5755 = 0.0, $5756 = 0, $5757 = 0.0, $5758 = 0.0, $5759 = 0.0, $576 = 0.0, $5760 = 0.0, $5761 = 0.0, $5762 = 0.0, $5763 = 0.0, $5764 = 0.0, $5765 = 0.0, $5766 = 0.0;
 var $5767 = 0.0, $5768 = 0.0, $5769 = 0.0, $577 = 0.0, $5770 = 0.0, $5771 = 0.0, $5772 = 0.0, $5773 = 0.0, $5774 = 0.0, $5775 = 0, $5776 = 0.0, $5777 = 0.0, $5778 = 0.0, $5779 = 0.0, $578 = 0.0, $5780 = 0, $5781 = 0.0, $5782 = 0, $5783 = 0.0, $5784 = 0.0;
 var $5785 = 0.0, $5786 = 0, $5787 = 0.0, $5788 = 0.0, $5789 = 0.0, $579 = 0.0, $5790 = 0.0, $5791 = 0, $5792 = 0.0, $5793 = 0.0, $5794 = 0.0, $5795 = 0.0, $5796 = 0.0, $5797 = 0, $5798 = 0.0, $5799 = 0.0, $58 = 0, $580 = 0.0, $5800 = 0.0, $5801 = 0.0;
 var $5802 = 0.0, $5803 = 0.0, $5804 = 0.0, $5805 = 0.0, $5806 = 0, $5807 = 0.0, $5808 = 0, $5809 = 0.0, $581 = 0.0, $5810 = 0.0, $5811 = 0.0, $5812 = 0.0, $5813 = 0.0, $5814 = 0.0, $5815 = 0.0, $5816 = 0.0, $5817 = 0.0, $5818 = 0.0, $5819 = 0.0, $582 = 0.0;
 var $5820 = 0.0, $5821 = 0.0, $5822 = 0.0, $5823 = 0, $5824 = 0.0, $5825 = 0.0, $5826 = 0.0, $5827 = 0.0, $5828 = 0.0, $5829 = 0, $583 = 0.0, $5830 = 0.0, $5831 = 0, $5832 = 0.0, $5833 = 0.0, $5834 = 0.0, $5835 = 0.0, $5836 = 0.0, $5837 = 0.0, $5838 = 0.0;
 var $5839 = 0.0, $584 = 0.0, $5840 = 0.0, $5841 = 0.0, $5842 = 0.0, $5843 = 0.0, $5844 = 0.0, $5845 = 0.0, $5846 = 0.0, $5847 = 0.0, $5848 = 0.0, $5849 = 0.0, $585 = 0.0, $5850 = 0.0, $5851 = 0.0, $5852 = 0.0, $5853 = 0.0, $5854 = 0, $5855 = 0.0, $5856 = 0.0;
 var $5857 = 0, $5858 = 0.0, $5859 = 0, $586 = 0.0, $5860 = 0.0, $5861 = 0, $5862 = 0.0, $5863 = 0.0, $5864 = 0.0, $5865 = 0, $5866 = 0.0, $5867 = 0.0, $5868 = 0.0, $5869 = 0.0, $587 = 0.0, $5870 = 0, $5871 = 0.0, $5872 = 0.0, $5873 = 0.0, $5874 = 0.0;
 var $5875 = 0.0, $5876 = 0, $5877 = 0.0, $5878 = 0.0, $5879 = 0.0, $588 = 0.0, $5880 = 0.0, $5881 = 0.0, $5882 = 0.0, $5883 = 0.0, $5884 = 0.0, $5885 = 0, $5886 = 0.0, $5887 = 0, $5888 = 0.0, $5889 = 0.0, $589 = 0.0, $5890 = 0.0, $5891 = 0.0, $5892 = 0.0;
 var $5893 = 0.0, $5894 = 0.0, $5895 = 0.0, $5896 = 0.0, $5897 = 0.0, $5898 = 0.0, $5899 = 0.0, $59 = 0, $590 = 0.0, $5900 = 0.0, $5901 = 0.0, $5902 = 0, $5903 = 0.0, $5904 = 0.0, $5905 = 0.0, $5906 = 0.0, $5907 = 0.0, $5908 = 0, $5909 = 0.0, $591 = 0.0;
 var $5910 = 0, $5911 = 0.0, $5912 = 0.0, $5913 = 0.0, $5914 = 0.0, $5915 = 0.0, $5916 = 0.0, $5917 = 0.0, $5918 = 0.0, $5919 = 0.0, $592 = 0.0, $5920 = 0.0, $5921 = 0.0, $5922 = 0.0, $5923 = 0.0, $5924 = 0.0, $5925 = 0.0, $5926 = 0.0, $5927 = 0.0, $5928 = 0.0;
 var $5929 = 0.0, $593 = 0.0, $5930 = 0, $5931 = 0.0, $5932 = 0.0, $5933 = 0, $5934 = 0.0, $5935 = 0, $5936 = 0.0, $5937 = 0.0, $5938 = 0.0, $5939 = 0.0, $594 = 0.0, $5940 = 0.0, $5941 = 0.0, $5942 = 0.0, $5943 = 0.0, $5944 = 0.0, $5945 = 0.0, $5946 = 0;
 var $5947 = 0.0, $5948 = 0.0, $5949 = 0.0, $595 = 0.0, $5950 = 0.0, $5951 = 0, $5952 = 0.0, $5953 = 0.0, $5954 = 0.0, $5955 = 0.0, $5956 = 0.0, $5957 = 0, $5958 = 0.0, $5959 = 0.0, $596 = 0.0, $5960 = 0.0, $5961 = 0.0, $5962 = 0.0, $5963 = 0.0, $5964 = 0.0;
 var $5965 = 0.0, $5966 = 0.0, $5967 = 0.0, $5968 = 0.0, $5969 = 0.0, $597 = 0.0, $5970 = 0.0, $5971 = 0.0, $5972 = 0.0, $5973 = 0, $5974 = 0.0, $5975 = 0, $5976 = 0.0, $5977 = 0.0, $5978 = 0.0, $5979 = 0.0, $598 = 0.0, $5980 = 0.0, $5981 = 0.0, $5982 = 0.0;
 var $5983 = 0.0, $5984 = 0.0, $5985 = 0.0, $5986 = 0.0, $5987 = 0.0, $5988 = 0.0, $5989 = 0.0, $599 = 0.0, $5990 = 0.0, $5991 = 0.0, $5992 = 0.0, $5993 = 0.0, $5994 = 0.0, $5995 = 0.0, $5996 = 0, $5997 = 0.0, $5998 = 0.0, $5999 = 0.0, $6 = 0, $60 = 0;
 var $600 = 0.0, $6000 = 0.0, $6001 = 0.0, $6002 = 0, $6003 = 0.0, $6004 = 0, $6005 = 0.0, $6006 = 0.0, $6007 = 0.0, $6008 = 0.0, $6009 = 0.0, $601 = 0.0, $6010 = 0.0, $6011 = 0.0, $6012 = 0.0, $6013 = 0.0, $6014 = 0.0, $6015 = 0.0, $6016 = 0.0, $6017 = 0.0;
 var $6018 = 0.0, $6019 = 0.0, $602 = 0.0, $6020 = 0.0, $6021 = 0.0, $6022 = 0.0, $6023 = 0.0, $6024 = 0, $6025 = 0.0, $6026 = 0.0, $6027 = 0, $6028 = 0.0, $6029 = 0, $603 = 0.0, $6030 = 0.0, $6031 = 0.0, $6032 = 0.0, $6033 = 0.0, $6034 = 0.0, $6035 = 0.0;
 var $6036 = 0.0, $6037 = 0.0, $6038 = 0.0, $6039 = 0.0, $604 = 0.0, $6040 = 0, $6041 = 0.0, $6042 = 0.0, $6043 = 0.0, $6044 = 0.0, $6045 = 0, $6046 = 0.0, $6047 = 0.0, $6048 = 0.0, $6049 = 0.0, $605 = 0.0, $6050 = 0.0, $6051 = 0, $6052 = 0.0, $6053 = 0.0;
 var $6054 = 0.0, $6055 = 0.0, $6056 = 0.0, $6057 = 0.0, $6058 = 0.0, $6059 = 0.0, $606 = 0.0, $6060 = 0.0, $6061 = 0.0, $6062 = 0.0, $6063 = 0.0, $6064 = 0.0, $6065 = 0.0, $6066 = 0.0, $6067 = 0, $6068 = 0.0, $6069 = 0, $607 = 0.0, $6070 = 0.0, $6071 = 0.0;
 var $6072 = 0.0, $6073 = 0.0, $6074 = 0.0, $6075 = 0.0, $6076 = 0.0, $6077 = 0.0, $6078 = 0.0, $6079 = 0.0, $608 = 0.0, $6080 = 0.0, $6081 = 0.0, $6082 = 0.0, $6083 = 0.0, $6084 = 0.0, $6085 = 0.0, $6086 = 0.0, $6087 = 0.0, $6088 = 0.0, $6089 = 0.0, $609 = 0.0;
 var $6090 = 0, $6091 = 0.0, $6092 = 0.0, $6093 = 0.0, $6094 = 0.0, $6095 = 0.0, $6096 = 0, $6097 = 0.0, $6098 = 0, $6099 = 0.0, $61 = 0, $610 = 0.0, $6100 = 0, $6101 = 0, $6102 = 0.0, $6103 = 0.0, $6104 = 0.0, $6105 = 0.0, $6106 = 0.0, $6107 = 0.0;
 var $6108 = 0.0, $6109 = 0.0, $611 = 0.0, $6110 = 0.0, $6111 = 0.0, $6112 = 0.0, $6113 = 0.0, $6114 = 0.0, $6115 = 0, $6116 = 0.0, $6117 = 0.0, $6118 = 0.0, $6119 = 0.0, $612 = 0.0, $6120 = 0, $6121 = 0.0, $6122 = 0.0, $6123 = 0.0, $6124 = 0.0, $6125 = 0.0;
 var $6126 = 0, $6127 = 0.0, $6128 = 0.0, $6129 = 0.0, $613 = 0.0, $6130 = 0.0, $6131 = 0.0, $6132 = 0.0, $6133 = 0.0, $6134 = 0.0, $6135 = 0.0, $6136 = 0.0, $6137 = 0.0, $6138 = 0.0, $6139 = 0.0, $614 = 0.0, $6140 = 0.0, $6141 = 0.0, $6142 = 0.0, $6143 = 0.0;
 var $6144 = 0.0, $6145 = 0, $6146 = 0.0, $6147 = 0, $6148 = 0.0, $6149 = 0.0, $615 = 0.0, $6150 = 0.0, $6151 = 0.0, $6152 = 0.0, $6153 = 0.0, $6154 = 0.0, $6155 = 0.0, $6156 = 0.0, $6157 = 0.0, $6158 = 0.0, $6159 = 0.0, $616 = 0.0, $6160 = 0.0, $6161 = 0.0;
 var $6162 = 0.0, $6163 = 0.0, $6164 = 0.0, $6165 = 0.0, $6166 = 0.0, $6167 = 0.0, $6168 = 0.0, $6169 = 0.0, $617 = 0.0, $6170 = 0.0, $6171 = 0.0, $6172 = 0.0, $6173 = 0.0, $6174 = 0.0, $6175 = 0.0, $6176 = 0.0, $6177 = 0.0, $6178 = 0.0, $6179 = 0.0, $618 = 0.0;
 var $6180 = 0.0, $6181 = 0, $6182 = 0.0, $6183 = 0.0, $6184 = 0.0, $6185 = 0.0, $6186 = 0.0, $6187 = 0, $6188 = 0.0, $6189 = 0, $619 = 0.0, $6190 = 0.0, $6191 = 0, $6192 = 0.0, $6193 = 0, $6194 = 0.0, $6195 = 0, $6196 = 0, $6197 = 0.0, $6198 = 0.0;
 var $6199 = 0.0, $62 = 0, $620 = 0.0, $6200 = 0.0, $6201 = 0.0, $6202 = 0, $6203 = 0.0, $6204 = 0.0, $6205 = 0.0, $6206 = 0.0, $6207 = 0, $6208 = 0.0, $6209 = 0.0, $621 = 0.0, $6210 = 0.0, $6211 = 0.0, $6212 = 0.0, $6213 = 0, $6214 = 0.0, $6215 = 0.0;
 var $6216 = 0.0, $6217 = 0.0, $6218 = 0.0, $6219 = 0.0, $622 = 0.0, $6220 = 0.0, $6221 = 0.0, $6222 = 0.0, $6223 = 0.0, $6224 = 0, $6225 = 0.0, $6226 = 0, $6227 = 0.0, $6228 = 0.0, $6229 = 0.0, $623 = 0.0, $6230 = 0.0, $6231 = 0.0, $6232 = 0.0, $6233 = 0.0;
 var $6234 = 0.0, $6235 = 0.0, $6236 = 0.0, $6237 = 0.0, $6238 = 0.0, $6239 = 0.0, $624 = 0.0, $6240 = 0.0, $6241 = 0.0, $6242 = 0.0, $6243 = 0.0, $6244 = 0.0, $6245 = 0.0, $6246 = 0.0, $6247 = 0.0, $6248 = 0.0, $6249 = 0.0, $625 = 0.0, $6250 = 0.0, $6251 = 0.0;
 var $6252 = 0.0, $6253 = 0.0, $6254 = 0.0, $6255 = 0.0, $6256 = 0.0, $6257 = 0.0, $6258 = 0.0, $6259 = 0.0, $626 = 0.0, $6260 = 0, $6261 = 0.0, $6262 = 0.0, $6263 = 0.0, $6264 = 0.0, $6265 = 0.0, $6266 = 0, $6267 = 0.0, $6268 = 0, $6269 = 0.0, $627 = 0.0;
 var $6270 = 0, $6271 = 0.0, $6272 = 0, $6273 = 0.0, $6274 = 0.0, $6275 = 0.0, $6276 = 0.0, $6277 = 0.0, $6278 = 0.0, $6279 = 0.0, $628 = 0.0, $6280 = 0.0, $6281 = 0.0, $6282 = 0.0, $6283 = 0.0, $6284 = 0.0, $6285 = 0.0, $6286 = 0.0, $6287 = 0.0, $6288 = 0.0;
 var $6289 = 0.0, $629 = 0.0, $6290 = 0.0, $6291 = 0.0, $6292 = 0.0, $6293 = 0.0, $6294 = 0.0, $6295 = 0.0, $6296 = 0.0, $6297 = 0.0, $6298 = 0.0, $6299 = 0, $63 = 0, $630 = 0.0, $6300 = 0.0, $6301 = 0.0, $6302 = 0.0, $6303 = 0.0, $6304 = 0.0, $6305 = 0.0;
 var $6306 = 0.0, $6307 = 0.0, $6308 = 0.0, $6309 = 0.0, $631 = 0.0, $6310 = 0.0, $6311 = 0, $6312 = 0.0, $6313 = 0, $6314 = 0.0, $6315 = 0.0, $6316 = 0, $6317 = 0.0, $6318 = 0.0, $6319 = 0, $632 = 0.0, $6320 = 0.0, $6321 = 0.0, $6322 = 0.0, $6323 = 0.0;
 var $6324 = 0.0, $6325 = 0.0, $6326 = 0.0, $6327 = 0.0, $6328 = 0.0, $6329 = 0.0, $633 = 0.0, $6330 = 0.0, $6331 = 0.0, $6332 = 0.0, $6333 = 0.0, $6334 = 0.0, $6335 = 0.0, $6336 = 0.0, $6337 = 0.0, $6338 = 0.0, $6339 = 0.0, $634 = 0.0, $6340 = 0.0, $6341 = 0.0;
 var $6342 = 0, $6343 = 0.0, $6344 = 0.0, $6345 = 0.0, $6346 = 0, $6347 = 0.0, $6348 = 0, $6349 = 0.0, $635 = 0.0, $6350 = 0.0, $6351 = 0.0, $6352 = 0.0, $6353 = 0.0, $6354 = 0.0, $6355 = 0.0, $6356 = 0.0, $6357 = 0.0, $6358 = 0.0, $6359 = 0, $636 = 0.0;
 var $6360 = 0.0, $6361 = 0.0, $6362 = 0.0, $6363 = 0.0, $6364 = 0, $6365 = 0.0, $6366 = 0.0, $6367 = 0.0, $6368 = 0.0, $6369 = 0.0, $637 = 0.0, $6370 = 0, $6371 = 0.0, $6372 = 0.0, $6373 = 0.0, $6374 = 0.0, $6375 = 0.0, $6376 = 0.0, $6377 = 0.0, $6378 = 0.0;
 var $6379 = 0.0, $638 = 0.0, $6380 = 0.0, $6381 = 0.0, $6382 = 0.0, $6383 = 0.0, $6384 = 0.0, $6385 = 0.0, $6386 = 0, $6387 = 0.0, $6388 = 0, $6389 = 0.0, $639 = 0.0, $6390 = 0.0, $6391 = 0.0, $6392 = 0.0, $6393 = 0.0, $6394 = 0.0, $6395 = 0.0, $6396 = 0.0;
 var $6397 = 0.0, $6398 = 0.0, $6399 = 0.0, $64 = 0, $640 = 0.0, $6400 = 0.0, $6401 = 0.0, $6402 = 0.0, $6403 = 0.0, $6404 = 0.0, $6405 = 0.0, $6406 = 0.0, $6407 = 0.0, $6408 = 0, $6409 = 0.0, $641 = 0.0, $6410 = 0.0, $6411 = 0.0, $6412 = 0.0, $6413 = 0.0;
 var $6414 = 0, $6415 = 0.0, $6416 = 0, $6417 = 0.0, $6418 = 0.0, $6419 = 0.0, $642 = 0.0, $6420 = 0.0, $6421 = 0.0, $6422 = 0.0, $6423 = 0.0, $6424 = 0.0, $6425 = 0.0, $6426 = 0.0, $6427 = 0.0, $6428 = 0.0, $6429 = 0.0, $643 = 0.0, $6430 = 0.0, $6431 = 0.0;
 var $6432 = 0.0, $6433 = 0.0, $6434 = 0.0, $6435 = 0.0, $6436 = 0.0, $6437 = 0.0, $6438 = 0.0, $6439 = 0.0, $644 = 0.0, $6440 = 0.0, $6441 = 0, $6442 = 0.0, $6443 = 0.0, $6444 = 0.0, $6445 = 0, $6446 = 0.0, $6447 = 0, $6448 = 0.0, $6449 = 0, $645 = 0.0;
 var $6450 = 0.0, $6451 = 0.0, $6452 = 0.0, $6453 = 0.0, $6454 = 0.0, $6455 = 0.0, $6456 = 0.0, $6457 = 0.0, $6458 = 0.0, $6459 = 0.0, $646 = 0.0, $6460 = 0, $6461 = 0.0, $6462 = 0.0, $6463 = 0.0, $6464 = 0.0, $6465 = 0, $6466 = 0.0, $6467 = 0.0, $6468 = 0.0;
 var $6469 = 0.0, $647 = 0.0, $6470 = 0.0, $6471 = 0, $6472 = 0.0, $6473 = 0.0, $6474 = 0.0, $6475 = 0.0, $6476 = 0.0, $6477 = 0.0, $6478 = 0.0, $6479 = 0.0, $648 = 0.0, $6480 = 0.0, $6481 = 0.0, $6482 = 0.0, $6483 = 0.0, $6484 = 0.0, $6485 = 0.0, $6486 = 0.0;
 var $6487 = 0, $6488 = 0.0, $6489 = 0, $649 = 0.0, $6490 = 0.0, $6491 = 0.0, $6492 = 0.0, $6493 = 0.0, $6494 = 0.0, $6495 = 0.0, $6496 = 0.0, $6497 = 0.0, $6498 = 0.0, $6499 = 0.0, $65 = 0, $650 = 0.0, $6500 = 0.0, $6501 = 0.0, $6502 = 0.0, $6503 = 0.0;
 var $6504 = 0.0, $6505 = 0.0, $6506 = 0.0, $6507 = 0.0, $6508 = 0.0, $6509 = 0, $651 = 0.0, $6510 = 0.0, $6511 = 0.0, $6512 = 0.0, $6513 = 0.0, $6514 = 0.0, $6515 = 0, $6516 = 0.0, $6517 = 0, $6518 = 0.0, $6519 = 0.0, $652 = 0.0, $6520 = 0.0, $6521 = 0.0;
 var $6522 = 0.0, $6523 = 0.0, $6524 = 0.0, $6525 = 0.0, $6526 = 0.0, $6527 = 0.0, $6528 = 0.0, $6529 = 0.0, $653 = 0.0, $6530 = 0.0, $6531 = 0.0, $6532 = 0.0, $6533 = 0.0, $6534 = 0.0, $6535 = 0.0, $6536 = 0.0, $6537 = 0.0, $6538 = 0.0, $6539 = 0, $654 = 0.0;
 var $6540 = 0.0, $6541 = 0.0, $6542 = 0.0, $6543 = 0.0, $6544 = 0, $6545 = 0.0, $6546 = 0, $6547 = 0.0, $6548 = 0.0, $6549 = 0.0, $655 = 0.0, $6550 = 0.0, $6551 = 0.0, $6552 = 0.0, $6553 = 0.0, $6554 = 0.0, $6555 = 0.0, $6556 = 0.0, $6557 = 0.0, $6558 = 0;
 var $6559 = 0.0, $656 = 0.0, $6560 = 0.0, $6561 = 0.0, $6562 = 0.0, $6563 = 0, $6564 = 0.0, $6565 = 0.0, $6566 = 0.0, $6567 = 0.0, $6568 = 0.0, $6569 = 0, $657 = 0.0, $6570 = 0.0, $6571 = 0.0, $6572 = 0.0, $6573 = 0.0, $6574 = 0.0, $6575 = 0.0, $6576 = 0.0;
 var $6577 = 0.0, $6578 = 0.0, $6579 = 0.0, $658 = 0.0, $6580 = 0.0, $6581 = 0.0, $6582 = 0.0, $6583 = 0.0, $6584 = 0.0, $6585 = 0.0, $6586 = 0, $6587 = 0.0, $6588 = 0, $6589 = 0.0, $659 = 0.0, $6590 = 0.0, $6591 = 0.0, $6592 = 0.0, $6593 = 0.0, $6594 = 0.0;
 var $6595 = 0.0, $6596 = 0.0, $6597 = 0.0, $6598 = 0.0, $6599 = 0.0, $66 = 0, $660 = 0.0, $6600 = 0.0, $6601 = 0.0, $6602 = 0.0, $6603 = 0.0, $6604 = 0.0, $6605 = 0.0, $6606 = 0.0, $6607 = 0.0, $6608 = 0.0, $6609 = 0, $661 = 0, $6610 = 0.0, $6611 = 0.0;
 var $6612 = 0.0, $6613 = 0.0, $6614 = 0.0, $6615 = 0, $6616 = 0.0, $6617 = 0, $6618 = 0.0, $6619 = 0.0, $662 = 0, $6620 = 0.0, $6621 = 0.0, $6622 = 0.0, $6623 = 0.0, $6624 = 0.0, $6625 = 0.0, $6626 = 0.0, $6627 = 0.0, $6628 = 0.0, $6629 = 0.0, $663 = 0;
 var $6630 = 0.0, $6631 = 0.0, $6632 = 0.0, $6633 = 0.0, $6634 = 0.0, $6635 = 0.0, $6636 = 0.0, $6637 = 0.0, $6638 = 0.0, $6639 = 0.0, $664 = 0, $6640 = 0.0, $6641 = 0.0, $6642 = 0.0, $6643 = 0, $6644 = 0.0, $6645 = 0.0, $6646 = 0, $6647 = 0.0, $6648 = 0;
 var $6649 = 0.0, $665 = 0, $6650 = 0, $6651 = 0.0, $6652 = 0.0, $6653 = 0.0, $6654 = 0.0, $6655 = 0.0, $6656 = 0.0, $6657 = 0.0, $6658 = 0.0, $6659 = 0.0, $666 = 0, $6660 = 0.0, $6661 = 0.0, $6662 = 0, $6663 = 0.0, $6664 = 0.0, $6665 = 0.0, $6666 = 0.0;
 var $6667 = 0, $6668 = 0.0, $6669 = 0.0, $667 = 0, $6670 = 0.0, $6671 = 0.0, $6672 = 0.0, $6673 = 0, $6674 = 0.0, $6675 = 0.0, $6676 = 0.0, $6677 = 0.0, $6678 = 0.0, $6679 = 0.0, $668 = 0, $6680 = 0.0, $6681 = 0.0, $6682 = 0.0, $6683 = 0.0, $6684 = 0.0;
 var $6685 = 0.0, $6686 = 0.0, $6687 = 0.0, $6688 = 0.0, $6689 = 0.0, $669 = 0, $6690 = 0, $6691 = 0.0, $6692 = 0, $6693 = 0.0, $6694 = 0.0, $6695 = 0.0, $6696 = 0.0, $6697 = 0.0, $6698 = 0.0, $6699 = 0.0, $67 = 0, $670 = 0.0, $6700 = 0.0, $6701 = 0.0;
 var $6702 = 0.0, $6703 = 0.0, $6704 = 0.0, $6705 = 0.0, $6706 = 0.0, $6707 = 0.0, $6708 = 0.0, $6709 = 0.0, $671 = 0.0, $6710 = 0.0, $6711 = 0.0, $6712 = 0.0, $6713 = 0, $6714 = 0.0, $6715 = 0.0, $6716 = 0.0, $6717 = 0.0, $6718 = 0.0, $6719 = 0, $672 = 0.0;
 var $6720 = 0.0, $6721 = 0, $6722 = 0.0, $6723 = 0, $6724 = 0, $6725 = 0.0, $6726 = 0.0, $6727 = 0.0, $6728 = 0.0, $6729 = 0.0, $673 = 0.0, $6730 = 0.0, $6731 = 0.0, $6732 = 0.0, $6733 = 0.0, $6734 = 0.0, $6735 = 0.0, $6736 = 0.0, $6737 = 0.0, $6738 = 0.0;
 var $6739 = 0, $674 = 0, $6740 = 0.0, $6741 = 0.0, $6742 = 0.0, $6743 = 0.0, $6744 = 0, $6745 = 0.0, $6746 = 0.0, $6747 = 0.0, $6748 = 0.0, $6749 = 0.0, $675 = 0, $6750 = 0, $6751 = 0.0, $6752 = 0.0, $6753 = 0.0, $6754 = 0.0, $6755 = 0.0, $6756 = 0.0;
 var $6757 = 0.0, $6758 = 0.0, $6759 = 0.0, $676 = 0.0, $6760 = 0.0, $6761 = 0.0, $6762 = 0.0, $6763 = 0.0, $6764 = 0.0, $6765 = 0.0, $6766 = 0.0, $6767 = 0.0, $6768 = 0.0, $6769 = 0.0, $677 = 0, $6770 = 0, $6771 = 0.0, $6772 = 0, $6773 = 0.0, $6774 = 0.0;
 var $6775 = 0.0, $6776 = 0.0, $6777 = 0.0, $6778 = 0.0, $6779 = 0.0, $678 = 0.0, $6780 = 0.0, $6781 = 0.0, $6782 = 0.0, $6783 = 0.0, $6784 = 0.0, $6785 = 0.0, $6786 = 0.0, $6787 = 0.0, $6788 = 0.0, $6789 = 0.0, $679 = 0.0, $6790 = 0.0, $6791 = 0.0, $6792 = 0.0;
 var $6793 = 0.0, $6794 = 0.0, $6795 = 0.0, $6796 = 0.0, $6797 = 0.0, $6798 = 0.0, $6799 = 0.0, $68 = 0, $680 = 0, $6800 = 0.0, $6801 = 0.0, $6802 = 0.0, $6803 = 0.0, $6804 = 0.0, $6805 = 0.0, $6806 = 0.0, $6807 = 0.0, $6808 = 0.0, $6809 = 0.0, $681 = 0.0;
 var $6810 = 0.0, $6811 = 0.0, $6812 = 0.0, $6813 = 0.0, $6814 = 0, $6815 = 0.0, $6816 = 0.0, $6817 = 0.0, $6818 = 0.0, $6819 = 0.0, $682 = 0.0, $6820 = 0, $6821 = 0.0, $6822 = 0, $6823 = 0.0, $6824 = 0, $6825 = 0.0, $6826 = 0, $6827 = 0.0, $6828 = 0;
 var $6829 = 0, $683 = 0, $6830 = 0.0, $6831 = 0.0, $6832 = 0.0, $6833 = 0.0, $6834 = 0.0, $6835 = 0.0, $6836 = 0.0, $6837 = 0.0, $6838 = 0.0, $6839 = 0.0, $684 = 0, $6840 = 0.0, $6841 = 0.0, $6842 = 0.0, $6843 = 0, $6844 = 0.0, $6845 = 0.0, $6846 = 0.0;
 var $6847 = 0.0, $6848 = 0, $6849 = 0.0, $685 = 0, $6850 = 0.0, $6851 = 0.0, $6852 = 0.0, $6853 = 0.0, $6854 = 0, $6855 = 0.0, $6856 = 0.0, $6857 = 0.0, $6858 = 0.0, $6859 = 0.0, $686 = 0, $6860 = 0.0, $6861 = 0.0, $6862 = 0.0, $6863 = 0.0, $6864 = 0.0;
 var $6865 = 0.0, $6866 = 0.0, $6867 = 0.0, $6868 = 0.0, $6869 = 0.0, $687 = 0, $6870 = 0.0, $6871 = 0.0, $6872 = 0.0, $6873 = 0, $6874 = 0.0, $6875 = 0, $6876 = 0.0, $6877 = 0.0, $6878 = 0.0, $6879 = 0.0, $688 = 0, $6880 = 0.0, $6881 = 0.0, $6882 = 0.0;
 var $6883 = 0.0, $6884 = 0.0, $6885 = 0.0, $6886 = 0.0, $6887 = 0.0, $6888 = 0.0, $6889 = 0.0, $689 = 0, $6890 = 0.0, $6891 = 0.0, $6892 = 0.0, $6893 = 0.0, $6894 = 0.0, $6895 = 0.0, $6896 = 0.0, $6897 = 0.0, $6898 = 0.0, $6899 = 0.0, $69 = 0, $690 = 0;
 var $6900 = 0.0, $6901 = 0.0, $6902 = 0.0, $6903 = 0.0, $6904 = 0.0, $6905 = 0.0, $6906 = 0.0, $6907 = 0.0, $6908 = 0.0, $6909 = 0.0, $691 = 0, $6910 = 0.0, $6911 = 0.0, $6912 = 0.0, $6913 = 0.0, $6914 = 0.0, $6915 = 0.0, $6916 = 0.0, $6917 = 0, $6918 = 0.0;
 var $6919 = 0.0, $692 = 0, $6920 = 0.0, $6921 = 0.0, $6922 = 0.0, $6923 = 0, $6924 = 0.0, $6925 = 0, $6926 = 0.0, $6927 = 0, $6928 = 0.0, $6929 = 0, $693 = 0, $6930 = 0.0, $6931 = 0.0, $6932 = 0.0, $6933 = 0.0, $6934 = 0.0, $6935 = 0.0, $6936 = 0.0;
 var $6937 = 0.0, $6938 = 0.0, $6939 = 0.0, $694 = 0.0, $6940 = 0.0, $6941 = 0.0, $6942 = 0.0, $6943 = 0.0, $6944 = 0.0, $6945 = 0.0, $6946 = 0.0, $6947 = 0.0, $6948 = 0.0, $6949 = 0.0, $695 = 0, $6950 = 0.0, $6951 = 0.0, $6952 = 0.0, $6953 = 0.0, $6954 = 0.0;
 var $6955 = 0.0, $6956 = 0, $6957 = 0.0, $6958 = 0.0, $6959 = 0.0, $696 = 0.0, $6960 = 0.0, $6961 = 0.0, $6962 = 0.0, $6963 = 0.0, $6964 = 0.0, $6965 = 0.0, $6966 = 0.0, $6967 = 0, $6968 = 0.0, $6969 = 0, $697 = 0, $6970 = 0.0, $6971 = 0.0, $6972 = 0;
 var $6973 = 0.0, $6974 = 0.0, $6975 = 0, $6976 = 0.0, $6977 = 0.0, $6978 = 0.0, $6979 = 0.0, $698 = 0.0, $6980 = 0.0, $6981 = 0.0, $6982 = 0.0, $6983 = 0.0, $6984 = 0.0, $6985 = 0.0, $6986 = 0.0, $6987 = 0.0, $6988 = 0.0, $6989 = 0.0, $699 = 0.0, $6990 = 0.0;
 var $6991 = 0.0, $6992 = 0.0, $6993 = 0.0, $6994 = 0.0, $6995 = 0.0, $6996 = 0.0, $6997 = 0.0, $6998 = 0.0, $6999 = 0.0, $7 = 0, $70 = 0, $700 = 0.0, $7000 = 0, $7001 = 0.0, $7002 = 0.0, $7003 = 0.0, $7004 = 0, $7005 = 0.0, $7006 = 0, $7007 = 0.0;
 var $7008 = 0, $7009 = 0.0, $701 = 0.0, $7010 = 0.0, $7011 = 0.0, $7012 = 0.0, $7013 = 0.0, $7014 = 0.0, $7015 = 0.0, $7016 = 0.0, $7017 = 0.0, $7018 = 0.0, $7019 = 0, $702 = 0, $7020 = 0.0, $7021 = 0.0, $7022 = 0.0, $7023 = 0.0, $7024 = 0, $7025 = 0.0;
 var $7026 = 0.0, $7027 = 0.0, $7028 = 0.0, $7029 = 0.0, $703 = 0, $7030 = 0, $7031 = 0.0, $7032 = 0.0, $7033 = 0.0, $7034 = 0.0, $7035 = 0.0, $7036 = 0.0, $7037 = 0.0, $7038 = 0.0, $7039 = 0.0, $704 = 0, $7040 = 0.0, $7041 = 0.0, $7042 = 0.0, $7043 = 0.0;
 var $7044 = 0.0, $7045 = 0.0, $7046 = 0, $7047 = 0.0, $7048 = 0, $7049 = 0.0, $705 = 0, $7050 = 0.0, $7051 = 0.0, $7052 = 0.0, $7053 = 0.0, $7054 = 0.0, $7055 = 0.0, $7056 = 0.0, $7057 = 0.0, $7058 = 0.0, $7059 = 0.0, $706 = 0, $7060 = 0.0, $7061 = 0.0;
 var $7062 = 0.0, $7063 = 0.0, $7064 = 0.0, $7065 = 0.0, $7066 = 0.0, $7067 = 0.0, $7068 = 0, $7069 = 0.0, $707 = 0, $7070 = 0.0, $7071 = 0.0, $7072 = 0.0, $7073 = 0.0, $7074 = 0, $7075 = 0.0, $7076 = 0, $7077 = 0.0, $7078 = 0.0, $7079 = 0.0, $708 = 0.0;
 var $7080 = 0.0, $7081 = 0.0, $7082 = 0.0, $7083 = 0.0, $7084 = 0.0, $7085 = 0.0, $7086 = 0.0, $7087 = 0.0, $7088 = 0.0, $7089 = 0.0, $709 = 0, $7090 = 0.0, $7091 = 0.0, $7092 = 0.0, $7093 = 0.0, $7094 = 0.0, $7095 = 0.0, $7096 = 0.0, $7097 = 0.0, $7098 = 0.0;
 var $7099 = 0, $71 = 0, $710 = 0.0, $7100 = 0.0, $7101 = 0.0, $7102 = 0.0, $7103 = 0, $7104 = 0.0, $7105 = 0, $7106 = 0.0, $7107 = 0.0, $7108 = 0.0, $7109 = 0.0, $711 = 0.0, $7110 = 0.0, $7111 = 0.0, $7112 = 0.0, $7113 = 0.0, $7114 = 0.0, $7115 = 0.0;
 var $7116 = 0, $7117 = 0.0, $7118 = 0.0, $7119 = 0.0, $712 = 0.0, $7120 = 0.0, $7121 = 0, $7122 = 0.0, $7123 = 0.0, $7124 = 0.0, $7125 = 0.0, $7126 = 0.0, $7127 = 0, $7128 = 0.0, $7129 = 0.0, $713 = 0, $7130 = 0.0, $7131 = 0.0, $7132 = 0.0, $7133 = 0.0;
 var $7134 = 0.0, $7135 = 0.0, $7136 = 0.0, $7137 = 0.0, $7138 = 0.0, $7139 = 0.0, $714 = 0.0, $7140 = 0.0, $7141 = 0.0, $7142 = 0.0, $7143 = 0, $7144 = 0.0, $7145 = 0, $7146 = 0.0, $7147 = 0.0, $7148 = 0.0, $7149 = 0.0, $715 = 0, $7150 = 0.0, $7151 = 0.0;
 var $7152 = 0.0, $7153 = 0.0, $7154 = 0.0, $7155 = 0.0, $7156 = 0.0, $7157 = 0.0, $7158 = 0.0, $7159 = 0.0, $716 = 0.0, $7160 = 0.0, $7161 = 0.0, $7162 = 0.0, $7163 = 0.0, $7164 = 0.0, $7165 = 0, $7166 = 0.0, $7167 = 0.0, $7168 = 0.0, $7169 = 0.0, $717 = 0.0;
 var $7170 = 0.0, $7171 = 0, $7172 = 0.0, $7173 = 0, $7174 = 0.0, $7175 = 0.0, $7176 = 0.0, $7177 = 0.0, $7178 = 0.0, $7179 = 0.0, $718 = 0.0, $7180 = 0.0, $7181 = 0.0, $7182 = 0.0, $7183 = 0.0, $7184 = 0.0, $7185 = 0.0, $7186 = 0.0, $7187 = 0.0, $7188 = 0.0;
 var $7189 = 0.0, $719 = 0, $7190 = 0.0, $7191 = 0.0, $7192 = 0.0, $7193 = 0.0, $7194 = 0.0, $7195 = 0, $7196 = 0.0, $7197 = 0.0, $7198 = 0.0, $7199 = 0.0, $72 = 0, $720 = 0, $7200 = 0, $7201 = 0.0, $7202 = 0, $7203 = 0.0, $7204 = 0.0, $7205 = 0.0;
 var $7206 = 0.0, $7207 = 0.0, $7208 = 0.0, $7209 = 0.0, $721 = 0.0, $7210 = 0.0, $7211 = 0.0, $7212 = 0.0, $7213 = 0.0, $7214 = 0, $7215 = 0.0, $7216 = 0.0, $7217 = 0.0, $7218 = 0.0, $7219 = 0, $722 = 0.0, $7220 = 0.0, $7221 = 0.0, $7222 = 0.0, $7223 = 0.0;
 var $7224 = 0.0, $7225 = 0, $7226 = 0.0, $7227 = 0.0, $7228 = 0.0, $7229 = 0.0, $723 = 0.0, $7230 = 0.0, $7231 = 0.0, $7232 = 0.0, $7233 = 0.0, $7234 = 0.0, $7235 = 0.0, $7236 = 0.0, $7237 = 0.0, $7238 = 0.0, $7239 = 0.0, $724 = 0.0, $7240 = 0.0, $7241 = 0.0;
 var $7242 = 0, $7243 = 0.0, $7244 = 0, $7245 = 0.0, $7246 = 0.0, $7247 = 0.0, $7248 = 0.0, $7249 = 0.0, $725 = 0.0, $7250 = 0.0, $7251 = 0.0, $7252 = 0.0, $7253 = 0.0, $7254 = 0.0, $7255 = 0.0, $7256 = 0.0, $7257 = 0.0, $7258 = 0.0, $7259 = 0.0, $726 = 0.0;
 var $7260 = 0.0, $7261 = 0.0, $7262 = 0.0, $7263 = 0.0, $7264 = 0.0, $7265 = 0, $7266 = 0.0, $7267 = 0.0, $7268 = 0.0, $7269 = 0.0, $727 = 0.0, $7270 = 0.0, $7271 = 0, $7272 = 0.0, $7273 = 0, $7274 = 0.0, $7275 = 0.0, $7276 = 0.0, $7277 = 0.0, $7278 = 0.0;
 var $7279 = 0.0, $728 = 0.0, $7280 = 0.0, $7281 = 0.0, $7282 = 0.0, $7283 = 0.0, $7284 = 0.0, $7285 = 0.0, $7286 = 0.0, $7287 = 0.0, $7288 = 0.0, $7289 = 0.0, $729 = 0.0, $7290 = 0.0, $7291 = 0.0, $7292 = 0.0, $7293 = 0.0, $7294 = 0.0, $7295 = 0.0, $7296 = 0.0;
 var $7297 = 0.0, $7298 = 0.0, $7299 = 0, $73 = 0, $730 = 0.0, $7300 = 0.0, $7301 = 0.0, $7302 = 0, $7303 = 0.0, $7304 = 0, $7305 = 0.0, $7306 = 0, $7307 = 0.0, $7308 = 0.0, $7309 = 0.0, $731 = 0.0, $7310 = 0.0, $7311 = 0.0, $7312 = 0.0, $7313 = 0.0;
 var $7314 = 0.0, $7315 = 0.0, $7316 = 0.0, $7317 = 0.0, $7318 = 0, $7319 = 0.0, $732 = 0.0, $7320 = 0.0, $7321 = 0.0, $7322 = 0.0, $7323 = 0, $7324 = 0.0, $7325 = 0.0, $7326 = 0.0, $7327 = 0.0, $7328 = 0.0, $7329 = 0, $733 = 0.0, $7330 = 0.0, $7331 = 0.0;
 var $7332 = 0.0, $7333 = 0.0, $7334 = 0.0, $7335 = 0.0, $7336 = 0.0, $7337 = 0.0, $7338 = 0.0, $7339 = 0.0, $734 = 0.0, $7340 = 0.0, $7341 = 0.0, $7342 = 0.0, $7343 = 0.0, $7344 = 0.0, $7345 = 0.0, $7346 = 0, $7347 = 0.0, $7348 = 0, $7349 = 0.0, $735 = 0.0;
 var $7350 = 0.0, $7351 = 0.0, $7352 = 0.0, $7353 = 0.0, $7354 = 0.0, $7355 = 0.0, $7356 = 0.0, $7357 = 0.0, $7358 = 0.0, $7359 = 0.0, $736 = 0.0, $7360 = 0.0, $7361 = 0.0, $7362 = 0.0, $7363 = 0.0, $7364 = 0.0, $7365 = 0.0, $7366 = 0.0, $7367 = 0.0, $7368 = 0.0;
 var $7369 = 0, $737 = 0.0, $7370 = 0.0, $7371 = 0.0, $7372 = 0.0, $7373 = 0.0, $7374 = 0.0, $7375 = 0, $7376 = 0.0, $7377 = 0, $7378 = 0.0, $7379 = 0, $738 = 0.0, $7380 = 0, $7381 = 0.0, $7382 = 0.0, $7383 = 0.0, $7384 = 0.0, $7385 = 0.0, $7386 = 0.0;
 var $7387 = 0.0, $7388 = 0.0, $7389 = 0.0, $739 = 0.0, $7390 = 0.0, $7391 = 0.0, $7392 = 0.0, $7393 = 0.0, $7394 = 0.0, $7395 = 0, $7396 = 0.0, $7397 = 0.0, $7398 = 0.0, $7399 = 0.0, $74 = 0, $740 = 0.0, $7400 = 0, $7401 = 0.0, $7402 = 0.0, $7403 = 0.0;
 var $7404 = 0.0, $7405 = 0.0, $7406 = 0, $7407 = 0.0, $7408 = 0.0, $7409 = 0.0, $741 = 0.0, $7410 = 0.0, $7411 = 0.0, $7412 = 0.0, $7413 = 0.0, $7414 = 0.0, $7415 = 0.0, $7416 = 0.0, $7417 = 0.0, $7418 = 0.0, $7419 = 0.0, $742 = 0.0, $7420 = 0.0, $7421 = 0.0;
 var $7422 = 0.0, $7423 = 0.0, $7424 = 0.0, $7425 = 0.0, $7426 = 0, $7427 = 0.0, $7428 = 0, $7429 = 0.0, $743 = 0.0, $7430 = 0.0, $7431 = 0.0, $7432 = 0.0, $7433 = 0.0, $7434 = 0.0, $7435 = 0.0, $7436 = 0.0, $7437 = 0.0, $7438 = 0.0, $7439 = 0.0, $744 = 0.0;
 var $7440 = 0.0, $7441 = 0.0, $7442 = 0.0, $7443 = 0.0, $7444 = 0.0, $7445 = 0.0, $7446 = 0.0, $7447 = 0.0, $7448 = 0.0, $7449 = 0.0, $745 = 0.0, $7450 = 0.0, $7451 = 0.0, $7452 = 0.0, $7453 = 0.0, $7454 = 0.0, $7455 = 0.0, $7456 = 0.0, $7457 = 0.0, $7458 = 0.0;
 var $7459 = 0.0, $746 = 0.0, $7460 = 0.0, $7461 = 0.0, $7462 = 0.0, $7463 = 0.0, $7464 = 0.0, $7465 = 0.0, $7466 = 0.0, $7467 = 0.0, $7468 = 0.0, $7469 = 0.0, $747 = 0.0, $7470 = 0.0, $7471 = 0, $7472 = 0.0, $7473 = 0.0, $7474 = 0.0, $7475 = 0.0, $7476 = 0.0;
 var $7477 = 0, $7478 = 0.0, $7479 = 0, $748 = 0.0, $7480 = 0.0, $7481 = 0, $7482 = 0.0, $7483 = 0, $7484 = 0.0, $7485 = 0, $7486 = 0, $7487 = 0.0, $7488 = 0.0, $7489 = 0.0, $749 = 0.0, $7490 = 0.0, $7491 = 0.0, $7492 = 0.0, $7493 = 0.0, $7494 = 0.0;
 var $7495 = 0.0, $7496 = 0.0, $7497 = 0.0, $7498 = 0.0, $7499 = 0.0, $75 = 0, $750 = 0.0, $7500 = 0, $7501 = 0.0, $7502 = 0.0, $7503 = 0.0, $7504 = 0.0, $7505 = 0, $7506 = 0.0, $7507 = 0.0, $7508 = 0.0, $7509 = 0.0, $751 = 0.0, $7510 = 0.0, $7511 = 0;
 var $7512 = 0.0, $7513 = 0.0, $7514 = 0.0, $7515 = 0.0, $7516 = 0.0, $7517 = 0.0, $7518 = 0.0, $7519 = 0.0, $752 = 0.0, $7520 = 0.0, $7521 = 0.0, $7522 = 0.0, $7523 = 0.0, $7524 = 0.0, $7525 = 0.0, $7526 = 0.0, $7527 = 0.0, $7528 = 0.0, $7529 = 0.0, $753 = 0.0;
 var $7530 = 0, $7531 = 0.0, $7532 = 0, $7533 = 0.0, $7534 = 0.0, $7535 = 0.0, $7536 = 0.0, $7537 = 0.0, $7538 = 0.0, $7539 = 0.0, $754 = 0.0, $7540 = 0.0, $7541 = 0.0, $7542 = 0.0, $7543 = 0.0, $7544 = 0.0, $7545 = 0.0, $7546 = 0.0, $7547 = 0.0, $7548 = 0.0;
 var $7549 = 0.0, $755 = 0.0, $7550 = 0.0, $7551 = 0.0, $7552 = 0.0, $7553 = 0.0, $7554 = 0.0, $7555 = 0.0, $7556 = 0.0, $7557 = 0.0, $7558 = 0.0, $7559 = 0.0, $756 = 0.0, $7560 = 0.0, $7561 = 0.0, $7562 = 0.0, $7563 = 0.0, $7564 = 0.0, $7565 = 0.0, $7566 = 0.0;
 var $7567 = 0.0, $7568 = 0.0, $7569 = 0.0, $757 = 0, $7570 = 0.0, $7571 = 0.0, $7572 = 0.0, $7573 = 0.0, $7574 = 0.0, $7575 = 0, $7576 = 0.0, $7577 = 0.0, $7578 = 0.0, $7579 = 0.0, $758 = 0.0, $7580 = 0.0, $7581 = 0, $7582 = 0.0, $7583 = 0, $7584 = 0.0;
 var $7585 = 0, $7586 = 0.0, $7587 = 0, $7588 = 0.0, $7589 = 0.0, $759 = 0.0, $7590 = 0.0, $7591 = 0.0, $7592 = 0.0, $7593 = 0.0, $7594 = 0.0, $7595 = 0.0, $7596 = 0.0, $7597 = 0.0, $7598 = 0.0, $7599 = 0.0, $76 = 0, $760 = 0.0, $7600 = 0.0, $7601 = 0.0;
 var $7602 = 0.0, $7603 = 0.0, $7604 = 0.0, $7605 = 0.0, $7606 = 0.0, $7607 = 0.0, $7608 = 0.0, $7609 = 0.0, $761 = 0.0, $7610 = 0.0, $7611 = 0.0, $7612 = 0.0, $7613 = 0, $7614 = 0.0, $7615 = 0.0, $7616 = 0.0, $7617 = 0.0, $7618 = 0.0, $7619 = 0.0, $762 = 0.0;
 var $7620 = 0.0, $7621 = 0.0, $7622 = 0.0, $7623 = 0.0, $7624 = 0.0, $7625 = 0.0, $7626 = 0.0, $7627 = 0.0, $7628 = 0.0, $7629 = 0.0, $763 = 0.0, $7630 = 0, $7631 = 0.0, $7632 = 0, $7633 = 0.0, $7634 = 0.0, $7635 = 0.0, $7636 = 0.0, $7637 = 0.0, $7638 = 0.0;
 var $7639 = 0.0, $764 = 0.0, $7640 = 0.0, $7641 = 0.0, $7642 = 0.0, $7643 = 0, $7644 = 0.0, $7645 = 0.0, $7646 = 0.0, $7647 = 0.0, $7648 = 0.0, $7649 = 0.0, $765 = 0.0, $7650 = 0.0, $7651 = 0.0, $7652 = 0.0, $7653 = 0.0, $7654 = 0, $7655 = 0.0, $7656 = 0.0;
 var $7657 = 0.0, $7658 = 0.0, $7659 = 0.0, $766 = 0.0, $7660 = 0, $7661 = 0.0, $7662 = 0.0, $7663 = 0.0, $7664 = 0.0, $7665 = 0.0, $7666 = 0.0, $7667 = 0.0, $7668 = 0.0, $7669 = 0.0, $767 = 0.0, $7670 = 0.0, $7671 = 0.0, $7672 = 0.0, $7673 = 0.0, $7674 = 0.0;
 var $7675 = 0.0, $7676 = 0.0, $7677 = 0.0, $7678 = 0.0, $7679 = 0.0, $768 = 0.0, $7680 = 0.0, $7681 = 0.0, $7682 = 0, $7683 = 0.0, $7684 = 0, $7685 = 0.0, $7686 = 0.0, $7687 = 0.0, $7688 = 0.0, $7689 = 0.0, $769 = 0.0, $7690 = 0.0, $7691 = 0.0, $7692 = 0.0;
 var $7693 = 0.0, $7694 = 0.0, $7695 = 0.0, $7696 = 0.0, $7697 = 0.0, $7698 = 0.0, $7699 = 0.0, $77 = 0, $770 = 0.0, $7700 = 0.0, $7701 = 0.0, $7702 = 0.0, $7703 = 0.0, $7704 = 0.0, $7705 = 0.0, $7706 = 0.0, $7707 = 0.0, $7708 = 0.0, $7709 = 0.0, $771 = 0.0;
 var $7710 = 0.0, $7711 = 0.0, $7712 = 0.0, $7713 = 0.0, $7714 = 0.0, $7715 = 0.0, $7716 = 0.0, $7717 = 0.0, $7718 = 0.0, $7719 = 0.0, $772 = 0.0, $7720 = 0.0, $7721 = 0.0, $7722 = 0.0, $7723 = 0.0, $7724 = 0.0, $7725 = 0.0, $7726 = 0.0, $7727 = 0.0, $7728 = 0.0;
 var $7729 = 0.0, $773 = 0.0, $7730 = 0, $7731 = 0.0, $7732 = 0.0, $7733 = 0.0, $7734 = 0.0, $7735 = 0.0, $7736 = 0.0, $7737 = 0.0, $7738 = 0, $7739 = 0.0, $774 = 0.0, $7740 = 0, $7741 = 0.0, $7742 = 0, $7743 = 0.0, $7744 = 0, $7745 = 0.0, $7746 = 0.0;
 var $7747 = 0.0, $7748 = 0.0, $7749 = 0.0, $775 = 0.0, $7750 = 0.0, $7751 = 0.0, $7752 = 0.0, $7753 = 0.0, $7754 = 0.0, $7755 = 0.0, $7756 = 0.0, $7757 = 0.0, $7758 = 0.0, $7759 = 0.0, $776 = 0, $7760 = 0.0, $7761 = 0.0, $7762 = 0.0, $7763 = 0.0, $7764 = 0.0;
 var $7765 = 0.0, $7766 = 0.0, $7767 = 0.0, $7768 = 0.0, $7769 = 0, $777 = 0.0, $7770 = 0.0, $7771 = 0.0, $7772 = 0.0, $7773 = 0.0, $7774 = 0.0, $7775 = 0.0, $7776 = 0.0, $7777 = 0.0, $7778 = 0.0, $7779 = 0.0, $778 = 0.0, $7780 = 0.0, $7781 = 0.0, $7782 = 0.0;
 var $7783 = 0.0, $7784 = 0.0, $7785 = 0.0, $7786 = 0, $7787 = 0.0, $7788 = 0, $7789 = 0.0, $779 = 0, $7790 = 0.0, $7791 = 0.0, $7792 = 0.0, $7793 = 0.0, $7794 = 0.0, $7795 = 0.0, $7796 = 0.0, $7797 = 0.0, $7798 = 0.0, $7799 = 0, $78 = 0, $780 = 0.0;
 var $7800 = 0.0, $7801 = 0.0, $7802 = 0.0, $7803 = 0.0, $7804 = 0.0, $7805 = 0.0, $7806 = 0.0, $7807 = 0.0, $7808 = 0.0, $7809 = 0.0, $781 = 0.0, $7810 = 0, $7811 = 0.0, $7812 = 0.0, $7813 = 0.0, $7814 = 0.0, $7815 = 0.0, $7816 = 0, $7817 = 0.0, $7818 = 0.0;
 var $7819 = 0.0, $782 = 0.0, $7820 = 0.0, $7821 = 0.0, $7822 = 0.0, $7823 = 0.0, $7824 = 0.0, $7825 = 0.0, $7826 = 0.0, $7827 = 0.0, $7828 = 0.0, $7829 = 0.0, $783 = 0.0, $7830 = 0.0, $7831 = 0.0, $7832 = 0.0, $7833 = 0.0, $7834 = 0.0, $7835 = 0.0, $7836 = 0.0;
 var $7837 = 0.0, $7838 = 0, $7839 = 0.0, $784 = 0.0, $7840 = 0, $7841 = 0.0, $7842 = 0.0, $7843 = 0.0, $7844 = 0.0, $7845 = 0.0, $7846 = 0.0, $7847 = 0.0, $7848 = 0.0, $7849 = 0.0, $785 = 0.0, $7850 = 0.0, $7851 = 0.0, $7852 = 0.0, $7853 = 0.0, $7854 = 0.0;
 var $7855 = 0.0, $7856 = 0.0, $7857 = 0.0, $7858 = 0.0, $7859 = 0.0, $786 = 0, $7860 = 0.0, $7861 = 0.0, $7862 = 0.0, $7863 = 0.0, $7864 = 0.0, $7865 = 0.0, $7866 = 0.0, $7867 = 0.0, $7868 = 0.0, $7869 = 0.0, $787 = 0.0, $7870 = 0.0, $7871 = 0.0, $7872 = 0.0;
 var $7873 = 0.0, $7874 = 0.0, $7875 = 0.0, $7876 = 0.0, $7877 = 0.0, $7878 = 0.0, $7879 = 0.0, $788 = 0.0, $7880 = 0.0, $7881 = 0.0, $7882 = 0.0, $7883 = 0.0, $7884 = 0.0, $7885 = 0.0, $7886 = 0, $7887 = 0.0, $7888 = 0.0, $7889 = 0.0, $789 = 0.0, $7890 = 0.0;
 var $7891 = 0.0, $7892 = 0.0, $7893 = 0.0, $7894 = 0, $7895 = 0.0, $7896 = 0, $7897 = 0.0, $7898 = 0, $7899 = 0.0, $79 = 0, $790 = 0.0, $7900 = 0, $7901 = 0.0, $7902 = 0, $7903 = 0, $7904 = 0.0, $7905 = 0.0, $7906 = 0.0, $7907 = 0.0, $7908 = 0.0;
 var $7909 = 0.0, $791 = 0.0, $7910 = 0.0, $7911 = 0.0, $7912 = 0.0, $7913 = 0.0, $7914 = 0.0, $7915 = 0.0, $7916 = 0.0, $7917 = 0.0, $7918 = 0, $7919 = 0, $792 = 0.0, $7920 = 0.0, $7921 = 0.0, $7922 = 0.0, $7923 = 0, $7924 = 0.0, $7925 = 0.0, $7926 = 0.0;
 var $7927 = 0.0, $7928 = 0.0, $7929 = 0.0, $793 = 0.0, $7930 = 0.0, $7931 = 0.0, $7932 = 0.0, $7933 = 0.0, $7934 = 0.0, $7935 = 0.0, $7936 = 0.0, $7937 = 0.0, $7938 = 0.0, $7939 = 0.0, $794 = 0.0, $7940 = 0, $7941 = 0.0, $7942 = 0.0, $7943 = 0.0, $7944 = 0.0;
 var $7945 = 0.0, $7946 = 0, $7947 = 0.0, $7948 = 0.0, $7949 = 0.0, $795 = 0, $7950 = 0.0, $7951 = 0.0, $7952 = 0.0, $7953 = 0.0, $7954 = 0.0, $7955 = 0.0, $7956 = 0.0, $7957 = 0.0, $7958 = 0.0, $7959 = 0.0, $796 = 0.0, $7960 = 0.0, $7961 = 0.0, $7962 = 0.0;
 var $7963 = 0.0, $7964 = 0.0, $7965 = 0, $7966 = 0.0, $7967 = 0, $7968 = 0.0, $7969 = 0.0, $797 = 0.0, $7970 = 0.0, $7971 = 0.0, $7972 = 0.0, $7973 = 0.0, $7974 = 0.0, $7975 = 0.0, $7976 = 0.0, $7977 = 0.0, $7978 = 0.0, $7979 = 0.0, $798 = 0.0, $7980 = 0.0;
 var $7981 = 0.0, $7982 = 0.0, $7983 = 0.0, $7984 = 0.0, $7985 = 0.0, $7986 = 0.0, $7987 = 0.0, $7988 = 0.0, $7989 = 0.0, $799 = 0.0, $7990 = 0.0, $7991 = 0.0, $7992 = 0.0, $7993 = 0.0, $7994 = 0.0, $7995 = 0.0, $7996 = 0.0, $7997 = 0.0, $7998 = 0.0, $7999 = 0.0;
 var $8 = 0, $80 = 0, $800 = 0.0, $8000 = 0.0, $8001 = 0.0, $8002 = 0.0, $8003 = 0.0, $8004 = 0.0, $8005 = 0.0, $8006 = 0.0, $8007 = 0.0, $8008 = 0.0, $8009 = 0.0, $801 = 0.0, $8010 = 0.0, $8011 = 0.0, $8012 = 0.0, $8013 = 0.0, $8014 = 0.0, $8015 = 0.0;
 var $8016 = 0.0, $8017 = 0.0, $8018 = 0.0, $8019 = 0.0, $802 = 0.0, $8020 = 0.0, $8021 = 0.0, $8022 = 0.0, $8023 = 0.0, $8024 = 0.0, $8025 = 0.0, $8026 = 0.0, $8027 = 0.0, $8028 = 0.0, $8029 = 0.0, $803 = 0.0, $8030 = 0.0, $8031 = 0.0, $8032 = 0.0, $8033 = 0;
 var $8034 = 0.0, $8035 = 0.0, $8036 = 0.0, $8037 = 0.0, $8038 = 0.0, $8039 = 0.0, $804 = 0.0, $8040 = 0.0, $8041 = 0.0, $8042 = 0.0, $8043 = 0, $8044 = 0.0, $8045 = 0, $8046 = 0.0, $8047 = 0, $8048 = 0.0, $8049 = 0, $805 = 0.0, $8050 = 0.0, $8051 = 0;
 var $8052 = 0.0, $8053 = 0.0, $8054 = 0.0, $8055 = 0.0, $8056 = 0.0, $8057 = 0.0, $8058 = 0.0, $8059 = 0.0, $806 = 0.0, $8060 = 0.0, $8061 = 0, $8062 = 0, $8063 = 0.0, $8064 = 0, $8065 = 0, $8066 = 0.0, $8067 = 0.0, $8068 = 0.0, $8069 = 0.0, $807 = 0.0;
 var $8070 = 0.0, $8071 = 0.0, $8072 = 0.0, $8073 = 0.0, $8074 = 0.0, $8075 = 0.0, $8076 = 0.0, $8077 = 0.0, $8078 = 0.0, $8079 = 0.0, $808 = 0.0, $8080 = 0.0, $8081 = 0.0, $8082 = 0.0, $8083 = 0.0, $8084 = 0.0, $8085 = 0, $8086 = 0.0, $8087 = 0.0, $8088 = 0.0;
 var $8089 = 0.0, $809 = 0, $8090 = 0.0, $8091 = 0.0, $8092 = 0.0, $8093 = 0, $8094 = 0.0, $8095 = 0.0, $8096 = 0.0, $8097 = 0.0, $8098 = 0.0, $8099 = 0, $81 = 0, $810 = 0, $8100 = 0.0, $8101 = 0.0, $8102 = 0.0, $8103 = 0.0, $8104 = 0.0, $8105 = 0.0;
 var $8106 = 0.0, $8107 = 0.0, $8108 = 0.0, $8109 = 0.0, $811 = 0.0, $8110 = 0.0, $8111 = 0.0, $8112 = 0.0, $8113 = 0.0, $8114 = 0.0, $8115 = 0.0, $8116 = 0.0, $8117 = 0.0, $8118 = 0.0, $8119 = 0.0, $812 = 0.0, $8120 = 0.0, $8121 = 0.0, $8122 = 0.0, $8123 = 0.0;
 var $8124 = 0.0, $8125 = 0, $8126 = 0.0, $8127 = 0, $8128 = 0.0, $8129 = 0.0, $813 = 0.0, $8130 = 0.0, $8131 = 0.0, $8132 = 0.0, $8133 = 0.0, $8134 = 0.0, $8135 = 0.0, $8136 = 0.0, $8137 = 0.0, $8138 = 0.0, $8139 = 0.0, $814 = 0.0, $8140 = 0.0, $8141 = 0.0;
 var $8142 = 0.0, $8143 = 0.0, $8144 = 0.0, $8145 = 0.0, $8146 = 0.0, $8147 = 0.0, $8148 = 0.0, $8149 = 0.0, $815 = 0.0, $8150 = 0.0, $8151 = 0.0, $8152 = 0.0, $8153 = 0.0, $8154 = 0.0, $8155 = 0.0, $8156 = 0.0, $8157 = 0.0, $8158 = 0.0, $8159 = 0.0, $816 = 0.0;
 var $8160 = 0.0, $8161 = 0.0, $8162 = 0.0, $8163 = 0.0, $8164 = 0.0, $8165 = 0.0, $8166 = 0.0, $8167 = 0.0, $8168 = 0.0, $8169 = 0.0, $817 = 0.0, $8170 = 0.0, $8171 = 0.0, $8172 = 0.0, $8173 = 0.0, $8174 = 0.0, $8175 = 0.0, $8176 = 0.0, $8177 = 0.0, $8178 = 0.0;
 var $8179 = 0.0, $818 = 0.0, $8180 = 0.0, $8181 = 0.0, $8182 = 0.0, $8183 = 0.0, $8184 = 0.0, $8185 = 0.0, $8186 = 0.0, $8187 = 0.0, $8188 = 0.0, $8189 = 0.0, $819 = 0, $8190 = 0.0, $8191 = 0.0, $8192 = 0.0, $8193 = 0, $8194 = 0.0, $8195 = 0.0, $8196 = 0.0;
 var $8197 = 0.0, $8198 = 0.0, $8199 = 0.0, $82 = 0, $820 = 0, $8200 = 0.0, $8201 = 0.0, $8202 = 0.0, $8203 = 0, $8204 = 0.0, $8205 = 0, $8206 = 0.0, $8207 = 0, $8208 = 0.0, $8209 = 0, $821 = 0, $8210 = 0.0, $8211 = 0, $8212 = 0.0, $8213 = 0;
 var $8214 = 0, $8215 = 0.0, $8216 = 0.0, $8217 = 0.0, $8218 = 0.0, $8219 = 0.0, $822 = 0, $8220 = 0.0, $8221 = 0.0, $8222 = 0.0, $8223 = 0.0, $8224 = 0.0, $8225 = 0.0, $8226 = 0.0, $8227 = 0.0, $8228 = 0, $8229 = 0.0, $823 = 0, $8230 = 0.0, $8231 = 0.0;
 var $8232 = 0.0, $8233 = 0.0, $8234 = 0.0, $8235 = 0.0, $8236 = 0.0, $8237 = 0.0, $8238 = 0.0, $8239 = 0, $824 = 0, $8240 = 0.0, $8241 = 0.0, $8242 = 0.0, $8243 = 0.0, $8244 = 0.0, $8245 = 0, $8246 = 0.0, $8247 = 0.0, $8248 = 0.0, $8249 = 0.0, $825 = 0;
 var $8250 = 0.0, $8251 = 0.0, $8252 = 0.0, $8253 = 0.0, $8254 = 0.0, $8255 = 0.0, $8256 = 0.0, $8257 = 0.0, $8258 = 0.0, $8259 = 0.0, $826 = 0, $8260 = 0.0, $8261 = 0.0, $8262 = 0.0, $8263 = 0.0, $8264 = 0.0, $8265 = 0.0, $8266 = 0.0, $8267 = 0.0, $8268 = 0.0;
 var $8269 = 0.0, $827 = 0, $8270 = 0, $8271 = 0.0, $8272 = 0, $8273 = 0.0, $8274 = 0.0, $8275 = 0.0, $8276 = 0.0, $8277 = 0.0, $8278 = 0.0, $8279 = 0.0, $828 = 0, $8280 = 0.0, $8281 = 0.0, $8282 = 0.0, $8283 = 0.0, $8284 = 0.0, $8285 = 0.0, $8286 = 0.0;
 var $8287 = 0.0, $8288 = 0.0, $8289 = 0.0, $829 = 0, $8290 = 0.0, $8291 = 0.0, $8292 = 0.0, $8293 = 0.0, $8294 = 0.0, $8295 = 0.0, $8296 = 0.0, $8297 = 0.0, $8298 = 0.0, $8299 = 0.0, $83 = 0, $830 = 0, $8300 = 0.0, $8301 = 0.0, $8302 = 0.0, $8303 = 0.0;
 var $8304 = 0.0, $8305 = 0.0, $8306 = 0.0, $8307 = 0.0, $8308 = 0.0, $8309 = 0.0, $831 = 0, $8310 = 0.0, $8311 = 0.0, $8312 = 0.0, $8313 = 0.0, $8314 = 0.0, $8315 = 0.0, $8316 = 0.0, $8317 = 0.0, $8318 = 0.0, $8319 = 0.0, $832 = 0, $8320 = 0.0, $8321 = 0.0;
 var $8322 = 0.0, $8323 = 0.0, $8324 = 0.0, $8325 = 0.0, $8326 = 0.0, $8327 = 0.0, $8328 = 0.0, $8329 = 0.0, $833 = 0, $8330 = 0.0, $8331 = 0.0, $8332 = 0.0, $8333 = 0.0, $8334 = 0.0, $8335 = 0.0, $8336 = 0.0, $8337 = 0.0, $8338 = 0, $8339 = 0.0, $834 = 0;
 var $8340 = 0.0, $8341 = 0.0, $8342 = 0.0, $8343 = 0.0, $8344 = 0.0, $8345 = 0.0, $8346 = 0.0, $8347 = 0.0, $8348 = 0, $8349 = 0.0, $835 = 0, $8350 = 0, $8351 = 0.0, $8352 = 0, $8353 = 0.0, $8354 = 0, $8355 = 0.0, $8356 = 0, $8357 = 0, $8358 = 0;
 var $8359 = 0, $836 = 0, $8360 = 0, $8361 = 0, $8362 = 0, $837 = 0.0, $838 = 0, $839 = 0.0, $84 = 0, $840 = 0.0, $841 = 0.0, $842 = 0, $843 = 0.0, $844 = 0, $845 = 0.0, $846 = 0.0, $847 = 0.0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0.0, $852 = 0, $853 = 0.0, $854 = 0, $855 = 0.0, $856 = 0.0, $857 = 0.0, $858 = 0.0, $859 = 0.0, $86 = 0, $860 = 0.0, $861 = 0.0, $862 = 0.0, $863 = 0.0, $864 = 0.0, $865 = 0.0, $866 = 0.0, $867 = 0.0, $868 = 0.0;
 var $869 = 0.0, $87 = 0, $870 = 0.0, $871 = 0.0, $872 = 0, $873 = 0.0, $874 = 0.0, $875 = 0.0, $876 = 0.0, $877 = 0.0, $878 = 0.0, $879 = 0.0, $88 = 0, $880 = 0.0, $881 = 0.0, $882 = 0.0, $883 = 0.0, $884 = 0.0, $885 = 0.0, $886 = 0.0;
 var $887 = 0.0, $888 = 0.0, $889 = 0.0, $89 = 0, $890 = 0.0, $891 = 0.0, $892 = 0.0, $893 = 0.0, $894 = 0.0, $895 = 0.0, $896 = 0.0, $897 = 0.0, $898 = 0, $899 = 0.0, $9 = 0, $90 = 0, $900 = 0, $901 = 0.0, $902 = 0.0, $903 = 0.0;
 var $904 = 0.0, $905 = 0.0, $906 = 0.0, $907 = 0.0, $908 = 0.0, $909 = 0.0, $91 = 0, $910 = 0.0, $911 = 0.0, $912 = 0.0, $913 = 0.0, $914 = 0.0, $915 = 0.0, $916 = 0.0, $917 = 0.0, $918 = 0.0, $919 = 0.0, $92 = 0, $920 = 0.0, $921 = 0.0;
 var $922 = 0.0, $923 = 0.0, $924 = 0.0, $925 = 0.0, $926 = 0.0, $927 = 0.0, $928 = 0.0, $929 = 0.0, $93 = 0, $930 = 0.0, $931 = 0.0, $932 = 0.0, $933 = 0.0, $934 = 0.0, $935 = 0.0, $936 = 0.0, $937 = 0.0, $938 = 0.0, $939 = 0.0, $94 = 0;
 var $940 = 0.0, $941 = 0, $942 = 0.0, $943 = 0.0, $944 = 0.0, $945 = 0.0, $946 = 0.0, $947 = 0.0, $948 = 0.0, $949 = 0.0, $95 = 0, $950 = 0.0, $951 = 0.0, $952 = 0.0, $953 = 0.0, $954 = 0.0, $955 = 0.0, $956 = 0.0, $957 = 0.0, $958 = 0.0;
 var $959 = 0.0, $96 = 0, $960 = 0.0, $961 = 0.0, $962 = 0.0, $963 = 0, $964 = 0.0, $965 = 0, $966 = 0.0, $967 = 0.0, $968 = 0.0, $969 = 0.0, $97 = 0, $970 = 0.0, $971 = 0.0, $972 = 0.0, $973 = 0.0, $974 = 0.0, $975 = 0.0, $976 = 0.0;
 var $977 = 0.0, $978 = 0.0, $979 = 0.0, $98 = 0, $980 = 0.0, $981 = 0.0, $982 = 0.0, $983 = 0.0, $984 = 0.0, $985 = 0.0, $986 = 0.0, $987 = 0.0, $988 = 0.0, $989 = 0.0, $99 = 0, $990 = 0.0, $991 = 0.0, $992 = 0.0, $993 = 0.0, $994 = 0.0;
 var $995 = 0.0, $996 = 0.0, $997 = 0.0, $998 = 0.0, $999 = 0.0, $cj27array = 0, $cj28array109 = 0, $cj28array117 = 0, $cj28array125 = 0, $cj28array132 = 0, $cj28array140 = 0, $cj28array149 = 0, $cj28array74 = 0, $cj28array82 = 0, $cj28array90 = 0, $cj28array97 = 0, $cj30array = 0, $cj30array24 = 0, $exitcond = 0, $exitcond847 = 0;
 var $exitcond848 = 0, $exitcond849 = 0, $exitcond850 = 0, $exitcond851 = 0, $exitcond852 = 0, $exitcond853 = 0, $exitcond854 = 0, $exitcond855 = 0, $exitcond859 = 0, $exitcond863 = 0, $exitcond864 = 0, $iij27$0 = 0, $iij27$0453 = 0, $iij27$0454 = 0, $iij27$0454$lcssa = 0, $iij28101$0666 = 0, $iij28113$0656 = 0, $iij28121$0661 = 0, $iij28129$0651 = 0, $iij28136$0646 = 0;
 var $iij28144$0641 = 0, $iij28153$0636 = 0, $iij2878$0676 = 0, $iij2886$0681 = 0, $iij2894$0671 = 0, $iij30$0707 = 0, $iij3028$0687 = 0, $ij271$0727 = 0, $ij28100$0670 = 0, $ij28112$0660 = 0, $ij28120$0665 = 0, $ij28128$0655 = 0, $ij28135$0650 = 0, $ij28143$0645 = 0, $ij28152$0640 = 0, $ij2877$0680 = 0, $ij2885$0685 = 0, $ij2893$0675 = 0, $ij30$0726 = 0, $ij3027$0706 = 0;
 var $j27array = 0, $j27valid = 0, $j28array108 = 0, $j28array116 = 0, $j28array124 = 0, $j28array131 = 0, $j28array139 = 0, $j28array148 = 0, $j28array73 = 0, $j28array81 = 0, $j28array89 = 0, $j28array96 = 0, $j28valid111 = 0, $j28valid119 = 0, $j28valid127 = 0, $j28valid134 = 0, $j28valid142 = 0, $j28valid151 = 0, $j28valid76 = 0, $j28valid84 = 0;
 var $j28valid92 = 0, $j28valid99 = 0, $j30array = 0, $j30array23 = 0, $j30valid = 0, $j30valid26 = 0, $numroots = 0, $numsolutions$0452 = 0, $op = 0, $or$cond = 0, $or$cond10 = 0, $or$cond104 = 0, $or$cond105 = 0, $or$cond113 = 0, $or$cond116 = 0, $or$cond12 = 0, $or$cond45 = 0, $or$cond49 = 0, $or$cond54 = 0, $or$cond55 = 0;
 var $or$cond64 = 0, $or$cond65 = 0, $or$cond74 = 0, $or$cond75 = 0, $or$cond8 = 0, $or$cond84 = 0, $or$cond85 = 0, $or$cond94 = 0, $or$cond95 = 0, $sj27array = 0, $sj28array110 = 0, $sj28array118 = 0, $sj28array126 = 0, $sj28array133 = 0, $sj28array141 = 0, $sj28array150 = 0, $sj28array75 = 0, $sj28array83 = 0, $sj28array91 = 0, $sj28array98 = 0;
 var $sj30array = 0, $sj30array25 = 0, $x1011 = 0, $x1012 = 0, $x1034 = 0, $x1052 = 0, $x1060 = 0, $x1066 = 0, $x1079 = 0, $x1085 = 0, $x1105 = 0, $x1112 = 0, $x1133 = 0, $x1140 = 0, $x1167 = 0, $x1168 = 0, $x1182 = 0, $x1183 = 0, $x1194 = 0, $x183 = 0;
 var $x184 = 0, $x649 = 0, $x650 = 0, $x664 = 0, $x665 = 0, $x706 = 0, $x707 = 0, $x722 = 0, $x723 = 0, $x738 = 0, $x739 = 0, $x750 = 0, $x779 = 0, $x780 = 0, $x784 = 0, $x785 = 0, $x787 = 0, $x803 = 0, $x804 = 0, $x808 = 0;
 var $x809 = 0, $x811 = 0, $x819 = 0, $x827 = 0, $x848 = 0, $x849 = 0, $x855 = 0, $x856 = 0, $x858 = 0, $x873 = 0, $x874 = 0, $x880 = 0, $x881 = 0, $x883 = 0, $x891 = 0, $x898 = 0, $x915 = 0, $x926 = 0, $x934 = 0, $x935 = 0;
 var $x958 = 0, $x959 = 0, $x980 = 0, $x981 = 0, $zeror = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1936|0;
 $op = sp + 1832|0;
 $zeror = sp + 1768|0;
 $numroots = sp + 1904|0;
 $j27array = sp + 1704|0;
 $cj27array = sp + 1640|0;
 $sj27array = sp + 1576|0;
 $j27valid = sp + 1568|0;
 $j30array = sp + 1552|0;
 $cj30array = sp + 1536|0;
 $sj30array = sp + 1520|0;
 $j30valid = sp + 1930|0;
 $x183 = sp + 1504|0;
 $x184 = sp + 1488|0;
 $x649 = sp + 1472|0;
 $x650 = sp + 1456|0;
 $x664 = sp + 1440|0;
 $x665 = sp + 1424|0;
 $j30array23 = sp + 1408|0;
 $cj30array24 = sp + 1392|0;
 $sj30array25 = sp + 1376|0;
 $j30valid26 = sp + 1928|0;
 $x706 = sp + 1360|0;
 $x707 = sp + 1344|0;
 $x722 = sp + 1328|0;
 $x723 = sp + 1312|0;
 $x738 = sp + 1296|0;
 $x739 = sp + 1280|0;
 $x750 = sp + 1264|0;
 $x779 = sp + 1248|0;
 $x780 = sp + 1232|0;
 $x784 = sp + 1216|0;
 $x785 = sp + 1200|0;
 $j28array73 = sp + 1184|0;
 $cj28array74 = sp + 1168|0;
 $sj28array75 = sp + 1152|0;
 $j28valid76 = sp + 1926|0;
 $x787 = sp + 1136|0;
 $x803 = sp + 1120|0;
 $x804 = sp + 1104|0;
 $x808 = sp + 1088|0;
 $x809 = sp + 1072|0;
 $j28array81 = sp + 1056|0;
 $cj28array82 = sp + 1040|0;
 $sj28array83 = sp + 1024|0;
 $j28valid84 = sp + 1924|0;
 $x811 = sp + 1008|0;
 $j28array89 = sp + 992|0;
 $cj28array90 = sp + 976|0;
 $sj28array91 = sp + 960|0;
 $j28valid92 = sp + 1922|0;
 $x819 = sp + 944|0;
 $j28array96 = sp + 928|0;
 $cj28array97 = sp + 912|0;
 $sj28array98 = sp + 896|0;
 $j28valid99 = sp + 1920|0;
 $x827 = sp + 880|0;
 $x848 = sp + 864|0;
 $x849 = sp + 848|0;
 $x855 = sp + 832|0;
 $x856 = sp + 816|0;
 $j28array108 = sp + 800|0;
 $cj28array109 = sp + 784|0;
 $sj28array110 = sp + 768|0;
 $j28valid111 = sp + 1918|0;
 $x858 = sp + 752|0;
 $x873 = sp + 736|0;
 $x874 = sp + 720|0;
 $x880 = sp + 704|0;
 $x881 = sp + 688|0;
 $j28array116 = sp + 672|0;
 $cj28array117 = sp + 656|0;
 $sj28array118 = sp + 640|0;
 $j28valid119 = sp + 1916|0;
 $x883 = sp + 624|0;
 $j28array124 = sp + 608|0;
 $cj28array125 = sp + 592|0;
 $sj28array126 = sp + 576|0;
 $j28valid127 = sp + 1914|0;
 $x891 = sp + 560|0;
 $j28array131 = sp + 544|0;
 $cj28array132 = sp + 528|0;
 $sj28array133 = sp + 512|0;
 $j28valid134 = sp + 1912|0;
 $x898 = sp + 496|0;
 $j28array139 = sp + 480|0;
 $cj28array140 = sp + 464|0;
 $sj28array141 = sp + 448|0;
 $j28valid142 = sp + 1910|0;
 $x915 = sp + 432|0;
 $j28array148 = sp + 416|0;
 $cj28array149 = sp + 400|0;
 $sj28array150 = sp + 384|0;
 $j28valid151 = sp + 1908|0;
 $x926 = sp + 368|0;
 $x934 = sp + 352|0;
 $x935 = sp + 336|0;
 $x958 = sp + 320|0;
 $x959 = sp + 304|0;
 $x980 = sp + 288|0;
 $x981 = sp + 272|0;
 $x1011 = sp + 256|0;
 $x1012 = sp + 240|0;
 $x1034 = sp + 224|0;
 $x1052 = sp + 208|0;
 $x1060 = sp + 192|0;
 $x1066 = sp + 176|0;
 $x1079 = sp + 160|0;
 $x1085 = sp + 144|0;
 $x1105 = sp + 128|0;
 $x1112 = sp + 112|0;
 $x1133 = sp + 96|0;
 $x1140 = sp + 80|0;
 $x1167 = sp + 64|0;
 $x1168 = sp + 48|0;
 $x1182 = sp + 32|0;
 $x1183 = sp + 16|0;
 $x1194 = sp;
 HEAPF64[$this>>3] = nan;
 $0 = ((($this)) + 568|0);
 HEAP8[$0>>0] = -1;
 $1 = ((($this)) + 569|0);
 HEAP8[$1>>0] = -1;
 $2 = ((($this)) + 570|0);
 HEAP8[$2>>0] = -1;
 $3 = ((($this)) + 40|0);
 HEAPF64[$3>>3] = nan;
 $4 = ((($this)) + 571|0);
 HEAP8[$4>>0] = -1;
 $5 = ((($this)) + 572|0);
 HEAP8[$5>>0] = -1;
 $6 = ((($this)) + 573|0);
 HEAP8[$6>>0] = -1;
 $7 = ((($this)) + 80|0);
 HEAPF64[$7>>3] = nan;
 $8 = ((($this)) + 574|0);
 HEAP8[$8>>0] = -1;
 $9 = ((($this)) + 575|0);
 HEAP8[$9>>0] = -1;
 $10 = ((($this)) + 576|0);
 HEAP8[$10>>0] = -1;
 $11 = ((($this)) + 120|0);
 HEAPF64[$11>>3] = nan;
 $12 = ((($this)) + 577|0);
 HEAP8[$12>>0] = -1;
 $13 = ((($this)) + 578|0);
 HEAP8[$13>>0] = -1;
 $14 = ((($this)) + 579|0);
 HEAP8[$14>>0] = -1;
 $15 = ((($this)) + 160|0);
 HEAPF64[$15>>3] = nan;
 $16 = ((($this)) + 580|0);
 HEAP8[$16>>0] = -1;
 $17 = ((($this)) + 581|0);
 HEAP8[$17>>0] = -1;
 $18 = ((($this)) + 582|0);
 HEAP8[$18>>0] = -1;
 $19 = ((($this)) + 200|0);
 HEAPF64[$19>>3] = nan;
 $20 = ((($this)) + 583|0);
 $21 = ((($this)) + 588|0);
 ;HEAP8[$20>>0]=255|0;HEAP8[$20+1>>0]=255|0;HEAP8[$20+2>>0]=255|0;HEAP8[$20+3>>0]=255|0;HEAP8[$20+4>>0]=255|0;
 HEAP8[$21>>0] = 0;
 $22 = ((($this)) + 240|0);
 $23 = ((($this)) + 248|0);
 $24 = ((($this)) + 256|0);
 $25 = ((($this)) + 264|0);
 $26 = ((($this)) + 280|0);
 $27 = ((($eerot)) + 8|0);
 $28 = ((($this)) + 304|0);
 $29 = ((($eerot)) + 16|0);
 $30 = ((($this)) + 328|0);
 $31 = ((($eerot)) + 24|0);
 $32 = ((($this)) + 352|0);
 $33 = ((($eerot)) + 32|0);
 $34 = ((($this)) + 376|0);
 $35 = ((($eerot)) + 40|0);
 $36 = ((($this)) + 400|0);
 $37 = ((($eerot)) + 48|0);
 $38 = ((($this)) + 424|0);
 $39 = ((($eerot)) + 56|0);
 $40 = ((($this)) + 448|0);
 $41 = ((($eerot)) + 64|0);
 $42 = ((($this)) + 472|0);
 $43 = ((($this)) + 496|0);
 $44 = ((($eetrans)) + 8|0);
 $45 = ((($this)) + 520|0);
 $46 = ((($eetrans)) + 16|0);
 $47 = ((($this)) + 544|0);
 $48 = ((($this)) + 272|0);
 $49 = ((($this)) + 296|0);
 $50 = ((($this)) + 320|0);
 $51 = ((($this)) + 488|0);
 $52 = ((($this)) + 344|0);
 $53 = ((($this)) + 368|0);
 $54 = ((($this)) + 392|0);
 $55 = ((($this)) + 512|0);
 $56 = ((($this)) + 416|0);
 $57 = ((($this)) + 440|0);
 $58 = ((($this)) + 464|0);
 $59 = ((($this)) + 536|0);
 $60 = ((($this)) + 560|0);
 $61 = ((($this)) + 504|0);
 $62 = ((($this)) + 528|0);
 $63 = ((($this)) + 552|0);
 $64 = ((($this)) + 288|0);
 $65 = ((($this)) + 312|0);
 $66 = ((($this)) + 336|0);
 $67 = ((($this)) + 360|0);
 $68 = ((($this)) + 384|0);
 $69 = ((($this)) + 408|0);
 $70 = ((($this)) + 432|0);
 $71 = ((($this)) + 456|0);
 $72 = ((($this)) + 480|0);
 $73 = ((($op)) + 8|0);
 $74 = ((($op)) + 16|0);
 $75 = ((($op)) + 24|0);
 $76 = ((($op)) + 32|0);
 $77 = ((($op)) + 40|0);
 $78 = ((($op)) + 48|0);
 $79 = ((($op)) + 56|0);
 $80 = ((($op)) + 64|0);
 $81 = ((($this)) + 8|0);
 $82 = ((($this)) + 16|0);
 $83 = ((($this)) + 24|0);
 $84 = ((($j30valid)) + 1|0);
 $85 = ((($cj30array)) + 8|0);
 $86 = ((($j30array)) + 8|0);
 $87 = ((($sj30array)) + 8|0);
 $88 = ((($this)) + 88|0);
 $89 = ((($this)) + 96|0);
 $90 = ((($x183)) + 8|0);
 $91 = ((($x184)) + 8|0);
 $92 = ((($this)) + 48|0);
 $93 = ((($this)) + 56|0);
 $94 = ((($x649)) + 8|0);
 $95 = ((($x650)) + 8|0);
 $96 = ((($this)) + 48|0);
 $97 = ((($this)) + 56|0);
 $98 = ((($x664)) + 8|0);
 $99 = ((($x665)) + 8|0);
 $100 = ((($this)) + 48|0);
 $101 = ((($this)) + 56|0);
 $102 = ((($j30valid26)) + 1|0);
 $103 = ((($cj30array24)) + 8|0);
 $104 = ((($j30array23)) + 8|0);
 $105 = ((($sj30array25)) + 8|0);
 $106 = ((($this)) + 88|0);
 $107 = ((($this)) + 96|0);
 $108 = ((($x706)) + 8|0);
 $109 = ((($x707)) + 8|0);
 $110 = ((($this)) + 48|0);
 $111 = ((($this)) + 56|0);
 $112 = ((($x722)) + 8|0);
 $113 = ((($x723)) + 8|0);
 $114 = ((($this)) + 48|0);
 $115 = ((($this)) + 56|0);
 $116 = ((($x738)) + 8|0);
 $117 = ((($x739)) + 8|0);
 $118 = ((($this)) + 48|0);
 $119 = ((($this)) + 56|0);
 $120 = ((($x750)) + 8|0);
 $121 = ((($this)) + 88|0);
 $122 = ((($this)) + 96|0);
 $123 = ((($x803)) + 8|0);
 $124 = ((($x804)) + 8|0);
 $125 = ((($x808)) + 8|0);
 $126 = ((($x809)) + 8|0);
 $127 = ((($x811)) + 8|0);
 $128 = ((($j28valid84)) + 1|0);
 $129 = ((($cj28array82)) + 8|0);
 $130 = ((($j28array81)) + 8|0);
 $131 = ((($sj28array83)) + 8|0);
 $132 = ((($this)) + 48|0);
 $133 = ((($this)) + 56|0);
 $134 = ((($x779)) + 8|0);
 $135 = ((($x780)) + 8|0);
 $136 = ((($x784)) + 8|0);
 $137 = ((($x785)) + 8|0);
 $138 = ((($x787)) + 8|0);
 $139 = ((($j28valid76)) + 1|0);
 $140 = ((($cj28array74)) + 8|0);
 $141 = ((($j28array73)) + 8|0);
 $142 = ((($sj28array75)) + 8|0);
 $143 = ((($this)) + 48|0);
 $144 = ((($this)) + 56|0);
 $145 = ((($x819)) + 8|0);
 $146 = ((($j28valid92)) + 1|0);
 $147 = ((($cj28array90)) + 8|0);
 $148 = ((($j28array89)) + 8|0);
 $149 = ((($sj28array91)) + 8|0);
 $150 = ((($this)) + 48|0);
 $151 = ((($this)) + 56|0);
 $152 = ((($x827)) + 8|0);
 $153 = ((($j28valid99)) + 1|0);
 $154 = ((($cj28array97)) + 8|0);
 $155 = ((($j28array96)) + 8|0);
 $156 = ((($sj28array98)) + 8|0);
 $157 = ((($this)) + 48|0);
 $158 = ((($this)) + 56|0);
 $159 = ((($x873)) + 8|0);
 $160 = ((($x874)) + 8|0);
 $161 = ((($x880)) + 8|0);
 $162 = ((($x881)) + 8|0);
 $163 = ((($x883)) + 8|0);
 $164 = ((($j28valid119)) + 1|0);
 $165 = ((($cj28array117)) + 8|0);
 $166 = ((($j28array116)) + 8|0);
 $167 = ((($sj28array118)) + 8|0);
 $168 = ((($this)) + 48|0);
 $169 = ((($this)) + 56|0);
 $170 = ((($x848)) + 8|0);
 $171 = ((($x849)) + 8|0);
 $172 = ((($x855)) + 8|0);
 $173 = ((($x856)) + 8|0);
 $174 = ((($x858)) + 8|0);
 $175 = ((($j28valid111)) + 1|0);
 $176 = ((($cj28array109)) + 8|0);
 $177 = ((($j28array108)) + 8|0);
 $178 = ((($sj28array110)) + 8|0);
 $179 = ((($this)) + 48|0);
 $180 = ((($this)) + 56|0);
 $181 = ((($x891)) + 8|0);
 $182 = ((($j28valid127)) + 1|0);
 $183 = ((($cj28array125)) + 8|0);
 $184 = ((($j28array124)) + 8|0);
 $185 = ((($sj28array126)) + 8|0);
 $186 = ((($this)) + 48|0);
 $187 = ((($this)) + 56|0);
 $188 = ((($x898)) + 8|0);
 $189 = ((($j28valid134)) + 1|0);
 $190 = ((($cj28array132)) + 8|0);
 $191 = ((($j28array131)) + 8|0);
 $192 = ((($sj28array133)) + 8|0);
 $193 = ((($this)) + 48|0);
 $194 = ((($this)) + 56|0);
 $195 = ((($j28valid142)) + 1|0);
 $196 = ((($cj28array140)) + 8|0);
 $197 = ((($j28array139)) + 8|0);
 $198 = ((($sj28array141)) + 8|0);
 $199 = ((($this)) + 48|0);
 $200 = ((($this)) + 56|0);
 $201 = ((($x915)) + 8|0);
 $202 = ((($j28valid151)) + 1|0);
 $203 = ((($cj28array149)) + 8|0);
 $204 = ((($j28array148)) + 8|0);
 $205 = ((($sj28array150)) + 8|0);
 $206 = ((($this)) + 48|0);
 $207 = ((($this)) + 56|0);
 $208 = ((($x926)) + 8|0);
 $209 = ((($x934)) + 8|0);
 $210 = ((($x935)) + 8|0);
 $211 = ((($this)) + 48|0);
 $212 = ((($this)) + 56|0);
 $213 = ((($x958)) + 8|0);
 $214 = ((($x959)) + 8|0);
 $215 = ((($this)) + 48|0);
 $216 = ((($this)) + 56|0);
 $217 = ((($x980)) + 8|0);
 $218 = ((($x981)) + 8|0);
 $219 = ((($this)) + 48|0);
 $220 = ((($this)) + 56|0);
 $221 = ((($x1011)) + 8|0);
 $222 = ((($x1012)) + 8|0);
 $223 = ((($this)) + 48|0);
 $224 = ((($this)) + 56|0);
 $225 = ((($this)) + 88|0);
 $226 = ((($this)) + 96|0);
 $227 = ((($x1034)) + 8|0);
 $228 = ((($this)) + 88|0);
 $229 = ((($this)) + 96|0);
 $230 = ((($x1052)) + 8|0);
 $231 = ((($this)) + 88|0);
 $232 = ((($this)) + 96|0);
 $233 = ((($this)) + 88|0);
 $234 = ((($this)) + 96|0);
 $235 = ((($this)) + 88|0);
 $236 = ((($this)) + 96|0);
 $237 = ((($this)) + 88|0);
 $238 = ((($this)) + 96|0);
 $239 = ((($x1060)) + 8|0);
 $240 = ((($this)) + 88|0);
 $241 = ((($this)) + 96|0);
 $242 = ((($x1066)) + 8|0);
 $243 = ((($this)) + 88|0);
 $244 = ((($this)) + 96|0);
 $245 = ((($this)) + 88|0);
 $246 = ((($this)) + 96|0);
 $247 = ((($this)) + 88|0);
 $248 = ((($this)) + 96|0);
 $249 = ((($this)) + 88|0);
 $250 = ((($this)) + 96|0);
 $251 = ((($this)) + 88|0);
 $252 = ((($this)) + 96|0);
 $253 = ((($x1079)) + 8|0);
 $254 = ((($this)) + 88|0);
 $255 = ((($this)) + 96|0);
 $256 = ((($x1085)) + 8|0);
 $257 = ((($this)) + 88|0);
 $258 = ((($this)) + 96|0);
 $259 = ((($this)) + 88|0);
 $260 = ((($this)) + 96|0);
 $261 = ((($this)) + 88|0);
 $262 = ((($this)) + 96|0);
 $263 = ((($this)) + 88|0);
 $264 = ((($this)) + 96|0);
 $265 = ((($this)) + 88|0);
 $266 = ((($this)) + 96|0);
 $267 = ((($x1105)) + 8|0);
 $268 = ((($this)) + 88|0);
 $269 = ((($this)) + 96|0);
 $270 = ((($x1112)) + 8|0);
 $271 = ((($this)) + 88|0);
 $272 = ((($this)) + 96|0);
 $273 = ((($this)) + 88|0);
 $274 = ((($this)) + 96|0);
 $275 = ((($this)) + 88|0);
 $276 = ((($this)) + 96|0);
 $277 = ((($this)) + 88|0);
 $278 = ((($this)) + 96|0);
 $279 = ((($this)) + 88|0);
 $280 = ((($this)) + 96|0);
 $281 = ((($x1133)) + 8|0);
 $282 = ((($this)) + 88|0);
 $283 = ((($this)) + 96|0);
 $284 = ((($x1140)) + 8|0);
 $285 = ((($this)) + 88|0);
 $286 = ((($this)) + 96|0);
 $287 = ((($this)) + 88|0);
 $288 = ((($this)) + 96|0);
 $289 = ((($this)) + 88|0);
 $290 = ((($this)) + 96|0);
 $291 = ((($x1167)) + 8|0);
 $292 = ((($x1168)) + 8|0);
 $293 = ((($this)) + 88|0);
 $294 = ((($this)) + 96|0);
 $295 = ((($x1182)) + 8|0);
 $296 = ((($x1183)) + 8|0);
 $297 = ((($this)) + 88|0);
 $298 = ((($this)) + 96|0);
 $299 = ((($x1194)) + 8|0);
 $300 = ((($this)) + 88|0);
 $301 = ((($this)) + 96|0);
 $302 = HEAP32[$solutions>>2]|0;
 $303 = ((($302)) + 20|0);
 $304 = HEAP32[$303>>2]|0;
 FUNCTION_TABLE_vi[$304 & 127]($solutions);
 $305 = +HEAPF64[$pfree>>3];
 HEAPF64[$22>>3] = $305;
 $306 = +HEAPF64[$pfree>>3];
 $307 = (+Math_cos((+$306)));
 HEAPF64[$23>>3] = $307;
 $308 = +HEAPF64[$pfree>>3];
 $309 = (+Math_sin((+$308)));
 HEAPF64[$24>>3] = $309;
 $310 = +HEAPF64[$pfree>>3];
 $311 = $310 * 0.5;
 $312 = (+Math_tan((+$311)));
 HEAPF64[$25>>3] = $312;
 $313 = +HEAPF64[$eerot>>3];
 HEAPF64[$26>>3] = $313;
 $314 = +HEAPF64[$27>>3];
 HEAPF64[$28>>3] = $314;
 $315 = +HEAPF64[$29>>3];
 HEAPF64[$30>>3] = $315;
 $316 = +HEAPF64[$31>>3];
 HEAPF64[$32>>3] = $316;
 $317 = +HEAPF64[$33>>3];
 HEAPF64[$34>>3] = $317;
 $318 = +HEAPF64[$35>>3];
 HEAPF64[$36>>3] = $318;
 $319 = +HEAPF64[$37>>3];
 HEAPF64[$38>>3] = $319;
 $320 = +HEAPF64[$39>>3];
 HEAPF64[$40>>3] = $320;
 $321 = +HEAPF64[$41>>3];
 HEAPF64[$42>>3] = $321;
 $322 = +HEAPF64[$eetrans>>3];
 HEAPF64[$43>>3] = $322;
 $323 = +HEAPF64[$44>>3];
 HEAPF64[$45>>3] = $323;
 $324 = +HEAPF64[$46>>3];
 HEAPF64[$47>>3] = $324;
 $325 = +HEAPF64[$30>>3];
 $326 = -$325;
 HEAPF64[$48>>3] = $326;
 $327 = +HEAPF64[$28>>3];
 HEAPF64[$49>>3] = $327;
 $328 = +HEAPF64[$26>>3];
 HEAPF64[$50>>3] = $328;
 $329 = +HEAPF64[$43>>3];
 HEAPF64[$51>>3] = $329;
 $330 = +HEAPF64[$36>>3];
 $331 = -$330;
 HEAPF64[$52>>3] = $331;
 $332 = +HEAPF64[$34>>3];
 HEAPF64[$53>>3] = $332;
 $333 = +HEAPF64[$32>>3];
 HEAPF64[$54>>3] = $333;
 $334 = +HEAPF64[$45>>3];
 $335 = $334 + 0.188;
 HEAPF64[$55>>3] = $335;
 $336 = +HEAPF64[$42>>3];
 $337 = -$336;
 HEAPF64[$56>>3] = $337;
 $338 = +HEAPF64[$40>>3];
 HEAPF64[$57>>3] = $338;
 $339 = +HEAPF64[$38>>3];
 HEAPF64[$58>>3] = $339;
 $340 = +HEAPF64[$47>>3];
 HEAPF64[$59>>3] = $340;
 $341 = +HEAPF64[$48>>3];
 HEAPF64[$26>>3] = $341;
 $342 = +HEAPF64[$49>>3];
 HEAPF64[$28>>3] = $342;
 $343 = +HEAPF64[$50>>3];
 HEAPF64[$30>>3] = $343;
 $344 = +HEAPF64[$52>>3];
 HEAPF64[$32>>3] = $344;
 $345 = +HEAPF64[$53>>3];
 HEAPF64[$34>>3] = $345;
 $346 = +HEAPF64[$54>>3];
 HEAPF64[$36>>3] = $346;
 $347 = +HEAPF64[$56>>3];
 HEAPF64[$38>>3] = $347;
 $348 = +HEAPF64[$57>>3];
 HEAPF64[$40>>3] = $348;
 $349 = +HEAPF64[$58>>3];
 HEAPF64[$42>>3] = $349;
 $350 = +HEAPF64[$51>>3];
 HEAPF64[$43>>3] = $350;
 $351 = +HEAPF64[$55>>3];
 HEAPF64[$45>>3] = $351;
 $352 = +HEAPF64[$59>>3];
 HEAPF64[$47>>3] = $352;
 $353 = +HEAPF64[$43>>3];
 $354 = +HEAPF64[$45>>3];
 $355 = $353 * $353;
 $356 = $354 * $354;
 $357 = $355 + $356;
 $358 = $352 * $352;
 $359 = $358 + $357;
 HEAPF64[$60>>3] = $359;
 $360 = +HEAPF64[$43>>3];
 $361 = +HEAPF64[$26>>3];
 $362 = $360 * $361;
 $363 = +HEAPF64[$45>>3];
 $364 = +HEAPF64[$32>>3];
 $365 = $363 * $364;
 $366 = $362 + $365;
 $367 = +HEAPF64[$47>>3];
 $368 = +HEAPF64[$38>>3];
 $369 = $367 * $368;
 $370 = $366 + $369;
 HEAPF64[$61>>3] = $370;
 $371 = +HEAPF64[$43>>3];
 $372 = +HEAPF64[$28>>3];
 $373 = $371 * $372;
 $374 = +HEAPF64[$45>>3];
 $375 = +HEAPF64[$34>>3];
 $376 = $374 * $375;
 $377 = $373 + $376;
 $378 = +HEAPF64[$47>>3];
 $379 = +HEAPF64[$40>>3];
 $380 = $378 * $379;
 $381 = $377 + $380;
 HEAPF64[$62>>3] = $381;
 $382 = +HEAPF64[$43>>3];
 $383 = +HEAPF64[$30>>3];
 $384 = $382 * $383;
 $385 = +HEAPF64[$45>>3];
 $386 = +HEAPF64[$36>>3];
 $387 = $385 * $386;
 $388 = $384 + $387;
 $389 = +HEAPF64[$47>>3];
 $390 = +HEAPF64[$42>>3];
 $391 = $389 * $390;
 $392 = $388 + $391;
 HEAPF64[$63>>3] = $392;
 $393 = +HEAPF64[$38>>3];
 $394 = $354 * $393;
 $395 = +HEAPF64[$47>>3];
 $396 = +HEAPF64[$32>>3];
 $397 = $395 * $396;
 $398 = $397 - $394;
 HEAPF64[$64>>3] = $398;
 $399 = +HEAPF64[$43>>3];
 $400 = +HEAPF64[$38>>3];
 $401 = $399 * $400;
 $402 = +HEAPF64[$26>>3];
 $403 = $352 * $402;
 $404 = $401 - $403;
 HEAPF64[$65>>3] = $404;
 $405 = +HEAPF64[$32>>3];
 $406 = $353 * $405;
 $407 = +HEAPF64[$45>>3];
 $408 = +HEAPF64[$26>>3];
 $409 = $407 * $408;
 $410 = $409 - $406;
 HEAPF64[$66>>3] = $410;
 $411 = +HEAPF64[$40>>3];
 $412 = $354 * $411;
 $413 = +HEAPF64[$47>>3];
 $414 = +HEAPF64[$34>>3];
 $415 = $413 * $414;
 $416 = $415 - $412;
 HEAPF64[$67>>3] = $416;
 $417 = +HEAPF64[$43>>3];
 $418 = +HEAPF64[$40>>3];
 $419 = $417 * $418;
 $420 = +HEAPF64[$28>>3];
 $421 = $352 * $420;
 $422 = $419 - $421;
 HEAPF64[$68>>3] = $422;
 $423 = +HEAPF64[$34>>3];
 $424 = $353 * $423;
 $425 = +HEAPF64[$45>>3];
 $426 = +HEAPF64[$28>>3];
 $427 = $425 * $426;
 $428 = $427 - $424;
 HEAPF64[$69>>3] = $428;
 $429 = +HEAPF64[$47>>3];
 $430 = +HEAPF64[$36>>3];
 $431 = $429 * $430;
 $432 = +HEAPF64[$42>>3];
 $433 = $354 * $432;
 $434 = $431 - $433;
 HEAPF64[$70>>3] = $434;
 $435 = +HEAPF64[$43>>3];
 $436 = +HEAPF64[$42>>3];
 $437 = $435 * $436;
 $438 = +HEAPF64[$30>>3];
 $439 = $352 * $438;
 $440 = $437 - $439;
 HEAPF64[$71>>3] = $440;
 $441 = +HEAPF64[$36>>3];
 $442 = $353 * $441;
 $443 = +HEAPF64[$45>>3];
 $444 = +HEAPF64[$30>>3];
 $445 = $443 * $444;
 $446 = $445 - $442;
 HEAPF64[$72>>3] = $446;
 $447 = +HEAPF64[$43>>3];
 $448 = $447 * 0.20000000000000001;
 $449 = +HEAPF64[$60>>3];
 $450 = $448 + 0.50984099999999999;
 $451 = $450 - $449;
 $452 = $448 + -0.0037590000000000002;
 $453 = $452 - $449;
 $454 = $448 + $449;
 $455 = 0.50984099999999999 - $454;
 $456 = -0.0037590000000000002 - $454;
 $457 = +HEAPF64[$45>>3];
 $458 = $457 * $457;
 $459 = +HEAPF64[$24>>3];
 $460 = $459 * $459;
 $461 = $447 * $447;
 $462 = $456 * $456;
 $463 = $451 * $453;
 $464 = $456 * 2.0;
 $465 = $453 * $456;
 $466 = $451 * $455;
 $467 = $453 * $453;
 $468 = $455 * $456;
 $469 = $451 * 2.0;
 $470 = $453 * $455;
 $471 = $451 * $456;
 $472 = $455 * 2.0;
 $473 = $455 * $455;
 $474 = $451 * $451;
 $475 = $447 * 1.0551398400000001;
 $476 = $475 * $457;
 $477 = $455 * $458;
 $478 = $447 * 4.0;
 $479 = $478 * $457;
 $480 = $461 * 4.0;
 $481 = $451 * $458;
 $482 = $457 * $460;
 $483 = $458 * 2.0;
 $484 = $460 * 0.82432799999999994;
 $485 = $460 * 0.41216399999999997;
 $486 = $458 * $468;
 $487 = $458 * $471;
 $488 = $458 * $470;
 $489 = $482 * 0.083435512579199997;
 $490 = $458 * $463;
 $491 = $458 * $460;
 $492 = $458 * $462;
 $493 = $455 * $477;
 $494 = $468 * $485;
 $495 = $479 * $466;
 $496 = $479 * $465;
 $497 = $479 * $470;
 $498 = $479 * $471;
 $499 = $471 * $485;
 $500 = $491 * 0.065946240000000003;
 $501 = $458 * $465;
 $502 = $455 * $481;
 $503 = $451 * $477;
 $504 = $470 * $485;
 $505 = $449 * 0.3297312;
 $506 = $505 * $482;
 $507 = $447 * 0.065946240000000003;
 $508 = $507 * $482;
 $509 = $451 * $481;
 $510 = $463 * $485;
 $511 = $458 * $467;
 $512 = $490 + $490;
 $513 = $486 + $486;
 $514 = $511 + $510;
 $515 = $509 + $514;
 $516 = $493 + $492;
 $517 = $516 + $494;
 $518 = $488 + $487;
 $519 = $488 + $518;
 $520 = $487 + $519;
 $521 = $497 + $498;
 $522 = $498 + $521;
 $523 = $497 + $522;
 $524 = $496 + $496;
 $525 = $495 + $524;
 $526 = $495 + $525;
 $527 = $502 + $503;
 $528 = $527 + $500;
 $529 = $501 + $528;
 $530 = $499 + $529;
 $531 = $504 + $530;
 $532 = $501 + $531;
 $533 = $513 - $517;
 HEAPF64[$op>>3] = $533;
 $534 = $508 - $489;
 $535 = $506 + $534;
 $536 = $535 - $476;
 HEAPF64[$73>>3] = $536;
 $537 = $462 * $483;
 $538 = $537 - $532;
 $539 = $480 * $462;
 $540 = $538 - $539;
 $541 = $480 * $468;
 $542 = $541 + $540;
 $543 = $541 + $542;
 $544 = $520 + $543;
 $545 = -$464;
 $546 = $477 * $545;
 $547 = $546 + $544;
 $548 = -$468;
 $549 = $483 * $548;
 $550 = $549 + $547;
 $551 = $472 * $477;
 $552 = $551 + $550;
 $553 = $480 * $473;
 $554 = $552 - $553;
 $555 = $484 * $548;
 $556 = $555 + $554;
 HEAPF64[$74>>3] = $556;
 $557 = $479 * $462;
 $558 = $557 - $526;
 $559 = $456 * -0.3297312;
 $560 = $559 * $482;
 $561 = $560 + $558;
 $562 = $523 + $561;
 $563 = $479 * $548;
 $564 = $563 + $562;
 $565 = $479 * $473;
 $566 = $565 + $564;
 $567 = $451 * -0.1648656;
 $568 = $567 * $482;
 $569 = $568 + $566;
 $570 = $455 * -0.3297312;
 $571 = $570 * $482;
 $572 = $571 + $569;
 $573 = $453 * -0.1648656;
 $574 = $573 * $482;
 $575 = $574 + $572;
 $576 = $563 + $575;
 HEAPF64[$75>>3] = $576;
 $577 = $480 * $471;
 $578 = $480 * $470;
 $579 = $577 + $578;
 $580 = $480 * $466;
 $581 = $579 - $580;
 $582 = $491 * 0.13189248000000001;
 $583 = $581 - $582;
 $584 = $578 + $583;
 $585 = $577 + $584;
 $586 = $512 + $585;
 $587 = $513 + $586;
 $588 = $453 * $458;
 $589 = $588 * $464;
 $590 = $589 + $587;
 $591 = $590 - $580;
 $592 = $591 - $515;
 $593 = $592 - $517;
 $594 = $481 * $545;
 $595 = $594 + $593;
 $596 = $465 * $483;
 $597 = $596 + $595;
 $598 = $480 * $465;
 $599 = $597 - $598;
 $600 = $599 - $598;
 $601 = $588 * $472;
 $602 = $600 - $601;
 $603 = $472 * $481;
 $604 = $603 + $602;
 $605 = -$470;
 $606 = $483 * $605;
 $607 = $606 + $604;
 $608 = $484 * $605;
 $609 = $608 + $607;
 $610 = $466 * $483;
 $611 = $610 + $609;
 $612 = $456 * $458;
 $613 = $612 * $469;
 $614 = $611 - $613;
 $615 = $471 * $484;
 $616 = $614 - $615;
 HEAPF64[$76>>3] = $616;
 $617 = $456 * -0.1648656;
 $618 = $617 * $482;
 $619 = $618 - $523;
 $620 = -$474;
 $621 = $479 * $620;
 $622 = $621 + $619;
 $623 = $479 * $463;
 $624 = $623 + $622;
 $625 = $623 + $624;
 $626 = $526 + $625;
 $627 = -$467;
 $628 = $479 * $627;
 $629 = $628 + $626;
 $630 = $455 * -0.1648656;
 $631 = $630 * $482;
 $632 = $631 + $629;
 $633 = $453 * -0.3297312;
 $634 = $633 * $482;
 $635 = $634 + $632;
 $636 = $451 * -0.3297312;
 $637 = $636 * $482;
 $638 = $637 + $635;
 HEAPF64[$77>>3] = $638;
 $639 = -$463;
 $640 = $484 * $639;
 $641 = $640 - $532;
 $642 = $483 * $639;
 $643 = $642 + $641;
 $644 = $642 + $643;
 $645 = $480 * $620;
 $646 = $645 + $644;
 $647 = $467 * $483;
 $648 = $647 + $646;
 $649 = $480 * $463;
 $650 = $649 + $648;
 $651 = $649 + $650;
 $652 = $520 + $651;
 $653 = $480 * $627;
 $654 = $653 + $652;
 $655 = $469 * $481;
 $656 = $655 + $654;
 HEAPF64[$78>>3] = $656;
 $657 = $506 - $489;
 $658 = $657 - $508;
 $659 = $476 + $658;
 HEAPF64[$79>>3] = $659;
 $660 = $512 - $515;
 HEAPF64[$80>>3] = $660;
 __ZN8IKSolver10polyroots8EPdS0_Ri($op,$zeror,$numroots);
 $661 = HEAP32[$numroots>>2]|0;
 $662 = ($661|0)>(0);
 if (!($662)) {
  $663 = $j27valid;
  $664 = $663;
  HEAP32[$664>>2] = 16843009;
  $665 = (($663) + 4)|0;
  $666 = $665;
  HEAP32[$666>>2] = 16843009;
  HEAP8[$2>>0] = 8;
  $8358 = HEAP32[$solutions>>2]|0;
  $8359 = ((($8358)) + 16|0);
  $8360 = HEAP32[$8359>>2]|0;
  $8361 = (FUNCTION_TABLE_ii[$8360 & 63]($solutions)|0);
  $8362 = ($8361|0)!=(0);
  STACKTOP = sp;return ($8362|0);
 }
 $667 = HEAP32[$numroots>>2]|0;
 $668 = ($667|0)>(1);
 $numsolutions$0452 = 0;
 while(1) {
  $669 = (($zeror) + ($numsolutions$0452<<3)|0);
  $670 = +HEAPF64[$669>>3];
  $671 = (+Math_atan((+$670)));
  $672 = $671 * 2.0;
  $673 = $672 + 6.2831853071795898;
  $674 = $672 > 3.14159265358979;
  $675 = (($j27array) + ($numsolutions$0452<<3)|0);
  HEAPF64[$675>>3] = $672;
  if ($674) {
   $676 = $672 + -6.2831853071795898;
   HEAPF64[$675>>3] = $676;
  } else {
   $677 = $672 < -3.14159265358979;
   if ($677) {
    HEAPF64[$675>>3] = $673;
   }
  }
  $678 = +HEAPF64[$675>>3];
  $679 = (+__Z5IKsind($678));
  $680 = (($sj27array) + ($numsolutions$0452<<3)|0);
  HEAPF64[$680>>3] = $679;
  $681 = +HEAPF64[$675>>3];
  $682 = (+__Z5IKcosd($681));
  $683 = (($cj27array) + ($numsolutions$0452<<3)|0);
  HEAPF64[$683>>3] = $682;
  $684 = (($numsolutions$0452) + 1)|0;
  $685 = ($684|0)<($667|0);
  if ($685) {
   $numsolutions$0452 = $684;
  } else {
   break;
  }
 }
 $$ = $668 ? $667 : 1;
 $686 = $j27valid;
 $687 = $686;
 HEAP32[$687>>2] = 16843009;
 $688 = (($686) + 4)|0;
 $689 = $688;
 HEAP32[$689>>2] = 16843009;
 HEAP8[$2>>0] = 8;
 $ij271$0727 = 0;
 while(1) {
  $690 = (($j27valid) + ($ij271$0727)|0);
  $691 = HEAP8[$690>>0]|0;
  $692 = ($691<<24>>24)==(0);
  L15: do {
   if (!($692)) {
    $693 = (($j27array) + ($ij271$0727<<3)|0);
    $694 = +HEAPF64[$693>>3];
    HEAPF64[$this>>3] = $694;
    $695 = (($cj27array) + ($ij271$0727<<3)|0);
    $696 = +HEAPF64[$695>>3];
    HEAPF64[$81>>3] = $696;
    $697 = (($sj27array) + ($ij271$0727<<3)|0);
    $698 = +HEAPF64[$697>>3];
    HEAPF64[$82>>3] = $698;
    $699 = +HEAPF64[$this>>3];
    $700 = $699 * 0.5;
    $701 = (+__Z5IKtand($700));
    HEAPF64[$83>>3] = $701;
    $702 = $ij271$0727&255;
    HEAP8[$0>>0] = $702;
    HEAP8[$1>>0] = -1;
    $iij27$0453 = (($ij271$0727) + 1)|0;
    $703 = ($iij27$0453|0)<($$|0);
    L17: do {
     if ($703) {
      $iij27$0454 = $iij27$0453;
      while(1) {
       $704 = (($j27valid) + ($iij27$0454)|0);
       $705 = HEAP8[$704>>0]|0;
       $706 = ($705<<24>>24)==(0);
       if (!($706)) {
        $708 = +HEAPF64[$695>>3];
        $709 = (($cj27array) + ($iij27$0454<<3)|0);
        $710 = +HEAPF64[$709>>3];
        $711 = $708 - $710;
        $712 = (+__Z5IKabsd($711));
        $713 = $712 < 9.9999999999999995E-7;
        if ($713) {
         $714 = +HEAPF64[$697>>3];
         $715 = (($sj27array) + ($iij27$0454<<3)|0);
         $716 = +HEAPF64[$715>>3];
         $717 = $714 - $716;
         $718 = (+__Z5IKabsd($717));
         $719 = $718 < 9.9999999999999995E-7;
         if ($719) {
          $$lcssa = $704;$iij27$0454$lcssa = $iij27$0454;
          break;
         }
        }
       }
       $iij27$0 = (($iij27$0454) + 1)|0;
       $707 = ($iij27$0|0)<($$|0);
       if ($707) {
        $iij27$0454 = $iij27$0;
       } else {
        break L17;
       }
      }
      HEAP8[$$lcssa>>0] = 0;
      $720 = $iij27$0454$lcssa&255;
      HEAP8[$1>>0] = $720;
     }
    } while(0);
    $721 = +HEAPF64[$81>>3];
    $722 = $721 * $721;
    $723 = +HEAPF64[$45>>3];
    $724 = $723 * $723;
    $725 = +HEAPF64[$43>>3];
    $726 = $725 * $725;
    $727 = +HEAPF64[$47>>3];
    $728 = $727 * $727;
    $729 = +HEAPF64[$24>>3];
    $730 = $729 * 100.0;
    $731 = +HEAPF64[$82>>3];
    $732 = $723 * $731;
    $733 = $729 * 4.0;
    $734 = $721 * $725;
    $735 = $734 * $729;
    $736 = $722 * $726;
    $737 = $724 * $733;
    $738 = $735 * 20.0;
    $739 = $722 * $724;
    $740 = $739 * $730;
    $741 = $738 + $740;
    $742 = $732 * -200.0;
    $743 = $735 * $742;
    $744 = $741 + $743;
    $745 = $724 * $730;
    $746 = $744 - $745;
    $747 = $746 - $729;
    $748 = $736 * $730;
    $749 = $747 - $748;
    $750 = -$728;
    $751 = $730 * $750;
    $752 = $751 + $749;
    $753 = $729 * 20.0;
    $754 = $753 * $732;
    $755 = $754 + $752;
    $756 = (+__Z5IKabsd($755));
    $757 = $756 < 9.9999999999999995E-7;
    if (!($757)) {
     $758 = $729 * 0.80000000000000004;
     $759 = $758 * $732;
     $760 = $759 - $737;
     $761 = $729 * 0.040000000000000001;
     $762 = $760 - $761;
     $763 = $733 * $750;
     $764 = $763 + $762;
     $765 = $735 * 0.80000000000000004;
     $766 = $765 + $764;
     $767 = $736 * $733;
     $768 = $766 - $767;
     $769 = $732 * -8.0;
     $770 = $735 * $769;
     $771 = $770 + $768;
     $772 = $722 * $737;
     $773 = $772 + $771;
     $774 = (+__Z6IKsignd($773));
     $775 = (+__Z5IKabsd($774));
     $776 = $775 < 9.9999999999999995E-7;
     if (!($776)) {
      HEAP8[$6>>0] = 1;
      $4657 = +HEAPF64[$81>>3];
      $4658 = $4657 * $4657;
      $4659 = +HEAPF64[$43>>3];
      $4660 = $4659 * $4659;
      $4661 = +HEAPF64[$45>>3];
      $4662 = $4661 * $4661;
      $4663 = +HEAPF64[$47>>3];
      $4664 = $4657 * $4659;
      $4665 = +HEAPF64[$60>>3];
      $4666 = $4665 * 5.0;
      $4667 = +HEAPF64[$23>>3];
      $4668 = $4661 * $4667;
      $4669 = $4657 * 4.0;
      $4670 = +HEAPF64[$24>>3];
      $4671 = $4663 * $4670;
      $4672 = +HEAPF64[$82>>3];
      $4673 = $4667 * $4672;
      $4674 = $4661 * $4672;
      $4675 = $4670 * $4674;
      $4676 = $4658 * $4670;
      $4677 = $4662 * 4.0;
      $4678 = -$4670;
      $4679 = $4663 * $4678;
      $4680 = $4664 * $4679;
      $4681 = $4659 * 8.0;
      $4682 = $4681 * $4668;
      $4683 = $4658 * $4682;
      $4684 = $4680 + $4683;
      $4685 = $4657 * -0.40000000000000002;
      $4686 = $4685 * $4668;
      $4687 = $4686 + $4684;
      $4688 = $4669 * $4673;
      $4689 = $4660 * $4688;
      $4690 = $4687 - $4689;
      $4691 = $4662 * $4688;
      $4692 = $4691 + $4690;
      $4693 = $4666 * $4671;
      $4694 = $4693 + $4692;
      $4695 = $4663 * $4675;
      $4696 = $4694 - $4695;
      $4697 = $4659 * -4.0;
      $4698 = $4697 * $4668;
      $4699 = $4698 + $4696;
      $4700 = $4671 * 0.33479500000000001;
      $4701 = $4700 + $4699;
      $4702 = $4659 * 0.40000000000000002;
      $4703 = $4702 * $4673;
      $4704 = $4703 + $4701;
      $4705 = $4662 * $4676;
      $4706 = $4665 * 0.5;
      $4707 = $4706 * $4670;
      $4708 = $4707 - $4705;
      $4709 = $4663 * $4668;
      $4710 = $4669 * $4709;
      $4711 = $4710 + $4708;
      $4712 = $4664 * 2.0;
      $4713 = $4712 * $4675;
      $4714 = $4711 + $4713;
      $4715 = $4697 * $4663;
      $4716 = $4715 * $4673;
      $4717 = $4716 + $4714;
      $4718 = $4660 * $4676;
      $4719 = $4718 + $4717;
      $4720 = $4670 * 0.033479500000000002;
      $4721 = $4720 + $4719;
      $4722 = $4662 * $4670;
      $4723 = $4722 + $4721;
      $4724 = $4664 * $4678;
      $4725 = $4666 * $4724;
      $4726 = $4725 + $4723;
      $4727 = $4666 * $4675;
      $4728 = $4726 - $4727;
      $4729 = $4675 * 0.43479499999999999;
      $4730 = $4728 - $4729;
      $4731 = $4670 * -0.43479499999999999;
      $4732 = $4664 * $4731;
      $4733 = $4732 + $4730;
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x1011,$4704,$4733,1.9999999999999999E-6);
      $4734 = HEAP8[$221>>0]|0;
      $4735 = ($4734<<24>>24)==(0);
      if ($4735) {
       break;
      }
      $4736 = +HEAPF64[$24>>3];
      $4737 = $4736 * 0.80000000000000004;
      $4738 = $4664 * $4737;
      $4739 = $4677 * $4676;
      $4740 = $4739 + $4738;
      $4741 = $4676 * -4.0;
      $4742 = $4660 * $4741;
      $4743 = $4742 + $4740;
      $4744 = $4736 * 0.040000000000000001;
      $4745 = $4743 - $4744;
      $4746 = $4664 * -8.0;
      $4747 = $4746 * $4675;
      $4748 = $4747 + $4745;
      $4749 = $4677 * $4736;
      $4750 = $4748 - $4749;
      $4751 = $4675 * 0.80000000000000004;
      $4752 = $4751 + $4750;
      $4753 = +HEAPF64[$47>>3];
      $4754 = $4753 * -4.0;
      $4755 = $4671 * $4754;
      $4756 = $4755 + $4752;
      $4757 = (+__Z6IKsignd($4756));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1012,$4757,-1);
      $4758 = HEAP8[$222>>0]|0;
      $4759 = ($4758<<24>>24)==(0);
      if ($4759) {
       break;
      }
      $4760 = +HEAPF64[$x1011>>3];
      $4761 = $4760 + -1.5707963267949001;
      $4762 = +HEAPF64[$x1012>>3];
      $4763 = $4762 * 1.5707963267949001;
      $4764 = $4761 + $4763;
      $4765 = (+__Z5IKsind($4764));
      $4766 = (+__Z5IKcosd($4764));
      $4767 = $4764 > 3.14159265358979;
      if ($4767) {
       $4768 = $4764 + -6.2831853071795898;
       $4771 = $4768;
      } else {
       $4769 = $4764 < -3.14159265358979;
       if ($4769) {
        $4770 = $4764 + 6.2831853071795898;
        $4771 = $4770;
       } else {
        $4771 = $4764;
       }
      }
      HEAP8[$4>>0] = 0;
      HEAP8[$5>>0] = -1;
      HEAPF64[$3>>3] = $4771;
      HEAPF64[$223>>3] = $4766;
      HEAPF64[$224>>3] = $4765;
      $4772 = +HEAPF64[$3>>3];
      $4773 = (+__Z5IKcosd($4772));
      $4774 = (+__Z5IKsind($4772));
      $4775 = +HEAPF64[$45>>3];
      $4776 = +HEAPF64[$82>>3];
      $4777 = $4775 * $4776;
      $4778 = +HEAPF64[$81>>3];
      $4779 = +HEAPF64[$43>>3];
      $4780 = $4778 * $4779;
      $4781 = $4773 * 0.80000000000000004;
      $4782 = +HEAPF64[$24>>3];
      $4783 = $4774 * $4782;
      $4784 = +HEAPF64[$47>>3];
      $4785 = $4784 * -0.80000000000000004;
      $4786 = $4774 * $4785;
      $4787 = $4786 + -0.066959000000000005;
      $4788 = $4781 * $4780;
      $4789 = $4788 + $4787;
      $4790 = $4773 * 0.080000000000000002;
      $4791 = $4789 - $4790;
      $4792 = +HEAPF64[$60>>3];
      $4793 = $4791 - $4792;
      $4794 = $4781 * $4777;
      $4795 = $4794 + $4793;
      $4796 = $4780 * 0.20000000000000001;
      $4797 = $4796 + $4795;
      $4798 = $4777 * 0.20000000000000001;
      $4799 = $4798 + $4797;
      $4800 = +HEAPF64[$23>>3];
      $4801 = (+__Z5IKabsd($4799));
      $4802 = $4801 > 5.0000000000000004E-6;
      if ($4802) {
       break;
      }
      $4803 = $4779 * $4800;
      $4804 = $4776 * $4803;
      $4805 = $4782 * $4784;
      $4806 = $4773 * $4805;
      $4807 = $4804 - $4806;
      $4808 = $4775 * $4800;
      $4809 = $4778 * $4808;
      $4810 = $4807 - $4809;
      $4811 = $4777 * $4783;
      $4812 = $4810 - $4811;
      $4813 = $4780 * $4783;
      $4814 = $4812 - $4813;
      $4815 = $4783 * 0.10000000000000001;
      $4816 = $4815 + $4814;
      $4817 = (+__Z5IKabsd($4816));
      $4818 = $4817 > 5.0000000000000004E-6;
      if ($4818) {
       break;
      }
      $4819 = (+__Z5IKabsd($4782));
      $4820 = $4819 < 9.9999999999999995E-7;
      if (!($4820)) {
       HEAP8[$10>>0] = 1;
       $8212 = +HEAPF64[$24>>3];
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1194,$8212,-1);
       $8213 = HEAP8[$299>>0]|0;
       $8214 = ($8213<<24>>24)==(0);
       if ($8214) {
        break;
       }
       $8215 = +HEAPF64[$x1194>>3];
       $8216 = $8215 * 0.0031152647975077898;
       $8217 = +HEAPF64[$81>>3];
       $8218 = $8217 * 1000.0;
       $8219 = +HEAPF64[$45>>3];
       $8220 = $8218 * $8219;
       $8221 = +HEAPF64[$43>>3];
       $8222 = $8221 * -1000.0;
       $8223 = +HEAPF64[$82>>3];
       $8224 = $8222 * $8223;
       $8225 = $8220 + $8224;
       $8226 = $8216 * $8225;
       $8227 = (+__Z5IKabsd($8226));
       $8228 = $8227 < 1.9999999999999999E-6;
       if ($8228) {
        $8229 = +HEAPF64[$60>>3];
        $8230 = $8229 * 3.8940809968847399;
        $8231 = $8230 + -0.98536214953270995;
        $8232 = $8219 * -0.77881619937694702;
        $8233 = $8232 * $8223;
        $8234 = $8233 + $8231;
        $8235 = $8217 * -0.77881619937694702;
        $8236 = $8235 * $8221;
        $8237 = $8236 + $8234;
        $8238 = (+__Z5IKabsd($8237));
        $8239 = $8238 < 1.9999999999999999E-6;
        if ($8239) {
         $8240 = (+__Z5IKsqrd($8226));
         $8241 = (+__Z5IKsqrd($8237));
         $8242 = $8240 + $8241;
         $8243 = $8242 + -1.0;
         $8244 = (+__Z5IKabsd($8243));
         $8245 = !($8244 <= 1.9999999999999999E-6);
         if (!($8245)) {
          break;
         }
        }
       }
       $8246 = +HEAPF64[$x1194>>3];
       $8247 = $8246 * 0.0031152647975077898;
       $8248 = +HEAPF64[$81>>3];
       $8249 = $8248 * 1000.0;
       $8250 = +HEAPF64[$45>>3];
       $8251 = $8249 * $8250;
       $8252 = +HEAPF64[$43>>3];
       $8253 = $8252 * -1000.0;
       $8254 = +HEAPF64[$82>>3];
       $8255 = $8253 * $8254;
       $8256 = $8251 + $8255;
       $8257 = $8247 * $8256;
       $8258 = +HEAPF64[$60>>3];
       $8259 = $8258 * 3.8940809968847399;
       $8260 = $8259 + -0.98536214953270995;
       $8261 = $8250 * -0.77881619937694702;
       $8262 = $8261 * $8254;
       $8263 = $8262 + $8260;
       $8264 = $8248 * -0.77881619937694702;
       $8265 = $8264 * $8252;
       $8266 = $8265 + $8263;
       $8267 = (+__Z7IKatan2dd($8257,$8266));
       $8268 = (+__Z5IKsind($8267));
       $8269 = (+__Z5IKcosd($8267));
       $8270 = $8267 > 3.14159265358979;
       if ($8270) {
        $8271 = $8267 + -6.2831853071795898;
        $8274 = $8271;
       } else {
        $8272 = $8267 < -3.14159265358979;
        if ($8272) {
         $8273 = $8267 + 6.2831853071795898;
         $8274 = $8273;
        } else {
         $8274 = $8267;
        }
       }
       HEAP8[$8>>0] = 0;
       HEAP8[$9>>0] = -1;
       HEAPF64[$7>>3] = $8274;
       HEAPF64[$300>>3] = $8269;
       HEAPF64[$301>>3] = $8268;
       $8275 = +HEAPF64[$7>>3];
       $8276 = (+__Z5IKsind($8275));
       $8277 = (+__Z5IKcosd($8275));
       $8278 = +HEAPF64[$45>>3];
       $8279 = +HEAPF64[$23>>3];
       $8280 = +HEAPF64[$224>>3];
       $8281 = $8279 * $8280;
       $8282 = +HEAPF64[$81>>3];
       $8283 = +HEAPF64[$43>>3];
       $8284 = $8282 * $8283;
       $8285 = +HEAPF64[$223>>3];
       $8286 = $8279 * $8285;
       $8287 = +HEAPF64[$82>>3];
       $8288 = $8278 * $8287;
       $8289 = $8283 * $8287;
       $8290 = $8276 * 0.32100000000000001;
       $8291 = $8277 * 0.32100000000000001;
       $8292 = +HEAPF64[$24>>3];
       $8293 = $8290 * $8292;
       $8294 = $8289 + $8293;
       $8295 = -$8282;
       $8296 = $8278 * $8295;
       $8297 = $8296 + $8294;
       $8298 = $8280 * 0.40000000000000002;
       $8299 = $8291 * $8280;
       $8300 = $8298 + $8299;
       $8301 = $8290 * $8286;
       $8302 = $8300 + $8301;
       $8303 = +HEAPF64[$47>>3];
       $8304 = $8302 + $8303;
       $8305 = $8291 + 0.40000000000000002;
       $8306 = $8285 * 0.10000000000000001;
       $8307 = $8305 + $8306;
       $8308 = -$8285;
       $8309 = $8284 * $8308;
       $8310 = $8309 + $8307;
       $8311 = $8287 * $8308;
       $8312 = $8278 * $8311;
       $8313 = $8310 + $8312;
       $8314 = $8280 * $8303;
       $8315 = $8313 + $8314;
       $8316 = $8285 * 0.40000000000000002;
       $8317 = $8316 + 0.10000000000000001;
       $8318 = $8291 * $8285;
       $8319 = $8318 + $8317;
       $8320 = $8319 - $8288;
       $8321 = $8320 - $8284;
       $8322 = $8290 * $8281;
       $8323 = $8321 - $8322;
       $8324 = $8281 * 0.10000000000000001;
       $8325 = $8290 - $8324;
       $8326 = $8281 * $8284;
       $8327 = $8325 + $8326;
       $8328 = $8292 * $8289;
       $8329 = $8327 + $8328;
       $8330 = $8292 * $8295;
       $8331 = $8278 * $8330;
       $8332 = $8329 + $8331;
       $8333 = $8286 * $8303;
       $8334 = $8333 + $8332;
       $8335 = $8281 * $8288;
       $8336 = $8335 + $8334;
       $8337 = (+__Z5IKabsd($8297));
       $8338 = $8337 > 5.0000000000000004E-6;
       if ($8338) {
        break;
       }
       $8339 = +HEAPF64[$60>>3];
       $8340 = 0.25304100000000002 - $8339;
       $8341 = $8284 * 0.20000000000000001;
       $8342 = $8341 + $8340;
       $8343 = $8277 * 0.25679999999999997;
       $8344 = $8343 + $8342;
       $8345 = $8288 * 0.20000000000000001;
       $8346 = $8345 + $8344;
       $8347 = (+__Z5IKabsd($8346));
       $8348 = $8347 > 5.0000000000000004E-6;
       if ($8348) {
        break;
       }
       $8349 = (+__Z5IKabsd($8304));
       $8350 = $8349 > 5.0000000000000004E-6;
       if ($8350) {
        break;
       }
       $8351 = (+__Z5IKabsd($8315));
       $8352 = $8351 > 5.0000000000000004E-6;
       if ($8352) {
        break;
       }
       $8353 = (+__Z5IKabsd($8323));
       $8354 = $8353 > 5.0000000000000004E-6;
       if ($8354) {
        break;
       }
       $8355 = (+__Z5IKabsd($8336));
       $8356 = $8355 > 5.0000000000000004E-6;
       if ($8356) {
        break;
       }
       __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
       break;
      }
      $4821 = +HEAPF64[$223>>3];
      $4822 = (+__Z5IKabsd($4821));
      $4823 = $4822 < 9.9999999999999995E-7;
      if (!($4823)) {
       $4824 = (+__Z5IKabsd($4800));
       $4825 = $4824 < 9.9999999999999995E-7;
       if (!($4825)) {
        HEAP8[$10>>0] = 1;
        $8052 = +HEAPF64[$224>>3];
        $8053 = $8052 * 250.0;
        $8054 = +HEAPF64[$45>>3];
        $8055 = +HEAPF64[$82>>3];
        $8056 = $8054 * $8055;
        $8057 = +HEAPF64[$81>>3];
        $8058 = +HEAPF64[$43>>3];
        $8059 = $8057 * $8058;
        $8060 = +HEAPF64[$223>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1182,$8060,-1);
        $8061 = HEAP8[$295>>0]|0;
        $8062 = ($8061<<24>>24)==(0);
        if ($8062) {
         break;
        }
        $8063 = +HEAPF64[$23>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1183,$8063,-1);
        $8064 = HEAP8[$296>>0]|0;
        $8065 = ($8064<<24>>24)==(0);
        if ($8065) {
         break;
        }
        $8066 = +HEAPF64[$x1182>>3];
        $8067 = $8066 * 0.0031152647975077898;
        $8068 = +HEAPF64[$x1183>>3];
        $8069 = $8067 * $8068;
        $8070 = +HEAPF64[$47>>3];
        $8071 = $8070 * 1000.0;
        $8072 = +HEAPF64[$224>>3];
        $8073 = $8072 * -83.698750000000003;
        $8074 = $8073 - $8071;
        $8075 = $8053 * $8059;
        $8076 = $8075 + $8074;
        $8077 = $8053 * $8056;
        $8078 = $8077 + $8076;
        $8079 = +HEAPF64[$60>>3];
        $8080 = $8079 * -1250.0;
        $8081 = $8072 * $8080;
        $8082 = $8081 + $8078;
        $8083 = $8069 * $8082;
        $8084 = (+__Z5IKabsd($8083));
        $8085 = $8084 < 1.9999999999999999E-6;
        do {
         if ($8085) {
          $8086 = $8079 * 3.8940809968847399;
          $8087 = $8086 + -0.98536214953270995;
          $8088 = $8056 * 0.77881619937694702;
          $8089 = $8087 - $8088;
          $8090 = $8059 * 0.77881619937694702;
          $8091 = $8089 - $8090;
          $8092 = (+__Z5IKabsd($8091));
          $8093 = $8092 < 1.9999999999999999E-6;
          if (!($8093)) {
           break;
          }
          $8094 = (+__Z5IKsqrd($8083));
          $8095 = (+__Z5IKsqrd($8091));
          $8096 = $8094 + $8095;
          $8097 = $8096 + -1.0;
          $8098 = (+__Z5IKabsd($8097));
          $8099 = !($8098 <= 1.9999999999999999E-6);
          if (!($8099)) {
           break L15;
          }
         }
        } while(0);
        $8100 = +HEAPF64[$x1182>>3];
        $8101 = $8100 * 0.0031152647975077898;
        $8102 = +HEAPF64[$x1183>>3];
        $8103 = $8101 * $8102;
        $8104 = +HEAPF64[$47>>3];
        $8105 = $8104 * 1000.0;
        $8106 = +HEAPF64[$224>>3];
        $8107 = $8106 * -83.698750000000003;
        $8108 = $8107 - $8105;
        $8109 = $8075 + $8108;
        $8110 = $8077 + $8109;
        $8111 = +HEAPF64[$60>>3];
        $8112 = $8111 * -1250.0;
        $8113 = $8106 * $8112;
        $8114 = $8113 + $8110;
        $8115 = $8103 * $8114;
        $8116 = $8111 * 3.8940809968847399;
        $8117 = $8116 + -0.98536214953270995;
        $8118 = $8056 * 0.77881619937694702;
        $8119 = $8117 - $8118;
        $8120 = $8059 * 0.77881619937694702;
        $8121 = $8119 - $8120;
        $8122 = (+__Z7IKatan2dd($8115,$8121));
        $8123 = (+__Z5IKsind($8122));
        $8124 = (+__Z5IKcosd($8122));
        $8125 = $8122 > 3.14159265358979;
        do {
         if ($8125) {
          $8126 = $8122 + -6.2831853071795898;
          $8129 = $8126;
         } else {
          $8127 = $8122 < -3.14159265358979;
          if (!($8127)) {
           $8129 = $8122;
           break;
          }
          $8128 = $8122 + 6.2831853071795898;
          $8129 = $8128;
         }
        } while(0);
        HEAP8[$8>>0] = 0;
        HEAP8[$9>>0] = -1;
        HEAPF64[$7>>3] = $8129;
        HEAPF64[$297>>3] = $8124;
        HEAPF64[$298>>3] = $8123;
        $8130 = +HEAPF64[$7>>3];
        $8131 = (+__Z5IKsind($8130));
        $8132 = (+__Z5IKcosd($8130));
        $8133 = +HEAPF64[$45>>3];
        $8134 = +HEAPF64[$23>>3];
        $8135 = +HEAPF64[$224>>3];
        $8136 = $8134 * $8135;
        $8137 = +HEAPF64[$81>>3];
        $8138 = +HEAPF64[$43>>3];
        $8139 = $8137 * $8138;
        $8140 = +HEAPF64[$223>>3];
        $8141 = $8134 * $8140;
        $8142 = +HEAPF64[$82>>3];
        $8143 = $8133 * $8142;
        $8144 = $8138 * $8142;
        $8145 = $8131 * 0.32100000000000001;
        $8146 = $8132 * 0.32100000000000001;
        $8147 = +HEAPF64[$24>>3];
        $8148 = $8145 * $8147;
        $8149 = $8144 + $8148;
        $8150 = -$8137;
        $8151 = $8133 * $8150;
        $8152 = $8151 + $8149;
        $8153 = $8135 * 0.40000000000000002;
        $8154 = $8146 * $8135;
        $8155 = $8153 + $8154;
        $8156 = $8145 * $8141;
        $8157 = $8155 + $8156;
        $8158 = +HEAPF64[$47>>3];
        $8159 = $8157 + $8158;
        $8160 = $8146 + 0.40000000000000002;
        $8161 = $8140 * 0.10000000000000001;
        $8162 = $8160 + $8161;
        $8163 = -$8140;
        $8164 = $8139 * $8163;
        $8165 = $8164 + $8162;
        $8166 = $8142 * $8163;
        $8167 = $8133 * $8166;
        $8168 = $8165 + $8167;
        $8169 = $8135 * $8158;
        $8170 = $8168 + $8169;
        $8171 = $8140 * 0.40000000000000002;
        $8172 = $8171 + 0.10000000000000001;
        $8173 = $8145 * $8136;
        $8174 = $8172 - $8173;
        $8175 = $8146 * $8140;
        $8176 = $8175 + $8174;
        $8177 = $8176 - $8143;
        $8178 = $8177 - $8139;
        $8179 = $8147 * $8144;
        $8180 = $8136 * $8139;
        $8181 = $8180 + $8179;
        $8182 = $8145 + $8181;
        $8183 = $8136 * $8143;
        $8184 = $8183 + $8182;
        $8185 = $8141 * $8158;
        $8186 = $8185 + $8184;
        $8187 = $8136 * 0.10000000000000001;
        $8188 = $8186 - $8187;
        $8189 = $8147 * $8150;
        $8190 = $8133 * $8189;
        $8191 = $8190 + $8188;
        $8192 = (+__Z5IKabsd($8152));
        $8193 = $8192 > 5.0000000000000004E-6;
        if ($8193) {
         break;
        }
        $8194 = +HEAPF64[$60>>3];
        $8195 = 0.25304100000000002 - $8194;
        $8196 = $8143 * 0.20000000000000001;
        $8197 = $8196 + $8195;
        $8198 = $8139 * 0.20000000000000001;
        $8199 = $8198 + $8197;
        $8200 = $8132 * 0.25679999999999997;
        $8201 = $8200 + $8199;
        $8202 = (+__Z5IKabsd($8201));
        $8203 = $8202 > 5.0000000000000004E-6;
        if ($8203) {
         break;
        }
        $8204 = (+__Z5IKabsd($8159));
        $8205 = $8204 > 5.0000000000000004E-6;
        if ($8205) {
         break;
        }
        $8206 = (+__Z5IKabsd($8170));
        $8207 = $8206 > 5.0000000000000004E-6;
        if ($8207) {
         break;
        }
        $8208 = (+__Z5IKabsd($8178));
        $8209 = $8208 > 5.0000000000000004E-6;
        if ($8209) {
         break;
        }
        $8210 = (+__Z5IKabsd($8191));
        $8211 = $8210 > 5.0000000000000004E-6;
        if ($8211) {
         break;
        }
        __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
        break;
       }
      }
      $4826 = +HEAPF64[$24>>3];
      $4827 = (+__Z5IKabsd($4826));
      $4828 = $4827 < 9.9999999999999995E-7;
      if (!($4828)) {
       $4829 = +HEAPF64[$224>>3];
       $4830 = (+__Z5IKabsd($4829));
       $4831 = $4830 < 9.9999999999999995E-7;
       if (!($4831)) {
        HEAP8[$10>>0] = 1;
        $7901 = +HEAPF64[$24>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1167,$7901,-1);
        $7902 = HEAP8[$291>>0]|0;
        $7903 = ($7902<<24>>24)==(0);
        if ($7903) {
         break;
        }
        $7904 = +HEAPF64[$x1167>>3];
        $7905 = $7904 * 0.0031152647975077898;
        $7906 = +HEAPF64[$223>>3];
        $7907 = +HEAPF64[$23>>3];
        $7908 = $7906 * $7907;
        $7909 = +HEAPF64[$81>>3];
        $7910 = $7909 * 1000.0;
        $7911 = +HEAPF64[$45>>3];
        $7912 = $7910 * $7911;
        $7913 = +HEAPF64[$43>>3];
        $7914 = $7913 * 1000.0;
        $7915 = +HEAPF64[$82>>3];
        $7916 = $7914 * $7915;
        $7917 = +HEAPF64[$224>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1168,$7917,-1);
        $7918 = HEAP8[$292>>0]|0;
        $7919 = ($7918<<24>>24)==(0);
        if ($7919) {
         break;
        }
        $7920 = $7912 - $7916;
        $7921 = $7905 * $7920;
        $7922 = (+__Z5IKabsd($7921));
        $7923 = $7922 < 1.9999999999999999E-6;
        do {
         if ($7923) {
          $7924 = +HEAPF64[$x1168>>3];
          $7925 = $7905 * $7924;
          $7926 = $7908 * $7916;
          $7927 = +HEAPF64[$224>>3];
          $7928 = $7927 * -400.0;
          $7929 = +HEAPF64[$24>>3];
          $7930 = $7928 * $7929;
          $7931 = $7926 + $7930;
          $7932 = +HEAPF64[$47>>3];
          $7933 = $7932 * -1000.0;
          $7934 = $7929 * $7933;
          $7935 = $7931 + $7934;
          $7936 = $7908 * $7912;
          $7937 = $7935 - $7936;
          $7938 = $7925 * $7937;
          $7939 = (+__Z5IKabsd($7938));
          $7940 = $7939 < 1.9999999999999999E-6;
          if (!($7940)) {
           break;
          }
          $7941 = (+__Z5IKsqrd($7921));
          $7942 = (+__Z5IKsqrd($7938));
          $7943 = $7941 + $7942;
          $7944 = $7943 + -1.0;
          $7945 = (+__Z5IKabsd($7944));
          $7946 = !($7945 <= 1.9999999999999999E-6);
          if (!($7946)) {
           break L15;
          }
         }
        } while(0);
        $7947 = +HEAPF64[$x1168>>3];
        $7948 = $7905 * $7947;
        $7949 = $7908 * $7916;
        $7950 = +HEAPF64[$224>>3];
        $7951 = $7950 * -400.0;
        $7952 = +HEAPF64[$24>>3];
        $7953 = $7951 * $7952;
        $7954 = $7949 + $7953;
        $7955 = +HEAPF64[$47>>3];
        $7956 = $7955 * -1000.0;
        $7957 = $7952 * $7956;
        $7958 = $7954 + $7957;
        $7959 = $7908 * $7912;
        $7960 = $7958 - $7959;
        $7961 = $7948 * $7960;
        $7962 = (+__Z7IKatan2dd($7921,$7961));
        $7963 = (+__Z5IKsind($7962));
        $7964 = (+__Z5IKcosd($7962));
        $7965 = $7962 > 3.14159265358979;
        do {
         if ($7965) {
          $7966 = $7962 + -6.2831853071795898;
          $7969 = $7966;
         } else {
          $7967 = $7962 < -3.14159265358979;
          if (!($7967)) {
           $7969 = $7962;
           break;
          }
          $7968 = $7962 + 6.2831853071795898;
          $7969 = $7968;
         }
        } while(0);
        HEAP8[$8>>0] = 0;
        HEAP8[$9>>0] = -1;
        HEAPF64[$7>>3] = $7969;
        HEAPF64[$293>>3] = $7964;
        HEAPF64[$294>>3] = $7963;
        $7970 = +HEAPF64[$7>>3];
        $7971 = (+__Z5IKsind($7970));
        $7972 = (+__Z5IKcosd($7970));
        $7973 = +HEAPF64[$45>>3];
        $7974 = +HEAPF64[$23>>3];
        $7975 = +HEAPF64[$224>>3];
        $7976 = $7974 * $7975;
        $7977 = +HEAPF64[$81>>3];
        $7978 = +HEAPF64[$43>>3];
        $7979 = $7977 * $7978;
        $7980 = +HEAPF64[$223>>3];
        $7981 = $7974 * $7980;
        $7982 = +HEAPF64[$82>>3];
        $7983 = $7973 * $7982;
        $7984 = $7978 * $7982;
        $7985 = $7971 * 0.32100000000000001;
        $7986 = $7972 * 0.32100000000000001;
        $7987 = -$7977;
        $7988 = $7973 * $7987;
        $7989 = $7988 + $7984;
        $7990 = +HEAPF64[$24>>3];
        $7991 = $7985 * $7990;
        $7992 = $7989 + $7991;
        $7993 = $7975 * 0.40000000000000002;
        $7994 = $7985 * $7981;
        $7995 = $7993 + $7994;
        $7996 = +HEAPF64[$47>>3];
        $7997 = $7995 + $7996;
        $7998 = $7986 * $7975;
        $7999 = $7998 + $7997;
        $8000 = $7986 + 0.40000000000000002;
        $8001 = -$7980;
        $8002 = $7982 * $8001;
        $8003 = $7973 * $8002;
        $8004 = $8000 + $8003;
        $8005 = $7980 * 0.10000000000000001;
        $8006 = $8005 + $8004;
        $8007 = $7979 * $8001;
        $8008 = $8007 + $8006;
        $8009 = $7975 * $7996;
        $8010 = $8009 + $8008;
        $8011 = $7986 * $7980;
        $8012 = $8011 + 0.10000000000000001;
        $8013 = $7980 * 0.40000000000000002;
        $8014 = $8013 + $8012;
        $8015 = $7985 * $7976;
        $8016 = $8014 - $8015;
        $8017 = $8016 - $7983;
        $8018 = $8017 - $7979;
        $8019 = $7990 * $7987;
        $8020 = $7973 * $8019;
        $8021 = $7985 + $8020;
        $8022 = $7976 * $7983;
        $8023 = $8022 + $8021;
        $8024 = $7976 * $7979;
        $8025 = $8024 + $8023;
        $8026 = $7981 * $7996;
        $8027 = $8026 + $8025;
        $8028 = $7976 * 0.10000000000000001;
        $8029 = $8027 - $8028;
        $8030 = $7990 * $7984;
        $8031 = $8030 + $8029;
        $8032 = (+__Z5IKabsd($7992));
        $8033 = $8032 > 5.0000000000000004E-6;
        if ($8033) {
         break;
        }
        $8034 = +HEAPF64[$60>>3];
        $8035 = $7972 * 0.25679999999999997;
        $8036 = $8035 + 0.25304100000000002;
        $8037 = $7983 * 0.20000000000000001;
        $8038 = $8036 + $8037;
        $8039 = $7979 * 0.20000000000000001;
        $8040 = $8039 + $8038;
        $8041 = $8040 - $8034;
        $8042 = (+__Z5IKabsd($8041));
        $8043 = $8042 > 5.0000000000000004E-6;
        if ($8043) {
         break;
        }
        $8044 = (+__Z5IKabsd($7999));
        $8045 = $8044 > 5.0000000000000004E-6;
        if ($8045) {
         break;
        }
        $8046 = (+__Z5IKabsd($8010));
        $8047 = $8046 > 5.0000000000000004E-6;
        if ($8047) {
         break;
        }
        $8048 = (+__Z5IKabsd($8018));
        $8049 = $8048 > 5.0000000000000004E-6;
        if ($8049) {
         break;
        }
        $8050 = (+__Z5IKabsd($8031));
        $8051 = $8050 > 5.0000000000000004E-6;
        if ($8051) {
         break;
        }
        __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
        break;
       }
      }
      $4832 = +HEAPF64[$81>>3];
      $4833 = +HEAPF64[$43>>3];
      $4834 = $4832 * $4833;
      $4835 = +HEAPF64[$223>>3];
      $4836 = $4835 * 0.80000000000000004;
      $4837 = +HEAPF64[$45>>3];
      $4838 = +HEAPF64[$82>>3];
      $4839 = $4837 * $4838;
      $4840 = +HEAPF64[$22>>3];
      $4841 = (+__Z5IKabsd($4840));
      $4842 = $4841 + 3.14159265358979;
      $4843 = (+__Z6IKfmoddd($4842,6.2831853071795898));
      $4844 = $4843 + -3.14159265358979;
      $4845 = $4835 * 0.080000000000000002;
      $4846 = -0.066959000000000005 - $4845;
      $4847 = +HEAPF64[$60>>3];
      $4848 = $4846 - $4847;
      $4849 = $4836 * $4839;
      $4850 = $4849 + $4848;
      $4851 = $4834 * $4836;
      $4852 = $4851 + $4850;
      $4853 = $4839 * 0.20000000000000001;
      $4854 = $4853 + $4852;
      $4855 = $4834 * 0.20000000000000001;
      $4856 = $4855 + $4854;
      $4857 = +HEAPF64[$47>>3];
      $4858 = $4857 * -0.80000000000000004;
      $4859 = +HEAPF64[$224>>3];
      $4860 = $4858 * $4859;
      $4861 = $4860 + $4856;
      $4862 = (+__Z5IKabsd($4844));
      $4863 = $4862 < 9.9999999999999995E-7;
      if ($4863) {
       $4864 = $4833 * $4838;
       $4865 = $4832 * $4837;
       $4866 = $4864 - $4865;
       $4867 = (+__Z5IKabsd($4866));
       $4868 = $4867 < 9.9999999999999995E-7;
       if ($4868) {
        $4869 = (+__Z5IKabsd($4861));
        $4870 = $4869 < 9.9999999999999995E-7;
        if ($4870) {
         HEAP8[$10>>0] = 1;
         $4871 = +HEAPF64[$223>>3];
         $4872 = $4871 * 3.1152647975077898;
         $4873 = +HEAPF64[$45>>3];
         $4874 = +HEAPF64[$82>>3];
         $4875 = $4873 * $4874;
         $4876 = +HEAPF64[$224>>3];
         $4877 = $4876 * 3.1152647975077898;
         $4878 = +HEAPF64[$81>>3];
         $4879 = +HEAPF64[$43>>3];
         $4880 = $4878 * $4879;
         $4881 = +HEAPF64[$47>>3];
         $4882 = $4872 * $4881;
         $4883 = $4877 * $4880;
         $4884 = -$4883;
         $4885 = $4884 - $4882;
         $4886 = $4875 * $4877;
         $4887 = $4885 - $4886;
         $4888 = $4876 * 0.31152647975077902;
         $4889 = $4888 + $4887;
         $4890 = (+__Z5IKabsd($4889));
         $4891 = $4890 < 1.9999999999999999E-6;
         do {
          if ($4891) {
           $4892 = $4871 * 0.31152647975077902;
           $4893 = -1.2461059190031201 - $4892;
           $4894 = $4877 * $4881;
           $4895 = $4893 - $4894;
           $4896 = $4872 * $4880;
           $4897 = $4896 + $4895;
           $4898 = $4872 * $4875;
           $4899 = $4898 + $4897;
           $4900 = (+__Z5IKabsd($4899));
           $4901 = $4900 < 1.9999999999999999E-6;
           if (!($4901)) {
            break;
           }
           $4902 = (+__Z5IKsqrd($4889));
           $4903 = (+__Z5IKsqrd($4899));
           $4904 = $4902 + $4903;
           $4905 = $4904 + -1.0;
           $4906 = (+__Z5IKabsd($4905));
           $4907 = !($4906 <= 1.9999999999999999E-6);
           if (!($4907)) {
            break L15;
           }
          }
         } while(0);
         $4908 = +HEAPF64[$47>>3];
         $4909 = -$4908;
         $4910 = $4872 * $4909;
         $4911 = $4910 - $4883;
         $4912 = $4911 - $4886;
         $4913 = +HEAPF64[$224>>3];
         $4914 = $4913 * 0.31152647975077902;
         $4915 = $4914 + $4912;
         $4916 = +HEAPF64[$223>>3];
         $4917 = $4916 * 0.31152647975077902;
         $4918 = -1.2461059190031201 - $4917;
         $4919 = $4877 * $4909;
         $4920 = $4919 + $4918;
         $4921 = $4872 * $4880;
         $4922 = $4921 + $4920;
         $4923 = $4872 * $4875;
         $4924 = $4923 + $4922;
         $4925 = (+__Z7IKatan2dd($4915,$4924));
         $4926 = (+__Z5IKsind($4925));
         $4927 = (+__Z5IKcosd($4925));
         $4928 = $4925 > 3.14159265358979;
         do {
          if ($4928) {
           $4929 = $4925 + -6.2831853071795898;
           $4932 = $4929;
          } else {
           $4930 = $4925 < -3.14159265358979;
           if (!($4930)) {
            $4932 = $4925;
            break;
           }
           $4931 = $4925 + 6.2831853071795898;
           $4932 = $4931;
          }
         } while(0);
         HEAP8[$8>>0] = 0;
         HEAP8[$9>>0] = -1;
         HEAPF64[$7>>3] = $4932;
         HEAPF64[$225>>3] = $4927;
         HEAPF64[$226>>3] = $4926;
         $4933 = +HEAPF64[$7>>3];
         $4934 = (+__Z5IKcosd($4933));
         $4935 = (+__Z5IKsind($4933));
         $4936 = +HEAPF64[$45>>3];
         $4937 = +HEAPF64[$82>>3];
         $4938 = $4936 * $4937;
         $4939 = +HEAPF64[$81>>3];
         $4940 = +HEAPF64[$43>>3];
         $4941 = $4939 * $4940;
         $4942 = $4934 * 0.32100000000000001;
         $4943 = $4935 * 0.32100000000000001;
         $4944 = +HEAPF64[$224>>3];
         $4945 = +HEAPF64[$223>>3];
         $4946 = +HEAPF64[$47>>3];
         $4947 = $4934 * 0.25679999999999997;
         $4948 = $4947 + 0.25304100000000002;
         $4949 = +HEAPF64[$60>>3];
         $4950 = $4948 - $4949;
         $4951 = $4938 * 0.20000000000000001;
         $4952 = $4951 + $4950;
         $4953 = $4941 * 0.20000000000000001;
         $4954 = $4953 + $4952;
         $4955 = $4945 * $4946;
         $4956 = $4943 + $4955;
         $4957 = $4938 * $4944;
         $4958 = $4957 + $4956;
         $4959 = $4944 * $4941;
         $4960 = $4959 + $4958;
         $4961 = $4944 * 0.10000000000000001;
         $4962 = $4960 - $4961;
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1034,$4936,-1);
         $4963 = HEAP8[$227>>0]|0;
         $4964 = ($4963<<24>>24)==(0);
         if ($4964) {
          break;
         }
         $4965 = $4944 * 0.40000000000000002;
         $4966 = $4943 * $4945;
         $4967 = $4965 + $4966;
         $4968 = $4946 + $4967;
         $4969 = $4942 * $4944;
         $4970 = $4969 + $4968;
         $4971 = $4942 + 0.31630124999999998;
         $4972 = +HEAPF64[$60>>3];
         $4973 = $4972 * 1.25;
         $4974 = $4971 - $4973;
         $4975 = $4938 * 0.25;
         $4976 = $4975 + $4974;
         $4977 = +HEAPF64[$82>>3];
         $4978 = $4977 * 0.25;
         $4979 = +HEAPF64[$43>>3];
         $4980 = $4979 * $4979;
         $4981 = $4978 * $4980;
         $4982 = +HEAPF64[$x1034>>3];
         $4983 = $4982 * $4981;
         $4984 = $4976 + $4983;
         $4985 = +HEAPF64[$223>>3];
         $4986 = $4942 * $4985;
         $4987 = $4986 + 0.10000000000000001;
         $4988 = $4987 - $4938;
         $4989 = $4988 - $4941;
         $4990 = $4985 * 0.40000000000000002;
         $4991 = $4990 + $4989;
         $4992 = +HEAPF64[$224>>3];
         $4993 = $4943 * $4992;
         $4994 = $4991 - $4993;
         $4995 = (+__Z5IKabsd($4970));
         $4996 = $4995 > 5.0000000000000004E-6;
         if ($4996) {
          break;
         }
         $4997 = (+__Z5IKabsd($4954));
         $4998 = $4997 > 5.0000000000000004E-6;
         if ($4998) {
          break;
         }
         $4999 = (+__Z5IKabsd($4962));
         $5000 = $4999 > 5.0000000000000004E-6;
         if ($5000) {
          break;
         }
         $5001 = (+__Z5IKabsd($4984));
         $5002 = $5001 > 5.0000000000000004E-6;
         if ($5002) {
          break;
         }
         $5003 = (+__Z5IKabsd($4994));
         $5004 = $5003 > 5.0000000000000004E-6;
         if ($5004) {
          break;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break;
        }
       }
      }
      $5005 = +HEAPF64[$81>>3];
      $5006 = +HEAPF64[$43>>3];
      $5007 = $5005 * $5006;
      $5008 = +HEAPF64[$223>>3];
      $5009 = $5008 * 0.80000000000000004;
      $5010 = +HEAPF64[$45>>3];
      $5011 = $5005 * $5010;
      $5012 = +HEAPF64[$82>>3];
      $5013 = $5006 * $5012;
      $5014 = $5010 * $5012;
      $5015 = +HEAPF64[$22>>3];
      $5016 = $5015 + -3.14159265358979;
      $5017 = (+__Z5IKabsd($5016));
      $5018 = $5017 + 3.14159265358979;
      $5019 = (+__Z6IKfmoddd($5018,6.2831853071795898));
      $5020 = $5019 + -3.14159265358979;
      $5021 = $5009 * $5014;
      $5022 = $5021 + -0.066959000000000005;
      $5023 = $5008 * 0.080000000000000002;
      $5024 = $5022 - $5023;
      $5025 = +HEAPF64[$60>>3];
      $5026 = $5024 - $5025;
      $5027 = $5007 * $5009;
      $5028 = $5027 + $5026;
      $5029 = +HEAPF64[$47>>3];
      $5030 = $5029 * -0.80000000000000004;
      $5031 = +HEAPF64[$224>>3];
      $5032 = $5030 * $5031;
      $5033 = $5028 + $5032;
      $5034 = $5014 * 0.20000000000000001;
      $5035 = $5034 + $5033;
      $5036 = $5007 * 0.20000000000000001;
      $5037 = $5036 + $5035;
      $5038 = $5011 - $5013;
      $5039 = (+__Z5IKabsd($5020));
      $5040 = $5039 < 9.9999999999999995E-7;
      do {
       if ($5040) {
        $5041 = $5013 - $5011;
        $5042 = (+__Z5IKabsd($5041));
        $5043 = $5042 < 9.9999999999999995E-7;
        if ($5043) {
         $5044 = (+__Z5IKabsd($5037));
         $5045 = $5044 < 9.9999999999999995E-7;
         if (!($5045)) {
          break;
         }
         $5046 = (+__Z5IKabsd($5038));
         $5047 = $5046 < 9.9999999999999995E-7;
         if (!($5047)) {
          break;
         }
         HEAP8[$10>>0] = 1;
         $5048 = +HEAPF64[$223>>3];
         $5049 = $5048 * 3.1152647975077898;
         $5050 = +HEAPF64[$45>>3];
         $5051 = +HEAPF64[$82>>3];
         $5052 = $5050 * $5051;
         $5053 = +HEAPF64[$224>>3];
         $5054 = $5053 * 3.1152647975077898;
         $5055 = +HEAPF64[$81>>3];
         $5056 = +HEAPF64[$43>>3];
         $5057 = $5055 * $5056;
         $5058 = $5054 * $5057;
         $5059 = $5052 * $5054;
         $5060 = $5059 + $5058;
         $5061 = +HEAPF64[$47>>3];
         $5062 = $5049 * $5061;
         $5063 = $5062 + $5060;
         $5064 = $5053 * 0.31152647975077902;
         $5065 = $5063 - $5064;
         $5066 = (+__Z5IKabsd($5065));
         $5067 = $5066 < 1.9999999999999999E-6;
         do {
          if ($5067) {
           $5068 = $5048 * 0.31152647975077902;
           $5069 = -1.2461059190031201 - $5068;
           $5070 = $5049 * $5057;
           $5071 = $5069 + $5070;
           $5072 = $5049 * $5052;
           $5073 = $5072 + $5071;
           $5074 = $5054 * $5061;
           $5075 = $5073 - $5074;
           $5076 = (+__Z5IKabsd($5075));
           $5077 = $5076 < 1.9999999999999999E-6;
           if (!($5077)) {
            break;
           }
           $5078 = (+__Z5IKsqrd($5065));
           $5079 = (+__Z5IKsqrd($5075));
           $5080 = $5078 + $5079;
           $5081 = $5080 + -1.0;
           $5082 = (+__Z5IKabsd($5081));
           $5083 = !($5082 <= 1.9999999999999999E-6);
           if (!($5083)) {
            break L15;
           }
          }
         } while(0);
         $5084 = +HEAPF64[$47>>3];
         $5085 = $5049 * $5084;
         $5086 = $5060 + $5085;
         $5087 = +HEAPF64[$224>>3];
         $5088 = $5087 * 0.31152647975077902;
         $5089 = $5086 - $5088;
         $5090 = +HEAPF64[$223>>3];
         $5091 = $5090 * 0.31152647975077902;
         $5092 = -1.2461059190031201 - $5091;
         $5093 = $5049 * $5057;
         $5094 = $5093 + $5092;
         $5095 = $5049 * $5052;
         $5096 = $5095 + $5094;
         $5097 = $5054 * $5084;
         $5098 = $5096 - $5097;
         $5099 = (+__Z7IKatan2dd($5089,$5098));
         $5100 = (+__Z5IKsind($5099));
         $5101 = (+__Z5IKcosd($5099));
         $5102 = $5099 > 3.14159265358979;
         do {
          if ($5102) {
           $5103 = $5099 + -6.2831853071795898;
           $5106 = $5103;
          } else {
           $5104 = $5099 < -3.14159265358979;
           if (!($5104)) {
            $5106 = $5099;
            break;
           }
           $5105 = $5099 + 6.2831853071795898;
           $5106 = $5105;
          }
         } while(0);
         HEAP8[$8>>0] = 0;
         HEAP8[$9>>0] = -1;
         HEAPF64[$7>>3] = $5106;
         HEAPF64[$228>>3] = $5101;
         HEAPF64[$229>>3] = $5100;
         $5107 = +HEAPF64[$7>>3];
         $5108 = (+__Z5IKcosd($5107));
         $5109 = (+__Z5IKsind($5107));
         $5110 = +HEAPF64[$81>>3];
         $5111 = +HEAPF64[$43>>3];
         $5112 = $5110 * $5111;
         $5113 = +HEAPF64[$224>>3];
         $5114 = +HEAPF64[$82>>3];
         $5115 = $5114 * 0.25;
         $5116 = +HEAPF64[$45>>3];
         $5117 = $5114 * $5116;
         $5118 = $5108 * 0.32100000000000001;
         $5119 = $5109 * 0.32100000000000001;
         $5120 = +HEAPF64[$47>>3];
         $5121 = +HEAPF64[$223>>3];
         $5122 = $5112 * 0.20000000000000001;
         $5123 = $5122 + 0.25304100000000002;
         $5124 = $5117 * 0.20000000000000001;
         $5125 = $5123 + $5124;
         $5126 = +HEAPF64[$60>>3];
         $5127 = $5125 - $5126;
         $5128 = $5108 * 0.25679999999999997;
         $5129 = $5128 + $5127;
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1052,$5116,-1);
         $5130 = HEAP8[$230>>0]|0;
         $5131 = ($5130<<24>>24)==(0);
         if ($5131) {
          break L15;
         }
         $5132 = $5113 * 0.40000000000000002;
         $5133 = $5132 + $5120;
         $5134 = $5119 * $5121;
         $5135 = $5133 - $5134;
         $5136 = $5118 * $5113;
         $5137 = $5136 + $5135;
         $5138 = $5118 + 0.31630124999999998;
         $5139 = +HEAPF64[$60>>3];
         $5140 = $5139 * 1.25;
         $5141 = $5138 - $5140;
         $5142 = +HEAPF64[$45>>3];
         $5143 = $5115 * $5142;
         $5144 = $5141 + $5143;
         $5145 = +HEAPF64[$43>>3];
         $5146 = $5145 * $5145;
         $5147 = $5115 * $5146;
         $5148 = +HEAPF64[$x1052>>3];
         $5149 = $5148 * $5147;
         $5150 = $5144 + $5149;
         $5151 = $5112 * $5113;
         $5152 = $5119 - $5151;
         $5153 = +HEAPF64[$224>>3];
         $5154 = $5153 * 0.10000000000000001;
         $5155 = $5152 + $5154;
         $5156 = +HEAPF64[$223>>3];
         $5157 = +HEAPF64[$47>>3];
         $5158 = $5156 * $5157;
         $5159 = $5155 - $5158;
         $5160 = $5113 * $5117;
         $5161 = $5159 - $5160;
         $5162 = $5156 * 0.40000000000000002;
         $5163 = $5162 + 0.10000000000000001;
         $5164 = $5163 - $5117;
         $5165 = $5164 - $5112;
         $5166 = $5118 * $5156;
         $5167 = $5166 + $5165;
         $5168 = $5119 * $5153;
         $5169 = $5168 + $5167;
         $5170 = (+__Z5IKabsd($5137));
         $5171 = $5170 > 5.0000000000000004E-6;
         if ($5171) {
          break L15;
         }
         $5172 = (+__Z5IKabsd($5129));
         $5173 = $5172 > 5.0000000000000004E-6;
         if ($5173) {
          break L15;
         }
         $5174 = (+__Z5IKabsd($5150));
         $5175 = $5174 > 5.0000000000000004E-6;
         if ($5175) {
          break L15;
         }
         $5176 = (+__Z5IKabsd($5161));
         $5177 = $5176 > 5.0000000000000004E-6;
         if ($5177) {
          break L15;
         }
         $5178 = (+__Z5IKabsd($5169));
         $5179 = $5178 > 5.0000000000000004E-6;
         if ($5179) {
          break L15;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break L15;
        }
       }
      } while(0);
      $5180 = +HEAPF64[$3>>3];
      $5181 = (+__Z5IKabsd($5180));
      $5182 = $5181 + 3.14159265358979;
      $5183 = (+__Z6IKfmoddd($5182,6.2831853071795898));
      $5184 = $5183 + -3.14159265358979;
      $5185 = +HEAPF64[$81>>3];
      $5186 = +HEAPF64[$43>>3];
      $5187 = +HEAPF64[$45>>3];
      $5188 = +HEAPF64[$82>>3];
      $5189 = +HEAPF64[$23>>3];
      $5190 = $5186 * $5189;
      $5191 = $5188 * $5190;
      $5192 = $5185 * $5189;
      $5193 = $5187 * $5192;
      $5194 = $5191 - $5193;
      $5195 = +HEAPF64[$47>>3];
      $5196 = +HEAPF64[$24>>3];
      $5197 = $5195 * $5196;
      $5198 = $5194 - $5197;
      $5199 = (+__Z5IKabsd($5184));
      $5200 = $5199 < 9.9999999999999995E-7;
      do {
       if ($5200) {
        $5201 = +HEAPF64[$60>>3];
        $5202 = $5185 * $5186;
        $5203 = $5202 + -0.14695900000000001;
        $5204 = $5203 - $5201;
        $5205 = $5187 * $5188;
        $5206 = $5205 + $5204;
        $5207 = (+__Z5IKabsd($5206));
        $5208 = $5207 < 9.9999999999999995E-7;
        if (!($5208)) {
         break;
        }
        $5209 = (+__Z5IKabsd($5198));
        $5210 = $5209 < 9.9999999999999995E-7;
        if (!($5210)) {
         break;
        }
        HEAPF64[$224>>3] = 0.0;
        HEAPF64[$223>>3] = 1.0;
        HEAPF64[$3>>3] = 0.0;
        $5211 = +HEAPF64[$23>>3];
        $5212 = (+__Z5IKabsd($5211));
        $5213 = $5212 < 9.9999999999999995E-7;
        if (!($5213)) {
         HEAP8[$10>>0] = 1;
         $5640 = +HEAPF64[$23>>3];
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1066,$5640,-1);
         $5641 = HEAP8[$242>>0]|0;
         $5642 = ($5641<<24>>24)==(0);
         if ($5642) {
          break L15;
         }
         $5643 = +HEAPF64[$47>>3];
         $5644 = $5643 * -3.1152647975077898;
         $5645 = +HEAPF64[$x1066>>3];
         $5646 = $5644 * $5645;
         $5647 = (+__Z5IKabsd($5646));
         $5648 = $5647 < 1.9999999999999999E-6;
         do {
          if ($5648) {
           $5649 = +HEAPF64[$60>>3];
           $5650 = $5649 * 3.1152647975077898;
           $5651 = $5650 + -1.09981619937695;
           $5652 = (+__Z5IKabsd($5651));
           $5653 = $5652 < 1.9999999999999999E-6;
           if (!($5653)) {
            break;
           }
           $5654 = (+__Z5IKsqrd($5646));
           $5655 = (+__Z5IKsqrd($5651));
           $5656 = $5654 + $5655;
           $5657 = $5656 + -1.0;
           $5658 = (+__Z5IKabsd($5657));
           $5659 = !($5658 <= 1.9999999999999999E-6);
           if (!($5659)) {
            break L15;
           }
          }
         } while(0);
         $5660 = +HEAPF64[$47>>3];
         $5661 = $5660 * -3.1152647975077898;
         $5662 = +HEAPF64[$x1066>>3];
         $5663 = $5661 * $5662;
         $5664 = +HEAPF64[$60>>3];
         $5665 = $5664 * 3.1152647975077898;
         $5666 = $5665 + -1.09981619937695;
         $5667 = (+__Z7IKatan2dd($5663,$5666));
         $5668 = (+__Z5IKsind($5667));
         $5669 = (+__Z5IKcosd($5667));
         $5670 = $5667 > 3.14159265358979;
         do {
          if ($5670) {
           $5671 = $5667 + -6.2831853071795898;
           $5674 = $5671;
          } else {
           $5672 = $5667 < -3.14159265358979;
           if (!($5672)) {
            $5674 = $5667;
            break;
           }
           $5673 = $5667 + 6.2831853071795898;
           $5674 = $5673;
          }
         } while(0);
         HEAP8[$8>>0] = 0;
         HEAP8[$9>>0] = -1;
         HEAPF64[$7>>3] = $5674;
         HEAPF64[$243>>3] = $5669;
         HEAPF64[$244>>3] = $5668;
         $5675 = +HEAPF64[$7>>3];
         $5676 = (+__Z5IKcosd($5675));
         $5677 = (+__Z5IKsind($5675));
         $5678 = +HEAPF64[$43>>3];
         $5679 = +HEAPF64[$82>>3];
         $5680 = $5678 * $5679;
         $5681 = +HEAPF64[$81>>3];
         $5682 = +HEAPF64[$45>>3];
         $5683 = $5681 * $5682;
         $5684 = $5677 * 0.32100000000000001;
         $5685 = +HEAPF64[$47>>3];
         $5686 = +HEAPF64[$23>>3];
         $5687 = $5684 * $5686;
         $5688 = $5685 + $5687;
         $5689 = +HEAPF64[$60>>3];
         $5690 = $5676 * 0.32100000000000001;
         $5691 = $5690 + 0.35304099999999999;
         $5692 = $5691 - $5689;
         $5693 = +HEAPF64[$24>>3];
         $5694 = $5684 * $5693;
         $5695 = $5680 + $5694;
         $5696 = $5695 - $5683;
         $5697 = $5683 * $5693;
         $5698 = $5684 - $5697;
         $5699 = $5685 * $5686;
         $5700 = $5699 + $5698;
         $5701 = $5680 * $5693;
         $5702 = $5701 + $5700;
         $5703 = (+__Z5IKabsd($5688));
         $5704 = $5703 > 5.0000000000000004E-6;
         if ($5704) {
          break L15;
         }
         $5705 = $5689 * 0.80000000000000004;
         $5706 = 0.28243279999999998 - $5705;
         $5707 = $5676 * 0.25679999999999997;
         $5708 = $5707 + $5706;
         $5709 = (+__Z5IKabsd($5708));
         $5710 = $5709 > 5.0000000000000004E-6;
         if ($5710) {
          break L15;
         }
         $5711 = (+__Z5IKabsd($5692));
         $5712 = $5711 > 5.0000000000000004E-6;
         if ($5712) {
          break L15;
         }
         $5713 = (+__Z5IKabsd($5696));
         $5714 = $5713 > 5.0000000000000004E-6;
         if ($5714) {
          break L15;
         }
         $5715 = (+__Z5IKabsd($5702));
         $5716 = $5715 > 5.0000000000000004E-6;
         if ($5716) {
          break L15;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break L15;
        }
        HEAPF64[$224>>3] = 0.0;
        HEAPF64[$223>>3] = 1.0;
        HEAPF64[$3>>3] = 0.0;
        $5214 = +HEAPF64[$24>>3];
        $5215 = (+__Z5IKabsd($5214));
        $5216 = $5215 < 9.9999999999999995E-7;
        if (!($5216)) {
         HEAP8[$10>>0] = 1;
         $5547 = +HEAPF64[$24>>3];
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1060,$5547,-1);
         $5548 = HEAP8[$239>>0]|0;
         $5549 = ($5548<<24>>24)==(0);
         if ($5549) {
          break L15;
         }
         $5550 = +HEAPF64[$x1060>>3];
         $5551 = $5550 * 0.0031152647975077898;
         $5552 = +HEAPF64[$81>>3];
         $5553 = $5552 * 1000.0;
         $5554 = +HEAPF64[$45>>3];
         $5555 = $5553 * $5554;
         $5556 = +HEAPF64[$43>>3];
         $5557 = $5556 * -1000.0;
         $5558 = +HEAPF64[$82>>3];
         $5559 = $5557 * $5558;
         $5560 = $5555 + $5559;
         $5561 = $5551 * $5560;
         $5562 = (+__Z5IKabsd($5561));
         $5563 = $5562 < 1.9999999999999999E-6;
         do {
          if ($5563) {
           $5564 = +HEAPF64[$60>>3];
           $5565 = $5564 * 3.1152647975077898;
           $5566 = $5565 + -1.09981619937695;
           $5567 = (+__Z5IKabsd($5566));
           $5568 = $5567 < 1.9999999999999999E-6;
           if (!($5568)) {
            break;
           }
           $5569 = (+__Z5IKsqrd($5561));
           $5570 = (+__Z5IKsqrd($5566));
           $5571 = $5569 + $5570;
           $5572 = $5571 + -1.0;
           $5573 = (+__Z5IKabsd($5572));
           $5574 = !($5573 <= 1.9999999999999999E-6);
           if (!($5574)) {
            break L15;
           }
          }
         } while(0);
         $5575 = +HEAPF64[$x1060>>3];
         $5576 = $5575 * 0.0031152647975077898;
         $5577 = +HEAPF64[$81>>3];
         $5578 = $5577 * 1000.0;
         $5579 = +HEAPF64[$45>>3];
         $5580 = $5578 * $5579;
         $5581 = +HEAPF64[$43>>3];
         $5582 = $5581 * -1000.0;
         $5583 = +HEAPF64[$82>>3];
         $5584 = $5582 * $5583;
         $5585 = $5580 + $5584;
         $5586 = $5576 * $5585;
         $5587 = +HEAPF64[$60>>3];
         $5588 = $5587 * 3.1152647975077898;
         $5589 = $5588 + -1.09981619937695;
         $5590 = (+__Z7IKatan2dd($5586,$5589));
         $5591 = (+__Z5IKsind($5590));
         $5592 = (+__Z5IKcosd($5590));
         $5593 = $5590 > 3.14159265358979;
         do {
          if ($5593) {
           $5594 = $5590 + -6.2831853071795898;
           $5597 = $5594;
          } else {
           $5595 = $5590 < -3.14159265358979;
           if (!($5595)) {
            $5597 = $5590;
            break;
           }
           $5596 = $5590 + 6.2831853071795898;
           $5597 = $5596;
          }
         } while(0);
         HEAP8[$8>>0] = 0;
         HEAP8[$9>>0] = -1;
         HEAPF64[$7>>3] = $5597;
         HEAPF64[$240>>3] = $5592;
         HEAPF64[$241>>3] = $5591;
         $5598 = +HEAPF64[$7>>3];
         $5599 = (+__Z5IKcosd($5598));
         $5600 = (+__Z5IKsind($5598));
         $5601 = +HEAPF64[$43>>3];
         $5602 = +HEAPF64[$82>>3];
         $5603 = $5601 * $5602;
         $5604 = +HEAPF64[$81>>3];
         $5605 = +HEAPF64[$45>>3];
         $5606 = $5604 * $5605;
         $5607 = $5600 * 0.32100000000000001;
         $5608 = +HEAPF64[$47>>3];
         $5609 = +HEAPF64[$23>>3];
         $5610 = $5607 * $5609;
         $5611 = $5608 + $5610;
         $5612 = +HEAPF64[$60>>3];
         $5613 = $5599 * 0.32100000000000001;
         $5614 = $5613 + 0.35304099999999999;
         $5615 = $5614 - $5612;
         $5616 = $5603 - $5606;
         $5617 = +HEAPF64[$24>>3];
         $5618 = $5607 * $5617;
         $5619 = $5616 + $5618;
         $5620 = $5606 * $5617;
         $5621 = $5607 - $5620;
         $5622 = $5608 * $5609;
         $5623 = $5622 + $5621;
         $5624 = $5603 * $5617;
         $5625 = $5624 + $5623;
         $5626 = (+__Z5IKabsd($5611));
         $5627 = $5626 > 5.0000000000000004E-6;
         if ($5627) {
          break L15;
         }
         $5628 = $5612 * 0.80000000000000004;
         $5629 = 0.28243279999999998 - $5628;
         $5630 = $5599 * 0.25679999999999997;
         $5631 = $5630 + $5629;
         $5632 = (+__Z5IKabsd($5631));
         $5633 = $5632 > 5.0000000000000004E-6;
         if ($5633) {
          break L15;
         }
         $5634 = (+__Z5IKabsd($5615));
         $5635 = $5634 > 5.0000000000000004E-6;
         if ($5635) {
          break L15;
         }
         $5636 = (+__Z5IKabsd($5619));
         $5637 = $5636 > 5.0000000000000004E-6;
         if ($5637) {
          break L15;
         }
         $5638 = (+__Z5IKabsd($5625));
         $5639 = $5638 > 5.0000000000000004E-6;
         if ($5639) {
          break L15;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break L15;
        }
        $5217 = +HEAPF64[$81>>3];
        $5218 = +HEAPF64[$45>>3];
        $5219 = +HEAPF64[$43>>3];
        $5220 = +HEAPF64[$82>>3];
        $5221 = +HEAPF64[$22>>3];
        $5222 = (+__Z5IKabsd($5221));
        $5223 = $5222 + 3.14159265358979;
        $5224 = (+__Z6IKfmoddd($5223,6.2831853071795898));
        $5225 = $5224 + -3.14159265358979;
        $5226 = $5217 * $5219;
        $5227 = $5226 + -0.14695900000000001;
        $5228 = +HEAPF64[$60>>3];
        $5229 = $5227 - $5228;
        $5230 = $5218 * $5220;
        $5231 = $5230 + $5229;
        $5232 = (+__Z5IKabsd($5225));
        $5233 = $5232 < 9.9999999999999995E-7;
        do {
         if ($5233) {
          $5234 = $5219 * $5220;
          $5235 = $5217 * $5218;
          $5236 = $5234 - $5235;
          $5237 = (+__Z5IKabsd($5236));
          $5238 = $5237 < 9.9999999999999995E-7;
          if (!($5238)) {
           break;
          }
          $5239 = (+__Z5IKabsd($5231));
          $5240 = $5239 < 9.9999999999999995E-7;
          if (!($5240)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $5241 = +HEAPF64[$47>>3];
          $5242 = $5241 * -3.1152647975077898;
          $5243 = (+__Z5IKabsd($5242));
          $5244 = $5243 < 1.9999999999999999E-6;
          do {
           if ($5244) {
            $5245 = +HEAPF64[$60>>3];
            $5246 = $5245 * 3.1152647975077898;
            $5247 = $5246 + -1.09981619937695;
            $5248 = (+__Z5IKabsd($5247));
            $5249 = $5248 < 1.9999999999999999E-6;
            if (!($5249)) {
             break;
            }
            $5250 = (+__Z5IKsqrd($5242));
            $5251 = (+__Z5IKsqrd($5247));
            $5252 = $5250 + $5251;
            $5253 = $5252 + -1.0;
            $5254 = (+__Z5IKabsd($5253));
            $5255 = !($5254 <= 1.9999999999999999E-6);
            if (!($5255)) {
             break L15;
            }
           }
          } while(0);
          $5256 = +HEAPF64[$47>>3];
          $5257 = $5256 * -3.1152647975077898;
          $5258 = +HEAPF64[$60>>3];
          $5259 = $5258 * 3.1152647975077898;
          $5260 = $5259 + -1.09981619937695;
          $5261 = (+__Z7IKatan2dd($5257,$5260));
          $5262 = (+__Z5IKsind($5261));
          $5263 = (+__Z5IKcosd($5261));
          $5264 = $5261 > 3.14159265358979;
          do {
           if ($5264) {
            $5265 = $5261 + -6.2831853071795898;
            $5268 = $5265;
           } else {
            $5266 = $5261 < -3.14159265358979;
            if (!($5266)) {
             $5268 = $5261;
             break;
            }
            $5267 = $5261 + 6.2831853071795898;
            $5268 = $5267;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $5268;
          HEAPF64[$231>>3] = $5263;
          HEAPF64[$232>>3] = $5262;
          $5269 = +HEAPF64[$7>>3];
          $5270 = (+__Z5IKcosd($5269));
          $5271 = +HEAPF64[$47>>3];
          $5272 = (+__Z5IKsind($5269));
          $5273 = $5272 * 0.32100000000000001;
          $5274 = $5271 + $5273;
          $5275 = +HEAPF64[$60>>3];
          $5276 = $5270 * 0.32100000000000001;
          $5277 = $5276 + 0.35304099999999999;
          $5278 = $5277 - $5275;
          $5279 = (+__Z5IKabsd($5274));
          $5280 = $5279 > 5.0000000000000004E-6;
          if ($5280) {
           break L15;
          }
          $5281 = $5275 * 0.80000000000000004;
          $5282 = 0.28243279999999998 - $5281;
          $5283 = $5270 * 0.25679999999999997;
          $5284 = $5283 + $5282;
          $5285 = (+__Z5IKabsd($5284));
          $5286 = $5285 > 5.0000000000000004E-6;
          if ($5286) {
           break L15;
          }
          $5287 = (+__Z5IKabsd($5278));
          $5288 = $5287 > 5.0000000000000004E-6;
          if ($5288) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $5289 = +HEAPF64[$81>>3];
        $5290 = +HEAPF64[$45>>3];
        $5291 = $5289 * $5290;
        $5292 = +HEAPF64[$43>>3];
        $5293 = +HEAPF64[$82>>3];
        $5294 = $5292 * $5293;
        $5295 = +HEAPF64[$22>>3];
        $5296 = $5295 + -3.14159265358979;
        $5297 = (+__Z5IKabsd($5296));
        $5298 = $5297 + 3.14159265358979;
        $5299 = (+__Z6IKfmoddd($5298,6.2831853071795898));
        $5300 = $5299 + -3.14159265358979;
        $5301 = $5289 * $5292;
        $5302 = $5301 + -0.14695900000000001;
        $5303 = +HEAPF64[$60>>3];
        $5304 = $5302 - $5303;
        $5305 = $5290 * $5293;
        $5306 = $5305 + $5304;
        $5307 = $5291 - $5294;
        $5308 = (+__Z5IKabsd($5300));
        $5309 = $5308 < 9.9999999999999995E-7;
        do {
         if ($5309) {
          $5310 = $5294 - $5291;
          $5311 = (+__Z5IKabsd($5310));
          $5312 = $5311 < 9.9999999999999995E-7;
          if (!($5312)) {
           break;
          }
          $5313 = (+__Z5IKabsd($5306));
          $5314 = $5313 < 9.9999999999999995E-7;
          if (!($5314)) {
           break;
          }
          $5315 = (+__Z5IKabsd($5307));
          $5316 = $5315 < 9.9999999999999995E-7;
          if (!($5316)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $5317 = +HEAPF64[$47>>3];
          $5318 = $5317 * 3.1152647975077898;
          $5319 = (+__Z5IKabsd($5318));
          $5320 = $5319 < 1.9999999999999999E-6;
          do {
           if ($5320) {
            $5321 = +HEAPF64[$60>>3];
            $5322 = $5321 * 3.1152647975077898;
            $5323 = $5322 + -1.09981619937695;
            $5324 = (+__Z5IKabsd($5323));
            $5325 = $5324 < 1.9999999999999999E-6;
            if (!($5325)) {
             break;
            }
            $5326 = (+__Z5IKsqrd($5318));
            $5327 = (+__Z5IKsqrd($5323));
            $5328 = $5326 + $5327;
            $5329 = $5328 + -1.0;
            $5330 = (+__Z5IKabsd($5329));
            $5331 = !($5330 <= 1.9999999999999999E-6);
            if (!($5331)) {
             break L15;
            }
           }
          } while(0);
          $5332 = +HEAPF64[$47>>3];
          $5333 = $5332 * 3.1152647975077898;
          $5334 = +HEAPF64[$60>>3];
          $5335 = $5334 * 3.1152647975077898;
          $5336 = $5335 + -1.09981619937695;
          $5337 = (+__Z7IKatan2dd($5333,$5336));
          $5338 = (+__Z5IKsind($5337));
          $5339 = (+__Z5IKcosd($5337));
          $5340 = $5337 > 3.14159265358979;
          do {
           if ($5340) {
            $5341 = $5337 + -6.2831853071795898;
            $5344 = $5341;
           } else {
            $5342 = $5337 < -3.14159265358979;
            if (!($5342)) {
             $5344 = $5337;
             break;
            }
            $5343 = $5337 + 6.2831853071795898;
            $5344 = $5343;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $5344;
          HEAPF64[$233>>3] = $5339;
          HEAPF64[$234>>3] = $5338;
          $5345 = +HEAPF64[$7>>3];
          $5346 = (+__Z5IKcosd($5345));
          $5347 = (+__Z5IKsind($5345));
          $5348 = $5347 * 0.32100000000000001;
          $5349 = +HEAPF64[$47>>3];
          $5350 = $5349 - $5348;
          $5351 = +HEAPF64[$60>>3];
          $5352 = $5346 * 0.32100000000000001;
          $5353 = $5352 + 0.35304099999999999;
          $5354 = $5353 - $5351;
          $5355 = (+__Z5IKabsd($5350));
          $5356 = $5355 > 5.0000000000000004E-6;
          if ($5356) {
           break L15;
          }
          $5357 = $5351 * 0.80000000000000004;
          $5358 = 0.28243279999999998 - $5357;
          $5359 = $5346 * 0.25679999999999997;
          $5360 = $5359 + $5358;
          $5361 = (+__Z5IKabsd($5360));
          $5362 = $5361 > 5.0000000000000004E-6;
          if ($5362) {
           break L15;
          }
          $5363 = (+__Z5IKabsd($5354));
          $5364 = $5363 > 5.0000000000000004E-6;
          if ($5364) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $5365 = +HEAPF64[$22>>3];
        $5366 = $5365 + -1.5707963267949001;
        $5367 = (+__Z5IKabsd($5366));
        $5368 = $5367 + 3.14159265358979;
        $5369 = (+__Z6IKfmoddd($5368,6.2831853071795898));
        $5370 = $5369 + -3.14159265358979;
        $5371 = +HEAPF64[$81>>3];
        $5372 = +HEAPF64[$43>>3];
        $5373 = $5371 * $5372;
        $5374 = $5373 + -0.14695900000000001;
        $5375 = +HEAPF64[$60>>3];
        $5376 = $5374 - $5375;
        $5377 = +HEAPF64[$45>>3];
        $5378 = +HEAPF64[$82>>3];
        $5379 = $5377 * $5378;
        $5380 = $5376 + $5379;
        $5381 = (+__Z5IKabsd($5370));
        $5382 = $5381 < 9.9999999999999995E-7;
        do {
         if ($5382) {
          $5383 = +HEAPF64[$47>>3];
          $5384 = (+__Z5IKabsd($5383));
          $5385 = $5384 < 9.9999999999999995E-7;
          if (!($5385)) {
           break;
          }
          $5386 = (+__Z5IKabsd($5380));
          $5387 = $5386 < 9.9999999999999995E-7;
          if (!($5387)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $5388 = +HEAPF64[$81>>3];
          $5389 = $5388 * 3.1152647975077898;
          $5390 = +HEAPF64[$45>>3];
          $5391 = $5389 * $5390;
          $5392 = +HEAPF64[$43>>3];
          $5393 = $5392 * -3.1152647975077898;
          $5394 = +HEAPF64[$82>>3];
          $5395 = $5393 * $5394;
          $5396 = $5391 + $5395;
          $5397 = (+__Z5IKabsd($5396));
          $5398 = $5397 < 1.9999999999999999E-6;
          do {
           if ($5398) {
            $5399 = +HEAPF64[$60>>3];
            $5400 = $5399 * 3.1152647975077898;
            $5401 = $5400 + -1.09981619937695;
            $5402 = (+__Z5IKabsd($5401));
            $5403 = $5402 < 1.9999999999999999E-6;
            if (!($5403)) {
             break;
            }
            $5404 = (+__Z5IKsqrd($5396));
            $5405 = (+__Z5IKsqrd($5401));
            $5406 = $5404 + $5405;
            $5407 = $5406 + -1.0;
            $5408 = (+__Z5IKabsd($5407));
            $5409 = !($5408 <= 1.9999999999999999E-6);
            if (!($5409)) {
             break L15;
            }
           }
          } while(0);
          $5410 = +HEAPF64[$81>>3];
          $5411 = $5410 * 3.1152647975077898;
          $5412 = +HEAPF64[$45>>3];
          $5413 = $5411 * $5412;
          $5414 = +HEAPF64[$43>>3];
          $5415 = $5414 * -3.1152647975077898;
          $5416 = +HEAPF64[$82>>3];
          $5417 = $5415 * $5416;
          $5418 = $5413 + $5417;
          $5419 = +HEAPF64[$60>>3];
          $5420 = $5419 * 3.1152647975077898;
          $5421 = $5420 + -1.09981619937695;
          $5422 = (+__Z7IKatan2dd($5418,$5421));
          $5423 = (+__Z5IKsind($5422));
          $5424 = (+__Z5IKcosd($5422));
          $5425 = $5422 > 3.14159265358979;
          do {
           if ($5425) {
            $5426 = $5422 + -6.2831853071795898;
            $5429 = $5426;
           } else {
            $5427 = $5422 < -3.14159265358979;
            if (!($5427)) {
             $5429 = $5422;
             break;
            }
            $5428 = $5422 + 6.2831853071795898;
            $5429 = $5428;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $5429;
          HEAPF64[$235>>3] = $5424;
          HEAPF64[$236>>3] = $5423;
          $5430 = +HEAPF64[$7>>3];
          $5431 = (+__Z5IKcosd($5430));
          $5432 = +HEAPF64[$60>>3];
          $5433 = $5432 * 0.80000000000000004;
          $5434 = 0.28243279999999998 - $5433;
          $5435 = $5431 * 0.25679999999999997;
          $5436 = $5435 + $5434;
          $5437 = +HEAPF64[$81>>3];
          $5438 = +HEAPF64[$45>>3];
          $5439 = $5437 * $5438;
          $5440 = +HEAPF64[$43>>3];
          $5441 = +HEAPF64[$82>>3];
          $5442 = $5440 * $5441;
          $5443 = $5442 - $5439;
          $5444 = (+__Z5IKsind($5430));
          $5445 = $5444 * 0.32100000000000001;
          $5446 = $5443 + $5445;
          $5447 = (+__Z5IKabsd($5436));
          $5448 = $5447 > 5.0000000000000004E-6;
          if ($5448) {
           break L15;
          }
          $5449 = $5431 * 0.32100000000000001;
          $5450 = $5449 + 0.35304099999999999;
          $5451 = $5450 - $5432;
          $5452 = (+__Z5IKabsd($5451));
          $5453 = $5452 > 5.0000000000000004E-6;
          if ($5453) {
           break L15;
          }
          $5454 = (+__Z5IKabsd($5446));
          $5455 = $5454 > 5.0000000000000004E-6;
          if ($5455) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $5456 = +HEAPF64[$22>>3];
        $5457 = $5456 + 1.5707963267949001;
        $5458 = (+__Z5IKabsd($5457));
        $5459 = $5458 + 3.14159265358979;
        $5460 = (+__Z6IKfmoddd($5459,6.2831853071795898));
        $5461 = $5460 + -3.14159265358979;
        $5462 = +HEAPF64[$81>>3];
        $5463 = +HEAPF64[$43>>3];
        $5464 = $5462 * $5463;
        $5465 = $5464 + -0.14695900000000001;
        $5466 = +HEAPF64[$60>>3];
        $5467 = $5465 - $5466;
        $5468 = +HEAPF64[$45>>3];
        $5469 = +HEAPF64[$82>>3];
        $5470 = $5468 * $5469;
        $5471 = $5467 + $5470;
        $5472 = (+__Z5IKabsd($5461));
        $5473 = $5472 < 9.9999999999999995E-7;
        if (!($5473)) {
         break L15;
        }
        $5474 = +HEAPF64[$47>>3];
        $5475 = (+__Z5IKabsd($5474));
        $5476 = $5475 < 9.9999999999999995E-7;
        if (!($5476)) {
         break L15;
        }
        $5477 = (+__Z5IKabsd($5471));
        $5478 = $5477 < 9.9999999999999995E-7;
        if (!($5478)) {
         break L15;
        }
        HEAP8[$10>>0] = 1;
        $5479 = +HEAPF64[$81>>3];
        $5480 = $5479 * -3.1152647975077898;
        $5481 = +HEAPF64[$45>>3];
        $5482 = $5480 * $5481;
        $5483 = +HEAPF64[$43>>3];
        $5484 = $5483 * 3.1152647975077898;
        $5485 = +HEAPF64[$82>>3];
        $5486 = $5484 * $5485;
        $5487 = $5482 + $5486;
        $5488 = (+__Z5IKabsd($5487));
        $5489 = $5488 < 1.9999999999999999E-6;
        do {
         if ($5489) {
          $5490 = +HEAPF64[$60>>3];
          $5491 = $5490 * 3.1152647975077898;
          $5492 = $5491 + -1.09981619937695;
          $5493 = (+__Z5IKabsd($5492));
          $5494 = $5493 < 1.9999999999999999E-6;
          if (!($5494)) {
           break;
          }
          $5495 = (+__Z5IKsqrd($5487));
          $5496 = (+__Z5IKsqrd($5492));
          $5497 = $5495 + $5496;
          $5498 = $5497 + -1.0;
          $5499 = (+__Z5IKabsd($5498));
          $5500 = !($5499 <= 1.9999999999999999E-6);
          if (!($5500)) {
           break L15;
          }
         }
        } while(0);
        $5501 = +HEAPF64[$81>>3];
        $5502 = $5501 * -3.1152647975077898;
        $5503 = +HEAPF64[$45>>3];
        $5504 = $5502 * $5503;
        $5505 = +HEAPF64[$43>>3];
        $5506 = $5505 * 3.1152647975077898;
        $5507 = +HEAPF64[$82>>3];
        $5508 = $5506 * $5507;
        $5509 = $5504 + $5508;
        $5510 = +HEAPF64[$60>>3];
        $5511 = $5510 * 3.1152647975077898;
        $5512 = $5511 + -1.09981619937695;
        $5513 = (+__Z7IKatan2dd($5509,$5512));
        $5514 = (+__Z5IKsind($5513));
        $5515 = (+__Z5IKcosd($5513));
        $5516 = $5513 > 3.14159265358979;
        do {
         if ($5516) {
          $5517 = $5513 + -6.2831853071795898;
          $5520 = $5517;
         } else {
          $5518 = $5513 < -3.14159265358979;
          if (!($5518)) {
           $5520 = $5513;
           break;
          }
          $5519 = $5513 + 6.2831853071795898;
          $5520 = $5519;
         }
        } while(0);
        HEAP8[$8>>0] = 0;
        HEAP8[$9>>0] = -1;
        HEAPF64[$7>>3] = $5520;
        HEAPF64[$237>>3] = $5515;
        HEAPF64[$238>>3] = $5514;
        $5521 = +HEAPF64[$7>>3];
        $5522 = (+__Z5IKcosd($5521));
        $5523 = +HEAPF64[$60>>3];
        $5524 = $5523 * 0.80000000000000004;
        $5525 = 0.28243279999999998 - $5524;
        $5526 = $5522 * 0.25679999999999997;
        $5527 = $5526 + $5525;
        $5528 = +HEAPF64[$81>>3];
        $5529 = +HEAPF64[$45>>3];
        $5530 = $5528 * $5529;
        $5531 = (+__Z5IKsind($5521));
        $5532 = $5531 * -0.32100000000000001;
        $5533 = $5532 - $5530;
        $5534 = +HEAPF64[$43>>3];
        $5535 = +HEAPF64[$82>>3];
        $5536 = $5534 * $5535;
        $5537 = $5533 + $5536;
        $5538 = (+__Z5IKabsd($5527));
        $5539 = $5538 > 5.0000000000000004E-6;
        if ($5539) {
         break L15;
        }
        $5540 = $5522 * 0.32100000000000001;
        $5541 = $5540 + 0.35304099999999999;
        $5542 = $5541 - $5523;
        $5543 = (+__Z5IKabsd($5542));
        $5544 = $5543 > 5.0000000000000004E-6;
        if ($5544) {
         break L15;
        }
        $5545 = (+__Z5IKabsd($5537));
        $5546 = $5545 > 5.0000000000000004E-6;
        if ($5546) {
         break L15;
        }
        __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
        break L15;
       }
      } while(0);
      $5717 = +HEAPF64[$3>>3];
      $5718 = $5717 + -3.14159265358979;
      $5719 = (+__Z5IKabsd($5718));
      $5720 = $5719 + 3.14159265358979;
      $5721 = (+__Z6IKfmoddd($5720,6.2831853071795898));
      $5722 = $5721 + -3.14159265358979;
      $5723 = +HEAPF64[$81>>3];
      $5724 = +HEAPF64[$43>>3];
      $5725 = +HEAPF64[$45>>3];
      $5726 = +HEAPF64[$82>>3];
      $5727 = +HEAPF64[$23>>3];
      $5728 = $5724 * $5727;
      $5729 = $5726 * $5728;
      $5730 = $5723 * $5727;
      $5731 = $5725 * $5730;
      $5732 = $5729 - $5731;
      $5733 = +HEAPF64[$47>>3];
      $5734 = +HEAPF64[$24>>3];
      $5735 = $5733 * $5734;
      $5736 = $5732 + $5735;
      $5737 = (+__Z5IKabsd($5722));
      $5738 = $5737 < 9.9999999999999995E-7;
      do {
       if ($5738) {
        $5739 = +HEAPF64[$60>>3];
        $5740 = $5723 * -0.59999999999999998;
        $5741 = $5740 * $5724;
        $5742 = $5741 + 0.013041000000000001;
        $5743 = $5742 - $5739;
        $5744 = $5725 * -0.59999999999999998;
        $5745 = $5744 * $5726;
        $5746 = $5745 + $5743;
        $5747 = (+__Z5IKabsd($5746));
        $5748 = $5747 < 9.9999999999999995E-7;
        if (!($5748)) {
         break;
        }
        $5749 = (+__Z5IKabsd($5736));
        $5750 = $5749 < 9.9999999999999995E-7;
        if (!($5750)) {
         break;
        }
        HEAPF64[$224>>3] = 0.0;
        HEAPF64[$223>>3] = -1.0;
        HEAPF64[$3>>3] = 3.14159265358979;
        $5751 = +HEAPF64[$23>>3];
        $5752 = (+__Z5IKabsd($5751));
        $5753 = $5752 < 9.9999999999999995E-7;
        if (!($5753)) {
         HEAP8[$10>>0] = 1;
         $6194 = +HEAPF64[$23>>3];
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1085,$6194,-1);
         $6195 = HEAP8[$256>>0]|0;
         $6196 = ($6195<<24>>24)==(0);
         if ($6196) {
          break L15;
         }
         $6197 = +HEAPF64[$47>>3];
         $6198 = $6197 * 3.1152647975077898;
         $6199 = +HEAPF64[$x1085>>3];
         $6200 = $6198 * $6199;
         $6201 = (+__Z5IKabsd($6200));
         $6202 = $6201 < 1.9999999999999999E-6;
         do {
          if ($6202) {
           $6203 = +HEAPF64[$60>>3];
           $6204 = $6203 * 5.1921079958463103;
           $6205 = $6204 + -1.00228971962617;
           $6206 = (+__Z5IKabsd($6205));
           $6207 = $6206 < 1.9999999999999999E-6;
           if (!($6207)) {
            break;
           }
           $6208 = (+__Z5IKsqrd($6200));
           $6209 = (+__Z5IKsqrd($6205));
           $6210 = $6208 + $6209;
           $6211 = $6210 + -1.0;
           $6212 = (+__Z5IKabsd($6211));
           $6213 = !($6212 <= 1.9999999999999999E-6);
           if (!($6213)) {
            break L15;
           }
          }
         } while(0);
         $6214 = +HEAPF64[$47>>3];
         $6215 = $6214 * 3.1152647975077898;
         $6216 = +HEAPF64[$x1085>>3];
         $6217 = $6215 * $6216;
         $6218 = +HEAPF64[$60>>3];
         $6219 = $6218 * 5.1921079958463103;
         $6220 = $6219 + -1.00228971962617;
         $6221 = (+__Z7IKatan2dd($6217,$6220));
         $6222 = (+__Z5IKsind($6221));
         $6223 = (+__Z5IKcosd($6221));
         $6224 = $6221 > 3.14159265358979;
         do {
          if ($6224) {
           $6225 = $6221 + -6.2831853071795898;
           $6228 = $6225;
          } else {
           $6226 = $6221 < -3.14159265358979;
           if (!($6226)) {
            $6228 = $6221;
            break;
           }
           $6227 = $6221 + 6.2831853071795898;
           $6228 = $6227;
          }
         } while(0);
         HEAP8[$8>>0] = 0;
         HEAP8[$9>>0] = -1;
         HEAPF64[$7>>3] = $6228;
         HEAPF64[$257>>3] = $6223;
         HEAPF64[$258>>3] = $6222;
         $6229 = +HEAPF64[$7>>3];
         $6230 = (+__Z5IKcosd($6229));
         $6231 = (+__Z5IKsind($6229));
         $6232 = +HEAPF64[$43>>3];
         $6233 = +HEAPF64[$82>>3];
         $6234 = $6232 * $6233;
         $6235 = +HEAPF64[$81>>3];
         $6236 = +HEAPF64[$45>>3];
         $6237 = $6235 * $6236;
         $6238 = $6231 * 0.32100000000000001;
         $6239 = +HEAPF64[$47>>3];
         $6240 = +HEAPF64[$23>>3];
         $6241 = -$6240;
         $6242 = $6238 * $6241;
         $6243 = $6239 + $6242;
         $6244 = +HEAPF64[$60>>3];
         $6245 = $6230 * 0.32100000000000001;
         $6246 = $6245 + 0.32173499999999999;
         $6247 = $6244 * 1.6666666666666701;
         $6248 = $6246 - $6247;
         $6249 = +HEAPF64[$24>>3];
         $6250 = $6238 * $6249;
         $6251 = $6234 + $6250;
         $6252 = $6251 - $6237;
         $6253 = $6234 * $6249;
         $6254 = $6238 + $6253;
         $6255 = $6239 * $6241;
         $6256 = $6255 + $6254;
         $6257 = $6237 * $6249;
         $6258 = $6256 - $6257;
         $6259 = (+__Z5IKabsd($6243));
         $6260 = $6259 > 5.0000000000000004E-6;
         if ($6260) {
          break L15;
         }
         $6261 = $6230 * 0.25679999999999997;
         $6262 = $6261 + 0.25738800000000001;
         $6263 = $6244 * 1.3333333333333299;
         $6264 = $6262 - $6263;
         $6265 = (+__Z5IKabsd($6264));
         $6266 = $6265 > 5.0000000000000004E-6;
         if ($6266) {
          break L15;
         }
         $6267 = (+__Z5IKabsd($6248));
         $6268 = $6267 > 5.0000000000000004E-6;
         if ($6268) {
          break L15;
         }
         $6269 = (+__Z5IKabsd($6252));
         $6270 = $6269 > 5.0000000000000004E-6;
         if ($6270) {
          break L15;
         }
         $6271 = (+__Z5IKabsd($6258));
         $6272 = $6271 > 5.0000000000000004E-6;
         if ($6272) {
          break L15;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break L15;
        }
        HEAPF64[$224>>3] = 0.0;
        HEAPF64[$223>>3] = -1.0;
        HEAPF64[$3>>3] = 3.14159265358979;
        $5754 = +HEAPF64[$24>>3];
        $5755 = (+__Z5IKabsd($5754));
        $5756 = $5755 < 9.9999999999999995E-7;
        if (!($5756)) {
         HEAP8[$10>>0] = 1;
         $6099 = +HEAPF64[$24>>3];
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1079,$6099,-1);
         $6100 = HEAP8[$253>>0]|0;
         $6101 = ($6100<<24>>24)==(0);
         if ($6101) {
          break L15;
         }
         $6102 = +HEAPF64[$x1079>>3];
         $6103 = $6102 * 0.0031152647975077898;
         $6104 = +HEAPF64[$81>>3];
         $6105 = $6104 * 1000.0;
         $6106 = +HEAPF64[$45>>3];
         $6107 = $6105 * $6106;
         $6108 = +HEAPF64[$43>>3];
         $6109 = $6108 * -1000.0;
         $6110 = +HEAPF64[$82>>3];
         $6111 = $6109 * $6110;
         $6112 = $6107 + $6111;
         $6113 = $6103 * $6112;
         $6114 = (+__Z5IKabsd($6113));
         $6115 = $6114 < 1.9999999999999999E-6;
         do {
          if ($6115) {
           $6116 = +HEAPF64[$60>>3];
           $6117 = $6116 * 5.1921079958463103;
           $6118 = $6117 + -1.00228971962617;
           $6119 = (+__Z5IKabsd($6118));
           $6120 = $6119 < 1.9999999999999999E-6;
           if (!($6120)) {
            break;
           }
           $6121 = (+__Z5IKsqrd($6113));
           $6122 = (+__Z5IKsqrd($6118));
           $6123 = $6121 + $6122;
           $6124 = $6123 + -1.0;
           $6125 = (+__Z5IKabsd($6124));
           $6126 = !($6125 <= 1.9999999999999999E-6);
           if (!($6126)) {
            break L15;
           }
          }
         } while(0);
         $6127 = +HEAPF64[$x1079>>3];
         $6128 = $6127 * 0.0031152647975077898;
         $6129 = +HEAPF64[$81>>3];
         $6130 = $6129 * 1000.0;
         $6131 = +HEAPF64[$45>>3];
         $6132 = $6130 * $6131;
         $6133 = +HEAPF64[$43>>3];
         $6134 = $6133 * -1000.0;
         $6135 = +HEAPF64[$82>>3];
         $6136 = $6134 * $6135;
         $6137 = $6132 + $6136;
         $6138 = $6128 * $6137;
         $6139 = +HEAPF64[$60>>3];
         $6140 = $6139 * 5.1921079958463103;
         $6141 = $6140 + -1.00228971962617;
         $6142 = (+__Z7IKatan2dd($6138,$6141));
         $6143 = (+__Z5IKsind($6142));
         $6144 = (+__Z5IKcosd($6142));
         $6145 = $6142 > 3.14159265358979;
         do {
          if ($6145) {
           $6146 = $6142 + -6.2831853071795898;
           $6149 = $6146;
          } else {
           $6147 = $6142 < -3.14159265358979;
           if (!($6147)) {
            $6149 = $6142;
            break;
           }
           $6148 = $6142 + 6.2831853071795898;
           $6149 = $6148;
          }
         } while(0);
         HEAP8[$8>>0] = 0;
         HEAP8[$9>>0] = -1;
         HEAPF64[$7>>3] = $6149;
         HEAPF64[$254>>3] = $6144;
         HEAPF64[$255>>3] = $6143;
         $6150 = +HEAPF64[$7>>3];
         $6151 = (+__Z5IKcosd($6150));
         $6152 = (+__Z5IKsind($6150));
         $6153 = +HEAPF64[$43>>3];
         $6154 = +HEAPF64[$82>>3];
         $6155 = $6153 * $6154;
         $6156 = +HEAPF64[$81>>3];
         $6157 = +HEAPF64[$45>>3];
         $6158 = $6156 * $6157;
         $6159 = $6152 * 0.32100000000000001;
         $6160 = +HEAPF64[$47>>3];
         $6161 = +HEAPF64[$23>>3];
         $6162 = -$6161;
         $6163 = $6159 * $6162;
         $6164 = $6160 + $6163;
         $6165 = +HEAPF64[$60>>3];
         $6166 = $6151 * 0.32100000000000001;
         $6167 = $6166 + 0.32173499999999999;
         $6168 = $6165 * 1.6666666666666701;
         $6169 = $6167 - $6168;
         $6170 = +HEAPF64[$24>>3];
         $6171 = $6159 * $6170;
         $6172 = $6155 + $6171;
         $6173 = $6172 - $6158;
         $6174 = $6155 * $6170;
         $6175 = $6159 + $6174;
         $6176 = $6160 * $6162;
         $6177 = $6176 + $6175;
         $6178 = $6158 * $6170;
         $6179 = $6177 - $6178;
         $6180 = (+__Z5IKabsd($6164));
         $6181 = $6180 > 5.0000000000000004E-6;
         if ($6181) {
          break L15;
         }
         $6182 = $6151 * 0.25679999999999997;
         $6183 = $6182 + 0.25738800000000001;
         $6184 = $6165 * 1.3333333333333299;
         $6185 = $6183 - $6184;
         $6186 = (+__Z5IKabsd($6185));
         $6187 = $6186 > 5.0000000000000004E-6;
         if ($6187) {
          break L15;
         }
         $6188 = (+__Z5IKabsd($6169));
         $6189 = $6188 > 5.0000000000000004E-6;
         if ($6189) {
          break L15;
         }
         $6190 = (+__Z5IKabsd($6173));
         $6191 = $6190 > 5.0000000000000004E-6;
         if ($6191) {
          break L15;
         }
         $6192 = (+__Z5IKabsd($6179));
         $6193 = $6192 > 5.0000000000000004E-6;
         if ($6193) {
          break L15;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break L15;
        }
        $5757 = +HEAPF64[$81>>3];
        $5758 = +HEAPF64[$45>>3];
        $5759 = +HEAPF64[$43>>3];
        $5760 = +HEAPF64[$82>>3];
        $5761 = +HEAPF64[$22>>3];
        $5762 = (+__Z5IKabsd($5761));
        $5763 = $5762 + 3.14159265358979;
        $5764 = (+__Z6IKfmoddd($5763,6.2831853071795898));
        $5765 = $5764 + -3.14159265358979;
        $5766 = $5757 * -0.59999999999999998;
        $5767 = $5766 * $5759;
        $5768 = $5767 + 0.013041000000000001;
        $5769 = +HEAPF64[$60>>3];
        $5770 = $5768 - $5769;
        $5771 = $5758 * -0.59999999999999998;
        $5772 = $5771 * $5760;
        $5773 = $5772 + $5770;
        $5774 = (+__Z5IKabsd($5765));
        $5775 = $5774 < 9.9999999999999995E-7;
        do {
         if ($5775) {
          $5776 = $5759 * $5760;
          $5777 = $5757 * $5758;
          $5778 = $5776 - $5777;
          $5779 = (+__Z5IKabsd($5778));
          $5780 = $5779 < 9.9999999999999995E-7;
          if (!($5780)) {
           break;
          }
          $5781 = (+__Z5IKabsd($5773));
          $5782 = $5781 < 9.9999999999999995E-7;
          if (!($5782)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $5783 = +HEAPF64[$47>>3];
          $5784 = $5783 * 3.1152647975077898;
          $5785 = (+__Z5IKabsd($5784));
          $5786 = $5785 < 1.9999999999999999E-6;
          do {
           if ($5786) {
            $5787 = +HEAPF64[$60>>3];
            $5788 = $5787 * 5.1921079958463103;
            $5789 = $5788 + -1.00228971962617;
            $5790 = (+__Z5IKabsd($5789));
            $5791 = $5790 < 1.9999999999999999E-6;
            if (!($5791)) {
             break;
            }
            $5792 = (+__Z5IKsqrd($5784));
            $5793 = (+__Z5IKsqrd($5789));
            $5794 = $5792 + $5793;
            $5795 = $5794 + -1.0;
            $5796 = (+__Z5IKabsd($5795));
            $5797 = !($5796 <= 1.9999999999999999E-6);
            if (!($5797)) {
             break L15;
            }
           }
          } while(0);
          $5798 = +HEAPF64[$47>>3];
          $5799 = $5798 * 3.1152647975077898;
          $5800 = +HEAPF64[$60>>3];
          $5801 = $5800 * 5.1921079958463103;
          $5802 = $5801 + -1.00228971962617;
          $5803 = (+__Z7IKatan2dd($5799,$5802));
          $5804 = (+__Z5IKsind($5803));
          $5805 = (+__Z5IKcosd($5803));
          $5806 = $5803 > 3.14159265358979;
          do {
           if ($5806) {
            $5807 = $5803 + -6.2831853071795898;
            $5810 = $5807;
           } else {
            $5808 = $5803 < -3.14159265358979;
            if (!($5808)) {
             $5810 = $5803;
             break;
            }
            $5809 = $5803 + 6.2831853071795898;
            $5810 = $5809;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $5810;
          HEAPF64[$245>>3] = $5805;
          HEAPF64[$246>>3] = $5804;
          $5811 = +HEAPF64[$7>>3];
          $5812 = (+__Z5IKcosd($5811));
          $5813 = (+__Z5IKsind($5811));
          $5814 = $5813 * 0.32100000000000001;
          $5815 = +HEAPF64[$47>>3];
          $5816 = $5815 - $5814;
          $5817 = +HEAPF64[$60>>3];
          $5818 = $5812 * 0.32100000000000001;
          $5819 = $5818 + 0.32173499999999999;
          $5820 = $5817 * 1.6666666666666701;
          $5821 = $5819 - $5820;
          $5822 = (+__Z5IKabsd($5816));
          $5823 = $5822 > 5.0000000000000004E-6;
          if ($5823) {
           break L15;
          }
          $5824 = $5812 * 0.25679999999999997;
          $5825 = $5824 + 0.25738800000000001;
          $5826 = $5817 * 1.3333333333333299;
          $5827 = $5825 - $5826;
          $5828 = (+__Z5IKabsd($5827));
          $5829 = $5828 > 5.0000000000000004E-6;
          if ($5829) {
           break L15;
          }
          $5830 = (+__Z5IKabsd($5821));
          $5831 = $5830 > 5.0000000000000004E-6;
          if ($5831) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $5832 = +HEAPF64[$81>>3];
        $5833 = +HEAPF64[$45>>3];
        $5834 = $5832 * $5833;
        $5835 = +HEAPF64[$43>>3];
        $5836 = +HEAPF64[$82>>3];
        $5837 = $5835 * $5836;
        $5838 = +HEAPF64[$22>>3];
        $5839 = $5838 + -3.14159265358979;
        $5840 = (+__Z5IKabsd($5839));
        $5841 = $5840 + 3.14159265358979;
        $5842 = (+__Z6IKfmoddd($5841,6.2831853071795898));
        $5843 = $5842 + -3.14159265358979;
        $5844 = $5832 * -0.59999999999999998;
        $5845 = $5844 * $5835;
        $5846 = $5845 + 0.013041000000000001;
        $5847 = +HEAPF64[$60>>3];
        $5848 = $5846 - $5847;
        $5849 = $5833 * -0.59999999999999998;
        $5850 = $5849 * $5836;
        $5851 = $5850 + $5848;
        $5852 = $5834 - $5837;
        $5853 = (+__Z5IKabsd($5843));
        $5854 = $5853 < 9.9999999999999995E-7;
        do {
         if ($5854) {
          $5855 = $5837 - $5834;
          $5856 = (+__Z5IKabsd($5855));
          $5857 = $5856 < 9.9999999999999995E-7;
          if (!($5857)) {
           break;
          }
          $5858 = (+__Z5IKabsd($5851));
          $5859 = $5858 < 9.9999999999999995E-7;
          if (!($5859)) {
           break;
          }
          $5860 = (+__Z5IKabsd($5852));
          $5861 = $5860 < 9.9999999999999995E-7;
          if (!($5861)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $5862 = +HEAPF64[$47>>3];
          $5863 = $5862 * -3.1152647975077898;
          $5864 = (+__Z5IKabsd($5863));
          $5865 = $5864 < 1.9999999999999999E-6;
          do {
           if ($5865) {
            $5866 = +HEAPF64[$60>>3];
            $5867 = $5866 * 5.1921079958463103;
            $5868 = $5867 + -1.00228971962617;
            $5869 = (+__Z5IKabsd($5868));
            $5870 = $5869 < 1.9999999999999999E-6;
            if (!($5870)) {
             break;
            }
            $5871 = (+__Z5IKsqrd($5863));
            $5872 = (+__Z5IKsqrd($5868));
            $5873 = $5871 + $5872;
            $5874 = $5873 + -1.0;
            $5875 = (+__Z5IKabsd($5874));
            $5876 = !($5875 <= 1.9999999999999999E-6);
            if (!($5876)) {
             break L15;
            }
           }
          } while(0);
          $5877 = +HEAPF64[$47>>3];
          $5878 = $5877 * -3.1152647975077898;
          $5879 = +HEAPF64[$60>>3];
          $5880 = $5879 * 5.1921079958463103;
          $5881 = $5880 + -1.00228971962617;
          $5882 = (+__Z7IKatan2dd($5878,$5881));
          $5883 = (+__Z5IKsind($5882));
          $5884 = (+__Z5IKcosd($5882));
          $5885 = $5882 > 3.14159265358979;
          do {
           if ($5885) {
            $5886 = $5882 + -6.2831853071795898;
            $5889 = $5886;
           } else {
            $5887 = $5882 < -3.14159265358979;
            if (!($5887)) {
             $5889 = $5882;
             break;
            }
            $5888 = $5882 + 6.2831853071795898;
            $5889 = $5888;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $5889;
          HEAPF64[$247>>3] = $5884;
          HEAPF64[$248>>3] = $5883;
          $5890 = +HEAPF64[$7>>3];
          $5891 = (+__Z5IKcosd($5890));
          $5892 = +HEAPF64[$47>>3];
          $5893 = (+__Z5IKsind($5890));
          $5894 = $5893 * 0.32100000000000001;
          $5895 = $5892 + $5894;
          $5896 = +HEAPF64[$60>>3];
          $5897 = $5891 * 0.32100000000000001;
          $5898 = $5897 + 0.32173499999999999;
          $5899 = $5896 * 1.6666666666666701;
          $5900 = $5898 - $5899;
          $5901 = (+__Z5IKabsd($5895));
          $5902 = $5901 > 5.0000000000000004E-6;
          if ($5902) {
           break L15;
          }
          $5903 = $5891 * 0.25679999999999997;
          $5904 = $5903 + 0.25738800000000001;
          $5905 = $5896 * 1.3333333333333299;
          $5906 = $5904 - $5905;
          $5907 = (+__Z5IKabsd($5906));
          $5908 = $5907 > 5.0000000000000004E-6;
          if ($5908) {
           break L15;
          }
          $5909 = (+__Z5IKabsd($5900));
          $5910 = $5909 > 5.0000000000000004E-6;
          if ($5910) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $5911 = +HEAPF64[$22>>3];
        $5912 = $5911 + -1.5707963267949001;
        $5913 = (+__Z5IKabsd($5912));
        $5914 = $5913 + 3.14159265358979;
        $5915 = (+__Z6IKfmoddd($5914,6.2831853071795898));
        $5916 = $5915 + -3.14159265358979;
        $5917 = +HEAPF64[$81>>3];
        $5918 = $5917 * -0.59999999999999998;
        $5919 = +HEAPF64[$43>>3];
        $5920 = $5918 * $5919;
        $5921 = $5920 + 0.013041000000000001;
        $5922 = +HEAPF64[$60>>3];
        $5923 = $5921 - $5922;
        $5924 = +HEAPF64[$45>>3];
        $5925 = $5924 * -0.59999999999999998;
        $5926 = +HEAPF64[$82>>3];
        $5927 = $5925 * $5926;
        $5928 = $5923 + $5927;
        $5929 = (+__Z5IKabsd($5916));
        $5930 = $5929 < 9.9999999999999995E-7;
        do {
         if ($5930) {
          $5931 = +HEAPF64[$47>>3];
          $5932 = (+__Z5IKabsd($5931));
          $5933 = $5932 < 9.9999999999999995E-7;
          if (!($5933)) {
           break;
          }
          $5934 = (+__Z5IKabsd($5928));
          $5935 = $5934 < 9.9999999999999995E-7;
          if (!($5935)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $5936 = +HEAPF64[$81>>3];
          $5937 = $5936 * 3.1152647975077898;
          $5938 = +HEAPF64[$45>>3];
          $5939 = $5937 * $5938;
          $5940 = +HEAPF64[$43>>3];
          $5941 = $5940 * -3.1152647975077898;
          $5942 = +HEAPF64[$82>>3];
          $5943 = $5941 * $5942;
          $5944 = $5939 + $5943;
          $5945 = (+__Z5IKabsd($5944));
          $5946 = $5945 < 1.9999999999999999E-6;
          do {
           if ($5946) {
            $5947 = +HEAPF64[$60>>3];
            $5948 = $5947 * 5.1921079958463103;
            $5949 = $5948 + -1.00228971962617;
            $5950 = (+__Z5IKabsd($5949));
            $5951 = $5950 < 1.9999999999999999E-6;
            if (!($5951)) {
             break;
            }
            $5952 = (+__Z5IKsqrd($5944));
            $5953 = (+__Z5IKsqrd($5949));
            $5954 = $5952 + $5953;
            $5955 = $5954 + -1.0;
            $5956 = (+__Z5IKabsd($5955));
            $5957 = !($5956 <= 1.9999999999999999E-6);
            if (!($5957)) {
             break L15;
            }
           }
          } while(0);
          $5958 = +HEAPF64[$81>>3];
          $5959 = $5958 * 3.1152647975077898;
          $5960 = +HEAPF64[$45>>3];
          $5961 = $5959 * $5960;
          $5962 = +HEAPF64[$43>>3];
          $5963 = $5962 * -3.1152647975077898;
          $5964 = +HEAPF64[$82>>3];
          $5965 = $5963 * $5964;
          $5966 = $5961 + $5965;
          $5967 = +HEAPF64[$60>>3];
          $5968 = $5967 * 5.1921079958463103;
          $5969 = $5968 + -1.00228971962617;
          $5970 = (+__Z7IKatan2dd($5966,$5969));
          $5971 = (+__Z5IKsind($5970));
          $5972 = (+__Z5IKcosd($5970));
          $5973 = $5970 > 3.14159265358979;
          do {
           if ($5973) {
            $5974 = $5970 + -6.2831853071795898;
            $5977 = $5974;
           } else {
            $5975 = $5970 < -3.14159265358979;
            if (!($5975)) {
             $5977 = $5970;
             break;
            }
            $5976 = $5970 + 6.2831853071795898;
            $5977 = $5976;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $5977;
          HEAPF64[$249>>3] = $5972;
          HEAPF64[$250>>3] = $5971;
          $5978 = +HEAPF64[$7>>3];
          $5979 = (+__Z5IKcosd($5978));
          $5980 = $5979 * 0.25679999999999997;
          $5981 = $5980 + 0.25738800000000001;
          $5982 = +HEAPF64[$60>>3];
          $5983 = $5982 * 1.3333333333333299;
          $5984 = $5981 - $5983;
          $5985 = +HEAPF64[$81>>3];
          $5986 = +HEAPF64[$45>>3];
          $5987 = $5985 * $5986;
          $5988 = +HEAPF64[$43>>3];
          $5989 = +HEAPF64[$82>>3];
          $5990 = $5988 * $5989;
          $5991 = $5990 - $5987;
          $5992 = (+__Z5IKsind($5978));
          $5993 = $5992 * 0.32100000000000001;
          $5994 = $5991 + $5993;
          $5995 = (+__Z5IKabsd($5984));
          $5996 = $5995 > 5.0000000000000004E-6;
          if ($5996) {
           break L15;
          }
          $5997 = $5979 * 0.32100000000000001;
          $5998 = $5997 + 0.32173499999999999;
          $5999 = $5982 * 1.6666666666666701;
          $6000 = $5998 - $5999;
          $6001 = (+__Z5IKabsd($6000));
          $6002 = $6001 > 5.0000000000000004E-6;
          if ($6002) {
           break L15;
          }
          $6003 = (+__Z5IKabsd($5994));
          $6004 = $6003 > 5.0000000000000004E-6;
          if ($6004) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $6005 = +HEAPF64[$22>>3];
        $6006 = $6005 + 1.5707963267949001;
        $6007 = (+__Z5IKabsd($6006));
        $6008 = $6007 + 3.14159265358979;
        $6009 = (+__Z6IKfmoddd($6008,6.2831853071795898));
        $6010 = $6009 + -3.14159265358979;
        $6011 = +HEAPF64[$81>>3];
        $6012 = $6011 * -0.59999999999999998;
        $6013 = +HEAPF64[$43>>3];
        $6014 = $6012 * $6013;
        $6015 = $6014 + 0.013041000000000001;
        $6016 = +HEAPF64[$60>>3];
        $6017 = $6015 - $6016;
        $6018 = +HEAPF64[$45>>3];
        $6019 = $6018 * -0.59999999999999998;
        $6020 = +HEAPF64[$82>>3];
        $6021 = $6019 * $6020;
        $6022 = $6017 + $6021;
        $6023 = (+__Z5IKabsd($6010));
        $6024 = $6023 < 9.9999999999999995E-7;
        if (!($6024)) {
         break L15;
        }
        $6025 = +HEAPF64[$47>>3];
        $6026 = (+__Z5IKabsd($6025));
        $6027 = $6026 < 9.9999999999999995E-7;
        if (!($6027)) {
         break L15;
        }
        $6028 = (+__Z5IKabsd($6022));
        $6029 = $6028 < 9.9999999999999995E-7;
        if (!($6029)) {
         break L15;
        }
        HEAP8[$10>>0] = 1;
        $6030 = +HEAPF64[$81>>3];
        $6031 = $6030 * -3.1152647975077898;
        $6032 = +HEAPF64[$45>>3];
        $6033 = $6031 * $6032;
        $6034 = +HEAPF64[$43>>3];
        $6035 = $6034 * 3.1152647975077898;
        $6036 = +HEAPF64[$82>>3];
        $6037 = $6035 * $6036;
        $6038 = $6033 + $6037;
        $6039 = (+__Z5IKabsd($6038));
        $6040 = $6039 < 1.9999999999999999E-6;
        do {
         if ($6040) {
          $6041 = +HEAPF64[$60>>3];
          $6042 = $6041 * 5.1921079958463103;
          $6043 = $6042 + -1.00228971962617;
          $6044 = (+__Z5IKabsd($6043));
          $6045 = $6044 < 1.9999999999999999E-6;
          if (!($6045)) {
           break;
          }
          $6046 = (+__Z5IKsqrd($6038));
          $6047 = (+__Z5IKsqrd($6043));
          $6048 = $6046 + $6047;
          $6049 = $6048 + -1.0;
          $6050 = (+__Z5IKabsd($6049));
          $6051 = !($6050 <= 1.9999999999999999E-6);
          if (!($6051)) {
           break L15;
          }
         }
        } while(0);
        $6052 = +HEAPF64[$81>>3];
        $6053 = $6052 * -3.1152647975077898;
        $6054 = +HEAPF64[$45>>3];
        $6055 = $6053 * $6054;
        $6056 = +HEAPF64[$43>>3];
        $6057 = $6056 * 3.1152647975077898;
        $6058 = +HEAPF64[$82>>3];
        $6059 = $6057 * $6058;
        $6060 = $6055 + $6059;
        $6061 = +HEAPF64[$60>>3];
        $6062 = $6061 * 5.1921079958463103;
        $6063 = $6062 + -1.00228971962617;
        $6064 = (+__Z7IKatan2dd($6060,$6063));
        $6065 = (+__Z5IKsind($6064));
        $6066 = (+__Z5IKcosd($6064));
        $6067 = $6064 > 3.14159265358979;
        do {
         if ($6067) {
          $6068 = $6064 + -6.2831853071795898;
          $6071 = $6068;
         } else {
          $6069 = $6064 < -3.14159265358979;
          if (!($6069)) {
           $6071 = $6064;
           break;
          }
          $6070 = $6064 + 6.2831853071795898;
          $6071 = $6070;
         }
        } while(0);
        HEAP8[$8>>0] = 0;
        HEAP8[$9>>0] = -1;
        HEAPF64[$7>>3] = $6071;
        HEAPF64[$251>>3] = $6066;
        HEAPF64[$252>>3] = $6065;
        $6072 = +HEAPF64[$7>>3];
        $6073 = (+__Z5IKcosd($6072));
        $6074 = $6073 * 0.25679999999999997;
        $6075 = $6074 + 0.25738800000000001;
        $6076 = +HEAPF64[$60>>3];
        $6077 = $6076 * 1.3333333333333299;
        $6078 = $6075 - $6077;
        $6079 = +HEAPF64[$81>>3];
        $6080 = +HEAPF64[$45>>3];
        $6081 = $6079 * $6080;
        $6082 = (+__Z5IKsind($6072));
        $6083 = $6082 * -0.32100000000000001;
        $6084 = $6083 - $6081;
        $6085 = +HEAPF64[$43>>3];
        $6086 = +HEAPF64[$82>>3];
        $6087 = $6085 * $6086;
        $6088 = $6084 + $6087;
        $6089 = (+__Z5IKabsd($6078));
        $6090 = $6089 > 5.0000000000000004E-6;
        if ($6090) {
         break L15;
        }
        $6091 = $6073 * 0.32100000000000001;
        $6092 = $6091 + 0.32173499999999999;
        $6093 = $6076 * 1.6666666666666701;
        $6094 = $6092 - $6093;
        $6095 = (+__Z5IKabsd($6094));
        $6096 = $6095 > 5.0000000000000004E-6;
        if ($6096) {
         break L15;
        }
        $6097 = (+__Z5IKabsd($6088));
        $6098 = $6097 > 5.0000000000000004E-6;
        if ($6098) {
         break L15;
        }
        __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
        break L15;
       }
      } while(0);
      $6273 = +HEAPF64[$81>>3];
      $6274 = +HEAPF64[$43>>3];
      $6275 = $6273 * $6274;
      $6276 = +HEAPF64[$45>>3];
      $6277 = +HEAPF64[$3>>3];
      $6278 = $6277 + -1.5707963267949001;
      $6279 = (+__Z5IKabsd($6278));
      $6280 = $6279 + 3.14159265358979;
      $6281 = (+__Z6IKfmoddd($6280,6.2831853071795898));
      $6282 = $6281 + -3.14159265358979;
      $6283 = +HEAPF64[$82>>3];
      $6284 = +HEAPF64[$23>>3];
      $6285 = $6274 * $6284;
      $6286 = $6283 * $6285;
      $6287 = +HEAPF64[$24>>3];
      $6288 = $6275 * $6287;
      $6289 = $6286 - $6288;
      $6290 = $6287 * 0.10000000000000001;
      $6291 = $6290 + $6289;
      $6292 = $6273 * $6284;
      $6293 = $6276 * $6292;
      $6294 = $6291 - $6293;
      $6295 = $6283 * $6287;
      $6296 = $6276 * $6295;
      $6297 = $6294 - $6296;
      $6298 = (+__Z5IKabsd($6282));
      $6299 = $6298 < 9.9999999999999995E-7;
      do {
       if ($6299) {
        $6300 = +HEAPF64[$60>>3];
        $6301 = +HEAPF64[$47>>3];
        $6302 = $6301 * 0.80000000000000004;
        $6303 = -0.066959000000000005 - $6302;
        $6304 = $6303 - $6300;
        $6305 = $6276 * 0.20000000000000001;
        $6306 = $6305 * $6283;
        $6307 = $6306 + $6304;
        $6308 = $6275 * 0.20000000000000001;
        $6309 = $6308 + $6307;
        $6310 = (+__Z5IKabsd($6309));
        $6311 = $6310 < 9.9999999999999995E-7;
        if (!($6311)) {
         break;
        }
        $6312 = (+__Z5IKabsd($6297));
        $6313 = $6312 < 9.9999999999999995E-7;
        if (!($6313)) {
         break;
        }
        HEAPF64[$224>>3] = 1.0;
        HEAPF64[$223>>3] = 0.0;
        HEAPF64[$3>>3] = 1.5707963267949001;
        $6314 = +HEAPF64[$24>>3];
        $6315 = (+__Z5IKabsd($6314));
        $6316 = $6315 < 9.9999999999999995E-7;
        if (!($6316)) {
         HEAP8[$10>>0] = 1;
         $6827 = +HEAPF64[$24>>3];
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1112,$6827,-1);
         $6828 = HEAP8[$270>>0]|0;
         $6829 = ($6828<<24>>24)==(0);
         if ($6829) {
          break L15;
         }
         $6830 = +HEAPF64[$x1112>>3];
         $6831 = $6830 * 0.0031152647975077898;
         $6832 = +HEAPF64[$81>>3];
         $6833 = $6832 * 1000.0;
         $6834 = +HEAPF64[$45>>3];
         $6835 = $6833 * $6834;
         $6836 = +HEAPF64[$43>>3];
         $6837 = $6836 * -1000.0;
         $6838 = +HEAPF64[$82>>3];
         $6839 = $6837 * $6838;
         $6840 = $6835 + $6839;
         $6841 = $6831 * $6840;
         $6842 = (+__Z5IKabsd($6841));
         $6843 = $6842 < 1.9999999999999999E-6;
         do {
          if ($6843) {
           $6844 = +HEAPF64[$47>>3];
           $6845 = $6844 * 3.1152647975077898;
           $6846 = -1.2461059190031201 - $6845;
           $6847 = (+__Z5IKabsd($6846));
           $6848 = $6847 < 1.9999999999999999E-6;
           if (!($6848)) {
            break;
           }
           $6849 = (+__Z5IKsqrd($6841));
           $6850 = (+__Z5IKsqrd($6846));
           $6851 = $6849 + $6850;
           $6852 = $6851 + -1.0;
           $6853 = (+__Z5IKabsd($6852));
           $6854 = !($6853 <= 1.9999999999999999E-6);
           if (!($6854)) {
            break L15;
           }
          }
         } while(0);
         $6855 = +HEAPF64[$x1112>>3];
         $6856 = $6855 * 0.0031152647975077898;
         $6857 = +HEAPF64[$81>>3];
         $6858 = $6857 * 1000.0;
         $6859 = +HEAPF64[$45>>3];
         $6860 = $6858 * $6859;
         $6861 = +HEAPF64[$43>>3];
         $6862 = $6861 * -1000.0;
         $6863 = +HEAPF64[$82>>3];
         $6864 = $6862 * $6863;
         $6865 = $6860 + $6864;
         $6866 = $6856 * $6865;
         $6867 = +HEAPF64[$47>>3];
         $6868 = $6867 * 3.1152647975077898;
         $6869 = -1.2461059190031201 - $6868;
         $6870 = (+__Z7IKatan2dd($6866,$6869));
         $6871 = (+__Z5IKsind($6870));
         $6872 = (+__Z5IKcosd($6870));
         $6873 = $6870 > 3.14159265358979;
         do {
          if ($6873) {
           $6874 = $6870 + -6.2831853071795898;
           $6877 = $6874;
          } else {
           $6875 = $6870 < -3.14159265358979;
           if (!($6875)) {
            $6877 = $6870;
            break;
           }
           $6876 = $6870 + 6.2831853071795898;
           $6877 = $6876;
          }
         } while(0);
         HEAP8[$8>>0] = 0;
         HEAP8[$9>>0] = -1;
         HEAPF64[$7>>3] = $6877;
         HEAPF64[$271>>3] = $6872;
         HEAPF64[$272>>3] = $6871;
         $6878 = +HEAPF64[$7>>3];
         $6879 = (+__Z5IKcosd($6878));
         $6880 = (+__Z5IKsind($6878));
         $6881 = +HEAPF64[$45>>3];
         $6882 = +HEAPF64[$81>>3];
         $6883 = +HEAPF64[$43>>3];
         $6884 = $6882 * $6883;
         $6885 = +HEAPF64[$82>>3];
         $6886 = $6883 * $6885;
         $6887 = $6880 * 0.32100000000000001;
         $6888 = $6879 * 0.32100000000000001;
         $6889 = $6888 + 0.40000000000000002;
         $6890 = +HEAPF64[$47>>3];
         $6891 = $6889 + $6890;
         $6892 = -$6882;
         $6893 = $6881 * $6892;
         $6894 = $6893 + $6886;
         $6895 = +HEAPF64[$24>>3];
         $6896 = $6887 * $6895;
         $6897 = $6894 + $6896;
         $6898 = $6881 * $6885;
         $6899 = 0.10000000000000001 - $6898;
         $6900 = $6899 - $6884;
         $6901 = +HEAPF64[$23>>3];
         $6902 = $6887 * $6901;
         $6903 = $6900 - $6902;
         $6904 = $6881 * $6901;
         $6905 = $6885 * $6904;
         $6906 = $6887 + $6905;
         $6907 = $6895 * $6892;
         $6908 = $6881 * $6907;
         $6909 = $6908 + $6906;
         $6910 = $6886 * $6895;
         $6911 = $6910 + $6909;
         $6912 = $6901 * 0.10000000000000001;
         $6913 = $6911 - $6912;
         $6914 = $6884 * $6901;
         $6915 = $6914 + $6913;
         $6916 = (+__Z5IKabsd($6891));
         $6917 = $6916 > 5.0000000000000004E-6;
         if ($6917) {
          break L15;
         }
         $6918 = $6890 * 0.80000000000000004;
         $6919 = $6918 + 0.32000000000000001;
         $6920 = $6879 * 0.25679999999999997;
         $6921 = $6920 + $6919;
         $6922 = (+__Z5IKabsd($6921));
         $6923 = $6922 > 5.0000000000000004E-6;
         if ($6923) {
          break L15;
         }
         $6924 = (+__Z5IKabsd($6897));
         $6925 = $6924 > 5.0000000000000004E-6;
         if ($6925) {
          break L15;
         }
         $6926 = (+__Z5IKabsd($6903));
         $6927 = $6926 > 5.0000000000000004E-6;
         if ($6927) {
          break L15;
         }
         $6928 = (+__Z5IKabsd($6915));
         $6929 = $6928 > 5.0000000000000004E-6;
         if ($6929) {
          break L15;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break L15;
        }
        HEAPF64[$224>>3] = 1.0;
        HEAPF64[$223>>3] = 0.0;
        HEAPF64[$3>>3] = 1.5707963267949001;
        $6317 = +HEAPF64[$23>>3];
        $6318 = (+__Z5IKabsd($6317));
        $6319 = $6318 < 9.9999999999999995E-7;
        if (!($6319)) {
         HEAP8[$10>>0] = 1;
         $6722 = +HEAPF64[$23>>3];
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1105,$6722,-1);
         $6723 = HEAP8[$267>>0]|0;
         $6724 = ($6723<<24>>24)==(0);
         if ($6724) {
          break L15;
         }
         $6725 = +HEAPF64[$x1105>>3];
         $6726 = $6725 * 0.0031152647975077898;
         $6727 = +HEAPF64[$81>>3];
         $6728 = $6727 * -1000.0;
         $6729 = +HEAPF64[$43>>3];
         $6730 = $6728 * $6729;
         $6731 = $6730 + 100.0;
         $6732 = +HEAPF64[$45>>3];
         $6733 = $6732 * -1000.0;
         $6734 = +HEAPF64[$82>>3];
         $6735 = $6733 * $6734;
         $6736 = $6731 + $6735;
         $6737 = $6726 * $6736;
         $6738 = (+__Z5IKabsd($6737));
         $6739 = $6738 < 1.9999999999999999E-6;
         do {
          if ($6739) {
           $6740 = +HEAPF64[$47>>3];
           $6741 = $6740 * 3.1152647975077898;
           $6742 = -1.2461059190031201 - $6741;
           $6743 = (+__Z5IKabsd($6742));
           $6744 = $6743 < 1.9999999999999999E-6;
           if (!($6744)) {
            break;
           }
           $6745 = (+__Z5IKsqrd($6737));
           $6746 = (+__Z5IKsqrd($6742));
           $6747 = $6745 + $6746;
           $6748 = $6747 + -1.0;
           $6749 = (+__Z5IKabsd($6748));
           $6750 = !($6749 <= 1.9999999999999999E-6);
           if (!($6750)) {
            break L15;
           }
          }
         } while(0);
         $6751 = +HEAPF64[$x1105>>3];
         $6752 = $6751 * 0.0031152647975077898;
         $6753 = +HEAPF64[$81>>3];
         $6754 = $6753 * -1000.0;
         $6755 = +HEAPF64[$43>>3];
         $6756 = $6754 * $6755;
         $6757 = $6756 + 100.0;
         $6758 = +HEAPF64[$45>>3];
         $6759 = $6758 * -1000.0;
         $6760 = +HEAPF64[$82>>3];
         $6761 = $6759 * $6760;
         $6762 = $6757 + $6761;
         $6763 = $6752 * $6762;
         $6764 = +HEAPF64[$47>>3];
         $6765 = $6764 * 3.1152647975077898;
         $6766 = -1.2461059190031201 - $6765;
         $6767 = (+__Z7IKatan2dd($6763,$6766));
         $6768 = (+__Z5IKsind($6767));
         $6769 = (+__Z5IKcosd($6767));
         $6770 = $6767 > 3.14159265358979;
         do {
          if ($6770) {
           $6771 = $6767 + -6.2831853071795898;
           $6774 = $6771;
          } else {
           $6772 = $6767 < -3.14159265358979;
           if (!($6772)) {
            $6774 = $6767;
            break;
           }
           $6773 = $6767 + 6.2831853071795898;
           $6774 = $6773;
          }
         } while(0);
         HEAP8[$8>>0] = 0;
         HEAP8[$9>>0] = -1;
         HEAPF64[$7>>3] = $6774;
         HEAPF64[$268>>3] = $6769;
         HEAPF64[$269>>3] = $6768;
         $6775 = +HEAPF64[$7>>3];
         $6776 = (+__Z5IKcosd($6775));
         $6777 = (+__Z5IKsind($6775));
         $6778 = +HEAPF64[$45>>3];
         $6779 = +HEAPF64[$81>>3];
         $6780 = +HEAPF64[$43>>3];
         $6781 = $6779 * $6780;
         $6782 = +HEAPF64[$82>>3];
         $6783 = $6780 * $6782;
         $6784 = $6777 * 0.32100000000000001;
         $6785 = $6776 * 0.32100000000000001;
         $6786 = $6785 + 0.40000000000000002;
         $6787 = +HEAPF64[$47>>3];
         $6788 = $6786 + $6787;
         $6789 = -$6779;
         $6790 = $6778 * $6789;
         $6791 = $6790 + $6783;
         $6792 = +HEAPF64[$24>>3];
         $6793 = $6784 * $6792;
         $6794 = $6791 + $6793;
         $6795 = $6778 * $6782;
         $6796 = 0.10000000000000001 - $6795;
         $6797 = $6796 - $6781;
         $6798 = +HEAPF64[$23>>3];
         $6799 = $6784 * $6798;
         $6800 = $6797 - $6799;
         $6801 = $6781 * $6798;
         $6802 = $6778 * $6798;
         $6803 = $6782 * $6802;
         $6804 = $6801 + $6803;
         $6805 = $6784 + $6804;
         $6806 = $6792 * $6789;
         $6807 = $6778 * $6806;
         $6808 = $6807 + $6805;
         $6809 = $6783 * $6792;
         $6810 = $6809 + $6808;
         $6811 = $6798 * 0.10000000000000001;
         $6812 = $6810 - $6811;
         $6813 = (+__Z5IKabsd($6788));
         $6814 = $6813 > 5.0000000000000004E-6;
         if ($6814) {
          break L15;
         }
         $6815 = $6787 * 0.80000000000000004;
         $6816 = $6815 + 0.32000000000000001;
         $6817 = $6776 * 0.25679999999999997;
         $6818 = $6817 + $6816;
         $6819 = (+__Z5IKabsd($6818));
         $6820 = $6819 > 5.0000000000000004E-6;
         if ($6820) {
          break L15;
         }
         $6821 = (+__Z5IKabsd($6794));
         $6822 = $6821 > 5.0000000000000004E-6;
         if ($6822) {
          break L15;
         }
         $6823 = (+__Z5IKabsd($6800));
         $6824 = $6823 > 5.0000000000000004E-6;
         if ($6824) {
          break L15;
         }
         $6825 = (+__Z5IKabsd($6812));
         $6826 = $6825 > 5.0000000000000004E-6;
         if ($6826) {
          break L15;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break L15;
        }
        $6320 = +HEAPF64[$45>>3];
        $6321 = +HEAPF64[$82>>3];
        $6322 = $6320 * $6321;
        $6323 = +HEAPF64[$81>>3];
        $6324 = +HEAPF64[$43>>3];
        $6325 = $6323 * $6324;
        $6326 = +HEAPF64[$22>>3];
        $6327 = $6326 + -1.5707963267949001;
        $6328 = (+__Z5IKabsd($6327));
        $6329 = $6328 + 3.14159265358979;
        $6330 = (+__Z6IKfmoddd($6329,6.2831853071795898));
        $6331 = $6330 + -3.14159265358979;
        $6332 = +HEAPF64[$47>>3];
        $6333 = $6332 * 0.80000000000000004;
        $6334 = -0.066959000000000005 - $6333;
        $6335 = +HEAPF64[$60>>3];
        $6336 = $6334 - $6335;
        $6337 = $6325 * 0.20000000000000001;
        $6338 = $6337 + $6336;
        $6339 = $6322 * 0.20000000000000001;
        $6340 = $6339 + $6338;
        $6341 = (+__Z5IKabsd($6331));
        $6342 = $6341 < 9.9999999999999995E-7;
        do {
         if ($6342) {
          $6343 = 0.10000000000000001 - $6322;
          $6344 = $6343 - $6325;
          $6345 = (+__Z5IKabsd($6344));
          $6346 = $6345 < 9.9999999999999995E-7;
          if (!($6346)) {
           break;
          }
          $6347 = (+__Z5IKabsd($6340));
          $6348 = $6347 < 9.9999999999999995E-7;
          if (!($6348)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $6349 = +HEAPF64[$81>>3];
          $6350 = $6349 * 3.1152647975077898;
          $6351 = +HEAPF64[$45>>3];
          $6352 = $6350 * $6351;
          $6353 = +HEAPF64[$43>>3];
          $6354 = $6353 * -3.1152647975077898;
          $6355 = +HEAPF64[$82>>3];
          $6356 = $6354 * $6355;
          $6357 = $6352 + $6356;
          $6358 = (+__Z5IKabsd($6357));
          $6359 = $6358 < 1.9999999999999999E-6;
          do {
           if ($6359) {
            $6360 = +HEAPF64[$47>>3];
            $6361 = $6360 * 3.1152647975077898;
            $6362 = -1.2461059190031201 - $6361;
            $6363 = (+__Z5IKabsd($6362));
            $6364 = $6363 < 1.9999999999999999E-6;
            if (!($6364)) {
             break;
            }
            $6365 = (+__Z5IKsqrd($6357));
            $6366 = (+__Z5IKsqrd($6362));
            $6367 = $6365 + $6366;
            $6368 = $6367 + -1.0;
            $6369 = (+__Z5IKabsd($6368));
            $6370 = !($6369 <= 1.9999999999999999E-6);
            if (!($6370)) {
             break L15;
            }
           }
          } while(0);
          $6371 = +HEAPF64[$81>>3];
          $6372 = $6371 * 3.1152647975077898;
          $6373 = +HEAPF64[$45>>3];
          $6374 = $6372 * $6373;
          $6375 = +HEAPF64[$43>>3];
          $6376 = $6375 * -3.1152647975077898;
          $6377 = +HEAPF64[$82>>3];
          $6378 = $6376 * $6377;
          $6379 = $6374 + $6378;
          $6380 = +HEAPF64[$47>>3];
          $6381 = $6380 * 3.1152647975077898;
          $6382 = -1.2461059190031201 - $6381;
          $6383 = (+__Z7IKatan2dd($6379,$6382));
          $6384 = (+__Z5IKsind($6383));
          $6385 = (+__Z5IKcosd($6383));
          $6386 = $6383 > 3.14159265358979;
          do {
           if ($6386) {
            $6387 = $6383 + -6.2831853071795898;
            $6390 = $6387;
           } else {
            $6388 = $6383 < -3.14159265358979;
            if (!($6388)) {
             $6390 = $6383;
             break;
            }
            $6389 = $6383 + 6.2831853071795898;
            $6390 = $6389;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $6390;
          HEAPF64[$259>>3] = $6385;
          HEAPF64[$260>>3] = $6384;
          $6391 = +HEAPF64[$7>>3];
          $6392 = (+__Z5IKcosd($6391));
          $6393 = +HEAPF64[$47>>3];
          $6394 = $6393 + 0.40000000000000002;
          $6395 = $6392 * 0.32100000000000001;
          $6396 = $6395 + $6394;
          $6397 = +HEAPF64[$81>>3];
          $6398 = +HEAPF64[$45>>3];
          $6399 = $6397 * $6398;
          $6400 = +HEAPF64[$43>>3];
          $6401 = +HEAPF64[$82>>3];
          $6402 = $6400 * $6401;
          $6403 = $6402 - $6399;
          $6404 = (+__Z5IKsind($6391));
          $6405 = $6404 * 0.32100000000000001;
          $6406 = $6403 + $6405;
          $6407 = (+__Z5IKabsd($6396));
          $6408 = $6407 > 5.0000000000000004E-6;
          if ($6408) {
           break L15;
          }
          $6409 = $6392 * 0.25679999999999997;
          $6410 = $6409 + 0.32000000000000001;
          $6411 = $6393 * 0.80000000000000004;
          $6412 = $6410 + $6411;
          $6413 = (+__Z5IKabsd($6412));
          $6414 = $6413 > 5.0000000000000004E-6;
          if ($6414) {
           break L15;
          }
          $6415 = (+__Z5IKabsd($6406));
          $6416 = $6415 > 5.0000000000000004E-6;
          if ($6416) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $6417 = +HEAPF64[$45>>3];
        $6418 = +HEAPF64[$82>>3];
        $6419 = $6417 * $6418;
        $6420 = +HEAPF64[$81>>3];
        $6421 = +HEAPF64[$43>>3];
        $6422 = $6420 * $6421;
        $6423 = +HEAPF64[$22>>3];
        $6424 = $6423 + 1.5707963267949001;
        $6425 = (+__Z5IKabsd($6424));
        $6426 = $6425 + 3.14159265358979;
        $6427 = (+__Z6IKfmoddd($6426,6.2831853071795898));
        $6428 = $6427 + -3.14159265358979;
        $6429 = +HEAPF64[$47>>3];
        $6430 = $6429 * 0.80000000000000004;
        $6431 = -0.066959000000000005 - $6430;
        $6432 = +HEAPF64[$60>>3];
        $6433 = $6431 - $6432;
        $6434 = $6419 * 0.20000000000000001;
        $6435 = $6434 + $6433;
        $6436 = $6422 * 0.20000000000000001;
        $6437 = $6436 + $6435;
        $6438 = $6419 + -0.10000000000000001;
        $6439 = $6438 + $6422;
        $6440 = (+__Z5IKabsd($6428));
        $6441 = $6440 < 9.9999999999999995E-7;
        do {
         if ($6441) {
          $6442 = 0.10000000000000001 - $6422;
          $6443 = $6442 - $6419;
          $6444 = (+__Z5IKabsd($6443));
          $6445 = $6444 < 9.9999999999999995E-7;
          if (!($6445)) {
           break;
          }
          $6446 = (+__Z5IKabsd($6437));
          $6447 = $6446 < 9.9999999999999995E-7;
          if (!($6447)) {
           break;
          }
          $6448 = (+__Z5IKabsd($6439));
          $6449 = $6448 < 9.9999999999999995E-7;
          if (!($6449)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $6450 = +HEAPF64[$81>>3];
          $6451 = $6450 * -3.1152647975077898;
          $6452 = +HEAPF64[$45>>3];
          $6453 = $6451 * $6452;
          $6454 = +HEAPF64[$43>>3];
          $6455 = $6454 * 3.1152647975077898;
          $6456 = +HEAPF64[$82>>3];
          $6457 = $6455 * $6456;
          $6458 = $6453 + $6457;
          $6459 = (+__Z5IKabsd($6458));
          $6460 = $6459 < 1.9999999999999999E-6;
          do {
           if ($6460) {
            $6461 = +HEAPF64[$47>>3];
            $6462 = $6461 * 3.1152647975077898;
            $6463 = -1.2461059190031201 - $6462;
            $6464 = (+__Z5IKabsd($6463));
            $6465 = $6464 < 1.9999999999999999E-6;
            if (!($6465)) {
             break;
            }
            $6466 = (+__Z5IKsqrd($6458));
            $6467 = (+__Z5IKsqrd($6463));
            $6468 = $6466 + $6467;
            $6469 = $6468 + -1.0;
            $6470 = (+__Z5IKabsd($6469));
            $6471 = !($6470 <= 1.9999999999999999E-6);
            if (!($6471)) {
             break L15;
            }
           }
          } while(0);
          $6472 = +HEAPF64[$81>>3];
          $6473 = $6472 * -3.1152647975077898;
          $6474 = +HEAPF64[$45>>3];
          $6475 = $6473 * $6474;
          $6476 = +HEAPF64[$43>>3];
          $6477 = $6476 * 3.1152647975077898;
          $6478 = +HEAPF64[$82>>3];
          $6479 = $6477 * $6478;
          $6480 = $6475 + $6479;
          $6481 = +HEAPF64[$47>>3];
          $6482 = $6481 * 3.1152647975077898;
          $6483 = -1.2461059190031201 - $6482;
          $6484 = (+__Z7IKatan2dd($6480,$6483));
          $6485 = (+__Z5IKsind($6484));
          $6486 = (+__Z5IKcosd($6484));
          $6487 = $6484 > 3.14159265358979;
          do {
           if ($6487) {
            $6488 = $6484 + -6.2831853071795898;
            $6491 = $6488;
           } else {
            $6489 = $6484 < -3.14159265358979;
            if (!($6489)) {
             $6491 = $6484;
             break;
            }
            $6490 = $6484 + 6.2831853071795898;
            $6491 = $6490;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $6491;
          HEAPF64[$261>>3] = $6486;
          HEAPF64[$262>>3] = $6485;
          $6492 = +HEAPF64[$7>>3];
          $6493 = (+__Z5IKcosd($6492));
          $6494 = +HEAPF64[$47>>3];
          $6495 = $6494 + 0.40000000000000002;
          $6496 = $6493 * 0.32100000000000001;
          $6497 = $6496 + $6495;
          $6498 = +HEAPF64[$81>>3];
          $6499 = +HEAPF64[$45>>3];
          $6500 = $6498 * $6499;
          $6501 = (+__Z5IKsind($6492));
          $6502 = $6501 * -0.32100000000000001;
          $6503 = $6502 - $6500;
          $6504 = +HEAPF64[$43>>3];
          $6505 = +HEAPF64[$82>>3];
          $6506 = $6504 * $6505;
          $6507 = $6503 + $6506;
          $6508 = (+__Z5IKabsd($6497));
          $6509 = $6508 > 5.0000000000000004E-6;
          if ($6509) {
           break L15;
          }
          $6510 = $6493 * 0.25679999999999997;
          $6511 = $6510 + 0.32000000000000001;
          $6512 = $6494 * 0.80000000000000004;
          $6513 = $6511 + $6512;
          $6514 = (+__Z5IKabsd($6513));
          $6515 = $6514 > 5.0000000000000004E-6;
          if ($6515) {
           break L15;
          }
          $6516 = (+__Z5IKabsd($6507));
          $6517 = $6516 > 5.0000000000000004E-6;
          if ($6517) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $6518 = +HEAPF64[$81>>3];
        $6519 = +HEAPF64[$45>>3];
        $6520 = +HEAPF64[$43>>3];
        $6521 = +HEAPF64[$82>>3];
        $6522 = +HEAPF64[$22>>3];
        $6523 = (+__Z5IKabsd($6522));
        $6524 = $6523 + 3.14159265358979;
        $6525 = (+__Z6IKfmoddd($6524,6.2831853071795898));
        $6526 = $6525 + -3.14159265358979;
        $6527 = +HEAPF64[$47>>3];
        $6528 = $6527 * 0.80000000000000004;
        $6529 = -0.066959000000000005 - $6528;
        $6530 = +HEAPF64[$60>>3];
        $6531 = $6529 - $6530;
        $6532 = $6519 * 0.20000000000000001;
        $6533 = $6532 * $6521;
        $6534 = $6533 + $6531;
        $6535 = $6518 * 0.20000000000000001;
        $6536 = $6535 * $6520;
        $6537 = $6536 + $6534;
        $6538 = (+__Z5IKabsd($6526));
        $6539 = $6538 < 9.9999999999999995E-7;
        do {
         if ($6539) {
          $6540 = $6520 * $6521;
          $6541 = $6518 * $6519;
          $6542 = $6540 - $6541;
          $6543 = (+__Z5IKabsd($6542));
          $6544 = $6543 < 9.9999999999999995E-7;
          if (!($6544)) {
           break;
          }
          $6545 = (+__Z5IKabsd($6537));
          $6546 = $6545 < 9.9999999999999995E-7;
          if (!($6546)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $6547 = +HEAPF64[$81>>3];
          $6548 = $6547 * -3.1152647975077898;
          $6549 = +HEAPF64[$43>>3];
          $6550 = $6548 * $6549;
          $6551 = $6550 + 0.31152647975077902;
          $6552 = +HEAPF64[$45>>3];
          $6553 = $6552 * -3.1152647975077898;
          $6554 = +HEAPF64[$82>>3];
          $6555 = $6553 * $6554;
          $6556 = $6551 + $6555;
          $6557 = (+__Z5IKabsd($6556));
          $6558 = $6557 < 1.9999999999999999E-6;
          do {
           if ($6558) {
            $6559 = +HEAPF64[$47>>3];
            $6560 = $6559 * 3.1152647975077898;
            $6561 = -1.2461059190031201 - $6560;
            $6562 = (+__Z5IKabsd($6561));
            $6563 = $6562 < 1.9999999999999999E-6;
            if (!($6563)) {
             break;
            }
            $6564 = (+__Z5IKsqrd($6556));
            $6565 = (+__Z5IKsqrd($6561));
            $6566 = $6564 + $6565;
            $6567 = $6566 + -1.0;
            $6568 = (+__Z5IKabsd($6567));
            $6569 = !($6568 <= 1.9999999999999999E-6);
            if (!($6569)) {
             break L15;
            }
           }
          } while(0);
          $6570 = +HEAPF64[$81>>3];
          $6571 = $6570 * -3.1152647975077898;
          $6572 = +HEAPF64[$43>>3];
          $6573 = $6571 * $6572;
          $6574 = $6573 + 0.31152647975077902;
          $6575 = +HEAPF64[$45>>3];
          $6576 = $6575 * -3.1152647975077898;
          $6577 = +HEAPF64[$82>>3];
          $6578 = $6576 * $6577;
          $6579 = $6574 + $6578;
          $6580 = +HEAPF64[$47>>3];
          $6581 = $6580 * 3.1152647975077898;
          $6582 = -1.2461059190031201 - $6581;
          $6583 = (+__Z7IKatan2dd($6579,$6582));
          $6584 = (+__Z5IKsind($6583));
          $6585 = (+__Z5IKcosd($6583));
          $6586 = $6583 > 3.14159265358979;
          do {
           if ($6586) {
            $6587 = $6583 + -6.2831853071795898;
            $6590 = $6587;
           } else {
            $6588 = $6583 < -3.14159265358979;
            if (!($6588)) {
             $6590 = $6583;
             break;
            }
            $6589 = $6583 + 6.2831853071795898;
            $6590 = $6589;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $6590;
          HEAPF64[$263>>3] = $6585;
          HEAPF64[$264>>3] = $6584;
          $6591 = +HEAPF64[$7>>3];
          $6592 = (+__Z5IKcosd($6591));
          $6593 = $6592 * 0.32100000000000001;
          $6594 = $6593 + 0.40000000000000002;
          $6595 = +HEAPF64[$47>>3];
          $6596 = $6595 + $6594;
          $6597 = +HEAPF64[$45>>3];
          $6598 = +HEAPF64[$82>>3];
          $6599 = $6597 * $6598;
          $6600 = 0.10000000000000001 - $6599;
          $6601 = +HEAPF64[$81>>3];
          $6602 = +HEAPF64[$43>>3];
          $6603 = $6601 * $6602;
          $6604 = $6600 - $6603;
          $6605 = (+__Z5IKsind($6591));
          $6606 = $6605 * 0.32100000000000001;
          $6607 = $6604 - $6606;
          $6608 = (+__Z5IKabsd($6596));
          $6609 = $6608 > 5.0000000000000004E-6;
          if ($6609) {
           break L15;
          }
          $6610 = $6595 * 0.80000000000000004;
          $6611 = $6610 + 0.32000000000000001;
          $6612 = $6592 * 0.25679999999999997;
          $6613 = $6612 + $6611;
          $6614 = (+__Z5IKabsd($6613));
          $6615 = $6614 > 5.0000000000000004E-6;
          if ($6615) {
           break L15;
          }
          $6616 = (+__Z5IKabsd($6607));
          $6617 = $6616 > 5.0000000000000004E-6;
          if ($6617) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $6618 = +HEAPF64[$81>>3];
        $6619 = +HEAPF64[$45>>3];
        $6620 = $6618 * $6619;
        $6621 = +HEAPF64[$43>>3];
        $6622 = +HEAPF64[$82>>3];
        $6623 = $6621 * $6622;
        $6624 = +HEAPF64[$22>>3];
        $6625 = $6624 + -3.14159265358979;
        $6626 = (+__Z5IKabsd($6625));
        $6627 = $6626 + 3.14159265358979;
        $6628 = (+__Z6IKfmoddd($6627,6.2831853071795898));
        $6629 = $6628 + -3.14159265358979;
        $6630 = +HEAPF64[$47>>3];
        $6631 = $6630 * 0.80000000000000004;
        $6632 = -0.066959000000000005 - $6631;
        $6633 = +HEAPF64[$60>>3];
        $6634 = $6632 - $6633;
        $6635 = $6619 * 0.20000000000000001;
        $6636 = $6635 * $6622;
        $6637 = $6636 + $6634;
        $6638 = $6618 * 0.20000000000000001;
        $6639 = $6638 * $6621;
        $6640 = $6639 + $6637;
        $6641 = $6620 - $6623;
        $6642 = (+__Z5IKabsd($6629));
        $6643 = $6642 < 9.9999999999999995E-7;
        if (!($6643)) {
         break L15;
        }
        $6644 = $6623 - $6620;
        $6645 = (+__Z5IKabsd($6644));
        $6646 = $6645 < 9.9999999999999995E-7;
        if (!($6646)) {
         break L15;
        }
        $6647 = (+__Z5IKabsd($6640));
        $6648 = $6647 < 9.9999999999999995E-7;
        if (!($6648)) {
         break L15;
        }
        $6649 = (+__Z5IKabsd($6641));
        $6650 = $6649 < 9.9999999999999995E-7;
        if (!($6650)) {
         break L15;
        }
        HEAP8[$10>>0] = 1;
        $6651 = +HEAPF64[$81>>3];
        $6652 = $6651 * 3.1152647975077898;
        $6653 = +HEAPF64[$43>>3];
        $6654 = $6652 * $6653;
        $6655 = $6654 + -0.31152647975077902;
        $6656 = +HEAPF64[$45>>3];
        $6657 = $6656 * 3.1152647975077898;
        $6658 = +HEAPF64[$82>>3];
        $6659 = $6657 * $6658;
        $6660 = $6655 + $6659;
        $6661 = (+__Z5IKabsd($6660));
        $6662 = $6661 < 1.9999999999999999E-6;
        do {
         if ($6662) {
          $6663 = +HEAPF64[$47>>3];
          $6664 = $6663 * 3.1152647975077898;
          $6665 = -1.2461059190031201 - $6664;
          $6666 = (+__Z5IKabsd($6665));
          $6667 = $6666 < 1.9999999999999999E-6;
          if (!($6667)) {
           break;
          }
          $6668 = (+__Z5IKsqrd($6660));
          $6669 = (+__Z5IKsqrd($6665));
          $6670 = $6668 + $6669;
          $6671 = $6670 + -1.0;
          $6672 = (+__Z5IKabsd($6671));
          $6673 = !($6672 <= 1.9999999999999999E-6);
          if (!($6673)) {
           break L15;
          }
         }
        } while(0);
        $6674 = +HEAPF64[$81>>3];
        $6675 = $6674 * 3.1152647975077898;
        $6676 = +HEAPF64[$43>>3];
        $6677 = $6675 * $6676;
        $6678 = $6677 + -0.31152647975077902;
        $6679 = +HEAPF64[$45>>3];
        $6680 = $6679 * 3.1152647975077898;
        $6681 = +HEAPF64[$82>>3];
        $6682 = $6680 * $6681;
        $6683 = $6678 + $6682;
        $6684 = +HEAPF64[$47>>3];
        $6685 = $6684 * 3.1152647975077898;
        $6686 = -1.2461059190031201 - $6685;
        $6687 = (+__Z7IKatan2dd($6683,$6686));
        $6688 = (+__Z5IKsind($6687));
        $6689 = (+__Z5IKcosd($6687));
        $6690 = $6687 > 3.14159265358979;
        do {
         if ($6690) {
          $6691 = $6687 + -6.2831853071795898;
          $6694 = $6691;
         } else {
          $6692 = $6687 < -3.14159265358979;
          if (!($6692)) {
           $6694 = $6687;
           break;
          }
          $6693 = $6687 + 6.2831853071795898;
          $6694 = $6693;
         }
        } while(0);
        HEAP8[$8>>0] = 0;
        HEAP8[$9>>0] = -1;
        HEAPF64[$7>>3] = $6694;
        HEAPF64[$265>>3] = $6689;
        HEAPF64[$266>>3] = $6688;
        $6695 = +HEAPF64[$7>>3];
        $6696 = (+__Z5IKcosd($6695));
        $6697 = $6696 * 0.32100000000000001;
        $6698 = $6697 + 0.40000000000000002;
        $6699 = +HEAPF64[$47>>3];
        $6700 = $6699 + $6698;
        $6701 = +HEAPF64[$45>>3];
        $6702 = +HEAPF64[$82>>3];
        $6703 = $6701 * $6702;
        $6704 = 0.10000000000000001 - $6703;
        $6705 = +HEAPF64[$81>>3];
        $6706 = +HEAPF64[$43>>3];
        $6707 = $6705 * $6706;
        $6708 = $6704 - $6707;
        $6709 = (+__Z5IKsind($6695));
        $6710 = $6709 * 0.32100000000000001;
        $6711 = $6708 + $6710;
        $6712 = (+__Z5IKabsd($6700));
        $6713 = $6712 > 5.0000000000000004E-6;
        if ($6713) {
         break L15;
        }
        $6714 = $6699 * 0.80000000000000004;
        $6715 = $6714 + 0.32000000000000001;
        $6716 = $6696 * 0.25679999999999997;
        $6717 = $6716 + $6715;
        $6718 = (+__Z5IKabsd($6717));
        $6719 = $6718 > 5.0000000000000004E-6;
        if ($6719) {
         break L15;
        }
        $6720 = (+__Z5IKabsd($6711));
        $6721 = $6720 > 5.0000000000000004E-6;
        if ($6721) {
         break L15;
        }
        __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
        break L15;
       }
      } while(0);
      $6930 = +HEAPF64[$45>>3];
      $6931 = +HEAPF64[$82>>3];
      $6932 = $6930 * $6931;
      $6933 = +HEAPF64[$81>>3];
      $6934 = +HEAPF64[$43>>3];
      $6935 = $6933 * $6934;
      $6936 = +HEAPF64[$3>>3];
      $6937 = $6936 + 1.5707963267949001;
      $6938 = (+__Z5IKabsd($6937));
      $6939 = $6938 + 3.14159265358979;
      $6940 = (+__Z6IKfmoddd($6939,6.2831853071795898));
      $6941 = $6940 + -3.14159265358979;
      $6942 = +HEAPF64[$24>>3];
      $6943 = $6935 * $6942;
      $6944 = +HEAPF64[$23>>3];
      $6945 = $6934 * $6944;
      $6946 = $6931 * $6945;
      $6947 = $6943 + $6946;
      $6948 = $6933 * $6944;
      $6949 = $6930 * $6948;
      $6950 = $6947 - $6949;
      $6951 = $6932 * $6942;
      $6952 = $6951 + $6950;
      $6953 = $6942 * 0.10000000000000001;
      $6954 = $6952 - $6953;
      $6955 = (+__Z5IKabsd($6941));
      $6956 = $6955 < 9.9999999999999995E-7;
      do {
       if ($6956) {
        $6957 = +HEAPF64[$60>>3];
        $6958 = +HEAPF64[$47>>3];
        $6959 = $6958 * 0.80000000000000004;
        $6960 = $6959 + -0.066959000000000005;
        $6961 = $6960 - $6957;
        $6962 = $6935 * 0.20000000000000001;
        $6963 = $6962 + $6961;
        $6964 = $6932 * 0.20000000000000001;
        $6965 = $6964 + $6963;
        $6966 = (+__Z5IKabsd($6965));
        $6967 = $6966 < 9.9999999999999995E-7;
        if (!($6967)) {
         break;
        }
        $6968 = (+__Z5IKabsd($6954));
        $6969 = $6968 < 9.9999999999999995E-7;
        if (!($6969)) {
         break;
        }
        HEAPF64[$224>>3] = -1.0;
        HEAPF64[$223>>3] = 0.0;
        HEAPF64[$3>>3] = -1.5707963267949001;
        $6970 = +HEAPF64[$24>>3];
        $6971 = (+__Z5IKabsd($6970));
        $6972 = $6971 < 9.9999999999999995E-7;
        if (!($6972)) {
         HEAP8[$10>>0] = 1;
         $7484 = +HEAPF64[$24>>3];
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1140,$7484,-1);
         $7485 = HEAP8[$284>>0]|0;
         $7486 = ($7485<<24>>24)==(0);
         if ($7486) {
          break L15;
         }
         $7487 = +HEAPF64[$x1140>>3];
         $7488 = $7487 * 0.0031152647975077898;
         $7489 = +HEAPF64[$81>>3];
         $7490 = $7489 * 1000.0;
         $7491 = +HEAPF64[$45>>3];
         $7492 = $7490 * $7491;
         $7493 = +HEAPF64[$43>>3];
         $7494 = $7493 * -1000.0;
         $7495 = +HEAPF64[$82>>3];
         $7496 = $7494 * $7495;
         $7497 = $7492 + $7496;
         $7498 = $7488 * $7497;
         $7499 = (+__Z5IKabsd($7498));
         $7500 = $7499 < 1.9999999999999999E-6;
         do {
          if ($7500) {
           $7501 = +HEAPF64[$47>>3];
           $7502 = $7501 * 3.1152647975077898;
           $7503 = $7502 + -1.2461059190031201;
           $7504 = (+__Z5IKabsd($7503));
           $7505 = $7504 < 1.9999999999999999E-6;
           if (!($7505)) {
            break;
           }
           $7506 = (+__Z5IKsqrd($7498));
           $7507 = (+__Z5IKsqrd($7503));
           $7508 = $7506 + $7507;
           $7509 = $7508 + -1.0;
           $7510 = (+__Z5IKabsd($7509));
           $7511 = !($7510 <= 1.9999999999999999E-6);
           if (!($7511)) {
            break L15;
           }
          }
         } while(0);
         $7512 = +HEAPF64[$x1140>>3];
         $7513 = $7512 * 0.0031152647975077898;
         $7514 = +HEAPF64[$81>>3];
         $7515 = $7514 * 1000.0;
         $7516 = +HEAPF64[$45>>3];
         $7517 = $7515 * $7516;
         $7518 = +HEAPF64[$43>>3];
         $7519 = $7518 * -1000.0;
         $7520 = +HEAPF64[$82>>3];
         $7521 = $7519 * $7520;
         $7522 = $7517 + $7521;
         $7523 = $7513 * $7522;
         $7524 = +HEAPF64[$47>>3];
         $7525 = $7524 * 3.1152647975077898;
         $7526 = $7525 + -1.2461059190031201;
         $7527 = (+__Z7IKatan2dd($7523,$7526));
         $7528 = (+__Z5IKsind($7527));
         $7529 = (+__Z5IKcosd($7527));
         $7530 = $7527 > 3.14159265358979;
         do {
          if ($7530) {
           $7531 = $7527 + -6.2831853071795898;
           $7534 = $7531;
          } else {
           $7532 = $7527 < -3.14159265358979;
           if (!($7532)) {
            $7534 = $7527;
            break;
           }
           $7533 = $7527 + 6.2831853071795898;
           $7534 = $7533;
          }
         } while(0);
         HEAP8[$8>>0] = 0;
         HEAP8[$9>>0] = -1;
         HEAPF64[$7>>3] = $7534;
         HEAPF64[$285>>3] = $7529;
         HEAPF64[$286>>3] = $7528;
         $7535 = +HEAPF64[$7>>3];
         $7536 = (+__Z5IKcosd($7535));
         $7537 = (+__Z5IKsind($7535));
         $7538 = +HEAPF64[$45>>3];
         $7539 = +HEAPF64[$43>>3];
         $7540 = +HEAPF64[$82>>3];
         $7541 = $7539 * $7540;
         $7542 = +HEAPF64[$81>>3];
         $7543 = $7539 * $7542;
         $7544 = $7537 * 0.32100000000000001;
         $7545 = +HEAPF64[$47>>3];
         $7546 = $7545 + -0.40000000000000002;
         $7547 = $7536 * 0.32100000000000001;
         $7548 = $7546 - $7547;
         $7549 = -$7542;
         $7550 = $7538 * $7549;
         $7551 = $7541 + $7550;
         $7552 = +HEAPF64[$24>>3];
         $7553 = $7544 * $7552;
         $7554 = $7551 + $7553;
         $7555 = 0.10000000000000001 - $7543;
         $7556 = +HEAPF64[$23>>3];
         $7557 = $7544 * $7556;
         $7558 = $7555 + $7557;
         $7559 = $7538 * $7540;
         $7560 = $7558 - $7559;
         $7561 = -$7556;
         $7562 = $7540 * $7561;
         $7563 = $7538 * $7562;
         $7564 = $7544 + $7563;
         $7565 = $7552 * $7549;
         $7566 = $7538 * $7565;
         $7567 = $7566 + $7564;
         $7568 = $7541 * $7552;
         $7569 = $7568 + $7567;
         $7570 = $7543 * $7561;
         $7571 = $7570 + $7569;
         $7572 = $7556 * 0.10000000000000001;
         $7573 = $7572 + $7571;
         $7574 = (+__Z5IKabsd($7548));
         $7575 = $7574 > 5.0000000000000004E-6;
         if ($7575) {
          break L15;
         }
         $7576 = $7545 * 0.80000000000000004;
         $7577 = 0.32000000000000001 - $7576;
         $7578 = $7536 * 0.25679999999999997;
         $7579 = $7578 + $7577;
         $7580 = (+__Z5IKabsd($7579));
         $7581 = $7580 > 5.0000000000000004E-6;
         if ($7581) {
          break L15;
         }
         $7582 = (+__Z5IKabsd($7554));
         $7583 = $7582 > 5.0000000000000004E-6;
         if ($7583) {
          break L15;
         }
         $7584 = (+__Z5IKabsd($7560));
         $7585 = $7584 > 5.0000000000000004E-6;
         if ($7585) {
          break L15;
         }
         $7586 = (+__Z5IKabsd($7573));
         $7587 = $7586 > 5.0000000000000004E-6;
         if ($7587) {
          break L15;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break L15;
        }
        HEAPF64[$224>>3] = -1.0;
        HEAPF64[$223>>3] = 0.0;
        HEAPF64[$3>>3] = -1.5707963267949001;
        $6973 = +HEAPF64[$23>>3];
        $6974 = (+__Z5IKabsd($6973));
        $6975 = $6974 < 9.9999999999999995E-7;
        if (!($6975)) {
         HEAP8[$10>>0] = 1;
         $7378 = +HEAPF64[$23>>3];
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x1133,$7378,-1);
         $7379 = HEAP8[$281>>0]|0;
         $7380 = ($7379<<24>>24)==(0);
         if ($7380) {
          break L15;
         }
         $7381 = +HEAPF64[$x1133>>3];
         $7382 = $7381 * 0.0031152647975077898;
         $7383 = +HEAPF64[$81>>3];
         $7384 = $7383 * 1000.0;
         $7385 = +HEAPF64[$43>>3];
         $7386 = $7384 * $7385;
         $7387 = $7386 + -100.0;
         $7388 = +HEAPF64[$45>>3];
         $7389 = $7388 * 1000.0;
         $7390 = +HEAPF64[$82>>3];
         $7391 = $7389 * $7390;
         $7392 = $7387 + $7391;
         $7393 = $7382 * $7392;
         $7394 = (+__Z5IKabsd($7393));
         $7395 = $7394 < 1.9999999999999999E-6;
         do {
          if ($7395) {
           $7396 = +HEAPF64[$47>>3];
           $7397 = $7396 * 3.1152647975077898;
           $7398 = $7397 + -1.2461059190031201;
           $7399 = (+__Z5IKabsd($7398));
           $7400 = $7399 < 1.9999999999999999E-6;
           if (!($7400)) {
            break;
           }
           $7401 = (+__Z5IKsqrd($7393));
           $7402 = (+__Z5IKsqrd($7398));
           $7403 = $7401 + $7402;
           $7404 = $7403 + -1.0;
           $7405 = (+__Z5IKabsd($7404));
           $7406 = !($7405 <= 1.9999999999999999E-6);
           if (!($7406)) {
            break L15;
           }
          }
         } while(0);
         $7407 = +HEAPF64[$x1133>>3];
         $7408 = $7407 * 0.0031152647975077898;
         $7409 = +HEAPF64[$81>>3];
         $7410 = $7409 * 1000.0;
         $7411 = +HEAPF64[$43>>3];
         $7412 = $7410 * $7411;
         $7413 = $7412 + -100.0;
         $7414 = +HEAPF64[$45>>3];
         $7415 = $7414 * 1000.0;
         $7416 = +HEAPF64[$82>>3];
         $7417 = $7415 * $7416;
         $7418 = $7413 + $7417;
         $7419 = $7408 * $7418;
         $7420 = +HEAPF64[$47>>3];
         $7421 = $7420 * 3.1152647975077898;
         $7422 = $7421 + -1.2461059190031201;
         $7423 = (+__Z7IKatan2dd($7419,$7422));
         $7424 = (+__Z5IKsind($7423));
         $7425 = (+__Z5IKcosd($7423));
         $7426 = $7423 > 3.14159265358979;
         do {
          if ($7426) {
           $7427 = $7423 + -6.2831853071795898;
           $7430 = $7427;
          } else {
           $7428 = $7423 < -3.14159265358979;
           if (!($7428)) {
            $7430 = $7423;
            break;
           }
           $7429 = $7423 + 6.2831853071795898;
           $7430 = $7429;
          }
         } while(0);
         HEAP8[$8>>0] = 0;
         HEAP8[$9>>0] = -1;
         HEAPF64[$7>>3] = $7430;
         HEAPF64[$282>>3] = $7425;
         HEAPF64[$283>>3] = $7424;
         $7431 = +HEAPF64[$7>>3];
         $7432 = (+__Z5IKcosd($7431));
         $7433 = (+__Z5IKsind($7431));
         $7434 = +HEAPF64[$45>>3];
         $7435 = +HEAPF64[$43>>3];
         $7436 = +HEAPF64[$82>>3];
         $7437 = $7435 * $7436;
         $7438 = +HEAPF64[$81>>3];
         $7439 = $7435 * $7438;
         $7440 = $7433 * 0.32100000000000001;
         $7441 = $7432 * 0.32100000000000001;
         $7442 = -0.40000000000000002 - $7441;
         $7443 = +HEAPF64[$47>>3];
         $7444 = $7442 + $7443;
         $7445 = +HEAPF64[$24>>3];
         $7446 = $7440 * $7445;
         $7447 = $7437 + $7446;
         $7448 = -$7438;
         $7449 = $7434 * $7448;
         $7450 = $7449 + $7447;
         $7451 = 0.10000000000000001 - $7439;
         $7452 = $7434 * $7436;
         $7453 = $7451 - $7452;
         $7454 = +HEAPF64[$23>>3];
         $7455 = $7440 * $7454;
         $7456 = $7453 + $7455;
         $7457 = $7437 * $7445;
         $7458 = $7440 + $7457;
         $7459 = $7454 * 0.10000000000000001;
         $7460 = $7458 + $7459;
         $7461 = -$7454;
         $7462 = $7436 * $7461;
         $7463 = $7434 * $7462;
         $7464 = $7460 + $7463;
         $7465 = $7445 * $7448;
         $7466 = $7434 * $7465;
         $7467 = $7466 + $7464;
         $7468 = $7439 * $7461;
         $7469 = $7468 + $7467;
         $7470 = (+__Z5IKabsd($7444));
         $7471 = $7470 > 5.0000000000000004E-6;
         if ($7471) {
          break L15;
         }
         $7472 = $7443 * 0.80000000000000004;
         $7473 = 0.32000000000000001 - $7472;
         $7474 = $7432 * 0.25679999999999997;
         $7475 = $7474 + $7473;
         $7476 = (+__Z5IKabsd($7475));
         $7477 = $7476 > 5.0000000000000004E-6;
         if ($7477) {
          break L15;
         }
         $7478 = (+__Z5IKabsd($7450));
         $7479 = $7478 > 5.0000000000000004E-6;
         if ($7479) {
          break L15;
         }
         $7480 = (+__Z5IKabsd($7456));
         $7481 = $7480 > 5.0000000000000004E-6;
         if ($7481) {
          break L15;
         }
         $7482 = (+__Z5IKabsd($7469));
         $7483 = $7482 > 5.0000000000000004E-6;
         if ($7483) {
          break L15;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break L15;
        }
        $6976 = +HEAPF64[$45>>3];
        $6977 = +HEAPF64[$82>>3];
        $6978 = $6976 * $6977;
        $6979 = +HEAPF64[$81>>3];
        $6980 = +HEAPF64[$43>>3];
        $6981 = $6979 * $6980;
        $6982 = +HEAPF64[$22>>3];
        $6983 = $6982 + -1.5707963267949001;
        $6984 = (+__Z5IKabsd($6983));
        $6985 = $6984 + 3.14159265358979;
        $6986 = (+__Z6IKfmoddd($6985,6.2831853071795898));
        $6987 = $6986 + -3.14159265358979;
        $6988 = +HEAPF64[$47>>3];
        $6989 = $6988 * 0.80000000000000004;
        $6990 = $6989 + -0.066959000000000005;
        $6991 = +HEAPF64[$60>>3];
        $6992 = $6990 - $6991;
        $6993 = $6978 * 0.20000000000000001;
        $6994 = $6993 + $6992;
        $6995 = $6981 * 0.20000000000000001;
        $6996 = $6995 + $6994;
        $6997 = $6978 + -0.10000000000000001;
        $6998 = $6997 + $6981;
        $6999 = (+__Z5IKabsd($6987));
        $7000 = $6999 < 9.9999999999999995E-7;
        do {
         if ($7000) {
          $7001 = 0.10000000000000001 - $6978;
          $7002 = $7001 - $6981;
          $7003 = (+__Z5IKabsd($7002));
          $7004 = $7003 < 9.9999999999999995E-7;
          if (!($7004)) {
           break;
          }
          $7005 = (+__Z5IKabsd($6996));
          $7006 = $7005 < 9.9999999999999995E-7;
          if (!($7006)) {
           break;
          }
          $7007 = (+__Z5IKabsd($6998));
          $7008 = $7007 < 9.9999999999999995E-7;
          if (!($7008)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $7009 = +HEAPF64[$81>>3];
          $7010 = $7009 * 3.1152647975077898;
          $7011 = +HEAPF64[$45>>3];
          $7012 = $7010 * $7011;
          $7013 = +HEAPF64[$43>>3];
          $7014 = $7013 * -3.1152647975077898;
          $7015 = +HEAPF64[$82>>3];
          $7016 = $7014 * $7015;
          $7017 = $7012 + $7016;
          $7018 = (+__Z5IKabsd($7017));
          $7019 = $7018 < 1.9999999999999999E-6;
          do {
           if ($7019) {
            $7020 = +HEAPF64[$47>>3];
            $7021 = $7020 * 3.1152647975077898;
            $7022 = $7021 + -1.2461059190031201;
            $7023 = (+__Z5IKabsd($7022));
            $7024 = $7023 < 1.9999999999999999E-6;
            if (!($7024)) {
             break;
            }
            $7025 = (+__Z5IKsqrd($7017));
            $7026 = (+__Z5IKsqrd($7022));
            $7027 = $7025 + $7026;
            $7028 = $7027 + -1.0;
            $7029 = (+__Z5IKabsd($7028));
            $7030 = !($7029 <= 1.9999999999999999E-6);
            if (!($7030)) {
             break L15;
            }
           }
          } while(0);
          $7031 = +HEAPF64[$81>>3];
          $7032 = $7031 * 3.1152647975077898;
          $7033 = +HEAPF64[$45>>3];
          $7034 = $7032 * $7033;
          $7035 = +HEAPF64[$43>>3];
          $7036 = $7035 * -3.1152647975077898;
          $7037 = +HEAPF64[$82>>3];
          $7038 = $7036 * $7037;
          $7039 = $7034 + $7038;
          $7040 = +HEAPF64[$47>>3];
          $7041 = $7040 * 3.1152647975077898;
          $7042 = $7041 + -1.2461059190031201;
          $7043 = (+__Z7IKatan2dd($7039,$7042));
          $7044 = (+__Z5IKsind($7043));
          $7045 = (+__Z5IKcosd($7043));
          $7046 = $7043 > 3.14159265358979;
          do {
           if ($7046) {
            $7047 = $7043 + -6.2831853071795898;
            $7050 = $7047;
           } else {
            $7048 = $7043 < -3.14159265358979;
            if (!($7048)) {
             $7050 = $7043;
             break;
            }
            $7049 = $7043 + 6.2831853071795898;
            $7050 = $7049;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $7050;
          HEAPF64[$273>>3] = $7045;
          HEAPF64[$274>>3] = $7044;
          $7051 = +HEAPF64[$7>>3];
          $7052 = (+__Z5IKcosd($7051));
          $7053 = $7052 * 0.32100000000000001;
          $7054 = -0.40000000000000002 - $7053;
          $7055 = +HEAPF64[$47>>3];
          $7056 = $7055 + $7054;
          $7057 = +HEAPF64[$81>>3];
          $7058 = +HEAPF64[$45>>3];
          $7059 = $7057 * $7058;
          $7060 = +HEAPF64[$43>>3];
          $7061 = +HEAPF64[$82>>3];
          $7062 = $7060 * $7061;
          $7063 = $7062 - $7059;
          $7064 = (+__Z5IKsind($7051));
          $7065 = $7064 * 0.32100000000000001;
          $7066 = $7063 + $7065;
          $7067 = (+__Z5IKabsd($7056));
          $7068 = $7067 > 5.0000000000000004E-6;
          if ($7068) {
           break L15;
          }
          $7069 = $7055 * 0.80000000000000004;
          $7070 = 0.32000000000000001 - $7069;
          $7071 = $7052 * 0.25679999999999997;
          $7072 = $7071 + $7070;
          $7073 = (+__Z5IKabsd($7072));
          $7074 = $7073 > 5.0000000000000004E-6;
          if ($7074) {
           break L15;
          }
          $7075 = (+__Z5IKabsd($7066));
          $7076 = $7075 > 5.0000000000000004E-6;
          if ($7076) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $7077 = +HEAPF64[$45>>3];
        $7078 = +HEAPF64[$82>>3];
        $7079 = $7077 * $7078;
        $7080 = +HEAPF64[$81>>3];
        $7081 = +HEAPF64[$43>>3];
        $7082 = $7080 * $7081;
        $7083 = +HEAPF64[$22>>3];
        $7084 = $7083 + 1.5707963267949001;
        $7085 = (+__Z5IKabsd($7084));
        $7086 = $7085 + 3.14159265358979;
        $7087 = (+__Z6IKfmoddd($7086,6.2831853071795898));
        $7088 = $7087 + -3.14159265358979;
        $7089 = +HEAPF64[$47>>3];
        $7090 = $7089 * 0.80000000000000004;
        $7091 = $7090 + -0.066959000000000005;
        $7092 = +HEAPF64[$60>>3];
        $7093 = $7091 - $7092;
        $7094 = $7082 * 0.20000000000000001;
        $7095 = $7094 + $7093;
        $7096 = $7079 * 0.20000000000000001;
        $7097 = $7096 + $7095;
        $7098 = (+__Z5IKabsd($7088));
        $7099 = $7098 < 9.9999999999999995E-7;
        do {
         if ($7099) {
          $7100 = 0.10000000000000001 - $7079;
          $7101 = $7100 - $7082;
          $7102 = (+__Z5IKabsd($7101));
          $7103 = $7102 < 9.9999999999999995E-7;
          if (!($7103)) {
           break;
          }
          $7104 = (+__Z5IKabsd($7097));
          $7105 = $7104 < 9.9999999999999995E-7;
          if (!($7105)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $7106 = +HEAPF64[$81>>3];
          $7107 = $7106 * -3.1152647975077898;
          $7108 = +HEAPF64[$45>>3];
          $7109 = $7107 * $7108;
          $7110 = +HEAPF64[$43>>3];
          $7111 = $7110 * 3.1152647975077898;
          $7112 = +HEAPF64[$82>>3];
          $7113 = $7111 * $7112;
          $7114 = $7109 + $7113;
          $7115 = (+__Z5IKabsd($7114));
          $7116 = $7115 < 1.9999999999999999E-6;
          do {
           if ($7116) {
            $7117 = +HEAPF64[$47>>3];
            $7118 = $7117 * 3.1152647975077898;
            $7119 = $7118 + -1.2461059190031201;
            $7120 = (+__Z5IKabsd($7119));
            $7121 = $7120 < 1.9999999999999999E-6;
            if (!($7121)) {
             break;
            }
            $7122 = (+__Z5IKsqrd($7114));
            $7123 = (+__Z5IKsqrd($7119));
            $7124 = $7122 + $7123;
            $7125 = $7124 + -1.0;
            $7126 = (+__Z5IKabsd($7125));
            $7127 = !($7126 <= 1.9999999999999999E-6);
            if (!($7127)) {
             break L15;
            }
           }
          } while(0);
          $7128 = +HEAPF64[$81>>3];
          $7129 = $7128 * -3.1152647975077898;
          $7130 = +HEAPF64[$45>>3];
          $7131 = $7129 * $7130;
          $7132 = +HEAPF64[$43>>3];
          $7133 = $7132 * 3.1152647975077898;
          $7134 = +HEAPF64[$82>>3];
          $7135 = $7133 * $7134;
          $7136 = $7131 + $7135;
          $7137 = +HEAPF64[$47>>3];
          $7138 = $7137 * 3.1152647975077898;
          $7139 = $7138 + -1.2461059190031201;
          $7140 = (+__Z7IKatan2dd($7136,$7139));
          $7141 = (+__Z5IKsind($7140));
          $7142 = (+__Z5IKcosd($7140));
          $7143 = $7140 > 3.14159265358979;
          do {
           if ($7143) {
            $7144 = $7140 + -6.2831853071795898;
            $7147 = $7144;
           } else {
            $7145 = $7140 < -3.14159265358979;
            if (!($7145)) {
             $7147 = $7140;
             break;
            }
            $7146 = $7140 + 6.2831853071795898;
            $7147 = $7146;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $7147;
          HEAPF64[$275>>3] = $7142;
          HEAPF64[$276>>3] = $7141;
          $7148 = +HEAPF64[$7>>3];
          $7149 = (+__Z5IKcosd($7148));
          $7150 = $7149 * 0.32100000000000001;
          $7151 = -0.40000000000000002 - $7150;
          $7152 = +HEAPF64[$47>>3];
          $7153 = $7152 + $7151;
          $7154 = +HEAPF64[$81>>3];
          $7155 = +HEAPF64[$45>>3];
          $7156 = $7154 * $7155;
          $7157 = (+__Z5IKsind($7148));
          $7158 = $7157 * -0.32100000000000001;
          $7159 = $7158 - $7156;
          $7160 = +HEAPF64[$43>>3];
          $7161 = +HEAPF64[$82>>3];
          $7162 = $7160 * $7161;
          $7163 = $7159 + $7162;
          $7164 = (+__Z5IKabsd($7153));
          $7165 = $7164 > 5.0000000000000004E-6;
          if ($7165) {
           break L15;
          }
          $7166 = $7152 * 0.80000000000000004;
          $7167 = 0.32000000000000001 - $7166;
          $7168 = $7149 * 0.25679999999999997;
          $7169 = $7168 + $7167;
          $7170 = (+__Z5IKabsd($7169));
          $7171 = $7170 > 5.0000000000000004E-6;
          if ($7171) {
           break L15;
          }
          $7172 = (+__Z5IKabsd($7163));
          $7173 = $7172 > 5.0000000000000004E-6;
          if ($7173) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $7174 = +HEAPF64[$81>>3];
        $7175 = +HEAPF64[$45>>3];
        $7176 = +HEAPF64[$43>>3];
        $7177 = +HEAPF64[$82>>3];
        $7178 = +HEAPF64[$22>>3];
        $7179 = (+__Z5IKabsd($7178));
        $7180 = $7179 + 3.14159265358979;
        $7181 = (+__Z6IKfmoddd($7180,6.2831853071795898));
        $7182 = $7181 + -3.14159265358979;
        $7183 = +HEAPF64[$47>>3];
        $7184 = $7183 * 0.80000000000000004;
        $7185 = $7184 + -0.066959000000000005;
        $7186 = +HEAPF64[$60>>3];
        $7187 = $7185 - $7186;
        $7188 = $7175 * 0.20000000000000001;
        $7189 = $7188 * $7177;
        $7190 = $7189 + $7187;
        $7191 = $7174 * 0.20000000000000001;
        $7192 = $7191 * $7176;
        $7193 = $7192 + $7190;
        $7194 = (+__Z5IKabsd($7182));
        $7195 = $7194 < 9.9999999999999995E-7;
        do {
         if ($7195) {
          $7196 = $7176 * $7177;
          $7197 = $7174 * $7175;
          $7198 = $7196 - $7197;
          $7199 = (+__Z5IKabsd($7198));
          $7200 = $7199 < 9.9999999999999995E-7;
          if (!($7200)) {
           break;
          }
          $7201 = (+__Z5IKabsd($7193));
          $7202 = $7201 < 9.9999999999999995E-7;
          if (!($7202)) {
           break;
          }
          HEAP8[$10>>0] = 1;
          $7203 = +HEAPF64[$81>>3];
          $7204 = $7203 * 3.1152647975077898;
          $7205 = +HEAPF64[$43>>3];
          $7206 = $7204 * $7205;
          $7207 = $7206 + -0.31152647975077902;
          $7208 = +HEAPF64[$45>>3];
          $7209 = $7208 * 3.1152647975077898;
          $7210 = +HEAPF64[$82>>3];
          $7211 = $7209 * $7210;
          $7212 = $7207 + $7211;
          $7213 = (+__Z5IKabsd($7212));
          $7214 = $7213 < 1.9999999999999999E-6;
          do {
           if ($7214) {
            $7215 = +HEAPF64[$47>>3];
            $7216 = $7215 * 3.1152647975077898;
            $7217 = $7216 + -1.2461059190031201;
            $7218 = (+__Z5IKabsd($7217));
            $7219 = $7218 < 1.9999999999999999E-6;
            if (!($7219)) {
             break;
            }
            $7220 = (+__Z5IKsqrd($7212));
            $7221 = (+__Z5IKsqrd($7217));
            $7222 = $7220 + $7221;
            $7223 = $7222 + -1.0;
            $7224 = (+__Z5IKabsd($7223));
            $7225 = !($7224 <= 1.9999999999999999E-6);
            if (!($7225)) {
             break L15;
            }
           }
          } while(0);
          $7226 = +HEAPF64[$81>>3];
          $7227 = $7226 * 3.1152647975077898;
          $7228 = +HEAPF64[$43>>3];
          $7229 = $7227 * $7228;
          $7230 = $7229 + -0.31152647975077902;
          $7231 = +HEAPF64[$45>>3];
          $7232 = $7231 * 3.1152647975077898;
          $7233 = +HEAPF64[$82>>3];
          $7234 = $7232 * $7233;
          $7235 = $7230 + $7234;
          $7236 = +HEAPF64[$47>>3];
          $7237 = $7236 * 3.1152647975077898;
          $7238 = $7237 + -1.2461059190031201;
          $7239 = (+__Z7IKatan2dd($7235,$7238));
          $7240 = (+__Z5IKsind($7239));
          $7241 = (+__Z5IKcosd($7239));
          $7242 = $7239 > 3.14159265358979;
          do {
           if ($7242) {
            $7243 = $7239 + -6.2831853071795898;
            $7246 = $7243;
           } else {
            $7244 = $7239 < -3.14159265358979;
            if (!($7244)) {
             $7246 = $7239;
             break;
            }
            $7245 = $7239 + 6.2831853071795898;
            $7246 = $7245;
           }
          } while(0);
          HEAP8[$8>>0] = 0;
          HEAP8[$9>>0] = -1;
          HEAPF64[$7>>3] = $7246;
          HEAPF64[$277>>3] = $7241;
          HEAPF64[$278>>3] = $7240;
          $7247 = +HEAPF64[$7>>3];
          $7248 = (+__Z5IKcosd($7247));
          $7249 = $7248 * 0.32100000000000001;
          $7250 = -0.40000000000000002 - $7249;
          $7251 = +HEAPF64[$47>>3];
          $7252 = $7251 + $7250;
          $7253 = +HEAPF64[$45>>3];
          $7254 = +HEAPF64[$82>>3];
          $7255 = $7253 * $7254;
          $7256 = 0.10000000000000001 - $7255;
          $7257 = +HEAPF64[$81>>3];
          $7258 = +HEAPF64[$43>>3];
          $7259 = $7257 * $7258;
          $7260 = $7256 - $7259;
          $7261 = (+__Z5IKsind($7247));
          $7262 = $7261 * 0.32100000000000001;
          $7263 = $7260 + $7262;
          $7264 = (+__Z5IKabsd($7252));
          $7265 = $7264 > 5.0000000000000004E-6;
          if ($7265) {
           break L15;
          }
          $7266 = $7251 * 0.80000000000000004;
          $7267 = 0.32000000000000001 - $7266;
          $7268 = $7248 * 0.25679999999999997;
          $7269 = $7268 + $7267;
          $7270 = (+__Z5IKabsd($7269));
          $7271 = $7270 > 5.0000000000000004E-6;
          if ($7271) {
           break L15;
          }
          $7272 = (+__Z5IKabsd($7263));
          $7273 = $7272 > 5.0000000000000004E-6;
          if ($7273) {
           break L15;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L15;
         }
        } while(0);
        $7274 = +HEAPF64[$81>>3];
        $7275 = +HEAPF64[$45>>3];
        $7276 = $7274 * $7275;
        $7277 = +HEAPF64[$43>>3];
        $7278 = +HEAPF64[$82>>3];
        $7279 = $7277 * $7278;
        $7280 = +HEAPF64[$22>>3];
        $7281 = $7280 + -3.14159265358979;
        $7282 = (+__Z5IKabsd($7281));
        $7283 = $7282 + 3.14159265358979;
        $7284 = (+__Z6IKfmoddd($7283,6.2831853071795898));
        $7285 = $7284 + -3.14159265358979;
        $7286 = +HEAPF64[$47>>3];
        $7287 = $7286 * 0.80000000000000004;
        $7288 = $7287 + -0.066959000000000005;
        $7289 = +HEAPF64[$60>>3];
        $7290 = $7288 - $7289;
        $7291 = $7275 * 0.20000000000000001;
        $7292 = $7291 * $7278;
        $7293 = $7292 + $7290;
        $7294 = $7274 * 0.20000000000000001;
        $7295 = $7294 * $7277;
        $7296 = $7295 + $7293;
        $7297 = $7276 - $7279;
        $7298 = (+__Z5IKabsd($7285));
        $7299 = $7298 < 9.9999999999999995E-7;
        if (!($7299)) {
         break L15;
        }
        $7300 = $7279 - $7276;
        $7301 = (+__Z5IKabsd($7300));
        $7302 = $7301 < 9.9999999999999995E-7;
        if (!($7302)) {
         break L15;
        }
        $7303 = (+__Z5IKabsd($7296));
        $7304 = $7303 < 9.9999999999999995E-7;
        if (!($7304)) {
         break L15;
        }
        $7305 = (+__Z5IKabsd($7297));
        $7306 = $7305 < 9.9999999999999995E-7;
        if (!($7306)) {
         break L15;
        }
        HEAP8[$10>>0] = 1;
        $7307 = +HEAPF64[$81>>3];
        $7308 = $7307 * -3.1152647975077898;
        $7309 = +HEAPF64[$43>>3];
        $7310 = $7308 * $7309;
        $7311 = $7310 + 0.31152647975077902;
        $7312 = +HEAPF64[$45>>3];
        $7313 = $7312 * -3.1152647975077898;
        $7314 = +HEAPF64[$82>>3];
        $7315 = $7313 * $7314;
        $7316 = $7311 + $7315;
        $7317 = (+__Z5IKabsd($7316));
        $7318 = $7317 < 1.9999999999999999E-6;
        do {
         if ($7318) {
          $7319 = +HEAPF64[$47>>3];
          $7320 = $7319 * 3.1152647975077898;
          $7321 = $7320 + -1.2461059190031201;
          $7322 = (+__Z5IKabsd($7321));
          $7323 = $7322 < 1.9999999999999999E-6;
          if (!($7323)) {
           break;
          }
          $7324 = (+__Z5IKsqrd($7316));
          $7325 = (+__Z5IKsqrd($7321));
          $7326 = $7324 + $7325;
          $7327 = $7326 + -1.0;
          $7328 = (+__Z5IKabsd($7327));
          $7329 = !($7328 <= 1.9999999999999999E-6);
          if (!($7329)) {
           break L15;
          }
         }
        } while(0);
        $7330 = +HEAPF64[$81>>3];
        $7331 = $7330 * -3.1152647975077898;
        $7332 = +HEAPF64[$43>>3];
        $7333 = $7331 * $7332;
        $7334 = $7333 + 0.31152647975077902;
        $7335 = +HEAPF64[$45>>3];
        $7336 = $7335 * -3.1152647975077898;
        $7337 = +HEAPF64[$82>>3];
        $7338 = $7336 * $7337;
        $7339 = $7334 + $7338;
        $7340 = +HEAPF64[$47>>3];
        $7341 = $7340 * 3.1152647975077898;
        $7342 = $7341 + -1.2461059190031201;
        $7343 = (+__Z7IKatan2dd($7339,$7342));
        $7344 = (+__Z5IKsind($7343));
        $7345 = (+__Z5IKcosd($7343));
        $7346 = $7343 > 3.14159265358979;
        do {
         if ($7346) {
          $7347 = $7343 + -6.2831853071795898;
          $7350 = $7347;
         } else {
          $7348 = $7343 < -3.14159265358979;
          if (!($7348)) {
           $7350 = $7343;
           break;
          }
          $7349 = $7343 + 6.2831853071795898;
          $7350 = $7349;
         }
        } while(0);
        HEAP8[$8>>0] = 0;
        HEAP8[$9>>0] = -1;
        HEAPF64[$7>>3] = $7350;
        HEAPF64[$279>>3] = $7345;
        HEAPF64[$280>>3] = $7344;
        $7351 = +HEAPF64[$7>>3];
        $7352 = (+__Z5IKcosd($7351));
        $7353 = $7352 * 0.32100000000000001;
        $7354 = -0.40000000000000002 - $7353;
        $7355 = +HEAPF64[$47>>3];
        $7356 = $7355 + $7354;
        $7357 = +HEAPF64[$45>>3];
        $7358 = +HEAPF64[$82>>3];
        $7359 = $7357 * $7358;
        $7360 = 0.10000000000000001 - $7359;
        $7361 = +HEAPF64[$81>>3];
        $7362 = +HEAPF64[$43>>3];
        $7363 = $7361 * $7362;
        $7364 = $7360 - $7363;
        $7365 = (+__Z5IKsind($7351));
        $7366 = $7365 * 0.32100000000000001;
        $7367 = $7364 - $7366;
        $7368 = (+__Z5IKabsd($7356));
        $7369 = $7368 > 5.0000000000000004E-6;
        if ($7369) {
         break L15;
        }
        $7370 = $7355 * 0.80000000000000004;
        $7371 = 0.32000000000000001 - $7370;
        $7372 = $7352 * 0.25679999999999997;
        $7373 = $7372 + $7371;
        $7374 = (+__Z5IKabsd($7373));
        $7375 = $7374 > 5.0000000000000004E-6;
        if ($7375) {
         break L15;
        }
        $7376 = (+__Z5IKabsd($7367));
        $7377 = $7376 > 5.0000000000000004E-6;
        if ($7377) {
         break L15;
        }
        __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
        break L15;
       }
      } while(0);
      $7588 = +HEAPF64[$81>>3];
      $7589 = +HEAPF64[$43>>3];
      $7590 = $7588 * $7589;
      $7591 = +HEAPF64[$223>>3];
      $7592 = $7591 * 0.80000000000000004;
      $7593 = +HEAPF64[$45>>3];
      $7594 = +HEAPF64[$82>>3];
      $7595 = $7593 * $7594;
      $7596 = +HEAPF64[$224>>3];
      $7597 = +HEAPF64[$22>>3];
      $7598 = $7597 + -1.5707963267949001;
      $7599 = (+__Z5IKabsd($7598));
      $7600 = $7599 + 3.14159265358979;
      $7601 = (+__Z6IKfmoddd($7600,6.2831853071795898));
      $7602 = $7601 + -3.14159265358979;
      $7603 = +HEAPF64[$47>>3];
      $7604 = $7595 * $7596;
      $7605 = $7590 * $7596;
      $7606 = -$7605;
      $7607 = $7606 - $7604;
      $7608 = $7596 * 0.10000000000000001;
      $7609 = $7608 + $7607;
      $7610 = $7591 * $7603;
      $7611 = $7609 - $7610;
      $7612 = (+__Z5IKabsd($7602));
      $7613 = $7612 < 9.9999999999999995E-7;
      do {
       if ($7613) {
        $7614 = +HEAPF64[$60>>3];
        $7615 = $7591 * 0.080000000000000002;
        $7616 = -0.066959000000000005 - $7615;
        $7617 = $7616 - $7614;
        $7618 = $7590 * $7592;
        $7619 = $7618 + $7617;
        $7620 = $7592 * $7595;
        $7621 = $7620 + $7619;
        $7622 = $7590 * 0.20000000000000001;
        $7623 = $7622 + $7621;
        $7624 = $7595 * 0.20000000000000001;
        $7625 = $7624 + $7623;
        $7626 = $7603 * -0.80000000000000004;
        $7627 = $7596 * $7626;
        $7628 = $7627 + $7625;
        $7629 = (+__Z5IKabsd($7628));
        $7630 = $7629 < 9.9999999999999995E-7;
        if (!($7630)) {
         break;
        }
        $7631 = (+__Z5IKabsd($7611));
        $7632 = $7631 < 9.9999999999999995E-7;
        if (!($7632)) {
         break;
        }
        HEAP8[$10>>0] = 1;
        $7633 = +HEAPF64[$81>>3];
        $7634 = $7633 * 3.1152647975077898;
        $7635 = +HEAPF64[$45>>3];
        $7636 = $7634 * $7635;
        $7637 = +HEAPF64[$43>>3];
        $7638 = $7637 * -3.1152647975077898;
        $7639 = +HEAPF64[$82>>3];
        $7640 = $7638 * $7639;
        $7641 = $7636 + $7640;
        $7642 = (+__Z5IKabsd($7641));
        $7643 = $7642 < 1.9999999999999999E-6;
        do {
         if ($7643) {
          $7644 = +HEAPF64[$60>>3];
          $7645 = $7644 * 3.8940809968847399;
          $7646 = $7645 + -0.98536214953270995;
          $7647 = $7635 * -0.77881619937694702;
          $7648 = $7647 * $7639;
          $7649 = $7648 + $7646;
          $7650 = $7633 * -0.77881619937694702;
          $7651 = $7650 * $7637;
          $7652 = $7651 + $7649;
          $7653 = (+__Z5IKabsd($7652));
          $7654 = $7653 < 1.9999999999999999E-6;
          if (!($7654)) {
           break;
          }
          $7655 = (+__Z5IKsqrd($7641));
          $7656 = (+__Z5IKsqrd($7652));
          $7657 = $7655 + $7656;
          $7658 = $7657 + -1.0;
          $7659 = (+__Z5IKabsd($7658));
          $7660 = !($7659 <= 1.9999999999999999E-6);
          if (!($7660)) {
           break L15;
          }
         }
        } while(0);
        $7661 = +HEAPF64[$81>>3];
        $7662 = $7661 * 3.1152647975077898;
        $7663 = +HEAPF64[$45>>3];
        $7664 = $7662 * $7663;
        $7665 = +HEAPF64[$43>>3];
        $7666 = $7665 * -3.1152647975077898;
        $7667 = +HEAPF64[$82>>3];
        $7668 = $7666 * $7667;
        $7669 = $7664 + $7668;
        $7670 = +HEAPF64[$60>>3];
        $7671 = $7670 * 3.8940809968847399;
        $7672 = $7671 + -0.98536214953270995;
        $7673 = $7663 * -0.77881619937694702;
        $7674 = $7673 * $7667;
        $7675 = $7674 + $7672;
        $7676 = $7661 * -0.77881619937694702;
        $7677 = $7676 * $7665;
        $7678 = $7677 + $7675;
        $7679 = (+__Z7IKatan2dd($7669,$7678));
        $7680 = (+__Z5IKsind($7679));
        $7681 = (+__Z5IKcosd($7679));
        $7682 = $7679 > 3.14159265358979;
        do {
         if ($7682) {
          $7683 = $7679 + -6.2831853071795898;
          $7686 = $7683;
         } else {
          $7684 = $7679 < -3.14159265358979;
          if (!($7684)) {
           $7686 = $7679;
           break;
          }
          $7685 = $7679 + 6.2831853071795898;
          $7686 = $7685;
         }
        } while(0);
        HEAP8[$8>>0] = 0;
        HEAP8[$9>>0] = -1;
        HEAPF64[$7>>3] = $7686;
        HEAPF64[$287>>3] = $7681;
        HEAPF64[$288>>3] = $7680;
        $7687 = +HEAPF64[$7>>3];
        $7688 = (+__Z5IKcosd($7687));
        $7689 = +HEAPF64[$45>>3];
        $7690 = +HEAPF64[$81>>3];
        $7691 = +HEAPF64[$43>>3];
        $7692 = $7690 * $7691;
        $7693 = $7688 * 0.32100000000000001;
        $7694 = +HEAPF64[$224>>3];
        $7695 = $7694 * 0.40000000000000002;
        $7696 = $7693 * $7694;
        $7697 = $7695 + $7696;
        $7698 = +HEAPF64[$47>>3];
        $7699 = $7698 + $7697;
        $7700 = +HEAPF64[$82>>3];
        $7701 = $7692 * 0.20000000000000001;
        $7702 = $7701 + 0.25304100000000002;
        $7703 = $7688 * 0.25679999999999997;
        $7704 = $7703 + $7702;
        $7705 = +HEAPF64[$60>>3];
        $7706 = $7704 - $7705;
        $7707 = $7689 * 0.20000000000000001;
        $7708 = $7707 * $7700;
        $7709 = $7708 + $7706;
        $7710 = $7689 * $7700;
        $7711 = 0.10000000000000001 - $7710;
        $7712 = +HEAPF64[$223>>3];
        $7713 = $7712 * 0.40000000000000002;
        $7714 = $7711 + $7713;
        $7715 = $7693 * $7712;
        $7716 = $7715 + $7714;
        $7717 = $7716 - $7692;
        $7718 = $7693 + 0.40000000000000002;
        $7719 = -$7712;
        $7720 = $7700 * $7719;
        $7721 = $7689 * $7720;
        $7722 = $7718 + $7721;
        $7723 = $7692 * $7719;
        $7724 = $7723 + $7722;
        $7725 = $7712 * 0.10000000000000001;
        $7726 = $7725 + $7724;
        $7727 = $7694 * $7698;
        $7728 = $7727 + $7726;
        $7729 = (+__Z5IKabsd($7699));
        $7730 = $7729 > 5.0000000000000004E-6;
        if ($7730) {
         break L15;
        }
        $7731 = (+__Z5IKsind($7687));
        $7732 = $7691 * $7700;
        $7733 = $7689 * $7690;
        $7734 = $7732 - $7733;
        $7735 = $7731 * 0.32100000000000001;
        $7736 = $7734 + $7735;
        $7737 = (+__Z5IKabsd($7736));
        $7738 = $7737 > 5.0000000000000004E-6;
        if ($7738) {
         break L15;
        }
        $7739 = (+__Z5IKabsd($7709));
        $7740 = $7739 > 5.0000000000000004E-6;
        if ($7740) {
         break L15;
        }
        $7741 = (+__Z5IKabsd($7717));
        $7742 = $7741 > 5.0000000000000004E-6;
        if ($7742) {
         break L15;
        }
        $7743 = (+__Z5IKabsd($7728));
        $7744 = $7743 > 5.0000000000000004E-6;
        if ($7744) {
         break L15;
        }
        __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
        break L15;
       }
      } while(0);
      $7745 = +HEAPF64[$81>>3];
      $7746 = +HEAPF64[$43>>3];
      $7747 = $7745 * $7746;
      $7748 = +HEAPF64[$223>>3];
      $7749 = $7748 * 0.80000000000000004;
      $7750 = +HEAPF64[$45>>3];
      $7751 = +HEAPF64[$82>>3];
      $7752 = $7750 * $7751;
      $7753 = +HEAPF64[$22>>3];
      $7754 = $7753 + 1.5707963267949001;
      $7755 = (+__Z5IKabsd($7754));
      $7756 = $7755 + 3.14159265358979;
      $7757 = (+__Z6IKfmoddd($7756,6.2831853071795898));
      $7758 = $7757 + -3.14159265358979;
      $7759 = +HEAPF64[$47>>3];
      $7760 = +HEAPF64[$224>>3];
      $7761 = $7747 * $7760;
      $7762 = $7752 * $7760;
      $7763 = $7761 + $7762;
      $7764 = $7748 * $7759;
      $7765 = $7764 + $7763;
      $7766 = $7760 * 0.10000000000000001;
      $7767 = $7765 - $7766;
      $7768 = (+__Z5IKabsd($7758));
      $7769 = $7768 < 9.9999999999999995E-7;
      if (!($7769)) {
       break;
      }
      $7770 = +HEAPF64[$60>>3];
      $7771 = $7747 * 0.20000000000000001;
      $7772 = $7771 + -0.066959000000000005;
      $7773 = $7752 * 0.20000000000000001;
      $7774 = $7772 + $7773;
      $7775 = $7748 * 0.080000000000000002;
      $7776 = $7774 - $7775;
      $7777 = $7776 - $7770;
      $7778 = $7749 * $7752;
      $7779 = $7778 + $7777;
      $7780 = $7759 * -0.80000000000000004;
      $7781 = $7780 * $7760;
      $7782 = $7781 + $7779;
      $7783 = $7747 * $7749;
      $7784 = $7783 + $7782;
      $7785 = (+__Z5IKabsd($7784));
      $7786 = $7785 < 9.9999999999999995E-7;
      if (!($7786)) {
       break;
      }
      $7787 = (+__Z5IKabsd($7767));
      $7788 = $7787 < 9.9999999999999995E-7;
      if (!($7788)) {
       break;
      }
      HEAP8[$10>>0] = 1;
      $7789 = +HEAPF64[$81>>3];
      $7790 = $7789 * -3.1152647975077898;
      $7791 = +HEAPF64[$45>>3];
      $7792 = $7790 * $7791;
      $7793 = +HEAPF64[$43>>3];
      $7794 = $7793 * 3.1152647975077898;
      $7795 = +HEAPF64[$82>>3];
      $7796 = $7794 * $7795;
      $7797 = $7792 + $7796;
      $7798 = (+__Z5IKabsd($7797));
      $7799 = $7798 < 1.9999999999999999E-6;
      do {
       if ($7799) {
        $7800 = +HEAPF64[$60>>3];
        $7801 = $7800 * 3.8940809968847399;
        $7802 = $7801 + -0.98536214953270995;
        $7803 = $7791 * -0.77881619937694702;
        $7804 = $7803 * $7795;
        $7805 = $7804 + $7802;
        $7806 = $7789 * -0.77881619937694702;
        $7807 = $7806 * $7793;
        $7808 = $7807 + $7805;
        $7809 = (+__Z5IKabsd($7808));
        $7810 = $7809 < 1.9999999999999999E-6;
        if (!($7810)) {
         break;
        }
        $7811 = (+__Z5IKsqrd($7797));
        $7812 = (+__Z5IKsqrd($7808));
        $7813 = $7811 + $7812;
        $7814 = $7813 + -1.0;
        $7815 = (+__Z5IKabsd($7814));
        $7816 = !($7815 <= 1.9999999999999999E-6);
        if (!($7816)) {
         break L15;
        }
       }
      } while(0);
      $7817 = +HEAPF64[$81>>3];
      $7818 = $7817 * -3.1152647975077898;
      $7819 = +HEAPF64[$45>>3];
      $7820 = $7818 * $7819;
      $7821 = +HEAPF64[$43>>3];
      $7822 = $7821 * 3.1152647975077898;
      $7823 = +HEAPF64[$82>>3];
      $7824 = $7822 * $7823;
      $7825 = $7820 + $7824;
      $7826 = +HEAPF64[$60>>3];
      $7827 = $7826 * 3.8940809968847399;
      $7828 = $7827 + -0.98536214953270995;
      $7829 = $7819 * -0.77881619937694702;
      $7830 = $7829 * $7823;
      $7831 = $7830 + $7828;
      $7832 = $7817 * -0.77881619937694702;
      $7833 = $7832 * $7821;
      $7834 = $7833 + $7831;
      $7835 = (+__Z7IKatan2dd($7825,$7834));
      $7836 = (+__Z5IKsind($7835));
      $7837 = (+__Z5IKcosd($7835));
      $7838 = $7835 > 3.14159265358979;
      do {
       if ($7838) {
        $7839 = $7835 + -6.2831853071795898;
        $7842 = $7839;
       } else {
        $7840 = $7835 < -3.14159265358979;
        if (!($7840)) {
         $7842 = $7835;
         break;
        }
        $7841 = $7835 + 6.2831853071795898;
        $7842 = $7841;
       }
      } while(0);
      HEAP8[$8>>0] = 0;
      HEAP8[$9>>0] = -1;
      HEAPF64[$7>>3] = $7842;
      HEAPF64[$289>>3] = $7837;
      HEAPF64[$290>>3] = $7836;
      $7843 = +HEAPF64[$7>>3];
      $7844 = (+__Z5IKcosd($7843));
      $7845 = +HEAPF64[$45>>3];
      $7846 = +HEAPF64[$81>>3];
      $7847 = +HEAPF64[$43>>3];
      $7848 = $7846 * $7847;
      $7849 = $7844 * 0.32100000000000001;
      $7850 = +HEAPF64[$224>>3];
      $7851 = $7850 * 0.40000000000000002;
      $7852 = +HEAPF64[$47>>3];
      $7853 = $7851 + $7852;
      $7854 = $7849 * $7850;
      $7855 = $7854 + $7853;
      $7856 = +HEAPF64[$82>>3];
      $7857 = $7844 * 0.25679999999999997;
      $7858 = $7857 + 0.25304100000000002;
      $7859 = +HEAPF64[$60>>3];
      $7860 = $7858 - $7859;
      $7861 = $7848 * 0.20000000000000001;
      $7862 = $7861 + $7860;
      $7863 = $7845 * 0.20000000000000001;
      $7864 = $7863 * $7856;
      $7865 = $7864 + $7862;
      $7866 = $7845 * $7856;
      $7867 = 0.10000000000000001 - $7866;
      $7868 = +HEAPF64[$223>>3];
      $7869 = $7868 * 0.40000000000000002;
      $7870 = $7867 + $7869;
      $7871 = $7870 - $7848;
      $7872 = $7849 * $7868;
      $7873 = $7872 + $7871;
      $7874 = $7849 + 0.40000000000000002;
      $7875 = -$7868;
      $7876 = $7856 * $7875;
      $7877 = $7845 * $7876;
      $7878 = $7874 + $7877;
      $7879 = $7848 * $7875;
      $7880 = $7879 + $7878;
      $7881 = $7868 * 0.10000000000000001;
      $7882 = $7881 + $7880;
      $7883 = $7850 * $7852;
      $7884 = $7883 + $7882;
      $7885 = (+__Z5IKabsd($7855));
      $7886 = $7885 > 5.0000000000000004E-6;
      if ($7886) {
       break;
      }
      $7887 = (+__Z5IKsind($7843));
      $7888 = $7887 * -0.32100000000000001;
      $7889 = $7845 * $7846;
      $7890 = $7888 - $7889;
      $7891 = $7847 * $7856;
      $7892 = $7891 + $7890;
      $7893 = (+__Z5IKabsd($7892));
      $7894 = $7893 > 5.0000000000000004E-6;
      if ($7894) {
       break;
      }
      $7895 = (+__Z5IKabsd($7865));
      $7896 = $7895 > 5.0000000000000004E-6;
      if ($7896) {
       break;
      }
      $7897 = (+__Z5IKabsd($7873));
      $7898 = $7897 > 5.0000000000000004E-6;
      if ($7898) {
       break;
      }
      $7899 = (+__Z5IKabsd($7884));
      $7900 = $7899 > 5.0000000000000004E-6;
      if ($7900) {
       break;
      }
      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
      break;
     }
    }
    $777 = +HEAPF64[$24>>3];
    $778 = (+__Z5IKabsd($777));
    $779 = $778 < 9.9999999999999995E-7;
    if ($779) {
     $780 = +HEAPF64[$22>>3];
     $781 = (+__Z5IKabsd($780));
     $782 = $781 + 3.14159265358979;
     $783 = (+__Z6IKfmoddd($782,6.2831853071795898));
     $784 = $783 + -3.14159265358979;
     $785 = (+__Z5IKabsd($784));
     $786 = $785 < 9.9999999999999995E-7;
     if ($786) {
      $787 = +HEAPF64[$43>>3];
      $788 = +HEAPF64[$82>>3];
      $789 = $787 * $788;
      $790 = +HEAPF64[$81>>3];
      $791 = +HEAPF64[$45>>3];
      $792 = $790 * $791;
      $793 = $789 - $792;
      $794 = (+__Z5IKabsd($793));
      $795 = $794 < 9.9999999999999995E-7;
      if ($795) {
       HEAP16[$j30valid>>1] = 0;
       HEAP8[$10>>0] = 2;
       $796 = +HEAPF64[$60>>3];
       $797 = $796 * 3.8940809968847399;
       $798 = $797 + -0.98536214953270995;
       $799 = +HEAPF64[$45>>3];
       $800 = $799 * -0.77881619937694702;
       $801 = +HEAPF64[$82>>3];
       $802 = $800 * $801;
       $803 = $798 + $802;
       $804 = +HEAPF64[$81>>3];
       $805 = $804 * -0.77881619937694702;
       $806 = +HEAPF64[$43>>3];
       $807 = $805 * $806;
       $808 = $803 + $807;
       HEAPF64[$cj30array>>3] = $808;
       $809 = !($808 >= -1.0000020000000001);
       $810 = !($808 <= 1.0000020000000001);
       $or$cond45 = $809 | $810;
       if ($or$cond45) {
        $819 = (__Z13__DOUBLE_BITSd($808)|0);
        $820 = tempRet0;
        $821 = $820 & 2147483647;
        $822 = ($821>>>0)>(2146435072);
        $823 = ($819>>>0)>(0);
        $824 = ($821|0)==(2146435072);
        $825 = $824 & $823;
        $826 = $822 | $825;
        if ($826) {
         HEAP8[$j30valid>>0] = 1;
         HEAPF64[$cj30array>>3] = 1.0;
         HEAPF64[$sj30array>>3] = 0.0;
         HEAPF64[$j30array>>3] = 0.0;
         $ij30$0726 = 0;
        } else {
         $ij30$0726 = 0;
        }
       } else {
        HEAP8[$84>>0] = 1;
        HEAP8[$j30valid>>0] = 1;
        $811 = +HEAPF64[$cj30array>>3];
        $812 = (+__Z6IKacosd($811));
        HEAPF64[$j30array>>3] = $812;
        $813 = (+__Z5IKsind($812));
        HEAPF64[$sj30array>>3] = $813;
        $814 = +HEAPF64[$cj30array>>3];
        HEAPF64[$85>>3] = $814;
        $815 = +HEAPF64[$j30array>>3];
        $816 = -$815;
        HEAPF64[$86>>3] = $816;
        $817 = +HEAPF64[$sj30array>>3];
        $818 = -$817;
        HEAPF64[$87>>3] = $818;
        $ij30$0726 = 0;
       }
       while(1) {
        $827 = (($j30valid) + ($ij30$0726)|0);
        $828 = HEAP8[$827>>0]|0;
        $829 = ($828<<24>>24)==(0);
        L622: do {
         if (!($829)) {
          $830 = $ij30$0726&255;
          HEAP8[$8>>0] = $830;
          HEAP8[$9>>0] = -1;
          $iij30$0707 = (($ij30$0726) + 1)|0;
          $831 = ($iij30$0707|0)<(2);
          if ($831) {
           $832 = (($sj30array) + ($ij30$0726<<3)|0);
           $833 = (($j30valid) + ($iij30$0707)|0);
           $834 = HEAP8[$833>>0]|0;
           $835 = ($834<<24>>24)==(0);
           if (!($835)) {
            $836 = (($cj30array) + ($ij30$0726<<3)|0);
            $837 = +HEAPF64[$836>>3];
            $838 = (($cj30array) + ($iij30$0707<<3)|0);
            $839 = +HEAPF64[$838>>3];
            $840 = $837 - $839;
            $841 = (+__Z5IKabsd($840));
            $842 = $841 < 9.9999999999999995E-7;
            if ($842) {
             $843 = +HEAPF64[$832>>3];
             $844 = (($sj30array) + ($iij30$0707<<3)|0);
             $845 = +HEAPF64[$844>>3];
             $846 = $843 - $845;
             $847 = (+__Z5IKabsd($846));
             $848 = $847 < 9.9999999999999995E-7;
             if ($848) {
              HEAP8[$833>>0] = 0;
              $849 = $iij30$0707&255;
              HEAP8[$9>>0] = $849;
             }
            }
           }
          }
          $850 = (($j30array) + ($ij30$0726<<3)|0);
          $851 = +HEAPF64[$850>>3];
          HEAPF64[$7>>3] = $851;
          $852 = (($cj30array) + ($ij30$0726<<3)|0);
          $853 = +HEAPF64[$852>>3];
          HEAPF64[$88>>3] = $853;
          $854 = (($sj30array) + ($ij30$0726<<3)|0);
          $855 = +HEAPF64[$854>>3];
          HEAPF64[$89>>3] = $855;
          HEAPF64[$24>>3] = 0.0;
          HEAPF64[$23>>3] = 1.0;
          HEAPF64[$22>>3] = 0.0;
          $856 = +HEAPF64[$88>>3];
          $857 = $856 * 321000.0;
          $858 = +HEAPF64[$45>>3];
          $859 = +HEAPF64[$82>>3];
          $860 = $858 * $859;
          $861 = +HEAPF64[$89>>3];
          $862 = $861 * 321000.0;
          $863 = +HEAPF64[$81>>3];
          $864 = +HEAPF64[$43>>3];
          $865 = $863 * $864;
          $866 = $856 + 1.02430295950156;
          $867 = +HEAPF64[$47>>3];
          $868 = $856 * 256800.0;
          $869 = $868 + 263041.0;
          $870 = (+__Z6IKsignd($869));
          $871 = (+__Z5IKabsd($866));
          $872 = $871 < 9.9999999999999995E-7;
          if (!($872)) {
           $873 = $862 * $867;
           $874 = -4.0E+4 - $873;
           $875 = $860 * 4.0E+5;
           $876 = $875 + $874;
           $877 = $865 * 4.0E+5;
           $878 = $877 + $876;
           $879 = $856 * 32100.0;
           $880 = $878 - $879;
           $881 = $857 * $865;
           $882 = $881 + $880;
           $883 = $857 * $860;
           $884 = $883 + $882;
           $885 = (+__Z5IKabsd($884));
           $886 = $861 * 32100.0;
           $887 = $857 * $867;
           $888 = $886 - $887;
           $889 = $867 * 4.0E+5;
           $890 = $888 - $889;
           $891 = $862 * $865;
           $892 = $890 - $891;
           $893 = $860 * $862;
           $894 = $892 - $893;
           $895 = (+__Z5IKabsd($894));
           $896 = $885 + $895;
           $897 = (+__Z5IKabsd($896));
           $898 = $897 < 9.9999999999999995E-7;
           if (!($898)) {
            $899 = (+__Z5IKabsd($870));
            $900 = $899 < 9.9999999999999995E-7;
            if (!($900)) {
             HEAP8[$6>>0] = 1;
             $1320 = +HEAPF64[$88>>3];
             $1321 = $1320 * 321000.0;
             $1322 = +HEAPF64[$45>>3];
             $1323 = +HEAPF64[$82>>3];
             $1324 = $1322 * $1323;
             $1325 = +HEAPF64[$81>>3];
             $1326 = +HEAPF64[$43>>3];
             $1327 = $1325 * $1326;
             $1328 = +HEAPF64[$89>>3];
             $1329 = $1328 * 321000.0;
             $1330 = $1320 * 256800.0;
             $1331 = $1330 + 263041.0;
             $1332 = (+__Z6IKsignd($1331));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x664,$1332,-1);
             $1333 = HEAP8[$98>>0]|0;
             $1334 = ($1333<<24>>24)==(0);
             if ($1334) {
              break;
             }
             $1335 = $1327 * $1329;
             $1336 = +HEAPF64[$89>>3];
             $1337 = $1336 * 32100.0;
             $1338 = $1337 - $1335;
             $1339 = $1324 * $1329;
             $1340 = $1338 - $1339;
             $1341 = +HEAPF64[$47>>3];
             $1342 = $1341 * 4.0E+5;
             $1343 = $1340 - $1342;
             $1344 = -$1341;
             $1345 = $1321 * $1344;
             $1346 = $1345 + $1343;
             $1347 = +HEAPF64[$88>>3];
             $1348 = $1347 * 32100.0;
             $1349 = -4.0E+4 - $1348;
             $1350 = $1324 * 4.0E+5;
             $1351 = $1350 + $1349;
             $1352 = $1327 * 4.0E+5;
             $1353 = $1352 + $1351;
             $1354 = $1321 * $1324;
             $1355 = $1354 + $1353;
             $1356 = $1321 * $1327;
             $1357 = $1356 + $1355;
             $1358 = $1329 * $1344;
             $1359 = $1358 + $1357;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x665,$1346,$1359,1.9999999999999999E-6);
             $1360 = HEAP8[$99>>0]|0;
             $1361 = ($1360<<24>>24)==(0);
             if ($1361) {
              break;
             }
             $1362 = +HEAPF64[$x664>>3];
             $1363 = $1362 * 1.5707963267949001;
             $1364 = $1363 + -1.5707963267949001;
             $1365 = +HEAPF64[$x665>>3];
             $1366 = $1365 + $1364;
             $1367 = (+__Z5IKsind($1366));
             $1368 = (+__Z5IKcosd($1366));
             $1369 = $1366 > 3.14159265358979;
             do {
              if ($1369) {
               $1370 = $1366 + -6.2831853071795898;
               $1373 = $1370;
              } else {
               $1371 = $1366 < -3.14159265358979;
               if (!($1371)) {
                $1373 = $1366;
                break;
               }
               $1372 = $1366 + 6.2831853071795898;
               $1373 = $1372;
              }
             } while(0);
             HEAP8[$4>>0] = 0;
             HEAP8[$5>>0] = -1;
             HEAPF64[$3>>3] = $1373;
             HEAPF64[$100>>3] = $1368;
             HEAPF64[$101>>3] = $1367;
             $1374 = +HEAPF64[$3>>3];
             $1375 = (+__Z5IKsind($1374));
             $1376 = (+__Z5IKcosd($1374));
             $1377 = +HEAPF64[$88>>3];
             $1378 = $1377 * 0.32100000000000001;
             $1379 = +HEAPF64[$89>>3];
             $1380 = $1379 * 0.32100000000000001;
             $1381 = +HEAPF64[$81>>3];
             $1382 = +HEAPF64[$43>>3];
             $1383 = $1381 * $1382;
             $1384 = +HEAPF64[$45>>3];
             $1385 = +HEAPF64[$82>>3];
             $1386 = $1384 * $1385;
             $1387 = +HEAPF64[$47>>3];
             $1388 = $1375 * $1387;
             $1389 = $1376 * 0.80000000000000004;
             $1390 = $1375 * $1378;
             $1391 = $1376 * $1380;
             $1392 = $1390 + $1391;
             $1393 = $1375 * 0.40000000000000002;
             $1394 = $1393 + $1392;
             $1395 = $1394 + $1387;
             $1396 = $1376 * $1378;
             $1397 = $1396 + 0.10000000000000001;
             $1398 = $1376 * 0.40000000000000002;
             $1399 = $1398 + $1397;
             $1400 = $1399 - $1383;
             $1401 = $1375 * $1380;
             $1402 = $1400 - $1401;
             $1403 = $1402 - $1386;
             $1404 = -$1376;
             $1405 = $1383 * $1404;
             $1406 = $1405 + 0.40000000000000002;
             $1407 = $1376 * 0.10000000000000001;
             $1408 = $1407 + $1406;
             $1409 = $1386 * $1404;
             $1410 = $1408 + $1409;
             $1411 = $1378 + $1410;
             $1412 = $1388 + $1411;
             $1413 = $1376 * 0.080000000000000002;
             $1414 = -0.066959000000000005 - $1413;
             $1415 = $1389 * $1386;
             $1416 = $1414 + $1415;
             $1417 = $1386 * 0.20000000000000001;
             $1418 = $1417 + $1416;
             $1419 = $1383 * 0.20000000000000001;
             $1420 = $1419 + $1418;
             $1421 = $1389 * $1383;
             $1422 = $1421 + $1420;
             $1423 = +HEAPF64[$60>>3];
             $1424 = $1422 - $1423;
             $1425 = $1388 * 0.80000000000000004;
             $1426 = $1424 - $1425;
             $1427 = (+__Z5IKabsd($1395));
             $1428 = $1427 > 5.0000000000000004E-6;
             if ($1428) {
              break;
             }
             $1429 = $1375 * $1386;
             $1430 = $1375 * $1383;
             $1431 = $1430 + $1429;
             $1432 = $1376 * $1387;
             $1433 = $1432 + $1431;
             $1434 = $1380 + $1433;
             $1435 = $1375 * 0.10000000000000001;
             $1436 = $1434 - $1435;
             $1437 = (+__Z5IKabsd($1436));
             $1438 = $1437 > 5.0000000000000004E-6;
             if ($1438) {
              break;
             }
             $1439 = (+__Z5IKabsd($1403));
             $1440 = $1439 > 5.0000000000000004E-6;
             if ($1440) {
              break;
             }
             $1441 = (+__Z5IKabsd($1412));
             $1442 = $1441 > 5.0000000000000004E-6;
             if ($1442) {
              break;
             }
             $1443 = (+__Z5IKabsd($1426));
             $1444 = $1443 > 5.0000000000000004E-6;
             if ($1444) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break;
            }
           }
          }
          HEAPF64[$24>>3] = 0.0;
          HEAPF64[$23>>3] = 1.0;
          HEAPF64[$22>>3] = 0.0;
          $901 = +HEAPF64[$47>>3];
          $902 = +HEAPF64[$89>>3];
          $903 = $901 * $902;
          $904 = +HEAPF64[$81>>3];
          $905 = +HEAPF64[$43>>3];
          $906 = $904 * $905;
          $907 = +HEAPF64[$45>>3];
          $908 = +HEAPF64[$82>>3];
          $909 = $907 * $908;
          $910 = +HEAPF64[$88>>3];
          $911 = $910 * 10.0;
          $912 = $910 * 321.0;
          $913 = $901 * 1000.0;
          $914 = -$906;
          $915 = $911 * $914;
          $916 = $915 + 1.2461059190031201;
          $917 = -$909;
          $918 = $911 * $917;
          $919 = $918 + $916;
          $920 = $910 + $919;
          $921 = $903 * 10.0;
          $922 = $920 - $921;
          $923 = $909 * 12.4610591900312;
          $924 = $922 - $923;
          $925 = $906 * 12.4610591900312;
          $926 = $924 - $925;
          $927 = $909 * 400.0;
          $928 = 40.0 - $927;
          $929 = $912 * $914;
          $930 = $928 + $929;
          $931 = $912 * $917;
          $932 = $931 + $930;
          $933 = $906 * 400.0;
          $934 = $932 - $933;
          $935 = $910 * 32.100000000000001;
          $936 = $935 + $934;
          $937 = $903 * 321.0;
          $938 = $936 - $937;
          $939 = (+__Z6IKsignd($938));
          $940 = (+__Z5IKabsd($926));
          $941 = $940 < 9.9999999999999995E-7;
          do {
           if (!($941)) {
            $942 = $901 * $913;
            $943 = $942 + -160.0;
            $944 = $910 * $910;
            $945 = $944 * 103.041;
            $946 = $943 - $945;
            $947 = $910 * 256.80000000000001;
            $948 = $946 - $947;
            $949 = (+__Z5IKabsd($948));
            $950 = $901 * 100.0;
            $951 = $902 * 128.40000000000001;
            $952 = $951 - $950;
            $953 = $913 * $906;
            $954 = $952 + $953;
            $955 = $913 * $909;
            $956 = $954 + $955;
            $957 = $910 * 103.041;
            $958 = $902 * $957;
            $959 = $956 + $958;
            $960 = (+__Z5IKabsd($959));
            $961 = $949 + $960;
            $962 = (+__Z5IKabsd($961));
            $963 = $962 < 9.9999999999999995E-7;
            if (!($963)) {
             $964 = (+__Z5IKabsd($939));
             $965 = $964 < 9.9999999999999995E-7;
             if ($965) {
              break;
             }
             HEAP8[$6>>0] = 1;
             $1187 = +HEAPF64[$88>>3];
             $1188 = $1187 * 321.0;
             $1189 = +HEAPF64[$45>>3];
             $1190 = +HEAPF64[$82>>3];
             $1191 = $1189 * $1190;
             $1192 = +HEAPF64[$81>>3];
             $1193 = +HEAPF64[$43>>3];
             $1194 = $1192 * $1193;
             $1195 = +HEAPF64[$47>>3];
             $1196 = $1195 * 1000.0;
             $1197 = $1195 * -321.0;
             $1198 = +HEAPF64[$89>>3];
             $1199 = $1197 * $1198;
             $1200 = $1199 + 40.0;
             $1201 = $1191 * 400.0;
             $1202 = $1200 - $1201;
             $1203 = $1194 * 400.0;
             $1204 = $1202 - $1203;
             $1205 = -$1188;
             $1206 = $1191 * $1205;
             $1207 = $1206 + $1204;
             $1208 = $1194 * $1205;
             $1209 = $1208 + $1207;
             $1210 = $1187 * 32.100000000000001;
             $1211 = $1210 + $1209;
             $1212 = (+__Z6IKsignd($1211));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x649,$1212,-1);
             $1213 = HEAP8[$94>>0]|0;
             $1214 = ($1213<<24>>24)==(0);
             if ($1214) {
              break L622;
             }
             $1215 = +HEAPF64[$47>>3];
             $1216 = $1215 * 100.0;
             $1217 = +HEAPF64[$89>>3];
             $1218 = $1217 * 128.40000000000001;
             $1219 = $1218 - $1216;
             $1220 = $1191 * $1196;
             $1221 = $1220 + $1219;
             $1222 = +HEAPF64[$88>>3];
             $1223 = $1222 * 103.041;
             $1224 = $1217 * $1223;
             $1225 = $1221 + $1224;
             $1226 = $1194 * $1196;
             $1227 = $1226 + $1225;
             $1228 = $1196 * $1215;
             $1229 = $1228 + -160.0;
             $1230 = $1222 * $1222;
             $1231 = $1230 * 103.041;
             $1232 = $1229 - $1231;
             $1233 = $1222 * 256.80000000000001;
             $1234 = $1232 - $1233;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x650,$1227,$1234,1.9999999999999999E-6);
             $1235 = HEAP8[$95>>0]|0;
             $1236 = ($1235<<24>>24)==(0);
             if ($1236) {
              break L622;
             }
             $1237 = +HEAPF64[$x649>>3];
             $1238 = $1237 * 1.5707963267949001;
             $1239 = $1238 + -1.5707963267949001;
             $1240 = +HEAPF64[$x650>>3];
             $1241 = $1240 + $1239;
             $1242 = (+__Z5IKsind($1241));
             $1243 = (+__Z5IKcosd($1241));
             $1244 = $1241 > 3.14159265358979;
             do {
              if ($1244) {
               $1245 = $1241 + -6.2831853071795898;
               $1248 = $1245;
              } else {
               $1246 = $1241 < -3.14159265358979;
               if (!($1246)) {
                $1248 = $1241;
                break;
               }
               $1247 = $1241 + 6.2831853071795898;
               $1248 = $1247;
              }
             } while(0);
             HEAP8[$4>>0] = 0;
             HEAP8[$5>>0] = -1;
             HEAPF64[$3>>3] = $1248;
             HEAPF64[$96>>3] = $1243;
             HEAPF64[$97>>3] = $1242;
             $1249 = +HEAPF64[$3>>3];
             $1250 = (+__Z5IKsind($1249));
             $1251 = (+__Z5IKcosd($1249));
             $1252 = +HEAPF64[$88>>3];
             $1253 = $1252 * 0.32100000000000001;
             $1254 = +HEAPF64[$89>>3];
             $1255 = $1254 * 0.32100000000000001;
             $1256 = +HEAPF64[$81>>3];
             $1257 = +HEAPF64[$43>>3];
             $1258 = $1256 * $1257;
             $1259 = +HEAPF64[$45>>3];
             $1260 = +HEAPF64[$82>>3];
             $1261 = $1259 * $1260;
             $1262 = +HEAPF64[$47>>3];
             $1263 = $1250 * $1262;
             $1264 = $1251 * 0.80000000000000004;
             $1265 = $1251 * $1255;
             $1266 = $1250 * $1253;
             $1267 = $1266 + $1265;
             $1268 = $1250 * 0.40000000000000002;
             $1269 = $1268 + $1267;
             $1270 = $1269 + $1262;
             $1271 = $1250 * $1255;
             $1272 = 0.10000000000000001 - $1271;
             $1273 = $1272 - $1258;
             $1274 = $1251 * $1253;
             $1275 = $1274 + $1273;
             $1276 = $1275 - $1261;
             $1277 = $1251 * 0.40000000000000002;
             $1278 = $1277 + $1276;
             $1279 = $1253 + 0.40000000000000002;
             $1280 = $1279 + $1263;
             $1281 = $1251 * 0.10000000000000001;
             $1282 = $1281 + $1280;
             $1283 = -$1251;
             $1284 = $1261 * $1283;
             $1285 = $1284 + $1282;
             $1286 = $1258 * $1283;
             $1287 = $1286 + $1285;
             $1288 = $1263 * 0.80000000000000004;
             $1289 = -0.066959000000000005 - $1288;
             $1290 = +HEAPF64[$60>>3];
             $1291 = $1289 - $1290;
             $1292 = $1264 * $1261;
             $1293 = $1292 + $1291;
             $1294 = $1264 * $1258;
             $1295 = $1294 + $1293;
             $1296 = $1251 * 0.080000000000000002;
             $1297 = $1295 - $1296;
             $1298 = $1261 * 0.20000000000000001;
             $1299 = $1298 + $1297;
             $1300 = $1258 * 0.20000000000000001;
             $1301 = $1300 + $1299;
             $1302 = (+__Z5IKabsd($1270));
             $1303 = $1302 > 5.0000000000000004E-6;
             if ($1303) {
              break L622;
             }
             $1304 = $1250 * 0.10000000000000001;
             $1305 = $1251 * $1262;
             $1306 = $1305 - $1304;
             $1307 = $1250 * $1261;
             $1308 = $1307 + $1306;
             $1309 = $1250 * $1258;
             $1310 = $1309 + $1308;
             $1311 = $1255 + $1310;
             $1312 = (+__Z5IKabsd($1311));
             $1313 = $1312 > 5.0000000000000004E-6;
             if ($1313) {
              break L622;
             }
             $1314 = (+__Z5IKabsd($1278));
             $1315 = $1314 > 5.0000000000000004E-6;
             if ($1315) {
              break L622;
             }
             $1316 = (+__Z5IKabsd($1287));
             $1317 = $1316 > 5.0000000000000004E-6;
             if ($1317) {
              break L622;
             }
             $1318 = (+__Z5IKabsd($1301));
             $1319 = $1318 > 5.0000000000000004E-6;
             if ($1319) {
              break L622;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             break L622;
            }
           }
          } while(0);
          HEAPF64[$24>>3] = 0.0;
          HEAPF64[$23>>3] = 1.0;
          HEAPF64[$22>>3] = 0.0;
          $966 = +HEAPF64[$81>>3];
          $967 = $966 * $966;
          $968 = +HEAPF64[$45>>3];
          $969 = $968 * $968;
          $970 = +HEAPF64[$47>>3];
          $971 = $970 * $970;
          $972 = +HEAPF64[$43>>3];
          $973 = $972 * $972;
          $974 = $966 * $972;
          $975 = +HEAPF64[$89>>3];
          $976 = $975 * 321.0;
          $977 = +HEAPF64[$82>>3];
          $978 = $968 * $977;
          $979 = +HEAPF64[$88>>3];
          $980 = $979 * 321.0;
          $981 = $978 * 200.0;
          $982 = $967 * $969;
          $983 = $967 * $973;
          $984 = $971 * 100.0;
          $985 = -1.0 - $984;
          $986 = $969 * 100.0;
          $987 = $985 - $986;
          $988 = $983 * 100.0;
          $989 = $987 - $988;
          $990 = $978 * 20.0;
          $991 = $989 + $990;
          $992 = $974 * 20.0;
          $993 = $992 + $991;
          $994 = -$974;
          $995 = $981 * $994;
          $996 = $995 + $993;
          $997 = $982 * 100.0;
          $998 = $997 + $996;
          $999 = $981 + -10.0;
          $1000 = $974 * -2000.0;
          $1001 = $1000 * $978;
          $1002 = $1001 + $999;
          $1003 = $971 * 1000.0;
          $1004 = $1002 - $1003;
          $1005 = $969 * 1000.0;
          $1006 = $1004 - $1005;
          $1007 = $983 * 1000.0;
          $1008 = $1006 - $1007;
          $1009 = $974 * 200.0;
          $1010 = $1009 + $1008;
          $1011 = $982 * 1000.0;
          $1012 = $1011 + $1010;
          $1013 = (+__Z6IKsignd($1012));
          $1014 = (+__Z5IKabsd($998));
          $1015 = $1014 < 9.9999999999999995E-7;
          if (!($1015)) {
           $1016 = $970 * $976;
           $1017 = $1016 + 40.0;
           $1018 = $974 * 400.0;
           $1019 = $1017 - $1018;
           $1020 = $978 * 400.0;
           $1021 = $1019 - $1020;
           $1022 = $978 * $980;
           $1023 = $1021 - $1022;
           $1024 = $980 * $994;
           $1025 = $1024 + $1023;
           $1026 = $979 * 32.100000000000001;
           $1027 = $1026 + $1025;
           $1028 = (+__Z5IKabsd($1027));
           $1029 = $970 * $980;
           $1030 = $974 * $976;
           $1031 = $1030 + $1029;
           $1032 = $976 * $978;
           $1033 = $1032 + $1031;
           $1034 = $970 * 400.0;
           $1035 = $1034 + $1033;
           $1036 = $975 * 32.100000000000001;
           $1037 = $1035 - $1036;
           $1038 = (+__Z5IKabsd($1037));
           $1039 = $1028 + $1038;
           $1040 = (+__Z5IKabsd($1039));
           $1041 = $1040 < 9.9999999999999995E-7;
           if (!($1041)) {
            $1042 = (+__Z5IKabsd($1013));
            $1043 = $1042 < 9.9999999999999995E-7;
            if ($1043) {
             break;
            }
            HEAP8[$6>>0] = 1;
            $1044 = +HEAPF64[$45>>3];
            $1045 = $1044 * $1044;
            $1046 = +HEAPF64[$81>>3];
            $1047 = $1046 * $1046;
            $1048 = +HEAPF64[$43>>3];
            $1049 = $1046 * $1048;
            $1050 = +HEAPF64[$82>>3];
            $1051 = $1044 * $1050;
            $1052 = +HEAPF64[$88>>3];
            $1053 = $1052 * 321.0;
            $1054 = +HEAPF64[$89>>3];
            $1055 = $1054 * 321.0;
            $1056 = $1047 * 1000.0;
            $1057 = $1045 * $1056;
            $1058 = $1057 + -10.0;
            $1059 = $1048 * $1048;
            $1060 = $1056 * $1059;
            $1061 = $1058 - $1060;
            $1062 = +HEAPF64[$47>>3];
            $1063 = $1062 * $1062;
            $1064 = $1063 * 1000.0;
            $1065 = $1061 - $1064;
            $1066 = $1049 * -2000.0;
            $1067 = $1066 * $1051;
            $1068 = $1067 + $1065;
            $1069 = $1045 * 1000.0;
            $1070 = $1068 - $1069;
            $1071 = $1051 * 200.0;
            $1072 = $1071 + $1070;
            $1073 = $1049 * 200.0;
            $1074 = $1073 + $1072;
            $1075 = (+__Z6IKsignd($1074));
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x183,$1075,-1);
            $1076 = HEAP8[$90>>0]|0;
            $1077 = ($1076<<24>>24)==(0);
            if ($1077) {
             break;
            }
            $1078 = +HEAPF64[$47>>3];
            $1079 = $1053 * $1078;
            $1080 = $1049 * $1055;
            $1081 = $1080 + $1079;
            $1082 = $1051 * $1055;
            $1083 = $1082 + $1081;
            $1084 = $1078 * 400.0;
            $1085 = $1084 + $1083;
            $1086 = +HEAPF64[$89>>3];
            $1087 = $1086 * 32.100000000000001;
            $1088 = $1085 - $1087;
            $1089 = $1055 * $1078;
            $1090 = $1089 + 40.0;
            $1091 = $1049 * $1053;
            $1092 = $1090 - $1091;
            $1093 = $1049 * 400.0;
            $1094 = $1092 - $1093;
            $1095 = $1051 * 400.0;
            $1096 = $1094 - $1095;
            $1097 = $1051 * $1053;
            $1098 = $1096 - $1097;
            $1099 = +HEAPF64[$88>>3];
            $1100 = $1099 * 32.100000000000001;
            $1101 = $1100 + $1098;
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x184,$1088,$1101,1.9999999999999999E-6);
            $1102 = HEAP8[$91>>0]|0;
            $1103 = ($1102<<24>>24)==(0);
            if ($1103) {
             break;
            }
            $1104 = +HEAPF64[$x183>>3];
            $1105 = $1104 * 1.5707963267949001;
            $1106 = $1105 + -1.5707963267949001;
            $1107 = +HEAPF64[$x184>>3];
            $1108 = $1107 + $1106;
            $1109 = (+__Z5IKsind($1108));
            $1110 = (+__Z5IKcosd($1108));
            $1111 = $1108 > 3.14159265358979;
            do {
             if ($1111) {
              $1112 = $1108 + -6.2831853071795898;
              $1115 = $1112;
             } else {
              $1113 = $1108 < -3.14159265358979;
              if (!($1113)) {
               $1115 = $1108;
               break;
              }
              $1114 = $1108 + 6.2831853071795898;
              $1115 = $1114;
             }
            } while(0);
            HEAP8[$4>>0] = 0;
            HEAP8[$5>>0] = -1;
            HEAPF64[$3>>3] = $1115;
            HEAPF64[$92>>3] = $1110;
            HEAPF64[$93>>3] = $1109;
            $1116 = +HEAPF64[$3>>3];
            $1117 = (+__Z5IKsind($1116));
            $1118 = (+__Z5IKcosd($1116));
            $1119 = +HEAPF64[$88>>3];
            $1120 = $1119 * 0.32100000000000001;
            $1121 = +HEAPF64[$89>>3];
            $1122 = $1121 * 0.32100000000000001;
            $1123 = +HEAPF64[$81>>3];
            $1124 = +HEAPF64[$43>>3];
            $1125 = $1123 * $1124;
            $1126 = +HEAPF64[$45>>3];
            $1127 = +HEAPF64[$82>>3];
            $1128 = $1126 * $1127;
            $1129 = +HEAPF64[$47>>3];
            $1130 = $1117 * $1129;
            $1131 = $1118 * 0.80000000000000004;
            $1132 = $1118 * $1122;
            $1133 = $1117 * 0.40000000000000002;
            $1134 = $1133 + $1132;
            $1135 = $1117 * $1120;
            $1136 = $1135 + $1134;
            $1137 = $1136 + $1129;
            $1138 = $1118 * $1120;
            $1139 = $1138 + 0.10000000000000001;
            $1140 = $1118 * 0.40000000000000002;
            $1141 = $1140 + $1139;
            $1142 = $1141 - $1128;
            $1143 = $1142 - $1125;
            $1144 = $1117 * $1122;
            $1145 = $1143 - $1144;
            $1146 = $1118 * 0.10000000000000001;
            $1147 = $1146 + 0.40000000000000002;
            $1148 = -$1118;
            $1149 = $1128 * $1148;
            $1150 = $1147 + $1149;
            $1151 = $1130 + $1150;
            $1152 = $1120 + $1151;
            $1153 = $1125 * $1148;
            $1154 = $1153 + $1152;
            $1155 = $1125 * 0.20000000000000001;
            $1156 = $1155 + -0.066959000000000005;
            $1157 = $1128 * 0.20000000000000001;
            $1158 = $1156 + $1157;
            $1159 = $1131 * $1125;
            $1160 = $1159 + $1158;
            $1161 = +HEAPF64[$60>>3];
            $1162 = $1160 - $1161;
            $1163 = $1131 * $1128;
            $1164 = $1163 + $1162;
            $1165 = $1118 * 0.080000000000000002;
            $1166 = $1164 - $1165;
            $1167 = $1130 * 0.80000000000000004;
            $1168 = $1166 - $1167;
            $1169 = (+__Z5IKabsd($1137));
            $1170 = $1169 > 5.0000000000000004E-6;
            if ($1170) {
             break;
            }
            $1171 = $1118 * $1129;
            $1172 = $1117 * $1125;
            $1173 = $1172 + $1171;
            $1174 = $1122 + $1173;
            $1175 = $1117 * $1128;
            $1176 = $1175 + $1174;
            $1177 = $1117 * 0.10000000000000001;
            $1178 = $1176 - $1177;
            $1179 = (+__Z5IKabsd($1178));
            $1180 = $1179 > 5.0000000000000004E-6;
            if ($1180) {
             break;
            }
            $1181 = (+__Z5IKabsd($1145));
            $1182 = $1181 > 5.0000000000000004E-6;
            if ($1182) {
             break;
            }
            $1183 = (+__Z5IKabsd($1154));
            $1184 = $1183 > 5.0000000000000004E-6;
            if ($1184) {
             break;
            }
            $1185 = (+__Z5IKabsd($1168));
            $1186 = $1185 > 5.0000000000000004E-6;
            if ($1186) {
             break;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           }
          }
         }
        } while(0);
        $1445 = (($ij30$0726) + 1)|0;
        $exitcond863 = ($1445|0)==(2);
        if ($exitcond863) {
         break L15;
        } else {
         $ij30$0726 = $1445;
        }
       }
      }
     }
     $1446 = +HEAPF64[$43>>3];
     $1447 = +HEAPF64[$82>>3];
     $1448 = $1446 * $1447;
     $1449 = +HEAPF64[$81>>3];
     $1450 = +HEAPF64[$45>>3];
     $1451 = $1449 * $1450;
     $1452 = +HEAPF64[$22>>3];
     $1453 = $1452 + -3.14159265358979;
     $1454 = (+__Z5IKabsd($1453));
     $1455 = $1454 + 3.14159265358979;
     $1456 = (+__Z6IKfmoddd($1455,6.2831853071795898));
     $1457 = $1456 + -3.14159265358979;
     $1458 = $1451 - $1448;
     $1459 = (+__Z5IKabsd($1457));
     $1460 = $1459 < 9.9999999999999995E-7;
     if (!($1460)) {
      break;
     }
     $1461 = $1448 - $1451;
     $1462 = (+__Z5IKabsd($1461));
     $1463 = $1462 < 9.9999999999999995E-7;
     if (!($1463)) {
      break;
     }
     $1464 = (+__Z5IKabsd($1458));
     $1465 = $1464 < 9.9999999999999995E-7;
     if (!($1465)) {
      break;
     }
     HEAP16[$j30valid26>>1] = 0;
     HEAP8[$10>>0] = 2;
     $1466 = +HEAPF64[$60>>3];
     $1467 = $1466 * 3.8940809968847399;
     $1468 = $1467 + -0.98536214953270995;
     $1469 = +HEAPF64[$45>>3];
     $1470 = $1469 * -0.77881619937694702;
     $1471 = +HEAPF64[$82>>3];
     $1472 = $1470 * $1471;
     $1473 = $1468 + $1472;
     $1474 = +HEAPF64[$81>>3];
     $1475 = $1474 * -0.77881619937694702;
     $1476 = +HEAPF64[$43>>3];
     $1477 = $1475 * $1476;
     $1478 = $1473 + $1477;
     HEAPF64[$cj30array24>>3] = $1478;
     $1479 = !($1478 >= -1.0000020000000001);
     $1480 = !($1478 <= 1.0000020000000001);
     $or$cond49 = $1479 | $1480;
     if ($or$cond49) {
      $1489 = (__Z13__DOUBLE_BITSd($1478)|0);
      $1490 = tempRet0;
      $1491 = $1490 & 2147483647;
      $1492 = ($1491>>>0)>(2146435072);
      $1493 = ($1489>>>0)>(0);
      $1494 = ($1491|0)==(2146435072);
      $1495 = $1494 & $1493;
      $1496 = $1492 | $1495;
      if ($1496) {
       HEAP8[$j30valid26>>0] = 1;
       HEAPF64[$cj30array24>>3] = 1.0;
       HEAPF64[$sj30array25>>3] = 0.0;
       HEAPF64[$j30array23>>3] = 0.0;
       $ij3027$0706 = 0;
      } else {
       $ij3027$0706 = 0;
      }
     } else {
      HEAP8[$102>>0] = 1;
      HEAP8[$j30valid26>>0] = 1;
      $1481 = +HEAPF64[$cj30array24>>3];
      $1482 = (+__Z6IKacosd($1481));
      HEAPF64[$j30array23>>3] = $1482;
      $1483 = (+__Z5IKsind($1482));
      HEAPF64[$sj30array25>>3] = $1483;
      $1484 = +HEAPF64[$cj30array24>>3];
      HEAPF64[$103>>3] = $1484;
      $1485 = +HEAPF64[$j30array23>>3];
      $1486 = -$1485;
      HEAPF64[$104>>3] = $1486;
      $1487 = +HEAPF64[$sj30array25>>3];
      $1488 = -$1487;
      HEAPF64[$105>>3] = $1488;
      $ij3027$0706 = 0;
     }
     while(1) {
      $1497 = (($j30valid26) + ($ij3027$0706)|0);
      $1498 = HEAP8[$1497>>0]|0;
      $1499 = ($1498<<24>>24)==(0);
      L690: do {
       if (!($1499)) {
        $1500 = $ij3027$0706&255;
        HEAP8[$8>>0] = $1500;
        HEAP8[$9>>0] = -1;
        $iij3028$0687 = (($ij3027$0706) + 1)|0;
        $1501 = ($iij3028$0687|0)<(2);
        do {
         if ($1501) {
          $1502 = (($sj30array25) + ($ij3027$0706<<3)|0);
          $1503 = (($j30valid26) + ($iij3028$0687)|0);
          $1504 = HEAP8[$1503>>0]|0;
          $1505 = ($1504<<24>>24)==(0);
          if (!($1505)) {
           $1506 = (($cj30array24) + ($ij3027$0706<<3)|0);
           $1507 = +HEAPF64[$1506>>3];
           $1508 = (($cj30array24) + ($iij3028$0687<<3)|0);
           $1509 = +HEAPF64[$1508>>3];
           $1510 = $1507 - $1509;
           $1511 = (+__Z5IKabsd($1510));
           $1512 = $1511 < 9.9999999999999995E-7;
           if ($1512) {
            $1513 = +HEAPF64[$1502>>3];
            $1514 = (($sj30array25) + ($iij3028$0687<<3)|0);
            $1515 = +HEAPF64[$1514>>3];
            $1516 = $1513 - $1515;
            $1517 = (+__Z5IKabsd($1516));
            $1518 = $1517 < 9.9999999999999995E-7;
            if (!($1518)) {
             break;
            }
            HEAP8[$1503>>0] = 0;
            $1519 = $iij3028$0687&255;
            HEAP8[$9>>0] = $1519;
           }
          }
         }
        } while(0);
        $1520 = (($j30array23) + ($ij3027$0706<<3)|0);
        $1521 = +HEAPF64[$1520>>3];
        HEAPF64[$7>>3] = $1521;
        $1522 = (($cj30array24) + ($ij3027$0706<<3)|0);
        $1523 = +HEAPF64[$1522>>3];
        HEAPF64[$106>>3] = $1523;
        $1524 = (($sj30array25) + ($ij3027$0706<<3)|0);
        $1525 = +HEAPF64[$1524>>3];
        HEAPF64[$107>>3] = $1525;
        HEAPF64[$24>>3] = 0.0;
        HEAPF64[$23>>3] = -1.0;
        HEAPF64[$22>>3] = 3.14159265358979;
        $1526 = +HEAPF64[$106>>3];
        $1527 = $1526 * 321000.0;
        $1528 = +HEAPF64[$45>>3];
        $1529 = +HEAPF64[$82>>3];
        $1530 = $1528 * $1529;
        $1531 = +HEAPF64[$107>>3];
        $1532 = $1531 * 321000.0;
        $1533 = +HEAPF64[$81>>3];
        $1534 = +HEAPF64[$43>>3];
        $1535 = $1533 * $1534;
        $1536 = -1.02430295950156 - $1526;
        $1537 = +HEAPF64[$47>>3];
        $1538 = $1527 * $1537;
        $1539 = $1530 * $1532;
        $1540 = $1538 - $1539;
        $1541 = $1531 * 32100.0;
        $1542 = $1541 + $1540;
        $1543 = $1537 * 4.0E+5;
        $1544 = $1543 + $1542;
        $1545 = $1532 * $1535;
        $1546 = $1544 - $1545;
        $1547 = (+__Z5IKabsd($1546));
        $1548 = $1535 * 4.0E+5;
        $1549 = 4.0E+4 - $1548;
        $1550 = $1530 * 4.0E+5;
        $1551 = $1549 - $1550;
        $1552 = $1532 * $1537;
        $1553 = $1551 - $1552;
        $1554 = $1526 * 32100.0;
        $1555 = $1554 + $1553;
        $1556 = -$1527;
        $1557 = $1535 * $1556;
        $1558 = $1557 + $1555;
        $1559 = $1530 * $1556;
        $1560 = $1559 + $1558;
        $1561 = (+__Z5IKabsd($1560));
        $1562 = $1547 + $1561;
        $1563 = (+__Z5IKabsd($1536));
        $1564 = $1563 < 9.9999999999999995E-7;
        do {
         if (!($1564)) {
          $1565 = $1526 * 256800.0;
          $1566 = -263041.0 - $1565;
          $1567 = (+__Z6IKsignd($1566));
          $1568 = (+__Z5IKabsd($1567));
          $1569 = $1568 < 9.9999999999999995E-7;
          if (!($1569)) {
           $1570 = (+__Z5IKabsd($1562));
           $1571 = $1570 < 9.9999999999999995E-7;
           if ($1571) {
            break;
           }
           HEAP8[$6>>0] = 1;
           $1992 = +HEAPF64[$81>>3];
           $1993 = +HEAPF64[$43>>3];
           $1994 = $1992 * $1993;
           $1995 = +HEAPF64[$106>>3];
           $1996 = $1995 * 321000.0;
           $1997 = +HEAPF64[$107>>3];
           $1998 = $1997 * 321000.0;
           $1999 = +HEAPF64[$45>>3];
           $2000 = +HEAPF64[$82>>3];
           $2001 = $1997 * 32100.0;
           $2002 = $1999 * $2000;
           $2003 = -$2002;
           $2004 = $1998 * $2003;
           $2005 = $2001 + $2004;
           $2006 = -$1994;
           $2007 = $1998 * $2006;
           $2008 = $2007 + $2005;
           $2009 = +HEAPF64[$47>>3];
           $2010 = $2009 * 4.0E+5;
           $2011 = $2010 + $2008;
           $2012 = $1996 * $2009;
           $2013 = $2012 + $2011;
           $2014 = $1999 * -4.0E+5;
           $2015 = $2014 * $2000;
           $2016 = $2015 + 4.0E+4;
           $2017 = $1996 * $2003;
           $2018 = $2016 + $2017;
           $2019 = $1996 * $2006;
           $2020 = $2019 + $2018;
           $2021 = $1994 * 4.0E+5;
           $2022 = $2020 - $2021;
           $2023 = $1995 * 32100.0;
           $2024 = $2023 + $2022;
           $2025 = $1998 * $2009;
           $2026 = $2024 - $2025;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x738,$2013,$2026,1.9999999999999999E-6);
           $2027 = HEAP8[$116>>0]|0;
           $2028 = ($2027<<24>>24)==(0);
           if ($2028) {
            break L690;
           }
           $2029 = +HEAPF64[$106>>3];
           $2030 = $2029 * 256800.0;
           $2031 = -263041.0 - $2030;
           $2032 = (+__Z6IKsignd($2031));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x739,$2032,-1);
           $2033 = HEAP8[$117>>0]|0;
           $2034 = ($2033<<24>>24)==(0);
           if ($2034) {
            break L690;
           }
           $2035 = +HEAPF64[$x738>>3];
           $2036 = $2035 + -1.5707963267949001;
           $2037 = +HEAPF64[$x739>>3];
           $2038 = $2037 * 1.5707963267949001;
           $2039 = $2036 + $2038;
           $2040 = (+__Z5IKsind($2039));
           $2041 = (+__Z5IKcosd($2039));
           $2042 = $2039 > 3.14159265358979;
           do {
            if ($2042) {
             $2043 = $2039 + -6.2831853071795898;
             $2046 = $2043;
            } else {
             $2044 = $2039 < -3.14159265358979;
             if (!($2044)) {
              $2046 = $2039;
              break;
             }
             $2045 = $2039 + 6.2831853071795898;
             $2046 = $2045;
            }
           } while(0);
           HEAP8[$4>>0] = 0;
           HEAP8[$5>>0] = -1;
           HEAPF64[$3>>3] = $2046;
           HEAPF64[$118>>3] = $2041;
           HEAPF64[$119>>3] = $2040;
           $2047 = +HEAPF64[$3>>3];
           $2048 = (+__Z5IKsind($2047));
           $2049 = (+__Z5IKcosd($2047));
           $2050 = +HEAPF64[$106>>3];
           $2051 = $2050 * 0.32100000000000001;
           $2052 = +HEAPF64[$107>>3];
           $2053 = $2052 * 0.32100000000000001;
           $2054 = +HEAPF64[$45>>3];
           $2055 = +HEAPF64[$82>>3];
           $2056 = $2054 * $2055;
           $2057 = +HEAPF64[$81>>3];
           $2058 = +HEAPF64[$43>>3];
           $2059 = $2057 * $2058;
           $2060 = +HEAPF64[$47>>3];
           $2061 = $2048 * $2060;
           $2062 = $2049 * 0.80000000000000004;
           $2063 = $2048 * $2051;
           $2064 = $2063 + $2060;
           $2065 = $2048 * 0.40000000000000002;
           $2066 = $2065 + $2064;
           $2067 = -$2049;
           $2068 = $2053 * $2067;
           $2069 = $2068 + $2066;
           $2070 = $2049 * $2059;
           $2071 = 0.40000000000000002 - $2070;
           $2072 = $2049 * 0.10000000000000001;
           $2073 = $2072 + $2071;
           $2074 = $2056 * $2067;
           $2075 = $2074 + $2073;
           $2076 = $2061 + $2075;
           $2077 = $2051 + $2076;
           $2078 = $2048 * 0.10000000000000001;
           $2079 = $2049 * $2060;
           $2080 = $2078 - $2079;
           $2081 = -$2048;
           $2082 = $2056 * $2081;
           $2083 = $2082 + $2080;
           $2084 = $2053 + $2083;
           $2085 = $2059 * $2081;
           $2086 = $2085 + $2084;
           $2087 = $2062 * $2059;
           $2088 = $2087 + -0.066959000000000005;
           $2089 = $2062 * $2056;
           $2090 = $2089 + $2088;
           $2091 = $2049 * 0.080000000000000002;
           $2092 = $2090 - $2091;
           $2093 = +HEAPF64[$60>>3];
           $2094 = $2092 - $2093;
           $2095 = $2056 * 0.20000000000000001;
           $2096 = $2095 + $2094;
           $2097 = $2059 * 0.20000000000000001;
           $2098 = $2097 + $2096;
           $2099 = $2061 * 0.80000000000000004;
           $2100 = $2098 - $2099;
           $2101 = (+__Z5IKabsd($2069));
           $2102 = $2101 > 5.0000000000000004E-6;
           if ($2102) {
            break L690;
           }
           $2103 = $2048 * $2053;
           $2104 = $2103 + 0.10000000000000001;
           $2105 = $2049 * $2051;
           $2106 = $2105 + $2104;
           $2107 = $2106 - $2059;
           $2108 = $2049 * 0.40000000000000002;
           $2109 = $2108 + $2107;
           $2110 = $2109 - $2056;
           $2111 = (+__Z5IKabsd($2110));
           $2112 = $2111 > 5.0000000000000004E-6;
           if ($2112) {
            break L690;
           }
           $2113 = (+__Z5IKabsd($2077));
           $2114 = $2113 > 5.0000000000000004E-6;
           if ($2114) {
            break L690;
           }
           $2115 = (+__Z5IKabsd($2086));
           $2116 = $2115 > 5.0000000000000004E-6;
           if ($2116) {
            break L690;
           }
           $2117 = (+__Z5IKabsd($2100));
           $2118 = $2117 > 5.0000000000000004E-6;
           if ($2118) {
            break L690;
           }
           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           break L690;
          }
         }
        } while(0);
        HEAPF64[$24>>3] = 0.0;
        HEAPF64[$23>>3] = -1.0;
        HEAPF64[$22>>3] = 3.14159265358979;
        $1572 = +HEAPF64[$47>>3];
        $1573 = +HEAPF64[$107>>3];
        $1574 = $1572 * $1573;
        $1575 = +HEAPF64[$81>>3];
        $1576 = +HEAPF64[$43>>3];
        $1577 = $1575 * $1576;
        $1578 = +HEAPF64[$45>>3];
        $1579 = +HEAPF64[$82>>3];
        $1580 = $1578 * $1579;
        $1581 = +HEAPF64[$106>>3];
        $1582 = $1581 * 10.0;
        $1583 = $1572 * 1000.0;
        $1584 = $1581 * 321.0;
        $1585 = $1577 * $1582;
        $1586 = $1585 + -1.2461059190031201;
        $1587 = $1580 * $1582;
        $1588 = $1587 + $1586;
        $1589 = $1588 - $1581;
        $1590 = $1574 * 10.0;
        $1591 = $1589 - $1590;
        $1592 = $1580 * 12.4610591900312;
        $1593 = $1592 + $1591;
        $1594 = $1577 * 12.4610591900312;
        $1595 = $1594 + $1593;
        $1596 = $1577 * $1584;
        $1597 = $1596 + -40.0;
        $1598 = $1580 * $1584;
        $1599 = $1598 + $1597;
        $1600 = $1577 * 400.0;
        $1601 = $1600 + $1599;
        $1602 = $1580 * 400.0;
        $1603 = $1602 + $1601;
        $1604 = $1574 * 321.0;
        $1605 = $1603 - $1604;
        $1606 = $1581 * 32.100000000000001;
        $1607 = $1605 - $1606;
        $1608 = (+__Z6IKsignd($1607));
        $1609 = (+__Z5IKabsd($1595));
        $1610 = $1609 < 9.9999999999999995E-7;
        do {
         if (!($1610)) {
          $1611 = $1581 * $1581;
          $1612 = $1611 * 103.041;
          $1613 = $1612 + 160.0;
          $1614 = $1581 * 256.80000000000001;
          $1615 = $1614 + $1613;
          $1616 = $1572 * $1583;
          $1617 = $1615 - $1616;
          $1618 = (+__Z5IKabsd($1617));
          $1619 = $1572 * 100.0;
          $1620 = $1573 * 128.40000000000001;
          $1621 = $1619 + $1620;
          $1622 = $1583 * $1577;
          $1623 = $1621 - $1622;
          $1624 = $1583 * $1580;
          $1625 = $1623 - $1624;
          $1626 = $1581 * 103.041;
          $1627 = $1573 * $1626;
          $1628 = $1625 + $1627;
          $1629 = (+__Z5IKabsd($1628));
          $1630 = $1618 + $1629;
          $1631 = (+__Z5IKabsd($1630));
          $1632 = $1631 < 9.9999999999999995E-7;
          if ($1632) {
           break;
          }
          $1633 = (+__Z5IKabsd($1608));
          $1634 = $1633 < 9.9999999999999995E-7;
          if ($1634) {
           break;
          }
          HEAP8[$6>>0] = 1;
          $1859 = +HEAPF64[$106>>3];
          $1860 = $1859 * 321.0;
          $1861 = +HEAPF64[$45>>3];
          $1862 = +HEAPF64[$82>>3];
          $1863 = $1861 * $1862;
          $1864 = +HEAPF64[$81>>3];
          $1865 = +HEAPF64[$43>>3];
          $1866 = $1864 * $1865;
          $1867 = +HEAPF64[$47>>3];
          $1868 = $1867 * 1000.0;
          $1869 = $1867 * 100.0;
          $1870 = +HEAPF64[$107>>3];
          $1871 = $1870 * 128.40000000000001;
          $1872 = $1869 + $1871;
          $1873 = $1866 * $1868;
          $1874 = $1872 - $1873;
          $1875 = $1863 * $1868;
          $1876 = $1874 - $1875;
          $1877 = $1859 * 103.041;
          $1878 = $1877 * $1870;
          $1879 = $1878 + $1876;
          $1880 = $1859 * $1859;
          $1881 = $1880 * 103.041;
          $1882 = $1881 + 160.0;
          $1883 = $1859 * 256.80000000000001;
          $1884 = $1883 + $1882;
          $1885 = $1867 * $1868;
          $1886 = $1884 - $1885;
          __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x722,$1879,$1886,1.9999999999999999E-6);
          $1887 = HEAP8[$112>>0]|0;
          $1888 = ($1887<<24>>24)==(0);
          if ($1888) {
           break L690;
          }
          $1889 = $1866 * 400.0;
          $1890 = $1889 + -40.0;
          $1891 = $1863 * 400.0;
          $1892 = $1891 + $1890;
          $1893 = +HEAPF64[$47>>3];
          $1894 = $1893 * -321.0;
          $1895 = +HEAPF64[$107>>3];
          $1896 = $1894 * $1895;
          $1897 = $1892 + $1896;
          $1898 = $1860 * $1866;
          $1899 = $1898 + $1897;
          $1900 = $1860 * $1863;
          $1901 = $1900 + $1899;
          $1902 = +HEAPF64[$106>>3];
          $1903 = $1902 * 32.100000000000001;
          $1904 = $1901 - $1903;
          $1905 = (+__Z6IKsignd($1904));
          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x723,$1905,-1);
          $1906 = HEAP8[$113>>0]|0;
          $1907 = ($1906<<24>>24)==(0);
          if ($1907) {
           break L690;
          }
          $1908 = +HEAPF64[$x722>>3];
          $1909 = $1908 + -1.5707963267949001;
          $1910 = +HEAPF64[$x723>>3];
          $1911 = $1910 * 1.5707963267949001;
          $1912 = $1909 + $1911;
          $1913 = (+__Z5IKsind($1912));
          $1914 = (+__Z5IKcosd($1912));
          $1915 = $1912 > 3.14159265358979;
          do {
           if ($1915) {
            $1916 = $1912 + -6.2831853071795898;
            $1919 = $1916;
           } else {
            $1917 = $1912 < -3.14159265358979;
            if (!($1917)) {
             $1919 = $1912;
             break;
            }
            $1918 = $1912 + 6.2831853071795898;
            $1919 = $1918;
           }
          } while(0);
          HEAP8[$4>>0] = 0;
          HEAP8[$5>>0] = -1;
          HEAPF64[$3>>3] = $1919;
          HEAPF64[$114>>3] = $1914;
          HEAPF64[$115>>3] = $1913;
          $1920 = +HEAPF64[$3>>3];
          $1921 = (+__Z5IKsind($1920));
          $1922 = (+__Z5IKcosd($1920));
          $1923 = +HEAPF64[$106>>3];
          $1924 = $1923 * 0.32100000000000001;
          $1925 = +HEAPF64[$107>>3];
          $1926 = $1925 * 0.32100000000000001;
          $1927 = +HEAPF64[$45>>3];
          $1928 = +HEAPF64[$82>>3];
          $1929 = $1927 * $1928;
          $1930 = +HEAPF64[$81>>3];
          $1931 = +HEAPF64[$43>>3];
          $1932 = $1930 * $1931;
          $1933 = +HEAPF64[$47>>3];
          $1934 = $1921 * $1933;
          $1935 = $1922 * 0.80000000000000004;
          $1936 = -$1922;
          $1937 = $1926 * $1936;
          $1938 = $1937 + $1933;
          $1939 = $1921 * $1924;
          $1940 = $1939 + $1938;
          $1941 = $1921 * 0.40000000000000002;
          $1942 = $1941 + $1940;
          $1943 = $1929 * $1936;
          $1944 = $1943 + 0.40000000000000002;
          $1945 = $1922 * 0.10000000000000001;
          $1946 = $1945 + $1944;
          $1947 = $1946 + $1934;
          $1948 = $1924 + $1947;
          $1949 = $1922 * $1932;
          $1950 = $1948 - $1949;
          $1951 = -$1921;
          $1952 = $1929 * $1951;
          $1953 = $1932 * $1951;
          $1954 = $1952 + $1953;
          $1955 = $1921 * 0.10000000000000001;
          $1956 = $1955 + $1954;
          $1957 = $1926 + $1956;
          $1958 = $1922 * $1933;
          $1959 = $1957 - $1958;
          $1960 = $1922 * 0.080000000000000002;
          $1961 = -0.066959000000000005 - $1960;
          $1962 = $1935 * $1929;
          $1963 = $1961 + $1962;
          $1964 = $1935 * $1932;
          $1965 = $1963 + $1964;
          $1966 = +HEAPF64[$60>>3];
          $1967 = $1965 - $1966;
          $1968 = $1934 * 0.80000000000000004;
          $1969 = $1967 - $1968;
          $1970 = $1932 * 0.20000000000000001;
          $1971 = $1970 + $1969;
          $1972 = $1929 * 0.20000000000000001;
          $1973 = $1972 + $1971;
          $1974 = (+__Z5IKabsd($1942));
          $1975 = $1974 > 5.0000000000000004E-6;
          if ($1975) {
           break L690;
          }
          $1976 = 0.10000000000000001 - $1932;
          $1977 = $1976 - $1929;
          $1978 = $1922 * $1924;
          $1979 = $1978 + $1977;
          $1980 = $1921 * $1926;
          $1981 = $1980 + $1979;
          $1982 = $1922 * 0.40000000000000002;
          $1983 = $1982 + $1981;
          $1984 = (+__Z5IKabsd($1983));
          $1985 = $1984 > 5.0000000000000004E-6;
          if ($1985) {
           break L690;
          }
          $1986 = (+__Z5IKabsd($1950));
          $1987 = $1986 > 5.0000000000000004E-6;
          if ($1987) {
           break L690;
          }
          $1988 = (+__Z5IKabsd($1959));
          $1989 = $1988 > 5.0000000000000004E-6;
          if ($1989) {
           break L690;
          }
          $1990 = (+__Z5IKabsd($1973));
          $1991 = $1990 > 5.0000000000000004E-6;
          if ($1991) {
           break L690;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break L690;
         }
        } while(0);
        HEAPF64[$24>>3] = 0.0;
        HEAPF64[$23>>3] = -1.0;
        HEAPF64[$22>>3] = 3.14159265358979;
        $1635 = +HEAPF64[$81>>3];
        $1636 = $1635 * $1635;
        $1637 = +HEAPF64[$45>>3];
        $1638 = $1637 * $1637;
        $1639 = +HEAPF64[$47>>3];
        $1640 = $1639 * $1639;
        $1641 = +HEAPF64[$43>>3];
        $1642 = $1641 * $1641;
        $1643 = $1635 * $1641;
        $1644 = +HEAPF64[$107>>3];
        $1645 = $1644 * 321.0;
        $1646 = +HEAPF64[$82>>3];
        $1647 = $1637 * $1646;
        $1648 = +HEAPF64[$106>>3];
        $1649 = $1648 * 321.0;
        $1650 = $1647 * 200.0;
        $1651 = $1636 * $1638;
        $1652 = $1636 * $1642;
        $1653 = $1643 * 20.0;
        $1654 = $1653 + -1.0;
        $1655 = $1647 * 20.0;
        $1656 = $1654 + $1655;
        $1657 = $1640 * 100.0;
        $1658 = $1656 - $1657;
        $1659 = $1638 * 100.0;
        $1660 = $1658 - $1659;
        $1661 = $1652 * 100.0;
        $1662 = $1660 - $1661;
        $1663 = $1651 * 100.0;
        $1664 = $1663 + $1662;
        $1665 = -$1643;
        $1666 = $1650 * $1665;
        $1667 = $1666 + $1664;
        $1668 = $1643 * -2000.0;
        $1669 = $1668 * $1647;
        $1670 = $1669 + -10.0;
        $1671 = $1652 * 1000.0;
        $1672 = $1670 - $1671;
        $1673 = $1640 * 1000.0;
        $1674 = $1672 - $1673;
        $1675 = $1638 * 1000.0;
        $1676 = $1674 - $1675;
        $1677 = $1643 * 200.0;
        $1678 = $1677 + $1676;
        $1679 = $1650 + $1678;
        $1680 = $1651 * 1000.0;
        $1681 = $1680 + $1679;
        $1682 = (+__Z6IKsignd($1681));
        $1683 = (+__Z5IKabsd($1667));
        $1684 = $1683 < 9.9999999999999995E-7;
        if (!($1684)) {
         $1685 = $1639 * $1649;
         $1686 = $1639 * 400.0;
         $1687 = $1686 + $1685;
         $1688 = $1645 * $1647;
         $1689 = $1687 - $1688;
         $1690 = $1644 * 32.100000000000001;
         $1691 = $1690 + $1689;
         $1692 = $1645 * $1665;
         $1693 = $1692 + $1691;
         $1694 = (+__Z5IKabsd($1693));
         $1695 = $1647 * $1649;
         $1696 = 40.0 - $1695;
         $1697 = $1647 * 400.0;
         $1698 = $1696 - $1697;
         $1699 = $1643 * 400.0;
         $1700 = $1698 - $1699;
         $1701 = $1639 * $1645;
         $1702 = $1700 - $1701;
         $1703 = $1649 * $1665;
         $1704 = $1703 + $1702;
         $1705 = $1648 * 32.100000000000001;
         $1706 = $1705 + $1704;
         $1707 = (+__Z5IKabsd($1706));
         $1708 = $1694 + $1707;
         $1709 = (+__Z5IKabsd($1708));
         $1710 = $1709 < 9.9999999999999995E-7;
         if ($1710) {
          break;
         }
         $1711 = (+__Z5IKabsd($1682));
         $1712 = $1711 < 9.9999999999999995E-7;
         if ($1712) {
          break;
         }
         HEAP8[$6>>0] = 1;
         $1713 = +HEAPF64[$45>>3];
         $1714 = $1713 * $1713;
         $1715 = +HEAPF64[$81>>3];
         $1716 = $1715 * $1715;
         $1717 = +HEAPF64[$43>>3];
         $1718 = $1715 * $1717;
         $1719 = +HEAPF64[$82>>3];
         $1720 = $1713 * $1719;
         $1721 = +HEAPF64[$106>>3];
         $1722 = $1721 * 321.0;
         $1723 = +HEAPF64[$107>>3];
         $1724 = $1723 * 321.0;
         $1725 = $1716 * 1000.0;
         $1726 = $1714 * 1000.0;
         $1727 = -10.0 - $1726;
         $1728 = $1718 * -2000.0;
         $1729 = $1728 * $1720;
         $1730 = $1727 + $1729;
         $1731 = +HEAPF64[$47>>3];
         $1732 = $1731 * $1731;
         $1733 = $1732 * 1000.0;
         $1734 = $1730 - $1733;
         $1735 = $1717 * $1717;
         $1736 = $1725 * $1735;
         $1737 = $1734 - $1736;
         $1738 = $1718 * 200.0;
         $1739 = $1738 + $1737;
         $1740 = $1720 * 200.0;
         $1741 = $1740 + $1739;
         $1742 = $1714 * $1725;
         $1743 = $1742 + $1741;
         $1744 = (+__Z6IKsignd($1743));
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x706,$1744,-1);
         $1745 = HEAP8[$108>>0]|0;
         $1746 = ($1745<<24>>24)==(0);
         if ($1746) {
          break;
         }
         $1747 = -$1720;
         $1748 = $1724 * $1747;
         $1749 = +HEAPF64[$47>>3];
         $1750 = $1749 * 400.0;
         $1751 = $1748 + $1750;
         $1752 = +HEAPF64[$107>>3];
         $1753 = $1752 * 32.100000000000001;
         $1754 = $1751 + $1753;
         $1755 = -$1718;
         $1756 = $1724 * $1755;
         $1757 = $1756 + $1754;
         $1758 = $1722 * $1749;
         $1759 = $1758 + $1757;
         $1760 = $1724 * $1749;
         $1761 = 40.0 - $1760;
         $1762 = $1722 * $1747;
         $1763 = $1762 + $1761;
         $1764 = $1720 * 400.0;
         $1765 = $1763 - $1764;
         $1766 = $1718 * 400.0;
         $1767 = $1765 - $1766;
         $1768 = +HEAPF64[$106>>3];
         $1769 = $1768 * 32.100000000000001;
         $1770 = $1769 + $1767;
         $1771 = $1722 * $1755;
         $1772 = $1771 + $1770;
         __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x707,$1759,$1772,1.9999999999999999E-6);
         $1773 = HEAP8[$109>>0]|0;
         $1774 = ($1773<<24>>24)==(0);
         if ($1774) {
          break;
         }
         $1775 = +HEAPF64[$x706>>3];
         $1776 = $1775 * 1.5707963267949001;
         $1777 = $1776 + -1.5707963267949001;
         $1778 = +HEAPF64[$x707>>3];
         $1779 = $1778 + $1777;
         $1780 = (+__Z5IKsind($1779));
         $1781 = (+__Z5IKcosd($1779));
         $1782 = $1779 > 3.14159265358979;
         do {
          if ($1782) {
           $1783 = $1779 + -6.2831853071795898;
           $1786 = $1783;
          } else {
           $1784 = $1779 < -3.14159265358979;
           if (!($1784)) {
            $1786 = $1779;
            break;
           }
           $1785 = $1779 + 6.2831853071795898;
           $1786 = $1785;
          }
         } while(0);
         HEAP8[$4>>0] = 0;
         HEAP8[$5>>0] = -1;
         HEAPF64[$3>>3] = $1786;
         HEAPF64[$110>>3] = $1781;
         HEAPF64[$111>>3] = $1780;
         $1787 = +HEAPF64[$3>>3];
         $1788 = (+__Z5IKsind($1787));
         $1789 = (+__Z5IKcosd($1787));
         $1790 = +HEAPF64[$106>>3];
         $1791 = $1790 * 0.32100000000000001;
         $1792 = +HEAPF64[$107>>3];
         $1793 = $1792 * 0.32100000000000001;
         $1794 = +HEAPF64[$45>>3];
         $1795 = +HEAPF64[$82>>3];
         $1796 = $1794 * $1795;
         $1797 = +HEAPF64[$81>>3];
         $1798 = +HEAPF64[$43>>3];
         $1799 = $1797 * $1798;
         $1800 = +HEAPF64[$47>>3];
         $1801 = $1788 * $1800;
         $1802 = $1789 * 0.80000000000000004;
         $1803 = $1788 * 0.40000000000000002;
         $1804 = -$1789;
         $1805 = $1793 * $1804;
         $1806 = $1803 + $1805;
         $1807 = $1806 + $1800;
         $1808 = $1788 * $1791;
         $1809 = $1808 + $1807;
         $1810 = $1796 * $1804;
         $1811 = $1810 + 0.40000000000000002;
         $1812 = $1789 * 0.10000000000000001;
         $1813 = $1812 + $1811;
         $1814 = $1791 + $1813;
         $1815 = $1801 + $1814;
         $1816 = $1789 * $1799;
         $1817 = $1815 - $1816;
         $1818 = $1789 * $1800;
         $1819 = -$1788;
         $1820 = $1799 * $1819;
         $1821 = $1820 - $1818;
         $1822 = $1788 * 0.10000000000000001;
         $1823 = $1822 + $1821;
         $1824 = $1796 * $1819;
         $1825 = $1824 + $1823;
         $1826 = $1793 + $1825;
         $1827 = +HEAPF64[$60>>3];
         $1828 = -0.066959000000000005 - $1827;
         $1829 = $1801 * 0.80000000000000004;
         $1830 = $1828 - $1829;
         $1831 = $1796 * 0.20000000000000001;
         $1832 = $1831 + $1830;
         $1833 = $1799 * 0.20000000000000001;
         $1834 = $1833 + $1832;
         $1835 = $1802 * $1796;
         $1836 = $1835 + $1834;
         $1837 = $1802 * $1799;
         $1838 = $1837 + $1836;
         $1839 = $1789 * 0.080000000000000002;
         $1840 = $1838 - $1839;
         $1841 = (+__Z5IKabsd($1809));
         $1842 = $1841 > 5.0000000000000004E-6;
         if ($1842) {
          break;
         }
         $1843 = $1789 * 0.40000000000000002;
         $1844 = $1843 + 0.10000000000000001;
         $1845 = $1844 - $1799;
         $1846 = $1789 * $1791;
         $1847 = $1846 + $1845;
         $1848 = $1847 - $1796;
         $1849 = $1788 * $1793;
         $1850 = $1849 + $1848;
         $1851 = (+__Z5IKabsd($1850));
         $1852 = $1851 > 5.0000000000000004E-6;
         if ($1852) {
          break;
         }
         $1853 = (+__Z5IKabsd($1817));
         $1854 = $1853 > 5.0000000000000004E-6;
         if ($1854) {
          break;
         }
         $1855 = (+__Z5IKabsd($1826));
         $1856 = $1855 > 5.0000000000000004E-6;
         if ($1856) {
          break;
         }
         $1857 = (+__Z5IKabsd($1840));
         $1858 = $1857 > 5.0000000000000004E-6;
         if ($1858) {
          break;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
        }
       }
      } while(0);
      $2119 = (($ij3027$0706) + 1)|0;
      $exitcond859 = ($2119|0)==(2);
      if ($exitcond859) {
       break L15;
      } else {
       $ij3027$0706 = $2119;
      }
     }
    }
    HEAP8[$10>>0] = 1;
    $2120 = +HEAPF64[$24>>3];
    __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x750,$2120,-1);
    $2121 = HEAP8[$120>>0]|0;
    $2122 = ($2121<<24>>24)==(0);
    if (!($2122)) {
     $2123 = +HEAPF64[$x750>>3];
     $2124 = $2123 * 0.0031152647975077898;
     $2125 = +HEAPF64[$81>>3];
     $2126 = $2125 * 1000.0;
     $2127 = +HEAPF64[$45>>3];
     $2128 = $2126 * $2127;
     $2129 = +HEAPF64[$43>>3];
     $2130 = $2129 * -1000.0;
     $2131 = +HEAPF64[$82>>3];
     $2132 = $2130 * $2131;
     $2133 = $2128 + $2132;
     $2134 = $2124 * $2133;
     $2135 = (+__Z5IKabsd($2134));
     $2136 = $2135 < 1.9999999999999999E-6;
     if ($2136) {
      $2137 = +HEAPF64[$60>>3];
      $2138 = $2137 * 3.8940809968847399;
      $2139 = $2138 + -0.98536214953270995;
      $2140 = $2127 * -0.77881619937694702;
      $2141 = $2140 * $2131;
      $2142 = $2141 + $2139;
      $2143 = $2125 * -0.77881619937694702;
      $2144 = $2143 * $2129;
      $2145 = $2144 + $2142;
      $2146 = (+__Z5IKabsd($2145));
      $2147 = $2146 < 1.9999999999999999E-6;
      if ($2147) {
       $2148 = (+__Z5IKsqrd($2134));
       $2149 = (+__Z5IKsqrd($2145));
       $2150 = $2148 + $2149;
       $2151 = $2150 + -1.0;
       $2152 = (+__Z5IKabsd($2151));
       $2153 = !($2152 <= 1.9999999999999999E-6);
       if (!($2153)) {
        break;
       }
      }
     }
     $2154 = +HEAPF64[$x750>>3];
     $2155 = $2154 * 0.0031152647975077898;
     $2156 = +HEAPF64[$81>>3];
     $2157 = $2156 * 1000.0;
     $2158 = +HEAPF64[$45>>3];
     $2159 = $2157 * $2158;
     $2160 = +HEAPF64[$43>>3];
     $2161 = $2160 * -1000.0;
     $2162 = +HEAPF64[$82>>3];
     $2163 = $2161 * $2162;
     $2164 = $2159 + $2163;
     $2165 = $2155 * $2164;
     $2166 = +HEAPF64[$60>>3];
     $2167 = $2166 * 3.8940809968847399;
     $2168 = $2167 + -0.98536214953270995;
     $2169 = $2158 * -0.77881619937694702;
     $2170 = $2169 * $2162;
     $2171 = $2170 + $2168;
     $2172 = $2156 * -0.77881619937694702;
     $2173 = $2172 * $2160;
     $2174 = $2173 + $2171;
     $2175 = (+__Z7IKatan2dd($2165,$2174));
     $2176 = (+__Z5IKsind($2175));
     $2177 = (+__Z5IKcosd($2175));
     $2178 = $2175 > 3.14159265358979;
     if ($2178) {
      $2179 = $2175 + -6.2831853071795898;
      $2182 = $2179;
     } else {
      $2180 = $2175 < -3.14159265358979;
      if ($2180) {
       $2181 = $2175 + 6.2831853071795898;
       $2182 = $2181;
      } else {
       $2182 = $2175;
      }
     }
     HEAP8[$8>>0] = 0;
     HEAP8[$9>>0] = -1;
     HEAPF64[$7>>3] = $2182;
     HEAPF64[$121>>3] = $2177;
     HEAPF64[$122>>3] = $2176;
     $2183 = +HEAPF64[$81>>3];
     $2184 = +HEAPF64[$45>>3];
     $2185 = $2183 * $2184;
     $2186 = +HEAPF64[$43>>3];
     $2187 = +HEAPF64[$82>>3];
     $2188 = $2186 * $2187;
     $2189 = $2188 - $2185;
     $2190 = +HEAPF64[$24>>3];
     $2191 = $2190 * 0.32100000000000001;
     $2192 = +HEAPF64[$7>>3];
     $2193 = (+__Z5IKsind($2192));
     $2194 = $2191 * $2193;
     $2195 = $2189 + $2194;
     $2196 = (+__Z5IKabsd($2195));
     $2197 = $2196 > 5.0000000000000004E-6;
     if (!($2197)) {
      $2198 = +HEAPF64[$60>>3];
      $2199 = (+__Z5IKcosd($2192));
      $2200 = $2199 * 0.25679999999999997;
      $2201 = $2200 + 0.25304100000000002;
      $2202 = $2201 - $2198;
      $2203 = $2184 * 0.20000000000000001;
      $2204 = $2203 * $2187;
      $2205 = $2204 + $2202;
      $2206 = $2183 * 0.20000000000000001;
      $2207 = $2206 * $2186;
      $2208 = $2207 + $2205;
      $2209 = (+__Z5IKabsd($2208));
      $2210 = $2209 > 5.0000000000000004E-6;
      if (!($2210)) {
       $2211 = $2184 * $2187;
       $2212 = +HEAPF64[$23>>3];
       $2213 = $2176 * $2212;
       $2214 = $2183 * $2186;
       $2215 = +HEAPF64[$121>>3];
       $2216 = $2215 * 10.0;
       $2217 = +HEAPF64[$47>>3];
       $2218 = $2217 * 1000.0;
       $2219 = $2215 * 321.0;
       $2220 = $2211 * $2216;
       $2221 = $2220 + -1.2461059190031201;
       $2222 = $2217 * 10.0;
       $2223 = $2213 * $2222;
       $2224 = $2221 + $2223;
       $2225 = $2224 - $2215;
       $2226 = $2214 * 12.4610591900312;
       $2227 = $2226 + $2225;
       $2228 = $2211 * 12.4610591900312;
       $2229 = $2228 + $2227;
       $2230 = $2214 * $2216;
       $2231 = $2230 + $2229;
       $2232 = $2217 * $2218;
       $2233 = 160.0 - $2232;
       $2234 = $2215 * $2215;
       $2235 = $2234 * 103.041;
       $2236 = $2235 + $2233;
       $2237 = $2215 * 256.80000000000001;
       $2238 = $2237 + $2236;
       $2239 = (+__Z5IKabsd($2238));
       $2240 = $2217 * 100.0;
       $2241 = $2214 * $2218;
       $2242 = $2240 - $2241;
       $2243 = $2211 * $2218;
       $2244 = $2242 - $2243;
       $2245 = $2213 * 128.40000000000001;
       $2246 = $2244 - $2245;
       $2247 = $2215 * -103.041;
       $2248 = $2213 * $2247;
       $2249 = $2248 + $2246;
       $2250 = (+__Z5IKabsd($2249));
       $2251 = $2239 + $2250;
       $2252 = (+__Z5IKabsd($2231));
       $2253 = $2252 < 9.9999999999999995E-7;
       if (!($2253)) {
        $2254 = $2211 * $2219;
        $2255 = $2254 + -40.0;
        $2256 = $2214 * 400.0;
        $2257 = $2256 + $2255;
        $2258 = $2211 * 400.0;
        $2259 = $2258 + $2257;
        $2260 = $2217 * 321.0;
        $2261 = $2213 * $2260;
        $2262 = $2261 + $2259;
        $2263 = $2214 * $2219;
        $2264 = $2263 + $2262;
        $2265 = $2215 * 32.100000000000001;
        $2266 = $2264 - $2265;
        $2267 = (+__Z6IKsignd($2266));
        $2268 = (+__Z5IKabsd($2267));
        $2269 = $2268 < 9.9999999999999995E-7;
        if (!($2269)) {
         $2270 = (+__Z5IKabsd($2251));
         $2271 = $2270 < 9.9999999999999995E-7;
         if (!($2271)) {
          HEAP8[$6>>0] = 1;
          $4495 = +HEAPF64[$45>>3];
          $4496 = +HEAPF64[$82>>3];
          $4497 = $4495 * $4496;
          $4498 = +HEAPF64[$23>>3];
          $4499 = +HEAPF64[$122>>3];
          $4500 = $4498 * $4499;
          $4501 = +HEAPF64[$121>>3];
          $4502 = $4501 * 321.0;
          $4503 = +HEAPF64[$81>>3];
          $4504 = +HEAPF64[$43>>3];
          $4505 = $4503 * $4504;
          $4506 = +HEAPF64[$47>>3];
          $4507 = $4506 * 1000.0;
          $4508 = $4506 * 100.0;
          $4509 = $4505 * $4507;
          $4510 = $4508 - $4509;
          $4511 = $4500 * 128.40000000000001;
          $4512 = $4510 - $4511;
          $4513 = $4497 * $4507;
          $4514 = $4512 - $4513;
          $4515 = $4501 * -103.041;
          $4516 = $4500 * $4515;
          $4517 = $4516 + $4514;
          $4518 = $4506 * $4507;
          $4519 = 160.0 - $4518;
          $4520 = $4501 * $4501;
          $4521 = $4520 * 103.041;
          $4522 = $4521 + $4519;
          $4523 = $4501 * 256.80000000000001;
          $4524 = $4523 + $4522;
          __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x980,$4517,$4524,1.9999999999999999E-6);
          $4525 = HEAP8[$217>>0]|0;
          $4526 = ($4525<<24>>24)==(0);
          if ($4526) {
           break;
          }
          $4527 = $4497 * $4502;
          $4528 = $4527 + -40.0;
          $4529 = +HEAPF64[$47>>3];
          $4530 = $4529 * 321.0;
          $4531 = $4500 * $4530;
          $4532 = $4528 + $4531;
          $4533 = $4502 * $4505;
          $4534 = $4533 + $4532;
          $4535 = $4497 * 400.0;
          $4536 = $4535 + $4534;
          $4537 = $4505 * 400.0;
          $4538 = $4537 + $4536;
          $4539 = +HEAPF64[$121>>3];
          $4540 = $4539 * 32.100000000000001;
          $4541 = $4538 - $4540;
          $4542 = (+__Z6IKsignd($4541));
          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x981,$4542,-1);
          $4543 = HEAP8[$218>>0]|0;
          $4544 = ($4543<<24>>24)==(0);
          if ($4544) {
           break;
          }
          $4545 = +HEAPF64[$x980>>3];
          $4546 = $4545 + -1.5707963267949001;
          $4547 = +HEAPF64[$x981>>3];
          $4548 = $4547 * 1.5707963267949001;
          $4549 = $4546 + $4548;
          $4550 = (+__Z5IKsind($4549));
          $4551 = (+__Z5IKcosd($4549));
          $4552 = $4549 > 3.14159265358979;
          do {
           if ($4552) {
            $4553 = $4549 + -6.2831853071795898;
            $4556 = $4553;
           } else {
            $4554 = $4549 < -3.14159265358979;
            if (!($4554)) {
             $4556 = $4549;
             break;
            }
            $4555 = $4549 + 6.2831853071795898;
            $4556 = $4555;
           }
          } while(0);
          HEAP8[$4>>0] = 0;
          HEAP8[$5>>0] = -1;
          HEAPF64[$3>>3] = $4556;
          HEAPF64[$219>>3] = $4551;
          HEAPF64[$220>>3] = $4550;
          $4557 = +HEAPF64[$3>>3];
          $4558 = (+__Z5IKsind($4557));
          $4559 = (+__Z5IKcosd($4557));
          $4560 = +HEAPF64[$121>>3];
          $4561 = $4560 * 0.32100000000000001;
          $4562 = +HEAPF64[$45>>3];
          $4563 = +HEAPF64[$82>>3];
          $4564 = $4562 * $4563;
          $4565 = +HEAPF64[$122>>3];
          $4566 = $4565 * 0.32100000000000001;
          $4567 = +HEAPF64[$24>>3];
          $4568 = +HEAPF64[$43>>3];
          $4569 = $4563 * $4568;
          $4570 = +HEAPF64[$81>>3];
          $4571 = $4568 * $4570;
          $4572 = $4562 * $4570;
          $4573 = +HEAPF64[$47>>3];
          $4574 = $4558 * $4573;
          $4575 = +HEAPF64[$23>>3];
          $4576 = $4558 * $4575;
          $4577 = $4559 * $4573;
          $4578 = $4559 * 0.80000000000000004;
          $4579 = $4558 * $4567;
          $4580 = $4558 * 0.40000000000000002;
          $4581 = $4558 * $4561;
          $4582 = $4580 + $4581;
          $4583 = $4582 + $4573;
          $4584 = $4559 * $4575;
          $4585 = $4566 * $4584;
          $4586 = $4583 + $4585;
          $4587 = $4559 * 0.10000000000000001;
          $4588 = $4587 + 0.40000000000000002;
          $4589 = -$4559;
          $4590 = $4571 * $4589;
          $4591 = $4588 + $4590;
          $4592 = $4564 * $4589;
          $4593 = $4592 + $4591;
          $4594 = $4574 + $4593;
          $4595 = $4561 + $4594;
          $4596 = $4574 * 0.80000000000000004;
          $4597 = -0.066959000000000005 - $4596;
          $4598 = $4578 * $4571;
          $4599 = $4598 + $4597;
          $4600 = +HEAPF64[$60>>3];
          $4601 = $4599 - $4600;
          $4602 = $4564 * 0.20000000000000001;
          $4603 = $4602 + $4601;
          $4604 = $4571 * 0.20000000000000001;
          $4605 = $4604 + $4603;
          $4606 = $4559 * 0.080000000000000002;
          $4607 = $4605 - $4606;
          $4608 = $4578 * $4564;
          $4609 = $4608 + $4607;
          $4610 = -$4558;
          $4611 = $4567 * $4610;
          $4612 = $4611 * $4571;
          $4613 = $4564 * $4610;
          $4614 = $4613 * $4567;
          $4615 = $4614 + $4612;
          $4616 = $4579 * 0.10000000000000001;
          $4617 = $4616 + $4615;
          $4618 = $4569 * $4575;
          $4619 = $4618 + $4617;
          $4620 = -$4567;
          $4621 = $4577 * $4620;
          $4622 = $4621 + $4619;
          $4623 = $4572 * $4575;
          $4624 = $4622 - $4623;
          $4625 = $4571 * $4576;
          $4626 = $4575 * $4577;
          $4627 = $4626 + $4625;
          $4628 = $4567 * $4569;
          $4629 = $4628 + $4627;
          $4630 = $4576 * 0.10000000000000001;
          $4631 = $4629 - $4630;
          $4632 = $4566 + $4631;
          $4633 = $4564 * $4576;
          $4634 = $4633 + $4632;
          $4635 = $4572 * $4620;
          $4636 = $4635 + $4634;
          $4637 = (+__Z5IKabsd($4586));
          $4638 = $4637 > 5.0000000000000004E-6;
          if ($4638) {
           break;
          }
          $4639 = $4559 * $4561;
          $4640 = $4639 + 0.10000000000000001;
          $4641 = $4559 * 0.40000000000000002;
          $4642 = $4641 + $4640;
          $4643 = $4642 - $4571;
          $4644 = $4643 - $4564;
          $4645 = $4566 * $4576;
          $4646 = $4644 - $4645;
          $4647 = (+__Z5IKabsd($4646));
          $4648 = $4647 > 5.0000000000000004E-6;
          if ($4648) {
           break;
          }
          $4649 = (+__Z5IKabsd($4595));
          $4650 = $4649 > 5.0000000000000004E-6;
          if ($4650) {
           break;
          }
          $4651 = (+__Z5IKabsd($4609));
          $4652 = $4651 > 5.0000000000000004E-6;
          if ($4652) {
           break;
          }
          $4653 = (+__Z5IKabsd($4624));
          $4654 = $4653 > 5.0000000000000004E-6;
          if ($4654) {
           break;
          }
          $4655 = (+__Z5IKabsd($4636));
          $4656 = $4655 > 5.0000000000000004E-6;
          if ($4656) {
           break;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break;
         }
        }
       }
       $2272 = +HEAPF64[$23>>3];
       $2273 = $2272 * $2272;
       $2274 = +HEAPF64[$121>>3];
       $2275 = $2274 * $2274;
       $2276 = +HEAPF64[$81>>3];
       $2277 = +HEAPF64[$43>>3];
       $2278 = $2276 * $2277;
       $2279 = $2274 * 321000.0;
       $2280 = +HEAPF64[$45>>3];
       $2281 = +HEAPF64[$82>>3];
       $2282 = $2280 * $2281;
       $2283 = $2272 * 321000.0;
       $2284 = +HEAPF64[$122>>3];
       $2285 = $2283 * $2284;
       $2286 = $2275 * 103041.0;
       $2287 = -$2273;
       $2288 = $2275 * $2287;
       $2289 = $2288 + 1.5527799613746001;
       $2290 = $2273 + $2289;
       $2291 = $2275 + $2290;
       $2292 = $2274 * 2.4922118380062299;
       $2293 = $2292 + $2291;
       $2294 = $2274 * 32100.0;
       $2295 = -4.0E+4 - $2294;
       $2296 = $2279 * $2282;
       $2297 = $2295 + $2296;
       $2298 = $2279 * $2278;
       $2299 = $2298 + $2297;
       $2300 = $2282 * 4.0E+5;
       $2301 = $2300 + $2299;
       $2302 = $2278 * 4.0E+5;
       $2303 = $2302 + $2301;
       $2304 = +HEAPF64[$47>>3];
       $2305 = $2304 * $2285;
       $2306 = $2303 - $2305;
       $2307 = (+__Z5IKabsd($2306));
       $2308 = $2272 * 32100.0;
       $2309 = $2308 * $2284;
       $2310 = $2304 * 4.0E+5;
       $2311 = $2309 - $2310;
       $2312 = $2282 * $2285;
       $2313 = $2311 - $2312;
       $2314 = $2278 * $2285;
       $2315 = $2313 - $2314;
       $2316 = $2279 * $2304;
       $2317 = $2315 - $2316;
       $2318 = (+__Z5IKabsd($2317));
       $2319 = $2307 + $2318;
       $2320 = (+__Z5IKabsd($2293));
       $2321 = $2320 < 9.9999999999999995E-7;
       if (!($2321)) {
        $2322 = $2274 * 256800.0;
        $2323 = $2322 + 1.6E+5;
        $2324 = $2286 * $2287;
        $2325 = $2323 + $2324;
        $2326 = $2273 * 103041.0;
        $2327 = $2326 + $2325;
        $2328 = $2286 + $2327;
        $2329 = (+__Z6IKsignd($2328));
        $2330 = (+__Z5IKabsd($2329));
        $2331 = $2330 < 9.9999999999999995E-7;
        if (!($2331)) {
         $2332 = (+__Z5IKabsd($2319));
         $2333 = $2332 < 9.9999999999999995E-7;
         if (!($2333)) {
          HEAP8[$6>>0] = 1;
          $4331 = +HEAPF64[$23>>3];
          $4332 = $4331 * $4331;
          $4333 = +HEAPF64[$121>>3];
          $4334 = $4333 * $4333;
          $4335 = +HEAPF64[$81>>3];
          $4336 = +HEAPF64[$43>>3];
          $4337 = $4335 * $4336;
          $4338 = $4333 * 321000.0;
          $4339 = +HEAPF64[$45>>3];
          $4340 = +HEAPF64[$82>>3];
          $4341 = $4339 * $4340;
          $4342 = $4331 * 321000.0;
          $4343 = +HEAPF64[$122>>3];
          $4344 = $4342 * $4343;
          $4345 = $4332 * 103041.0;
          $4346 = +HEAPF64[$47>>3];
          $4347 = -$4346;
          $4348 = $4338 * $4347;
          $4349 = $4331 * 32100.0;
          $4350 = $4349 * $4343;
          $4351 = $4350 + $4348;
          $4352 = $4346 * 4.0E+5;
          $4353 = $4351 - $4352;
          $4354 = $4337 * $4344;
          $4355 = $4353 - $4354;
          $4356 = $4341 * $4344;
          $4357 = $4355 - $4356;
          $4358 = $4344 * $4347;
          $4359 = $4358 + -4.0E+4;
          $4360 = $4333 * 32100.0;
          $4361 = $4359 - $4360;
          $4362 = $4337 * 4.0E+5;
          $4363 = $4362 + $4361;
          $4364 = $4341 * 4.0E+5;
          $4365 = $4364 + $4363;
          $4366 = $4338 * $4337;
          $4367 = $4366 + $4365;
          $4368 = $4338 * $4341;
          $4369 = $4368 + $4367;
          __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x958,$4357,$4369,1.9999999999999999E-6);
          $4370 = HEAP8[$213>>0]|0;
          $4371 = ($4370<<24>>24)==(0);
          if ($4371) {
           break;
          }
          $4372 = +HEAPF64[$121>>3];
          $4373 = $4372 * 256800.0;
          $4374 = $4373 + 1.6E+5;
          $4375 = $4334 * $4345;
          $4376 = $4374 - $4375;
          $4377 = $4334 * 103041.0;
          $4378 = $4377 + $4376;
          $4379 = $4345 + $4378;
          $4380 = (+__Z6IKsignd($4379));
          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x959,$4380,-1);
          $4381 = HEAP8[$214>>0]|0;
          $4382 = ($4381<<24>>24)==(0);
          if ($4382) {
           break;
          }
          $4383 = +HEAPF64[$x958>>3];
          $4384 = $4383 + -1.5707963267949001;
          $4385 = +HEAPF64[$x959>>3];
          $4386 = $4385 * 1.5707963267949001;
          $4387 = $4384 + $4386;
          $4388 = (+__Z5IKsind($4387));
          $4389 = (+__Z5IKcosd($4387));
          $4390 = $4387 > 3.14159265358979;
          do {
           if ($4390) {
            $4391 = $4387 + -6.2831853071795898;
            $4394 = $4391;
           } else {
            $4392 = $4387 < -3.14159265358979;
            if (!($4392)) {
             $4394 = $4387;
             break;
            }
            $4393 = $4387 + 6.2831853071795898;
            $4394 = $4393;
           }
          } while(0);
          HEAP8[$4>>0] = 0;
          HEAP8[$5>>0] = -1;
          HEAPF64[$3>>3] = $4394;
          HEAPF64[$215>>3] = $4389;
          HEAPF64[$216>>3] = $4388;
          $4395 = +HEAPF64[$3>>3];
          $4396 = (+__Z5IKsind($4395));
          $4397 = (+__Z5IKcosd($4395));
          $4398 = +HEAPF64[$121>>3];
          $4399 = $4398 * 0.32100000000000001;
          $4400 = +HEAPF64[$45>>3];
          $4401 = +HEAPF64[$82>>3];
          $4402 = $4400 * $4401;
          $4403 = +HEAPF64[$122>>3];
          $4404 = $4403 * 0.32100000000000001;
          $4405 = +HEAPF64[$24>>3];
          $4406 = +HEAPF64[$43>>3];
          $4407 = $4401 * $4406;
          $4408 = +HEAPF64[$81>>3];
          $4409 = $4406 * $4408;
          $4410 = $4400 * $4408;
          $4411 = +HEAPF64[$47>>3];
          $4412 = $4396 * $4411;
          $4413 = +HEAPF64[$23>>3];
          $4414 = $4396 * $4413;
          $4415 = $4397 * $4411;
          $4416 = $4397 * 0.80000000000000004;
          $4417 = $4396 * $4405;
          $4418 = $4396 * $4399;
          $4419 = $4397 * $4413;
          $4420 = $4404 * $4419;
          $4421 = $4418 + $4420;
          $4422 = $4411 + $4421;
          $4423 = $4396 * 0.40000000000000002;
          $4424 = $4423 + $4422;
          $4425 = -$4397;
          $4426 = $4402 * $4425;
          $4427 = $4426 + 0.40000000000000002;
          $4428 = $4409 * $4425;
          $4429 = $4427 + $4428;
          $4430 = $4397 * 0.10000000000000001;
          $4431 = $4430 + $4429;
          $4432 = $4412 + $4431;
          $4433 = $4399 + $4432;
          $4434 = $4412 * 0.80000000000000004;
          $4435 = -0.066959000000000005 - $4434;
          $4436 = $4416 * $4402;
          $4437 = $4436 + $4435;
          $4438 = +HEAPF64[$60>>3];
          $4439 = $4437 - $4438;
          $4440 = $4409 * 0.20000000000000001;
          $4441 = $4440 + $4439;
          $4442 = $4402 * 0.20000000000000001;
          $4443 = $4442 + $4441;
          $4444 = $4416 * $4409;
          $4445 = $4444 + $4443;
          $4446 = $4397 * 0.080000000000000002;
          $4447 = $4445 - $4446;
          $4448 = -$4405;
          $4449 = $4415 * $4448;
          $4450 = $4417 * 0.10000000000000001;
          $4451 = $4450 + $4449;
          $4452 = -$4396;
          $4453 = $4405 * $4452;
          $4454 = $4453 * $4409;
          $4455 = $4454 + $4451;
          $4456 = $4410 * $4413;
          $4457 = $4455 - $4456;
          $4458 = $4402 * $4452;
          $4459 = $4458 * $4405;
          $4460 = $4459 + $4457;
          $4461 = $4407 * $4413;
          $4462 = $4461 + $4460;
          $4463 = $4405 * $4407;
          $4464 = $4414 * 0.10000000000000001;
          $4465 = $4463 - $4464;
          $4466 = $4410 * $4448;
          $4467 = $4466 + $4465;
          $4468 = $4402 * $4414;
          $4469 = $4468 + $4467;
          $4470 = $4413 * $4415;
          $4471 = $4470 + $4469;
          $4472 = $4409 * $4414;
          $4473 = $4472 + $4471;
          $4474 = $4404 + $4473;
          $4475 = (+__Z5IKabsd($4424));
          $4476 = $4475 > 5.0000000000000004E-6;
          if ($4476) {
           break;
          }
          $4477 = $4397 * $4399;
          $4478 = $4477 + 0.10000000000000001;
          $4479 = $4478 - $4409;
          $4480 = $4404 * $4414;
          $4481 = $4479 - $4480;
          $4482 = $4481 - $4402;
          $4483 = $4397 * 0.40000000000000002;
          $4484 = $4483 + $4482;
          $4485 = (+__Z5IKabsd($4484));
          $4486 = $4485 > 5.0000000000000004E-6;
          if ($4486) {
           break;
          }
          $4487 = (+__Z5IKabsd($4433));
          $4488 = $4487 > 5.0000000000000004E-6;
          if ($4488) {
           break;
          }
          $4489 = (+__Z5IKabsd($4447));
          $4490 = $4489 > 5.0000000000000004E-6;
          if ($4490) {
           break;
          }
          $4491 = (+__Z5IKabsd($4462));
          $4492 = $4491 > 5.0000000000000004E-6;
          if ($4492) {
           break;
          }
          $4493 = (+__Z5IKabsd($4474));
          $4494 = $4493 > 5.0000000000000004E-6;
          if ($4494) {
           break;
          }
          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
          break;
         }
        }
       }
       $2334 = +HEAPF64[$23>>3];
       $2335 = +HEAPF64[$122>>3];
       $2336 = $2334 * $2335;
       $2337 = +HEAPF64[$45>>3];
       $2338 = +HEAPF64[$82>>3];
       $2339 = $2337 * $2338;
       $2340 = +HEAPF64[$121>>3];
       $2341 = +HEAPF64[$47>>3];
       $2342 = $2340 * $2341;
       $2343 = +HEAPF64[$81>>3];
       $2344 = +HEAPF64[$43>>3];
       $2345 = $2343 * $2344;
       $2346 = $2336 * -10.0;
       $2347 = $2346 * $2339;
       $2348 = $2346 * $2345;
       $2349 = $2347 + $2348;
       $2350 = $2336 + $2349;
       $2351 = $2342 * 10.0;
       $2352 = $2351 + $2350;
       $2353 = $2341 * 12.4610591900312;
       $2354 = $2353 + $2352;
       $2355 = $2336 * -321.0;
       $2356 = (+__Z5IKabsd($2354));
       $2357 = $2356 < 9.9999999999999995E-7;
       if (!($2357)) {
        $2358 = $2341 * 400.0;
        $2359 = $2342 * 321.0;
        $2360 = $2358 + $2359;
        $2361 = $2355 * $2339;
        $2362 = $2361 + $2360;
        $2363 = $2355 * $2345;
        $2364 = $2362 + $2363;
        $2365 = $2336 * 32.100000000000001;
        $2366 = $2365 + $2364;
        $2367 = (+__Z6IKsignd($2366));
        $2368 = (+__Z5IKabsd($2367));
        $2369 = $2368 < 9.9999999999999995E-7;
        if (!($2369)) {
         HEAP8[$6>>0] = 1;
         $4155 = +HEAPF64[$81>>3];
         $4156 = $4155 * $4155;
         $4157 = +HEAPF64[$45>>3];
         $4158 = $4157 * $4157;
         $4159 = +HEAPF64[$43>>3];
         $4160 = $4155 * $4159;
         $4161 = +HEAPF64[$23>>3];
         $4162 = +HEAPF64[$122>>3];
         $4163 = $4161 * $4162;
         $4164 = +HEAPF64[$82>>3];
         $4165 = $4157 * $4164;
         $4166 = +HEAPF64[$47>>3];
         $4167 = $4166 * 1000.0;
         $4168 = $4156 * 1000.0;
         $4169 = $4163 * 32.100000000000001;
         $4170 = +HEAPF64[$121>>3];
         $4171 = $4170 * 321.0;
         $4172 = $4166 * $4171;
         $4173 = $4169 + $4172;
         $4174 = $4160 * -321.0;
         $4175 = $4174 * $4163;
         $4176 = $4175 + $4173;
         $4177 = $4166 * 400.0;
         $4178 = $4177 + $4176;
         $4179 = $4163 * -321.0;
         $4180 = $4179 * $4165;
         $4181 = $4180 + $4178;
         $4182 = (+__Z6IKsignd($4181));
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x934,$4182,-1);
         $4183 = HEAP8[$209>>0]|0;
         $4184 = ($4183<<24>>24)==(0);
         if ($4184) {
          break;
         }
         $4185 = $4165 * 200.0;
         $4186 = -150.0 - $4185;
         $4187 = $4160 * 200.0;
         $4188 = $4186 - $4187;
         $4189 = $4158 * $4168;
         $4190 = $4188 - $4189;
         $4191 = +HEAPF64[$43>>3];
         $4192 = $4191 * $4191;
         $4193 = $4168 * $4192;
         $4194 = $4190 + $4193;
         $4195 = $4158 * 1000.0;
         $4196 = $4195 + $4194;
         $4197 = $4160 * 2000.0;
         $4198 = $4197 * $4165;
         $4199 = $4198 + $4196;
         $4200 = +HEAPF64[$121>>3];
         $4201 = $4200 * $4200;
         $4202 = $4201 * 103.041;
         $4203 = $4199 - $4202;
         $4204 = $4200 * 256.80000000000001;
         $4205 = $4203 - $4204;
         $4206 = +HEAPF64[$47>>3];
         $4207 = $4206 * 100.0;
         $4208 = $4200 * -103.041;
         $4209 = $4163 * $4208;
         $4210 = $4209 - $4207;
         $4211 = $4163 * 128.40000000000001;
         $4212 = $4210 - $4211;
         $4213 = $4165 * $4167;
         $4214 = $4213 + $4212;
         $4215 = $4160 * $4167;
         $4216 = $4215 + $4214;
         __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x935,$4205,$4216,1.9999999999999999E-6);
         $4217 = HEAP8[$210>>0]|0;
         $4218 = ($4217<<24>>24)==(0);
         if ($4218) {
          break;
         }
         $4219 = +HEAPF64[$x934>>3];
         $4220 = $4219 * 1.5707963267949001;
         $4221 = $4220 + -1.5707963267949001;
         $4222 = +HEAPF64[$x935>>3];
         $4223 = $4222 + $4221;
         $4224 = (+__Z5IKsind($4223));
         $4225 = (+__Z5IKcosd($4223));
         $4226 = $4223 > 3.14159265358979;
         do {
          if ($4226) {
           $4227 = $4223 + -6.2831853071795898;
           $4230 = $4227;
          } else {
           $4228 = $4223 < -3.14159265358979;
           if (!($4228)) {
            $4230 = $4223;
            break;
           }
           $4229 = $4223 + 6.2831853071795898;
           $4230 = $4229;
          }
         } while(0);
         HEAP8[$4>>0] = 0;
         HEAP8[$5>>0] = -1;
         HEAPF64[$3>>3] = $4230;
         HEAPF64[$211>>3] = $4225;
         HEAPF64[$212>>3] = $4224;
         $4231 = +HEAPF64[$3>>3];
         $4232 = (+__Z5IKsind($4231));
         $4233 = (+__Z5IKcosd($4231));
         $4234 = +HEAPF64[$121>>3];
         $4235 = $4234 * 0.32100000000000001;
         $4236 = +HEAPF64[$45>>3];
         $4237 = +HEAPF64[$82>>3];
         $4238 = $4236 * $4237;
         $4239 = +HEAPF64[$122>>3];
         $4240 = $4239 * 0.32100000000000001;
         $4241 = +HEAPF64[$24>>3];
         $4242 = +HEAPF64[$43>>3];
         $4243 = $4237 * $4242;
         $4244 = +HEAPF64[$81>>3];
         $4245 = $4242 * $4244;
         $4246 = $4236 * $4244;
         $4247 = +HEAPF64[$47>>3];
         $4248 = $4232 * $4247;
         $4249 = +HEAPF64[$23>>3];
         $4250 = $4232 * $4249;
         $4251 = $4233 * $4247;
         $4252 = $4233 * 0.80000000000000004;
         $4253 = $4232 * $4241;
         $4254 = $4232 * $4235;
         $4255 = $4233 * $4249;
         $4256 = $4240 * $4255;
         $4257 = $4254 + $4256;
         $4258 = $4247 + $4257;
         $4259 = $4232 * 0.40000000000000002;
         $4260 = $4259 + $4258;
         $4261 = $4233 * 0.10000000000000001;
         $4262 = $4261 + 0.40000000000000002;
         $4263 = -$4233;
         $4264 = $4245 * $4263;
         $4265 = $4262 + $4264;
         $4266 = $4238 * $4263;
         $4267 = $4266 + $4265;
         $4268 = $4235 + $4267;
         $4269 = $4248 + $4268;
         $4270 = $4233 * 0.080000000000000002;
         $4271 = -0.066959000000000005 - $4270;
         $4272 = $4248 * 0.80000000000000004;
         $4273 = $4271 - $4272;
         $4274 = $4238 * 0.20000000000000001;
         $4275 = $4274 + $4273;
         $4276 = $4252 * $4238;
         $4277 = $4276 + $4275;
         $4278 = $4245 * 0.20000000000000001;
         $4279 = $4278 + $4277;
         $4280 = $4252 * $4245;
         $4281 = $4280 + $4279;
         $4282 = +HEAPF64[$60>>3];
         $4283 = $4281 - $4282;
         $4284 = -$4232;
         $4285 = $4241 * $4284;
         $4286 = $4285 * $4245;
         $4287 = $4253 * 0.10000000000000001;
         $4288 = $4287 + $4286;
         $4289 = $4246 * $4249;
         $4290 = $4288 - $4289;
         $4291 = -$4241;
         $4292 = $4251 * $4291;
         $4293 = $4292 + $4290;
         $4294 = $4243 * $4249;
         $4295 = $4294 + $4293;
         $4296 = $4238 * $4284;
         $4297 = $4296 * $4241;
         $4298 = $4297 + $4295;
         $4299 = $4241 * $4243;
         $4300 = $4238 * $4250;
         $4301 = $4299 + $4300;
         $4302 = $4245 * $4250;
         $4303 = $4302 + $4301;
         $4304 = $4246 * $4291;
         $4305 = $4304 + $4303;
         $4306 = $4249 * $4251;
         $4307 = $4306 + $4305;
         $4308 = $4250 * 0.10000000000000001;
         $4309 = $4307 - $4308;
         $4310 = $4240 + $4309;
         $4311 = (+__Z5IKabsd($4260));
         $4312 = $4311 > 5.0000000000000004E-6;
         if ($4312) {
          break;
         }
         $4313 = 0.10000000000000001 - $4238;
         $4314 = $4233 * $4235;
         $4315 = $4314 + $4313;
         $4316 = $4315 - $4245;
         $4317 = $4233 * 0.40000000000000002;
         $4318 = $4317 + $4316;
         $4319 = $4240 * $4250;
         $4320 = $4318 - $4319;
         $4321 = (+__Z5IKabsd($4320));
         $4322 = $4321 > 5.0000000000000004E-6;
         if ($4322) {
          break;
         }
         $4323 = (+__Z5IKabsd($4269));
         $4324 = $4323 > 5.0000000000000004E-6;
         if ($4324) {
          break;
         }
         $4325 = (+__Z5IKabsd($4283));
         $4326 = $4325 > 5.0000000000000004E-6;
         if ($4326) {
          break;
         }
         $4327 = (+__Z5IKabsd($4298));
         $4328 = $4327 > 5.0000000000000004E-6;
         if ($4328) {
          break;
         }
         $4329 = (+__Z5IKabsd($4310));
         $4330 = $4329 > 5.0000000000000004E-6;
         if ($4330) {
          break;
         }
         __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
         break;
        }
       }
       $2370 = +HEAPF64[$81>>3];
       $2371 = +HEAPF64[$45>>3];
       $2372 = +HEAPF64[$43>>3];
       $2373 = +HEAPF64[$82>>3];
       $2374 = +HEAPF64[$47>>3];
       $2375 = (+__Z5IKabsd($2374));
       $2376 = +HEAPF64[$22>>3];
       $2377 = $2376 + 1.5707963267949001;
       $2378 = (+__Z6IKfmoddd($2377,6.2831853071795898));
       $2379 = $2378 + -3.14159265358979;
       $2380 = (+__Z5IKabsd($2379));
       $2381 = $2375 + $2380;
       $2382 = +HEAPF64[$121>>3];
       $2383 = $2382 * 0.25679999999999997;
       $2384 = $2383 + 0.25304100000000002;
       $2385 = +HEAPF64[$60>>3];
       $2386 = $2384 - $2385;
       $2387 = $2371 * 0.20000000000000001;
       $2388 = $2387 * $2373;
       $2389 = $2388 + $2386;
       $2390 = $2370 * 0.20000000000000001;
       $2391 = $2390 * $2372;
       $2392 = $2391 + $2389;
       $2393 = (+__Z5IKabsd($2381));
       $2394 = $2393 < 9.9999999999999995E-7;
       if ($2394) {
        $2395 = +HEAPF64[$122>>3];
        $2396 = $2395 * 0.32100000000000001;
        $2397 = $2370 * $2371;
        $2398 = $2396 - $2397;
        $2399 = $2372 * $2373;
        $2400 = $2399 + $2398;
        $2401 = (+__Z5IKabsd($2400));
        $2402 = $2401 < 9.9999999999999995E-7;
        if ($2402) {
         $2403 = (+__Z5IKabsd($2392));
         $2404 = $2403 < 9.9999999999999995E-7;
         if ($2404) {
          $2405 = -$2371;
          HEAPF64[$47>>3] = 0.0;
          HEAPF64[$22>>3] = 1.5707963267949001;
          HEAPF64[$24>>3] = 1.0;
          HEAPF64[$23>>3] = 0.0;
          $2406 = +HEAPF64[$43>>3];
          $2407 = $2406 * $2406;
          $2408 = +HEAPF64[$45>>3];
          $2409 = $2408 * $2408;
          $2410 = $2407 + $2409;
          HEAPF64[$60>>3] = $2410;
          $2411 = +HEAPF64[$43>>3];
          $2412 = +HEAPF64[$26>>3];
          $2413 = $2411 * $2412;
          $2414 = +HEAPF64[$45>>3];
          $2415 = +HEAPF64[$32>>3];
          $2416 = $2414 * $2415;
          $2417 = $2413 + $2416;
          HEAPF64[$61>>3] = $2417;
          $2418 = +HEAPF64[$43>>3];
          $2419 = +HEAPF64[$28>>3];
          $2420 = $2418 * $2419;
          $2421 = +HEAPF64[$45>>3];
          $2422 = +HEAPF64[$34>>3];
          $2423 = $2421 * $2422;
          $2424 = $2420 + $2423;
          HEAPF64[$62>>3] = $2424;
          $2425 = +HEAPF64[$43>>3];
          $2426 = +HEAPF64[$30>>3];
          $2427 = $2425 * $2426;
          $2428 = +HEAPF64[$45>>3];
          $2429 = +HEAPF64[$36>>3];
          $2430 = $2428 * $2429;
          $2431 = $2427 + $2430;
          HEAPF64[$63>>3] = $2431;
          $2432 = +HEAPF64[$38>>3];
          $2433 = $2432 * $2405;
          HEAPF64[$64>>3] = $2433;
          $2434 = +HEAPF64[$43>>3];
          $2435 = +HEAPF64[$38>>3];
          $2436 = $2434 * $2435;
          HEAPF64[$65>>3] = $2436;
          $2437 = +HEAPF64[$40>>3];
          $2438 = $2437 * $2405;
          HEAPF64[$67>>3] = $2438;
          $2439 = +HEAPF64[$43>>3];
          $2440 = +HEAPF64[$40>>3];
          $2441 = $2439 * $2440;
          HEAPF64[$68>>3] = $2441;
          $2442 = +HEAPF64[$42>>3];
          $2443 = $2442 * $2405;
          HEAPF64[$70>>3] = $2443;
          $2444 = +HEAPF64[$43>>3];
          $2445 = +HEAPF64[$42>>3];
          $2446 = $2444 * $2445;
          HEAPF64[$71>>3] = $2446;
          $2447 = +HEAPF64[$81>>3];
          $2448 = $2447 * -10.0;
          $2449 = +HEAPF64[$43>>3];
          $2450 = $2448 * $2449;
          $2451 = $2450 + 1.0;
          $2452 = +HEAPF64[$45>>3];
          $2453 = $2452 * -10.0;
          $2454 = +HEAPF64[$82>>3];
          $2455 = $2453 * $2454;
          $2456 = $2451 + $2455;
          $2457 = (+__Z5IKabsd($2456));
          $2458 = $2457 < 9.9999999999999995E-7;
          if (!($2458)) {
           HEAP16[$j28valid99>>1] = 0;
           HEAP8[$6>>0] = 2;
           $3003 = +HEAPF64[$45>>3];
           $3004 = +HEAPF64[$82>>3];
           $3005 = $3003 * $3004;
           $3006 = 0.10000000000000001 - $3005;
           $3007 = +HEAPF64[$81>>3];
           $3008 = +HEAPF64[$43>>3];
           $3009 = $3007 * $3008;
           $3010 = $3006 - $3009;
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x827,$3010,-1);
           $3011 = HEAP8[$152>>0]|0;
           $3012 = ($3011<<24>>24)==(0);
           if ($3012) {
            break;
           }
           $3013 = +HEAPF64[$x827>>3];
           $3014 = $3013 * 0.40000000000000002;
           $3015 = +HEAPF64[$121>>3];
           $3016 = $3015 * -0.32100000000000001;
           $3017 = $3013 * $3016;
           $3018 = $3017 - $3014;
           HEAPF64[$cj28array97>>3] = $3018;
           $3019 = !($3018 >= -1.0000020000000001);
           $3020 = !($3018 <= 1.0000020000000001);
           $or$cond75 = $3019 | $3020;
           do {
            if ($or$cond75) {
             $3029 = (__Z13__DOUBLE_BITSd($3018)|0);
             $3030 = tempRet0;
             $3031 = $3030 & 2147483647;
             $3032 = ($3031>>>0)>(2146435072);
             $3033 = ($3029>>>0)>(0);
             $3034 = ($3031|0)==(2146435072);
             $3035 = $3034 & $3033;
             $3036 = $3032 | $3035;
             if (!($3036)) {
              $ij28100$0670 = 0;
              break;
             }
             HEAP8[$j28valid99>>0] = 1;
             HEAPF64[$cj28array97>>3] = 1.0;
             HEAPF64[$sj28array98>>3] = 0.0;
             HEAPF64[$j28array96>>3] = 0.0;
             $ij28100$0670 = 0;
            } else {
             HEAP8[$153>>0] = 1;
             HEAP8[$j28valid99>>0] = 1;
             $3021 = +HEAPF64[$cj28array97>>3];
             $3022 = (+__Z6IKacosd($3021));
             HEAPF64[$j28array96>>3] = $3022;
             $3023 = (+__Z5IKsind($3022));
             HEAPF64[$sj28array98>>3] = $3023;
             $3024 = +HEAPF64[$cj28array97>>3];
             HEAPF64[$154>>3] = $3024;
             $3025 = +HEAPF64[$j28array96>>3];
             $3026 = -$3025;
             HEAPF64[$155>>3] = $3026;
             $3027 = +HEAPF64[$sj28array98>>3];
             $3028 = -$3027;
             HEAPF64[$156>>3] = $3028;
             $ij28100$0670 = 0;
            }
           } while(0);
           while(1) {
            $3037 = (($j28valid99) + ($ij28100$0670)|0);
            $3038 = HEAP8[$3037>>0]|0;
            $3039 = ($3038<<24>>24)==(0);
            do {
             if (!($3039)) {
              $3040 = $ij28100$0670&255;
              HEAP8[$4>>0] = $3040;
              HEAP8[$5>>0] = -1;
              $iij28101$0666 = (($ij28100$0670) + 1)|0;
              $3041 = ($iij28101$0666|0)<(2);
              do {
               if ($3041) {
                $3042 = (($sj28array98) + ($ij28100$0670<<3)|0);
                $3043 = (($j28valid99) + ($iij28101$0666)|0);
                $3044 = HEAP8[$3043>>0]|0;
                $3045 = ($3044<<24>>24)==(0);
                if ($3045) {
                 break;
                }
                $3046 = (($cj28array97) + ($ij28100$0670<<3)|0);
                $3047 = +HEAPF64[$3046>>3];
                $3048 = (($cj28array97) + ($iij28101$0666<<3)|0);
                $3049 = +HEAPF64[$3048>>3];
                $3050 = $3047 - $3049;
                $3051 = (+__Z5IKabsd($3050));
                $3052 = $3051 < 9.9999999999999995E-7;
                if (!($3052)) {
                 break;
                }
                $3053 = +HEAPF64[$3042>>3];
                $3054 = (($sj28array98) + ($iij28101$0666<<3)|0);
                $3055 = +HEAPF64[$3054>>3];
                $3056 = $3053 - $3055;
                $3057 = (+__Z5IKabsd($3056));
                $3058 = $3057 < 9.9999999999999995E-7;
                if (!($3058)) {
                 break;
                }
                HEAP8[$3043>>0] = 0;
                $3059 = $iij28101$0666&255;
                HEAP8[$5>>0] = $3059;
               }
              } while(0);
              $3060 = (($j28array96) + ($ij28100$0670<<3)|0);
              $3061 = +HEAPF64[$3060>>3];
              HEAPF64[$3>>3] = $3061;
              $3062 = (($cj28array97) + ($ij28100$0670<<3)|0);
              $3063 = +HEAPF64[$3062>>3];
              HEAPF64[$157>>3] = $3063;
              $3064 = (($sj28array98) + ($ij28100$0670<<3)|0);
              $3065 = +HEAPF64[$3064>>3];
              HEAPF64[$158>>3] = $3065;
              $3066 = +HEAPF64[$3>>3];
              $3067 = (+__Z5IKsind($3066));
              $3068 = (+__Z5IKcosd($3066));
              $3069 = +HEAPF64[$45>>3];
              $3070 = +HEAPF64[$82>>3];
              $3071 = $3069 * $3070;
              $3072 = +HEAPF64[$81>>3];
              $3073 = +HEAPF64[$43>>3];
              $3074 = $3072 * $3073;
              $3075 = +HEAPF64[$121>>3];
              $3076 = $3075 * 0.32100000000000001;
              $3077 = $3068 * 0.80000000000000004;
              $3078 = $3067 * 0.40000000000000002;
              $3079 = $3067 * $3076;
              $3080 = $3078 + $3079;
              $3081 = $3068 * 0.40000000000000002;
              $3082 = $3081 + 0.10000000000000001;
              $3083 = $3068 * $3076;
              $3084 = $3082 + $3083;
              $3085 = $3084 - $3074;
              $3086 = $3085 - $3071;
              $3087 = $3077 * $3074;
              $3088 = $3087 + -0.32000000000000001;
              $3089 = $3068 * 0.080000000000000002;
              $3090 = $3088 - $3089;
              $3091 = $3075 * 0.25679999999999997;
              $3092 = $3090 - $3091;
              $3093 = $3077 * $3071;
              $3094 = $3093 + $3092;
              $3095 = (+__Z5IKabsd($3080));
              $3096 = $3095 > 5.0000000000000004E-6;
              if ($3096) {
               break;
              }
              $3097 = $3067 * 0.10000000000000001;
              $3098 = $3067 * $3071;
              $3099 = $3097 - $3098;
              $3100 = $3067 * $3074;
              $3101 = $3099 - $3100;
              $3102 = (+__Z5IKabsd($3101));
              $3103 = $3102 > 5.0000000000000004E-6;
              if ($3103) {
               break;
              }
              $3104 = (+__Z5IKabsd($3086));
              $3105 = $3104 > 5.0000000000000004E-6;
              if ($3105) {
               break;
              }
              $3106 = (+__Z5IKabsd($3094));
              $3107 = $3106 > 5.0000000000000004E-6;
              if ($3107) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $3108 = (($ij28100$0670) + 1)|0;
            $exitcond852 = ($3108|0)==(2);
            if ($exitcond852) {
             break L15;
            } else {
             $ij28100$0670 = $3108;
            }
           }
          }
          $2459 = -$2452;
          HEAPF64[$47>>3] = 0.0;
          HEAPF64[$22>>3] = 1.5707963267949001;
          HEAPF64[$24>>3] = 1.0;
          HEAPF64[$23>>3] = 0.0;
          $2460 = +HEAPF64[$43>>3];
          $2461 = $2460 * $2460;
          $2462 = +HEAPF64[$45>>3];
          $2463 = $2462 * $2462;
          $2464 = $2461 + $2463;
          HEAPF64[$60>>3] = $2464;
          $2465 = +HEAPF64[$43>>3];
          $2466 = +HEAPF64[$26>>3];
          $2467 = $2465 * $2466;
          $2468 = +HEAPF64[$45>>3];
          $2469 = +HEAPF64[$32>>3];
          $2470 = $2468 * $2469;
          $2471 = $2467 + $2470;
          HEAPF64[$61>>3] = $2471;
          $2472 = +HEAPF64[$43>>3];
          $2473 = +HEAPF64[$28>>3];
          $2474 = $2472 * $2473;
          $2475 = +HEAPF64[$45>>3];
          $2476 = +HEAPF64[$34>>3];
          $2477 = $2475 * $2476;
          $2478 = $2474 + $2477;
          HEAPF64[$62>>3] = $2478;
          $2479 = +HEAPF64[$43>>3];
          $2480 = +HEAPF64[$30>>3];
          $2481 = $2479 * $2480;
          $2482 = +HEAPF64[$45>>3];
          $2483 = +HEAPF64[$36>>3];
          $2484 = $2482 * $2483;
          $2485 = $2481 + $2484;
          HEAPF64[$63>>3] = $2485;
          $2486 = +HEAPF64[$38>>3];
          $2487 = $2486 * $2459;
          HEAPF64[$64>>3] = $2487;
          $2488 = +HEAPF64[$43>>3];
          $2489 = +HEAPF64[$38>>3];
          $2490 = $2488 * $2489;
          HEAPF64[$65>>3] = $2490;
          $2491 = +HEAPF64[$40>>3];
          $2492 = $2491 * $2459;
          HEAPF64[$67>>3] = $2492;
          $2493 = +HEAPF64[$43>>3];
          $2494 = +HEAPF64[$40>>3];
          $2495 = $2493 * $2494;
          HEAPF64[$68>>3] = $2495;
          $2496 = +HEAPF64[$42>>3];
          $2497 = $2496 * $2459;
          HEAPF64[$70>>3] = $2497;
          $2498 = +HEAPF64[$43>>3];
          $2499 = +HEAPF64[$42>>3];
          $2500 = $2498 * $2499;
          HEAPF64[$71>>3] = $2500;
          $2501 = +HEAPF64[$121>>3];
          $2502 = $2501 + 1.2461059190031201;
          $2503 = (+__Z5IKabsd($2502));
          $2504 = $2503 < 9.9999999999999995E-7;
          if (!($2504)) {
           HEAP16[$j28valid92>>1] = 0;
           HEAP8[$6>>0] = 2;
           $2895 = +HEAPF64[$121>>3];
           $2896 = $2895 * 0.32100000000000001;
           $2897 = $2896 + 0.40000000000000002;
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x819,$2897,-1);
           $2898 = HEAP8[$145>>0]|0;
           $2899 = ($2898<<24>>24)==(0);
           if ($2899) {
            break;
           }
           $2900 = +HEAPF64[$x819>>3];
           $2901 = +HEAPF64[$45>>3];
           $2902 = +HEAPF64[$82>>3];
           $2903 = $2901 * $2902;
           $2904 = $2900 * $2903;
           $2905 = +HEAPF64[$81>>3];
           $2906 = +HEAPF64[$43>>3];
           $2907 = $2905 * $2906;
           $2908 = $2900 * $2907;
           $2909 = $2904 + $2908;
           $2910 = $2900 * 0.10000000000000001;
           $2911 = $2909 - $2910;
           HEAPF64[$cj28array90>>3] = $2911;
           $2912 = !($2911 >= -1.0000020000000001);
           $2913 = !($2911 <= 1.0000020000000001);
           $or$cond74 = $2912 | $2913;
           do {
            if ($or$cond74) {
             $2922 = (__Z13__DOUBLE_BITSd($2911)|0);
             $2923 = tempRet0;
             $2924 = $2923 & 2147483647;
             $2925 = ($2924>>>0)>(2146435072);
             $2926 = ($2922>>>0)>(0);
             $2927 = ($2924|0)==(2146435072);
             $2928 = $2927 & $2926;
             $2929 = $2925 | $2928;
             if (!($2929)) {
              $ij2893$0675 = 0;
              break;
             }
             HEAP8[$j28valid92>>0] = 1;
             HEAPF64[$cj28array90>>3] = 1.0;
             HEAPF64[$sj28array91>>3] = 0.0;
             HEAPF64[$j28array89>>3] = 0.0;
             $ij2893$0675 = 0;
            } else {
             HEAP8[$146>>0] = 1;
             HEAP8[$j28valid92>>0] = 1;
             $2914 = +HEAPF64[$cj28array90>>3];
             $2915 = (+__Z6IKacosd($2914));
             HEAPF64[$j28array89>>3] = $2915;
             $2916 = (+__Z5IKsind($2915));
             HEAPF64[$sj28array91>>3] = $2916;
             $2917 = +HEAPF64[$cj28array90>>3];
             HEAPF64[$147>>3] = $2917;
             $2918 = +HEAPF64[$j28array89>>3];
             $2919 = -$2918;
             HEAPF64[$148>>3] = $2919;
             $2920 = +HEAPF64[$sj28array91>>3];
             $2921 = -$2920;
             HEAPF64[$149>>3] = $2921;
             $ij2893$0675 = 0;
            }
           } while(0);
           while(1) {
            $2930 = (($j28valid92) + ($ij2893$0675)|0);
            $2931 = HEAP8[$2930>>0]|0;
            $2932 = ($2931<<24>>24)==(0);
            do {
             if (!($2932)) {
              $2933 = $ij2893$0675&255;
              HEAP8[$4>>0] = $2933;
              HEAP8[$5>>0] = -1;
              $iij2894$0671 = (($ij2893$0675) + 1)|0;
              $2934 = ($iij2894$0671|0)<(2);
              do {
               if ($2934) {
                $2935 = (($sj28array91) + ($ij2893$0675<<3)|0);
                $2936 = (($j28valid92) + ($iij2894$0671)|0);
                $2937 = HEAP8[$2936>>0]|0;
                $2938 = ($2937<<24>>24)==(0);
                if ($2938) {
                 break;
                }
                $2939 = (($cj28array90) + ($ij2893$0675<<3)|0);
                $2940 = +HEAPF64[$2939>>3];
                $2941 = (($cj28array90) + ($iij2894$0671<<3)|0);
                $2942 = +HEAPF64[$2941>>3];
                $2943 = $2940 - $2942;
                $2944 = (+__Z5IKabsd($2943));
                $2945 = $2944 < 9.9999999999999995E-7;
                if (!($2945)) {
                 break;
                }
                $2946 = +HEAPF64[$2935>>3];
                $2947 = (($sj28array91) + ($iij2894$0671<<3)|0);
                $2948 = +HEAPF64[$2947>>3];
                $2949 = $2946 - $2948;
                $2950 = (+__Z5IKabsd($2949));
                $2951 = $2950 < 9.9999999999999995E-7;
                if (!($2951)) {
                 break;
                }
                HEAP8[$2936>>0] = 0;
                $2952 = $iij2894$0671&255;
                HEAP8[$5>>0] = $2952;
               }
              } while(0);
              $2953 = (($j28array89) + ($ij2893$0675<<3)|0);
              $2954 = +HEAPF64[$2953>>3];
              HEAPF64[$3>>3] = $2954;
              $2955 = (($cj28array90) + ($ij2893$0675<<3)|0);
              $2956 = +HEAPF64[$2955>>3];
              HEAPF64[$150>>3] = $2956;
              $2957 = (($sj28array91) + ($ij2893$0675<<3)|0);
              $2958 = +HEAPF64[$2957>>3];
              HEAPF64[$151>>3] = $2958;
              $2959 = +HEAPF64[$3>>3];
              $2960 = (+__Z5IKsind($2959));
              $2961 = (+__Z5IKcosd($2959));
              $2962 = +HEAPF64[$121>>3];
              $2963 = $2962 * 0.32100000000000001;
              $2964 = +HEAPF64[$81>>3];
              $2965 = +HEAPF64[$43>>3];
              $2966 = $2964 * $2965;
              $2967 = +HEAPF64[$45>>3];
              $2968 = +HEAPF64[$82>>3];
              $2969 = $2967 * $2968;
              $2970 = $2961 * $2969;
              $2971 = $2960 * $2963;
              $2972 = $2960 * 0.40000000000000002;
              $2973 = $2972 + $2971;
              $2974 = $2961 * 0.10000000000000001;
              $2975 = $2974 + 0.40000000000000002;
              $2976 = $2975 - $2970;
              $2977 = $2961 * $2966;
              $2978 = $2976 - $2977;
              $2979 = $2963 + $2978;
              $2980 = $2970 * 0.80000000000000004;
              $2981 = $2980 + -0.32000000000000001;
              $2982 = $2961 * 0.080000000000000002;
              $2983 = $2981 - $2982;
              $2984 = $2961 * 0.80000000000000004;
              $2985 = $2984 * $2966;
              $2986 = $2985 + $2983;
              $2987 = $2962 * 0.25679999999999997;
              $2988 = $2986 - $2987;
              $2989 = (+__Z5IKabsd($2973));
              $2990 = $2989 > 5.0000000000000004E-6;
              if ($2990) {
               break;
              }
              $2991 = $2960 * 0.10000000000000001;
              $2992 = $2960 * $2966;
              $2993 = $2991 - $2992;
              $2994 = $2960 * $2969;
              $2995 = $2993 - $2994;
              $2996 = (+__Z5IKabsd($2995));
              $2997 = $2996 > 5.0000000000000004E-6;
              if ($2997) {
               break;
              }
              $2998 = (+__Z5IKabsd($2979));
              $2999 = $2998 > 5.0000000000000004E-6;
              if ($2999) {
               break;
              }
              $3000 = (+__Z5IKabsd($2988));
              $3001 = $3000 > 5.0000000000000004E-6;
              if ($3001) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $3002 = (($ij2893$0675) + 1)|0;
            $exitcond853 = ($3002|0)==(2);
            if ($exitcond853) {
             break L15;
            } else {
             $ij2893$0675 = $3002;
            }
           }
          }
          $2505 = +HEAPF64[$43>>3];
          $2506 = $2505 * $2505;
          $2507 = $2506 * 100.0;
          $2508 = +HEAPF64[$45>>3];
          $2509 = $2508 * $2508;
          $2510 = $2509 * 100.0;
          $2511 = $2507 + $2510;
          $2512 = $2511 < -1.0000000000000001E-5;
          do {
           if (!($2512)) {
            $2513 = (+__Z5IKabsd($2511));
            $2514 = $2513 == 0.0;
            if ($2514) {
             break;
            }
            $2515 = (+__Z6IKsqrtd($2511));
            $2516 = (+__Z5IKabsd($2515));
            $2517 = (+Math_pow((+$2511),-0.5));
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x779,$2516,-1);
            $2518 = HEAP8[$134>>0]|0;
            $2519 = ($2518<<24>>24)==(0);
            if ($2519) {
             break;
            }
            $2520 = +HEAPF64[$x779>>3];
            $2521 = +HEAPF64[$43>>3];
            $2522 = $2521 * 10.0;
            $2523 = $2517 * $2522;
            $2524 = +HEAPF64[$45>>3];
            $2525 = $2524 * 10.0;
            $2526 = $2517 * $2525;
            $2527 = $2520 * $2520;
            $2528 = 1.0 - $2527;
            $2529 = $2528 < -1.0000000000000001E-5;
            if ($2529) {
             break;
            }
            $2530 = (+__Z6IKsqrtd($2528));
            $2531 = $2520 < -1.0000020000000001;
            $2532 = $2520 > 1.0000020000000001;
            $or$cond = $2531 | $2532;
            if ($or$cond) {
             break;
            }
            $2533 = $2521 * -10.0;
            $2534 = $2524 * -10.0;
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x780,$2533,$2534,1.9999999999999999E-6);
            $2535 = HEAP8[$135>>0]|0;
            $2536 = ($2535<<24>>24)==(0);
            if ($2536) {
             break;
            }
            (+__Z6IKasind($2520));
            $2537 = $2520 * $2526;
            $2538 = $2523 * $2530;
            $2539 = $2537 + $2538;
            $2540 = $2520 * $2523;
            $2541 = $2526 * $2530;
            $2542 = $2540 - $2541;
            $2543 = +HEAPF64[$43>>3];
            $2544 = $2543 * $2543;
            $2545 = +HEAPF64[$45>>3];
            $2546 = $2545 * $2545;
            $2547 = $2539 * $2543;
            $2548 = +HEAPF64[$122>>3];
            $2549 = $2548 * 0.32100000000000001;
            $2550 = $2547 + $2549;
            $2551 = -$2542;
            $2552 = $2545 * $2551;
            $2553 = $2552 + $2550;
            $2554 = $2543 * -10.0;
            $2555 = $2545 * -10.0;
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x784,$2554,$2555,1.9999999999999999E-6);
            $2556 = HEAP8[$136>>0]|0;
            $2557 = ($2556<<24>>24)==(0);
            if ($2557) {
             break;
            }
            $2558 = $2546 * 100.0;
            $2559 = $2544 * 100.0;
            $2560 = $2559 + $2558;
            $2561 = $2560 < -1.0000000000000001E-5;
            if ($2561) {
             break;
            }
            $2562 = (+__Z6IKsqrtd($2560));
            $2563 = (+__Z5IKabsd($2562));
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x785,$2563,-1);
            $2564 = HEAP8[$137>>0]|0;
            $2565 = ($2564<<24>>24)==(0);
            if ($2565) {
             break;
            }
            $2566 = +HEAPF64[$x785>>3];
            $2567 = $2566 < -1.0000020000000001;
            $2568 = $2566 > 1.0000020000000001;
            $or$cond54 = $2567 | $2568;
            if ($or$cond54) {
             break;
            }
            $2569 = +HEAPF64[$this>>3];
            $2570 = +HEAPF64[$x784>>3];
            $2571 = $2569 + $2570;
            $2572 = (+__Z6IKasind($2566));
            $2573 = $2571 + $2572;
            $2574 = (+__Z5IKabsd($2573));
            $2575 = $2574 + 3.14159265358979;
            $2576 = (+__Z6IKfmoddd($2575,6.2831853071795898));
            $2577 = $2576 + -3.14159265358979;
            $2578 = +HEAPF64[$121>>3];
            $2579 = $2578 * 0.25679999999999997;
            $2580 = $2579 + 0.25304100000000002;
            $2581 = $2539 * 0.20000000000000001;
            $2582 = +HEAPF64[$45>>3];
            $2583 = $2581 * $2582;
            $2584 = $2580 + $2583;
            $2585 = $2542 * 0.20000000000000001;
            $2586 = +HEAPF64[$43>>3];
            $2587 = $2585 * $2586;
            $2588 = $2584 + $2587;
            $2589 = $2588 - $2544;
            $2590 = $2589 - $2546;
            $2591 = (+__Z5IKabsd($2577));
            $2592 = $2591 < 9.9999999999999995E-7;
            if (!($2592)) {
             break;
            }
            $2593 = (+__Z5IKabsd($2553));
            $2594 = $2593 < 9.9999999999999995E-7;
            if (!($2594)) {
             break;
            }
            $2595 = (+__Z5IKabsd($2590));
            $2596 = $2595 < 9.9999999999999995E-7;
            if (!($2596)) {
             break;
            }
            HEAP16[$j28valid76>>1] = 0;
            HEAP8[$6>>0] = 2;
            $2597 = +HEAPF64[$45>>3];
            $2598 = $2539 * $2597;
            $2599 = 0.10000000000000001 - $2598;
            $2600 = +HEAPF64[$43>>3];
            $2601 = $2600 * $2551;
            $2602 = $2599 + $2601;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x787,$2602,-1);
            $2603 = HEAP8[$138>>0]|0;
            $2604 = ($2603<<24>>24)==(0);
            if ($2604) {
             break L15;
            }
            $2605 = +HEAPF64[$x787>>3];
            $2606 = +HEAPF64[$121>>3];
            $2607 = $2606 * -0.32100000000000001;
            $2608 = $2605 * $2607;
            $2609 = $2605 * 0.40000000000000002;
            $2610 = $2608 - $2609;
            HEAPF64[$cj28array74>>3] = $2610;
            $2611 = !($2610 >= -1.0000020000000001);
            $2612 = !($2610 <= 1.0000020000000001);
            $or$cond55 = $2611 | $2612;
            do {
             if ($or$cond55) {
              $2621 = (__Z13__DOUBLE_BITSd($2610)|0);
              $2622 = tempRet0;
              $2623 = $2622 & 2147483647;
              $2624 = ($2623>>>0)>(2146435072);
              $2625 = ($2621>>>0)>(0);
              $2626 = ($2623|0)==(2146435072);
              $2627 = $2626 & $2625;
              $2628 = $2624 | $2627;
              if (!($2628)) {
               $ij2877$0680 = 0;
               break;
              }
              HEAP8[$j28valid76>>0] = 1;
              HEAPF64[$cj28array74>>3] = 1.0;
              HEAPF64[$sj28array75>>3] = 0.0;
              HEAPF64[$j28array73>>3] = 0.0;
              $ij2877$0680 = 0;
             } else {
              HEAP8[$139>>0] = 1;
              HEAP8[$j28valid76>>0] = 1;
              $2613 = +HEAPF64[$cj28array74>>3];
              $2614 = (+__Z6IKacosd($2613));
              HEAPF64[$j28array73>>3] = $2614;
              $2615 = (+__Z5IKsind($2614));
              HEAPF64[$sj28array75>>3] = $2615;
              $2616 = +HEAPF64[$cj28array74>>3];
              HEAPF64[$140>>3] = $2616;
              $2617 = +HEAPF64[$j28array73>>3];
              $2618 = -$2617;
              HEAPF64[$141>>3] = $2618;
              $2619 = +HEAPF64[$sj28array75>>3];
              $2620 = -$2619;
              HEAPF64[$142>>3] = $2620;
              $ij2877$0680 = 0;
             }
            } while(0);
            while(1) {
             $2629 = (($j28valid76) + ($ij2877$0680)|0);
             $2630 = HEAP8[$2629>>0]|0;
             $2631 = ($2630<<24>>24)==(0);
             do {
              if (!($2631)) {
               $2632 = $ij2877$0680&255;
               HEAP8[$4>>0] = $2632;
               HEAP8[$5>>0] = -1;
               $iij2878$0676 = (($ij2877$0680) + 1)|0;
               $2633 = ($iij2878$0676|0)<(2);
               do {
                if ($2633) {
                 $2634 = (($sj28array75) + ($ij2877$0680<<3)|0);
                 $2635 = (($j28valid76) + ($iij2878$0676)|0);
                 $2636 = HEAP8[$2635>>0]|0;
                 $2637 = ($2636<<24>>24)==(0);
                 if ($2637) {
                  break;
                 }
                 $2638 = (($cj28array74) + ($ij2877$0680<<3)|0);
                 $2639 = +HEAPF64[$2638>>3];
                 $2640 = (($cj28array74) + ($iij2878$0676<<3)|0);
                 $2641 = +HEAPF64[$2640>>3];
                 $2642 = $2639 - $2641;
                 $2643 = (+__Z5IKabsd($2642));
                 $2644 = $2643 < 9.9999999999999995E-7;
                 if (!($2644)) {
                  break;
                 }
                 $2645 = +HEAPF64[$2634>>3];
                 $2646 = (($sj28array75) + ($iij2878$0676<<3)|0);
                 $2647 = +HEAPF64[$2646>>3];
                 $2648 = $2645 - $2647;
                 $2649 = (+__Z5IKabsd($2648));
                 $2650 = $2649 < 9.9999999999999995E-7;
                 if (!($2650)) {
                  break;
                 }
                 HEAP8[$2635>>0] = 0;
                 $2651 = $iij2878$0676&255;
                 HEAP8[$5>>0] = $2651;
                }
               } while(0);
               $2652 = (($j28array73) + ($ij2877$0680<<3)|0);
               $2653 = +HEAPF64[$2652>>3];
               HEAPF64[$3>>3] = $2653;
               $2654 = (($cj28array74) + ($ij2877$0680<<3)|0);
               $2655 = +HEAPF64[$2654>>3];
               HEAPF64[$143>>3] = $2655;
               $2656 = (($sj28array75) + ($ij2877$0680<<3)|0);
               $2657 = +HEAPF64[$2656>>3];
               HEAPF64[$144>>3] = $2657;
               $2658 = +HEAPF64[$3>>3];
               $2659 = (+__Z5IKsind($2658));
               $2660 = (+__Z5IKcosd($2658));
               $2661 = +HEAPF64[$45>>3];
               $2662 = $2539 * $2661;
               $2663 = +HEAPF64[$43>>3];
               $2664 = $2542 * $2663;
               $2665 = +HEAPF64[$121>>3];
               $2666 = $2665 * 0.32100000000000001;
               $2667 = $2660 * 0.80000000000000004;
               $2668 = $2659 * $2666;
               $2669 = $2659 * 0.40000000000000002;
               $2670 = $2669 + $2668;
               $2671 = 0.10000000000000001 - $2664;
               $2672 = $2671 - $2662;
               $2673 = $2660 * 0.40000000000000002;
               $2674 = $2673 + $2672;
               $2675 = $2660 * $2666;
               $2676 = $2675 + $2674;
               $2677 = $2667 * $2662;
               $2678 = $2677 + -0.32000000000000001;
               $2679 = $2660 * 0.080000000000000002;
               $2680 = $2678 - $2679;
               $2681 = $2665 * 0.25679999999999997;
               $2682 = $2680 - $2681;
               $2683 = $2667 * $2664;
               $2684 = $2683 + $2682;
               $2685 = (+__Z5IKabsd($2670));
               $2686 = $2685 > 5.0000000000000004E-6;
               if ($2686) {
                break;
               }
               $2687 = $2659 * $2664;
               $2688 = $2659 * 0.10000000000000001;
               $2689 = $2688 - $2687;
               $2690 = $2659 * $2662;
               $2691 = $2689 - $2690;
               $2692 = (+__Z5IKabsd($2691));
               $2693 = $2692 > 5.0000000000000004E-6;
               if ($2693) {
                break;
               }
               $2694 = (+__Z5IKabsd($2676));
               $2695 = $2694 > 5.0000000000000004E-6;
               if ($2695) {
                break;
               }
               $2696 = (+__Z5IKabsd($2684));
               $2697 = $2696 > 5.0000000000000004E-6;
               if ($2697) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $2698 = (($ij2877$0680) + 1)|0;
             $exitcond854 = ($2698|0)==(2);
             if ($exitcond854) {
              break L15;
             } else {
              $ij2877$0680 = $2698;
             }
            }
           }
          } while(0);
          $2699 = +HEAPF64[$43>>3];
          $2700 = $2699 * $2699;
          $2701 = $2700 * 100.0;
          $2702 = +HEAPF64[$45>>3];
          $2703 = $2702 * $2702;
          $2704 = $2703 * 100.0;
          $2705 = $2701 + $2704;
          $2706 = (+__Z5IKabsd($2705));
          $2707 = $2706 == 0.0;
          if ($2707) {
           break;
          }
          $2708 = (+Math_pow((+$2705),-0.5));
          $2709 = $2705 < -1.0000000000000001E-5;
          if ($2709) {
           break;
          }
          $2710 = (+__Z6IKsqrtd($2705));
          $2711 = (+__Z5IKabsd($2710));
          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x803,$2711,-1);
          $2712 = HEAP8[$123>>0]|0;
          $2713 = ($2712<<24>>24)==(0);
          if ($2713) {
           break;
          }
          $2714 = +HEAPF64[$x803>>3];
          $2715 = +HEAPF64[$43>>3];
          $2716 = $2715 * 10.0;
          $2717 = $2708 * $2716;
          $2718 = +HEAPF64[$45>>3];
          $2719 = $2718 * 10.0;
          $2720 = $2708 * $2719;
          $2721 = $2714 * $2714;
          $2722 = 1.0 - $2721;
          $2723 = $2722 < -1.0000000000000001E-5;
          if ($2723) {
           break;
          }
          $2724 = (+__Z6IKsqrtd($2722));
          $2725 = $2715 * -10.0;
          $2726 = $2718 * -10.0;
          __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x804,$2725,$2726,1.9999999999999999E-6);
          $2727 = HEAP8[$124>>0]|0;
          $2728 = ($2727<<24>>24)==(0);
          if ($2728) {
           break;
          }
          $2729 = $2714 < -1.0000020000000001;
          $2730 = $2714 > 1.0000020000000001;
          $or$cond8 = $2729 | $2730;
          if ($or$cond8) {
           break;
          }
          (+__Z6IKasind($2714));
          $2731 = $2717 * $2724;
          $2732 = $2714 * $2720;
          $2733 = $2732 - $2731;
          $2734 = $2720 * $2724;
          $2735 = $2714 * $2717;
          $2736 = $2735 + $2734;
          $2737 = +HEAPF64[$43>>3];
          $2738 = $2737 * $2737;
          $2739 = +HEAPF64[$45>>3];
          $2740 = $2739 * $2739;
          $2741 = +HEAPF64[$122>>3];
          $2742 = $2741 * 0.32100000000000001;
          $2743 = -$2736;
          $2744 = $2739 * $2743;
          $2745 = $2744 + $2742;
          $2746 = $2733 * $2737;
          $2747 = $2746 + $2745;
          $2748 = $2737 * -10.0;
          $2749 = $2739 * -10.0;
          __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x808,$2748,$2749,1.9999999999999999E-6);
          $2750 = HEAP8[$125>>0]|0;
          $2751 = ($2750<<24>>24)==(0);
          if ($2751) {
           break;
          }
          $2752 = $2740 * 100.0;
          $2753 = $2738 * 100.0;
          $2754 = $2753 + $2752;
          $2755 = $2754 < -1.0000000000000001E-5;
          if ($2755) {
           break;
          }
          $2756 = (+__Z6IKsqrtd($2754));
          $2757 = (+__Z5IKabsd($2756));
          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x809,$2757,-1);
          $2758 = HEAP8[$126>>0]|0;
          $2759 = ($2758<<24>>24)==(0);
          if ($2759) {
           break;
          }
          $2760 = +HEAPF64[$x809>>3];
          $2761 = $2760 < -1.0000020000000001;
          $2762 = $2760 > 1.0000020000000001;
          $or$cond64 = $2761 | $2762;
          if ($or$cond64) {
           break;
          }
          $2763 = +HEAPF64[$this>>3];
          $2764 = $2763 + -3.14159265358979;
          $2765 = +HEAPF64[$x808>>3];
          $2766 = $2764 + $2765;
          $2767 = (+__Z6IKasind($2760));
          $2768 = $2766 - $2767;
          $2769 = (+__Z5IKabsd($2768));
          $2770 = $2769 + 3.14159265358979;
          $2771 = (+__Z6IKfmoddd($2770,6.2831853071795898));
          $2772 = $2771 + -3.14159265358979;
          $2773 = 0.25304100000000002 - $2738;
          $2774 = $2773 - $2740;
          $2775 = +HEAPF64[$121>>3];
          $2776 = $2775 * 0.25679999999999997;
          $2777 = $2774 + $2776;
          $2778 = $2736 * 0.20000000000000001;
          $2779 = +HEAPF64[$43>>3];
          $2780 = $2778 * $2779;
          $2781 = $2777 + $2780;
          $2782 = $2733 * 0.20000000000000001;
          $2783 = +HEAPF64[$45>>3];
          $2784 = $2782 * $2783;
          $2785 = $2781 + $2784;
          $2786 = (+__Z5IKabsd($2772));
          $2787 = $2786 < 9.9999999999999995E-7;
          if (!($2787)) {
           break;
          }
          $2788 = (+__Z5IKabsd($2747));
          $2789 = $2788 < 9.9999999999999995E-7;
          if (!($2789)) {
           break;
          }
          $2790 = (+__Z5IKabsd($2785));
          $2791 = $2790 < 9.9999999999999995E-7;
          if (!($2791)) {
           break;
          }
          HEAP16[$j28valid84>>1] = 0;
          HEAP8[$6>>0] = 2;
          $2792 = +HEAPF64[$43>>3];
          $2793 = $2792 * $2743;
          $2794 = $2793 + 0.10000000000000001;
          $2795 = +HEAPF64[$45>>3];
          $2796 = $2733 * $2795;
          $2797 = $2794 - $2796;
          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x811,$2797,-1);
          $2798 = HEAP8[$127>>0]|0;
          $2799 = ($2798<<24>>24)==(0);
          if ($2799) {
           break;
          }
          $2800 = +HEAPF64[$x811>>3];
          $2801 = $2800 * 0.40000000000000002;
          $2802 = +HEAPF64[$121>>3];
          $2803 = $2802 * -0.32100000000000001;
          $2804 = $2800 * $2803;
          $2805 = $2804 - $2801;
          HEAPF64[$cj28array82>>3] = $2805;
          $2806 = !($2805 >= -1.0000020000000001);
          $2807 = !($2805 <= 1.0000020000000001);
          $or$cond65 = $2806 | $2807;
          do {
           if ($or$cond65) {
            $2816 = (__Z13__DOUBLE_BITSd($2805)|0);
            $2817 = tempRet0;
            $2818 = $2817 & 2147483647;
            $2819 = ($2818>>>0)>(2146435072);
            $2820 = ($2816>>>0)>(0);
            $2821 = ($2818|0)==(2146435072);
            $2822 = $2821 & $2820;
            $2823 = $2819 | $2822;
            if (!($2823)) {
             $ij2885$0685 = 0;
             break;
            }
            HEAP8[$j28valid84>>0] = 1;
            HEAPF64[$cj28array82>>3] = 1.0;
            HEAPF64[$sj28array83>>3] = 0.0;
            HEAPF64[$j28array81>>3] = 0.0;
            $ij2885$0685 = 0;
           } else {
            HEAP8[$128>>0] = 1;
            HEAP8[$j28valid84>>0] = 1;
            $2808 = +HEAPF64[$cj28array82>>3];
            $2809 = (+__Z6IKacosd($2808));
            HEAPF64[$j28array81>>3] = $2809;
            $2810 = (+__Z5IKsind($2809));
            HEAPF64[$sj28array83>>3] = $2810;
            $2811 = +HEAPF64[$cj28array82>>3];
            HEAPF64[$129>>3] = $2811;
            $2812 = +HEAPF64[$j28array81>>3];
            $2813 = -$2812;
            HEAPF64[$130>>3] = $2813;
            $2814 = +HEAPF64[$sj28array83>>3];
            $2815 = -$2814;
            HEAPF64[$131>>3] = $2815;
            $ij2885$0685 = 0;
           }
          } while(0);
          while(1) {
           $2824 = (($j28valid84) + ($ij2885$0685)|0);
           $2825 = HEAP8[$2824>>0]|0;
           $2826 = ($2825<<24>>24)==(0);
           do {
            if (!($2826)) {
             $2827 = $ij2885$0685&255;
             HEAP8[$4>>0] = $2827;
             HEAP8[$5>>0] = -1;
             $iij2886$0681 = (($ij2885$0685) + 1)|0;
             $2828 = ($iij2886$0681|0)<(2);
             do {
              if ($2828) {
               $2829 = (($sj28array83) + ($ij2885$0685<<3)|0);
               $2830 = (($j28valid84) + ($iij2886$0681)|0);
               $2831 = HEAP8[$2830>>0]|0;
               $2832 = ($2831<<24>>24)==(0);
               if ($2832) {
                break;
               }
               $2833 = (($cj28array82) + ($ij2885$0685<<3)|0);
               $2834 = +HEAPF64[$2833>>3];
               $2835 = (($cj28array82) + ($iij2886$0681<<3)|0);
               $2836 = +HEAPF64[$2835>>3];
               $2837 = $2834 - $2836;
               $2838 = (+__Z5IKabsd($2837));
               $2839 = $2838 < 9.9999999999999995E-7;
               if (!($2839)) {
                break;
               }
               $2840 = +HEAPF64[$2829>>3];
               $2841 = (($sj28array83) + ($iij2886$0681<<3)|0);
               $2842 = +HEAPF64[$2841>>3];
               $2843 = $2840 - $2842;
               $2844 = (+__Z5IKabsd($2843));
               $2845 = $2844 < 9.9999999999999995E-7;
               if (!($2845)) {
                break;
               }
               HEAP8[$2830>>0] = 0;
               $2846 = $iij2886$0681&255;
               HEAP8[$5>>0] = $2846;
              }
             } while(0);
             $2847 = (($j28array81) + ($ij2885$0685<<3)|0);
             $2848 = +HEAPF64[$2847>>3];
             HEAPF64[$3>>3] = $2848;
             $2849 = (($cj28array82) + ($ij2885$0685<<3)|0);
             $2850 = +HEAPF64[$2849>>3];
             HEAPF64[$132>>3] = $2850;
             $2851 = (($sj28array83) + ($ij2885$0685<<3)|0);
             $2852 = +HEAPF64[$2851>>3];
             HEAPF64[$133>>3] = $2852;
             $2853 = +HEAPF64[$3>>3];
             $2854 = (+__Z5IKsind($2853));
             $2855 = (+__Z5IKcosd($2853));
             $2856 = +HEAPF64[$45>>3];
             $2857 = $2733 * $2856;
             $2858 = +HEAPF64[$121>>3];
             $2859 = $2858 * 0.32100000000000001;
             $2860 = $2855 * 0.80000000000000004;
             $2861 = +HEAPF64[$43>>3];
             $2862 = $2736 * $2861;
             $2863 = $2854 * $2859;
             $2864 = $2854 * 0.40000000000000002;
             $2865 = $2864 + $2863;
             $2866 = -$2854;
             $2867 = 0.10000000000000001 - $2862;
             $2868 = $2855 * $2859;
             $2869 = $2868 + $2867;
             $2870 = $2855 * 0.40000000000000002;
             $2871 = $2870 + $2869;
             $2872 = $2871 - $2857;
             $2873 = $2860 * $2857;
             $2874 = $2873 + -0.32000000000000001;
             $2875 = $2860 * $2862;
             $2876 = $2874 + $2875;
             $2877 = $2858 * 0.25679999999999997;
             $2878 = $2876 - $2877;
             $2879 = $2855 * 0.080000000000000002;
             $2880 = $2878 - $2879;
             $2881 = (+__Z5IKabsd($2865));
             $2882 = $2881 > 5.0000000000000004E-6;
             if ($2882) {
              break;
             }
             $2883 = $2862 * $2866;
             $2884 = $2857 * $2866;
             $2885 = $2884 + $2883;
             $2886 = $2854 * 0.10000000000000001;
             $2887 = $2886 + $2885;
             $2888 = (+__Z5IKabsd($2887));
             $2889 = $2888 > 5.0000000000000004E-6;
             if ($2889) {
              break;
             }
             $2890 = (+__Z5IKabsd($2872));
             $2891 = $2890 > 5.0000000000000004E-6;
             if ($2891) {
              break;
             }
             $2892 = (+__Z5IKabsd($2880));
             $2893 = $2892 > 5.0000000000000004E-6;
             if ($2893) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $2894 = (($ij2885$0685) + 1)|0;
           $exitcond855 = ($2894|0)==(2);
           if ($exitcond855) {
            break L15;
           } else {
            $ij2885$0685 = $2894;
           }
          }
         }
        }
       }
       $3109 = +HEAPF64[$122>>3];
       $3110 = $3109 * 0.32100000000000001;
       $3111 = +HEAPF64[$81>>3];
       $3112 = +HEAPF64[$45>>3];
       $3113 = $3111 * $3112;
       $3114 = +HEAPF64[$43>>3];
       $3115 = +HEAPF64[$82>>3];
       $3116 = $3114 * $3115;
       $3117 = +HEAPF64[$47>>3];
       $3118 = (+__Z5IKabsd($3117));
       $3119 = +HEAPF64[$22>>3];
       $3120 = $3119 + 4.7123889803846897;
       $3121 = (+__Z6IKfmoddd($3120,6.2831853071795898));
       $3122 = $3121 + -3.14159265358979;
       $3123 = (+__Z5IKabsd($3122));
       $3124 = $3118 + $3123;
       $3125 = +HEAPF64[$121>>3];
       $3126 = $3125 * 0.25679999999999997;
       $3127 = $3126 + 0.25304100000000002;
       $3128 = +HEAPF64[$60>>3];
       $3129 = $3127 - $3128;
       $3130 = $3112 * 0.20000000000000001;
       $3131 = $3130 * $3115;
       $3132 = $3131 + $3129;
       $3133 = $3111 * 0.20000000000000001;
       $3134 = $3133 * $3114;
       $3135 = $3134 + $3132;
       $3136 = $3110 - $3116;
       $3137 = $3113 + $3136;
       $3138 = (+__Z5IKabsd($3124));
       $3139 = $3138 < 9.9999999999999995E-7;
       do {
        if ($3139) {
         $3140 = -$3113;
         $3141 = $3140 - $3110;
         $3142 = $3141 + $3116;
         $3143 = (+__Z5IKabsd($3142));
         $3144 = $3143 < 9.9999999999999995E-7;
         if ($3144) {
          $3145 = (+__Z5IKabsd($3135));
          $3146 = $3145 < 9.9999999999999995E-7;
          if ($3146) {
           $3147 = (+__Z5IKabsd($3137));
           $3148 = $3147 < 9.9999999999999995E-7;
           if (!($3148)) {
            break;
           }
           $3149 = -$3112;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           $3150 = +HEAPF64[$43>>3];
           $3151 = $3150 * $3150;
           $3152 = +HEAPF64[$45>>3];
           $3153 = $3152 * $3152;
           $3154 = $3151 + $3153;
           HEAPF64[$60>>3] = $3154;
           $3155 = +HEAPF64[$43>>3];
           $3156 = +HEAPF64[$26>>3];
           $3157 = $3155 * $3156;
           $3158 = +HEAPF64[$45>>3];
           $3159 = +HEAPF64[$32>>3];
           $3160 = $3158 * $3159;
           $3161 = $3157 + $3160;
           HEAPF64[$61>>3] = $3161;
           $3162 = +HEAPF64[$43>>3];
           $3163 = +HEAPF64[$28>>3];
           $3164 = $3162 * $3163;
           $3165 = +HEAPF64[$45>>3];
           $3166 = +HEAPF64[$34>>3];
           $3167 = $3165 * $3166;
           $3168 = $3164 + $3167;
           HEAPF64[$62>>3] = $3168;
           $3169 = +HEAPF64[$43>>3];
           $3170 = +HEAPF64[$30>>3];
           $3171 = $3169 * $3170;
           $3172 = +HEAPF64[$45>>3];
           $3173 = +HEAPF64[$36>>3];
           $3174 = $3172 * $3173;
           $3175 = $3171 + $3174;
           HEAPF64[$63>>3] = $3175;
           $3176 = +HEAPF64[$38>>3];
           $3177 = $3176 * $3149;
           HEAPF64[$64>>3] = $3177;
           $3178 = +HEAPF64[$43>>3];
           $3179 = +HEAPF64[$38>>3];
           $3180 = $3178 * $3179;
           HEAPF64[$65>>3] = $3180;
           $3181 = +HEAPF64[$40>>3];
           $3182 = $3181 * $3149;
           HEAPF64[$67>>3] = $3182;
           $3183 = +HEAPF64[$43>>3];
           $3184 = +HEAPF64[$40>>3];
           $3185 = $3183 * $3184;
           HEAPF64[$68>>3] = $3185;
           $3186 = +HEAPF64[$42>>3];
           $3187 = $3186 * $3149;
           HEAPF64[$70>>3] = $3187;
           $3188 = +HEAPF64[$43>>3];
           $3189 = +HEAPF64[$42>>3];
           $3190 = $3188 * $3189;
           HEAPF64[$71>>3] = $3190;
           $3191 = +HEAPF64[$81>>3];
           $3192 = $3191 * -10.0;
           $3193 = +HEAPF64[$43>>3];
           $3194 = $3192 * $3193;
           $3195 = $3194 + 1.0;
           $3196 = +HEAPF64[$45>>3];
           $3197 = $3196 * -10.0;
           $3198 = +HEAPF64[$82>>3];
           $3199 = $3197 * $3198;
           $3200 = $3195 + $3199;
           $3201 = (+__Z5IKabsd($3200));
           $3202 = $3201 < 9.9999999999999995E-7;
           if (!($3202)) {
            HEAP16[$j28valid134>>1] = 0;
            HEAP8[$6>>0] = 2;
            $3758 = +HEAPF64[$45>>3];
            $3759 = +HEAPF64[$82>>3];
            $3760 = $3758 * $3759;
            $3761 = 0.10000000000000001 - $3760;
            $3762 = +HEAPF64[$81>>3];
            $3763 = +HEAPF64[$43>>3];
            $3764 = $3762 * $3763;
            $3765 = $3761 - $3764;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x898,$3765,-1);
            $3766 = HEAP8[$188>>0]|0;
            $3767 = ($3766<<24>>24)==(0);
            if ($3767) {
             break L15;
            }
            $3768 = +HEAPF64[$x898>>3];
            $3769 = $3768 * 0.40000000000000002;
            $3770 = +HEAPF64[$121>>3];
            $3771 = $3770 * -0.32100000000000001;
            $3772 = $3768 * $3771;
            $3773 = $3772 - $3769;
            HEAPF64[$cj28array132>>3] = $3773;
            $3774 = !($3773 >= -1.0000020000000001);
            $3775 = !($3773 <= 1.0000020000000001);
            $or$cond105 = $3774 | $3775;
            do {
             if ($or$cond105) {
              $3784 = (__Z13__DOUBLE_BITSd($3773)|0);
              $3785 = tempRet0;
              $3786 = $3785 & 2147483647;
              $3787 = ($3786>>>0)>(2146435072);
              $3788 = ($3784>>>0)>(0);
              $3789 = ($3786|0)==(2146435072);
              $3790 = $3789 & $3788;
              $3791 = $3787 | $3790;
              if (!($3791)) {
               $ij28135$0650 = 0;
               break;
              }
              HEAP8[$j28valid134>>0] = 1;
              HEAPF64[$cj28array132>>3] = 1.0;
              HEAPF64[$sj28array133>>3] = 0.0;
              HEAPF64[$j28array131>>3] = 0.0;
              $ij28135$0650 = 0;
             } else {
              HEAP8[$189>>0] = 1;
              HEAP8[$j28valid134>>0] = 1;
              $3776 = +HEAPF64[$cj28array132>>3];
              $3777 = (+__Z6IKacosd($3776));
              HEAPF64[$j28array131>>3] = $3777;
              $3778 = (+__Z5IKsind($3777));
              HEAPF64[$sj28array133>>3] = $3778;
              $3779 = +HEAPF64[$cj28array132>>3];
              HEAPF64[$190>>3] = $3779;
              $3780 = +HEAPF64[$j28array131>>3];
              $3781 = -$3780;
              HEAPF64[$191>>3] = $3781;
              $3782 = +HEAPF64[$sj28array133>>3];
              $3783 = -$3782;
              HEAPF64[$192>>3] = $3783;
              $ij28135$0650 = 0;
             }
            } while(0);
            while(1) {
             $3792 = (($j28valid134) + ($ij28135$0650)|0);
             $3793 = HEAP8[$3792>>0]|0;
             $3794 = ($3793<<24>>24)==(0);
             do {
              if (!($3794)) {
               $3795 = $ij28135$0650&255;
               HEAP8[$4>>0] = $3795;
               HEAP8[$5>>0] = -1;
               $iij28136$0646 = (($ij28135$0650) + 1)|0;
               $3796 = ($iij28136$0646|0)<(2);
               do {
                if ($3796) {
                 $3797 = (($sj28array133) + ($ij28135$0650<<3)|0);
                 $3798 = (($j28valid134) + ($iij28136$0646)|0);
                 $3799 = HEAP8[$3798>>0]|0;
                 $3800 = ($3799<<24>>24)==(0);
                 if ($3800) {
                  break;
                 }
                 $3801 = (($cj28array132) + ($ij28135$0650<<3)|0);
                 $3802 = +HEAPF64[$3801>>3];
                 $3803 = (($cj28array132) + ($iij28136$0646<<3)|0);
                 $3804 = +HEAPF64[$3803>>3];
                 $3805 = $3802 - $3804;
                 $3806 = (+__Z5IKabsd($3805));
                 $3807 = $3806 < 9.9999999999999995E-7;
                 if (!($3807)) {
                  break;
                 }
                 $3808 = +HEAPF64[$3797>>3];
                 $3809 = (($sj28array133) + ($iij28136$0646<<3)|0);
                 $3810 = +HEAPF64[$3809>>3];
                 $3811 = $3808 - $3810;
                 $3812 = (+__Z5IKabsd($3811));
                 $3813 = $3812 < 9.9999999999999995E-7;
                 if (!($3813)) {
                  break;
                 }
                 HEAP8[$3798>>0] = 0;
                 $3814 = $iij28136$0646&255;
                 HEAP8[$5>>0] = $3814;
                }
               } while(0);
               $3815 = (($j28array131) + ($ij28135$0650<<3)|0);
               $3816 = +HEAPF64[$3815>>3];
               HEAPF64[$3>>3] = $3816;
               $3817 = (($cj28array132) + ($ij28135$0650<<3)|0);
               $3818 = +HEAPF64[$3817>>3];
               HEAPF64[$193>>3] = $3818;
               $3819 = (($sj28array133) + ($ij28135$0650<<3)|0);
               $3820 = +HEAPF64[$3819>>3];
               HEAPF64[$194>>3] = $3820;
               $3821 = +HEAPF64[$3>>3];
               $3822 = (+__Z5IKsind($3821));
               $3823 = (+__Z5IKcosd($3821));
               $3824 = +HEAPF64[$45>>3];
               $3825 = +HEAPF64[$82>>3];
               $3826 = $3824 * $3825;
               $3827 = +HEAPF64[$81>>3];
               $3828 = +HEAPF64[$43>>3];
               $3829 = $3827 * $3828;
               $3830 = +HEAPF64[$121>>3];
               $3831 = $3830 * 0.32100000000000001;
               $3832 = $3823 * 0.80000000000000004;
               $3833 = $3822 * 0.40000000000000002;
               $3834 = $3822 * $3831;
               $3835 = $3833 + $3834;
               $3836 = $3823 * $3831;
               $3837 = $3836 + 0.10000000000000001;
               $3838 = $3823 * 0.40000000000000002;
               $3839 = $3838 + $3837;
               $3840 = $3839 - $3829;
               $3841 = $3840 - $3826;
               $3842 = $3832 * $3826;
               $3843 = $3842 + -0.32000000000000001;
               $3844 = $3832 * $3829;
               $3845 = $3843 + $3844;
               $3846 = $3823 * 0.080000000000000002;
               $3847 = $3845 - $3846;
               $3848 = $3830 * 0.25679999999999997;
               $3849 = $3847 - $3848;
               $3850 = (+__Z5IKabsd($3835));
               $3851 = $3850 > 5.0000000000000004E-6;
               if ($3851) {
                break;
               }
               $3852 = $3822 * 0.10000000000000001;
               $3853 = $3822 * $3826;
               $3854 = $3853 - $3852;
               $3855 = $3822 * $3829;
               $3856 = $3854 + $3855;
               $3857 = (+__Z5IKabsd($3856));
               $3858 = $3857 > 5.0000000000000004E-6;
               if ($3858) {
                break;
               }
               $3859 = (+__Z5IKabsd($3841));
               $3860 = $3859 > 5.0000000000000004E-6;
               if ($3860) {
                break;
               }
               $3861 = (+__Z5IKabsd($3849));
               $3862 = $3861 > 5.0000000000000004E-6;
               if ($3862) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $3863 = (($ij28135$0650) + 1)|0;
             $exitcond848 = ($3863|0)==(2);
             if ($exitcond848) {
              break L15;
             } else {
              $ij28135$0650 = $3863;
             }
            }
           }
           $3203 = -$3196;
           HEAPF64[$47>>3] = 0.0;
           HEAPF64[$22>>3] = -1.5707963267949001;
           HEAPF64[$24>>3] = -1.0;
           HEAPF64[$23>>3] = 0.0;
           $3204 = +HEAPF64[$43>>3];
           $3205 = $3204 * $3204;
           $3206 = +HEAPF64[$45>>3];
           $3207 = $3206 * $3206;
           $3208 = $3205 + $3207;
           HEAPF64[$60>>3] = $3208;
           $3209 = +HEAPF64[$43>>3];
           $3210 = +HEAPF64[$26>>3];
           $3211 = $3209 * $3210;
           $3212 = +HEAPF64[$45>>3];
           $3213 = +HEAPF64[$32>>3];
           $3214 = $3212 * $3213;
           $3215 = $3211 + $3214;
           HEAPF64[$61>>3] = $3215;
           $3216 = +HEAPF64[$43>>3];
           $3217 = +HEAPF64[$28>>3];
           $3218 = $3216 * $3217;
           $3219 = +HEAPF64[$45>>3];
           $3220 = +HEAPF64[$34>>3];
           $3221 = $3219 * $3220;
           $3222 = $3218 + $3221;
           HEAPF64[$62>>3] = $3222;
           $3223 = +HEAPF64[$43>>3];
           $3224 = +HEAPF64[$30>>3];
           $3225 = $3223 * $3224;
           $3226 = +HEAPF64[$45>>3];
           $3227 = +HEAPF64[$36>>3];
           $3228 = $3226 * $3227;
           $3229 = $3225 + $3228;
           HEAPF64[$63>>3] = $3229;
           $3230 = +HEAPF64[$38>>3];
           $3231 = $3230 * $3203;
           HEAPF64[$64>>3] = $3231;
           $3232 = +HEAPF64[$43>>3];
           $3233 = +HEAPF64[$38>>3];
           $3234 = $3232 * $3233;
           HEAPF64[$65>>3] = $3234;
           $3235 = +HEAPF64[$40>>3];
           $3236 = $3235 * $3203;
           HEAPF64[$67>>3] = $3236;
           $3237 = +HEAPF64[$43>>3];
           $3238 = +HEAPF64[$40>>3];
           $3239 = $3237 * $3238;
           HEAPF64[$68>>3] = $3239;
           $3240 = +HEAPF64[$42>>3];
           $3241 = $3240 * $3203;
           HEAPF64[$70>>3] = $3241;
           $3242 = +HEAPF64[$43>>3];
           $3243 = +HEAPF64[$42>>3];
           $3244 = $3242 * $3243;
           HEAPF64[$71>>3] = $3244;
           $3245 = +HEAPF64[$121>>3];
           $3246 = $3245 + 1.2461059190031201;
           $3247 = (+__Z5IKabsd($3246));
           $3248 = $3247 < 9.9999999999999995E-7;
           if (!($3248)) {
            HEAP16[$j28valid127>>1] = 0;
            HEAP8[$6>>0] = 2;
            $3651 = +HEAPF64[$121>>3];
            $3652 = $3651 * 0.32100000000000001;
            $3653 = $3652 + 0.40000000000000002;
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x891,$3653,-1);
            $3654 = HEAP8[$181>>0]|0;
            $3655 = ($3654<<24>>24)==(0);
            if ($3655) {
             break L15;
            }
            $3656 = +HEAPF64[$x891>>3];
            $3657 = $3656 * 0.10000000000000001;
            $3658 = +HEAPF64[$81>>3];
            $3659 = +HEAPF64[$43>>3];
            $3660 = $3658 * $3659;
            $3661 = $3656 * $3660;
            $3662 = $3661 - $3657;
            $3663 = +HEAPF64[$45>>3];
            $3664 = +HEAPF64[$82>>3];
            $3665 = $3663 * $3664;
            $3666 = $3656 * $3665;
            $3667 = $3662 + $3666;
            HEAPF64[$cj28array125>>3] = $3667;
            $3668 = !($3667 >= -1.0000020000000001);
            $3669 = !($3667 <= 1.0000020000000001);
            $or$cond104 = $3668 | $3669;
            do {
             if ($or$cond104) {
              $3678 = (__Z13__DOUBLE_BITSd($3667)|0);
              $3679 = tempRet0;
              $3680 = $3679 & 2147483647;
              $3681 = ($3680>>>0)>(2146435072);
              $3682 = ($3678>>>0)>(0);
              $3683 = ($3680|0)==(2146435072);
              $3684 = $3683 & $3682;
              $3685 = $3681 | $3684;
              if (!($3685)) {
               $ij28128$0655 = 0;
               break;
              }
              HEAP8[$j28valid127>>0] = 1;
              HEAPF64[$cj28array125>>3] = 1.0;
              HEAPF64[$sj28array126>>3] = 0.0;
              HEAPF64[$j28array124>>3] = 0.0;
              $ij28128$0655 = 0;
             } else {
              HEAP8[$182>>0] = 1;
              HEAP8[$j28valid127>>0] = 1;
              $3670 = +HEAPF64[$cj28array125>>3];
              $3671 = (+__Z6IKacosd($3670));
              HEAPF64[$j28array124>>3] = $3671;
              $3672 = (+__Z5IKsind($3671));
              HEAPF64[$sj28array126>>3] = $3672;
              $3673 = +HEAPF64[$cj28array125>>3];
              HEAPF64[$183>>3] = $3673;
              $3674 = +HEAPF64[$j28array124>>3];
              $3675 = -$3674;
              HEAPF64[$184>>3] = $3675;
              $3676 = +HEAPF64[$sj28array126>>3];
              $3677 = -$3676;
              HEAPF64[$185>>3] = $3677;
              $ij28128$0655 = 0;
             }
            } while(0);
            while(1) {
             $3686 = (($j28valid127) + ($ij28128$0655)|0);
             $3687 = HEAP8[$3686>>0]|0;
             $3688 = ($3687<<24>>24)==(0);
             do {
              if (!($3688)) {
               $3689 = $ij28128$0655&255;
               HEAP8[$4>>0] = $3689;
               HEAP8[$5>>0] = -1;
               $iij28129$0651 = (($ij28128$0655) + 1)|0;
               $3690 = ($iij28129$0651|0)<(2);
               do {
                if ($3690) {
                 $3691 = (($sj28array126) + ($ij28128$0655<<3)|0);
                 $3692 = (($j28valid127) + ($iij28129$0651)|0);
                 $3693 = HEAP8[$3692>>0]|0;
                 $3694 = ($3693<<24>>24)==(0);
                 if ($3694) {
                  break;
                 }
                 $3695 = (($cj28array125) + ($ij28128$0655<<3)|0);
                 $3696 = +HEAPF64[$3695>>3];
                 $3697 = (($cj28array125) + ($iij28129$0651<<3)|0);
                 $3698 = +HEAPF64[$3697>>3];
                 $3699 = $3696 - $3698;
                 $3700 = (+__Z5IKabsd($3699));
                 $3701 = $3700 < 9.9999999999999995E-7;
                 if (!($3701)) {
                  break;
                 }
                 $3702 = +HEAPF64[$3691>>3];
                 $3703 = (($sj28array126) + ($iij28129$0651<<3)|0);
                 $3704 = +HEAPF64[$3703>>3];
                 $3705 = $3702 - $3704;
                 $3706 = (+__Z5IKabsd($3705));
                 $3707 = $3706 < 9.9999999999999995E-7;
                 if (!($3707)) {
                  break;
                 }
                 HEAP8[$3692>>0] = 0;
                 $3708 = $iij28129$0651&255;
                 HEAP8[$5>>0] = $3708;
                }
               } while(0);
               $3709 = (($j28array124) + ($ij28128$0655<<3)|0);
               $3710 = +HEAPF64[$3709>>3];
               HEAPF64[$3>>3] = $3710;
               $3711 = (($cj28array125) + ($ij28128$0655<<3)|0);
               $3712 = +HEAPF64[$3711>>3];
               HEAPF64[$186>>3] = $3712;
               $3713 = (($sj28array126) + ($ij28128$0655<<3)|0);
               $3714 = +HEAPF64[$3713>>3];
               HEAPF64[$187>>3] = $3714;
               $3715 = +HEAPF64[$3>>3];
               $3716 = (+__Z5IKsind($3715));
               $3717 = (+__Z5IKcosd($3715));
               $3718 = +HEAPF64[$121>>3];
               $3719 = $3718 * 0.32100000000000001;
               $3720 = +HEAPF64[$45>>3];
               $3721 = +HEAPF64[$82>>3];
               $3722 = $3720 * $3721;
               $3723 = $3717 * $3722;
               $3724 = +HEAPF64[$81>>3];
               $3725 = +HEAPF64[$43>>3];
               $3726 = $3724 * $3725;
               $3727 = $3717 * $3726;
               $3728 = $3716 * 0.40000000000000002;
               $3729 = $3716 * $3719;
               $3730 = $3728 + $3729;
               $3731 = 0.40000000000000002 - $3723;
               $3732 = $3731 - $3727;
               $3733 = $3719 + $3732;
               $3734 = $3717 * 0.10000000000000001;
               $3735 = $3734 + $3733;
               $3736 = $3727 * 0.80000000000000004;
               $3737 = $3736 + -0.32000000000000001;
               $3738 = $3723 * 0.80000000000000004;
               $3739 = $3738 + $3737;
               $3740 = $3718 * 0.25679999999999997;
               $3741 = $3739 - $3740;
               $3742 = $3717 * 0.080000000000000002;
               $3743 = $3741 - $3742;
               $3744 = (+__Z5IKabsd($3730));
               $3745 = $3744 > 5.0000000000000004E-6;
               if ($3745) {
                break;
               }
               $3746 = $3716 * 0.10000000000000001;
               $3747 = $3716 * $3726;
               $3748 = $3747 - $3746;
               $3749 = $3716 * $3722;
               $3750 = $3749 + $3748;
               $3751 = (+__Z5IKabsd($3750));
               $3752 = $3751 > 5.0000000000000004E-6;
               if ($3752) {
                break;
               }
               $3753 = (+__Z5IKabsd($3735));
               $3754 = $3753 > 5.0000000000000004E-6;
               if ($3754) {
                break;
               }
               $3755 = (+__Z5IKabsd($3743));
               $3756 = $3755 > 5.0000000000000004E-6;
               if ($3756) {
                break;
               }
               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
              }
             } while(0);
             $3757 = (($ij28128$0655) + 1)|0;
             $exitcond849 = ($3757|0)==(2);
             if ($exitcond849) {
              break L15;
             } else {
              $ij28128$0655 = $3757;
             }
            }
           }
           $3249 = +HEAPF64[$43>>3];
           $3250 = $3249 * $3249;
           $3251 = $3250 * 100.0;
           $3252 = +HEAPF64[$45>>3];
           $3253 = $3252 * $3252;
           $3254 = $3253 * 100.0;
           $3255 = $3251 + $3254;
           $3256 = $3255 < -1.0000000000000001E-5;
           do {
            if (!($3256)) {
             $3257 = (+__Z5IKabsd($3255));
             $3258 = $3257 == 0.0;
             if ($3258) {
              break;
             }
             $3259 = (+__Z6IKsqrtd($3255));
             $3260 = (+__Z5IKabsd($3259));
             $3261 = (+Math_pow((+$3255),-0.5));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x848,$3260,-1);
             $3262 = HEAP8[$170>>0]|0;
             $3263 = ($3262<<24>>24)==(0);
             if ($3263) {
              break;
             }
             $3264 = +HEAPF64[$x848>>3];
             $3265 = +HEAPF64[$43>>3];
             $3266 = $3265 * 10.0;
             $3267 = $3261 * $3266;
             $3268 = +HEAPF64[$45>>3];
             $3269 = $3268 * 10.0;
             $3270 = $3261 * $3269;
             $3271 = $3264 * $3264;
             $3272 = 1.0 - $3271;
             $3273 = $3272 < -1.0000000000000001E-5;
             if ($3273) {
              break;
             }
             $3274 = (+__Z6IKsqrtd($3272));
             $3275 = $3265 * -10.0;
             $3276 = $3268 * -10.0;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x849,$3275,$3276,1.9999999999999999E-6);
             $3277 = HEAP8[$171>>0]|0;
             $3278 = ($3277<<24>>24)==(0);
             if ($3278) {
              break;
             }
             $3279 = $3264 < -1.0000020000000001;
             $3280 = $3264 > 1.0000020000000001;
             $or$cond10 = $3279 | $3280;
             if ($or$cond10) {
              break;
             }
             (+__Z6IKasind($3264));
             $3281 = $3264 * $3270;
             $3282 = $3267 * $3274;
             $3283 = $3281 + $3282;
             $3284 = $3264 * $3267;
             $3285 = $3270 * $3274;
             $3286 = $3284 - $3285;
             $3287 = +HEAPF64[$43>>3];
             $3288 = $3287 * $3287;
             $3289 = +HEAPF64[$45>>3];
             $3290 = $3289 * $3289;
             $3291 = +HEAPF64[$122>>3];
             $3292 = $3291 * 0.32100000000000001;
             $3293 = $3286 * $3289;
             $3294 = $3283 * $3287;
             $3295 = $3290 * 100.0;
             $3296 = $3288 * 100.0;
             $3297 = $3296 + $3295;
             $3298 = $3297 < -1.0000000000000001E-5;
             if ($3298) {
              break;
             }
             $3299 = (+__Z6IKsqrtd($3297));
             $3300 = (+__Z5IKabsd($3299));
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x855,$3300,-1);
             $3301 = HEAP8[$172>>0]|0;
             $3302 = ($3301<<24>>24)==(0);
             if ($3302) {
              break;
             }
             $3303 = +HEAPF64[$x855>>3];
             $3304 = $3303 < -1.0000020000000001;
             $3305 = $3303 > 1.0000020000000001;
             $or$cond84 = $3304 | $3305;
             if ($or$cond84) {
              break;
             }
             $3306 = +HEAPF64[$43>>3];
             $3307 = $3306 * -10.0;
             $3308 = +HEAPF64[$45>>3];
             $3309 = $3308 * -10.0;
             __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x856,$3307,$3309,1.9999999999999999E-6);
             $3310 = HEAP8[$173>>0]|0;
             $3311 = ($3310<<24>>24)==(0);
             if ($3311) {
              break;
             }
             $3312 = +HEAPF64[$x855>>3];
             $3313 = (+__Z6IKasind($3312));
             $3314 = +HEAPF64[$this>>3];
             $3315 = $3313 + $3314;
             $3316 = +HEAPF64[$x856>>3];
             $3317 = $3315 + $3316;
             $3318 = (+__Z5IKabsd($3317));
             $3319 = $3318 + 3.14159265358979;
             $3320 = (+__Z6IKfmoddd($3319,6.2831853071795898));
             $3321 = $3320 + -3.14159265358979;
             $3322 = +HEAPF64[$121>>3];
             $3323 = $3322 * 0.25679999999999997;
             $3324 = $3323 + 0.25304100000000002;
             $3325 = $3324 - $3290;
             $3326 = $3325 - $3288;
             $3327 = $3286 * 0.20000000000000001;
             $3328 = +HEAPF64[$43>>3];
             $3329 = $3327 * $3328;
             $3330 = $3329 + $3326;
             $3331 = $3283 * 0.20000000000000001;
             $3332 = +HEAPF64[$45>>3];
             $3333 = $3331 * $3332;
             $3334 = $3333 + $3330;
             $3335 = $3292 - $3294;
             $3336 = $3293 + $3335;
             $3337 = (+__Z5IKabsd($3321));
             $3338 = $3337 < 9.9999999999999995E-7;
             if (!($3338)) {
              break;
             }
             $3339 = -$3293;
             $3340 = $3339 - $3292;
             $3341 = $3294 + $3340;
             $3342 = (+__Z5IKabsd($3341));
             $3343 = $3342 < 9.9999999999999995E-7;
             if (!($3343)) {
              break;
             }
             $3344 = (+__Z5IKabsd($3334));
             $3345 = $3344 < 9.9999999999999995E-7;
             if (!($3345)) {
              break;
             }
             $3346 = (+__Z5IKabsd($3336));
             $3347 = $3346 < 9.9999999999999995E-7;
             if (!($3347)) {
              break;
             }
             HEAP16[$j28valid111>>1] = 0;
             HEAP8[$6>>0] = 2;
             $3348 = +HEAPF64[$43>>3];
             $3349 = $3286 * $3348;
             $3350 = 0.10000000000000001 - $3349;
             $3351 = +HEAPF64[$45>>3];
             $3352 = $3283 * $3351;
             $3353 = $3350 - $3352;
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x858,$3353,-1);
             $3354 = HEAP8[$174>>0]|0;
             $3355 = ($3354<<24>>24)==(0);
             if ($3355) {
              break L15;
             }
             $3356 = +HEAPF64[$x858>>3];
             $3357 = $3356 * 0.40000000000000002;
             $3358 = +HEAPF64[$121>>3];
             $3359 = $3358 * -0.32100000000000001;
             $3360 = $3356 * $3359;
             $3361 = $3360 - $3357;
             HEAPF64[$cj28array109>>3] = $3361;
             $3362 = !($3361 >= -1.0000020000000001);
             $3363 = !($3361 <= 1.0000020000000001);
             $or$cond85 = $3362 | $3363;
             do {
              if ($or$cond85) {
               $3372 = (__Z13__DOUBLE_BITSd($3361)|0);
               $3373 = tempRet0;
               $3374 = $3373 & 2147483647;
               $3375 = ($3374>>>0)>(2146435072);
               $3376 = ($3372>>>0)>(0);
               $3377 = ($3374|0)==(2146435072);
               $3378 = $3377 & $3376;
               $3379 = $3375 | $3378;
               if (!($3379)) {
                $ij28112$0660 = 0;
                break;
               }
               HEAP8[$j28valid111>>0] = 1;
               HEAPF64[$cj28array109>>3] = 1.0;
               HEAPF64[$sj28array110>>3] = 0.0;
               HEAPF64[$j28array108>>3] = 0.0;
               $ij28112$0660 = 0;
              } else {
               HEAP8[$175>>0] = 1;
               HEAP8[$j28valid111>>0] = 1;
               $3364 = +HEAPF64[$cj28array109>>3];
               $3365 = (+__Z6IKacosd($3364));
               HEAPF64[$j28array108>>3] = $3365;
               $3366 = (+__Z5IKsind($3365));
               HEAPF64[$sj28array110>>3] = $3366;
               $3367 = +HEAPF64[$cj28array109>>3];
               HEAPF64[$176>>3] = $3367;
               $3368 = +HEAPF64[$j28array108>>3];
               $3369 = -$3368;
               HEAPF64[$177>>3] = $3369;
               $3370 = +HEAPF64[$sj28array110>>3];
               $3371 = -$3370;
               HEAPF64[$178>>3] = $3371;
               $ij28112$0660 = 0;
              }
             } while(0);
             while(1) {
              $3380 = (($j28valid111) + ($ij28112$0660)|0);
              $3381 = HEAP8[$3380>>0]|0;
              $3382 = ($3381<<24>>24)==(0);
              do {
               if (!($3382)) {
                $3383 = $ij28112$0660&255;
                HEAP8[$4>>0] = $3383;
                HEAP8[$5>>0] = -1;
                $iij28113$0656 = (($ij28112$0660) + 1)|0;
                $3384 = ($iij28113$0656|0)<(2);
                do {
                 if ($3384) {
                  $3385 = (($sj28array110) + ($ij28112$0660<<3)|0);
                  $3386 = (($j28valid111) + ($iij28113$0656)|0);
                  $3387 = HEAP8[$3386>>0]|0;
                  $3388 = ($3387<<24>>24)==(0);
                  if ($3388) {
                   break;
                  }
                  $3389 = (($cj28array109) + ($ij28112$0660<<3)|0);
                  $3390 = +HEAPF64[$3389>>3];
                  $3391 = (($cj28array109) + ($iij28113$0656<<3)|0);
                  $3392 = +HEAPF64[$3391>>3];
                  $3393 = $3390 - $3392;
                  $3394 = (+__Z5IKabsd($3393));
                  $3395 = $3394 < 9.9999999999999995E-7;
                  if (!($3395)) {
                   break;
                  }
                  $3396 = +HEAPF64[$3385>>3];
                  $3397 = (($sj28array110) + ($iij28113$0656<<3)|0);
                  $3398 = +HEAPF64[$3397>>3];
                  $3399 = $3396 - $3398;
                  $3400 = (+__Z5IKabsd($3399));
                  $3401 = $3400 < 9.9999999999999995E-7;
                  if (!($3401)) {
                   break;
                  }
                  HEAP8[$3386>>0] = 0;
                  $3402 = $iij28113$0656&255;
                  HEAP8[$5>>0] = $3402;
                 }
                } while(0);
                $3403 = (($j28array108) + ($ij28112$0660<<3)|0);
                $3404 = +HEAPF64[$3403>>3];
                HEAPF64[$3>>3] = $3404;
                $3405 = (($cj28array109) + ($ij28112$0660<<3)|0);
                $3406 = +HEAPF64[$3405>>3];
                HEAPF64[$179>>3] = $3406;
                $3407 = (($sj28array110) + ($ij28112$0660<<3)|0);
                $3408 = +HEAPF64[$3407>>3];
                HEAPF64[$180>>3] = $3408;
                $3409 = +HEAPF64[$3>>3];
                $3410 = (+__Z5IKsind($3409));
                $3411 = (+__Z5IKcosd($3409));
                $3412 = +HEAPF64[$45>>3];
                $3413 = $3283 * $3412;
                $3414 = +HEAPF64[$43>>3];
                $3415 = $3286 * $3414;
                $3416 = +HEAPF64[$121>>3];
                $3417 = $3416 * 0.32100000000000001;
                $3418 = $3411 * 0.80000000000000004;
                $3419 = $3410 * $3417;
                $3420 = $3410 * 0.40000000000000002;
                $3421 = $3420 + $3419;
                $3422 = 0.10000000000000001 - $3415;
                $3423 = $3422 - $3413;
                $3424 = $3411 * 0.40000000000000002;
                $3425 = $3424 + $3423;
                $3426 = $3411 * $3417;
                $3427 = $3426 + $3425;
                $3428 = $3416 * 0.25679999999999997;
                $3429 = -0.32000000000000001 - $3428;
                $3430 = $3418 * $3415;
                $3431 = $3430 + $3429;
                $3432 = $3418 * $3413;
                $3433 = $3432 + $3431;
                $3434 = $3411 * 0.080000000000000002;
                $3435 = $3433 - $3434;
                $3436 = (+__Z5IKabsd($3421));
                $3437 = $3436 > 5.0000000000000004E-6;
                if ($3437) {
                 break;
                }
                $3438 = $3410 * 0.10000000000000001;
                $3439 = $3410 * $3415;
                $3440 = $3439 - $3438;
                $3441 = $3410 * $3413;
                $3442 = $3441 + $3440;
                $3443 = (+__Z5IKabsd($3442));
                $3444 = $3443 > 5.0000000000000004E-6;
                if ($3444) {
                 break;
                }
                $3445 = (+__Z5IKabsd($3427));
                $3446 = $3445 > 5.0000000000000004E-6;
                if ($3446) {
                 break;
                }
                $3447 = (+__Z5IKabsd($3435));
                $3448 = $3447 > 5.0000000000000004E-6;
                if ($3448) {
                 break;
                }
                __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
               }
              } while(0);
              $3449 = (($ij28112$0660) + 1)|0;
              $exitcond850 = ($3449|0)==(2);
              if ($exitcond850) {
               break L15;
              } else {
               $ij28112$0660 = $3449;
              }
             }
            }
           } while(0);
           $3450 = +HEAPF64[$43>>3];
           $3451 = $3450 * $3450;
           $3452 = $3451 * 100.0;
           $3453 = +HEAPF64[$45>>3];
           $3454 = $3453 * $3453;
           $3455 = $3454 * 100.0;
           $3456 = $3452 + $3455;
           $3457 = (+__Z5IKabsd($3456));
           $3458 = $3457 == 0.0;
           if ($3458) {
            break L15;
           }
           $3459 = (+Math_pow((+$3456),-0.5));
           $3460 = $3456 < -1.0000000000000001E-5;
           if ($3460) {
            break L15;
           }
           $3461 = (+__Z6IKsqrtd($3456));
           $3462 = (+__Z5IKabsd($3461));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x873,$3462,-1);
           $3463 = HEAP8[$159>>0]|0;
           $3464 = ($3463<<24>>24)==(0);
           if ($3464) {
            break L15;
           }
           $3465 = +HEAPF64[$x873>>3];
           $3466 = +HEAPF64[$43>>3];
           $3467 = $3466 * 10.0;
           $3468 = $3459 * $3467;
           $3469 = +HEAPF64[$45>>3];
           $3470 = $3469 * 10.0;
           $3471 = $3459 * $3470;
           $3472 = $3465 * $3465;
           $3473 = 1.0 - $3472;
           $3474 = $3473 < -1.0000000000000001E-5;
           if ($3474) {
            break L15;
           }
           $3475 = (+__Z6IKsqrtd($3473));
           $3476 = $3465 < -1.0000020000000001;
           $3477 = $3465 > 1.0000020000000001;
           $or$cond12 = $3476 | $3477;
           if ($or$cond12) {
            break L15;
           }
           $3478 = $3466 * -10.0;
           $3479 = $3469 * -10.0;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x874,$3478,$3479,1.9999999999999999E-6);
           $3480 = HEAP8[$160>>0]|0;
           $3481 = ($3480<<24>>24)==(0);
           if ($3481) {
            break L15;
           }
           (+__Z6IKasind($3465));
           $3482 = $3465 * $3471;
           $3483 = $3468 * $3475;
           $3484 = $3482 - $3483;
           $3485 = $3465 * $3468;
           $3486 = $3471 * $3475;
           $3487 = $3485 + $3486;
           $3488 = +HEAPF64[$43>>3];
           $3489 = $3488 * $3488;
           $3490 = +HEAPF64[$45>>3];
           $3491 = $3490 * $3490;
           $3492 = +HEAPF64[$122>>3];
           $3493 = $3492 * 0.32100000000000001;
           $3494 = $3487 * $3490;
           $3495 = $3484 * $3488;
           $3496 = $3489 * 100.0;
           $3497 = $3491 * 100.0;
           $3498 = $3496 + $3497;
           $3499 = $3498 < -1.0000000000000001E-5;
           if ($3499) {
            break L15;
           }
           $3500 = (+__Z6IKsqrtd($3498));
           $3501 = (+__Z5IKabsd($3500));
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x880,$3501,-1);
           $3502 = HEAP8[$161>>0]|0;
           $3503 = ($3502<<24>>24)==(0);
           if ($3503) {
            break L15;
           }
           $3504 = +HEAPF64[$x880>>3];
           $3505 = $3504 < -1.0000020000000001;
           $3506 = $3504 > 1.0000020000000001;
           $or$cond94 = $3505 | $3506;
           if ($or$cond94) {
            break L15;
           }
           $3507 = +HEAPF64[$43>>3];
           $3508 = $3507 * -10.0;
           $3509 = +HEAPF64[$45>>3];
           $3510 = $3509 * -10.0;
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x881,$3508,$3510,1.9999999999999999E-6);
           $3511 = HEAP8[$162>>0]|0;
           $3512 = ($3511<<24>>24)==(0);
           if ($3512) {
            break L15;
           }
           $3513 = +HEAPF64[$this>>3];
           $3514 = $3513 + -3.14159265358979;
           $3515 = +HEAPF64[$x880>>3];
           $3516 = (+__Z6IKasind($3515));
           $3517 = $3514 - $3516;
           $3518 = +HEAPF64[$x881>>3];
           $3519 = $3517 + $3518;
           $3520 = (+__Z5IKabsd($3519));
           $3521 = $3520 + 3.14159265358979;
           $3522 = (+__Z6IKfmoddd($3521,6.2831853071795898));
           $3523 = $3522 + -3.14159265358979;
           $3524 = +HEAPF64[$121>>3];
           $3525 = $3524 * 0.25679999999999997;
           $3526 = $3525 + 0.25304100000000002;
           $3527 = $3526 - $3491;
           $3528 = $3527 - $3489;
           $3529 = $3487 * 0.20000000000000001;
           $3530 = +HEAPF64[$43>>3];
           $3531 = $3529 * $3530;
           $3532 = $3531 + $3528;
           $3533 = $3484 * 0.20000000000000001;
           $3534 = +HEAPF64[$45>>3];
           $3535 = $3533 * $3534;
           $3536 = $3535 + $3532;
           $3537 = $3494 - $3495;
           $3538 = $3537 + $3493;
           $3539 = (+__Z5IKabsd($3523));
           $3540 = $3539 < 9.9999999999999995E-7;
           if (!($3540)) {
            break L15;
           }
           $3541 = $3495 - $3494;
           $3542 = $3541 - $3493;
           $3543 = (+__Z5IKabsd($3542));
           $3544 = $3543 < 9.9999999999999995E-7;
           if (!($3544)) {
            break L15;
           }
           $3545 = (+__Z5IKabsd($3536));
           $3546 = $3545 < 9.9999999999999995E-7;
           if (!($3546)) {
            break L15;
           }
           $3547 = (+__Z5IKabsd($3538));
           $3548 = $3547 < 9.9999999999999995E-7;
           if (!($3548)) {
            break L15;
           }
           HEAP16[$j28valid119>>1] = 0;
           HEAP8[$6>>0] = 2;
           $3549 = +HEAPF64[$45>>3];
           $3550 = $3484 * $3549;
           $3551 = 0.10000000000000001 - $3550;
           $3552 = +HEAPF64[$43>>3];
           $3553 = $3487 * $3552;
           $3554 = $3551 - $3553;
           __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x883,$3554,-1);
           $3555 = HEAP8[$163>>0]|0;
           $3556 = ($3555<<24>>24)==(0);
           if ($3556) {
            break L15;
           }
           $3557 = +HEAPF64[$x883>>3];
           $3558 = $3557 * 0.40000000000000002;
           $3559 = +HEAPF64[$121>>3];
           $3560 = $3559 * -0.32100000000000001;
           $3561 = $3557 * $3560;
           $3562 = $3561 - $3558;
           HEAPF64[$cj28array117>>3] = $3562;
           $3563 = !($3562 >= -1.0000020000000001);
           $3564 = !($3562 <= 1.0000020000000001);
           $or$cond95 = $3563 | $3564;
           do {
            if ($or$cond95) {
             $3573 = (__Z13__DOUBLE_BITSd($3562)|0);
             $3574 = tempRet0;
             $3575 = $3574 & 2147483647;
             $3576 = ($3575>>>0)>(2146435072);
             $3577 = ($3573>>>0)>(0);
             $3578 = ($3575|0)==(2146435072);
             $3579 = $3578 & $3577;
             $3580 = $3576 | $3579;
             if (!($3580)) {
              $ij28120$0665 = 0;
              break;
             }
             HEAP8[$j28valid119>>0] = 1;
             HEAPF64[$cj28array117>>3] = 1.0;
             HEAPF64[$sj28array118>>3] = 0.0;
             HEAPF64[$j28array116>>3] = 0.0;
             $ij28120$0665 = 0;
            } else {
             HEAP8[$164>>0] = 1;
             HEAP8[$j28valid119>>0] = 1;
             $3565 = +HEAPF64[$cj28array117>>3];
             $3566 = (+__Z6IKacosd($3565));
             HEAPF64[$j28array116>>3] = $3566;
             $3567 = (+__Z5IKsind($3566));
             HEAPF64[$sj28array118>>3] = $3567;
             $3568 = +HEAPF64[$cj28array117>>3];
             HEAPF64[$165>>3] = $3568;
             $3569 = +HEAPF64[$j28array116>>3];
             $3570 = -$3569;
             HEAPF64[$166>>3] = $3570;
             $3571 = +HEAPF64[$sj28array118>>3];
             $3572 = -$3571;
             HEAPF64[$167>>3] = $3572;
             $ij28120$0665 = 0;
            }
           } while(0);
           while(1) {
            $3581 = (($j28valid119) + ($ij28120$0665)|0);
            $3582 = HEAP8[$3581>>0]|0;
            $3583 = ($3582<<24>>24)==(0);
            do {
             if (!($3583)) {
              $3584 = $ij28120$0665&255;
              HEAP8[$4>>0] = $3584;
              HEAP8[$5>>0] = -1;
              $iij28121$0661 = (($ij28120$0665) + 1)|0;
              $3585 = ($iij28121$0661|0)<(2);
              do {
               if ($3585) {
                $3586 = (($sj28array118) + ($ij28120$0665<<3)|0);
                $3587 = (($j28valid119) + ($iij28121$0661)|0);
                $3588 = HEAP8[$3587>>0]|0;
                $3589 = ($3588<<24>>24)==(0);
                if ($3589) {
                 break;
                }
                $3590 = (($cj28array117) + ($ij28120$0665<<3)|0);
                $3591 = +HEAPF64[$3590>>3];
                $3592 = (($cj28array117) + ($iij28121$0661<<3)|0);
                $3593 = +HEAPF64[$3592>>3];
                $3594 = $3591 - $3593;
                $3595 = (+__Z5IKabsd($3594));
                $3596 = $3595 < 9.9999999999999995E-7;
                if (!($3596)) {
                 break;
                }
                $3597 = +HEAPF64[$3586>>3];
                $3598 = (($sj28array118) + ($iij28121$0661<<3)|0);
                $3599 = +HEAPF64[$3598>>3];
                $3600 = $3597 - $3599;
                $3601 = (+__Z5IKabsd($3600));
                $3602 = $3601 < 9.9999999999999995E-7;
                if (!($3602)) {
                 break;
                }
                HEAP8[$3587>>0] = 0;
                $3603 = $iij28121$0661&255;
                HEAP8[$5>>0] = $3603;
               }
              } while(0);
              $3604 = (($j28array116) + ($ij28120$0665<<3)|0);
              $3605 = +HEAPF64[$3604>>3];
              HEAPF64[$3>>3] = $3605;
              $3606 = (($cj28array117) + ($ij28120$0665<<3)|0);
              $3607 = +HEAPF64[$3606>>3];
              HEAPF64[$168>>3] = $3607;
              $3608 = (($sj28array118) + ($ij28120$0665<<3)|0);
              $3609 = +HEAPF64[$3608>>3];
              HEAPF64[$169>>3] = $3609;
              $3610 = +HEAPF64[$3>>3];
              $3611 = (+__Z5IKsind($3610));
              $3612 = (+__Z5IKcosd($3610));
              $3613 = +HEAPF64[$45>>3];
              $3614 = $3484 * $3613;
              $3615 = +HEAPF64[$43>>3];
              $3616 = $3487 * $3615;
              $3617 = +HEAPF64[$121>>3];
              $3618 = $3617 * 0.32100000000000001;
              $3619 = $3612 * 0.80000000000000004;
              $3620 = $3611 * 0.40000000000000002;
              $3621 = $3611 * $3618;
              $3622 = $3620 + $3621;
              $3623 = 0.10000000000000001 - $3616;
              $3624 = $3623 - $3614;
              $3625 = $3612 * 0.40000000000000002;
              $3626 = $3625 + $3624;
              $3627 = $3612 * $3618;
              $3628 = $3627 + $3626;
              $3629 = $3619 * $3616;
              $3630 = $3629 + -0.32000000000000001;
              $3631 = $3619 * $3614;
              $3632 = $3631 + $3630;
              $3633 = $3617 * 0.25679999999999997;
              $3634 = $3632 - $3633;
              $3635 = $3612 * 0.080000000000000002;
              $3636 = $3634 - $3635;
              $3637 = (+__Z5IKabsd($3622));
              $3638 = $3637 > 5.0000000000000004E-6;
              if ($3638) {
               break;
              }
              $3639 = $3611 * 0.10000000000000001;
              $3640 = $3611 * $3616;
              $3641 = $3640 - $3639;
              $3642 = $3611 * $3614;
              $3643 = $3642 + $3641;
              $3644 = (+__Z5IKabsd($3643));
              $3645 = $3644 > 5.0000000000000004E-6;
              if ($3645) {
               break;
              }
              $3646 = (+__Z5IKabsd($3628));
              $3647 = $3646 > 5.0000000000000004E-6;
              if ($3647) {
               break;
              }
              $3648 = (+__Z5IKabsd($3636));
              $3649 = $3648 > 5.0000000000000004E-6;
              if ($3649) {
               break;
              }
              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
             }
            } while(0);
            $3650 = (($ij28120$0665) + 1)|0;
            $exitcond851 = ($3650|0)==(2);
            if ($exitcond851) {
             break L15;
            } else {
             $ij28120$0665 = $3650;
            }
           }
          }
         }
        }
       } while(0);
       $3864 = +HEAPF64[$47>>3];
       $3865 = (+__Z5IKabsd($3864));
       $3866 = +HEAPF64[$7>>3];
       $3867 = $3866 + 3.14159265358979;
       $3868 = (+__Z6IKfmoddd($3867,6.2831853071795898));
       $3869 = $3868 + -3.14159265358979;
       $3870 = (+__Z5IKabsd($3869));
       $3871 = $3865 + $3870;
       $3872 = +HEAPF64[$81>>3];
       $3873 = +HEAPF64[$45>>3];
       $3874 = +HEAPF64[$43>>3];
       $3875 = +HEAPF64[$82>>3];
       $3876 = +HEAPF64[$60>>3];
       $3877 = 0.50984099999999999 - $3876;
       $3878 = $3873 * 0.20000000000000001;
       $3879 = $3878 * $3875;
       $3880 = $3879 + $3877;
       $3881 = $3872 * 0.20000000000000001;
       $3882 = $3881 * $3874;
       $3883 = $3882 + $3880;
       $3884 = (+__Z5IKabsd($3871));
       $3885 = $3884 < 9.9999999999999995E-7;
       do {
        if ($3885) {
         $3886 = $3872 * $3873;
         $3887 = $3874 * $3875;
         $3888 = $3887 - $3886;
         $3889 = (+__Z5IKabsd($3888));
         $3890 = $3889 < 9.9999999999999995E-7;
         if ($3890) {
          $3891 = (+__Z5IKabsd($3883));
          $3892 = $3891 < 9.9999999999999995E-7;
          if (!($3892)) {
           break;
          }
          HEAP16[$j28valid142>>1] = 0;
          HEAP8[$6>>0] = 2;
          $3893 = +HEAPF64[$45>>3];
          $3894 = $3893 * 1.3869625520111;
          $3895 = +HEAPF64[$82>>3];
          $3896 = $3894 * $3895;
          $3897 = $3896 + -0.13869625520111001;
          $3898 = +HEAPF64[$81>>3];
          $3899 = $3898 * 1.3869625520111;
          $3900 = +HEAPF64[$43>>3];
          $3901 = $3899 * $3900;
          $3902 = $3897 + $3901;
          HEAPF64[$cj28array140>>3] = $3902;
          $3903 = !($3902 >= -1.0000020000000001);
          $3904 = !($3902 <= 1.0000020000000001);
          $or$cond113 = $3903 | $3904;
          do {
           if ($or$cond113) {
            $3913 = (__Z13__DOUBLE_BITSd($3902)|0);
            $3914 = tempRet0;
            $3915 = $3914 & 2147483647;
            $3916 = ($3915>>>0)>(2146435072);
            $3917 = ($3913>>>0)>(0);
            $3918 = ($3915|0)==(2146435072);
            $3919 = $3918 & $3917;
            $3920 = $3916 | $3919;
            if (!($3920)) {
             $ij28143$0645 = 0;
             break;
            }
            HEAP8[$j28valid142>>0] = 1;
            HEAPF64[$cj28array140>>3] = 1.0;
            HEAPF64[$sj28array141>>3] = 0.0;
            HEAPF64[$j28array139>>3] = 0.0;
            $ij28143$0645 = 0;
           } else {
            HEAP8[$195>>0] = 1;
            HEAP8[$j28valid142>>0] = 1;
            $3905 = +HEAPF64[$cj28array140>>3];
            $3906 = (+__Z6IKacosd($3905));
            HEAPF64[$j28array139>>3] = $3906;
            $3907 = (+__Z5IKsind($3906));
            HEAPF64[$sj28array141>>3] = $3907;
            $3908 = +HEAPF64[$cj28array140>>3];
            HEAPF64[$196>>3] = $3908;
            $3909 = +HEAPF64[$j28array139>>3];
            $3910 = -$3909;
            HEAPF64[$197>>3] = $3910;
            $3911 = +HEAPF64[$sj28array141>>3];
            $3912 = -$3911;
            HEAPF64[$198>>3] = $3912;
            $ij28143$0645 = 0;
           }
          } while(0);
          while(1) {
           $3921 = (($j28valid142) + ($ij28143$0645)|0);
           $3922 = HEAP8[$3921>>0]|0;
           $3923 = ($3922<<24>>24)==(0);
           do {
            if (!($3923)) {
             $3924 = $ij28143$0645&255;
             HEAP8[$4>>0] = $3924;
             HEAP8[$5>>0] = -1;
             $iij28144$0641 = (($ij28143$0645) + 1)|0;
             $3925 = ($iij28144$0641|0)<(2);
             do {
              if ($3925) {
               $3926 = (($sj28array141) + ($ij28143$0645<<3)|0);
               $3927 = (($j28valid142) + ($iij28144$0641)|0);
               $3928 = HEAP8[$3927>>0]|0;
               $3929 = ($3928<<24>>24)==(0);
               if ($3929) {
                break;
               }
               $3930 = (($cj28array140) + ($ij28143$0645<<3)|0);
               $3931 = +HEAPF64[$3930>>3];
               $3932 = (($cj28array140) + ($iij28144$0641<<3)|0);
               $3933 = +HEAPF64[$3932>>3];
               $3934 = $3931 - $3933;
               $3935 = (+__Z5IKabsd($3934));
               $3936 = $3935 < 9.9999999999999995E-7;
               if (!($3936)) {
                break;
               }
               $3937 = +HEAPF64[$3926>>3];
               $3938 = (($sj28array141) + ($iij28144$0641<<3)|0);
               $3939 = +HEAPF64[$3938>>3];
               $3940 = $3937 - $3939;
               $3941 = (+__Z5IKabsd($3940));
               $3942 = $3941 < 9.9999999999999995E-7;
               if (!($3942)) {
                break;
               }
               HEAP8[$3927>>0] = 0;
               $3943 = $iij28144$0641&255;
               HEAP8[$5>>0] = $3943;
              }
             } while(0);
             $3944 = (($j28array139) + ($ij28143$0645<<3)|0);
             $3945 = +HEAPF64[$3944>>3];
             HEAPF64[$3>>3] = $3945;
             $3946 = (($cj28array140) + ($ij28143$0645<<3)|0);
             $3947 = +HEAPF64[$3946>>3];
             HEAPF64[$199>>3] = $3947;
             $3948 = (($sj28array141) + ($ij28143$0645<<3)|0);
             $3949 = +HEAPF64[$3948>>3];
             HEAPF64[$200>>3] = $3949;
             $3950 = +HEAPF64[$3>>3];
             $3951 = (+__Z5IKcosd($3950));
             $3952 = +HEAPF64[$43>>3];
             $3953 = +HEAPF64[$45>>3];
             __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x915,$3953,-1);
             $3954 = HEAP8[$201>>0]|0;
             $3955 = ($3954<<24>>24)==(0);
             if ($3955) {
              break;
             }
             $3956 = $3952 * $3952;
             $3957 = +HEAPF64[$x915>>3];
             $3958 = +HEAPF64[$3>>3];
             $3959 = (+__Z5IKsind($3958));
             $3960 = +HEAPF64[$45>>3];
             $3961 = +HEAPF64[$82>>3];
             $3962 = $3960 * $3961;
             $3963 = $3956 * $3957;
             $3964 = +HEAPF64[$24>>3];
             $3965 = $3959 * $3964;
             $3966 = +HEAPF64[$23>>3];
             $3967 = $3959 * $3966;
             $3968 = $3961 * 0.80000000000000004;
             $3969 = $3951 * $3968;
             $3970 = $3959 * 0.72099999999999997;
             $3971 = -$3962;
             $3972 = $3963 * $3969;
             $3973 = $3972 + -0.57679999999999998;
             $3974 = $3951 * 0.080000000000000002;
             $3975 = $3973 - $3974;
             $3976 = $3951 * 0.80000000000000004;
             $3977 = $3976 * $3962;
             $3978 = $3977 + $3975;
             $3979 = $3962 * $3967;
             $3980 = $3967 * 0.10000000000000001;
             $3981 = $3979 - $3980;
             $3982 = $3963 * $3961;
             $3983 = $3982 * $3967;
             $3984 = $3983 + $3981;
             $3985 = $3965 * $3971;
             $3986 = $3965 * 0.10000000000000001;
             $3987 = $3985 + $3986;
             $3988 = $3982 * $3965;
             $3989 = $3987 - $3988;
             $3990 = (+__Z5IKabsd($3970));
             $3991 = $3990 > 5.0000000000000004E-6;
             if ($3991) {
              break;
             }
             $3992 = +HEAPF64[$43>>3];
             $3993 = +HEAPF64[$81>>3];
             $3994 = $3992 * $3993;
             $3995 = $3951 * $3994;
             $3996 = 0.72099999999999997 - $3995;
             $3997 = $3951 * 0.10000000000000001;
             $3998 = $3997 + $3996;
             $3999 = $3951 * $3971;
             $4000 = $3999 + $3998;
             $4001 = (+__Z5IKabsd($4000));
             $4002 = $4001 > 5.0000000000000004E-6;
             if ($4002) {
              break;
             }
             $4003 = (+__Z5IKabsd($3978));
             $4004 = $4003 > 5.0000000000000004E-6;
             if ($4004) {
              break;
             }
             $4005 = (+__Z5IKabsd($3984));
             $4006 = $4005 > 5.0000000000000004E-6;
             if ($4006) {
              break;
             }
             $4007 = (+__Z5IKabsd($3989));
             $4008 = $4007 > 5.0000000000000004E-6;
             if ($4008) {
              break;
             }
             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
            }
           } while(0);
           $4009 = (($ij28143$0645) + 1)|0;
           $exitcond847 = ($4009|0)==(2);
           if ($exitcond847) {
            break L15;
           } else {
            $ij28143$0645 = $4009;
           }
          }
         }
        }
       } while(0);
       $4010 = +HEAPF64[$47>>3];
       $4011 = (+__Z5IKabsd($4010));
       $4012 = +HEAPF64[$7>>3];
       $4013 = (+__Z6IKfmoddd($4012,6.2831853071795898));
       $4014 = $4013 + -3.14159265358979;
       $4015 = (+__Z5IKabsd($4014));
       $4016 = $4011 + $4015;
       $4017 = +HEAPF64[$81>>3];
       $4018 = +HEAPF64[$45>>3];
       $4019 = +HEAPF64[$43>>3];
       $4020 = +HEAPF64[$82>>3];
       $4021 = +HEAPF64[$60>>3];
       $4022 = -0.0037590000000000002 - $4021;
       $4023 = $4018 * 0.20000000000000001;
       $4024 = $4023 * $4020;
       $4025 = $4024 + $4022;
       $4026 = $4017 * 0.20000000000000001;
       $4027 = $4026 * $4019;
       $4028 = $4027 + $4025;
       $4029 = (+__Z5IKabsd($4016));
       $4030 = $4029 < 9.9999999999999995E-7;
       if ($4030) {
        $4031 = $4017 * $4018;
        $4032 = $4019 * $4020;
        $4033 = $4032 - $4031;
        $4034 = (+__Z5IKabsd($4033));
        $4035 = $4034 < 9.9999999999999995E-7;
        if ($4035) {
         $4036 = (+__Z5IKabsd($4028));
         $4037 = $4036 < 9.9999999999999995E-7;
         if (!($4037)) {
          break;
         }
         HEAP16[$j28valid151>>1] = 0;
         HEAP8[$6>>0] = 2;
         $4038 = +HEAPF64[$45>>3];
         $4039 = $4038 * 12.6582278481013;
         $4040 = +HEAPF64[$82>>3];
         $4041 = $4039 * $4040;
         $4042 = $4041 + -1.26582278481013;
         $4043 = +HEAPF64[$81>>3];
         $4044 = $4043 * 12.6582278481013;
         $4045 = +HEAPF64[$43>>3];
         $4046 = $4044 * $4045;
         $4047 = $4042 + $4046;
         HEAPF64[$cj28array149>>3] = $4047;
         $4048 = !($4047 >= -1.0000020000000001);
         $4049 = !($4047 <= 1.0000020000000001);
         $or$cond116 = $4048 | $4049;
         do {
          if ($or$cond116) {
           $4058 = (__Z13__DOUBLE_BITSd($4047)|0);
           $4059 = tempRet0;
           $4060 = $4059 & 2147483647;
           $4061 = ($4060>>>0)>(2146435072);
           $4062 = ($4058>>>0)>(0);
           $4063 = ($4060|0)==(2146435072);
           $4064 = $4063 & $4062;
           $4065 = $4061 | $4064;
           if (!($4065)) {
            $ij28152$0640 = 0;
            break;
           }
           HEAP8[$j28valid151>>0] = 1;
           HEAPF64[$cj28array149>>3] = 1.0;
           HEAPF64[$sj28array150>>3] = 0.0;
           HEAPF64[$j28array148>>3] = 0.0;
           $ij28152$0640 = 0;
          } else {
           HEAP8[$202>>0] = 1;
           HEAP8[$j28valid151>>0] = 1;
           $4050 = +HEAPF64[$cj28array149>>3];
           $4051 = (+__Z6IKacosd($4050));
           HEAPF64[$j28array148>>3] = $4051;
           $4052 = (+__Z5IKsind($4051));
           HEAPF64[$sj28array150>>3] = $4052;
           $4053 = +HEAPF64[$cj28array149>>3];
           HEAPF64[$203>>3] = $4053;
           $4054 = +HEAPF64[$j28array148>>3];
           $4055 = -$4054;
           HEAPF64[$204>>3] = $4055;
           $4056 = +HEAPF64[$sj28array150>>3];
           $4057 = -$4056;
           HEAPF64[$205>>3] = $4057;
           $ij28152$0640 = 0;
          }
         } while(0);
         while(1) {
          $4066 = (($j28valid151) + ($ij28152$0640)|0);
          $4067 = HEAP8[$4066>>0]|0;
          $4068 = ($4067<<24>>24)==(0);
          do {
           if (!($4068)) {
            $4069 = $ij28152$0640&255;
            HEAP8[$4>>0] = $4069;
            HEAP8[$5>>0] = -1;
            $iij28153$0636 = (($ij28152$0640) + 1)|0;
            $4070 = ($iij28153$0636|0)<(2);
            do {
             if ($4070) {
              $4071 = (($sj28array150) + ($ij28152$0640<<3)|0);
              $4072 = (($j28valid151) + ($iij28153$0636)|0);
              $4073 = HEAP8[$4072>>0]|0;
              $4074 = ($4073<<24>>24)==(0);
              if ($4074) {
               break;
              }
              $4075 = (($cj28array149) + ($ij28152$0640<<3)|0);
              $4076 = +HEAPF64[$4075>>3];
              $4077 = (($cj28array149) + ($iij28153$0636<<3)|0);
              $4078 = +HEAPF64[$4077>>3];
              $4079 = $4076 - $4078;
              $4080 = (+__Z5IKabsd($4079));
              $4081 = $4080 < 9.9999999999999995E-7;
              if (!($4081)) {
               break;
              }
              $4082 = +HEAPF64[$4071>>3];
              $4083 = (($sj28array150) + ($iij28153$0636<<3)|0);
              $4084 = +HEAPF64[$4083>>3];
              $4085 = $4082 - $4084;
              $4086 = (+__Z5IKabsd($4085));
              $4087 = $4086 < 9.9999999999999995E-7;
              if (!($4087)) {
               break;
              }
              HEAP8[$4072>>0] = 0;
              $4088 = $iij28153$0636&255;
              HEAP8[$5>>0] = $4088;
             }
            } while(0);
            $4089 = (($j28array148) + ($ij28152$0640<<3)|0);
            $4090 = +HEAPF64[$4089>>3];
            HEAPF64[$3>>3] = $4090;
            $4091 = (($cj28array149) + ($ij28152$0640<<3)|0);
            $4092 = +HEAPF64[$4091>>3];
            HEAPF64[$206>>3] = $4092;
            $4093 = (($sj28array150) + ($ij28152$0640<<3)|0);
            $4094 = +HEAPF64[$4093>>3];
            HEAPF64[$207>>3] = $4094;
            $4095 = +HEAPF64[$3>>3];
            $4096 = (+__Z5IKcosd($4095));
            $4097 = +HEAPF64[$43>>3];
            $4098 = +HEAPF64[$45>>3];
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x926,$4098,-1);
            $4099 = HEAP8[$208>>0]|0;
            $4100 = ($4099<<24>>24)==(0);
            if ($4100) {
             break;
            }
            $4101 = $4097 * $4097;
            $4102 = +HEAPF64[$x926>>3];
            $4103 = +HEAPF64[$3>>3];
            $4104 = (+__Z5IKsind($4103));
            $4105 = +HEAPF64[$45>>3];
            $4106 = +HEAPF64[$82>>3];
            $4107 = $4105 * $4106;
            $4108 = $4101 * $4102;
            $4109 = +HEAPF64[$24>>3];
            $4110 = $4104 * $4109;
            $4111 = +HEAPF64[$23>>3];
            $4112 = $4104 * $4111;
            $4113 = $4106 * 0.80000000000000004;
            $4114 = $4096 * $4113;
            $4115 = $4104 * 0.079000000000000001;
            $4116 = -$4107;
            $4117 = $4096 * 0.080000000000000002;
            $4118 = -0.063200000000000006 - $4117;
            $4119 = $4108 * $4114;
            $4120 = $4118 + $4119;
            $4121 = $4096 * 0.80000000000000004;
            $4122 = $4121 * $4107;
            $4123 = $4122 + $4120;
            $4124 = $4112 * 0.10000000000000001;
            $4125 = $4107 * $4112;
            $4126 = $4125 - $4124;
            $4127 = $4108 * $4106;
            $4128 = $4127 * $4112;
            $4129 = $4128 + $4126;
            $4130 = $4110 * 0.10000000000000001;
            $4131 = $4110 * $4116;
            $4132 = $4130 + $4131;
            $4133 = $4127 * $4110;
            $4134 = $4132 - $4133;
            $4135 = (+__Z5IKabsd($4115));
            $4136 = $4135 > 5.0000000000000004E-6;
            if ($4136) {
             break;
            }
            $4137 = +HEAPF64[$43>>3];
            $4138 = +HEAPF64[$81>>3];
            $4139 = $4096 * $4116;
            $4140 = $4139 + 0.079000000000000001;
            $4141 = $4096 * 0.10000000000000001;
            $4142 = $4141 + $4140;
            $4143 = $4137 * $4138;
            $4144 = $4096 * $4143;
            $4145 = $4142 - $4144;
            $4146 = (+__Z5IKabsd($4145));
            $4147 = $4146 > 5.0000000000000004E-6;
            if ($4147) {
             break;
            }
            $4148 = (+__Z5IKabsd($4123));
            $4149 = $4148 > 5.0000000000000004E-6;
            if ($4149) {
             break;
            }
            $4150 = (+__Z5IKabsd($4129));
            $4151 = $4150 > 5.0000000000000004E-6;
            if ($4151) {
             break;
            }
            $4152 = (+__Z5IKabsd($4134));
            $4153 = $4152 > 5.0000000000000004E-6;
            if ($4153) {
             break;
            }
            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions);
           }
          } while(0);
          $4154 = (($ij28152$0640) + 1)|0;
          $exitcond = ($4154|0)==(2);
          if ($exitcond) {
           break;
          } else {
           $ij28152$0640 = $4154;
          }
         }
        }
       }
      }
     }
    }
   }
  } while(0);
  $8357 = (($ij271$0727) + 1)|0;
  $exitcond864 = ($8357|0)==($$|0);
  if ($exitcond864) {
   break;
  } else {
   $ij271$0727 = $8357;
  }
 }
 $8358 = HEAP32[$solutions>>2]|0;
 $8359 = ((($8358)) + 16|0);
 $8360 = HEAP32[$8359>>2]|0;
 $8361 = (FUNCTION_TABLE_ii[$8360 & 63]($solutions)|0);
 $8362 = ($8361|0)!=(0);
 STACKTOP = sp;return ($8362|0);
}
function __ZN6ikfast14IkSolutionListIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this);
 HEAP32[$this>>2] = (376);
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = $0;
 $2 = ((($this)) + 12|0);
 HEAP32[$2>>2] = 0;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($this,$index) {
 $this = $this|0;
 $index = $index|0;
 var $$03$i$i = 0, $$14$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1>>>0)>($index>>>0);
 if (!($2)) {
  $3 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($3,800);
  ___cxa_throw(($3|0),(2048|0),(35|0));
  // unreachable;
 }
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5;
 $7 = ($index|0)>(-1);
 if (!($7)) {
  $$14$i$i = $index;$15 = $6;
  while(1) {
   $16 = $15;
   $17 = HEAP32[$16>>2]|0;
   $18 = (($$14$i$i) + 1)|0;
   $19 = ($$14$i$i|0)<(-1);
   if ($19) {
    $$14$i$i = $18;$15 = $17;
   } else {
    $20 = $17;
    break;
   }
  }
  $21 = $20;
  $22 = ((($21)) + 8|0);
  return ($22|0);
 }
 $8 = ($index|0)>(0);
 if ($8) {
  $$03$i$i = $index;$9 = $6;
 } else {
  $20 = $6;
  $21 = $20;
  $22 = ((($21)) + 8|0);
  return ($22|0);
 }
 while(1) {
  $10 = $9;
  $11 = ((($10)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($$03$i$i) + -1)|0;
  $14 = ($$03$i$i|0)>(1);
  if ($14) {
   $$03$i$i = $13;$9 = $12;
  } else {
   $20 = $12;
   break;
  }
 }
 $21 = $20;
 $22 = ((($21)) + 8|0);
 return ($22|0);
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -8|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = $6 >>> 3;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + ($8<<3)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZN6ikfast14IkSolutionListIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (376);
 $0 = ((($this)) + 4|0);
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($0);
 return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this);
 return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$01 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  return;
 }
 $3 = ((($this)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$this>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$4>>2]|0;
 $9 = ((($8)) + 4|0);
 HEAP32[$9>>2] = $7;
 $10 = HEAP32[$4>>2]|0;
 $11 = HEAP32[$6>>2]|0;
 HEAP32[$11>>2] = $10;
 HEAP32[$0>>2] = 0;
 $12 = ($4|0)==($this|0);
 if ($12) {
  return;
 } else {
  $__f$01 = $4;
 }
 while(1) {
  $13 = ((($__f$01)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($__f$01)) + 8|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vi[$17 & 127]($15);
  __ZdlPv($__f$01);
  $18 = ($14|0)==($this|0);
  if ($18) {
   break;
  } else {
   $__f$01 = $14;
  }
 }
 return;
}
function __ZN6ikfast14IkSolutionListIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionListIdED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $0 = sp;
 $1 = ((($this)) + 4|0);
 $2 = ((($this)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($0,$vinfos,$vfree);
 __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($1,$0);
 __ZN6ikfast10IkSolutionIdED2Ev($0);
 STACKTOP = sp;return ($3|0);
}
function __ZN6ikfast14IkSolutionListIdE5ClearEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($0);
 return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionBaseIdEC2Ev($this);
 HEAP32[$this>>2] = (424);
 $0 = ((($this)) + 4|0);
 $1 = ((($this)) + 16|0);
 $2 = ($0|0)==($vinfos|0);
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;
 if (!($2)) {
  $3 = HEAP32[$vinfos>>2]|0;
  $4 = ((($vinfos)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($0,$3,$5);
 }
 $6 = ($1|0)==($vfree|0);
 if ($6) {
  return;
 }
 $7 = HEAP32[$vfree>>2]|0;
 $8 = ((($vfree)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($1,$7,$9);
 return;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__Znwj(36)|0);
 $1 = ((($0)) + 8|0);
 __ZN6ikfast10IkSolutionIdEC2ERKS1_($1,$__x);
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $this;
 $3 = HEAP32[$this>>2]|0;
 HEAP32[$0>>2] = $3;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = $0;
 HEAP32[$this>>2] = $0;
 $5 = ((($this)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 1)|0;
 HEAP32[$5>>2] = $7;
 return;
}
function __ZN6ikfast10IkSolutionIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (424);
 $0 = ((($this)) + 16|0);
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($0);
 $1 = ((($this)) + 4|0);
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($1);
 return;
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i = ((($3)) + -24|0);
  $5 = $scevgep$i$i;
  $__new_last2$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = (($6>>>0) / 24)&-1;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + (($8*24)|0)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 return;
}
function __ZN6ikfast10IkSolutionIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast10IkSolutionIdED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  return;
 }
 $5 = HEAP32[$0>>2]|0;
 $6 = HEAP32[$2>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = (($9|0) / 24)&-1;
 $12 = $3;$i$01 = 0;
 while(1) {
  $11 = (((($12) + (($i$01*24)|0)|0)) + 16|0);
  $13 = HEAP8[$11>>0]|0;
  $14 = ($13<<24>>24)<(0);
  do {
   if ($14) {
    $15 = (((($12) + (($i$01*24)|0)|0)) + 8|0);
    $16 = +HEAPF64[$15>>3];
    $17 = (($solution) + ($i$01<<3)|0);
    HEAPF64[$17>>3] = $16;
   } else {
    $18 = $13 << 24 >> 24;
    $19 = (($freevalues) + ($18<<3)|0);
    $20 = +HEAPF64[$19>>3];
    $21 = (($12) + (($i$01*24)|0)|0);
    $22 = +HEAPF64[$21>>3];
    $23 = $20 * $22;
    $24 = (((($12) + (($i$01*24)|0)|0)) + 8|0);
    $25 = +HEAPF64[$24>>3];
    $26 = $23 + $25;
    $27 = (($solution) + ($i$01<<3)|0);
    HEAPF64[$27>>3] = $26;
    $28 = $26 > 3.14159265358979;
    if ($28) {
     $29 = $26 + -6.2831853071795898;
     HEAPF64[$27>>3] = $29;
     break;
    }
    $30 = $26 < -3.14159265358979;
    if ($30) {
     $31 = $26 + 6.2831853071795898;
     HEAPF64[$27>>3] = $31;
    }
   }
  } while(0);
  $32 = (($i$01) + 1)|0;
  $33 = ($32>>>0)<($10>>>0);
  if ($33) {
   $12 = $6;$i$01 = $32;
  } else {
   break;
  }
 }
 return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($solution,$3);
 $4 = HEAP32[$this>>2]|0;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($solution,0)|0);
 $8 = ((($freevalues)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$freevalues>>2]|0;
 $11 = ($9|0)==($10|0);
 if ($11) {
  $13 = 0;
  FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
  return;
 }
 $12 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($freevalues,0)|0);
 $13 = $12;
 FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
 return;
}
function __ZNK6ikfast10IkSolutionIdE7GetFreeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 return ($0|0);
}
function __ZNK6ikfast10IkSolutionIdE6GetDOFEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = (($6|0) / 24)&-1;
 return ($7|0);
}
function __ZNK6ikfast10IkSolutionIdE8ValidateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$02 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  return;
 } else {
  $14 = $3;$i$02 = 0;
 }
 while(1) {
  $13 = (((($14) + (($i$02*24)|0)|0)) + 18|0);
  $15 = HEAP8[$13>>0]|0;
  if ((($15<<24>>24) == -1)) {
   label = 4;
   break;
  } else if (!((($15<<24>>24) == 0))) {
   $17 = (((($14) + (($i$02*24)|0)|0)) + 19|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = ($18&255)<($15&255);
   if (!($19)) {
    label = 6;
    break;
   }
   $21 = (((($14) + (($i$02*24)|0)|0)) + 20|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = ($22<<24>>24)==(-1);
   $24 = ($22&255)<($15&255);
   $or$cond = $23 | $24;
   if (!($or$cond)) {
    label = 8;
    break;
   }
  }
  $26 = HEAP32[$2>>2]|0;
  $27 = (((($26) + (($i$02*24)|0)|0)) + 8|0);
  $28 = +HEAPF64[$27>>3];
  (__Z13__DOUBLE_BITSd($28)|0);
  $29 = tempRet0;
  $30 = $29 & 2146435072;
  $31 = ($30>>>0)<(2146435072);
  $32 = (0)<(0);
  $33 = ($30|0)==(2146435072);
  $34 = $33 & $32;
  $35 = $31 | $34;
  $11 = (($i$02) + 1)|0;
  if (!($35)) {
   label = 10;
   break;
  }
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$2>>2]|0;
  $7 = $5;
  $8 = $6;
  $9 = (($7) - ($8))|0;
  $10 = (($9|0) / 24)&-1;
  $12 = ($11>>>0)<($10>>>0);
  if ($12) {
   $14 = $6;$i$02 = $11;
  } else {
   label = 11;
   break;
  }
 }
 if ((label|0) == 4) {
  $16 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($16,472);
  ___cxa_throw(($16|0),(2048|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  $20 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($20,512);
  ___cxa_throw(($20|0),(2048|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 8) {
  $25 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($25,552);
  ___cxa_throw(($25|0),(2048|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 10) {
  $36 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($36,592);
  ___cxa_throw(($36|0),(2048|0),(35|0));
  // unreachable;
 }
 else if ((label|0) == 11) {
  return;
 }
}
function __ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $$lcssa5 = 0, $$lcssa6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond18 = 0, $i$015 = 0;
 var $i$015$in = 0, $j$07 = 0, $j1$010 = 0, $j2$012 = 0, $or$cond = 0, $or$cond19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($v,0);
 HEAP32[$0>>2] = 0;
 $2 = ((($v)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($v)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if ($6) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($v,$0);
 } else {
  HEAP32[$3>>2] = 0;
  $7 = HEAP32[$2>>2]|0;
  $8 = ((($7)) + 4|0);
  HEAP32[$2>>2] = $8;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($this)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $10;
 $14 = $12;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(0);
 if (!($16)) {
  STACKTOP = sp;return;
 }
 $17 = (($15|0) / 24)&-1;
 $i$015$in = $17;
 while(1) {
  $i$015 = (($i$015$in) + -1)|0;
  $18 = HEAP32[$11>>2]|0;
  $19 = (((($18) + (($i$015*24)|0)|0)) + 18|0);
  $20 = HEAP8[$19>>0]|0;
  if (!((($20<<24>>24) == 0) | (($20<<24>>24) == 1) | (($20<<24>>24) == -1))) {
   $21 = HEAP32[$2>>2]|0;
   $22 = HEAP32[$v>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = HEAP32[$11>>2]|0;
   if ($23) {
    $$lcssa5 = 0;$$lcssa6 = $24;
   } else {
    $25 = HEAP32[$2>>2]|0;
    $26 = HEAP32[$v>>2]|0;
    $27 = $25;
    $28 = $26;
    $29 = (($27) - ($28))|0;
    $30 = $29 >> 2;
    $31 = HEAP32[$11>>2]|0;
    $33 = $24;$37 = $22;$j$07 = 0;
    while(1) {
     $32 = (((($33) + (($i$015*24)|0)|0)) + 18|0);
     $34 = HEAP8[$32>>0]|0;
     $35 = $34&255;
     $36 = (($37) + ($j$07<<2)|0);
     $38 = HEAP32[$36>>2]|0;
     $39 = Math_imul($38, $35)|0;
     HEAP32[$36>>2] = $39;
     $40 = (($j$07) + 1)|0;
     $41 = ($40>>>0)<($30>>>0);
     if ($41) {
      $33 = $31;$37 = $26;$j$07 = $40;
     } else {
      $$lcssa5 = $30;$$lcssa6 = $31;
      break;
     }
    }
   }
   $42 = (((($$lcssa6) + (($i$015*24)|0)|0)) + 20|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(-1);
   $45 = ($$lcssa5|0)==(0);
   $or$cond = $44 | $45;
   if (!($or$cond)) {
    $j1$010 = 0;
    while(1) {
     $46 = HEAP32[$v>>2]|0;
     $47 = (($46) + ($j1$010<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = HEAP32[$11>>2]|0;
     $50 = (((($49) + (($i$015*24)|0)|0)) + 20|0);
     $51 = HEAP8[$50>>0]|0;
     $52 = $51&255;
     $53 = (($52) + ($48))|0;
     HEAP32[$1>>2] = $53;
     $54 = HEAP32[$2>>2]|0;
     $55 = HEAP32[$4>>2]|0;
     $56 = ($54|0)==($55|0);
     if ($56) {
      __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($v,$1);
     } else {
      HEAP32[$54>>2] = $53;
      $57 = HEAP32[$2>>2]|0;
      $58 = ((($57)) + 4|0);
      HEAP32[$2>>2] = $58;
     }
     $59 = (($j1$010) + 1)|0;
     $exitcond = ($59|0)==($$lcssa5|0);
     if ($exitcond) {
      break;
     } else {
      $j1$010 = $59;
     }
    }
   }
   $60 = HEAP32[$11>>2]|0;
   $61 = (((($60) + (($i$015*24)|0)|0)) + 19|0);
   $62 = HEAP8[$61>>0]|0;
   $63 = ($62<<24>>24)==(-1);
   $64 = ($$lcssa5|0)==(0);
   $or$cond19 = $63 | $64;
   if (!($or$cond19)) {
    $j2$012 = 0;
    while(1) {
     $66 = HEAP32[$11>>2]|0;
     $67 = (((($66) + (($i$015*24)|0)|0)) + 19|0);
     $68 = HEAP8[$67>>0]|0;
     $69 = $68&255;
     $70 = HEAP32[$v>>2]|0;
     $71 = (($70) + ($j2$012<<2)|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = (($72) + ($69))|0;
     HEAP32[$71>>2] = $73;
     $74 = (($j2$012) + 1)|0;
     $exitcond18 = ($74|0)==($$lcssa5|0);
     if ($exitcond18) {
      break;
     } else {
      $j2$012 = $74;
     }
    }
   }
  }
  $65 = ($i$015$in|0)>(1);
  if ($65) {
   $i$015$in = $i$015;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$8);
  return;
 }
 $9 = ($6>>>0)>($__sz>>>0);
 if (!($9)) {
  return;
 }
 $10 = (($2) + ($__sz<<2)|0);
 $11 = ($1|0)==($10|0);
 if ($11) {
  return;
 }
 $scevgep$i$i = ((($1)) + -4|0);
 $12 = $scevgep$i$i;
 $__new_last2$i$i = $10;
 $13 = (($12) - ($__new_last2$i$i))|0;
 $14 = $13 >>> 2;
 $15 = $14 ^ -1;
 $scevgep4$i$i = (($1) + ($15<<2)|0);
 HEAP32[$0>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$this>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = (($7) + 1)|0;
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this)|0);
 $10 = ($9>>>0)<($8>>>0);
 if ($10) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $11 = ((($this)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = HEAP32[$this>>2]|0;
 $14 = $12;
 $15 = $13;
 $16 = (($14) - ($15))|0;
 $17 = $16 >> 2;
 $18 = $9 >>> 1;
 $19 = ($17>>>0)<($18>>>0);
 if ($19) {
  $20 = $16 >> 1;
  $21 = ($20>>>0)<($8>>>0);
  $22 = $21 ? $8 : $20;
  $$0$i = $22;
 } else {
  $$0$i = $9;
 }
 $23 = HEAP32[$1>>2]|0;
 $24 = HEAP32[$this>>2]|0;
 $25 = $23;
 $26 = $24;
 $27 = (($25) - ($26))|0;
 $28 = $27 >> 2;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$$0$i,$28,$0);
 $29 = ((($__v)) + 8|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = HEAP32[$__x>>2]|0;
 HEAP32[$30>>2] = $31;
 $32 = HEAP32[$29>>2]|0;
 $33 = ((($32)) + 4|0);
 HEAP32[$29>>2] = $33;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1073741823;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $5 = 0;
 } else {
  $3 = $__cap << 2;
  $4 = (__Znwj($3)|0);
  $5 = $4;
 }
 HEAP32[$this>>2] = $5;
 $6 = (($5) + ($__start<<2)|0);
 $7 = ((($this)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($this)) + 4|0);
 HEAP32[$8>>2] = $6;
 $9 = HEAP32[$this>>2]|0;
 $10 = (($9) + ($__cap<<2)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $1;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if (!($8)) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n);
  STACKTOP = sp;return;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$this>>2]|0;
 $11 = $10;
 $12 = (($5) - ($11))|0;
 $13 = $12 >> 2;
 $14 = (($13) + ($__n))|0;
 $15 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this)|0);
 $16 = ($15>>>0)<($14>>>0);
 if ($16) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $17 = ((($this)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$this>>2]|0;
 $20 = $18;
 $21 = $19;
 $22 = (($20) - ($21))|0;
 $23 = $22 >> 2;
 $24 = $15 >>> 1;
 $25 = ($23>>>0)<($24>>>0);
 if ($25) {
  $26 = $22 >> 1;
  $27 = ($26>>>0)<($14>>>0);
  $28 = $27 ? $14 : $26;
  $$0$i = $28;
 } else {
  $$0$i = $15;
 }
 $29 = HEAP32[$2>>2]|0;
 $30 = HEAP32[$this>>2]|0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $34 = $33 >> 2;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$$0$i,$34,$9);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($__v,$__n);
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __Z13__DOUBLE_BITSd($__f) {
 $__f = +$__f;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $__f;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($1);
 return ($0|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$8);
  return;
 }
 $9 = ($6>>>0)>($__sz>>>0);
 if (!($9)) {
  return;
 }
 $10 = (($2) + ($__sz<<3)|0);
 $11 = ($1|0)==($10|0);
 if ($11) {
  return;
 }
 $scevgep$i$i = ((($1)) + -8|0);
 $12 = $scevgep$i$i;
 $__new_last2$i$i = $10;
 $13 = (($12) - ($__new_last2$i$i))|0;
 $14 = $13 >>> 3;
 $15 = $14 ^ -1;
 $scevgep4$i$i = (($1) + ($15<<3)|0);
 HEAP32[$0>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)>($__n>>>0);
 if ($7) {
  $8 = HEAP32[$this>>2]|0;
  $9 = (($8) + ($__n<<3)|0);
  return ($9|0);
 } else {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 return (0)|0;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 3;
 $7 = ($6>>>0)>($__n>>>0);
 if ($7) {
  $8 = HEAP32[$this>>2]|0;
  $9 = (($8) + ($__n<<3)|0);
  return ($9|0);
 } else {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 3;
 $8 = ($7>>>0)<($__n>>>0);
 if (!($8)) {
  __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n);
  STACKTOP = sp;return;
 }
 $9 = ((($this)) + 8|0);
 $10 = HEAP32[$this>>2]|0;
 $11 = $10;
 $12 = (($5) - ($11))|0;
 $13 = $12 >> 3;
 $14 = (($13) + ($__n))|0;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this)|0);
 $16 = ($15>>>0)<($14>>>0);
 if ($16) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $17 = ((($this)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$this>>2]|0;
 $20 = $18;
 $21 = $19;
 $22 = (($20) - ($21))|0;
 $23 = $22 >> 3;
 $24 = $15 >>> 1;
 $25 = ($23>>>0)<($24>>>0);
 if ($25) {
  $26 = $22 >> 2;
  $27 = ($26>>>0)<($14>>>0);
  $28 = $27 ? $14 : $26;
  $$0$i = $28;
 } else {
  $$0$i = $15;
 }
 $29 = HEAP32[$2>>2]|0;
 $30 = HEAP32[$this>>2]|0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $34 = $33 >> 3;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($__v,$$0$i,$34,$9);
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($__v,$__n);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v);
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($__v);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 3;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<3)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 536870911;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $5 = 0;
 } else {
  $3 = $__cap << 3;
  $4 = (__Znwj($3)|0);
  $5 = $4;
 }
 HEAP32[$this>>2] = $5;
 $6 = (($5) + ($__start<<3)|0);
 $7 = ((($this)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($this)) + 4|0);
 HEAP32[$8>>2] = $6;
 $9 = HEAP32[$this>>2]|0;
 $10 = (($9) + ($__cap<<3)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 3;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<3)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 3;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<3)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -8|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $1;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 3;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<3)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0);
 HEAP32[$this>>2] = (424);
 $1 = ((($this)) + 4|0);
 $2 = ((($0)) + 4|0);
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($1,$2);
 $3 = ((($this)) + 16|0);
 $4 = ((($0)) + 16|0);
 __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($3,$4);
 return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (696);
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__x)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$__x>>2]|0;
 $5 = ($3|0)==($4|0);
 if ($5) {
  return;
 }
 $6 = $3;
 $7 = $4;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 24)&-1;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$9);
 $10 = HEAP32[$__x>>2]|0;
 $11 = HEAP32[$2>>2]|0;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$10,$11);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__x)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$__x>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = $7 >> 2;
 $9 = ($8|0)==(0);
 if ($9) {
  return;
 }
 __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$8);
 $10 = HEAP32[$__x>>2]|0;
 $11 = HEAP32[$2>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$10,$11);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = $__n << 2;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + ($__n<<2)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$01 = 0, $$promoted = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__first3 = 0, $scevgep = 0, $scevgep5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__first|0)==($__last|0);
 if ($0) {
  return;
 }
 $__first3 = $__first;
 $1 = ((($this)) + 4|0);
 $$promoted = HEAP32[$1>>2]|0;
 $scevgep = ((($__last)) + -4|0);
 $2 = $scevgep;
 $3 = (($2) - ($__first3))|0;
 $4 = $3 >>> 2;
 $5 = (($4) + 1)|0;
 $$01 = $__first;$7 = $$promoted;
 while(1) {
  $6 = HEAP32[$$01>>2]|0;
  HEAP32[$7>>2] = $6;
  $8 = ((($7)) + 4|0);
  $9 = ((($$01)) + 4|0);
  $10 = ($9|0)==($__last|0);
  if ($10) {
   break;
  } else {
   $$01 = $9;$7 = $8;
  }
 }
 $scevgep5 = (($$promoted) + ($5<<2)|0);
 HEAP32[$1>>2] = $scevgep5;
 return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1073741823;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = ($__n*24)|0;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + (($__n*24)|0)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__first|0)==($__last|0);
 if ($0) {
  return;
 }
 $1 = ((($this)) + 4|0);
 $$01 = $__first;
 while(1) {
  $2 = HEAP32[$1>>2]|0;
  ;HEAP32[$2>>2]=HEAP32[$$01>>2]|0;HEAP32[$2+4>>2]=HEAP32[$$01+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$$01+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[$$01+12>>2]|0;HEAP32[$2+16>>2]=HEAP32[$$01+16>>2]|0;HEAP32[$2+20>>2]=HEAP32[$$01+20>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($3)) + 24|0);
  HEAP32[$1>>2] = $4;
  $5 = ((($$01)) + 24|0);
  $6 = ($5|0)==($__last|0);
  if ($6) {
   break;
  } else {
   $$01 = $5;
  }
 }
 return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 178956970;
}
function __ZN6ikfast14IkSolutionBaseIdED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN6ikfast14IkSolutionBaseIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($solution,$3);
 $4 = HEAP32[$this>>2]|0;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($solution,0)|0);
 $8 = ((($freevalues)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$freevalues>>2]|0;
 $11 = ($9|0)==($10|0);
 if ($11) {
  $13 = 0;
  FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
  return;
 }
 $12 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($freevalues,0)|0);
 $13 = $12;
 FUNCTION_TABLE_viii[$6 & 3]($this,$7,$13);
 return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (696);
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0$i = 0, $$__last = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__last;
 $1 = $__first;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 24)&-1;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$this>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = (($9|0) / 24)&-1;
 $11 = ($3>>>0)>($10>>>0);
 if ($11) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this);
  $30 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this)|0);
  $31 = ($30>>>0)<($3>>>0);
  if ($31) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $32 = HEAP32[$4>>2]|0;
  $33 = HEAP32[$this>>2]|0;
  $34 = $32;
  $35 = $33;
  $36 = (($34) - ($35))|0;
  $37 = (($36|0) / 24)&-1;
  $38 = $30 >>> 1;
  $39 = ($37>>>0)<($38>>>0);
  if ($39) {
   $40 = $37 << 1;
   $41 = ($40>>>0)<($3>>>0);
   $42 = $41 ? $3 : $40;
   $$0$i = $42;
  } else {
   $$0$i = $30;
  }
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$$0$i);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last);
  return;
 }
 $12 = ((($this)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13;
 $15 = (($14) - ($8))|0;
 $16 = (($15|0) / 24)&-1;
 $17 = ($3>>>0)>($16>>>0);
 $18 = (($__first) + (($16*24)|0)|0);
 $$__last = $17 ? $18 : $__last;
 $19 = HEAP32[$this>>2]|0;
 $20 = $$__last;
 $21 = (($20) - ($1))|0;
 $22 = (($21|0) / 24)&-1;
 _memmove(($19|0),($__first|0),($21|0))|0;
 $23 = (($19) + (($22*24)|0)|0);
 if ($17) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$$__last,$__last);
  return;
 }
 $24 = HEAP32[$12>>2]|0;
 $25 = ($24|0)==($23|0);
 if ($25) {
  return;
 }
 $scevgep$i$i = ((($24)) + -24|0);
 $26 = $scevgep$i$i;
 $__new_last2$i$i = $23;
 $27 = (($26) - ($__new_last2$i$i))|0;
 $28 = (($27>>>0) / 24)&-1;
 $29 = $28 ^ -1;
 $scevgep4$i$i = (($24) + (($29*24)|0)|0);
 HEAP32[$12>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0$i = 0, $$__last = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__last;
 $1 = $__first;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$this>>2]|0;
 $7 = $5;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = $9 >> 2;
 $11 = ($3>>>0)>($10>>>0);
 if ($11) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this);
  $30 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this)|0);
  $31 = ($30>>>0)<($3>>>0);
  if ($31) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $32 = HEAP32[$4>>2]|0;
  $33 = HEAP32[$this>>2]|0;
  $34 = $32;
  $35 = $33;
  $36 = (($34) - ($35))|0;
  $37 = $36 >> 2;
  $38 = $30 >>> 1;
  $39 = ($37>>>0)<($38>>>0);
  if ($39) {
   $40 = $36 >> 1;
   $41 = ($40>>>0)<($3>>>0);
   $42 = $41 ? $3 : $40;
   $$0$i = $42;
  } else {
   $$0$i = $30;
  }
  __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$$0$i);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last);
  return;
 }
 $12 = ((($this)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13;
 $15 = (($14) - ($8))|0;
 $16 = $15 >> 2;
 $17 = ($3>>>0)>($16>>>0);
 $18 = (($__first) + ($16<<2)|0);
 $$__last = $17 ? $18 : $__last;
 $19 = HEAP32[$this>>2]|0;
 $20 = $$__last;
 $21 = (($20) - ($1))|0;
 $22 = $21 >> 2;
 _memmove(($19|0),($__first|0),($21|0))|0;
 $23 = (($19) + ($22<<2)|0);
 if ($17) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$$__last,$__last);
  return;
 }
 $24 = HEAP32[$12>>2]|0;
 $25 = ($24|0)==($23|0);
 if ($25) {
  return;
 }
 $scevgep$i$i = ((($24)) + -4|0);
 $26 = $scevgep$i$i;
 $__new_last2$i$i = $23;
 $27 = (($26) - ($__new_last2$i$i))|0;
 $28 = $27 >>> 2;
 $29 = $28 ^ -1;
 $scevgep4$i$i = (($24) + ($29<<2)|0);
 HEAP32[$12>>2] = $scevgep4$i$i;
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -4|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$2>>2] = 0;
 HEAP32[$this>>2] = 0;
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $scevgep$i$i$i = ((($3)) + -24|0);
  $5 = $scevgep$i$i$i;
  $__new_last2$i$i$i = $0;
  $6 = (($5) - ($__new_last2$i$i$i))|0;
  $7 = (($6>>>0) / 24)&-1;
  $8 = $7 ^ -1;
  $scevgep4$i$i$i = (($3) + (($8*24)|0)|0);
  HEAP32[$2>>2] = $scevgep4$i$i$i;
 }
 $9 = HEAP32[$this>>2]|0;
 __ZdlPv($9);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$2>>2] = 0;
 HEAP32[$this>>2] = 0;
 return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this)|0);
 $1 = ($0>>>0)<($__n>>>0);
 if ($1) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 } else {
  $2 = $__n << 3;
  $3 = (__Znwj($2)|0);
  $4 = ((($this)) + 4|0);
  HEAP32[$4>>2] = $3;
  HEAP32[$this>>2] = $3;
  $5 = (($3) + ($__n<<3)|0);
  $6 = ((($this)) + 8|0);
  HEAP32[$6>>2] = $5;
  return;
 }
}
function __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (840);
 return;
}
function __ZN6ikfast18IkSolutionListBaseIdED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN6ikfast18IkSolutionListBaseIdED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN8IKSolver10polyroots8EPdS0_Ri($rawcoeffs,$rawroots,$numroots) {
 $rawcoeffs = $rawcoeffs|0;
 $rawroots = $rawroots|0;
 $numroots = $numroots|0;
 var $$lcssa = 0.0, $$lcssa95 = 0.0, $$ph$lcssa = 0.0, $$ph15$lcssa = 0.0, $$ph1530 = 0.0, $$ph29 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0.0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0;
 var $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0;
 var $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0.0, $199 = 0.0;
 var $2 = 0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0, $203 = 0, $204 = 0, $205 = 0.0, $206 = 0, $207 = 0.0, $208 = 0, $209 = 0.0, $21 = 0, $210 = 0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = 0;
 var $217 = 0.0, $218 = 0.0, $219 = 0, $22 = 0, $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0, $225 = 0.0, $226 = 0.0, $227 = 0.0, $228 = 0.0, $229 = 0.0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0.0, $242 = 0, $243 = 0.0, $244 = 0, $245 = 0.0, $246 = 0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0;
 var $253 = 0, $254 = 0.0, $255 = 0.0, $256 = 0.0, $257 = 0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0.0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0.0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0.0, $274 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0.0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0;
 var $79 = 0.0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0.0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0.0, $94 = 0.0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0.0, $99 = 0.0, $changed$0$off040 = 0, $changed$1$off0 = 0, $changed$1$off0$lcssa = 0, $coeffs = 0, $err = 0, $exitcond = 0, $exitcond57 = 0, $exitcond58 = 0, $i2$041 = 0, $i4$036 = 0, $j3$038 = 0, $j5$0 = 0, $j5$021 = 0, $j5$02128 = 0, $j5$02132 = 0, $j5$022 = 0, $j5$022$lcssa = 0;
 var $n$0$ph$lcssa = 0, $n$0$ph31 = 0, $or$cond = 0, $phitmp$i = 0, $roots = 0, $step$043 = 0, $visited = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0;
 $0 = sp + 520|0;
 $1 = sp + 376|0;
 $2 = sp + 536|0;
 $coeffs = sp + 248|0;
 $roots = sp + 120|0;
 $err = sp + 56|0;
 $3 = sp + 40|0;
 $x = sp + 24|0;
 $4 = sp + 8|0;
 $visited = sp;
 $5 = +HEAPF64[$rawcoeffs>>3];
 $6 = $5 == 0.0;
 if ($6) {
  $7 = ((($rawcoeffs)) + 8|0);
  __ZN8IKSolver10polyroots7EPdS0_Ri($7,$rawroots,$numroots);
  STACKTOP = sp;return;
 }
 $8 = $5 != 0.0;
 if (!($8)) {
  $9 = ((($1)) + 64|0);
  $10 = ((($1)) + 8|0);
  HEAP32[$10>>2] = (896);
  $11 = ((($1)) + 12|0);
  HEAP32[$1>>2] = ((940));
  HEAP32[$9>>2] = ((960));
  $12 = ((($1)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = HEAP32[$1>>2]|0;
  $14 = ((($13)) + -12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($1) + ($15)|0);
  __ZNSt3__18ios_base4initEPv($16,$11);
  $17 = ((($1)) + 64|0);
  $$sum$i$i$i = (($15) + 72)|0;
  $18 = (($1) + ($$sum$i$i$i)|0);
  HEAP32[$18>>2] = 0;
  $$sum1$i$i$i = (($15) + 76)|0;
  $19 = (($1) + ($$sum1$i$i$i)|0);
  HEAP32[$19>>2] = -1;
  HEAP32[$1>>2] = (876);
  HEAP32[$17>>2] = (916);
  HEAP32[$10>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($11);
  HEAP32[$11>>2] = (976);
  $20 = ((($1)) + 44|0);
  $21 = ((($1)) + 60|0);
  ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;HEAP32[$20+12>>2]=0|0;
  HEAP32[$21>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($11,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $22 = ((($1)) + 8|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1072)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1096)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1128)|0);
  $26 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($25,9081)|0);
  $27 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($26,1136)|0);
  $28 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($27,1560)|0);
  $29 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($28,1152)|0);
  $30 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($29,1576)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($30,1232)|0);
  $31 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($2,$11);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($31,$2);
  ___cxa_throw(($31|0),(2048|0),(35|0));
  // unreachable;
 }
 $32 = ((($coeffs)) + 24|0);
 ;HEAP32[$coeffs>>2]=0|0;HEAP32[$coeffs+4>>2]=0|0;HEAP32[$coeffs+8>>2]=0|0;HEAP32[$coeffs+12>>2]=0|0;
 $33 = ((($coeffs)) + 40|0);
 $34 = $32;
 $35 = $34;
 HEAP32[$35>>2] = 0;
 $36 = (($34) + 4)|0;
 $37 = $36;
 HEAP32[$37>>2] = 0;
 $38 = ((($coeffs)) + 56|0);
 $39 = $33;
 $40 = $39;
 HEAP32[$40>>2] = 0;
 $41 = (($39) + 4)|0;
 $42 = $41;
 HEAP32[$42>>2] = 0;
 $43 = ((($coeffs)) + 72|0);
 $44 = $38;
 $45 = $44;
 HEAP32[$45>>2] = 0;
 $46 = (($44) + 4)|0;
 $47 = $46;
 HEAP32[$47>>2] = 0;
 $48 = ((($coeffs)) + 88|0);
 $49 = $43;
 $50 = $49;
 HEAP32[$50>>2] = 0;
 $51 = (($49) + 4)|0;
 $52 = $51;
 HEAP32[$52>>2] = 0;
 $53 = ((($coeffs)) + 104|0);
 $54 = $48;
 $55 = $54;
 HEAP32[$55>>2] = 0;
 $56 = (($54) + 4)|0;
 $57 = $56;
 HEAP32[$57>>2] = 0;
 $58 = $53;
 $59 = $58;
 HEAP32[$59>>2] = 0;
 $60 = (($58) + 4)|0;
 $61 = $60;
 HEAP32[$61>>2] = 0;
 $62 = +HEAPF64[$rawcoeffs>>3];
 $63 = ((($rawcoeffs)) + 8|0);
 $64 = +HEAPF64[$63>>3];
 $65 = $64 / $62;
 HEAPF64[$coeffs>>3] = $65;
 $66 = ((($coeffs)) + 8|0);
 HEAPF64[$66>>3] = 0.0;
 $67 = ((($rawcoeffs)) + 16|0);
 $68 = +HEAPF64[$67>>3];
 $69 = $68 / $62;
 $70 = ((($coeffs)) + 16|0);
 HEAPF64[$70>>3] = $69;
 $71 = ((($coeffs)) + 24|0);
 HEAPF64[$71>>3] = 0.0;
 $72 = ((($rawcoeffs)) + 24|0);
 $73 = +HEAPF64[$72>>3];
 $74 = $73 / $62;
 $75 = ((($coeffs)) + 32|0);
 HEAPF64[$75>>3] = $74;
 $76 = ((($coeffs)) + 40|0);
 HEAPF64[$76>>3] = 0.0;
 $77 = ((($rawcoeffs)) + 32|0);
 $78 = +HEAPF64[$77>>3];
 $79 = $78 / $62;
 $80 = ((($coeffs)) + 48|0);
 HEAPF64[$80>>3] = $79;
 $81 = ((($coeffs)) + 56|0);
 HEAPF64[$81>>3] = 0.0;
 $82 = ((($rawcoeffs)) + 40|0);
 $83 = +HEAPF64[$82>>3];
 $84 = $83 / $62;
 $85 = ((($coeffs)) + 64|0);
 HEAPF64[$85>>3] = $84;
 $86 = ((($coeffs)) + 72|0);
 HEAPF64[$86>>3] = 0.0;
 $87 = ((($rawcoeffs)) + 48|0);
 $88 = +HEAPF64[$87>>3];
 $89 = $88 / $62;
 $90 = ((($coeffs)) + 80|0);
 HEAPF64[$90>>3] = $89;
 $91 = ((($coeffs)) + 88|0);
 HEAPF64[$91>>3] = 0.0;
 $92 = ((($rawcoeffs)) + 56|0);
 $93 = +HEAPF64[$92>>3];
 $94 = $93 / $62;
 $95 = ((($coeffs)) + 96|0);
 HEAPF64[$95>>3] = $94;
 $96 = ((($coeffs)) + 104|0);
 HEAPF64[$96>>3] = 0.0;
 $97 = ((($rawcoeffs)) + 64|0);
 $98 = +HEAPF64[$97>>3];
 $99 = $98 / $62;
 $100 = ((($coeffs)) + 112|0);
 HEAPF64[$100>>3] = $99;
 $101 = ((($coeffs)) + 120|0);
 HEAPF64[$101>>3] = 0.0;
 $102 = ((($roots)) + 24|0);
 ;HEAP32[$roots>>2]=0|0;HEAP32[$roots+4>>2]=0|0;HEAP32[$roots+8>>2]=0|0;HEAP32[$roots+12>>2]=0|0;
 $103 = ((($roots)) + 40|0);
 ;HEAP32[$102>>2]=0|0;HEAP32[$102+4>>2]=0|0;HEAP32[$102+8>>2]=0|0;HEAP32[$102+12>>2]=0|0;
 $104 = ((($roots)) + 56|0);
 ;HEAP32[$103>>2]=0|0;HEAP32[$103+4>>2]=0|0;HEAP32[$103+8>>2]=0|0;HEAP32[$103+12>>2]=0|0;
 $105 = ((($roots)) + 72|0);
 ;HEAP32[$104>>2]=0|0;HEAP32[$104+4>>2]=0|0;HEAP32[$104+8>>2]=0|0;HEAP32[$104+12>>2]=0|0;
 $106 = ((($roots)) + 88|0);
 ;HEAP32[$105>>2]=0|0;HEAP32[$105+4>>2]=0|0;HEAP32[$105+8>>2]=0|0;HEAP32[$105+12>>2]=0|0;
 $107 = ((($roots)) + 104|0);
 ;HEAP32[$106>>2]=0|0;HEAP32[$106+4>>2]=0|0;HEAP32[$106+8>>2]=0|0;HEAP32[$106+12>>2]=0|0;
 $108 = ((($roots)) + 120|0);
 ;HEAP32[$107>>2]=0|0;HEAP32[$107+4>>2]=0|0;HEAP32[$107+8>>2]=0|0;HEAP32[$107+12>>2]=0|0;
 HEAPF64[$108>>3] = 0.0;
 HEAPF64[$roots>>3] = 1.0;
 $109 = ((($roots)) + 8|0);
 HEAPF64[$109>>3] = 0.0;
 $110 = ((($roots)) + 16|0);
 $111 = ((($roots)) + 16|0);
 HEAPF64[$111>>3] = 0.40000000000000002;
 $112 = ((($roots)) + 24|0);
 HEAPF64[$112>>3] = 0.90000000000000002;
 HEAPF64[$err>>3] = 1.0;
 $113 = ((($err)) + 8|0);
 HEAPF64[$113>>3] = 1.0;
 $114 = ((($roots)) + 32|0);
 $115 = ((($roots)) + 16|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$115,$110);
 ;HEAP32[$114>>2]=HEAP32[$3>>2]|0;HEAP32[$114+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$114+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$114+12>>2]=HEAP32[$3+12>>2]|0;
 $116 = ((($err)) + 16|0);
 HEAPF64[$116>>3] = 1.0;
 $117 = ((($roots)) + 48|0);
 $118 = ((($roots)) + 32|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$118,$110);
 ;HEAP32[$117>>2]=HEAP32[$3>>2]|0;HEAP32[$117+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$117+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$117+12>>2]=HEAP32[$3+12>>2]|0;
 $119 = ((($err)) + 24|0);
 HEAPF64[$119>>3] = 1.0;
 $120 = ((($roots)) + 64|0);
 $121 = ((($roots)) + 48|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$121,$110);
 ;HEAP32[$120>>2]=HEAP32[$3>>2]|0;HEAP32[$120+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$120+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$120+12>>2]=HEAP32[$3+12>>2]|0;
 $122 = ((($err)) + 32|0);
 HEAPF64[$122>>3] = 1.0;
 $123 = ((($roots)) + 80|0);
 $124 = ((($roots)) + 64|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$124,$110);
 ;HEAP32[$123>>2]=HEAP32[$3>>2]|0;HEAP32[$123+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$123+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$123+12>>2]=HEAP32[$3+12>>2]|0;
 $125 = ((($err)) + 40|0);
 HEAPF64[$125>>3] = 1.0;
 $126 = ((($roots)) + 96|0);
 $127 = ((($roots)) + 80|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$127,$110);
 ;HEAP32[$126>>2]=HEAP32[$3>>2]|0;HEAP32[$126+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$126+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$126+12>>2]=HEAP32[$3+12>>2]|0;
 $128 = ((($err)) + 48|0);
 HEAPF64[$128>>3] = 1.0;
 $129 = ((($roots)) + 112|0);
 $130 = ((($roots)) + 96|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$130,$110);
 ;HEAP32[$129>>2]=HEAP32[$3>>2]|0;HEAP32[$129+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$129+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$129+12>>2]=HEAP32[$3+12>>2]|0;
 $131 = ((($err)) + 56|0);
 HEAPF64[$131>>3] = 1.0;
 $132 = ((($coeffs)) + 8|0);
 $133 = ((($x)) + 8|0);
 $134 = ((($4)) + 8|0);
 $135 = ((($1)) + 8|0);
 $136 = ((($coeffs)) + 16|0);
 $137 = ((($coeffs)) + 24|0);
 $138 = ((($coeffs)) + 32|0);
 $139 = ((($coeffs)) + 40|0);
 $140 = ((($coeffs)) + 48|0);
 $141 = ((($coeffs)) + 56|0);
 $142 = ((($coeffs)) + 64|0);
 $143 = ((($coeffs)) + 72|0);
 $144 = ((($coeffs)) + 80|0);
 $145 = ((($coeffs)) + 88|0);
 $146 = ((($coeffs)) + 96|0);
 $147 = ((($coeffs)) + 104|0);
 $148 = ((($coeffs)) + 112|0);
 $149 = ((($coeffs)) + 120|0);
 $step$043 = 0;
 while(1) {
  $changed$0$off040 = 0;$i2$041 = 0;
  while(1) {
   $150 = (($err) + ($i2$041<<3)|0);
   $151 = +HEAPF64[$150>>3];
   $152 = !($151 >= 2.8421709430404007E-14);
   if ($152) {
    $changed$1$off0 = $changed$0$off040;
   } else {
    $153 = (($roots) + ($i2$041<<4)|0);
    ;HEAP32[$x>>2]=HEAP32[$153>>2]|0;HEAP32[$x+4>>2]=HEAP32[$153+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$153+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$153+12>>2]|0;
    $154 = +HEAPF64[$coeffs>>3];
    $155 = +HEAPF64[$x>>3];
    $156 = $154 + $155;
    HEAPF64[$x>>3] = $156;
    $157 = +HEAPF64[$132>>3];
    $158 = +HEAPF64[$133>>3];
    $159 = $157 + $158;
    HEAPF64[$133>>3] = $159;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$153,$x);
    $160 = +HEAPF64[$4>>3];
    $161 = +HEAPF64[$134>>3];
    $162 = +HEAPF64[$136>>3];
    $163 = $160 + $162;
    $164 = +HEAPF64[$137>>3];
    $165 = $161 + $164;
    HEAPF64[$x>>3] = $163;
    HEAPF64[$133>>3] = $165;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$153,$x);
    $166 = +HEAPF64[$4>>3];
    $167 = +HEAPF64[$134>>3];
    $168 = +HEAPF64[$138>>3];
    $169 = $166 + $168;
    $170 = +HEAPF64[$139>>3];
    $171 = $167 + $170;
    HEAPF64[$x>>3] = $169;
    HEAPF64[$133>>3] = $171;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$153,$x);
    $172 = +HEAPF64[$4>>3];
    $173 = +HEAPF64[$134>>3];
    $174 = +HEAPF64[$140>>3];
    $175 = $172 + $174;
    $176 = +HEAPF64[$141>>3];
    $177 = $173 + $176;
    HEAPF64[$x>>3] = $175;
    HEAPF64[$133>>3] = $177;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$153,$x);
    $178 = +HEAPF64[$4>>3];
    $179 = +HEAPF64[$134>>3];
    $180 = +HEAPF64[$142>>3];
    $181 = $178 + $180;
    $182 = +HEAPF64[$143>>3];
    $183 = $179 + $182;
    HEAPF64[$x>>3] = $181;
    HEAPF64[$133>>3] = $183;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$153,$x);
    $184 = +HEAPF64[$4>>3];
    $185 = +HEAPF64[$134>>3];
    $186 = +HEAPF64[$144>>3];
    $187 = $184 + $186;
    $188 = +HEAPF64[$145>>3];
    $189 = $185 + $188;
    HEAPF64[$x>>3] = $187;
    HEAPF64[$133>>3] = $189;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$153,$x);
    $190 = +HEAPF64[$4>>3];
    $191 = +HEAPF64[$134>>3];
    $192 = +HEAPF64[$146>>3];
    $193 = $190 + $192;
    $194 = +HEAPF64[$147>>3];
    $195 = $191 + $194;
    HEAPF64[$x>>3] = $193;
    HEAPF64[$133>>3] = $195;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$153,$x);
    $196 = +HEAPF64[$4>>3];
    $197 = +HEAPF64[$134>>3];
    $198 = +HEAPF64[$148>>3];
    $199 = $196 + $198;
    $200 = +HEAPF64[$149>>3];
    $201 = $197 + $200;
    HEAPF64[$x>>3] = $199;
    HEAPF64[$133>>3] = $201;
    $202 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $203 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $j3$038 = 0;
    while(1) {
     $204 = ($i2$041|0)==($j3$038|0);
     do {
      if (!($204)) {
       $205 = +HEAPF64[$153>>3];
       $206 = (($roots) + ($j3$038<<4)|0);
       $207 = +HEAPF64[$206>>3];
       $208 = $205 == $207;
       if ($208) {
        $209 = +HEAPF64[$202>>3];
        $210 = (((($roots) + ($j3$038<<4)|0)) + 8|0);
        $211 = +HEAPF64[$210>>3];
        $phitmp$i = $209 != $211;
        if (!($phitmp$i)) {
         break;
        }
       }
       $212 = +HEAPF64[$153>>3];
       $213 = +HEAPF64[$203>>3];
       $214 = +HEAPF64[$206>>3];
       $215 = $212 - $214;
       $216 = (((($roots) + ($j3$038<<4)|0)) + 8|0);
       $217 = +HEAPF64[$216>>3];
       $218 = $213 - $217;
       HEAPF64[$1>>3] = $215;
       HEAPF64[$135>>3] = $218;
       __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
       ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
      }
     } while(0);
     $219 = (($j3$038) + 1)|0;
     $exitcond57 = ($219|0)==(8);
     if ($exitcond57) {
      break;
     } else {
      $j3$038 = $219;
     }
    }
    $220 = +HEAPF64[$x>>3];
    $221 = +HEAPF64[$153>>3];
    $222 = $221 - $220;
    HEAPF64[$153>>3] = $222;
    $223 = +HEAPF64[$133>>3];
    $224 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $225 = +HEAPF64[$224>>3];
    $226 = $225 - $223;
    HEAPF64[$224>>3] = $226;
    $227 = +HEAPF64[$x>>3];
    $228 = +HEAPF64[$133>>3];
    $229 = (+_hypot($227,$228));
    HEAPF64[$150>>3] = $229;
    $changed$1$off0 = 1;
   }
   $230 = (($i2$041) + 1)|0;
   $exitcond58 = ($230|0)==(8);
   if ($exitcond58) {
    $changed$1$off0$lcssa = $changed$1$off0;
    break;
   } else {
    $changed$0$off040 = $changed$1$off0;$i2$041 = $230;
   }
  }
  $231 = (($step$043) + 1)|0;
  $232 = ($231|0)<(110);
  $or$cond = $changed$1$off0$lcssa & $232;
  if ($or$cond) {
   $step$043 = $231;
  } else {
   break;
  }
 }
 HEAP32[$numroots>>2] = 0;
 $233 = $visited;
 $234 = $233;
 HEAP32[$234>>2] = 0;
 $235 = (($233) + 4)|0;
 $236 = $235;
 HEAP32[$236>>2] = 0;
 $i4$036 = 0;
 while(1) {
  $237 = (($visited) + ($i4$036)|0);
  $238 = HEAP8[$237>>0]|0;
  $239 = ($238<<24>>24)==(0);
  if ($239) {
   $240 = (($roots) + ($i4$036<<4)|0);
   $241 = +HEAPF64[$240>>3];
   $242 = (((($roots) + ($i4$036<<4)|0)) + 8|0);
   $243 = +HEAPF64[$242>>3];
   $j5$02128 = (($i4$036) + 1)|0;
   $244 = ($j5$02128|0)<(8);
   if ($244) {
    $245 = +HEAPF64[$240>>3];
    $$ph1530 = $241;$$ph29 = $243;$j5$02132 = $j5$02128;$n$0$ph31 = 1;
    L32: while(1) {
     $j5$022 = $j5$02132;
     while(1) {
      $246 = (($roots) + ($j5$022<<4)|0);
      $247 = +HEAPF64[$246>>3];
      $248 = $245 - $247;
      $249 = (+Math_abs((+$248)));
      $250 = $249 < 1.4901161193847656E-8;
      if ($250) {
       $252 = +HEAPF64[$242>>3];
       $253 = (((($roots) + ($j5$022<<4)|0)) + 8|0);
       $254 = +HEAPF64[$253>>3];
       $255 = $252 - $254;
       $256 = (+Math_abs((+$255)));
       $257 = $256 < 0.002;
       if ($257) {
        $$lcssa = $247;$$lcssa95 = $254;$j5$022$lcssa = $j5$022;
        break;
       }
      }
      $j5$0 = (($j5$022) + 1)|0;
      $251 = ($j5$0|0)<(8);
      if ($251) {
       $j5$022 = $j5$0;
      } else {
       $$ph$lcssa = $$ph29;$$ph15$lcssa = $$ph1530;$n$0$ph$lcssa = $n$0$ph31;
       break L32;
      }
     }
     $258 = $$ph1530 + $$lcssa;
     $259 = $$ph29 + $$lcssa95;
     $260 = (($n$0$ph31) + 1)|0;
     $261 = (($visited) + ($j5$022$lcssa)|0);
     HEAP8[$261>>0] = 1;
     $j5$021 = (($j5$022$lcssa) + 1)|0;
     $262 = ($j5$021|0)<(8);
     if ($262) {
      $$ph1530 = $258;$$ph29 = $259;$j5$02132 = $j5$021;$n$0$ph31 = $260;
     } else {
      $$ph$lcssa = $259;$$ph15$lcssa = $258;$n$0$ph$lcssa = $260;
      break;
     }
    }
    $263 = ($n$0$ph$lcssa|0)>(1);
    if ($263) {
     $264 = (+($n$0$ph$lcssa|0));
     $265 = $$ph15$lcssa / $264;
     $266 = $$ph$lcssa / $264;
     $267 = $266;$273 = $265;
    } else {
     $267 = $$ph$lcssa;$273 = $$ph15$lcssa;
    }
   } else {
    $267 = $243;$273 = $241;
   }
   $268 = (+__Z5IKabsd($267));
   $269 = $268 < 1.4901161193847656E-8;
   if ($269) {
    $270 = HEAP32[$numroots>>2]|0;
    $271 = (($270) + 1)|0;
    HEAP32[$numroots>>2] = $271;
    $272 = (($rawroots) + ($270<<3)|0);
    HEAPF64[$272>>3] = $273;
   }
  }
  $274 = (($i4$036) + 1)|0;
  $exitcond = ($274|0)==(8);
  if ($exitcond) {
   break;
  } else {
   $i4$036 = $274;
  }
 }
 STACKTOP = sp;return;
}
function __Z5IKtand($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_tan((+$f)));
 return (+$0);
}
function __Z5IKabsd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_abs((+$f)));
 return (+$0);
}
function __Z6IKsignd($f) {
 $f = +$f;
 var $$ = 0.0, $$0 = 0.0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f > 0.0;
 $1 = $f < 0.0;
 $$ = $1 ? -1.0 : 0.0;
 $$0 = $0 ? 1.0 : $$;
 return (+$$0);
}
function __Z6IKfmoddd($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0$lcssa = 0.0, $$01 = 0.0, $0 = 0, $1 = 0.0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $x < 0.0;
 if ($0) {
  $$01 = $x;
  while(1) {
   $1 = $$01 + $y;
   $2 = $1 < 0.0;
   if ($2) {
    $$01 = $1;
   } else {
    $$0$lcssa = $1;
    break;
   }
  }
 } else {
  $$0$lcssa = $x;
 }
 $3 = (+_fmod($$0$lcssa,$y));
 return (+$3);
}
function __Z6IKacosd($f) {
 $f = +$f;
 var $$06 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = $f > -1.0000020000000001;
 $3 = $f < 1.0000020000000001;
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $4 = ((($ss)) + 64|0);
  $5 = ((($ss)) + 8|0);
  HEAP32[$5>>2] = (896);
  $6 = ((($ss)) + 12|0);
  HEAP32[$ss>>2] = ((940));
  HEAP32[$4>>2] = ((960));
  $7 = ((($ss)) + 4|0);
  HEAP32[$7>>2] = 0;
  $8 = HEAP32[$ss>>2]|0;
  $9 = ((($8)) + -12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($ss) + ($10)|0);
  __ZNSt3__18ios_base4initEPv($11,$6);
  $12 = ((($ss)) + 64|0);
  $$sum$i$i$i = (($10) + 72)|0;
  $13 = (($ss) + ($$sum$i$i$i)|0);
  HEAP32[$13>>2] = 0;
  $$sum1$i$i$i = (($10) + 76)|0;
  $14 = (($ss) + ($$sum1$i$i$i)|0);
  HEAP32[$14>>2] = -1;
  HEAP32[$ss>>2] = (876);
  HEAP32[$12>>2] = (916);
  HEAP32[$5>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
  HEAP32[$6>>2] = (976);
  $15 = ((($ss)) + 44|0);
  $16 = ((($ss)) + 60|0);
  ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;HEAP32[$15+12>>2]=0|0;
  HEAP32[$16>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $17 = ((($ss)) + 8|0);
  $18 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($17,1072)|0);
  $19 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($18,1096)|0);
  $20 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($19,1128)|0);
  $21 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($20,163)|0);
  $22 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($21,1136)|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1552)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1152)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1168)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($25,1232)|0);
  $26 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$6);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($26,$1);
  ___cxa_throw(($26|0),(2048|0),(35|0));
  // unreachable;
 }
 $27 = !($f <= -1.0);
 if (!($27)) {
  $$06 = 3.14159265358979;
  STACKTOP = sp;return (+$$06);
 }
 $28 = !($f >= 1.0);
 if (!($28)) {
  $$06 = 0.0;
  STACKTOP = sp;return (+$$06);
 }
 $29 = (+Math_acos((+$f)));
 $$06 = $29;
 STACKTOP = sp;return (+$$06);
}
function __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($agg$result,$f,$n) {
 $agg$result = $agg$result|0;
 $f = +$f;
 $n = $n|0;
 var $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0.0, $num$02 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($agg$result)) + 8|0);
 HEAP8[$0>>0] = 1;
 if ((($n|0) == 1)) {
  HEAPF64[$agg$result>>3] = $f;
  return;
 } else if ((($n|0) == 0)) {
  HEAPF64[$agg$result>>3] = 1.0;
  return;
 } else {
  $1 = ($n|0)<(0);
  if ($1) {
   $2 = $f == 0.0;
   if ($2) {
    HEAP8[$0>>0] = 0;
    HEAPF64[$agg$result>>3] = 1.0E+30;
    return;
   }
   $3 = ($n|0)==(-1);
   if ($3) {
    $4 = 1.0 / $f;
    HEAPF64[$agg$result>>3] = $4;
    return;
   }
  }
  $5 = ($n|0)>(0);
  $6 = (0 - ($n))|0;
  $7 = $5 ? $n : $6;
  if ((($7|0) == 2)) {
   $8 = $f * $f;
   HEAPF64[$agg$result>>3] = $8;
  } else if ((($7|0) == 3)) {
   $9 = $f * $f;
   $10 = $9 * $f;
   HEAPF64[$agg$result>>3] = $10;
  } else {
   HEAPF64[$agg$result>>3] = 1.0;
   $11 = ($7|0)>(0);
   if ($11) {
    $$01 = $f;$num$02 = $7;
    while(1) {
     $12 = $num$02 & 1;
     $13 = ($12|0)==(0);
     if (!($13)) {
      $14 = +HEAPF64[$agg$result>>3];
      $15 = $$01 * $14;
      HEAPF64[$agg$result>>3] = $15;
     }
     $16 = $num$02 >> 1;
     $17 = $$01 * $$01;
     $18 = ($16|0)>(0);
     if ($18) {
      $$01 = $17;$num$02 = $16;
     } else {
      break;
     }
    }
   }
  }
  if (!($1)) {
   return;
  }
  $19 = +HEAPF64[$agg$result>>3];
  $20 = 1.0 / $19;
  HEAPF64[$agg$result>>3] = $20;
  return;
 }
}
function __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($agg$result,$fy,$fx,$epsilon) {
 $agg$result = $agg$result|0;
 $fy = +$fy;
 $fx = +$fx;
 $epsilon = +$epsilon;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($agg$result)) + 8|0);
 HEAP8[$0>>0] = 0;
 HEAPF64[$agg$result>>3] = 0.0;
 $1 = (__Z13__DOUBLE_BITSd($fy)|0);
 $2 = tempRet0;
 $3 = $2 & 2147483647;
 $4 = ($3>>>0)>(2146435072);
 $5 = ($1>>>0)>(0);
 $6 = ($3|0)==(2146435072);
 $7 = $6 & $5;
 $8 = $4 | $7;
 if ($8) {
  return;
 }
 $9 = (__Z13__DOUBLE_BITSd($fx)|0);
 $10 = tempRet0;
 $11 = $10 & 2147483647;
 $12 = ($11>>>0)>(2146435072);
 $13 = ($9>>>0)>(0);
 $14 = ($11|0)==(2146435072);
 $15 = $14 & $13;
 $16 = $12 | $15;
 if ($16) {
  return;
 }
 $17 = (+__Z5IKabsd($fy));
 $18 = !($17 >= 1.9999999999999999E-6);
 if ($18) {
  $19 = (+__Z5IKabsd($fx));
  $20 = $19 > 1.9999999999999999E-6;
  if (!($20)) {
   return;
  }
 }
 $21 = (+__Z13IKatan2Simpledd($fy,$fx));
 HEAPF64[$agg$result>>3] = $21;
 HEAP8[$0>>0] = 1;
 return;
}
function __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions) {
 $this = $this|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0.0, $1001 = 0, $1002 = 0.0, $1003 = 0.0, $1004 = 0, $1005 = 0, $1006 = 0.0, $1007 = 0.0, $1008 = 0.0, $1009 = 0.0, $101 = 0, $1010 = 0.0, $1011 = 0.0, $1012 = 0.0, $1013 = 0.0, $1014 = 0.0;
 var $1015 = 0, $1016 = 0.0, $1017 = 0, $1018 = 0.0, $1019 = 0.0, $102 = 0, $1020 = 0, $1021 = 0.0, $1022 = 0, $1023 = 0.0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0;
 var $1033 = 0, $1034 = 0.0, $1035 = 0, $1036 = 0.0, $1037 = 0.0, $1038 = 0.0, $1039 = 0, $104 = 0, $1040 = 0.0, $1041 = 0, $1042 = 0.0, $1043 = 0.0, $1044 = 0.0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0.0, $1049 = 0, $105 = 0, $1050 = 0.0;
 var $1051 = 0, $1052 = 0.0, $1053 = 0.0, $1054 = 0.0, $1055 = 0.0, $1056 = 0.0, $1057 = 0.0, $1058 = 0.0, $1059 = 0.0, $106 = 0, $1060 = 0.0, $1061 = 0.0, $1062 = 0, $1063 = 0.0, $1064 = 0.0, $1065 = 0.0, $1066 = 0.0, $1067 = 0.0, $1068 = 0.0, $1069 = 0.0;
 var $107 = 0, $1070 = 0.0, $1071 = 0.0, $1072 = 0, $1073 = 0.0, $1074 = 0.0, $1075 = 0.0, $1076 = 0.0, $1077 = 0, $1078 = 0.0, $1079 = 0.0, $108 = 0, $1080 = 0.0, $1081 = 0.0, $1082 = 0.0, $1083 = 0, $1084 = 0.0, $1085 = 0.0, $1086 = 0.0, $1087 = 0.0;
 var $1088 = 0.0, $1089 = 0.0, $109 = 0, $1090 = 0.0, $1091 = 0.0, $1092 = 0.0, $1093 = 0.0, $1094 = 0.0, $1095 = 0.0, $1096 = 0.0, $1097 = 0, $1098 = 0.0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0.0, $1101 = 0.0, $1102 = 0.0, $1103 = 0.0, $1104 = 0.0;
 var $1105 = 0.0, $1106 = 0.0, $1107 = 0.0, $1108 = 0.0, $1109 = 0.0, $111 = 0, $1110 = 0.0, $1111 = 0.0, $1112 = 0.0, $1113 = 0.0, $1114 = 0.0, $1115 = 0.0, $1116 = 0.0, $1117 = 0.0, $1118 = 0.0, $1119 = 0.0, $112 = 0, $1120 = 0.0, $1121 = 0.0, $1122 = 0.0;
 var $1123 = 0.0, $1124 = 0.0, $1125 = 0.0, $1126 = 0.0, $1127 = 0.0, $1128 = 0.0, $1129 = 0.0, $113 = 0, $1130 = 0.0, $1131 = 0.0, $1132 = 0.0, $1133 = 0.0, $1134 = 0.0, $1135 = 0.0, $1136 = 0.0, $1137 = 0.0, $1138 = 0, $1139 = 0.0, $114 = 0, $1140 = 0.0;
 var $1141 = 0.0, $1142 = 0, $1143 = 0.0, $1144 = 0, $1145 = 0.0, $1146 = 0, $1147 = 0.0, $1148 = 0, $1149 = 0.0, $115 = 0, $1150 = 0, $1151 = 0.0, $1152 = 0, $1153 = 0.0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0.0, $1158 = 0, $1159 = 0;
 var $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0.0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0;
 var $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0.0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0;
 var $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0.0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0;
 var $1213 = 0.0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0.0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0;
 var $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0.0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0;
 var $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0.0, $1259 = 0.0, $126 = 0, $1260 = 0.0, $1261 = 0.0, $1262 = 0.0, $1263 = 0.0, $1264 = 0.0, $1265 = 0.0, $1266 = 0.0, $1267 = 0.0;
 var $1268 = 0.0, $1269 = 0, $127 = 0, $1270 = 0.0, $1271 = 0.0, $1272 = 0.0, $1273 = 0, $1274 = 0.0, $1275 = 0, $1276 = 0.0, $1277 = 0, $1278 = 0.0, $1279 = 0, $128 = 0, $1280 = 0.0, $1281 = 0, $1282 = 0.0, $1283 = 0.0, $1284 = 0, $1285 = 0;
 var $1286 = 0.0, $1287 = 0.0, $1288 = 0.0, $1289 = 0.0, $129 = 0, $1290 = 0.0, $1291 = 0.0, $1292 = 0.0, $1293 = 0.0, $1294 = 0.0, $1295 = 0, $1296 = 0.0, $1297 = 0, $1298 = 0.0, $1299 = 0.0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0.0, $1302 = 0;
 var $1303 = 0.0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0.0, $1315 = 0, $1316 = 0.0, $1317 = 0.0, $1318 = 0.0, $1319 = 0, $132 = 0, $1320 = 0.0;
 var $1321 = 0, $1322 = 0.0, $1323 = 0.0, $1324 = 0.0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0.0, $1329 = 0, $133 = 0, $1330 = 0.0, $1331 = 0, $1332 = 0.0, $1333 = 0.0, $1334 = 0.0, $1335 = 0.0, $1336 = 0.0, $1337 = 0.0, $1338 = 0.0, $1339 = 0.0;
 var $134 = 0, $1340 = 0.0, $1341 = 0.0, $1342 = 0, $1343 = 0.0, $1344 = 0.0, $1345 = 0.0, $1346 = 0.0, $1347 = 0.0, $1348 = 0.0, $1349 = 0.0, $135 = 0, $1350 = 0.0, $1351 = 0, $1352 = 0.0, $1353 = 0.0, $1354 = 0.0, $1355 = 0.0, $1356 = 0.0, $1357 = 0;
 var $1358 = 0.0, $1359 = 0.0, $136 = 0, $1360 = 0.0, $1361 = 0.0, $1362 = 0.0, $1363 = 0, $1364 = 0.0, $1365 = 0.0, $1366 = 0.0, $1367 = 0.0, $1368 = 0.0, $1369 = 0.0, $137 = 0, $1370 = 0.0, $1371 = 0.0, $1372 = 0.0, $1373 = 0.0, $1374 = 0.0, $1375 = 0.0;
 var $1376 = 0.0, $1377 = 0, $1378 = 0.0, $1379 = 0, $138 = 0, $1380 = 0.0, $1381 = 0.0, $1382 = 0.0, $1383 = 0.0, $1384 = 0.0, $1385 = 0.0, $1386 = 0.0, $1387 = 0.0, $1388 = 0.0, $1389 = 0.0, $139 = 0, $1390 = 0.0, $1391 = 0.0, $1392 = 0.0, $1393 = 0.0;
 var $1394 = 0.0, $1395 = 0.0, $1396 = 0.0, $1397 = 0.0, $1398 = 0.0, $1399 = 0.0, $14 = 0, $140 = 0, $1400 = 0.0, $1401 = 0.0, $1402 = 0.0, $1403 = 0.0, $1404 = 0.0, $1405 = 0.0, $1406 = 0.0, $1407 = 0.0, $1408 = 0.0, $1409 = 0.0, $141 = 0, $1410 = 0.0;
 var $1411 = 0.0, $1412 = 0.0, $1413 = 0.0, $1414 = 0.0, $1415 = 0.0, $1416 = 0, $1417 = 0.0, $1418 = 0.0, $1419 = 0.0, $142 = 0, $1420 = 0.0, $1421 = 0.0, $1422 = 0, $1423 = 0.0, $1424 = 0, $1425 = 0.0, $1426 = 0, $1427 = 0.0, $1428 = 0, $1429 = 0.0;
 var $143 = 0, $1430 = 0, $1431 = 0.0, $1432 = 0, $1433 = 0.0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0.0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0;
 var $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0.0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0.0;
 var $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0.0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0;
 var $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0.0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0;
 var $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0.0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0;
 var $152 = 0, $1520 = 0, $1521 = 0.0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0;
 var $1538 = 0.0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0.0, $1542 = 0.0, $1543 = 0, $1544 = 0, $1545 = 0.0, $1546 = 0.0, $1547 = 0.0, $1548 = 0.0, $1549 = 0.0, $155 = 0, $1550 = 0.0, $1551 = 0.0, $1552 = 0.0, $1553 = 0.0, $1554 = 0.0, $1555 = 0;
 var $1556 = 0.0, $1557 = 0.0, $1558 = 0, $1559 = 0.0, $156 = 0, $1560 = 0.0, $1561 = 0.0, $1562 = 0.0, $1563 = 0.0, $1564 = 0, $1565 = 0.0, $1566 = 0.0, $1567 = 0.0, $1568 = 0.0, $1569 = 0.0, $157 = 0, $1570 = 0.0, $1571 = 0.0, $1572 = 0.0, $1573 = 0.0;
 var $1574 = 0.0, $1575 = 0.0, $1576 = 0.0, $1577 = 0.0, $1578 = 0, $1579 = 0.0, $158 = 0, $1580 = 0, $1581 = 0.0, $1582 = 0.0, $1583 = 0.0, $1584 = 0.0, $1585 = 0.0, $1586 = 0.0, $1587 = 0.0, $1588 = 0.0, $1589 = 0.0, $159 = 0, $1590 = 0.0, $1591 = 0.0;
 var $1592 = 0.0, $1593 = 0.0, $1594 = 0.0, $1595 = 0.0, $1596 = 0.0, $1597 = 0.0, $1598 = 0.0, $1599 = 0.0, $16 = 0, $160 = 0, $1600 = 0.0, $1601 = 0.0, $1602 = 0.0, $1603 = 0.0, $1604 = 0.0, $1605 = 0.0, $1606 = 0.0, $1607 = 0.0, $1608 = 0.0, $1609 = 0.0;
 var $161 = 0, $1610 = 0.0, $1611 = 0.0, $1612 = 0.0, $1613 = 0.0, $1614 = 0.0, $1615 = 0.0, $1616 = 0.0, $1617 = 0.0, $1618 = 0.0, $1619 = 0.0, $162 = 0, $1620 = 0.0, $1621 = 0.0, $1622 = 0.0, $1623 = 0.0, $1624 = 0.0, $1625 = 0.0, $1626 = 0.0, $1627 = 0.0;
 var $1628 = 0.0, $1629 = 0, $163 = 0, $1630 = 0.0, $1631 = 0.0, $1632 = 0, $1633 = 0.0, $1634 = 0, $1635 = 0.0, $1636 = 0, $1637 = 0.0, $1638 = 0, $1639 = 0.0, $164 = 0, $1640 = 0, $1641 = 0.0, $1642 = 0, $1643 = 0.0, $1644 = 0, $1645 = 0.0;
 var $1646 = 0.0, $1647 = 0.0, $1648 = 0.0, $1649 = 0.0, $165 = 0, $1650 = 0.0, $1651 = 0.0, $1652 = 0.0, $1653 = 0.0, $1654 = 0.0, $1655 = 0.0, $1656 = 0.0, $1657 = 0.0, $1658 = 0.0, $1659 = 0.0, $166 = 0, $1660 = 0.0, $1661 = 0.0, $1662 = 0.0, $1663 = 0.0;
 var $1664 = 0.0, $1665 = 0.0, $1666 = 0.0, $1667 = 0.0, $1668 = 0.0, $1669 = 0.0, $167 = 0, $1670 = 0.0, $1671 = 0.0, $1672 = 0.0, $1673 = 0.0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0, $1677 = 0.0, $1678 = 0.0, $1679 = 0.0, $168 = 0, $1680 = 0.0, $1681 = 0.0;
 var $1682 = 0.0, $1683 = 0.0, $1684 = 0.0, $1685 = 0.0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0.0, $169 = 0, $1690 = 0.0, $1691 = 0.0, $1692 = 0.0, $1693 = 0.0, $1694 = 0.0, $1695 = 0.0, $1696 = 0.0, $1697 = 0.0, $1698 = 0.0, $1699 = 0.0, $17 = 0;
 var $170 = 0, $1700 = 0.0, $1701 = 0.0, $1702 = 0.0, $1703 = 0.0, $1704 = 0.0, $1705 = 0.0, $1706 = 0.0, $1707 = 0.0, $1708 = 0.0, $1709 = 0.0, $171 = 0, $1710 = 0.0, $1711 = 0.0, $1712 = 0.0, $1713 = 0.0, $1714 = 0.0, $1715 = 0.0, $1716 = 0.0, $1717 = 0.0;
 var $1718 = 0.0, $1719 = 0.0, $172 = 0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0.0, $1724 = 0.0, $1725 = 0.0, $1726 = 0.0, $1727 = 0.0, $1728 = 0.0, $1729 = 0.0, $173 = 0, $1730 = 0.0, $1731 = 0.0, $1732 = 0.0, $1733 = 0.0, $1734 = 0.0, $1735 = 0.0;
 var $1736 = 0.0, $1737 = 0.0, $1738 = 0.0, $1739 = 0.0, $174 = 0, $1740 = 0.0, $1741 = 0.0, $1742 = 0.0, $1743 = 0.0, $1744 = 0.0, $1745 = 0.0, $1746 = 0.0, $1747 = 0.0, $1748 = 0.0, $1749 = 0.0, $175 = 0, $1750 = 0, $1751 = 0.0, $1752 = 0.0, $1753 = 0;
 var $1754 = 0.0, $1755 = 0.0, $1756 = 0.0, $1757 = 0.0, $1758 = 0.0, $1759 = 0.0, $176 = 0, $1760 = 0.0, $1761 = 0.0, $1762 = 0.0, $1763 = 0.0, $1764 = 0.0, $1765 = 0.0, $1766 = 0.0, $1767 = 0.0, $1768 = 0.0, $1769 = 0.0, $177 = 0, $1770 = 0.0, $1771 = 0.0;
 var $1772 = 0.0, $1773 = 0.0, $1774 = 0.0, $1775 = 0.0, $1776 = 0.0, $1777 = 0.0, $1778 = 0.0, $1779 = 0.0, $178 = 0, $1780 = 0.0, $1781 = 0.0, $1782 = 0.0, $1783 = 0.0, $1784 = 0.0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0.0, $1789 = 0.0, $179 = 0;
 var $1790 = 0.0, $1791 = 0.0, $1792 = 0.0, $1793 = 0.0, $1794 = 0.0, $1795 = 0.0, $1796 = 0.0, $1797 = 0.0, $1798 = 0.0, $1799 = 0.0, $18 = 0, $180 = 0, $1800 = 0.0, $1801 = 0.0, $1802 = 0.0, $1803 = 0.0, $1804 = 0.0, $1805 = 0.0, $1806 = 0.0, $1807 = 0.0;
 var $1808 = 0.0, $1809 = 0.0, $181 = 0, $1810 = 0.0, $1811 = 0.0, $1812 = 0.0, $1813 = 0.0, $1814 = 0.0, $1815 = 0.0, $1816 = 0.0, $1817 = 0.0, $1818 = 0.0, $1819 = 0.0, $182 = 0, $1820 = 0.0, $1821 = 0.0, $1822 = 0.0, $1823 = 0.0, $1824 = 0.0, $1825 = 0.0;
 var $1826 = 0.0, $1827 = 0.0, $1828 = 0.0, $1829 = 0.0, $183 = 0, $1830 = 0.0, $1831 = 0.0, $1832 = 0.0, $1833 = 0.0, $1834 = 0.0, $1835 = 0.0, $1836 = 0.0, $1837 = 0.0, $1838 = 0.0, $1839 = 0.0, $184 = 0, $1840 = 0.0, $1841 = 0.0, $1842 = 0.0, $1843 = 0.0;
 var $1844 = 0.0, $1845 = 0.0, $1846 = 0.0, $1847 = 0.0, $1848 = 0.0, $1849 = 0.0, $185 = 0, $1850 = 0.0, $1851 = 0.0, $1852 = 0.0, $1853 = 0.0, $1854 = 0.0, $1855 = 0.0, $1856 = 0.0, $1857 = 0.0, $1858 = 0.0, $1859 = 0, $186 = 0, $1860 = 0.0, $1861 = 0.0;
 var $1862 = 0, $1863 = 0.0, $1864 = 0.0, $1865 = 0.0, $1866 = 0.0, $1867 = 0.0, $1868 = 0.0, $1869 = 0.0, $187 = 0, $1870 = 0.0, $1871 = 0.0, $1872 = 0.0, $1873 = 0.0, $1874 = 0.0, $1875 = 0.0, $1876 = 0.0, $1877 = 0.0, $1878 = 0.0, $1879 = 0.0, $188 = 0;
 var $1880 = 0.0, $1881 = 0.0, $1882 = 0.0, $1883 = 0.0, $1884 = 0.0, $1885 = 0.0, $1886 = 0.0, $1887 = 0.0, $1888 = 0.0, $1889 = 0.0, $189 = 0, $1890 = 0.0, $1891 = 0.0, $1892 = 0.0, $1893 = 0.0, $1894 = 0.0, $1895 = 0.0, $1896 = 0.0, $1897 = 0.0, $1898 = 0.0;
 var $1899 = 0.0, $19 = 0, $190 = 0, $1900 = 0.0, $1901 = 0.0, $1902 = 0.0, $1903 = 0.0, $1904 = 0.0, $1905 = 0.0, $1906 = 0.0, $1907 = 0.0, $1908 = 0.0, $1909 = 0.0, $191 = 0, $1910 = 0.0, $1911 = 0.0, $1912 = 0.0, $1913 = 0.0, $1914 = 0.0, $1915 = 0.0;
 var $1916 = 0.0, $1917 = 0.0, $1918 = 0.0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $1921 = 0.0, $1922 = 0.0, $1923 = 0.0, $1924 = 0.0, $1925 = 0.0, $1926 = 0.0, $1927 = 0.0, $1928 = 0.0, $1929 = 0.0, $193 = 0, $1930 = 0.0, $1931 = 0.0, $1932 = 0.0, $1933 = 0.0;
 var $1934 = 0.0, $1935 = 0.0, $1936 = 0.0, $1937 = 0.0, $1938 = 0.0, $1939 = 0.0, $194 = 0, $1940 = 0.0, $1941 = 0.0, $1942 = 0.0, $1943 = 0.0, $1944 = 0.0, $1945 = 0.0, $1946 = 0.0, $1947 = 0.0, $1948 = 0.0, $1949 = 0.0, $195 = 0, $1950 = 0.0, $1951 = 0.0;
 var $1952 = 0.0, $1953 = 0.0, $1954 = 0.0, $1955 = 0.0, $1956 = 0.0, $1957 = 0.0, $1958 = 0.0, $1959 = 0.0, $196 = 0, $1960 = 0.0, $1961 = 0.0, $1962 = 0.0, $1963 = 0.0, $1964 = 0.0, $1965 = 0.0, $1966 = 0.0, $1967 = 0.0, $1968 = 0.0, $1969 = 0, $197 = 0;
 var $1970 = 0.0, $1971 = 0.0, $1972 = 0, $1973 = 0.0, $1974 = 0, $1975 = 0.0, $1976 = 0.0, $1977 = 0.0, $1978 = 0.0, $1979 = 0.0, $198 = 0, $1980 = 0.0, $1981 = 0.0, $1982 = 0.0, $1983 = 0.0, $1984 = 0.0, $1985 = 0.0, $1986 = 0.0, $1987 = 0.0, $1988 = 0.0;
 var $1989 = 0.0, $199 = 0, $1990 = 0.0, $1991 = 0.0, $1992 = 0.0, $1993 = 0.0, $1994 = 0.0, $1995 = 0.0, $1996 = 0.0, $1997 = 0.0, $1998 = 0.0, $1999 = 0.0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0.0, $2001 = 0.0, $2002 = 0.0, $2003 = 0.0, $2004 = 0.0;
 var $2005 = 0, $2006 = 0.0, $2007 = 0.0, $2008 = 0, $2009 = 0.0, $201 = 0, $2010 = 0, $2011 = 0.0, $2012 = 0, $2013 = 0.0, $2014 = 0, $2015 = 0.0, $2016 = 0, $2017 = 0.0, $2018 = 0, $2019 = 0.0, $202 = 0, $2020 = 0, $2021 = 0.0, $2022 = 0.0;
 var $2023 = 0.0, $2024 = 0, $2025 = 0, $2026 = 0.0, $2027 = 0.0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0.0, $2031 = 0.0, $2032 = 0.0, $2033 = 0.0, $2034 = 0.0, $2035 = 0.0, $2036 = 0.0, $2037 = 0, $2038 = 0.0, $2039 = 0, $204 = 0, $2040 = 0.0;
 var $2041 = 0.0, $2042 = 0.0, $2043 = 0.0, $2044 = 0.0, $2045 = 0.0, $2046 = 0.0, $2047 = 0.0, $2048 = 0.0, $2049 = 0.0, $205 = 0, $2050 = 0.0, $2051 = 0.0, $2052 = 0.0, $2053 = 0.0, $2054 = 0.0, $2055 = 0.0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0, $2059 = 0.0;
 var $206 = 0, $2060 = 0.0, $2061 = 0.0, $2062 = 0.0, $2063 = 0.0, $2064 = 0.0, $2065 = 0.0, $2066 = 0.0, $2067 = 0.0, $2068 = 0.0, $2069 = 0.0, $207 = 0, $2070 = 0.0, $2071 = 0.0, $2072 = 0, $2073 = 0.0, $2074 = 0.0, $2075 = 0.0, $2076 = 0, $2077 = 0.0;
 var $2078 = 0, $2079 = 0.0, $208 = 0, $2080 = 0, $2081 = 0.0, $2082 = 0, $2083 = 0.0, $2084 = 0, $2085 = 0.0, $2086 = 0, $2087 = 0.0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0.0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0;
 var $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0.0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0;
 var $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0.0, $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0;
 var $2131 = 0, $2132 = 0, $2133 = 0.0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0.0, $2148 = 0, $2149 = 0;
 var $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0.0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0;
 var $2168 = 0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0.0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0;
 var $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0.0, $2191 = 0.0, $2192 = 0.0, $2193 = 0.0, $2194 = 0.0, $2195 = 0.0, $2196 = 0.0, $2197 = 0.0, $2198 = 0.0, $2199 = 0.0, $22 = 0, $220 = 0, $2200 = 0.0, $2201 = 0.0, $2202 = 0.0;
 var $2203 = 0.0, $2204 = 0.0, $2205 = 0.0, $2206 = 0.0, $2207 = 0.0, $2208 = 0.0, $2209 = 0.0, $221 = 0, $2210 = 0.0, $2211 = 0.0, $2212 = 0.0, $2213 = 0.0, $2214 = 0.0, $2215 = 0.0, $2216 = 0.0, $2217 = 0.0, $2218 = 0.0, $2219 = 0.0, $222 = 0, $2220 = 0.0;
 var $2221 = 0.0, $2222 = 0.0, $2223 = 0, $2224 = 0.0, $2225 = 0.0, $2226 = 0, $2227 = 0.0, $2228 = 0, $2229 = 0.0, $223 = 0, $2230 = 0, $2231 = 0.0, $2232 = 0, $2233 = 0.0, $2234 = 0, $2235 = 0.0, $2236 = 0, $2237 = 0.0, $2238 = 0, $2239 = 0.0;
 var $224 = 0, $2240 = 0, $2241 = 0.0, $2242 = 0.0, $2243 = 0, $2244 = 0.0, $2245 = 0.0, $2246 = 0, $2247 = 0.0, $2248 = 0.0, $2249 = 0.0, $225 = 0, $2250 = 0.0, $2251 = 0.0, $2252 = 0, $2253 = 0.0, $2254 = 0.0, $2255 = 0.0, $2256 = 0.0, $2257 = 0.0;
 var $2258 = 0, $2259 = 0.0, $226 = 0, $2260 = 0, $2261 = 0.0, $2262 = 0.0, $2263 = 0.0, $2264 = 0.0, $2265 = 0.0, $2266 = 0.0, $2267 = 0.0, $2268 = 0.0, $2269 = 0.0, $227 = 0, $2270 = 0.0, $2271 = 0.0, $2272 = 0.0, $2273 = 0.0, $2274 = 0.0, $2275 = 0.0;
 var $2276 = 0.0, $2277 = 0.0, $2278 = 0.0, $2279 = 0.0, $228 = 0, $2280 = 0.0, $2281 = 0.0, $2282 = 0.0, $2283 = 0.0, $2284 = 0.0, $2285 = 0.0, $2286 = 0.0, $2287 = 0.0, $2288 = 0.0, $2289 = 0.0, $229 = 0, $2290 = 0.0, $2291 = 0.0, $2292 = 0, $2293 = 0.0;
 var $2294 = 0.0, $2295 = 0.0, $2296 = 0, $2297 = 0.0, $2298 = 0, $2299 = 0.0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0.0, $2302 = 0, $2303 = 0.0, $2304 = 0, $2305 = 0.0, $2306 = 0, $2307 = 0.0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0;
 var $2311 = 0.0, $2312 = 0, $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0.0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0;
 var $233 = 0, $2330 = 0, $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0.0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0;
 var $2348 = 0, $2349 = 0, $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0.0, $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0;
 var $2366 = 0, $2367 = 0.0, $2368 = 0, $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0, $2380 = 0, $2381 = 0.0, $2382 = 0, $2383 = 0;
 var $2384 = 0, $2385 = 0, $2386 = 0, $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0, $2390 = 0, $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0.0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0;
 var $2401 = 0, $2402 = 0, $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0.0, $2411 = 0.0, $2412 = 0.0, $2413 = 0.0, $2414 = 0.0, $2415 = 0.0, $2416 = 0.0, $2417 = 0.0, $2418 = 0.0, $2419 = 0.0;
 var $242 = 0, $2420 = 0.0, $2421 = 0.0, $2422 = 0.0, $2423 = 0.0, $2424 = 0.0, $2425 = 0.0, $2426 = 0.0, $2427 = 0.0, $2428 = 0.0, $2429 = 0.0, $243 = 0, $2430 = 0.0, $2431 = 0.0, $2432 = 0.0, $2433 = 0.0, $2434 = 0.0, $2435 = 0.0, $2436 = 0.0, $2437 = 0.0;
 var $2438 = 0.0, $2439 = 0.0, $244 = 0, $2440 = 0, $2441 = 0.0, $2442 = 0.0, $2443 = 0, $2444 = 0.0, $2445 = 0, $2446 = 0.0, $2447 = 0, $2448 = 0.0, $2449 = 0, $245 = 0, $2450 = 0.0, $2451 = 0, $2452 = 0.0, $2453 = 0, $2454 = 0.0, $2455 = 0;
 var $2456 = 0.0, $2457 = 0.0, $2458 = 0, $2459 = 0.0, $246 = 0, $2460 = 0.0, $2461 = 0.0, $2462 = 0, $2463 = 0.0, $2464 = 0.0, $2465 = 0.0, $2466 = 0.0, $2467 = 0.0, $2468 = 0, $2469 = 0.0, $247 = 0, $2470 = 0.0, $2471 = 0.0, $2472 = 0.0, $2473 = 0.0;
 var $2474 = 0.0, $2475 = 0, $2476 = 0.0, $2477 = 0, $2478 = 0.0, $2479 = 0.0, $248 = 0, $2480 = 0.0, $2481 = 0.0, $2482 = 0.0, $2483 = 0.0, $2484 = 0.0, $2485 = 0.0, $2486 = 0.0, $2487 = 0.0, $2488 = 0.0, $2489 = 0.0, $249 = 0, $2490 = 0.0, $2491 = 0.0;
 var $2492 = 0.0, $2493 = 0.0, $2494 = 0.0, $2495 = 0.0, $2496 = 0.0, $2497 = 0.0, $2498 = 0.0, $2499 = 0.0, $25 = 0, $250 = 0, $2500 = 0.0, $2501 = 0.0, $2502 = 0.0, $2503 = 0.0, $2504 = 0.0, $2505 = 0.0, $2506 = 0.0, $2507 = 0.0, $2508 = 0.0, $2509 = 0.0;
 var $251 = 0, $2510 = 0, $2511 = 0.0, $2512 = 0.0, $2513 = 0.0, $2514 = 0, $2515 = 0.0, $2516 = 0, $2517 = 0.0, $2518 = 0, $2519 = 0.0, $252 = 0, $2520 = 0, $2521 = 0.0, $2522 = 0, $2523 = 0.0, $2524 = 0, $2525 = 0.0, $2526 = 0, $2527 = 0;
 var $2528 = 0, $2529 = 0.0, $253 = 0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0.0, $2544 = 0, $2545 = 0;
 var $2546 = 0, $2547 = 0, $2548 = 0, $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0.0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0;
 var $2564 = 0, $2565 = 0, $2566 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0.0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0;
 var $2582 = 0, $2583 = 0, $2584 = 0, $2585 = 0.0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0.0, $26 = 0;
 var $260 = 0, $2600 = 0, $2601 = 0, $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0, $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0.0, $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0;
 var $2618 = 0, $2619 = 0, $262 = 0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0.0, $2629 = 0.0, $263 = 0, $2630 = 0.0, $2631 = 0.0, $2632 = 0.0, $2633 = 0.0, $2634 = 0.0, $2635 = 0.0;
 var $2636 = 0.0, $2637 = 0.0, $2638 = 0.0, $2639 = 0.0, $264 = 0, $2640 = 0.0, $2641 = 0.0, $2642 = 0.0, $2643 = 0.0, $2644 = 0.0, $2645 = 0.0, $2646 = 0.0, $2647 = 0.0, $2648 = 0.0, $2649 = 0.0, $265 = 0, $2650 = 0.0, $2651 = 0.0, $2652 = 0.0, $2653 = 0.0;
 var $2654 = 0.0, $2655 = 0.0, $2656 = 0.0, $2657 = 0.0, $2658 = 0.0, $2659 = 0.0, $266 = 0, $2660 = 0.0, $2661 = 0.0, $2662 = 0.0, $2663 = 0.0, $2664 = 0, $2665 = 0.0, $2666 = 0.0, $2667 = 0, $2668 = 0.0, $2669 = 0, $267 = 0, $2670 = 0.0, $2671 = 0;
 var $2672 = 0.0, $2673 = 0, $2674 = 0.0, $2675 = 0, $2676 = 0.0, $2677 = 0, $2678 = 0.0, $2679 = 0, $268 = 0, $2680 = 0.0, $2681 = 0, $2682 = 0.0, $2683 = 0, $2684 = 0.0, $2685 = 0, $2686 = 0.0, $2687 = 0.0, $2688 = 0.0, $2689 = 0, $269 = 0;
 var $2690 = 0.0, $2691 = 0.0, $2692 = 0, $2693 = 0.0, $2694 = 0.0, $2695 = 0.0, $2696 = 0.0, $2697 = 0.0, $2698 = 0, $2699 = 0.0, $27 = 0, $270 = 0, $2700 = 0.0, $2701 = 0.0, $2702 = 0.0, $2703 = 0.0, $2704 = 0.0, $2705 = 0, $2706 = 0.0, $2707 = 0;
 var $2708 = 0.0, $2709 = 0.0, $271 = 0, $2710 = 0.0, $2711 = 0.0, $2712 = 0.0, $2713 = 0.0, $2714 = 0.0, $2715 = 0.0, $2716 = 0.0, $2717 = 0.0, $2718 = 0.0, $2719 = 0.0, $272 = 0, $2720 = 0.0, $2721 = 0.0, $2722 = 0.0, $2723 = 0.0, $2724 = 0.0, $2725 = 0.0;
 var $2726 = 0.0, $2727 = 0.0, $2728 = 0.0, $2729 = 0.0, $273 = 0, $2730 = 0.0, $2731 = 0.0, $2732 = 0.0, $2733 = 0.0, $2734 = 0.0, $2735 = 0.0, $2736 = 0.0, $2737 = 0.0, $2738 = 0.0, $2739 = 0, $274 = 0, $2740 = 0.0, $2741 = 0.0, $2742 = 0.0, $2743 = 0;
 var $2744 = 0.0, $2745 = 0, $2746 = 0.0, $2747 = 0, $2748 = 0.0, $2749 = 0, $275 = 0, $2750 = 0.0, $2751 = 0, $2752 = 0.0, $2753 = 0, $2754 = 0.0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0.0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0;
 var $2762 = 0, $2763 = 0, $2764 = 0, $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0.0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0, $278 = 0;
 var $2780 = 0, $2781 = 0, $2782 = 0, $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0.0, $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0, $2797 = 0, $2798 = 0;
 var $2799 = 0, $28 = 0, $280 = 0, $2800 = 0.0, $2801 = 0, $2802 = 0, $2803 = 0, $2804 = 0, $2805 = 0, $2806 = 0, $2807 = 0, $2808 = 0, $2809 = 0, $281 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2813 = 0, $2814 = 0.0, $2815 = 0;
 var $2816 = 0, $2817 = 0, $2818 = 0, $2819 = 0, $282 = 0, $2820 = 0, $2821 = 0, $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0, $2826 = 0, $2827 = 0, $2828 = 0.0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0, $2832 = 0, $2833 = 0;
 var $2834 = 0, $2835 = 0, $2836 = 0, $2837 = 0, $2838 = 0, $2839 = 0, $284 = 0, $2840 = 0, $2841 = 0, $2842 = 0.0, $2843 = 0, $2844 = 0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0, $2850 = 0, $2851 = 0;
 var $2852 = 0, $2853 = 0, $2854 = 0, $2855 = 0, $2856 = 0, $2857 = 0.0, $2858 = 0.0, $2859 = 0.0, $286 = 0, $2860 = 0.0, $2861 = 0.0, $2862 = 0.0, $2863 = 0.0, $2864 = 0.0, $2865 = 0.0, $2866 = 0.0, $2867 = 0.0, $2868 = 0.0, $2869 = 0.0, $287 = 0;
 var $2870 = 0.0, $2871 = 0.0, $2872 = 0.0, $2873 = 0.0, $2874 = 0.0, $2875 = 0, $2876 = 0.0, $2877 = 0.0, $2878 = 0.0, $2879 = 0, $288 = 0, $2880 = 0.0, $2881 = 0, $2882 = 0.0, $2883 = 0, $2884 = 0.0, $2885 = 0, $2886 = 0.0, $2887 = 0, $2888 = 0.0;
 var $2889 = 0, $289 = 0, $2890 = 0.0, $2891 = 0, $2892 = 0.0, $2893 = 0.0, $2894 = 0.0, $2895 = 0.0, $2896 = 0.0, $2897 = 0.0, $2898 = 0.0, $2899 = 0.0, $29 = 0, $290 = 0, $2900 = 0.0, $2901 = 0, $2902 = 0.0, $2903 = 0.0, $2904 = 0.0, $2905 = 0.0;
 var $2906 = 0, $2907 = 0.0, $2908 = 0.0, $2909 = 0.0, $291 = 0, $2910 = 0.0, $2911 = 0.0, $2912 = 0, $2913 = 0.0, $2914 = 0.0, $2915 = 0.0, $2916 = 0.0, $2917 = 0.0, $2918 = 0.0, $2919 = 0.0, $292 = 0, $2920 = 0.0, $2921 = 0.0, $2922 = 0.0, $2923 = 0.0;
 var $2924 = 0.0, $2925 = 0.0, $2926 = 0, $2927 = 0.0, $2928 = 0, $2929 = 0.0, $293 = 0, $2930 = 0.0, $2931 = 0.0, $2932 = 0.0, $2933 = 0.0, $2934 = 0.0, $2935 = 0.0, $2936 = 0.0, $2937 = 0.0, $2938 = 0.0, $2939 = 0.0, $294 = 0, $2940 = 0.0, $2941 = 0.0;
 var $2942 = 0.0, $2943 = 0.0, $2944 = 0.0, $2945 = 0.0, $2946 = 0.0, $2947 = 0.0, $2948 = 0.0, $2949 = 0.0, $295 = 0, $2950 = 0.0, $2951 = 0.0, $2952 = 0.0, $2953 = 0.0, $2954 = 0.0, $2955 = 0.0, $2956 = 0.0, $2957 = 0.0, $2958 = 0.0, $2959 = 0.0, $296 = 0;
 var $2960 = 0.0, $2961 = 0.0, $2962 = 0.0, $2963 = 0.0, $2964 = 0.0, $2965 = 0.0, $2966 = 0, $2967 = 0.0, $2968 = 0.0, $2969 = 0.0, $297 = 0, $2970 = 0, $2971 = 0.0, $2972 = 0, $2973 = 0.0, $2974 = 0, $2975 = 0.0, $2976 = 0, $2977 = 0.0, $2978 = 0;
 var $2979 = 0.0, $298 = 0, $2980 = 0, $2981 = 0.0, $2982 = 0, $2983 = 0, $2984 = 0, $2985 = 0.0, $2986 = 0, $2987 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2991 = 0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0, $2996 = 0;
 var $2997 = 0, $2998 = 0, $2999 = 0.0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $3001 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0;
 var $3013 = 0.0, $3014 = 0, $3015 = 0, $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0, $3023 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0.0, $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0;
 var $3031 = 0, $3032 = 0, $3033 = 0, $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3041 = 0.0, $3042 = 0, $3043 = 0, $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0, $3049 = 0;
 var $305 = 0, $3050 = 0, $3051 = 0, $3052 = 0, $3053 = 0, $3054 = 0, $3055 = 0.0, $3056 = 0, $3057 = 0, $3058 = 0, $3059 = 0, $306 = 0, $3060 = 0, $3061 = 0, $3062 = 0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0, $3067 = 0;
 var $3068 = 0, $3069 = 0.0, $307 = 0, $3070 = 0, $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3080 = 0, $3081 = 0, $3082 = 0, $3083 = 0, $3084 = 0.0, $3085 = 0.0;
 var $3086 = 0.0, $3087 = 0.0, $3088 = 0.0, $3089 = 0.0, $309 = 0, $3090 = 0.0, $3091 = 0.0, $3092 = 0.0, $3093 = 0.0, $3094 = 0.0, $3095 = 0.0, $3096 = 0.0, $3097 = 0.0, $3098 = 0.0, $3099 = 0.0, $31 = 0, $310 = 0, $3100 = 0.0, $3101 = 0.0, $3102 = 0.0;
 var $3103 = 0.0, $3104 = 0.0, $3105 = 0, $3106 = 0.0, $3107 = 0.0, $3108 = 0.0, $3109 = 0, $311 = 0, $3110 = 0.0, $3111 = 0, $3112 = 0.0, $3113 = 0, $3114 = 0.0, $3115 = 0, $3116 = 0.0, $3117 = 0, $3118 = 0.0, $3119 = 0, $312 = 0, $3120 = 0.0;
 var $3121 = 0, $3122 = 0.0, $3123 = 0, $3124 = 0.0, $3125 = 0.0, $3126 = 0.0, $3127 = 0.0, $3128 = 0.0, $3129 = 0.0, $313 = 0, $3130 = 0.0, $3131 = 0.0, $3132 = 0, $3133 = 0.0, $3134 = 0.0, $3135 = 0.0, $3136 = 0.0, $3137 = 0.0, $3138 = 0, $3139 = 0.0;
 var $314 = 0, $3140 = 0.0, $3141 = 0.0, $3142 = 0.0, $3143 = 0.0, $3144 = 0, $3145 = 0.0, $3146 = 0.0, $3147 = 0.0, $3148 = 0.0, $3149 = 0.0, $315 = 0, $3150 = 0.0, $3151 = 0.0, $3152 = 0.0, $3153 = 0.0, $3154 = 0.0, $3155 = 0.0, $3156 = 0.0, $3157 = 0.0;
 var $3158 = 0, $3159 = 0.0, $316 = 0, $3160 = 0, $3161 = 0.0, $3162 = 0.0, $3163 = 0.0, $3164 = 0.0, $3165 = 0.0, $3166 = 0.0, $3167 = 0.0, $3168 = 0.0, $3169 = 0.0, $317 = 0, $3170 = 0.0, $3171 = 0.0, $3172 = 0.0, $3173 = 0.0, $3174 = 0.0, $3175 = 0.0;
 var $3176 = 0.0, $3177 = 0.0, $3178 = 0.0, $3179 = 0.0, $318 = 0, $3180 = 0.0, $3181 = 0.0, $3182 = 0.0, $3183 = 0.0, $3184 = 0.0, $3185 = 0.0, $3186 = 0.0, $3187 = 0.0, $3188 = 0.0, $3189 = 0.0, $319 = 0, $3190 = 0.0, $3191 = 0.0, $3192 = 0.0, $3193 = 0.0;
 var $3194 = 0.0, $3195 = 0.0, $3196 = 0.0, $3197 = 0.0, $3198 = 0, $3199 = 0.0, $32 = 0, $320 = 0, $3200 = 0.0, $3201 = 0.0, $3202 = 0.0, $3203 = 0.0, $3204 = 0, $3205 = 0.0, $3206 = 0, $3207 = 0.0, $3208 = 0, $3209 = 0.0, $321 = 0, $3210 = 0;
 var $3211 = 0.0, $3212 = 0, $3213 = 0.0, $3214 = 0, $3215 = 0.0, $3216 = 0, $3217 = 0, $3218 = 0, $3219 = 0.0, $322 = 0, $3220 = 0, $3221 = 0, $3222 = 0, $3223 = 0, $3224 = 0, $3225 = 0, $3226 = 0, $3227 = 0, $3228 = 0, $3229 = 0;
 var $323 = 0, $3230 = 0, $3231 = 0, $3232 = 0, $3233 = 0.0, $3234 = 0, $3235 = 0, $3236 = 0, $3237 = 0, $3238 = 0, $3239 = 0, $324 = 0, $3240 = 0, $3241 = 0, $3242 = 0, $3243 = 0, $3244 = 0, $3245 = 0, $3246 = 0, $3247 = 0.0;
 var $3248 = 0, $3249 = 0, $325 = 0, $3250 = 0, $3251 = 0, $3252 = 0, $3253 = 0, $3254 = 0, $3255 = 0, $3256 = 0, $3257 = 0, $3258 = 0, $3259 = 0, $326 = 0, $3260 = 0, $3261 = 0.0, $3262 = 0, $3263 = 0, $3264 = 0, $3265 = 0;
 var $3266 = 0, $3267 = 0, $3268 = 0, $3269 = 0, $327 = 0, $3270 = 0, $3271 = 0, $3272 = 0, $3273 = 0, $3274 = 0, $3275 = 0.0, $3276 = 0, $3277 = 0, $3278 = 0, $3279 = 0, $328 = 0, $3280 = 0, $3281 = 0, $3282 = 0, $3283 = 0;
 var $3284 = 0, $3285 = 0, $3286 = 0, $3287 = 0, $3288 = 0, $3289 = 0.0, $329 = 0, $3290 = 0, $3291 = 0, $3292 = 0, $3293 = 0, $3294 = 0, $3295 = 0, $3296 = 0, $3297 = 0, $3298 = 0, $3299 = 0, $33 = 0, $330 = 0, $3300 = 0;
 var $3301 = 0, $3302 = 0, $3303 = 0.0, $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $3309 = 0, $331 = 0, $3310 = 0, $3311 = 0, $3312 = 0, $3313 = 0, $3314 = 0, $3315 = 0, $3316 = 0, $3317 = 0, $3318 = 0.0, $3319 = 0.0;
 var $332 = 0, $3320 = 0.0, $3321 = 0.0, $3322 = 0.0, $3323 = 0.0, $3324 = 0.0, $3325 = 0.0, $3326 = 0.0, $3327 = 0.0, $3328 = 0.0, $3329 = 0.0, $333 = 0, $3330 = 0.0, $3331 = 0.0, $3332 = 0.0, $3333 = 0.0, $3334 = 0.0, $3335 = 0.0, $3336 = 0.0, $3337 = 0.0;
 var $3338 = 0.0, $3339 = 0.0, $334 = 0, $3340 = 0.0, $3341 = 0.0, $3342 = 0.0, $3343 = 0.0, $3344 = 0.0, $3345 = 0.0, $3346 = 0.0, $3347 = 0, $3348 = 0.0, $3349 = 0.0, $335 = 0, $3350 = 0, $3351 = 0.0, $3352 = 0, $3353 = 0.0, $3354 = 0, $3355 = 0.0;
 var $3356 = 0, $3357 = 0.0, $3358 = 0, $3359 = 0.0, $336 = 0, $3360 = 0, $3361 = 0.0, $3362 = 0, $3363 = 0.0, $3364 = 0.0, $3365 = 0, $3366 = 0.0, $3367 = 0.0, $3368 = 0, $3369 = 0.0, $337 = 0, $3370 = 0.0, $3371 = 0.0, $3372 = 0.0, $3373 = 0.0;
 var $3374 = 0, $3375 = 0.0, $3376 = 0.0, $3377 = 0.0, $3378 = 0.0, $3379 = 0.0, $338 = 0, $3380 = 0, $3381 = 0.0, $3382 = 0, $3383 = 0.0, $3384 = 0.0, $3385 = 0.0, $3386 = 0.0, $3387 = 0.0, $3388 = 0.0, $3389 = 0.0, $339 = 0, $3390 = 0.0, $3391 = 0.0;
 var $3392 = 0.0, $3393 = 0.0, $3394 = 0.0, $3395 = 0.0, $3396 = 0.0, $3397 = 0.0, $3398 = 0.0, $3399 = 0.0, $34 = 0, $340 = 0, $3400 = 0.0, $3401 = 0.0, $3402 = 0.0, $3403 = 0.0, $3404 = 0.0, $3405 = 0.0, $3406 = 0.0, $3407 = 0.0, $3408 = 0.0, $3409 = 0.0;
 var $341 = 0, $3410 = 0.0, $3411 = 0.0, $3412 = 0.0, $3413 = 0, $3414 = 0.0, $3415 = 0.0, $3416 = 0.0, $3417 = 0, $3418 = 0.0, $3419 = 0, $342 = 0, $3420 = 0.0, $3421 = 0, $3422 = 0.0, $3423 = 0, $3424 = 0.0, $3425 = 0, $3426 = 0.0, $3427 = 0;
 var $3428 = 0.0, $3429 = 0, $343 = 0, $3430 = 0, $3431 = 0, $3432 = 0.0, $3433 = 0, $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0, $3441 = 0, $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0;
 var $3446 = 0.0, $3447 = 0, $3448 = 0, $3449 = 0, $345 = 0, $3450 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0, $3460 = 0.0, $3461 = 0, $3462 = 0, $3463 = 0;
 var $3464 = 0, $3465 = 0, $3466 = 0, $3467 = 0, $3468 = 0, $3469 = 0, $347 = 0, $3470 = 0, $3471 = 0, $3472 = 0, $3473 = 0, $3474 = 0.0, $3475 = 0, $3476 = 0, $3477 = 0, $3478 = 0, $3479 = 0, $348 = 0, $3480 = 0, $3481 = 0;
 var $3482 = 0, $3483 = 0, $3484 = 0, $3485 = 0, $3486 = 0, $3487 = 0, $3488 = 0.0, $3489 = 0, $349 = 0, $3490 = 0, $3491 = 0, $3492 = 0, $3493 = 0, $3494 = 0, $3495 = 0, $3496 = 0, $3497 = 0, $3498 = 0, $3499 = 0, $35 = 0;
 var $350 = 0, $3500 = 0, $3501 = 0, $3502 = 0.0, $3503 = 0, $3504 = 0, $3505 = 0, $3506 = 0, $3507 = 0, $3508 = 0, $3509 = 0, $351 = 0, $3510 = 0, $3511 = 0, $3512 = 0, $3513 = 0, $3514 = 0, $3515 = 0, $3516 = 0.0, $3517 = 0;
 var $3518 = 0, $3519 = 0, $352 = 0, $3520 = 0, $3521 = 0, $3522 = 0, $3523 = 0, $3524 = 0, $3525 = 0, $3526 = 0, $3527 = 0, $3528 = 0, $3529 = 0, $353 = 0, $3530 = 0, $3531 = 0.0, $3532 = 0.0, $3533 = 0.0, $3534 = 0.0, $3535 = 0.0;
 var $3536 = 0.0, $3537 = 0.0, $3538 = 0.0, $3539 = 0.0, $354 = 0, $3540 = 0.0, $3541 = 0.0, $3542 = 0.0, $3543 = 0.0, $3544 = 0.0, $3545 = 0.0, $3546 = 0.0, $3547 = 0.0, $3548 = 0.0, $3549 = 0.0, $355 = 0, $3550 = 0.0, $3551 = 0.0, $3552 = 0.0, $3553 = 0.0;
 var $3554 = 0.0, $3555 = 0.0, $3556 = 0.0, $3557 = 0.0, $3558 = 0.0, $3559 = 0.0, $356 = 0, $3560 = 0.0, $3561 = 0.0, $3562 = 0.0, $3563 = 0.0, $3564 = 0, $3565 = 0.0, $3566 = 0.0, $3567 = 0, $3568 = 0.0, $3569 = 0, $357 = 0, $3570 = 0.0, $3571 = 0;
 var $3572 = 0.0, $3573 = 0, $3574 = 0.0, $3575 = 0, $3576 = 0.0, $3577 = 0, $3578 = 0.0, $3579 = 0, $358 = 0, $3580 = 0.0, $3581 = 0, $3582 = 0.0, $3583 = 0.0, $3584 = 0.0, $3585 = 0, $3586 = 0, $3587 = 0.0, $3588 = 0.0, $3589 = 0, $359 = 0;
 var $3590 = 0, $3591 = 0.0, $3592 = 0.0, $3593 = 0.0, $3594 = 0.0, $3595 = 0.0, $3596 = 0.0, $3597 = 0.0, $3598 = 0, $3599 = 0.0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0.0, $3602 = 0.0, $3603 = 0.0, $3604 = 0.0, $3605 = 0.0, $3606 = 0.0, $3607 = 0.0;
 var $3608 = 0.0, $3609 = 0.0, $361 = 0, $3610 = 0.0, $3611 = 0.0, $3612 = 0.0, $3613 = 0.0, $3614 = 0.0, $3615 = 0.0, $3616 = 0.0, $3617 = 0.0, $3618 = 0.0, $3619 = 0.0, $362 = 0, $3620 = 0.0, $3621 = 0.0, $3622 = 0.0, $3623 = 0.0, $3624 = 0.0, $3625 = 0.0;
 var $3626 = 0.0, $3627 = 0.0, $3628 = 0.0, $3629 = 0.0, $363 = 0, $3630 = 0.0, $3631 = 0.0, $3632 = 0.0, $3633 = 0.0, $3634 = 0, $3635 = 0.0, $3636 = 0.0, $3637 = 0.0, $3638 = 0, $3639 = 0.0, $364 = 0, $3640 = 0, $3641 = 0.0, $3642 = 0, $3643 = 0.0;
 var $3644 = 0, $3645 = 0.0, $3646 = 0, $3647 = 0.0, $3648 = 0, $3649 = 0.0, $365 = 0, $3650 = 0, $3651 = 0, $3652 = 0, $3653 = 0.0, $3654 = 0, $3655 = 0, $3656 = 0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0;
 var $3662 = 0, $3663 = 0, $3664 = 0, $3665 = 0, $3666 = 0, $3667 = 0.0, $3668 = 0, $3669 = 0, $367 = 0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0, $3676 = 0, $3677 = 0, $3678 = 0, $3679 = 0, $368 = 0;
 var $3680 = 0, $3681 = 0.0, $3682 = 0, $3683 = 0, $3684 = 0, $3685 = 0, $3686 = 0, $3687 = 0, $3688 = 0, $3689 = 0, $369 = 0, $3690 = 0, $3691 = 0, $3692 = 0, $3693 = 0, $3694 = 0, $3695 = 0.0, $3696 = 0, $3697 = 0, $3698 = 0;
 var $3699 = 0, $37 = 0, $370 = 0, $3700 = 0, $3701 = 0, $3702 = 0, $3703 = 0, $3704 = 0, $3705 = 0, $3706 = 0, $3707 = 0, $3708 = 0, $3709 = 0.0, $371 = 0, $3710 = 0, $3711 = 0, $3712 = 0, $3713 = 0, $3714 = 0, $3715 = 0;
 var $3716 = 0, $3717 = 0, $3718 = 0, $3719 = 0, $372 = 0, $3720 = 0, $3721 = 0, $3722 = 0, $3723 = 0.0, $3724 = 0, $3725 = 0, $3726 = 0, $3727 = 0, $3728 = 0, $3729 = 0, $373 = 0, $3730 = 0, $3731 = 0, $3732 = 0, $3733 = 0;
 var $3734 = 0, $3735 = 0, $3736 = 0, $3737 = 0.0, $3738 = 0, $3739 = 0, $374 = 0, $3740 = 0, $3741 = 0, $3742 = 0, $3743 = 0, $3744 = 0, $3745 = 0, $3746 = 0, $3747 = 0, $3748 = 0, $3749 = 0, $375 = 0, $3750 = 0, $3751 = 0;
 var $3752 = 0.0, $3753 = 0, $3754 = 0, $3755 = 0.0, $3756 = 0.0, $3757 = 0, $3758 = 0, $3759 = 0.0, $376 = 0, $3760 = 0, $3761 = 0, $3762 = 0.0, $3763 = 0.0, $3764 = 0.0, $3765 = 0.0, $3766 = 0.0, $3767 = 0.0, $3768 = 0.0, $3769 = 0.0, $377 = 0;
 var $3770 = 0.0, $3771 = 0.0, $3772 = 0.0, $3773 = 0.0, $3774 = 0.0, $3775 = 0, $3776 = 0.0, $3777 = 0.0, $3778 = 0.0, $3779 = 0, $378 = 0, $3780 = 0.0, $3781 = 0.0, $3782 = 0.0, $3783 = 0.0, $3784 = 0.0, $3785 = 0, $3786 = 0.0, $3787 = 0.0, $3788 = 0.0;
 var $3789 = 0.0, $379 = 0, $3790 = 0.0, $3791 = 0.0, $3792 = 0.0, $3793 = 0.0, $3794 = 0.0, $3795 = 0.0, $3796 = 0.0, $3797 = 0.0, $3798 = 0.0, $3799 = 0.0, $38 = 0, $380 = 0, $3800 = 0.0, $3801 = 0.0, $3802 = 0.0, $3803 = 0, $3804 = 0.0, $3805 = 0;
 var $3806 = 0.0, $3807 = 0.0, $3808 = 0.0, $3809 = 0.0, $381 = 0, $3810 = 0.0, $3811 = 0.0, $3812 = 0.0, $3813 = 0.0, $3814 = 0.0, $3815 = 0.0, $3816 = 0.0, $3817 = 0.0, $3818 = 0.0, $3819 = 0.0, $382 = 0, $3820 = 0.0, $3821 = 0.0, $3822 = 0.0, $3823 = 0.0;
 var $3824 = 0.0, $3825 = 0.0, $3826 = 0.0, $3827 = 0.0, $3828 = 0.0, $3829 = 0.0, $383 = 0, $3830 = 0.0, $3831 = 0.0, $3832 = 0.0, $3833 = 0.0, $3834 = 0.0, $3835 = 0.0, $3836 = 0.0, $3837 = 0.0, $3838 = 0.0, $3839 = 0.0, $384 = 0, $3840 = 0.0, $3841 = 0.0;
 var $3842 = 0.0, $3843 = 0.0, $3844 = 0.0, $3845 = 0.0, $3846 = 0.0, $3847 = 0.0, $3848 = 0.0, $3849 = 0.0, $385 = 0, $3850 = 0.0, $3851 = 0.0, $3852 = 0.0, $3853 = 0.0, $3854 = 0.0, $3855 = 0.0, $3856 = 0.0, $3857 = 0.0, $3858 = 0.0, $3859 = 0.0, $386 = 0;
 var $3860 = 0.0, $3861 = 0.0, $3862 = 0.0, $3863 = 0.0, $3864 = 0.0, $3865 = 0.0, $3866 = 0.0, $3867 = 0.0, $3868 = 0.0, $3869 = 0.0, $387 = 0, $3870 = 0.0, $3871 = 0.0, $3872 = 0, $3873 = 0.0, $3874 = 0.0, $3875 = 0.0, $3876 = 0, $3877 = 0.0, $3878 = 0;
 var $3879 = 0.0, $388 = 0, $3880 = 0, $3881 = 0.0, $3882 = 0, $3883 = 0.0, $3884 = 0, $3885 = 0.0, $3886 = 0, $3887 = 0.0, $3888 = 0, $3889 = 0.0, $389 = 0, $3890 = 0, $3891 = 0.0, $3892 = 0, $3893 = 0.0, $3894 = 0, $3895 = 0.0, $3896 = 0;
 var $3897 = 0, $3898 = 0, $3899 = 0.0, $39 = 0, $390 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0, $3909 = 0, $391 = 0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0.0;
 var $3914 = 0, $3915 = 0, $3916 = 0, $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0, $3920 = 0, $3921 = 0, $3922 = 0, $3923 = 0, $3924 = 0, $3925 = 0, $3926 = 0, $3927 = 0.0, $3928 = 0, $3929 = 0, $393 = 0, $3930 = 0, $3931 = 0;
 var $3932 = 0, $3933 = 0, $3934 = 0, $3935 = 0, $3936 = 0, $3937 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3940 = 0, $3941 = 0.0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3946 = 0, $3947 = 0, $3948 = 0, $3949 = 0, $395 = 0;
 var $3950 = 0, $3951 = 0, $3952 = 0, $3953 = 0, $3954 = 0, $3955 = 0.0, $3956 = 0, $3957 = 0, $3958 = 0, $3959 = 0, $396 = 0, $3960 = 0, $3961 = 0, $3962 = 0, $3963 = 0, $3964 = 0, $3965 = 0, $3966 = 0, $3967 = 0, $3968 = 0;
 var $3969 = 0.0, $397 = 0, $3970 = 0, $3971 = 0, $3972 = 0, $3973 = 0, $3974 = 0, $3975 = 0, $3976 = 0, $3977 = 0, $3978 = 0, $3979 = 0, $398 = 0, $3980 = 0, $3981 = 0, $3982 = 0, $3983 = 0.0, $3984 = 0, $3985 = 0, $3986 = 0;
 var $3987 = 0, $3988 = 0, $3989 = 0, $399 = 0, $3990 = 0, $3991 = 0, $3992 = 0, $3993 = 0, $3994 = 0, $3995 = 0, $3996 = 0, $3997 = 0, $3998 = 0.0, $3999 = 0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0, $4001 = 0.0, $4002 = 0.0;
 var $4003 = 0, $4004 = 0, $4005 = 0.0, $4006 = 0.0, $4007 = 0.0, $4008 = 0.0, $4009 = 0.0, $401 = 0, $4010 = 0.0, $4011 = 0.0, $4012 = 0.0, $4013 = 0.0, $4014 = 0.0, $4015 = 0.0, $4016 = 0.0, $4017 = 0.0, $4018 = 0.0, $4019 = 0, $402 = 0, $4020 = 0.0;
 var $4021 = 0.0, $4022 = 0.0, $4023 = 0, $4024 = 0.0, $4025 = 0.0, $4026 = 0.0, $4027 = 0.0, $4028 = 0.0, $4029 = 0, $403 = 0, $4030 = 0.0, $4031 = 0.0, $4032 = 0.0, $4033 = 0.0, $4034 = 0.0, $4035 = 0.0, $4036 = 0.0, $4037 = 0.0, $4038 = 0.0, $4039 = 0.0;
 var $404 = 0, $4040 = 0.0, $4041 = 0.0, $4042 = 0.0, $4043 = 0.0, $4044 = 0.0, $4045 = 0.0, $4046 = 0.0, $4047 = 0.0, $4048 = 0, $4049 = 0.0, $405 = 0, $4050 = 0, $4051 = 0.0, $4052 = 0.0, $4053 = 0.0, $4054 = 0.0, $4055 = 0.0, $4056 = 0.0, $4057 = 0.0;
 var $4058 = 0.0, $4059 = 0.0, $406 = 0, $4060 = 0.0, $4061 = 0.0, $4062 = 0.0, $4063 = 0.0, $4064 = 0.0, $4065 = 0.0, $4066 = 0.0, $4067 = 0.0, $4068 = 0.0, $4069 = 0.0, $407 = 0, $4070 = 0.0, $4071 = 0.0, $4072 = 0.0, $4073 = 0.0, $4074 = 0.0, $4075 = 0.0;
 var $4076 = 0.0, $4077 = 0.0, $4078 = 0.0, $4079 = 0.0, $408 = 0, $4080 = 0.0, $4081 = 0.0, $4082 = 0.0, $4083 = 0.0, $4084 = 0.0, $4085 = 0.0, $4086 = 0.0, $4087 = 0.0, $4088 = 0.0, $4089 = 0.0, $409 = 0, $4090 = 0.0, $4091 = 0.0, $4092 = 0.0, $4093 = 0.0;
 var $4094 = 0.0, $4095 = 0.0, $4096 = 0.0, $4097 = 0.0, $4098 = 0.0, $4099 = 0.0, $41 = 0, $410 = 0, $4100 = 0.0, $4101 = 0.0, $4102 = 0.0, $4103 = 0.0, $4104 = 0.0, $4105 = 0.0, $4106 = 0.0, $4107 = 0.0, $4108 = 0.0, $4109 = 0.0, $411 = 0, $4110 = 0.0;
 var $4111 = 0.0, $4112 = 0.0, $4113 = 0.0, $4114 = 0.0, $4115 = 0.0, $4116 = 0.0, $4117 = 0.0, $4118 = 0, $4119 = 0.0, $412 = 0, $4120 = 0.0, $4121 = 0.0, $4122 = 0, $4123 = 0.0, $4124 = 0, $4125 = 0.0, $4126 = 0, $4127 = 0.0, $4128 = 0, $4129 = 0.0;
 var $413 = 0, $4130 = 0, $4131 = 0.0, $4132 = 0, $4133 = 0.0, $4134 = 0, $4135 = 0.0, $4136 = 0, $4137 = 0.0, $4138 = 0, $4139 = 0.0, $414 = 0, $4140 = 0, $4141 = 0.0, $4142 = 0, $4143 = 0, $4144 = 0, $4145 = 0.0, $4146 = 0, $4147 = 0;
 var $4148 = 0, $4149 = 0, $415 = 0, $4150 = 0, $4151 = 0, $4152 = 0, $4153 = 0, $4154 = 0, $4155 = 0, $4156 = 0, $4157 = 0, $4158 = 0, $4159 = 0.0, $416 = 0, $4160 = 0, $4161 = 0, $4162 = 0, $4163 = 0, $4164 = 0, $4165 = 0;
 var $4166 = 0, $4167 = 0, $4168 = 0, $4169 = 0, $417 = 0, $4170 = 0, $4171 = 0, $4172 = 0, $4173 = 0.0, $4174 = 0, $4175 = 0, $4176 = 0, $4177 = 0, $4178 = 0, $4179 = 0, $418 = 0, $4180 = 0, $4181 = 0, $4182 = 0, $4183 = 0;
 var $4184 = 0, $4185 = 0, $4186 = 0, $4187 = 0.0, $4188 = 0, $4189 = 0, $419 = 0, $4190 = 0, $4191 = 0, $4192 = 0, $4193 = 0, $4194 = 0, $4195 = 0, $4196 = 0, $4197 = 0, $4198 = 0, $4199 = 0, $42 = 0, $420 = 0, $4200 = 0;
 var $4201 = 0.0, $4202 = 0, $4203 = 0, $4204 = 0, $4205 = 0, $4206 = 0, $4207 = 0, $4208 = 0, $4209 = 0, $421 = 0, $4210 = 0, $4211 = 0, $4212 = 0, $4213 = 0, $4214 = 0, $4215 = 0.0, $4216 = 0, $4217 = 0, $4218 = 0, $4219 = 0;
 var $422 = 0, $4220 = 0, $4221 = 0, $4222 = 0, $4223 = 0, $4224 = 0, $4225 = 0, $4226 = 0, $4227 = 0, $4228 = 0, $4229 = 0.0, $423 = 0, $4230 = 0, $4231 = 0, $4232 = 0, $4233 = 0, $4234 = 0, $4235 = 0, $4236 = 0, $4237 = 0;
 var $4238 = 0, $4239 = 0, $424 = 0, $4240 = 0, $4241 = 0, $4242 = 0, $4243 = 0, $4244 = 0.0, $4245 = 0.0, $4246 = 0, $4247 = 0, $4248 = 0.0, $4249 = 0.0, $425 = 0, $4250 = 0.0, $4251 = 0, $4252 = 0, $4253 = 0.0, $4254 = 0.0, $4255 = 0.0;
 var $4256 = 0.0, $4257 = 0.0, $4258 = 0.0, $4259 = 0.0, $426 = 0, $4260 = 0, $4261 = 0.0, $4262 = 0, $4263 = 0.0, $4264 = 0.0, $4265 = 0.0, $4266 = 0.0, $4267 = 0.0, $4268 = 0.0, $4269 = 0.0, $427 = 0, $4270 = 0.0, $4271 = 0.0, $4272 = 0.0, $4273 = 0.0;
 var $4274 = 0.0, $4275 = 0.0, $4276 = 0.0, $4277 = 0.0, $4278 = 0.0, $4279 = 0.0, $428 = 0, $4280 = 0.0, $4281 = 0.0, $4282 = 0.0, $4283 = 0.0, $4284 = 0.0, $4285 = 0.0, $4286 = 0.0, $4287 = 0.0, $4288 = 0.0, $4289 = 0.0, $429 = 0, $4290 = 0.0, $4291 = 0.0;
 var $4292 = 0.0, $4293 = 0.0, $4294 = 0.0, $4295 = 0.0, $4296 = 0.0, $4297 = 0.0, $4298 = 0.0, $4299 = 0.0, $43 = 0, $430 = 0, $4300 = 0.0, $4301 = 0.0, $4302 = 0.0, $4303 = 0.0, $4304 = 0.0, $4305 = 0.0, $4306 = 0.0, $4307 = 0.0, $4308 = 0.0, $4309 = 0.0;
 var $431 = 0, $4310 = 0.0, $4311 = 0.0, $4312 = 0.0, $4313 = 0.0, $4314 = 0.0, $4315 = 0.0, $4316 = 0.0, $4317 = 0.0, $4318 = 0.0, $4319 = 0.0, $432 = 0, $4320 = 0.0, $4321 = 0.0, $4322 = 0.0, $4323 = 0.0, $4324 = 0.0, $4325 = 0.0, $4326 = 0.0, $4327 = 0.0;
 var $4328 = 0.0, $4329 = 0, $433 = 0, $4330 = 0.0, $4331 = 0.0, $4332 = 0.0, $4333 = 0, $4334 = 0.0, $4335 = 0, $4336 = 0.0, $4337 = 0, $4338 = 0.0, $4339 = 0, $434 = 0, $4340 = 0.0, $4341 = 0, $4342 = 0.0, $4343 = 0, $4344 = 0.0, $4345 = 0;
 var $4346 = 0.0, $4347 = 0, $4348 = 0.0, $4349 = 0, $435 = 0, $4350 = 0.0, $4351 = 0, $4352 = 0.0, $4353 = 0, $4354 = 0, $4355 = 0, $4356 = 0.0, $4357 = 0, $4358 = 0, $4359 = 0, $436 = 0, $4360 = 0, $4361 = 0, $4362 = 0, $4363 = 0;
 var $4364 = 0, $4365 = 0, $4366 = 0, $4367 = 0, $4368 = 0, $4369 = 0, $437 = 0, $4370 = 0.0, $4371 = 0, $4372 = 0, $4373 = 0, $4374 = 0, $4375 = 0, $4376 = 0, $4377 = 0, $4378 = 0, $4379 = 0, $438 = 0, $4380 = 0, $4381 = 0;
 var $4382 = 0, $4383 = 0, $4384 = 0.0, $4385 = 0, $4386 = 0, $4387 = 0, $4388 = 0, $4389 = 0, $439 = 0, $4390 = 0, $4391 = 0, $4392 = 0, $4393 = 0, $4394 = 0, $4395 = 0, $4396 = 0, $4397 = 0, $4398 = 0.0, $4399 = 0, $44 = 0;
 var $440 = 0, $4400 = 0, $4401 = 0, $4402 = 0, $4403 = 0, $4404 = 0, $4405 = 0, $4406 = 0, $4407 = 0, $4408 = 0, $4409 = 0, $441 = 0, $4410 = 0, $4411 = 0, $4412 = 0.0, $4413 = 0, $4414 = 0, $4415 = 0, $4416 = 0, $4417 = 0;
 var $4418 = 0, $4419 = 0, $442 = 0, $4420 = 0, $4421 = 0, $4422 = 0, $4423 = 0, $4424 = 0, $4425 = 0, $4426 = 0.0, $4427 = 0, $4428 = 0, $4429 = 0, $443 = 0, $4430 = 0, $4431 = 0, $4432 = 0, $4433 = 0, $4434 = 0, $4435 = 0;
 var $4436 = 0, $4437 = 0, $4438 = 0, $4439 = 0, $444 = 0, $4440 = 0.0, $4441 = 0, $4442 = 0, $4443 = 0, $4444 = 0, $4445 = 0, $4446 = 0, $4447 = 0, $4448 = 0, $4449 = 0, $445 = 0, $4450 = 0, $4451 = 0, $4452 = 0, $4453 = 0;
 var $4454 = 0, $4455 = 0.0, $4456 = 0.0, $4457 = 0, $4458 = 0, $4459 = 0.0, $446 = 0, $4460 = 0.0, $4461 = 0, $4462 = 0, $4463 = 0.0, $4464 = 0.0, $4465 = 0.0, $4466 = 0.0, $4467 = 0.0, $4468 = 0.0, $4469 = 0.0, $447 = 0, $4470 = 0, $4471 = 0.0;
 var $4472 = 0, $4473 = 0.0, $4474 = 0.0, $4475 = 0.0, $4476 = 0.0, $4477 = 0.0, $4478 = 0.0, $4479 = 0.0, $448 = 0, $4480 = 0.0, $4481 = 0.0, $4482 = 0.0, $4483 = 0.0, $4484 = 0.0, $4485 = 0.0, $4486 = 0.0, $4487 = 0.0, $4488 = 0.0, $4489 = 0.0, $449 = 0;
 var $4490 = 0.0, $4491 = 0.0, $4492 = 0.0, $4493 = 0.0, $4494 = 0.0, $4495 = 0.0, $4496 = 0.0, $4497 = 0.0, $4498 = 0.0, $4499 = 0.0, $45 = 0, $450 = 0, $4500 = 0.0, $4501 = 0.0, $4502 = 0.0, $4503 = 0.0, $4504 = 0.0, $4505 = 0.0, $4506 = 0.0, $4507 = 0.0;
 var $4508 = 0.0, $4509 = 0.0, $451 = 0, $4510 = 0.0, $4511 = 0.0, $4512 = 0.0, $4513 = 0.0, $4514 = 0.0, $4515 = 0.0, $4516 = 0.0, $4517 = 0.0, $4518 = 0.0, $4519 = 0.0, $452 = 0, $4520 = 0.0, $4521 = 0, $4522 = 0.0, $4523 = 0.0, $4524 = 0, $4525 = 0.0;
 var $4526 = 0, $4527 = 0.0, $4528 = 0, $4529 = 0.0, $453 = 0, $4530 = 0, $4531 = 0.0, $4532 = 0, $4533 = 0.0, $4534 = 0, $4535 = 0.0, $4536 = 0, $4537 = 0.0, $4538 = 0.0, $4539 = 0.0, $454 = 0, $4540 = 0.0, $4541 = 0.0, $4542 = 0.0, $4543 = 0.0;
 var $4544 = 0.0, $4545 = 0.0, $4546 = 0.0, $4547 = 0.0, $4548 = 0.0, $4549 = 0.0, $455 = 0, $4550 = 0.0, $4551 = 0.0, $4552 = 0.0, $4553 = 0.0, $4554 = 0.0, $4555 = 0.0, $4556 = 0.0, $4557 = 0.0, $4558 = 0.0, $4559 = 0.0, $456 = 0, $4560 = 0.0, $4561 = 0.0;
 var $4562 = 0.0, $4563 = 0.0, $4564 = 0.0, $4565 = 0.0, $4566 = 0.0, $4567 = 0.0, $4568 = 0.0, $4569 = 0.0, $457 = 0, $4570 = 0.0, $4571 = 0.0, $4572 = 0.0, $4573 = 0.0, $4574 = 0.0, $4575 = 0.0, $4576 = 0.0, $4577 = 0.0, $4578 = 0.0, $4579 = 0.0, $458 = 0;
 var $4580 = 0.0, $4581 = 0.0, $4582 = 0.0, $4583 = 0.0, $4584 = 0.0, $4585 = 0.0, $4586 = 0.0, $4587 = 0.0, $4588 = 0.0, $4589 = 0.0, $459 = 0, $4590 = 0.0, $4591 = 0.0, $4592 = 0.0, $4593 = 0.0, $4594 = 0.0, $4595 = 0.0, $4596 = 0.0, $4597 = 0.0, $4598 = 0.0;
 var $4599 = 0.0, $46 = 0, $460 = 0, $4600 = 0.0, $4601 = 0.0, $4602 = 0.0, $4603 = 0.0, $4604 = 0.0, $4605 = 0.0, $4606 = 0.0, $4607 = 0.0, $4608 = 0.0, $4609 = 0.0, $461 = 0, $4610 = 0.0, $4611 = 0.0, $4612 = 0.0, $4613 = 0.0, $4614 = 0.0, $4615 = 0.0;
 var $4616 = 0.0, $4617 = 0.0, $4618 = 0.0, $4619 = 0.0, $462 = 0, $4620 = 0.0, $4621 = 0.0, $4622 = 0.0, $4623 = 0.0, $4624 = 0.0, $4625 = 0.0, $4626 = 0.0, $4627 = 0.0, $4628 = 0.0, $4629 = 0.0, $463 = 0, $4630 = 0.0, $4631 = 0.0, $4632 = 0.0, $4633 = 0.0;
 var $4634 = 0.0, $4635 = 0.0, $4636 = 0.0, $4637 = 0.0, $4638 = 0.0, $4639 = 0.0, $464 = 0, $4640 = 0.0, $4641 = 0.0, $4642 = 0, $4643 = 0.0, $4644 = 0.0, $4645 = 0, $4646 = 0.0, $4647 = 0.0, $4648 = 0.0, $4649 = 0.0, $465 = 0, $4650 = 0.0, $4651 = 0.0;
 var $4652 = 0.0, $4653 = 0.0, $4654 = 0.0, $4655 = 0.0, $4656 = 0.0, $4657 = 0.0, $4658 = 0.0, $4659 = 0.0, $466 = 0, $4660 = 0.0, $4661 = 0.0, $4662 = 0.0, $4663 = 0.0, $4664 = 0.0, $4665 = 0.0, $4666 = 0.0, $4667 = 0.0, $4668 = 0.0, $4669 = 0.0, $467 = 0;
 var $4670 = 0.0, $4671 = 0.0, $4672 = 0.0, $4673 = 0.0, $4674 = 0.0, $4675 = 0.0, $4676 = 0.0, $4677 = 0.0, $4678 = 0.0, $4679 = 0.0, $468 = 0, $4680 = 0.0, $4681 = 0.0, $4682 = 0.0, $4683 = 0.0, $4684 = 0.0, $4685 = 0.0, $4686 = 0.0, $4687 = 0.0, $4688 = 0.0;
 var $4689 = 0.0, $469 = 0, $4690 = 0.0, $4691 = 0.0, $4692 = 0.0, $4693 = 0.0, $4694 = 0.0, $4695 = 0.0, $4696 = 0.0, $4697 = 0.0, $4698 = 0.0, $4699 = 0.0, $47 = 0, $470 = 0, $4700 = 0.0, $4701 = 0.0, $4702 = 0.0, $4703 = 0.0, $4704 = 0.0, $4705 = 0.0;
 var $4706 = 0.0, $4707 = 0.0, $4708 = 0.0, $4709 = 0.0, $471 = 0, $4710 = 0.0, $4711 = 0.0, $4712 = 0.0, $4713 = 0.0, $4714 = 0.0, $4715 = 0.0, $4716 = 0.0, $4717 = 0.0, $4718 = 0.0, $4719 = 0.0, $472 = 0, $4720 = 0.0, $4721 = 0.0, $4722 = 0.0, $4723 = 0.0;
 var $4724 = 0.0, $4725 = 0.0, $4726 = 0.0, $4727 = 0.0, $4728 = 0.0, $4729 = 0.0, $473 = 0, $4730 = 0.0, $4731 = 0.0, $4732 = 0.0, $4733 = 0.0, $4734 = 0.0, $4735 = 0.0, $4736 = 0.0, $4737 = 0.0, $4738 = 0.0, $4739 = 0.0, $474 = 0, $4740 = 0.0, $4741 = 0.0;
 var $4742 = 0.0, $4743 = 0.0, $4744 = 0.0, $4745 = 0.0, $4746 = 0.0, $4747 = 0.0, $4748 = 0.0, $4749 = 0.0, $475 = 0, $4750 = 0.0, $4751 = 0, $4752 = 0.0, $4753 = 0.0, $4754 = 0, $4755 = 0.0, $4756 = 0.0, $4757 = 0.0, $4758 = 0.0, $4759 = 0.0, $476 = 0;
 var $4760 = 0.0, $4761 = 0.0, $4762 = 0.0, $4763 = 0.0, $4764 = 0.0, $4765 = 0.0, $4766 = 0.0, $4767 = 0.0, $4768 = 0.0, $4769 = 0.0, $477 = 0, $4770 = 0.0, $4771 = 0.0, $4772 = 0.0, $4773 = 0.0, $4774 = 0.0, $4775 = 0.0, $4776 = 0.0, $4777 = 0.0, $4778 = 0.0;
 var $4779 = 0.0, $478 = 0, $4780 = 0.0, $4781 = 0.0, $4782 = 0.0, $4783 = 0.0, $4784 = 0.0, $4785 = 0.0, $4786 = 0.0, $4787 = 0.0, $4788 = 0.0, $4789 = 0.0, $479 = 0, $4790 = 0.0, $4791 = 0.0, $4792 = 0.0, $4793 = 0.0, $4794 = 0.0, $4795 = 0.0, $4796 = 0.0;
 var $4797 = 0.0, $4798 = 0.0, $4799 = 0.0, $48 = 0, $480 = 0, $4800 = 0.0, $4801 = 0.0, $4802 = 0.0, $4803 = 0.0, $4804 = 0.0, $4805 = 0.0, $4806 = 0.0, $4807 = 0.0, $4808 = 0.0, $4809 = 0.0, $481 = 0, $4810 = 0.0, $4811 = 0.0, $4812 = 0.0, $4813 = 0.0;
 var $4814 = 0.0, $4815 = 0.0, $4816 = 0.0, $4817 = 0.0, $4818 = 0.0, $4819 = 0.0, $482 = 0, $4820 = 0.0, $4821 = 0.0, $4822 = 0.0, $4823 = 0.0, $4824 = 0.0, $4825 = 0.0, $4826 = 0.0, $4827 = 0.0, $4828 = 0.0, $4829 = 0.0, $483 = 0, $4830 = 0.0, $4831 = 0.0;
 var $4832 = 0.0, $4833 = 0.0, $4834 = 0.0, $4835 = 0.0, $4836 = 0.0, $4837 = 0.0, $4838 = 0.0, $4839 = 0.0, $484 = 0, $4840 = 0.0, $4841 = 0.0, $4842 = 0.0, $4843 = 0.0, $4844 = 0.0, $4845 = 0.0, $4846 = 0.0, $4847 = 0.0, $4848 = 0.0, $4849 = 0.0, $485 = 0;
 var $4850 = 0.0, $4851 = 0.0, $4852 = 0.0, $4853 = 0.0, $4854 = 0.0, $4855 = 0.0, $4856 = 0.0, $4857 = 0.0, $4858 = 0.0, $4859 = 0.0, $486 = 0, $4860 = 0.0, $4861 = 0, $4862 = 0.0, $4863 = 0.0, $4864 = 0, $4865 = 0.0, $4866 = 0, $4867 = 0.0, $4868 = 0.0;
 var $4869 = 0.0, $487 = 0, $4870 = 0.0, $4871 = 0.0, $4872 = 0.0, $4873 = 0.0, $4874 = 0.0, $4875 = 0.0, $4876 = 0.0, $4877 = 0.0, $4878 = 0.0, $4879 = 0.0, $488 = 0, $4880 = 0.0, $4881 = 0.0, $4882 = 0.0, $4883 = 0.0, $4884 = 0.0, $4885 = 0.0, $4886 = 0.0;
 var $4887 = 0.0, $4888 = 0.0, $4889 = 0.0, $489 = 0, $4890 = 0.0, $4891 = 0.0, $4892 = 0.0, $4893 = 0.0, $4894 = 0.0, $4895 = 0.0, $4896 = 0.0, $4897 = 0, $4898 = 0.0, $4899 = 0.0, $49 = 0, $490 = 0, $4900 = 0, $4901 = 0.0, $4902 = 0, $4903 = 0.0;
 var $4904 = 0, $4905 = 0.0, $4906 = 0, $4907 = 0.0, $4908 = 0, $4909 = 0.0, $491 = 0, $4910 = 0, $4911 = 0.0, $4912 = 0, $4913 = 0.0, $4914 = 0.0, $4915 = 0.0, $4916 = 0, $4917 = 0, $4918 = 0.0, $4919 = 0.0, $492 = 0, $4920 = 0, $4921 = 0;
 var $4922 = 0.0, $4923 = 0.0, $4924 = 0.0, $4925 = 0.0, $4926 = 0.0, $4927 = 0.0, $4928 = 0.0, $4929 = 0, $493 = 0, $4930 = 0.0, $4931 = 0, $4932 = 0.0, $4933 = 0.0, $4934 = 0.0, $4935 = 0.0, $4936 = 0.0, $4937 = 0.0, $4938 = 0.0, $4939 = 0.0, $494 = 0;
 var $4940 = 0.0, $4941 = 0.0, $4942 = 0.0, $4943 = 0.0, $4944 = 0.0, $4945 = 0.0, $4946 = 0.0, $4947 = 0.0, $4948 = 0.0, $4949 = 0.0, $495 = 0, $4950 = 0.0, $4951 = 0.0, $4952 = 0.0, $4953 = 0.0, $4954 = 0.0, $4955 = 0.0, $4956 = 0.0, $4957 = 0.0, $4958 = 0.0;
 var $4959 = 0.0, $496 = 0, $4960 = 0.0, $4961 = 0.0, $4962 = 0.0, $4963 = 0.0, $4964 = 0.0, $4965 = 0, $4966 = 0.0, $4967 = 0.0, $4968 = 0.0, $4969 = 0, $497 = 0, $4970 = 0.0, $4971 = 0, $4972 = 0.0, $4973 = 0, $4974 = 0.0, $4975 = 0, $4976 = 0.0;
 var $4977 = 0, $4978 = 0.0, $4979 = 0, $498 = 0, $4980 = 0.0, $4981 = 0, $4982 = 0, $4983 = 0, $4984 = 0.0, $4985 = 0, $4986 = 0, $4987 = 0, $4988 = 0, $4989 = 0, $499 = 0, $4990 = 0, $4991 = 0, $4992 = 0, $4993 = 0, $4994 = 0;
 var $4995 = 0, $4996 = 0, $4997 = 0, $4998 = 0.0, $4999 = 0, $5 = 0, $50 = 0, $500 = 0, $5000 = 0, $5001 = 0, $5002 = 0, $5003 = 0, $5004 = 0, $5005 = 0, $5006 = 0, $5007 = 0, $5008 = 0, $5009 = 0, $501 = 0, $5010 = 0;
 var $5011 = 0, $5012 = 0.0, $5013 = 0, $5014 = 0, $5015 = 0, $5016 = 0, $5017 = 0, $5018 = 0, $5019 = 0, $502 = 0, $5020 = 0, $5021 = 0, $5022 = 0, $5023 = 0, $5024 = 0, $5025 = 0, $5026 = 0.0, $5027 = 0, $5028 = 0, $5029 = 0;
 var $503 = 0, $5030 = 0, $5031 = 0, $5032 = 0, $5033 = 0, $5034 = 0, $5035 = 0, $5036 = 0, $5037 = 0, $5038 = 0, $5039 = 0, $504 = 0, $5040 = 0.0, $5041 = 0, $5042 = 0, $5043 = 0, $5044 = 0, $5045 = 0, $5046 = 0, $5047 = 0;
 var $5048 = 0, $5049 = 0, $505 = 0, $5050 = 0, $5051 = 0, $5052 = 0, $5053 = 0, $5054 = 0.0, $5055 = 0, $5056 = 0, $5057 = 0, $5058 = 0, $5059 = 0, $506 = 0, $5060 = 0, $5061 = 0, $5062 = 0, $5063 = 0, $5064 = 0, $5065 = 0;
 var $5066 = 0, $5067 = 0, $5068 = 0.0, $5069 = 0, $507 = 0, $5070 = 0, $5071 = 0, $5072 = 0, $5073 = 0, $5074 = 0, $5075 = 0, $5076 = 0, $5077 = 0, $5078 = 0, $5079 = 0, $508 = 0, $5080 = 0, $5081 = 0, $5082 = 0, $5083 = 0.0;
 var $5084 = 0.0, $5085 = 0.0, $5086 = 0.0, $5087 = 0.0, $5088 = 0.0, $5089 = 0.0, $509 = 0, $5090 = 0.0, $5091 = 0.0, $5092 = 0.0, $5093 = 0.0, $5094 = 0.0, $5095 = 0.0, $5096 = 0.0, $5097 = 0.0, $5098 = 0.0, $5099 = 0.0, $51 = 0, $510 = 0, $5100 = 0.0;
 var $5101 = 0.0, $5102 = 0.0, $5103 = 0.0, $5104 = 0.0, $5105 = 0.0, $5106 = 0.0, $5107 = 0.0, $5108 = 0.0, $5109 = 0.0, $511 = 0, $5110 = 0.0, $5111 = 0.0, $5112 = 0.0, $5113 = 0.0, $5114 = 0.0, $5115 = 0.0, $5116 = 0, $5117 = 0.0, $5118 = 0.0, $5119 = 0;
 var $512 = 0, $5120 = 0.0, $5121 = 0, $5122 = 0.0, $5123 = 0, $5124 = 0.0, $5125 = 0, $5126 = 0.0, $5127 = 0, $5128 = 0.0, $5129 = 0, $513 = 0, $5130 = 0.0, $5131 = 0, $5132 = 0.0, $5133 = 0, $5134 = 0.0, $5135 = 0.0, $5136 = 0, $5137 = 0.0;
 var $5138 = 0.0, $5139 = 0, $514 = 0, $5140 = 0.0, $5141 = 0.0, $5142 = 0.0, $5143 = 0.0, $5144 = 0.0, $5145 = 0, $5146 = 0.0, $5147 = 0.0, $5148 = 0.0, $5149 = 0.0, $515 = 0, $5150 = 0.0, $5151 = 0, $5152 = 0.0, $5153 = 0, $5154 = 0.0, $5155 = 0.0;
 var $5156 = 0.0, $5157 = 0.0, $5158 = 0.0, $5159 = 0.0, $516 = 0, $5160 = 0.0, $5161 = 0.0, $5162 = 0.0, $5163 = 0.0, $5164 = 0.0, $5165 = 0.0, $5166 = 0.0, $5167 = 0.0, $5168 = 0.0, $5169 = 0.0, $517 = 0, $5170 = 0.0, $5171 = 0.0, $5172 = 0.0, $5173 = 0.0;
 var $5174 = 0.0, $5175 = 0.0, $5176 = 0.0, $5177 = 0.0, $5178 = 0.0, $5179 = 0.0, $518 = 0, $5180 = 0.0, $5181 = 0.0, $5182 = 0.0, $5183 = 0.0, $5184 = 0.0, $5185 = 0, $5186 = 0.0, $5187 = 0.0, $5188 = 0.0, $5189 = 0, $519 = 0, $5190 = 0.0, $5191 = 0;
 var $5192 = 0.0, $5193 = 0, $5194 = 0.0, $5195 = 0, $5196 = 0.0, $5197 = 0, $5198 = 0.0, $5199 = 0, $52 = 0, $520 = 0, $5200 = 0.0, $5201 = 0, $5202 = 0, $5203 = 0, $5204 = 0.0, $5205 = 0, $5206 = 0, $5207 = 0, $5208 = 0, $5209 = 0;
 var $521 = 0, $5210 = 0, $5211 = 0, $5212 = 0, $5213 = 0, $5214 = 0, $5215 = 0, $5216 = 0, $5217 = 0, $5218 = 0.0, $5219 = 0, $522 = 0, $5220 = 0, $5221 = 0, $5222 = 0, $5223 = 0, $5224 = 0, $5225 = 0, $5226 = 0, $5227 = 0;
 var $5228 = 0, $5229 = 0, $523 = 0, $5230 = 0, $5231 = 0, $5232 = 0.0, $5233 = 0, $5234 = 0, $5235 = 0, $5236 = 0, $5237 = 0, $5238 = 0, $5239 = 0, $524 = 0, $5240 = 0, $5241 = 0, $5242 = 0, $5243 = 0, $5244 = 0, $5245 = 0;
 var $5246 = 0.0, $5247 = 0, $5248 = 0, $5249 = 0, $525 = 0, $5250 = 0, $5251 = 0, $5252 = 0, $5253 = 0, $5254 = 0, $5255 = 0, $5256 = 0, $5257 = 0, $5258 = 0, $5259 = 0, $526 = 0, $5260 = 0.0, $5261 = 0, $5262 = 0, $5263 = 0;
 var $5264 = 0, $5265 = 0, $5266 = 0, $5267 = 0, $5268 = 0, $5269 = 0, $527 = 0, $5270 = 0, $5271 = 0, $5272 = 0, $5273 = 0, $5274 = 0.0, $5275 = 0, $5276 = 0, $5277 = 0, $5278 = 0, $5279 = 0, $528 = 0, $5280 = 0, $5281 = 0;
 var $5282 = 0, $5283 = 0, $5284 = 0, $5285 = 0, $5286 = 0, $5287 = 0, $5288 = 0.0, $5289 = 0, $529 = 0, $5290 = 0, $5291 = 0, $5292 = 0, $5293 = 0, $5294 = 0, $5295 = 0, $5296 = 0, $5297 = 0, $5298 = 0, $5299 = 0, $53 = 0;
 var $530 = 0, $5300 = 0, $5301 = 0, $5302 = 0, $5303 = 0.0, $5304 = 0.0, $5305 = 0.0, $5306 = 0.0, $5307 = 0.0, $5308 = 0.0, $5309 = 0.0, $531 = 0, $5310 = 0.0, $5311 = 0.0, $5312 = 0.0, $5313 = 0.0, $5314 = 0.0, $5315 = 0.0, $5316 = 0.0, $5317 = 0.0;
 var $5318 = 0.0, $5319 = 0.0, $532 = 0, $5320 = 0.0, $5321 = 0.0, $5322 = 0.0, $5323 = 0.0, $5324 = 0.0, $5325 = 0.0, $5326 = 0.0, $5327 = 0.0, $5328 = 0.0, $5329 = 0.0, $533 = 0, $5330 = 0.0, $5331 = 0.0, $5332 = 0.0, $5333 = 0, $5334 = 0.0, $5335 = 0.0;
 var $5336 = 0, $5337 = 0.0, $5338 = 0, $5339 = 0.0, $534 = 0, $5340 = 0, $5341 = 0.0, $5342 = 0, $5343 = 0.0, $5344 = 0, $5345 = 0.0, $5346 = 0, $5347 = 0.0, $5348 = 0, $5349 = 0.0, $535 = 0, $5350 = 0.0, $5351 = 0, $5352 = 0.0, $5353 = 0.0;
 var $5354 = 0.0, $5355 = 0, $5356 = 0.0, $5357 = 0.0, $5358 = 0.0, $5359 = 0.0, $536 = 0, $5360 = 0.0, $5361 = 0, $5362 = 0.0, $5363 = 0.0, $5364 = 0.0, $5365 = 0.0, $5366 = 0.0, $5367 = 0.0, $5368 = 0, $5369 = 0.0, $537 = 0, $5370 = 0, $5371 = 0.0;
 var $5372 = 0.0, $5373 = 0.0, $5374 = 0.0, $5375 = 0.0, $5376 = 0.0, $5377 = 0.0, $5378 = 0.0, $5379 = 0.0, $538 = 0, $5380 = 0.0, $5381 = 0.0, $5382 = 0.0, $5383 = 0.0, $5384 = 0.0, $5385 = 0.0, $5386 = 0.0, $5387 = 0.0, $5388 = 0.0, $5389 = 0.0, $539 = 0;
 var $5390 = 0.0, $5391 = 0.0, $5392 = 0.0, $5393 = 0.0, $5394 = 0.0, $5395 = 0.0, $5396 = 0.0, $5397 = 0.0, $5398 = 0.0, $5399 = 0.0, $54 = 0, $540 = 0, $5400 = 0.0, $5401 = 0.0, $5402 = 0.0, $5403 = 0.0, $5404 = 0, $5405 = 0.0, $5406 = 0.0, $5407 = 0.0;
 var $5408 = 0, $5409 = 0.0, $541 = 0, $5410 = 0, $5411 = 0.0, $5412 = 0, $5413 = 0.0, $5414 = 0, $5415 = 0.0, $5416 = 0, $5417 = 0.0, $5418 = 0, $5419 = 0.0, $542 = 0, $5420 = 0, $5421 = 0, $5422 = 0, $5423 = 0.0, $5424 = 0, $5425 = 0;
 var $5426 = 0, $5427 = 0, $5428 = 0, $5429 = 0, $543 = 0, $5430 = 0, $5431 = 0, $5432 = 0, $5433 = 0, $5434 = 0, $5435 = 0, $5436 = 0, $5437 = 0.0, $5438 = 0, $5439 = 0, $544 = 0, $5440 = 0, $5441 = 0, $5442 = 0, $5443 = 0;
 var $5444 = 0, $5445 = 0, $5446 = 0, $5447 = 0, $5448 = 0, $5449 = 0, $545 = 0, $5450 = 0, $5451 = 0.0, $5452 = 0, $5453 = 0, $5454 = 0, $5455 = 0, $5456 = 0, $5457 = 0, $5458 = 0, $5459 = 0, $546 = 0, $5460 = 0, $5461 = 0;
 var $5462 = 0, $5463 = 0, $5464 = 0, $5465 = 0.0, $5466 = 0, $5467 = 0, $5468 = 0, $5469 = 0, $547 = 0, $5470 = 0, $5471 = 0, $5472 = 0, $5473 = 0, $5474 = 0, $5475 = 0, $5476 = 0, $5477 = 0, $5478 = 0, $5479 = 0.0, $548 = 0;
 var $5480 = 0, $5481 = 0, $5482 = 0, $5483 = 0, $5484 = 0, $5485 = 0, $5486 = 0, $5487 = 0, $5488 = 0, $5489 = 0, $549 = 0, $5490 = 0, $5491 = 0, $5492 = 0, $5493 = 0.0, $5494 = 0, $5495 = 0, $5496 = 0, $5497 = 0, $5498 = 0;
 var $5499 = 0, $55 = 0, $550 = 0, $5500 = 0, $5501 = 0, $5502 = 0, $5503 = 0, $5504 = 0, $5505 = 0, $5506 = 0, $5507 = 0.0, $5508 = 0, $5509 = 0, $551 = 0, $5510 = 0, $5511 = 0, $5512 = 0, $5513 = 0, $5514 = 0, $5515 = 0;
 var $5516 = 0, $5517 = 0, $5518 = 0, $5519 = 0, $552 = 0, $5520 = 0, $5521 = 0, $5522 = 0.0, $5523 = 0.0, $5524 = 0.0, $5525 = 0.0, $5526 = 0.0, $5527 = 0.0, $5528 = 0.0, $5529 = 0.0, $553 = 0, $5530 = 0.0, $5531 = 0.0, $5532 = 0.0, $5533 = 0.0;
 var $5534 = 0.0, $5535 = 0.0, $5536 = 0.0, $5537 = 0.0, $5538 = 0.0, $5539 = 0.0, $554 = 0, $5540 = 0.0, $5541 = 0.0, $5542 = 0.0, $5543 = 0.0, $5544 = 0.0, $5545 = 0.0, $5546 = 0.0, $5547 = 0.0, $5548 = 0.0, $5549 = 0.0, $555 = 0, $5550 = 0.0, $5551 = 0.0;
 var $5552 = 0.0, $5553 = 0.0, $5554 = 0.0, $5555 = 0.0, $5556 = 0.0, $5557 = 0.0, $5558 = 0, $5559 = 0.0, $556 = 0, $5560 = 0.0, $5561 = 0, $5562 = 0.0, $5563 = 0, $5564 = 0.0, $5565 = 0, $5566 = 0.0, $5567 = 0, $5568 = 0.0, $5569 = 0, $557 = 0;
 var $5570 = 0.0, $5571 = 0, $5572 = 0.0, $5573 = 0, $5574 = 0.0, $5575 = 0, $5576 = 0.0, $5577 = 0, $5578 = 0.0, $5579 = 0, $558 = 0, $5580 = 0.0, $5581 = 0.0, $5582 = 0.0, $5583 = 0, $5584 = 0.0, $5585 = 0.0, $5586 = 0, $5587 = 0.0, $5588 = 0.0;
 var $5589 = 0.0, $559 = 0, $5590 = 0.0, $5591 = 0.0, $5592 = 0, $5593 = 0.0, $5594 = 0.0, $5595 = 0.0, $5596 = 0.0, $5597 = 0.0, $5598 = 0.0, $5599 = 0, $56 = 0, $560 = 0, $5600 = 0.0, $5601 = 0, $5602 = 0.0, $5603 = 0.0, $5604 = 0.0, $5605 = 0.0;
 var $5606 = 0.0, $5607 = 0.0, $5608 = 0.0, $5609 = 0.0, $561 = 0, $5610 = 0.0, $5611 = 0.0, $5612 = 0.0, $5613 = 0.0, $5614 = 0.0, $5615 = 0.0, $5616 = 0.0, $5617 = 0.0, $5618 = 0.0, $5619 = 0.0, $562 = 0, $5620 = 0.0, $5621 = 0.0, $5622 = 0.0, $5623 = 0.0;
 var $5624 = 0.0, $5625 = 0.0, $5626 = 0.0, $5627 = 0.0, $5628 = 0.0, $5629 = 0.0, $563 = 0, $5630 = 0.0, $5631 = 0.0, $5632 = 0.0, $5633 = 0, $5634 = 0.0, $5635 = 0.0, $5636 = 0.0, $5637 = 0, $5638 = 0.0, $5639 = 0, $564 = 0, $5640 = 0.0, $5641 = 0;
 var $5642 = 0.0, $5643 = 0, $5644 = 0.0, $5645 = 0, $5646 = 0.0, $5647 = 0, $5648 = 0.0, $5649 = 0, $565 = 0, $5650 = 0, $5651 = 0, $5652 = 0.0, $5653 = 0, $5654 = 0, $5655 = 0, $5656 = 0, $5657 = 0, $5658 = 0, $5659 = 0, $566 = 0;
 var $5660 = 0, $5661 = 0, $5662 = 0, $5663 = 0, $5664 = 0, $5665 = 0, $5666 = 0.0, $5667 = 0, $5668 = 0, $5669 = 0, $567 = 0, $5670 = 0, $5671 = 0, $5672 = 0, $5673 = 0, $5674 = 0, $5675 = 0, $5676 = 0, $5677 = 0, $5678 = 0;
 var $5679 = 0, $568 = 0, $5680 = 0.0, $5681 = 0, $5682 = 0, $5683 = 0, $5684 = 0, $5685 = 0, $5686 = 0, $5687 = 0, $5688 = 0, $5689 = 0, $569 = 0, $5690 = 0, $5691 = 0, $5692 = 0, $5693 = 0, $5694 = 0.0, $5695 = 0, $5696 = 0;
 var $5697 = 0, $5698 = 0, $5699 = 0, $57 = 0, $570 = 0, $5700 = 0, $5701 = 0, $5702 = 0, $5703 = 0, $5704 = 0, $5705 = 0, $5706 = 0, $5707 = 0, $5708 = 0.0, $5709 = 0, $571 = 0, $5710 = 0, $5711 = 0, $5712 = 0, $5713 = 0;
 var $5714 = 0, $5715 = 0, $5716 = 0, $5717 = 0, $5718 = 0, $5719 = 0, $572 = 0, $5720 = 0, $5721 = 0, $5722 = 0.0, $5723 = 0, $5724 = 0, $5725 = 0, $5726 = 0, $5727 = 0, $5728 = 0, $5729 = 0, $573 = 0, $5730 = 0, $5731 = 0;
 var $5732 = 0, $5733 = 0, $5734 = 0, $5735 = 0, $5736 = 0.0, $5737 = 0, $5738 = 0, $5739 = 0, $574 = 0, $5740 = 0, $5741 = 0, $5742 = 0, $5743 = 0, $5744 = 0, $5745 = 0, $5746 = 0, $5747 = 0, $5748 = 0, $5749 = 0, $575 = 0;
 var $5750 = 0, $5751 = 0.0, $5752 = 0.0, $5753 = 0.0, $5754 = 0.0, $5755 = 0.0, $5756 = 0.0, $5757 = 0.0, $5758 = 0.0, $5759 = 0.0, $576 = 0, $5760 = 0.0, $5761 = 0.0, $5762 = 0.0, $5763 = 0.0, $5764 = 0.0, $5765 = 0.0, $5766 = 0.0, $5767 = 0.0, $5768 = 0.0;
 var $5769 = 0, $577 = 0, $5770 = 0.0, $5771 = 0.0, $5772 = 0.0, $5773 = 0, $5774 = 0.0, $5775 = 0, $5776 = 0.0, $5777 = 0, $5778 = 0.0, $5779 = 0, $578 = 0, $5780 = 0.0, $5781 = 0, $5782 = 0.0, $5783 = 0, $5784 = 0.0, $5785 = 0, $5786 = 0.0;
 var $5787 = 0.0, $5788 = 0.0, $5789 = 0.0, $579 = 0, $5790 = 0.0, $5791 = 0.0, $5792 = 0.0, $5793 = 0.0, $5794 = 0.0, $5795 = 0, $5796 = 0.0, $5797 = 0.0, $5798 = 0.0, $5799 = 0.0, $58 = 0, $580 = 0, $5800 = 0, $5801 = 0.0, $5802 = 0.0, $5803 = 0.0;
 var $5804 = 0.0, $5805 = 0.0, $5806 = 0, $5807 = 0.0, $5808 = 0.0, $5809 = 0.0, $581 = 0, $5810 = 0.0, $5811 = 0.0, $5812 = 0.0, $5813 = 0.0, $5814 = 0.0, $5815 = 0.0, $5816 = 0.0, $5817 = 0.0, $5818 = 0.0, $5819 = 0.0, $582 = 0, $5820 = 0, $5821 = 0.0;
 var $5822 = 0, $5823 = 0.0, $5824 = 0.0, $5825 = 0.0, $5826 = 0.0, $5827 = 0.0, $5828 = 0.0, $5829 = 0.0, $583 = 0, $5830 = 0.0, $5831 = 0.0, $5832 = 0.0, $5833 = 0.0, $5834 = 0.0, $5835 = 0.0, $5836 = 0.0, $5837 = 0.0, $5838 = 0.0, $5839 = 0.0, $584 = 0;
 var $5840 = 0.0, $5841 = 0.0, $5842 = 0.0, $5843 = 0.0, $5844 = 0.0, $5845 = 0.0, $5846 = 0.0, $5847 = 0.0, $5848 = 0.0, $5849 = 0.0, $585 = 0, $5850 = 0.0, $5851 = 0.0, $5852 = 0.0, $5853 = 0.0, $5854 = 0.0, $5855 = 0.0, $5856 = 0.0, $5857 = 0.0, $5858 = 0.0;
 var $5859 = 0.0, $586 = 0, $5860 = 0, $5861 = 0.0, $5862 = 0.0, $5863 = 0.0, $5864 = 0, $5865 = 0.0, $5866 = 0, $5867 = 0.0, $5868 = 0, $5869 = 0.0, $587 = 0, $5870 = 0, $5871 = 0.0, $5872 = 0, $5873 = 0.0, $5874 = 0, $5875 = 0.0, $5876 = 0;
 var $5877 = 0, $5878 = 0, $5879 = 0.0, $588 = 0, $5880 = 0, $5881 = 0, $5882 = 0, $5883 = 0, $5884 = 0, $5885 = 0, $5886 = 0, $5887 = 0, $5888 = 0, $5889 = 0, $589 = 0, $5890 = 0, $5891 = 0, $5892 = 0, $5893 = 0.0, $5894 = 0;
 var $5895 = 0, $5896 = 0, $5897 = 0, $5898 = 0, $5899 = 0, $59 = 0, $590 = 0, $5900 = 0, $5901 = 0, $5902 = 0, $5903 = 0, $5904 = 0, $5905 = 0, $5906 = 0, $5907 = 0.0, $5908 = 0, $5909 = 0, $591 = 0, $5910 = 0, $5911 = 0;
 var $5912 = 0, $5913 = 0, $5914 = 0, $5915 = 0, $5916 = 0, $5917 = 0, $5918 = 0, $5919 = 0, $592 = 0, $5920 = 0, $5921 = 0.0, $5922 = 0, $5923 = 0, $5924 = 0, $5925 = 0, $5926 = 0, $5927 = 0, $5928 = 0, $5929 = 0, $593 = 0;
 var $5930 = 0, $5931 = 0, $5932 = 0, $5933 = 0, $5934 = 0, $5935 = 0.0, $5936 = 0, $5937 = 0, $5938 = 0, $5939 = 0, $594 = 0, $5940 = 0, $5941 = 0, $5942 = 0, $5943 = 0, $5944 = 0, $5945 = 0, $5946 = 0, $5947 = 0, $5948 = 0;
 var $5949 = 0.0, $595 = 0, $5950 = 0, $5951 = 0, $5952 = 0, $5953 = 0, $5954 = 0, $5955 = 0, $5956 = 0, $5957 = 0, $5958 = 0, $5959 = 0, $596 = 0.0, $5960 = 0, $5961 = 0, $5962 = 0, $5963 = 0.0, $5964 = 0, $5965 = 0, $5966 = 0;
 var $5967 = 0, $5968 = 0, $5969 = 0, $597 = 0.0, $5970 = 0, $5971 = 0, $5972 = 0, $5973 = 0, $5974 = 0, $5975 = 0, $5976 = 0, $5977 = 0, $5978 = 0.0, $5979 = 0.0, $598 = 0.0, $5980 = 0.0, $5981 = 0.0, $5982 = 0.0, $5983 = 0.0, $5984 = 0.0;
 var $5985 = 0.0, $5986 = 0.0, $5987 = 0.0, $5988 = 0.0, $5989 = 0.0, $599 = 0.0, $5990 = 0.0, $5991 = 0.0, $5992 = 0.0, $5993 = 0.0, $5994 = 0.0, $5995 = 0.0, $5996 = 0.0, $5997 = 0.0, $5998 = 0.0, $5999 = 0, $6 = 0, $60 = 0, $600 = 0.0, $6000 = 0.0;
 var $6001 = 0.0, $6002 = 0.0, $6003 = 0, $6004 = 0.0, $6005 = 0, $6006 = 0.0, $6007 = 0, $6008 = 0.0, $6009 = 0, $601 = 0.0, $6010 = 0.0, $6011 = 0, $6012 = 0.0, $6013 = 0, $6014 = 0.0, $6015 = 0, $6016 = 0.0, $6017 = 0, $6018 = 0.0, $6019 = 0.0;
 var $602 = 0.0, $6020 = 0.0, $6021 = 0.0, $6022 = 0.0, $6023 = 0.0, $6024 = 0.0, $6025 = 0.0, $6026 = 0, $6027 = 0.0, $6028 = 0.0, $6029 = 0.0, $603 = 0.0, $6030 = 0.0, $6031 = 0.0, $6032 = 0, $6033 = 0.0, $6034 = 0.0, $6035 = 0.0, $6036 = 0.0, $6037 = 0.0;
 var $6038 = 0, $6039 = 0.0, $604 = 0.0, $6040 = 0.0, $6041 = 0.0, $6042 = 0.0, $6043 = 0.0, $6044 = 0.0, $6045 = 0.0, $6046 = 0.0, $6047 = 0.0, $6048 = 0.0, $6049 = 0.0, $605 = 0.0, $6050 = 0.0, $6051 = 0.0, $6052 = 0, $6053 = 0.0, $6054 = 0, $6055 = 0.0;
 var $6056 = 0.0, $6057 = 0.0, $6058 = 0.0, $6059 = 0.0, $606 = 0.0, $6060 = 0.0, $6061 = 0.0, $6062 = 0.0, $6063 = 0.0, $6064 = 0.0, $6065 = 0.0, $6066 = 0.0, $6067 = 0.0, $6068 = 0.0, $6069 = 0.0, $607 = 0.0, $6070 = 0.0, $6071 = 0.0, $6072 = 0.0, $6073 = 0.0;
 var $6074 = 0.0, $6075 = 0.0, $6076 = 0.0, $6077 = 0.0, $6078 = 0.0, $6079 = 0.0, $608 = 0.0, $6080 = 0.0, $6081 = 0.0, $6082 = 0.0, $6083 = 0.0, $6084 = 0.0, $6085 = 0.0, $6086 = 0.0, $6087 = 0.0, $6088 = 0.0, $6089 = 0.0, $609 = 0.0, $6090 = 0.0, $6091 = 0.0;
 var $6092 = 0, $6093 = 0.0, $6094 = 0.0, $6095 = 0.0, $6096 = 0.0, $6097 = 0.0, $6098 = 0, $6099 = 0.0, $61 = 0, $610 = 0.0, $6100 = 0, $6101 = 0.0, $6102 = 0, $6103 = 0.0, $6104 = 0, $6105 = 0.0, $6106 = 0, $6107 = 0.0, $6108 = 0, $6109 = 0.0;
 var $611 = 0.0, $6110 = 0, $6111 = 0, $6112 = 0, $6113 = 0.0, $6114 = 0, $6115 = 0, $6116 = 0, $6117 = 0, $6118 = 0, $6119 = 0, $612 = 0.0, $6120 = 0, $6121 = 0, $6122 = 0, $6123 = 0, $6124 = 0, $6125 = 0, $6126 = 0, $6127 = 0.0;
 var $6128 = 0, $6129 = 0, $613 = 0.0, $6130 = 0, $6131 = 0, $6132 = 0, $6133 = 0, $6134 = 0, $6135 = 0, $6136 = 0, $6137 = 0, $6138 = 0, $6139 = 0, $614 = 0.0, $6140 = 0, $6141 = 0.0, $6142 = 0, $6143 = 0, $6144 = 0, $6145 = 0;
 var $6146 = 0, $6147 = 0, $6148 = 0, $6149 = 0, $615 = 0.0, $6150 = 0, $6151 = 0, $6152 = 0, $6153 = 0, $6154 = 0, $6155 = 0.0, $6156 = 0, $6157 = 0, $6158 = 0, $6159 = 0, $616 = 0.0, $6160 = 0, $6161 = 0, $6162 = 0, $6163 = 0;
 var $6164 = 0, $6165 = 0, $6166 = 0, $6167 = 0, $6168 = 0, $6169 = 0.0, $617 = 0.0, $6170 = 0, $6171 = 0, $6172 = 0, $6173 = 0, $6174 = 0, $6175 = 0, $6176 = 0, $6177 = 0, $6178 = 0, $6179 = 0, $618 = 0.0, $6180 = 0, $6181 = 0;
 var $6182 = 0, $6183 = 0.0, $6184 = 0, $6185 = 0, $6186 = 0, $6187 = 0, $6188 = 0, $6189 = 0, $619 = 0.0, $6190 = 0, $6191 = 0, $6192 = 0, $6193 = 0, $6194 = 0, $6195 = 0, $6196 = 0, $6197 = 0.0, $6198 = 0, $6199 = 0, $62 = 0;
 var $620 = 0.0, $6200 = 0, $6201 = 0, $6202 = 0, $6203 = 0, $6204 = 0, $6205 = 0, $6206 = 0, $6207 = 0, $6208 = 0, $6209 = 0, $621 = 0.0, $6210 = 0, $6211 = 0, $6212 = 0.0, $6213 = 0.0, $6214 = 0.0, $6215 = 0.0, $6216 = 0.0, $6217 = 0.0;
 var $6218 = 0.0, $6219 = 0.0, $622 = 0.0, $6220 = 0.0, $6221 = 0.0, $6222 = 0.0, $6223 = 0.0, $6224 = 0.0, $6225 = 0.0, $6226 = 0.0, $6227 = 0.0, $6228 = 0.0, $6229 = 0.0, $623 = 0.0, $6230 = 0.0, $6231 = 0.0, $6232 = 0.0, $6233 = 0.0, $6234 = 0.0, $6235 = 0.0;
 var $6236 = 0.0, $6237 = 0.0, $6238 = 0.0, $6239 = 0.0, $624 = 0.0, $6240 = 0.0, $6241 = 0, $6242 = 0.0, $6243 = 0.0, $6244 = 0, $6245 = 0.0, $6246 = 0, $6247 = 0.0, $6248 = 0, $6249 = 0.0, $625 = 0.0, $6250 = 0, $6251 = 0.0, $6252 = 0, $6253 = 0.0;
 var $6254 = 0, $6255 = 0.0, $6256 = 0, $6257 = 0.0, $6258 = 0.0, $6259 = 0, $626 = 0.0, $6260 = 0.0, $6261 = 0.0, $6262 = 0, $6263 = 0.0, $6264 = 0.0, $6265 = 0.0, $6266 = 0.0, $6267 = 0.0, $6268 = 0, $6269 = 0.0, $627 = 0.0, $6270 = 0.0, $6271 = 0.0;
 var $6272 = 0.0, $6273 = 0.0, $6274 = 0, $6275 = 0.0, $6276 = 0, $6277 = 0.0, $6278 = 0.0, $6279 = 0.0, $628 = 0.0, $6280 = 0.0, $6281 = 0.0, $6282 = 0.0, $6283 = 0.0, $6284 = 0.0, $6285 = 0.0, $6286 = 0.0, $6287 = 0.0, $6288 = 0.0, $6289 = 0.0, $629 = 0.0;
 var $6290 = 0.0, $6291 = 0.0, $6292 = 0.0, $6293 = 0.0, $6294 = 0.0, $6295 = 0.0, $6296 = 0.0, $6297 = 0.0, $6298 = 0.0, $6299 = 0.0, $63 = 0, $630 = 0.0, $6300 = 0.0, $6301 = 0.0, $6302 = 0.0, $6303 = 0.0, $6304 = 0.0, $6305 = 0.0, $6306 = 0.0, $6307 = 0;
 var $6308 = 0.0, $6309 = 0.0, $631 = 0.0, $6310 = 0.0, $6311 = 0, $6312 = 0.0, $6313 = 0, $6314 = 0.0, $6315 = 0, $6316 = 0.0, $6317 = 0, $6318 = 0.0, $6319 = 0, $632 = 0.0, $6320 = 0.0, $6321 = 0, $6322 = 0.0, $6323 = 0, $6324 = 0, $6325 = 0;
 var $6326 = 0.0, $6327 = 0, $6328 = 0, $6329 = 0, $633 = 0.0, $6330 = 0, $6331 = 0, $6332 = 0, $6333 = 0, $6334 = 0, $6335 = 0, $6336 = 0, $6337 = 0, $6338 = 0, $6339 = 0, $634 = 0.0, $6340 = 0.0, $6341 = 0, $6342 = 0, $6343 = 0;
 var $6344 = 0, $6345 = 0, $6346 = 0, $6347 = 0, $6348 = 0, $6349 = 0, $635 = 0.0, $6350 = 0, $6351 = 0, $6352 = 0, $6353 = 0, $6354 = 0.0, $6355 = 0, $6356 = 0, $6357 = 0, $6358 = 0, $6359 = 0, $636 = 0.0, $6360 = 0, $6361 = 0;
 var $6362 = 0, $6363 = 0, $6364 = 0, $6365 = 0, $6366 = 0, $6367 = 0, $6368 = 0.0, $6369 = 0, $637 = 0.0, $6370 = 0, $6371 = 0, $6372 = 0, $6373 = 0, $6374 = 0, $6375 = 0, $6376 = 0, $6377 = 0, $6378 = 0, $6379 = 0, $638 = 0.0;
 var $6380 = 0, $6381 = 0, $6382 = 0.0, $6383 = 0, $6384 = 0, $6385 = 0, $6386 = 0, $6387 = 0, $6388 = 0, $6389 = 0, $639 = 0.0, $6390 = 0, $6391 = 0, $6392 = 0, $6393 = 0, $6394 = 0, $6395 = 0, $6396 = 0.0, $6397 = 0, $6398 = 0;
 var $6399 = 0, $64 = 0, $640 = 0.0, $6400 = 0, $6401 = 0, $6402 = 0, $6403 = 0, $6404 = 0, $6405 = 0, $6406 = 0, $6407 = 0, $6408 = 0, $6409 = 0, $641 = 0.0, $6410 = 0.0, $6411 = 0, $6412 = 0, $6413 = 0, $6414 = 0, $6415 = 0;
 var $6416 = 0, $6417 = 0, $6418 = 0, $6419 = 0, $642 = 0.0, $6420 = 0, $6421 = 0, $6422 = 0, $6423 = 0, $6424 = 0, $6425 = 0.0, $6426 = 0.0, $6427 = 0.0, $6428 = 0.0, $6429 = 0.0, $643 = 0.0, $6430 = 0.0, $6431 = 0.0, $6432 = 0.0, $6433 = 0.0;
 var $6434 = 0.0, $6435 = 0.0, $6436 = 0.0, $6437 = 0.0, $6438 = 0.0, $6439 = 0.0, $644 = 0.0, $6440 = 0.0, $6441 = 0.0, $6442 = 0.0, $6443 = 0.0, $6444 = 0.0, $6445 = 0.0, $6446 = 0.0, $6447 = 0.0, $6448 = 0.0, $6449 = 0.0, $645 = 0.0, $6450 = 0.0, $6451 = 0.0;
 var $6452 = 0.0, $6453 = 0.0, $6454 = 0.0, $6455 = 0.0, $6456 = 0.0, $6457 = 0.0, $6458 = 0, $6459 = 0.0, $646 = 0.0, $6460 = 0.0, $6461 = 0, $6462 = 0.0, $6463 = 0, $6464 = 0.0, $6465 = 0, $6466 = 0.0, $6467 = 0, $6468 = 0.0, $6469 = 0, $647 = 0.0;
 var $6470 = 0.0, $6471 = 0, $6472 = 0.0, $6473 = 0, $6474 = 0.0, $6475 = 0, $6476 = 0.0, $6477 = 0.0, $6478 = 0.0, $6479 = 0, $648 = 0.0, $6480 = 0, $6481 = 0.0, $6482 = 0.0, $6483 = 0, $6484 = 0, $6485 = 0.0, $6486 = 0.0, $6487 = 0.0, $6488 = 0.0;
 var $6489 = 0.0, $649 = 0.0, $6490 = 0.0, $6491 = 0.0, $6492 = 0, $6493 = 0.0, $6494 = 0, $6495 = 0.0, $6496 = 0.0, $6497 = 0.0, $6498 = 0.0, $6499 = 0.0, $65 = 0, $650 = 0.0, $6500 = 0.0, $6501 = 0.0, $6502 = 0.0, $6503 = 0.0, $6504 = 0.0, $6505 = 0.0;
 var $6506 = 0.0, $6507 = 0.0, $6508 = 0.0, $6509 = 0.0, $651 = 0.0, $6510 = 0.0, $6511 = 0.0, $6512 = 0.0, $6513 = 0.0, $6514 = 0.0, $6515 = 0.0, $6516 = 0.0, $6517 = 0.0, $6518 = 0.0, $6519 = 0.0, $652 = 0.0, $6520 = 0.0, $6521 = 0.0, $6522 = 0.0, $6523 = 0.0;
 var $6524 = 0.0, $6525 = 0.0, $6526 = 0.0, $6527 = 0, $6528 = 0.0, $6529 = 0.0, $653 = 0.0, $6530 = 0.0, $6531 = 0, $6532 = 0.0, $6533 = 0, $6534 = 0.0, $6535 = 0, $6536 = 0.0, $6537 = 0, $6538 = 0.0, $6539 = 0, $654 = 0.0, $6540 = 0.0, $6541 = 0;
 var $6542 = 0.0, $6543 = 0, $6544 = 0, $6545 = 0, $6546 = 0.0, $6547 = 0, $6548 = 0, $6549 = 0, $655 = 0.0, $6550 = 0, $6551 = 0, $6552 = 0, $6553 = 0, $6554 = 0, $6555 = 0, $6556 = 0, $6557 = 0, $6558 = 0, $6559 = 0, $656 = 0.0;
 var $6560 = 0.0, $6561 = 0, $6562 = 0, $6563 = 0, $6564 = 0, $6565 = 0, $6566 = 0, $6567 = 0, $6568 = 0, $6569 = 0, $657 = 0.0, $6570 = 0, $6571 = 0, $6572 = 0, $6573 = 0, $6574 = 0.0, $6575 = 0, $6576 = 0, $6577 = 0, $6578 = 0;
 var $6579 = 0, $658 = 0.0, $6580 = 0, $6581 = 0, $6582 = 0, $6583 = 0, $6584 = 0, $6585 = 0, $6586 = 0, $6587 = 0, $6588 = 0.0, $6589 = 0, $659 = 0.0, $6590 = 0, $6591 = 0, $6592 = 0, $6593 = 0, $6594 = 0, $6595 = 0, $6596 = 0;
 var $6597 = 0, $6598 = 0, $6599 = 0, $66 = 0, $660 = 0.0, $6600 = 0, $6601 = 0, $6602 = 0.0, $6603 = 0, $6604 = 0, $6605 = 0, $6606 = 0, $6607 = 0, $6608 = 0, $6609 = 0, $661 = 0.0, $6610 = 0, $6611 = 0, $6612 = 0, $6613 = 0;
 var $6614 = 0, $6615 = 0, $6616 = 0.0, $6617 = 0, $6618 = 0, $6619 = 0, $662 = 0.0, $6620 = 0, $6621 = 0, $6622 = 0, $6623 = 0, $6624 = 0, $6625 = 0, $6626 = 0, $6627 = 0, $6628 = 0, $6629 = 0, $663 = 0.0, $6630 = 0.0, $6631 = 0;
 var $6632 = 0, $6633 = 0, $6634 = 0, $6635 = 0, $6636 = 0, $6637 = 0, $6638 = 0, $6639 = 0, $664 = 0.0, $6640 = 0, $6641 = 0, $6642 = 0, $6643 = 0, $6644 = 0, $6645 = 0.0, $6646 = 0, $6647 = 0, $6648 = 0.0, $6649 = 0.0, $665 = 0.0;
 var $6650 = 0, $6651 = 0, $6652 = 0.0, $6653 = 0, $6654 = 0, $6655 = 0.0, $6656 = 0.0, $6657 = 0.0, $6658 = 0.0, $6659 = 0.0, $666 = 0.0, $6660 = 0.0, $6661 = 0.0, $6662 = 0.0, $6663 = 0.0, $6664 = 0.0, $6665 = 0.0, $6666 = 0.0, $6667 = 0.0, $6668 = 0;
 var $6669 = 0.0, $667 = 0.0, $6670 = 0.0, $6671 = 0.0, $6672 = 0, $6673 = 0.0, $6674 = 0.0, $6675 = 0.0, $6676 = 0.0, $6677 = 0.0, $6678 = 0, $6679 = 0.0, $668 = 0.0, $6680 = 0.0, $6681 = 0.0, $6682 = 0.0, $6683 = 0.0, $6684 = 0.0, $6685 = 0.0, $6686 = 0.0;
 var $6687 = 0.0, $6688 = 0.0, $6689 = 0.0, $669 = 0.0, $6690 = 0.0, $6691 = 0.0, $6692 = 0.0, $6693 = 0.0, $6694 = 0.0, $6695 = 0.0, $6696 = 0, $6697 = 0.0, $6698 = 0, $6699 = 0.0, $67 = 0, $670 = 0.0, $6700 = 0.0, $6701 = 0.0, $6702 = 0.0, $6703 = 0.0;
 var $6704 = 0.0, $6705 = 0.0, $6706 = 0.0, $6707 = 0.0, $6708 = 0.0, $6709 = 0.0, $671 = 0.0, $6710 = 0.0, $6711 = 0.0, $6712 = 0.0, $6713 = 0.0, $6714 = 0.0, $6715 = 0.0, $6716 = 0.0, $6717 = 0.0, $6718 = 0.0, $6719 = 0.0, $672 = 0.0, $6720 = 0.0, $6721 = 0.0;
 var $6722 = 0.0, $6723 = 0.0, $6724 = 0.0, $6725 = 0.0, $6726 = 0.0, $6727 = 0.0, $6728 = 0.0, $6729 = 0.0, $673 = 0.0, $6730 = 0.0, $6731 = 0.0, $6732 = 0.0, $6733 = 0.0, $6734 = 0.0, $6735 = 0.0, $6736 = 0.0, $6737 = 0.0, $6738 = 0.0, $6739 = 0.0, $674 = 0.0;
 var $6740 = 0.0, $6741 = 0.0, $6742 = 0.0, $6743 = 0.0, $6744 = 0.0, $6745 = 0.0, $6746 = 0.0, $6747 = 0.0, $6748 = 0.0, $6749 = 0.0, $675 = 0.0, $6750 = 0.0, $6751 = 0.0, $6752 = 0.0, $6753 = 0.0, $6754 = 0.0, $6755 = 0.0, $6756 = 0.0, $6757 = 0.0, $6758 = 0.0;
 var $6759 = 0.0, $676 = 0.0, $6760 = 0.0, $6761 = 0.0, $6762 = 0.0, $6763 = 0.0, $6764 = 0.0, $6765 = 0, $6766 = 0.0, $6767 = 0.0, $6768 = 0.0, $6769 = 0, $677 = 0.0, $6770 = 0.0, $6771 = 0, $6772 = 0.0, $6773 = 0, $6774 = 0.0, $6775 = 0, $6776 = 0.0;
 var $6777 = 0, $6778 = 0.0, $6779 = 0, $678 = 0.0, $6780 = 0.0, $6781 = 0, $6782 = 0.0, $6783 = 0, $6784 = 0.0, $6785 = 0, $6786 = 0.0, $6787 = 0, $6788 = 0.0, $6789 = 0, $679 = 0.0, $6790 = 0, $6791 = 0, $6792 = 0.0, $6793 = 0, $6794 = 0;
 var $6795 = 0, $6796 = 0, $6797 = 0, $6798 = 0, $6799 = 0, $68 = 0, $680 = 0.0, $6800 = 0, $6801 = 0, $6802 = 0, $6803 = 0, $6804 = 0, $6805 = 0, $6806 = 0.0, $6807 = 0, $6808 = 0, $6809 = 0, $681 = 0.0, $6810 = 0, $6811 = 0;
 var $6812 = 0, $6813 = 0, $6814 = 0, $6815 = 0, $6816 = 0, $6817 = 0, $6818 = 0, $6819 = 0, $682 = 0.0, $6820 = 0.0, $6821 = 0, $6822 = 0, $6823 = 0, $6824 = 0, $6825 = 0, $6826 = 0, $6827 = 0, $6828 = 0, $6829 = 0, $683 = 0.0;
 var $6830 = 0, $6831 = 0, $6832 = 0, $6833 = 0, $6834 = 0.0, $6835 = 0, $6836 = 0, $6837 = 0, $6838 = 0, $6839 = 0, $684 = 0.0, $6840 = 0, $6841 = 0, $6842 = 0, $6843 = 0, $6844 = 0, $6845 = 0, $6846 = 0, $6847 = 0, $6848 = 0.0;
 var $6849 = 0, $685 = 0.0, $6850 = 0, $6851 = 0, $6852 = 0, $6853 = 0, $6854 = 0, $6855 = 0, $6856 = 0, $6857 = 0, $6858 = 0, $6859 = 0, $686 = 0.0, $6860 = 0, $6861 = 0, $6862 = 0.0, $6863 = 0, $6864 = 0, $6865 = 0, $6866 = 0;
 var $6867 = 0, $6868 = 0, $6869 = 0, $687 = 0.0, $6870 = 0, $6871 = 0, $6872 = 0, $6873 = 0, $6874 = 0, $6875 = 0, $6876 = 0.0, $6877 = 0, $6878 = 0, $6879 = 0, $688 = 0.0, $6880 = 0, $6881 = 0, $6882 = 0, $6883 = 0, $6884 = 0;
 var $6885 = 0, $6886 = 0, $6887 = 0, $6888 = 0, $6889 = 0, $689 = 0.0, $6890 = 0, $6891 = 0.0, $6892 = 0, $6893 = 0, $6894 = 0.0, $6895 = 0.0, $6896 = 0, $6897 = 0, $6898 = 0.0, $6899 = 0.0, $69 = 0, $690 = 0.0, $6900 = 0.0, $6901 = 0.0;
 var $6902 = 0.0, $6903 = 0.0, $6904 = 0.0, $6905 = 0.0, $6906 = 0.0, $6907 = 0.0, $6908 = 0.0, $6909 = 0.0, $691 = 0.0, $6910 = 0.0, $6911 = 0.0, $6912 = 0, $6913 = 0.0, $6914 = 0.0, $6915 = 0.0, $6916 = 0, $6917 = 0.0, $6918 = 0.0, $6919 = 0.0, $692 = 0.0;
 var $6920 = 0.0, $6921 = 0.0, $6922 = 0, $6923 = 0.0, $6924 = 0.0, $6925 = 0.0, $6926 = 0.0, $6927 = 0.0, $6928 = 0.0, $6929 = 0.0, $693 = 0.0, $6930 = 0.0, $6931 = 0.0, $6932 = 0.0, $6933 = 0.0, $6934 = 0.0, $6935 = 0.0, $6936 = 0.0, $6937 = 0.0, $6938 = 0.0;
 var $6939 = 0.0, $694 = 0.0, $6940 = 0.0, $6941 = 0, $6942 = 0.0, $6943 = 0, $6944 = 0.0, $6945 = 0.0, $6946 = 0.0, $6947 = 0.0, $6948 = 0.0, $6949 = 0.0, $695 = 0.0, $6950 = 0.0, $6951 = 0.0, $6952 = 0.0, $6953 = 0.0, $6954 = 0.0, $6955 = 0.0, $6956 = 0.0;
 var $6957 = 0.0, $6958 = 0.0, $6959 = 0.0, $696 = 0.0, $6960 = 0.0, $6961 = 0.0, $6962 = 0.0, $6963 = 0.0, $6964 = 0.0, $6965 = 0.0, $6966 = 0.0, $6967 = 0.0, $6968 = 0.0, $6969 = 0.0, $697 = 0.0, $6970 = 0.0, $6971 = 0.0, $6972 = 0.0, $6973 = 0.0, $6974 = 0.0;
 var $6975 = 0.0, $6976 = 0.0, $6977 = 0.0, $6978 = 0.0, $6979 = 0.0, $698 = 0.0, $6980 = 0.0, $6981 = 0.0, $6982 = 0.0, $6983 = 0.0, $6984 = 0.0, $6985 = 0.0, $6986 = 0.0, $6987 = 0.0, $6988 = 0.0, $6989 = 0.0, $699 = 0.0, $6990 = 0.0, $6991 = 0.0, $6992 = 0.0;
 var $6993 = 0.0, $6994 = 0.0, $6995 = 0.0, $6996 = 0.0, $6997 = 0.0, $6998 = 0.0, $6999 = 0.0, $7 = 0, $70 = 0, $700 = 0.0, $7000 = 0.0, $7001 = 0.0, $7002 = 0.0, $7003 = 0.0, $7004 = 0.0, $7005 = 0.0, $7006 = 0.0, $7007 = 0.0, $7008 = 0.0, $7009 = 0.0;
 var $701 = 0.0, $7010 = 0, $7011 = 0.0, $7012 = 0.0, $7013 = 0.0, $7014 = 0, $7015 = 0.0, $7016 = 0, $7017 = 0.0, $7018 = 0, $7019 = 0.0, $702 = 0.0, $7020 = 0, $7021 = 0.0, $7022 = 0, $7023 = 0.0, $7024 = 0, $7025 = 0.0, $7026 = 0, $7027 = 0.0;
 var $7028 = 0, $7029 = 0.0, $703 = 0.0, $7030 = 0, $7031 = 0.0, $7032 = 0, $7033 = 0.0, $7034 = 0, $7035 = 0, $7036 = 0, $7037 = 0.0, $7038 = 0, $7039 = 0, $704 = 0.0, $7040 = 0, $7041 = 0, $7042 = 0, $7043 = 0, $7044 = 0, $7045 = 0;
 var $7046 = 0, $7047 = 0, $7048 = 0, $7049 = 0, $705 = 0.0, $7050 = 0, $7051 = 0.0, $7052 = 0, $7053 = 0, $7054 = 0, $7055 = 0, $7056 = 0, $7057 = 0, $7058 = 0, $7059 = 0, $706 = 0.0, $7060 = 0, $7061 = 0, $7062 = 0, $7063 = 0;
 var $7064 = 0, $7065 = 0.0, $7066 = 0, $7067 = 0, $7068 = 0, $7069 = 0, $707 = 0.0, $7070 = 0, $7071 = 0, $7072 = 0, $7073 = 0, $7074 = 0, $7075 = 0, $7076 = 0, $7077 = 0, $7078 = 0, $7079 = 0.0, $708 = 0.0, $7080 = 0, $7081 = 0;
 var $7082 = 0, $7083 = 0, $7084 = 0, $7085 = 0, $7086 = 0, $7087 = 0, $7088 = 0, $7089 = 0, $709 = 0.0, $7090 = 0, $7091 = 0, $7092 = 0, $7093 = 0.0, $7094 = 0, $7095 = 0, $7096 = 0, $7097 = 0, $7098 = 0, $7099 = 0, $71 = 0;
 var $710 = 0.0, $7100 = 0, $7101 = 0, $7102 = 0, $7103 = 0, $7104 = 0, $7105 = 0, $7106 = 0, $7107 = 0.0, $7108 = 0, $7109 = 0, $711 = 0.0, $7110 = 0, $7111 = 0, $7112 = 0, $7113 = 0, $7114 = 0, $7115 = 0, $7116 = 0, $7117 = 0;
 var $7118 = 0, $7119 = 0, $712 = 0.0, $7120 = 0, $7121 = 0.0, $7122 = 0, $7123 = 0, $7124 = 0, $7125 = 0, $7126 = 0, $7127 = 0, $7128 = 0, $7129 = 0, $713 = 0.0, $7130 = 0, $7131 = 0, $7132 = 0, $7133 = 0, $7134 = 0, $7135 = 0;
 var $7136 = 0.0, $7137 = 0.0, $7138 = 0, $7139 = 0, $714 = 0, $7140 = 0.0, $7141 = 0.0, $7142 = 0.0, $7143 = 0, $7144 = 0, $7145 = 0.0, $7146 = 0.0, $7147 = 0.0, $7148 = 0.0, $7149 = 0.0, $715 = 0, $7150 = 0.0, $7151 = 0.0, $7152 = 0, $7153 = 0.0;
 var $7154 = 0, $7155 = 0.0, $7156 = 0.0, $7157 = 0.0, $7158 = 0.0, $7159 = 0.0, $716 = 0, $7160 = 0.0, $7161 = 0.0, $7162 = 0.0, $7163 = 0.0, $7164 = 0.0, $7165 = 0.0, $7166 = 0.0, $7167 = 0.0, $7168 = 0.0, $7169 = 0.0, $717 = 0, $7170 = 0.0, $7171 = 0.0;
 var $7172 = 0.0, $7173 = 0.0, $7174 = 0.0, $7175 = 0.0, $7176 = 0.0, $7177 = 0.0, $7178 = 0.0, $7179 = 0.0, $718 = 0, $7180 = 0.0, $7181 = 0.0, $7182 = 0.0, $7183 = 0.0, $7184 = 0.0, $7185 = 0.0, $7186 = 0.0, $7187 = 0.0, $7188 = 0.0, $7189 = 0.0, $719 = 0;
 var $7190 = 0.0, $7191 = 0.0, $7192 = 0.0, $7193 = 0.0, $7194 = 0.0, $7195 = 0.0, $7196 = 0.0, $7197 = 0.0, $7198 = 0.0, $7199 = 0.0, $72 = 0, $720 = 0.0, $7200 = 0.0, $7201 = 0.0, $7202 = 0.0, $7203 = 0.0, $7204 = 0.0, $7205 = 0.0, $7206 = 0.0, $7207 = 0.0;
 var $7208 = 0.0, $7209 = 0.0, $721 = 0.0, $7210 = 0.0, $7211 = 0.0, $7212 = 0.0, $7213 = 0.0, $7214 = 0.0, $7215 = 0.0, $7216 = 0.0, $7217 = 0.0, $7218 = 0.0, $7219 = 0.0, $722 = 0.0, $7220 = 0.0, $7221 = 0, $7222 = 0.0, $7223 = 0.0, $7224 = 0.0, $7225 = 0;
 var $7226 = 0.0, $7227 = 0, $7228 = 0.0, $7229 = 0, $723 = 0.0, $7230 = 0.0, $7231 = 0, $7232 = 0.0, $7233 = 0, $7234 = 0.0, $7235 = 0, $7236 = 0.0, $7237 = 0, $7238 = 0.0, $7239 = 0, $724 = 0.0, $7240 = 0.0, $7241 = 0, $7242 = 0.0, $7243 = 0;
 var $7244 = 0.0, $7245 = 0, $7246 = 0, $7247 = 0, $7248 = 0.0, $7249 = 0, $725 = 0.0, $7250 = 0, $7251 = 0, $7252 = 0, $7253 = 0, $7254 = 0, $7255 = 0, $7256 = 0, $7257 = 0, $7258 = 0, $7259 = 0, $726 = 0.0, $7260 = 0, $7261 = 0;
 var $7262 = 0.0, $7263 = 0, $7264 = 0, $7265 = 0, $7266 = 0, $7267 = 0, $7268 = 0, $7269 = 0, $727 = 0.0, $7270 = 0, $7271 = 0, $7272 = 0, $7273 = 0, $7274 = 0, $7275 = 0, $7276 = 0.0, $7277 = 0, $7278 = 0, $7279 = 0, $728 = 0;
 var $7280 = 0, $7281 = 0, $7282 = 0, $7283 = 0, $7284 = 0, $7285 = 0, $7286 = 0, $7287 = 0, $7288 = 0, $7289 = 0, $729 = 0, $7290 = 0.0, $7291 = 0, $7292 = 0, $7293 = 0, $7294 = 0, $7295 = 0, $7296 = 0, $7297 = 0, $7298 = 0;
 var $7299 = 0, $73 = 0, $730 = 0, $7300 = 0, $7301 = 0, $7302 = 0, $7303 = 0, $7304 = 0.0, $7305 = 0, $7306 = 0, $7307 = 0, $7308 = 0, $7309 = 0, $731 = 0, $7310 = 0, $7311 = 0, $7312 = 0, $7313 = 0, $7314 = 0, $7315 = 0;
 var $7316 = 0, $7317 = 0, $7318 = 0.0, $7319 = 0, $732 = 0, $7320 = 0, $7321 = 0, $7322 = 0, $7323 = 0, $7324 = 0, $7325 = 0, $7326 = 0, $7327 = 0, $7328 = 0, $7329 = 0, $733 = 0, $7330 = 0, $7331 = 0, $7332 = 0.0, $7333 = 0;
 var $7334 = 0, $7335 = 0, $7336 = 0, $7337 = 0, $7338 = 0, $7339 = 0, $734 = 0, $7340 = 0, $7341 = 0, $7342 = 0, $7343 = 0, $7344 = 0, $7345 = 0, $7346 = 0, $7347 = 0, $7348 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0;
 var $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0.0, $747 = 0, $748 = 0.0, $749 = 0.0, $75 = 0, $750 = 0.0, $751 = 0, $752 = 0.0, $753 = 0, $754 = 0.0, $755 = 0.0, $756 = 0.0;
 var $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0.0, $761 = 0, $762 = 0.0, $763 = 0, $764 = 0.0, $765 = 0.0, $766 = 0.0, $767 = 0.0, $768 = 0.0, $769 = 0.0, $77 = 0, $770 = 0.0, $771 = 0.0, $772 = 0.0, $773 = 0.0, $774 = 0.0;
 var $775 = 0.0, $776 = 0.0, $777 = 0.0, $778 = 0.0, $779 = 0.0, $78 = 0, $780 = 0.0, $781 = 0.0, $782 = 0.0, $783 = 0.0, $784 = 0.0, $785 = 0.0, $786 = 0.0, $787 = 0.0, $788 = 0.0, $789 = 0.0, $79 = 0, $790 = 0.0, $791 = 0.0, $792 = 0.0;
 var $793 = 0.0, $794 = 0.0, $795 = 0.0, $796 = 0.0, $797 = 0.0, $798 = 0.0, $799 = 0.0, $8 = 0, $80 = 0, $800 = 0.0, $801 = 0.0, $802 = 0.0, $803 = 0.0, $804 = 0.0, $805 = 0.0, $806 = 0.0, $807 = 0.0, $808 = 0.0, $809 = 0.0, $81 = 0;
 var $810 = 0.0, $811 = 0.0, $812 = 0.0, $813 = 0.0, $814 = 0.0, $815 = 0.0, $816 = 0.0, $817 = 0.0, $818 = 0.0, $819 = 0.0, $82 = 0, $820 = 0.0, $821 = 0.0, $822 = 0.0, $823 = 0.0, $824 = 0.0, $825 = 0.0, $826 = 0.0, $827 = 0.0, $828 = 0.0;
 var $829 = 0.0, $83 = 0, $830 = 0.0, $831 = 0.0, $832 = 0.0, $833 = 0.0, $834 = 0.0, $835 = 0.0, $836 = 0.0, $837 = 0.0, $838 = 0.0, $839 = 0.0, $84 = 0, $840 = 0.0, $841 = 0.0, $842 = 0.0, $843 = 0.0, $844 = 0.0, $845 = 0.0, $846 = 0.0;
 var $847 = 0.0, $848 = 0.0, $849 = 0.0, $85 = 0, $850 = 0.0, $851 = 0.0, $852 = 0.0, $853 = 0.0, $854 = 0.0, $855 = 0.0, $856 = 0.0, $857 = 0.0, $858 = 0.0, $859 = 0.0, $86 = 0, $860 = 0.0, $861 = 0.0, $862 = 0.0, $863 = 0.0, $864 = 0.0;
 var $865 = 0.0, $866 = 0.0, $867 = 0.0, $868 = 0.0, $869 = 0.0, $87 = 0, $870 = 0, $871 = 0.0, $872 = 0.0, $873 = 0, $874 = 0.0, $875 = 0.0, $876 = 0.0, $877 = 0.0, $878 = 0.0, $879 = 0.0, $88 = 0, $880 = 0.0, $881 = 0.0, $882 = 0.0;
 var $883 = 0.0, $884 = 0.0, $885 = 0.0, $886 = 0.0, $887 = 0.0, $888 = 0.0, $889 = 0.0, $89 = 0, $890 = 0.0, $891 = 0.0, $892 = 0.0, $893 = 0.0, $894 = 0.0, $895 = 0.0, $896 = 0.0, $897 = 0.0, $898 = 0.0, $899 = 0.0, $9 = 0, $90 = 0;
 var $900 = 0.0, $901 = 0.0, $902 = 0.0, $903 = 0.0, $904 = 0.0, $905 = 0.0, $906 = 0.0, $907 = 0.0, $908 = 0.0, $909 = 0.0, $91 = 0, $910 = 0.0, $911 = 0.0, $912 = 0.0, $913 = 0.0, $914 = 0.0, $915 = 0.0, $916 = 0.0, $917 = 0.0, $918 = 0.0;
 var $919 = 0.0, $92 = 0, $920 = 0.0, $921 = 0.0, $922 = 0.0, $923 = 0.0, $924 = 0.0, $925 = 0.0, $926 = 0.0, $927 = 0.0, $928 = 0.0, $929 = 0.0, $93 = 0, $930 = 0.0, $931 = 0.0, $932 = 0.0, $933 = 0.0, $934 = 0.0, $935 = 0.0, $936 = 0.0;
 var $937 = 0.0, $938 = 0.0, $939 = 0.0, $94 = 0, $940 = 0.0, $941 = 0.0, $942 = 0.0, $943 = 0.0, $944 = 0.0, $945 = 0.0, $946 = 0.0, $947 = 0.0, $948 = 0.0, $949 = 0.0, $95 = 0, $950 = 0.0, $951 = 0.0, $952 = 0.0, $953 = 0.0, $954 = 0.0;
 var $955 = 0.0, $956 = 0.0, $957 = 0.0, $958 = 0.0, $959 = 0.0, $96 = 0, $960 = 0.0, $961 = 0.0, $962 = 0.0, $963 = 0.0, $964 = 0.0, $965 = 0.0, $966 = 0.0, $967 = 0.0, $968 = 0.0, $969 = 0.0, $97 = 0, $970 = 0.0, $971 = 0.0, $972 = 0.0;
 var $973 = 0.0, $974 = 0.0, $975 = 0.0, $976 = 0.0, $977 = 0.0, $978 = 0.0, $979 = 0, $98 = 0, $980 = 0.0, $981 = 0.0, $982 = 0.0, $983 = 0.0, $984 = 0.0, $985 = 0.0, $986 = 0.0, $987 = 0.0, $988 = 0.0, $989 = 0.0, $99 = 0, $990 = 0;
 var $991 = 0.0, $992 = 0.0, $993 = 0, $994 = 0.0, $995 = 0, $996 = 0.0, $997 = 0, $998 = 0.0, $999 = 0, $cj31array = 0, $cj31array6 = 0, $cj32array = 0, $iij31$0361 = 0, $iij3110$0353 = 0, $iij32$0255 = 0, $ij31$0368 = 0, $ij319$0360 = 0, $ij32$0369 = 0, $j31array = 0, $j31array5 = 0;
 var $j31valid = 0, $j31valid8 = 0, $j32array = 0, $j32valid = 0, $or$cond = 0, $sj31array = 0, $sj31array7 = 0, $sj32array = 0, $vfree = 0, $vfree110 = 0, $vfree121 = 0, $vfree132 = 0, $vfree142 = 0, $vfree152 = 0, $vfree175 = 0, $vfree186 = 0, $vfree197 = 0, $vfree208 = 0, $vfree21 = 0, $vfree219 = 0;
 var $vfree230 = 0, $vfree241 = 0, $vfree252 = 0, $vfree263 = 0, $vfree273 = 0, $vfree283 = 0, $vfree44 = 0, $vfree55 = 0, $vfree66 = 0, $vfree77 = 0, $vfree88 = 0, $vfree99 = 0, $vinfos = 0, $vinfos109 = 0, $vinfos120 = 0, $vinfos131 = 0, $vinfos141 = 0, $vinfos151 = 0, $vinfos174 = 0, $vinfos185 = 0;
 var $vinfos196 = 0, $vinfos20 = 0, $vinfos207 = 0, $vinfos218 = 0, $vinfos229 = 0, $vinfos240 = 0, $vinfos251 = 0, $vinfos262 = 0, $vinfos272 = 0, $vinfos282 = 0, $vinfos43 = 0, $vinfos54 = 0, $vinfos65 = 0, $vinfos76 = 0, $vinfos87 = 0, $vinfos98 = 0, $x255 = 0, $x265 = 0, $x275 = 0, $x276 = 0;
 var $x347 = 0, $x348 = 0, $x415 = 0, $x416 = 0, $x422 = 0, $x423 = 0, $x424 = 0, $x436 = 0, $x437 = 0, $x448 = 0, $x449 = 0, $x460 = 0, $x461 = 0, $x532 = 0, $x533 = 0, $x600 = 0, $x601 = 0, $x607 = 0, $x608 = 0, $x609 = 0;
 var $x621 = 0, $x622 = 0, $x633 = 0, $x634 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1184|0;
 $j32array = sp + 576|0;
 $cj32array = sp + 560|0;
 $sj32array = sp + 544|0;
 $j32valid = sp + 1172|0;
 $j31array = sp + 528|0;
 $cj31array = sp + 512|0;
 $sj31array = sp + 496|0;
 $j31valid = sp + 1170|0;
 $x255 = sp + 480|0;
 $vinfos = sp + 1156|0;
 $vfree = sp + 1144|0;
 $j31array5 = sp + 464|0;
 $cj31array6 = sp + 448|0;
 $sj31array7 = sp + 432|0;
 $j31valid8 = sp + 1168|0;
 $x265 = sp + 416|0;
 $vinfos20 = sp + 1132|0;
 $vfree21 = sp + 1120|0;
 $x275 = sp + 400|0;
 $x276 = sp + 384|0;
 $x347 = sp + 368|0;
 $x348 = sp + 352|0;
 $vinfos43 = sp + 1108|0;
 $vfree44 = sp + 1096|0;
 $vinfos54 = sp + 1084|0;
 $vfree55 = sp + 1072|0;
 $vinfos65 = sp + 1060|0;
 $vfree66 = sp + 1048|0;
 $vinfos76 = sp + 1036|0;
 $vfree77 = sp + 1024|0;
 $vinfos87 = sp + 1012|0;
 $vfree88 = sp + 1000|0;
 $vinfos98 = sp + 988|0;
 $vfree99 = sp + 976|0;
 $vinfos109 = sp + 964|0;
 $vfree110 = sp + 952|0;
 $x415 = sp + 336|0;
 $x416 = sp + 320|0;
 $vinfos120 = sp + 940|0;
 $vfree121 = sp + 928|0;
 $x422 = sp + 304|0;
 $x423 = sp + 288|0;
 $x424 = sp + 272|0;
 $vinfos131 = sp + 916|0;
 $vfree132 = sp + 904|0;
 $x436 = sp + 256|0;
 $x437 = sp + 240|0;
 $vinfos141 = sp + 892|0;
 $vfree142 = sp + 880|0;
 $x448 = sp + 224|0;
 $x449 = sp + 208|0;
 $vinfos151 = sp + 868|0;
 $vfree152 = sp + 856|0;
 $x460 = sp + 192|0;
 $x461 = sp + 176|0;
 $x532 = sp + 160|0;
 $x533 = sp + 144|0;
 $vinfos174 = sp + 844|0;
 $vfree175 = sp + 832|0;
 $vinfos185 = sp + 820|0;
 $vfree186 = sp + 808|0;
 $vinfos196 = sp + 796|0;
 $vfree197 = sp + 784|0;
 $vinfos207 = sp + 772|0;
 $vfree208 = sp + 760|0;
 $vinfos218 = sp + 748|0;
 $vfree219 = sp + 736|0;
 $vinfos229 = sp + 724|0;
 $vfree230 = sp + 712|0;
 $vinfos240 = sp + 700|0;
 $vfree241 = sp + 688|0;
 $x600 = sp + 128|0;
 $x601 = sp + 112|0;
 $vinfos251 = sp + 676|0;
 $vfree252 = sp + 664|0;
 $x607 = sp + 96|0;
 $x608 = sp + 80|0;
 $x609 = sp + 64|0;
 $vinfos262 = sp + 652|0;
 $vfree263 = sp + 640|0;
 $x621 = sp + 48|0;
 $x622 = sp + 32|0;
 $vinfos272 = sp + 628|0;
 $vfree273 = sp + 616|0;
 $x633 = sp + 16|0;
 $x634 = sp;
 $vinfos282 = sp + 604|0;
 $vfree283 = sp + 592|0;
 $0 = ((($this)) + 16|0);
 $1 = ((($this)) + 256|0);
 $2 = ((($this)) + 8|0);
 $3 = ((($this)) + 48|0);
 $4 = ((($this)) + 88|0);
 $5 = ((($this)) + 96|0);
 $6 = ((($this)) + 248|0);
 $7 = ((($this)) + 56|0);
 $8 = ((($this)) + 424|0);
 $9 = ((($this)) + 280|0);
 $10 = ((($this)) + 352|0);
 $11 = ((($this)) + 272|0);
 $12 = ((($this)) + 376|0);
 $13 = ((($this)) + 448|0);
 $14 = ((($this)) + 304|0);
 $15 = ((($this)) + 296|0);
 $16 = ((($this)) + 472|0);
 $17 = ((($this)) + 400|0);
 $18 = ((($this)) + 328|0);
 $19 = ((($this)) + 320|0);
 $20 = ((($this)) + 344|0);
 $21 = ((($this)) + 368|0);
 $22 = ((($this)) + 392|0);
 $23 = ((($this)) + 416|0);
 $24 = ((($this)) + 440|0);
 $25 = ((($this)) + 464|0);
 $26 = ((($this)) + 582|0);
 $27 = ((($this)) + 580|0);
 $28 = ((($this)) + 581|0);
 $29 = ((($this)) + 160|0);
 $30 = ((($this)) + 168|0);
 $31 = ((($this)) + 176|0);
 $32 = ((($this)) + 579|0);
 $33 = ((($x255)) + 8|0);
 $34 = ((($j31array)) + 8|0);
 $35 = ((($sj31array)) + 8|0);
 $36 = ((($cj31array)) + 8|0);
 $37 = ((($j31valid)) + 1|0);
 $38 = ((($this)) + 577|0);
 $39 = ((($this)) + 578|0);
 $40 = ((($this)) + 120|0);
 $41 = ((($this)) + 128|0);
 $42 = ((($this)) + 136|0);
 $43 = ((($this)) + 585|0);
 $44 = ((($this)) + 583|0);
 $45 = ((($this)) + 584|0);
 $46 = ((($this)) + 200|0);
 $47 = ((($this)) + 208|0);
 $48 = ((($this)) + 216|0);
 $49 = ((($this)) + 568|0);
 $50 = ((($this)) + 569|0);
 $51 = ((($this)) + 570|0);
 $52 = ((($this)) + 40|0);
 $53 = ((($this)) + 571|0);
 $54 = ((($this)) + 572|0);
 $55 = ((($this)) + 573|0);
 $56 = ((($this)) + 240|0);
 $57 = ((($this)) + 586|0);
 $58 = ((($this)) + 587|0);
 $59 = ((($this)) + 588|0);
 $60 = ((($this)) + 80|0);
 $61 = ((($this)) + 574|0);
 $62 = ((($this)) + 575|0);
 $63 = ((($this)) + 576|0);
 $64 = ((($this)) + 579|0);
 $65 = ((($x265)) + 8|0);
 $66 = ((($j31array5)) + 8|0);
 $67 = ((($sj31array7)) + 8|0);
 $68 = ((($cj31array6)) + 8|0);
 $69 = ((($j31valid8)) + 1|0);
 $70 = ((($this)) + 577|0);
 $71 = ((($this)) + 578|0);
 $72 = ((($this)) + 120|0);
 $73 = ((($this)) + 128|0);
 $74 = ((($this)) + 136|0);
 $75 = ((($this)) + 585|0);
 $76 = ((($this)) + 583|0);
 $77 = ((($this)) + 584|0);
 $78 = ((($this)) + 200|0);
 $79 = ((($this)) + 208|0);
 $80 = ((($this)) + 216|0);
 $81 = ((($this)) + 568|0);
 $82 = ((($this)) + 569|0);
 $83 = ((($this)) + 570|0);
 $84 = ((($this)) + 40|0);
 $85 = ((($this)) + 571|0);
 $86 = ((($this)) + 572|0);
 $87 = ((($this)) + 573|0);
 $88 = ((($this)) + 240|0);
 $89 = ((($this)) + 586|0);
 $90 = ((($this)) + 587|0);
 $91 = ((($this)) + 588|0);
 $92 = ((($this)) + 80|0);
 $93 = ((($this)) + 574|0);
 $94 = ((($this)) + 575|0);
 $95 = ((($this)) + 576|0);
 $96 = ((($this)) + 579|0);
 $97 = ((($x275)) + 8|0);
 $98 = ((($x276)) + 8|0);
 $99 = ((($this)) + 577|0);
 $100 = ((($this)) + 578|0);
 $101 = ((($this)) + 120|0);
 $102 = ((($this)) + 128|0);
 $103 = ((($this)) + 136|0);
 $104 = ((($this)) + 585|0);
 $105 = ((($x347)) + 8|0);
 $106 = ((($x348)) + 8|0);
 $107 = ((($this)) + 583|0);
 $108 = ((($this)) + 584|0);
 $109 = ((($this)) + 200|0);
 $110 = ((($this)) + 208|0);
 $111 = ((($this)) + 216|0);
 $112 = ((($this)) + 568|0);
 $113 = ((($this)) + 569|0);
 $114 = ((($this)) + 570|0);
 $115 = ((($this)) + 40|0);
 $116 = ((($this)) + 571|0);
 $117 = ((($this)) + 572|0);
 $118 = ((($this)) + 573|0);
 $119 = ((($this)) + 240|0);
 $120 = ((($this)) + 586|0);
 $121 = ((($this)) + 587|0);
 $122 = ((($this)) + 588|0);
 $123 = ((($this)) + 80|0);
 $124 = ((($this)) + 574|0);
 $125 = ((($this)) + 575|0);
 $126 = ((($this)) + 576|0);
 $127 = ((($this)) + 585|0);
 $128 = ((($this)) + 583|0);
 $129 = ((($this)) + 584|0);
 $130 = ((($this)) + 200|0);
 $131 = ((($this)) + 208|0);
 $132 = ((($this)) + 216|0);
 $133 = ((($this)) + 568|0);
 $134 = ((($this)) + 569|0);
 $135 = ((($this)) + 570|0);
 $136 = ((($this)) + 40|0);
 $137 = ((($this)) + 571|0);
 $138 = ((($this)) + 572|0);
 $139 = ((($this)) + 573|0);
 $140 = ((($this)) + 240|0);
 $141 = ((($this)) + 586|0);
 $142 = ((($this)) + 587|0);
 $143 = ((($this)) + 588|0);
 $144 = ((($this)) + 80|0);
 $145 = ((($this)) + 574|0);
 $146 = ((($this)) + 575|0);
 $147 = ((($this)) + 576|0);
 $148 = ((($this)) + 585|0);
 $149 = ((($this)) + 583|0);
 $150 = ((($this)) + 584|0);
 $151 = ((($this)) + 200|0);
 $152 = ((($this)) + 208|0);
 $153 = ((($this)) + 216|0);
 $154 = ((($this)) + 568|0);
 $155 = ((($this)) + 569|0);
 $156 = ((($this)) + 570|0);
 $157 = ((($this)) + 40|0);
 $158 = ((($this)) + 571|0);
 $159 = ((($this)) + 572|0);
 $160 = ((($this)) + 573|0);
 $161 = ((($this)) + 240|0);
 $162 = ((($this)) + 586|0);
 $163 = ((($this)) + 587|0);
 $164 = ((($this)) + 588|0);
 $165 = ((($this)) + 80|0);
 $166 = ((($this)) + 574|0);
 $167 = ((($this)) + 575|0);
 $168 = ((($this)) + 576|0);
 $169 = ((($this)) + 585|0);
 $170 = ((($this)) + 583|0);
 $171 = ((($this)) + 584|0);
 $172 = ((($this)) + 200|0);
 $173 = ((($this)) + 208|0);
 $174 = ((($this)) + 216|0);
 $175 = ((($this)) + 568|0);
 $176 = ((($this)) + 569|0);
 $177 = ((($this)) + 570|0);
 $178 = ((($this)) + 40|0);
 $179 = ((($this)) + 571|0);
 $180 = ((($this)) + 572|0);
 $181 = ((($this)) + 573|0);
 $182 = ((($this)) + 240|0);
 $183 = ((($this)) + 586|0);
 $184 = ((($this)) + 587|0);
 $185 = ((($this)) + 588|0);
 $186 = ((($this)) + 80|0);
 $187 = ((($this)) + 574|0);
 $188 = ((($this)) + 575|0);
 $189 = ((($this)) + 576|0);
 $190 = ((($this)) + 585|0);
 $191 = ((($this)) + 583|0);
 $192 = ((($this)) + 584|0);
 $193 = ((($this)) + 200|0);
 $194 = ((($this)) + 208|0);
 $195 = ((($this)) + 216|0);
 $196 = ((($this)) + 568|0);
 $197 = ((($this)) + 569|0);
 $198 = ((($this)) + 570|0);
 $199 = ((($this)) + 40|0);
 $200 = ((($this)) + 571|0);
 $201 = ((($this)) + 572|0);
 $202 = ((($this)) + 573|0);
 $203 = ((($this)) + 240|0);
 $204 = ((($this)) + 586|0);
 $205 = ((($this)) + 587|0);
 $206 = ((($this)) + 588|0);
 $207 = ((($this)) + 80|0);
 $208 = ((($this)) + 574|0);
 $209 = ((($this)) + 575|0);
 $210 = ((($this)) + 576|0);
 $211 = ((($this)) + 585|0);
 $212 = ((($this)) + 583|0);
 $213 = ((($this)) + 584|0);
 $214 = ((($this)) + 200|0);
 $215 = ((($this)) + 208|0);
 $216 = ((($this)) + 216|0);
 $217 = ((($this)) + 568|0);
 $218 = ((($this)) + 569|0);
 $219 = ((($this)) + 570|0);
 $220 = ((($this)) + 40|0);
 $221 = ((($this)) + 571|0);
 $222 = ((($this)) + 572|0);
 $223 = ((($this)) + 573|0);
 $224 = ((($this)) + 240|0);
 $225 = ((($this)) + 586|0);
 $226 = ((($this)) + 587|0);
 $227 = ((($this)) + 588|0);
 $228 = ((($this)) + 80|0);
 $229 = ((($this)) + 574|0);
 $230 = ((($this)) + 575|0);
 $231 = ((($this)) + 576|0);
 $232 = ((($this)) + 585|0);
 $233 = ((($this)) + 583|0);
 $234 = ((($this)) + 584|0);
 $235 = ((($this)) + 200|0);
 $236 = ((($this)) + 208|0);
 $237 = ((($this)) + 216|0);
 $238 = ((($this)) + 568|0);
 $239 = ((($this)) + 569|0);
 $240 = ((($this)) + 570|0);
 $241 = ((($this)) + 40|0);
 $242 = ((($this)) + 571|0);
 $243 = ((($this)) + 572|0);
 $244 = ((($this)) + 573|0);
 $245 = ((($this)) + 240|0);
 $246 = ((($this)) + 586|0);
 $247 = ((($this)) + 587|0);
 $248 = ((($this)) + 588|0);
 $249 = ((($this)) + 80|0);
 $250 = ((($this)) + 574|0);
 $251 = ((($this)) + 575|0);
 $252 = ((($this)) + 576|0);
 $253 = ((($this)) + 585|0);
 $254 = ((($x415)) + 8|0);
 $255 = ((($x416)) + 8|0);
 $256 = ((($this)) + 583|0);
 $257 = ((($this)) + 584|0);
 $258 = ((($this)) + 200|0);
 $259 = ((($this)) + 208|0);
 $260 = ((($this)) + 216|0);
 $261 = ((($this)) + 568|0);
 $262 = ((($this)) + 569|0);
 $263 = ((($this)) + 570|0);
 $264 = ((($this)) + 40|0);
 $265 = ((($this)) + 571|0);
 $266 = ((($this)) + 572|0);
 $267 = ((($this)) + 573|0);
 $268 = ((($this)) + 240|0);
 $269 = ((($this)) + 586|0);
 $270 = ((($this)) + 587|0);
 $271 = ((($this)) + 588|0);
 $272 = ((($this)) + 80|0);
 $273 = ((($this)) + 574|0);
 $274 = ((($this)) + 575|0);
 $275 = ((($this)) + 576|0);
 $276 = ((($this)) + 585|0);
 $277 = ((($x422)) + 8|0);
 $278 = ((($x423)) + 8|0);
 $279 = ((($x424)) + 8|0);
 $280 = ((($this)) + 583|0);
 $281 = ((($this)) + 584|0);
 $282 = ((($this)) + 200|0);
 $283 = ((($this)) + 208|0);
 $284 = ((($this)) + 216|0);
 $285 = ((($this)) + 568|0);
 $286 = ((($this)) + 569|0);
 $287 = ((($this)) + 570|0);
 $288 = ((($this)) + 40|0);
 $289 = ((($this)) + 571|0);
 $290 = ((($this)) + 572|0);
 $291 = ((($this)) + 573|0);
 $292 = ((($this)) + 240|0);
 $293 = ((($this)) + 586|0);
 $294 = ((($this)) + 587|0);
 $295 = ((($this)) + 588|0);
 $296 = ((($this)) + 80|0);
 $297 = ((($this)) + 574|0);
 $298 = ((($this)) + 575|0);
 $299 = ((($this)) + 576|0);
 $300 = ((($this)) + 585|0);
 $301 = ((($x436)) + 8|0);
 $302 = ((($x437)) + 8|0);
 $303 = ((($this)) + 583|0);
 $304 = ((($this)) + 584|0);
 $305 = ((($this)) + 200|0);
 $306 = ((($this)) + 208|0);
 $307 = ((($this)) + 216|0);
 $308 = ((($this)) + 568|0);
 $309 = ((($this)) + 569|0);
 $310 = ((($this)) + 570|0);
 $311 = ((($this)) + 40|0);
 $312 = ((($this)) + 571|0);
 $313 = ((($this)) + 572|0);
 $314 = ((($this)) + 573|0);
 $315 = ((($this)) + 240|0);
 $316 = ((($this)) + 586|0);
 $317 = ((($this)) + 587|0);
 $318 = ((($this)) + 588|0);
 $319 = ((($this)) + 80|0);
 $320 = ((($this)) + 574|0);
 $321 = ((($this)) + 575|0);
 $322 = ((($this)) + 576|0);
 $323 = ((($this)) + 585|0);
 $324 = ((($x448)) + 8|0);
 $325 = ((($x449)) + 8|0);
 $326 = ((($this)) + 583|0);
 $327 = ((($this)) + 584|0);
 $328 = ((($this)) + 200|0);
 $329 = ((($this)) + 208|0);
 $330 = ((($this)) + 216|0);
 $331 = ((($this)) + 568|0);
 $332 = ((($this)) + 569|0);
 $333 = ((($this)) + 570|0);
 $334 = ((($this)) + 40|0);
 $335 = ((($this)) + 571|0);
 $336 = ((($this)) + 572|0);
 $337 = ((($this)) + 573|0);
 $338 = ((($this)) + 240|0);
 $339 = ((($this)) + 586|0);
 $340 = ((($this)) + 587|0);
 $341 = ((($this)) + 588|0);
 $342 = ((($this)) + 80|0);
 $343 = ((($this)) + 574|0);
 $344 = ((($this)) + 575|0);
 $345 = ((($this)) + 576|0);
 $346 = ((($this)) + 579|0);
 $347 = ((($x460)) + 8|0);
 $348 = ((($x461)) + 8|0);
 $349 = ((($this)) + 577|0);
 $350 = ((($this)) + 578|0);
 $351 = ((($this)) + 120|0);
 $352 = ((($this)) + 128|0);
 $353 = ((($this)) + 136|0);
 $354 = ((($this)) + 585|0);
 $355 = ((($x532)) + 8|0);
 $356 = ((($x533)) + 8|0);
 $357 = ((($this)) + 583|0);
 $358 = ((($this)) + 584|0);
 $359 = ((($this)) + 200|0);
 $360 = ((($this)) + 208|0);
 $361 = ((($this)) + 216|0);
 $362 = ((($this)) + 568|0);
 $363 = ((($this)) + 569|0);
 $364 = ((($this)) + 570|0);
 $365 = ((($this)) + 40|0);
 $366 = ((($this)) + 571|0);
 $367 = ((($this)) + 572|0);
 $368 = ((($this)) + 573|0);
 $369 = ((($this)) + 240|0);
 $370 = ((($this)) + 586|0);
 $371 = ((($this)) + 587|0);
 $372 = ((($this)) + 588|0);
 $373 = ((($this)) + 80|0);
 $374 = ((($this)) + 574|0);
 $375 = ((($this)) + 575|0);
 $376 = ((($this)) + 576|0);
 $377 = ((($this)) + 585|0);
 $378 = ((($this)) + 583|0);
 $379 = ((($this)) + 584|0);
 $380 = ((($this)) + 200|0);
 $381 = ((($this)) + 208|0);
 $382 = ((($this)) + 216|0);
 $383 = ((($this)) + 568|0);
 $384 = ((($this)) + 569|0);
 $385 = ((($this)) + 570|0);
 $386 = ((($this)) + 40|0);
 $387 = ((($this)) + 571|0);
 $388 = ((($this)) + 572|0);
 $389 = ((($this)) + 573|0);
 $390 = ((($this)) + 240|0);
 $391 = ((($this)) + 586|0);
 $392 = ((($this)) + 587|0);
 $393 = ((($this)) + 588|0);
 $394 = ((($this)) + 80|0);
 $395 = ((($this)) + 574|0);
 $396 = ((($this)) + 575|0);
 $397 = ((($this)) + 576|0);
 $398 = ((($this)) + 585|0);
 $399 = ((($this)) + 583|0);
 $400 = ((($this)) + 584|0);
 $401 = ((($this)) + 200|0);
 $402 = ((($this)) + 208|0);
 $403 = ((($this)) + 216|0);
 $404 = ((($this)) + 568|0);
 $405 = ((($this)) + 569|0);
 $406 = ((($this)) + 570|0);
 $407 = ((($this)) + 40|0);
 $408 = ((($this)) + 571|0);
 $409 = ((($this)) + 572|0);
 $410 = ((($this)) + 573|0);
 $411 = ((($this)) + 240|0);
 $412 = ((($this)) + 586|0);
 $413 = ((($this)) + 587|0);
 $414 = ((($this)) + 588|0);
 $415 = ((($this)) + 80|0);
 $416 = ((($this)) + 574|0);
 $417 = ((($this)) + 575|0);
 $418 = ((($this)) + 576|0);
 $419 = ((($this)) + 585|0);
 $420 = ((($this)) + 583|0);
 $421 = ((($this)) + 584|0);
 $422 = ((($this)) + 200|0);
 $423 = ((($this)) + 208|0);
 $424 = ((($this)) + 216|0);
 $425 = ((($this)) + 568|0);
 $426 = ((($this)) + 569|0);
 $427 = ((($this)) + 570|0);
 $428 = ((($this)) + 40|0);
 $429 = ((($this)) + 571|0);
 $430 = ((($this)) + 572|0);
 $431 = ((($this)) + 573|0);
 $432 = ((($this)) + 240|0);
 $433 = ((($this)) + 586|0);
 $434 = ((($this)) + 587|0);
 $435 = ((($this)) + 588|0);
 $436 = ((($this)) + 80|0);
 $437 = ((($this)) + 574|0);
 $438 = ((($this)) + 575|0);
 $439 = ((($this)) + 576|0);
 $440 = ((($this)) + 585|0);
 $441 = ((($this)) + 583|0);
 $442 = ((($this)) + 584|0);
 $443 = ((($this)) + 200|0);
 $444 = ((($this)) + 208|0);
 $445 = ((($this)) + 216|0);
 $446 = ((($this)) + 568|0);
 $447 = ((($this)) + 569|0);
 $448 = ((($this)) + 570|0);
 $449 = ((($this)) + 40|0);
 $450 = ((($this)) + 571|0);
 $451 = ((($this)) + 572|0);
 $452 = ((($this)) + 573|0);
 $453 = ((($this)) + 240|0);
 $454 = ((($this)) + 586|0);
 $455 = ((($this)) + 587|0);
 $456 = ((($this)) + 588|0);
 $457 = ((($this)) + 80|0);
 $458 = ((($this)) + 574|0);
 $459 = ((($this)) + 575|0);
 $460 = ((($this)) + 576|0);
 $461 = ((($this)) + 585|0);
 $462 = ((($this)) + 583|0);
 $463 = ((($this)) + 584|0);
 $464 = ((($this)) + 200|0);
 $465 = ((($this)) + 208|0);
 $466 = ((($this)) + 216|0);
 $467 = ((($this)) + 568|0);
 $468 = ((($this)) + 569|0);
 $469 = ((($this)) + 570|0);
 $470 = ((($this)) + 40|0);
 $471 = ((($this)) + 571|0);
 $472 = ((($this)) + 572|0);
 $473 = ((($this)) + 573|0);
 $474 = ((($this)) + 240|0);
 $475 = ((($this)) + 586|0);
 $476 = ((($this)) + 587|0);
 $477 = ((($this)) + 588|0);
 $478 = ((($this)) + 80|0);
 $479 = ((($this)) + 574|0);
 $480 = ((($this)) + 575|0);
 $481 = ((($this)) + 576|0);
 $482 = ((($this)) + 585|0);
 $483 = ((($this)) + 583|0);
 $484 = ((($this)) + 584|0);
 $485 = ((($this)) + 200|0);
 $486 = ((($this)) + 208|0);
 $487 = ((($this)) + 216|0);
 $488 = ((($this)) + 568|0);
 $489 = ((($this)) + 569|0);
 $490 = ((($this)) + 570|0);
 $491 = ((($this)) + 40|0);
 $492 = ((($this)) + 571|0);
 $493 = ((($this)) + 572|0);
 $494 = ((($this)) + 573|0);
 $495 = ((($this)) + 240|0);
 $496 = ((($this)) + 586|0);
 $497 = ((($this)) + 587|0);
 $498 = ((($this)) + 588|0);
 $499 = ((($this)) + 80|0);
 $500 = ((($this)) + 574|0);
 $501 = ((($this)) + 575|0);
 $502 = ((($this)) + 576|0);
 $503 = ((($this)) + 585|0);
 $504 = ((($x600)) + 8|0);
 $505 = ((($x601)) + 8|0);
 $506 = ((($this)) + 583|0);
 $507 = ((($this)) + 584|0);
 $508 = ((($this)) + 200|0);
 $509 = ((($this)) + 208|0);
 $510 = ((($this)) + 216|0);
 $511 = ((($this)) + 568|0);
 $512 = ((($this)) + 569|0);
 $513 = ((($this)) + 570|0);
 $514 = ((($this)) + 40|0);
 $515 = ((($this)) + 571|0);
 $516 = ((($this)) + 572|0);
 $517 = ((($this)) + 573|0);
 $518 = ((($this)) + 240|0);
 $519 = ((($this)) + 586|0);
 $520 = ((($this)) + 587|0);
 $521 = ((($this)) + 588|0);
 $522 = ((($this)) + 80|0);
 $523 = ((($this)) + 574|0);
 $524 = ((($this)) + 575|0);
 $525 = ((($this)) + 576|0);
 $526 = ((($this)) + 585|0);
 $527 = ((($x607)) + 8|0);
 $528 = ((($x608)) + 8|0);
 $529 = ((($x609)) + 8|0);
 $530 = ((($this)) + 583|0);
 $531 = ((($this)) + 584|0);
 $532 = ((($this)) + 200|0);
 $533 = ((($this)) + 208|0);
 $534 = ((($this)) + 216|0);
 $535 = ((($this)) + 568|0);
 $536 = ((($this)) + 569|0);
 $537 = ((($this)) + 570|0);
 $538 = ((($this)) + 40|0);
 $539 = ((($this)) + 571|0);
 $540 = ((($this)) + 572|0);
 $541 = ((($this)) + 573|0);
 $542 = ((($this)) + 240|0);
 $543 = ((($this)) + 586|0);
 $544 = ((($this)) + 587|0);
 $545 = ((($this)) + 588|0);
 $546 = ((($this)) + 80|0);
 $547 = ((($this)) + 574|0);
 $548 = ((($this)) + 575|0);
 $549 = ((($this)) + 576|0);
 $550 = ((($this)) + 585|0);
 $551 = ((($x621)) + 8|0);
 $552 = ((($x622)) + 8|0);
 $553 = ((($this)) + 583|0);
 $554 = ((($this)) + 584|0);
 $555 = ((($this)) + 200|0);
 $556 = ((($this)) + 208|0);
 $557 = ((($this)) + 216|0);
 $558 = ((($this)) + 568|0);
 $559 = ((($this)) + 569|0);
 $560 = ((($this)) + 570|0);
 $561 = ((($this)) + 40|0);
 $562 = ((($this)) + 571|0);
 $563 = ((($this)) + 572|0);
 $564 = ((($this)) + 573|0);
 $565 = ((($this)) + 240|0);
 $566 = ((($this)) + 586|0);
 $567 = ((($this)) + 587|0);
 $568 = ((($this)) + 588|0);
 $569 = ((($this)) + 80|0);
 $570 = ((($this)) + 574|0);
 $571 = ((($this)) + 575|0);
 $572 = ((($this)) + 576|0);
 $573 = ((($this)) + 585|0);
 $574 = ((($x633)) + 8|0);
 $575 = ((($x634)) + 8|0);
 $576 = ((($this)) + 583|0);
 $577 = ((($this)) + 584|0);
 $578 = ((($this)) + 200|0);
 $579 = ((($this)) + 208|0);
 $580 = ((($this)) + 216|0);
 $581 = ((($this)) + 568|0);
 $582 = ((($this)) + 569|0);
 $583 = ((($this)) + 570|0);
 $584 = ((($this)) + 40|0);
 $585 = ((($this)) + 571|0);
 $586 = ((($this)) + 572|0);
 $587 = ((($this)) + 573|0);
 $588 = ((($this)) + 240|0);
 $589 = ((($this)) + 586|0);
 $590 = ((($this)) + 587|0);
 $591 = ((($this)) + 588|0);
 $592 = ((($this)) + 80|0);
 $593 = ((($this)) + 574|0);
 $594 = ((($this)) + 575|0);
 $595 = ((($this)) + 576|0);
 $596 = +HEAPF64[$0>>3];
 $597 = +HEAPF64[$1>>3];
 $598 = $596 * $597;
 $599 = +HEAPF64[$2>>3];
 $600 = $597 * $599;
 $601 = +HEAPF64[$3>>3];
 $602 = $597 * $601;
 $603 = +HEAPF64[$4>>3];
 $604 = $601 * $603;
 $605 = +HEAPF64[$5>>3];
 $606 = +HEAPF64[$6>>3];
 $607 = $605 * $606;
 $608 = +HEAPF64[$7>>3];
 $609 = $603 * $608;
 $610 = $604 * $606;
 $611 = $605 * $608;
 $612 = $611 - $610;
 $613 = $596 * $606;
 $614 = $600 * $608;
 $615 = $614 - $613;
 $616 = $598 * $608;
 $617 = $599 * $606;
 $618 = $617 + $616;
 $619 = $608 * $607;
 $620 = $604 - $619;
 $621 = $599 * $620;
 $622 = -$603;
 $623 = $608 * $622;
 $624 = $606 * $623;
 $625 = -$601;
 $626 = $605 * $625;
 $627 = $626 + $624;
 $628 = $607 * $625;
 $629 = $628 - $609;
 $630 = $599 * $627;
 $631 = $600 * $605;
 $632 = $596 * $620;
 $633 = $631 + $632;
 $634 = $598 * $605;
 $635 = $621 - $634;
 $636 = $600 * $603;
 $637 = $596 * $627;
 $638 = $636 + $637;
 $639 = $598 * $622;
 $640 = $639 + $630;
 $641 = +HEAPF64[$8>>3];
 $642 = $641 * $612;
 $643 = +HEAPF64[$9>>3];
 $644 = $643 * $640;
 $645 = $642 + $644;
 $646 = +HEAPF64[$10>>3];
 $647 = $646 * $638;
 $648 = $647 + $645;
 HEAPF64[$11>>3] = $648;
 $649 = +HEAPF64[$12>>3];
 $650 = $649 * $638;
 $651 = +HEAPF64[$13>>3];
 $652 = $612 * $651;
 $653 = $650 + $652;
 $654 = +HEAPF64[$14>>3];
 $655 = $640 * $654;
 $656 = $653 + $655;
 HEAPF64[$15>>3] = $656;
 $657 = +HEAPF64[$16>>3];
 $658 = $612 * $657;
 $659 = +HEAPF64[$17>>3];
 $660 = $638 * $659;
 $661 = $658 + $660;
 $662 = +HEAPF64[$18>>3];
 $663 = $640 * $662;
 $664 = $661 + $663;
 HEAPF64[$19>>3] = $664;
 $665 = +HEAPF64[$8>>3];
 $666 = $602 * $665;
 $667 = +HEAPF64[$9>>3];
 $668 = $615 * $667;
 $669 = $666 + $668;
 $670 = +HEAPF64[$10>>3];
 $671 = $618 * $670;
 $672 = $669 + $671;
 HEAPF64[$20>>3] = $672;
 $673 = +HEAPF64[$12>>3];
 $674 = $618 * $673;
 $675 = +HEAPF64[$14>>3];
 $676 = $615 * $675;
 $677 = $674 + $676;
 $678 = +HEAPF64[$13>>3];
 $679 = $602 * $678;
 $680 = $677 + $679;
 HEAPF64[$21>>3] = $680;
 $681 = +HEAPF64[$16>>3];
 $682 = $602 * $681;
 $683 = +HEAPF64[$17>>3];
 $684 = $618 * $683;
 $685 = $682 + $684;
 $686 = +HEAPF64[$18>>3];
 $687 = $615 * $686;
 $688 = $685 + $687;
 HEAPF64[$22>>3] = $688;
 $689 = +HEAPF64[$8>>3];
 $690 = $629 * $689;
 $691 = +HEAPF64[$9>>3];
 $692 = $635 * $691;
 $693 = $690 + $692;
 $694 = +HEAPF64[$10>>3];
 $695 = $633 * $694;
 $696 = $693 + $695;
 HEAPF64[$23>>3] = $696;
 $697 = +HEAPF64[$12>>3];
 $698 = $633 * $697;
 $699 = +HEAPF64[$13>>3];
 $700 = $629 * $699;
 $701 = $698 + $700;
 $702 = +HEAPF64[$14>>3];
 $703 = $635 * $702;
 $704 = $701 + $703;
 HEAPF64[$24>>3] = $704;
 $705 = +HEAPF64[$16>>3];
 $706 = $629 * $705;
 $707 = +HEAPF64[$18>>3];
 $708 = $635 * $707;
 $709 = $706 + $708;
 $710 = +HEAPF64[$17>>3];
 $711 = $633 * $710;
 $712 = $709 + $711;
 HEAPF64[$25>>3] = $712;
 HEAP16[$j32valid>>1] = 0;
 HEAP8[$26>>0] = 2;
 $713 = +HEAPF64[$25>>3];
 HEAPF64[$cj32array>>3] = $713;
 $714 = !($713 >= -1.0000020000000001);
 $715 = !($713 <= 1.0000020000000001);
 $or$cond = $714 | $715;
 if ($or$cond) {
  $728 = (__Z13__DOUBLE_BITSd($713)|0);
  $729 = tempRet0;
  $730 = $729 & 2147483647;
  $731 = ($730>>>0)>(2146435072);
  $732 = ($728>>>0)>(0);
  $733 = ($730|0)==(2146435072);
  $734 = $733 & $732;
  $735 = $731 | $734;
  if ($735) {
   HEAP8[$j32valid>>0] = 1;
   HEAPF64[$cj32array>>3] = 1.0;
   HEAPF64[$sj32array>>3] = 0.0;
   HEAPF64[$j32array>>3] = 0.0;
   $ij32$0369 = 0;
  } else {
   $ij32$0369 = 0;
  }
 } else {
  $716 = ((($sj32array)) + 8|0);
  $717 = ((($j32array)) + 8|0);
  $718 = ((($cj32array)) + 8|0);
  $719 = ((($j32valid)) + 1|0);
  HEAP8[$719>>0] = 1;
  HEAP8[$j32valid>>0] = 1;
  $720 = +HEAPF64[$cj32array>>3];
  $721 = (+__Z6IKacosd($720));
  HEAPF64[$j32array>>3] = $721;
  $722 = (+__Z5IKsind($721));
  HEAPF64[$sj32array>>3] = $722;
  $723 = +HEAPF64[$cj32array>>3];
  HEAPF64[$718>>3] = $723;
  $724 = +HEAPF64[$j32array>>3];
  $725 = -$724;
  HEAPF64[$717>>3] = $725;
  $726 = +HEAPF64[$sj32array>>3];
  $727 = -$726;
  HEAPF64[$716>>3] = $727;
  $ij32$0369 = 0;
 }
 while(1) {
  $736 = (($j32valid) + ($ij32$0369)|0);
  $737 = HEAP8[$736>>0]|0;
  $738 = ($737<<24>>24)==(0);
  L7: do {
   if (!($738)) {
    $739 = $ij32$0369&255;
    HEAP8[$27>>0] = $739;
    HEAP8[$28>>0] = -1;
    $iij32$0255 = (($ij32$0369) + 1)|0;
    $740 = ($iij32$0255|0)<(2);
    if ($740) {
     $741 = (($sj32array) + ($ij32$0369<<3)|0);
     $742 = (($j32valid) + ($iij32$0255)|0);
     $743 = HEAP8[$742>>0]|0;
     $744 = ($743<<24>>24)==(0);
     if (!($744)) {
      $745 = (($cj32array) + ($ij32$0369<<3)|0);
      $746 = +HEAPF64[$745>>3];
      $747 = (($cj32array) + ($iij32$0255<<3)|0);
      $748 = +HEAPF64[$747>>3];
      $749 = $746 - $748;
      $750 = (+__Z5IKabsd($749));
      $751 = $750 < 9.9999999999999995E-7;
      if ($751) {
       $752 = +HEAPF64[$741>>3];
       $753 = (($sj32array) + ($iij32$0255<<3)|0);
       $754 = +HEAPF64[$753>>3];
       $755 = $752 - $754;
       $756 = (+__Z5IKabsd($755));
       $757 = $756 < 9.9999999999999995E-7;
       if ($757) {
        HEAP8[$742>>0] = 0;
        $758 = $iij32$0255&255;
        HEAP8[$28>>0] = $758;
       }
      }
     }
    }
    $759 = (($j32array) + ($ij32$0369<<3)|0);
    $760 = +HEAPF64[$759>>3];
    HEAPF64[$29>>3] = $760;
    $761 = (($cj32array) + ($ij32$0369<<3)|0);
    $762 = +HEAPF64[$761>>3];
    HEAPF64[$30>>3] = $762;
    $763 = (($sj32array) + ($ij32$0369<<3)|0);
    $764 = +HEAPF64[$763>>3];
    HEAPF64[$31>>3] = $764;
    $765 = +HEAPF64[$0>>3];
    $766 = +HEAPF64[$1>>3];
    $767 = $765 * $766;
    $768 = +HEAPF64[$2>>3];
    $769 = $766 * $768;
    $770 = +HEAPF64[$3>>3];
    $771 = $766 * $770;
    $772 = +HEAPF64[$4>>3];
    $773 = $770 * $772;
    $774 = +HEAPF64[$5>>3];
    $775 = +HEAPF64[$6>>3];
    $776 = $774 * $775;
    $777 = +HEAPF64[$7>>3];
    $778 = $772 * $777;
    $779 = $777 * $776;
    $780 = $773 - $779;
    $781 = $768 * $780;
    $782 = $770 * $776;
    $783 = -$778;
    $784 = $783 - $782;
    $785 = $627 * $768;
    $786 = $769 * $774;
    $787 = $765 * $780;
    $788 = $786 + $787;
    $789 = $767 * $774;
    $790 = $781 - $789;
    $791 = $769 * $772;
    $792 = $627 * $765;
    $793 = $792 + $791;
    $794 = $767 * $772;
    $795 = $785 - $794;
    $796 = +HEAPF64[$8>>3];
    $797 = $612 * $796;
    $798 = +HEAPF64[$10>>3];
    $799 = $793 * $798;
    $800 = $797 + $799;
    $801 = +HEAPF64[$9>>3];
    $802 = $795 * $801;
    $803 = $800 + $802;
    HEAPF64[$11>>3] = $803;
    $804 = +HEAPF64[$12>>3];
    $805 = $793 * $804;
    $806 = +HEAPF64[$14>>3];
    $807 = $795 * $806;
    $808 = $805 + $807;
    $809 = +HEAPF64[$13>>3];
    $810 = $612 * $809;
    $811 = $808 + $810;
    HEAPF64[$15>>3] = $811;
    $812 = +HEAPF64[$18>>3];
    $813 = $795 * $812;
    $814 = +HEAPF64[$16>>3];
    $815 = $612 * $814;
    $816 = $813 + $815;
    $817 = +HEAPF64[$17>>3];
    $818 = $793 * $817;
    $819 = $816 + $818;
    HEAPF64[$19>>3] = $819;
    $820 = +HEAPF64[$9>>3];
    $821 = $615 * $820;
    $822 = +HEAPF64[$10>>3];
    $823 = $618 * $822;
    $824 = $821 + $823;
    $825 = +HEAPF64[$8>>3];
    $826 = $771 * $825;
    $827 = $824 + $826;
    HEAPF64[$20>>3] = $827;
    $828 = +HEAPF64[$13>>3];
    $829 = $771 * $828;
    $830 = +HEAPF64[$14>>3];
    $831 = $615 * $830;
    $832 = $829 + $831;
    $833 = +HEAPF64[$12>>3];
    $834 = $618 * $833;
    $835 = $832 + $834;
    HEAPF64[$21>>3] = $835;
    $836 = +HEAPF64[$17>>3];
    $837 = $618 * $836;
    $838 = +HEAPF64[$16>>3];
    $839 = $771 * $838;
    $840 = $837 + $839;
    $841 = +HEAPF64[$18>>3];
    $842 = $615 * $841;
    $843 = $840 + $842;
    HEAPF64[$22>>3] = $843;
    $844 = +HEAPF64[$8>>3];
    $845 = $784 * $844;
    $846 = +HEAPF64[$10>>3];
    $847 = $788 * $846;
    $848 = $845 + $847;
    $849 = +HEAPF64[$9>>3];
    $850 = $790 * $849;
    $851 = $848 + $850;
    HEAPF64[$23>>3] = $851;
    $852 = +HEAPF64[$12>>3];
    $853 = $788 * $852;
    $854 = +HEAPF64[$14>>3];
    $855 = $790 * $854;
    $856 = $853 + $855;
    $857 = +HEAPF64[$13>>3];
    $858 = $784 * $857;
    $859 = $856 + $858;
    HEAPF64[$24>>3] = $859;
    $860 = +HEAPF64[$16>>3];
    $861 = $784 * $860;
    $862 = +HEAPF64[$18>>3];
    $863 = $790 * $862;
    $864 = $861 + $863;
    $865 = +HEAPF64[$17>>3];
    $866 = $788 * $865;
    $867 = $864 + $866;
    HEAPF64[$25>>3] = $867;
    $868 = +HEAPF64[$31>>3];
    $869 = (+__Z5IKabsd($868));
    $870 = $869 < 9.9999999999999995E-7;
    if (!($870)) {
     $871 = (+__Z6IKsignd($868));
     $872 = (+__Z5IKabsd($871));
     $873 = $872 < 9.9999999999999995E-7;
     if (!($873)) {
      HEAP8[$346>>0] = 1;
      $4455 = +HEAPF64[$31>>3];
      $4456 = (+__Z6IKsignd($4455));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x460,$4456,-1);
      $4457 = HEAP8[$347>>0]|0;
      $4458 = ($4457<<24>>24)==(0);
      if ($4458) {
       break;
      }
      $4459 = +HEAPF64[$22>>3];
      $4460 = +HEAPF64[$19>>3];
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x461,$4459,$4460,1.9999999999999999E-6);
      $4461 = HEAP8[$348>>0]|0;
      $4462 = ($4461<<24>>24)==(0);
      if ($4462) {
       break;
      }
      $4463 = +HEAPF64[$x460>>3];
      $4464 = $4463 * 1.5707963267949001;
      $4465 = $4464 + -1.5707963267949001;
      $4466 = +HEAPF64[$x461>>3];
      $4467 = $4466 + $4465;
      $4468 = (+__Z5IKsind($4467));
      $4469 = (+__Z5IKcosd($4467));
      $4470 = $4467 > 3.14159265358979;
      if ($4470) {
       $4471 = $4467 + -6.2831853071795898;
       $4474 = $4471;
      } else {
       $4472 = $4467 < -3.14159265358979;
       if ($4472) {
        $4473 = $4467 + 6.2831853071795898;
        $4474 = $4473;
       } else {
        $4474 = $4467;
       }
      }
      HEAP8[$349>>0] = 0;
      HEAP8[$350>>0] = -1;
      HEAPF64[$351>>3] = $4474;
      HEAPF64[$352>>3] = $4469;
      HEAPF64[$353>>3] = $4468;
      $4475 = +HEAPF64[$351>>3];
      $4476 = (+__Z5IKcosd($4475));
      $4477 = (+__Z5IKsind($4475));
      $4478 = +HEAPF64[$31>>3];
      $4479 = +HEAPF64[$19>>3];
      $4480 = $4476 * $4479;
      $4481 = +HEAPF64[$22>>3];
      $4482 = $4477 * $4481;
      $4483 = $4476 * $4478;
      $4484 = $4477 * $4478;
      $4485 = $4479 - $4483;
      $4486 = $4476 * $4481;
      $4487 = $4477 * $4479;
      $4488 = $4486 - $4487;
      $4489 = $4482 - $4478;
      $4490 = $4480 + $4489;
      $4491 = +HEAPF64[$20>>3];
      $4492 = $4484 * $4491;
      $4493 = +HEAPF64[$11>>3];
      $4494 = $4483 * $4493;
      $4495 = $4492 + $4494;
      $4496 = +HEAPF64[$30>>3];
      $4497 = +HEAPF64[$23>>3];
      $4498 = $4496 * $4497;
      $4499 = $4495 + $4498;
      $4500 = +HEAPF64[$21>>3];
      $4501 = $4484 * $4500;
      $4502 = +HEAPF64[$15>>3];
      $4503 = $4483 * $4502;
      $4504 = $4501 + $4503;
      $4505 = +HEAPF64[$24>>3];
      $4506 = $4496 * $4505;
      $4507 = $4504 + $4506;
      $4508 = $4478 * $4482;
      $4509 = $4508 + -1.0;
      $4510 = $4478 * $4480;
      $4511 = $4510 + $4509;
      $4512 = +HEAPF64[$25>>3];
      $4513 = $4496 * $4512;
      $4514 = $4511 + $4513;
      $4515 = $4478 * $4512;
      $4516 = $4480 * $4496;
      $4517 = $4516 - $4515;
      $4518 = $4482 * $4496;
      $4519 = $4518 + $4517;
      $4520 = (+__Z5IKabsd($4485));
      $4521 = $4520 > 5.0000000000000004E-6;
      if ($4521) {
       break;
      }
      $4522 = $4481 - $4484;
      $4523 = (+__Z5IKabsd($4522));
      $4524 = $4523 > 5.0000000000000004E-6;
      if ($4524) {
       break;
      }
      $4525 = (+__Z5IKabsd($4488));
      $4526 = $4525 > 5.0000000000000004E-6;
      if ($4526) {
       break;
      }
      $4527 = (+__Z5IKabsd($4490));
      $4528 = $4527 > 5.0000000000000004E-6;
      if ($4528) {
       break;
      }
      $4529 = (+__Z5IKabsd($4499));
      $4530 = $4529 > 5.0000000000000004E-6;
      if ($4530) {
       break;
      }
      $4531 = (+__Z5IKabsd($4507));
      $4532 = $4531 > 5.0000000000000004E-6;
      if ($4532) {
       break;
      }
      $4533 = (+__Z5IKabsd($4514));
      $4534 = $4533 > 5.0000000000000004E-6;
      if ($4534) {
       break;
      }
      $4535 = (+__Z5IKabsd($4519));
      $4536 = $4535 > 5.0000000000000004E-6;
      if ($4536) {
       break;
      }
      $4537 = +HEAPF64[$0>>3];
      $4538 = +HEAPF64[$1>>3];
      $4539 = $4537 * $4538;
      $4540 = +HEAPF64[$2>>3];
      $4541 = $4538 * $4540;
      $4542 = +HEAPF64[$3>>3];
      $4543 = $4538 * $4542;
      $4544 = +HEAPF64[$4>>3];
      $4545 = $4542 * $4544;
      $4546 = +HEAPF64[$5>>3];
      $4547 = +HEAPF64[$6>>3];
      $4548 = $4546 * $4547;
      $4549 = +HEAPF64[$7>>3];
      $4550 = $4544 * $4549;
      $4551 = $4549 * $4548;
      $4552 = $4545 - $4551;
      $4553 = $4540 * $4552;
      $4554 = $4542 * $4548;
      $4555 = -$4550;
      $4556 = $4555 - $4554;
      $4557 = $627 * $4540;
      $4558 = $4537 * $4552;
      $4559 = $4541 * $4546;
      $4560 = $4559 + $4558;
      $4561 = $4539 * $4546;
      $4562 = $4553 - $4561;
      $4563 = $627 * $4537;
      $4564 = $4541 * $4544;
      $4565 = $4563 + $4564;
      $4566 = $4539 * $4544;
      $4567 = $4557 - $4566;
      $4568 = +HEAPF64[$8>>3];
      $4569 = $612 * $4568;
      $4570 = +HEAPF64[$10>>3];
      $4571 = $4565 * $4570;
      $4572 = $4569 + $4571;
      $4573 = +HEAPF64[$9>>3];
      $4574 = $4567 * $4573;
      $4575 = $4572 + $4574;
      HEAPF64[$11>>3] = $4575;
      $4576 = +HEAPF64[$13>>3];
      $4577 = $612 * $4576;
      $4578 = +HEAPF64[$12>>3];
      $4579 = $4565 * $4578;
      $4580 = $4577 + $4579;
      $4581 = +HEAPF64[$14>>3];
      $4582 = $4567 * $4581;
      $4583 = $4580 + $4582;
      HEAPF64[$15>>3] = $4583;
      $4584 = +HEAPF64[$18>>3];
      $4585 = $4567 * $4584;
      $4586 = +HEAPF64[$17>>3];
      $4587 = $4565 * $4586;
      $4588 = $4585 + $4587;
      $4589 = +HEAPF64[$16>>3];
      $4590 = $612 * $4589;
      $4591 = $4588 + $4590;
      HEAPF64[$19>>3] = $4591;
      $4592 = +HEAPF64[$10>>3];
      $4593 = $618 * $4592;
      $4594 = +HEAPF64[$8>>3];
      $4595 = $4543 * $4594;
      $4596 = $4593 + $4595;
      $4597 = +HEAPF64[$9>>3];
      $4598 = $615 * $4597;
      $4599 = $4596 + $4598;
      HEAPF64[$20>>3] = $4599;
      $4600 = +HEAPF64[$13>>3];
      $4601 = $4543 * $4600;
      $4602 = +HEAPF64[$12>>3];
      $4603 = $618 * $4602;
      $4604 = $4601 + $4603;
      $4605 = +HEAPF64[$14>>3];
      $4606 = $615 * $4605;
      $4607 = $4604 + $4606;
      HEAPF64[$21>>3] = $4607;
      $4608 = +HEAPF64[$18>>3];
      $4609 = $615 * $4608;
      $4610 = +HEAPF64[$17>>3];
      $4611 = $618 * $4610;
      $4612 = $4609 + $4611;
      $4613 = +HEAPF64[$16>>3];
      $4614 = $4543 * $4613;
      $4615 = $4612 + $4614;
      HEAPF64[$22>>3] = $4615;
      $4616 = +HEAPF64[$8>>3];
      $4617 = $4556 * $4616;
      $4618 = +HEAPF64[$10>>3];
      $4619 = $4560 * $4618;
      $4620 = $4617 + $4619;
      $4621 = +HEAPF64[$9>>3];
      $4622 = $4562 * $4621;
      $4623 = $4620 + $4622;
      HEAPF64[$23>>3] = $4623;
      $4624 = +HEAPF64[$12>>3];
      $4625 = $4560 * $4624;
      $4626 = +HEAPF64[$13>>3];
      $4627 = $4556 * $4626;
      $4628 = $4625 + $4627;
      $4629 = +HEAPF64[$14>>3];
      $4630 = $4562 * $4629;
      $4631 = $4628 + $4630;
      HEAPF64[$24>>3] = $4631;
      $4632 = +HEAPF64[$17>>3];
      $4633 = $4560 * $4632;
      $4634 = +HEAPF64[$16>>3];
      $4635 = $4556 * $4634;
      $4636 = $4633 + $4635;
      $4637 = +HEAPF64[$18>>3];
      $4638 = $4562 * $4637;
      $4639 = $4636 + $4638;
      HEAPF64[$25>>3] = $4639;
      $4640 = +HEAPF64[$31>>3];
      $4641 = (+__Z5IKabsd($4640));
      $4642 = $4641 < 9.9999999999999995E-7;
      do {
       if (!($4642)) {
        $4643 = (+__Z6IKsignd($4640));
        $4644 = (+__Z5IKabsd($4643));
        $4645 = $4644 < 9.9999999999999995E-7;
        if ($4645) {
         break;
        }
        HEAP8[$573>>0] = 1;
        $7136 = +HEAPF64[$31>>3];
        $7137 = (+__Z6IKsignd($7136));
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x633,$7137,-1);
        $7138 = HEAP8[$574>>0]|0;
        $7139 = ($7138<<24>>24)==(0);
        if ($7139) {
         break L7;
        }
        $7140 = +HEAPF64[$24>>3];
        $7141 = +HEAPF64[$23>>3];
        $7142 = -$7141;
        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x634,$7140,$7142,1.9999999999999999E-6);
        $7143 = HEAP8[$575>>0]|0;
        $7144 = ($7143<<24>>24)==(0);
        if ($7144) {
         break L7;
        }
        $7145 = +HEAPF64[$x633>>3];
        $7146 = $7145 * 1.5707963267949001;
        $7147 = $7146 + -1.5707963267949001;
        $7148 = +HEAPF64[$x634>>3];
        $7149 = $7148 + $7147;
        $7150 = (+__Z5IKsind($7149));
        $7151 = (+__Z5IKcosd($7149));
        $7152 = $7149 > 3.14159265358979;
        do {
         if ($7152) {
          $7153 = $7149 + -6.2831853071795898;
          $7156 = $7153;
         } else {
          $7154 = $7149 < -3.14159265358979;
          if (!($7154)) {
           $7156 = $7149;
           break;
          }
          $7155 = $7149 + 6.2831853071795898;
          $7156 = $7155;
         }
        } while(0);
        HEAP8[$576>>0] = 0;
        HEAP8[$577>>0] = -1;
        HEAPF64[$578>>3] = $7156;
        HEAPF64[$579>>3] = $7151;
        HEAPF64[$580>>3] = $7150;
        $7157 = +HEAPF64[$578>>3];
        $7158 = (+__Z5IKsind($7157));
        $7159 = (+__Z5IKcosd($7157));
        $7160 = +HEAPF64[$352>>3];
        $7161 = +HEAPF64[$30>>3];
        $7162 = $7160 * $7161;
        $7163 = +HEAPF64[$353>>3];
        $7164 = +HEAPF64[$21>>3];
        $7165 = $7163 * $7164;
        $7166 = +HEAPF64[$20>>3];
        $7167 = $7163 * $7166;
        $7168 = +HEAPF64[$31>>3];
        $7169 = $7158 * $7163;
        $7170 = $7159 * $7168;
        $7171 = +HEAPF64[$23>>3];
        $7172 = $7170 + $7171;
        $7173 = +HEAPF64[$24>>3];
        $7174 = +HEAPF64[$15>>3];
        $7175 = $7160 * $7174;
        $7176 = $7165 + $7175;
        $7177 = $7158 * $7161;
        $7178 = $7177 + $7176;
        $7179 = $7160 * $7166;
        $7180 = +HEAPF64[$11>>3];
        $7181 = $7163 * $7180;
        $7182 = $7179 - $7181;
        $7183 = $7182 - $7158;
        $7184 = $7163 * $7174;
        $7185 = $7160 * $7164;
        $7186 = $7185 - $7184;
        $7187 = $7186 - $7159;
        $7188 = $7158 * $7162;
        $7189 = $7159 * $7163;
        $7190 = $7188 + $7189;
        $7191 = $7190 + $7174;
        $7192 = $7160 * $7180;
        $7193 = $7159 * $7161;
        $7194 = $7192 - $7193;
        $7195 = $7167 + $7194;
        $7196 = $7159 * $7162;
        $7197 = $7169 - $7196;
        $7198 = $7197 + $7180;
        $7199 = $7161 * $7169;
        $7200 = $7164 + $7199;
        $7201 = -$7160;
        $7202 = $7159 * $7201;
        $7203 = $7202 + $7200;
        $7204 = $7193 * $7163;
        $7205 = $7166 - $7204;
        $7206 = $7158 * $7201;
        $7207 = $7206 + $7205;
        $7208 = $7162 * $7174;
        $7209 = $7168 * $7173;
        $7210 = $7208 - $7209;
        $7211 = $7158 + $7210;
        $7212 = $7161 * $7165;
        $7213 = $7212 + $7211;
        $7214 = $7161 * $7167;
        $7215 = $7162 * $7180;
        $7216 = $7214 + $7215;
        $7217 = $7216 - $7159;
        $7218 = $7168 * $7171;
        $7219 = $7217 - $7218;
        $7220 = (+__Z5IKabsd($7172));
        $7221 = $7220 > 5.0000000000000004E-6;
        if ($7221) {
         break L7;
        }
        $7222 = $7158 * $7168;
        $7223 = $7173 - $7222;
        $7224 = (+__Z5IKabsd($7223));
        $7225 = $7224 > 5.0000000000000004E-6;
        if ($7225) {
         break L7;
        }
        $7226 = (+__Z5IKabsd($7178));
        $7227 = $7226 > 5.0000000000000004E-6;
        if ($7227) {
         break L7;
        }
        $7228 = (+__Z5IKabsd($7183));
        $7229 = $7228 > 5.0000000000000004E-6;
        if ($7229) {
         break L7;
        }
        $7230 = (+__Z5IKabsd($7187));
        $7231 = $7230 > 5.0000000000000004E-6;
        if ($7231) {
         break L7;
        }
        $7232 = (+__Z5IKabsd($7191));
        $7233 = $7232 > 5.0000000000000004E-6;
        if ($7233) {
         break L7;
        }
        $7234 = (+__Z5IKabsd($7195));
        $7235 = $7234 > 5.0000000000000004E-6;
        if ($7235) {
         break L7;
        }
        $7236 = (+__Z5IKabsd($7198));
        $7237 = $7236 > 5.0000000000000004E-6;
        if ($7237) {
         break L7;
        }
        $7238 = (+__Z5IKabsd($7203));
        $7239 = $7238 > 5.0000000000000004E-6;
        if ($7239) {
         break L7;
        }
        $7240 = (+__Z5IKabsd($7207));
        $7241 = $7240 > 5.0000000000000004E-6;
        if ($7241) {
         break L7;
        }
        $7242 = (+__Z5IKabsd($7213));
        $7243 = $7242 > 5.0000000000000004E-6;
        if ($7243) {
         break L7;
        }
        $7244 = (+__Z5IKabsd($7219));
        $7245 = $7244 > 5.0000000000000004E-6;
        if ($7245) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos282,7);
        $7246 = HEAP32[$vinfos282>>2]|0;
        $7247 = ((($7246)) + 17|0);
        HEAP8[$7247>>0] = 1;
        $7248 = +HEAPF64[$this>>3];
        $7249 = HEAP32[$vinfos282>>2]|0;
        $7250 = ((($7249)) + 8|0);
        HEAPF64[$7250>>3] = $7248;
        $7251 = HEAP8[$581>>0]|0;
        $7252 = HEAP32[$vinfos282>>2]|0;
        $7253 = ((($7252)) + 19|0);
        HEAP8[$7253>>0] = $7251;
        $7254 = HEAP8[$582>>0]|0;
        $7255 = HEAP32[$vinfos282>>2]|0;
        $7256 = ((($7255)) + 20|0);
        HEAP8[$7256>>0] = $7254;
        $7257 = HEAP8[$583>>0]|0;
        $7258 = HEAP32[$vinfos282>>2]|0;
        $7259 = ((($7258)) + 18|0);
        HEAP8[$7259>>0] = $7257;
        $7260 = HEAP32[$vinfos282>>2]|0;
        $7261 = ((($7260)) + 41|0);
        HEAP8[$7261>>0] = 1;
        $7262 = +HEAPF64[$584>>3];
        $7263 = HEAP32[$vinfos282>>2]|0;
        $7264 = ((($7263)) + 32|0);
        HEAPF64[$7264>>3] = $7262;
        $7265 = HEAP8[$585>>0]|0;
        $7266 = HEAP32[$vinfos282>>2]|0;
        $7267 = ((($7266)) + 43|0);
        HEAP8[$7267>>0] = $7265;
        $7268 = HEAP8[$586>>0]|0;
        $7269 = HEAP32[$vinfos282>>2]|0;
        $7270 = ((($7269)) + 44|0);
        HEAP8[$7270>>0] = $7268;
        $7271 = HEAP8[$587>>0]|0;
        $7272 = HEAP32[$vinfos282>>2]|0;
        $7273 = ((($7272)) + 42|0);
        HEAP8[$7273>>0] = $7271;
        $7274 = HEAP32[$vinfos282>>2]|0;
        $7275 = ((($7274)) + 65|0);
        HEAP8[$7275>>0] = 1;
        $7276 = +HEAPF64[$588>>3];
        $7277 = HEAP32[$vinfos282>>2]|0;
        $7278 = ((($7277)) + 56|0);
        HEAPF64[$7278>>3] = $7276;
        $7279 = HEAP8[$589>>0]|0;
        $7280 = HEAP32[$vinfos282>>2]|0;
        $7281 = ((($7280)) + 67|0);
        HEAP8[$7281>>0] = $7279;
        $7282 = HEAP8[$590>>0]|0;
        $7283 = HEAP32[$vinfos282>>2]|0;
        $7284 = ((($7283)) + 68|0);
        HEAP8[$7284>>0] = $7282;
        $7285 = HEAP8[$591>>0]|0;
        $7286 = HEAP32[$vinfos282>>2]|0;
        $7287 = ((($7286)) + 66|0);
        HEAP8[$7287>>0] = $7285;
        $7288 = HEAP32[$vinfos282>>2]|0;
        $7289 = ((($7288)) + 89|0);
        HEAP8[$7289>>0] = 1;
        $7290 = +HEAPF64[$592>>3];
        $7291 = HEAP32[$vinfos282>>2]|0;
        $7292 = ((($7291)) + 80|0);
        HEAPF64[$7292>>3] = $7290;
        $7293 = HEAP8[$593>>0]|0;
        $7294 = HEAP32[$vinfos282>>2]|0;
        $7295 = ((($7294)) + 91|0);
        HEAP8[$7295>>0] = $7293;
        $7296 = HEAP8[$594>>0]|0;
        $7297 = HEAP32[$vinfos282>>2]|0;
        $7298 = ((($7297)) + 92|0);
        HEAP8[$7298>>0] = $7296;
        $7299 = HEAP8[$595>>0]|0;
        $7300 = HEAP32[$vinfos282>>2]|0;
        $7301 = ((($7300)) + 90|0);
        HEAP8[$7301>>0] = $7299;
        $7302 = HEAP32[$vinfos282>>2]|0;
        $7303 = ((($7302)) + 113|0);
        HEAP8[$7303>>0] = 1;
        $7304 = +HEAPF64[$351>>3];
        $7305 = HEAP32[$vinfos282>>2]|0;
        $7306 = ((($7305)) + 104|0);
        HEAPF64[$7306>>3] = $7304;
        $7307 = HEAP8[$349>>0]|0;
        $7308 = HEAP32[$vinfos282>>2]|0;
        $7309 = ((($7308)) + 115|0);
        HEAP8[$7309>>0] = $7307;
        $7310 = HEAP8[$350>>0]|0;
        $7311 = HEAP32[$vinfos282>>2]|0;
        $7312 = ((($7311)) + 116|0);
        HEAP8[$7312>>0] = $7310;
        $7313 = HEAP8[$346>>0]|0;
        $7314 = HEAP32[$vinfos282>>2]|0;
        $7315 = ((($7314)) + 114|0);
        HEAP8[$7315>>0] = $7313;
        $7316 = HEAP32[$vinfos282>>2]|0;
        $7317 = ((($7316)) + 137|0);
        HEAP8[$7317>>0] = 1;
        $7318 = +HEAPF64[$29>>3];
        $7319 = HEAP32[$vinfos282>>2]|0;
        $7320 = ((($7319)) + 128|0);
        HEAPF64[$7320>>3] = $7318;
        $7321 = HEAP8[$27>>0]|0;
        $7322 = HEAP32[$vinfos282>>2]|0;
        $7323 = ((($7322)) + 139|0);
        HEAP8[$7323>>0] = $7321;
        $7324 = HEAP8[$28>>0]|0;
        $7325 = HEAP32[$vinfos282>>2]|0;
        $7326 = ((($7325)) + 140|0);
        HEAP8[$7326>>0] = $7324;
        $7327 = HEAP8[$26>>0]|0;
        $7328 = HEAP32[$vinfos282>>2]|0;
        $7329 = ((($7328)) + 138|0);
        HEAP8[$7329>>0] = $7327;
        $7330 = HEAP32[$vinfos282>>2]|0;
        $7331 = ((($7330)) + 161|0);
        HEAP8[$7331>>0] = 1;
        $7332 = +HEAPF64[$578>>3];
        $7333 = HEAP32[$vinfos282>>2]|0;
        $7334 = ((($7333)) + 152|0);
        HEAPF64[$7334>>3] = $7332;
        $7335 = HEAP8[$576>>0]|0;
        $7336 = HEAP32[$vinfos282>>2]|0;
        $7337 = ((($7336)) + 163|0);
        HEAP8[$7337>>0] = $7335;
        $7338 = HEAP8[$577>>0]|0;
        $7339 = HEAP32[$vinfos282>>2]|0;
        $7340 = ((($7339)) + 164|0);
        HEAP8[$7340>>0] = $7338;
        $7341 = HEAP8[$573>>0]|0;
        $7342 = HEAP32[$vinfos282>>2]|0;
        $7343 = ((($7342)) + 162|0);
        HEAP8[$7343>>0] = $7341;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree283,0);
        $7344 = HEAP32[$solutions>>2]|0;
        $7345 = ((($7344)) + 8|0);
        $7346 = HEAP32[$7345>>2]|0;
        (FUNCTION_TABLE_iiii[$7346 & 31]($solutions,$vinfos282,$vfree283)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree283);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos282);
        break L7;
       }
      } while(0);
      $4646 = +HEAPF64[$0>>3];
      $4647 = +HEAPF64[$1>>3];
      $4648 = $4646 * $4647;
      $4649 = +HEAPF64[$2>>3];
      $4650 = $4647 * $4649;
      $4651 = +HEAPF64[$3>>3];
      $4652 = $4647 * $4651;
      $4653 = +HEAPF64[$4>>3];
      $4654 = $4651 * $4653;
      $4655 = +HEAPF64[$5>>3];
      $4656 = +HEAPF64[$6>>3];
      $4657 = $4655 * $4656;
      $4658 = +HEAPF64[$7>>3];
      $4659 = $4653 * $4658;
      $4660 = $4658 * $4657;
      $4661 = $4654 - $4660;
      $4662 = $4649 * $4661;
      $4663 = $4651 * $4657;
      $4664 = -$4663;
      $4665 = $4664 - $4659;
      $4666 = $627 * $4649;
      $4667 = $4646 * $4661;
      $4668 = $4650 * $4655;
      $4669 = $4668 + $4667;
      $4670 = $4648 * $4655;
      $4671 = $4662 - $4670;
      $4672 = $627 * $4646;
      $4673 = $4650 * $4653;
      $4674 = $4672 + $4673;
      $4675 = $4648 * $4653;
      $4676 = $4666 - $4675;
      $4677 = +HEAPF64[$10>>3];
      $4678 = $4674 * $4677;
      $4679 = +HEAPF64[$9>>3];
      $4680 = $4676 * $4679;
      $4681 = $4678 + $4680;
      $4682 = +HEAPF64[$8>>3];
      $4683 = $612 * $4682;
      $4684 = $4681 + $4683;
      HEAPF64[$11>>3] = $4684;
      $4685 = +HEAPF64[$14>>3];
      $4686 = $4676 * $4685;
      $4687 = +HEAPF64[$12>>3];
      $4688 = $4674 * $4687;
      $4689 = $4686 + $4688;
      $4690 = +HEAPF64[$13>>3];
      $4691 = $612 * $4690;
      $4692 = $4689 + $4691;
      HEAPF64[$15>>3] = $4692;
      $4693 = +HEAPF64[$16>>3];
      $4694 = $612 * $4693;
      $4695 = +HEAPF64[$17>>3];
      $4696 = $4674 * $4695;
      $4697 = $4694 + $4696;
      $4698 = +HEAPF64[$18>>3];
      $4699 = $4676 * $4698;
      $4700 = $4697 + $4699;
      HEAPF64[$19>>3] = $4700;
      $4701 = +HEAPF64[$10>>3];
      $4702 = $618 * $4701;
      $4703 = +HEAPF64[$9>>3];
      $4704 = $615 * $4703;
      $4705 = $4702 + $4704;
      $4706 = +HEAPF64[$8>>3];
      $4707 = $4652 * $4706;
      $4708 = $4705 + $4707;
      HEAPF64[$20>>3] = $4708;
      $4709 = +HEAPF64[$12>>3];
      $4710 = $618 * $4709;
      $4711 = +HEAPF64[$13>>3];
      $4712 = $4652 * $4711;
      $4713 = $4710 + $4712;
      $4714 = +HEAPF64[$14>>3];
      $4715 = $615 * $4714;
      $4716 = $4713 + $4715;
      HEAPF64[$21>>3] = $4716;
      $4717 = +HEAPF64[$18>>3];
      $4718 = $615 * $4717;
      $4719 = +HEAPF64[$16>>3];
      $4720 = $4652 * $4719;
      $4721 = $4718 + $4720;
      $4722 = +HEAPF64[$17>>3];
      $4723 = $618 * $4722;
      $4724 = $4721 + $4723;
      HEAPF64[$22>>3] = $4724;
      $4725 = +HEAPF64[$8>>3];
      $4726 = $4665 * $4725;
      $4727 = +HEAPF64[$10>>3];
      $4728 = $4669 * $4727;
      $4729 = $4726 + $4728;
      $4730 = +HEAPF64[$9>>3];
      $4731 = $4671 * $4730;
      $4732 = $4729 + $4731;
      HEAPF64[$23>>3] = $4732;
      $4733 = +HEAPF64[$13>>3];
      $4734 = $4665 * $4733;
      $4735 = +HEAPF64[$14>>3];
      $4736 = $4671 * $4735;
      $4737 = $4734 + $4736;
      $4738 = +HEAPF64[$12>>3];
      $4739 = $4669 * $4738;
      $4740 = $4737 + $4739;
      HEAPF64[$24>>3] = $4740;
      $4741 = +HEAPF64[$18>>3];
      $4742 = $4671 * $4741;
      $4743 = +HEAPF64[$16>>3];
      $4744 = $4665 * $4743;
      $4745 = $4742 + $4744;
      $4746 = +HEAPF64[$17>>3];
      $4747 = $4669 * $4746;
      $4748 = $4745 + $4747;
      HEAPF64[$25>>3] = $4748;
      $4749 = +HEAPF64[$353>>3];
      $4750 = (+__Z5IKabsd($4749));
      $4751 = $4750 < 9.9999999999999995E-7;
      do {
       if (!($4751)) {
        $4752 = +HEAPF64[$31>>3];
        $4753 = (+__Z5IKabsd($4752));
        $4754 = $4753 < 9.9999999999999995E-7;
        if ($4754) {
         break;
        }
        HEAP8[$550>>0] = 1;
        $6891 = +HEAPF64[$31>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x621,$6891,-1);
        $6892 = HEAP8[$551>>0]|0;
        $6893 = ($6892<<24>>24)==(0);
        if ($6893) {
         break L7;
        }
        $6894 = +HEAPF64[$x621>>3];
        $6895 = +HEAPF64[$353>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x622,$6895,-1);
        $6896 = HEAP8[$552>>0]|0;
        $6897 = ($6896<<24>>24)==(0);
        if ($6897) {
         break L7;
        }
        $6898 = +HEAPF64[$x622>>3];
        $6899 = $6894 * $6898;
        $6900 = +HEAPF64[$11>>3];
        $6901 = +HEAPF64[$31>>3];
        $6902 = $6900 * $6901;
        $6903 = +HEAPF64[$352>>3];
        $6904 = +HEAPF64[$30>>3];
        $6905 = $6903 * $6904;
        $6906 = +HEAPF64[$23>>3];
        $6907 = $6905 * $6906;
        $6908 = -$6907;
        $6909 = $6908 - $6902;
        $6910 = $6899 * $6909;
        $6911 = (+__Z5IKabsd($6910));
        $6912 = $6911 < 1.9999999999999999E-6;
        do {
         if ($6912) {
          $6913 = $6894 * $6906;
          $6914 = -$6913;
          $6915 = (+__Z5IKabsd($6914));
          $6916 = $6915 < 1.9999999999999999E-6;
          if (!($6916)) {
           break;
          }
          $6917 = (+__Z5IKsqrd($6910));
          $6918 = (+__Z5IKsqrd($6914));
          $6919 = $6917 + $6918;
          $6920 = $6919 + -1.0;
          $6921 = (+__Z5IKabsd($6920));
          $6922 = !($6921 <= 1.9999999999999999E-6);
          if (!($6922)) {
           break L7;
          }
         }
        } while(0);
        $6923 = +HEAPF64[$x622>>3];
        $6924 = $6894 * $6923;
        $6925 = +HEAPF64[$11>>3];
        $6926 = +HEAPF64[$31>>3];
        $6927 = $6925 * $6926;
        $6928 = +HEAPF64[$352>>3];
        $6929 = +HEAPF64[$30>>3];
        $6930 = $6928 * $6929;
        $6931 = +HEAPF64[$23>>3];
        $6932 = $6930 * $6931;
        $6933 = -$6932;
        $6934 = $6933 - $6927;
        $6935 = $6924 * $6934;
        $6936 = $6894 * $6931;
        $6937 = -$6936;
        $6938 = (+__Z7IKatan2dd($6935,$6937));
        $6939 = (+__Z5IKsind($6938));
        $6940 = (+__Z5IKcosd($6938));
        $6941 = $6938 > 3.14159265358979;
        do {
         if ($6941) {
          $6942 = $6938 + -6.2831853071795898;
          $6945 = $6942;
         } else {
          $6943 = $6938 < -3.14159265358979;
          if (!($6943)) {
           $6945 = $6938;
           break;
          }
          $6944 = $6938 + 6.2831853071795898;
          $6945 = $6944;
         }
        } while(0);
        HEAP8[$553>>0] = 0;
        HEAP8[$554>>0] = -1;
        HEAPF64[$555>>3] = $6945;
        HEAPF64[$556>>3] = $6940;
        HEAPF64[$557>>3] = $6939;
        $6946 = +HEAPF64[$555>>3];
        $6947 = (+__Z5IKsind($6946));
        $6948 = (+__Z5IKcosd($6946));
        $6949 = +HEAPF64[$352>>3];
        $6950 = +HEAPF64[$30>>3];
        $6951 = $6949 * $6950;
        $6952 = +HEAPF64[$353>>3];
        $6953 = +HEAPF64[$21>>3];
        $6954 = $6952 * $6953;
        $6955 = +HEAPF64[$20>>3];
        $6956 = $6952 * $6955;
        $6957 = +HEAPF64[$31>>3];
        $6958 = $6947 * $6952;
        $6959 = $6948 * $6957;
        $6960 = +HEAPF64[$23>>3];
        $6961 = $6959 + $6960;
        $6962 = +HEAPF64[$24>>3];
        $6963 = +HEAPF64[$15>>3];
        $6964 = $6949 * $6963;
        $6965 = $6954 + $6964;
        $6966 = $6947 * $6950;
        $6967 = $6966 + $6965;
        $6968 = +HEAPF64[$11>>3];
        $6969 = $6952 * $6968;
        $6970 = $6949 * $6955;
        $6971 = $6970 - $6969;
        $6972 = $6971 - $6947;
        $6973 = $6952 * $6963;
        $6974 = $6949 * $6953;
        $6975 = $6974 - $6973;
        $6976 = $6975 - $6948;
        $6977 = $6948 * $6952;
        $6978 = $6977 + $6963;
        $6979 = $6947 * $6951;
        $6980 = $6979 + $6978;
        $6981 = $6949 * $6968;
        $6982 = $6948 * $6950;
        $6983 = $6981 - $6982;
        $6984 = $6956 + $6983;
        $6985 = $6948 * $6951;
        $6986 = $6958 - $6985;
        $6987 = $6986 + $6968;
        $6988 = -$6949;
        $6989 = $6948 * $6988;
        $6990 = $6989 + $6953;
        $6991 = $6950 * $6958;
        $6992 = $6990 + $6991;
        $6993 = $6982 * $6952;
        $6994 = $6947 * $6988;
        $6995 = $6994 - $6993;
        $6996 = $6995 + $6955;
        $6997 = $6951 * $6963;
        $6998 = $6957 * $6962;
        $6999 = $6997 - $6998;
        $7000 = $6947 + $6999;
        $7001 = $6950 * $6954;
        $7002 = $7001 + $7000;
        $7003 = $6951 * $6968;
        $7004 = $7003 - $6948;
        $7005 = $6957 * $6960;
        $7006 = $7004 - $7005;
        $7007 = $6950 * $6956;
        $7008 = $7007 + $7006;
        $7009 = (+__Z5IKabsd($6961));
        $7010 = $7009 > 5.0000000000000004E-6;
        if ($7010) {
         break L7;
        }
        $7011 = $6947 * $6957;
        $7012 = $6962 - $7011;
        $7013 = (+__Z5IKabsd($7012));
        $7014 = $7013 > 5.0000000000000004E-6;
        if ($7014) {
         break L7;
        }
        $7015 = (+__Z5IKabsd($6967));
        $7016 = $7015 > 5.0000000000000004E-6;
        if ($7016) {
         break L7;
        }
        $7017 = (+__Z5IKabsd($6972));
        $7018 = $7017 > 5.0000000000000004E-6;
        if ($7018) {
         break L7;
        }
        $7019 = (+__Z5IKabsd($6976));
        $7020 = $7019 > 5.0000000000000004E-6;
        if ($7020) {
         break L7;
        }
        $7021 = (+__Z5IKabsd($6980));
        $7022 = $7021 > 5.0000000000000004E-6;
        if ($7022) {
         break L7;
        }
        $7023 = (+__Z5IKabsd($6984));
        $7024 = $7023 > 5.0000000000000004E-6;
        if ($7024) {
         break L7;
        }
        $7025 = (+__Z5IKabsd($6987));
        $7026 = $7025 > 5.0000000000000004E-6;
        if ($7026) {
         break L7;
        }
        $7027 = (+__Z5IKabsd($6992));
        $7028 = $7027 > 5.0000000000000004E-6;
        if ($7028) {
         break L7;
        }
        $7029 = (+__Z5IKabsd($6996));
        $7030 = $7029 > 5.0000000000000004E-6;
        if ($7030) {
         break L7;
        }
        $7031 = (+__Z5IKabsd($7002));
        $7032 = $7031 > 5.0000000000000004E-6;
        if ($7032) {
         break L7;
        }
        $7033 = (+__Z5IKabsd($7008));
        $7034 = $7033 > 5.0000000000000004E-6;
        if ($7034) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos272,7);
        $7035 = HEAP32[$vinfos272>>2]|0;
        $7036 = ((($7035)) + 17|0);
        HEAP8[$7036>>0] = 1;
        $7037 = +HEAPF64[$this>>3];
        $7038 = HEAP32[$vinfos272>>2]|0;
        $7039 = ((($7038)) + 8|0);
        HEAPF64[$7039>>3] = $7037;
        $7040 = HEAP8[$558>>0]|0;
        $7041 = HEAP32[$vinfos272>>2]|0;
        $7042 = ((($7041)) + 19|0);
        HEAP8[$7042>>0] = $7040;
        $7043 = HEAP8[$559>>0]|0;
        $7044 = HEAP32[$vinfos272>>2]|0;
        $7045 = ((($7044)) + 20|0);
        HEAP8[$7045>>0] = $7043;
        $7046 = HEAP8[$560>>0]|0;
        $7047 = HEAP32[$vinfos272>>2]|0;
        $7048 = ((($7047)) + 18|0);
        HEAP8[$7048>>0] = $7046;
        $7049 = HEAP32[$vinfos272>>2]|0;
        $7050 = ((($7049)) + 41|0);
        HEAP8[$7050>>0] = 1;
        $7051 = +HEAPF64[$561>>3];
        $7052 = HEAP32[$vinfos272>>2]|0;
        $7053 = ((($7052)) + 32|0);
        HEAPF64[$7053>>3] = $7051;
        $7054 = HEAP8[$562>>0]|0;
        $7055 = HEAP32[$vinfos272>>2]|0;
        $7056 = ((($7055)) + 43|0);
        HEAP8[$7056>>0] = $7054;
        $7057 = HEAP8[$563>>0]|0;
        $7058 = HEAP32[$vinfos272>>2]|0;
        $7059 = ((($7058)) + 44|0);
        HEAP8[$7059>>0] = $7057;
        $7060 = HEAP8[$564>>0]|0;
        $7061 = HEAP32[$vinfos272>>2]|0;
        $7062 = ((($7061)) + 42|0);
        HEAP8[$7062>>0] = $7060;
        $7063 = HEAP32[$vinfos272>>2]|0;
        $7064 = ((($7063)) + 65|0);
        HEAP8[$7064>>0] = 1;
        $7065 = +HEAPF64[$565>>3];
        $7066 = HEAP32[$vinfos272>>2]|0;
        $7067 = ((($7066)) + 56|0);
        HEAPF64[$7067>>3] = $7065;
        $7068 = HEAP8[$566>>0]|0;
        $7069 = HEAP32[$vinfos272>>2]|0;
        $7070 = ((($7069)) + 67|0);
        HEAP8[$7070>>0] = $7068;
        $7071 = HEAP8[$567>>0]|0;
        $7072 = HEAP32[$vinfos272>>2]|0;
        $7073 = ((($7072)) + 68|0);
        HEAP8[$7073>>0] = $7071;
        $7074 = HEAP8[$568>>0]|0;
        $7075 = HEAP32[$vinfos272>>2]|0;
        $7076 = ((($7075)) + 66|0);
        HEAP8[$7076>>0] = $7074;
        $7077 = HEAP32[$vinfos272>>2]|0;
        $7078 = ((($7077)) + 89|0);
        HEAP8[$7078>>0] = 1;
        $7079 = +HEAPF64[$569>>3];
        $7080 = HEAP32[$vinfos272>>2]|0;
        $7081 = ((($7080)) + 80|0);
        HEAPF64[$7081>>3] = $7079;
        $7082 = HEAP8[$570>>0]|0;
        $7083 = HEAP32[$vinfos272>>2]|0;
        $7084 = ((($7083)) + 91|0);
        HEAP8[$7084>>0] = $7082;
        $7085 = HEAP8[$571>>0]|0;
        $7086 = HEAP32[$vinfos272>>2]|0;
        $7087 = ((($7086)) + 92|0);
        HEAP8[$7087>>0] = $7085;
        $7088 = HEAP8[$572>>0]|0;
        $7089 = HEAP32[$vinfos272>>2]|0;
        $7090 = ((($7089)) + 90|0);
        HEAP8[$7090>>0] = $7088;
        $7091 = HEAP32[$vinfos272>>2]|0;
        $7092 = ((($7091)) + 113|0);
        HEAP8[$7092>>0] = 1;
        $7093 = +HEAPF64[$351>>3];
        $7094 = HEAP32[$vinfos272>>2]|0;
        $7095 = ((($7094)) + 104|0);
        HEAPF64[$7095>>3] = $7093;
        $7096 = HEAP8[$349>>0]|0;
        $7097 = HEAP32[$vinfos272>>2]|0;
        $7098 = ((($7097)) + 115|0);
        HEAP8[$7098>>0] = $7096;
        $7099 = HEAP8[$350>>0]|0;
        $7100 = HEAP32[$vinfos272>>2]|0;
        $7101 = ((($7100)) + 116|0);
        HEAP8[$7101>>0] = $7099;
        $7102 = HEAP8[$346>>0]|0;
        $7103 = HEAP32[$vinfos272>>2]|0;
        $7104 = ((($7103)) + 114|0);
        HEAP8[$7104>>0] = $7102;
        $7105 = HEAP32[$vinfos272>>2]|0;
        $7106 = ((($7105)) + 137|0);
        HEAP8[$7106>>0] = 1;
        $7107 = +HEAPF64[$29>>3];
        $7108 = HEAP32[$vinfos272>>2]|0;
        $7109 = ((($7108)) + 128|0);
        HEAPF64[$7109>>3] = $7107;
        $7110 = HEAP8[$27>>0]|0;
        $7111 = HEAP32[$vinfos272>>2]|0;
        $7112 = ((($7111)) + 139|0);
        HEAP8[$7112>>0] = $7110;
        $7113 = HEAP8[$28>>0]|0;
        $7114 = HEAP32[$vinfos272>>2]|0;
        $7115 = ((($7114)) + 140|0);
        HEAP8[$7115>>0] = $7113;
        $7116 = HEAP8[$26>>0]|0;
        $7117 = HEAP32[$vinfos272>>2]|0;
        $7118 = ((($7117)) + 138|0);
        HEAP8[$7118>>0] = $7116;
        $7119 = HEAP32[$vinfos272>>2]|0;
        $7120 = ((($7119)) + 161|0);
        HEAP8[$7120>>0] = 1;
        $7121 = +HEAPF64[$555>>3];
        $7122 = HEAP32[$vinfos272>>2]|0;
        $7123 = ((($7122)) + 152|0);
        HEAPF64[$7123>>3] = $7121;
        $7124 = HEAP8[$553>>0]|0;
        $7125 = HEAP32[$vinfos272>>2]|0;
        $7126 = ((($7125)) + 163|0);
        HEAP8[$7126>>0] = $7124;
        $7127 = HEAP8[$554>>0]|0;
        $7128 = HEAP32[$vinfos272>>2]|0;
        $7129 = ((($7128)) + 164|0);
        HEAP8[$7129>>0] = $7127;
        $7130 = HEAP8[$550>>0]|0;
        $7131 = HEAP32[$vinfos272>>2]|0;
        $7132 = ((($7131)) + 162|0);
        HEAP8[$7132>>0] = $7130;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree273,0);
        $7133 = HEAP32[$solutions>>2]|0;
        $7134 = ((($7133)) + 8|0);
        $7135 = HEAP32[$7134>>2]|0;
        (FUNCTION_TABLE_iiii[$7135 & 31]($solutions,$vinfos272,$vfree273)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree273);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos272);
        break L7;
       }
      } while(0);
      $4755 = +HEAPF64[$0>>3];
      $4756 = +HEAPF64[$1>>3];
      $4757 = $4755 * $4756;
      $4758 = +HEAPF64[$2>>3];
      $4759 = $4756 * $4758;
      $4760 = +HEAPF64[$3>>3];
      $4761 = $4756 * $4760;
      $4762 = +HEAPF64[$4>>3];
      $4763 = $4760 * $4762;
      $4764 = +HEAPF64[$5>>3];
      $4765 = +HEAPF64[$6>>3];
      $4766 = $4764 * $4765;
      $4767 = +HEAPF64[$7>>3];
      $4768 = $4762 * $4767;
      $4769 = $4767 * $4766;
      $4770 = $4763 - $4769;
      $4771 = $4758 * $4770;
      $4772 = $4760 * $4766;
      $4773 = -$4768;
      $4774 = $4773 - $4772;
      $4775 = $627 * $4758;
      $4776 = $4755 * $4770;
      $4777 = $4759 * $4764;
      $4778 = $4777 + $4776;
      $4779 = $4757 * $4764;
      $4780 = $4771 - $4779;
      $4781 = $4759 * $4762;
      $4782 = $627 * $4755;
      $4783 = $4782 + $4781;
      $4784 = $4757 * $4762;
      $4785 = $4775 - $4784;
      $4786 = +HEAPF64[$8>>3];
      $4787 = $612 * $4786;
      $4788 = +HEAPF64[$10>>3];
      $4789 = $4783 * $4788;
      $4790 = $4787 + $4789;
      $4791 = +HEAPF64[$9>>3];
      $4792 = $4785 * $4791;
      $4793 = $4790 + $4792;
      HEAPF64[$11>>3] = $4793;
      $4794 = +HEAPF64[$12>>3];
      $4795 = $4783 * $4794;
      $4796 = +HEAPF64[$13>>3];
      $4797 = $612 * $4796;
      $4798 = $4795 + $4797;
      $4799 = +HEAPF64[$14>>3];
      $4800 = $4785 * $4799;
      $4801 = $4798 + $4800;
      HEAPF64[$15>>3] = $4801;
      $4802 = +HEAPF64[$18>>3];
      $4803 = $4785 * $4802;
      $4804 = +HEAPF64[$17>>3];
      $4805 = $4783 * $4804;
      $4806 = $4803 + $4805;
      $4807 = +HEAPF64[$16>>3];
      $4808 = $612 * $4807;
      $4809 = $4806 + $4808;
      HEAPF64[$19>>3] = $4809;
      $4810 = +HEAPF64[$8>>3];
      $4811 = $4761 * $4810;
      $4812 = +HEAPF64[$10>>3];
      $4813 = $618 * $4812;
      $4814 = $4811 + $4813;
      $4815 = +HEAPF64[$9>>3];
      $4816 = $615 * $4815;
      $4817 = $4814 + $4816;
      HEAPF64[$20>>3] = $4817;
      $4818 = +HEAPF64[$14>>3];
      $4819 = $615 * $4818;
      $4820 = +HEAPF64[$12>>3];
      $4821 = $618 * $4820;
      $4822 = $4819 + $4821;
      $4823 = +HEAPF64[$13>>3];
      $4824 = $4761 * $4823;
      $4825 = $4822 + $4824;
      HEAPF64[$21>>3] = $4825;
      $4826 = +HEAPF64[$18>>3];
      $4827 = $615 * $4826;
      $4828 = +HEAPF64[$16>>3];
      $4829 = $4761 * $4828;
      $4830 = $4827 + $4829;
      $4831 = +HEAPF64[$17>>3];
      $4832 = $618 * $4831;
      $4833 = $4830 + $4832;
      HEAPF64[$22>>3] = $4833;
      $4834 = +HEAPF64[$8>>3];
      $4835 = $4774 * $4834;
      $4836 = +HEAPF64[$10>>3];
      $4837 = $4778 * $4836;
      $4838 = $4835 + $4837;
      $4839 = +HEAPF64[$9>>3];
      $4840 = $4780 * $4839;
      $4841 = $4838 + $4840;
      HEAPF64[$23>>3] = $4841;
      $4842 = +HEAPF64[$13>>3];
      $4843 = $4774 * $4842;
      $4844 = +HEAPF64[$12>>3];
      $4845 = $4778 * $4844;
      $4846 = $4843 + $4845;
      $4847 = +HEAPF64[$14>>3];
      $4848 = $4780 * $4847;
      $4849 = $4846 + $4848;
      HEAPF64[$24>>3] = $4849;
      $4850 = +HEAPF64[$17>>3];
      $4851 = $4778 * $4850;
      $4852 = +HEAPF64[$16>>3];
      $4853 = $4774 * $4852;
      $4854 = $4851 + $4853;
      $4855 = +HEAPF64[$18>>3];
      $4856 = $4780 * $4855;
      $4857 = $4854 + $4856;
      HEAPF64[$25>>3] = $4857;
      $4858 = +HEAPF64[$352>>3];
      $4859 = +HEAPF64[$31>>3];
      $4860 = (+__Z5IKabsd($4858));
      $4861 = $4860 < 9.9999999999999995E-7;
      do {
       if (!($4861)) {
        $4862 = +HEAPF64[$30>>3];
        $4863 = (+__Z5IKabsd($4862));
        $4864 = $4863 < 9.9999999999999995E-7;
        if ($4864) {
         break;
        }
        $4865 = (+__Z5IKabsd($4859));
        $4866 = $4865 < 9.9999999999999995E-7;
        if ($4866) {
         break;
        }
        HEAP8[$526>>0] = 1;
        $6645 = +HEAPF64[$31>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x607,$6645,-1);
        $6646 = HEAP8[$527>>0]|0;
        $6647 = ($6646<<24>>24)==(0);
        if ($6647) {
         break L7;
        }
        $6648 = +HEAPF64[$x607>>3];
        $6649 = +HEAPF64[$352>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x608,$6649,-1);
        $6650 = HEAP8[$528>>0]|0;
        $6651 = ($6650<<24>>24)==(0);
        if ($6651) {
         break L7;
        }
        $6652 = +HEAPF64[$30>>3];
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x609,$6652,-1);
        $6653 = HEAP8[$529>>0]|0;
        $6654 = ($6653<<24>>24)==(0);
        if ($6654) {
         break L7;
        }
        $6655 = +HEAPF64[$x608>>3];
        $6656 = $6648 * $6655;
        $6657 = +HEAPF64[$x609>>3];
        $6658 = $6656 * $6657;
        $6659 = +HEAPF64[$23>>3];
        $6660 = +HEAPF64[$353>>3];
        $6661 = $6659 * $6660;
        $6662 = +HEAPF64[$15>>3];
        $6663 = +HEAPF64[$31>>3];
        $6664 = $6662 * $6663;
        $6665 = $6661 - $6664;
        $6666 = $6658 * $6665;
        $6667 = (+__Z5IKabsd($6666));
        $6668 = $6667 < 1.9999999999999999E-6;
        do {
         if ($6668) {
          $6669 = $6648 * $6659;
          $6670 = -$6669;
          $6671 = (+__Z5IKabsd($6670));
          $6672 = $6671 < 1.9999999999999999E-6;
          if (!($6672)) {
           break;
          }
          $6673 = (+__Z5IKsqrd($6666));
          $6674 = (+__Z5IKsqrd($6670));
          $6675 = $6673 + $6674;
          $6676 = $6675 + -1.0;
          $6677 = (+__Z5IKabsd($6676));
          $6678 = !($6677 <= 1.9999999999999999E-6);
          if (!($6678)) {
           break L7;
          }
         }
        } while(0);
        $6679 = +HEAPF64[$x608>>3];
        $6680 = $6648 * $6679;
        $6681 = +HEAPF64[$x609>>3];
        $6682 = $6680 * $6681;
        $6683 = +HEAPF64[$23>>3];
        $6684 = +HEAPF64[$353>>3];
        $6685 = $6683 * $6684;
        $6686 = +HEAPF64[$15>>3];
        $6687 = +HEAPF64[$31>>3];
        $6688 = $6686 * $6687;
        $6689 = $6685 - $6688;
        $6690 = $6682 * $6689;
        $6691 = $6648 * $6683;
        $6692 = -$6691;
        $6693 = (+__Z7IKatan2dd($6690,$6692));
        $6694 = (+__Z5IKsind($6693));
        $6695 = (+__Z5IKcosd($6693));
        $6696 = $6693 > 3.14159265358979;
        do {
         if ($6696) {
          $6697 = $6693 + -6.2831853071795898;
          $6700 = $6697;
         } else {
          $6698 = $6693 < -3.14159265358979;
          if (!($6698)) {
           $6700 = $6693;
           break;
          }
          $6699 = $6693 + 6.2831853071795898;
          $6700 = $6699;
         }
        } while(0);
        HEAP8[$530>>0] = 0;
        HEAP8[$531>>0] = -1;
        HEAPF64[$532>>3] = $6700;
        HEAPF64[$533>>3] = $6695;
        HEAPF64[$534>>3] = $6694;
        $6701 = +HEAPF64[$532>>3];
        $6702 = (+__Z5IKsind($6701));
        $6703 = (+__Z5IKcosd($6701));
        $6704 = +HEAPF64[$352>>3];
        $6705 = +HEAPF64[$30>>3];
        $6706 = $6704 * $6705;
        $6707 = +HEAPF64[$353>>3];
        $6708 = +HEAPF64[$21>>3];
        $6709 = $6707 * $6708;
        $6710 = +HEAPF64[$20>>3];
        $6711 = $6707 * $6710;
        $6712 = +HEAPF64[$31>>3];
        $6713 = $6702 * $6707;
        $6714 = $6703 * $6712;
        $6715 = +HEAPF64[$23>>3];
        $6716 = $6714 + $6715;
        $6717 = +HEAPF64[$24>>3];
        $6718 = +HEAPF64[$15>>3];
        $6719 = $6704 * $6718;
        $6720 = $6702 * $6705;
        $6721 = $6720 + $6719;
        $6722 = $6709 + $6721;
        $6723 = $6704 * $6710;
        $6724 = $6723 - $6702;
        $6725 = +HEAPF64[$11>>3];
        $6726 = $6707 * $6725;
        $6727 = $6724 - $6726;
        $6728 = $6704 * $6708;
        $6729 = $6728 - $6703;
        $6730 = $6707 * $6718;
        $6731 = $6729 - $6730;
        $6732 = $6703 * $6707;
        $6733 = $6732 + $6718;
        $6734 = $6702 * $6706;
        $6735 = $6734 + $6733;
        $6736 = $6704 * $6725;
        $6737 = $6703 * $6705;
        $6738 = $6736 - $6737;
        $6739 = $6711 + $6738;
        $6740 = $6703 * $6706;
        $6741 = $6713 - $6740;
        $6742 = $6741 + $6725;
        $6743 = $6705 * $6713;
        $6744 = $6708 + $6743;
        $6745 = -$6704;
        $6746 = $6703 * $6745;
        $6747 = $6746 + $6744;
        $6748 = $6737 * $6707;
        $6749 = $6710 - $6748;
        $6750 = $6702 * $6745;
        $6751 = $6750 + $6749;
        $6752 = $6712 * $6717;
        $6753 = $6705 * $6709;
        $6754 = $6753 - $6752;
        $6755 = $6702 + $6754;
        $6756 = $6706 * $6718;
        $6757 = $6756 + $6755;
        $6758 = $6705 * $6711;
        $6759 = $6758 - $6703;
        $6760 = $6712 * $6715;
        $6761 = $6759 - $6760;
        $6762 = $6706 * $6725;
        $6763 = $6761 + $6762;
        $6764 = (+__Z5IKabsd($6716));
        $6765 = $6764 > 5.0000000000000004E-6;
        if ($6765) {
         break L7;
        }
        $6766 = $6702 * $6712;
        $6767 = $6717 - $6766;
        $6768 = (+__Z5IKabsd($6767));
        $6769 = $6768 > 5.0000000000000004E-6;
        if ($6769) {
         break L7;
        }
        $6770 = (+__Z5IKabsd($6722));
        $6771 = $6770 > 5.0000000000000004E-6;
        if ($6771) {
         break L7;
        }
        $6772 = (+__Z5IKabsd($6727));
        $6773 = $6772 > 5.0000000000000004E-6;
        if ($6773) {
         break L7;
        }
        $6774 = (+__Z5IKabsd($6731));
        $6775 = $6774 > 5.0000000000000004E-6;
        if ($6775) {
         break L7;
        }
        $6776 = (+__Z5IKabsd($6735));
        $6777 = $6776 > 5.0000000000000004E-6;
        if ($6777) {
         break L7;
        }
        $6778 = (+__Z5IKabsd($6739));
        $6779 = $6778 > 5.0000000000000004E-6;
        if ($6779) {
         break L7;
        }
        $6780 = (+__Z5IKabsd($6742));
        $6781 = $6780 > 5.0000000000000004E-6;
        if ($6781) {
         break L7;
        }
        $6782 = (+__Z5IKabsd($6747));
        $6783 = $6782 > 5.0000000000000004E-6;
        if ($6783) {
         break L7;
        }
        $6784 = (+__Z5IKabsd($6751));
        $6785 = $6784 > 5.0000000000000004E-6;
        if ($6785) {
         break L7;
        }
        $6786 = (+__Z5IKabsd($6757));
        $6787 = $6786 > 5.0000000000000004E-6;
        if ($6787) {
         break L7;
        }
        $6788 = (+__Z5IKabsd($6763));
        $6789 = $6788 > 5.0000000000000004E-6;
        if ($6789) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos262,7);
        $6790 = HEAP32[$vinfos262>>2]|0;
        $6791 = ((($6790)) + 17|0);
        HEAP8[$6791>>0] = 1;
        $6792 = +HEAPF64[$this>>3];
        $6793 = HEAP32[$vinfos262>>2]|0;
        $6794 = ((($6793)) + 8|0);
        HEAPF64[$6794>>3] = $6792;
        $6795 = HEAP8[$535>>0]|0;
        $6796 = HEAP32[$vinfos262>>2]|0;
        $6797 = ((($6796)) + 19|0);
        HEAP8[$6797>>0] = $6795;
        $6798 = HEAP8[$536>>0]|0;
        $6799 = HEAP32[$vinfos262>>2]|0;
        $6800 = ((($6799)) + 20|0);
        HEAP8[$6800>>0] = $6798;
        $6801 = HEAP8[$537>>0]|0;
        $6802 = HEAP32[$vinfos262>>2]|0;
        $6803 = ((($6802)) + 18|0);
        HEAP8[$6803>>0] = $6801;
        $6804 = HEAP32[$vinfos262>>2]|0;
        $6805 = ((($6804)) + 41|0);
        HEAP8[$6805>>0] = 1;
        $6806 = +HEAPF64[$538>>3];
        $6807 = HEAP32[$vinfos262>>2]|0;
        $6808 = ((($6807)) + 32|0);
        HEAPF64[$6808>>3] = $6806;
        $6809 = HEAP8[$539>>0]|0;
        $6810 = HEAP32[$vinfos262>>2]|0;
        $6811 = ((($6810)) + 43|0);
        HEAP8[$6811>>0] = $6809;
        $6812 = HEAP8[$540>>0]|0;
        $6813 = HEAP32[$vinfos262>>2]|0;
        $6814 = ((($6813)) + 44|0);
        HEAP8[$6814>>0] = $6812;
        $6815 = HEAP8[$541>>0]|0;
        $6816 = HEAP32[$vinfos262>>2]|0;
        $6817 = ((($6816)) + 42|0);
        HEAP8[$6817>>0] = $6815;
        $6818 = HEAP32[$vinfos262>>2]|0;
        $6819 = ((($6818)) + 65|0);
        HEAP8[$6819>>0] = 1;
        $6820 = +HEAPF64[$542>>3];
        $6821 = HEAP32[$vinfos262>>2]|0;
        $6822 = ((($6821)) + 56|0);
        HEAPF64[$6822>>3] = $6820;
        $6823 = HEAP8[$543>>0]|0;
        $6824 = HEAP32[$vinfos262>>2]|0;
        $6825 = ((($6824)) + 67|0);
        HEAP8[$6825>>0] = $6823;
        $6826 = HEAP8[$544>>0]|0;
        $6827 = HEAP32[$vinfos262>>2]|0;
        $6828 = ((($6827)) + 68|0);
        HEAP8[$6828>>0] = $6826;
        $6829 = HEAP8[$545>>0]|0;
        $6830 = HEAP32[$vinfos262>>2]|0;
        $6831 = ((($6830)) + 66|0);
        HEAP8[$6831>>0] = $6829;
        $6832 = HEAP32[$vinfos262>>2]|0;
        $6833 = ((($6832)) + 89|0);
        HEAP8[$6833>>0] = 1;
        $6834 = +HEAPF64[$546>>3];
        $6835 = HEAP32[$vinfos262>>2]|0;
        $6836 = ((($6835)) + 80|0);
        HEAPF64[$6836>>3] = $6834;
        $6837 = HEAP8[$547>>0]|0;
        $6838 = HEAP32[$vinfos262>>2]|0;
        $6839 = ((($6838)) + 91|0);
        HEAP8[$6839>>0] = $6837;
        $6840 = HEAP8[$548>>0]|0;
        $6841 = HEAP32[$vinfos262>>2]|0;
        $6842 = ((($6841)) + 92|0);
        HEAP8[$6842>>0] = $6840;
        $6843 = HEAP8[$549>>0]|0;
        $6844 = HEAP32[$vinfos262>>2]|0;
        $6845 = ((($6844)) + 90|0);
        HEAP8[$6845>>0] = $6843;
        $6846 = HEAP32[$vinfos262>>2]|0;
        $6847 = ((($6846)) + 113|0);
        HEAP8[$6847>>0] = 1;
        $6848 = +HEAPF64[$351>>3];
        $6849 = HEAP32[$vinfos262>>2]|0;
        $6850 = ((($6849)) + 104|0);
        HEAPF64[$6850>>3] = $6848;
        $6851 = HEAP8[$349>>0]|0;
        $6852 = HEAP32[$vinfos262>>2]|0;
        $6853 = ((($6852)) + 115|0);
        HEAP8[$6853>>0] = $6851;
        $6854 = HEAP8[$350>>0]|0;
        $6855 = HEAP32[$vinfos262>>2]|0;
        $6856 = ((($6855)) + 116|0);
        HEAP8[$6856>>0] = $6854;
        $6857 = HEAP8[$346>>0]|0;
        $6858 = HEAP32[$vinfos262>>2]|0;
        $6859 = ((($6858)) + 114|0);
        HEAP8[$6859>>0] = $6857;
        $6860 = HEAP32[$vinfos262>>2]|0;
        $6861 = ((($6860)) + 137|0);
        HEAP8[$6861>>0] = 1;
        $6862 = +HEAPF64[$29>>3];
        $6863 = HEAP32[$vinfos262>>2]|0;
        $6864 = ((($6863)) + 128|0);
        HEAPF64[$6864>>3] = $6862;
        $6865 = HEAP8[$27>>0]|0;
        $6866 = HEAP32[$vinfos262>>2]|0;
        $6867 = ((($6866)) + 139|0);
        HEAP8[$6867>>0] = $6865;
        $6868 = HEAP8[$28>>0]|0;
        $6869 = HEAP32[$vinfos262>>2]|0;
        $6870 = ((($6869)) + 140|0);
        HEAP8[$6870>>0] = $6868;
        $6871 = HEAP8[$26>>0]|0;
        $6872 = HEAP32[$vinfos262>>2]|0;
        $6873 = ((($6872)) + 138|0);
        HEAP8[$6873>>0] = $6871;
        $6874 = HEAP32[$vinfos262>>2]|0;
        $6875 = ((($6874)) + 161|0);
        HEAP8[$6875>>0] = 1;
        $6876 = +HEAPF64[$532>>3];
        $6877 = HEAP32[$vinfos262>>2]|0;
        $6878 = ((($6877)) + 152|0);
        HEAPF64[$6878>>3] = $6876;
        $6879 = HEAP8[$530>>0]|0;
        $6880 = HEAP32[$vinfos262>>2]|0;
        $6881 = ((($6880)) + 163|0);
        HEAP8[$6881>>0] = $6879;
        $6882 = HEAP8[$531>>0]|0;
        $6883 = HEAP32[$vinfos262>>2]|0;
        $6884 = ((($6883)) + 164|0);
        HEAP8[$6884>>0] = $6882;
        $6885 = HEAP8[$526>>0]|0;
        $6886 = HEAP32[$vinfos262>>2]|0;
        $6887 = ((($6886)) + 162|0);
        HEAP8[$6887>>0] = $6885;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree263,0);
        $6888 = HEAP32[$solutions>>2]|0;
        $6889 = ((($6888)) + 8|0);
        $6890 = HEAP32[$6889>>2]|0;
        (FUNCTION_TABLE_iiii[$6890 & 31]($solutions,$vinfos262,$vfree263)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree263);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos262);
        break L7;
       }
      } while(0);
      $4867 = +HEAPF64[$30>>3];
      $4868 = +HEAPF64[$25>>3];
      $4869 = +HEAPF64[$31>>3];
      $4870 = +HEAPF64[$22>>3];
      $4871 = $4870 - $4869;
      $4872 = +HEAPF64[$351>>3];
      $4873 = $4872 + -1.5707963267949001;
      $4874 = (+__Z5IKabsd($4873));
      $4875 = $4874 + 3.14159265358979;
      $4876 = (+__Z6IKfmoddd($4875,6.2831853071795898));
      $4877 = $4876 + -3.14159265358979;
      $4878 = +HEAPF64[$19>>3];
      $4879 = +HEAPF64[$20>>3];
      $4880 = $4869 * $4879;
      $4881 = +HEAPF64[$23>>3];
      $4882 = $4867 * $4881;
      $4883 = $4880 + $4882;
      $4884 = +HEAPF64[$21>>3];
      $4885 = $4869 * $4884;
      $4886 = +HEAPF64[$24>>3];
      $4887 = $4867 * $4886;
      $4888 = $4885 + $4887;
      $4889 = $4869 * $4870;
      $4890 = $4889 + -1.0;
      $4891 = $4867 * $4868;
      $4892 = $4891 + $4890;
      $4893 = $4868 * $4869;
      $4894 = $4867 * $4870;
      $4895 = $4894 - $4893;
      $4896 = (+__Z5IKabsd($4877));
      $4897 = $4896 < 9.9999999999999995E-7;
      do {
       if ($4897) {
        $4898 = $4868 - $4867;
        $4899 = (+__Z5IKabsd($4898));
        $4900 = $4899 < 9.9999999999999995E-7;
        if (!($4900)) {
         break;
        }
        $4901 = (+__Z5IKabsd($4878));
        $4902 = $4901 < 9.9999999999999995E-7;
        if (!($4902)) {
         break;
        }
        $4903 = (+__Z5IKabsd($4871));
        $4904 = $4903 < 9.9999999999999995E-7;
        if (!($4904)) {
         break;
        }
        $4905 = (+__Z5IKabsd($4883));
        $4906 = $4905 < 9.9999999999999995E-7;
        if (!($4906)) {
         break;
        }
        $4907 = (+__Z5IKabsd($4888));
        $4908 = $4907 < 9.9999999999999995E-7;
        if (!($4908)) {
         break;
        }
        $4909 = (+__Z5IKabsd($4892));
        $4910 = $4909 < 9.9999999999999995E-7;
        if (!($4910)) {
         break;
        }
        $4911 = (+__Z5IKabsd($4895));
        $4912 = $4911 < 9.9999999999999995E-7;
        if (!($4912)) {
         break;
        }
        HEAP8[$354>>0] = 1;
        $4913 = +HEAPF64[$24>>3];
        $4914 = +HEAPF64[$23>>3];
        $4915 = -$4914;
        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x532,$4913,$4915,1.9999999999999999E-6);
        $4916 = HEAP8[$355>>0]|0;
        $4917 = ($4916<<24>>24)==(0);
        if ($4917) {
         break L7;
        }
        $4918 = +HEAPF64[$22>>3];
        $4919 = (+__Z6IKsignd($4918));
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x533,$4919,-1);
        $4920 = HEAP8[$356>>0]|0;
        $4921 = ($4920<<24>>24)==(0);
        if ($4921) {
         break L7;
        }
        $4922 = +HEAPF64[$x532>>3];
        $4923 = $4922 + -1.5707963267949001;
        $4924 = +HEAPF64[$x533>>3];
        $4925 = $4924 * 1.5707963267949001;
        $4926 = $4923 + $4925;
        $4927 = (+__Z5IKsind($4926));
        $4928 = (+__Z5IKcosd($4926));
        $4929 = $4926 > 3.14159265358979;
        do {
         if ($4929) {
          $4930 = $4926 + -6.2831853071795898;
          $4933 = $4930;
         } else {
          $4931 = $4926 < -3.14159265358979;
          if (!($4931)) {
           $4933 = $4926;
           break;
          }
          $4932 = $4926 + 6.2831853071795898;
          $4933 = $4932;
         }
        } while(0);
        HEAP8[$357>>0] = 0;
        HEAP8[$358>>0] = -1;
        HEAPF64[$359>>3] = $4933;
        HEAPF64[$360>>3] = $4928;
        HEAPF64[$361>>3] = $4927;
        $4934 = +HEAPF64[$359>>3];
        $4935 = (+__Z5IKsind($4934));
        $4936 = (+__Z5IKcosd($4934));
        $4937 = +HEAPF64[$22>>3];
        $4938 = $4936 * $4937;
        $4939 = +HEAPF64[$23>>3];
        $4940 = $4938 + $4939;
        $4941 = +HEAPF64[$25>>3];
        $4942 = +HEAPF64[$21>>3];
        $4943 = $4935 * $4937;
        $4944 = +HEAPF64[$24>>3];
        $4945 = $4944 - $4943;
        $4946 = $4936 * $4941;
        $4947 = +HEAPF64[$20>>3];
        $4948 = $4947 - $4946;
        $4949 = +HEAPF64[$11>>3];
        $4950 = -$4949;
        $4951 = $4950 - $4935;
        $4952 = +HEAPF64[$15>>3];
        $4953 = -$4952;
        $4954 = $4953 - $4936;
        $4955 = $4937 * $4944;
        $4956 = $4935 - $4955;
        $4957 = $4941 * $4942;
        $4958 = $4957 + $4956;
        $4959 = $4937 * $4939;
        $4960 = -$4959;
        $4961 = $4960 - $4936;
        $4962 = $4941 * $4947;
        $4963 = $4961 + $4962;
        $4964 = (+__Z5IKabsd($4940));
        $4965 = $4964 > 5.0000000000000004E-6;
        if ($4965) {
         break L7;
        }
        $4966 = $4935 * $4941;
        $4967 = $4966 + $4942;
        $4968 = (+__Z5IKabsd($4967));
        $4969 = $4968 > 5.0000000000000004E-6;
        if ($4969) {
         break L7;
        }
        $4970 = (+__Z5IKabsd($4945));
        $4971 = $4970 > 5.0000000000000004E-6;
        if ($4971) {
         break L7;
        }
        $4972 = (+__Z5IKabsd($4948));
        $4973 = $4972 > 5.0000000000000004E-6;
        if ($4973) {
         break L7;
        }
        $4974 = (+__Z5IKabsd($4951));
        $4975 = $4974 > 5.0000000000000004E-6;
        if ($4975) {
         break L7;
        }
        $4976 = (+__Z5IKabsd($4954));
        $4977 = $4976 > 5.0000000000000004E-6;
        if ($4977) {
         break L7;
        }
        $4978 = (+__Z5IKabsd($4958));
        $4979 = $4978 > 5.0000000000000004E-6;
        if ($4979) {
         break L7;
        }
        $4980 = (+__Z5IKabsd($4963));
        $4981 = $4980 > 5.0000000000000004E-6;
        if ($4981) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos174,7);
        $4982 = HEAP32[$vinfos174>>2]|0;
        $4983 = ((($4982)) + 17|0);
        HEAP8[$4983>>0] = 1;
        $4984 = +HEAPF64[$this>>3];
        $4985 = HEAP32[$vinfos174>>2]|0;
        $4986 = ((($4985)) + 8|0);
        HEAPF64[$4986>>3] = $4984;
        $4987 = HEAP8[$362>>0]|0;
        $4988 = HEAP32[$vinfos174>>2]|0;
        $4989 = ((($4988)) + 19|0);
        HEAP8[$4989>>0] = $4987;
        $4990 = HEAP8[$363>>0]|0;
        $4991 = HEAP32[$vinfos174>>2]|0;
        $4992 = ((($4991)) + 20|0);
        HEAP8[$4992>>0] = $4990;
        $4993 = HEAP8[$364>>0]|0;
        $4994 = HEAP32[$vinfos174>>2]|0;
        $4995 = ((($4994)) + 18|0);
        HEAP8[$4995>>0] = $4993;
        $4996 = HEAP32[$vinfos174>>2]|0;
        $4997 = ((($4996)) + 41|0);
        HEAP8[$4997>>0] = 1;
        $4998 = +HEAPF64[$365>>3];
        $4999 = HEAP32[$vinfos174>>2]|0;
        $5000 = ((($4999)) + 32|0);
        HEAPF64[$5000>>3] = $4998;
        $5001 = HEAP8[$366>>0]|0;
        $5002 = HEAP32[$vinfos174>>2]|0;
        $5003 = ((($5002)) + 43|0);
        HEAP8[$5003>>0] = $5001;
        $5004 = HEAP8[$367>>0]|0;
        $5005 = HEAP32[$vinfos174>>2]|0;
        $5006 = ((($5005)) + 44|0);
        HEAP8[$5006>>0] = $5004;
        $5007 = HEAP8[$368>>0]|0;
        $5008 = HEAP32[$vinfos174>>2]|0;
        $5009 = ((($5008)) + 42|0);
        HEAP8[$5009>>0] = $5007;
        $5010 = HEAP32[$vinfos174>>2]|0;
        $5011 = ((($5010)) + 65|0);
        HEAP8[$5011>>0] = 1;
        $5012 = +HEAPF64[$369>>3];
        $5013 = HEAP32[$vinfos174>>2]|0;
        $5014 = ((($5013)) + 56|0);
        HEAPF64[$5014>>3] = $5012;
        $5015 = HEAP8[$370>>0]|0;
        $5016 = HEAP32[$vinfos174>>2]|0;
        $5017 = ((($5016)) + 67|0);
        HEAP8[$5017>>0] = $5015;
        $5018 = HEAP8[$371>>0]|0;
        $5019 = HEAP32[$vinfos174>>2]|0;
        $5020 = ((($5019)) + 68|0);
        HEAP8[$5020>>0] = $5018;
        $5021 = HEAP8[$372>>0]|0;
        $5022 = HEAP32[$vinfos174>>2]|0;
        $5023 = ((($5022)) + 66|0);
        HEAP8[$5023>>0] = $5021;
        $5024 = HEAP32[$vinfos174>>2]|0;
        $5025 = ((($5024)) + 89|0);
        HEAP8[$5025>>0] = 1;
        $5026 = +HEAPF64[$373>>3];
        $5027 = HEAP32[$vinfos174>>2]|0;
        $5028 = ((($5027)) + 80|0);
        HEAPF64[$5028>>3] = $5026;
        $5029 = HEAP8[$374>>0]|0;
        $5030 = HEAP32[$vinfos174>>2]|0;
        $5031 = ((($5030)) + 91|0);
        HEAP8[$5031>>0] = $5029;
        $5032 = HEAP8[$375>>0]|0;
        $5033 = HEAP32[$vinfos174>>2]|0;
        $5034 = ((($5033)) + 92|0);
        HEAP8[$5034>>0] = $5032;
        $5035 = HEAP8[$376>>0]|0;
        $5036 = HEAP32[$vinfos174>>2]|0;
        $5037 = ((($5036)) + 90|0);
        HEAP8[$5037>>0] = $5035;
        $5038 = HEAP32[$vinfos174>>2]|0;
        $5039 = ((($5038)) + 113|0);
        HEAP8[$5039>>0] = 1;
        $5040 = +HEAPF64[$351>>3];
        $5041 = HEAP32[$vinfos174>>2]|0;
        $5042 = ((($5041)) + 104|0);
        HEAPF64[$5042>>3] = $5040;
        $5043 = HEAP8[$349>>0]|0;
        $5044 = HEAP32[$vinfos174>>2]|0;
        $5045 = ((($5044)) + 115|0);
        HEAP8[$5045>>0] = $5043;
        $5046 = HEAP8[$350>>0]|0;
        $5047 = HEAP32[$vinfos174>>2]|0;
        $5048 = ((($5047)) + 116|0);
        HEAP8[$5048>>0] = $5046;
        $5049 = HEAP8[$346>>0]|0;
        $5050 = HEAP32[$vinfos174>>2]|0;
        $5051 = ((($5050)) + 114|0);
        HEAP8[$5051>>0] = $5049;
        $5052 = HEAP32[$vinfos174>>2]|0;
        $5053 = ((($5052)) + 137|0);
        HEAP8[$5053>>0] = 1;
        $5054 = +HEAPF64[$29>>3];
        $5055 = HEAP32[$vinfos174>>2]|0;
        $5056 = ((($5055)) + 128|0);
        HEAPF64[$5056>>3] = $5054;
        $5057 = HEAP8[$27>>0]|0;
        $5058 = HEAP32[$vinfos174>>2]|0;
        $5059 = ((($5058)) + 139|0);
        HEAP8[$5059>>0] = $5057;
        $5060 = HEAP8[$28>>0]|0;
        $5061 = HEAP32[$vinfos174>>2]|0;
        $5062 = ((($5061)) + 140|0);
        HEAP8[$5062>>0] = $5060;
        $5063 = HEAP8[$26>>0]|0;
        $5064 = HEAP32[$vinfos174>>2]|0;
        $5065 = ((($5064)) + 138|0);
        HEAP8[$5065>>0] = $5063;
        $5066 = HEAP32[$vinfos174>>2]|0;
        $5067 = ((($5066)) + 161|0);
        HEAP8[$5067>>0] = 1;
        $5068 = +HEAPF64[$359>>3];
        $5069 = HEAP32[$vinfos174>>2]|0;
        $5070 = ((($5069)) + 152|0);
        HEAPF64[$5070>>3] = $5068;
        $5071 = HEAP8[$357>>0]|0;
        $5072 = HEAP32[$vinfos174>>2]|0;
        $5073 = ((($5072)) + 163|0);
        HEAP8[$5073>>0] = $5071;
        $5074 = HEAP8[$358>>0]|0;
        $5075 = HEAP32[$vinfos174>>2]|0;
        $5076 = ((($5075)) + 164|0);
        HEAP8[$5076>>0] = $5074;
        $5077 = HEAP8[$354>>0]|0;
        $5078 = HEAP32[$vinfos174>>2]|0;
        $5079 = ((($5078)) + 162|0);
        HEAP8[$5079>>0] = $5077;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree175,0);
        $5080 = HEAP32[$solutions>>2]|0;
        $5081 = ((($5080)) + 8|0);
        $5082 = HEAP32[$5081>>2]|0;
        (FUNCTION_TABLE_iiii[$5082 & 31]($solutions,$vinfos174,$vfree175)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree175);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos174);
        break L7;
       }
      } while(0);
      $5083 = +HEAPF64[$30>>3];
      $5084 = +HEAPF64[$25>>3];
      $5085 = +HEAPF64[$31>>3];
      $5086 = +HEAPF64[$22>>3];
      $5087 = +HEAPF64[$351>>3];
      $5088 = $5087 + 1.5707963267949001;
      $5089 = (+__Z5IKabsd($5088));
      $5090 = $5089 + 3.14159265358979;
      $5091 = (+__Z6IKfmoddd($5090,6.2831853071795898));
      $5092 = $5091 + -3.14159265358979;
      $5093 = +HEAPF64[$19>>3];
      $5094 = $5085 + $5086;
      $5095 = -$5085;
      $5096 = $5095 - $5086;
      $5097 = +HEAPF64[$20>>3];
      $5098 = $5085 * $5097;
      $5099 = +HEAPF64[$23>>3];
      $5100 = $5083 * $5099;
      $5101 = $5100 - $5098;
      $5102 = +HEAPF64[$21>>3];
      $5103 = $5085 * $5102;
      $5104 = +HEAPF64[$24>>3];
      $5105 = $5083 * $5104;
      $5106 = $5105 - $5103;
      $5107 = $5085 * $5086;
      $5108 = -1.0 - $5107;
      $5109 = $5083 * $5084;
      $5110 = $5109 + $5108;
      $5111 = $5083 * $5086;
      $5112 = $5084 * $5085;
      $5113 = -$5112;
      $5114 = $5113 - $5111;
      $5115 = (+__Z5IKabsd($5092));
      $5116 = $5115 < 9.9999999999999995E-7;
      do {
       if ($5116) {
        $5117 = $5084 - $5083;
        $5118 = (+__Z5IKabsd($5117));
        $5119 = $5118 < 9.9999999999999995E-7;
        if (!($5119)) {
         break;
        }
        $5120 = (+__Z5IKabsd($5093));
        $5121 = $5120 < 9.9999999999999995E-7;
        if (!($5121)) {
         break;
        }
        $5122 = (+__Z5IKabsd($5094));
        $5123 = $5122 < 9.9999999999999995E-7;
        if (!($5123)) {
         break;
        }
        $5124 = (+__Z5IKabsd($5096));
        $5125 = $5124 < 9.9999999999999995E-7;
        if (!($5125)) {
         break;
        }
        $5126 = (+__Z5IKabsd($5101));
        $5127 = $5126 < 9.9999999999999995E-7;
        if (!($5127)) {
         break;
        }
        $5128 = (+__Z5IKabsd($5106));
        $5129 = $5128 < 9.9999999999999995E-7;
        if (!($5129)) {
         break;
        }
        $5130 = (+__Z5IKabsd($5110));
        $5131 = $5130 < 9.9999999999999995E-7;
        if (!($5131)) {
         break;
        }
        $5132 = (+__Z5IKabsd($5114));
        $5133 = $5132 < 9.9999999999999995E-7;
        if (!($5133)) {
         break;
        }
        HEAP8[$377>>0] = 1;
        $5134 = +HEAPF64[$11>>3];
        $5135 = (+__Z5IKabsd($5134));
        $5136 = $5135 < 1.9999999999999999E-6;
        do {
         if ($5136) {
          $5137 = +HEAPF64[$15>>3];
          $5138 = (+__Z5IKabsd($5137));
          $5139 = $5138 < 1.9999999999999999E-6;
          if (!($5139)) {
           break;
          }
          $5140 = (+__Z5IKsqrd($5134));
          $5141 = (+__Z5IKsqrd($5137));
          $5142 = $5140 + $5141;
          $5143 = $5142 + -1.0;
          $5144 = (+__Z5IKabsd($5143));
          $5145 = !($5144 <= 1.9999999999999999E-6);
          if (!($5145)) {
           break L7;
          }
         }
        } while(0);
        $5146 = +HEAPF64[$11>>3];
        $5147 = +HEAPF64[$15>>3];
        $5148 = (+__Z7IKatan2dd($5146,$5147));
        $5149 = (+__Z5IKsind($5148));
        $5150 = (+__Z5IKcosd($5148));
        $5151 = $5148 > 3.14159265358979;
        do {
         if ($5151) {
          $5152 = $5148 + -6.2831853071795898;
          $5155 = $5152;
         } else {
          $5153 = $5148 < -3.14159265358979;
          if (!($5153)) {
           $5155 = $5148;
           break;
          }
          $5154 = $5148 + 6.2831853071795898;
          $5155 = $5154;
         }
        } while(0);
        HEAP8[$378>>0] = 0;
        HEAP8[$379>>0] = -1;
        HEAPF64[$380>>3] = $5155;
        HEAPF64[$381>>3] = $5150;
        HEAPF64[$382>>3] = $5149;
        $5156 = +HEAPF64[$380>>3];
        $5157 = (+__Z5IKsind($5156));
        $5158 = (+__Z5IKcosd($5156));
        $5159 = +HEAPF64[$20>>3];
        $5160 = +HEAPF64[$21>>3];
        $5161 = +HEAPF64[$22>>3];
        $5162 = $5157 * $5161;
        $5163 = +HEAPF64[$24>>3];
        $5164 = $5162 + $5163;
        $5165 = +HEAPF64[$15>>3];
        $5166 = $5165 - $5158;
        $5167 = $5158 * $5161;
        $5168 = +HEAPF64[$23>>3];
        $5169 = $5168 - $5167;
        $5170 = +HEAPF64[$25>>3];
        $5171 = $5157 * $5170;
        $5172 = $5171 - $5160;
        $5173 = -$5170;
        $5174 = $5158 * $5173;
        $5175 = $5174 - $5159;
        $5176 = $5160 * $5173;
        $5177 = $5161 * $5163;
        $5178 = $5177 + $5176;
        $5179 = $5157 + $5178;
        $5180 = $5159 * $5173;
        $5181 = $5180 - $5158;
        $5182 = $5161 * $5168;
        $5183 = $5182 + $5181;
        $5184 = (+__Z5IKabsd($5164));
        $5185 = $5184 > 5.0000000000000004E-6;
        if ($5185) {
         break L7;
        }
        $5186 = +HEAPF64[$11>>3];
        $5187 = $5186 - $5157;
        $5188 = (+__Z5IKabsd($5187));
        $5189 = $5188 > 5.0000000000000004E-6;
        if ($5189) {
         break L7;
        }
        $5190 = (+__Z5IKabsd($5166));
        $5191 = $5190 > 5.0000000000000004E-6;
        if ($5191) {
         break L7;
        }
        $5192 = (+__Z5IKabsd($5169));
        $5193 = $5192 > 5.0000000000000004E-6;
        if ($5193) {
         break L7;
        }
        $5194 = (+__Z5IKabsd($5172));
        $5195 = $5194 > 5.0000000000000004E-6;
        if ($5195) {
         break L7;
        }
        $5196 = (+__Z5IKabsd($5175));
        $5197 = $5196 > 5.0000000000000004E-6;
        if ($5197) {
         break L7;
        }
        $5198 = (+__Z5IKabsd($5179));
        $5199 = $5198 > 5.0000000000000004E-6;
        if ($5199) {
         break L7;
        }
        $5200 = (+__Z5IKabsd($5183));
        $5201 = $5200 > 5.0000000000000004E-6;
        if ($5201) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos185,7);
        $5202 = HEAP32[$vinfos185>>2]|0;
        $5203 = ((($5202)) + 17|0);
        HEAP8[$5203>>0] = 1;
        $5204 = +HEAPF64[$this>>3];
        $5205 = HEAP32[$vinfos185>>2]|0;
        $5206 = ((($5205)) + 8|0);
        HEAPF64[$5206>>3] = $5204;
        $5207 = HEAP8[$383>>0]|0;
        $5208 = HEAP32[$vinfos185>>2]|0;
        $5209 = ((($5208)) + 19|0);
        HEAP8[$5209>>0] = $5207;
        $5210 = HEAP8[$384>>0]|0;
        $5211 = HEAP32[$vinfos185>>2]|0;
        $5212 = ((($5211)) + 20|0);
        HEAP8[$5212>>0] = $5210;
        $5213 = HEAP8[$385>>0]|0;
        $5214 = HEAP32[$vinfos185>>2]|0;
        $5215 = ((($5214)) + 18|0);
        HEAP8[$5215>>0] = $5213;
        $5216 = HEAP32[$vinfos185>>2]|0;
        $5217 = ((($5216)) + 41|0);
        HEAP8[$5217>>0] = 1;
        $5218 = +HEAPF64[$386>>3];
        $5219 = HEAP32[$vinfos185>>2]|0;
        $5220 = ((($5219)) + 32|0);
        HEAPF64[$5220>>3] = $5218;
        $5221 = HEAP8[$387>>0]|0;
        $5222 = HEAP32[$vinfos185>>2]|0;
        $5223 = ((($5222)) + 43|0);
        HEAP8[$5223>>0] = $5221;
        $5224 = HEAP8[$388>>0]|0;
        $5225 = HEAP32[$vinfos185>>2]|0;
        $5226 = ((($5225)) + 44|0);
        HEAP8[$5226>>0] = $5224;
        $5227 = HEAP8[$389>>0]|0;
        $5228 = HEAP32[$vinfos185>>2]|0;
        $5229 = ((($5228)) + 42|0);
        HEAP8[$5229>>0] = $5227;
        $5230 = HEAP32[$vinfos185>>2]|0;
        $5231 = ((($5230)) + 65|0);
        HEAP8[$5231>>0] = 1;
        $5232 = +HEAPF64[$390>>3];
        $5233 = HEAP32[$vinfos185>>2]|0;
        $5234 = ((($5233)) + 56|0);
        HEAPF64[$5234>>3] = $5232;
        $5235 = HEAP8[$391>>0]|0;
        $5236 = HEAP32[$vinfos185>>2]|0;
        $5237 = ((($5236)) + 67|0);
        HEAP8[$5237>>0] = $5235;
        $5238 = HEAP8[$392>>0]|0;
        $5239 = HEAP32[$vinfos185>>2]|0;
        $5240 = ((($5239)) + 68|0);
        HEAP8[$5240>>0] = $5238;
        $5241 = HEAP8[$393>>0]|0;
        $5242 = HEAP32[$vinfos185>>2]|0;
        $5243 = ((($5242)) + 66|0);
        HEAP8[$5243>>0] = $5241;
        $5244 = HEAP32[$vinfos185>>2]|0;
        $5245 = ((($5244)) + 89|0);
        HEAP8[$5245>>0] = 1;
        $5246 = +HEAPF64[$394>>3];
        $5247 = HEAP32[$vinfos185>>2]|0;
        $5248 = ((($5247)) + 80|0);
        HEAPF64[$5248>>3] = $5246;
        $5249 = HEAP8[$395>>0]|0;
        $5250 = HEAP32[$vinfos185>>2]|0;
        $5251 = ((($5250)) + 91|0);
        HEAP8[$5251>>0] = $5249;
        $5252 = HEAP8[$396>>0]|0;
        $5253 = HEAP32[$vinfos185>>2]|0;
        $5254 = ((($5253)) + 92|0);
        HEAP8[$5254>>0] = $5252;
        $5255 = HEAP8[$397>>0]|0;
        $5256 = HEAP32[$vinfos185>>2]|0;
        $5257 = ((($5256)) + 90|0);
        HEAP8[$5257>>0] = $5255;
        $5258 = HEAP32[$vinfos185>>2]|0;
        $5259 = ((($5258)) + 113|0);
        HEAP8[$5259>>0] = 1;
        $5260 = +HEAPF64[$351>>3];
        $5261 = HEAP32[$vinfos185>>2]|0;
        $5262 = ((($5261)) + 104|0);
        HEAPF64[$5262>>3] = $5260;
        $5263 = HEAP8[$349>>0]|0;
        $5264 = HEAP32[$vinfos185>>2]|0;
        $5265 = ((($5264)) + 115|0);
        HEAP8[$5265>>0] = $5263;
        $5266 = HEAP8[$350>>0]|0;
        $5267 = HEAP32[$vinfos185>>2]|0;
        $5268 = ((($5267)) + 116|0);
        HEAP8[$5268>>0] = $5266;
        $5269 = HEAP8[$346>>0]|0;
        $5270 = HEAP32[$vinfos185>>2]|0;
        $5271 = ((($5270)) + 114|0);
        HEAP8[$5271>>0] = $5269;
        $5272 = HEAP32[$vinfos185>>2]|0;
        $5273 = ((($5272)) + 137|0);
        HEAP8[$5273>>0] = 1;
        $5274 = +HEAPF64[$29>>3];
        $5275 = HEAP32[$vinfos185>>2]|0;
        $5276 = ((($5275)) + 128|0);
        HEAPF64[$5276>>3] = $5274;
        $5277 = HEAP8[$27>>0]|0;
        $5278 = HEAP32[$vinfos185>>2]|0;
        $5279 = ((($5278)) + 139|0);
        HEAP8[$5279>>0] = $5277;
        $5280 = HEAP8[$28>>0]|0;
        $5281 = HEAP32[$vinfos185>>2]|0;
        $5282 = ((($5281)) + 140|0);
        HEAP8[$5282>>0] = $5280;
        $5283 = HEAP8[$26>>0]|0;
        $5284 = HEAP32[$vinfos185>>2]|0;
        $5285 = ((($5284)) + 138|0);
        HEAP8[$5285>>0] = $5283;
        $5286 = HEAP32[$vinfos185>>2]|0;
        $5287 = ((($5286)) + 161|0);
        HEAP8[$5287>>0] = 1;
        $5288 = +HEAPF64[$380>>3];
        $5289 = HEAP32[$vinfos185>>2]|0;
        $5290 = ((($5289)) + 152|0);
        HEAPF64[$5290>>3] = $5288;
        $5291 = HEAP8[$378>>0]|0;
        $5292 = HEAP32[$vinfos185>>2]|0;
        $5293 = ((($5292)) + 163|0);
        HEAP8[$5293>>0] = $5291;
        $5294 = HEAP8[$379>>0]|0;
        $5295 = HEAP32[$vinfos185>>2]|0;
        $5296 = ((($5295)) + 164|0);
        HEAP8[$5296>>0] = $5294;
        $5297 = HEAP8[$377>>0]|0;
        $5298 = HEAP32[$vinfos185>>2]|0;
        $5299 = ((($5298)) + 162|0);
        HEAP8[$5299>>0] = $5297;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree186,0);
        $5300 = HEAP32[$solutions>>2]|0;
        $5301 = ((($5300)) + 8|0);
        $5302 = HEAP32[$5301>>2]|0;
        (FUNCTION_TABLE_iiii[$5302 & 31]($solutions,$vinfos185,$vfree186)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree186);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos185);
        break L7;
       }
      } while(0);
      $5303 = +HEAPF64[$353>>3];
      $5304 = +HEAPF64[$352>>3];
      $5305 = +HEAPF64[$22>>3];
      $5306 = $5304 * $5305;
      $5307 = +HEAPF64[$19>>3];
      $5308 = $5303 * $5307;
      $5309 = $5306 - $5308;
      $5310 = +HEAPF64[$11>>3];
      $5311 = $5304 * $5310;
      $5312 = +HEAPF64[$20>>3];
      $5313 = $5303 * $5312;
      $5314 = $5311 + $5313;
      $5315 = +HEAPF64[$15>>3];
      $5316 = $5304 * $5315;
      $5317 = +HEAPF64[$21>>3];
      $5318 = $5303 * $5317;
      $5319 = $5316 + $5318;
      $5320 = $5304 * $5307;
      $5321 = $5320 + -1.0;
      $5322 = $5303 * $5305;
      $5323 = $5322 + $5321;
      $5324 = +HEAPF64[$29>>3];
      $5325 = $5324 + -1.5707963267949001;
      $5326 = (+__Z5IKabsd($5325));
      $5327 = $5326 + 3.14159265358979;
      $5328 = (+__Z6IKfmoddd($5327,6.2831853071795898));
      $5329 = $5328 + -3.14159265358979;
      $5330 = $5307 - $5304;
      $5331 = $5305 - $5303;
      $5332 = (+__Z5IKabsd($5329));
      $5333 = $5332 < 9.9999999999999995E-7;
      do {
       if ($5333) {
        $5334 = +HEAPF64[$25>>3];
        $5335 = (+__Z5IKabsd($5334));
        $5336 = $5335 < 9.9999999999999995E-7;
        if (!($5336)) {
         break;
        }
        $5337 = (+__Z5IKabsd($5330));
        $5338 = $5337 < 9.9999999999999995E-7;
        if (!($5338)) {
         break;
        }
        $5339 = (+__Z5IKabsd($5331));
        $5340 = $5339 < 9.9999999999999995E-7;
        if (!($5340)) {
         break;
        }
        $5341 = (+__Z5IKabsd($5309));
        $5342 = $5341 < 9.9999999999999995E-7;
        if (!($5342)) {
         break;
        }
        $5343 = (+__Z5IKabsd($5323));
        $5344 = $5343 < 9.9999999999999995E-7;
        if (!($5344)) {
         break;
        }
        $5345 = (+__Z5IKabsd($5319));
        $5346 = $5345 < 9.9999999999999995E-7;
        if (!($5346)) {
         break;
        }
        $5347 = (+__Z5IKabsd($5314));
        $5348 = $5347 < 9.9999999999999995E-7;
        if (!($5348)) {
         break;
        }
        HEAP8[$398>>0] = 1;
        $5349 = +HEAPF64[$24>>3];
        $5350 = (+__Z5IKabsd($5349));
        $5351 = $5350 < 1.9999999999999999E-6;
        do {
         if ($5351) {
          $5352 = +HEAPF64[$23>>3];
          $5353 = -$5352;
          $5354 = (+__Z5IKabsd($5353));
          $5355 = $5354 < 1.9999999999999999E-6;
          if (!($5355)) {
           break;
          }
          $5356 = (+__Z5IKsqrd($5349));
          $5357 = (+__Z5IKsqrd($5353));
          $5358 = $5356 + $5357;
          $5359 = $5358 + -1.0;
          $5360 = (+__Z5IKabsd($5359));
          $5361 = !($5360 <= 1.9999999999999999E-6);
          if (!($5361)) {
           break L7;
          }
         }
        } while(0);
        $5362 = +HEAPF64[$24>>3];
        $5363 = +HEAPF64[$23>>3];
        $5364 = -$5363;
        $5365 = (+__Z7IKatan2dd($5362,$5364));
        $5366 = (+__Z5IKsind($5365));
        $5367 = (+__Z5IKcosd($5365));
        $5368 = $5365 > 3.14159265358979;
        do {
         if ($5368) {
          $5369 = $5365 + -6.2831853071795898;
          $5372 = $5369;
         } else {
          $5370 = $5365 < -3.14159265358979;
          if (!($5370)) {
           $5372 = $5365;
           break;
          }
          $5371 = $5365 + 6.2831853071795898;
          $5372 = $5371;
         }
        } while(0);
        HEAP8[$399>>0] = 0;
        HEAP8[$400>>0] = -1;
        HEAPF64[$401>>3] = $5372;
        HEAPF64[$402>>3] = $5367;
        HEAPF64[$403>>3] = $5366;
        $5373 = +HEAPF64[$401>>3];
        $5374 = (+__Z5IKcosd($5373));
        $5375 = (+__Z5IKsind($5373));
        $5376 = +HEAPF64[$22>>3];
        $5377 = +HEAPF64[$23>>3];
        $5378 = $5374 + $5377;
        $5379 = -$5375;
        $5380 = $5374 * $5376;
        $5381 = +HEAPF64[$15>>3];
        $5382 = $5380 + $5381;
        $5383 = $5375 * $5376;
        $5384 = +HEAPF64[$11>>3];
        $5385 = $5383 + $5384;
        $5386 = +HEAPF64[$21>>3];
        $5387 = +HEAPF64[$19>>3];
        $5388 = -$5387;
        $5389 = $5374 * $5388;
        $5390 = $5386 + $5389;
        $5391 = +HEAPF64[$20>>3];
        $5392 = $5375 * $5388;
        $5393 = $5391 + $5392;
        $5394 = $5376 * $5384;
        $5395 = $5379 - $5394;
        $5396 = $5387 * $5391;
        $5397 = $5395 + $5396;
        $5398 = $5376 * $5381;
        $5399 = -$5374;
        $5400 = $5399 - $5398;
        $5401 = $5386 * $5387;
        $5402 = $5400 + $5401;
        $5403 = (+__Z5IKabsd($5378));
        $5404 = $5403 > 5.0000000000000004E-6;
        if ($5404) {
         break L7;
        }
        $5405 = +HEAPF64[$24>>3];
        $5406 = $5405 - $5375;
        $5407 = (+__Z5IKabsd($5406));
        $5408 = $5407 > 5.0000000000000004E-6;
        if ($5408) {
         break L7;
        }
        $5409 = (+__Z5IKabsd($5382));
        $5410 = $5409 > 5.0000000000000004E-6;
        if ($5410) {
         break L7;
        }
        $5411 = (+__Z5IKabsd($5385));
        $5412 = $5411 > 5.0000000000000004E-6;
        if ($5412) {
         break L7;
        }
        $5413 = (+__Z5IKabsd($5390));
        $5414 = $5413 > 5.0000000000000004E-6;
        if ($5414) {
         break L7;
        }
        $5415 = (+__Z5IKabsd($5393));
        $5416 = $5415 > 5.0000000000000004E-6;
        if ($5416) {
         break L7;
        }
        $5417 = (+__Z5IKabsd($5397));
        $5418 = $5417 > 5.0000000000000004E-6;
        if ($5418) {
         break L7;
        }
        $5419 = (+__Z5IKabsd($5402));
        $5420 = $5419 > 5.0000000000000004E-6;
        if ($5420) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos196,7);
        $5421 = HEAP32[$vinfos196>>2]|0;
        $5422 = ((($5421)) + 17|0);
        HEAP8[$5422>>0] = 1;
        $5423 = +HEAPF64[$this>>3];
        $5424 = HEAP32[$vinfos196>>2]|0;
        $5425 = ((($5424)) + 8|0);
        HEAPF64[$5425>>3] = $5423;
        $5426 = HEAP8[$404>>0]|0;
        $5427 = HEAP32[$vinfos196>>2]|0;
        $5428 = ((($5427)) + 19|0);
        HEAP8[$5428>>0] = $5426;
        $5429 = HEAP8[$405>>0]|0;
        $5430 = HEAP32[$vinfos196>>2]|0;
        $5431 = ((($5430)) + 20|0);
        HEAP8[$5431>>0] = $5429;
        $5432 = HEAP8[$406>>0]|0;
        $5433 = HEAP32[$vinfos196>>2]|0;
        $5434 = ((($5433)) + 18|0);
        HEAP8[$5434>>0] = $5432;
        $5435 = HEAP32[$vinfos196>>2]|0;
        $5436 = ((($5435)) + 41|0);
        HEAP8[$5436>>0] = 1;
        $5437 = +HEAPF64[$407>>3];
        $5438 = HEAP32[$vinfos196>>2]|0;
        $5439 = ((($5438)) + 32|0);
        HEAPF64[$5439>>3] = $5437;
        $5440 = HEAP8[$408>>0]|0;
        $5441 = HEAP32[$vinfos196>>2]|0;
        $5442 = ((($5441)) + 43|0);
        HEAP8[$5442>>0] = $5440;
        $5443 = HEAP8[$409>>0]|0;
        $5444 = HEAP32[$vinfos196>>2]|0;
        $5445 = ((($5444)) + 44|0);
        HEAP8[$5445>>0] = $5443;
        $5446 = HEAP8[$410>>0]|0;
        $5447 = HEAP32[$vinfos196>>2]|0;
        $5448 = ((($5447)) + 42|0);
        HEAP8[$5448>>0] = $5446;
        $5449 = HEAP32[$vinfos196>>2]|0;
        $5450 = ((($5449)) + 65|0);
        HEAP8[$5450>>0] = 1;
        $5451 = +HEAPF64[$411>>3];
        $5452 = HEAP32[$vinfos196>>2]|0;
        $5453 = ((($5452)) + 56|0);
        HEAPF64[$5453>>3] = $5451;
        $5454 = HEAP8[$412>>0]|0;
        $5455 = HEAP32[$vinfos196>>2]|0;
        $5456 = ((($5455)) + 67|0);
        HEAP8[$5456>>0] = $5454;
        $5457 = HEAP8[$413>>0]|0;
        $5458 = HEAP32[$vinfos196>>2]|0;
        $5459 = ((($5458)) + 68|0);
        HEAP8[$5459>>0] = $5457;
        $5460 = HEAP8[$414>>0]|0;
        $5461 = HEAP32[$vinfos196>>2]|0;
        $5462 = ((($5461)) + 66|0);
        HEAP8[$5462>>0] = $5460;
        $5463 = HEAP32[$vinfos196>>2]|0;
        $5464 = ((($5463)) + 89|0);
        HEAP8[$5464>>0] = 1;
        $5465 = +HEAPF64[$415>>3];
        $5466 = HEAP32[$vinfos196>>2]|0;
        $5467 = ((($5466)) + 80|0);
        HEAPF64[$5467>>3] = $5465;
        $5468 = HEAP8[$416>>0]|0;
        $5469 = HEAP32[$vinfos196>>2]|0;
        $5470 = ((($5469)) + 91|0);
        HEAP8[$5470>>0] = $5468;
        $5471 = HEAP8[$417>>0]|0;
        $5472 = HEAP32[$vinfos196>>2]|0;
        $5473 = ((($5472)) + 92|0);
        HEAP8[$5473>>0] = $5471;
        $5474 = HEAP8[$418>>0]|0;
        $5475 = HEAP32[$vinfos196>>2]|0;
        $5476 = ((($5475)) + 90|0);
        HEAP8[$5476>>0] = $5474;
        $5477 = HEAP32[$vinfos196>>2]|0;
        $5478 = ((($5477)) + 113|0);
        HEAP8[$5478>>0] = 1;
        $5479 = +HEAPF64[$351>>3];
        $5480 = HEAP32[$vinfos196>>2]|0;
        $5481 = ((($5480)) + 104|0);
        HEAPF64[$5481>>3] = $5479;
        $5482 = HEAP8[$349>>0]|0;
        $5483 = HEAP32[$vinfos196>>2]|0;
        $5484 = ((($5483)) + 115|0);
        HEAP8[$5484>>0] = $5482;
        $5485 = HEAP8[$350>>0]|0;
        $5486 = HEAP32[$vinfos196>>2]|0;
        $5487 = ((($5486)) + 116|0);
        HEAP8[$5487>>0] = $5485;
        $5488 = HEAP8[$346>>0]|0;
        $5489 = HEAP32[$vinfos196>>2]|0;
        $5490 = ((($5489)) + 114|0);
        HEAP8[$5490>>0] = $5488;
        $5491 = HEAP32[$vinfos196>>2]|0;
        $5492 = ((($5491)) + 137|0);
        HEAP8[$5492>>0] = 1;
        $5493 = +HEAPF64[$29>>3];
        $5494 = HEAP32[$vinfos196>>2]|0;
        $5495 = ((($5494)) + 128|0);
        HEAPF64[$5495>>3] = $5493;
        $5496 = HEAP8[$27>>0]|0;
        $5497 = HEAP32[$vinfos196>>2]|0;
        $5498 = ((($5497)) + 139|0);
        HEAP8[$5498>>0] = $5496;
        $5499 = HEAP8[$28>>0]|0;
        $5500 = HEAP32[$vinfos196>>2]|0;
        $5501 = ((($5500)) + 140|0);
        HEAP8[$5501>>0] = $5499;
        $5502 = HEAP8[$26>>0]|0;
        $5503 = HEAP32[$vinfos196>>2]|0;
        $5504 = ((($5503)) + 138|0);
        HEAP8[$5504>>0] = $5502;
        $5505 = HEAP32[$vinfos196>>2]|0;
        $5506 = ((($5505)) + 161|0);
        HEAP8[$5506>>0] = 1;
        $5507 = +HEAPF64[$401>>3];
        $5508 = HEAP32[$vinfos196>>2]|0;
        $5509 = ((($5508)) + 152|0);
        HEAPF64[$5509>>3] = $5507;
        $5510 = HEAP8[$399>>0]|0;
        $5511 = HEAP32[$vinfos196>>2]|0;
        $5512 = ((($5511)) + 163|0);
        HEAP8[$5512>>0] = $5510;
        $5513 = HEAP8[$400>>0]|0;
        $5514 = HEAP32[$vinfos196>>2]|0;
        $5515 = ((($5514)) + 164|0);
        HEAP8[$5515>>0] = $5513;
        $5516 = HEAP8[$398>>0]|0;
        $5517 = HEAP32[$vinfos196>>2]|0;
        $5518 = ((($5517)) + 162|0);
        HEAP8[$5518>>0] = $5516;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree197,0);
        $5519 = HEAP32[$solutions>>2]|0;
        $5520 = ((($5519)) + 8|0);
        $5521 = HEAP32[$5520>>2]|0;
        (FUNCTION_TABLE_iiii[$5521 & 31]($solutions,$vinfos196,$vfree197)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree197);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos196);
        break L7;
       }
      } while(0);
      $5522 = +HEAPF64[$20>>3];
      $5523 = +HEAPF64[$353>>3];
      $5524 = $5522 * $5523;
      $5525 = +HEAPF64[$352>>3];
      $5526 = +HEAPF64[$11>>3];
      $5527 = $5525 * $5526;
      $5528 = +HEAPF64[$19>>3];
      $5529 = $5525 * $5528;
      $5530 = +HEAPF64[$21>>3];
      $5531 = $5523 * $5530;
      $5532 = +HEAPF64[$22>>3];
      $5533 = $5523 * $5532;
      $5534 = +HEAPF64[$15>>3];
      $5535 = $5525 * $5534;
      $5536 = $5525 * $5532;
      $5537 = $5523 * $5528;
      $5538 = $5536 - $5537;
      $5539 = +HEAPF64[$29>>3];
      $5540 = $5539 + 1.5707963267949001;
      $5541 = (+__Z5IKabsd($5540));
      $5542 = $5541 + 3.14159265358979;
      $5543 = (+__Z6IKfmoddd($5542,6.2831853071795898));
      $5544 = $5543 + -3.14159265358979;
      $5545 = $5525 + $5528;
      $5546 = $5523 + $5532;
      $5547 = $5529 + 1.0;
      $5548 = $5547 + $5533;
      $5549 = $5531 + $5535;
      $5550 = $5524 + $5527;
      $5551 = -$5527;
      $5552 = $5551 - $5524;
      $5553 = -$5535;
      $5554 = $5553 - $5531;
      $5555 = -1.0 - $5529;
      $5556 = $5555 - $5533;
      $5557 = (+__Z5IKabsd($5544));
      $5558 = $5557 < 9.9999999999999995E-7;
      do {
       if ($5558) {
        $5559 = +HEAPF64[$25>>3];
        $5560 = (+__Z5IKabsd($5559));
        $5561 = $5560 < 9.9999999999999995E-7;
        if (!($5561)) {
         break;
        }
        $5562 = (+__Z5IKabsd($5545));
        $5563 = $5562 < 9.9999999999999995E-7;
        if (!($5563)) {
         break;
        }
        $5564 = (+__Z5IKabsd($5546));
        $5565 = $5564 < 9.9999999999999995E-7;
        if (!($5565)) {
         break;
        }
        $5566 = (+__Z5IKabsd($5538));
        $5567 = $5566 < 9.9999999999999995E-7;
        if (!($5567)) {
         break;
        }
        $5568 = (+__Z5IKabsd($5548));
        $5569 = $5568 < 9.9999999999999995E-7;
        if (!($5569)) {
         break;
        }
        $5570 = (+__Z5IKabsd($5549));
        $5571 = $5570 < 9.9999999999999995E-7;
        if (!($5571)) {
         break;
        }
        $5572 = (+__Z5IKabsd($5550));
        $5573 = $5572 < 9.9999999999999995E-7;
        if (!($5573)) {
         break;
        }
        $5574 = (+__Z5IKabsd($5552));
        $5575 = $5574 < 9.9999999999999995E-7;
        if (!($5575)) {
         break;
        }
        $5576 = (+__Z5IKabsd($5554));
        $5577 = $5576 < 9.9999999999999995E-7;
        if (!($5577)) {
         break;
        }
        $5578 = (+__Z5IKabsd($5556));
        $5579 = $5578 < 9.9999999999999995E-7;
        if (!($5579)) {
         break;
        }
        HEAP8[$419>>0] = 1;
        $5580 = +HEAPF64[$24>>3];
        $5581 = -$5580;
        $5582 = (+__Z5IKabsd($5581));
        $5583 = $5582 < 1.9999999999999999E-6;
        do {
         if ($5583) {
          $5584 = +HEAPF64[$23>>3];
          $5585 = (+__Z5IKabsd($5584));
          $5586 = $5585 < 1.9999999999999999E-6;
          if (!($5586)) {
           break;
          }
          $5587 = (+__Z5IKsqrd($5581));
          $5588 = (+__Z5IKsqrd($5584));
          $5589 = $5587 + $5588;
          $5590 = $5589 + -1.0;
          $5591 = (+__Z5IKabsd($5590));
          $5592 = !($5591 <= 1.9999999999999999E-6);
          if (!($5592)) {
           break L7;
          }
         }
        } while(0);
        $5593 = +HEAPF64[$24>>3];
        $5594 = -$5593;
        $5595 = +HEAPF64[$23>>3];
        $5596 = (+__Z7IKatan2dd($5594,$5595));
        $5597 = (+__Z5IKsind($5596));
        $5598 = (+__Z5IKcosd($5596));
        $5599 = $5596 > 3.14159265358979;
        do {
         if ($5599) {
          $5600 = $5596 + -6.2831853071795898;
          $5603 = $5600;
         } else {
          $5601 = $5596 < -3.14159265358979;
          if (!($5601)) {
           $5603 = $5596;
           break;
          }
          $5602 = $5596 + 6.2831853071795898;
          $5603 = $5602;
         }
        } while(0);
        HEAP8[$420>>0] = 0;
        HEAP8[$421>>0] = -1;
        HEAPF64[$422>>3] = $5603;
        HEAPF64[$423>>3] = $5598;
        HEAPF64[$424>>3] = $5597;
        $5604 = +HEAPF64[$422>>3];
        $5605 = (+__Z5IKcosd($5604));
        $5606 = (+__Z5IKsind($5604));
        $5607 = +HEAPF64[$19>>3];
        $5608 = +HEAPF64[$24>>3];
        $5609 = $5606 + $5608;
        $5610 = $5605 * $5607;
        $5611 = +HEAPF64[$21>>3];
        $5612 = $5610 + $5611;
        $5613 = $5606 * $5607;
        $5614 = +HEAPF64[$20>>3];
        $5615 = $5613 + $5614;
        $5616 = +HEAPF64[$22>>3];
        $5617 = -$5616;
        $5618 = $5605 * $5617;
        $5619 = +HEAPF64[$15>>3];
        $5620 = $5618 + $5619;
        $5621 = $5606 * $5617;
        $5622 = +HEAPF64[$11>>3];
        $5623 = $5621 + $5622;
        $5624 = $5616 * $5622;
        $5625 = $5607 * $5614;
        $5626 = $5624 - $5625;
        $5627 = $5626 - $5606;
        $5628 = $5616 * $5619;
        $5629 = $5607 * $5611;
        $5630 = $5628 - $5629;
        $5631 = $5630 - $5605;
        $5632 = (+__Z5IKabsd($5609));
        $5633 = $5632 > 5.0000000000000004E-6;
        if ($5633) {
         break L7;
        }
        $5634 = +HEAPF64[$23>>3];
        $5635 = $5634 - $5605;
        $5636 = (+__Z5IKabsd($5635));
        $5637 = $5636 > 5.0000000000000004E-6;
        if ($5637) {
         break L7;
        }
        $5638 = (+__Z5IKabsd($5612));
        $5639 = $5638 > 5.0000000000000004E-6;
        if ($5639) {
         break L7;
        }
        $5640 = (+__Z5IKabsd($5615));
        $5641 = $5640 > 5.0000000000000004E-6;
        if ($5641) {
         break L7;
        }
        $5642 = (+__Z5IKabsd($5620));
        $5643 = $5642 > 5.0000000000000004E-6;
        if ($5643) {
         break L7;
        }
        $5644 = (+__Z5IKabsd($5623));
        $5645 = $5644 > 5.0000000000000004E-6;
        if ($5645) {
         break L7;
        }
        $5646 = (+__Z5IKabsd($5627));
        $5647 = $5646 > 5.0000000000000004E-6;
        if ($5647) {
         break L7;
        }
        $5648 = (+__Z5IKabsd($5631));
        $5649 = $5648 > 5.0000000000000004E-6;
        if ($5649) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos207,7);
        $5650 = HEAP32[$vinfos207>>2]|0;
        $5651 = ((($5650)) + 17|0);
        HEAP8[$5651>>0] = 1;
        $5652 = +HEAPF64[$this>>3];
        $5653 = HEAP32[$vinfos207>>2]|0;
        $5654 = ((($5653)) + 8|0);
        HEAPF64[$5654>>3] = $5652;
        $5655 = HEAP8[$425>>0]|0;
        $5656 = HEAP32[$vinfos207>>2]|0;
        $5657 = ((($5656)) + 19|0);
        HEAP8[$5657>>0] = $5655;
        $5658 = HEAP8[$426>>0]|0;
        $5659 = HEAP32[$vinfos207>>2]|0;
        $5660 = ((($5659)) + 20|0);
        HEAP8[$5660>>0] = $5658;
        $5661 = HEAP8[$427>>0]|0;
        $5662 = HEAP32[$vinfos207>>2]|0;
        $5663 = ((($5662)) + 18|0);
        HEAP8[$5663>>0] = $5661;
        $5664 = HEAP32[$vinfos207>>2]|0;
        $5665 = ((($5664)) + 41|0);
        HEAP8[$5665>>0] = 1;
        $5666 = +HEAPF64[$428>>3];
        $5667 = HEAP32[$vinfos207>>2]|0;
        $5668 = ((($5667)) + 32|0);
        HEAPF64[$5668>>3] = $5666;
        $5669 = HEAP8[$429>>0]|0;
        $5670 = HEAP32[$vinfos207>>2]|0;
        $5671 = ((($5670)) + 43|0);
        HEAP8[$5671>>0] = $5669;
        $5672 = HEAP8[$430>>0]|0;
        $5673 = HEAP32[$vinfos207>>2]|0;
        $5674 = ((($5673)) + 44|0);
        HEAP8[$5674>>0] = $5672;
        $5675 = HEAP8[$431>>0]|0;
        $5676 = HEAP32[$vinfos207>>2]|0;
        $5677 = ((($5676)) + 42|0);
        HEAP8[$5677>>0] = $5675;
        $5678 = HEAP32[$vinfos207>>2]|0;
        $5679 = ((($5678)) + 65|0);
        HEAP8[$5679>>0] = 1;
        $5680 = +HEAPF64[$432>>3];
        $5681 = HEAP32[$vinfos207>>2]|0;
        $5682 = ((($5681)) + 56|0);
        HEAPF64[$5682>>3] = $5680;
        $5683 = HEAP8[$433>>0]|0;
        $5684 = HEAP32[$vinfos207>>2]|0;
        $5685 = ((($5684)) + 67|0);
        HEAP8[$5685>>0] = $5683;
        $5686 = HEAP8[$434>>0]|0;
        $5687 = HEAP32[$vinfos207>>2]|0;
        $5688 = ((($5687)) + 68|0);
        HEAP8[$5688>>0] = $5686;
        $5689 = HEAP8[$435>>0]|0;
        $5690 = HEAP32[$vinfos207>>2]|0;
        $5691 = ((($5690)) + 66|0);
        HEAP8[$5691>>0] = $5689;
        $5692 = HEAP32[$vinfos207>>2]|0;
        $5693 = ((($5692)) + 89|0);
        HEAP8[$5693>>0] = 1;
        $5694 = +HEAPF64[$436>>3];
        $5695 = HEAP32[$vinfos207>>2]|0;
        $5696 = ((($5695)) + 80|0);
        HEAPF64[$5696>>3] = $5694;
        $5697 = HEAP8[$437>>0]|0;
        $5698 = HEAP32[$vinfos207>>2]|0;
        $5699 = ((($5698)) + 91|0);
        HEAP8[$5699>>0] = $5697;
        $5700 = HEAP8[$438>>0]|0;
        $5701 = HEAP32[$vinfos207>>2]|0;
        $5702 = ((($5701)) + 92|0);
        HEAP8[$5702>>0] = $5700;
        $5703 = HEAP8[$439>>0]|0;
        $5704 = HEAP32[$vinfos207>>2]|0;
        $5705 = ((($5704)) + 90|0);
        HEAP8[$5705>>0] = $5703;
        $5706 = HEAP32[$vinfos207>>2]|0;
        $5707 = ((($5706)) + 113|0);
        HEAP8[$5707>>0] = 1;
        $5708 = +HEAPF64[$351>>3];
        $5709 = HEAP32[$vinfos207>>2]|0;
        $5710 = ((($5709)) + 104|0);
        HEAPF64[$5710>>3] = $5708;
        $5711 = HEAP8[$349>>0]|0;
        $5712 = HEAP32[$vinfos207>>2]|0;
        $5713 = ((($5712)) + 115|0);
        HEAP8[$5713>>0] = $5711;
        $5714 = HEAP8[$350>>0]|0;
        $5715 = HEAP32[$vinfos207>>2]|0;
        $5716 = ((($5715)) + 116|0);
        HEAP8[$5716>>0] = $5714;
        $5717 = HEAP8[$346>>0]|0;
        $5718 = HEAP32[$vinfos207>>2]|0;
        $5719 = ((($5718)) + 114|0);
        HEAP8[$5719>>0] = $5717;
        $5720 = HEAP32[$vinfos207>>2]|0;
        $5721 = ((($5720)) + 137|0);
        HEAP8[$5721>>0] = 1;
        $5722 = +HEAPF64[$29>>3];
        $5723 = HEAP32[$vinfos207>>2]|0;
        $5724 = ((($5723)) + 128|0);
        HEAPF64[$5724>>3] = $5722;
        $5725 = HEAP8[$27>>0]|0;
        $5726 = HEAP32[$vinfos207>>2]|0;
        $5727 = ((($5726)) + 139|0);
        HEAP8[$5727>>0] = $5725;
        $5728 = HEAP8[$28>>0]|0;
        $5729 = HEAP32[$vinfos207>>2]|0;
        $5730 = ((($5729)) + 140|0);
        HEAP8[$5730>>0] = $5728;
        $5731 = HEAP8[$26>>0]|0;
        $5732 = HEAP32[$vinfos207>>2]|0;
        $5733 = ((($5732)) + 138|0);
        HEAP8[$5733>>0] = $5731;
        $5734 = HEAP32[$vinfos207>>2]|0;
        $5735 = ((($5734)) + 161|0);
        HEAP8[$5735>>0] = 1;
        $5736 = +HEAPF64[$422>>3];
        $5737 = HEAP32[$vinfos207>>2]|0;
        $5738 = ((($5737)) + 152|0);
        HEAPF64[$5738>>3] = $5736;
        $5739 = HEAP8[$420>>0]|0;
        $5740 = HEAP32[$vinfos207>>2]|0;
        $5741 = ((($5740)) + 163|0);
        HEAP8[$5741>>0] = $5739;
        $5742 = HEAP8[$421>>0]|0;
        $5743 = HEAP32[$vinfos207>>2]|0;
        $5744 = ((($5743)) + 164|0);
        HEAP8[$5744>>0] = $5742;
        $5745 = HEAP8[$419>>0]|0;
        $5746 = HEAP32[$vinfos207>>2]|0;
        $5747 = ((($5746)) + 162|0);
        HEAP8[$5747>>0] = $5745;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree208,0);
        $5748 = HEAP32[$solutions>>2]|0;
        $5749 = ((($5748)) + 8|0);
        $5750 = HEAP32[$5749>>2]|0;
        (FUNCTION_TABLE_iiii[$5750 & 31]($solutions,$vinfos207,$vfree208)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree208);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos207);
        break L7;
       }
      } while(0);
      $5751 = +HEAPF64[$352>>3];
      $5752 = +HEAPF64[$22>>3];
      $5753 = $5751 * $5752;
      $5754 = +HEAPF64[$19>>3];
      $5755 = +HEAPF64[$353>>3];
      $5756 = $5754 * $5755;
      $5757 = $5753 - $5756;
      $5758 = $5751 * $5754;
      $5759 = $5752 * $5755;
      $5760 = $5758 + $5759;
      $5761 = +HEAPF64[$29>>3];
      $5762 = (+__Z5IKabsd($5761));
      $5763 = $5762 + 3.14159265358979;
      $5764 = (+__Z6IKfmoddd($5763,6.2831853071795898));
      $5765 = $5764 + -3.14159265358979;
      $5766 = +HEAPF64[$23>>3];
      $5767 = +HEAPF64[$24>>3];
      $5768 = (+__Z5IKabsd($5765));
      $5769 = $5768 < 9.9999999999999995E-7;
      do {
       if ($5769) {
        $5770 = +HEAPF64[$25>>3];
        $5771 = $5770 + -1.0;
        $5772 = (+__Z5IKabsd($5771));
        $5773 = $5772 < 9.9999999999999995E-7;
        if (!($5773)) {
         break;
        }
        $5774 = (+__Z5IKabsd($5766));
        $5775 = $5774 < 9.9999999999999995E-7;
        if (!($5775)) {
         break;
        }
        $5776 = (+__Z5IKabsd($5754));
        $5777 = $5776 < 9.9999999999999995E-7;
        if (!($5777)) {
         break;
        }
        $5778 = (+__Z5IKabsd($5752));
        $5779 = $5778 < 9.9999999999999995E-7;
        if (!($5779)) {
         break;
        }
        $5780 = (+__Z5IKabsd($5767));
        $5781 = $5780 < 9.9999999999999995E-7;
        if (!($5781)) {
         break;
        }
        $5782 = (+__Z5IKabsd($5757));
        $5783 = $5782 < 9.9999999999999995E-7;
        if (!($5783)) {
         break;
        }
        $5784 = (+__Z5IKabsd($5760));
        $5785 = $5784 < 9.9999999999999995E-7;
        if (!($5785)) {
         break;
        }
        HEAP8[$440>>0] = 1;
        $5786 = +HEAPF64[$353>>3];
        $5787 = +HEAPF64[$352>>3];
        $5788 = +HEAPF64[$15>>3];
        $5789 = $5787 * $5788;
        $5790 = +HEAPF64[$11>>3];
        $5791 = $5786 * $5790;
        $5792 = -$5791;
        $5793 = $5792 - $5789;
        $5794 = (+__Z5IKabsd($5793));
        $5795 = $5794 < 1.9999999999999999E-6;
        do {
         if ($5795) {
          $5796 = $5787 * $5790;
          $5797 = $5786 * $5788;
          $5798 = $5796 - $5797;
          $5799 = (+__Z5IKabsd($5798));
          $5800 = $5799 < 1.9999999999999999E-6;
          if (!($5800)) {
           break;
          }
          $5801 = (+__Z5IKsqrd($5793));
          $5802 = (+__Z5IKsqrd($5798));
          $5803 = $5801 + $5802;
          $5804 = $5803 + -1.0;
          $5805 = (+__Z5IKabsd($5804));
          $5806 = !($5805 <= 1.9999999999999999E-6);
          if (!($5806)) {
           break L7;
          }
         }
        } while(0);
        $5807 = +HEAPF64[$352>>3];
        $5808 = +HEAPF64[$15>>3];
        $5809 = $5807 * $5808;
        $5810 = +HEAPF64[$11>>3];
        $5811 = $5786 * $5810;
        $5812 = -$5811;
        $5813 = $5812 - $5809;
        $5814 = $5807 * $5810;
        $5815 = $5786 * $5808;
        $5816 = $5814 - $5815;
        $5817 = (+__Z7IKatan2dd($5813,$5816));
        $5818 = (+__Z5IKsind($5817));
        $5819 = (+__Z5IKcosd($5817));
        $5820 = $5817 > 3.14159265358979;
        do {
         if ($5820) {
          $5821 = $5817 + -6.2831853071795898;
          $5824 = $5821;
         } else {
          $5822 = $5817 < -3.14159265358979;
          if (!($5822)) {
           $5824 = $5817;
           break;
          }
          $5823 = $5817 + 6.2831853071795898;
          $5824 = $5823;
         }
        } while(0);
        HEAP8[$441>>0] = 0;
        HEAP8[$442>>0] = -1;
        HEAPF64[$443>>3] = $5824;
        HEAPF64[$444>>3] = $5819;
        HEAPF64[$445>>3] = $5818;
        $5825 = +HEAPF64[$443>>3];
        $5826 = (+__Z5IKsind($5825));
        $5827 = (+__Z5IKcosd($5825));
        $5828 = +HEAPF64[$353>>3];
        $5829 = $5826 * $5828;
        $5830 = +HEAPF64[$352>>3];
        $5831 = $5827 * $5830;
        $5832 = +HEAPF64[$15>>3];
        $5833 = $5830 * $5832;
        $5834 = +HEAPF64[$21>>3];
        $5835 = $5828 * $5834;
        $5836 = $5833 + $5835;
        $5837 = $5826 + $5836;
        $5838 = +HEAPF64[$11>>3];
        $5839 = $5830 * $5838;
        $5840 = +HEAPF64[$20>>3];
        $5841 = $5828 * $5840;
        $5842 = $5839 + $5841;
        $5843 = $5842 - $5827;
        $5844 = $5830 * $5840;
        $5845 = $5844 - $5826;
        $5846 = $5828 * $5838;
        $5847 = $5845 - $5846;
        $5848 = $5830 * $5834;
        $5849 = $5848 - $5827;
        $5850 = $5828 * $5832;
        $5851 = $5849 - $5850;
        $5852 = $5829 - $5831;
        $5853 = $5852 + $5838;
        $5854 = $5852 + $5834;
        $5855 = $5827 * $5828;
        $5856 = $5840 - $5855;
        $5857 = $5826 * $5830;
        $5858 = $5856 - $5857;
        $5859 = (+__Z5IKabsd($5837));
        $5860 = $5859 > 5.0000000000000004E-6;
        if ($5860) {
         break L7;
        }
        $5861 = $5857 + $5832;
        $5862 = $5855 + $5861;
        $5863 = (+__Z5IKabsd($5862));
        $5864 = $5863 > 5.0000000000000004E-6;
        if ($5864) {
         break L7;
        }
        $5865 = (+__Z5IKabsd($5843));
        $5866 = $5865 > 5.0000000000000004E-6;
        if ($5866) {
         break L7;
        }
        $5867 = (+__Z5IKabsd($5847));
        $5868 = $5867 > 5.0000000000000004E-6;
        if ($5868) {
         break L7;
        }
        $5869 = (+__Z5IKabsd($5851));
        $5870 = $5869 > 5.0000000000000004E-6;
        if ($5870) {
         break L7;
        }
        $5871 = (+__Z5IKabsd($5853));
        $5872 = $5871 > 5.0000000000000004E-6;
        if ($5872) {
         break L7;
        }
        $5873 = (+__Z5IKabsd($5854));
        $5874 = $5873 > 5.0000000000000004E-6;
        if ($5874) {
         break L7;
        }
        $5875 = (+__Z5IKabsd($5858));
        $5876 = $5875 > 5.0000000000000004E-6;
        if ($5876) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos218,7);
        $5877 = HEAP32[$vinfos218>>2]|0;
        $5878 = ((($5877)) + 17|0);
        HEAP8[$5878>>0] = 1;
        $5879 = +HEAPF64[$this>>3];
        $5880 = HEAP32[$vinfos218>>2]|0;
        $5881 = ((($5880)) + 8|0);
        HEAPF64[$5881>>3] = $5879;
        $5882 = HEAP8[$446>>0]|0;
        $5883 = HEAP32[$vinfos218>>2]|0;
        $5884 = ((($5883)) + 19|0);
        HEAP8[$5884>>0] = $5882;
        $5885 = HEAP8[$447>>0]|0;
        $5886 = HEAP32[$vinfos218>>2]|0;
        $5887 = ((($5886)) + 20|0);
        HEAP8[$5887>>0] = $5885;
        $5888 = HEAP8[$448>>0]|0;
        $5889 = HEAP32[$vinfos218>>2]|0;
        $5890 = ((($5889)) + 18|0);
        HEAP8[$5890>>0] = $5888;
        $5891 = HEAP32[$vinfos218>>2]|0;
        $5892 = ((($5891)) + 41|0);
        HEAP8[$5892>>0] = 1;
        $5893 = +HEAPF64[$449>>3];
        $5894 = HEAP32[$vinfos218>>2]|0;
        $5895 = ((($5894)) + 32|0);
        HEAPF64[$5895>>3] = $5893;
        $5896 = HEAP8[$450>>0]|0;
        $5897 = HEAP32[$vinfos218>>2]|0;
        $5898 = ((($5897)) + 43|0);
        HEAP8[$5898>>0] = $5896;
        $5899 = HEAP8[$451>>0]|0;
        $5900 = HEAP32[$vinfos218>>2]|0;
        $5901 = ((($5900)) + 44|0);
        HEAP8[$5901>>0] = $5899;
        $5902 = HEAP8[$452>>0]|0;
        $5903 = HEAP32[$vinfos218>>2]|0;
        $5904 = ((($5903)) + 42|0);
        HEAP8[$5904>>0] = $5902;
        $5905 = HEAP32[$vinfos218>>2]|0;
        $5906 = ((($5905)) + 65|0);
        HEAP8[$5906>>0] = 1;
        $5907 = +HEAPF64[$453>>3];
        $5908 = HEAP32[$vinfos218>>2]|0;
        $5909 = ((($5908)) + 56|0);
        HEAPF64[$5909>>3] = $5907;
        $5910 = HEAP8[$454>>0]|0;
        $5911 = HEAP32[$vinfos218>>2]|0;
        $5912 = ((($5911)) + 67|0);
        HEAP8[$5912>>0] = $5910;
        $5913 = HEAP8[$455>>0]|0;
        $5914 = HEAP32[$vinfos218>>2]|0;
        $5915 = ((($5914)) + 68|0);
        HEAP8[$5915>>0] = $5913;
        $5916 = HEAP8[$456>>0]|0;
        $5917 = HEAP32[$vinfos218>>2]|0;
        $5918 = ((($5917)) + 66|0);
        HEAP8[$5918>>0] = $5916;
        $5919 = HEAP32[$vinfos218>>2]|0;
        $5920 = ((($5919)) + 89|0);
        HEAP8[$5920>>0] = 1;
        $5921 = +HEAPF64[$457>>3];
        $5922 = HEAP32[$vinfos218>>2]|0;
        $5923 = ((($5922)) + 80|0);
        HEAPF64[$5923>>3] = $5921;
        $5924 = HEAP8[$458>>0]|0;
        $5925 = HEAP32[$vinfos218>>2]|0;
        $5926 = ((($5925)) + 91|0);
        HEAP8[$5926>>0] = $5924;
        $5927 = HEAP8[$459>>0]|0;
        $5928 = HEAP32[$vinfos218>>2]|0;
        $5929 = ((($5928)) + 92|0);
        HEAP8[$5929>>0] = $5927;
        $5930 = HEAP8[$460>>0]|0;
        $5931 = HEAP32[$vinfos218>>2]|0;
        $5932 = ((($5931)) + 90|0);
        HEAP8[$5932>>0] = $5930;
        $5933 = HEAP32[$vinfos218>>2]|0;
        $5934 = ((($5933)) + 113|0);
        HEAP8[$5934>>0] = 1;
        $5935 = +HEAPF64[$351>>3];
        $5936 = HEAP32[$vinfos218>>2]|0;
        $5937 = ((($5936)) + 104|0);
        HEAPF64[$5937>>3] = $5935;
        $5938 = HEAP8[$349>>0]|0;
        $5939 = HEAP32[$vinfos218>>2]|0;
        $5940 = ((($5939)) + 115|0);
        HEAP8[$5940>>0] = $5938;
        $5941 = HEAP8[$350>>0]|0;
        $5942 = HEAP32[$vinfos218>>2]|0;
        $5943 = ((($5942)) + 116|0);
        HEAP8[$5943>>0] = $5941;
        $5944 = HEAP8[$346>>0]|0;
        $5945 = HEAP32[$vinfos218>>2]|0;
        $5946 = ((($5945)) + 114|0);
        HEAP8[$5946>>0] = $5944;
        $5947 = HEAP32[$vinfos218>>2]|0;
        $5948 = ((($5947)) + 137|0);
        HEAP8[$5948>>0] = 1;
        $5949 = +HEAPF64[$29>>3];
        $5950 = HEAP32[$vinfos218>>2]|0;
        $5951 = ((($5950)) + 128|0);
        HEAPF64[$5951>>3] = $5949;
        $5952 = HEAP8[$27>>0]|0;
        $5953 = HEAP32[$vinfos218>>2]|0;
        $5954 = ((($5953)) + 139|0);
        HEAP8[$5954>>0] = $5952;
        $5955 = HEAP8[$28>>0]|0;
        $5956 = HEAP32[$vinfos218>>2]|0;
        $5957 = ((($5956)) + 140|0);
        HEAP8[$5957>>0] = $5955;
        $5958 = HEAP8[$26>>0]|0;
        $5959 = HEAP32[$vinfos218>>2]|0;
        $5960 = ((($5959)) + 138|0);
        HEAP8[$5960>>0] = $5958;
        $5961 = HEAP32[$vinfos218>>2]|0;
        $5962 = ((($5961)) + 161|0);
        HEAP8[$5962>>0] = 1;
        $5963 = +HEAPF64[$443>>3];
        $5964 = HEAP32[$vinfos218>>2]|0;
        $5965 = ((($5964)) + 152|0);
        HEAPF64[$5965>>3] = $5963;
        $5966 = HEAP8[$441>>0]|0;
        $5967 = HEAP32[$vinfos218>>2]|0;
        $5968 = ((($5967)) + 163|0);
        HEAP8[$5968>>0] = $5966;
        $5969 = HEAP8[$442>>0]|0;
        $5970 = HEAP32[$vinfos218>>2]|0;
        $5971 = ((($5970)) + 164|0);
        HEAP8[$5971>>0] = $5969;
        $5972 = HEAP8[$440>>0]|0;
        $5973 = HEAP32[$vinfos218>>2]|0;
        $5974 = ((($5973)) + 162|0);
        HEAP8[$5974>>0] = $5972;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree219,0);
        $5975 = HEAP32[$solutions>>2]|0;
        $5976 = ((($5975)) + 8|0);
        $5977 = HEAP32[$5976>>2]|0;
        (FUNCTION_TABLE_iiii[$5977 & 31]($solutions,$vinfos218,$vfree219)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree219);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos218);
        break L7;
       }
      } while(0);
      $5978 = +HEAPF64[$352>>3];
      $5979 = +HEAPF64[$19>>3];
      $5980 = $5978 * $5979;
      $5981 = +HEAPF64[$22>>3];
      $5982 = +HEAPF64[$353>>3];
      $5983 = $5981 * $5982;
      $5984 = $5978 * $5981;
      $5985 = $5979 * $5982;
      $5986 = $5984 - $5985;
      $5987 = +HEAPF64[$29>>3];
      $5988 = $5987 + -3.14159265358979;
      $5989 = (+__Z5IKabsd($5988));
      $5990 = $5989 + 3.14159265358979;
      $5991 = (+__Z6IKfmoddd($5990,6.2831853071795898));
      $5992 = $5991 + -3.14159265358979;
      $5993 = +HEAPF64[$23>>3];
      $5994 = +HEAPF64[$24>>3];
      $5995 = $5980 + $5983;
      $5996 = -$5980;
      $5997 = $5996 - $5983;
      $5998 = (+__Z5IKabsd($5992));
      $5999 = $5998 < 9.9999999999999995E-7;
      do {
       if ($5999) {
        $6000 = +HEAPF64[$25>>3];
        $6001 = $6000 + 1.0;
        $6002 = (+__Z5IKabsd($6001));
        $6003 = $6002 < 9.9999999999999995E-7;
        if (!($6003)) {
         break;
        }
        $6004 = (+__Z5IKabsd($5993));
        $6005 = $6004 < 9.9999999999999995E-7;
        if (!($6005)) {
         break;
        }
        $6006 = (+__Z5IKabsd($5979));
        $6007 = $6006 < 9.9999999999999995E-7;
        if (!($6007)) {
         break;
        }
        $6008 = (+__Z5IKabsd($5981));
        $6009 = $6008 < 9.9999999999999995E-7;
        if (!($6009)) {
         break;
        }
        $6010 = (+__Z5IKabsd($5994));
        $6011 = $6010 < 9.9999999999999995E-7;
        if (!($6011)) {
         break;
        }
        $6012 = (+__Z5IKabsd($5986));
        $6013 = $6012 < 9.9999999999999995E-7;
        if (!($6013)) {
         break;
        }
        $6014 = (+__Z5IKabsd($5995));
        $6015 = $6014 < 9.9999999999999995E-7;
        if (!($6015)) {
         break;
        }
        $6016 = (+__Z5IKabsd($5997));
        $6017 = $6016 < 9.9999999999999995E-7;
        if (!($6017)) {
         break;
        }
        HEAP8[$461>>0] = 1;
        $6018 = +HEAPF64[$353>>3];
        $6019 = +HEAPF64[$352>>3];
        $6020 = +HEAPF64[$15>>3];
        $6021 = $6019 * $6020;
        $6022 = +HEAPF64[$11>>3];
        $6023 = $6018 * $6022;
        $6024 = $6021 - $6023;
        $6025 = (+__Z5IKabsd($6024));
        $6026 = $6025 < 1.9999999999999999E-6;
        do {
         if ($6026) {
          $6027 = $6018 * $6020;
          $6028 = $6019 * $6022;
          $6029 = -$6028;
          $6030 = $6029 - $6027;
          $6031 = (+__Z5IKabsd($6030));
          $6032 = $6031 < 1.9999999999999999E-6;
          if (!($6032)) {
           break;
          }
          $6033 = (+__Z5IKsqrd($6024));
          $6034 = (+__Z5IKsqrd($6030));
          $6035 = $6033 + $6034;
          $6036 = $6035 + -1.0;
          $6037 = (+__Z5IKabsd($6036));
          $6038 = !($6037 <= 1.9999999999999999E-6);
          if (!($6038)) {
           break L7;
          }
         }
        } while(0);
        $6039 = +HEAPF64[$352>>3];
        $6040 = +HEAPF64[$15>>3];
        $6041 = $6039 * $6040;
        $6042 = +HEAPF64[$11>>3];
        $6043 = $6018 * $6042;
        $6044 = $6041 - $6043;
        $6045 = $6018 * $6040;
        $6046 = $6039 * $6042;
        $6047 = -$6046;
        $6048 = $6047 - $6045;
        $6049 = (+__Z7IKatan2dd($6044,$6048));
        $6050 = (+__Z5IKsind($6049));
        $6051 = (+__Z5IKcosd($6049));
        $6052 = $6049 > 3.14159265358979;
        do {
         if ($6052) {
          $6053 = $6049 + -6.2831853071795898;
          $6056 = $6053;
         } else {
          $6054 = $6049 < -3.14159265358979;
          if (!($6054)) {
           $6056 = $6049;
           break;
          }
          $6055 = $6049 + 6.2831853071795898;
          $6056 = $6055;
         }
        } while(0);
        HEAP8[$462>>0] = 0;
        HEAP8[$463>>0] = -1;
        HEAPF64[$464>>3] = $6056;
        HEAPF64[$465>>3] = $6051;
        HEAPF64[$466>>3] = $6050;
        $6057 = +HEAPF64[$464>>3];
        $6058 = (+__Z5IKsind($6057));
        $6059 = (+__Z5IKcosd($6057));
        $6060 = +HEAPF64[$353>>3];
        $6061 = $6059 * $6060;
        $6062 = +HEAPF64[$352>>3];
        $6063 = $6058 * $6062;
        $6064 = +HEAPF64[$11>>3];
        $6065 = $6062 * $6064;
        $6066 = +HEAPF64[$20>>3];
        $6067 = $6060 * $6066;
        $6068 = $6065 + $6067;
        $6069 = $6059 + $6068;
        $6070 = +HEAPF64[$15>>3];
        $6071 = +HEAPF64[$21>>3];
        $6072 = $6059 * $6062;
        $6073 = $6058 * $6060;
        $6074 = $6073 + $6072;
        $6075 = $6064 + $6074;
        $6076 = $6062 * $6066;
        $6077 = $6076 - $6058;
        $6078 = $6060 * $6064;
        $6079 = $6077 - $6078;
        $6080 = $6060 * $6070;
        $6081 = $6062 * $6071;
        $6082 = $6081 - $6080;
        $6083 = $6082 - $6059;
        $6084 = $6061 + $6070;
        $6085 = $6084 - $6063;
        $6086 = $6061 + $6066;
        $6087 = $6086 - $6063;
        $6088 = -$6073;
        $6089 = $6088 - $6072;
        $6090 = $6089 + $6071;
        $6091 = (+__Z5IKabsd($6069));
        $6092 = $6091 > 5.0000000000000004E-6;
        if ($6092) {
         break L7;
        }
        $6093 = $6062 * $6070;
        $6094 = $6060 * $6071;
        $6095 = $6093 + $6094;
        $6096 = $6095 - $6058;
        $6097 = (+__Z5IKabsd($6096));
        $6098 = $6097 > 5.0000000000000004E-6;
        if ($6098) {
         break L7;
        }
        $6099 = (+__Z5IKabsd($6075));
        $6100 = $6099 > 5.0000000000000004E-6;
        if ($6100) {
         break L7;
        }
        $6101 = (+__Z5IKabsd($6079));
        $6102 = $6101 > 5.0000000000000004E-6;
        if ($6102) {
         break L7;
        }
        $6103 = (+__Z5IKabsd($6083));
        $6104 = $6103 > 5.0000000000000004E-6;
        if ($6104) {
         break L7;
        }
        $6105 = (+__Z5IKabsd($6085));
        $6106 = $6105 > 5.0000000000000004E-6;
        if ($6106) {
         break L7;
        }
        $6107 = (+__Z5IKabsd($6087));
        $6108 = $6107 > 5.0000000000000004E-6;
        if ($6108) {
         break L7;
        }
        $6109 = (+__Z5IKabsd($6090));
        $6110 = $6109 > 5.0000000000000004E-6;
        if ($6110) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos229,7);
        $6111 = HEAP32[$vinfos229>>2]|0;
        $6112 = ((($6111)) + 17|0);
        HEAP8[$6112>>0] = 1;
        $6113 = +HEAPF64[$this>>3];
        $6114 = HEAP32[$vinfos229>>2]|0;
        $6115 = ((($6114)) + 8|0);
        HEAPF64[$6115>>3] = $6113;
        $6116 = HEAP8[$467>>0]|0;
        $6117 = HEAP32[$vinfos229>>2]|0;
        $6118 = ((($6117)) + 19|0);
        HEAP8[$6118>>0] = $6116;
        $6119 = HEAP8[$468>>0]|0;
        $6120 = HEAP32[$vinfos229>>2]|0;
        $6121 = ((($6120)) + 20|0);
        HEAP8[$6121>>0] = $6119;
        $6122 = HEAP8[$469>>0]|0;
        $6123 = HEAP32[$vinfos229>>2]|0;
        $6124 = ((($6123)) + 18|0);
        HEAP8[$6124>>0] = $6122;
        $6125 = HEAP32[$vinfos229>>2]|0;
        $6126 = ((($6125)) + 41|0);
        HEAP8[$6126>>0] = 1;
        $6127 = +HEAPF64[$470>>3];
        $6128 = HEAP32[$vinfos229>>2]|0;
        $6129 = ((($6128)) + 32|0);
        HEAPF64[$6129>>3] = $6127;
        $6130 = HEAP8[$471>>0]|0;
        $6131 = HEAP32[$vinfos229>>2]|0;
        $6132 = ((($6131)) + 43|0);
        HEAP8[$6132>>0] = $6130;
        $6133 = HEAP8[$472>>0]|0;
        $6134 = HEAP32[$vinfos229>>2]|0;
        $6135 = ((($6134)) + 44|0);
        HEAP8[$6135>>0] = $6133;
        $6136 = HEAP8[$473>>0]|0;
        $6137 = HEAP32[$vinfos229>>2]|0;
        $6138 = ((($6137)) + 42|0);
        HEAP8[$6138>>0] = $6136;
        $6139 = HEAP32[$vinfos229>>2]|0;
        $6140 = ((($6139)) + 65|0);
        HEAP8[$6140>>0] = 1;
        $6141 = +HEAPF64[$474>>3];
        $6142 = HEAP32[$vinfos229>>2]|0;
        $6143 = ((($6142)) + 56|0);
        HEAPF64[$6143>>3] = $6141;
        $6144 = HEAP8[$475>>0]|0;
        $6145 = HEAP32[$vinfos229>>2]|0;
        $6146 = ((($6145)) + 67|0);
        HEAP8[$6146>>0] = $6144;
        $6147 = HEAP8[$476>>0]|0;
        $6148 = HEAP32[$vinfos229>>2]|0;
        $6149 = ((($6148)) + 68|0);
        HEAP8[$6149>>0] = $6147;
        $6150 = HEAP8[$477>>0]|0;
        $6151 = HEAP32[$vinfos229>>2]|0;
        $6152 = ((($6151)) + 66|0);
        HEAP8[$6152>>0] = $6150;
        $6153 = HEAP32[$vinfos229>>2]|0;
        $6154 = ((($6153)) + 89|0);
        HEAP8[$6154>>0] = 1;
        $6155 = +HEAPF64[$478>>3];
        $6156 = HEAP32[$vinfos229>>2]|0;
        $6157 = ((($6156)) + 80|0);
        HEAPF64[$6157>>3] = $6155;
        $6158 = HEAP8[$479>>0]|0;
        $6159 = HEAP32[$vinfos229>>2]|0;
        $6160 = ((($6159)) + 91|0);
        HEAP8[$6160>>0] = $6158;
        $6161 = HEAP8[$480>>0]|0;
        $6162 = HEAP32[$vinfos229>>2]|0;
        $6163 = ((($6162)) + 92|0);
        HEAP8[$6163>>0] = $6161;
        $6164 = HEAP8[$481>>0]|0;
        $6165 = HEAP32[$vinfos229>>2]|0;
        $6166 = ((($6165)) + 90|0);
        HEAP8[$6166>>0] = $6164;
        $6167 = HEAP32[$vinfos229>>2]|0;
        $6168 = ((($6167)) + 113|0);
        HEAP8[$6168>>0] = 1;
        $6169 = +HEAPF64[$351>>3];
        $6170 = HEAP32[$vinfos229>>2]|0;
        $6171 = ((($6170)) + 104|0);
        HEAPF64[$6171>>3] = $6169;
        $6172 = HEAP8[$349>>0]|0;
        $6173 = HEAP32[$vinfos229>>2]|0;
        $6174 = ((($6173)) + 115|0);
        HEAP8[$6174>>0] = $6172;
        $6175 = HEAP8[$350>>0]|0;
        $6176 = HEAP32[$vinfos229>>2]|0;
        $6177 = ((($6176)) + 116|0);
        HEAP8[$6177>>0] = $6175;
        $6178 = HEAP8[$346>>0]|0;
        $6179 = HEAP32[$vinfos229>>2]|0;
        $6180 = ((($6179)) + 114|0);
        HEAP8[$6180>>0] = $6178;
        $6181 = HEAP32[$vinfos229>>2]|0;
        $6182 = ((($6181)) + 137|0);
        HEAP8[$6182>>0] = 1;
        $6183 = +HEAPF64[$29>>3];
        $6184 = HEAP32[$vinfos229>>2]|0;
        $6185 = ((($6184)) + 128|0);
        HEAPF64[$6185>>3] = $6183;
        $6186 = HEAP8[$27>>0]|0;
        $6187 = HEAP32[$vinfos229>>2]|0;
        $6188 = ((($6187)) + 139|0);
        HEAP8[$6188>>0] = $6186;
        $6189 = HEAP8[$28>>0]|0;
        $6190 = HEAP32[$vinfos229>>2]|0;
        $6191 = ((($6190)) + 140|0);
        HEAP8[$6191>>0] = $6189;
        $6192 = HEAP8[$26>>0]|0;
        $6193 = HEAP32[$vinfos229>>2]|0;
        $6194 = ((($6193)) + 138|0);
        HEAP8[$6194>>0] = $6192;
        $6195 = HEAP32[$vinfos229>>2]|0;
        $6196 = ((($6195)) + 161|0);
        HEAP8[$6196>>0] = 1;
        $6197 = +HEAPF64[$464>>3];
        $6198 = HEAP32[$vinfos229>>2]|0;
        $6199 = ((($6198)) + 152|0);
        HEAPF64[$6199>>3] = $6197;
        $6200 = HEAP8[$462>>0]|0;
        $6201 = HEAP32[$vinfos229>>2]|0;
        $6202 = ((($6201)) + 163|0);
        HEAP8[$6202>>0] = $6200;
        $6203 = HEAP8[$463>>0]|0;
        $6204 = HEAP32[$vinfos229>>2]|0;
        $6205 = ((($6204)) + 164|0);
        HEAP8[$6205>>0] = $6203;
        $6206 = HEAP8[$461>>0]|0;
        $6207 = HEAP32[$vinfos229>>2]|0;
        $6208 = ((($6207)) + 162|0);
        HEAP8[$6208>>0] = $6206;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree230,0);
        $6209 = HEAP32[$solutions>>2]|0;
        $6210 = ((($6209)) + 8|0);
        $6211 = HEAP32[$6210>>2]|0;
        (FUNCTION_TABLE_iiii[$6211 & 31]($solutions,$vinfos229,$vfree230)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree230);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos229);
        break L7;
       }
      } while(0);
      $6212 = +HEAPF64[$30>>3];
      $6213 = +HEAPF64[$25>>3];
      $6214 = +HEAPF64[$31>>3];
      $6215 = +HEAPF64[$19>>3];
      $6216 = $6215 - $6214;
      $6217 = +HEAPF64[$351>>3];
      $6218 = (+__Z5IKabsd($6217));
      $6219 = $6218 + 3.14159265358979;
      $6220 = (+__Z6IKfmoddd($6219,6.2831853071795898));
      $6221 = $6220 + -3.14159265358979;
      $6222 = +HEAPF64[$22>>3];
      $6223 = +HEAPF64[$11>>3];
      $6224 = $6214 * $6223;
      $6225 = +HEAPF64[$23>>3];
      $6226 = $6212 * $6225;
      $6227 = $6224 + $6226;
      $6228 = +HEAPF64[$15>>3];
      $6229 = $6214 * $6228;
      $6230 = +HEAPF64[$24>>3];
      $6231 = $6212 * $6230;
      $6232 = $6229 + $6231;
      $6233 = $6214 * $6215;
      $6234 = $6233 + -1.0;
      $6235 = $6212 * $6213;
      $6236 = $6235 + $6234;
      $6237 = $6212 * $6215;
      $6238 = $6213 * $6214;
      $6239 = $6237 - $6238;
      $6240 = (+__Z5IKabsd($6221));
      $6241 = $6240 < 9.9999999999999995E-7;
      do {
       if ($6241) {
        $6242 = $6213 - $6212;
        $6243 = (+__Z5IKabsd($6242));
        $6244 = $6243 < 9.9999999999999995E-7;
        if (!($6244)) {
         break;
        }
        $6245 = (+__Z5IKabsd($6216));
        $6246 = $6245 < 9.9999999999999995E-7;
        if (!($6246)) {
         break;
        }
        $6247 = (+__Z5IKabsd($6222));
        $6248 = $6247 < 9.9999999999999995E-7;
        if (!($6248)) {
         break;
        }
        $6249 = (+__Z5IKabsd($6227));
        $6250 = $6249 < 9.9999999999999995E-7;
        if (!($6250)) {
         break;
        }
        $6251 = (+__Z5IKabsd($6232));
        $6252 = $6251 < 9.9999999999999995E-7;
        if (!($6252)) {
         break;
        }
        $6253 = (+__Z5IKabsd($6236));
        $6254 = $6253 < 9.9999999999999995E-7;
        if (!($6254)) {
         break;
        }
        $6255 = (+__Z5IKabsd($6239));
        $6256 = $6255 < 9.9999999999999995E-7;
        if (!($6256)) {
         break;
        }
        HEAP8[$482>>0] = 1;
        $6257 = +HEAPF64[$20>>3];
        $6258 = (+__Z5IKabsd($6257));
        $6259 = $6258 < 1.9999999999999999E-6;
        do {
         if ($6259) {
          $6260 = +HEAPF64[$21>>3];
          $6261 = (+__Z5IKabsd($6260));
          $6262 = $6261 < 1.9999999999999999E-6;
          if (!($6262)) {
           break;
          }
          $6263 = (+__Z5IKsqrd($6257));
          $6264 = (+__Z5IKsqrd($6260));
          $6265 = $6263 + $6264;
          $6266 = $6265 + -1.0;
          $6267 = (+__Z5IKabsd($6266));
          $6268 = !($6267 <= 1.9999999999999999E-6);
          if (!($6268)) {
           break L7;
          }
         }
        } while(0);
        $6269 = +HEAPF64[$20>>3];
        $6270 = +HEAPF64[$21>>3];
        $6271 = (+__Z7IKatan2dd($6269,$6270));
        $6272 = (+__Z5IKsind($6271));
        $6273 = (+__Z5IKcosd($6271));
        $6274 = $6271 > 3.14159265358979;
        do {
         if ($6274) {
          $6275 = $6271 + -6.2831853071795898;
          $6278 = $6275;
         } else {
          $6276 = $6271 < -3.14159265358979;
          if (!($6276)) {
           $6278 = $6271;
           break;
          }
          $6277 = $6271 + 6.2831853071795898;
          $6278 = $6277;
         }
        } while(0);
        HEAP8[$483>>0] = 0;
        HEAP8[$484>>0] = -1;
        HEAPF64[$485>>3] = $6278;
        HEAPF64[$486>>3] = $6273;
        HEAPF64[$487>>3] = $6272;
        $6279 = +HEAPF64[$485>>3];
        $6280 = (+__Z5IKcosd($6279));
        $6281 = (+__Z5IKsind($6279));
        $6282 = +HEAPF64[$19>>3];
        $6283 = $6280 * $6282;
        $6284 = +HEAPF64[$23>>3];
        $6285 = $6283 + $6284;
        $6286 = +HEAPF64[$21>>3];
        $6287 = $6286 - $6280;
        $6288 = +HEAPF64[$15>>3];
        $6289 = +HEAPF64[$25>>3];
        $6290 = $6281 * $6289;
        $6291 = $6288 + $6290;
        $6292 = $6281 * $6282;
        $6293 = +HEAPF64[$24>>3];
        $6294 = $6293 - $6292;
        $6295 = $6280 * $6289;
        $6296 = +HEAPF64[$11>>3];
        $6297 = $6296 - $6295;
        $6298 = $6282 * $6293;
        $6299 = $6288 * $6289;
        $6300 = $6299 - $6298;
        $6301 = $6281 + $6300;
        $6302 = $6282 * $6284;
        $6303 = $6289 * $6296;
        $6304 = $6303 - $6302;
        $6305 = $6304 - $6280;
        $6306 = (+__Z5IKabsd($6285));
        $6307 = $6306 > 5.0000000000000004E-6;
        if ($6307) {
         break L7;
        }
        $6308 = +HEAPF64[$20>>3];
        $6309 = $6308 - $6281;
        $6310 = (+__Z5IKabsd($6309));
        $6311 = $6310 > 5.0000000000000004E-6;
        if ($6311) {
         break L7;
        }
        $6312 = (+__Z5IKabsd($6287));
        $6313 = $6312 > 5.0000000000000004E-6;
        if ($6313) {
         break L7;
        }
        $6314 = (+__Z5IKabsd($6291));
        $6315 = $6314 > 5.0000000000000004E-6;
        if ($6315) {
         break L7;
        }
        $6316 = (+__Z5IKabsd($6294));
        $6317 = $6316 > 5.0000000000000004E-6;
        if ($6317) {
         break L7;
        }
        $6318 = (+__Z5IKabsd($6297));
        $6319 = $6318 > 5.0000000000000004E-6;
        if ($6319) {
         break L7;
        }
        $6320 = (+__Z5IKabsd($6301));
        $6321 = $6320 > 5.0000000000000004E-6;
        if ($6321) {
         break L7;
        }
        $6322 = (+__Z5IKabsd($6305));
        $6323 = $6322 > 5.0000000000000004E-6;
        if ($6323) {
         break L7;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos240,7);
        $6324 = HEAP32[$vinfos240>>2]|0;
        $6325 = ((($6324)) + 17|0);
        HEAP8[$6325>>0] = 1;
        $6326 = +HEAPF64[$this>>3];
        $6327 = HEAP32[$vinfos240>>2]|0;
        $6328 = ((($6327)) + 8|0);
        HEAPF64[$6328>>3] = $6326;
        $6329 = HEAP8[$488>>0]|0;
        $6330 = HEAP32[$vinfos240>>2]|0;
        $6331 = ((($6330)) + 19|0);
        HEAP8[$6331>>0] = $6329;
        $6332 = HEAP8[$489>>0]|0;
        $6333 = HEAP32[$vinfos240>>2]|0;
        $6334 = ((($6333)) + 20|0);
        HEAP8[$6334>>0] = $6332;
        $6335 = HEAP8[$490>>0]|0;
        $6336 = HEAP32[$vinfos240>>2]|0;
        $6337 = ((($6336)) + 18|0);
        HEAP8[$6337>>0] = $6335;
        $6338 = HEAP32[$vinfos240>>2]|0;
        $6339 = ((($6338)) + 41|0);
        HEAP8[$6339>>0] = 1;
        $6340 = +HEAPF64[$491>>3];
        $6341 = HEAP32[$vinfos240>>2]|0;
        $6342 = ((($6341)) + 32|0);
        HEAPF64[$6342>>3] = $6340;
        $6343 = HEAP8[$492>>0]|0;
        $6344 = HEAP32[$vinfos240>>2]|0;
        $6345 = ((($6344)) + 43|0);
        HEAP8[$6345>>0] = $6343;
        $6346 = HEAP8[$493>>0]|0;
        $6347 = HEAP32[$vinfos240>>2]|0;
        $6348 = ((($6347)) + 44|0);
        HEAP8[$6348>>0] = $6346;
        $6349 = HEAP8[$494>>0]|0;
        $6350 = HEAP32[$vinfos240>>2]|0;
        $6351 = ((($6350)) + 42|0);
        HEAP8[$6351>>0] = $6349;
        $6352 = HEAP32[$vinfos240>>2]|0;
        $6353 = ((($6352)) + 65|0);
        HEAP8[$6353>>0] = 1;
        $6354 = +HEAPF64[$495>>3];
        $6355 = HEAP32[$vinfos240>>2]|0;
        $6356 = ((($6355)) + 56|0);
        HEAPF64[$6356>>3] = $6354;
        $6357 = HEAP8[$496>>0]|0;
        $6358 = HEAP32[$vinfos240>>2]|0;
        $6359 = ((($6358)) + 67|0);
        HEAP8[$6359>>0] = $6357;
        $6360 = HEAP8[$497>>0]|0;
        $6361 = HEAP32[$vinfos240>>2]|0;
        $6362 = ((($6361)) + 68|0);
        HEAP8[$6362>>0] = $6360;
        $6363 = HEAP8[$498>>0]|0;
        $6364 = HEAP32[$vinfos240>>2]|0;
        $6365 = ((($6364)) + 66|0);
        HEAP8[$6365>>0] = $6363;
        $6366 = HEAP32[$vinfos240>>2]|0;
        $6367 = ((($6366)) + 89|0);
        HEAP8[$6367>>0] = 1;
        $6368 = +HEAPF64[$499>>3];
        $6369 = HEAP32[$vinfos240>>2]|0;
        $6370 = ((($6369)) + 80|0);
        HEAPF64[$6370>>3] = $6368;
        $6371 = HEAP8[$500>>0]|0;
        $6372 = HEAP32[$vinfos240>>2]|0;
        $6373 = ((($6372)) + 91|0);
        HEAP8[$6373>>0] = $6371;
        $6374 = HEAP8[$501>>0]|0;
        $6375 = HEAP32[$vinfos240>>2]|0;
        $6376 = ((($6375)) + 92|0);
        HEAP8[$6376>>0] = $6374;
        $6377 = HEAP8[$502>>0]|0;
        $6378 = HEAP32[$vinfos240>>2]|0;
        $6379 = ((($6378)) + 90|0);
        HEAP8[$6379>>0] = $6377;
        $6380 = HEAP32[$vinfos240>>2]|0;
        $6381 = ((($6380)) + 113|0);
        HEAP8[$6381>>0] = 1;
        $6382 = +HEAPF64[$351>>3];
        $6383 = HEAP32[$vinfos240>>2]|0;
        $6384 = ((($6383)) + 104|0);
        HEAPF64[$6384>>3] = $6382;
        $6385 = HEAP8[$349>>0]|0;
        $6386 = HEAP32[$vinfos240>>2]|0;
        $6387 = ((($6386)) + 115|0);
        HEAP8[$6387>>0] = $6385;
        $6388 = HEAP8[$350>>0]|0;
        $6389 = HEAP32[$vinfos240>>2]|0;
        $6390 = ((($6389)) + 116|0);
        HEAP8[$6390>>0] = $6388;
        $6391 = HEAP8[$346>>0]|0;
        $6392 = HEAP32[$vinfos240>>2]|0;
        $6393 = ((($6392)) + 114|0);
        HEAP8[$6393>>0] = $6391;
        $6394 = HEAP32[$vinfos240>>2]|0;
        $6395 = ((($6394)) + 137|0);
        HEAP8[$6395>>0] = 1;
        $6396 = +HEAPF64[$29>>3];
        $6397 = HEAP32[$vinfos240>>2]|0;
        $6398 = ((($6397)) + 128|0);
        HEAPF64[$6398>>3] = $6396;
        $6399 = HEAP8[$27>>0]|0;
        $6400 = HEAP32[$vinfos240>>2]|0;
        $6401 = ((($6400)) + 139|0);
        HEAP8[$6401>>0] = $6399;
        $6402 = HEAP8[$28>>0]|0;
        $6403 = HEAP32[$vinfos240>>2]|0;
        $6404 = ((($6403)) + 140|0);
        HEAP8[$6404>>0] = $6402;
        $6405 = HEAP8[$26>>0]|0;
        $6406 = HEAP32[$vinfos240>>2]|0;
        $6407 = ((($6406)) + 138|0);
        HEAP8[$6407>>0] = $6405;
        $6408 = HEAP32[$vinfos240>>2]|0;
        $6409 = ((($6408)) + 161|0);
        HEAP8[$6409>>0] = 1;
        $6410 = +HEAPF64[$485>>3];
        $6411 = HEAP32[$vinfos240>>2]|0;
        $6412 = ((($6411)) + 152|0);
        HEAPF64[$6412>>3] = $6410;
        $6413 = HEAP8[$483>>0]|0;
        $6414 = HEAP32[$vinfos240>>2]|0;
        $6415 = ((($6414)) + 163|0);
        HEAP8[$6415>>0] = $6413;
        $6416 = HEAP8[$484>>0]|0;
        $6417 = HEAP32[$vinfos240>>2]|0;
        $6418 = ((($6417)) + 164|0);
        HEAP8[$6418>>0] = $6416;
        $6419 = HEAP8[$482>>0]|0;
        $6420 = HEAP32[$vinfos240>>2]|0;
        $6421 = ((($6420)) + 162|0);
        HEAP8[$6421>>0] = $6419;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree241,0);
        $6422 = HEAP32[$solutions>>2]|0;
        $6423 = ((($6422)) + 8|0);
        $6424 = HEAP32[$6423>>2]|0;
        (FUNCTION_TABLE_iiii[$6424 & 31]($solutions,$vinfos240,$vfree241)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree241);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos240);
        break L7;
       }
      } while(0);
      $6425 = +HEAPF64[$30>>3];
      $6426 = +HEAPF64[$25>>3];
      $6427 = +HEAPF64[$31>>3];
      $6428 = +HEAPF64[$19>>3];
      $6429 = +HEAPF64[$351>>3];
      $6430 = $6429 + -3.14159265358979;
      $6431 = (+__Z5IKabsd($6430));
      $6432 = $6431 + 3.14159265358979;
      $6433 = (+__Z6IKfmoddd($6432,6.2831853071795898));
      $6434 = $6433 + -3.14159265358979;
      $6435 = $6427 + $6428;
      $6436 = +HEAPF64[$22>>3];
      $6437 = -$6428;
      $6438 = $6437 - $6427;
      $6439 = +HEAPF64[$11>>3];
      $6440 = $6427 * $6439;
      $6441 = +HEAPF64[$23>>3];
      $6442 = $6425 * $6441;
      $6443 = $6442 - $6440;
      $6444 = +HEAPF64[$15>>3];
      $6445 = $6427 * $6444;
      $6446 = +HEAPF64[$24>>3];
      $6447 = $6425 * $6446;
      $6448 = $6447 - $6445;
      $6449 = $6427 * $6428;
      $6450 = -1.0 - $6449;
      $6451 = $6425 * $6426;
      $6452 = $6451 + $6450;
      $6453 = $6425 * $6428;
      $6454 = $6426 * $6427;
      $6455 = -$6454;
      $6456 = $6455 - $6453;
      $6457 = (+__Z5IKabsd($6434));
      $6458 = $6457 < 9.9999999999999995E-7;
      if (!($6458)) {
       break;
      }
      $6459 = $6426 - $6425;
      $6460 = (+__Z5IKabsd($6459));
      $6461 = $6460 < 9.9999999999999995E-7;
      if (!($6461)) {
       break;
      }
      $6462 = (+__Z5IKabsd($6435));
      $6463 = $6462 < 9.9999999999999995E-7;
      if (!($6463)) {
       break;
      }
      $6464 = (+__Z5IKabsd($6436));
      $6465 = $6464 < 9.9999999999999995E-7;
      if (!($6465)) {
       break;
      }
      $6466 = (+__Z5IKabsd($6438));
      $6467 = $6466 < 9.9999999999999995E-7;
      if (!($6467)) {
       break;
      }
      $6468 = (+__Z5IKabsd($6443));
      $6469 = $6468 < 9.9999999999999995E-7;
      if (!($6469)) {
       break;
      }
      $6470 = (+__Z5IKabsd($6448));
      $6471 = $6470 < 9.9999999999999995E-7;
      if (!($6471)) {
       break;
      }
      $6472 = (+__Z5IKabsd($6452));
      $6473 = $6472 < 9.9999999999999995E-7;
      if (!($6473)) {
       break;
      }
      $6474 = (+__Z5IKabsd($6456));
      $6475 = $6474 < 9.9999999999999995E-7;
      if (!($6475)) {
       break;
      }
      HEAP8[$503>>0] = 1;
      $6476 = +HEAPF64[$24>>3];
      $6477 = -$6476;
      $6478 = +HEAPF64[$23>>3];
      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x600,$6477,$6478,1.9999999999999999E-6);
      $6479 = HEAP8[$504>>0]|0;
      $6480 = ($6479<<24>>24)==(0);
      if ($6480) {
       break;
      }
      $6481 = +HEAPF64[$19>>3];
      $6482 = (+__Z6IKsignd($6481));
      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x601,$6482,-1);
      $6483 = HEAP8[$505>>0]|0;
      $6484 = ($6483<<24>>24)==(0);
      if ($6484) {
       break;
      }
      $6485 = +HEAPF64[$x600>>3];
      $6486 = $6485 + -1.5707963267949001;
      $6487 = +HEAPF64[$x601>>3];
      $6488 = $6487 * 1.5707963267949001;
      $6489 = $6486 + $6488;
      $6490 = (+__Z5IKsind($6489));
      $6491 = (+__Z5IKcosd($6489));
      $6492 = $6489 > 3.14159265358979;
      do {
       if ($6492) {
        $6493 = $6489 + -6.2831853071795898;
        $6496 = $6493;
       } else {
        $6494 = $6489 < -3.14159265358979;
        if (!($6494)) {
         $6496 = $6489;
         break;
        }
        $6495 = $6489 + 6.2831853071795898;
        $6496 = $6495;
       }
      } while(0);
      HEAP8[$506>>0] = 0;
      HEAP8[$507>>0] = -1;
      HEAPF64[$508>>3] = $6496;
      HEAPF64[$509>>3] = $6491;
      HEAPF64[$510>>3] = $6490;
      $6497 = +HEAPF64[$508>>3];
      $6498 = (+__Z5IKsind($6497));
      $6499 = (+__Z5IKcosd($6497));
      $6500 = +HEAPF64[$25>>3];
      $6501 = +HEAPF64[$19>>3];
      $6502 = $6498 * $6501;
      $6503 = +HEAPF64[$24>>3];
      $6504 = $6502 + $6503;
      $6505 = +HEAPF64[$23>>3];
      $6506 = +HEAPF64[$20>>3];
      $6507 = -$6506;
      $6508 = $6507 - $6498;
      $6509 = +HEAPF64[$21>>3];
      $6510 = -$6499;
      $6511 = $6510 - $6509;
      $6512 = $6498 * $6500;
      $6513 = +HEAPF64[$15>>3];
      $6514 = $6512 - $6513;
      $6515 = $6500 * $6510;
      $6516 = +HEAPF64[$11>>3];
      $6517 = $6515 - $6516;
      $6518 = $6500 * $6513;
      $6519 = $6498 - $6518;
      $6520 = $6501 * $6503;
      $6521 = $6520 + $6519;
      $6522 = $6501 * $6505;
      $6523 = $6522 - $6499;
      $6524 = $6500 * $6516;
      $6525 = $6523 - $6524;
      $6526 = (+__Z5IKabsd($6504));
      $6527 = $6526 > 5.0000000000000004E-6;
      if ($6527) {
       break;
      }
      $6528 = $6499 * $6501;
      $6529 = $6505 - $6528;
      $6530 = (+__Z5IKabsd($6529));
      $6531 = $6530 > 5.0000000000000004E-6;
      if ($6531) {
       break;
      }
      $6532 = (+__Z5IKabsd($6508));
      $6533 = $6532 > 5.0000000000000004E-6;
      if ($6533) {
       break;
      }
      $6534 = (+__Z5IKabsd($6511));
      $6535 = $6534 > 5.0000000000000004E-6;
      if ($6535) {
       break;
      }
      $6536 = (+__Z5IKabsd($6514));
      $6537 = $6536 > 5.0000000000000004E-6;
      if ($6537) {
       break;
      }
      $6538 = (+__Z5IKabsd($6517));
      $6539 = $6538 > 5.0000000000000004E-6;
      if ($6539) {
       break;
      }
      $6540 = (+__Z5IKabsd($6521));
      $6541 = $6540 > 5.0000000000000004E-6;
      if ($6541) {
       break;
      }
      $6542 = (+__Z5IKabsd($6525));
      $6543 = $6542 > 5.0000000000000004E-6;
      if ($6543) {
       break;
      }
      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos251,7);
      $6544 = HEAP32[$vinfos251>>2]|0;
      $6545 = ((($6544)) + 17|0);
      HEAP8[$6545>>0] = 1;
      $6546 = +HEAPF64[$this>>3];
      $6547 = HEAP32[$vinfos251>>2]|0;
      $6548 = ((($6547)) + 8|0);
      HEAPF64[$6548>>3] = $6546;
      $6549 = HEAP8[$511>>0]|0;
      $6550 = HEAP32[$vinfos251>>2]|0;
      $6551 = ((($6550)) + 19|0);
      HEAP8[$6551>>0] = $6549;
      $6552 = HEAP8[$512>>0]|0;
      $6553 = HEAP32[$vinfos251>>2]|0;
      $6554 = ((($6553)) + 20|0);
      HEAP8[$6554>>0] = $6552;
      $6555 = HEAP8[$513>>0]|0;
      $6556 = HEAP32[$vinfos251>>2]|0;
      $6557 = ((($6556)) + 18|0);
      HEAP8[$6557>>0] = $6555;
      $6558 = HEAP32[$vinfos251>>2]|0;
      $6559 = ((($6558)) + 41|0);
      HEAP8[$6559>>0] = 1;
      $6560 = +HEAPF64[$514>>3];
      $6561 = HEAP32[$vinfos251>>2]|0;
      $6562 = ((($6561)) + 32|0);
      HEAPF64[$6562>>3] = $6560;
      $6563 = HEAP8[$515>>0]|0;
      $6564 = HEAP32[$vinfos251>>2]|0;
      $6565 = ((($6564)) + 43|0);
      HEAP8[$6565>>0] = $6563;
      $6566 = HEAP8[$516>>0]|0;
      $6567 = HEAP32[$vinfos251>>2]|0;
      $6568 = ((($6567)) + 44|0);
      HEAP8[$6568>>0] = $6566;
      $6569 = HEAP8[$517>>0]|0;
      $6570 = HEAP32[$vinfos251>>2]|0;
      $6571 = ((($6570)) + 42|0);
      HEAP8[$6571>>0] = $6569;
      $6572 = HEAP32[$vinfos251>>2]|0;
      $6573 = ((($6572)) + 65|0);
      HEAP8[$6573>>0] = 1;
      $6574 = +HEAPF64[$518>>3];
      $6575 = HEAP32[$vinfos251>>2]|0;
      $6576 = ((($6575)) + 56|0);
      HEAPF64[$6576>>3] = $6574;
      $6577 = HEAP8[$519>>0]|0;
      $6578 = HEAP32[$vinfos251>>2]|0;
      $6579 = ((($6578)) + 67|0);
      HEAP8[$6579>>0] = $6577;
      $6580 = HEAP8[$520>>0]|0;
      $6581 = HEAP32[$vinfos251>>2]|0;
      $6582 = ((($6581)) + 68|0);
      HEAP8[$6582>>0] = $6580;
      $6583 = HEAP8[$521>>0]|0;
      $6584 = HEAP32[$vinfos251>>2]|0;
      $6585 = ((($6584)) + 66|0);
      HEAP8[$6585>>0] = $6583;
      $6586 = HEAP32[$vinfos251>>2]|0;
      $6587 = ((($6586)) + 89|0);
      HEAP8[$6587>>0] = 1;
      $6588 = +HEAPF64[$522>>3];
      $6589 = HEAP32[$vinfos251>>2]|0;
      $6590 = ((($6589)) + 80|0);
      HEAPF64[$6590>>3] = $6588;
      $6591 = HEAP8[$523>>0]|0;
      $6592 = HEAP32[$vinfos251>>2]|0;
      $6593 = ((($6592)) + 91|0);
      HEAP8[$6593>>0] = $6591;
      $6594 = HEAP8[$524>>0]|0;
      $6595 = HEAP32[$vinfos251>>2]|0;
      $6596 = ((($6595)) + 92|0);
      HEAP8[$6596>>0] = $6594;
      $6597 = HEAP8[$525>>0]|0;
      $6598 = HEAP32[$vinfos251>>2]|0;
      $6599 = ((($6598)) + 90|0);
      HEAP8[$6599>>0] = $6597;
      $6600 = HEAP32[$vinfos251>>2]|0;
      $6601 = ((($6600)) + 113|0);
      HEAP8[$6601>>0] = 1;
      $6602 = +HEAPF64[$351>>3];
      $6603 = HEAP32[$vinfos251>>2]|0;
      $6604 = ((($6603)) + 104|0);
      HEAPF64[$6604>>3] = $6602;
      $6605 = HEAP8[$349>>0]|0;
      $6606 = HEAP32[$vinfos251>>2]|0;
      $6607 = ((($6606)) + 115|0);
      HEAP8[$6607>>0] = $6605;
      $6608 = HEAP8[$350>>0]|0;
      $6609 = HEAP32[$vinfos251>>2]|0;
      $6610 = ((($6609)) + 116|0);
      HEAP8[$6610>>0] = $6608;
      $6611 = HEAP8[$346>>0]|0;
      $6612 = HEAP32[$vinfos251>>2]|0;
      $6613 = ((($6612)) + 114|0);
      HEAP8[$6613>>0] = $6611;
      $6614 = HEAP32[$vinfos251>>2]|0;
      $6615 = ((($6614)) + 137|0);
      HEAP8[$6615>>0] = 1;
      $6616 = +HEAPF64[$29>>3];
      $6617 = HEAP32[$vinfos251>>2]|0;
      $6618 = ((($6617)) + 128|0);
      HEAPF64[$6618>>3] = $6616;
      $6619 = HEAP8[$27>>0]|0;
      $6620 = HEAP32[$vinfos251>>2]|0;
      $6621 = ((($6620)) + 139|0);
      HEAP8[$6621>>0] = $6619;
      $6622 = HEAP8[$28>>0]|0;
      $6623 = HEAP32[$vinfos251>>2]|0;
      $6624 = ((($6623)) + 140|0);
      HEAP8[$6624>>0] = $6622;
      $6625 = HEAP8[$26>>0]|0;
      $6626 = HEAP32[$vinfos251>>2]|0;
      $6627 = ((($6626)) + 138|0);
      HEAP8[$6627>>0] = $6625;
      $6628 = HEAP32[$vinfos251>>2]|0;
      $6629 = ((($6628)) + 161|0);
      HEAP8[$6629>>0] = 1;
      $6630 = +HEAPF64[$508>>3];
      $6631 = HEAP32[$vinfos251>>2]|0;
      $6632 = ((($6631)) + 152|0);
      HEAPF64[$6632>>3] = $6630;
      $6633 = HEAP8[$506>>0]|0;
      $6634 = HEAP32[$vinfos251>>2]|0;
      $6635 = ((($6634)) + 163|0);
      HEAP8[$6635>>0] = $6633;
      $6636 = HEAP8[$507>>0]|0;
      $6637 = HEAP32[$vinfos251>>2]|0;
      $6638 = ((($6637)) + 164|0);
      HEAP8[$6638>>0] = $6636;
      $6639 = HEAP8[$503>>0]|0;
      $6640 = HEAP32[$vinfos251>>2]|0;
      $6641 = ((($6640)) + 162|0);
      HEAP8[$6641>>0] = $6639;
      __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree252,0);
      $6642 = HEAP32[$solutions>>2]|0;
      $6643 = ((($6642)) + 8|0);
      $6644 = HEAP32[$6643>>2]|0;
      (FUNCTION_TABLE_iiii[$6644 & 31]($solutions,$vinfos251,$vfree252)|0);
      __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree252);
      __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos251);
      break;
     }
    }
    $874 = +HEAPF64[$0>>3];
    $875 = +HEAPF64[$1>>3];
    $876 = $874 * $875;
    $877 = +HEAPF64[$2>>3];
    $878 = $875 * $877;
    $879 = +HEAPF64[$3>>3];
    $880 = $875 * $879;
    $881 = +HEAPF64[$4>>3];
    $882 = $879 * $881;
    $883 = +HEAPF64[$5>>3];
    $884 = +HEAPF64[$6>>3];
    $885 = $883 * $884;
    $886 = +HEAPF64[$7>>3];
    $887 = $881 * $886;
    $888 = $886 * $885;
    $889 = $882 - $888;
    $890 = $877 * $889;
    $891 = $879 * $885;
    $892 = -$891;
    $893 = $892 - $887;
    $894 = $627 * $877;
    $895 = $874 * $889;
    $896 = $878 * $883;
    $897 = $896 + $895;
    $898 = $876 * $883;
    $899 = $890 - $898;
    $900 = $627 * $874;
    $901 = $878 * $881;
    $902 = $900 + $901;
    $903 = $876 * $881;
    $904 = $894 - $903;
    $905 = +HEAPF64[$9>>3];
    $906 = $904 * $905;
    $907 = +HEAPF64[$10>>3];
    $908 = $902 * $907;
    $909 = $906 + $908;
    $910 = +HEAPF64[$8>>3];
    $911 = $612 * $910;
    $912 = $909 + $911;
    HEAPF64[$11>>3] = $912;
    $913 = +HEAPF64[$12>>3];
    $914 = $902 * $913;
    $915 = +HEAPF64[$14>>3];
    $916 = $904 * $915;
    $917 = $914 + $916;
    $918 = +HEAPF64[$13>>3];
    $919 = $612 * $918;
    $920 = $917 + $919;
    HEAPF64[$15>>3] = $920;
    $921 = +HEAPF64[$16>>3];
    $922 = $612 * $921;
    $923 = +HEAPF64[$17>>3];
    $924 = $902 * $923;
    $925 = $922 + $924;
    $926 = +HEAPF64[$18>>3];
    $927 = $904 * $926;
    $928 = $925 + $927;
    HEAPF64[$19>>3] = $928;
    $929 = +HEAPF64[$8>>3];
    $930 = $880 * $929;
    $931 = +HEAPF64[$9>>3];
    $932 = $615 * $931;
    $933 = $930 + $932;
    $934 = +HEAPF64[$10>>3];
    $935 = $618 * $934;
    $936 = $933 + $935;
    HEAPF64[$20>>3] = $936;
    $937 = +HEAPF64[$14>>3];
    $938 = $615 * $937;
    $939 = +HEAPF64[$12>>3];
    $940 = $618 * $939;
    $941 = $938 + $940;
    $942 = +HEAPF64[$13>>3];
    $943 = $880 * $942;
    $944 = $941 + $943;
    HEAPF64[$21>>3] = $944;
    $945 = +HEAPF64[$18>>3];
    $946 = $615 * $945;
    $947 = +HEAPF64[$17>>3];
    $948 = $618 * $947;
    $949 = $946 + $948;
    $950 = +HEAPF64[$16>>3];
    $951 = $880 * $950;
    $952 = $949 + $951;
    HEAPF64[$22>>3] = $952;
    $953 = +HEAPF64[$9>>3];
    $954 = $899 * $953;
    $955 = +HEAPF64[$10>>3];
    $956 = $897 * $955;
    $957 = $954 + $956;
    $958 = +HEAPF64[$8>>3];
    $959 = $893 * $958;
    $960 = $957 + $959;
    HEAPF64[$23>>3] = $960;
    $961 = +HEAPF64[$12>>3];
    $962 = $897 * $961;
    $963 = +HEAPF64[$14>>3];
    $964 = $899 * $963;
    $965 = $962 + $964;
    $966 = +HEAPF64[$13>>3];
    $967 = $893 * $966;
    $968 = $965 + $967;
    HEAPF64[$24>>3] = $968;
    $969 = +HEAPF64[$16>>3];
    $970 = $893 * $969;
    $971 = +HEAPF64[$17>>3];
    $972 = $897 * $971;
    $973 = $970 + $972;
    $974 = +HEAPF64[$18>>3];
    $975 = $899 * $974;
    $976 = $973 + $975;
    HEAPF64[$25>>3] = $976;
    $977 = +HEAPF64[$31>>3];
    $978 = (+__Z5IKabsd($977));
    $979 = $978 < 9.9999999999999995E-7;
    if ($979) {
     $980 = +HEAPF64[$29>>3];
     $981 = (+__Z5IKabsd($980));
     $982 = $981 + 3.14159265358979;
     $983 = (+__Z6IKfmoddd($982,6.2831853071795898));
     $984 = $983 + -3.14159265358979;
     $985 = +HEAPF64[$23>>3];
     $986 = +HEAPF64[$19>>3];
     $987 = +HEAPF64[$22>>3];
     $988 = +HEAPF64[$24>>3];
     $989 = (+__Z5IKabsd($984));
     $990 = $989 < 9.9999999999999995E-7;
     if ($990) {
      $991 = $976 + -1.0;
      $992 = (+__Z5IKabsd($991));
      $993 = $992 < 9.9999999999999995E-7;
      if ($993) {
       $994 = (+__Z5IKabsd($985));
       $995 = $994 < 9.9999999999999995E-7;
       if ($995) {
        $996 = (+__Z5IKabsd($986));
        $997 = $996 < 9.9999999999999995E-7;
        if ($997) {
         $998 = (+__Z5IKabsd($987));
         $999 = $998 < 9.9999999999999995E-7;
         if ($999) {
          $1000 = (+__Z5IKabsd($988));
          $1001 = $1000 < 9.9999999999999995E-7;
          if ($1001) {
           HEAP16[$j31valid>>1] = 0;
           HEAP8[$32>>0] = 2;
           $1002 = +HEAPF64[$19>>3];
           $1003 = +HEAPF64[$22>>3];
           __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x255,$1002,$1003,1.9999999999999999E-6);
           $1004 = HEAP8[$33>>0]|0;
           $1005 = ($1004<<24>>24)==(0);
           if ($1005) {
            break;
           }
           $1006 = +HEAPF64[$x255>>3];
           $1007 = -$1006;
           HEAPF64[$j31array>>3] = $1007;
           $1008 = (+__Z5IKsind($1007));
           HEAPF64[$sj31array>>3] = $1008;
           $1009 = (+__Z5IKcosd($1007));
           HEAPF64[$cj31array>>3] = $1009;
           $1010 = 3.14159265358979 - $1006;
           HEAPF64[$34>>3] = $1010;
           $1011 = (+__Z5IKsind($1010));
           HEAPF64[$35>>3] = $1011;
           $1012 = +HEAPF64[$34>>3];
           $1013 = (+__Z5IKcosd($1012));
           HEAPF64[$36>>3] = $1013;
           $1014 = +HEAPF64[$j31array>>3];
           $1015 = $1014 > 3.14159265358979;
           if ($1015) {
            $1016 = $1014 + -6.2831853071795898;
            HEAPF64[$j31array>>3] = $1016;
           } else {
            $1017 = $1014 < -3.14159265358979;
            if ($1017) {
             $1018 = $1014 + 6.2831853071795898;
             HEAPF64[$j31array>>3] = $1018;
            }
           }
           HEAP8[$j31valid>>0] = 1;
           $1019 = +HEAPF64[$34>>3];
           $1020 = $1019 > 3.14159265358979;
           if ($1020) {
            $1021 = $1019 + -6.2831853071795898;
            HEAPF64[$34>>3] = $1021;
           } else {
            $1022 = $1019 < -3.14159265358979;
            if ($1022) {
             $1023 = $1019 + 6.2831853071795898;
             HEAPF64[$34>>3] = $1023;
            }
           }
           HEAP8[$37>>0] = 1;
           $ij31$0368 = 0;
           while(1) {
            $1024 = (($j31valid) + ($ij31$0368)|0);
            $1025 = HEAP8[$1024>>0]|0;
            $1026 = ($1025<<24>>24)==(0);
            L351: do {
             if (!($1026)) {
              $1027 = $ij31$0368&255;
              HEAP8[$38>>0] = $1027;
              HEAP8[$39>>0] = -1;
              $iij31$0361 = (($ij31$0368) + 1)|0;
              $1028 = ($iij31$0361|0)<(2);
              do {
               if ($1028) {
                $1029 = (($sj31array) + ($ij31$0368<<3)|0);
                $1030 = (($j31valid) + ($iij31$0361)|0);
                $1031 = HEAP8[$1030>>0]|0;
                $1032 = ($1031<<24>>24)==(0);
                if ($1032) {
                 break;
                }
                $1033 = (($cj31array) + ($ij31$0368<<3)|0);
                $1034 = +HEAPF64[$1033>>3];
                $1035 = (($cj31array) + ($iij31$0361<<3)|0);
                $1036 = +HEAPF64[$1035>>3];
                $1037 = $1034 - $1036;
                $1038 = (+__Z5IKabsd($1037));
                $1039 = $1038 < 9.9999999999999995E-7;
                if (!($1039)) {
                 break;
                }
                $1040 = +HEAPF64[$1029>>3];
                $1041 = (($sj31array) + ($iij31$0361<<3)|0);
                $1042 = +HEAPF64[$1041>>3];
                $1043 = $1040 - $1042;
                $1044 = (+__Z5IKabsd($1043));
                $1045 = $1044 < 9.9999999999999995E-7;
                if (!($1045)) {
                 break;
                }
                HEAP8[$1030>>0] = 0;
                $1046 = $iij31$0361&255;
                HEAP8[$39>>0] = $1046;
               }
              } while(0);
              $1047 = (($j31array) + ($ij31$0368<<3)|0);
              $1048 = +HEAPF64[$1047>>3];
              HEAPF64[$40>>3] = $1048;
              $1049 = (($cj31array) + ($ij31$0368<<3)|0);
              $1050 = +HEAPF64[$1049>>3];
              HEAPF64[$41>>3] = $1050;
              $1051 = (($sj31array) + ($ij31$0368<<3)|0);
              $1052 = +HEAPF64[$1051>>3];
              HEAPF64[$42>>3] = $1052;
              $1053 = +HEAPF64[$22>>3];
              $1054 = +HEAPF64[$40>>3];
              $1055 = (+__Z5IKcosd($1054));
              $1056 = $1053 * $1055;
              $1057 = +HEAPF64[$19>>3];
              $1058 = (+__Z5IKsind($1054));
              $1059 = $1057 * $1058;
              $1060 = $1056 - $1059;
              $1061 = (+__Z5IKabsd($1060));
              $1062 = $1061 > 5.0000000000000004E-6;
              if ($1062) {
               break;
              }
              HEAP8[$43>>0] = 1;
              $1063 = +HEAPF64[$42>>3];
              $1064 = +HEAPF64[$41>>3];
              $1065 = +HEAPF64[$15>>3];
              $1066 = $1064 * $1065;
              $1067 = +HEAPF64[$11>>3];
              $1068 = $1063 * $1067;
              $1069 = -$1068;
              $1070 = $1069 - $1066;
              $1071 = (+__Z5IKabsd($1070));
              $1072 = $1071 < 1.9999999999999999E-6;
              do {
               if ($1072) {
                $1073 = $1063 * $1065;
                $1074 = $1064 * $1067;
                $1075 = $1074 - $1073;
                $1076 = (+__Z5IKabsd($1075));
                $1077 = $1076 < 1.9999999999999999E-6;
                if (!($1077)) {
                 break;
                }
                $1078 = (+__Z5IKsqrd($1070));
                $1079 = (+__Z5IKsqrd($1075));
                $1080 = $1078 + $1079;
                $1081 = $1080 + -1.0;
                $1082 = (+__Z5IKabsd($1081));
                $1083 = !($1082 <= 1.9999999999999999E-6);
                if (!($1083)) {
                 break L351;
                }
               }
              } while(0);
              $1084 = +HEAPF64[$41>>3];
              $1085 = +HEAPF64[$15>>3];
              $1086 = $1084 * $1085;
              $1087 = +HEAPF64[$11>>3];
              $1088 = $1063 * $1087;
              $1089 = -$1088;
              $1090 = $1089 - $1086;
              $1091 = $1063 * $1085;
              $1092 = $1084 * $1087;
              $1093 = $1092 - $1091;
              $1094 = (+__Z7IKatan2dd($1090,$1093));
              $1095 = (+__Z5IKsind($1094));
              $1096 = (+__Z5IKcosd($1094));
              $1097 = $1094 > 3.14159265358979;
              do {
               if ($1097) {
                $1098 = $1094 + -6.2831853071795898;
                $1101 = $1098;
               } else {
                $1099 = $1094 < -3.14159265358979;
                if (!($1099)) {
                 $1101 = $1094;
                 break;
                }
                $1100 = $1094 + 6.2831853071795898;
                $1101 = $1100;
               }
              } while(0);
              HEAP8[$44>>0] = 0;
              HEAP8[$45>>0] = -1;
              HEAPF64[$46>>3] = $1101;
              HEAPF64[$47>>3] = $1096;
              HEAPF64[$48>>3] = $1095;
              $1102 = +HEAPF64[$46>>3];
              $1103 = (+__Z5IKsind($1102));
              $1104 = (+__Z5IKcosd($1102));
              $1105 = +HEAPF64[$42>>3];
              $1106 = $1103 * $1105;
              $1107 = +HEAPF64[$41>>3];
              $1108 = $1104 * $1107;
              $1109 = +HEAPF64[$15>>3];
              $1110 = $1107 * $1109;
              $1111 = +HEAPF64[$21>>3];
              $1112 = $1105 * $1111;
              $1113 = $1110 + $1112;
              $1114 = $1103 + $1113;
              $1115 = +HEAPF64[$11>>3];
              $1116 = $1107 * $1115;
              $1117 = +HEAPF64[$20>>3];
              $1118 = $1105 * $1117;
              $1119 = $1116 + $1118;
              $1120 = $1119 - $1104;
              $1121 = $1107 * $1117;
              $1122 = $1121 - $1103;
              $1123 = $1105 * $1115;
              $1124 = $1122 - $1123;
              $1125 = $1105 * $1109;
              $1126 = $1107 * $1111;
              $1127 = $1126 - $1125;
              $1128 = $1127 - $1104;
              $1129 = $1106 + $1115;
              $1130 = $1129 - $1108;
              $1131 = $1106 + $1111;
              $1132 = $1131 - $1108;
              $1133 = $1103 * $1107;
              $1134 = $1117 - $1133;
              $1135 = $1104 * $1105;
              $1136 = $1134 - $1135;
              $1137 = (+__Z5IKabsd($1114));
              $1138 = $1137 > 5.0000000000000004E-6;
              if ($1138) {
               break;
              }
              $1139 = $1135 + $1133;
              $1140 = $1109 + $1139;
              $1141 = (+__Z5IKabsd($1140));
              $1142 = $1141 > 5.0000000000000004E-6;
              if ($1142) {
               break;
              }
              $1143 = (+__Z5IKabsd($1120));
              $1144 = $1143 > 5.0000000000000004E-6;
              if ($1144) {
               break;
              }
              $1145 = (+__Z5IKabsd($1124));
              $1146 = $1145 > 5.0000000000000004E-6;
              if ($1146) {
               break;
              }
              $1147 = (+__Z5IKabsd($1128));
              $1148 = $1147 > 5.0000000000000004E-6;
              if ($1148) {
               break;
              }
              $1149 = (+__Z5IKabsd($1130));
              $1150 = $1149 > 5.0000000000000004E-6;
              if ($1150) {
               break;
              }
              $1151 = (+__Z5IKabsd($1132));
              $1152 = $1151 > 5.0000000000000004E-6;
              if ($1152) {
               break;
              }
              $1153 = (+__Z5IKabsd($1136));
              $1154 = $1153 > 5.0000000000000004E-6;
              if ($1154) {
               break;
              }
              __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos,7);
              $1155 = HEAP32[$vinfos>>2]|0;
              $1156 = ((($1155)) + 17|0);
              HEAP8[$1156>>0] = 1;
              $1157 = +HEAPF64[$this>>3];
              $1158 = HEAP32[$vinfos>>2]|0;
              $1159 = ((($1158)) + 8|0);
              HEAPF64[$1159>>3] = $1157;
              $1160 = HEAP8[$49>>0]|0;
              $1161 = HEAP32[$vinfos>>2]|0;
              $1162 = ((($1161)) + 19|0);
              HEAP8[$1162>>0] = $1160;
              $1163 = HEAP8[$50>>0]|0;
              $1164 = HEAP32[$vinfos>>2]|0;
              $1165 = ((($1164)) + 20|0);
              HEAP8[$1165>>0] = $1163;
              $1166 = HEAP8[$51>>0]|0;
              $1167 = HEAP32[$vinfos>>2]|0;
              $1168 = ((($1167)) + 18|0);
              HEAP8[$1168>>0] = $1166;
              $1169 = HEAP32[$vinfos>>2]|0;
              $1170 = ((($1169)) + 41|0);
              HEAP8[$1170>>0] = 1;
              $1171 = +HEAPF64[$52>>3];
              $1172 = HEAP32[$vinfos>>2]|0;
              $1173 = ((($1172)) + 32|0);
              HEAPF64[$1173>>3] = $1171;
              $1174 = HEAP8[$53>>0]|0;
              $1175 = HEAP32[$vinfos>>2]|0;
              $1176 = ((($1175)) + 43|0);
              HEAP8[$1176>>0] = $1174;
              $1177 = HEAP8[$54>>0]|0;
              $1178 = HEAP32[$vinfos>>2]|0;
              $1179 = ((($1178)) + 44|0);
              HEAP8[$1179>>0] = $1177;
              $1180 = HEAP8[$55>>0]|0;
              $1181 = HEAP32[$vinfos>>2]|0;
              $1182 = ((($1181)) + 42|0);
              HEAP8[$1182>>0] = $1180;
              $1183 = HEAP32[$vinfos>>2]|0;
              $1184 = ((($1183)) + 65|0);
              HEAP8[$1184>>0] = 1;
              $1185 = +HEAPF64[$56>>3];
              $1186 = HEAP32[$vinfos>>2]|0;
              $1187 = ((($1186)) + 56|0);
              HEAPF64[$1187>>3] = $1185;
              $1188 = HEAP8[$57>>0]|0;
              $1189 = HEAP32[$vinfos>>2]|0;
              $1190 = ((($1189)) + 67|0);
              HEAP8[$1190>>0] = $1188;
              $1191 = HEAP8[$58>>0]|0;
              $1192 = HEAP32[$vinfos>>2]|0;
              $1193 = ((($1192)) + 68|0);
              HEAP8[$1193>>0] = $1191;
              $1194 = HEAP8[$59>>0]|0;
              $1195 = HEAP32[$vinfos>>2]|0;
              $1196 = ((($1195)) + 66|0);
              HEAP8[$1196>>0] = $1194;
              $1197 = HEAP32[$vinfos>>2]|0;
              $1198 = ((($1197)) + 89|0);
              HEAP8[$1198>>0] = 1;
              $1199 = +HEAPF64[$60>>3];
              $1200 = HEAP32[$vinfos>>2]|0;
              $1201 = ((($1200)) + 80|0);
              HEAPF64[$1201>>3] = $1199;
              $1202 = HEAP8[$61>>0]|0;
              $1203 = HEAP32[$vinfos>>2]|0;
              $1204 = ((($1203)) + 91|0);
              HEAP8[$1204>>0] = $1202;
              $1205 = HEAP8[$62>>0]|0;
              $1206 = HEAP32[$vinfos>>2]|0;
              $1207 = ((($1206)) + 92|0);
              HEAP8[$1207>>0] = $1205;
              $1208 = HEAP8[$63>>0]|0;
              $1209 = HEAP32[$vinfos>>2]|0;
              $1210 = ((($1209)) + 90|0);
              HEAP8[$1210>>0] = $1208;
              $1211 = HEAP32[$vinfos>>2]|0;
              $1212 = ((($1211)) + 113|0);
              HEAP8[$1212>>0] = 1;
              $1213 = +HEAPF64[$40>>3];
              $1214 = HEAP32[$vinfos>>2]|0;
              $1215 = ((($1214)) + 104|0);
              HEAPF64[$1215>>3] = $1213;
              $1216 = HEAP8[$38>>0]|0;
              $1217 = HEAP32[$vinfos>>2]|0;
              $1218 = ((($1217)) + 115|0);
              HEAP8[$1218>>0] = $1216;
              $1219 = HEAP8[$39>>0]|0;
              $1220 = HEAP32[$vinfos>>2]|0;
              $1221 = ((($1220)) + 116|0);
              HEAP8[$1221>>0] = $1219;
              $1222 = HEAP8[$32>>0]|0;
              $1223 = HEAP32[$vinfos>>2]|0;
              $1224 = ((($1223)) + 114|0);
              HEAP8[$1224>>0] = $1222;
              $1225 = HEAP32[$vinfos>>2]|0;
              $1226 = ((($1225)) + 137|0);
              HEAP8[$1226>>0] = 1;
              $1227 = +HEAPF64[$29>>3];
              $1228 = HEAP32[$vinfos>>2]|0;
              $1229 = ((($1228)) + 128|0);
              HEAPF64[$1229>>3] = $1227;
              $1230 = HEAP8[$27>>0]|0;
              $1231 = HEAP32[$vinfos>>2]|0;
              $1232 = ((($1231)) + 139|0);
              HEAP8[$1232>>0] = $1230;
              $1233 = HEAP8[$28>>0]|0;
              $1234 = HEAP32[$vinfos>>2]|0;
              $1235 = ((($1234)) + 140|0);
              HEAP8[$1235>>0] = $1233;
              $1236 = HEAP8[$26>>0]|0;
              $1237 = HEAP32[$vinfos>>2]|0;
              $1238 = ((($1237)) + 138|0);
              HEAP8[$1238>>0] = $1236;
              $1239 = HEAP32[$vinfos>>2]|0;
              $1240 = ((($1239)) + 161|0);
              HEAP8[$1240>>0] = 1;
              $1241 = +HEAPF64[$46>>3];
              $1242 = HEAP32[$vinfos>>2]|0;
              $1243 = ((($1242)) + 152|0);
              HEAPF64[$1243>>3] = $1241;
              $1244 = HEAP8[$44>>0]|0;
              $1245 = HEAP32[$vinfos>>2]|0;
              $1246 = ((($1245)) + 163|0);
              HEAP8[$1246>>0] = $1244;
              $1247 = HEAP8[$45>>0]|0;
              $1248 = HEAP32[$vinfos>>2]|0;
              $1249 = ((($1248)) + 164|0);
              HEAP8[$1249>>0] = $1247;
              $1250 = HEAP8[$43>>0]|0;
              $1251 = HEAP32[$vinfos>>2]|0;
              $1252 = ((($1251)) + 162|0);
              HEAP8[$1252>>0] = $1250;
              __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree,0);
              $1253 = HEAP32[$solutions>>2]|0;
              $1254 = ((($1253)) + 8|0);
              $1255 = HEAP32[$1254>>2]|0;
              (FUNCTION_TABLE_iiii[$1255 & 31]($solutions,$vinfos,$vfree)|0);
              __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree);
              __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos);
             }
            } while(0);
            $1256 = (($ij31$0368) + 1)|0;
            $1257 = ($1256|0)<(2);
            if ($1257) {
             $ij31$0368 = $1256;
            } else {
             break L7;
            }
           }
          }
         }
        }
       }
      }
     }
     $1258 = +HEAPF64[$29>>3];
     $1259 = $1258 + -3.14159265358979;
     $1260 = (+__Z5IKabsd($1259));
     $1261 = $1260 + 3.14159265358979;
     $1262 = (+__Z6IKfmoddd($1261,6.2831853071795898));
     $1263 = $1262 + -3.14159265358979;
     $1264 = +HEAPF64[$23>>3];
     $1265 = +HEAPF64[$19>>3];
     $1266 = +HEAPF64[$22>>3];
     $1267 = +HEAPF64[$24>>3];
     $1268 = (+__Z5IKabsd($1263));
     $1269 = $1268 < 9.9999999999999995E-7;
     if (!($1269)) {
      break;
     }
     $1270 = +HEAPF64[$25>>3];
     $1271 = $1270 + 1.0;
     $1272 = (+__Z5IKabsd($1271));
     $1273 = $1272 < 9.9999999999999995E-7;
     if (!($1273)) {
      break;
     }
     $1274 = (+__Z5IKabsd($1264));
     $1275 = $1274 < 9.9999999999999995E-7;
     if (!($1275)) {
      break;
     }
     $1276 = (+__Z5IKabsd($1265));
     $1277 = $1276 < 9.9999999999999995E-7;
     if (!($1277)) {
      break;
     }
     $1278 = (+__Z5IKabsd($1266));
     $1279 = $1278 < 9.9999999999999995E-7;
     if (!($1279)) {
      break;
     }
     $1280 = (+__Z5IKabsd($1267));
     $1281 = $1280 < 9.9999999999999995E-7;
     if (!($1281)) {
      break;
     }
     HEAP16[$j31valid8>>1] = 0;
     HEAP8[$64>>0] = 2;
     $1282 = +HEAPF64[$19>>3];
     $1283 = +HEAPF64[$22>>3];
     __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x265,$1282,$1283,1.9999999999999999E-6);
     $1284 = HEAP8[$65>>0]|0;
     $1285 = ($1284<<24>>24)==(0);
     if ($1285) {
      break;
     }
     $1286 = +HEAPF64[$x265>>3];
     $1287 = -$1286;
     HEAPF64[$j31array5>>3] = $1287;
     $1288 = (+__Z5IKsind($1287));
     HEAPF64[$sj31array7>>3] = $1288;
     $1289 = (+__Z5IKcosd($1287));
     HEAPF64[$cj31array6>>3] = $1289;
     $1290 = 3.14159265358979 - $1286;
     HEAPF64[$66>>3] = $1290;
     $1291 = (+__Z5IKsind($1290));
     HEAPF64[$67>>3] = $1291;
     $1292 = +HEAPF64[$66>>3];
     $1293 = (+__Z5IKcosd($1292));
     HEAPF64[$68>>3] = $1293;
     $1294 = +HEAPF64[$j31array5>>3];
     $1295 = $1294 > 3.14159265358979;
     if ($1295) {
      $1296 = $1294 + -6.2831853071795898;
      HEAPF64[$j31array5>>3] = $1296;
     } else {
      $1297 = $1294 < -3.14159265358979;
      if ($1297) {
       $1298 = $1294 + 6.2831853071795898;
       HEAPF64[$j31array5>>3] = $1298;
      }
     }
     HEAP8[$j31valid8>>0] = 1;
     $1299 = +HEAPF64[$66>>3];
     $1300 = $1299 > 3.14159265358979;
     if ($1300) {
      $1301 = $1299 + -6.2831853071795898;
      HEAPF64[$66>>3] = $1301;
     } else {
      $1302 = $1299 < -3.14159265358979;
      if ($1302) {
       $1303 = $1299 + 6.2831853071795898;
       HEAPF64[$66>>3] = $1303;
      }
     }
     HEAP8[$69>>0] = 1;
     $ij319$0360 = 0;
     while(1) {
      $1304 = (($j31valid8) + ($ij319$0360)|0);
      $1305 = HEAP8[$1304>>0]|0;
      $1306 = ($1305<<24>>24)==(0);
      L398: do {
       if (!($1306)) {
        $1307 = $ij319$0360&255;
        HEAP8[$70>>0] = $1307;
        HEAP8[$71>>0] = -1;
        $iij3110$0353 = (($ij319$0360) + 1)|0;
        $1308 = ($iij3110$0353|0)<(2);
        do {
         if ($1308) {
          $1309 = (($sj31array7) + ($ij319$0360<<3)|0);
          $1310 = (($j31valid8) + ($iij3110$0353)|0);
          $1311 = HEAP8[$1310>>0]|0;
          $1312 = ($1311<<24>>24)==(0);
          if ($1312) {
           break;
          }
          $1313 = (($cj31array6) + ($ij319$0360<<3)|0);
          $1314 = +HEAPF64[$1313>>3];
          $1315 = (($cj31array6) + ($iij3110$0353<<3)|0);
          $1316 = +HEAPF64[$1315>>3];
          $1317 = $1314 - $1316;
          $1318 = (+__Z5IKabsd($1317));
          $1319 = $1318 < 9.9999999999999995E-7;
          if (!($1319)) {
           break;
          }
          $1320 = +HEAPF64[$1309>>3];
          $1321 = (($sj31array7) + ($iij3110$0353<<3)|0);
          $1322 = +HEAPF64[$1321>>3];
          $1323 = $1320 - $1322;
          $1324 = (+__Z5IKabsd($1323));
          $1325 = $1324 < 9.9999999999999995E-7;
          if (!($1325)) {
           break;
          }
          HEAP8[$1310>>0] = 0;
          $1326 = $iij3110$0353&255;
          HEAP8[$71>>0] = $1326;
         }
        } while(0);
        $1327 = (($j31array5) + ($ij319$0360<<3)|0);
        $1328 = +HEAPF64[$1327>>3];
        HEAPF64[$72>>3] = $1328;
        $1329 = (($cj31array6) + ($ij319$0360<<3)|0);
        $1330 = +HEAPF64[$1329>>3];
        HEAPF64[$73>>3] = $1330;
        $1331 = (($sj31array7) + ($ij319$0360<<3)|0);
        $1332 = +HEAPF64[$1331>>3];
        HEAPF64[$74>>3] = $1332;
        $1333 = +HEAPF64[$22>>3];
        $1334 = +HEAPF64[$72>>3];
        $1335 = (+__Z5IKcosd($1334));
        $1336 = $1333 * $1335;
        $1337 = +HEAPF64[$19>>3];
        $1338 = (+__Z5IKsind($1334));
        $1339 = $1337 * $1338;
        $1340 = $1336 - $1339;
        $1341 = (+__Z5IKabsd($1340));
        $1342 = $1341 > 5.0000000000000004E-6;
        if ($1342) {
         break;
        }
        HEAP8[$75>>0] = 1;
        $1343 = +HEAPF64[$74>>3];
        $1344 = +HEAPF64[$11>>3];
        $1345 = $1343 * $1344;
        $1346 = +HEAPF64[$73>>3];
        $1347 = +HEAPF64[$15>>3];
        $1348 = $1346 * $1347;
        $1349 = $1348 - $1345;
        $1350 = (+__Z5IKabsd($1349));
        $1351 = $1350 < 1.9999999999999999E-6;
        do {
         if ($1351) {
          $1352 = $1343 * $1347;
          $1353 = $1344 * $1346;
          $1354 = -$1353;
          $1355 = $1354 - $1352;
          $1356 = (+__Z5IKabsd($1355));
          $1357 = $1356 < 1.9999999999999999E-6;
          if (!($1357)) {
           break;
          }
          $1358 = (+__Z5IKsqrd($1349));
          $1359 = (+__Z5IKsqrd($1355));
          $1360 = $1358 + $1359;
          $1361 = $1360 + -1.0;
          $1362 = (+__Z5IKabsd($1361));
          $1363 = !($1362 <= 1.9999999999999999E-6);
          if (!($1363)) {
           break L398;
          }
         }
        } while(0);
        $1364 = +HEAPF64[$11>>3];
        $1365 = $1343 * $1364;
        $1366 = +HEAPF64[$73>>3];
        $1367 = +HEAPF64[$15>>3];
        $1368 = $1366 * $1367;
        $1369 = $1368 - $1365;
        $1370 = $1343 * $1367;
        $1371 = $1364 * $1366;
        $1372 = -$1371;
        $1373 = $1372 - $1370;
        $1374 = (+__Z7IKatan2dd($1369,$1373));
        $1375 = (+__Z5IKsind($1374));
        $1376 = (+__Z5IKcosd($1374));
        $1377 = $1374 > 3.14159265358979;
        do {
         if ($1377) {
          $1378 = $1374 + -6.2831853071795898;
          $1381 = $1378;
         } else {
          $1379 = $1374 < -3.14159265358979;
          if (!($1379)) {
           $1381 = $1374;
           break;
          }
          $1380 = $1374 + 6.2831853071795898;
          $1381 = $1380;
         }
        } while(0);
        HEAP8[$76>>0] = 0;
        HEAP8[$77>>0] = -1;
        HEAPF64[$78>>3] = $1381;
        HEAPF64[$79>>3] = $1376;
        HEAPF64[$80>>3] = $1375;
        $1382 = +HEAPF64[$78>>3];
        $1383 = (+__Z5IKsind($1382));
        $1384 = (+__Z5IKcosd($1382));
        $1385 = +HEAPF64[$74>>3];
        $1386 = $1384 * $1385;
        $1387 = +HEAPF64[$73>>3];
        $1388 = $1383 * $1387;
        $1389 = +HEAPF64[$11>>3];
        $1390 = $1387 * $1389;
        $1391 = +HEAPF64[$20>>3];
        $1392 = $1385 * $1391;
        $1393 = $1390 + $1392;
        $1394 = $1384 + $1393;
        $1395 = +HEAPF64[$15>>3];
        $1396 = +HEAPF64[$21>>3];
        $1397 = $1383 * $1385;
        $1398 = $1384 * $1387;
        $1399 = $1397 + $1398;
        $1400 = $1389 + $1399;
        $1401 = $1387 * $1391;
        $1402 = $1385 * $1389;
        $1403 = $1401 - $1402;
        $1404 = $1403 - $1383;
        $1405 = $1385 * $1395;
        $1406 = $1387 * $1396;
        $1407 = $1406 - $1405;
        $1408 = $1407 - $1384;
        $1409 = $1386 - $1388;
        $1410 = $1409 + $1395;
        $1411 = $1409 + $1391;
        $1412 = -$1397;
        $1413 = $1412 - $1398;
        $1414 = $1413 + $1396;
        $1415 = (+__Z5IKabsd($1394));
        $1416 = $1415 > 5.0000000000000004E-6;
        if ($1416) {
         break;
        }
        $1417 = $1387 * $1395;
        $1418 = $1385 * $1396;
        $1419 = $1417 + $1418;
        $1420 = $1419 - $1383;
        $1421 = (+__Z5IKabsd($1420));
        $1422 = $1421 > 5.0000000000000004E-6;
        if ($1422) {
         break;
        }
        $1423 = (+__Z5IKabsd($1400));
        $1424 = $1423 > 5.0000000000000004E-6;
        if ($1424) {
         break;
        }
        $1425 = (+__Z5IKabsd($1404));
        $1426 = $1425 > 5.0000000000000004E-6;
        if ($1426) {
         break;
        }
        $1427 = (+__Z5IKabsd($1408));
        $1428 = $1427 > 5.0000000000000004E-6;
        if ($1428) {
         break;
        }
        $1429 = (+__Z5IKabsd($1410));
        $1430 = $1429 > 5.0000000000000004E-6;
        if ($1430) {
         break;
        }
        $1431 = (+__Z5IKabsd($1411));
        $1432 = $1431 > 5.0000000000000004E-6;
        if ($1432) {
         break;
        }
        $1433 = (+__Z5IKabsd($1414));
        $1434 = $1433 > 5.0000000000000004E-6;
        if ($1434) {
         break;
        }
        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos20,7);
        $1435 = HEAP32[$vinfos20>>2]|0;
        $1436 = ((($1435)) + 17|0);
        HEAP8[$1436>>0] = 1;
        $1437 = +HEAPF64[$this>>3];
        $1438 = HEAP32[$vinfos20>>2]|0;
        $1439 = ((($1438)) + 8|0);
        HEAPF64[$1439>>3] = $1437;
        $1440 = HEAP8[$81>>0]|0;
        $1441 = HEAP32[$vinfos20>>2]|0;
        $1442 = ((($1441)) + 19|0);
        HEAP8[$1442>>0] = $1440;
        $1443 = HEAP8[$82>>0]|0;
        $1444 = HEAP32[$vinfos20>>2]|0;
        $1445 = ((($1444)) + 20|0);
        HEAP8[$1445>>0] = $1443;
        $1446 = HEAP8[$83>>0]|0;
        $1447 = HEAP32[$vinfos20>>2]|0;
        $1448 = ((($1447)) + 18|0);
        HEAP8[$1448>>0] = $1446;
        $1449 = HEAP32[$vinfos20>>2]|0;
        $1450 = ((($1449)) + 41|0);
        HEAP8[$1450>>0] = 1;
        $1451 = +HEAPF64[$84>>3];
        $1452 = HEAP32[$vinfos20>>2]|0;
        $1453 = ((($1452)) + 32|0);
        HEAPF64[$1453>>3] = $1451;
        $1454 = HEAP8[$85>>0]|0;
        $1455 = HEAP32[$vinfos20>>2]|0;
        $1456 = ((($1455)) + 43|0);
        HEAP8[$1456>>0] = $1454;
        $1457 = HEAP8[$86>>0]|0;
        $1458 = HEAP32[$vinfos20>>2]|0;
        $1459 = ((($1458)) + 44|0);
        HEAP8[$1459>>0] = $1457;
        $1460 = HEAP8[$87>>0]|0;
        $1461 = HEAP32[$vinfos20>>2]|0;
        $1462 = ((($1461)) + 42|0);
        HEAP8[$1462>>0] = $1460;
        $1463 = HEAP32[$vinfos20>>2]|0;
        $1464 = ((($1463)) + 65|0);
        HEAP8[$1464>>0] = 1;
        $1465 = +HEAPF64[$88>>3];
        $1466 = HEAP32[$vinfos20>>2]|0;
        $1467 = ((($1466)) + 56|0);
        HEAPF64[$1467>>3] = $1465;
        $1468 = HEAP8[$89>>0]|0;
        $1469 = HEAP32[$vinfos20>>2]|0;
        $1470 = ((($1469)) + 67|0);
        HEAP8[$1470>>0] = $1468;
        $1471 = HEAP8[$90>>0]|0;
        $1472 = HEAP32[$vinfos20>>2]|0;
        $1473 = ((($1472)) + 68|0);
        HEAP8[$1473>>0] = $1471;
        $1474 = HEAP8[$91>>0]|0;
        $1475 = HEAP32[$vinfos20>>2]|0;
        $1476 = ((($1475)) + 66|0);
        HEAP8[$1476>>0] = $1474;
        $1477 = HEAP32[$vinfos20>>2]|0;
        $1478 = ((($1477)) + 89|0);
        HEAP8[$1478>>0] = 1;
        $1479 = +HEAPF64[$92>>3];
        $1480 = HEAP32[$vinfos20>>2]|0;
        $1481 = ((($1480)) + 80|0);
        HEAPF64[$1481>>3] = $1479;
        $1482 = HEAP8[$93>>0]|0;
        $1483 = HEAP32[$vinfos20>>2]|0;
        $1484 = ((($1483)) + 91|0);
        HEAP8[$1484>>0] = $1482;
        $1485 = HEAP8[$94>>0]|0;
        $1486 = HEAP32[$vinfos20>>2]|0;
        $1487 = ((($1486)) + 92|0);
        HEAP8[$1487>>0] = $1485;
        $1488 = HEAP8[$95>>0]|0;
        $1489 = HEAP32[$vinfos20>>2]|0;
        $1490 = ((($1489)) + 90|0);
        HEAP8[$1490>>0] = $1488;
        $1491 = HEAP32[$vinfos20>>2]|0;
        $1492 = ((($1491)) + 113|0);
        HEAP8[$1492>>0] = 1;
        $1493 = +HEAPF64[$72>>3];
        $1494 = HEAP32[$vinfos20>>2]|0;
        $1495 = ((($1494)) + 104|0);
        HEAPF64[$1495>>3] = $1493;
        $1496 = HEAP8[$70>>0]|0;
        $1497 = HEAP32[$vinfos20>>2]|0;
        $1498 = ((($1497)) + 115|0);
        HEAP8[$1498>>0] = $1496;
        $1499 = HEAP8[$71>>0]|0;
        $1500 = HEAP32[$vinfos20>>2]|0;
        $1501 = ((($1500)) + 116|0);
        HEAP8[$1501>>0] = $1499;
        $1502 = HEAP8[$64>>0]|0;
        $1503 = HEAP32[$vinfos20>>2]|0;
        $1504 = ((($1503)) + 114|0);
        HEAP8[$1504>>0] = $1502;
        $1505 = HEAP32[$vinfos20>>2]|0;
        $1506 = ((($1505)) + 137|0);
        HEAP8[$1506>>0] = 1;
        $1507 = +HEAPF64[$29>>3];
        $1508 = HEAP32[$vinfos20>>2]|0;
        $1509 = ((($1508)) + 128|0);
        HEAPF64[$1509>>3] = $1507;
        $1510 = HEAP8[$27>>0]|0;
        $1511 = HEAP32[$vinfos20>>2]|0;
        $1512 = ((($1511)) + 139|0);
        HEAP8[$1512>>0] = $1510;
        $1513 = HEAP8[$28>>0]|0;
        $1514 = HEAP32[$vinfos20>>2]|0;
        $1515 = ((($1514)) + 140|0);
        HEAP8[$1515>>0] = $1513;
        $1516 = HEAP8[$26>>0]|0;
        $1517 = HEAP32[$vinfos20>>2]|0;
        $1518 = ((($1517)) + 138|0);
        HEAP8[$1518>>0] = $1516;
        $1519 = HEAP32[$vinfos20>>2]|0;
        $1520 = ((($1519)) + 161|0);
        HEAP8[$1520>>0] = 1;
        $1521 = +HEAPF64[$78>>3];
        $1522 = HEAP32[$vinfos20>>2]|0;
        $1523 = ((($1522)) + 152|0);
        HEAPF64[$1523>>3] = $1521;
        $1524 = HEAP8[$76>>0]|0;
        $1525 = HEAP32[$vinfos20>>2]|0;
        $1526 = ((($1525)) + 163|0);
        HEAP8[$1526>>0] = $1524;
        $1527 = HEAP8[$77>>0]|0;
        $1528 = HEAP32[$vinfos20>>2]|0;
        $1529 = ((($1528)) + 164|0);
        HEAP8[$1529>>0] = $1527;
        $1530 = HEAP8[$75>>0]|0;
        $1531 = HEAP32[$vinfos20>>2]|0;
        $1532 = ((($1531)) + 162|0);
        HEAP8[$1532>>0] = $1530;
        __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree21,0);
        $1533 = HEAP32[$solutions>>2]|0;
        $1534 = ((($1533)) + 8|0);
        $1535 = HEAP32[$1534>>2]|0;
        (FUNCTION_TABLE_iiii[$1535 & 31]($solutions,$vinfos20,$vfree21)|0);
        __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree21);
        __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos20);
       }
      } while(0);
      $1536 = (($ij319$0360) + 1)|0;
      $1537 = ($1536|0)<(2);
      if ($1537) {
       $ij319$0360 = $1536;
      } else {
       break L7;
      }
     }
    }
    HEAP8[$96>>0] = 1;
    $1538 = +HEAPF64[$31>>3];
    __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x275,$1538,-1);
    $1539 = HEAP8[$97>>0]|0;
    $1540 = ($1539<<24>>24)==(0);
    if (!($1540)) {
     $1541 = +HEAPF64[$x275>>3];
     $1542 = +HEAPF64[$22>>3];
     __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x276,$1542,-1);
     $1543 = HEAP8[$98>>0]|0;
     $1544 = ($1543<<24>>24)==(0);
     if (!($1544)) {
      $1545 = +HEAPF64[$x276>>3];
      $1546 = $1541 * $1545;
      $1547 = +HEAPF64[$19>>3];
      $1548 = $1547 * $1547;
      $1549 = 1.0 - $1548;
      $1550 = +HEAPF64[$30>>3];
      $1551 = $1550 * $1550;
      $1552 = $1549 - $1551;
      $1553 = $1546 * $1552;
      $1554 = (+__Z5IKabsd($1553));
      $1555 = $1554 < 1.9999999999999999E-6;
      if ($1555) {
       $1556 = $1541 * $1547;
       $1557 = (+__Z5IKabsd($1556));
       $1558 = $1557 < 1.9999999999999999E-6;
       if ($1558) {
        $1559 = (+__Z5IKsqrd($1553));
        $1560 = (+__Z5IKsqrd($1556));
        $1561 = $1559 + $1560;
        $1562 = $1561 + -1.0;
        $1563 = (+__Z5IKabsd($1562));
        $1564 = !($1563 <= 1.9999999999999999E-6);
        if (!($1564)) {
         break;
        }
       }
      }
      $1565 = +HEAPF64[$x276>>3];
      $1566 = $1541 * $1565;
      $1567 = +HEAPF64[$19>>3];
      $1568 = $1567 * $1567;
      $1569 = 1.0 - $1568;
      $1570 = +HEAPF64[$30>>3];
      $1571 = $1570 * $1570;
      $1572 = $1569 - $1571;
      $1573 = $1566 * $1572;
      $1574 = $1541 * $1567;
      $1575 = (+__Z7IKatan2dd($1573,$1574));
      $1576 = (+__Z5IKsind($1575));
      $1577 = (+__Z5IKcosd($1575));
      $1578 = $1575 > 3.14159265358979;
      if ($1578) {
       $1579 = $1575 + -6.2831853071795898;
       $1582 = $1579;
      } else {
       $1580 = $1575 < -3.14159265358979;
       if ($1580) {
        $1581 = $1575 + 6.2831853071795898;
        $1582 = $1581;
       } else {
        $1582 = $1575;
       }
      }
      HEAP8[$99>>0] = 0;
      HEAP8[$100>>0] = -1;
      HEAPF64[$101>>3] = $1582;
      HEAPF64[$102>>3] = $1577;
      HEAPF64[$103>>3] = $1576;
      $1583 = +HEAPF64[$101>>3];
      $1584 = (+__Z5IKcosd($1583));
      $1585 = (+__Z5IKsind($1583));
      $1586 = +HEAPF64[$31>>3];
      $1587 = +HEAPF64[$19>>3];
      $1588 = $1584 * $1587;
      $1589 = +HEAPF64[$22>>3];
      $1590 = $1585 * $1589;
      $1591 = $1584 * $1586;
      $1592 = $1585 * $1586;
      $1593 = $1587 - $1591;
      $1594 = $1585 * $1587;
      $1595 = $1584 * $1589;
      $1596 = $1595 - $1594;
      $1597 = $1588 + $1590;
      $1598 = $1597 - $1586;
      $1599 = +HEAPF64[$30>>3];
      $1600 = +HEAPF64[$23>>3];
      $1601 = $1599 * $1600;
      $1602 = +HEAPF64[$11>>3];
      $1603 = $1591 * $1602;
      $1604 = $1601 + $1603;
      $1605 = +HEAPF64[$20>>3];
      $1606 = $1592 * $1605;
      $1607 = $1604 + $1606;
      $1608 = +HEAPF64[$24>>3];
      $1609 = $1599 * $1608;
      $1610 = +HEAPF64[$21>>3];
      $1611 = $1592 * $1610;
      $1612 = $1609 + $1611;
      $1613 = +HEAPF64[$15>>3];
      $1614 = $1591 * $1613;
      $1615 = $1612 + $1614;
      $1616 = +HEAPF64[$25>>3];
      $1617 = $1599 * $1616;
      $1618 = $1617 + -1.0;
      $1619 = $1586 * $1590;
      $1620 = $1619 + $1618;
      $1621 = $1586 * $1588;
      $1622 = $1621 + $1620;
      $1623 = $1586 * $1616;
      $1624 = $1599 * $1590;
      $1625 = $1624 - $1623;
      $1626 = $1588 * $1599;
      $1627 = $1626 + $1625;
      $1628 = (+__Z5IKabsd($1593));
      $1629 = $1628 > 5.0000000000000004E-6;
      if (!($1629)) {
       $1630 = $1589 - $1592;
       $1631 = (+__Z5IKabsd($1630));
       $1632 = $1631 > 5.0000000000000004E-6;
       if (!($1632)) {
        $1633 = (+__Z5IKabsd($1596));
        $1634 = $1633 > 5.0000000000000004E-6;
        if (!($1634)) {
         $1635 = (+__Z5IKabsd($1598));
         $1636 = $1635 > 5.0000000000000004E-6;
         if (!($1636)) {
          $1637 = (+__Z5IKabsd($1607));
          $1638 = $1637 > 5.0000000000000004E-6;
          if (!($1638)) {
           $1639 = (+__Z5IKabsd($1615));
           $1640 = $1639 > 5.0000000000000004E-6;
           if (!($1640)) {
            $1641 = (+__Z5IKabsd($1622));
            $1642 = $1641 > 5.0000000000000004E-6;
            if (!($1642)) {
             $1643 = (+__Z5IKabsd($1627));
             $1644 = $1643 > 5.0000000000000004E-6;
             if (!($1644)) {
              $1645 = +HEAPF64[$0>>3];
              $1646 = +HEAPF64[$1>>3];
              $1647 = $1645 * $1646;
              $1648 = +HEAPF64[$2>>3];
              $1649 = $1646 * $1648;
              $1650 = +HEAPF64[$3>>3];
              $1651 = $1646 * $1650;
              $1652 = +HEAPF64[$4>>3];
              $1653 = $1650 * $1652;
              $1654 = +HEAPF64[$5>>3];
              $1655 = +HEAPF64[$6>>3];
              $1656 = $1654 * $1655;
              $1657 = +HEAPF64[$7>>3];
              $1658 = $1652 * $1657;
              $1659 = $1657 * $1656;
              $1660 = $1653 - $1659;
              $1661 = $1648 * $1660;
              $1662 = $1650 * $1656;
              $1663 = -$1662;
              $1664 = $1663 - $1658;
              $1665 = $627 * $1648;
              $1666 = $1649 * $1654;
              $1667 = $1645 * $1660;
              $1668 = $1666 + $1667;
              $1669 = $1647 * $1654;
              $1670 = $1661 - $1669;
              $1671 = $1649 * $1652;
              $1672 = $627 * $1645;
              $1673 = $1672 + $1671;
              $1674 = $1647 * $1652;
              $1675 = $1665 - $1674;
              $1676 = +HEAPF64[$9>>3];
              $1677 = $1675 * $1676;
              $1678 = +HEAPF64[$8>>3];
              $1679 = $612 * $1678;
              $1680 = $1677 + $1679;
              $1681 = +HEAPF64[$10>>3];
              $1682 = $1673 * $1681;
              $1683 = $1680 + $1682;
              HEAPF64[$11>>3] = $1683;
              $1684 = +HEAPF64[$12>>3];
              $1685 = $1673 * $1684;
              $1686 = +HEAPF64[$14>>3];
              $1687 = $1675 * $1686;
              $1688 = $1685 + $1687;
              $1689 = +HEAPF64[$13>>3];
              $1690 = $612 * $1689;
              $1691 = $1688 + $1690;
              HEAPF64[$15>>3] = $1691;
              $1692 = +HEAPF64[$18>>3];
              $1693 = $1675 * $1692;
              $1694 = +HEAPF64[$16>>3];
              $1695 = $612 * $1694;
              $1696 = $1693 + $1695;
              $1697 = +HEAPF64[$17>>3];
              $1698 = $1673 * $1697;
              $1699 = $1696 + $1698;
              HEAPF64[$19>>3] = $1699;
              $1700 = +HEAPF64[$9>>3];
              $1701 = $615 * $1700;
              $1702 = +HEAPF64[$10>>3];
              $1703 = $618 * $1702;
              $1704 = $1701 + $1703;
              $1705 = +HEAPF64[$8>>3];
              $1706 = $1651 * $1705;
              $1707 = $1704 + $1706;
              HEAPF64[$20>>3] = $1707;
              $1708 = +HEAPF64[$13>>3];
              $1709 = $1651 * $1708;
              $1710 = +HEAPF64[$14>>3];
              $1711 = $615 * $1710;
              $1712 = $1709 + $1711;
              $1713 = +HEAPF64[$12>>3];
              $1714 = $618 * $1713;
              $1715 = $1712 + $1714;
              HEAPF64[$21>>3] = $1715;
              $1716 = +HEAPF64[$17>>3];
              $1717 = $618 * $1716;
              $1718 = +HEAPF64[$16>>3];
              $1719 = $1651 * $1718;
              $1720 = $1717 + $1719;
              $1721 = +HEAPF64[$18>>3];
              $1722 = $615 * $1721;
              $1723 = $1720 + $1722;
              HEAPF64[$22>>3] = $1723;
              $1724 = +HEAPF64[$8>>3];
              $1725 = $1664 * $1724;
              $1726 = +HEAPF64[$10>>3];
              $1727 = $1668 * $1726;
              $1728 = $1725 + $1727;
              $1729 = +HEAPF64[$9>>3];
              $1730 = $1670 * $1729;
              $1731 = $1728 + $1730;
              HEAPF64[$23>>3] = $1731;
              $1732 = +HEAPF64[$12>>3];
              $1733 = $1668 * $1732;
              $1734 = +HEAPF64[$14>>3];
              $1735 = $1670 * $1734;
              $1736 = $1733 + $1735;
              $1737 = +HEAPF64[$13>>3];
              $1738 = $1664 * $1737;
              $1739 = $1736 + $1738;
              HEAPF64[$24>>3] = $1739;
              $1740 = +HEAPF64[$18>>3];
              $1741 = $1670 * $1740;
              $1742 = +HEAPF64[$16>>3];
              $1743 = $1664 * $1742;
              $1744 = $1741 + $1743;
              $1745 = +HEAPF64[$17>>3];
              $1746 = $1668 * $1745;
              $1747 = $1744 + $1746;
              HEAPF64[$25>>3] = $1747;
              $1748 = +HEAPF64[$31>>3];
              $1749 = (+__Z5IKabsd($1748));
              $1750 = $1749 < 9.9999999999999995E-7;
              do {
               if (!($1750)) {
                $1751 = (+__Z6IKsignd($1748));
                $1752 = (+__Z5IKabsd($1751));
                $1753 = $1752 < 9.9999999999999995E-7;
                if ($1753) {
                 break;
                }
                HEAP8[$323>>0] = 1;
                $4244 = +HEAPF64[$31>>3];
                $4245 = (+__Z6IKsignd($4244));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x448,$4245,-1);
                $4246 = HEAP8[$324>>0]|0;
                $4247 = ($4246<<24>>24)==(0);
                if ($4247) {
                 break L7;
                }
                $4248 = +HEAPF64[$24>>3];
                $4249 = +HEAPF64[$23>>3];
                $4250 = -$4249;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x449,$4248,$4250,1.9999999999999999E-6);
                $4251 = HEAP8[$325>>0]|0;
                $4252 = ($4251<<24>>24)==(0);
                if ($4252) {
                 break L7;
                }
                $4253 = +HEAPF64[$x448>>3];
                $4254 = $4253 * 1.5707963267949001;
                $4255 = $4254 + -1.5707963267949001;
                $4256 = +HEAPF64[$x449>>3];
                $4257 = $4256 + $4255;
                $4258 = (+__Z5IKsind($4257));
                $4259 = (+__Z5IKcosd($4257));
                $4260 = $4257 > 3.14159265358979;
                do {
                 if ($4260) {
                  $4261 = $4257 + -6.2831853071795898;
                  $4264 = $4261;
                 } else {
                  $4262 = $4257 < -3.14159265358979;
                  if (!($4262)) {
                   $4264 = $4257;
                   break;
                  }
                  $4263 = $4257 + 6.2831853071795898;
                  $4264 = $4263;
                 }
                } while(0);
                HEAP8[$326>>0] = 0;
                HEAP8[$327>>0] = -1;
                HEAPF64[$328>>3] = $4264;
                HEAPF64[$329>>3] = $4259;
                HEAPF64[$330>>3] = $4258;
                $4265 = +HEAPF64[$328>>3];
                $4266 = (+__Z5IKsind($4265));
                $4267 = (+__Z5IKcosd($4265));
                $4268 = +HEAPF64[$102>>3];
                $4269 = +HEAPF64[$30>>3];
                $4270 = $4268 * $4269;
                $4271 = +HEAPF64[$103>>3];
                $4272 = +HEAPF64[$21>>3];
                $4273 = $4271 * $4272;
                $4274 = +HEAPF64[$20>>3];
                $4275 = $4271 * $4274;
                $4276 = +HEAPF64[$31>>3];
                $4277 = $4266 * $4271;
                $4278 = $4267 * $4276;
                $4279 = +HEAPF64[$23>>3];
                $4280 = $4278 + $4279;
                $4281 = +HEAPF64[$24>>3];
                $4282 = +HEAPF64[$15>>3];
                $4283 = $4268 * $4282;
                $4284 = $4273 + $4283;
                $4285 = $4266 * $4269;
                $4286 = $4285 + $4284;
                $4287 = $4268 * $4274;
                $4288 = +HEAPF64[$11>>3];
                $4289 = $4271 * $4288;
                $4290 = $4287 - $4289;
                $4291 = $4290 - $4266;
                $4292 = $4268 * $4272;
                $4293 = $4271 * $4282;
                $4294 = $4292 - $4293;
                $4295 = $4294 - $4267;
                $4296 = $4266 * $4270;
                $4297 = $4296 + $4282;
                $4298 = $4267 * $4271;
                $4299 = $4298 + $4297;
                $4300 = $4267 * $4269;
                $4301 = $4268 * $4288;
                $4302 = $4301 - $4300;
                $4303 = $4275 + $4302;
                $4304 = $4267 * $4270;
                $4305 = $4277 - $4304;
                $4306 = $4305 + $4288;
                $4307 = $4269 * $4277;
                $4308 = $4272 + $4307;
                $4309 = -$4268;
                $4310 = $4267 * $4309;
                $4311 = $4310 + $4308;
                $4312 = $4300 * $4271;
                $4313 = $4274 - $4312;
                $4314 = $4266 * $4309;
                $4315 = $4314 + $4313;
                $4316 = $4276 * $4281;
                $4317 = $4270 * $4282;
                $4318 = $4317 - $4316;
                $4319 = $4266 + $4318;
                $4320 = $4269 * $4273;
                $4321 = $4320 + $4319;
                $4322 = $4276 * $4279;
                $4323 = $4270 * $4288;
                $4324 = $4323 - $4322;
                $4325 = $4324 - $4267;
                $4326 = $4269 * $4275;
                $4327 = $4326 + $4325;
                $4328 = (+__Z5IKabsd($4280));
                $4329 = $4328 > 5.0000000000000004E-6;
                if ($4329) {
                 break L7;
                }
                $4330 = $4266 * $4276;
                $4331 = $4281 - $4330;
                $4332 = (+__Z5IKabsd($4331));
                $4333 = $4332 > 5.0000000000000004E-6;
                if ($4333) {
                 break L7;
                }
                $4334 = (+__Z5IKabsd($4286));
                $4335 = $4334 > 5.0000000000000004E-6;
                if ($4335) {
                 break L7;
                }
                $4336 = (+__Z5IKabsd($4291));
                $4337 = $4336 > 5.0000000000000004E-6;
                if ($4337) {
                 break L7;
                }
                $4338 = (+__Z5IKabsd($4295));
                $4339 = $4338 > 5.0000000000000004E-6;
                if ($4339) {
                 break L7;
                }
                $4340 = (+__Z5IKabsd($4299));
                $4341 = $4340 > 5.0000000000000004E-6;
                if ($4341) {
                 break L7;
                }
                $4342 = (+__Z5IKabsd($4303));
                $4343 = $4342 > 5.0000000000000004E-6;
                if ($4343) {
                 break L7;
                }
                $4344 = (+__Z5IKabsd($4306));
                $4345 = $4344 > 5.0000000000000004E-6;
                if ($4345) {
                 break L7;
                }
                $4346 = (+__Z5IKabsd($4311));
                $4347 = $4346 > 5.0000000000000004E-6;
                if ($4347) {
                 break L7;
                }
                $4348 = (+__Z5IKabsd($4315));
                $4349 = $4348 > 5.0000000000000004E-6;
                if ($4349) {
                 break L7;
                }
                $4350 = (+__Z5IKabsd($4321));
                $4351 = $4350 > 5.0000000000000004E-6;
                if ($4351) {
                 break L7;
                }
                $4352 = (+__Z5IKabsd($4327));
                $4353 = $4352 > 5.0000000000000004E-6;
                if ($4353) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos151,7);
                $4354 = HEAP32[$vinfos151>>2]|0;
                $4355 = ((($4354)) + 17|0);
                HEAP8[$4355>>0] = 1;
                $4356 = +HEAPF64[$this>>3];
                $4357 = HEAP32[$vinfos151>>2]|0;
                $4358 = ((($4357)) + 8|0);
                HEAPF64[$4358>>3] = $4356;
                $4359 = HEAP8[$331>>0]|0;
                $4360 = HEAP32[$vinfos151>>2]|0;
                $4361 = ((($4360)) + 19|0);
                HEAP8[$4361>>0] = $4359;
                $4362 = HEAP8[$332>>0]|0;
                $4363 = HEAP32[$vinfos151>>2]|0;
                $4364 = ((($4363)) + 20|0);
                HEAP8[$4364>>0] = $4362;
                $4365 = HEAP8[$333>>0]|0;
                $4366 = HEAP32[$vinfos151>>2]|0;
                $4367 = ((($4366)) + 18|0);
                HEAP8[$4367>>0] = $4365;
                $4368 = HEAP32[$vinfos151>>2]|0;
                $4369 = ((($4368)) + 41|0);
                HEAP8[$4369>>0] = 1;
                $4370 = +HEAPF64[$334>>3];
                $4371 = HEAP32[$vinfos151>>2]|0;
                $4372 = ((($4371)) + 32|0);
                HEAPF64[$4372>>3] = $4370;
                $4373 = HEAP8[$335>>0]|0;
                $4374 = HEAP32[$vinfos151>>2]|0;
                $4375 = ((($4374)) + 43|0);
                HEAP8[$4375>>0] = $4373;
                $4376 = HEAP8[$336>>0]|0;
                $4377 = HEAP32[$vinfos151>>2]|0;
                $4378 = ((($4377)) + 44|0);
                HEAP8[$4378>>0] = $4376;
                $4379 = HEAP8[$337>>0]|0;
                $4380 = HEAP32[$vinfos151>>2]|0;
                $4381 = ((($4380)) + 42|0);
                HEAP8[$4381>>0] = $4379;
                $4382 = HEAP32[$vinfos151>>2]|0;
                $4383 = ((($4382)) + 65|0);
                HEAP8[$4383>>0] = 1;
                $4384 = +HEAPF64[$338>>3];
                $4385 = HEAP32[$vinfos151>>2]|0;
                $4386 = ((($4385)) + 56|0);
                HEAPF64[$4386>>3] = $4384;
                $4387 = HEAP8[$339>>0]|0;
                $4388 = HEAP32[$vinfos151>>2]|0;
                $4389 = ((($4388)) + 67|0);
                HEAP8[$4389>>0] = $4387;
                $4390 = HEAP8[$340>>0]|0;
                $4391 = HEAP32[$vinfos151>>2]|0;
                $4392 = ((($4391)) + 68|0);
                HEAP8[$4392>>0] = $4390;
                $4393 = HEAP8[$341>>0]|0;
                $4394 = HEAP32[$vinfos151>>2]|0;
                $4395 = ((($4394)) + 66|0);
                HEAP8[$4395>>0] = $4393;
                $4396 = HEAP32[$vinfos151>>2]|0;
                $4397 = ((($4396)) + 89|0);
                HEAP8[$4397>>0] = 1;
                $4398 = +HEAPF64[$342>>3];
                $4399 = HEAP32[$vinfos151>>2]|0;
                $4400 = ((($4399)) + 80|0);
                HEAPF64[$4400>>3] = $4398;
                $4401 = HEAP8[$343>>0]|0;
                $4402 = HEAP32[$vinfos151>>2]|0;
                $4403 = ((($4402)) + 91|0);
                HEAP8[$4403>>0] = $4401;
                $4404 = HEAP8[$344>>0]|0;
                $4405 = HEAP32[$vinfos151>>2]|0;
                $4406 = ((($4405)) + 92|0);
                HEAP8[$4406>>0] = $4404;
                $4407 = HEAP8[$345>>0]|0;
                $4408 = HEAP32[$vinfos151>>2]|0;
                $4409 = ((($4408)) + 90|0);
                HEAP8[$4409>>0] = $4407;
                $4410 = HEAP32[$vinfos151>>2]|0;
                $4411 = ((($4410)) + 113|0);
                HEAP8[$4411>>0] = 1;
                $4412 = +HEAPF64[$101>>3];
                $4413 = HEAP32[$vinfos151>>2]|0;
                $4414 = ((($4413)) + 104|0);
                HEAPF64[$4414>>3] = $4412;
                $4415 = HEAP8[$99>>0]|0;
                $4416 = HEAP32[$vinfos151>>2]|0;
                $4417 = ((($4416)) + 115|0);
                HEAP8[$4417>>0] = $4415;
                $4418 = HEAP8[$100>>0]|0;
                $4419 = HEAP32[$vinfos151>>2]|0;
                $4420 = ((($4419)) + 116|0);
                HEAP8[$4420>>0] = $4418;
                $4421 = HEAP8[$96>>0]|0;
                $4422 = HEAP32[$vinfos151>>2]|0;
                $4423 = ((($4422)) + 114|0);
                HEAP8[$4423>>0] = $4421;
                $4424 = HEAP32[$vinfos151>>2]|0;
                $4425 = ((($4424)) + 137|0);
                HEAP8[$4425>>0] = 1;
                $4426 = +HEAPF64[$29>>3];
                $4427 = HEAP32[$vinfos151>>2]|0;
                $4428 = ((($4427)) + 128|0);
                HEAPF64[$4428>>3] = $4426;
                $4429 = HEAP8[$27>>0]|0;
                $4430 = HEAP32[$vinfos151>>2]|0;
                $4431 = ((($4430)) + 139|0);
                HEAP8[$4431>>0] = $4429;
                $4432 = HEAP8[$28>>0]|0;
                $4433 = HEAP32[$vinfos151>>2]|0;
                $4434 = ((($4433)) + 140|0);
                HEAP8[$4434>>0] = $4432;
                $4435 = HEAP8[$26>>0]|0;
                $4436 = HEAP32[$vinfos151>>2]|0;
                $4437 = ((($4436)) + 138|0);
                HEAP8[$4437>>0] = $4435;
                $4438 = HEAP32[$vinfos151>>2]|0;
                $4439 = ((($4438)) + 161|0);
                HEAP8[$4439>>0] = 1;
                $4440 = +HEAPF64[$328>>3];
                $4441 = HEAP32[$vinfos151>>2]|0;
                $4442 = ((($4441)) + 152|0);
                HEAPF64[$4442>>3] = $4440;
                $4443 = HEAP8[$326>>0]|0;
                $4444 = HEAP32[$vinfos151>>2]|0;
                $4445 = ((($4444)) + 163|0);
                HEAP8[$4445>>0] = $4443;
                $4446 = HEAP8[$327>>0]|0;
                $4447 = HEAP32[$vinfos151>>2]|0;
                $4448 = ((($4447)) + 164|0);
                HEAP8[$4448>>0] = $4446;
                $4449 = HEAP8[$323>>0]|0;
                $4450 = HEAP32[$vinfos151>>2]|0;
                $4451 = ((($4450)) + 162|0);
                HEAP8[$4451>>0] = $4449;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree152,0);
                $4452 = HEAP32[$solutions>>2]|0;
                $4453 = ((($4452)) + 8|0);
                $4454 = HEAP32[$4453>>2]|0;
                (FUNCTION_TABLE_iiii[$4454 & 31]($solutions,$vinfos151,$vfree152)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree152);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos151);
                break L7;
               }
              } while(0);
              $1754 = +HEAPF64[$0>>3];
              $1755 = +HEAPF64[$1>>3];
              $1756 = $1754 * $1755;
              $1757 = +HEAPF64[$2>>3];
              $1758 = $1755 * $1757;
              $1759 = +HEAPF64[$3>>3];
              $1760 = $1755 * $1759;
              $1761 = +HEAPF64[$4>>3];
              $1762 = $1759 * $1761;
              $1763 = +HEAPF64[$5>>3];
              $1764 = +HEAPF64[$6>>3];
              $1765 = $1763 * $1764;
              $1766 = +HEAPF64[$7>>3];
              $1767 = $1761 * $1766;
              $1768 = $1766 * $1765;
              $1769 = $1762 - $1768;
              $1770 = $1757 * $1769;
              $1771 = $1759 * $1765;
              $1772 = -$1767;
              $1773 = $1772 - $1771;
              $1774 = $627 * $1757;
              $1775 = $1754 * $1769;
              $1776 = $1758 * $1763;
              $1777 = $1776 + $1775;
              $1778 = $1756 * $1763;
              $1779 = $1770 - $1778;
              $1780 = $1758 * $1761;
              $1781 = $627 * $1754;
              $1782 = $1781 + $1780;
              $1783 = $1756 * $1761;
              $1784 = $1774 - $1783;
              $1785 = +HEAPF64[$8>>3];
              $1786 = $612 * $1785;
              $1787 = +HEAPF64[$9>>3];
              $1788 = $1784 * $1787;
              $1789 = $1786 + $1788;
              $1790 = +HEAPF64[$10>>3];
              $1791 = $1782 * $1790;
              $1792 = $1789 + $1791;
              HEAPF64[$11>>3] = $1792;
              $1793 = +HEAPF64[$12>>3];
              $1794 = $1782 * $1793;
              $1795 = +HEAPF64[$14>>3];
              $1796 = $1784 * $1795;
              $1797 = $1794 + $1796;
              $1798 = +HEAPF64[$13>>3];
              $1799 = $612 * $1798;
              $1800 = $1797 + $1799;
              HEAPF64[$15>>3] = $1800;
              $1801 = +HEAPF64[$18>>3];
              $1802 = $1784 * $1801;
              $1803 = +HEAPF64[$17>>3];
              $1804 = $1782 * $1803;
              $1805 = $1802 + $1804;
              $1806 = +HEAPF64[$16>>3];
              $1807 = $612 * $1806;
              $1808 = $1805 + $1807;
              HEAPF64[$19>>3] = $1808;
              $1809 = +HEAPF64[$8>>3];
              $1810 = $1760 * $1809;
              $1811 = +HEAPF64[$9>>3];
              $1812 = $615 * $1811;
              $1813 = $1810 + $1812;
              $1814 = +HEAPF64[$10>>3];
              $1815 = $618 * $1814;
              $1816 = $1813 + $1815;
              HEAPF64[$20>>3] = $1816;
              $1817 = +HEAPF64[$12>>3];
              $1818 = $618 * $1817;
              $1819 = +HEAPF64[$13>>3];
              $1820 = $1760 * $1819;
              $1821 = $1818 + $1820;
              $1822 = +HEAPF64[$14>>3];
              $1823 = $615 * $1822;
              $1824 = $1821 + $1823;
              HEAPF64[$21>>3] = $1824;
              $1825 = +HEAPF64[$16>>3];
              $1826 = $1760 * $1825;
              $1827 = +HEAPF64[$18>>3];
              $1828 = $615 * $1827;
              $1829 = $1826 + $1828;
              $1830 = +HEAPF64[$17>>3];
              $1831 = $618 * $1830;
              $1832 = $1829 + $1831;
              HEAPF64[$22>>3] = $1832;
              $1833 = +HEAPF64[$9>>3];
              $1834 = $1779 * $1833;
              $1835 = +HEAPF64[$8>>3];
              $1836 = $1773 * $1835;
              $1837 = $1834 + $1836;
              $1838 = +HEAPF64[$10>>3];
              $1839 = $1777 * $1838;
              $1840 = $1837 + $1839;
              HEAPF64[$23>>3] = $1840;
              $1841 = +HEAPF64[$12>>3];
              $1842 = $1777 * $1841;
              $1843 = +HEAPF64[$14>>3];
              $1844 = $1779 * $1843;
              $1845 = $1842 + $1844;
              $1846 = +HEAPF64[$13>>3];
              $1847 = $1773 * $1846;
              $1848 = $1845 + $1847;
              HEAPF64[$24>>3] = $1848;
              $1849 = +HEAPF64[$17>>3];
              $1850 = $1777 * $1849;
              $1851 = +HEAPF64[$18>>3];
              $1852 = $1779 * $1851;
              $1853 = $1850 + $1852;
              $1854 = +HEAPF64[$16>>3];
              $1855 = $1773 * $1854;
              $1856 = $1853 + $1855;
              HEAPF64[$25>>3] = $1856;
              $1857 = +HEAPF64[$103>>3];
              $1858 = (+__Z5IKabsd($1857));
              $1859 = $1858 < 9.9999999999999995E-7;
              do {
               if (!($1859)) {
                $1860 = +HEAPF64[$31>>3];
                $1861 = (+__Z5IKabsd($1860));
                $1862 = $1861 < 9.9999999999999995E-7;
                if ($1862) {
                 break;
                }
                HEAP8[$300>>0] = 1;
                $3998 = +HEAPF64[$31>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x436,$3998,-1);
                $3999 = HEAP8[$301>>0]|0;
                $4000 = ($3999<<24>>24)==(0);
                if ($4000) {
                 break L7;
                }
                $4001 = +HEAPF64[$x436>>3];
                $4002 = +HEAPF64[$103>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x437,$4002,-1);
                $4003 = HEAP8[$302>>0]|0;
                $4004 = ($4003<<24>>24)==(0);
                if ($4004) {
                 break L7;
                }
                $4005 = +HEAPF64[$x437>>3];
                $4006 = $4001 * $4005;
                $4007 = +HEAPF64[$11>>3];
                $4008 = +HEAPF64[$31>>3];
                $4009 = $4007 * $4008;
                $4010 = +HEAPF64[$102>>3];
                $4011 = +HEAPF64[$30>>3];
                $4012 = $4010 * $4011;
                $4013 = +HEAPF64[$23>>3];
                $4014 = $4012 * $4013;
                $4015 = -$4014;
                $4016 = $4015 - $4009;
                $4017 = $4006 * $4016;
                $4018 = (+__Z5IKabsd($4017));
                $4019 = $4018 < 1.9999999999999999E-6;
                do {
                 if ($4019) {
                  $4020 = $4001 * $4013;
                  $4021 = -$4020;
                  $4022 = (+__Z5IKabsd($4021));
                  $4023 = $4022 < 1.9999999999999999E-6;
                  if (!($4023)) {
                   break;
                  }
                  $4024 = (+__Z5IKsqrd($4017));
                  $4025 = (+__Z5IKsqrd($4021));
                  $4026 = $4024 + $4025;
                  $4027 = $4026 + -1.0;
                  $4028 = (+__Z5IKabsd($4027));
                  $4029 = !($4028 <= 1.9999999999999999E-6);
                  if (!($4029)) {
                   break L7;
                  }
                 }
                } while(0);
                $4030 = +HEAPF64[$x437>>3];
                $4031 = $4001 * $4030;
                $4032 = +HEAPF64[$11>>3];
                $4033 = +HEAPF64[$31>>3];
                $4034 = $4032 * $4033;
                $4035 = +HEAPF64[$102>>3];
                $4036 = +HEAPF64[$30>>3];
                $4037 = $4035 * $4036;
                $4038 = +HEAPF64[$23>>3];
                $4039 = $4037 * $4038;
                $4040 = -$4039;
                $4041 = $4040 - $4034;
                $4042 = $4031 * $4041;
                $4043 = $4001 * $4038;
                $4044 = -$4043;
                $4045 = (+__Z7IKatan2dd($4042,$4044));
                $4046 = (+__Z5IKsind($4045));
                $4047 = (+__Z5IKcosd($4045));
                $4048 = $4045 > 3.14159265358979;
                do {
                 if ($4048) {
                  $4049 = $4045 + -6.2831853071795898;
                  $4052 = $4049;
                 } else {
                  $4050 = $4045 < -3.14159265358979;
                  if (!($4050)) {
                   $4052 = $4045;
                   break;
                  }
                  $4051 = $4045 + 6.2831853071795898;
                  $4052 = $4051;
                 }
                } while(0);
                HEAP8[$303>>0] = 0;
                HEAP8[$304>>0] = -1;
                HEAPF64[$305>>3] = $4052;
                HEAPF64[$306>>3] = $4047;
                HEAPF64[$307>>3] = $4046;
                $4053 = +HEAPF64[$305>>3];
                $4054 = (+__Z5IKsind($4053));
                $4055 = (+__Z5IKcosd($4053));
                $4056 = +HEAPF64[$102>>3];
                $4057 = +HEAPF64[$30>>3];
                $4058 = $4056 * $4057;
                $4059 = +HEAPF64[$103>>3];
                $4060 = +HEAPF64[$21>>3];
                $4061 = $4059 * $4060;
                $4062 = +HEAPF64[$20>>3];
                $4063 = $4059 * $4062;
                $4064 = +HEAPF64[$31>>3];
                $4065 = $4054 * $4059;
                $4066 = $4055 * $4064;
                $4067 = +HEAPF64[$23>>3];
                $4068 = $4066 + $4067;
                $4069 = +HEAPF64[$24>>3];
                $4070 = +HEAPF64[$15>>3];
                $4071 = $4056 * $4070;
                $4072 = $4054 * $4057;
                $4073 = $4072 + $4071;
                $4074 = $4061 + $4073;
                $4075 = +HEAPF64[$11>>3];
                $4076 = $4059 * $4075;
                $4077 = -$4076;
                $4078 = $4077 - $4054;
                $4079 = $4056 * $4062;
                $4080 = $4079 + $4078;
                $4081 = $4056 * $4060;
                $4082 = $4081 - $4055;
                $4083 = $4059 * $4070;
                $4084 = $4082 - $4083;
                $4085 = $4055 * $4059;
                $4086 = $4054 * $4058;
                $4087 = $4085 + $4086;
                $4088 = $4087 + $4070;
                $4089 = $4056 * $4075;
                $4090 = $4063 + $4089;
                $4091 = $4055 * $4057;
                $4092 = $4090 - $4091;
                $4093 = $4065 + $4075;
                $4094 = $4055 * $4058;
                $4095 = $4093 - $4094;
                $4096 = $4057 * $4065;
                $4097 = -$4056;
                $4098 = $4055 * $4097;
                $4099 = $4098 + $4096;
                $4100 = $4060 + $4099;
                $4101 = $4054 * $4097;
                $4102 = $4101 + $4062;
                $4103 = $4091 * $4059;
                $4104 = $4102 - $4103;
                $4105 = $4058 * $4070;
                $4106 = $4057 * $4061;
                $4107 = $4106 + $4105;
                $4108 = $4054 + $4107;
                $4109 = $4064 * $4069;
                $4110 = $4108 - $4109;
                $4111 = $4058 * $4075;
                $4112 = $4111 - $4055;
                $4113 = $4057 * $4063;
                $4114 = $4113 + $4112;
                $4115 = $4064 * $4067;
                $4116 = $4114 - $4115;
                $4117 = (+__Z5IKabsd($4068));
                $4118 = $4117 > 5.0000000000000004E-6;
                if ($4118) {
                 break L7;
                }
                $4119 = $4054 * $4064;
                $4120 = $4069 - $4119;
                $4121 = (+__Z5IKabsd($4120));
                $4122 = $4121 > 5.0000000000000004E-6;
                if ($4122) {
                 break L7;
                }
                $4123 = (+__Z5IKabsd($4074));
                $4124 = $4123 > 5.0000000000000004E-6;
                if ($4124) {
                 break L7;
                }
                $4125 = (+__Z5IKabsd($4080));
                $4126 = $4125 > 5.0000000000000004E-6;
                if ($4126) {
                 break L7;
                }
                $4127 = (+__Z5IKabsd($4084));
                $4128 = $4127 > 5.0000000000000004E-6;
                if ($4128) {
                 break L7;
                }
                $4129 = (+__Z5IKabsd($4088));
                $4130 = $4129 > 5.0000000000000004E-6;
                if ($4130) {
                 break L7;
                }
                $4131 = (+__Z5IKabsd($4092));
                $4132 = $4131 > 5.0000000000000004E-6;
                if ($4132) {
                 break L7;
                }
                $4133 = (+__Z5IKabsd($4095));
                $4134 = $4133 > 5.0000000000000004E-6;
                if ($4134) {
                 break L7;
                }
                $4135 = (+__Z5IKabsd($4100));
                $4136 = $4135 > 5.0000000000000004E-6;
                if ($4136) {
                 break L7;
                }
                $4137 = (+__Z5IKabsd($4104));
                $4138 = $4137 > 5.0000000000000004E-6;
                if ($4138) {
                 break L7;
                }
                $4139 = (+__Z5IKabsd($4110));
                $4140 = $4139 > 5.0000000000000004E-6;
                if ($4140) {
                 break L7;
                }
                $4141 = (+__Z5IKabsd($4116));
                $4142 = $4141 > 5.0000000000000004E-6;
                if ($4142) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos141,7);
                $4143 = HEAP32[$vinfos141>>2]|0;
                $4144 = ((($4143)) + 17|0);
                HEAP8[$4144>>0] = 1;
                $4145 = +HEAPF64[$this>>3];
                $4146 = HEAP32[$vinfos141>>2]|0;
                $4147 = ((($4146)) + 8|0);
                HEAPF64[$4147>>3] = $4145;
                $4148 = HEAP8[$308>>0]|0;
                $4149 = HEAP32[$vinfos141>>2]|0;
                $4150 = ((($4149)) + 19|0);
                HEAP8[$4150>>0] = $4148;
                $4151 = HEAP8[$309>>0]|0;
                $4152 = HEAP32[$vinfos141>>2]|0;
                $4153 = ((($4152)) + 20|0);
                HEAP8[$4153>>0] = $4151;
                $4154 = HEAP8[$310>>0]|0;
                $4155 = HEAP32[$vinfos141>>2]|0;
                $4156 = ((($4155)) + 18|0);
                HEAP8[$4156>>0] = $4154;
                $4157 = HEAP32[$vinfos141>>2]|0;
                $4158 = ((($4157)) + 41|0);
                HEAP8[$4158>>0] = 1;
                $4159 = +HEAPF64[$311>>3];
                $4160 = HEAP32[$vinfos141>>2]|0;
                $4161 = ((($4160)) + 32|0);
                HEAPF64[$4161>>3] = $4159;
                $4162 = HEAP8[$312>>0]|0;
                $4163 = HEAP32[$vinfos141>>2]|0;
                $4164 = ((($4163)) + 43|0);
                HEAP8[$4164>>0] = $4162;
                $4165 = HEAP8[$313>>0]|0;
                $4166 = HEAP32[$vinfos141>>2]|0;
                $4167 = ((($4166)) + 44|0);
                HEAP8[$4167>>0] = $4165;
                $4168 = HEAP8[$314>>0]|0;
                $4169 = HEAP32[$vinfos141>>2]|0;
                $4170 = ((($4169)) + 42|0);
                HEAP8[$4170>>0] = $4168;
                $4171 = HEAP32[$vinfos141>>2]|0;
                $4172 = ((($4171)) + 65|0);
                HEAP8[$4172>>0] = 1;
                $4173 = +HEAPF64[$315>>3];
                $4174 = HEAP32[$vinfos141>>2]|0;
                $4175 = ((($4174)) + 56|0);
                HEAPF64[$4175>>3] = $4173;
                $4176 = HEAP8[$316>>0]|0;
                $4177 = HEAP32[$vinfos141>>2]|0;
                $4178 = ((($4177)) + 67|0);
                HEAP8[$4178>>0] = $4176;
                $4179 = HEAP8[$317>>0]|0;
                $4180 = HEAP32[$vinfos141>>2]|0;
                $4181 = ((($4180)) + 68|0);
                HEAP8[$4181>>0] = $4179;
                $4182 = HEAP8[$318>>0]|0;
                $4183 = HEAP32[$vinfos141>>2]|0;
                $4184 = ((($4183)) + 66|0);
                HEAP8[$4184>>0] = $4182;
                $4185 = HEAP32[$vinfos141>>2]|0;
                $4186 = ((($4185)) + 89|0);
                HEAP8[$4186>>0] = 1;
                $4187 = +HEAPF64[$319>>3];
                $4188 = HEAP32[$vinfos141>>2]|0;
                $4189 = ((($4188)) + 80|0);
                HEAPF64[$4189>>3] = $4187;
                $4190 = HEAP8[$320>>0]|0;
                $4191 = HEAP32[$vinfos141>>2]|0;
                $4192 = ((($4191)) + 91|0);
                HEAP8[$4192>>0] = $4190;
                $4193 = HEAP8[$321>>0]|0;
                $4194 = HEAP32[$vinfos141>>2]|0;
                $4195 = ((($4194)) + 92|0);
                HEAP8[$4195>>0] = $4193;
                $4196 = HEAP8[$322>>0]|0;
                $4197 = HEAP32[$vinfos141>>2]|0;
                $4198 = ((($4197)) + 90|0);
                HEAP8[$4198>>0] = $4196;
                $4199 = HEAP32[$vinfos141>>2]|0;
                $4200 = ((($4199)) + 113|0);
                HEAP8[$4200>>0] = 1;
                $4201 = +HEAPF64[$101>>3];
                $4202 = HEAP32[$vinfos141>>2]|0;
                $4203 = ((($4202)) + 104|0);
                HEAPF64[$4203>>3] = $4201;
                $4204 = HEAP8[$99>>0]|0;
                $4205 = HEAP32[$vinfos141>>2]|0;
                $4206 = ((($4205)) + 115|0);
                HEAP8[$4206>>0] = $4204;
                $4207 = HEAP8[$100>>0]|0;
                $4208 = HEAP32[$vinfos141>>2]|0;
                $4209 = ((($4208)) + 116|0);
                HEAP8[$4209>>0] = $4207;
                $4210 = HEAP8[$96>>0]|0;
                $4211 = HEAP32[$vinfos141>>2]|0;
                $4212 = ((($4211)) + 114|0);
                HEAP8[$4212>>0] = $4210;
                $4213 = HEAP32[$vinfos141>>2]|0;
                $4214 = ((($4213)) + 137|0);
                HEAP8[$4214>>0] = 1;
                $4215 = +HEAPF64[$29>>3];
                $4216 = HEAP32[$vinfos141>>2]|0;
                $4217 = ((($4216)) + 128|0);
                HEAPF64[$4217>>3] = $4215;
                $4218 = HEAP8[$27>>0]|0;
                $4219 = HEAP32[$vinfos141>>2]|0;
                $4220 = ((($4219)) + 139|0);
                HEAP8[$4220>>0] = $4218;
                $4221 = HEAP8[$28>>0]|0;
                $4222 = HEAP32[$vinfos141>>2]|0;
                $4223 = ((($4222)) + 140|0);
                HEAP8[$4223>>0] = $4221;
                $4224 = HEAP8[$26>>0]|0;
                $4225 = HEAP32[$vinfos141>>2]|0;
                $4226 = ((($4225)) + 138|0);
                HEAP8[$4226>>0] = $4224;
                $4227 = HEAP32[$vinfos141>>2]|0;
                $4228 = ((($4227)) + 161|0);
                HEAP8[$4228>>0] = 1;
                $4229 = +HEAPF64[$305>>3];
                $4230 = HEAP32[$vinfos141>>2]|0;
                $4231 = ((($4230)) + 152|0);
                HEAPF64[$4231>>3] = $4229;
                $4232 = HEAP8[$303>>0]|0;
                $4233 = HEAP32[$vinfos141>>2]|0;
                $4234 = ((($4233)) + 163|0);
                HEAP8[$4234>>0] = $4232;
                $4235 = HEAP8[$304>>0]|0;
                $4236 = HEAP32[$vinfos141>>2]|0;
                $4237 = ((($4236)) + 164|0);
                HEAP8[$4237>>0] = $4235;
                $4238 = HEAP8[$300>>0]|0;
                $4239 = HEAP32[$vinfos141>>2]|0;
                $4240 = ((($4239)) + 162|0);
                HEAP8[$4240>>0] = $4238;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree142,0);
                $4241 = HEAP32[$solutions>>2]|0;
                $4242 = ((($4241)) + 8|0);
                $4243 = HEAP32[$4242>>2]|0;
                (FUNCTION_TABLE_iiii[$4243 & 31]($solutions,$vinfos141,$vfree142)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree142);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos141);
                break L7;
               }
              } while(0);
              $1863 = +HEAPF64[$0>>3];
              $1864 = +HEAPF64[$1>>3];
              $1865 = $1863 * $1864;
              $1866 = +HEAPF64[$2>>3];
              $1867 = $1864 * $1866;
              $1868 = +HEAPF64[$3>>3];
              $1869 = $1864 * $1868;
              $1870 = +HEAPF64[$4>>3];
              $1871 = $1868 * $1870;
              $1872 = +HEAPF64[$5>>3];
              $1873 = +HEAPF64[$6>>3];
              $1874 = $1872 * $1873;
              $1875 = +HEAPF64[$7>>3];
              $1876 = $1870 * $1875;
              $1877 = $1875 * $1874;
              $1878 = $1871 - $1877;
              $1879 = $1866 * $1878;
              $1880 = $1868 * $1874;
              $1881 = -$1876;
              $1882 = $1881 - $1880;
              $1883 = $627 * $1866;
              $1884 = $1867 * $1872;
              $1885 = $1863 * $1878;
              $1886 = $1884 + $1885;
              $1887 = $1865 * $1872;
              $1888 = $1879 - $1887;
              $1889 = $627 * $1863;
              $1890 = $1867 * $1870;
              $1891 = $1889 + $1890;
              $1892 = $1865 * $1870;
              $1893 = $1883 - $1892;
              $1894 = +HEAPF64[$9>>3];
              $1895 = $1893 * $1894;
              $1896 = +HEAPF64[$8>>3];
              $1897 = $612 * $1896;
              $1898 = $1895 + $1897;
              $1899 = +HEAPF64[$10>>3];
              $1900 = $1891 * $1899;
              $1901 = $1898 + $1900;
              HEAPF64[$11>>3] = $1901;
              $1902 = +HEAPF64[$14>>3];
              $1903 = $1893 * $1902;
              $1904 = +HEAPF64[$13>>3];
              $1905 = $612 * $1904;
              $1906 = $1903 + $1905;
              $1907 = +HEAPF64[$12>>3];
              $1908 = $1891 * $1907;
              $1909 = $1906 + $1908;
              HEAPF64[$15>>3] = $1909;
              $1910 = +HEAPF64[$16>>3];
              $1911 = $612 * $1910;
              $1912 = +HEAPF64[$18>>3];
              $1913 = $1893 * $1912;
              $1914 = $1911 + $1913;
              $1915 = +HEAPF64[$17>>3];
              $1916 = $1891 * $1915;
              $1917 = $1914 + $1916;
              HEAPF64[$19>>3] = $1917;
              $1918 = +HEAPF64[$9>>3];
              $1919 = $615 * $1918;
              $1920 = +HEAPF64[$8>>3];
              $1921 = $1869 * $1920;
              $1922 = $1919 + $1921;
              $1923 = +HEAPF64[$10>>3];
              $1924 = $618 * $1923;
              $1925 = $1922 + $1924;
              HEAPF64[$20>>3] = $1925;
              $1926 = +HEAPF64[$14>>3];
              $1927 = $615 * $1926;
              $1928 = +HEAPF64[$12>>3];
              $1929 = $618 * $1928;
              $1930 = $1927 + $1929;
              $1931 = +HEAPF64[$13>>3];
              $1932 = $1869 * $1931;
              $1933 = $1930 + $1932;
              HEAPF64[$21>>3] = $1933;
              $1934 = +HEAPF64[$17>>3];
              $1935 = $618 * $1934;
              $1936 = +HEAPF64[$18>>3];
              $1937 = $615 * $1936;
              $1938 = $1935 + $1937;
              $1939 = +HEAPF64[$16>>3];
              $1940 = $1869 * $1939;
              $1941 = $1938 + $1940;
              HEAPF64[$22>>3] = $1941;
              $1942 = +HEAPF64[$9>>3];
              $1943 = $1888 * $1942;
              $1944 = +HEAPF64[$8>>3];
              $1945 = $1882 * $1944;
              $1946 = $1943 + $1945;
              $1947 = +HEAPF64[$10>>3];
              $1948 = $1886 * $1947;
              $1949 = $1946 + $1948;
              HEAPF64[$23>>3] = $1949;
              $1950 = +HEAPF64[$14>>3];
              $1951 = $1888 * $1950;
              $1952 = +HEAPF64[$13>>3];
              $1953 = $1882 * $1952;
              $1954 = $1951 + $1953;
              $1955 = +HEAPF64[$12>>3];
              $1956 = $1886 * $1955;
              $1957 = $1954 + $1956;
              HEAPF64[$24>>3] = $1957;
              $1958 = +HEAPF64[$16>>3];
              $1959 = $1882 * $1958;
              $1960 = +HEAPF64[$18>>3];
              $1961 = $1888 * $1960;
              $1962 = $1959 + $1961;
              $1963 = +HEAPF64[$17>>3];
              $1964 = $1886 * $1963;
              $1965 = $1962 + $1964;
              HEAPF64[$25>>3] = $1965;
              $1966 = +HEAPF64[$102>>3];
              $1967 = +HEAPF64[$31>>3];
              $1968 = (+__Z5IKabsd($1966));
              $1969 = $1968 < 9.9999999999999995E-7;
              do {
               if (!($1969)) {
                $1970 = +HEAPF64[$30>>3];
                $1971 = (+__Z5IKabsd($1970));
                $1972 = $1971 < 9.9999999999999995E-7;
                if ($1972) {
                 break;
                }
                $1973 = (+__Z5IKabsd($1967));
                $1974 = $1973 < 9.9999999999999995E-7;
                if ($1974) {
                 break;
                }
                HEAP8[$276>>0] = 1;
                $3752 = +HEAPF64[$31>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x422,$3752,-1);
                $3753 = HEAP8[$277>>0]|0;
                $3754 = ($3753<<24>>24)==(0);
                if ($3754) {
                 break L7;
                }
                $3755 = +HEAPF64[$x422>>3];
                $3756 = +HEAPF64[$102>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x423,$3756,-1);
                $3757 = HEAP8[$278>>0]|0;
                $3758 = ($3757<<24>>24)==(0);
                if ($3758) {
                 break L7;
                }
                $3759 = +HEAPF64[$30>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x424,$3759,-1);
                $3760 = HEAP8[$279>>0]|0;
                $3761 = ($3760<<24>>24)==(0);
                if ($3761) {
                 break L7;
                }
                $3762 = +HEAPF64[$x423>>3];
                $3763 = $3755 * $3762;
                $3764 = +HEAPF64[$x424>>3];
                $3765 = $3763 * $3764;
                $3766 = +HEAPF64[$23>>3];
                $3767 = +HEAPF64[$103>>3];
                $3768 = $3766 * $3767;
                $3769 = +HEAPF64[$15>>3];
                $3770 = +HEAPF64[$31>>3];
                $3771 = $3769 * $3770;
                $3772 = $3768 - $3771;
                $3773 = $3765 * $3772;
                $3774 = (+__Z5IKabsd($3773));
                $3775 = $3774 < 1.9999999999999999E-6;
                do {
                 if ($3775) {
                  $3776 = $3755 * $3766;
                  $3777 = -$3776;
                  $3778 = (+__Z5IKabsd($3777));
                  $3779 = $3778 < 1.9999999999999999E-6;
                  if (!($3779)) {
                   break;
                  }
                  $3780 = (+__Z5IKsqrd($3773));
                  $3781 = (+__Z5IKsqrd($3777));
                  $3782 = $3780 + $3781;
                  $3783 = $3782 + -1.0;
                  $3784 = (+__Z5IKabsd($3783));
                  $3785 = !($3784 <= 1.9999999999999999E-6);
                  if (!($3785)) {
                   break L7;
                  }
                 }
                } while(0);
                $3786 = +HEAPF64[$x423>>3];
                $3787 = $3755 * $3786;
                $3788 = +HEAPF64[$x424>>3];
                $3789 = $3787 * $3788;
                $3790 = +HEAPF64[$23>>3];
                $3791 = +HEAPF64[$103>>3];
                $3792 = $3790 * $3791;
                $3793 = +HEAPF64[$15>>3];
                $3794 = +HEAPF64[$31>>3];
                $3795 = $3793 * $3794;
                $3796 = $3792 - $3795;
                $3797 = $3789 * $3796;
                $3798 = $3755 * $3790;
                $3799 = -$3798;
                $3800 = (+__Z7IKatan2dd($3797,$3799));
                $3801 = (+__Z5IKsind($3800));
                $3802 = (+__Z5IKcosd($3800));
                $3803 = $3800 > 3.14159265358979;
                do {
                 if ($3803) {
                  $3804 = $3800 + -6.2831853071795898;
                  $3807 = $3804;
                 } else {
                  $3805 = $3800 < -3.14159265358979;
                  if (!($3805)) {
                   $3807 = $3800;
                   break;
                  }
                  $3806 = $3800 + 6.2831853071795898;
                  $3807 = $3806;
                 }
                } while(0);
                HEAP8[$280>>0] = 0;
                HEAP8[$281>>0] = -1;
                HEAPF64[$282>>3] = $3807;
                HEAPF64[$283>>3] = $3802;
                HEAPF64[$284>>3] = $3801;
                $3808 = +HEAPF64[$282>>3];
                $3809 = (+__Z5IKsind($3808));
                $3810 = (+__Z5IKcosd($3808));
                $3811 = +HEAPF64[$102>>3];
                $3812 = +HEAPF64[$30>>3];
                $3813 = $3811 * $3812;
                $3814 = +HEAPF64[$103>>3];
                $3815 = +HEAPF64[$21>>3];
                $3816 = $3814 * $3815;
                $3817 = +HEAPF64[$20>>3];
                $3818 = $3814 * $3817;
                $3819 = +HEAPF64[$31>>3];
                $3820 = $3809 * $3814;
                $3821 = +HEAPF64[$23>>3];
                $3822 = $3810 * $3819;
                $3823 = $3821 + $3822;
                $3824 = +HEAPF64[$24>>3];
                $3825 = +HEAPF64[$15>>3];
                $3826 = $3811 * $3825;
                $3827 = $3816 + $3826;
                $3828 = $3809 * $3812;
                $3829 = $3828 + $3827;
                $3830 = $3811 * $3817;
                $3831 = $3830 - $3809;
                $3832 = +HEAPF64[$11>>3];
                $3833 = $3814 * $3832;
                $3834 = $3831 - $3833;
                $3835 = $3811 * $3815;
                $3836 = $3835 - $3810;
                $3837 = $3814 * $3825;
                $3838 = $3836 - $3837;
                $3839 = $3809 * $3813;
                $3840 = $3810 * $3814;
                $3841 = $3839 + $3840;
                $3842 = $3841 + $3825;
                $3843 = $3811 * $3832;
                $3844 = $3818 + $3843;
                $3845 = $3810 * $3812;
                $3846 = $3844 - $3845;
                $3847 = $3810 * $3813;
                $3848 = $3820 - $3847;
                $3849 = $3848 + $3832;
                $3850 = $3812 * $3820;
                $3851 = -$3811;
                $3852 = $3810 * $3851;
                $3853 = $3852 + $3850;
                $3854 = $3815 + $3853;
                $3855 = $3845 * $3814;
                $3856 = $3809 * $3851;
                $3857 = $3856 - $3855;
                $3858 = $3857 + $3817;
                $3859 = $3812 * $3816;
                $3860 = $3809 + $3859;
                $3861 = $3813 * $3825;
                $3862 = $3860 + $3861;
                $3863 = $3819 * $3824;
                $3864 = $3862 - $3863;
                $3865 = $3812 * $3818;
                $3866 = $3865 - $3810;
                $3867 = $3819 * $3821;
                $3868 = $3866 - $3867;
                $3869 = $3813 * $3832;
                $3870 = $3868 + $3869;
                $3871 = (+__Z5IKabsd($3823));
                $3872 = $3871 > 5.0000000000000004E-6;
                if ($3872) {
                 break L7;
                }
                $3873 = $3809 * $3819;
                $3874 = $3824 - $3873;
                $3875 = (+__Z5IKabsd($3874));
                $3876 = $3875 > 5.0000000000000004E-6;
                if ($3876) {
                 break L7;
                }
                $3877 = (+__Z5IKabsd($3829));
                $3878 = $3877 > 5.0000000000000004E-6;
                if ($3878) {
                 break L7;
                }
                $3879 = (+__Z5IKabsd($3834));
                $3880 = $3879 > 5.0000000000000004E-6;
                if ($3880) {
                 break L7;
                }
                $3881 = (+__Z5IKabsd($3838));
                $3882 = $3881 > 5.0000000000000004E-6;
                if ($3882) {
                 break L7;
                }
                $3883 = (+__Z5IKabsd($3842));
                $3884 = $3883 > 5.0000000000000004E-6;
                if ($3884) {
                 break L7;
                }
                $3885 = (+__Z5IKabsd($3846));
                $3886 = $3885 > 5.0000000000000004E-6;
                if ($3886) {
                 break L7;
                }
                $3887 = (+__Z5IKabsd($3849));
                $3888 = $3887 > 5.0000000000000004E-6;
                if ($3888) {
                 break L7;
                }
                $3889 = (+__Z5IKabsd($3854));
                $3890 = $3889 > 5.0000000000000004E-6;
                if ($3890) {
                 break L7;
                }
                $3891 = (+__Z5IKabsd($3858));
                $3892 = $3891 > 5.0000000000000004E-6;
                if ($3892) {
                 break L7;
                }
                $3893 = (+__Z5IKabsd($3864));
                $3894 = $3893 > 5.0000000000000004E-6;
                if ($3894) {
                 break L7;
                }
                $3895 = (+__Z5IKabsd($3870));
                $3896 = $3895 > 5.0000000000000004E-6;
                if ($3896) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos131,7);
                $3897 = HEAP32[$vinfos131>>2]|0;
                $3898 = ((($3897)) + 17|0);
                HEAP8[$3898>>0] = 1;
                $3899 = +HEAPF64[$this>>3];
                $3900 = HEAP32[$vinfos131>>2]|0;
                $3901 = ((($3900)) + 8|0);
                HEAPF64[$3901>>3] = $3899;
                $3902 = HEAP8[$285>>0]|0;
                $3903 = HEAP32[$vinfos131>>2]|0;
                $3904 = ((($3903)) + 19|0);
                HEAP8[$3904>>0] = $3902;
                $3905 = HEAP8[$286>>0]|0;
                $3906 = HEAP32[$vinfos131>>2]|0;
                $3907 = ((($3906)) + 20|0);
                HEAP8[$3907>>0] = $3905;
                $3908 = HEAP8[$287>>0]|0;
                $3909 = HEAP32[$vinfos131>>2]|0;
                $3910 = ((($3909)) + 18|0);
                HEAP8[$3910>>0] = $3908;
                $3911 = HEAP32[$vinfos131>>2]|0;
                $3912 = ((($3911)) + 41|0);
                HEAP8[$3912>>0] = 1;
                $3913 = +HEAPF64[$288>>3];
                $3914 = HEAP32[$vinfos131>>2]|0;
                $3915 = ((($3914)) + 32|0);
                HEAPF64[$3915>>3] = $3913;
                $3916 = HEAP8[$289>>0]|0;
                $3917 = HEAP32[$vinfos131>>2]|0;
                $3918 = ((($3917)) + 43|0);
                HEAP8[$3918>>0] = $3916;
                $3919 = HEAP8[$290>>0]|0;
                $3920 = HEAP32[$vinfos131>>2]|0;
                $3921 = ((($3920)) + 44|0);
                HEAP8[$3921>>0] = $3919;
                $3922 = HEAP8[$291>>0]|0;
                $3923 = HEAP32[$vinfos131>>2]|0;
                $3924 = ((($3923)) + 42|0);
                HEAP8[$3924>>0] = $3922;
                $3925 = HEAP32[$vinfos131>>2]|0;
                $3926 = ((($3925)) + 65|0);
                HEAP8[$3926>>0] = 1;
                $3927 = +HEAPF64[$292>>3];
                $3928 = HEAP32[$vinfos131>>2]|0;
                $3929 = ((($3928)) + 56|0);
                HEAPF64[$3929>>3] = $3927;
                $3930 = HEAP8[$293>>0]|0;
                $3931 = HEAP32[$vinfos131>>2]|0;
                $3932 = ((($3931)) + 67|0);
                HEAP8[$3932>>0] = $3930;
                $3933 = HEAP8[$294>>0]|0;
                $3934 = HEAP32[$vinfos131>>2]|0;
                $3935 = ((($3934)) + 68|0);
                HEAP8[$3935>>0] = $3933;
                $3936 = HEAP8[$295>>0]|0;
                $3937 = HEAP32[$vinfos131>>2]|0;
                $3938 = ((($3937)) + 66|0);
                HEAP8[$3938>>0] = $3936;
                $3939 = HEAP32[$vinfos131>>2]|0;
                $3940 = ((($3939)) + 89|0);
                HEAP8[$3940>>0] = 1;
                $3941 = +HEAPF64[$296>>3];
                $3942 = HEAP32[$vinfos131>>2]|0;
                $3943 = ((($3942)) + 80|0);
                HEAPF64[$3943>>3] = $3941;
                $3944 = HEAP8[$297>>0]|0;
                $3945 = HEAP32[$vinfos131>>2]|0;
                $3946 = ((($3945)) + 91|0);
                HEAP8[$3946>>0] = $3944;
                $3947 = HEAP8[$298>>0]|0;
                $3948 = HEAP32[$vinfos131>>2]|0;
                $3949 = ((($3948)) + 92|0);
                HEAP8[$3949>>0] = $3947;
                $3950 = HEAP8[$299>>0]|0;
                $3951 = HEAP32[$vinfos131>>2]|0;
                $3952 = ((($3951)) + 90|0);
                HEAP8[$3952>>0] = $3950;
                $3953 = HEAP32[$vinfos131>>2]|0;
                $3954 = ((($3953)) + 113|0);
                HEAP8[$3954>>0] = 1;
                $3955 = +HEAPF64[$101>>3];
                $3956 = HEAP32[$vinfos131>>2]|0;
                $3957 = ((($3956)) + 104|0);
                HEAPF64[$3957>>3] = $3955;
                $3958 = HEAP8[$99>>0]|0;
                $3959 = HEAP32[$vinfos131>>2]|0;
                $3960 = ((($3959)) + 115|0);
                HEAP8[$3960>>0] = $3958;
                $3961 = HEAP8[$100>>0]|0;
                $3962 = HEAP32[$vinfos131>>2]|0;
                $3963 = ((($3962)) + 116|0);
                HEAP8[$3963>>0] = $3961;
                $3964 = HEAP8[$96>>0]|0;
                $3965 = HEAP32[$vinfos131>>2]|0;
                $3966 = ((($3965)) + 114|0);
                HEAP8[$3966>>0] = $3964;
                $3967 = HEAP32[$vinfos131>>2]|0;
                $3968 = ((($3967)) + 137|0);
                HEAP8[$3968>>0] = 1;
                $3969 = +HEAPF64[$29>>3];
                $3970 = HEAP32[$vinfos131>>2]|0;
                $3971 = ((($3970)) + 128|0);
                HEAPF64[$3971>>3] = $3969;
                $3972 = HEAP8[$27>>0]|0;
                $3973 = HEAP32[$vinfos131>>2]|0;
                $3974 = ((($3973)) + 139|0);
                HEAP8[$3974>>0] = $3972;
                $3975 = HEAP8[$28>>0]|0;
                $3976 = HEAP32[$vinfos131>>2]|0;
                $3977 = ((($3976)) + 140|0);
                HEAP8[$3977>>0] = $3975;
                $3978 = HEAP8[$26>>0]|0;
                $3979 = HEAP32[$vinfos131>>2]|0;
                $3980 = ((($3979)) + 138|0);
                HEAP8[$3980>>0] = $3978;
                $3981 = HEAP32[$vinfos131>>2]|0;
                $3982 = ((($3981)) + 161|0);
                HEAP8[$3982>>0] = 1;
                $3983 = +HEAPF64[$282>>3];
                $3984 = HEAP32[$vinfos131>>2]|0;
                $3985 = ((($3984)) + 152|0);
                HEAPF64[$3985>>3] = $3983;
                $3986 = HEAP8[$280>>0]|0;
                $3987 = HEAP32[$vinfos131>>2]|0;
                $3988 = ((($3987)) + 163|0);
                HEAP8[$3988>>0] = $3986;
                $3989 = HEAP8[$281>>0]|0;
                $3990 = HEAP32[$vinfos131>>2]|0;
                $3991 = ((($3990)) + 164|0);
                HEAP8[$3991>>0] = $3989;
                $3992 = HEAP8[$276>>0]|0;
                $3993 = HEAP32[$vinfos131>>2]|0;
                $3994 = ((($3993)) + 162|0);
                HEAP8[$3994>>0] = $3992;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree132,0);
                $3995 = HEAP32[$solutions>>2]|0;
                $3996 = ((($3995)) + 8|0);
                $3997 = HEAP32[$3996>>2]|0;
                (FUNCTION_TABLE_iiii[$3997 & 31]($solutions,$vinfos131,$vfree132)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree132);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos131);
                break L7;
               }
              } while(0);
              $1975 = +HEAPF64[$30>>3];
              $1976 = +HEAPF64[$25>>3];
              $1977 = +HEAPF64[$31>>3];
              $1978 = +HEAPF64[$22>>3];
              $1979 = $1978 - $1977;
              $1980 = +HEAPF64[$101>>3];
              $1981 = $1980 + -1.5707963267949001;
              $1982 = (+__Z5IKabsd($1981));
              $1983 = $1982 + 3.14159265358979;
              $1984 = (+__Z6IKfmoddd($1983,6.2831853071795898));
              $1985 = $1984 + -3.14159265358979;
              $1986 = +HEAPF64[$19>>3];
              $1987 = +HEAPF64[$20>>3];
              $1988 = $1977 * $1987;
              $1989 = +HEAPF64[$23>>3];
              $1990 = $1975 * $1989;
              $1991 = $1988 + $1990;
              $1992 = +HEAPF64[$21>>3];
              $1993 = $1977 * $1992;
              $1994 = +HEAPF64[$24>>3];
              $1995 = $1975 * $1994;
              $1996 = $1993 + $1995;
              $1997 = $1977 * $1978;
              $1998 = $1997 + -1.0;
              $1999 = $1975 * $1976;
              $2000 = $1999 + $1998;
              $2001 = $1975 * $1978;
              $2002 = $1976 * $1977;
              $2003 = $2001 - $2002;
              $2004 = (+__Z5IKabsd($1985));
              $2005 = $2004 < 9.9999999999999995E-7;
              do {
               if ($2005) {
                $2006 = $1976 - $1975;
                $2007 = (+__Z5IKabsd($2006));
                $2008 = $2007 < 9.9999999999999995E-7;
                if (!($2008)) {
                 break;
                }
                $2009 = (+__Z5IKabsd($1986));
                $2010 = $2009 < 9.9999999999999995E-7;
                if (!($2010)) {
                 break;
                }
                $2011 = (+__Z5IKabsd($1979));
                $2012 = $2011 < 9.9999999999999995E-7;
                if (!($2012)) {
                 break;
                }
                $2013 = (+__Z5IKabsd($1991));
                $2014 = $2013 < 9.9999999999999995E-7;
                if (!($2014)) {
                 break;
                }
                $2015 = (+__Z5IKabsd($1996));
                $2016 = $2015 < 9.9999999999999995E-7;
                if (!($2016)) {
                 break;
                }
                $2017 = (+__Z5IKabsd($2000));
                $2018 = $2017 < 9.9999999999999995E-7;
                if (!($2018)) {
                 break;
                }
                $2019 = (+__Z5IKabsd($2003));
                $2020 = $2019 < 9.9999999999999995E-7;
                if (!($2020)) {
                 break;
                }
                HEAP8[$104>>0] = 1;
                $2021 = +HEAPF64[$24>>3];
                $2022 = +HEAPF64[$23>>3];
                $2023 = -$2022;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x347,$2021,$2023,1.9999999999999999E-6);
                $2024 = HEAP8[$105>>0]|0;
                $2025 = ($2024<<24>>24)==(0);
                if ($2025) {
                 break L7;
                }
                $2026 = +HEAPF64[$22>>3];
                $2027 = (+__Z6IKsignd($2026));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x348,$2027,-1);
                $2028 = HEAP8[$106>>0]|0;
                $2029 = ($2028<<24>>24)==(0);
                if ($2029) {
                 break L7;
                }
                $2030 = +HEAPF64[$x347>>3];
                $2031 = $2030 + -1.5707963267949001;
                $2032 = +HEAPF64[$x348>>3];
                $2033 = $2032 * 1.5707963267949001;
                $2034 = $2031 + $2033;
                $2035 = (+__Z5IKsind($2034));
                $2036 = (+__Z5IKcosd($2034));
                $2037 = $2034 > 3.14159265358979;
                do {
                 if ($2037) {
                  $2038 = $2034 + -6.2831853071795898;
                  $2041 = $2038;
                 } else {
                  $2039 = $2034 < -3.14159265358979;
                  if (!($2039)) {
                   $2041 = $2034;
                   break;
                  }
                  $2040 = $2034 + 6.2831853071795898;
                  $2041 = $2040;
                 }
                } while(0);
                HEAP8[$107>>0] = 0;
                HEAP8[$108>>0] = -1;
                HEAPF64[$109>>3] = $2041;
                HEAPF64[$110>>3] = $2036;
                HEAPF64[$111>>3] = $2035;
                $2042 = +HEAPF64[$109>>3];
                $2043 = (+__Z5IKsind($2042));
                $2044 = (+__Z5IKcosd($2042));
                $2045 = +HEAPF64[$22>>3];
                $2046 = +HEAPF64[$23>>3];
                $2047 = $2044 * $2045;
                $2048 = $2046 + $2047;
                $2049 = +HEAPF64[$25>>3];
                $2050 = +HEAPF64[$21>>3];
                $2051 = $2043 * $2045;
                $2052 = +HEAPF64[$24>>3];
                $2053 = $2052 - $2051;
                $2054 = $2044 * $2049;
                $2055 = +HEAPF64[$20>>3];
                $2056 = $2055 - $2054;
                $2057 = +HEAPF64[$11>>3];
                $2058 = -$2057;
                $2059 = $2058 - $2043;
                $2060 = +HEAPF64[$15>>3];
                $2061 = -$2060;
                $2062 = $2061 - $2044;
                $2063 = $2049 * $2050;
                $2064 = $2043 + $2063;
                $2065 = $2045 * $2052;
                $2066 = $2064 - $2065;
                $2067 = $2049 * $2055;
                $2068 = $2067 - $2044;
                $2069 = $2045 * $2046;
                $2070 = $2068 - $2069;
                $2071 = (+__Z5IKabsd($2048));
                $2072 = $2071 > 5.0000000000000004E-6;
                if ($2072) {
                 break L7;
                }
                $2073 = $2043 * $2049;
                $2074 = $2073 + $2050;
                $2075 = (+__Z5IKabsd($2074));
                $2076 = $2075 > 5.0000000000000004E-6;
                if ($2076) {
                 break L7;
                }
                $2077 = (+__Z5IKabsd($2053));
                $2078 = $2077 > 5.0000000000000004E-6;
                if ($2078) {
                 break L7;
                }
                $2079 = (+__Z5IKabsd($2056));
                $2080 = $2079 > 5.0000000000000004E-6;
                if ($2080) {
                 break L7;
                }
                $2081 = (+__Z5IKabsd($2059));
                $2082 = $2081 > 5.0000000000000004E-6;
                if ($2082) {
                 break L7;
                }
                $2083 = (+__Z5IKabsd($2062));
                $2084 = $2083 > 5.0000000000000004E-6;
                if ($2084) {
                 break L7;
                }
                $2085 = (+__Z5IKabsd($2066));
                $2086 = $2085 > 5.0000000000000004E-6;
                if ($2086) {
                 break L7;
                }
                $2087 = (+__Z5IKabsd($2070));
                $2088 = $2087 > 5.0000000000000004E-6;
                if ($2088) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos43,7);
                $2089 = HEAP32[$vinfos43>>2]|0;
                $2090 = ((($2089)) + 17|0);
                HEAP8[$2090>>0] = 1;
                $2091 = +HEAPF64[$this>>3];
                $2092 = HEAP32[$vinfos43>>2]|0;
                $2093 = ((($2092)) + 8|0);
                HEAPF64[$2093>>3] = $2091;
                $2094 = HEAP8[$112>>0]|0;
                $2095 = HEAP32[$vinfos43>>2]|0;
                $2096 = ((($2095)) + 19|0);
                HEAP8[$2096>>0] = $2094;
                $2097 = HEAP8[$113>>0]|0;
                $2098 = HEAP32[$vinfos43>>2]|0;
                $2099 = ((($2098)) + 20|0);
                HEAP8[$2099>>0] = $2097;
                $2100 = HEAP8[$114>>0]|0;
                $2101 = HEAP32[$vinfos43>>2]|0;
                $2102 = ((($2101)) + 18|0);
                HEAP8[$2102>>0] = $2100;
                $2103 = HEAP32[$vinfos43>>2]|0;
                $2104 = ((($2103)) + 41|0);
                HEAP8[$2104>>0] = 1;
                $2105 = +HEAPF64[$115>>3];
                $2106 = HEAP32[$vinfos43>>2]|0;
                $2107 = ((($2106)) + 32|0);
                HEAPF64[$2107>>3] = $2105;
                $2108 = HEAP8[$116>>0]|0;
                $2109 = HEAP32[$vinfos43>>2]|0;
                $2110 = ((($2109)) + 43|0);
                HEAP8[$2110>>0] = $2108;
                $2111 = HEAP8[$117>>0]|0;
                $2112 = HEAP32[$vinfos43>>2]|0;
                $2113 = ((($2112)) + 44|0);
                HEAP8[$2113>>0] = $2111;
                $2114 = HEAP8[$118>>0]|0;
                $2115 = HEAP32[$vinfos43>>2]|0;
                $2116 = ((($2115)) + 42|0);
                HEAP8[$2116>>0] = $2114;
                $2117 = HEAP32[$vinfos43>>2]|0;
                $2118 = ((($2117)) + 65|0);
                HEAP8[$2118>>0] = 1;
                $2119 = +HEAPF64[$119>>3];
                $2120 = HEAP32[$vinfos43>>2]|0;
                $2121 = ((($2120)) + 56|0);
                HEAPF64[$2121>>3] = $2119;
                $2122 = HEAP8[$120>>0]|0;
                $2123 = HEAP32[$vinfos43>>2]|0;
                $2124 = ((($2123)) + 67|0);
                HEAP8[$2124>>0] = $2122;
                $2125 = HEAP8[$121>>0]|0;
                $2126 = HEAP32[$vinfos43>>2]|0;
                $2127 = ((($2126)) + 68|0);
                HEAP8[$2127>>0] = $2125;
                $2128 = HEAP8[$122>>0]|0;
                $2129 = HEAP32[$vinfos43>>2]|0;
                $2130 = ((($2129)) + 66|0);
                HEAP8[$2130>>0] = $2128;
                $2131 = HEAP32[$vinfos43>>2]|0;
                $2132 = ((($2131)) + 89|0);
                HEAP8[$2132>>0] = 1;
                $2133 = +HEAPF64[$123>>3];
                $2134 = HEAP32[$vinfos43>>2]|0;
                $2135 = ((($2134)) + 80|0);
                HEAPF64[$2135>>3] = $2133;
                $2136 = HEAP8[$124>>0]|0;
                $2137 = HEAP32[$vinfos43>>2]|0;
                $2138 = ((($2137)) + 91|0);
                HEAP8[$2138>>0] = $2136;
                $2139 = HEAP8[$125>>0]|0;
                $2140 = HEAP32[$vinfos43>>2]|0;
                $2141 = ((($2140)) + 92|0);
                HEAP8[$2141>>0] = $2139;
                $2142 = HEAP8[$126>>0]|0;
                $2143 = HEAP32[$vinfos43>>2]|0;
                $2144 = ((($2143)) + 90|0);
                HEAP8[$2144>>0] = $2142;
                $2145 = HEAP32[$vinfos43>>2]|0;
                $2146 = ((($2145)) + 113|0);
                HEAP8[$2146>>0] = 1;
                $2147 = +HEAPF64[$101>>3];
                $2148 = HEAP32[$vinfos43>>2]|0;
                $2149 = ((($2148)) + 104|0);
                HEAPF64[$2149>>3] = $2147;
                $2150 = HEAP8[$99>>0]|0;
                $2151 = HEAP32[$vinfos43>>2]|0;
                $2152 = ((($2151)) + 115|0);
                HEAP8[$2152>>0] = $2150;
                $2153 = HEAP8[$100>>0]|0;
                $2154 = HEAP32[$vinfos43>>2]|0;
                $2155 = ((($2154)) + 116|0);
                HEAP8[$2155>>0] = $2153;
                $2156 = HEAP8[$96>>0]|0;
                $2157 = HEAP32[$vinfos43>>2]|0;
                $2158 = ((($2157)) + 114|0);
                HEAP8[$2158>>0] = $2156;
                $2159 = HEAP32[$vinfos43>>2]|0;
                $2160 = ((($2159)) + 137|0);
                HEAP8[$2160>>0] = 1;
                $2161 = +HEAPF64[$29>>3];
                $2162 = HEAP32[$vinfos43>>2]|0;
                $2163 = ((($2162)) + 128|0);
                HEAPF64[$2163>>3] = $2161;
                $2164 = HEAP8[$27>>0]|0;
                $2165 = HEAP32[$vinfos43>>2]|0;
                $2166 = ((($2165)) + 139|0);
                HEAP8[$2166>>0] = $2164;
                $2167 = HEAP8[$28>>0]|0;
                $2168 = HEAP32[$vinfos43>>2]|0;
                $2169 = ((($2168)) + 140|0);
                HEAP8[$2169>>0] = $2167;
                $2170 = HEAP8[$26>>0]|0;
                $2171 = HEAP32[$vinfos43>>2]|0;
                $2172 = ((($2171)) + 138|0);
                HEAP8[$2172>>0] = $2170;
                $2173 = HEAP32[$vinfos43>>2]|0;
                $2174 = ((($2173)) + 161|0);
                HEAP8[$2174>>0] = 1;
                $2175 = +HEAPF64[$109>>3];
                $2176 = HEAP32[$vinfos43>>2]|0;
                $2177 = ((($2176)) + 152|0);
                HEAPF64[$2177>>3] = $2175;
                $2178 = HEAP8[$107>>0]|0;
                $2179 = HEAP32[$vinfos43>>2]|0;
                $2180 = ((($2179)) + 163|0);
                HEAP8[$2180>>0] = $2178;
                $2181 = HEAP8[$108>>0]|0;
                $2182 = HEAP32[$vinfos43>>2]|0;
                $2183 = ((($2182)) + 164|0);
                HEAP8[$2183>>0] = $2181;
                $2184 = HEAP8[$104>>0]|0;
                $2185 = HEAP32[$vinfos43>>2]|0;
                $2186 = ((($2185)) + 162|0);
                HEAP8[$2186>>0] = $2184;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree44,0);
                $2187 = HEAP32[$solutions>>2]|0;
                $2188 = ((($2187)) + 8|0);
                $2189 = HEAP32[$2188>>2]|0;
                (FUNCTION_TABLE_iiii[$2189 & 31]($solutions,$vinfos43,$vfree44)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree44);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos43);
                break L7;
               }
              } while(0);
              $2190 = +HEAPF64[$30>>3];
              $2191 = +HEAPF64[$25>>3];
              $2192 = +HEAPF64[$31>>3];
              $2193 = +HEAPF64[$22>>3];
              $2194 = +HEAPF64[$101>>3];
              $2195 = $2194 + 1.5707963267949001;
              $2196 = (+__Z5IKabsd($2195));
              $2197 = $2196 + 3.14159265358979;
              $2198 = (+__Z6IKfmoddd($2197,6.2831853071795898));
              $2199 = $2198 + -3.14159265358979;
              $2200 = +HEAPF64[$19>>3];
              $2201 = $2192 + $2193;
              $2202 = -$2192;
              $2203 = $2202 - $2193;
              $2204 = +HEAPF64[$23>>3];
              $2205 = $2190 * $2204;
              $2206 = +HEAPF64[$20>>3];
              $2207 = $2192 * $2206;
              $2208 = $2205 - $2207;
              $2209 = +HEAPF64[$21>>3];
              $2210 = $2192 * $2209;
              $2211 = +HEAPF64[$24>>3];
              $2212 = $2190 * $2211;
              $2213 = $2212 - $2210;
              $2214 = $2192 * $2193;
              $2215 = -1.0 - $2214;
              $2216 = $2190 * $2191;
              $2217 = $2216 + $2215;
              $2218 = $2191 * $2192;
              $2219 = $2190 * $2193;
              $2220 = -$2219;
              $2221 = $2220 - $2218;
              $2222 = (+__Z5IKabsd($2199));
              $2223 = $2222 < 9.9999999999999995E-7;
              do {
               if ($2223) {
                $2224 = $2191 - $2190;
                $2225 = (+__Z5IKabsd($2224));
                $2226 = $2225 < 9.9999999999999995E-7;
                if (!($2226)) {
                 break;
                }
                $2227 = (+__Z5IKabsd($2200));
                $2228 = $2227 < 9.9999999999999995E-7;
                if (!($2228)) {
                 break;
                }
                $2229 = (+__Z5IKabsd($2201));
                $2230 = $2229 < 9.9999999999999995E-7;
                if (!($2230)) {
                 break;
                }
                $2231 = (+__Z5IKabsd($2203));
                $2232 = $2231 < 9.9999999999999995E-7;
                if (!($2232)) {
                 break;
                }
                $2233 = (+__Z5IKabsd($2208));
                $2234 = $2233 < 9.9999999999999995E-7;
                if (!($2234)) {
                 break;
                }
                $2235 = (+__Z5IKabsd($2213));
                $2236 = $2235 < 9.9999999999999995E-7;
                if (!($2236)) {
                 break;
                }
                $2237 = (+__Z5IKabsd($2217));
                $2238 = $2237 < 9.9999999999999995E-7;
                if (!($2238)) {
                 break;
                }
                $2239 = (+__Z5IKabsd($2221));
                $2240 = $2239 < 9.9999999999999995E-7;
                if (!($2240)) {
                 break;
                }
                HEAP8[$127>>0] = 1;
                $2241 = +HEAPF64[$11>>3];
                $2242 = (+__Z5IKabsd($2241));
                $2243 = $2242 < 1.9999999999999999E-6;
                do {
                 if ($2243) {
                  $2244 = +HEAPF64[$15>>3];
                  $2245 = (+__Z5IKabsd($2244));
                  $2246 = $2245 < 1.9999999999999999E-6;
                  if (!($2246)) {
                   break;
                  }
                  $2247 = (+__Z5IKsqrd($2241));
                  $2248 = (+__Z5IKsqrd($2244));
                  $2249 = $2247 + $2248;
                  $2250 = $2249 + -1.0;
                  $2251 = (+__Z5IKabsd($2250));
                  $2252 = !($2251 <= 1.9999999999999999E-6);
                  if (!($2252)) {
                   break L7;
                  }
                 }
                } while(0);
                $2253 = +HEAPF64[$11>>3];
                $2254 = +HEAPF64[$15>>3];
                $2255 = (+__Z7IKatan2dd($2253,$2254));
                $2256 = (+__Z5IKsind($2255));
                $2257 = (+__Z5IKcosd($2255));
                $2258 = $2255 > 3.14159265358979;
                do {
                 if ($2258) {
                  $2259 = $2255 + -6.2831853071795898;
                  $2262 = $2259;
                 } else {
                  $2260 = $2255 < -3.14159265358979;
                  if (!($2260)) {
                   $2262 = $2255;
                   break;
                  }
                  $2261 = $2255 + 6.2831853071795898;
                  $2262 = $2261;
                 }
                } while(0);
                HEAP8[$128>>0] = 0;
                HEAP8[$129>>0] = -1;
                HEAPF64[$130>>3] = $2262;
                HEAPF64[$131>>3] = $2257;
                HEAPF64[$132>>3] = $2256;
                $2263 = +HEAPF64[$130>>3];
                $2264 = (+__Z5IKsind($2263));
                $2265 = (+__Z5IKcosd($2263));
                $2266 = +HEAPF64[$20>>3];
                $2267 = +HEAPF64[$21>>3];
                $2268 = +HEAPF64[$24>>3];
                $2269 = +HEAPF64[$22>>3];
                $2270 = $2264 * $2269;
                $2271 = $2268 + $2270;
                $2272 = +HEAPF64[$15>>3];
                $2273 = $2272 - $2265;
                $2274 = $2265 * $2269;
                $2275 = +HEAPF64[$23>>3];
                $2276 = $2275 - $2274;
                $2277 = +HEAPF64[$25>>3];
                $2278 = $2264 * $2277;
                $2279 = $2278 - $2267;
                $2280 = -$2277;
                $2281 = $2265 * $2280;
                $2282 = $2281 - $2266;
                $2283 = $2267 * $2280;
                $2284 = $2264 + $2283;
                $2285 = $2268 * $2269;
                $2286 = $2285 + $2284;
                $2287 = $2266 * $2280;
                $2288 = $2287 - $2265;
                $2289 = $2269 * $2275;
                $2290 = $2289 + $2288;
                $2291 = (+__Z5IKabsd($2271));
                $2292 = $2291 > 5.0000000000000004E-6;
                if ($2292) {
                 break L7;
                }
                $2293 = +HEAPF64[$11>>3];
                $2294 = $2293 - $2264;
                $2295 = (+__Z5IKabsd($2294));
                $2296 = $2295 > 5.0000000000000004E-6;
                if ($2296) {
                 break L7;
                }
                $2297 = (+__Z5IKabsd($2273));
                $2298 = $2297 > 5.0000000000000004E-6;
                if ($2298) {
                 break L7;
                }
                $2299 = (+__Z5IKabsd($2276));
                $2300 = $2299 > 5.0000000000000004E-6;
                if ($2300) {
                 break L7;
                }
                $2301 = (+__Z5IKabsd($2279));
                $2302 = $2301 > 5.0000000000000004E-6;
                if ($2302) {
                 break L7;
                }
                $2303 = (+__Z5IKabsd($2282));
                $2304 = $2303 > 5.0000000000000004E-6;
                if ($2304) {
                 break L7;
                }
                $2305 = (+__Z5IKabsd($2286));
                $2306 = $2305 > 5.0000000000000004E-6;
                if ($2306) {
                 break L7;
                }
                $2307 = (+__Z5IKabsd($2290));
                $2308 = $2307 > 5.0000000000000004E-6;
                if ($2308) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos54,7);
                $2309 = HEAP32[$vinfos54>>2]|0;
                $2310 = ((($2309)) + 17|0);
                HEAP8[$2310>>0] = 1;
                $2311 = +HEAPF64[$this>>3];
                $2312 = HEAP32[$vinfos54>>2]|0;
                $2313 = ((($2312)) + 8|0);
                HEAPF64[$2313>>3] = $2311;
                $2314 = HEAP8[$133>>0]|0;
                $2315 = HEAP32[$vinfos54>>2]|0;
                $2316 = ((($2315)) + 19|0);
                HEAP8[$2316>>0] = $2314;
                $2317 = HEAP8[$134>>0]|0;
                $2318 = HEAP32[$vinfos54>>2]|0;
                $2319 = ((($2318)) + 20|0);
                HEAP8[$2319>>0] = $2317;
                $2320 = HEAP8[$135>>0]|0;
                $2321 = HEAP32[$vinfos54>>2]|0;
                $2322 = ((($2321)) + 18|0);
                HEAP8[$2322>>0] = $2320;
                $2323 = HEAP32[$vinfos54>>2]|0;
                $2324 = ((($2323)) + 41|0);
                HEAP8[$2324>>0] = 1;
                $2325 = +HEAPF64[$136>>3];
                $2326 = HEAP32[$vinfos54>>2]|0;
                $2327 = ((($2326)) + 32|0);
                HEAPF64[$2327>>3] = $2325;
                $2328 = HEAP8[$137>>0]|0;
                $2329 = HEAP32[$vinfos54>>2]|0;
                $2330 = ((($2329)) + 43|0);
                HEAP8[$2330>>0] = $2328;
                $2331 = HEAP8[$138>>0]|0;
                $2332 = HEAP32[$vinfos54>>2]|0;
                $2333 = ((($2332)) + 44|0);
                HEAP8[$2333>>0] = $2331;
                $2334 = HEAP8[$139>>0]|0;
                $2335 = HEAP32[$vinfos54>>2]|0;
                $2336 = ((($2335)) + 42|0);
                HEAP8[$2336>>0] = $2334;
                $2337 = HEAP32[$vinfos54>>2]|0;
                $2338 = ((($2337)) + 65|0);
                HEAP8[$2338>>0] = 1;
                $2339 = +HEAPF64[$140>>3];
                $2340 = HEAP32[$vinfos54>>2]|0;
                $2341 = ((($2340)) + 56|0);
                HEAPF64[$2341>>3] = $2339;
                $2342 = HEAP8[$141>>0]|0;
                $2343 = HEAP32[$vinfos54>>2]|0;
                $2344 = ((($2343)) + 67|0);
                HEAP8[$2344>>0] = $2342;
                $2345 = HEAP8[$142>>0]|0;
                $2346 = HEAP32[$vinfos54>>2]|0;
                $2347 = ((($2346)) + 68|0);
                HEAP8[$2347>>0] = $2345;
                $2348 = HEAP8[$143>>0]|0;
                $2349 = HEAP32[$vinfos54>>2]|0;
                $2350 = ((($2349)) + 66|0);
                HEAP8[$2350>>0] = $2348;
                $2351 = HEAP32[$vinfos54>>2]|0;
                $2352 = ((($2351)) + 89|0);
                HEAP8[$2352>>0] = 1;
                $2353 = +HEAPF64[$144>>3];
                $2354 = HEAP32[$vinfos54>>2]|0;
                $2355 = ((($2354)) + 80|0);
                HEAPF64[$2355>>3] = $2353;
                $2356 = HEAP8[$145>>0]|0;
                $2357 = HEAP32[$vinfos54>>2]|0;
                $2358 = ((($2357)) + 91|0);
                HEAP8[$2358>>0] = $2356;
                $2359 = HEAP8[$146>>0]|0;
                $2360 = HEAP32[$vinfos54>>2]|0;
                $2361 = ((($2360)) + 92|0);
                HEAP8[$2361>>0] = $2359;
                $2362 = HEAP8[$147>>0]|0;
                $2363 = HEAP32[$vinfos54>>2]|0;
                $2364 = ((($2363)) + 90|0);
                HEAP8[$2364>>0] = $2362;
                $2365 = HEAP32[$vinfos54>>2]|0;
                $2366 = ((($2365)) + 113|0);
                HEAP8[$2366>>0] = 1;
                $2367 = +HEAPF64[$101>>3];
                $2368 = HEAP32[$vinfos54>>2]|0;
                $2369 = ((($2368)) + 104|0);
                HEAPF64[$2369>>3] = $2367;
                $2370 = HEAP8[$99>>0]|0;
                $2371 = HEAP32[$vinfos54>>2]|0;
                $2372 = ((($2371)) + 115|0);
                HEAP8[$2372>>0] = $2370;
                $2373 = HEAP8[$100>>0]|0;
                $2374 = HEAP32[$vinfos54>>2]|0;
                $2375 = ((($2374)) + 116|0);
                HEAP8[$2375>>0] = $2373;
                $2376 = HEAP8[$96>>0]|0;
                $2377 = HEAP32[$vinfos54>>2]|0;
                $2378 = ((($2377)) + 114|0);
                HEAP8[$2378>>0] = $2376;
                $2379 = HEAP32[$vinfos54>>2]|0;
                $2380 = ((($2379)) + 137|0);
                HEAP8[$2380>>0] = 1;
                $2381 = +HEAPF64[$29>>3];
                $2382 = HEAP32[$vinfos54>>2]|0;
                $2383 = ((($2382)) + 128|0);
                HEAPF64[$2383>>3] = $2381;
                $2384 = HEAP8[$27>>0]|0;
                $2385 = HEAP32[$vinfos54>>2]|0;
                $2386 = ((($2385)) + 139|0);
                HEAP8[$2386>>0] = $2384;
                $2387 = HEAP8[$28>>0]|0;
                $2388 = HEAP32[$vinfos54>>2]|0;
                $2389 = ((($2388)) + 140|0);
                HEAP8[$2389>>0] = $2387;
                $2390 = HEAP8[$26>>0]|0;
                $2391 = HEAP32[$vinfos54>>2]|0;
                $2392 = ((($2391)) + 138|0);
                HEAP8[$2392>>0] = $2390;
                $2393 = HEAP32[$vinfos54>>2]|0;
                $2394 = ((($2393)) + 161|0);
                HEAP8[$2394>>0] = 1;
                $2395 = +HEAPF64[$130>>3];
                $2396 = HEAP32[$vinfos54>>2]|0;
                $2397 = ((($2396)) + 152|0);
                HEAPF64[$2397>>3] = $2395;
                $2398 = HEAP8[$128>>0]|0;
                $2399 = HEAP32[$vinfos54>>2]|0;
                $2400 = ((($2399)) + 163|0);
                HEAP8[$2400>>0] = $2398;
                $2401 = HEAP8[$129>>0]|0;
                $2402 = HEAP32[$vinfos54>>2]|0;
                $2403 = ((($2402)) + 164|0);
                HEAP8[$2403>>0] = $2401;
                $2404 = HEAP8[$127>>0]|0;
                $2405 = HEAP32[$vinfos54>>2]|0;
                $2406 = ((($2405)) + 162|0);
                HEAP8[$2406>>0] = $2404;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree55,0);
                $2407 = HEAP32[$solutions>>2]|0;
                $2408 = ((($2407)) + 8|0);
                $2409 = HEAP32[$2408>>2]|0;
                (FUNCTION_TABLE_iiii[$2409 & 31]($solutions,$vinfos54,$vfree55)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree55);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos54);
                break L7;
               }
              } while(0);
              $2410 = +HEAPF64[$103>>3];
              $2411 = +HEAPF64[$102>>3];
              $2412 = +HEAPF64[$22>>3];
              $2413 = $2411 * $2412;
              $2414 = +HEAPF64[$19>>3];
              $2415 = $2410 * $2414;
              $2416 = $2413 - $2415;
              $2417 = +HEAPF64[$11>>3];
              $2418 = $2411 * $2417;
              $2419 = +HEAPF64[$20>>3];
              $2420 = $2410 * $2419;
              $2421 = $2418 + $2420;
              $2422 = +HEAPF64[$15>>3];
              $2423 = $2411 * $2422;
              $2424 = +HEAPF64[$21>>3];
              $2425 = $2410 * $2424;
              $2426 = $2423 + $2425;
              $2427 = $2411 * $2414;
              $2428 = $2427 + -1.0;
              $2429 = $2410 * $2412;
              $2430 = $2429 + $2428;
              $2431 = +HEAPF64[$29>>3];
              $2432 = $2431 + -1.5707963267949001;
              $2433 = (+__Z5IKabsd($2432));
              $2434 = $2433 + 3.14159265358979;
              $2435 = (+__Z6IKfmoddd($2434,6.2831853071795898));
              $2436 = $2435 + -3.14159265358979;
              $2437 = $2414 - $2411;
              $2438 = $2412 - $2410;
              $2439 = (+__Z5IKabsd($2436));
              $2440 = $2439 < 9.9999999999999995E-7;
              do {
               if ($2440) {
                $2441 = +HEAPF64[$25>>3];
                $2442 = (+__Z5IKabsd($2441));
                $2443 = $2442 < 9.9999999999999995E-7;
                if (!($2443)) {
                 break;
                }
                $2444 = (+__Z5IKabsd($2437));
                $2445 = $2444 < 9.9999999999999995E-7;
                if (!($2445)) {
                 break;
                }
                $2446 = (+__Z5IKabsd($2438));
                $2447 = $2446 < 9.9999999999999995E-7;
                if (!($2447)) {
                 break;
                }
                $2448 = (+__Z5IKabsd($2416));
                $2449 = $2448 < 9.9999999999999995E-7;
                if (!($2449)) {
                 break;
                }
                $2450 = (+__Z5IKabsd($2430));
                $2451 = $2450 < 9.9999999999999995E-7;
                if (!($2451)) {
                 break;
                }
                $2452 = (+__Z5IKabsd($2426));
                $2453 = $2452 < 9.9999999999999995E-7;
                if (!($2453)) {
                 break;
                }
                $2454 = (+__Z5IKabsd($2421));
                $2455 = $2454 < 9.9999999999999995E-7;
                if (!($2455)) {
                 break;
                }
                HEAP8[$148>>0] = 1;
                $2456 = +HEAPF64[$24>>3];
                $2457 = (+__Z5IKabsd($2456));
                $2458 = $2457 < 1.9999999999999999E-6;
                do {
                 if ($2458) {
                  $2459 = +HEAPF64[$23>>3];
                  $2460 = -$2459;
                  $2461 = (+__Z5IKabsd($2460));
                  $2462 = $2461 < 1.9999999999999999E-6;
                  if (!($2462)) {
                   break;
                  }
                  $2463 = (+__Z5IKsqrd($2456));
                  $2464 = (+__Z5IKsqrd($2460));
                  $2465 = $2463 + $2464;
                  $2466 = $2465 + -1.0;
                  $2467 = (+__Z5IKabsd($2466));
                  $2468 = !($2467 <= 1.9999999999999999E-6);
                  if (!($2468)) {
                   break L7;
                  }
                 }
                } while(0);
                $2469 = +HEAPF64[$24>>3];
                $2470 = +HEAPF64[$23>>3];
                $2471 = -$2470;
                $2472 = (+__Z7IKatan2dd($2469,$2471));
                $2473 = (+__Z5IKsind($2472));
                $2474 = (+__Z5IKcosd($2472));
                $2475 = $2472 > 3.14159265358979;
                do {
                 if ($2475) {
                  $2476 = $2472 + -6.2831853071795898;
                  $2479 = $2476;
                 } else {
                  $2477 = $2472 < -3.14159265358979;
                  if (!($2477)) {
                   $2479 = $2472;
                   break;
                  }
                  $2478 = $2472 + 6.2831853071795898;
                  $2479 = $2478;
                 }
                } while(0);
                HEAP8[$149>>0] = 0;
                HEAP8[$150>>0] = -1;
                HEAPF64[$151>>3] = $2479;
                HEAPF64[$152>>3] = $2474;
                HEAPF64[$153>>3] = $2473;
                $2480 = +HEAPF64[$151>>3];
                $2481 = (+__Z5IKcosd($2480));
                $2482 = (+__Z5IKsind($2480));
                $2483 = +HEAPF64[$22>>3];
                $2484 = +HEAPF64[$23>>3];
                $2485 = $2481 + $2484;
                $2486 = -$2482;
                $2487 = +HEAPF64[$15>>3];
                $2488 = $2481 * $2483;
                $2489 = $2488 + $2487;
                $2490 = +HEAPF64[$11>>3];
                $2491 = $2482 * $2483;
                $2492 = $2491 + $2490;
                $2493 = +HEAPF64[$21>>3];
                $2494 = +HEAPF64[$19>>3];
                $2495 = -$2494;
                $2496 = $2481 * $2495;
                $2497 = $2493 + $2496;
                $2498 = +HEAPF64[$20>>3];
                $2499 = $2482 * $2495;
                $2500 = $2498 + $2499;
                $2501 = $2483 * $2490;
                $2502 = $2486 - $2501;
                $2503 = $2494 * $2498;
                $2504 = $2502 + $2503;
                $2505 = $2493 * $2494;
                $2506 = $2505 - $2481;
                $2507 = $2483 * $2487;
                $2508 = $2506 - $2507;
                $2509 = (+__Z5IKabsd($2485));
                $2510 = $2509 > 5.0000000000000004E-6;
                if ($2510) {
                 break L7;
                }
                $2511 = +HEAPF64[$24>>3];
                $2512 = $2511 - $2482;
                $2513 = (+__Z5IKabsd($2512));
                $2514 = $2513 > 5.0000000000000004E-6;
                if ($2514) {
                 break L7;
                }
                $2515 = (+__Z5IKabsd($2489));
                $2516 = $2515 > 5.0000000000000004E-6;
                if ($2516) {
                 break L7;
                }
                $2517 = (+__Z5IKabsd($2492));
                $2518 = $2517 > 5.0000000000000004E-6;
                if ($2518) {
                 break L7;
                }
                $2519 = (+__Z5IKabsd($2497));
                $2520 = $2519 > 5.0000000000000004E-6;
                if ($2520) {
                 break L7;
                }
                $2521 = (+__Z5IKabsd($2500));
                $2522 = $2521 > 5.0000000000000004E-6;
                if ($2522) {
                 break L7;
                }
                $2523 = (+__Z5IKabsd($2504));
                $2524 = $2523 > 5.0000000000000004E-6;
                if ($2524) {
                 break L7;
                }
                $2525 = (+__Z5IKabsd($2508));
                $2526 = $2525 > 5.0000000000000004E-6;
                if ($2526) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos65,7);
                $2527 = HEAP32[$vinfos65>>2]|0;
                $2528 = ((($2527)) + 17|0);
                HEAP8[$2528>>0] = 1;
                $2529 = +HEAPF64[$this>>3];
                $2530 = HEAP32[$vinfos65>>2]|0;
                $2531 = ((($2530)) + 8|0);
                HEAPF64[$2531>>3] = $2529;
                $2532 = HEAP8[$154>>0]|0;
                $2533 = HEAP32[$vinfos65>>2]|0;
                $2534 = ((($2533)) + 19|0);
                HEAP8[$2534>>0] = $2532;
                $2535 = HEAP8[$155>>0]|0;
                $2536 = HEAP32[$vinfos65>>2]|0;
                $2537 = ((($2536)) + 20|0);
                HEAP8[$2537>>0] = $2535;
                $2538 = HEAP8[$156>>0]|0;
                $2539 = HEAP32[$vinfos65>>2]|0;
                $2540 = ((($2539)) + 18|0);
                HEAP8[$2540>>0] = $2538;
                $2541 = HEAP32[$vinfos65>>2]|0;
                $2542 = ((($2541)) + 41|0);
                HEAP8[$2542>>0] = 1;
                $2543 = +HEAPF64[$157>>3];
                $2544 = HEAP32[$vinfos65>>2]|0;
                $2545 = ((($2544)) + 32|0);
                HEAPF64[$2545>>3] = $2543;
                $2546 = HEAP8[$158>>0]|0;
                $2547 = HEAP32[$vinfos65>>2]|0;
                $2548 = ((($2547)) + 43|0);
                HEAP8[$2548>>0] = $2546;
                $2549 = HEAP8[$159>>0]|0;
                $2550 = HEAP32[$vinfos65>>2]|0;
                $2551 = ((($2550)) + 44|0);
                HEAP8[$2551>>0] = $2549;
                $2552 = HEAP8[$160>>0]|0;
                $2553 = HEAP32[$vinfos65>>2]|0;
                $2554 = ((($2553)) + 42|0);
                HEAP8[$2554>>0] = $2552;
                $2555 = HEAP32[$vinfos65>>2]|0;
                $2556 = ((($2555)) + 65|0);
                HEAP8[$2556>>0] = 1;
                $2557 = +HEAPF64[$161>>3];
                $2558 = HEAP32[$vinfos65>>2]|0;
                $2559 = ((($2558)) + 56|0);
                HEAPF64[$2559>>3] = $2557;
                $2560 = HEAP8[$162>>0]|0;
                $2561 = HEAP32[$vinfos65>>2]|0;
                $2562 = ((($2561)) + 67|0);
                HEAP8[$2562>>0] = $2560;
                $2563 = HEAP8[$163>>0]|0;
                $2564 = HEAP32[$vinfos65>>2]|0;
                $2565 = ((($2564)) + 68|0);
                HEAP8[$2565>>0] = $2563;
                $2566 = HEAP8[$164>>0]|0;
                $2567 = HEAP32[$vinfos65>>2]|0;
                $2568 = ((($2567)) + 66|0);
                HEAP8[$2568>>0] = $2566;
                $2569 = HEAP32[$vinfos65>>2]|0;
                $2570 = ((($2569)) + 89|0);
                HEAP8[$2570>>0] = 1;
                $2571 = +HEAPF64[$165>>3];
                $2572 = HEAP32[$vinfos65>>2]|0;
                $2573 = ((($2572)) + 80|0);
                HEAPF64[$2573>>3] = $2571;
                $2574 = HEAP8[$166>>0]|0;
                $2575 = HEAP32[$vinfos65>>2]|0;
                $2576 = ((($2575)) + 91|0);
                HEAP8[$2576>>0] = $2574;
                $2577 = HEAP8[$167>>0]|0;
                $2578 = HEAP32[$vinfos65>>2]|0;
                $2579 = ((($2578)) + 92|0);
                HEAP8[$2579>>0] = $2577;
                $2580 = HEAP8[$168>>0]|0;
                $2581 = HEAP32[$vinfos65>>2]|0;
                $2582 = ((($2581)) + 90|0);
                HEAP8[$2582>>0] = $2580;
                $2583 = HEAP32[$vinfos65>>2]|0;
                $2584 = ((($2583)) + 113|0);
                HEAP8[$2584>>0] = 1;
                $2585 = +HEAPF64[$101>>3];
                $2586 = HEAP32[$vinfos65>>2]|0;
                $2587 = ((($2586)) + 104|0);
                HEAPF64[$2587>>3] = $2585;
                $2588 = HEAP8[$99>>0]|0;
                $2589 = HEAP32[$vinfos65>>2]|0;
                $2590 = ((($2589)) + 115|0);
                HEAP8[$2590>>0] = $2588;
                $2591 = HEAP8[$100>>0]|0;
                $2592 = HEAP32[$vinfos65>>2]|0;
                $2593 = ((($2592)) + 116|0);
                HEAP8[$2593>>0] = $2591;
                $2594 = HEAP8[$96>>0]|0;
                $2595 = HEAP32[$vinfos65>>2]|0;
                $2596 = ((($2595)) + 114|0);
                HEAP8[$2596>>0] = $2594;
                $2597 = HEAP32[$vinfos65>>2]|0;
                $2598 = ((($2597)) + 137|0);
                HEAP8[$2598>>0] = 1;
                $2599 = +HEAPF64[$29>>3];
                $2600 = HEAP32[$vinfos65>>2]|0;
                $2601 = ((($2600)) + 128|0);
                HEAPF64[$2601>>3] = $2599;
                $2602 = HEAP8[$27>>0]|0;
                $2603 = HEAP32[$vinfos65>>2]|0;
                $2604 = ((($2603)) + 139|0);
                HEAP8[$2604>>0] = $2602;
                $2605 = HEAP8[$28>>0]|0;
                $2606 = HEAP32[$vinfos65>>2]|0;
                $2607 = ((($2606)) + 140|0);
                HEAP8[$2607>>0] = $2605;
                $2608 = HEAP8[$26>>0]|0;
                $2609 = HEAP32[$vinfos65>>2]|0;
                $2610 = ((($2609)) + 138|0);
                HEAP8[$2610>>0] = $2608;
                $2611 = HEAP32[$vinfos65>>2]|0;
                $2612 = ((($2611)) + 161|0);
                HEAP8[$2612>>0] = 1;
                $2613 = +HEAPF64[$151>>3];
                $2614 = HEAP32[$vinfos65>>2]|0;
                $2615 = ((($2614)) + 152|0);
                HEAPF64[$2615>>3] = $2613;
                $2616 = HEAP8[$149>>0]|0;
                $2617 = HEAP32[$vinfos65>>2]|0;
                $2618 = ((($2617)) + 163|0);
                HEAP8[$2618>>0] = $2616;
                $2619 = HEAP8[$150>>0]|0;
                $2620 = HEAP32[$vinfos65>>2]|0;
                $2621 = ((($2620)) + 164|0);
                HEAP8[$2621>>0] = $2619;
                $2622 = HEAP8[$148>>0]|0;
                $2623 = HEAP32[$vinfos65>>2]|0;
                $2624 = ((($2623)) + 162|0);
                HEAP8[$2624>>0] = $2622;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree66,0);
                $2625 = HEAP32[$solutions>>2]|0;
                $2626 = ((($2625)) + 8|0);
                $2627 = HEAP32[$2626>>2]|0;
                (FUNCTION_TABLE_iiii[$2627 & 31]($solutions,$vinfos65,$vfree66)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree66);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos65);
                break L7;
               }
              } while(0);
              $2628 = +HEAPF64[$20>>3];
              $2629 = +HEAPF64[$103>>3];
              $2630 = $2628 * $2629;
              $2631 = +HEAPF64[$102>>3];
              $2632 = +HEAPF64[$11>>3];
              $2633 = $2631 * $2632;
              $2634 = +HEAPF64[$19>>3];
              $2635 = $2631 * $2634;
              $2636 = +HEAPF64[$21>>3];
              $2637 = $2629 * $2636;
              $2638 = +HEAPF64[$22>>3];
              $2639 = $2629 * $2638;
              $2640 = +HEAPF64[$15>>3];
              $2641 = $2631 * $2640;
              $2642 = $2631 * $2638;
              $2643 = $2629 * $2634;
              $2644 = $2642 - $2643;
              $2645 = +HEAPF64[$29>>3];
              $2646 = $2645 + 1.5707963267949001;
              $2647 = (+__Z5IKabsd($2646));
              $2648 = $2647 + 3.14159265358979;
              $2649 = (+__Z6IKfmoddd($2648,6.2831853071795898));
              $2650 = $2649 + -3.14159265358979;
              $2651 = $2631 + $2634;
              $2652 = $2629 + $2638;
              $2653 = $2639 + 1.0;
              $2654 = $2635 + $2653;
              $2655 = $2637 + $2641;
              $2656 = $2630 + $2633;
              $2657 = -$2630;
              $2658 = $2657 - $2633;
              $2659 = -$2637;
              $2660 = $2659 - $2641;
              $2661 = -1.0 - $2635;
              $2662 = $2661 - $2639;
              $2663 = (+__Z5IKabsd($2650));
              $2664 = $2663 < 9.9999999999999995E-7;
              do {
               if ($2664) {
                $2665 = +HEAPF64[$25>>3];
                $2666 = (+__Z5IKabsd($2665));
                $2667 = $2666 < 9.9999999999999995E-7;
                if (!($2667)) {
                 break;
                }
                $2668 = (+__Z5IKabsd($2651));
                $2669 = $2668 < 9.9999999999999995E-7;
                if (!($2669)) {
                 break;
                }
                $2670 = (+__Z5IKabsd($2652));
                $2671 = $2670 < 9.9999999999999995E-7;
                if (!($2671)) {
                 break;
                }
                $2672 = (+__Z5IKabsd($2644));
                $2673 = $2672 < 9.9999999999999995E-7;
                if (!($2673)) {
                 break;
                }
                $2674 = (+__Z5IKabsd($2654));
                $2675 = $2674 < 9.9999999999999995E-7;
                if (!($2675)) {
                 break;
                }
                $2676 = (+__Z5IKabsd($2655));
                $2677 = $2676 < 9.9999999999999995E-7;
                if (!($2677)) {
                 break;
                }
                $2678 = (+__Z5IKabsd($2656));
                $2679 = $2678 < 9.9999999999999995E-7;
                if (!($2679)) {
                 break;
                }
                $2680 = (+__Z5IKabsd($2658));
                $2681 = $2680 < 9.9999999999999995E-7;
                if (!($2681)) {
                 break;
                }
                $2682 = (+__Z5IKabsd($2660));
                $2683 = $2682 < 9.9999999999999995E-7;
                if (!($2683)) {
                 break;
                }
                $2684 = (+__Z5IKabsd($2662));
                $2685 = $2684 < 9.9999999999999995E-7;
                if (!($2685)) {
                 break;
                }
                HEAP8[$169>>0] = 1;
                $2686 = +HEAPF64[$24>>3];
                $2687 = -$2686;
                $2688 = (+__Z5IKabsd($2687));
                $2689 = $2688 < 1.9999999999999999E-6;
                do {
                 if ($2689) {
                  $2690 = +HEAPF64[$23>>3];
                  $2691 = (+__Z5IKabsd($2690));
                  $2692 = $2691 < 1.9999999999999999E-6;
                  if (!($2692)) {
                   break;
                  }
                  $2693 = (+__Z5IKsqrd($2687));
                  $2694 = (+__Z5IKsqrd($2690));
                  $2695 = $2693 + $2694;
                  $2696 = $2695 + -1.0;
                  $2697 = (+__Z5IKabsd($2696));
                  $2698 = !($2697 <= 1.9999999999999999E-6);
                  if (!($2698)) {
                   break L7;
                  }
                 }
                } while(0);
                $2699 = +HEAPF64[$24>>3];
                $2700 = -$2699;
                $2701 = +HEAPF64[$23>>3];
                $2702 = (+__Z7IKatan2dd($2700,$2701));
                $2703 = (+__Z5IKsind($2702));
                $2704 = (+__Z5IKcosd($2702));
                $2705 = $2702 > 3.14159265358979;
                do {
                 if ($2705) {
                  $2706 = $2702 + -6.2831853071795898;
                  $2709 = $2706;
                 } else {
                  $2707 = $2702 < -3.14159265358979;
                  if (!($2707)) {
                   $2709 = $2702;
                   break;
                  }
                  $2708 = $2702 + 6.2831853071795898;
                  $2709 = $2708;
                 }
                } while(0);
                HEAP8[$170>>0] = 0;
                HEAP8[$171>>0] = -1;
                HEAPF64[$172>>3] = $2709;
                HEAPF64[$173>>3] = $2704;
                HEAPF64[$174>>3] = $2703;
                $2710 = +HEAPF64[$172>>3];
                $2711 = (+__Z5IKcosd($2710));
                $2712 = (+__Z5IKsind($2710));
                $2713 = +HEAPF64[$19>>3];
                $2714 = +HEAPF64[$24>>3];
                $2715 = $2712 + $2714;
                $2716 = +HEAPF64[$21>>3];
                $2717 = $2711 * $2713;
                $2718 = $2717 + $2716;
                $2719 = $2712 * $2713;
                $2720 = +HEAPF64[$20>>3];
                $2721 = $2719 + $2720;
                $2722 = +HEAPF64[$22>>3];
                $2723 = -$2722;
                $2724 = $2711 * $2723;
                $2725 = +HEAPF64[$15>>3];
                $2726 = $2724 + $2725;
                $2727 = $2712 * $2723;
                $2728 = +HEAPF64[$11>>3];
                $2729 = $2727 + $2728;
                $2730 = $2713 * $2720;
                $2731 = $2722 * $2728;
                $2732 = $2731 - $2730;
                $2733 = $2732 - $2712;
                $2734 = $2713 * $2716;
                $2735 = $2722 * $2725;
                $2736 = $2735 - $2734;
                $2737 = $2736 - $2711;
                $2738 = (+__Z5IKabsd($2715));
                $2739 = $2738 > 5.0000000000000004E-6;
                if ($2739) {
                 break L7;
                }
                $2740 = +HEAPF64[$23>>3];
                $2741 = $2740 - $2711;
                $2742 = (+__Z5IKabsd($2741));
                $2743 = $2742 > 5.0000000000000004E-6;
                if ($2743) {
                 break L7;
                }
                $2744 = (+__Z5IKabsd($2718));
                $2745 = $2744 > 5.0000000000000004E-6;
                if ($2745) {
                 break L7;
                }
                $2746 = (+__Z5IKabsd($2721));
                $2747 = $2746 > 5.0000000000000004E-6;
                if ($2747) {
                 break L7;
                }
                $2748 = (+__Z5IKabsd($2726));
                $2749 = $2748 > 5.0000000000000004E-6;
                if ($2749) {
                 break L7;
                }
                $2750 = (+__Z5IKabsd($2729));
                $2751 = $2750 > 5.0000000000000004E-6;
                if ($2751) {
                 break L7;
                }
                $2752 = (+__Z5IKabsd($2733));
                $2753 = $2752 > 5.0000000000000004E-6;
                if ($2753) {
                 break L7;
                }
                $2754 = (+__Z5IKabsd($2737));
                $2755 = $2754 > 5.0000000000000004E-6;
                if ($2755) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos76,7);
                $2756 = HEAP32[$vinfos76>>2]|0;
                $2757 = ((($2756)) + 17|0);
                HEAP8[$2757>>0] = 1;
                $2758 = +HEAPF64[$this>>3];
                $2759 = HEAP32[$vinfos76>>2]|0;
                $2760 = ((($2759)) + 8|0);
                HEAPF64[$2760>>3] = $2758;
                $2761 = HEAP8[$175>>0]|0;
                $2762 = HEAP32[$vinfos76>>2]|0;
                $2763 = ((($2762)) + 19|0);
                HEAP8[$2763>>0] = $2761;
                $2764 = HEAP8[$176>>0]|0;
                $2765 = HEAP32[$vinfos76>>2]|0;
                $2766 = ((($2765)) + 20|0);
                HEAP8[$2766>>0] = $2764;
                $2767 = HEAP8[$177>>0]|0;
                $2768 = HEAP32[$vinfos76>>2]|0;
                $2769 = ((($2768)) + 18|0);
                HEAP8[$2769>>0] = $2767;
                $2770 = HEAP32[$vinfos76>>2]|0;
                $2771 = ((($2770)) + 41|0);
                HEAP8[$2771>>0] = 1;
                $2772 = +HEAPF64[$178>>3];
                $2773 = HEAP32[$vinfos76>>2]|0;
                $2774 = ((($2773)) + 32|0);
                HEAPF64[$2774>>3] = $2772;
                $2775 = HEAP8[$179>>0]|0;
                $2776 = HEAP32[$vinfos76>>2]|0;
                $2777 = ((($2776)) + 43|0);
                HEAP8[$2777>>0] = $2775;
                $2778 = HEAP8[$180>>0]|0;
                $2779 = HEAP32[$vinfos76>>2]|0;
                $2780 = ((($2779)) + 44|0);
                HEAP8[$2780>>0] = $2778;
                $2781 = HEAP8[$181>>0]|0;
                $2782 = HEAP32[$vinfos76>>2]|0;
                $2783 = ((($2782)) + 42|0);
                HEAP8[$2783>>0] = $2781;
                $2784 = HEAP32[$vinfos76>>2]|0;
                $2785 = ((($2784)) + 65|0);
                HEAP8[$2785>>0] = 1;
                $2786 = +HEAPF64[$182>>3];
                $2787 = HEAP32[$vinfos76>>2]|0;
                $2788 = ((($2787)) + 56|0);
                HEAPF64[$2788>>3] = $2786;
                $2789 = HEAP8[$183>>0]|0;
                $2790 = HEAP32[$vinfos76>>2]|0;
                $2791 = ((($2790)) + 67|0);
                HEAP8[$2791>>0] = $2789;
                $2792 = HEAP8[$184>>0]|0;
                $2793 = HEAP32[$vinfos76>>2]|0;
                $2794 = ((($2793)) + 68|0);
                HEAP8[$2794>>0] = $2792;
                $2795 = HEAP8[$185>>0]|0;
                $2796 = HEAP32[$vinfos76>>2]|0;
                $2797 = ((($2796)) + 66|0);
                HEAP8[$2797>>0] = $2795;
                $2798 = HEAP32[$vinfos76>>2]|0;
                $2799 = ((($2798)) + 89|0);
                HEAP8[$2799>>0] = 1;
                $2800 = +HEAPF64[$186>>3];
                $2801 = HEAP32[$vinfos76>>2]|0;
                $2802 = ((($2801)) + 80|0);
                HEAPF64[$2802>>3] = $2800;
                $2803 = HEAP8[$187>>0]|0;
                $2804 = HEAP32[$vinfos76>>2]|0;
                $2805 = ((($2804)) + 91|0);
                HEAP8[$2805>>0] = $2803;
                $2806 = HEAP8[$188>>0]|0;
                $2807 = HEAP32[$vinfos76>>2]|0;
                $2808 = ((($2807)) + 92|0);
                HEAP8[$2808>>0] = $2806;
                $2809 = HEAP8[$189>>0]|0;
                $2810 = HEAP32[$vinfos76>>2]|0;
                $2811 = ((($2810)) + 90|0);
                HEAP8[$2811>>0] = $2809;
                $2812 = HEAP32[$vinfos76>>2]|0;
                $2813 = ((($2812)) + 113|0);
                HEAP8[$2813>>0] = 1;
                $2814 = +HEAPF64[$101>>3];
                $2815 = HEAP32[$vinfos76>>2]|0;
                $2816 = ((($2815)) + 104|0);
                HEAPF64[$2816>>3] = $2814;
                $2817 = HEAP8[$99>>0]|0;
                $2818 = HEAP32[$vinfos76>>2]|0;
                $2819 = ((($2818)) + 115|0);
                HEAP8[$2819>>0] = $2817;
                $2820 = HEAP8[$100>>0]|0;
                $2821 = HEAP32[$vinfos76>>2]|0;
                $2822 = ((($2821)) + 116|0);
                HEAP8[$2822>>0] = $2820;
                $2823 = HEAP8[$96>>0]|0;
                $2824 = HEAP32[$vinfos76>>2]|0;
                $2825 = ((($2824)) + 114|0);
                HEAP8[$2825>>0] = $2823;
                $2826 = HEAP32[$vinfos76>>2]|0;
                $2827 = ((($2826)) + 137|0);
                HEAP8[$2827>>0] = 1;
                $2828 = +HEAPF64[$29>>3];
                $2829 = HEAP32[$vinfos76>>2]|0;
                $2830 = ((($2829)) + 128|0);
                HEAPF64[$2830>>3] = $2828;
                $2831 = HEAP8[$27>>0]|0;
                $2832 = HEAP32[$vinfos76>>2]|0;
                $2833 = ((($2832)) + 139|0);
                HEAP8[$2833>>0] = $2831;
                $2834 = HEAP8[$28>>0]|0;
                $2835 = HEAP32[$vinfos76>>2]|0;
                $2836 = ((($2835)) + 140|0);
                HEAP8[$2836>>0] = $2834;
                $2837 = HEAP8[$26>>0]|0;
                $2838 = HEAP32[$vinfos76>>2]|0;
                $2839 = ((($2838)) + 138|0);
                HEAP8[$2839>>0] = $2837;
                $2840 = HEAP32[$vinfos76>>2]|0;
                $2841 = ((($2840)) + 161|0);
                HEAP8[$2841>>0] = 1;
                $2842 = +HEAPF64[$172>>3];
                $2843 = HEAP32[$vinfos76>>2]|0;
                $2844 = ((($2843)) + 152|0);
                HEAPF64[$2844>>3] = $2842;
                $2845 = HEAP8[$170>>0]|0;
                $2846 = HEAP32[$vinfos76>>2]|0;
                $2847 = ((($2846)) + 163|0);
                HEAP8[$2847>>0] = $2845;
                $2848 = HEAP8[$171>>0]|0;
                $2849 = HEAP32[$vinfos76>>2]|0;
                $2850 = ((($2849)) + 164|0);
                HEAP8[$2850>>0] = $2848;
                $2851 = HEAP8[$169>>0]|0;
                $2852 = HEAP32[$vinfos76>>2]|0;
                $2853 = ((($2852)) + 162|0);
                HEAP8[$2853>>0] = $2851;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree77,0);
                $2854 = HEAP32[$solutions>>2]|0;
                $2855 = ((($2854)) + 8|0);
                $2856 = HEAP32[$2855>>2]|0;
                (FUNCTION_TABLE_iiii[$2856 & 31]($solutions,$vinfos76,$vfree77)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree77);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos76);
                break L7;
               }
              } while(0);
              $2857 = +HEAPF64[$102>>3];
              $2858 = +HEAPF64[$22>>3];
              $2859 = $2857 * $2858;
              $2860 = +HEAPF64[$19>>3];
              $2861 = +HEAPF64[$103>>3];
              $2862 = $2860 * $2861;
              $2863 = $2859 - $2862;
              $2864 = $2857 * $2860;
              $2865 = $2858 * $2861;
              $2866 = $2864 + $2865;
              $2867 = +HEAPF64[$29>>3];
              $2868 = (+__Z5IKabsd($2867));
              $2869 = $2868 + 3.14159265358979;
              $2870 = (+__Z6IKfmoddd($2869,6.2831853071795898));
              $2871 = $2870 + -3.14159265358979;
              $2872 = +HEAPF64[$23>>3];
              $2873 = +HEAPF64[$24>>3];
              $2874 = (+__Z5IKabsd($2871));
              $2875 = $2874 < 9.9999999999999995E-7;
              do {
               if ($2875) {
                $2876 = +HEAPF64[$25>>3];
                $2877 = $2876 + -1.0;
                $2878 = (+__Z5IKabsd($2877));
                $2879 = $2878 < 9.9999999999999995E-7;
                if (!($2879)) {
                 break;
                }
                $2880 = (+__Z5IKabsd($2872));
                $2881 = $2880 < 9.9999999999999995E-7;
                if (!($2881)) {
                 break;
                }
                $2882 = (+__Z5IKabsd($2860));
                $2883 = $2882 < 9.9999999999999995E-7;
                if (!($2883)) {
                 break;
                }
                $2884 = (+__Z5IKabsd($2858));
                $2885 = $2884 < 9.9999999999999995E-7;
                if (!($2885)) {
                 break;
                }
                $2886 = (+__Z5IKabsd($2873));
                $2887 = $2886 < 9.9999999999999995E-7;
                if (!($2887)) {
                 break;
                }
                $2888 = (+__Z5IKabsd($2863));
                $2889 = $2888 < 9.9999999999999995E-7;
                if (!($2889)) {
                 break;
                }
                $2890 = (+__Z5IKabsd($2866));
                $2891 = $2890 < 9.9999999999999995E-7;
                if (!($2891)) {
                 break;
                }
                HEAP8[$190>>0] = 1;
                $2892 = +HEAPF64[$103>>3];
                $2893 = +HEAPF64[$102>>3];
                $2894 = +HEAPF64[$15>>3];
                $2895 = $2893 * $2894;
                $2896 = +HEAPF64[$11>>3];
                $2897 = $2892 * $2896;
                $2898 = -$2897;
                $2899 = $2898 - $2895;
                $2900 = (+__Z5IKabsd($2899));
                $2901 = $2900 < 1.9999999999999999E-6;
                do {
                 if ($2901) {
                  $2902 = $2893 * $2896;
                  $2903 = $2892 * $2894;
                  $2904 = $2902 - $2903;
                  $2905 = (+__Z5IKabsd($2904));
                  $2906 = $2905 < 1.9999999999999999E-6;
                  if (!($2906)) {
                   break;
                  }
                  $2907 = (+__Z5IKsqrd($2899));
                  $2908 = (+__Z5IKsqrd($2904));
                  $2909 = $2907 + $2908;
                  $2910 = $2909 + -1.0;
                  $2911 = (+__Z5IKabsd($2910));
                  $2912 = !($2911 <= 1.9999999999999999E-6);
                  if (!($2912)) {
                   break L7;
                  }
                 }
                } while(0);
                $2913 = +HEAPF64[$102>>3];
                $2914 = +HEAPF64[$15>>3];
                $2915 = $2913 * $2914;
                $2916 = +HEAPF64[$11>>3];
                $2917 = $2892 * $2916;
                $2918 = -$2917;
                $2919 = $2918 - $2915;
                $2920 = $2913 * $2916;
                $2921 = $2892 * $2914;
                $2922 = $2920 - $2921;
                $2923 = (+__Z7IKatan2dd($2919,$2922));
                $2924 = (+__Z5IKsind($2923));
                $2925 = (+__Z5IKcosd($2923));
                $2926 = $2923 > 3.14159265358979;
                do {
                 if ($2926) {
                  $2927 = $2923 + -6.2831853071795898;
                  $2930 = $2927;
                 } else {
                  $2928 = $2923 < -3.14159265358979;
                  if (!($2928)) {
                   $2930 = $2923;
                   break;
                  }
                  $2929 = $2923 + 6.2831853071795898;
                  $2930 = $2929;
                 }
                } while(0);
                HEAP8[$191>>0] = 0;
                HEAP8[$192>>0] = -1;
                HEAPF64[$193>>3] = $2930;
                HEAPF64[$194>>3] = $2925;
                HEAPF64[$195>>3] = $2924;
                $2931 = +HEAPF64[$193>>3];
                $2932 = (+__Z5IKsind($2931));
                $2933 = (+__Z5IKcosd($2931));
                $2934 = +HEAPF64[$103>>3];
                $2935 = $2932 * $2934;
                $2936 = +HEAPF64[$102>>3];
                $2937 = $2933 * $2936;
                $2938 = +HEAPF64[$15>>3];
                $2939 = $2936 * $2938;
                $2940 = +HEAPF64[$21>>3];
                $2941 = $2934 * $2940;
                $2942 = $2939 + $2941;
                $2943 = $2932 + $2942;
                $2944 = +HEAPF64[$11>>3];
                $2945 = $2936 * $2944;
                $2946 = $2945 - $2933;
                $2947 = +HEAPF64[$20>>3];
                $2948 = $2934 * $2947;
                $2949 = $2946 + $2948;
                $2950 = $2936 * $2947;
                $2951 = $2950 - $2932;
                $2952 = $2934 * $2944;
                $2953 = $2951 - $2952;
                $2954 = $2936 * $2940;
                $2955 = $2954 - $2933;
                $2956 = $2934 * $2938;
                $2957 = $2955 - $2956;
                $2958 = $2935 - $2937;
                $2959 = $2958 + $2944;
                $2960 = $2958 + $2940;
                $2961 = $2932 * $2936;
                $2962 = $2947 - $2961;
                $2963 = $2933 * $2934;
                $2964 = $2962 - $2963;
                $2965 = (+__Z5IKabsd($2943));
                $2966 = $2965 > 5.0000000000000004E-6;
                if ($2966) {
                 break L7;
                }
                $2967 = $2963 + $2961;
                $2968 = $2938 + $2967;
                $2969 = (+__Z5IKabsd($2968));
                $2970 = $2969 > 5.0000000000000004E-6;
                if ($2970) {
                 break L7;
                }
                $2971 = (+__Z5IKabsd($2949));
                $2972 = $2971 > 5.0000000000000004E-6;
                if ($2972) {
                 break L7;
                }
                $2973 = (+__Z5IKabsd($2953));
                $2974 = $2973 > 5.0000000000000004E-6;
                if ($2974) {
                 break L7;
                }
                $2975 = (+__Z5IKabsd($2957));
                $2976 = $2975 > 5.0000000000000004E-6;
                if ($2976) {
                 break L7;
                }
                $2977 = (+__Z5IKabsd($2959));
                $2978 = $2977 > 5.0000000000000004E-6;
                if ($2978) {
                 break L7;
                }
                $2979 = (+__Z5IKabsd($2960));
                $2980 = $2979 > 5.0000000000000004E-6;
                if ($2980) {
                 break L7;
                }
                $2981 = (+__Z5IKabsd($2964));
                $2982 = $2981 > 5.0000000000000004E-6;
                if ($2982) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos87,7);
                $2983 = HEAP32[$vinfos87>>2]|0;
                $2984 = ((($2983)) + 17|0);
                HEAP8[$2984>>0] = 1;
                $2985 = +HEAPF64[$this>>3];
                $2986 = HEAP32[$vinfos87>>2]|0;
                $2987 = ((($2986)) + 8|0);
                HEAPF64[$2987>>3] = $2985;
                $2988 = HEAP8[$196>>0]|0;
                $2989 = HEAP32[$vinfos87>>2]|0;
                $2990 = ((($2989)) + 19|0);
                HEAP8[$2990>>0] = $2988;
                $2991 = HEAP8[$197>>0]|0;
                $2992 = HEAP32[$vinfos87>>2]|0;
                $2993 = ((($2992)) + 20|0);
                HEAP8[$2993>>0] = $2991;
                $2994 = HEAP8[$198>>0]|0;
                $2995 = HEAP32[$vinfos87>>2]|0;
                $2996 = ((($2995)) + 18|0);
                HEAP8[$2996>>0] = $2994;
                $2997 = HEAP32[$vinfos87>>2]|0;
                $2998 = ((($2997)) + 41|0);
                HEAP8[$2998>>0] = 1;
                $2999 = +HEAPF64[$199>>3];
                $3000 = HEAP32[$vinfos87>>2]|0;
                $3001 = ((($3000)) + 32|0);
                HEAPF64[$3001>>3] = $2999;
                $3002 = HEAP8[$200>>0]|0;
                $3003 = HEAP32[$vinfos87>>2]|0;
                $3004 = ((($3003)) + 43|0);
                HEAP8[$3004>>0] = $3002;
                $3005 = HEAP8[$201>>0]|0;
                $3006 = HEAP32[$vinfos87>>2]|0;
                $3007 = ((($3006)) + 44|0);
                HEAP8[$3007>>0] = $3005;
                $3008 = HEAP8[$202>>0]|0;
                $3009 = HEAP32[$vinfos87>>2]|0;
                $3010 = ((($3009)) + 42|0);
                HEAP8[$3010>>0] = $3008;
                $3011 = HEAP32[$vinfos87>>2]|0;
                $3012 = ((($3011)) + 65|0);
                HEAP8[$3012>>0] = 1;
                $3013 = +HEAPF64[$203>>3];
                $3014 = HEAP32[$vinfos87>>2]|0;
                $3015 = ((($3014)) + 56|0);
                HEAPF64[$3015>>3] = $3013;
                $3016 = HEAP8[$204>>0]|0;
                $3017 = HEAP32[$vinfos87>>2]|0;
                $3018 = ((($3017)) + 67|0);
                HEAP8[$3018>>0] = $3016;
                $3019 = HEAP8[$205>>0]|0;
                $3020 = HEAP32[$vinfos87>>2]|0;
                $3021 = ((($3020)) + 68|0);
                HEAP8[$3021>>0] = $3019;
                $3022 = HEAP8[$206>>0]|0;
                $3023 = HEAP32[$vinfos87>>2]|0;
                $3024 = ((($3023)) + 66|0);
                HEAP8[$3024>>0] = $3022;
                $3025 = HEAP32[$vinfos87>>2]|0;
                $3026 = ((($3025)) + 89|0);
                HEAP8[$3026>>0] = 1;
                $3027 = +HEAPF64[$207>>3];
                $3028 = HEAP32[$vinfos87>>2]|0;
                $3029 = ((($3028)) + 80|0);
                HEAPF64[$3029>>3] = $3027;
                $3030 = HEAP8[$208>>0]|0;
                $3031 = HEAP32[$vinfos87>>2]|0;
                $3032 = ((($3031)) + 91|0);
                HEAP8[$3032>>0] = $3030;
                $3033 = HEAP8[$209>>0]|0;
                $3034 = HEAP32[$vinfos87>>2]|0;
                $3035 = ((($3034)) + 92|0);
                HEAP8[$3035>>0] = $3033;
                $3036 = HEAP8[$210>>0]|0;
                $3037 = HEAP32[$vinfos87>>2]|0;
                $3038 = ((($3037)) + 90|0);
                HEAP8[$3038>>0] = $3036;
                $3039 = HEAP32[$vinfos87>>2]|0;
                $3040 = ((($3039)) + 113|0);
                HEAP8[$3040>>0] = 1;
                $3041 = +HEAPF64[$101>>3];
                $3042 = HEAP32[$vinfos87>>2]|0;
                $3043 = ((($3042)) + 104|0);
                HEAPF64[$3043>>3] = $3041;
                $3044 = HEAP8[$99>>0]|0;
                $3045 = HEAP32[$vinfos87>>2]|0;
                $3046 = ((($3045)) + 115|0);
                HEAP8[$3046>>0] = $3044;
                $3047 = HEAP8[$100>>0]|0;
                $3048 = HEAP32[$vinfos87>>2]|0;
                $3049 = ((($3048)) + 116|0);
                HEAP8[$3049>>0] = $3047;
                $3050 = HEAP8[$96>>0]|0;
                $3051 = HEAP32[$vinfos87>>2]|0;
                $3052 = ((($3051)) + 114|0);
                HEAP8[$3052>>0] = $3050;
                $3053 = HEAP32[$vinfos87>>2]|0;
                $3054 = ((($3053)) + 137|0);
                HEAP8[$3054>>0] = 1;
                $3055 = +HEAPF64[$29>>3];
                $3056 = HEAP32[$vinfos87>>2]|0;
                $3057 = ((($3056)) + 128|0);
                HEAPF64[$3057>>3] = $3055;
                $3058 = HEAP8[$27>>0]|0;
                $3059 = HEAP32[$vinfos87>>2]|0;
                $3060 = ((($3059)) + 139|0);
                HEAP8[$3060>>0] = $3058;
                $3061 = HEAP8[$28>>0]|0;
                $3062 = HEAP32[$vinfos87>>2]|0;
                $3063 = ((($3062)) + 140|0);
                HEAP8[$3063>>0] = $3061;
                $3064 = HEAP8[$26>>0]|0;
                $3065 = HEAP32[$vinfos87>>2]|0;
                $3066 = ((($3065)) + 138|0);
                HEAP8[$3066>>0] = $3064;
                $3067 = HEAP32[$vinfos87>>2]|0;
                $3068 = ((($3067)) + 161|0);
                HEAP8[$3068>>0] = 1;
                $3069 = +HEAPF64[$193>>3];
                $3070 = HEAP32[$vinfos87>>2]|0;
                $3071 = ((($3070)) + 152|0);
                HEAPF64[$3071>>3] = $3069;
                $3072 = HEAP8[$191>>0]|0;
                $3073 = HEAP32[$vinfos87>>2]|0;
                $3074 = ((($3073)) + 163|0);
                HEAP8[$3074>>0] = $3072;
                $3075 = HEAP8[$192>>0]|0;
                $3076 = HEAP32[$vinfos87>>2]|0;
                $3077 = ((($3076)) + 164|0);
                HEAP8[$3077>>0] = $3075;
                $3078 = HEAP8[$190>>0]|0;
                $3079 = HEAP32[$vinfos87>>2]|0;
                $3080 = ((($3079)) + 162|0);
                HEAP8[$3080>>0] = $3078;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree88,0);
                $3081 = HEAP32[$solutions>>2]|0;
                $3082 = ((($3081)) + 8|0);
                $3083 = HEAP32[$3082>>2]|0;
                (FUNCTION_TABLE_iiii[$3083 & 31]($solutions,$vinfos87,$vfree88)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree88);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos87);
                break L7;
               }
              } while(0);
              $3084 = +HEAPF64[$102>>3];
              $3085 = +HEAPF64[$19>>3];
              $3086 = $3084 * $3085;
              $3087 = +HEAPF64[$22>>3];
              $3088 = +HEAPF64[$103>>3];
              $3089 = $3087 * $3088;
              $3090 = $3084 * $3087;
              $3091 = $3085 * $3088;
              $3092 = $3090 - $3091;
              $3093 = +HEAPF64[$29>>3];
              $3094 = $3093 + -3.14159265358979;
              $3095 = (+__Z5IKabsd($3094));
              $3096 = $3095 + 3.14159265358979;
              $3097 = (+__Z6IKfmoddd($3096,6.2831853071795898));
              $3098 = $3097 + -3.14159265358979;
              $3099 = +HEAPF64[$23>>3];
              $3100 = +HEAPF64[$24>>3];
              $3101 = $3086 + $3089;
              $3102 = -$3086;
              $3103 = $3102 - $3089;
              $3104 = (+__Z5IKabsd($3098));
              $3105 = $3104 < 9.9999999999999995E-7;
              do {
               if ($3105) {
                $3106 = +HEAPF64[$25>>3];
                $3107 = $3106 + 1.0;
                $3108 = (+__Z5IKabsd($3107));
                $3109 = $3108 < 9.9999999999999995E-7;
                if (!($3109)) {
                 break;
                }
                $3110 = (+__Z5IKabsd($3099));
                $3111 = $3110 < 9.9999999999999995E-7;
                if (!($3111)) {
                 break;
                }
                $3112 = (+__Z5IKabsd($3085));
                $3113 = $3112 < 9.9999999999999995E-7;
                if (!($3113)) {
                 break;
                }
                $3114 = (+__Z5IKabsd($3087));
                $3115 = $3114 < 9.9999999999999995E-7;
                if (!($3115)) {
                 break;
                }
                $3116 = (+__Z5IKabsd($3100));
                $3117 = $3116 < 9.9999999999999995E-7;
                if (!($3117)) {
                 break;
                }
                $3118 = (+__Z5IKabsd($3092));
                $3119 = $3118 < 9.9999999999999995E-7;
                if (!($3119)) {
                 break;
                }
                $3120 = (+__Z5IKabsd($3101));
                $3121 = $3120 < 9.9999999999999995E-7;
                if (!($3121)) {
                 break;
                }
                $3122 = (+__Z5IKabsd($3103));
                $3123 = $3122 < 9.9999999999999995E-7;
                if (!($3123)) {
                 break;
                }
                HEAP8[$211>>0] = 1;
                $3124 = +HEAPF64[$103>>3];
                $3125 = +HEAPF64[$102>>3];
                $3126 = +HEAPF64[$15>>3];
                $3127 = $3125 * $3126;
                $3128 = +HEAPF64[$11>>3];
                $3129 = $3124 * $3128;
                $3130 = $3127 - $3129;
                $3131 = (+__Z5IKabsd($3130));
                $3132 = $3131 < 1.9999999999999999E-6;
                do {
                 if ($3132) {
                  $3133 = $3124 * $3126;
                  $3134 = $3125 * $3128;
                  $3135 = -$3134;
                  $3136 = $3135 - $3133;
                  $3137 = (+__Z5IKabsd($3136));
                  $3138 = $3137 < 1.9999999999999999E-6;
                  if (!($3138)) {
                   break;
                  }
                  $3139 = (+__Z5IKsqrd($3130));
                  $3140 = (+__Z5IKsqrd($3136));
                  $3141 = $3139 + $3140;
                  $3142 = $3141 + -1.0;
                  $3143 = (+__Z5IKabsd($3142));
                  $3144 = !($3143 <= 1.9999999999999999E-6);
                  if (!($3144)) {
                   break L7;
                  }
                 }
                } while(0);
                $3145 = +HEAPF64[$102>>3];
                $3146 = +HEAPF64[$15>>3];
                $3147 = $3145 * $3146;
                $3148 = +HEAPF64[$11>>3];
                $3149 = $3124 * $3148;
                $3150 = $3147 - $3149;
                $3151 = $3124 * $3146;
                $3152 = $3145 * $3148;
                $3153 = -$3152;
                $3154 = $3153 - $3151;
                $3155 = (+__Z7IKatan2dd($3150,$3154));
                $3156 = (+__Z5IKsind($3155));
                $3157 = (+__Z5IKcosd($3155));
                $3158 = $3155 > 3.14159265358979;
                do {
                 if ($3158) {
                  $3159 = $3155 + -6.2831853071795898;
                  $3162 = $3159;
                 } else {
                  $3160 = $3155 < -3.14159265358979;
                  if (!($3160)) {
                   $3162 = $3155;
                   break;
                  }
                  $3161 = $3155 + 6.2831853071795898;
                  $3162 = $3161;
                 }
                } while(0);
                HEAP8[$212>>0] = 0;
                HEAP8[$213>>0] = -1;
                HEAPF64[$214>>3] = $3162;
                HEAPF64[$215>>3] = $3157;
                HEAPF64[$216>>3] = $3156;
                $3163 = +HEAPF64[$214>>3];
                $3164 = (+__Z5IKsind($3163));
                $3165 = (+__Z5IKcosd($3163));
                $3166 = +HEAPF64[$103>>3];
                $3167 = $3165 * $3166;
                $3168 = +HEAPF64[$102>>3];
                $3169 = $3164 * $3168;
                $3170 = +HEAPF64[$11>>3];
                $3171 = $3168 * $3170;
                $3172 = $3165 + $3171;
                $3173 = +HEAPF64[$20>>3];
                $3174 = $3166 * $3173;
                $3175 = $3172 + $3174;
                $3176 = +HEAPF64[$15>>3];
                $3177 = +HEAPF64[$21>>3];
                $3178 = $3165 * $3168;
                $3179 = $3164 * $3166;
                $3180 = $3179 + $3178;
                $3181 = $3170 + $3180;
                $3182 = $3168 * $3173;
                $3183 = $3166 * $3170;
                $3184 = $3182 - $3183;
                $3185 = $3184 - $3164;
                $3186 = $3168 * $3177;
                $3187 = $3166 * $3176;
                $3188 = $3186 - $3187;
                $3189 = $3188 - $3165;
                $3190 = $3167 + $3176;
                $3191 = $3190 - $3169;
                $3192 = $3167 + $3173;
                $3193 = $3192 - $3169;
                $3194 = -$3179;
                $3195 = $3194 - $3178;
                $3196 = $3195 + $3177;
                $3197 = (+__Z5IKabsd($3175));
                $3198 = $3197 > 5.0000000000000004E-6;
                if ($3198) {
                 break L7;
                }
                $3199 = $3168 * $3176;
                $3200 = $3166 * $3177;
                $3201 = $3199 + $3200;
                $3202 = $3201 - $3164;
                $3203 = (+__Z5IKabsd($3202));
                $3204 = $3203 > 5.0000000000000004E-6;
                if ($3204) {
                 break L7;
                }
                $3205 = (+__Z5IKabsd($3181));
                $3206 = $3205 > 5.0000000000000004E-6;
                if ($3206) {
                 break L7;
                }
                $3207 = (+__Z5IKabsd($3185));
                $3208 = $3207 > 5.0000000000000004E-6;
                if ($3208) {
                 break L7;
                }
                $3209 = (+__Z5IKabsd($3189));
                $3210 = $3209 > 5.0000000000000004E-6;
                if ($3210) {
                 break L7;
                }
                $3211 = (+__Z5IKabsd($3191));
                $3212 = $3211 > 5.0000000000000004E-6;
                if ($3212) {
                 break L7;
                }
                $3213 = (+__Z5IKabsd($3193));
                $3214 = $3213 > 5.0000000000000004E-6;
                if ($3214) {
                 break L7;
                }
                $3215 = (+__Z5IKabsd($3196));
                $3216 = $3215 > 5.0000000000000004E-6;
                if ($3216) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos98,7);
                $3217 = HEAP32[$vinfos98>>2]|0;
                $3218 = ((($3217)) + 17|0);
                HEAP8[$3218>>0] = 1;
                $3219 = +HEAPF64[$this>>3];
                $3220 = HEAP32[$vinfos98>>2]|0;
                $3221 = ((($3220)) + 8|0);
                HEAPF64[$3221>>3] = $3219;
                $3222 = HEAP8[$217>>0]|0;
                $3223 = HEAP32[$vinfos98>>2]|0;
                $3224 = ((($3223)) + 19|0);
                HEAP8[$3224>>0] = $3222;
                $3225 = HEAP8[$218>>0]|0;
                $3226 = HEAP32[$vinfos98>>2]|0;
                $3227 = ((($3226)) + 20|0);
                HEAP8[$3227>>0] = $3225;
                $3228 = HEAP8[$219>>0]|0;
                $3229 = HEAP32[$vinfos98>>2]|0;
                $3230 = ((($3229)) + 18|0);
                HEAP8[$3230>>0] = $3228;
                $3231 = HEAP32[$vinfos98>>2]|0;
                $3232 = ((($3231)) + 41|0);
                HEAP8[$3232>>0] = 1;
                $3233 = +HEAPF64[$220>>3];
                $3234 = HEAP32[$vinfos98>>2]|0;
                $3235 = ((($3234)) + 32|0);
                HEAPF64[$3235>>3] = $3233;
                $3236 = HEAP8[$221>>0]|0;
                $3237 = HEAP32[$vinfos98>>2]|0;
                $3238 = ((($3237)) + 43|0);
                HEAP8[$3238>>0] = $3236;
                $3239 = HEAP8[$222>>0]|0;
                $3240 = HEAP32[$vinfos98>>2]|0;
                $3241 = ((($3240)) + 44|0);
                HEAP8[$3241>>0] = $3239;
                $3242 = HEAP8[$223>>0]|0;
                $3243 = HEAP32[$vinfos98>>2]|0;
                $3244 = ((($3243)) + 42|0);
                HEAP8[$3244>>0] = $3242;
                $3245 = HEAP32[$vinfos98>>2]|0;
                $3246 = ((($3245)) + 65|0);
                HEAP8[$3246>>0] = 1;
                $3247 = +HEAPF64[$224>>3];
                $3248 = HEAP32[$vinfos98>>2]|0;
                $3249 = ((($3248)) + 56|0);
                HEAPF64[$3249>>3] = $3247;
                $3250 = HEAP8[$225>>0]|0;
                $3251 = HEAP32[$vinfos98>>2]|0;
                $3252 = ((($3251)) + 67|0);
                HEAP8[$3252>>0] = $3250;
                $3253 = HEAP8[$226>>0]|0;
                $3254 = HEAP32[$vinfos98>>2]|0;
                $3255 = ((($3254)) + 68|0);
                HEAP8[$3255>>0] = $3253;
                $3256 = HEAP8[$227>>0]|0;
                $3257 = HEAP32[$vinfos98>>2]|0;
                $3258 = ((($3257)) + 66|0);
                HEAP8[$3258>>0] = $3256;
                $3259 = HEAP32[$vinfos98>>2]|0;
                $3260 = ((($3259)) + 89|0);
                HEAP8[$3260>>0] = 1;
                $3261 = +HEAPF64[$228>>3];
                $3262 = HEAP32[$vinfos98>>2]|0;
                $3263 = ((($3262)) + 80|0);
                HEAPF64[$3263>>3] = $3261;
                $3264 = HEAP8[$229>>0]|0;
                $3265 = HEAP32[$vinfos98>>2]|0;
                $3266 = ((($3265)) + 91|0);
                HEAP8[$3266>>0] = $3264;
                $3267 = HEAP8[$230>>0]|0;
                $3268 = HEAP32[$vinfos98>>2]|0;
                $3269 = ((($3268)) + 92|0);
                HEAP8[$3269>>0] = $3267;
                $3270 = HEAP8[$231>>0]|0;
                $3271 = HEAP32[$vinfos98>>2]|0;
                $3272 = ((($3271)) + 90|0);
                HEAP8[$3272>>0] = $3270;
                $3273 = HEAP32[$vinfos98>>2]|0;
                $3274 = ((($3273)) + 113|0);
                HEAP8[$3274>>0] = 1;
                $3275 = +HEAPF64[$101>>3];
                $3276 = HEAP32[$vinfos98>>2]|0;
                $3277 = ((($3276)) + 104|0);
                HEAPF64[$3277>>3] = $3275;
                $3278 = HEAP8[$99>>0]|0;
                $3279 = HEAP32[$vinfos98>>2]|0;
                $3280 = ((($3279)) + 115|0);
                HEAP8[$3280>>0] = $3278;
                $3281 = HEAP8[$100>>0]|0;
                $3282 = HEAP32[$vinfos98>>2]|0;
                $3283 = ((($3282)) + 116|0);
                HEAP8[$3283>>0] = $3281;
                $3284 = HEAP8[$96>>0]|0;
                $3285 = HEAP32[$vinfos98>>2]|0;
                $3286 = ((($3285)) + 114|0);
                HEAP8[$3286>>0] = $3284;
                $3287 = HEAP32[$vinfos98>>2]|0;
                $3288 = ((($3287)) + 137|0);
                HEAP8[$3288>>0] = 1;
                $3289 = +HEAPF64[$29>>3];
                $3290 = HEAP32[$vinfos98>>2]|0;
                $3291 = ((($3290)) + 128|0);
                HEAPF64[$3291>>3] = $3289;
                $3292 = HEAP8[$27>>0]|0;
                $3293 = HEAP32[$vinfos98>>2]|0;
                $3294 = ((($3293)) + 139|0);
                HEAP8[$3294>>0] = $3292;
                $3295 = HEAP8[$28>>0]|0;
                $3296 = HEAP32[$vinfos98>>2]|0;
                $3297 = ((($3296)) + 140|0);
                HEAP8[$3297>>0] = $3295;
                $3298 = HEAP8[$26>>0]|0;
                $3299 = HEAP32[$vinfos98>>2]|0;
                $3300 = ((($3299)) + 138|0);
                HEAP8[$3300>>0] = $3298;
                $3301 = HEAP32[$vinfos98>>2]|0;
                $3302 = ((($3301)) + 161|0);
                HEAP8[$3302>>0] = 1;
                $3303 = +HEAPF64[$214>>3];
                $3304 = HEAP32[$vinfos98>>2]|0;
                $3305 = ((($3304)) + 152|0);
                HEAPF64[$3305>>3] = $3303;
                $3306 = HEAP8[$212>>0]|0;
                $3307 = HEAP32[$vinfos98>>2]|0;
                $3308 = ((($3307)) + 163|0);
                HEAP8[$3308>>0] = $3306;
                $3309 = HEAP8[$213>>0]|0;
                $3310 = HEAP32[$vinfos98>>2]|0;
                $3311 = ((($3310)) + 164|0);
                HEAP8[$3311>>0] = $3309;
                $3312 = HEAP8[$211>>0]|0;
                $3313 = HEAP32[$vinfos98>>2]|0;
                $3314 = ((($3313)) + 162|0);
                HEAP8[$3314>>0] = $3312;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree99,0);
                $3315 = HEAP32[$solutions>>2]|0;
                $3316 = ((($3315)) + 8|0);
                $3317 = HEAP32[$3316>>2]|0;
                (FUNCTION_TABLE_iiii[$3317 & 31]($solutions,$vinfos98,$vfree99)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree99);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos98);
                break L7;
               }
              } while(0);
              $3318 = +HEAPF64[$30>>3];
              $3319 = +HEAPF64[$25>>3];
              $3320 = +HEAPF64[$31>>3];
              $3321 = +HEAPF64[$19>>3];
              $3322 = $3321 - $3320;
              $3323 = +HEAPF64[$101>>3];
              $3324 = (+__Z5IKabsd($3323));
              $3325 = $3324 + 3.14159265358979;
              $3326 = (+__Z6IKfmoddd($3325,6.2831853071795898));
              $3327 = $3326 + -3.14159265358979;
              $3328 = +HEAPF64[$22>>3];
              $3329 = +HEAPF64[$11>>3];
              $3330 = $3320 * $3329;
              $3331 = +HEAPF64[$23>>3];
              $3332 = $3318 * $3331;
              $3333 = $3330 + $3332;
              $3334 = +HEAPF64[$15>>3];
              $3335 = $3320 * $3334;
              $3336 = +HEAPF64[$24>>3];
              $3337 = $3318 * $3336;
              $3338 = $3335 + $3337;
              $3339 = $3320 * $3321;
              $3340 = $3339 + -1.0;
              $3341 = $3318 * $3319;
              $3342 = $3341 + $3340;
              $3343 = $3318 * $3321;
              $3344 = $3319 * $3320;
              $3345 = $3343 - $3344;
              $3346 = (+__Z5IKabsd($3327));
              $3347 = $3346 < 9.9999999999999995E-7;
              do {
               if ($3347) {
                $3348 = $3319 - $3318;
                $3349 = (+__Z5IKabsd($3348));
                $3350 = $3349 < 9.9999999999999995E-7;
                if (!($3350)) {
                 break;
                }
                $3351 = (+__Z5IKabsd($3322));
                $3352 = $3351 < 9.9999999999999995E-7;
                if (!($3352)) {
                 break;
                }
                $3353 = (+__Z5IKabsd($3328));
                $3354 = $3353 < 9.9999999999999995E-7;
                if (!($3354)) {
                 break;
                }
                $3355 = (+__Z5IKabsd($3333));
                $3356 = $3355 < 9.9999999999999995E-7;
                if (!($3356)) {
                 break;
                }
                $3357 = (+__Z5IKabsd($3338));
                $3358 = $3357 < 9.9999999999999995E-7;
                if (!($3358)) {
                 break;
                }
                $3359 = (+__Z5IKabsd($3342));
                $3360 = $3359 < 9.9999999999999995E-7;
                if (!($3360)) {
                 break;
                }
                $3361 = (+__Z5IKabsd($3345));
                $3362 = $3361 < 9.9999999999999995E-7;
                if (!($3362)) {
                 break;
                }
                HEAP8[$232>>0] = 1;
                $3363 = +HEAPF64[$20>>3];
                $3364 = (+__Z5IKabsd($3363));
                $3365 = $3364 < 1.9999999999999999E-6;
                do {
                 if ($3365) {
                  $3366 = +HEAPF64[$21>>3];
                  $3367 = (+__Z5IKabsd($3366));
                  $3368 = $3367 < 1.9999999999999999E-6;
                  if (!($3368)) {
                   break;
                  }
                  $3369 = (+__Z5IKsqrd($3363));
                  $3370 = (+__Z5IKsqrd($3366));
                  $3371 = $3369 + $3370;
                  $3372 = $3371 + -1.0;
                  $3373 = (+__Z5IKabsd($3372));
                  $3374 = !($3373 <= 1.9999999999999999E-6);
                  if (!($3374)) {
                   break L7;
                  }
                 }
                } while(0);
                $3375 = +HEAPF64[$20>>3];
                $3376 = +HEAPF64[$21>>3];
                $3377 = (+__Z7IKatan2dd($3375,$3376));
                $3378 = (+__Z5IKsind($3377));
                $3379 = (+__Z5IKcosd($3377));
                $3380 = $3377 > 3.14159265358979;
                do {
                 if ($3380) {
                  $3381 = $3377 + -6.2831853071795898;
                  $3384 = $3381;
                 } else {
                  $3382 = $3377 < -3.14159265358979;
                  if (!($3382)) {
                   $3384 = $3377;
                   break;
                  }
                  $3383 = $3377 + 6.2831853071795898;
                  $3384 = $3383;
                 }
                } while(0);
                HEAP8[$233>>0] = 0;
                HEAP8[$234>>0] = -1;
                HEAPF64[$235>>3] = $3384;
                HEAPF64[$236>>3] = $3379;
                HEAPF64[$237>>3] = $3378;
                $3385 = +HEAPF64[$235>>3];
                $3386 = (+__Z5IKcosd($3385));
                $3387 = (+__Z5IKsind($3385));
                $3388 = +HEAPF64[$19>>3];
                $3389 = +HEAPF64[$23>>3];
                $3390 = $3386 * $3388;
                $3391 = $3389 + $3390;
                $3392 = +HEAPF64[$21>>3];
                $3393 = $3392 - $3386;
                $3394 = +HEAPF64[$25>>3];
                $3395 = $3387 * $3394;
                $3396 = +HEAPF64[$15>>3];
                $3397 = $3395 + $3396;
                $3398 = +HEAPF64[$24>>3];
                $3399 = $3387 * $3388;
                $3400 = $3398 - $3399;
                $3401 = +HEAPF64[$11>>3];
                $3402 = $3386 * $3394;
                $3403 = $3401 - $3402;
                $3404 = $3394 * $3396;
                $3405 = $3387 + $3404;
                $3406 = $3388 * $3398;
                $3407 = $3405 - $3406;
                $3408 = $3394 * $3401;
                $3409 = $3388 * $3389;
                $3410 = $3408 - $3409;
                $3411 = $3410 - $3386;
                $3412 = (+__Z5IKabsd($3391));
                $3413 = $3412 > 5.0000000000000004E-6;
                if ($3413) {
                 break L7;
                }
                $3414 = +HEAPF64[$20>>3];
                $3415 = $3414 - $3387;
                $3416 = (+__Z5IKabsd($3415));
                $3417 = $3416 > 5.0000000000000004E-6;
                if ($3417) {
                 break L7;
                }
                $3418 = (+__Z5IKabsd($3393));
                $3419 = $3418 > 5.0000000000000004E-6;
                if ($3419) {
                 break L7;
                }
                $3420 = (+__Z5IKabsd($3397));
                $3421 = $3420 > 5.0000000000000004E-6;
                if ($3421) {
                 break L7;
                }
                $3422 = (+__Z5IKabsd($3400));
                $3423 = $3422 > 5.0000000000000004E-6;
                if ($3423) {
                 break L7;
                }
                $3424 = (+__Z5IKabsd($3403));
                $3425 = $3424 > 5.0000000000000004E-6;
                if ($3425) {
                 break L7;
                }
                $3426 = (+__Z5IKabsd($3407));
                $3427 = $3426 > 5.0000000000000004E-6;
                if ($3427) {
                 break L7;
                }
                $3428 = (+__Z5IKabsd($3411));
                $3429 = $3428 > 5.0000000000000004E-6;
                if ($3429) {
                 break L7;
                }
                __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos109,7);
                $3430 = HEAP32[$vinfos109>>2]|0;
                $3431 = ((($3430)) + 17|0);
                HEAP8[$3431>>0] = 1;
                $3432 = +HEAPF64[$this>>3];
                $3433 = HEAP32[$vinfos109>>2]|0;
                $3434 = ((($3433)) + 8|0);
                HEAPF64[$3434>>3] = $3432;
                $3435 = HEAP8[$238>>0]|0;
                $3436 = HEAP32[$vinfos109>>2]|0;
                $3437 = ((($3436)) + 19|0);
                HEAP8[$3437>>0] = $3435;
                $3438 = HEAP8[$239>>0]|0;
                $3439 = HEAP32[$vinfos109>>2]|0;
                $3440 = ((($3439)) + 20|0);
                HEAP8[$3440>>0] = $3438;
                $3441 = HEAP8[$240>>0]|0;
                $3442 = HEAP32[$vinfos109>>2]|0;
                $3443 = ((($3442)) + 18|0);
                HEAP8[$3443>>0] = $3441;
                $3444 = HEAP32[$vinfos109>>2]|0;
                $3445 = ((($3444)) + 41|0);
                HEAP8[$3445>>0] = 1;
                $3446 = +HEAPF64[$241>>3];
                $3447 = HEAP32[$vinfos109>>2]|0;
                $3448 = ((($3447)) + 32|0);
                HEAPF64[$3448>>3] = $3446;
                $3449 = HEAP8[$242>>0]|0;
                $3450 = HEAP32[$vinfos109>>2]|0;
                $3451 = ((($3450)) + 43|0);
                HEAP8[$3451>>0] = $3449;
                $3452 = HEAP8[$243>>0]|0;
                $3453 = HEAP32[$vinfos109>>2]|0;
                $3454 = ((($3453)) + 44|0);
                HEAP8[$3454>>0] = $3452;
                $3455 = HEAP8[$244>>0]|0;
                $3456 = HEAP32[$vinfos109>>2]|0;
                $3457 = ((($3456)) + 42|0);
                HEAP8[$3457>>0] = $3455;
                $3458 = HEAP32[$vinfos109>>2]|0;
                $3459 = ((($3458)) + 65|0);
                HEAP8[$3459>>0] = 1;
                $3460 = +HEAPF64[$245>>3];
                $3461 = HEAP32[$vinfos109>>2]|0;
                $3462 = ((($3461)) + 56|0);
                HEAPF64[$3462>>3] = $3460;
                $3463 = HEAP8[$246>>0]|0;
                $3464 = HEAP32[$vinfos109>>2]|0;
                $3465 = ((($3464)) + 67|0);
                HEAP8[$3465>>0] = $3463;
                $3466 = HEAP8[$247>>0]|0;
                $3467 = HEAP32[$vinfos109>>2]|0;
                $3468 = ((($3467)) + 68|0);
                HEAP8[$3468>>0] = $3466;
                $3469 = HEAP8[$248>>0]|0;
                $3470 = HEAP32[$vinfos109>>2]|0;
                $3471 = ((($3470)) + 66|0);
                HEAP8[$3471>>0] = $3469;
                $3472 = HEAP32[$vinfos109>>2]|0;
                $3473 = ((($3472)) + 89|0);
                HEAP8[$3473>>0] = 1;
                $3474 = +HEAPF64[$249>>3];
                $3475 = HEAP32[$vinfos109>>2]|0;
                $3476 = ((($3475)) + 80|0);
                HEAPF64[$3476>>3] = $3474;
                $3477 = HEAP8[$250>>0]|0;
                $3478 = HEAP32[$vinfos109>>2]|0;
                $3479 = ((($3478)) + 91|0);
                HEAP8[$3479>>0] = $3477;
                $3480 = HEAP8[$251>>0]|0;
                $3481 = HEAP32[$vinfos109>>2]|0;
                $3482 = ((($3481)) + 92|0);
                HEAP8[$3482>>0] = $3480;
                $3483 = HEAP8[$252>>0]|0;
                $3484 = HEAP32[$vinfos109>>2]|0;
                $3485 = ((($3484)) + 90|0);
                HEAP8[$3485>>0] = $3483;
                $3486 = HEAP32[$vinfos109>>2]|0;
                $3487 = ((($3486)) + 113|0);
                HEAP8[$3487>>0] = 1;
                $3488 = +HEAPF64[$101>>3];
                $3489 = HEAP32[$vinfos109>>2]|0;
                $3490 = ((($3489)) + 104|0);
                HEAPF64[$3490>>3] = $3488;
                $3491 = HEAP8[$99>>0]|0;
                $3492 = HEAP32[$vinfos109>>2]|0;
                $3493 = ((($3492)) + 115|0);
                HEAP8[$3493>>0] = $3491;
                $3494 = HEAP8[$100>>0]|0;
                $3495 = HEAP32[$vinfos109>>2]|0;
                $3496 = ((($3495)) + 116|0);
                HEAP8[$3496>>0] = $3494;
                $3497 = HEAP8[$96>>0]|0;
                $3498 = HEAP32[$vinfos109>>2]|0;
                $3499 = ((($3498)) + 114|0);
                HEAP8[$3499>>0] = $3497;
                $3500 = HEAP32[$vinfos109>>2]|0;
                $3501 = ((($3500)) + 137|0);
                HEAP8[$3501>>0] = 1;
                $3502 = +HEAPF64[$29>>3];
                $3503 = HEAP32[$vinfos109>>2]|0;
                $3504 = ((($3503)) + 128|0);
                HEAPF64[$3504>>3] = $3502;
                $3505 = HEAP8[$27>>0]|0;
                $3506 = HEAP32[$vinfos109>>2]|0;
                $3507 = ((($3506)) + 139|0);
                HEAP8[$3507>>0] = $3505;
                $3508 = HEAP8[$28>>0]|0;
                $3509 = HEAP32[$vinfos109>>2]|0;
                $3510 = ((($3509)) + 140|0);
                HEAP8[$3510>>0] = $3508;
                $3511 = HEAP8[$26>>0]|0;
                $3512 = HEAP32[$vinfos109>>2]|0;
                $3513 = ((($3512)) + 138|0);
                HEAP8[$3513>>0] = $3511;
                $3514 = HEAP32[$vinfos109>>2]|0;
                $3515 = ((($3514)) + 161|0);
                HEAP8[$3515>>0] = 1;
                $3516 = +HEAPF64[$235>>3];
                $3517 = HEAP32[$vinfos109>>2]|0;
                $3518 = ((($3517)) + 152|0);
                HEAPF64[$3518>>3] = $3516;
                $3519 = HEAP8[$233>>0]|0;
                $3520 = HEAP32[$vinfos109>>2]|0;
                $3521 = ((($3520)) + 163|0);
                HEAP8[$3521>>0] = $3519;
                $3522 = HEAP8[$234>>0]|0;
                $3523 = HEAP32[$vinfos109>>2]|0;
                $3524 = ((($3523)) + 164|0);
                HEAP8[$3524>>0] = $3522;
                $3525 = HEAP8[$232>>0]|0;
                $3526 = HEAP32[$vinfos109>>2]|0;
                $3527 = ((($3526)) + 162|0);
                HEAP8[$3527>>0] = $3525;
                __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree110,0);
                $3528 = HEAP32[$solutions>>2]|0;
                $3529 = ((($3528)) + 8|0);
                $3530 = HEAP32[$3529>>2]|0;
                (FUNCTION_TABLE_iiii[$3530 & 31]($solutions,$vinfos109,$vfree110)|0);
                __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree110);
                __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos109);
                break L7;
               }
              } while(0);
              $3531 = +HEAPF64[$30>>3];
              $3532 = +HEAPF64[$25>>3];
              $3533 = +HEAPF64[$31>>3];
              $3534 = +HEAPF64[$19>>3];
              $3535 = +HEAPF64[$101>>3];
              $3536 = $3535 + -3.14159265358979;
              $3537 = (+__Z5IKabsd($3536));
              $3538 = $3537 + 3.14159265358979;
              $3539 = (+__Z6IKfmoddd($3538,6.2831853071795898));
              $3540 = $3539 + -3.14159265358979;
              $3541 = $3533 + $3534;
              $3542 = +HEAPF64[$22>>3];
              $3543 = -$3533;
              $3544 = $3543 - $3534;
              $3545 = +HEAPF64[$23>>3];
              $3546 = $3531 * $3545;
              $3547 = +HEAPF64[$11>>3];
              $3548 = $3533 * $3547;
              $3549 = $3546 - $3548;
              $3550 = +HEAPF64[$24>>3];
              $3551 = $3531 * $3550;
              $3552 = +HEAPF64[$15>>3];
              $3553 = $3533 * $3552;
              $3554 = $3551 - $3553;
              $3555 = $3531 * $3532;
              $3556 = $3555 + -1.0;
              $3557 = $3533 * $3534;
              $3558 = $3556 - $3557;
              $3559 = $3531 * $3534;
              $3560 = $3532 * $3533;
              $3561 = -$3560;
              $3562 = $3561 - $3559;
              $3563 = (+__Z5IKabsd($3540));
              $3564 = $3563 < 9.9999999999999995E-7;
              if (!($3564)) {
               break;
              }
              $3565 = $3532 - $3531;
              $3566 = (+__Z5IKabsd($3565));
              $3567 = $3566 < 9.9999999999999995E-7;
              if (!($3567)) {
               break;
              }
              $3568 = (+__Z5IKabsd($3541));
              $3569 = $3568 < 9.9999999999999995E-7;
              if (!($3569)) {
               break;
              }
              $3570 = (+__Z5IKabsd($3542));
              $3571 = $3570 < 9.9999999999999995E-7;
              if (!($3571)) {
               break;
              }
              $3572 = (+__Z5IKabsd($3544));
              $3573 = $3572 < 9.9999999999999995E-7;
              if (!($3573)) {
               break;
              }
              $3574 = (+__Z5IKabsd($3549));
              $3575 = $3574 < 9.9999999999999995E-7;
              if (!($3575)) {
               break;
              }
              $3576 = (+__Z5IKabsd($3554));
              $3577 = $3576 < 9.9999999999999995E-7;
              if (!($3577)) {
               break;
              }
              $3578 = (+__Z5IKabsd($3558));
              $3579 = $3578 < 9.9999999999999995E-7;
              if (!($3579)) {
               break;
              }
              $3580 = (+__Z5IKabsd($3562));
              $3581 = $3580 < 9.9999999999999995E-7;
              if (!($3581)) {
               break;
              }
              HEAP8[$253>>0] = 1;
              $3582 = +HEAPF64[$24>>3];
              $3583 = -$3582;
              $3584 = +HEAPF64[$23>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x415,$3583,$3584,1.9999999999999999E-6);
              $3585 = HEAP8[$254>>0]|0;
              $3586 = ($3585<<24>>24)==(0);
              if ($3586) {
               break;
              }
              $3587 = +HEAPF64[$19>>3];
              $3588 = (+__Z6IKsignd($3587));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x416,$3588,-1);
              $3589 = HEAP8[$255>>0]|0;
              $3590 = ($3589<<24>>24)==(0);
              if ($3590) {
               break;
              }
              $3591 = +HEAPF64[$x415>>3];
              $3592 = $3591 + -1.5707963267949001;
              $3593 = +HEAPF64[$x416>>3];
              $3594 = $3593 * 1.5707963267949001;
              $3595 = $3592 + $3594;
              $3596 = (+__Z5IKsind($3595));
              $3597 = (+__Z5IKcosd($3595));
              $3598 = $3595 > 3.14159265358979;
              do {
               if ($3598) {
                $3599 = $3595 + -6.2831853071795898;
                $3602 = $3599;
               } else {
                $3600 = $3595 < -3.14159265358979;
                if (!($3600)) {
                 $3602 = $3595;
                 break;
                }
                $3601 = $3595 + 6.2831853071795898;
                $3602 = $3601;
               }
              } while(0);
              HEAP8[$256>>0] = 0;
              HEAP8[$257>>0] = -1;
              HEAPF64[$258>>3] = $3602;
              HEAPF64[$259>>3] = $3597;
              HEAPF64[$260>>3] = $3596;
              $3603 = +HEAPF64[$258>>3];
              $3604 = (+__Z5IKsind($3603));
              $3605 = (+__Z5IKcosd($3603));
              $3606 = +HEAPF64[$25>>3];
              $3607 = +HEAPF64[$24>>3];
              $3608 = +HEAPF64[$19>>3];
              $3609 = $3604 * $3608;
              $3610 = $3607 + $3609;
              $3611 = +HEAPF64[$23>>3];
              $3612 = +HEAPF64[$20>>3];
              $3613 = -$3604;
              $3614 = $3613 - $3612;
              $3615 = +HEAPF64[$21>>3];
              $3616 = -$3615;
              $3617 = $3616 - $3605;
              $3618 = $3604 * $3606;
              $3619 = +HEAPF64[$15>>3];
              $3620 = $3618 - $3619;
              $3621 = $3605 * $3606;
              $3622 = -$3621;
              $3623 = +HEAPF64[$11>>3];
              $3624 = $3622 - $3623;
              $3625 = $3607 * $3608;
              $3626 = $3604 + $3625;
              $3627 = $3606 * $3619;
              $3628 = $3626 - $3627;
              $3629 = $3608 * $3611;
              $3630 = $3629 - $3605;
              $3631 = $3606 * $3623;
              $3632 = $3630 - $3631;
              $3633 = (+__Z5IKabsd($3610));
              $3634 = $3633 > 5.0000000000000004E-6;
              if ($3634) {
               break;
              }
              $3635 = $3605 * $3608;
              $3636 = $3611 - $3635;
              $3637 = (+__Z5IKabsd($3636));
              $3638 = $3637 > 5.0000000000000004E-6;
              if ($3638) {
               break;
              }
              $3639 = (+__Z5IKabsd($3614));
              $3640 = $3639 > 5.0000000000000004E-6;
              if ($3640) {
               break;
              }
              $3641 = (+__Z5IKabsd($3617));
              $3642 = $3641 > 5.0000000000000004E-6;
              if ($3642) {
               break;
              }
              $3643 = (+__Z5IKabsd($3620));
              $3644 = $3643 > 5.0000000000000004E-6;
              if ($3644) {
               break;
              }
              $3645 = (+__Z5IKabsd($3624));
              $3646 = $3645 > 5.0000000000000004E-6;
              if ($3646) {
               break;
              }
              $3647 = (+__Z5IKabsd($3628));
              $3648 = $3647 > 5.0000000000000004E-6;
              if ($3648) {
               break;
              }
              $3649 = (+__Z5IKabsd($3632));
              $3650 = $3649 > 5.0000000000000004E-6;
              if ($3650) {
               break;
              }
              __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos120,7);
              $3651 = HEAP32[$vinfos120>>2]|0;
              $3652 = ((($3651)) + 17|0);
              HEAP8[$3652>>0] = 1;
              $3653 = +HEAPF64[$this>>3];
              $3654 = HEAP32[$vinfos120>>2]|0;
              $3655 = ((($3654)) + 8|0);
              HEAPF64[$3655>>3] = $3653;
              $3656 = HEAP8[$261>>0]|0;
              $3657 = HEAP32[$vinfos120>>2]|0;
              $3658 = ((($3657)) + 19|0);
              HEAP8[$3658>>0] = $3656;
              $3659 = HEAP8[$262>>0]|0;
              $3660 = HEAP32[$vinfos120>>2]|0;
              $3661 = ((($3660)) + 20|0);
              HEAP8[$3661>>0] = $3659;
              $3662 = HEAP8[$263>>0]|0;
              $3663 = HEAP32[$vinfos120>>2]|0;
              $3664 = ((($3663)) + 18|0);
              HEAP8[$3664>>0] = $3662;
              $3665 = HEAP32[$vinfos120>>2]|0;
              $3666 = ((($3665)) + 41|0);
              HEAP8[$3666>>0] = 1;
              $3667 = +HEAPF64[$264>>3];
              $3668 = HEAP32[$vinfos120>>2]|0;
              $3669 = ((($3668)) + 32|0);
              HEAPF64[$3669>>3] = $3667;
              $3670 = HEAP8[$265>>0]|0;
              $3671 = HEAP32[$vinfos120>>2]|0;
              $3672 = ((($3671)) + 43|0);
              HEAP8[$3672>>0] = $3670;
              $3673 = HEAP8[$266>>0]|0;
              $3674 = HEAP32[$vinfos120>>2]|0;
              $3675 = ((($3674)) + 44|0);
              HEAP8[$3675>>0] = $3673;
              $3676 = HEAP8[$267>>0]|0;
              $3677 = HEAP32[$vinfos120>>2]|0;
              $3678 = ((($3677)) + 42|0);
              HEAP8[$3678>>0] = $3676;
              $3679 = HEAP32[$vinfos120>>2]|0;
              $3680 = ((($3679)) + 65|0);
              HEAP8[$3680>>0] = 1;
              $3681 = +HEAPF64[$268>>3];
              $3682 = HEAP32[$vinfos120>>2]|0;
              $3683 = ((($3682)) + 56|0);
              HEAPF64[$3683>>3] = $3681;
              $3684 = HEAP8[$269>>0]|0;
              $3685 = HEAP32[$vinfos120>>2]|0;
              $3686 = ((($3685)) + 67|0);
              HEAP8[$3686>>0] = $3684;
              $3687 = HEAP8[$270>>0]|0;
              $3688 = HEAP32[$vinfos120>>2]|0;
              $3689 = ((($3688)) + 68|0);
              HEAP8[$3689>>0] = $3687;
              $3690 = HEAP8[$271>>0]|0;
              $3691 = HEAP32[$vinfos120>>2]|0;
              $3692 = ((($3691)) + 66|0);
              HEAP8[$3692>>0] = $3690;
              $3693 = HEAP32[$vinfos120>>2]|0;
              $3694 = ((($3693)) + 89|0);
              HEAP8[$3694>>0] = 1;
              $3695 = +HEAPF64[$272>>3];
              $3696 = HEAP32[$vinfos120>>2]|0;
              $3697 = ((($3696)) + 80|0);
              HEAPF64[$3697>>3] = $3695;
              $3698 = HEAP8[$273>>0]|0;
              $3699 = HEAP32[$vinfos120>>2]|0;
              $3700 = ((($3699)) + 91|0);
              HEAP8[$3700>>0] = $3698;
              $3701 = HEAP8[$274>>0]|0;
              $3702 = HEAP32[$vinfos120>>2]|0;
              $3703 = ((($3702)) + 92|0);
              HEAP8[$3703>>0] = $3701;
              $3704 = HEAP8[$275>>0]|0;
              $3705 = HEAP32[$vinfos120>>2]|0;
              $3706 = ((($3705)) + 90|0);
              HEAP8[$3706>>0] = $3704;
              $3707 = HEAP32[$vinfos120>>2]|0;
              $3708 = ((($3707)) + 113|0);
              HEAP8[$3708>>0] = 1;
              $3709 = +HEAPF64[$101>>3];
              $3710 = HEAP32[$vinfos120>>2]|0;
              $3711 = ((($3710)) + 104|0);
              HEAPF64[$3711>>3] = $3709;
              $3712 = HEAP8[$99>>0]|0;
              $3713 = HEAP32[$vinfos120>>2]|0;
              $3714 = ((($3713)) + 115|0);
              HEAP8[$3714>>0] = $3712;
              $3715 = HEAP8[$100>>0]|0;
              $3716 = HEAP32[$vinfos120>>2]|0;
              $3717 = ((($3716)) + 116|0);
              HEAP8[$3717>>0] = $3715;
              $3718 = HEAP8[$96>>0]|0;
              $3719 = HEAP32[$vinfos120>>2]|0;
              $3720 = ((($3719)) + 114|0);
              HEAP8[$3720>>0] = $3718;
              $3721 = HEAP32[$vinfos120>>2]|0;
              $3722 = ((($3721)) + 137|0);
              HEAP8[$3722>>0] = 1;
              $3723 = +HEAPF64[$29>>3];
              $3724 = HEAP32[$vinfos120>>2]|0;
              $3725 = ((($3724)) + 128|0);
              HEAPF64[$3725>>3] = $3723;
              $3726 = HEAP8[$27>>0]|0;
              $3727 = HEAP32[$vinfos120>>2]|0;
              $3728 = ((($3727)) + 139|0);
              HEAP8[$3728>>0] = $3726;
              $3729 = HEAP8[$28>>0]|0;
              $3730 = HEAP32[$vinfos120>>2]|0;
              $3731 = ((($3730)) + 140|0);
              HEAP8[$3731>>0] = $3729;
              $3732 = HEAP8[$26>>0]|0;
              $3733 = HEAP32[$vinfos120>>2]|0;
              $3734 = ((($3733)) + 138|0);
              HEAP8[$3734>>0] = $3732;
              $3735 = HEAP32[$vinfos120>>2]|0;
              $3736 = ((($3735)) + 161|0);
              HEAP8[$3736>>0] = 1;
              $3737 = +HEAPF64[$258>>3];
              $3738 = HEAP32[$vinfos120>>2]|0;
              $3739 = ((($3738)) + 152|0);
              HEAPF64[$3739>>3] = $3737;
              $3740 = HEAP8[$256>>0]|0;
              $3741 = HEAP32[$vinfos120>>2]|0;
              $3742 = ((($3741)) + 163|0);
              HEAP8[$3742>>0] = $3740;
              $3743 = HEAP8[$257>>0]|0;
              $3744 = HEAP32[$vinfos120>>2]|0;
              $3745 = ((($3744)) + 164|0);
              HEAP8[$3745>>0] = $3743;
              $3746 = HEAP8[$253>>0]|0;
              $3747 = HEAP32[$vinfos120>>2]|0;
              $3748 = ((($3747)) + 162|0);
              HEAP8[$3748>>0] = $3746;
              __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($vfree121,0);
              $3749 = HEAP32[$solutions>>2]|0;
              $3750 = ((($3749)) + 8|0);
              $3751 = HEAP32[$3750>>2]|0;
              (FUNCTION_TABLE_iiii[$3751 & 31]($solutions,$vinfos120,$vfree121)|0);
              __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($vfree121);
              __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos120);
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while(0);
  $7347 = (($ij32$0369) + 1)|0;
  $7348 = ($7347|0)<(2);
  if ($7348) {
   $ij32$0369 = $7347;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __Z5IKsqrd($f) {
 $f = +$f;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f * $f;
 return (+$0);
}
function __Z7IKatan2dd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $$05 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = (__Z13__DOUBLE_BITSd($fy)|0);
 $3 = tempRet0;
 $4 = $3 & 2147483647;
 $5 = ($4>>>0)>(2146435072);
 $6 = ($2>>>0)>(0);
 $7 = ($4|0)==(2146435072);
 $8 = $7 & $6;
 $9 = $5 | $8;
 $10 = (__Z13__DOUBLE_BITSd($fx)|0);
 $11 = tempRet0;
 $12 = $11 & 2147483647;
 $13 = ($12>>>0)>(2146435072);
 $14 = ($10>>>0)>(0);
 $15 = ($12|0)==(2146435072);
 $16 = $15 & $14;
 $17 = $13 | $16;
 if ($9) {
  if ($17) {
   $18 = ((($ss)) + 64|0);
   $19 = ((($ss)) + 8|0);
   HEAP32[$19>>2] = (896);
   $20 = ((($ss)) + 12|0);
   HEAP32[$ss>>2] = ((940));
   HEAP32[$18>>2] = ((960));
   $21 = ((($ss)) + 4|0);
   HEAP32[$21>>2] = 0;
   $22 = HEAP32[$ss>>2]|0;
   $23 = ((($22)) + -12|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (($ss) + ($24)|0);
   __ZNSt3__18ios_base4initEPv($25,$20);
   $26 = ((($ss)) + 64|0);
   $$sum$i$i$i = (($24) + 72)|0;
   $27 = (($ss) + ($$sum$i$i$i)|0);
   HEAP32[$27>>2] = 0;
   $$sum1$i$i$i = (($24) + 76)|0;
   $28 = (($ss) + ($$sum1$i$i$i)|0);
   HEAP32[$28>>2] = -1;
   HEAP32[$ss>>2] = (876);
   HEAP32[$26>>2] = (916);
   HEAP32[$19>>2] = (896);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($20);
   HEAP32[$20>>2] = (976);
   $29 = ((($ss)) + 44|0);
   $30 = ((($ss)) + 60|0);
   ;HEAP32[$29>>2]=0|0;HEAP32[$29+4>>2]=0|0;HEAP32[$29+8>>2]=0|0;HEAP32[$29+12>>2]=0|0;
   HEAP32[$30>>2] = 24;
   ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
   __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($20,$0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $31 = ((($ss)) + 8|0);
   $32 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($31,1072)|0);
   $33 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($32,1096)|0);
   $34 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($33,1128)|0);
   $35 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($34,194)|0);
   $36 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($35,1136)|0);
   $37 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($36,1528)|0);
   $38 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($37,1152)|0);
   $39 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($38,1536)|0);
   (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($39,1232)|0);
   $40 = (___cxa_allocate_exception(8)|0);
   __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$20);
   __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($40,$1);
   ___cxa_throw(($40|0),(2048|0),(35|0));
   // unreachable;
  } else {
   $$05 = 1.5707963267949001;
   STACKTOP = sp;return (+$$05);
  }
 }
 if ($17) {
  $$05 = 0.0;
  STACKTOP = sp;return (+$$05);
 }
 $41 = (+Math_atan2((+$fy),(+$fx)));
 $$05 = $41;
 STACKTOP = sp;return (+$$05);
}
function __Z6IKsqrtd($f) {
 $f = +$f;
 var $$0 = 0.0, $0 = 0, $1 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = !($f <= 0.0);
 if ($0) {
  $1 = (+Math_sqrt((+$f)));
  $$0 = $1;
 } else {
  $$0 = 0.0;
 }
 return (+$$0);
}
function __Z6IKasind($f) {
 $f = +$f;
 var $$06 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $0 = sp + 160|0;
 $ss = sp + 16|0;
 $1 = sp;
 $2 = $f > -1.0000020000000001;
 $3 = $f < 1.0000020000000001;
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $4 = ((($ss)) + 64|0);
  $5 = ((($ss)) + 8|0);
  HEAP32[$5>>2] = (896);
  $6 = ((($ss)) + 12|0);
  HEAP32[$ss>>2] = ((940));
  HEAP32[$4>>2] = ((960));
  $7 = ((($ss)) + 4|0);
  HEAP32[$7>>2] = 0;
  $8 = HEAP32[$ss>>2]|0;
  $9 = ((($8)) + -12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($ss) + ($10)|0);
  __ZNSt3__18ios_base4initEPv($11,$6);
  $12 = ((($ss)) + 64|0);
  $$sum$i$i$i = (($10) + 72)|0;
  $13 = (($ss) + ($$sum$i$i$i)|0);
  HEAP32[$13>>2] = 0;
  $$sum1$i$i$i = (($10) + 76)|0;
  $14 = (($ss) + ($$sum1$i$i$i)|0);
  HEAP32[$14>>2] = -1;
  HEAP32[$ss>>2] = (876);
  HEAP32[$12>>2] = (916);
  HEAP32[$5>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
  HEAP32[$6>>2] = (976);
  $15 = ((($ss)) + 44|0);
  $16 = ((($ss)) + 60|0);
  ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;HEAP32[$15+12>>2]=0|0;
  HEAP32[$16>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $17 = ((($ss)) + 8|0);
  $18 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($17,1072)|0);
  $19 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($18,1096)|0);
  $20 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($19,1128)|0);
  $21 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($20,130)|0);
  $22 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($21,1136)|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1144)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1152)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1168)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($25,1232)|0);
  $26 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1,$6);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($26,$1);
  ___cxa_throw(($26|0),(2048|0),(35|0));
  // unreachable;
 }
 $27 = !($f <= -1.0);
 if (!($27)) {
  $$06 = -1.5707963267949001;
  STACKTOP = sp;return (+$$06);
 }
 $28 = !($f >= 1.0);
 if (!($28)) {
  $$06 = 1.5707963267949001;
  STACKTOP = sp;return (+$$06);
 }
 $29 = (+Math_asin((+$f)));
 $$06 = $29;
 STACKTOP = sp;return (+$$06);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 32|0);
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0,$__s)|0);
 $1 = ((($this)) + 44|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 8;
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = HEAP8[$0>>0]|0;
  $7 = $6 & 1;
  $8 = ($7<<24>>24)==(0);
  if ($8) {
   $11 = ((($0)) + 1|0);
   $20 = $11;
  } else {
   $9 = ((($this)) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $20 = $10;
  }
  $12 = HEAP8[$0>>0]|0;
  $13 = $12 & 1;
  $14 = ($13<<24>>24)==(0);
  if ($14) {
   $17 = $12&255;
   $18 = $17 >>> 1;
   $21 = $18;
  } else {
   $15 = ((($this)) + 36|0);
   $16 = HEAP32[$15>>2]|0;
   $21 = $16;
  }
  $19 = (($20) + ($21)|0);
  HEAP32[$1>>2] = $19;
  $22 = HEAP8[$0>>0]|0;
  $23 = $22 & 1;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $27 = ((($0)) + 1|0);
   $36 = $27;
  } else {
   $25 = ((($this)) + 40|0);
   $26 = HEAP32[$25>>2]|0;
   $36 = $26;
  }
  $28 = HEAP8[$0>>0]|0;
  $29 = $28 & 1;
  $30 = ($29<<24>>24)==(0);
  if ($30) {
   $33 = ((($0)) + 1|0);
   $38 = $33;
  } else {
   $31 = ((($this)) + 40|0);
   $32 = HEAP32[$31>>2]|0;
   $38 = $32;
  }
  $34 = HEAP32[$1>>2]|0;
  $35 = ((($this)) + 8|0);
  HEAP32[$35>>2] = $36;
  $37 = ((($this)) + 12|0);
  HEAP32[$37>>2] = $38;
  $39 = ((($this)) + 16|0);
  HEAP32[$39>>2] = $34;
 }
 $40 = HEAP32[$2>>2]|0;
 $41 = $40 & 16;
 $42 = ($41|0)==(0);
 if ($42) {
  return;
 }
 $43 = HEAP8[$0>>0]|0;
 $44 = $43 & 1;
 $45 = ($44<<24>>24)==(0);
 if ($45) {
  $48 = $43&255;
  $49 = $48 >>> 1;
  $58 = $49;
 } else {
  $46 = ((($this)) + 36|0);
  $47 = HEAP32[$46>>2]|0;
  $58 = $47;
 }
 $50 = HEAP8[$0>>0]|0;
 $51 = $50 & 1;
 $52 = ($51<<24>>24)==(0);
 if ($52) {
  $55 = ((($0)) + 1|0);
  $57 = $55;
 } else {
  $53 = ((($this)) + 40|0);
  $54 = HEAP32[$53>>2]|0;
  $57 = $54;
 }
 $56 = (($57) + ($58)|0);
 HEAP32[$1>>2] = $56;
 $59 = HEAP8[$0>>0]|0;
 $60 = $59 & 1;
 $61 = ($60<<24>>24)==(0);
 if ($61) {
  $64 = 10;
 } else {
  $62 = HEAP32[$0>>2]|0;
  $63 = $62 & -2;
  $phitmp$i = (($63) + -1)|0;
  $64 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0,$64,0);
 $65 = HEAP8[$0>>0]|0;
 $66 = $65 & 1;
 $67 = ($66<<24>>24)==(0);
 if ($67) {
  $70 = ((($0)) + 1|0);
  $88 = $70;
 } else {
  $68 = ((($this)) + 40|0);
  $69 = HEAP32[$68>>2]|0;
  $88 = $69;
 }
 $71 = HEAP8[$0>>0]|0;
 $72 = $71 & 1;
 $73 = ($72<<24>>24)==(0);
 if ($73) {
  $76 = ((($0)) + 1|0);
  $85 = $76;
 } else {
  $74 = ((($this)) + 40|0);
  $75 = HEAP32[$74>>2]|0;
  $85 = $75;
 }
 $77 = HEAP8[$0>>0]|0;
 $78 = $77 & 1;
 $79 = ($78<<24>>24)==(0);
 if ($79) {
  $82 = $77&255;
  $83 = $82 >>> 1;
  $86 = $83;
 } else {
  $80 = ((($this)) + 36|0);
  $81 = HEAP32[$80>>2]|0;
  $86 = $81;
 }
 $84 = (($85) + ($86)|0);
 $87 = ((($this)) + 24|0);
 HEAP32[$87>>2] = $88;
 $89 = ((($this)) + 20|0);
 HEAP32[$89>>2] = $88;
 $90 = ((($this)) + 28|0);
 HEAP32[$90>>2] = $84;
 $91 = HEAP32[$2>>2]|0;
 $92 = $91 & 3;
 $93 = ($92|0)==(0);
 if ($93) {
  return;
 }
 $94 = HEAP32[$87>>2]|0;
 $95 = (($94) + ($58)|0);
 HEAP32[$87>>2] = $95;
 return;
}
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__111char_traitsIcE6lengthEPKc($__str)|0);
 $1 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$0)|0);
 return ($1|0);
}
function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 48|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 16;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($this)) + 44|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($this)) + 24|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5>>>0)<($7>>>0);
  if ($8) {
   HEAP32[$4>>2] = $7;
  }
  $9 = ((($this)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$4>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($agg$result,$10,$11);
  return;
 }
 $12 = $1 & 8;
 $13 = ($12|0)==(0);
 if ($13) {
  ;HEAP32[$agg$result>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
  return;
 } else {
  $14 = ((($this)) + 8|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($this)) + 16|0);
  $17 = HEAP32[$16>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($agg$result,$15,$17);
  return;
 }
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,1032);
 $0 = ((($this)) + 64|0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var $$cast = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$vtt>>2]|0;
 HEAP32[$this>>2] = $0;
 $1 = ((($vtt)) + 32|0);
 $2 = HEAP32[$1>>2]|0;
 $$cast = $0;
 $3 = ((($$cast)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($this) + ($4)|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($vtt)) + 36|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($this)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($this)) + 12|0);
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (976);
 $0 = ((($this)) + 32|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0$lcssa = 0, $__p$0$ph = 0, $__p$02 = 0, $scevgep5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $__first;
 $1 = sp;
 $2 = $__last;
 $3 = (($2) - ($0))|0;
 $4 = ($3>>>0)>(4294967279);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(11);
 if ($5) {
  $6 = $3 << 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 1|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 16)|0;
  $10 = $9 & -16;
  $11 = (__Znwj($10)|0);
  $12 = ((($this)) + 8|0);
  HEAP32[$12>>2] = $11;
  $13 = $10 | 1;
  HEAP32[$this>>2] = $13;
  $14 = ((($this)) + 4|0);
  HEAP32[$14>>2] = $3;
  $__p$0$ph = $11;
 }
 $15 = ($__first|0)==($__last|0);
 if ($15) {
  $__p$0$lcssa = $__p$0$ph;
  HEAP8[$1>>0] = 0;
  __ZNSt3__111char_traitsIcE6assignERcRKc($__p$0$lcssa,$1);
  STACKTOP = sp;return;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $$03 = $__first;$__p$02 = $__p$0$ph;
 while(1) {
  __ZNSt3__111char_traitsIcE6assignERcRKc($__p$02,$$03);
  $18 = ((($$03)) + 1|0);
  $19 = ((($__p$02)) + 1|0);
  $20 = ($18|0)==($__last|0);
  if ($20) {
   break;
  } else {
   $$03 = $18;$__p$02 = $19;
  }
 }
 $scevgep5 = (($__p$0$ph) + ($17)|0);
 $__p$0$lcssa = $scevgep5;
 HEAP8[$1>>0] = 0;
 __ZNSt3__111char_traitsIcE6assignERcRKc($__p$0$lcssa,$1);
 STACKTOP = sp;return;
}
function __ZNSt3__111char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__c2>>0]|0;
 HEAP8[$__c1>>0] = $0;
 return;
}
function __ZNSt3__111char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 return ($0|0);
}
function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$__len) {
 $__os = $__os|0;
 $__str = $__str|0;
 $__len = $__len|0;
 var $$byval_copy = 0, $$sum = 0, $$sum$i = 0, $$sum2 = 0, $$sum3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 16|0;
 $__s = sp + 8|0;
 $0 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$__os);
 $1 = HEAP8[$__s>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;return ($__os|0);
 }
 $3 = HEAP32[$__os>>2]|0;
 $4 = ((($3)) + -12|0);
 $5 = HEAP32[$4>>2]|0;
 $$sum$i = (($5) + 24)|0;
 $6 = (($__os) + ($$sum$i)|0);
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__os>>2]|0;
 $9 = ((($8)) + -12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($__os) + ($10)|0);
 $$sum = (($10) + 4)|0;
 $12 = (($__os) + ($$sum)|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($__str) + ($__len)|0);
 $$sum2 = (($10) + 76)|0;
 $15 = (($__os) + ($$sum2)|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii(-1,$16)|0);
 if ($17) {
  $18 = (__ZNKSt3__18ios_base6getlocEv($11)|0);
  HEAP32[$$byval_copy>>2] = $18;
  $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy,6272)|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($20)) + 28|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (FUNCTION_TABLE_iii[$22 & 15]($19,32)|0);
  __ZNSt3__16localeD2Ev($$byval_copy);
  $24 = $23 << 24 >> 24;
  HEAP32[$15>>2] = $24;
 }
 $25 = HEAP32[$15>>2]|0;
 $26 = $25&255;
 $27 = $13 & 176;
 $28 = ($27|0)==(32);
 $29 = $28 ? $14 : $__str;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $30 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__str,$29,$14,$11,$26)|0);
 $31 = ($30|0)==(0|0);
 if (!($31)) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;return ($__os|0);
 }
 $32 = HEAP32[$__os>>2]|0;
 $33 = ((($32)) + -12|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($__os) + ($34)|0);
 $$sum3 = (($34) + 16)|0;
 $36 = (($__os) + ($$sum3)|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = $37 | 5;
 __ZNSt3__18ios_base5clearEj($35,$38);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;return ($__os|0);
}
function __ZNSt3__111char_traitsIcE11eq_int_typeEii($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c1|0)==($__c2|0);
 return ($0|0);
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$sroa$0$1 = 0;
  STACKTOP = sp;return ($$sroa$0$1|0);
 }
 $2 = $__oe;
 $3 = $__ob;
 $4 = (($2) - ($3))|0;
 $5 = ((($__iob)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)>($4|0);
 $8 = (($6) - ($4))|0;
 $__ns$0 = $7 ? $8 : 0;
 $9 = $__op;
 $10 = (($9) - ($3))|0;
 $11 = ($10|0)>(0);
 if ($11) {
  $12 = HEAP32[$0>>2]|0;
  $13 = ((($12)) + 48|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (FUNCTION_TABLE_iiii[$14 & 31]($0,$__ob,$10)|0);
  $16 = ($15|0)==($10|0);
  if (!($16)) {
   HEAP32[$__s>>2] = 0;
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 }
 $17 = ($__ns$0|0)>(0);
 do {
  if ($17) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($__sp,$__ns$0,$__fl);
   $18 = HEAP32[$__s>>2]|0;
   $19 = HEAP8[$__sp>>0]|0;
   $20 = $19 & 1;
   $21 = ($20<<24>>24)==(0);
   $22 = ((($__sp)) + 8|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($__sp)) + 1|0);
   $25 = $21 ? $24 : $23;
   $26 = HEAP32[$18>>2]|0;
   $27 = ((($26)) + 48|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (FUNCTION_TABLE_iiii[$28 & 31]($18,$25,$__ns$0)|0);
   $30 = ($29|0)==($__ns$0|0);
   if ($30) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
    break;
   }
   HEAP32[$__s>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 } while(0);
 $31 = (($2) - ($9))|0;
 $32 = ($31|0)>(0);
 if ($32) {
  $33 = HEAP32[$__s>>2]|0;
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 48|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = (FUNCTION_TABLE_iiii[$36 & 31]($33,$__op,$31)|0);
  $38 = ($37|0)==($31|0);
  if (!($38)) {
   HEAP32[$__s>>2] = 0;
   $$sroa$0$1 = 0;
   STACKTOP = sp;return ($$sroa$0$1|0);
  }
 }
 HEAP32[$5>>2] = 0;
 $39 = HEAP32[$__s>>2]|0;
 $$sroa$0$1 = $39;
 STACKTOP = sp;return ($$sroa$0$1|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$__way,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $__way = $__way|0;
 $__wch = $__wch|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($this)) + 44|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($this)) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  HEAP32[$2>>2] = $5;
 }
 $7 = $__wch & 24;
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = $agg$result;
  $10 = $9;
  HEAP32[$10>>2] = 0;
  $11 = (($9) + 4)|0;
  $12 = $11;
  HEAP32[$12>>2] = 0;
  $13 = ((($agg$result)) + 8|0);
  $14 = $13;
  $15 = $14;
  HEAP32[$15>>2] = -1;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = -1;
  return;
 }
 $18 = ($7|0)==(24);
 $19 = ($__way|0)==(1);
 $or$cond = $19 & $18;
 if ($or$cond) {
  $20 = $agg$result;
  $21 = $20;
  HEAP32[$21>>2] = 0;
  $22 = (($20) + 4)|0;
  $23 = $22;
  HEAP32[$23>>2] = 0;
  $24 = ((($agg$result)) + 8|0);
  $25 = $24;
  $26 = $25;
  HEAP32[$26>>2] = -1;
  $27 = (($25) + 4)|0;
  $28 = $27;
  HEAP32[$28>>2] = -1;
  return;
 }
 do {
  if ((($__way|0) == 2)) {
   $48 = HEAP32[$2>>2]|0;
   $49 = ((($this)) + 32|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50 & 1;
   $52 = ($51<<24>>24)==(0);
   if ($52) {
    $55 = ((($49)) + 1|0);
    $57 = $55;
   } else {
    $53 = ((($this)) + 40|0);
    $54 = HEAP32[$53>>2]|0;
    $57 = $54;
   }
   $56 = $48;
   $58 = $57;
   $59 = (($56) - ($58))|0;
   $60 = ($59|0)<(0);
   $61 = $60 << 31 >> 31;
   $71 = $59;$72 = $61;
  } else if ((($__way|0) == 1)) {
   $29 = $__wch & 8;
   $30 = ($29|0)==(0);
   if ($30) {
    $40 = HEAP32[$4>>2]|0;
    $41 = ((($this)) + 20|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = $40;
    $44 = $42;
    $45 = (($43) - ($44))|0;
    $46 = ($45|0)<(0);
    $47 = $46 << 31 >> 31;
    $71 = $45;$72 = $47;
    break;
   } else {
    $31 = ((($this)) + 12|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ((($this)) + 8|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = $32;
    $36 = $34;
    $37 = (($35) - ($36))|0;
    $38 = ($37|0)<(0);
    $39 = $38 << 31 >> 31;
    $71 = $37;$72 = $39;
    break;
   }
  } else if ((($__way|0) == 0)) {
   $71 = 0;$72 = 0;
  } else {
   $62 = $agg$result;
   $63 = $62;
   HEAP32[$63>>2] = 0;
   $64 = (($62) + 4)|0;
   $65 = $64;
   HEAP32[$65>>2] = 0;
   $66 = ((($agg$result)) + 8|0);
   $67 = $66;
   $68 = $67;
   HEAP32[$68>>2] = -1;
   $69 = (($67) + 4)|0;
   $70 = $69;
   HEAP32[$70>>2] = -1;
   return;
  }
 } while(0);
 $73 = (_i64Add(($71|0),($72|0),($0|0),($1|0))|0);
 $74 = tempRet0;
 $75 = ($74|0)<(0);
 if (!($75)) {
  $76 = HEAP32[$2>>2]|0;
  $77 = ((($this)) + 32|0);
  $78 = HEAP8[$77>>0]|0;
  $79 = $78 & 1;
  $80 = ($79<<24>>24)==(0);
  if ($80) {
   $83 = ((($77)) + 1|0);
   $85 = $83;
  } else {
   $81 = ((($this)) + 40|0);
   $82 = HEAP32[$81>>2]|0;
   $85 = $82;
  }
  $84 = $76;
  $86 = $85;
  $87 = (($84) - ($86))|0;
  $88 = ($87|0)<(0);
  $89 = $88 << 31 >> 31;
  $90 = ($89|0)<($74|0);
  $91 = ($87>>>0)<($73>>>0);
  $92 = ($89|0)==($74|0);
  $93 = $92 & $91;
  $94 = $90 | $93;
  if (!($94)) {
   $104 = ($73|0)==(0);
   $105 = ($74|0)==(0);
   $106 = $104 & $105;
   if (!($106)) {
    $107 = $__wch & 8;
    $108 = ($107|0)==(0);
    if (!($108)) {
     $109 = ((($this)) + 12|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $112 = $agg$result;
      $113 = $112;
      HEAP32[$113>>2] = 0;
      $114 = (($112) + 4)|0;
      $115 = $114;
      HEAP32[$115>>2] = 0;
      $116 = ((($agg$result)) + 8|0);
      $117 = $116;
      $118 = $117;
      HEAP32[$118>>2] = -1;
      $119 = (($117) + 4)|0;
      $120 = $119;
      HEAP32[$120>>2] = -1;
      return;
     }
    }
    $121 = $__wch & 16;
    $122 = ($121|0)==(0);
    if (!($122)) {
     $123 = HEAP32[$4>>2]|0;
     $124 = ($123|0)==(0|0);
     if ($124) {
      $125 = $agg$result;
      $126 = $125;
      HEAP32[$126>>2] = 0;
      $127 = (($125) + 4)|0;
      $128 = $127;
      HEAP32[$128>>2] = 0;
      $129 = ((($agg$result)) + 8|0);
      $130 = $129;
      $131 = $130;
      HEAP32[$131>>2] = -1;
      $132 = (($130) + 4)|0;
      $133 = $132;
      HEAP32[$133>>2] = -1;
      return;
     }
    }
   }
   $134 = $__wch & 8;
   $135 = ($134|0)==(0);
   if (!($135)) {
    $136 = ((($this)) + 8|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = (($137) + ($73)|0);
    $139 = HEAP32[$2>>2]|0;
    $140 = ((($this)) + 12|0);
    HEAP32[$140>>2] = $138;
    $141 = ((($this)) + 16|0);
    HEAP32[$141>>2] = $139;
   }
   $142 = $__wch & 16;
   $143 = ($142|0)==(0);
   if (!($143)) {
    $144 = ((($this)) + 20|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = ((($this)) + 28|0);
    $147 = HEAP32[$146>>2]|0;
    HEAP32[$4>>2] = $145;
    HEAP32[$144>>2] = $145;
    HEAP32[$146>>2] = $147;
    $148 = HEAP32[$4>>2]|0;
    $149 = (($148) + ($73)|0);
    HEAP32[$4>>2] = $149;
   }
   $150 = $agg$result;
   $151 = $150;
   HEAP32[$151>>2] = 0;
   $152 = (($150) + 4)|0;
   $153 = $152;
   HEAP32[$153>>2] = 0;
   $154 = ((($agg$result)) + 8|0);
   $155 = $154;
   $156 = $155;
   HEAP32[$156>>2] = $73;
   $157 = (($155) + 4)|0;
   $158 = $157;
   HEAP32[$158>>2] = $74;
   return;
  }
 }
 $95 = $agg$result;
 $96 = $95;
 HEAP32[$96>>2] = 0;
 $97 = (($95) + 4)|0;
 $98 = $97;
 HEAP32[$98>>2] = 0;
 $99 = ((($agg$result)) + 8|0);
 $100 = $99;
 $101 = $100;
 HEAP32[$101>>2] = -1;
 $102 = (($100) + 4)|0;
 $103 = $102;
 HEAP32[$103>>2] = -1;
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$__sp,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__sp = $__sp|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__sp)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 FUNCTION_TABLE_viiiiii[$2 & 7]($agg$result,$this,$6,$9,0,$__wch);
 return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  HEAP32[$0>>2] = $3;
 }
 $5 = ((($this)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $$0 = -1;
  return ($$0|0);
 }
 $9 = ((($this)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = ($10>>>0)<($11>>>0);
 if ($12) {
  $13 = ((($this)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($this)) + 12|0);
  $16 = HEAP32[$15>>2]|0;
  HEAP32[$13>>2] = $14;
  HEAP32[$15>>2] = $16;
  HEAP32[$9>>2] = $11;
 }
 $17 = ((($this)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$9>>2]|0;
 $20 = ($18>>>0)<($19>>>0);
 if (!($20)) {
  $$0 = -1;
  return ($$0|0);
 }
 $21 = HEAP8[$18>>0]|0;
 $22 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($21)|0);
 $$0 = $22;
 return ($$0|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  HEAP32[$0>>2] = $3;
 }
 $5 = ((($this)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($this)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($6>>>0)<($8>>>0);
 if (!($9)) {
  $$0 = -1;
  return ($$0|0);
 }
 $10 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 if ($10) {
  $11 = ((($8)) + -1|0);
  $12 = HEAP32[$0>>2]|0;
  HEAP32[$5>>2] = $6;
  HEAP32[$7>>2] = $11;
  $13 = ((($this)) + 16|0);
  HEAP32[$13>>2] = $12;
  $14 = (__ZNSt3__111char_traitsIcE7not_eofEi($__c)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = ((($this)) + 48|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16 & 16;
 $18 = ($17|0)==(0);
 if ($18) {
  $19 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($__c)|0);
  $20 = ((($8)) + -1|0);
  $21 = HEAP8[$20>>0]|0;
  $22 = (__ZNSt3__111char_traitsIcE2eqEcc($19,$21)|0);
  if (!($22)) {
   $$0 = -1;
   return ($$0|0);
  }
 }
 $23 = HEAP32[$5>>2]|0;
 $24 = HEAP32[$7>>2]|0;
 $25 = ((($24)) + -1|0);
 $26 = HEAP32[$0>>2]|0;
 HEAP32[$5>>2] = $23;
 HEAP32[$7>>2] = $25;
 $27 = ((($this)) + 16|0);
 HEAP32[$27>>2] = $26;
 $28 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($__c)|0);
 $29 = HEAP32[$7>>2]|0;
 HEAP8[$29>>0] = $28;
 $$0 = $__c;
 return ($$0|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 if ($1) {
  $87 = (__ZNSt3__111char_traitsIcE7not_eofEi($__c)|0);
  $$0 = $87;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ((($this)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($this)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = ((($this)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($this)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10|0)==($12|0);
 if ($13) {
  $14 = ((($this)) + 48|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = $15 & 16;
  $17 = ($16|0)==(0);
  if ($17) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
  $18 = ((($this)) + 20|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = $10;
  $21 = $19;
  $22 = (($20) - ($21))|0;
  $23 = ((($this)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = $24;
  $26 = (($25) - ($21))|0;
  $27 = ((($this)) + 32|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($27,0);
  $28 = HEAP8[$27>>0]|0;
  $29 = $28 & 1;
  $30 = ($29<<24>>24)==(0);
  if ($30) {
   $33 = 10;
  } else {
   $31 = HEAP32[$27>>2]|0;
   $32 = $31 & -2;
   $phitmp$i = (($32) + -1)|0;
   $33 = $phitmp$i;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($27,$33,0);
  $34 = HEAP8[$27>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  if ($36) {
   $39 = ((($27)) + 1|0);
   $48 = $39;
  } else {
   $37 = ((($this)) + 40|0);
   $38 = HEAP32[$37>>2]|0;
   $48 = $38;
  }
  $40 = HEAP8[$27>>0]|0;
  $41 = $40 & 1;
  $42 = ($41<<24>>24)==(0);
  if ($42) {
   $45 = $40&255;
   $46 = $45 >>> 1;
   $49 = $46;
  } else {
   $43 = ((($this)) + 36|0);
   $44 = HEAP32[$43>>2]|0;
   $49 = $44;
  }
  $47 = (($48) + ($49)|0);
  HEAP32[$9>>2] = $48;
  HEAP32[$18>>2] = $48;
  HEAP32[$11>>2] = $47;
  $50 = HEAP32[$9>>2]|0;
  $51 = (($50) + ($22)|0);
  HEAP32[$9>>2] = $51;
  $52 = HEAP32[$18>>2]|0;
  $53 = (($52) + ($26)|0);
  HEAP32[$23>>2] = $53;
 }
 $54 = HEAP32[$9>>2]|0;
 $55 = ((($54)) + 1|0);
 HEAP32[$0>>2] = $55;
 $56 = ((($this)) + 44|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = ($55>>>0)<($57>>>0);
 $59 = $58 ? $56 : $0;
 $60 = HEAP32[$59>>2]|0;
 HEAP32[$56>>2] = $60;
 $61 = ((($this)) + 48|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = $62 & 8;
 $64 = ($63|0)==(0);
 if (!($64)) {
  $65 = ((($this)) + 32|0);
  $66 = HEAP8[$65>>0]|0;
  $67 = $66 & 1;
  $68 = ($67<<24>>24)==(0);
  if ($68) {
   $71 = ((($65)) + 1|0);
   $73 = $71;
  } else {
   $69 = ((($this)) + 40|0);
   $70 = HEAP32[$69>>2]|0;
   $73 = $70;
  }
  $72 = (($73) + ($8)|0);
  $74 = HEAP32[$56>>2]|0;
  HEAP32[$4>>2] = $73;
  HEAP32[$2>>2] = $72;
  $75 = ((($this)) + 16|0);
  HEAP32[$75>>2] = $74;
 }
 $76 = $__c&255;
 $77 = HEAP32[$9>>2]|0;
 $78 = HEAP32[$11>>2]|0;
 $79 = ($77|0)==($78|0);
 if ($79) {
  $80 = HEAP32[$this>>2]|0;
  $81 = ((($80)) + 52|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($76)|0);
  $84 = (FUNCTION_TABLE_iii[$82 & 15]($this,$83)|0);
  $$0 = $84;
  STACKTOP = sp;return ($$0|0);
 } else {
  $85 = ((($77)) + 1|0);
  HEAP32[$9>>2] = $85;
  HEAP8[$77>>0] = $76;
  $86 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($76)|0);
  $$0 = $86;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE11to_int_typeEc($__c) {
 $__c = $__c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__c&255;
 return ($0|0);
}
function __ZNSt3__111char_traitsIcE7not_eofEi($__c) {
 $__c = $__c|0;
 var $$__c = 0, $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($__c,-1)|0);
 $$__c = $0 ? 0 : $__c;
 return ($$__c|0);
}
function __ZNSt3__111char_traitsIcE12to_char_typeEi($__c) {
 $__c = $__c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__c&255;
 return ($0|0);
}
function __ZNSt3__111char_traitsIcE2eqEcc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c1<<24>>24)==($__c2<<24>>24);
 return ($0|0);
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
 return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
 return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($3);
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ($__n|0)==(0);
 if ($2) {
  return;
 }
 __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n);
 __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n);
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$promoted = 0, $0 = 0, $1 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$promoted = HEAP32[$0>>2]|0;
 $1 = $__n << 2;
 _memset(($$promoted|0),0,($1|0))|0;
 $scevgep = (($$promoted) + ($__n<<2)|0);
 HEAP32[$0>>2] = $scevgep;
 return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$0 = $__n;
 while(1) {
  $1 = HEAP32[$0>>2]|0;
  __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($1);
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 24|0);
  HEAP32[$0>>2] = $3;
  $4 = (($$0) + -1)|0;
  $5 = ($4|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;
  }
 }
 return;
}
function __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 ;HEAP32[$this>>2]=0|0;HEAP32[$this+4>>2]=0|0;HEAP32[$this+8>>2]=0|0;HEAP32[$this+12>>2]=0|0;
 HEAP8[$0>>0] = -1;
 $1 = ((($this)) + 18|0);
 HEAP8[$1>>0] = 1;
 $2 = ((($this)) + 19|0);
 ;HEAP8[$2>>0]=255|0;HEAP8[$2+1>>0]=255|0;HEAP8[$2+2>>0]=255|0;HEAP8[$2+3>>0]=255|0;HEAP8[$2+4>>0]=255|0;
 return;
}
function __Z13IKatan2Simpledd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+Math_atan2((+$fy),(+$fx)));
 return (+$0);
}
function __ZN8IKSolver10polyroots7EPdS0_Ri($rawcoeffs,$rawroots,$numroots) {
 $rawcoeffs = $rawcoeffs|0;
 $rawroots = $rawroots|0;
 $numroots = $numroots|0;
 var $$lcssa = 0.0, $$lcssa95 = 0.0, $$ph$lcssa = 0.0, $$ph15$lcssa = 0.0, $$ph1530 = 0.0, $$ph29 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0.0, $136 = 0, $137 = 0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0;
 var $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0;
 var $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0.0, $184 = 0, $185 = 0.0, $186 = 0, $187 = 0.0, $188 = 0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0.0, $196 = 0.0, $197 = 0, $198 = 0.0, $199 = 0.0;
 var $2 = 0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0, $203 = 0.0, $204 = 0.0, $205 = 0.0, $206 = 0.0, $207 = 0.0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0.0, $216 = 0;
 var $217 = 0.0, $218 = 0, $219 = 0.0, $22 = 0, $220 = 0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0, $225 = 0, $226 = 0.0, $227 = 0, $228 = 0.0, $229 = 0.0, $23 = 0, $230 = 0.0, $231 = 0, $232 = 0.0, $233 = 0.0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0.0, $239 = 0.0, $24 = 0, $240 = 0.0, $241 = 0.0, $242 = 0.0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0.0, $248 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0.0, $64 = 0.0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0;
 var $84 = 0.0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $changed$0$off040 = 0, $changed$1$off0 = 0, $changed$1$off0$lcssa = 0;
 var $coeffs = 0, $err = 0, $exitcond = 0, $exitcond57 = 0, $exitcond58 = 0, $i2$041 = 0, $i4$036 = 0, $j3$038 = 0, $j5$0 = 0, $j5$021 = 0, $j5$02128 = 0, $j5$02132 = 0, $j5$022 = 0, $j5$022$lcssa = 0, $n$0$ph$lcssa = 0, $n$0$ph31 = 0, $or$cond = 0, $phitmp$i = 0, $roots = 0, $step$043 = 0;
 var $visited = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $0 = sp + 472|0;
 $1 = sp + 328|0;
 $2 = sp + 488|0;
 $coeffs = sp + 216|0;
 $roots = sp + 104|0;
 $err = sp + 48|0;
 $3 = sp + 32|0;
 $x = sp + 16|0;
 $4 = sp;
 $visited = sp + 500|0;
 $5 = +HEAPF64[$rawcoeffs>>3];
 $6 = $5 == 0.0;
 if ($6) {
  $7 = ((($rawcoeffs)) + 8|0);
  __ZN8IKSolver10polyroots6EPdS0_Ri($7,$rawroots,$numroots);
  STACKTOP = sp;return;
 }
 $8 = $5 != 0.0;
 if (!($8)) {
  $9 = ((($1)) + 64|0);
  $10 = ((($1)) + 8|0);
  HEAP32[$10>>2] = (896);
  $11 = ((($1)) + 12|0);
  HEAP32[$1>>2] = ((940));
  HEAP32[$9>>2] = ((960));
  $12 = ((($1)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = HEAP32[$1>>2]|0;
  $14 = ((($13)) + -12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($1) + ($15)|0);
  __ZNSt3__18ios_base4initEPv($16,$11);
  $17 = ((($1)) + 64|0);
  $$sum$i$i$i = (($15) + 72)|0;
  $18 = (($1) + ($$sum$i$i$i)|0);
  HEAP32[$18>>2] = 0;
  $$sum1$i$i$i = (($15) + 76)|0;
  $19 = (($1) + ($$sum1$i$i$i)|0);
  HEAP32[$19>>2] = -1;
  HEAP32[$1>>2] = (876);
  HEAP32[$17>>2] = (916);
  HEAP32[$10>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($11);
  HEAP32[$11>>2] = (976);
  $20 = ((($1)) + 44|0);
  $21 = ((($1)) + 60|0);
  ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;HEAP32[$20+12>>2]=0|0;
  HEAP32[$21>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($11,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $22 = ((($1)) + 8|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1072)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1096)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1128)|0);
  $26 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($25,8925)|0);
  $27 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($26,1136)|0);
  $28 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($27,1600)|0);
  $29 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($28,1152)|0);
  $30 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($29,1576)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($30,1232)|0);
  $31 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($2,$11);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($31,$2);
  ___cxa_throw(($31|0),(2048|0),(35|0));
  // unreachable;
 }
 $32 = ((($coeffs)) + 24|0);
 ;HEAP32[$coeffs>>2]=0|0;HEAP32[$coeffs+4>>2]=0|0;HEAP32[$coeffs+8>>2]=0|0;HEAP32[$coeffs+12>>2]=0|0;
 $33 = ((($coeffs)) + 40|0);
 $34 = $32;
 $35 = $34;
 HEAP32[$35>>2] = 0;
 $36 = (($34) + 4)|0;
 $37 = $36;
 HEAP32[$37>>2] = 0;
 $38 = ((($coeffs)) + 56|0);
 $39 = $33;
 $40 = $39;
 HEAP32[$40>>2] = 0;
 $41 = (($39) + 4)|0;
 $42 = $41;
 HEAP32[$42>>2] = 0;
 $43 = ((($coeffs)) + 72|0);
 $44 = $38;
 $45 = $44;
 HEAP32[$45>>2] = 0;
 $46 = (($44) + 4)|0;
 $47 = $46;
 HEAP32[$47>>2] = 0;
 $48 = ((($coeffs)) + 88|0);
 $49 = $43;
 $50 = $49;
 HEAP32[$50>>2] = 0;
 $51 = (($49) + 4)|0;
 $52 = $51;
 HEAP32[$52>>2] = 0;
 $53 = $48;
 $54 = $53;
 HEAP32[$54>>2] = 0;
 $55 = (($53) + 4)|0;
 $56 = $55;
 HEAP32[$56>>2] = 0;
 $57 = +HEAPF64[$rawcoeffs>>3];
 $58 = ((($rawcoeffs)) + 8|0);
 $59 = +HEAPF64[$58>>3];
 $60 = $59 / $57;
 HEAPF64[$coeffs>>3] = $60;
 $61 = ((($coeffs)) + 8|0);
 HEAPF64[$61>>3] = 0.0;
 $62 = ((($rawcoeffs)) + 16|0);
 $63 = +HEAPF64[$62>>3];
 $64 = $63 / $57;
 $65 = ((($coeffs)) + 16|0);
 HEAPF64[$65>>3] = $64;
 $66 = ((($coeffs)) + 24|0);
 HEAPF64[$66>>3] = 0.0;
 $67 = ((($rawcoeffs)) + 24|0);
 $68 = +HEAPF64[$67>>3];
 $69 = $68 / $57;
 $70 = ((($coeffs)) + 32|0);
 HEAPF64[$70>>3] = $69;
 $71 = ((($coeffs)) + 40|0);
 HEAPF64[$71>>3] = 0.0;
 $72 = ((($rawcoeffs)) + 32|0);
 $73 = +HEAPF64[$72>>3];
 $74 = $73 / $57;
 $75 = ((($coeffs)) + 48|0);
 HEAPF64[$75>>3] = $74;
 $76 = ((($coeffs)) + 56|0);
 HEAPF64[$76>>3] = 0.0;
 $77 = ((($rawcoeffs)) + 40|0);
 $78 = +HEAPF64[$77>>3];
 $79 = $78 / $57;
 $80 = ((($coeffs)) + 64|0);
 HEAPF64[$80>>3] = $79;
 $81 = ((($coeffs)) + 72|0);
 HEAPF64[$81>>3] = 0.0;
 $82 = ((($rawcoeffs)) + 48|0);
 $83 = +HEAPF64[$82>>3];
 $84 = $83 / $57;
 $85 = ((($coeffs)) + 80|0);
 HEAPF64[$85>>3] = $84;
 $86 = ((($coeffs)) + 88|0);
 HEAPF64[$86>>3] = 0.0;
 $87 = ((($rawcoeffs)) + 56|0);
 $88 = +HEAPF64[$87>>3];
 $89 = $88 / $57;
 $90 = ((($coeffs)) + 96|0);
 HEAPF64[$90>>3] = $89;
 $91 = ((($coeffs)) + 104|0);
 HEAPF64[$91>>3] = 0.0;
 $92 = ((($roots)) + 24|0);
 ;HEAP32[$roots>>2]=0|0;HEAP32[$roots+4>>2]=0|0;HEAP32[$roots+8>>2]=0|0;HEAP32[$roots+12>>2]=0|0;
 $93 = ((($roots)) + 40|0);
 ;HEAP32[$92>>2]=0|0;HEAP32[$92+4>>2]=0|0;HEAP32[$92+8>>2]=0|0;HEAP32[$92+12>>2]=0|0;
 $94 = ((($roots)) + 56|0);
 ;HEAP32[$93>>2]=0|0;HEAP32[$93+4>>2]=0|0;HEAP32[$93+8>>2]=0|0;HEAP32[$93+12>>2]=0|0;
 $95 = ((($roots)) + 72|0);
 ;HEAP32[$94>>2]=0|0;HEAP32[$94+4>>2]=0|0;HEAP32[$94+8>>2]=0|0;HEAP32[$94+12>>2]=0|0;
 $96 = ((($roots)) + 88|0);
 ;HEAP32[$95>>2]=0|0;HEAP32[$95+4>>2]=0|0;HEAP32[$95+8>>2]=0|0;HEAP32[$95+12>>2]=0|0;
 $97 = ((($roots)) + 104|0);
 ;HEAP32[$96>>2]=0|0;HEAP32[$96+4>>2]=0|0;HEAP32[$96+8>>2]=0|0;HEAP32[$96+12>>2]=0|0;
 HEAPF64[$97>>3] = 0.0;
 HEAPF64[$roots>>3] = 1.0;
 $98 = ((($roots)) + 8|0);
 HEAPF64[$98>>3] = 0.0;
 $99 = ((($roots)) + 16|0);
 $100 = ((($roots)) + 16|0);
 HEAPF64[$100>>3] = 0.40000000000000002;
 $101 = ((($roots)) + 24|0);
 HEAPF64[$101>>3] = 0.90000000000000002;
 HEAPF64[$err>>3] = 1.0;
 $102 = ((($err)) + 8|0);
 HEAPF64[$102>>3] = 1.0;
 $103 = ((($roots)) + 32|0);
 $104 = ((($roots)) + 16|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$104,$99);
 ;HEAP32[$103>>2]=HEAP32[$3>>2]|0;HEAP32[$103+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$103+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$103+12>>2]=HEAP32[$3+12>>2]|0;
 $105 = ((($err)) + 16|0);
 HEAPF64[$105>>3] = 1.0;
 $106 = ((($roots)) + 48|0);
 $107 = ((($roots)) + 32|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$107,$99);
 ;HEAP32[$106>>2]=HEAP32[$3>>2]|0;HEAP32[$106+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$106+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$106+12>>2]=HEAP32[$3+12>>2]|0;
 $108 = ((($err)) + 24|0);
 HEAPF64[$108>>3] = 1.0;
 $109 = ((($roots)) + 64|0);
 $110 = ((($roots)) + 48|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$110,$99);
 ;HEAP32[$109>>2]=HEAP32[$3>>2]|0;HEAP32[$109+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$109+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$109+12>>2]=HEAP32[$3+12>>2]|0;
 $111 = ((($err)) + 32|0);
 HEAPF64[$111>>3] = 1.0;
 $112 = ((($roots)) + 80|0);
 $113 = ((($roots)) + 64|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$113,$99);
 ;HEAP32[$112>>2]=HEAP32[$3>>2]|0;HEAP32[$112+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$112+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$112+12>>2]=HEAP32[$3+12>>2]|0;
 $114 = ((($err)) + 40|0);
 HEAPF64[$114>>3] = 1.0;
 $115 = ((($roots)) + 96|0);
 $116 = ((($roots)) + 80|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$116,$99);
 ;HEAP32[$115>>2]=HEAP32[$3>>2]|0;HEAP32[$115+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$115+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$115+12>>2]=HEAP32[$3+12>>2]|0;
 $117 = ((($err)) + 48|0);
 HEAPF64[$117>>3] = 1.0;
 $118 = ((($coeffs)) + 8|0);
 $119 = ((($x)) + 8|0);
 $120 = ((($4)) + 8|0);
 $121 = ((($1)) + 8|0);
 $122 = ((($coeffs)) + 16|0);
 $123 = ((($coeffs)) + 24|0);
 $124 = ((($coeffs)) + 32|0);
 $125 = ((($coeffs)) + 40|0);
 $126 = ((($coeffs)) + 48|0);
 $127 = ((($coeffs)) + 56|0);
 $128 = ((($coeffs)) + 64|0);
 $129 = ((($coeffs)) + 72|0);
 $130 = ((($coeffs)) + 80|0);
 $131 = ((($coeffs)) + 88|0);
 $132 = ((($coeffs)) + 96|0);
 $133 = ((($coeffs)) + 104|0);
 $step$043 = 0;
 while(1) {
  $changed$0$off040 = 0;$i2$041 = 0;
  while(1) {
   $134 = (($err) + ($i2$041<<3)|0);
   $135 = +HEAPF64[$134>>3];
   $136 = !($135 >= 2.8421709430404007E-14);
   if ($136) {
    $changed$1$off0 = $changed$0$off040;
   } else {
    $137 = (($roots) + ($i2$041<<4)|0);
    ;HEAP32[$x>>2]=HEAP32[$137>>2]|0;HEAP32[$x+4>>2]=HEAP32[$137+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$137+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$137+12>>2]|0;
    $138 = +HEAPF64[$coeffs>>3];
    $139 = +HEAPF64[$x>>3];
    $140 = $138 + $139;
    HEAPF64[$x>>3] = $140;
    $141 = +HEAPF64[$118>>3];
    $142 = +HEAPF64[$119>>3];
    $143 = $141 + $142;
    HEAPF64[$119>>3] = $143;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$137,$x);
    $144 = +HEAPF64[$4>>3];
    $145 = +HEAPF64[$120>>3];
    $146 = +HEAPF64[$122>>3];
    $147 = $144 + $146;
    $148 = +HEAPF64[$123>>3];
    $149 = $145 + $148;
    HEAPF64[$x>>3] = $147;
    HEAPF64[$119>>3] = $149;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$137,$x);
    $150 = +HEAPF64[$4>>3];
    $151 = +HEAPF64[$120>>3];
    $152 = +HEAPF64[$124>>3];
    $153 = $150 + $152;
    $154 = +HEAPF64[$125>>3];
    $155 = $151 + $154;
    HEAPF64[$x>>3] = $153;
    HEAPF64[$119>>3] = $155;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$137,$x);
    $156 = +HEAPF64[$4>>3];
    $157 = +HEAPF64[$120>>3];
    $158 = +HEAPF64[$126>>3];
    $159 = $156 + $158;
    $160 = +HEAPF64[$127>>3];
    $161 = $157 + $160;
    HEAPF64[$x>>3] = $159;
    HEAPF64[$119>>3] = $161;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$137,$x);
    $162 = +HEAPF64[$4>>3];
    $163 = +HEAPF64[$120>>3];
    $164 = +HEAPF64[$128>>3];
    $165 = $162 + $164;
    $166 = +HEAPF64[$129>>3];
    $167 = $163 + $166;
    HEAPF64[$x>>3] = $165;
    HEAPF64[$119>>3] = $167;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$137,$x);
    $168 = +HEAPF64[$4>>3];
    $169 = +HEAPF64[$120>>3];
    $170 = +HEAPF64[$130>>3];
    $171 = $168 + $170;
    $172 = +HEAPF64[$131>>3];
    $173 = $169 + $172;
    HEAPF64[$x>>3] = $171;
    HEAPF64[$119>>3] = $173;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$137,$x);
    $174 = +HEAPF64[$4>>3];
    $175 = +HEAPF64[$120>>3];
    $176 = +HEAPF64[$132>>3];
    $177 = $174 + $176;
    $178 = +HEAPF64[$133>>3];
    $179 = $175 + $178;
    HEAPF64[$x>>3] = $177;
    HEAPF64[$119>>3] = $179;
    $180 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $181 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $j3$038 = 0;
    while(1) {
     $182 = ($i2$041|0)==($j3$038|0);
     do {
      if (!($182)) {
       $183 = +HEAPF64[$137>>3];
       $184 = (($roots) + ($j3$038<<4)|0);
       $185 = +HEAPF64[$184>>3];
       $186 = $183 == $185;
       if ($186) {
        $187 = +HEAPF64[$180>>3];
        $188 = (((($roots) + ($j3$038<<4)|0)) + 8|0);
        $189 = +HEAPF64[$188>>3];
        $phitmp$i = $187 != $189;
        if (!($phitmp$i)) {
         break;
        }
       }
       $190 = +HEAPF64[$137>>3];
       $191 = +HEAPF64[$181>>3];
       $192 = +HEAPF64[$184>>3];
       $193 = $190 - $192;
       $194 = (((($roots) + ($j3$038<<4)|0)) + 8|0);
       $195 = +HEAPF64[$194>>3];
       $196 = $191 - $195;
       HEAPF64[$1>>3] = $193;
       HEAPF64[$121>>3] = $196;
       __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
       ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
      }
     } while(0);
     $197 = (($j3$038) + 1)|0;
     $exitcond57 = ($197|0)==(7);
     if ($exitcond57) {
      break;
     } else {
      $j3$038 = $197;
     }
    }
    $198 = +HEAPF64[$x>>3];
    $199 = +HEAPF64[$137>>3];
    $200 = $199 - $198;
    HEAPF64[$137>>3] = $200;
    $201 = +HEAPF64[$119>>3];
    $202 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $203 = +HEAPF64[$202>>3];
    $204 = $203 - $201;
    HEAPF64[$202>>3] = $204;
    $205 = +HEAPF64[$x>>3];
    $206 = +HEAPF64[$119>>3];
    $207 = (+_hypot($205,$206));
    HEAPF64[$134>>3] = $207;
    $changed$1$off0 = 1;
   }
   $208 = (($i2$041) + 1)|0;
   $exitcond58 = ($208|0)==(7);
   if ($exitcond58) {
    $changed$1$off0$lcssa = $changed$1$off0;
    break;
   } else {
    $changed$0$off040 = $changed$1$off0;$i2$041 = $208;
   }
  }
  $209 = (($step$043) + 1)|0;
  $210 = ($209|0)<(110);
  $or$cond = $changed$1$off0$lcssa & $210;
  if ($or$cond) {
   $step$043 = $209;
  } else {
   break;
  }
 }
 HEAP32[$numroots>>2] = 0;
 ;HEAP8[$visited>>0]=0|0;HEAP8[$visited+1>>0]=0|0;HEAP8[$visited+2>>0]=0|0;HEAP8[$visited+3>>0]=0|0;HEAP8[$visited+4>>0]=0|0;HEAP8[$visited+5>>0]=0|0;HEAP8[$visited+6>>0]=0|0;
 $i4$036 = 0;
 while(1) {
  $211 = (($visited) + ($i4$036)|0);
  $212 = HEAP8[$211>>0]|0;
  $213 = ($212<<24>>24)==(0);
  if ($213) {
   $214 = (($roots) + ($i4$036<<4)|0);
   $215 = +HEAPF64[$214>>3];
   $216 = (((($roots) + ($i4$036<<4)|0)) + 8|0);
   $217 = +HEAPF64[$216>>3];
   $j5$02128 = (($i4$036) + 1)|0;
   $218 = ($j5$02128|0)<(7);
   if ($218) {
    $219 = +HEAPF64[$214>>3];
    $$ph1530 = $215;$$ph29 = $217;$j5$02132 = $j5$02128;$n$0$ph31 = 1;
    L32: while(1) {
     $j5$022 = $j5$02132;
     while(1) {
      $220 = (($roots) + ($j5$022<<4)|0);
      $221 = +HEAPF64[$220>>3];
      $222 = $219 - $221;
      $223 = (+Math_abs((+$222)));
      $224 = $223 < 1.4901161193847656E-8;
      if ($224) {
       $226 = +HEAPF64[$216>>3];
       $227 = (((($roots) + ($j5$022<<4)|0)) + 8|0);
       $228 = +HEAPF64[$227>>3];
       $229 = $226 - $228;
       $230 = (+Math_abs((+$229)));
       $231 = $230 < 0.002;
       if ($231) {
        $$lcssa = $221;$$lcssa95 = $228;$j5$022$lcssa = $j5$022;
        break;
       }
      }
      $j5$0 = (($j5$022) + 1)|0;
      $225 = ($j5$0|0)<(7);
      if ($225) {
       $j5$022 = $j5$0;
      } else {
       $$ph$lcssa = $$ph29;$$ph15$lcssa = $$ph1530;$n$0$ph$lcssa = $n$0$ph31;
       break L32;
      }
     }
     $232 = $$ph1530 + $$lcssa;
     $233 = $$ph29 + $$lcssa95;
     $234 = (($n$0$ph31) + 1)|0;
     $235 = (($visited) + ($j5$022$lcssa)|0);
     HEAP8[$235>>0] = 1;
     $j5$021 = (($j5$022$lcssa) + 1)|0;
     $236 = ($j5$021|0)<(7);
     if ($236) {
      $$ph1530 = $232;$$ph29 = $233;$j5$02132 = $j5$021;$n$0$ph31 = $234;
     } else {
      $$ph$lcssa = $233;$$ph15$lcssa = $232;$n$0$ph$lcssa = $234;
      break;
     }
    }
    $237 = ($n$0$ph$lcssa|0)>(1);
    if ($237) {
     $238 = (+($n$0$ph$lcssa|0));
     $239 = $$ph15$lcssa / $238;
     $240 = $$ph$lcssa / $238;
     $241 = $240;$247 = $239;
    } else {
     $241 = $$ph$lcssa;$247 = $$ph15$lcssa;
    }
   } else {
    $241 = $217;$247 = $215;
   }
   $242 = (+__Z5IKabsd($241));
   $243 = $242 < 1.4901161193847656E-8;
   if ($243) {
    $244 = HEAP32[$numroots>>2]|0;
    $245 = (($244) + 1)|0;
    HEAP32[$numroots>>2] = $245;
    $246 = (($rawroots) + ($244<<3)|0);
    HEAPF64[$246>>3] = $247;
   }
  }
  $248 = (($i4$036) + 1)|0;
  $exitcond = ($248|0)==(7);
  if ($exitcond) {
   break;
  } else {
   $i4$036 = $248;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($agg$result,$__z,$__w) {
 $agg$result = $agg$result|0;
 $__z = $__z|0;
 $__w = $__w|0;
 var $0 = 0.0, $1 = 0, $10 = 0.0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0.0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0.0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0.0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0.0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0;
 var $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0, $18 = 0, $19 = 0, $2 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0.0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0.0, $49 = 0.0, $5 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0.0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0.0, $68 = 0, $69 = 0, $7 = 0.0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0.0, $80 = 0.0, $81 = 0.0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0, $__a$0 = 0.0, $__a$1 = 0.0, $__a$3 = 0.0;
 var $__a$4$ph = 0.0, $__b$0 = 0.0, $__b$3 = 0.0, $__b$4$ph = 0.0, $__c$0 = 0.0, $__c$1 = 0.0, $__c$3 = 0.0, $__c$4$ph = 0.0, $__d$1 = 0.0, $__d$4$ph = 0.0, $__recalc$0$off0 = 0, $__x$0 = 0.0, $__y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = +HEAPF64[$__z>>3];
 $1 = ((($__z)) + 8|0);
 $2 = +HEAPF64[$1>>3];
 $3 = +HEAPF64[$__w>>3];
 $4 = ((($__w)) + 8|0);
 $5 = +HEAPF64[$4>>3];
 $6 = $0 * $3;
 $7 = $2 * $5;
 $8 = $0 * $5;
 $9 = $2 * $3;
 $10 = $6 - $7;
 $11 = $9 + $8;
 $12 = (__Z13__DOUBLE_BITSd($10)|0);
 $13 = tempRet0;
 $14 = $13 & 2147483647;
 $15 = ($14>>>0)>(2146435072);
 $16 = ($12>>>0)>(0);
 $17 = ($14|0)==(2146435072);
 $18 = $17 & $16;
 $19 = $15 | $18;
 if (!($19)) {
  $__x$0 = $10;$__y$0 = $11;
  HEAPF64[$agg$result>>3] = $__x$0;
  $176 = ((($agg$result)) + 8|0);
  HEAPF64[$176>>3] = $__y$0;
  return;
 }
 $20 = (__Z13__DOUBLE_BITSd($11)|0);
 $21 = tempRet0;
 $22 = $21 & 2147483647;
 $23 = ($22>>>0)>(2146435072);
 $24 = ($20>>>0)>(0);
 $25 = ($22|0)==(2146435072);
 $26 = $25 & $24;
 $27 = $23 | $26;
 if (!($27)) {
  $__x$0 = $10;$__y$0 = $11;
  HEAPF64[$agg$result>>3] = $__x$0;
  $176 = ((($agg$result)) + 8|0);
  HEAPF64[$176>>3] = $__y$0;
  return;
 }
 $28 = (__Z13__DOUBLE_BITSd($0)|0);
 $29 = tempRet0;
 $30 = $29 & 2147483647;
 $31 = ($28|0)==(0);
 $32 = ($30|0)==(2146435072);
 $33 = $31 & $32;
 if ($33) {
  label = 5;
 } else {
  $34 = (__Z13__DOUBLE_BITSd($2)|0);
  $35 = tempRet0;
  $36 = $35 & 2147483647;
  $37 = ($34|0)==(0);
  $38 = ($36|0)==(2146435072);
  $39 = $37 & $38;
  if ($39) {
   label = 5;
  } else {
   $__a$0 = $0;$__b$0 = $2;$__c$1 = $3;$__d$1 = $5;$__recalc$0$off0 = 0;
  }
 }
 if ((label|0) == 5) {
  $40 = $33 ? 1.0 : 0.0;
  $41 = (+_copysign($40,$0));
  $42 = (__Z13__DOUBLE_BITSd($2)|0);
  $43 = tempRet0;
  $44 = $43 & 2147483647;
  $45 = ($42|0)==(0);
  $46 = ($44|0)==(2146435072);
  $47 = $45 & $46;
  $48 = $47 ? 1.0 : 0.0;
  $49 = (+_copysign($48,$2));
  $50 = (__Z13__DOUBLE_BITSd($3)|0);
  $51 = tempRet0;
  $52 = $51 & 2147483647;
  $53 = ($52>>>0)>(2146435072);
  $54 = ($50>>>0)>(0);
  $55 = ($52|0)==(2146435072);
  $56 = $55 & $54;
  $57 = $53 | $56;
  if ($57) {
   $58 = (+_copysign(0.0,$3));
   $__c$0 = $58;
  } else {
   $__c$0 = $3;
  }
  $59 = (__Z13__DOUBLE_BITSd($5)|0);
  $60 = tempRet0;
  $61 = $60 & 2147483647;
  $62 = ($61>>>0)>(2146435072);
  $63 = ($59>>>0)>(0);
  $64 = ($61|0)==(2146435072);
  $65 = $64 & $63;
  $66 = $62 | $65;
  if ($66) {
   $67 = (+_copysign(0.0,$5));
   $__a$0 = $41;$__b$0 = $49;$__c$1 = $__c$0;$__d$1 = $67;$__recalc$0$off0 = 1;
  } else {
   $__a$0 = $41;$__b$0 = $49;$__c$1 = $__c$0;$__d$1 = $5;$__recalc$0$off0 = 1;
  }
 }
 $68 = (__Z13__DOUBLE_BITSd($__c$1)|0);
 $69 = tempRet0;
 $70 = $69 & 2147483647;
 $71 = ($68|0)==(0);
 $72 = ($70|0)==(2146435072);
 $73 = $71 & $72;
 if ($73) {
  label = 11;
 } else {
  $74 = (__Z13__DOUBLE_BITSd($__d$1)|0);
  $75 = tempRet0;
  $76 = $75 & 2147483647;
  $77 = ($74|0)==(0);
  $78 = ($76|0)==(2146435072);
  $79 = $77 & $78;
  if ($79) {
   label = 11;
  } else {
   if ($__recalc$0$off0) {
    $__a$4$ph = $__a$0;$__b$4$ph = $__b$0;$__c$4$ph = $__c$1;$__d$4$ph = $__d$1;
   } else {
    $108 = (__Z13__DOUBLE_BITSd($6)|0);
    $109 = tempRet0;
    $110 = $109 & 2147483647;
    $111 = ($108|0)==(0);
    $112 = ($110|0)==(2146435072);
    $113 = $111 & $112;
    if (!($113)) {
     $114 = (__Z13__DOUBLE_BITSd($7)|0);
     $115 = tempRet0;
     $116 = $115 & 2147483647;
     $117 = ($114|0)==(0);
     $118 = ($116|0)==(2146435072);
     $119 = $117 & $118;
     if (!($119)) {
      $120 = (__Z13__DOUBLE_BITSd($8)|0);
      $121 = tempRet0;
      $122 = $121 & 2147483647;
      $123 = ($120|0)==(0);
      $124 = ($122|0)==(2146435072);
      $125 = $123 & $124;
      if (!($125)) {
       $126 = (__Z13__DOUBLE_BITSd($9)|0);
       $127 = tempRet0;
       $128 = $127 & 2147483647;
       $129 = ($126|0)==(0);
       $130 = ($128|0)==(2146435072);
       $131 = $129 & $130;
       if (!($131)) {
        $__x$0 = $10;$__y$0 = $11;
        HEAPF64[$agg$result>>3] = $__x$0;
        $176 = ((($agg$result)) + 8|0);
        HEAPF64[$176>>3] = $__y$0;
        return;
       }
      }
     }
    }
    $132 = (__Z13__DOUBLE_BITSd($__a$0)|0);
    $133 = tempRet0;
    $134 = $133 & 2147483647;
    $135 = ($134>>>0)>(2146435072);
    $136 = ($132>>>0)>(0);
    $137 = ($134|0)==(2146435072);
    $138 = $137 & $136;
    $139 = $135 | $138;
    if ($139) {
     $140 = (+_copysign(0.0,$__a$0));
     $__a$3 = $140;
    } else {
     $__a$3 = $__a$0;
    }
    $141 = (__Z13__DOUBLE_BITSd($__b$0)|0);
    $142 = tempRet0;
    $143 = $142 & 2147483647;
    $144 = ($143>>>0)>(2146435072);
    $145 = ($141>>>0)>(0);
    $146 = ($143|0)==(2146435072);
    $147 = $146 & $145;
    $148 = $144 | $147;
    if ($148) {
     $149 = (+_copysign(0.0,$__b$0));
     $__b$3 = $149;
    } else {
     $__b$3 = $__b$0;
    }
    $150 = (__Z13__DOUBLE_BITSd($__c$1)|0);
    $151 = tempRet0;
    $152 = $151 & 2147483647;
    $153 = ($152>>>0)>(2146435072);
    $154 = ($150>>>0)>(0);
    $155 = ($152|0)==(2146435072);
    $156 = $155 & $154;
    $157 = $153 | $156;
    if ($157) {
     $158 = (+_copysign(0.0,$__c$1));
     $__c$3 = $158;
    } else {
     $__c$3 = $__c$1;
    }
    $159 = (__Z13__DOUBLE_BITSd($__d$1)|0);
    $160 = tempRet0;
    $161 = $160 & 2147483647;
    $162 = ($161>>>0)>(2146435072);
    $163 = ($159>>>0)>(0);
    $164 = ($161|0)==(2146435072);
    $165 = $164 & $163;
    $166 = $162 | $165;
    if ($166) {
     $167 = (+_copysign(0.0,$__d$1));
     $__a$4$ph = $__a$3;$__b$4$ph = $__b$3;$__c$4$ph = $__c$3;$__d$4$ph = $167;
    } else {
     $__a$4$ph = $__a$3;$__b$4$ph = $__b$3;$__c$4$ph = $__c$3;$__d$4$ph = $__d$1;
    }
   }
  }
 }
 if ((label|0) == 11) {
  $80 = $73 ? 1.0 : 0.0;
  $81 = (+_copysign($80,$__c$1));
  $82 = (__Z13__DOUBLE_BITSd($__d$1)|0);
  $83 = tempRet0;
  $84 = $83 & 2147483647;
  $85 = ($82|0)==(0);
  $86 = ($84|0)==(2146435072);
  $87 = $85 & $86;
  $88 = $87 ? 1.0 : 0.0;
  $89 = (+_copysign($88,$__d$1));
  $90 = (__Z13__DOUBLE_BITSd($__a$0)|0);
  $91 = tempRet0;
  $92 = $91 & 2147483647;
  $93 = ($92>>>0)>(2146435072);
  $94 = ($90>>>0)>(0);
  $95 = ($92|0)==(2146435072);
  $96 = $95 & $94;
  $97 = $93 | $96;
  if ($97) {
   $98 = (+_copysign(0.0,$__a$0));
   $__a$1 = $98;
  } else {
   $__a$1 = $__a$0;
  }
  $99 = (__Z13__DOUBLE_BITSd($__b$0)|0);
  $100 = tempRet0;
  $101 = $100 & 2147483647;
  $102 = ($101>>>0)>(2146435072);
  $103 = ($99>>>0)>(0);
  $104 = ($101|0)==(2146435072);
  $105 = $104 & $103;
  $106 = $102 | $105;
  if ($106) {
   $107 = (+_copysign(0.0,$__b$0));
   $__a$4$ph = $__a$1;$__b$4$ph = $107;$__c$4$ph = $81;$__d$4$ph = $89;
  } else {
   $__a$4$ph = $__a$1;$__b$4$ph = $__b$0;$__c$4$ph = $81;$__d$4$ph = $89;
  }
 }
 $168 = $__c$4$ph * $__a$4$ph;
 $169 = $__d$4$ph * $__b$4$ph;
 $170 = $168 - $169;
 $171 = $170 * inf;
 $172 = $__d$4$ph * $__a$4$ph;
 $173 = $__c$4$ph * $__b$4$ph;
 $174 = $173 + $172;
 $175 = $174 * inf;
 $__x$0 = $171;$__y$0 = $175;
 HEAPF64[$agg$result>>3] = $__x$0;
 $176 = ((($agg$result)) + 8|0);
 HEAPF64[$176>>3] = $__y$0;
 return;
}
function __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($agg$result,$__z,$__w) {
 $agg$result = $agg$result|0;
 $__z = $__z|0;
 $__w = $__w|0;
 var $0 = 0.0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0;
 var $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0;
 var $28 = 0.0, $29 = 0, $3 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0.0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0.0, $7 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0.0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0.0, $__c$0 = 0.0;
 var $__d$0 = 0.0, $__ilogbw$0 = 0, $__x$0 = 0.0, $__y$0 = 0.0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = +HEAPF64[$__z>>3];
 $1 = ((($__z)) + 8|0);
 $2 = +HEAPF64[$1>>3];
 $3 = +HEAPF64[$__w>>3];
 $4 = ((($__w)) + 8|0);
 $5 = +HEAPF64[$4>>3];
 $6 = (+Math_abs((+$3)));
 $7 = (+Math_abs((+$5)));
 $8 = (+_fmax($6,$7));
 $9 = (+_logb($8));
 $10 = (__Z13__DOUBLE_BITSd($9)|0);
 $11 = tempRet0;
 $12 = $11 & 2146435072;
 $13 = ($12>>>0)<(2146435072);
 $14 = (0)<(0);
 $15 = ($12|0)==(2146435072);
 $16 = $15 & $14;
 $17 = $13 | $16;
 if ($17) {
  $18 = (~~(($9)));
  $19 = (0 - ($18))|0;
  $20 = (+_scalbn($3,$19));
  $21 = (+_scalbn($5,$19));
  $__c$0 = $20;$__d$0 = $21;$__ilogbw$0 = $18;
 } else {
  $__c$0 = $3;$__d$0 = $5;$__ilogbw$0 = 0;
 }
 $22 = $__c$0 * $__c$0;
 $23 = $__d$0 * $__d$0;
 $24 = $22 + $23;
 $25 = $0 * $__c$0;
 $26 = $2 * $__d$0;
 $27 = $25 + $26;
 $28 = $27 / $24;
 $29 = (0 - ($__ilogbw$0))|0;
 $30 = (+_scalbn($28,$29));
 $31 = $2 * $__c$0;
 $32 = $0 * $__d$0;
 $33 = $31 - $32;
 $34 = $33 / $24;
 $35 = (+_scalbn($34,$29));
 $36 = (__Z13__DOUBLE_BITSd($30)|0);
 $37 = tempRet0;
 $38 = $37 & 2147483647;
 $39 = ($38>>>0)>(2146435072);
 $40 = ($36>>>0)>(0);
 $41 = ($38|0)==(2146435072);
 $42 = $41 & $40;
 $43 = $39 | $42;
 if (!($43)) {
  $__x$0 = $30;$__y$0 = $35;
  HEAPF64[$agg$result>>3] = $__x$0;
  $158 = ((($agg$result)) + 8|0);
  HEAPF64[$158>>3] = $__y$0;
  return;
 }
 $44 = (__Z13__DOUBLE_BITSd($35)|0);
 $45 = tempRet0;
 $46 = $45 & 2147483647;
 $47 = ($46>>>0)>(2146435072);
 $48 = ($44>>>0)>(0);
 $49 = ($46|0)==(2146435072);
 $50 = $49 & $48;
 $51 = $47 | $50;
 if (!($51)) {
  $__x$0 = $30;$__y$0 = $35;
  HEAPF64[$agg$result>>3] = $__x$0;
  $158 = ((($agg$result)) + 8|0);
  HEAPF64[$158>>3] = $__y$0;
  return;
 }
 $52 = $24 == 0.0;
 do {
  if ($52) {
   $53 = (__Z13__DOUBLE_BITSd($0)|0);
   $54 = tempRet0;
   $55 = $54 & 2147483647;
   $56 = ($55>>>0)>(2146435072);
   $57 = ($53>>>0)>(0);
   $58 = ($55|0)==(2146435072);
   $59 = $58 & $57;
   $60 = $56 | $59;
   if ($60) {
    $61 = (__Z13__DOUBLE_BITSd($2)|0);
    $62 = tempRet0;
    $63 = $62 & 2147483647;
    $64 = ($63>>>0)>(2146435072);
    $65 = ($61>>>0)>(0);
    $66 = ($63|0)==(2146435072);
    $67 = $66 & $65;
    $68 = $64 | $67;
    if ($68) {
     break;
    }
   }
   $69 = (+_copysign(inf,$__c$0));
   $70 = $0 * $69;
   $71 = $2 * $69;
   $__x$0 = $70;$__y$0 = $71;
   HEAPF64[$agg$result>>3] = $__x$0;
   $158 = ((($agg$result)) + 8|0);
   HEAPF64[$158>>3] = $__y$0;
   return;
  }
 } while(0);
 $72 = (__Z13__DOUBLE_BITSd($0)|0);
 $73 = tempRet0;
 $74 = $73 & 2147483647;
 $75 = ($72|0)==(0);
 $76 = ($74|0)==(2146435072);
 $77 = $75 & $76;
 if ($77) {
  label = 11;
 } else {
  $78 = (__Z13__DOUBLE_BITSd($2)|0);
  $79 = tempRet0;
  $80 = $79 & 2147483647;
  $81 = ($78|0)==(0);
  $82 = ($80|0)==(2146435072);
  $83 = $81 & $82;
  if ($83) {
   label = 11;
  }
 }
 if ((label|0) == 11) {
  (__Z13__DOUBLE_BITSd($__c$0)|0);
  $84 = tempRet0;
  $85 = $84 & 2146435072;
  $86 = ($85>>>0)<(2146435072);
  $87 = (0)<(0);
  $88 = ($85|0)==(2146435072);
  $89 = $88 & $87;
  $90 = $86 | $89;
  if ($90) {
   (__Z13__DOUBLE_BITSd($__d$0)|0);
   $91 = tempRet0;
   $92 = $91 & 2146435072;
   $93 = ($92>>>0)<(2146435072);
   $94 = (0)<(0);
   $95 = ($92|0)==(2146435072);
   $96 = $95 & $94;
   $97 = $93 | $96;
   if ($97) {
    $98 = $77 ? 1.0 : 0.0;
    $99 = (+_copysign($98,$0));
    $100 = (__Z13__DOUBLE_BITSd($2)|0);
    $101 = tempRet0;
    $102 = $101 & 2147483647;
    $103 = ($100|0)==(0);
    $104 = ($102|0)==(2146435072);
    $105 = $103 & $104;
    $106 = $105 ? 1.0 : 0.0;
    $107 = (+_copysign($106,$2));
    $108 = $__c$0 * $99;
    $109 = $__d$0 * $107;
    $110 = $108 + $109;
    $111 = $110 * inf;
    $112 = $__c$0 * $107;
    $113 = $__d$0 * $99;
    $114 = $112 - $113;
    $115 = $114 * inf;
    $__x$0 = $111;$__y$0 = $115;
    HEAPF64[$agg$result>>3] = $__x$0;
    $158 = ((($agg$result)) + 8|0);
    HEAPF64[$158>>3] = $__y$0;
    return;
   }
  }
 }
 $116 = $11 & 2147483647;
 $117 = ($10|0)==(0);
 $118 = ($116|0)==(2146435072);
 $119 = $117 & $118;
 $120 = $9 > 0.0;
 $or$cond = $120 & $119;
 $121 = $73 & 2146435072;
 $122 = ($121>>>0)<(2146435072);
 $123 = (0)<(0);
 $124 = ($121|0)==(2146435072);
 $125 = $124 & $123;
 $126 = $122 | $125;
 $or$cond3 = $or$cond & $126;
 if (!($or$cond3)) {
  $__x$0 = $30;$__y$0 = $35;
  HEAPF64[$agg$result>>3] = $__x$0;
  $158 = ((($agg$result)) + 8|0);
  HEAPF64[$158>>3] = $__y$0;
  return;
 }
 (__Z13__DOUBLE_BITSd($2)|0);
 $127 = tempRet0;
 $128 = $127 & 2146435072;
 $129 = ($128>>>0)<(2146435072);
 $130 = (0)<(0);
 $131 = ($128|0)==(2146435072);
 $132 = $131 & $130;
 $133 = $129 | $132;
 if (!($133)) {
  $__x$0 = $30;$__y$0 = $35;
  HEAPF64[$agg$result>>3] = $__x$0;
  $158 = ((($agg$result)) + 8|0);
  HEAPF64[$158>>3] = $__y$0;
  return;
 }
 $134 = (__Z13__DOUBLE_BITSd($__c$0)|0);
 $135 = tempRet0;
 $136 = $135 & 2147483647;
 $137 = ($134|0)==(0);
 $138 = ($136|0)==(2146435072);
 $139 = $137 & $138;
 $140 = $139 ? 1.0 : 0.0;
 $141 = (+_copysign($140,$__c$0));
 $142 = (__Z13__DOUBLE_BITSd($__d$0)|0);
 $143 = tempRet0;
 $144 = $143 & 2147483647;
 $145 = ($142|0)==(0);
 $146 = ($144|0)==(2146435072);
 $147 = $145 & $146;
 $148 = $147 ? 1.0 : 0.0;
 $149 = (+_copysign($148,$__d$0));
 $150 = $0 * $141;
 $151 = $2 * $149;
 $152 = $150 + $151;
 $153 = $152 * 0.0;
 $154 = $2 * $141;
 $155 = $0 * $149;
 $156 = $154 - $155;
 $157 = $156 * 0.0;
 $__x$0 = $153;$__y$0 = $157;
 HEAPF64[$agg$result>>3] = $__x$0;
 $158 = ((($agg$result)) + 8|0);
 HEAPF64[$158>>3] = $__y$0;
 return;
}
function __ZN8IKSolver10polyroots6EPdS0_Ri($rawcoeffs,$rawroots,$numroots) {
 $rawcoeffs = $rawcoeffs|0;
 $rawroots = $rawroots|0;
 $numroots = $numroots|0;
 var $$lcssa = 0.0, $$lcssa95 = 0.0, $$ph$lcssa = 0.0, $$ph15$lcssa = 0.0, $$ph1530 = 0.0, $$ph29 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0;
 var $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0;
 var $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0.0, $162 = 0;
 var $163 = 0.0, $164 = 0, $165 = 0.0, $166 = 0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0.0, $174 = 0.0, $175 = 0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0;
 var $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0, $195 = 0.0, $196 = 0, $197 = 0.0, $198 = 0, $199 = 0.0;
 var $2 = 0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0, $203 = 0, $204 = 0.0, $205 = 0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0.0;
 var $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0.0, $226 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0.0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $changed$0$off040 = 0, $changed$1$off0 = 0, $changed$1$off0$lcssa = 0, $coeffs = 0, $err = 0;
 var $exitcond = 0, $exitcond57 = 0, $exitcond58 = 0, $i2$041 = 0, $i4$036 = 0, $j3$038 = 0, $j5$0 = 0, $j5$021 = 0, $j5$02128 = 0, $j5$02132 = 0, $j5$022 = 0, $j5$022$lcssa = 0, $n$0$ph$lcssa = 0, $n$0$ph31 = 0, $or$cond = 0, $phitmp$i = 0, $roots = 0, $step$043 = 0, $visited = 0, $x = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0;
 $0 = sp + 432|0;
 $1 = sp + 288|0;
 $2 = sp + 448|0;
 $coeffs = sp + 192|0;
 $roots = sp + 96|0;
 $err = sp + 48|0;
 $3 = sp + 32|0;
 $x = sp + 16|0;
 $4 = sp;
 $visited = sp + 460|0;
 $5 = +HEAPF64[$rawcoeffs>>3];
 $6 = $5 == 0.0;
 if ($6) {
  $7 = ((($rawcoeffs)) + 8|0);
  __ZN8IKSolver10polyroots5EPdS0_Ri($7,$rawroots,$numroots);
  STACKTOP = sp;return;
 }
 $8 = $5 != 0.0;
 if (!($8)) {
  $9 = ((($1)) + 64|0);
  $10 = ((($1)) + 8|0);
  HEAP32[$10>>2] = (896);
  $11 = ((($1)) + 12|0);
  HEAP32[$1>>2] = ((940));
  HEAP32[$9>>2] = ((960));
  $12 = ((($1)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = HEAP32[$1>>2]|0;
  $14 = ((($13)) + -12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($1) + ($15)|0);
  __ZNSt3__18ios_base4initEPv($16,$11);
  $17 = ((($1)) + 64|0);
  $$sum$i$i$i = (($15) + 72)|0;
  $18 = (($1) + ($$sum$i$i$i)|0);
  HEAP32[$18>>2] = 0;
  $$sum1$i$i$i = (($15) + 76)|0;
  $19 = (($1) + ($$sum1$i$i$i)|0);
  HEAP32[$19>>2] = -1;
  HEAP32[$1>>2] = (876);
  HEAP32[$17>>2] = (916);
  HEAP32[$10>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($11);
  HEAP32[$11>>2] = (976);
  $20 = ((($1)) + 44|0);
  $21 = ((($1)) + 60|0);
  ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;HEAP32[$20+12>>2]=0|0;
  HEAP32[$21>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($11,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $22 = ((($1)) + 8|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1072)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1096)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1128)|0);
  $26 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($25,9003)|0);
  $27 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($26,1136)|0);
  $28 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($27,1616)|0);
  $29 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($28,1152)|0);
  $30 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($29,1576)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($30,1232)|0);
  $31 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($2,$11);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($31,$2);
  ___cxa_throw(($31|0),(2048|0),(35|0));
  // unreachable;
 }
 $32 = ((($coeffs)) + 24|0);
 ;HEAP32[$coeffs>>2]=0|0;HEAP32[$coeffs+4>>2]=0|0;HEAP32[$coeffs+8>>2]=0|0;HEAP32[$coeffs+12>>2]=0|0;
 $33 = ((($coeffs)) + 40|0);
 $34 = $32;
 $35 = $34;
 HEAP32[$35>>2] = 0;
 $36 = (($34) + 4)|0;
 $37 = $36;
 HEAP32[$37>>2] = 0;
 $38 = ((($coeffs)) + 56|0);
 $39 = $33;
 $40 = $39;
 HEAP32[$40>>2] = 0;
 $41 = (($39) + 4)|0;
 $42 = $41;
 HEAP32[$42>>2] = 0;
 $43 = ((($coeffs)) + 72|0);
 $44 = $38;
 $45 = $44;
 HEAP32[$45>>2] = 0;
 $46 = (($44) + 4)|0;
 $47 = $46;
 HEAP32[$47>>2] = 0;
 $48 = $43;
 $49 = $48;
 HEAP32[$49>>2] = 0;
 $50 = (($48) + 4)|0;
 $51 = $50;
 HEAP32[$51>>2] = 0;
 $52 = +HEAPF64[$rawcoeffs>>3];
 $53 = ((($rawcoeffs)) + 8|0);
 $54 = +HEAPF64[$53>>3];
 $55 = $54 / $52;
 HEAPF64[$coeffs>>3] = $55;
 $56 = ((($coeffs)) + 8|0);
 HEAPF64[$56>>3] = 0.0;
 $57 = ((($rawcoeffs)) + 16|0);
 $58 = +HEAPF64[$57>>3];
 $59 = $58 / $52;
 $60 = ((($coeffs)) + 16|0);
 HEAPF64[$60>>3] = $59;
 $61 = ((($coeffs)) + 24|0);
 HEAPF64[$61>>3] = 0.0;
 $62 = ((($rawcoeffs)) + 24|0);
 $63 = +HEAPF64[$62>>3];
 $64 = $63 / $52;
 $65 = ((($coeffs)) + 32|0);
 HEAPF64[$65>>3] = $64;
 $66 = ((($coeffs)) + 40|0);
 HEAPF64[$66>>3] = 0.0;
 $67 = ((($rawcoeffs)) + 32|0);
 $68 = +HEAPF64[$67>>3];
 $69 = $68 / $52;
 $70 = ((($coeffs)) + 48|0);
 HEAPF64[$70>>3] = $69;
 $71 = ((($coeffs)) + 56|0);
 HEAPF64[$71>>3] = 0.0;
 $72 = ((($rawcoeffs)) + 40|0);
 $73 = +HEAPF64[$72>>3];
 $74 = $73 / $52;
 $75 = ((($coeffs)) + 64|0);
 HEAPF64[$75>>3] = $74;
 $76 = ((($coeffs)) + 72|0);
 HEAPF64[$76>>3] = 0.0;
 $77 = ((($rawcoeffs)) + 48|0);
 $78 = +HEAPF64[$77>>3];
 $79 = $78 / $52;
 $80 = ((($coeffs)) + 80|0);
 HEAPF64[$80>>3] = $79;
 $81 = ((($coeffs)) + 88|0);
 HEAPF64[$81>>3] = 0.0;
 $82 = ((($roots)) + 24|0);
 ;HEAP32[$roots>>2]=0|0;HEAP32[$roots+4>>2]=0|0;HEAP32[$roots+8>>2]=0|0;HEAP32[$roots+12>>2]=0|0;
 $83 = ((($roots)) + 40|0);
 ;HEAP32[$82>>2]=0|0;HEAP32[$82+4>>2]=0|0;HEAP32[$82+8>>2]=0|0;HEAP32[$82+12>>2]=0|0;
 $84 = ((($roots)) + 56|0);
 ;HEAP32[$83>>2]=0|0;HEAP32[$83+4>>2]=0|0;HEAP32[$83+8>>2]=0|0;HEAP32[$83+12>>2]=0|0;
 $85 = ((($roots)) + 72|0);
 ;HEAP32[$84>>2]=0|0;HEAP32[$84+4>>2]=0|0;HEAP32[$84+8>>2]=0|0;HEAP32[$84+12>>2]=0|0;
 $86 = ((($roots)) + 88|0);
 ;HEAP32[$85>>2]=0|0;HEAP32[$85+4>>2]=0|0;HEAP32[$85+8>>2]=0|0;HEAP32[$85+12>>2]=0|0;
 HEAPF64[$86>>3] = 0.0;
 HEAPF64[$roots>>3] = 1.0;
 $87 = ((($roots)) + 8|0);
 HEAPF64[$87>>3] = 0.0;
 $88 = ((($roots)) + 16|0);
 $89 = ((($roots)) + 16|0);
 HEAPF64[$89>>3] = 0.40000000000000002;
 $90 = ((($roots)) + 24|0);
 HEAPF64[$90>>3] = 0.90000000000000002;
 HEAPF64[$err>>3] = 1.0;
 $91 = ((($err)) + 8|0);
 HEAPF64[$91>>3] = 1.0;
 $92 = ((($roots)) + 32|0);
 $93 = ((($roots)) + 16|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$93,$88);
 ;HEAP32[$92>>2]=HEAP32[$3>>2]|0;HEAP32[$92+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$92+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$92+12>>2]=HEAP32[$3+12>>2]|0;
 $94 = ((($err)) + 16|0);
 HEAPF64[$94>>3] = 1.0;
 $95 = ((($roots)) + 48|0);
 $96 = ((($roots)) + 32|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$96,$88);
 ;HEAP32[$95>>2]=HEAP32[$3>>2]|0;HEAP32[$95+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$95+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$95+12>>2]=HEAP32[$3+12>>2]|0;
 $97 = ((($err)) + 24|0);
 HEAPF64[$97>>3] = 1.0;
 $98 = ((($roots)) + 64|0);
 $99 = ((($roots)) + 48|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$99,$88);
 ;HEAP32[$98>>2]=HEAP32[$3>>2]|0;HEAP32[$98+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$98+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$98+12>>2]=HEAP32[$3+12>>2]|0;
 $100 = ((($err)) + 32|0);
 HEAPF64[$100>>3] = 1.0;
 $101 = ((($roots)) + 80|0);
 $102 = ((($roots)) + 64|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$102,$88);
 ;HEAP32[$101>>2]=HEAP32[$3>>2]|0;HEAP32[$101+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$101+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$101+12>>2]=HEAP32[$3+12>>2]|0;
 $103 = ((($err)) + 40|0);
 HEAPF64[$103>>3] = 1.0;
 $104 = ((($coeffs)) + 8|0);
 $105 = ((($x)) + 8|0);
 $106 = ((($4)) + 8|0);
 $107 = ((($1)) + 8|0);
 $108 = ((($coeffs)) + 16|0);
 $109 = ((($coeffs)) + 24|0);
 $110 = ((($coeffs)) + 32|0);
 $111 = ((($coeffs)) + 40|0);
 $112 = ((($coeffs)) + 48|0);
 $113 = ((($coeffs)) + 56|0);
 $114 = ((($coeffs)) + 64|0);
 $115 = ((($coeffs)) + 72|0);
 $116 = ((($coeffs)) + 80|0);
 $117 = ((($coeffs)) + 88|0);
 $step$043 = 0;
 while(1) {
  $changed$0$off040 = 0;$i2$041 = 0;
  while(1) {
   $118 = (($err) + ($i2$041<<3)|0);
   $119 = +HEAPF64[$118>>3];
   $120 = !($119 >= 2.8421709430404007E-14);
   if ($120) {
    $changed$1$off0 = $changed$0$off040;
   } else {
    $121 = (($roots) + ($i2$041<<4)|0);
    ;HEAP32[$x>>2]=HEAP32[$121>>2]|0;HEAP32[$x+4>>2]=HEAP32[$121+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$121+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$121+12>>2]|0;
    $122 = +HEAPF64[$coeffs>>3];
    $123 = +HEAPF64[$x>>3];
    $124 = $122 + $123;
    HEAPF64[$x>>3] = $124;
    $125 = +HEAPF64[$104>>3];
    $126 = +HEAPF64[$105>>3];
    $127 = $125 + $126;
    HEAPF64[$105>>3] = $127;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$121,$x);
    $128 = +HEAPF64[$4>>3];
    $129 = +HEAPF64[$106>>3];
    $130 = +HEAPF64[$108>>3];
    $131 = $128 + $130;
    $132 = +HEAPF64[$109>>3];
    $133 = $129 + $132;
    HEAPF64[$x>>3] = $131;
    HEAPF64[$105>>3] = $133;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$121,$x);
    $134 = +HEAPF64[$4>>3];
    $135 = +HEAPF64[$106>>3];
    $136 = +HEAPF64[$110>>3];
    $137 = $134 + $136;
    $138 = +HEAPF64[$111>>3];
    $139 = $135 + $138;
    HEAPF64[$x>>3] = $137;
    HEAPF64[$105>>3] = $139;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$121,$x);
    $140 = +HEAPF64[$4>>3];
    $141 = +HEAPF64[$106>>3];
    $142 = +HEAPF64[$112>>3];
    $143 = $140 + $142;
    $144 = +HEAPF64[$113>>3];
    $145 = $141 + $144;
    HEAPF64[$x>>3] = $143;
    HEAPF64[$105>>3] = $145;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$121,$x);
    $146 = +HEAPF64[$4>>3];
    $147 = +HEAPF64[$106>>3];
    $148 = +HEAPF64[$114>>3];
    $149 = $146 + $148;
    $150 = +HEAPF64[$115>>3];
    $151 = $147 + $150;
    HEAPF64[$x>>3] = $149;
    HEAPF64[$105>>3] = $151;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$121,$x);
    $152 = +HEAPF64[$4>>3];
    $153 = +HEAPF64[$106>>3];
    $154 = +HEAPF64[$116>>3];
    $155 = $152 + $154;
    $156 = +HEAPF64[$117>>3];
    $157 = $153 + $156;
    HEAPF64[$x>>3] = $155;
    HEAPF64[$105>>3] = $157;
    $158 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $159 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $j3$038 = 0;
    while(1) {
     $160 = ($i2$041|0)==($j3$038|0);
     do {
      if (!($160)) {
       $161 = +HEAPF64[$121>>3];
       $162 = (($roots) + ($j3$038<<4)|0);
       $163 = +HEAPF64[$162>>3];
       $164 = $161 == $163;
       if ($164) {
        $165 = +HEAPF64[$158>>3];
        $166 = (((($roots) + ($j3$038<<4)|0)) + 8|0);
        $167 = +HEAPF64[$166>>3];
        $phitmp$i = $165 != $167;
        if (!($phitmp$i)) {
         break;
        }
       }
       $168 = +HEAPF64[$121>>3];
       $169 = +HEAPF64[$159>>3];
       $170 = +HEAPF64[$162>>3];
       $171 = $168 - $170;
       $172 = (((($roots) + ($j3$038<<4)|0)) + 8|0);
       $173 = +HEAPF64[$172>>3];
       $174 = $169 - $173;
       HEAPF64[$1>>3] = $171;
       HEAPF64[$107>>3] = $174;
       __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
       ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
      }
     } while(0);
     $175 = (($j3$038) + 1)|0;
     $exitcond57 = ($175|0)==(6);
     if ($exitcond57) {
      break;
     } else {
      $j3$038 = $175;
     }
    }
    $176 = +HEAPF64[$x>>3];
    $177 = +HEAPF64[$121>>3];
    $178 = $177 - $176;
    HEAPF64[$121>>3] = $178;
    $179 = +HEAPF64[$105>>3];
    $180 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $181 = +HEAPF64[$180>>3];
    $182 = $181 - $179;
    HEAPF64[$180>>3] = $182;
    $183 = +HEAPF64[$x>>3];
    $184 = +HEAPF64[$105>>3];
    $185 = (+_hypot($183,$184));
    HEAPF64[$118>>3] = $185;
    $changed$1$off0 = 1;
   }
   $186 = (($i2$041) + 1)|0;
   $exitcond58 = ($186|0)==(6);
   if ($exitcond58) {
    $changed$1$off0$lcssa = $changed$1$off0;
    break;
   } else {
    $changed$0$off040 = $changed$1$off0;$i2$041 = $186;
   }
  }
  $187 = (($step$043) + 1)|0;
  $188 = ($187|0)<(110);
  $or$cond = $changed$1$off0$lcssa & $188;
  if ($or$cond) {
   $step$043 = $187;
  } else {
   break;
  }
 }
 HEAP32[$numroots>>2] = 0;
 ;HEAP8[$visited>>0]=0|0;HEAP8[$visited+1>>0]=0|0;HEAP8[$visited+2>>0]=0|0;HEAP8[$visited+3>>0]=0|0;HEAP8[$visited+4>>0]=0|0;HEAP8[$visited+5>>0]=0|0;
 $i4$036 = 0;
 while(1) {
  $189 = (($visited) + ($i4$036)|0);
  $190 = HEAP8[$189>>0]|0;
  $191 = ($190<<24>>24)==(0);
  if ($191) {
   $192 = (($roots) + ($i4$036<<4)|0);
   $193 = +HEAPF64[$192>>3];
   $194 = (((($roots) + ($i4$036<<4)|0)) + 8|0);
   $195 = +HEAPF64[$194>>3];
   $j5$02128 = (($i4$036) + 1)|0;
   $196 = ($j5$02128|0)<(6);
   if ($196) {
    $197 = +HEAPF64[$192>>3];
    $$ph1530 = $193;$$ph29 = $195;$j5$02132 = $j5$02128;$n$0$ph31 = 1;
    L32: while(1) {
     $j5$022 = $j5$02132;
     while(1) {
      $198 = (($roots) + ($j5$022<<4)|0);
      $199 = +HEAPF64[$198>>3];
      $200 = $197 - $199;
      $201 = (+Math_abs((+$200)));
      $202 = $201 < 1.4901161193847656E-8;
      if ($202) {
       $204 = +HEAPF64[$194>>3];
       $205 = (((($roots) + ($j5$022<<4)|0)) + 8|0);
       $206 = +HEAPF64[$205>>3];
       $207 = $204 - $206;
       $208 = (+Math_abs((+$207)));
       $209 = $208 < 0.002;
       if ($209) {
        $$lcssa = $199;$$lcssa95 = $206;$j5$022$lcssa = $j5$022;
        break;
       }
      }
      $j5$0 = (($j5$022) + 1)|0;
      $203 = ($j5$0|0)<(6);
      if ($203) {
       $j5$022 = $j5$0;
      } else {
       $$ph$lcssa = $$ph29;$$ph15$lcssa = $$ph1530;$n$0$ph$lcssa = $n$0$ph31;
       break L32;
      }
     }
     $210 = $$ph1530 + $$lcssa;
     $211 = $$ph29 + $$lcssa95;
     $212 = (($n$0$ph31) + 1)|0;
     $213 = (($visited) + ($j5$022$lcssa)|0);
     HEAP8[$213>>0] = 1;
     $j5$021 = (($j5$022$lcssa) + 1)|0;
     $214 = ($j5$021|0)<(6);
     if ($214) {
      $$ph1530 = $210;$$ph29 = $211;$j5$02132 = $j5$021;$n$0$ph31 = $212;
     } else {
      $$ph$lcssa = $211;$$ph15$lcssa = $210;$n$0$ph$lcssa = $212;
      break;
     }
    }
    $215 = ($n$0$ph$lcssa|0)>(1);
    if ($215) {
     $216 = (+($n$0$ph$lcssa|0));
     $217 = $$ph15$lcssa / $216;
     $218 = $$ph$lcssa / $216;
     $219 = $218;$225 = $217;
    } else {
     $219 = $$ph$lcssa;$225 = $$ph15$lcssa;
    }
   } else {
    $219 = $195;$225 = $193;
   }
   $220 = (+__Z5IKabsd($219));
   $221 = $220 < 1.4901161193847656E-8;
   if ($221) {
    $222 = HEAP32[$numroots>>2]|0;
    $223 = (($222) + 1)|0;
    HEAP32[$numroots>>2] = $223;
    $224 = (($rawroots) + ($222<<3)|0);
    HEAPF64[$224>>3] = $225;
   }
  }
  $226 = (($i4$036) + 1)|0;
  $exitcond = ($226|0)==(6);
  if ($exitcond) {
   break;
  } else {
   $i4$036 = $226;
  }
 }
 STACKTOP = sp;return;
}
function __ZN8IKSolver10polyroots5EPdS0_Ri($rawcoeffs,$rawroots,$numroots) {
 $rawcoeffs = $rawcoeffs|0;
 $rawroots = $rawroots|0;
 $numroots = $numroots|0;
 var $$lcssa = 0.0, $$lcssa99 = 0.0, $$ph$lcssa = 0.0, $$ph15$lcssa = 0.0, $$ph1530 = 0.0, $$ph29 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0.0, $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0;
 var $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0;
 var $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0.0, $154 = 0.0, $155 = 0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0;
 var $163 = 0.0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0.0, $173 = 0, $174 = 0.0, $175 = 0, $176 = 0.0, $177 = 0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0;
 var $181 = 0, $182 = 0, $183 = 0.0, $184 = 0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0.0, $199 = 0.0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0.0, $205 = 0, $206 = 0.0, $207 = 0.0, $208 = 0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = 0.0;
 var $217 = 0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0.0, $225 = 0.0, $226 = 0.0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0.0, $231 = 0.0, $232 = 0, $233 = 0.0, $234 = 0.0;
 var $235 = 0.0, $236 = 0.0, $237 = 0.0, $238 = 0.0, $239 = 0.0, $24 = 0, $240 = 0.0, $241 = 0, $242 = 0.0, $243 = 0.0, $244 = 0, $245 = 0.0, $246 = 0.0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0, $250 = 0.0, $251 = 0.0, $252 = 0.0;
 var $253 = 0.0, $254 = 0.0, $255 = 0.0, $256 = 0.0, $257 = 0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0.0, $261 = 0.0, $262 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0.0, $5 = 0.0, $50 = 0.0, $51 = 0, $52 = 0;
 var $53 = 0.0, $54 = 0.0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $changed$0$off040 = 0, $changed$1$off0 = 0, $changed$1$off0$lcssa = 0, $coeffs = 0, $err = 0, $exitcond = 0, $exitcond58 = 0, $i2$041 = 0, $i4$036 = 0;
 var $j5$0 = 0, $j5$021 = 0, $j5$02128 = 0, $j5$02132 = 0, $j5$022 = 0, $j5$022$lcssa = 0, $n$0$ph$lcssa = 0, $n$0$ph31 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i$1 = 0, $phitmp$i$2 = 0, $phitmp$i$3 = 0, $phitmp$i$4 = 0, $roots = 0, $step$043 = 0, $visited = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0;
 $0 = sp + 392|0;
 $1 = sp + 248|0;
 $2 = sp + 408|0;
 $coeffs = sp + 168|0;
 $roots = sp + 88|0;
 $err = sp + 48|0;
 $3 = sp + 32|0;
 $x = sp + 16|0;
 $4 = sp;
 $visited = sp + 420|0;
 $5 = +HEAPF64[$rawcoeffs>>3];
 $6 = $5 == 0.0;
 if ($6) {
  $7 = ((($rawcoeffs)) + 8|0);
  __ZN8IKSolver10polyroots4EPdS0_Ri($7,$rawroots,$numroots);
  STACKTOP = sp;return;
 }
 $8 = $5 != 0.0;
 if (!($8)) {
  $9 = ((($1)) + 64|0);
  $10 = ((($1)) + 8|0);
  HEAP32[$10>>2] = (896);
  $11 = ((($1)) + 12|0);
  HEAP32[$1>>2] = ((940));
  HEAP32[$9>>2] = ((960));
  $12 = ((($1)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = HEAP32[$1>>2]|0;
  $14 = ((($13)) + -12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($1) + ($15)|0);
  __ZNSt3__18ios_base4initEPv($16,$11);
  $17 = ((($1)) + 64|0);
  $$sum$i$i$i = (($15) + 72)|0;
  $18 = (($1) + ($$sum$i$i$i)|0);
  HEAP32[$18>>2] = 0;
  $$sum1$i$i$i = (($15) + 76)|0;
  $19 = (($1) + ($$sum1$i$i$i)|0);
  HEAP32[$19>>2] = -1;
  HEAP32[$1>>2] = (876);
  HEAP32[$17>>2] = (916);
  HEAP32[$10>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($11);
  HEAP32[$11>>2] = (976);
  $20 = ((($1)) + 44|0);
  $21 = ((($1)) + 60|0);
  ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;HEAP32[$20+12>>2]=0|0;
  HEAP32[$21>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($11,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $22 = ((($1)) + 8|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1072)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1096)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1128)|0);
  $26 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($25,8769)|0);
  $27 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($26,1136)|0);
  $28 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($27,1632)|0);
  $29 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($28,1152)|0);
  $30 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($29,1576)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($30,1232)|0);
  $31 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($2,$11);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($31,$2);
  ___cxa_throw(($31|0),(2048|0),(35|0));
  // unreachable;
 }
 $32 = ((($coeffs)) + 24|0);
 ;HEAP32[$coeffs>>2]=0|0;HEAP32[$coeffs+4>>2]=0|0;HEAP32[$coeffs+8>>2]=0|0;HEAP32[$coeffs+12>>2]=0|0;
 $33 = ((($coeffs)) + 40|0);
 $34 = $32;
 $35 = $34;
 HEAP32[$35>>2] = 0;
 $36 = (($34) + 4)|0;
 $37 = $36;
 HEAP32[$37>>2] = 0;
 $38 = ((($coeffs)) + 56|0);
 $39 = $33;
 $40 = $39;
 HEAP32[$40>>2] = 0;
 $41 = (($39) + 4)|0;
 $42 = $41;
 HEAP32[$42>>2] = 0;
 $43 = $38;
 $44 = $43;
 HEAP32[$44>>2] = 0;
 $45 = (($43) + 4)|0;
 $46 = $45;
 HEAP32[$46>>2] = 0;
 $47 = +HEAPF64[$rawcoeffs>>3];
 $48 = ((($rawcoeffs)) + 8|0);
 $49 = +HEAPF64[$48>>3];
 $50 = $49 / $47;
 HEAPF64[$coeffs>>3] = $50;
 $51 = ((($coeffs)) + 8|0);
 HEAPF64[$51>>3] = 0.0;
 $52 = ((($rawcoeffs)) + 16|0);
 $53 = +HEAPF64[$52>>3];
 $54 = $53 / $47;
 $55 = ((($coeffs)) + 16|0);
 HEAPF64[$55>>3] = $54;
 $56 = ((($coeffs)) + 24|0);
 HEAPF64[$56>>3] = 0.0;
 $57 = ((($rawcoeffs)) + 24|0);
 $58 = +HEAPF64[$57>>3];
 $59 = $58 / $47;
 $60 = ((($coeffs)) + 32|0);
 HEAPF64[$60>>3] = $59;
 $61 = ((($coeffs)) + 40|0);
 HEAPF64[$61>>3] = 0.0;
 $62 = ((($rawcoeffs)) + 32|0);
 $63 = +HEAPF64[$62>>3];
 $64 = $63 / $47;
 $65 = ((($coeffs)) + 48|0);
 HEAPF64[$65>>3] = $64;
 $66 = ((($coeffs)) + 56|0);
 HEAPF64[$66>>3] = 0.0;
 $67 = ((($rawcoeffs)) + 40|0);
 $68 = +HEAPF64[$67>>3];
 $69 = $68 / $47;
 $70 = ((($coeffs)) + 64|0);
 HEAPF64[$70>>3] = $69;
 $71 = ((($coeffs)) + 72|0);
 HEAPF64[$71>>3] = 0.0;
 $72 = ((($roots)) + 24|0);
 ;HEAP32[$roots>>2]=0|0;HEAP32[$roots+4>>2]=0|0;HEAP32[$roots+8>>2]=0|0;HEAP32[$roots+12>>2]=0|0;
 $73 = ((($roots)) + 40|0);
 ;HEAP32[$72>>2]=0|0;HEAP32[$72+4>>2]=0|0;HEAP32[$72+8>>2]=0|0;HEAP32[$72+12>>2]=0|0;
 $74 = ((($roots)) + 56|0);
 ;HEAP32[$73>>2]=0|0;HEAP32[$73+4>>2]=0|0;HEAP32[$73+8>>2]=0|0;HEAP32[$73+12>>2]=0|0;
 $75 = ((($roots)) + 72|0);
 ;HEAP32[$74>>2]=0|0;HEAP32[$74+4>>2]=0|0;HEAP32[$74+8>>2]=0|0;HEAP32[$74+12>>2]=0|0;
 HEAPF64[$75>>3] = 0.0;
 HEAPF64[$roots>>3] = 1.0;
 $76 = ((($roots)) + 8|0);
 HEAPF64[$76>>3] = 0.0;
 $77 = ((($roots)) + 16|0);
 $78 = ((($roots)) + 16|0);
 HEAPF64[$78>>3] = 0.40000000000000002;
 $79 = ((($roots)) + 24|0);
 HEAPF64[$79>>3] = 0.90000000000000002;
 HEAPF64[$err>>3] = 1.0;
 $80 = ((($err)) + 8|0);
 HEAPF64[$80>>3] = 1.0;
 $81 = ((($roots)) + 32|0);
 $82 = ((($roots)) + 16|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$82,$77);
 ;HEAP32[$81>>2]=HEAP32[$3>>2]|0;HEAP32[$81+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$81+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$81+12>>2]=HEAP32[$3+12>>2]|0;
 $83 = ((($err)) + 16|0);
 HEAPF64[$83>>3] = 1.0;
 $84 = ((($roots)) + 48|0);
 $85 = ((($roots)) + 32|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$85,$77);
 ;HEAP32[$84>>2]=HEAP32[$3>>2]|0;HEAP32[$84+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$84+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$84+12>>2]=HEAP32[$3+12>>2]|0;
 $86 = ((($err)) + 24|0);
 HEAPF64[$86>>3] = 1.0;
 $87 = ((($roots)) + 64|0);
 $88 = ((($roots)) + 48|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$88,$77);
 ;HEAP32[$87>>2]=HEAP32[$3>>2]|0;HEAP32[$87+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$87+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$87+12>>2]=HEAP32[$3+12>>2]|0;
 $89 = ((($err)) + 32|0);
 HEAPF64[$89>>3] = 1.0;
 $90 = ((($coeffs)) + 8|0);
 $91 = ((($x)) + 8|0);
 $92 = ((($4)) + 8|0);
 $93 = ((($1)) + 8|0);
 $94 = ((($coeffs)) + 16|0);
 $95 = ((($coeffs)) + 24|0);
 $96 = ((($coeffs)) + 32|0);
 $97 = ((($coeffs)) + 40|0);
 $98 = ((($coeffs)) + 48|0);
 $99 = ((($coeffs)) + 56|0);
 $100 = ((($coeffs)) + 64|0);
 $101 = ((($coeffs)) + 72|0);
 $102 = ((($roots)) + 16|0);
 $103 = ((($roots)) + 24|0);
 $104 = ((($roots)) + 24|0);
 $105 = ((($roots)) + 48|0);
 $106 = ((($roots)) + 56|0);
 $107 = ((($roots)) + 56|0);
 $108 = ((($roots)) + 64|0);
 $109 = ((($roots)) + 72|0);
 $110 = ((($roots)) + 72|0);
 $111 = ((($roots)) + 32|0);
 $112 = ((($roots)) + 40|0);
 $113 = ((($roots)) + 40|0);
 $114 = ((($roots)) + 8|0);
 $115 = ((($roots)) + 8|0);
 $step$043 = 0;
 while(1) {
  $changed$0$off040 = 0;$i2$041 = 0;
  while(1) {
   $116 = (($err) + ($i2$041<<3)|0);
   $117 = +HEAPF64[$116>>3];
   $118 = !($117 >= 2.8421709430404007E-14);
   if ($118) {
    $changed$1$off0 = $changed$0$off040;
   } else {
    $119 = (($roots) + ($i2$041<<4)|0);
    ;HEAP32[$x>>2]=HEAP32[$119>>2]|0;HEAP32[$x+4>>2]=HEAP32[$119+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$119+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$119+12>>2]|0;
    $120 = +HEAPF64[$coeffs>>3];
    $121 = +HEAPF64[$x>>3];
    $122 = $120 + $121;
    HEAPF64[$x>>3] = $122;
    $123 = +HEAPF64[$90>>3];
    $124 = +HEAPF64[$91>>3];
    $125 = $123 + $124;
    HEAPF64[$91>>3] = $125;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$119,$x);
    $126 = +HEAPF64[$4>>3];
    $127 = +HEAPF64[$92>>3];
    $128 = +HEAPF64[$94>>3];
    $129 = $126 + $128;
    $130 = +HEAPF64[$95>>3];
    $131 = $127 + $130;
    HEAPF64[$x>>3] = $129;
    HEAPF64[$91>>3] = $131;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$119,$x);
    $132 = +HEAPF64[$4>>3];
    $133 = +HEAPF64[$92>>3];
    $134 = +HEAPF64[$96>>3];
    $135 = $132 + $134;
    $136 = +HEAPF64[$97>>3];
    $137 = $133 + $136;
    HEAPF64[$x>>3] = $135;
    HEAPF64[$91>>3] = $137;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$119,$x);
    $138 = +HEAPF64[$4>>3];
    $139 = +HEAPF64[$92>>3];
    $140 = +HEAPF64[$98>>3];
    $141 = $138 + $140;
    $142 = +HEAPF64[$99>>3];
    $143 = $139 + $142;
    HEAPF64[$x>>3] = $141;
    HEAPF64[$91>>3] = $143;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$119,$x);
    $144 = +HEAPF64[$4>>3];
    $145 = +HEAPF64[$92>>3];
    $146 = +HEAPF64[$100>>3];
    $147 = $144 + $146;
    $148 = +HEAPF64[$101>>3];
    $149 = $145 + $148;
    HEAPF64[$x>>3] = $147;
    HEAPF64[$91>>3] = $149;
    $150 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $151 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $152 = ($i2$041|0)==(0);
    if ($152) {
     label = 31;
    } else {
     $153 = +HEAPF64[$119>>3];
     $154 = +HEAPF64[$roots>>3];
     $155 = $153 == $154;
     if ($155) {
      $156 = +HEAPF64[$150>>3];
      $157 = +HEAPF64[$114>>3];
      $phitmp$i = $156 != $157;
      if ($phitmp$i) {
       label = 11;
      }
     } else {
      label = 11;
     }
     if ((label|0) == 11) {
      label = 0;
      $158 = +HEAPF64[$119>>3];
      $159 = +HEAPF64[$151>>3];
      $160 = +HEAPF64[$roots>>3];
      $161 = $158 - $160;
      $162 = +HEAPF64[$115>>3];
      $163 = $159 - $162;
      HEAPF64[$1>>3] = $161;
      HEAPF64[$93>>3] = $163;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
     $164 = ($i2$041|0)==(1);
     if ($164) {
      label = 35;
     } else {
      label = 31;
     }
    }
    if ((label|0) == 31) {
     label = 0;
     $206 = +HEAPF64[$119>>3];
     $207 = +HEAPF64[$102>>3];
     $208 = $206 == $207;
     if ($208) {
      $209 = +HEAPF64[$150>>3];
      $210 = +HEAPF64[$103>>3];
      $phitmp$i$1 = $209 != $210;
      if ($phitmp$i$1) {
       label = 33;
      }
     } else {
      label = 33;
     }
     if ((label|0) == 33) {
      label = 0;
      $211 = +HEAPF64[$119>>3];
      $212 = +HEAPF64[$151>>3];
      $213 = +HEAPF64[$102>>3];
      $214 = $211 - $213;
      $215 = +HEAPF64[$104>>3];
      $216 = $212 - $215;
      HEAPF64[$1>>3] = $214;
      HEAPF64[$93>>3] = $216;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
     $217 = ($i2$041|0)==(2);
     if ($217) {
      label = 39;
     } else {
      label = 35;
     }
    }
    if ((label|0) == 35) {
     label = 0;
     $218 = +HEAPF64[$119>>3];
     $219 = +HEAPF64[$111>>3];
     $220 = $218 == $219;
     if ($220) {
      $221 = +HEAPF64[$150>>3];
      $222 = +HEAPF64[$112>>3];
      $phitmp$i$2 = $221 != $222;
      if ($phitmp$i$2) {
       label = 37;
      }
     } else {
      label = 37;
     }
     if ((label|0) == 37) {
      label = 0;
      $223 = +HEAPF64[$119>>3];
      $224 = +HEAPF64[$151>>3];
      $225 = +HEAPF64[$111>>3];
      $226 = $223 - $225;
      $227 = +HEAPF64[$113>>3];
      $228 = $224 - $227;
      HEAPF64[$1>>3] = $226;
      HEAPF64[$93>>3] = $228;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
     $229 = ($i2$041|0)==(3);
     if ($229) {
      label = 43;
     } else {
      label = 39;
     }
    }
    if ((label|0) == 39) {
     label = 0;
     $230 = +HEAPF64[$119>>3];
     $231 = +HEAPF64[$105>>3];
     $232 = $230 == $231;
     if ($232) {
      $233 = +HEAPF64[$150>>3];
      $234 = +HEAPF64[$106>>3];
      $phitmp$i$3 = $233 != $234;
      if ($phitmp$i$3) {
       label = 41;
      }
     } else {
      label = 41;
     }
     if ((label|0) == 41) {
      label = 0;
      $235 = +HEAPF64[$119>>3];
      $236 = +HEAPF64[$151>>3];
      $237 = +HEAPF64[$105>>3];
      $238 = $235 - $237;
      $239 = +HEAPF64[$107>>3];
      $240 = $236 - $239;
      HEAPF64[$1>>3] = $238;
      HEAPF64[$93>>3] = $240;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
     $241 = ($i2$041|0)==(4);
     if (!($241)) {
      label = 43;
     }
    }
    do {
     if ((label|0) == 43) {
      label = 0;
      $242 = +HEAPF64[$119>>3];
      $243 = +HEAPF64[$108>>3];
      $244 = $242 == $243;
      if ($244) {
       $245 = +HEAPF64[$150>>3];
       $246 = +HEAPF64[$109>>3];
       $phitmp$i$4 = $245 != $246;
       if (!($phitmp$i$4)) {
        break;
       }
      }
      $247 = +HEAPF64[$119>>3];
      $248 = +HEAPF64[$151>>3];
      $249 = +HEAPF64[$108>>3];
      $250 = $247 - $249;
      $251 = +HEAPF64[$110>>3];
      $252 = $248 - $251;
      HEAPF64[$1>>3] = $250;
      HEAPF64[$93>>3] = $252;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
    } while(0);
    $253 = +HEAPF64[$x>>3];
    $254 = +HEAPF64[$119>>3];
    $255 = $254 - $253;
    HEAPF64[$119>>3] = $255;
    $256 = +HEAPF64[$91>>3];
    $257 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $258 = +HEAPF64[$257>>3];
    $259 = $258 - $256;
    HEAPF64[$257>>3] = $259;
    $260 = +HEAPF64[$x>>3];
    $261 = +HEAPF64[$91>>3];
    $262 = (+_hypot($260,$261));
    HEAPF64[$116>>3] = $262;
    $changed$1$off0 = 1;
   }
   $165 = (($i2$041) + 1)|0;
   $exitcond58 = ($165|0)==(5);
   if ($exitcond58) {
    $changed$1$off0$lcssa = $changed$1$off0;
    break;
   } else {
    $changed$0$off040 = $changed$1$off0;$i2$041 = $165;
   }
  }
  $166 = (($step$043) + 1)|0;
  $167 = ($166|0)<(110);
  $or$cond = $changed$1$off0$lcssa & $167;
  if ($or$cond) {
   $step$043 = $166;
  } else {
   break;
  }
 }
 HEAP32[$numroots>>2] = 0;
 ;HEAP8[$visited>>0]=0|0;HEAP8[$visited+1>>0]=0|0;HEAP8[$visited+2>>0]=0|0;HEAP8[$visited+3>>0]=0|0;HEAP8[$visited+4>>0]=0|0;
 $i4$036 = 0;
 while(1) {
  $168 = (($visited) + ($i4$036)|0);
  $169 = HEAP8[$168>>0]|0;
  $170 = ($169<<24>>24)==(0);
  if ($170) {
   $171 = (($roots) + ($i4$036<<4)|0);
   $172 = +HEAPF64[$171>>3];
   $173 = (((($roots) + ($i4$036<<4)|0)) + 8|0);
   $174 = +HEAPF64[$173>>3];
   $j5$02128 = (($i4$036) + 1)|0;
   $175 = ($j5$02128|0)<(5);
   if ($175) {
    $176 = +HEAPF64[$171>>3];
    $$ph1530 = $172;$$ph29 = $174;$j5$02132 = $j5$02128;$n$0$ph31 = 1;
    L57: while(1) {
     $j5$022 = $j5$02132;
     while(1) {
      $177 = (($roots) + ($j5$022<<4)|0);
      $178 = +HEAPF64[$177>>3];
      $179 = $176 - $178;
      $180 = (+Math_abs((+$179)));
      $181 = $180 < 1.4901161193847656E-8;
      if ($181) {
       $183 = +HEAPF64[$173>>3];
       $184 = (((($roots) + ($j5$022<<4)|0)) + 8|0);
       $185 = +HEAPF64[$184>>3];
       $186 = $183 - $185;
       $187 = (+Math_abs((+$186)));
       $188 = $187 < 0.002;
       if ($188) {
        $$lcssa = $178;$$lcssa99 = $185;$j5$022$lcssa = $j5$022;
        break;
       }
      }
      $j5$0 = (($j5$022) + 1)|0;
      $182 = ($j5$0|0)<(5);
      if ($182) {
       $j5$022 = $j5$0;
      } else {
       $$ph$lcssa = $$ph29;$$ph15$lcssa = $$ph1530;$n$0$ph$lcssa = $n$0$ph31;
       break L57;
      }
     }
     $189 = $$ph1530 + $$lcssa;
     $190 = $$ph29 + $$lcssa99;
     $191 = (($n$0$ph31) + 1)|0;
     $192 = (($visited) + ($j5$022$lcssa)|0);
     HEAP8[$192>>0] = 1;
     $j5$021 = (($j5$022$lcssa) + 1)|0;
     $193 = ($j5$021|0)<(5);
     if ($193) {
      $$ph1530 = $189;$$ph29 = $190;$j5$02132 = $j5$021;$n$0$ph31 = $191;
     } else {
      $$ph$lcssa = $190;$$ph15$lcssa = $189;$n$0$ph$lcssa = $191;
      break;
     }
    }
    $194 = ($n$0$ph$lcssa|0)>(1);
    if ($194) {
     $195 = (+($n$0$ph$lcssa|0));
     $196 = $$ph15$lcssa / $195;
     $197 = $$ph$lcssa / $195;
     $198 = $197;$204 = $196;
    } else {
     $198 = $$ph$lcssa;$204 = $$ph15$lcssa;
    }
   } else {
    $198 = $174;$204 = $172;
   }
   $199 = (+__Z5IKabsd($198));
   $200 = $199 < 1.4901161193847656E-8;
   if ($200) {
    $201 = HEAP32[$numroots>>2]|0;
    $202 = (($201) + 1)|0;
    HEAP32[$numroots>>2] = $202;
    $203 = (($rawroots) + ($201<<3)|0);
    HEAPF64[$203>>3] = $204;
   }
  }
  $205 = (($i4$036) + 1)|0;
  $exitcond = ($205|0)==(5);
  if ($exitcond) {
   break;
  } else {
   $i4$036 = $205;
  }
 }
 STACKTOP = sp;return;
}
function __ZN8IKSolver10polyroots4EPdS0_Ri($rawcoeffs,$rawroots,$numroots) {
 $rawcoeffs = $rawcoeffs|0;
 $rawroots = $rawroots|0;
 $numroots = $numroots|0;
 var $$lcssa = 0.0, $$lcssa98 = 0.0, $$ph$lcssa = 0.0, $$ph15$lcssa = 0.0, $$ph1530 = 0.0, $$ph29 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0.0, $107 = 0, $108 = 0;
 var $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0.0, $148 = 0, $149 = 0.0, $15 = 0, $150 = 0, $151 = 0.0, $152 = 0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0, $157 = 0, $158 = 0.0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0;
 var $163 = 0, $164 = 0.0, $165 = 0.0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0.0, $18 = 0, $180 = 0;
 var $181 = 0.0, $182 = 0.0, $183 = 0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0, $193 = 0.0, $194 = 0.0, $195 = 0, $196 = 0.0, $197 = 0.0, $198 = 0.0, $199 = 0.0;
 var $2 = 0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0.0, $203 = 0.0, $204 = 0, $205 = 0.0, $206 = 0.0, $207 = 0, $208 = 0.0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = 0.0;
 var $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0.0, $225 = 0.0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0.0, $5 = 0.0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0, $83 = 0.0, $84 = 0, $85 = 0.0, $86 = 0;
 var $87 = 0.0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0.0, $92 = 0, $93 = 0.0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $changed$0$off040 = 0, $changed$1$off0 = 0, $changed$1$off0$lcssa = 0, $coeffs = 0, $err = 0, $exitcond = 0;
 var $exitcond58 = 0, $i2$041 = 0, $i4$036 = 0, $j5$0 = 0, $j5$021 = 0, $j5$02128 = 0, $j5$02132 = 0, $j5$022 = 0, $j5$022$lcssa = 0, $n$0$ph$lcssa = 0, $n$0$ph31 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i$1 = 0, $phitmp$i$2 = 0, $phitmp$i$3 = 0, $roots = 0, $step$043 = 0, $visited = 0, $x = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384|0;
 $0 = sp + 352|0;
 $1 = sp + 208|0;
 $2 = sp + 372|0;
 $coeffs = sp + 144|0;
 $roots = sp + 80|0;
 $err = sp + 48|0;
 $3 = sp + 32|0;
 $x = sp + 16|0;
 $4 = sp;
 $visited = sp + 368|0;
 $5 = +HEAPF64[$rawcoeffs>>3];
 $6 = $5 == 0.0;
 if ($6) {
  $7 = ((($rawcoeffs)) + 8|0);
  __ZN8IKSolver10polyroots3EPdS0_Ri($7,$rawroots,$numroots);
  STACKTOP = sp;return;
 }
 $8 = $5 != 0.0;
 if (!($8)) {
  $9 = ((($1)) + 64|0);
  $10 = ((($1)) + 8|0);
  HEAP32[$10>>2] = (896);
  $11 = ((($1)) + 12|0);
  HEAP32[$1>>2] = ((940));
  HEAP32[$9>>2] = ((960));
  $12 = ((($1)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = HEAP32[$1>>2]|0;
  $14 = ((($13)) + -12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($1) + ($15)|0);
  __ZNSt3__18ios_base4initEPv($16,$11);
  $17 = ((($1)) + 64|0);
  $$sum$i$i$i = (($15) + 72)|0;
  $18 = (($1) + ($$sum$i$i$i)|0);
  HEAP32[$18>>2] = 0;
  $$sum1$i$i$i = (($15) + 76)|0;
  $19 = (($1) + ($$sum1$i$i$i)|0);
  HEAP32[$19>>2] = -1;
  HEAP32[$1>>2] = (876);
  HEAP32[$17>>2] = (916);
  HEAP32[$10>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($11);
  HEAP32[$11>>2] = (976);
  $20 = ((($1)) + 44|0);
  $21 = ((($1)) + 60|0);
  ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;HEAP32[$20+12>>2]=0|0;
  HEAP32[$21>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($11,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $22 = ((($1)) + 8|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1072)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1096)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1128)|0);
  $26 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($25,8847)|0);
  $27 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($26,1136)|0);
  $28 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($27,1648)|0);
  $29 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($28,1152)|0);
  $30 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($29,1576)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($30,1232)|0);
  $31 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($2,$11);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($31,$2);
  ___cxa_throw(($31|0),(2048|0),(35|0));
  // unreachable;
 }
 $32 = ((($coeffs)) + 24|0);
 ;HEAP32[$coeffs>>2]=0|0;HEAP32[$coeffs+4>>2]=0|0;HEAP32[$coeffs+8>>2]=0|0;HEAP32[$coeffs+12>>2]=0|0;
 $33 = ((($coeffs)) + 40|0);
 $34 = $32;
 $35 = $34;
 HEAP32[$35>>2] = 0;
 $36 = (($34) + 4)|0;
 $37 = $36;
 HEAP32[$37>>2] = 0;
 $38 = $33;
 $39 = $38;
 HEAP32[$39>>2] = 0;
 $40 = (($38) + 4)|0;
 $41 = $40;
 HEAP32[$41>>2] = 0;
 $42 = +HEAPF64[$rawcoeffs>>3];
 $43 = ((($rawcoeffs)) + 8|0);
 $44 = +HEAPF64[$43>>3];
 $45 = $44 / $42;
 HEAPF64[$coeffs>>3] = $45;
 $46 = ((($coeffs)) + 8|0);
 HEAPF64[$46>>3] = 0.0;
 $47 = ((($rawcoeffs)) + 16|0);
 $48 = +HEAPF64[$47>>3];
 $49 = $48 / $42;
 $50 = ((($coeffs)) + 16|0);
 HEAPF64[$50>>3] = $49;
 $51 = ((($coeffs)) + 24|0);
 HEAPF64[$51>>3] = 0.0;
 $52 = ((($rawcoeffs)) + 24|0);
 $53 = +HEAPF64[$52>>3];
 $54 = $53 / $42;
 $55 = ((($coeffs)) + 32|0);
 HEAPF64[$55>>3] = $54;
 $56 = ((($coeffs)) + 40|0);
 HEAPF64[$56>>3] = 0.0;
 $57 = ((($rawcoeffs)) + 32|0);
 $58 = +HEAPF64[$57>>3];
 $59 = $58 / $42;
 $60 = ((($coeffs)) + 48|0);
 HEAPF64[$60>>3] = $59;
 $61 = ((($coeffs)) + 56|0);
 HEAPF64[$61>>3] = 0.0;
 $62 = ((($roots)) + 24|0);
 ;HEAP32[$roots>>2]=0|0;HEAP32[$roots+4>>2]=0|0;HEAP32[$roots+8>>2]=0|0;HEAP32[$roots+12>>2]=0|0;
 $63 = ((($roots)) + 40|0);
 ;HEAP32[$62>>2]=0|0;HEAP32[$62+4>>2]=0|0;HEAP32[$62+8>>2]=0|0;HEAP32[$62+12>>2]=0|0;
 $64 = ((($roots)) + 56|0);
 ;HEAP32[$63>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;HEAP32[$63+12>>2]=0|0;
 HEAPF64[$64>>3] = 0.0;
 HEAPF64[$roots>>3] = 1.0;
 $65 = ((($roots)) + 8|0);
 HEAPF64[$65>>3] = 0.0;
 $66 = ((($roots)) + 16|0);
 $67 = ((($roots)) + 16|0);
 HEAPF64[$67>>3] = 0.40000000000000002;
 $68 = ((($roots)) + 24|0);
 HEAPF64[$68>>3] = 0.90000000000000002;
 HEAPF64[$err>>3] = 1.0;
 $69 = ((($err)) + 8|0);
 HEAPF64[$69>>3] = 1.0;
 $70 = ((($roots)) + 32|0);
 $71 = ((($roots)) + 16|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$71,$66);
 ;HEAP32[$70>>2]=HEAP32[$3>>2]|0;HEAP32[$70+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$70+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$70+12>>2]=HEAP32[$3+12>>2]|0;
 $72 = ((($err)) + 16|0);
 HEAPF64[$72>>3] = 1.0;
 $73 = ((($roots)) + 48|0);
 $74 = ((($roots)) + 32|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$74,$66);
 ;HEAP32[$73>>2]=HEAP32[$3>>2]|0;HEAP32[$73+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$73+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$73+12>>2]=HEAP32[$3+12>>2]|0;
 $75 = ((($err)) + 24|0);
 HEAPF64[$75>>3] = 1.0;
 $76 = ((($coeffs)) + 8|0);
 $77 = ((($x)) + 8|0);
 $78 = ((($4)) + 8|0);
 $79 = ((($1)) + 8|0);
 $80 = +HEAPF64[$coeffs>>3];
 $81 = +HEAPF64[$76>>3];
 $82 = ((($coeffs)) + 16|0);
 $83 = +HEAPF64[$82>>3];
 $84 = ((($coeffs)) + 24|0);
 $85 = +HEAPF64[$84>>3];
 $86 = ((($coeffs)) + 32|0);
 $87 = +HEAPF64[$86>>3];
 $88 = ((($coeffs)) + 40|0);
 $89 = +HEAPF64[$88>>3];
 $90 = ((($coeffs)) + 48|0);
 $91 = +HEAPF64[$90>>3];
 $92 = ((($coeffs)) + 56|0);
 $93 = +HEAPF64[$92>>3];
 $94 = ((($roots)) + 16|0);
 $95 = ((($roots)) + 24|0);
 $96 = ((($roots)) + 24|0);
 $97 = ((($roots)) + 48|0);
 $98 = ((($roots)) + 56|0);
 $99 = ((($roots)) + 56|0);
 $100 = ((($roots)) + 32|0);
 $101 = ((($roots)) + 40|0);
 $102 = ((($roots)) + 40|0);
 $103 = ((($roots)) + 8|0);
 $104 = ((($roots)) + 8|0);
 $step$043 = 0;
 while(1) {
  $changed$0$off040 = 0;$i2$041 = 0;
  while(1) {
   $105 = (($err) + ($i2$041<<3)|0);
   $106 = +HEAPF64[$105>>3];
   $107 = !($106 >= 2.8421709430404007E-14);
   if ($107) {
    $changed$1$off0 = $changed$0$off040;
   } else {
    $108 = (($roots) + ($i2$041<<4)|0);
    ;HEAP32[$x>>2]=HEAP32[$108>>2]|0;HEAP32[$x+4>>2]=HEAP32[$108+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$108+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$108+12>>2]|0;
    $109 = +HEAPF64[$x>>3];
    $110 = $80 + $109;
    HEAPF64[$x>>3] = $110;
    $111 = +HEAPF64[$77>>3];
    $112 = $81 + $111;
    HEAPF64[$77>>3] = $112;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$108,$x);
    $113 = +HEAPF64[$4>>3];
    $114 = +HEAPF64[$78>>3];
    $115 = $113 + $83;
    $116 = $114 + $85;
    HEAPF64[$x>>3] = $115;
    HEAPF64[$77>>3] = $116;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$108,$x);
    $117 = +HEAPF64[$4>>3];
    $118 = +HEAPF64[$78>>3];
    $119 = $117 + $87;
    $120 = $118 + $89;
    HEAPF64[$x>>3] = $119;
    HEAPF64[$77>>3] = $120;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$108,$x);
    $121 = +HEAPF64[$4>>3];
    $122 = +HEAPF64[$78>>3];
    $123 = $121 + $91;
    $124 = $122 + $93;
    HEAPF64[$x>>3] = $123;
    HEAPF64[$77>>3] = $124;
    $125 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $126 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $127 = ($i2$041|0)==(0);
    if ($127) {
     label = 31;
    } else {
     $128 = +HEAPF64[$108>>3];
     $129 = +HEAPF64[$roots>>3];
     $130 = $128 == $129;
     if ($130) {
      $131 = +HEAPF64[$125>>3];
      $132 = +HEAPF64[$103>>3];
      $phitmp$i = $131 != $132;
      if ($phitmp$i) {
       label = 11;
      }
     } else {
      label = 11;
     }
     if ((label|0) == 11) {
      label = 0;
      $133 = +HEAPF64[$108>>3];
      $134 = +HEAPF64[$126>>3];
      $135 = +HEAPF64[$roots>>3];
      $136 = $133 - $135;
      $137 = +HEAPF64[$104>>3];
      $138 = $134 - $137;
      HEAPF64[$1>>3] = $136;
      HEAPF64[$79>>3] = $138;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
     $139 = ($i2$041|0)==(1);
     if ($139) {
      label = 35;
     } else {
      label = 31;
     }
    }
    if ((label|0) == 31) {
     label = 0;
     $181 = +HEAPF64[$108>>3];
     $182 = +HEAPF64[$94>>3];
     $183 = $181 == $182;
     if ($183) {
      $184 = +HEAPF64[$125>>3];
      $185 = +HEAPF64[$95>>3];
      $phitmp$i$1 = $184 != $185;
      if ($phitmp$i$1) {
       label = 33;
      }
     } else {
      label = 33;
     }
     if ((label|0) == 33) {
      label = 0;
      $186 = +HEAPF64[$108>>3];
      $187 = +HEAPF64[$126>>3];
      $188 = +HEAPF64[$94>>3];
      $189 = $186 - $188;
      $190 = +HEAPF64[$96>>3];
      $191 = $187 - $190;
      HEAPF64[$1>>3] = $189;
      HEAPF64[$79>>3] = $191;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
     $192 = ($i2$041|0)==(2);
     if ($192) {
      label = 39;
     } else {
      label = 35;
     }
    }
    if ((label|0) == 35) {
     label = 0;
     $193 = +HEAPF64[$108>>3];
     $194 = +HEAPF64[$100>>3];
     $195 = $193 == $194;
     if ($195) {
      $196 = +HEAPF64[$125>>3];
      $197 = +HEAPF64[$101>>3];
      $phitmp$i$2 = $196 != $197;
      if ($phitmp$i$2) {
       label = 37;
      }
     } else {
      label = 37;
     }
     if ((label|0) == 37) {
      label = 0;
      $198 = +HEAPF64[$108>>3];
      $199 = +HEAPF64[$126>>3];
      $200 = +HEAPF64[$100>>3];
      $201 = $198 - $200;
      $202 = +HEAPF64[$102>>3];
      $203 = $199 - $202;
      HEAPF64[$1>>3] = $201;
      HEAPF64[$79>>3] = $203;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
     $204 = ($i2$041|0)==(3);
     if (!($204)) {
      label = 39;
     }
    }
    do {
     if ((label|0) == 39) {
      label = 0;
      $205 = +HEAPF64[$108>>3];
      $206 = +HEAPF64[$97>>3];
      $207 = $205 == $206;
      if ($207) {
       $208 = +HEAPF64[$125>>3];
       $209 = +HEAPF64[$98>>3];
       $phitmp$i$3 = $208 != $209;
       if (!($phitmp$i$3)) {
        break;
       }
      }
      $210 = +HEAPF64[$108>>3];
      $211 = +HEAPF64[$126>>3];
      $212 = +HEAPF64[$97>>3];
      $213 = $210 - $212;
      $214 = +HEAPF64[$99>>3];
      $215 = $211 - $214;
      HEAPF64[$1>>3] = $213;
      HEAPF64[$79>>3] = $215;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
    } while(0);
    $216 = +HEAPF64[$x>>3];
    $217 = +HEAPF64[$108>>3];
    $218 = $217 - $216;
    HEAPF64[$108>>3] = $218;
    $219 = +HEAPF64[$77>>3];
    $220 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $221 = +HEAPF64[$220>>3];
    $222 = $221 - $219;
    HEAPF64[$220>>3] = $222;
    $223 = +HEAPF64[$x>>3];
    $224 = +HEAPF64[$77>>3];
    $225 = (+_hypot($223,$224));
    HEAPF64[$105>>3] = $225;
    $changed$1$off0 = 1;
   }
   $140 = (($i2$041) + 1)|0;
   $exitcond58 = ($140|0)==(4);
   if ($exitcond58) {
    $changed$1$off0$lcssa = $changed$1$off0;
    break;
   } else {
    $changed$0$off040 = $changed$1$off0;$i2$041 = $140;
   }
  }
  $141 = (($step$043) + 1)|0;
  $142 = ($141|0)<(110);
  $or$cond = $changed$1$off0$lcssa & $142;
  if ($or$cond) {
   $step$043 = $141;
  } else {
   break;
  }
 }
 HEAP32[$numroots>>2] = 0;
 HEAP32[$visited>>2] = 0;
 $i4$036 = 0;
 while(1) {
  $143 = (($visited) + ($i4$036)|0);
  $144 = HEAP8[$143>>0]|0;
  $145 = ($144<<24>>24)==(0);
  if ($145) {
   $146 = (($roots) + ($i4$036<<4)|0);
   $147 = +HEAPF64[$146>>3];
   $148 = (((($roots) + ($i4$036<<4)|0)) + 8|0);
   $149 = +HEAPF64[$148>>3];
   $j5$02128 = (($i4$036) + 1)|0;
   $150 = ($j5$02128|0)<(4);
   if ($150) {
    $151 = +HEAPF64[$146>>3];
    $$ph1530 = $147;$$ph29 = $149;$j5$02132 = $j5$02128;$n$0$ph31 = 1;
    L50: while(1) {
     $j5$022 = $j5$02132;
     while(1) {
      $152 = (($roots) + ($j5$022<<4)|0);
      $153 = +HEAPF64[$152>>3];
      $154 = $151 - $153;
      $155 = (+Math_abs((+$154)));
      $156 = $155 < 1.4901161193847656E-8;
      if ($156) {
       $158 = +HEAPF64[$148>>3];
       $159 = (((($roots) + ($j5$022<<4)|0)) + 8|0);
       $160 = +HEAPF64[$159>>3];
       $161 = $158 - $160;
       $162 = (+Math_abs((+$161)));
       $163 = $162 < 0.002;
       if ($163) {
        $$lcssa = $153;$$lcssa98 = $160;$j5$022$lcssa = $j5$022;
        break;
       }
      }
      $j5$0 = (($j5$022) + 1)|0;
      $157 = ($j5$0|0)<(4);
      if ($157) {
       $j5$022 = $j5$0;
      } else {
       $$ph$lcssa = $$ph29;$$ph15$lcssa = $$ph1530;$n$0$ph$lcssa = $n$0$ph31;
       break L50;
      }
     }
     $164 = $$ph1530 + $$lcssa;
     $165 = $$ph29 + $$lcssa98;
     $166 = (($n$0$ph31) + 1)|0;
     $167 = (($visited) + ($j5$022$lcssa)|0);
     HEAP8[$167>>0] = 1;
     $j5$021 = (($j5$022$lcssa) + 1)|0;
     $168 = ($j5$021|0)<(4);
     if ($168) {
      $$ph1530 = $164;$$ph29 = $165;$j5$02132 = $j5$021;$n$0$ph31 = $166;
     } else {
      $$ph$lcssa = $165;$$ph15$lcssa = $164;$n$0$ph$lcssa = $166;
      break;
     }
    }
    $169 = ($n$0$ph$lcssa|0)>(1);
    if ($169) {
     $170 = (+($n$0$ph$lcssa|0));
     $171 = $$ph15$lcssa / $170;
     $172 = $$ph$lcssa / $170;
     $173 = $172;$179 = $171;
    } else {
     $173 = $$ph$lcssa;$179 = $$ph15$lcssa;
    }
   } else {
    $173 = $149;$179 = $147;
   }
   $174 = (+__Z5IKabsd($173));
   $175 = $174 < 1.4901161193847656E-8;
   if ($175) {
    $176 = HEAP32[$numroots>>2]|0;
    $177 = (($176) + 1)|0;
    HEAP32[$numroots>>2] = $177;
    $178 = (($rawroots) + ($176<<3)|0);
    HEAPF64[$178>>3] = $179;
   }
  }
  $180 = (($i4$036) + 1)|0;
  $exitcond = ($180|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $i4$036 = $180;
  }
 }
 STACKTOP = sp;return;
}
function __ZN8IKSolver10polyroots3EPdS0_Ri($rawcoeffs,$rawroots,$numroots) {
 $rawcoeffs = $rawcoeffs|0;
 $rawroots = $rawroots|0;
 $numroots = $numroots|0;
 var $$lcssa = 0.0, $$lcssa96 = 0.0, $$ph$lcssa = 0.0, $$ph15$lcssa = 0.0, $$ph1530 = 0.0, $$ph29 = 0.0, $$sum$i$i$i = 0, $$sum1$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0.0, $107 = 0.0, $108 = 0.0;
 var $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0.0, $125 = 0, $126 = 0.0;
 var $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0.0, $134 = 0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0, $156 = 0.0, $157 = 0.0, $158 = 0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0;
 var $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0;
 var $181 = 0.0, $182 = 0.0, $183 = 0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0.0, $49 = 0.0, $5 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0.0, $67 = 0.0, $68 = 0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0.0, $74 = 0, $75 = 0.0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $changed$0$off040 = 0, $changed$1$off0 = 0, $changed$1$off0$lcssa = 0;
 var $coeffs = 0, $err = 0, $exitcond = 0, $exitcond58 = 0, $i2$041 = 0, $i4$036 = 0, $j5$0 = 0, $j5$021 = 0, $j5$02128 = 0, $j5$02132 = 0, $j5$022 = 0, $j5$022$lcssa = 0, $n$0$ph$lcssa = 0, $n$0$ph31 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i$1 = 0, $phitmp$i$2 = 0, $roots = 0, $step$043 = 0;
 var $visited = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $0 = sp + 312|0;
 $1 = sp + 168|0;
 $2 = sp + 328|0;
 $coeffs = sp + 120|0;
 $roots = sp + 72|0;
 $err = sp + 48|0;
 $3 = sp + 32|0;
 $x = sp + 16|0;
 $4 = sp;
 $visited = sp + 340|0;
 $5 = +HEAPF64[$rawcoeffs>>3];
 $6 = $5 == 0.0;
 if ($6) {
  $7 = ((($rawcoeffs)) + 8|0);
  __ZN8IKSolver10polyroots2EPdS0_Ri($7,$rawroots,$numroots);
  STACKTOP = sp;return;
 }
 $8 = $5 != 0.0;
 if (!($8)) {
  $9 = ((($1)) + 64|0);
  $10 = ((($1)) + 8|0);
  HEAP32[$10>>2] = (896);
  $11 = ((($1)) + 12|0);
  HEAP32[$1>>2] = ((940));
  HEAP32[$9>>2] = ((960));
  $12 = ((($1)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = HEAP32[$1>>2]|0;
  $14 = ((($13)) + -12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($1) + ($15)|0);
  __ZNSt3__18ios_base4initEPv($16,$11);
  $17 = ((($1)) + 64|0);
  $$sum$i$i$i = (($15) + 72)|0;
  $18 = (($1) + ($$sum$i$i$i)|0);
  HEAP32[$18>>2] = 0;
  $$sum1$i$i$i = (($15) + 76)|0;
  $19 = (($1) + ($$sum1$i$i$i)|0);
  HEAP32[$19>>2] = -1;
  HEAP32[$1>>2] = (876);
  HEAP32[$17>>2] = (916);
  HEAP32[$10>>2] = (896);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($11);
  HEAP32[$11>>2] = (976);
  $20 = ((($1)) + 44|0);
  $21 = ((($1)) + 60|0);
  ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;HEAP32[$20+12>>2]=0|0;
  HEAP32[$21>>2] = 24;
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($11,$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $22 = ((($1)) + 8|0);
  $23 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($22,1072)|0);
  $24 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($23,1096)|0);
  $25 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($24,1128)|0);
  $26 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($25,8675)|0);
  $27 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($26,1136)|0);
  $28 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($27,1664)|0);
  $29 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($28,1152)|0);
  $30 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($29,1576)|0);
  (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($30,1232)|0);
  $31 = (___cxa_allocate_exception(8)|0);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($2,$11);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($31,$2);
  ___cxa_throw(($31|0),(2048|0),(35|0));
  // unreachable;
 }
 $32 = ((($coeffs)) + 24|0);
 ;HEAP32[$coeffs>>2]=0|0;HEAP32[$coeffs+4>>2]=0|0;HEAP32[$coeffs+8>>2]=0|0;HEAP32[$coeffs+12>>2]=0|0;
 $33 = $32;
 $34 = $33;
 HEAP32[$34>>2] = 0;
 $35 = (($33) + 4)|0;
 $36 = $35;
 HEAP32[$36>>2] = 0;
 $37 = +HEAPF64[$rawcoeffs>>3];
 $38 = ((($rawcoeffs)) + 8|0);
 $39 = +HEAPF64[$38>>3];
 $40 = $39 / $37;
 HEAPF64[$coeffs>>3] = $40;
 $41 = ((($coeffs)) + 8|0);
 HEAPF64[$41>>3] = 0.0;
 $42 = ((($rawcoeffs)) + 16|0);
 $43 = +HEAPF64[$42>>3];
 $44 = $43 / $37;
 $45 = ((($coeffs)) + 16|0);
 HEAPF64[$45>>3] = $44;
 $46 = ((($coeffs)) + 24|0);
 HEAPF64[$46>>3] = 0.0;
 $47 = ((($rawcoeffs)) + 24|0);
 $48 = +HEAPF64[$47>>3];
 $49 = $48 / $37;
 $50 = ((($coeffs)) + 32|0);
 HEAPF64[$50>>3] = $49;
 $51 = ((($coeffs)) + 40|0);
 HEAPF64[$51>>3] = 0.0;
 $52 = ((($roots)) + 24|0);
 ;HEAP32[$roots>>2]=0|0;HEAP32[$roots+4>>2]=0|0;HEAP32[$roots+8>>2]=0|0;HEAP32[$roots+12>>2]=0|0;
 $53 = ((($roots)) + 40|0);
 ;HEAP32[$52>>2]=0|0;HEAP32[$52+4>>2]=0|0;HEAP32[$52+8>>2]=0|0;HEAP32[$52+12>>2]=0|0;
 HEAPF64[$53>>3] = 0.0;
 HEAPF64[$roots>>3] = 1.0;
 $54 = ((($roots)) + 8|0);
 HEAPF64[$54>>3] = 0.0;
 $55 = ((($roots)) + 16|0);
 HEAPF64[$55>>3] = 0.40000000000000002;
 $56 = ((($roots)) + 24|0);
 HEAPF64[$56>>3] = 0.90000000000000002;
 HEAPF64[$err>>3] = 1.0;
 $57 = ((($err)) + 8|0);
 HEAPF64[$57>>3] = 1.0;
 $58 = ((($roots)) + 16|0);
 $59 = ((($roots)) + 32|0);
 $60 = ((($roots)) + 16|0);
 __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($3,$60,$58);
 ;HEAP32[$59>>2]=HEAP32[$3>>2]|0;HEAP32[$59+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$59+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$59+12>>2]=HEAP32[$3+12>>2]|0;
 $61 = ((($err)) + 16|0);
 HEAPF64[$61>>3] = 1.0;
 $62 = ((($coeffs)) + 8|0);
 $63 = ((($x)) + 8|0);
 $64 = ((($4)) + 8|0);
 $65 = ((($1)) + 8|0);
 $66 = +HEAPF64[$coeffs>>3];
 $67 = +HEAPF64[$62>>3];
 $68 = ((($coeffs)) + 16|0);
 $69 = +HEAPF64[$68>>3];
 $70 = ((($coeffs)) + 24|0);
 $71 = +HEAPF64[$70>>3];
 $72 = ((($coeffs)) + 32|0);
 $73 = +HEAPF64[$72>>3];
 $74 = ((($coeffs)) + 40|0);
 $75 = +HEAPF64[$74>>3];
 $76 = ((($roots)) + 16|0);
 $77 = ((($roots)) + 24|0);
 $78 = ((($roots)) + 24|0);
 $79 = ((($roots)) + 32|0);
 $80 = ((($roots)) + 40|0);
 $81 = ((($roots)) + 40|0);
 $82 = ((($roots)) + 8|0);
 $83 = ((($roots)) + 8|0);
 $step$043 = 0;
 while(1) {
  $changed$0$off040 = 0;$i2$041 = 0;
  while(1) {
   $84 = (($err) + ($i2$041<<3)|0);
   $85 = +HEAPF64[$84>>3];
   $86 = !($85 >= 2.8421709430404007E-14);
   if ($86) {
    $changed$1$off0 = $changed$0$off040;
   } else {
    $87 = (($roots) + ($i2$041<<4)|0);
    ;HEAP32[$x>>2]=HEAP32[$87>>2]|0;HEAP32[$x+4>>2]=HEAP32[$87+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$87+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$87+12>>2]|0;
    $88 = +HEAPF64[$x>>3];
    $89 = $66 + $88;
    HEAPF64[$x>>3] = $89;
    $90 = +HEAPF64[$63>>3];
    $91 = $67 + $90;
    HEAPF64[$63>>3] = $91;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$87,$x);
    $92 = +HEAPF64[$4>>3];
    $93 = +HEAPF64[$64>>3];
    $94 = $92 + $69;
    $95 = $93 + $71;
    HEAPF64[$x>>3] = $94;
    HEAPF64[$63>>3] = $95;
    __ZNSt3__1mlIdEENS_7complexIT_EERKS3_S5_($4,$87,$x);
    $96 = +HEAPF64[$4>>3];
    $97 = +HEAPF64[$64>>3];
    $98 = $96 + $73;
    $99 = $97 + $75;
    HEAPF64[$x>>3] = $98;
    HEAPF64[$63>>3] = $99;
    $100 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $101 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $102 = ($i2$041|0)==(0);
    if ($102) {
     label = 31;
    } else {
     $103 = +HEAPF64[$87>>3];
     $104 = +HEAPF64[$roots>>3];
     $105 = $103 == $104;
     if ($105) {
      $106 = +HEAPF64[$100>>3];
      $107 = +HEAPF64[$82>>3];
      $phitmp$i = $106 != $107;
      if ($phitmp$i) {
       label = 11;
      }
     } else {
      label = 11;
     }
     if ((label|0) == 11) {
      label = 0;
      $108 = +HEAPF64[$87>>3];
      $109 = +HEAPF64[$101>>3];
      $110 = +HEAPF64[$roots>>3];
      $111 = $108 - $110;
      $112 = +HEAPF64[$83>>3];
      $113 = $109 - $112;
      HEAPF64[$1>>3] = $111;
      HEAPF64[$65>>3] = $113;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
     $114 = ($i2$041|0)==(1);
     if ($114) {
      label = 35;
     } else {
      label = 31;
     }
    }
    if ((label|0) == 31) {
     label = 0;
     $156 = +HEAPF64[$87>>3];
     $157 = +HEAPF64[$76>>3];
     $158 = $156 == $157;
     if ($158) {
      $159 = +HEAPF64[$100>>3];
      $160 = +HEAPF64[$77>>3];
      $phitmp$i$1 = $159 != $160;
      if ($phitmp$i$1) {
       label = 33;
      }
     } else {
      label = 33;
     }
     if ((label|0) == 33) {
      label = 0;
      $161 = +HEAPF64[$87>>3];
      $162 = +HEAPF64[$101>>3];
      $163 = +HEAPF64[$76>>3];
      $164 = $161 - $163;
      $165 = +HEAPF64[$78>>3];
      $166 = $162 - $165;
      HEAPF64[$1>>3] = $164;
      HEAPF64[$65>>3] = $166;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
     $167 = ($i2$041|0)==(2);
     if (!($167)) {
      label = 35;
     }
    }
    do {
     if ((label|0) == 35) {
      label = 0;
      $168 = +HEAPF64[$87>>3];
      $169 = +HEAPF64[$79>>3];
      $170 = $168 == $169;
      if ($170) {
       $171 = +HEAPF64[$100>>3];
       $172 = +HEAPF64[$80>>3];
       $phitmp$i$2 = $171 != $172;
       if (!($phitmp$i$2)) {
        break;
       }
      }
      $173 = +HEAPF64[$87>>3];
      $174 = +HEAPF64[$101>>3];
      $175 = +HEAPF64[$79>>3];
      $176 = $173 - $175;
      $177 = +HEAPF64[$81>>3];
      $178 = $174 - $177;
      HEAPF64[$1>>3] = $176;
      HEAPF64[$65>>3] = $178;
      __ZNSt3__1dvIdEENS_7complexIT_EERKS3_S5_($0,$x,$1);
      ;HEAP32[$x>>2]=HEAP32[$0>>2]|0;HEAP32[$x+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$x+12>>2]=HEAP32[$0+12>>2]|0;
     }
    } while(0);
    $179 = +HEAPF64[$x>>3];
    $180 = +HEAPF64[$87>>3];
    $181 = $180 - $179;
    HEAPF64[$87>>3] = $181;
    $182 = +HEAPF64[$63>>3];
    $183 = (((($roots) + ($i2$041<<4)|0)) + 8|0);
    $184 = +HEAPF64[$183>>3];
    $185 = $184 - $182;
    HEAPF64[$183>>3] = $185;
    $186 = +HEAPF64[$x>>3];
    $187 = +HEAPF64[$63>>3];
    $188 = (+_hypot($186,$187));
    HEAPF64[$84>>3] = $188;
    $changed$1$off0 = 1;
   }
   $115 = (($i2$041) + 1)|0;
   $exitcond58 = ($115|0)==(3);
   if ($exitcond58) {
    $changed$1$off0$lcssa = $changed$1$off0;
    break;
   } else {
    $changed$0$off040 = $changed$1$off0;$i2$041 = $115;
   }
  }
  $116 = (($step$043) + 1)|0;
  $117 = ($116|0)<(110);
  $or$cond = $changed$1$off0$lcssa & $117;
  if ($or$cond) {
   $step$043 = $116;
  } else {
   break;
  }
 }
 HEAP32[$numroots>>2] = 0;
 ;HEAP8[$visited>>0]=0|0;HEAP8[$visited+1>>0]=0|0;HEAP8[$visited+2>>0]=0|0;
 $i4$036 = 0;
 while(1) {
  $118 = (($visited) + ($i4$036)|0);
  $119 = HEAP8[$118>>0]|0;
  $120 = ($119<<24>>24)==(0);
  if ($120) {
   $121 = (($roots) + ($i4$036<<4)|0);
   $122 = +HEAPF64[$121>>3];
   $123 = (((($roots) + ($i4$036<<4)|0)) + 8|0);
   $124 = +HEAPF64[$123>>3];
   $j5$02128 = (($i4$036) + 1)|0;
   $125 = ($j5$02128|0)<(3);
   if ($125) {
    $126 = +HEAPF64[$121>>3];
    $$ph1530 = $122;$$ph29 = $124;$j5$02132 = $j5$02128;$n$0$ph31 = 1;
    L43: while(1) {
     $j5$022 = $j5$02132;
     while(1) {
      $127 = (($roots) + ($j5$022<<4)|0);
      $128 = +HEAPF64[$127>>3];
      $129 = $126 - $128;
      $130 = (+Math_abs((+$129)));
      $131 = $130 < 1.4901161193847656E-8;
      if ($131) {
       $133 = +HEAPF64[$123>>3];
       $134 = (((($roots) + ($j5$022<<4)|0)) + 8|0);
       $135 = +HEAPF64[$134>>3];
       $136 = $133 - $135;
       $137 = (+Math_abs((+$136)));
       $138 = $137 < 0.002;
       if ($138) {
        $$lcssa = $128;$$lcssa96 = $135;$j5$022$lcssa = $j5$022;
        break;
       }
      }
      $j5$0 = (($j5$022) + 1)|0;
      $132 = ($j5$0|0)<(3);
      if ($132) {
       $j5$022 = $j5$0;
      } else {
       $$ph$lcssa = $$ph29;$$ph15$lcssa = $$ph1530;$n$0$ph$lcssa = $n$0$ph31;
       break L43;
      }
     }
     $139 = $$ph1530 + $$lcssa;
     $140 = $$ph29 + $$lcssa96;
     $141 = (($n$0$ph31) + 1)|0;
     $142 = (($visited) + ($j5$022$lcssa)|0);
     HEAP8[$142>>0] = 1;
     $j5$021 = (($j5$022$lcssa) + 1)|0;
     $143 = ($j5$021|0)<(3);
     if ($143) {
      $$ph1530 = $139;$$ph29 = $140;$j5$02132 = $j5$021;$n$0$ph31 = $141;
     } else {
      $$ph$lcssa = $140;$$ph15$lcssa = $139;$n$0$ph$lcssa = $141;
      break;
     }
    }
    $144 = ($n$0$ph$lcssa|0)>(1);
    if ($144) {
     $145 = (+($n$0$ph$lcssa|0));
     $146 = $$ph15$lcssa / $145;
     $147 = $$ph$lcssa / $145;
     $148 = $147;$154 = $146;
    } else {
     $148 = $$ph$lcssa;$154 = $$ph15$lcssa;
    }
   } else {
    $148 = $124;$154 = $122;
   }
   $149 = (+__Z5IKabsd($148));
   $150 = $149 < 1.4901161193847656E-8;
   if ($150) {
    $151 = HEAP32[$numroots>>2]|0;
    $152 = (($151) + 1)|0;
    HEAP32[$numroots>>2] = $152;
    $153 = (($rawroots) + ($151<<3)|0);
    HEAPF64[$153>>3] = $154;
   }
  }
  $155 = (($i4$036) + 1)|0;
  $exitcond = ($155|0)==(3);
  if ($exitcond) {
   break;
  } else {
   $i4$036 = $155;
  }
 }
 STACKTOP = sp;return;
}
function __ZN8IKSolver10polyroots2EPdS0_Ri($rawcoeffs,$rawroots,$numroots) {
 $rawcoeffs = $rawcoeffs|0;
 $rawroots = $rawroots|0;
 $numroots = $numroots|0;
 var $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0, $3 = 0.0, $4 = 0.0, $5 = 0;
 var $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($rawcoeffs)) + 8|0);
 $1 = +HEAPF64[$0>>3];
 $2 = $1 * $1;
 $3 = +HEAPF64[$rawcoeffs>>3];
 $4 = $3 * 4.0;
 $5 = ((($rawcoeffs)) + 16|0);
 $6 = +HEAPF64[$5>>3];
 $7 = $4 * $6;
 $8 = $2 - $7;
 $9 = $8 < 0.0;
 if ($9) {
  HEAP32[$numroots>>2] = 0;
  return;
 }
 $10 = $8 == 0.0;
 if ($10) {
  $11 = $1 * -0.5;
  $12 = $11 / $3;
  HEAPF64[$rawroots>>3] = $12;
  HEAP32[$numroots>>2] = 1;
  return;
 } else {
  $13 = (+__Z6IKsqrtd($8));
  $14 = $13 - $1;
  $15 = $3 * 2.0;
  $16 = $14 / $15;
  HEAPF64[$rawroots>>3] = $16;
  $17 = +HEAPF64[$0>>3];
  $18 = -$17;
  $19 = $18 - $13;
  $20 = +HEAPF64[$rawcoeffs>>3];
  $21 = $20 * 2.0;
  $22 = $19 / $21;
  $23 = ((($rawroots)) + 8|0);
  HEAPF64[$23>>3] = $22;
  HEAP32[$numroots>>2] = 2;
  return;
 }
}
function _strtoull_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoull($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _strtoll_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoll($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _isdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $0 = $isdigit&1;
 return ($0|0);
}
function _isxdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isxdigit($c)|0);
 return ($0|0);
}
function _ilogb($x) {
 $x = +$x;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__x = 0, $__x1 = 0, $e$02 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__x = sp + 4|0;
 $__x1 = sp;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 if ((($4|0) == 2047)) {
  HEAPF32[$__x1>>2] = nan;
  $25 = $1 & 1048575;
  $26 = ($0|0)!=(0);
  $27 = ($25|0)!=(0);
  $28 = $26 | $27;
  $29 = $28 ? -2147483648 : 2147483647;
  $$0 = $29;
  STACKTOP = sp;return ($$0|0);
 } else if ((($4|0) == 0)) {
  $5 = (_bitshift64Shl(($0|0),($1|0),12)|0);
  $6 = tempRet0;
  $7 = ($5|0)==(0);
  $8 = ($6|0)==(0);
  $9 = $7 & $8;
  if ($9) {
   HEAPF32[$__x>>2] = nan;
   $$0 = -2147483648;
   STACKTOP = sp;return ($$0|0);
  }
  $10 = ($6|0)>(-1);
  $11 = ($5>>>0)>(4294967295);
  $12 = ($6|0)==(-1);
  $13 = $12 & $11;
  $14 = $10 | $13;
  if ($14) {
   $16 = $5;$17 = $6;$e$02 = -1023;
  } else {
   $$0 = -1023;
   STACKTOP = sp;return ($$0|0);
  }
  while(1) {
   $15 = (($e$02) + -1)|0;
   $18 = (_bitshift64Shl(($16|0),($17|0),1)|0);
   $19 = tempRet0;
   $20 = ($19|0)>(-1);
   $21 = ($18>>>0)>(4294967295);
   $22 = ($19|0)==(-1);
   $23 = $22 & $21;
   $24 = $20 | $23;
   if ($24) {
    $16 = $18;$17 = $19;$e$02 = $15;
   } else {
    $$0 = $15;
    break;
   }
  }
  STACKTOP = sp;return ($$0|0);
 } else {
  $30 = (($4) + -1023)|0;
  $$0 = $30;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _logb($x) {
 $x = +$x;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = $1 & 2146435072;
 $3 = ($2>>>0)<(2146435072);
 $4 = (0)<(0);
 $5 = ($2|0)==(2146435072);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if (!($7)) {
  $8 = $x * $x;
  $$0 = $8;
  return (+$$0);
 }
 $9 = $x == 0.0;
 if ($9) {
  $10 = $x * $x;
  $11 = -1.0 / $10;
  $$0 = $11;
  return (+$$0);
 } else {
  $12 = (_ilogb($x)|0);
  $13 = (+($12|0));
  $$0 = $13;
  return (+$$0);
 }
 return +(0.0);
}
function _mbrlen($s,$n,$st) {
 $s = $s|0;
 $n = $n|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)!=(0|0);
 $1 = $0 ? $st : 1888;
 $2 = (_mbrtowc(0,$s,$n,$1)|0);
 return ($2|0);
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa34 = 0, $$st = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($st|0)==(0|0);
 $$st = $1 ? 1896 : $st;
 $2 = HEAP32[$$st>>2]|0;
 $3 = ($src|0)==(0|0);
 L1: do {
  if ($3) {
   $4 = ($2|0)==(0);
   if ($4) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $5 = ($wc|0)==(0|0);
   if ($5) {
    HEAP32[$0>>2] = $0;
    $11 = $0;
   } else {
    $11 = $wc;
   }
   $6 = ($n|0)==(0);
   if ($6) {
    $$0 = -2;
    STACKTOP = sp;return ($$0|0);
   }
   $7 = ($2|0)==(0);
   do {
    if ($7) {
     $8 = HEAP8[$src>>0]|0;
     $9 = $8&255;
     $10 = ($8<<24>>24)>(-1);
     if ($10) {
      HEAP32[$11>>2] = $9;
      $12 = ($8<<24>>24)!=(0);
      $13 = $12&1;
      $$0 = $13;
      STACKTOP = sp;return ($$0|0);
     } else {
      $14 = (($9) + -194)|0;
      $15 = ($14>>>0)>(50);
      if ($15) {
       break L1;
      }
      $16 = ((($src)) + 1|0);
      $17 = (1680 + ($14<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($n) + -1)|0;
      $20 = ($19|0)==(0);
      if ($20) {
       $c$2 = $18;
       break;
      } else {
       $$023 = $19;$c$04 = $18;$s$05 = $16;
       label = 11;
       break;
      }
     }
    } else {
     $$023 = $n;$c$04 = $2;$s$05 = $src;
     label = 11;
    }
   } while(0);
   L18: do {
    if ((label|0) == 11) {
     $21 = HEAP8[$s$05>>0]|0;
     $22 = $21&255;
     $23 = $22 >>> 3;
     $24 = (($23) + -16)|0;
     $25 = $c$04 >> 26;
     $26 = (($23) + ($25))|0;
     $27 = $24 | $26;
     $28 = ($27>>>0)>(7);
     if ($28) {
      break L1;
     } else {
      $$1 = $$023;$32 = $21;$c$1 = $c$04;$s$1 = $s$05;
     }
     while(1) {
      $29 = $c$1 << 6;
      $30 = ((($s$1)) + 1|0);
      $31 = $32&255;
      $33 = (($31) + -128)|0;
      $34 = $33 | $29;
      $35 = (($$1) + -1)|0;
      $36 = ($34|0)<(0);
      if (!($36)) {
       $$lcssa = $34;$$lcssa34 = $35;
       break;
      }
      $38 = ($35|0)==(0);
      if ($38) {
       $c$2 = $34;
       break L18;
      }
      $39 = HEAP8[$30>>0]|0;
      $40 = $39 & -64;
      $41 = ($40<<24>>24)==(-128);
      if ($41) {
       $$1 = $35;$32 = $39;$c$1 = $34;$s$1 = $30;
      } else {
       break L1;
      }
     }
     HEAP32[$$st>>2] = 0;
     HEAP32[$11>>2] = $$lcssa;
     $37 = (($n) - ($$lcssa34))|0;
     $$0 = $37;
     STACKTOP = sp;return ($$0|0);
    }
   } while(0);
   HEAP32[$$st>>2] = $c$2;
   $$0 = -2;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$$st>>2] = 0;
 $42 = (___errno_location()|0);
 HEAP32[$42>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($st) {
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)==(0|0);
 if ($0) {
  $4 = 1;
 } else {
  $1 = HEAP32[$st>>2]|0;
  $2 = ($1|0)==(0);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st) {
 $wcs = $wcs|0;
 $src = $src|0;
 $n = $n|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$02$ = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $or$cond = 0, $or$cond17 = 0, $s = 0, $wbuf = 0, $wcs$ = 0;
 var $wn$ = 0, $ws$020 = 0, $ws$020$lcssa56 = 0, $ws$09 = 0, $ws$1 = 0, $ws$215 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0;
 $wbuf = sp + 8|0;
 $s = sp;
 $0 = HEAP32[$src>>2]|0;
 HEAP32[$s>>2] = $0;
 $1 = ($wcs|0)!=(0|0);
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($wn$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $n;$$0218 = $wn$;$37 = $$cast;$cnt$019 = 0;$ws$020 = $wcs$;
   while(1) {
    $4 = $$021 >>> 2;
    $5 = ($4>>>0)>=($$0218>>>0);
    $6 = ($$021>>>0)>(131);
    $7 = $6 | $5;
    if (!($7)) {
     $$1 = $$021;$$24 = $$0218;$18 = $37;$cnt$1 = $cnt$019;$ws$09 = $ws$020;
     break L1;
    }
    $$02$ = $5 ? $$0218 : $4;
    $8 = (($$021) - ($$02$))|0;
    $9 = (_mbsrtowcs($ws$020,$s,$$02$,$st)|0);
    $10 = ($9|0)==(-1);
    if ($10) {
     $$lcssa57 = $8;$ws$020$lcssa56 = $ws$020;
     break;
    }
    $11 = ($ws$020|0)==($wbuf|0);
    $12 = (($ws$020) + ($9<<2)|0);
    $13 = $11 ? 0 : $9;
    $$13 = (($$0218) - ($13))|0;
    $ws$1 = $11 ? $ws$020 : $12;
    $14 = (($9) + ($cnt$019))|0;
    $15 = HEAP32[$s>>2]|0;
    $16 = ($15|0)!=(0|0);
    $17 = ($$0218|0)!=($13|0);
    $or$cond = $17 & $16;
    if ($or$cond) {
     $$021 = $8;$$0218 = $$13;$37 = $15;$cnt$019 = $14;$ws$020 = $ws$1;
    } else {
     $$1 = $8;$$24 = $$13;$18 = $15;$cnt$1 = $14;$ws$09 = $ws$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$s>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$18 = $$pr$pre;$cnt$1 = -1;$ws$09 = $ws$020$lcssa56;
  } else {
   $$1 = $n;$$24 = $wn$;$18 = $$cast;$cnt$1 = 0;$ws$09 = $wcs$;
  }
 } while(0);
 $19 = ($18|0)==(0|0);
 L8: do {
  if ($19) {
   $cnt$3 = $cnt$1;
  } else {
   $20 = ($$24|0)!=(0);
   $21 = ($$1|0)!=(0);
   $22 = $20 & $21;
   if ($22) {
    $$216 = $$1;$$313 = $$24;$23 = $18;$cnt$214 = $cnt$1;$ws$215 = $ws$09;
    while(1) {
     $24 = (_mbrtowc($ws$215,$23,$$216,$st)|0);
     $25 = (($24) + 2)|0;
     $26 = ($25>>>0)<(3);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $27 = HEAP32[$s>>2]|0;
     $28 = (($27) + ($24)|0);
     HEAP32[$s>>2] = $28;
     $29 = (($$216) - ($24))|0;
     $30 = ((($ws$215)) + 4|0);
     $31 = (($$313) + -1)|0;
     $32 = (($cnt$214) + 1)|0;
     $33 = ($31|0)!=(0);
     $34 = ($$216|0)!=($24|0);
     $35 = $33 & $34;
     if ($35) {
      $$216 = $29;$$313 = $31;$23 = $28;$cnt$214 = $32;$ws$215 = $30;
     } else {
      $cnt$3 = $32;
      break L8;
     }
    }
    if ((($$lcssa|0) == 0)) {
     HEAP32[$s>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break;
    } else if ((($$lcssa|0) == -1)) {
     $cnt$3 = -1;
     break;
    } else {
     HEAP32[$st>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $36 = HEAP32[$s>>2]|0;
 HEAP32[$src>>2] = $36;
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0;
 var $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa102 = 0, $$lcssa90 = 0, $$lcssa94 = 0, $$lcssa96 = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$old1 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0, $s$0 = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0;
 var $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 16;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 37;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03 = $wn;$s$0 = $0;
   label = 7;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 6;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 26;
    break;
   } else {
    $$0219 = $$02$ph;$$4718 = $$47$ph;$s$520 = $s$5$ph;
   }
   while(1) {
    $63 = HEAP8[$s$520>>0]|0;
    $64 = $63&255;
    $65 = (($64) + -1)|0;
    $66 = ($65>>>0)<(127);
    do {
     if ($66) {
      $67 = $s$520;
      $68 = $67 & 3;
      $69 = ($68|0)==(0);
      $70 = ($$4718>>>0)>(4);
      $or$cond = $70 & $69;
      if ($or$cond) {
       $$1 = $$0219;$$5 = $$4718;$s$6 = $s$520;
       while(1) {
        $71 = HEAP32[$s$6>>2]|0;
        $72 = (($71) + -16843009)|0;
        $73 = $72 | $71;
        $74 = $73 & -2139062144;
        $75 = ($74|0)==(0);
        if (!($75)) {
         $$1$lcssa = $$1;$$5$lcssa = $$5;$$lcssa94 = $71;$s$6$lcssa = $s$6;
         label = 32;
         break;
        }
        $76 = ((($s$6)) + 1|0);
        $77 = $71 & 255;
        $78 = ((($$1)) + 4|0);
        HEAP32[$$1>>2] = $77;
        $79 = ((($s$6)) + 2|0);
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $82 = ((($$1)) + 8|0);
        HEAP32[$78>>2] = $81;
        $83 = ((($s$6)) + 3|0);
        $84 = HEAP8[$79>>0]|0;
        $85 = $84&255;
        $86 = ((($$1)) + 12|0);
        HEAP32[$82>>2] = $85;
        $87 = ((($s$6)) + 4|0);
        $88 = HEAP8[$83>>0]|0;
        $89 = $88&255;
        $90 = ((($$1)) + 16|0);
        HEAP32[$86>>2] = $89;
        $91 = (($$5) + -4)|0;
        $$old1 = ($91>>>0)>(4);
        if ($$old1) {
         $$1 = $90;$$5 = $91;$s$6 = $87;
        } else {
         $$lcssa96 = $87;$$lcssa97 = $90;$$lcssa98 = $91;
         label = 31;
         break;
        }
       }
       if ((label|0) == 31) {
        label = 0;
        $$pre$pre = HEAP8[$$lcssa96>>0]|0;
        $$2 = $$lcssa97;$$6 = $$lcssa98;$94 = $$pre$pre;$s$7 = $$lcssa96;
        break;
       }
       else if ((label|0) == 32) {
        label = 0;
        $92 = $$lcssa94&255;
        $$2 = $$1$lcssa;$$6 = $$5$lcssa;$94 = $92;$s$7 = $s$6$lcssa;
        break;
       }
      } else {
       $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
      }
     } else {
      $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
     }
    } while(0);
    $93 = $94&255;
    $95 = (($93) + -1)|0;
    $96 = ($95>>>0)<(127);
    if (!($96)) {
     $$2$lcssa = $$2;$$6$lcssa = $$6;$$lcssa102 = $93;$s$7$lcssa = $s$7;
     break;
    }
    $97 = ((($s$7)) + 1|0);
    $98 = ((($$2)) + 4|0);
    HEAP32[$$2>>2] = $93;
    $99 = (($$6) + -1)|0;
    $100 = ($99|0)==(0);
    if ($100) {
     $s$5$lcssa = $97;
     label = 26;
     break L7;
    } else {
     $$0219 = $98;$$4718 = $99;$s$520 = $97;
    }
   }
   $101 = (($$lcssa102) + -194)|0;
   $102 = ($101>>>0)>(50);
   if ($102) {
    $$434 = $$2$lcssa;$$833 = $$6$lcssa;$s$1035 = $s$7$lcssa;
    label = 48;
    break;
   }
   $103 = ((($s$7$lcssa)) + 1|0);
   $104 = (1680 + ($101<<2)|0);
   $105 = HEAP32[$104>>2]|0;
   $$3 = $$2$lcssa;$$7 = $$6$lcssa;$c$4 = $105;$s$8 = $103;
   label = 37;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $7 = HEAP8[$s$0>>0]|0;
   $8 = $7&255;
   $9 = (($8) + -1)|0;
   $10 = ($9>>>0)<(127);
   if ($10) {
    $11 = $s$0;
    $12 = $11 & 3;
    $13 = ($12|0)==(0);
    if ($13) {
     $14 = HEAP32[$s$0>>2]|0;
     $15 = (($14) + -16843009)|0;
     $16 = $15 | $14;
     $17 = $16 & -2139062144;
     $18 = ($17|0)==(0);
     if ($18) {
      $$1415 = $$03;$s$116 = $s$0;
      while(1) {
       $19 = ((($s$116)) + 4|0);
       $20 = (($$1415) + -4)|0;
       $21 = HEAP32[$19>>2]|0;
       $22 = (($21) + -16843009)|0;
       $23 = $22 | $21;
       $24 = $23 & -2139062144;
       $25 = ($24|0)==(0);
       if ($25) {
        $$1415 = $20;$s$116 = $19;
       } else {
        $$14$lcssa = $20;$$in = $21;$s$1$lcssa = $19;
        break;
       }
      }
     } else {
      $$14$lcssa = $$03;$$in = $14;$s$1$lcssa = $s$0;
     }
     $26 = $$in&255;
     $$25 = $$14$lcssa;$28 = $26;$s$2 = $s$1$lcssa;
    } else {
     $$25 = $$03;$28 = $7;$s$2 = $s$0;
    }
   } else {
    $$25 = $$03;$28 = $7;$s$2 = $s$0;
   }
   $27 = $28&255;
   $29 = (($27) + -1)|0;
   $30 = ($29>>>0)<(127);
   if ($30) {
    $31 = ((($s$2)) + 1|0);
    $32 = (($$25) + -1)|0;
    $$03 = $32;$s$0 = $31;
    label = 7;
    continue;
   } else {
    $$25$lcssa = $$25;$$lcssa90 = $27;$s$2$lcssa = $s$2;
   }
   $33 = (($$lcssa90) + -194)|0;
   $34 = ($33>>>0)>(50);
   if ($34) {
    $$434 = $ws;$$833 = $$25$lcssa;$s$1035 = $s$2$lcssa;
    label = 48;
    break;
   }
   $35 = ((($s$2$lcssa)) + 1|0);
   $36 = (1680 + ($33<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $$36 = $$25$lcssa;$c$2 = $37;$s$3 = $35;
   label = 16;
   continue;
  }
  else if ((label|0) == 16) {
   label = 0;
   $38 = HEAP8[$s$3>>0]|0;
   $39 = $38&255;
   $40 = $39 >>> 3;
   $41 = (($40) + -16)|0;
   $42 = $c$2 >> 26;
   $43 = (($40) + ($42))|0;
   $44 = $41 | $43;
   $45 = ($44>>>0)>(7);
   if ($45) {
    label = 17;
    break;
   }
   $47 = ((($s$3)) + 1|0);
   $48 = $c$2 & 33554432;
   $49 = ($48|0)==(0);
   if ($49) {
    $s$4 = $47;
   } else {
    $50 = HEAP8[$47>>0]|0;
    $51 = $50 & -64;
    $52 = ($51<<24>>24)==(-128);
    if (!($52)) {
     label = 20;
     break;
    }
    $54 = ((($s$3)) + 2|0);
    $55 = $c$2 & 524288;
    $56 = ($55|0)==(0);
    if ($56) {
     $s$4 = $54;
    } else {
     $57 = HEAP8[$54>>0]|0;
     $58 = $57 & -64;
     $59 = ($58<<24>>24)==(-128);
     if (!($59)) {
      label = 23;
      break;
     }
     $61 = ((($s$3)) + 3|0);
     $s$4 = $61;
    }
   }
   $62 = (($$36) + -1)|0;
   $$03 = $62;$s$0 = $s$4;
   label = 7;
   continue;
  }
  else if ((label|0) == 37) {
   label = 0;
   $106 = HEAP8[$s$8>>0]|0;
   $107 = $106&255;
   $108 = $107 >>> 3;
   $109 = (($108) + -16)|0;
   $110 = $c$4 >> 26;
   $111 = (($108) + ($110))|0;
   $112 = $109 | $111;
   $113 = ($112>>>0)>(7);
   if ($113) {
    label = 38;
    break;
   }
   $115 = $c$4 << 6;
   $116 = ((($s$8)) + 1|0);
   $117 = (($107) + -128)|0;
   $118 = $117 | $115;
   $119 = ($118|0)<(0);
   if ($119) {
    $120 = HEAP8[$116>>0]|0;
    $121 = $120&255;
    $122 = $121 & 192;
    $123 = ($122|0)==(128);
    if (!($123)) {
     label = 41;
     break;
    }
    $125 = $118 << 6;
    $126 = ((($s$8)) + 2|0);
    $127 = (($121) + -128)|0;
    $128 = $127 | $125;
    $129 = ($128|0)<(0);
    if ($129) {
     $130 = HEAP8[$126>>0]|0;
     $131 = $130&255;
     $132 = $131 & 192;
     $133 = ($132|0)==(128);
     if (!($133)) {
      label = 44;
      break;
     }
     $135 = $128 << 6;
     $136 = ((($s$8)) + 3|0);
     $137 = (($131) + -128)|0;
     $138 = $137 | $135;
     $c$5 = $138;$s$9 = $136;
    } else {
     $c$5 = $128;$s$9 = $126;
    }
   } else {
    $c$5 = $118;$s$9 = $116;
   }
   $139 = ((($$3)) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $140 = (($$7) + -1)|0;
   $$02$ph = $139;$$47$ph = $140;$s$5$ph = $s$9;
   label = 6;
   continue;
  }
 }
 if ((label|0) == 17) {
  $46 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $46;
  label = 47;
 }
 else if ((label|0) == 20) {
  $53 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $53;
  label = 47;
 }
 else if ((label|0) == 23) {
  $60 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $60;
  label = 47;
 }
 else if ((label|0) == 26) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
  return ($$0|0);
 }
 else if ((label|0) == 38) {
  $114 = ((($s$8)) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $114;
  label = 47;
 }
 else if ((label|0) == 41) {
  $124 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $124;
 }
 else if ((label|0) == 44) {
  $134 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $134;
 }
 if ((label|0) == 47) {
  $141 = ($c$6|0)==(0);
  if ($141) {
   $$434 = $$4;$$833 = $$8;$s$1035 = $s$10;
   label = 48;
  } else {
   $$48 = $$4;$s$109 = $s$10;
  }
 }
 if ((label|0) == 48) {
  $142 = HEAP8[$s$1035>>0]|0;
  $143 = ($142<<24>>24)==(0);
  if ($143) {
   $144 = ($$434|0)==(0|0);
   if (!($144)) {
    HEAP32[$$434>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $145 = (($wn) - ($$833))|0;
   $$0 = $145;
   return ($$0|0);
  } else {
   $$48 = $$434;$s$109 = $s$1035;
  }
 }
 $146 = (___errno_location()|0);
 HEAP32[$146>>2] = 84;
 $147 = ($$48|0)==(0|0);
 if ($147) {
  $$0 = -1;
  return ($$0|0);
 }
 HEAP32[$src>>2] = $s$109;
 $$0 = -1;
 return ($$0|0);
}
function _mbtowc($wc,$src,$n) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($src|0)==(0|0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ($n|0)==(0);
 do {
  if (!($2)) {
   $3 = ($wc|0)==(0|0);
   if ($3) {
    HEAP32[$0>>2] = $0;
    $7 = $0;
   } else {
    $7 = $wc;
   }
   $4 = HEAP8[$src>>0]|0;
   $5 = $4&255;
   $6 = ($4<<24>>24)>(-1);
   if ($6) {
    HEAP32[$7>>2] = $5;
    $8 = ($4<<24>>24)!=(0);
    $9 = $8&1;
    $$0 = $9;
    STACKTOP = sp;return ($$0|0);
   }
   $10 = (($5) + -194)|0;
   $11 = ($10>>>0)>(50);
   if (!($11)) {
    $12 = ((($src)) + 1|0);
    $13 = (1680 + ($10<<2)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($n>>>0)<(4);
    if ($15) {
     $16 = ($n*6)|0;
     $17 = (($16) + -6)|0;
     $18 = -2147483648 >>> $17;
     $19 = $14 & $18;
     $20 = ($19|0)==(0);
     if (!($20)) {
      break;
     }
    }
    $21 = HEAP8[$12>>0]|0;
    $22 = $21&255;
    $23 = $22 >>> 3;
    $24 = (($23) + -16)|0;
    $25 = $14 >> 26;
    $26 = (($23) + ($25))|0;
    $27 = $24 | $26;
    $28 = ($27>>>0)>(7);
    if (!($28)) {
     $29 = $14 << 6;
     $30 = (($22) + -128)|0;
     $31 = $30 | $29;
     $32 = ($31|0)<(0);
     if (!($32)) {
      HEAP32[$7>>2] = $31;
      $$0 = 2;
      STACKTOP = sp;return ($$0|0);
     }
     $33 = ((($src)) + 2|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $35 & 192;
     $37 = ($36|0)==(128);
     if ($37) {
      $38 = $31 << 6;
      $39 = (($35) + -128)|0;
      $40 = $39 | $38;
      $41 = ($40|0)<(0);
      if (!($41)) {
       HEAP32[$7>>2] = $40;
       $$0 = 3;
       STACKTOP = sp;return ($$0|0);
      }
      $42 = ((($src)) + 3|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = $43&255;
      $45 = $44 & 192;
      $46 = ($45|0)==(128);
      if ($46) {
       $47 = $40 << 6;
       $48 = (($44) + -128)|0;
       $49 = $48 | $47;
       HEAP32[$7>>2] = $49;
       $$0 = 4;
       STACKTOP = sp;return ($$0|0);
      }
     }
    }
   }
  }
 } while(0);
 $50 = (___errno_location()|0);
 HEAP32[$50>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st) {
 $dst = $dst|0;
 $wcs = $wcs|0;
 $wn = $wn|0;
 $n = $n|0;
 $st = $st|0;
 var $$02$$0 = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $or$cond = 0;
 var $or$cond17 = 0, $s$020 = 0, $s$020$lcssa56 = 0, $s$09 = 0, $s$1 = 0, $s$215 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $buf = sp + 8|0;
 $ws = sp;
 $0 = HEAP32[$wcs>>2]|0;
 HEAP32[$ws>>2] = $0;
 $1 = ($dst|0)!=(0|0);
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($n$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $wn;$$0218 = $n$;$38 = $$cast;$cnt$019 = 0;$s$020 = $dst$;
   while(1) {
    $4 = ($$021>>>0)>=($$0218>>>0);
    $5 = ($$021>>>0)>(32);
    $6 = $4 | $5;
    if (!($6)) {
     $$1 = $$021;$$24 = $$0218;$17 = $38;$cnt$1 = $cnt$019;$s$09 = $s$020;
     break L1;
    }
    $$02$$0 = $4 ? $$0218 : $$021;
    $7 = (($$021) - ($$02$$0))|0;
    $8 = (_wcsrtombs($s$020,$ws,$$02$$0,0)|0);
    $9 = ($8|0)==(-1);
    if ($9) {
     $$lcssa57 = $7;$s$020$lcssa56 = $s$020;
     break;
    }
    $10 = ($s$020|0)==($buf|0);
    $11 = (($s$020) + ($8)|0);
    $12 = $10 ? 0 : $8;
    $$13 = (($$0218) - ($12))|0;
    $s$1 = $10 ? $s$020 : $11;
    $13 = (($8) + ($cnt$019))|0;
    $14 = HEAP32[$ws>>2]|0;
    $15 = ($14|0)!=(0|0);
    $16 = ($$0218|0)!=($12|0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$021 = $7;$$0218 = $$13;$38 = $14;$cnt$019 = $13;$s$020 = $s$1;
    } else {
     $$1 = $7;$$24 = $$13;$17 = $14;$cnt$1 = $13;$s$09 = $s$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$ws>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$17 = $$pr$pre;$cnt$1 = -1;$s$09 = $s$020$lcssa56;
  } else {
   $$1 = $wn;$$24 = $n$;$17 = $$cast;$cnt$1 = 0;$s$09 = $dst$;
  }
 } while(0);
 $18 = ($17|0)==(0|0);
 L8: do {
  if ($18) {
   $cnt$3 = $cnt$1;
  } else {
   $19 = ($$24|0)!=(0);
   $20 = ($$1|0)!=(0);
   $21 = $19 & $20;
   if ($21) {
    $$216 = $$1;$$313 = $$24;$23 = $17;$cnt$214 = $cnt$1;$s$215 = $s$09;
    while(1) {
     $22 = HEAP32[$23>>2]|0;
     $24 = (_wcrtomb($s$215,$22,0)|0);
     $25 = (($24) + 1)|0;
     $26 = ($25>>>0)<(2);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $28 = HEAP32[$ws>>2]|0;
     $29 = ((($28)) + 4|0);
     HEAP32[$ws>>2] = $29;
     $30 = (($$216) + -1)|0;
     $31 = (($s$215) + ($24)|0);
     $32 = (($$313) - ($24))|0;
     $33 = (($cnt$214) + 1)|0;
     $34 = ($$313|0)!=($24|0);
     $35 = ($30|0)!=(0);
     $36 = $34 & $35;
     if ($36) {
      $$216 = $30;$$313 = $32;$23 = $29;$cnt$214 = $33;$s$215 = $31;
     } else {
      $cnt$3 = $33;
      break L8;
     }
    }
    $27 = ($$lcssa|0)==(0);
    if ($27) {
     HEAP32[$ws>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
    } else {
     $cnt$3 = -1;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $37 = HEAP32[$ws>>2]|0;
 HEAP32[$wcs>>2] = $37;
 STACKTOP = sp;return ($cnt$3|0);
}
function _wcsrtombs($s,$ws,$n,$st) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa82 = 0, $$5 = 0, $$pn = 0, $$pre = 0;
 var $$pre43 = 0, $$pre44 = 0, $$pre45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $buf = sp;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $2 = HEAP32[$ws>>2]|0;
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==(0);
  if ($4) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$0218 = 0;$5 = $3;$ws2$019 = $2;
  }
  while(1) {
   $6 = ($5>>>0)>(127);
   if ($6) {
    $7 = (_wcrtomb($buf,$5,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     $$0 = -1;
     label = 26;
     break;
    } else {
     $$pn = $7;
    }
   } else {
    $$pn = 1;
   }
   $$13 = (($$pn) + ($$0218))|0;
   $9 = ((($ws2$019)) + 4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $$0 = $$13;
    label = 26;
    break;
   } else {
    $$0218 = $$13;$5 = $10;$ws2$019 = $9;
   }
  }
  if ((label|0) == 26) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1 = ($n>>>0)>(3);
 L14: do {
  if ($1) {
   $$pre = HEAP32[$ws>>2]|0;
   $$0129 = $s;$$2428 = $n;$14 = $$pre;
   while(1) {
    $13 = HEAP32[$14>>2]|0;
    $15 = (($13) + -1)|0;
    $16 = ($15>>>0)>(126);
    if ($16) {
     $17 = ($13|0)==(0);
     if ($17) {
      $$0129$lcssa = $$0129;$$2428$lcssa = $$2428;
      break;
     }
     $19 = (_wcrtomb($$0129,$13,0)|0);
     $20 = ($19|0)==(-1);
     if ($20) {
      $$0 = -1;
      label = 26;
      break;
     }
     $21 = (($$0129) + ($19)|0);
     $22 = (($$2428) - ($19))|0;
     $$1 = $21;$$35 = $22;$27 = $14;
    } else {
     $23 = $13&255;
     $24 = ((($$0129)) + 1|0);
     HEAP8[$$0129>>0] = $23;
     $25 = (($$2428) + -1)|0;
     $$pre43 = HEAP32[$ws>>2]|0;
     $$1 = $24;$$35 = $25;$27 = $$pre43;
    }
    $26 = ((($27)) + 4|0);
    HEAP32[$ws>>2] = $26;
    $28 = ($$35>>>0)>(3);
    if ($28) {
     $$0129 = $$1;$$2428 = $$35;$14 = $26;
    } else {
     $$01$lcssa = $$1;$$24$lcssa = $$35;
     break L14;
    }
   }
   if ((label|0) == 26) {
    STACKTOP = sp;return ($$0|0);
   }
   HEAP8[$$0129$lcssa>>0] = 0;
   HEAP32[$ws>>2] = 0;
   $18 = (($n) - ($$2428$lcssa))|0;
   $$0 = $18;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$01$lcssa = $s;$$24$lcssa = $n;
  }
 } while(0);
 $12 = ($$24$lcssa|0)==(0);
 if ($12) {
  $$0 = $n;
  STACKTOP = sp;return ($$0|0);
 }
 $$pre44 = HEAP32[$ws>>2]|0;
 $$223 = $$01$lcssa;$$422 = $$24$lcssa;$30 = $$pre44;
 while(1) {
  $29 = HEAP32[$30>>2]|0;
  $31 = (($29) + -1)|0;
  $32 = ($31>>>0)>(126);
  if ($32) {
   $33 = ($29|0)==(0);
   if ($33) {
    $$223$lcssa = $$223;$$422$lcssa = $$422;
    label = 19;
    break;
   }
   $35 = (_wcrtomb($buf,$29,0)|0);
   $36 = ($35|0)==(-1);
   if ($36) {
    $$0 = -1;
    label = 26;
    break;
   }
   $37 = ($$422>>>0)<($35>>>0);
   if ($37) {
    $$422$lcssa82 = $$422;
    label = 22;
    break;
   }
   $39 = HEAP32[$30>>2]|0;
   (_wcrtomb($$223,$39,0)|0);
   $40 = (($$223) + ($35)|0);
   $41 = (($$422) - ($35))|0;
   $$3 = $40;$$5 = $41;$46 = $30;
  } else {
   $42 = $29&255;
   $43 = ((($$223)) + 1|0);
   HEAP8[$$223>>0] = $42;
   $44 = (($$422) + -1)|0;
   $$pre45 = HEAP32[$ws>>2]|0;
   $$3 = $43;$$5 = $44;$46 = $$pre45;
  }
  $45 = ((($46)) + 4|0);
  HEAP32[$ws>>2] = $45;
  $47 = ($$5|0)==(0);
  if ($47) {
   $$0 = $n;
   label = 26;
   break;
  } else {
   $$223 = $$3;$$422 = $$5;$30 = $45;
  }
 }
 if ((label|0) == 19) {
  HEAP8[$$223$lcssa>>0] = 0;
  HEAP32[$ws>>2] = 0;
  $34 = (($n) - ($$422$lcssa))|0;
  $$0 = $34;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 22) {
  $38 = (($n) - ($$422$lcssa82))|0;
  $$0 = $38;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 26) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = (_memchr($1,0,$2)|0);
 $4 = ($3|0)==(0|0);
 $5 = $3;
 $6 = $1;
 $7 = (($5) - ($6))|0;
 $k$0 = $4 ? $2 : $7;
 $8 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $8 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $9 = (($1) + ($k$0$len)|0);
 $10 = ((($f)) + 4|0);
 HEAP32[$10>>2] = $9;
 $11 = (($1) + ($k$0)|0);
 $12 = ((($f)) + 8|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$0>>2] = $11;
 return ($k$0$len|0);
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vasprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap2 = sp;
 $0 = (_malloc(240)|0);
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = -1;
  } else {
   $vacopy_currentptr = HEAP32[$ap>>2]|0;
   HEAP32[$ap2>>2] = $vacopy_currentptr;
   $2 = (_vsnprintf($0,240,$fmt,$ap2)|0);
   $3 = ($2>>>0)<(240);
   if ($3) {
    $4 = (($2) + 1)|0;
    $5 = (_realloc($0,$4)|0);
    $6 = ($5|0)!=(0|0);
    $7 = $6 ? $5 : $0;
    HEAP32[$s>>2] = $7;
    $$0 = $2;
    break;
   }
   _free($0);
   $8 = ($2|0)<(0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = (($2) + 1)|0;
    $10 = (_malloc($9)|0);
    HEAP32[$s>>2] = $10;
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$0 = -1;
    } else {
     $12 = (_vsnprintf($10,$9,$fmt,$ap)|0);
     $$0 = $12;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _MUSL_vfscanf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$9 = 0, $$lcssa = 0, $$lcssa38 = 0, $$lcssa520 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi224Z2D = 0, $$pre208 = 0, $$pre210 = 0, $$pre212 = 0, $$pre214 = 0, $$pre216 = 0, $$pre220 = 0, $$pre222 = 0, $$pre223 = 0;
 var $$size$0 = 0, $$width$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0.0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0.0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0203 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $base$0 = 0, $c$0100 = 0, $dest$0 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0;
 var $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0, $factor16 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$lcssa = 0, $i$0$ph20 = 0, $i$0$ph20$lcssa = 0, $i$0$ph20$us105 = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0;
 var $isdigit = 0, $isdigit7 = 0, $isdigit795 = 0, $isdigittmp = 0, $isdigittmp6 = 0, $isdigittmp694 = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0$ = 0, $matches$0110 = 0, $matches$0110$lcssa = 0, $matches$0110501 = 0, $matches$1 = 0, $matches$2 = 0, $matches$3 = 0, $not$ = 0, $or$cond$us = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond8 = 0;
 var $p$0116 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$396 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0115 = 0, $pos$1 = 0, $pos$2 = 0, $s$0108 = 0, $s$0108$lcssa = 0;
 var $s$1 = 0, $s$2$ph = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $scanset = 0, $size$0 = 0, $st = 0, $vacopy_currentptr = 0, $wc = 0, $wcs$0109 = 0, $wcs$0109$lcssa = 0, $wcs$1 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph138 = 0;
 var $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$097 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $ap2$i = sp + 16|0;
 $st = sp + 8|0;
 $scanset = sp + 33|0;
 $wc = sp;
 $0 = sp + 32|0;
 $1 = HEAP8[$fmt>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $matches$3 = 0;
  STACKTOP = sp;return ($matches$3|0);
 }
 $3 = ((($f)) + 4|0);
 $4 = ((($f)) + 100|0);
 $5 = ((($f)) + 108|0);
 $6 = ((($f)) + 8|0);
 $7 = ((($scanset)) + 10|0);
 $8 = ((($scanset)) + 33|0);
 $9 = ((($st)) + 4|0);
 $10 = ((($scanset)) + 46|0);
 $11 = ((($scanset)) + 94|0);
 $13 = $1;$matches$0110 = 0;$p$0116 = $fmt;$pos$0115 = 0;$s$0108 = 0;$wcs$0109 = 0;
 L4: while(1) {
  $12 = $13&255;
  $14 = (_isspace($12)|0);
  $15 = ($14|0)==(0);
  L6: do {
   if ($15) {
    $42 = HEAP8[$p$0116>>0]|0;
    $43 = ($42<<24>>24)==(37);
    L21: do {
     if ($43) {
      $44 = ((($p$0116)) + 1|0);
      $45 = HEAP8[$44>>0]|0;
      do {
       if ((($45<<24>>24) == 37)) {
        break L21;
       } else if ((($45<<24>>24) == 42)) {
        $66 = ((($p$0116)) + 2|0);
        $dest$0 = 0;$p$2 = $66;
       } else {
        $67 = $45&255;
        $isdigittmp = (($67) + -48)|0;
        $isdigit = ($isdigittmp>>>0)<(10);
        if ($isdigit) {
         $68 = ((($p$0116)) + 2|0);
         $69 = HEAP8[$68>>0]|0;
         $70 = ($69<<24>>24)==(36);
         if ($70) {
          $vacopy_currentptr = HEAP32[$ap>>2]|0;
          HEAP32[$ap2$i>>2] = $vacopy_currentptr;
          $i$0$i = $isdigittmp;
          while(1) {
           $71 = ($i$0$i>>>0)>(1);
           $arglist_current = HEAP32[$ap2$i>>2]|0;
           $72 = $arglist_current;
           $73 = ((0) + 4|0);
           $expanded4 = $73;
           $expanded = (($expanded4) - 1)|0;
           $74 = (($72) + ($expanded))|0;
           $75 = ((0) + 4|0);
           $expanded8 = $75;
           $expanded7 = (($expanded8) - 1)|0;
           $expanded6 = $expanded7 ^ -1;
           $76 = $74 & $expanded6;
           $77 = $76;
           $78 = HEAP32[$77>>2]|0;
           $arglist_next = ((($77)) + 4|0);
           HEAP32[$ap2$i>>2] = $arglist_next;
           $79 = (($i$0$i) + -1)|0;
           if ($71) {
            $i$0$i = $79;
           } else {
            $$lcssa = $78;
            break;
           }
          }
          $80 = ((($p$0116)) + 3|0);
          $dest$0 = $$lcssa;$p$2 = $80;
          break;
         }
        }
        $arglist_current2 = HEAP32[$ap>>2]|0;
        $81 = $arglist_current2;
        $82 = ((0) + 4|0);
        $expanded11 = $82;
        $expanded10 = (($expanded11) - 1)|0;
        $83 = (($81) + ($expanded10))|0;
        $84 = ((0) + 4|0);
        $expanded15 = $84;
        $expanded14 = (($expanded15) - 1)|0;
        $expanded13 = $expanded14 ^ -1;
        $85 = $83 & $expanded13;
        $86 = $85;
        $87 = HEAP32[$86>>2]|0;
        $arglist_next3 = ((($86)) + 4|0);
        HEAP32[$ap>>2] = $arglist_next3;
        $dest$0 = $87;$p$2 = $44;
       }
      } while(0);
      $88 = HEAP8[$p$2>>0]|0;
      $89 = $88&255;
      $isdigittmp694 = (($89) + -48)|0;
      $isdigit795 = ($isdigittmp694>>>0)<(10);
      if ($isdigit795) {
       $93 = $89;$p$396 = $p$2;$width$097 = 0;
       while(1) {
        $90 = ($width$097*10)|0;
        $91 = (($90) + -48)|0;
        $92 = (($91) + ($93))|0;
        $94 = ((($p$396)) + 1|0);
        $95 = HEAP8[$94>>0]|0;
        $96 = $95&255;
        $isdigittmp6 = (($96) + -48)|0;
        $isdigit7 = ($isdigittmp6>>>0)<(10);
        if ($isdigit7) {
         $93 = $96;$p$396 = $94;$width$097 = $92;
        } else {
         $$lcssa38 = $95;$p$3$lcssa = $94;$width$0$lcssa = $92;
         break;
        }
       }
      } else {
       $$lcssa38 = $88;$p$3$lcssa = $p$2;$width$0$lcssa = 0;
      }
      $97 = ($$lcssa38<<24>>24)==(109);
      if ($97) {
       $98 = ($dest$0|0)!=(0|0);
       $99 = $98&1;
       $100 = ((($p$3$lcssa)) + 1|0);
       $$pre208 = HEAP8[$100>>0]|0;
       $103 = $$pre208;$alloc$0 = $99;$p$4 = $100;$s$1 = 0;$wcs$1 = 0;
      } else {
       $103 = $$lcssa38;$alloc$0 = 0;$p$4 = $p$3$lcssa;$s$1 = $s$0108;$wcs$1 = $wcs$0109;
      }
      $101 = ((($p$4)) + 1|0);
      $102 = $103&255;
      switch ($102|0) {
      case 76:  {
       $p$5 = $101;$size$0 = 2;
       break;
      }
      case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
       $p$5 = $p$4;$size$0 = 0;
       break;
      }
      case 106:  {
       $p$5 = $101;$size$0 = 3;
       break;
      }
      case 104:  {
       $104 = HEAP8[$101>>0]|0;
       $105 = ($104<<24>>24)==(104);
       $106 = ((($p$4)) + 2|0);
       $$9 = $105 ? $106 : $101;
       $$10 = $105 ? -2 : -1;
       $p$5 = $$9;$size$0 = $$10;
       break;
      }
      case 108:  {
       $107 = HEAP8[$101>>0]|0;
       $108 = ($107<<24>>24)==(108);
       $109 = ((($p$4)) + 2|0);
       $$11 = $108 ? $109 : $101;
       $$12 = $108 ? 3 : 1;
       $p$5 = $$11;$size$0 = $$12;
       break;
      }
      case 116: case 122:  {
       $p$5 = $101;$size$0 = 1;
       break;
      }
      default: {
       $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
       label = 164;
       break L4;
      }
      }
      $110 = HEAP8[$p$5>>0]|0;
      $111 = $110&255;
      $112 = $111 & 47;
      $113 = ($112|0)==(3);
      $114 = $111 | 32;
      $$ = $113 ? $114 : $111;
      $$size$0 = $113 ? 1 : $size$0;
      if ((($$|0) == 99)) {
       $115 = ($width$0$lcssa|0)<(1);
       $$width$0 = $115 ? 1 : $width$0$lcssa;
       $pos$1 = $pos$0115;$width$1 = $$width$0;
      } else if ((($$|0) == 110)) {
       $116 = ($pos$0115|0)<(0);
       $117 = $116 << 31 >> 31;
       $118 = ($dest$0|0)==(0|0);
       if ($118) {
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       switch ($$size$0|0) {
       case 0:  {
        HEAP32[$dest$0>>2] = $pos$0115;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 1:  {
        HEAP32[$dest$0>>2] = $pos$0115;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 3:  {
        $121 = $dest$0;
        $122 = $121;
        HEAP32[$122>>2] = $pos$0115;
        $123 = (($121) + 4)|0;
        $124 = $123;
        HEAP32[$124>>2] = $117;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -2:  {
        $119 = $pos$0115&255;
        HEAP8[$dest$0>>0] = $119;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -1:  {
        $120 = $pos$0115&65535;
        HEAP16[$dest$0>>1] = $120;
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       default: {
        $matches$1 = $matches$0110;$p$11 = $p$5;$pos$2 = $pos$0115;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       }
      } else if ((($$|0) == 91)) {
       $pos$1 = $pos$0115;$width$1 = $width$0$lcssa;
      } else {
       ___shlim($f,0);
       while(1) {
        $125 = HEAP32[$3>>2]|0;
        $126 = HEAP32[$4>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = ((($125)) + 1|0);
         HEAP32[$3>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $132 = $130;
        } else {
         $131 = (___shgetc($f)|0);
         $132 = $131;
        }
        $133 = (_isspace($132)|0);
        $134 = ($133|0)==(0);
        if ($134) {
         break;
        }
       }
       $135 = HEAP32[$4>>2]|0;
       $136 = ($135|0)==(0|0);
       $$pre210 = HEAP32[$3>>2]|0;
       if ($136) {
        $140 = $$pre210;
       } else {
        $137 = ((($$pre210)) + -1|0);
        HEAP32[$3>>2] = $137;
        $140 = $137;
       }
       $138 = HEAP32[$5>>2]|0;
       $139 = HEAP32[$6>>2]|0;
       $141 = $140;
       $142 = $139;
       $143 = (($138) + ($pos$0115))|0;
       $144 = (($143) + ($141))|0;
       $145 = (($144) - ($142))|0;
       $pos$1 = $145;$width$1 = $width$0$lcssa;
      }
      ___shlim($f,$width$1);
      $146 = HEAP32[$3>>2]|0;
      $147 = HEAP32[$4>>2]|0;
      $148 = ($146>>>0)<($147>>>0);
      if ($148) {
       $149 = ((($146)) + 1|0);
       HEAP32[$3>>2] = $149;
       $152 = $147;
      } else {
       $150 = (___shgetc($f)|0);
       $151 = ($150|0)<(0);
       if ($151) {
        $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
        label = 164;
        break L4;
       }
       $$pre212 = HEAP32[$4>>2]|0;
       $152 = $$pre212;
      }
      $153 = ($152|0)==(0|0);
      if (!($153)) {
       $154 = HEAP32[$3>>2]|0;
       $155 = ((($154)) + -1|0);
       HEAP32[$3>>2] = $155;
      }
      L78: do {
       switch ($$|0) {
       case 91: case 99: case 115:  {
        $156 = ($$|0)==(99);
        $157 = $$ & 239;
        $158 = ($157|0)==(99);
        L80: do {
         if ($158) {
          $159 = ($$|0)==(115);
          _memset(($scanset|0),-1,257)|0;
          HEAP8[$scanset>>0] = 0;
          if ($159) {
           HEAP8[$8>>0] = 0;
           ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;HEAP8[$7+4>>0]=0|0;
           $p$9 = $p$5;
          } else {
           $p$9 = $p$5;
          }
         } else {
          $160 = ((($p$5)) + 1|0);
          $161 = HEAP8[$160>>0]|0;
          $162 = ($161<<24>>24)==(94);
          $163 = ((($p$5)) + 2|0);
          $invert$0 = $162&1;
          $164 = $162 ? $160 : $p$5;
          $p$6 = $162 ? $163 : $160;
          $165 = $162&1;
          _memset(($scanset|0),($165|0),257)|0;
          HEAP8[$scanset>>0] = 0;
          $166 = HEAP8[$p$6>>0]|0;
          if ((($166<<24>>24) == 45)) {
           $167 = ((($164)) + 2|0);
           $168 = $invert$0 ^ 1;
           $169 = $168&255;
           HEAP8[$10>>0] = $169;
           $$pre$phi224Z2D = $169;$p$7$ph = $167;
          } else if ((($166<<24>>24) == 93)) {
           $170 = ((($164)) + 2|0);
           $171 = $invert$0 ^ 1;
           $172 = $171&255;
           HEAP8[$11>>0] = $172;
           $$pre$phi224Z2D = $172;$p$7$ph = $170;
          } else {
           $$pre222 = $invert$0 ^ 1;
           $$pre223 = $$pre222&255;
           $$pre$phi224Z2D = $$pre223;$p$7$ph = $p$6;
          }
          $p$7 = $p$7$ph;
          while(1) {
           $173 = HEAP8[$p$7>>0]|0;
           if ((($173<<24>>24) == 45)) {
            $174 = ((($p$7)) + 1|0);
            $175 = HEAP8[$174>>0]|0;
            if ((($175<<24>>24) == 93) | (($175<<24>>24) == 0)) {
             $186 = 45;$p$8 = $p$7;
            } else {
             $176 = ((($p$7)) + -1|0);
             $177 = HEAP8[$176>>0]|0;
             $178 = ($177&255)<($175&255);
             if ($178) {
              $179 = $177&255;
              $c$0100 = $179;
              while(1) {
               $180 = (($c$0100) + 1)|0;
               $181 = (($scanset) + ($180)|0);
               HEAP8[$181>>0] = $$pre$phi224Z2D;
               $182 = HEAP8[$174>>0]|0;
               $183 = $182&255;
               $184 = ($180|0)<($183|0);
               if ($184) {
                $c$0100 = $180;
               } else {
                $186 = $182;$p$8 = $174;
                break;
               }
              }
             } else {
              $186 = $175;$p$8 = $174;
             }
            }
           } else if ((($173<<24>>24) == 93)) {
            $p$9 = $p$7;
            break L80;
           } else if ((($173<<24>>24) == 0)) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$1;$wcs$7 = $wcs$1;
            label = 164;
            break L4;
           } else {
            $186 = $173;$p$8 = $p$7;
           }
           $185 = $186&255;
           $187 = (($185) + 1)|0;
           $188 = (($scanset) + ($187)|0);
           HEAP8[$188>>0] = $$pre$phi224Z2D;
           $189 = ((($p$8)) + 1|0);
           $p$7 = $189;
          }
         }
        } while(0);
        $190 = (($width$1) + 1)|0;
        $191 = $156 ? $190 : 31;
        $192 = ($$size$0|0)==(1);
        $193 = ($alloc$0|0)!=(0);
        L99: do {
         if ($192) {
          if ($193) {
           $194 = $191 << 2;
           $195 = (_malloc($194)|0);
           $196 = ($195|0)==(0|0);
           if ($196) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $195;
            label = 164;
            break L4;
           } else {
            $wcs$2 = $195;
           }
          } else {
           $wcs$2 = $dest$0;
          }
          HEAP32[$st>>2] = 0;
          HEAP32[$9>>2] = 0;
          $i$0$ph = 0;$k$0$ph = $191;$wcs$3$ph = $wcs$2;
          L134: while(1) {
           $197 = ($wcs$3$ph|0)==(0|0);
           if ($197) {
            $198 = ($i$0$ph|0)==($k$0$ph|0);
            $or$cond$us = $193 & $198;
            while(1) {
             $201 = HEAP32[$3>>2]|0;
             $211 = HEAP32[$4>>2]|0;
             $212 = ($201>>>0)<($211>>>0);
             if ($212) {
              $200 = ((($201)) + 1|0);
              HEAP32[$3>>2] = $200;
              $202 = HEAP8[$201>>0]|0;
              $203 = $202&255;
              $205 = $203;
             } else {
              $199 = (___shgetc($f)|0);
              $205 = $199;
             }
             $204 = (($205) + 1)|0;
             $206 = (($scanset) + ($204)|0);
             $207 = HEAP8[$206>>0]|0;
             $208 = ($207<<24>>24)==(0);
             if ($208) {
              $i$0$ph20$lcssa = $i$0$ph;$wcs$3$ph138 = 0;
              break L134;
             }
             $209 = $205&255;
             HEAP8[$0>>0] = $209;
             $210 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($210|0) == -2)) {
              continue;
             } else if ((($210|0) == -1)) {
              $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = 0;
              label = 164;
              break L4;
             }
             if ($or$cond$us) {
              $i$1$lcssa = $i$0$ph;
              break;
             }
            }
           } else {
            if ($193) {
             $i$0$ph20$us105 = $i$0$ph;
            } else {
             $i$0$ph$lcssa = $i$0$ph;$wcs$3$ph$lcssa = $wcs$3$ph;
             label = 86;
             break;
            }
            while(1) {
             while(1) {
              $215 = HEAP32[$3>>2]|0;
              $229 = HEAP32[$4>>2]|0;
              $230 = ($215>>>0)<($229>>>0);
              if ($230) {
               $214 = ((($215)) + 1|0);
               HEAP32[$3>>2] = $214;
               $216 = HEAP8[$215>>0]|0;
               $217 = $216&255;
               $219 = $217;
              } else {
               $213 = (___shgetc($f)|0);
               $219 = $213;
              }
              $218 = (($219) + 1)|0;
              $220 = (($scanset) + ($218)|0);
              $221 = HEAP8[$220>>0]|0;
              $222 = ($221<<24>>24)==(0);
              if ($222) {
               $i$0$ph20$lcssa = $i$0$ph20$us105;$wcs$3$ph138 = $wcs$3$ph;
               break L134;
              }
              $223 = $219&255;
              HEAP8[$0>>0] = $223;
              $224 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($224|0) == -1)) {
               $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph;
               label = 164;
               break L4;
              } else if (!((($224|0) == -2))) {
               break;
              }
             }
             $225 = HEAP32[$wc>>2]|0;
             $226 = (($i$0$ph20$us105) + 1)|0;
             $227 = (($wcs$3$ph) + ($i$0$ph20$us105<<2)|0);
             HEAP32[$227>>2] = $225;
             $228 = ($226|0)==($k$0$ph|0);
             if ($228) {
              $i$1$lcssa = $k$0$ph;
              break;
             } else {
              $i$0$ph20$us105 = $226;
             }
            }
           }
           $factor = $k$0$ph << 1;
           $248 = $factor | 1;
           $249 = $248 << 2;
           $250 = (_realloc($wcs$3$ph,$249)|0);
           $251 = ($250|0)==(0|0);
           if ($251) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph;
            label = 164;
            break L4;
           }
           $i$0$ph = $i$1$lcssa;$k$0$ph = $248;$wcs$3$ph = $250;
          }
          L159: do {
           if ((label|0) == 86) {
            label = 0;
            $i$0$ph20 = $i$0$ph$lcssa;
            while(1) {
             while(1) {
              $231 = HEAP32[$3>>2]|0;
              $232 = HEAP32[$4>>2]|0;
              $233 = ($231>>>0)<($232>>>0);
              if ($233) {
               $234 = ((($231)) + 1|0);
               HEAP32[$3>>2] = $234;
               $235 = HEAP8[$231>>0]|0;
               $236 = $235&255;
               $239 = $236;
              } else {
               $237 = (___shgetc($f)|0);
               $239 = $237;
              }
              $238 = (($239) + 1)|0;
              $240 = (($scanset) + ($238)|0);
              $241 = HEAP8[$240>>0]|0;
              $242 = ($241<<24>>24)==(0);
              if ($242) {
               $i$0$ph20$lcssa = $i$0$ph20;$wcs$3$ph138 = $wcs$3$ph$lcssa;
               break L159;
              }
              $243 = $239&255;
              HEAP8[$0>>0] = $243;
              $244 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($244|0) == -1)) {
               $alloc$0203 = 0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa;
               label = 164;
               break L4;
              } else if (!((($244|0) == -2))) {
               break;
              }
             }
             $245 = HEAP32[$wc>>2]|0;
             $246 = (($i$0$ph20) + 1)|0;
             $247 = (($wcs$3$ph$lcssa) + ($i$0$ph20<<2)|0);
             HEAP32[$247>>2] = $245;
             $i$0$ph20 = $246;
            }
           }
          } while(0);
          $252 = (_mbsinit($st)|0);
          $253 = ($252|0)==(0);
          if ($253) {
           $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = $wcs$3$ph138;
           label = 164;
           break L4;
          } else {
           $i$4 = $i$0$ph20$lcssa;$s$3 = 0;$wcs$4 = $wcs$3$ph138;
          }
         } else {
          if ($193) {
           $254 = (_malloc($191)|0);
           $255 = ($254|0)==(0|0);
           if ($255) {
            $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = 0;$wcs$7 = 0;
            label = 164;
            break L4;
           } else {
            $i$2$ph = 0;$k$1$ph = $191;$s$2$ph = $254;
           }
           while(1) {
            $i$2 = $i$2$ph;
            while(1) {
             $256 = HEAP32[$3>>2]|0;
             $257 = HEAP32[$4>>2]|0;
             $258 = ($256>>>0)<($257>>>0);
             if ($258) {
              $259 = ((($256)) + 1|0);
              HEAP32[$3>>2] = $259;
              $260 = HEAP8[$256>>0]|0;
              $261 = $260&255;
              $264 = $261;
             } else {
              $262 = (___shgetc($f)|0);
              $264 = $262;
             }
             $263 = (($264) + 1)|0;
             $265 = (($scanset) + ($263)|0);
             $266 = HEAP8[$265>>0]|0;
             $267 = ($266<<24>>24)==(0);
             if ($267) {
              $i$4 = $i$2;$s$3 = $s$2$ph;$wcs$4 = 0;
              break L99;
             }
             $268 = $264&255;
             $269 = (($i$2) + 1)|0;
             $270 = (($s$2$ph) + ($i$2)|0);
             HEAP8[$270>>0] = $268;
             $271 = ($269|0)==($k$1$ph|0);
             if ($271) {
              break;
             } else {
              $i$2 = $269;
             }
            }
            $factor16 = $k$1$ph << 1;
            $272 = $factor16 | 1;
            $273 = (_realloc($s$2$ph,$272)|0);
            $274 = ($273|0)==(0|0);
            if ($274) {
             $alloc$0203 = $alloc$0;$matches$0110501 = $matches$0110;$s$6 = $s$2$ph;$wcs$7 = 0;
             label = 164;
             break L4;
            } else {
             $i$2$ph$phi = $k$1$ph;$k$1$ph = $272;$s$2$ph = $273;$i$2$ph = $i$2$ph$phi;
            }
           }
          }
          $275 = ($dest$0|0)==(0|0);
          if ($275) {
           $293 = $152;
           while(1) {
            $291 = HEAP32[$3>>2]|0;
            $292 = ($291>>>0)<($293>>>0);
            if ($292) {
             $294 = ((($291)) + 1|0);
             HEAP32[$3>>2] = $294;
             $295 = HEAP8[$291>>0]|0;
             $296 = $295&255;
             $299 = $296;
            } else {
             $297 = (___shgetc($f)|0);
             $299 = $297;
            }
            $298 = (($299) + 1)|0;
            $300 = (($scanset) + ($298)|0);
            $301 = HEAP8[$300>>0]|0;
            $302 = ($301<<24>>24)==(0);
            if ($302) {
             $i$4 = 0;$s$3 = 0;$wcs$4 = 0;
             break L99;
            }
            $$pre216 = HEAP32[$4>>2]|0;
            $293 = $$pre216;
           }
          } else {
           $278 = $152;$i$3 = 0;
           while(1) {
            $276 = HEAP32[$3>>2]|0;
            $277 = ($276>>>0)<($278>>>0);
            if ($277) {
             $279 = ((($276)) + 1|0);
             HEAP32[$3>>2] = $279;
             $280 = HEAP8[$276>>0]|0;
             $281 = $280&255;
             $284 = $281;
            } else {
             $282 = (___shgetc($f)|0);
             $284 = $282;
            }
            $283 = (($284) + 1)|0;
            $285 = (($scanset) + ($283)|0);
            $286 = HEAP8[$285>>0]|0;
            $287 = ($286<<24>>24)==(0);
            if ($287) {
             $i$4 = $i$3;$s$3 = $dest$0;$wcs$4 = 0;
             break L99;
            }
            $288 = $284&255;
            $289 = (($i$3) + 1)|0;
            $290 = (($dest$0) + ($i$3)|0);
            HEAP8[$290>>0] = $288;
            $$pre214 = HEAP32[$4>>2]|0;
            $278 = $$pre214;$i$3 = $289;
           }
          }
         }
        } while(0);
        $303 = HEAP32[$4>>2]|0;
        $304 = ($303|0)==(0|0);
        $$pre220 = HEAP32[$3>>2]|0;
        if ($304) {
         $308 = $$pre220;
        } else {
         $305 = ((($$pre220)) + -1|0);
         HEAP32[$3>>2] = $305;
         $308 = $305;
        }
        $306 = HEAP32[$5>>2]|0;
        $307 = HEAP32[$6>>2]|0;
        $309 = $308;
        $310 = $307;
        $311 = (($309) - ($310))|0;
        $312 = (($311) + ($306))|0;
        $313 = ($312|0)==(0);
        if ($313) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$3;$wcs$9 = $wcs$4;
         break L4;
        }
        $$not = $156 ^ 1;
        $314 = ($312|0)==($width$1|0);
        $or$cond8 = $314 | $$not;
        if (!($or$cond8)) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$3;$wcs$9 = $wcs$4;
         break L4;
        }
        do {
         if ($193) {
          if ($192) {
           HEAP32[$dest$0>>2] = $wcs$4;
           break;
          } else {
           HEAP32[$dest$0>>2] = $s$3;
           break;
          }
         }
        } while(0);
        if ($156) {
         $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
        } else {
         $315 = ($wcs$4|0)==(0|0);
         if (!($315)) {
          $316 = (($wcs$4) + ($i$4<<2)|0);
          HEAP32[$316>>2] = 0;
         }
         $317 = ($s$3|0)==(0|0);
         if ($317) {
          $p$10 = $p$9;$s$4 = 0;$wcs$5 = $wcs$4;
         } else {
          $318 = (($s$3) + ($i$4)|0);
          HEAP8[$318>>0] = 0;
          $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
         }
        }
        break;
       }
       case 111:  {
        $base$0 = 8;
        label = 146;
        break;
       }
       case 117: case 100:  {
        $base$0 = 10;
        label = 146;
        break;
       }
       case 105:  {
        $base$0 = 0;
        label = 146;
        break;
       }
       case 120: case 88: case 112:  {
        $base$0 = 16;
        label = 146;
        break;
       }
       case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
        $338 = (+___floatscan($f,$$size$0,0));
        $339 = HEAP32[$5>>2]|0;
        $340 = HEAP32[$3>>2]|0;
        $341 = HEAP32[$6>>2]|0;
        $342 = $340;
        $343 = $341;
        $344 = (($343) - ($342))|0;
        $345 = ($339|0)==($344|0);
        if ($345) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$1;$wcs$9 = $wcs$1;
         break L4;
        }
        $346 = ($dest$0|0)==(0|0);
        if ($346) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         if ((($$size$0|0) == 0)) {
          $347 = $338;
          HEAPF32[$dest$0>>2] = $347;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L78;
         } else if ((($$size$0|0) == 1)) {
          HEAPF64[$dest$0>>3] = $338;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L78;
         } else if ((($$size$0|0) == 2)) {
          HEAPF64[$dest$0>>3] = $338;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L78;
         } else {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L78;
         }
        }
        break;
       }
       default: {
        $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
       }
       }
      } while(0);
      L199: do {
       if ((label|0) == 146) {
        label = 0;
        $319 = (___intscan($f,$base$0,0,-1,-1)|0);
        $320 = tempRet0;
        $321 = HEAP32[$5>>2]|0;
        $322 = HEAP32[$3>>2]|0;
        $323 = HEAP32[$6>>2]|0;
        $324 = $322;
        $325 = $323;
        $326 = (($325) - ($324))|0;
        $327 = ($321|0)==($326|0);
        if ($327) {
         $alloc$2 = $alloc$0;$matches$2 = $matches$0110;$s$8 = $s$1;$wcs$9 = $wcs$1;
         break L4;
        }
        $328 = ($$|0)==(112);
        $329 = ($dest$0|0)!=(0|0);
        $or$cond3 = $329 & $328;
        if ($or$cond3) {
         $330 = $319;
         HEAP32[$dest$0>>2] = $330;
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
         break;
        }
        $331 = ($dest$0|0)==(0|0);
        if ($331) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         switch ($$size$0|0) {
         case -2:  {
          $332 = $319&255;
          HEAP8[$dest$0>>0] = $332;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
          break;
         }
         case -1:  {
          $333 = $319&65535;
          HEAP16[$dest$0>>1] = $333;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
          break;
         }
         case 3:  {
          $334 = $dest$0;
          $335 = $334;
          HEAP32[$335>>2] = $319;
          $336 = (($334) + 4)|0;
          $337 = $336;
          HEAP32[$337>>2] = $320;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
          break;
         }
         case 0:  {
          HEAP32[$dest$0>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
          break;
         }
         case 1:  {
          HEAP32[$dest$0>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
          break;
         }
         default: {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L199;
         }
         }
        }
       }
      } while(0);
      $348 = HEAP32[$5>>2]|0;
      $349 = HEAP32[$3>>2]|0;
      $350 = HEAP32[$6>>2]|0;
      $351 = $349;
      $352 = $350;
      $353 = (($348) + ($pos$1))|0;
      $354 = (($353) + ($351))|0;
      $355 = (($354) - ($352))|0;
      $not$ = ($dest$0|0)!=(0|0);
      $356 = $not$&1;
      $matches$0$ = (($356) + ($matches$0110))|0;
      $matches$1 = $matches$0$;$p$11 = $p$10;$pos$2 = $355;$s$5 = $s$4;$wcs$6 = $wcs$5;
      break L6;
     }
    } while(0);
    $46 = $43&1;
    $47 = (($p$0116) + ($46)|0);
    ___shlim($f,0);
    $48 = HEAP32[$3>>2]|0;
    $49 = HEAP32[$4>>2]|0;
    $50 = ($48>>>0)<($49>>>0);
    if ($50) {
     $51 = ((($48)) + 1|0);
     HEAP32[$3>>2] = $51;
     $52 = HEAP8[$48>>0]|0;
     $53 = $52&255;
     $57 = $53;
    } else {
     $54 = (___shgetc($f)|0);
     $57 = $54;
    }
    $55 = HEAP8[$47>>0]|0;
    $56 = $55&255;
    $58 = ($57|0)==($56|0);
    if (!($58)) {
     $$lcssa520 = $57;$matches$0110$lcssa = $matches$0110;$s$0108$lcssa = $s$0108;$wcs$0109$lcssa = $wcs$0109;
     label = 19;
     break L4;
    }
    $65 = (($pos$0115) + 1)|0;
    $matches$1 = $matches$0110;$p$11 = $47;$pos$2 = $65;$s$5 = $s$0108;$wcs$6 = $wcs$0109;
   } else {
    $p$1 = $p$0116;
    while(1) {
     $16 = ((($p$1)) + 1|0);
     $17 = HEAP8[$16>>0]|0;
     $18 = $17&255;
     $19 = (_isspace($18)|0);
     $20 = ($19|0)==(0);
     if ($20) {
      $p$1$lcssa = $p$1;
      break;
     } else {
      $p$1 = $16;
     }
    }
    ___shlim($f,0);
    while(1) {
     $21 = HEAP32[$3>>2]|0;
     $22 = HEAP32[$4>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = ((($21)) + 1|0);
      HEAP32[$3>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $28 = $26;
     } else {
      $27 = (___shgetc($f)|0);
      $28 = $27;
     }
     $29 = (_isspace($28)|0);
     $30 = ($29|0)==(0);
     if ($30) {
      break;
     }
    }
    $31 = HEAP32[$4>>2]|0;
    $32 = ($31|0)==(0|0);
    $$pre = HEAP32[$3>>2]|0;
    if ($32) {
     $36 = $$pre;
    } else {
     $33 = ((($$pre)) + -1|0);
     HEAP32[$3>>2] = $33;
     $36 = $33;
    }
    $34 = HEAP32[$5>>2]|0;
    $35 = HEAP32[$6>>2]|0;
    $37 = $36;
    $38 = $35;
    $39 = (($34) + ($pos$0115))|0;
    $40 = (($39) + ($37))|0;
    $41 = (($40) - ($38))|0;
    $matches$1 = $matches$0110;$p$11 = $p$1$lcssa;$pos$2 = $41;$s$5 = $s$0108;$wcs$6 = $wcs$0109;
   }
  } while(0);
  $357 = ((($p$11)) + 1|0);
  $358 = HEAP8[$357>>0]|0;
  $359 = ($358<<24>>24)==(0);
  if ($359) {
   $matches$3 = $matches$1;
   label = 168;
   break;
  } else {
   $13 = $358;$matches$0110 = $matches$1;$p$0116 = $357;$pos$0115 = $pos$2;$s$0108 = $s$5;$wcs$0109 = $wcs$6;
  }
 }
 if ((label|0) == 19) {
  $59 = HEAP32[$4>>2]|0;
  $60 = ($59|0)==(0|0);
  if (!($60)) {
   $61 = HEAP32[$3>>2]|0;
   $62 = ((($61)) + -1|0);
   HEAP32[$3>>2] = $62;
  }
  $63 = ($$lcssa520|0)>(-1);
  $64 = ($matches$0110$lcssa|0)!=(0);
  $or$cond5 = $64 | $63;
  if ($or$cond5) {
   $matches$3 = $matches$0110$lcssa;
   STACKTOP = sp;return ($matches$3|0);
  } else {
   $alloc$1 = 0;$s$7 = $s$0108$lcssa;$wcs$8 = $wcs$0109$lcssa;
   label = 165;
  }
 }
 else if ((label|0) == 164) {
  $$old4 = ($matches$0110501|0)==(0);
  if ($$old4) {
   $alloc$1 = $alloc$0203;$s$7 = $s$6;$wcs$8 = $wcs$7;
   label = 165;
  } else {
   $alloc$2 = $alloc$0203;$matches$2 = $matches$0110501;$s$8 = $s$6;$wcs$9 = $wcs$7;
  }
 }
 else if ((label|0) == 168) {
  STACKTOP = sp;return ($matches$3|0);
 }
 if ((label|0) == 165) {
  $alloc$2 = $alloc$1;$matches$2 = -1;$s$8 = $s$7;$wcs$9 = $wcs$8;
 }
 $360 = ($alloc$2|0)==(0);
 if ($360) {
  $matches$3 = $matches$2;
  STACKTOP = sp;return ($matches$3|0);
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;return ($matches$3|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f = sp;
 dest=$f; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f)) + 32|0);
 HEAP32[$0>>2] = 18;
 $1 = ((($f)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ((($f)) + 76|0);
 HEAP32[$2>>2] = -1;
 $3 = ((($f)) + 84|0);
 HEAP32[$3>>2] = $s;
 $4 = (_MUSL_vfscanf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($4|0);
}
function _wcslen($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP32[$$0>>2]|0;
  $1 = ($0|0)==(0);
  $2 = ((($$0)) + 4|0);
  if ($1) {
   $$0$lcssa = $$0;
   break;
  } else {
   $$0 = $2;
  }
 }
 $3 = $$0$lcssa;
 $4 = $s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 return ($6|0);
}
function _wmemcpy($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$014 = 0, $$023 = 0, $$05 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 } else {
  $$014 = $n;$$023 = $s;$$05 = $d;
 }
 while(1) {
  $1 = (($$014) + -1)|0;
  $2 = ((($$023)) + 4|0);
  $3 = HEAP32[$$023>>2]|0;
  $4 = ((($$05)) + 4|0);
  HEAP32[$$05>>2] = $3;
  $5 = ($1|0)==(0);
  if ($5) {
   break;
  } else {
   $$014 = $1;$$023 = $2;$$05 = $4;
  }
 }
 return ($d|0);
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if ($5) {
   return ($d|0);
  } else {
   $$in = $n;
  }
  while(1) {
   $6 = (($$in) + -1)|0;
   $7 = (($s) + ($6<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (($d) + ($6<<2)|0);
   HEAP32[$9>>2] = $8;
   $10 = ($6|0)==(0);
   if ($10) {
    break;
   } else {
    $$in = $6;
   }
  }
  return ($d|0);
 } else {
  if ($5) {
   return ($d|0);
  } else {
   $$025 = $s;$$07 = $d;$$16 = $n;
  }
  while(1) {
   $11 = (($$16) + -1)|0;
   $12 = ((($$025)) + 4|0);
   $13 = HEAP32[$$025>>2]|0;
   $14 = ((($$07)) + 4|0);
   HEAP32[$$07>>2] = $13;
   $15 = ($11|0)==(0);
   if ($15) {
    break;
   } else {
    $$025 = $12;$$07 = $14;$$16 = $11;
   }
  }
  return ($d|0);
 }
 return (0)|0;
}
function _wmemset($d,$c,$n) {
 $d = $d|0;
 $c = $c|0;
 $n = $n|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 } else {
  $$012 = $n;$$03 = $d;
 }
 while(1) {
  $1 = (($$012) + -1)|0;
  $2 = ((($$03)) + 4|0);
  HEAP32[$$03>>2] = $c;
  $3 = ($1|0)==(0);
  if ($3) {
   break;
  } else {
   $$012 = $1;$$03 = $2;
  }
 }
 return ($d|0);
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 return ($0|0);
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[_stderr>>2]|0;
 (_vfprintf(($0|0),($format|0),($list|0))|0);
 (_fputc(10,($0|0))|0);
 _abort();
 // unreachable;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((2544|0),(2576|0),1164,(2664|0));
 // unreachable;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((2688|0),(9640|0),303,(2664|0));
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $0 = (_pthread_once((2720|0),(3|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[2712>>2]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(2728,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 $1 = (_malloc($$size)|0);
 $2 = ($1|0)==(0|0);
 L1: do {
  if ($2) {
   while(1) {
    $3 = (__ZSt15get_new_handlerv()|0);
    $4 = ($3|0)==(0|0);
    if ($4) {
     break;
    }
    FUNCTION_TABLE_v[$3 & 3]();
    $5 = (_malloc($$size)|0);
    $6 = ($5|0)==(0|0);
    if (!($6)) {
     $$lcssa = $5;
     break L1;
    }
   }
   $7 = (___cxa_allocate_exception(4)|0);
   HEAP32[$7>>2] = (1920);
   ___cxa_throw(($7|0),(1952|0),(33|0));
   // unreachable;
  } else {
   $$lcssa = $1;
  }
 } while(0);
 return ($$lcssa|0);
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZdaPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1920);
 return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2784|0);
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 FUNCTION_TABLE_v[$func & 3]();
 _abort_message(2800,$vararg_buffer);
 // unreachable;
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 48|0);
   $5 = $4;
   $6 = $5;
   $7 = HEAP32[$6>>2]|0;
   $8 = (($5) + 4)|0;
   $9 = $8;
   $10 = HEAP32[$9>>2]|0;
   $11 = $7 & -256;
   $12 = ($11|0)==(1126902528);
   $13 = ($10|0)==(1129074247);
   $14 = $12 & $13;
   if ($14) {
    $15 = ((($2)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    __ZSt11__terminatePFvvE($16);
    // unreachable;
   }
  }
 }
 $17 = HEAP32[476]|0;HEAP32[476] = (($17+0)|0);
 $18 = $17;
 __ZSt11__terminatePFvvE($18);
 // unreachable;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1968>>2]|0;HEAP32[1968>>2] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2008);
 $0 = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,2128,2184,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = ((($info)) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = ((($info)) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = ((($info)) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = ((($7)) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 7]($2,$info,$10,1);
    $11 = ((($info)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = ((($info)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = ((($info)) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = ((($info)) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = ((($info)) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = ((($info)) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = ((($info)) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = ((($info)) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 7]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 7]($8,$info,$12,$15);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
  } else {
   $3 = ((($this)) + 16|0);
   $4 = ((($this)) + 12|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (((($this)) + 16|0) + ($5<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
   $7 = ($5|0)>(1);
   if ($7) {
    $8 = ((($this)) + 24|0);
    $9 = ((($info)) + 54|0);
    $p$0 = $8;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
     $10 = HEAP8[$9>>0]|0;
     $11 = ($10<<24>>24)==(0);
     if (!($11)) {
      break L1;
     }
     $12 = ((($p$0)) + 8|0);
     $13 = ($12>>>0)<($6>>>0);
     if ($13) {
      $p$0 = $12;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = ((($0)) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = ((($info)) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = ((($info)) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = ((($info)) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = ((($info)) + 16|0);
 $11 = ((($info)) + 20|0);
 $12 = ((($info)) + 24|0);
 $13 = ((($info)) + 28|0);
 $14 = ((($info)) + 32|0);
 $15 = ((($info)) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 do {
  if ($16) {
   $17 = ((($info)) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = ((($18)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 7]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = ((($info)) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = ((($24)) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 3]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   if ((($27|0) == 0)) {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break;
   } else if (!((($27|0) == 1))) {
    $dst_ptr$0 = 0;
    break;
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = ((($info)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = ((($info)) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = ((($info)) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = ((($info)) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = ((($info)) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = ((($info)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = ((($info)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = ((($info)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = ((($info)) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = ((($info)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = ((($info)) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = ((($info)) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off023 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off025 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0;
 var $p$024 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $57 = ((($this)) + 16|0);
    $58 = ((($this)) + 12|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (((($this)) + 16|0) + ($59<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($57,$info,$current_ptr,$path_below,$use_strcmp);
    $61 = ((($this)) + 24|0);
    $62 = ($59|0)>(1);
    if (!($62)) {
     break;
    }
    $63 = ((($this)) + 8|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = $64 & 2;
    $66 = ($65|0)==(0);
    if ($66) {
     $67 = ((($info)) + 36|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ($68|0)==(1);
     if (!($69)) {
      $75 = $64 & 1;
      $76 = ($75|0)==(0);
      if ($76) {
       $79 = ((($info)) + 54|0);
       $p2$2 = $61;
       while(1) {
        $88 = HEAP8[$79>>0]|0;
        $89 = ($88<<24>>24)==(0);
        if (!($89)) {
         break L1;
        }
        $90 = HEAP32[$67>>2]|0;
        $91 = ($90|0)==(1);
        if ($91) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $92 = ((($p2$2)) + 8|0);
        $93 = ($92>>>0)<($60>>>0);
        if ($93) {
         $p2$2 = $92;
        } else {
         break L1;
        }
       }
      }
      $77 = ((($info)) + 24|0);
      $78 = ((($info)) + 54|0);
      $p2$1 = $61;
      while(1) {
       $80 = HEAP8[$78>>0]|0;
       $81 = ($80<<24>>24)==(0);
       if (!($81)) {
        break L1;
       }
       $82 = HEAP32[$67>>2]|0;
       $83 = ($82|0)==(1);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = ($84|0)==(1);
        if ($85) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $86 = ((($p2$1)) + 8|0);
       $87 = ($86>>>0)<($60>>>0);
       if ($87) {
        $p2$1 = $86;
       } else {
        break L1;
       }
      }
     }
    }
    $70 = ((($info)) + 54|0);
    $p2$0 = $61;
    while(1) {
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(0);
     if (!($72)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $73 = ((($p2$0)) + 8|0);
     $74 = ($73>>>0)<($60>>>0);
     if ($74) {
      $p2$0 = $73;
     } else {
      break L1;
     }
    }
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($this)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (((($this)) + 16|0) + ($24<<3)|0);
     $26 = ((($info)) + 52|0);
     $27 = ((($info)) + 53|0);
     $28 = ((($info)) + 54|0);
     $29 = ((($this)) + 8|0);
     $30 = ((($info)) + 24|0);
     $31 = ($24|0)>(0);
     L31: do {
      if ($31) {
       $32 = ((($this)) + 16|0);
       $does_dst_type_point_to_our_static_type$0$off023 = 0;$is_dst_type_derived_from_static_type$0$off025 = 0;$p$024 = $32;
       while(1) {
        HEAP8[$26>>0] = 0;
        HEAP8[$27>>0] = 0;
        __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$024,$info,$current_ptr,$current_ptr,1,$use_strcmp);
        $33 = HEAP8[$28>>0]|0;
        $34 = ($33<<24>>24)==(0);
        if (!($34)) {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off025;
         label = 20;
         break L31;
        }
        $35 = HEAP8[$27>>0]|0;
        $36 = ($35<<24>>24)==(0);
        do {
         if ($36) {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off025;
         } else {
          $37 = HEAP8[$26>>0]|0;
          $38 = ($37<<24>>24)==(0);
          if ($38) {
           $44 = HEAP32[$29>>2]|0;
           $45 = $44 & 1;
           $46 = ($45|0)==(0);
           if ($46) {
            $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = 1;
            label = 20;
            break L31;
           } else {
            $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = 1;
            break;
           }
          }
          $39 = HEAP32[$30>>2]|0;
          $40 = ($39|0)==(1);
          if ($40) {
           break L31;
          }
          $41 = HEAP32[$29>>2]|0;
          $42 = $41 & 2;
          $43 = ($42|0)==(0);
          if ($43) {
           break L31;
          } else {
           $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
          }
         }
        } while(0);
        $47 = ((($p$024)) + 8|0);
        $48 = ($47>>>0)<($25>>>0);
        if ($48) {
         $does_dst_type_point_to_our_static_type$0$off023 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off025 = $is_dst_type_derived_from_static_type$1$off0;$p$024 = $47;
        } else {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
         label = 20;
         break;
        }
       }
      } else {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0;$is_dst_type_derived_from_static_type$2$off0 = 0;
       label = 20;
      }
     } while(0);
     do {
      if ((label|0) == 20) {
       if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
        label = 24;
       } else {
        HEAP32[$14>>2] = $current_ptr;
        $49 = ((($info)) + 40|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = (($50) + 1)|0;
        HEAP32[$49>>2] = $51;
        $52 = ((($info)) + 36|0);
        $53 = HEAP32[$52>>2]|0;
        $54 = ($53|0)==(1);
        if ($54) {
         $55 = HEAP32[$30>>2]|0;
         $56 = ($55|0)==(2);
         if ($56) {
          HEAP8[$28>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           break;
          }
         } else {
          label = 24;
         }
        } else {
         label = 24;
        }
       }
       if ((label|0) == 24) {
        if ($is_dst_type_derived_from_static_type$2$off0) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 7]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 3]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = ((($this)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = ((($45)) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 3]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($info)) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = ((($info)) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = ((($27)) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 7]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = ((($info)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = ((($info)) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = ((($info)) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = ((($info)) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = ((($info)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = ((($info)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = ((($info)) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = ((($info)) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = ((($info)) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = ((($info)) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = ((($info)) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = ((($info)) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = ((($info)) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($info)) + 52|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ((($info)) + 53|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ((($this)) + 16|0);
  $8 = ((($this)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (((($this)) + 16|0) + ($9<<3)|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $11 = ($9|0)>(1);
  L4: do {
   if ($11) {
    $12 = ((($this)) + 24|0);
    $13 = ((($info)) + 24|0);
    $14 = ((($this)) + 8|0);
    $15 = ((($info)) + 54|0);
    $p$0 = $12;
    while(1) {
     $16 = HEAP8[$15>>0]|0;
     $17 = ($16<<24>>24)==(0);
     if (!($17)) {
      break L4;
     }
     $18 = HEAP8[$3>>0]|0;
     $19 = ($18<<24>>24)==(0);
     if ($19) {
      $25 = HEAP8[$5>>0]|0;
      $26 = ($25<<24>>24)==(0);
      if (!($26)) {
       $27 = HEAP32[$14>>2]|0;
       $28 = $27 & 1;
       $29 = ($28|0)==(0);
       if ($29) {
        break L4;
       }
      }
     } else {
      $20 = HEAP32[$13>>2]|0;
      $21 = ($20|0)==(1);
      if ($21) {
       break L4;
      }
      $22 = HEAP32[$14>>2]|0;
      $23 = $22 & 2;
      $24 = ($23|0)==(0);
      if ($24) {
       break L4;
      }
     }
     HEAP8[$3>>0] = 0;
     HEAP8[$5>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
     $30 = ((($p$0)) + 8|0);
     $31 = ($30>>>0)<($10>>>0);
     if ($31) {
      $p$0 = $30;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$3>>0] = $4;
  HEAP8[$5>>0] = $6;
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 7]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 31]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,2128,2296,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function __ZSt17__throw_bad_allocv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(1952|0),(33|0));
 // unreachable;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 80|0);
   $5 = ((($2)) + 48|0);
   $6 = $5;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = (($6) + 4)|0;
   $10 = $9;
   $11 = HEAP32[$10>>2]|0;
   $12 = $8 & -256;
   $13 = ($12|0)==(1126902528);
   $14 = ($11|0)==(1129074247);
   $15 = $13 & $14;
   if (!($15)) {
    HEAP32[$vararg_buffer7>>2] = 3104;
    _abort_message(3048,$vararg_buffer7);
    // unreachable;
   }
   $16 = ($8|0)==(1126902529);
   $17 = ($11|0)==(1129074247);
   $18 = $16 & $17;
   if ($18) {
    $19 = ((($2)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20;
   } else {
    $21 = $4;
   }
   HEAP32[$thrown_object>>2] = $21;
   $22 = HEAP32[$2>>2]|0;
   $23 = ((($22)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = HEAP32[1992>>2]|0;
   $26 = ((($25)) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iiii[$27 & 31](1992,$22,$thrown_object)|0);
   if ($28) {
    $29 = HEAP32[$thrown_object>>2]|0;
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($30)) + 8|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($29)|0);
    HEAP32[$vararg_buffer>>2] = 3104;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $24;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $33;
    _abort_message(2952,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = 3104;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $24;
    _abort_message(3000,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(3088,$vararg_buffer10);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((2712|0),(106|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2840,$vararg_buffer);
  // unreachable;
 }
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -4|0);
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2+-1)|0);
 $3 = (($2) + -1)|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = ((($5)) + -12|0);
  __ZdlPv($6);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[2712>>2]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2896,$vararg_buffer);
  // unreachable;
 }
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0;
 var $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i14$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0;
 var $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i15$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0;
 var $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0;
 var $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0;
 var $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0;
 var $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0;
 var $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0;
 var $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0;
 var $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0;
 var $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0;
 var $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[3120>>2]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (3160 + ($13<<2)|0);
    $$sum10 = (($13) + 2)|0;
    $15 = (3160 + ($$sum10<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[3120>>2] = $22;
     } else {
      $23 = HEAP32[(3136)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = ((($18)) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[(3128)>>2]|0;
   $35 = ($4>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = (3160 + ($65<<2)|0);
     $$sum4 = (($65) + 2)|0;
     $67 = (3160 + ($$sum4<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[3120>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[(3136)>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = ((($70)) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[(3128)>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($4))|0;
     $82 = $4 | 3;
     $83 = ((($68)) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($4)|0);
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[(3140)>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = (3160 + ($92<<2)|0);
      $94 = HEAP32[3120>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[3120>>2] = $98;
       $$pre105 = (($92) + 2)|0;
       $$pre106 = (3160 + ($$pre105<<2)|0);
       $$pre$phiZ2D = $$pre106;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = (3160 + ($$sum9<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[(3136)>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = ((($F4$0)) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = ((($90)) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = ((($90)) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[(3128)>>2] = $81;
     HEAP32[(3140)>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[(3124)>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $4;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = (3424 + ($130<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($132)) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($4))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = ((($t$0$i)) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = ((($t$0$i)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = ((($144)) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($4))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[(3136)>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($4)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = ((($v$0$i$lcssa)) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ((($v$0$i$lcssa)) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = ((($v$0$i$lcssa)) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = ((($v$0$i$lcssa)) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;$RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;$RP$0$i = $167;
       }
       while(1) {
        $173 = ((($R$0$i)) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if (!($175)) {
         $R$0$i = $174;$RP$0$i = $173;
         continue;
        }
        $176 = ((($R$0$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;$RP$0$i = $176;
        }
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = ((($v$0$i$lcssa)) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = ((($159)) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = ((($156)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = ((($v$0$i$lcssa)) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = (3424 + ($182<<2)|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[(3124)>>2]|0;
         $189 = $188 & $187;
         HEAP32[(3124)>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[(3136)>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = ((($154)) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = ((($154)) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[(3136)>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = ((($R$1$i)) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = ((($v$0$i$lcssa)) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = ((($R$1$i)) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = ((($201)) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = ((($v$0$i$lcssa)) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[(3136)>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = ((($R$1$i)) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = ((($207)) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($4))|0;
      $215 = $214 | 3;
      $216 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $4 | 3;
      $221 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i35 = $4 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i35)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($4))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[(3128)>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[(3140)>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = (3160 + ($229<<2)|0);
       $231 = HEAP32[3120>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[3120>>2] = $235;
        $$pre$i = (($229) + 2)|0;
        $$pre8$i = (3160 + ($$pre$i<<2)|0);
        $$pre$phi$iZ2D = $$pre8$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = (3160 + ($$sum3$i<<2)|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(3136)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = ((($F1$0$i)) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = ((($227)) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = ((($227)) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[(3128)>>2] = $rsize$0$i$lcssa;
      HEAP32[(3140)>>2] = $151;
     }
     $243 = ((($v$0$i$lcssa)) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(3124)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = (3424 + ($idx$0$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i|0)==(31);
       $279 = $idx$0$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $282;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = ((($t$0$i14)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$331$i = $286;$t$230$i = $t$0$i14;$v$332$i = $t$0$i14;
          label = 90;
          break L123;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = ((($t$0$i14)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = (((($t$0$i14)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = (3424 + ($327<<2)|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;$v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;$v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $331 = ((($t$230$i)) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = ((($t$230$i)) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = ((($t$230$i)) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[(3128)>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[(3136)>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = ((($v$3$lcssa$i)) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = ((($v$3$lcssa$i)) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = ((($v$3$lcssa$i)) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = ((($v$3$lcssa$i)) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;$RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;$RP$0$i17 = $364;
         }
         while(1) {
          $370 = ((($R$0$i18)) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if (!($372)) {
           $R$0$i18 = $371;$RP$0$i17 = $370;
           continue;
          }
          $373 = ((($R$0$i18)) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
           break;
          } else {
           $R$0$i18 = $374;$RP$0$i17 = $373;
          }
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = ((($v$3$lcssa$i)) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = ((($356)) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = ((($353)) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = ((($v$3$lcssa$i)) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = (3424 + ($379<<2)|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[(3124)>>2]|0;
           $386 = $385 & $384;
           HEAP32[(3124)>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[(3136)>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($351)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = ((($351)) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[(3136)>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($R$1$i20)) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = ((($v$3$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($R$1$i20)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = ((($v$3$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[(3136)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($R$1$i20)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L199: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2334 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2334)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = (3160 + ($424<<2)|0);
          $426 = HEAP32[3120>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[3120>>2] = $430;
           $$pre$i25 = (($424) + 2)|0;
           $$pre43$i = (3160 + ($$pre$i25<<2)|0);
           $$pre$phi$i26Z2D = $$pre43$i;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = (3160 + ($$sum17$i<<2)|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[(3136)>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = ((($F5$0$i)) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = (3424 + ($I7$0$i<<2)|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[(3124)>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[(3124)>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ((($475)) + 4|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = $477 & -8;
         $479 = ($478|0)==($rsize$3$lcssa$i|0);
         L217: do {
          if ($479) {
           $T$0$lcssa$i = $475;
          } else {
           $480 = ($I7$0$i|0)==(31);
           $481 = $I7$0$i >>> 1;
           $482 = (25 - ($481))|0;
           $483 = $480 ? 0 : $482;
           $484 = $rsize$3$lcssa$i << $483;
           $K12$029$i = $484;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = (((($T$028$i)) + 16|0) + ($491<<2)|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa232 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = ((($487)) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L217;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           $494 = HEAP32[(3136)>>2]|0;
           $495 = ($$lcssa232>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa232>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L199;
           }
          }
         } while(0);
         $499 = ((($T$0$lcssa$i)) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[(3136)>>2]|0;
         $502 = ($500>>>0)>=($501>>>0);
         $not$$i = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = $502 & $not$$i;
         if ($503) {
          $504 = ((($500)) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = ((($v$3$lcssa$i)) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[(3128)>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[(3140)>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[(3140)>>2] = $514;
   HEAP32[(3128)>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = ((($512)) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[(3128)>>2] = 0;
   HEAP32[(3140)>>2] = 0;
   $520 = $509 | 3;
   $521 = ((($512)) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = ((($512)) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[(3132)>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[(3132)>>2] = $528;
  $529 = HEAP32[(3144)>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[(3144)>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = ((($529)) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = ((($529)) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[3592>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[(3600)>>2] = $538;
    HEAP32[(3596)>>2] = $538;
    HEAP32[(3604)>>2] = -1;
    HEAP32[(3608)>>2] = -1;
    HEAP32[(3612)>>2] = 0;
    HEAP32[(3564)>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[3592>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[(3600)>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[(3560)>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[(3552)>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[(3564)>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L258: do {
  if ($560) {
   $561 = HEAP32[(3144)>>2]|0;
   $562 = ($561|0)==(0|0);
   L260: do {
    if ($562) {
     label = 174;
    } else {
     $sp$0$i$i = (3568);
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = ((($sp$0$i$i)) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa228 = $sp$0$i$i;$$lcssa230 = $565;
        break;
       }
      }
      $569 = ((($sp$0$i$i)) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 174;
       break L260;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $594 = HEAP32[(3132)>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa228>>2]|0;
      $600 = HEAP32[$$lcssa230>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      $$3$i = $602 ? $596 : 0;
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0323944$i = $$3$i;
       } else {
        $tbase$255$i = $598;$tsize$254$i = $$3$i;
        label = 194;
        break L258;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;$tsize$0$ph$i = $$3$i;
       label = 184;
      }
     } else {
      $tsize$0323944$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 174) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0323944$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[(3596)>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[(3552)>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[(3560)>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0323944$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       $ssize$0$$i = $593 ? $ssize$0$i : 0;
       if ($593) {
        $tbase$255$i = $572;$tsize$254$i = $ssize$0$$i;
        label = 194;
        break L258;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;$tsize$0$ph$i = $ssize$0$$i;
        label = 184;
       }
      } else {
       $tsize$0323944$i = 0;
      }
     }
    }
   } while(0);
   L280: do {
    if ((label|0) == 184) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond6$i = $607 & $or$cond5$i;
     do {
      if ($or$cond6$i) {
       $608 = HEAP32[(3600)>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0323944$i = $tsize$0$ph$i;
         break L280;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0323944$i = $tsize$0$ph$i;
     } else {
      $tbase$255$i = $br$0$ph$i;$tsize$254$i = $ssize$2$i;
      label = 194;
      break L258;
     }
    }
   } while(0);
   $618 = HEAP32[(3564)>>2]|0;
   $619 = $618 | 4;
   HEAP32[(3564)>>2] = $619;
   $tsize$1$i = $tsize$0323944$i;
   label = 191;
  } else {
   $tsize$1$i = 0;
   label = 191;
  }
 } while(0);
 if ((label|0) == 191) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond8$i = $625 & $or$cond3$i;
   if ($or$cond8$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$255$i = $621;$tsize$254$i = $$tsize$1$i;
     label = 194;
    }
   }
  }
 }
 if ((label|0) == 194) {
  $631 = HEAP32[(3552)>>2]|0;
  $632 = (($631) + ($tsize$254$i))|0;
  HEAP32[(3552)>>2] = $632;
  $633 = HEAP32[(3556)>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[(3556)>>2] = $632;
  }
  $635 = HEAP32[(3144)>>2]|0;
  $636 = ($635|0)==(0|0);
  L299: do {
   if ($636) {
    $637 = HEAP32[(3136)>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$255$i>>>0)<($637>>>0);
    $or$cond9$i = $638 | $639;
    if ($or$cond9$i) {
     HEAP32[(3136)>>2] = $tbase$255$i;
    }
    HEAP32[(3568)>>2] = $tbase$255$i;
    HEAP32[(3572)>>2] = $tsize$254$i;
    HEAP32[(3580)>>2] = 0;
    $640 = HEAP32[3592>>2]|0;
    HEAP32[(3156)>>2] = $640;
    HEAP32[(3152)>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = (3160 + ($641<<2)|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = (3160 + ($$sum$i$i<<2)|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = (3160 + ($$sum1$i$i<<2)|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$254$i) + -40)|0;
    $647 = ((($tbase$255$i)) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    $651 = (0 - ($648))|0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = (($tbase$255$i) + ($653)|0);
    $655 = (($646) - ($653))|0;
    HEAP32[(3144)>>2] = $654;
    HEAP32[(3132)>>2] = $655;
    $656 = $655 | 1;
    $$sum$i13$i = (($653) + 4)|0;
    $657 = (($tbase$255$i) + ($$sum$i13$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$254$i) + -36)|0;
    $658 = (($tbase$255$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[(3608)>>2]|0;
    HEAP32[(3148)>>2] = $659;
   } else {
    $sp$084$i = (3568);
    while(1) {
     $660 = HEAP32[$sp$084$i>>2]|0;
     $661 = ((($sp$084$i)) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$255$i|0)==($663|0);
     if ($664) {
      $$lcssa222 = $660;$$lcssa224 = $661;$$lcssa226 = $662;$sp$084$i$lcssa = $sp$084$i;
      label = 204;
      break;
     }
     $665 = ((($sp$084$i)) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      break;
     } else {
      $sp$084$i = $666;
     }
    }
    if ((label|0) == 204) {
     $668 = ((($sp$084$i$lcssa)) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa222>>>0);
      $673 = ($635>>>0)<($tbase$255$i>>>0);
      $or$cond57$i = $673 & $672;
      if ($or$cond57$i) {
       $674 = (($$lcssa226) + ($tsize$254$i))|0;
       HEAP32[$$lcssa224>>2] = $674;
       $675 = HEAP32[(3132)>>2]|0;
       $676 = (($675) + ($tsize$254$i))|0;
       $677 = ((($635)) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       $681 = (0 - ($678))|0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = (($635) + ($683)|0);
       $685 = (($676) - ($683))|0;
       HEAP32[(3144)>>2] = $684;
       HEAP32[(3132)>>2] = $685;
       $686 = $685 | 1;
       $$sum$i17$i = (($683) + 4)|0;
       $687 = (($635) + ($$sum$i17$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i18$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i18$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[(3608)>>2]|0;
       HEAP32[(3148)>>2] = $689;
       break;
      }
     }
    }
    $690 = HEAP32[(3136)>>2]|0;
    $691 = ($tbase$255$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[(3136)>>2] = $tbase$255$i;
     $755 = $tbase$255$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$255$i) + ($tsize$254$i)|0);
    $sp$183$i = (3568);
    while(1) {
     $693 = HEAP32[$sp$183$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa219 = $sp$183$i;$sp$183$i$lcssa = $sp$183$i;
      label = 212;
      break;
     }
     $695 = ((($sp$183$i)) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      $sp$0$i$i$i = (3568);
      break;
     } else {
      $sp$183$i = $696;
     }
    }
    if ((label|0) == 212) {
     $698 = ((($sp$183$i$lcssa)) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa219>>2] = $tbase$255$i;
      $702 = ((($sp$183$i$lcssa)) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$254$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = ((($tbase$255$i)) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      $709 = (0 - ($706))|0;
      $710 = $709 & 7;
      $711 = $708 ? 0 : $710;
      $712 = (($tbase$255$i) + ($711)|0);
      $$sum112$i = (($tsize$254$i) + 8)|0;
      $713 = (($tbase$255$i) + ($$sum112$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      $717 = (0 - ($714))|0;
      $718 = $717 & 7;
      $719 = $716 ? 0 : $718;
      $$sum113$i = (($719) + ($tsize$254$i))|0;
      $720 = (($tbase$255$i) + ($$sum113$i)|0);
      $721 = $720;
      $722 = $712;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($711) + ($nb$0))|0;
      $724 = (($tbase$255$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($711) + 4)|0;
      $727 = (($tbase$255$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L324: do {
       if ($728) {
        $729 = HEAP32[(3132)>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[(3132)>>2] = $730;
        HEAP32[(3144)>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$255$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[(3140)>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[(3128)>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[(3128)>>2] = $736;
         HEAP32[(3140)>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$255$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$255$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$254$i) + 4)|0;
        $$sum114$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$255$i) + ($$sum114$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L331: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum124$i = (($$sum3738$i$i) + ($tsize$254$i))|0;
           $747 = (($tbase$255$i) + ($$sum124$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$254$i) + 12)|0;
           $$sum125$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$255$i) + ($$sum125$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = (3160 + ($751<<2)|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = ((($748)) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[3120>>2]|0;
            $763 = $762 & $761;
            HEAP32[3120>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre57$i$i = ((($750)) + 8|0);
             $$pre$phi58$i$iZ2D = $$pre57$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = ((($750)) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi58$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = ((($748)) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi58$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum115$i = (($$sum34$i$i) + ($tsize$254$i))|0;
           $770 = (($tbase$255$i) + ($$sum115$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$254$i) + 12)|0;
           $$sum116$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$255$i) + ($$sum116$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum122$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$255$i) + ($$sum122$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum123$i = (($$sum67$i$i) + ($tsize$254$i))|0;
              $787 = (($tbase$255$i) + ($$sum123$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $788;$RP$0$i$i = $787;
              }
             } else {
              $R$0$i$i = $785;$RP$0$i$i = $784;
             }
             while(1) {
              $790 = ((($R$0$i$i)) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if (!($792)) {
               $R$0$i$i = $791;$RP$0$i$i = $790;
               continue;
              }
              $793 = ((($R$0$i$i)) + 16|0);
              $794 = HEAP32[$793>>2]|0;
              $795 = ($794|0)==(0|0);
              if ($795) {
               $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
               break;
              } else {
               $R$0$i$i = $794;$RP$0$i$i = $793;
              }
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum117$i = (($$sum3536$i$i) + ($tsize$254$i))|0;
             $775 = (($tbase$255$i) + ($$sum117$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = ((($776)) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = ((($773)) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$254$i) + 28)|0;
           $$sum118$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$255$i) + ($$sum118$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = (3424 + ($799<<2)|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[(3124)>>2]|0;
             $806 = $805 & $804;
             HEAP32[(3124)>>2] = $806;
             break L331;
            } else {
             $807 = HEAP32[(3136)>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = ((($771)) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = ((($771)) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L331;
             }
            }
           } while(0);
           $814 = HEAP32[(3136)>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = ((($R$1$i$i)) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum119$i = (($$sum3132$i$i) + ($tsize$254$i))|0;
           $817 = (($tbase$255$i) + ($$sum119$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = ((($R$1$i$i)) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = ((($818)) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum120$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$255$i) + ($$sum120$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[(3136)>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = ((($R$1$i$i)) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = ((($824)) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum121$i = (($$sum9$i$i) + ($tsize$254$i))|0;
         $830 = (($tbase$255$i) + ($$sum121$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = ((($oldfirst$0$i$i)) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$255$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$255$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = (3160 + ($840<<2)|0);
         $842 = HEAP32[3120>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[3120>>2] = $846;
           $$pre$i22$i = (($840) + 2)|0;
           $$pre56$i$i = (3160 + ($$pre$i22$i<<2)|0);
           $$pre$phi$i23$iZ2D = $$pre56$i$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = (3160 + ($$sum29$i$i<<2)|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[(3136)>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = ((($F4$0$i$i)) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$255$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$255$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = (3424 + ($I7$0$i$i<<2)|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$255$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$255$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$255$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[(3124)>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[(3124)>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$255$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$255$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$255$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ((($891)) + 4|0);
        $893 = HEAP32[$892>>2]|0;
        $894 = $893 & -8;
        $895 = ($894|0)==($qsize$0$i$i|0);
        L417: do {
         if ($895) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $896 = ($I7$0$i$i|0)==(31);
          $897 = $I7$0$i$i >>> 1;
          $898 = (25 - ($897))|0;
          $899 = $896 ? 0 : $898;
          $900 = $qsize$0$i$i << $899;
          $K8$051$i$i = $900;$T$050$i$i = $891;
          while(1) {
           $907 = $K8$051$i$i >>> 31;
           $908 = (((($T$050$i$i)) + 16|0) + ($907<<2)|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$050$i$i$lcssa = $T$050$i$i;
            break;
           }
           $901 = $K8$051$i$i << 1;
           $902 = ((($903)) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $T$0$lcssa$i25$i = $903;
            break L417;
           } else {
            $K8$051$i$i = $901;$T$050$i$i = $903;
           }
          }
          $910 = HEAP32[(3136)>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$255$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$050$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$255$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$255$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L324;
          }
         }
        } while(0);
        $915 = ((($T$0$lcssa$i25$i)) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[(3136)>>2]|0;
        $918 = ($916>>>0)>=($917>>>0);
        $not$$i26$i = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = $918 & $not$$i26$i;
        if ($919) {
         $920 = ((($916)) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$255$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$255$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$255$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $711 | 8;
      $924 = (($tbase$255$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     } else {
      $sp$0$i$i$i = (3568);
     }
    }
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = ((($sp$0$i$i$i)) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa215 = $925;$$lcssa216 = $928;$$lcssa217 = $929;
       break;
      }
     }
     $931 = ((($sp$0$i$i$i)) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i14$i = (($$lcssa216) + -47)|0;
    $$sum1$i15$i = (($$lcssa216) + -39)|0;
    $933 = (($$lcssa215) + ($$sum1$i15$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    $937 = (0 - ($934))|0;
    $938 = $937 & 7;
    $939 = $936 ? 0 : $938;
    $$sum2$i16$i = (($$sum$i14$i) + ($939))|0;
    $940 = (($$lcssa215) + ($$sum2$i16$i)|0);
    $941 = ((($635)) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = ((($943)) + 8|0);
    $945 = (($tsize$254$i) + -40)|0;
    $946 = ((($tbase$255$i)) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    $950 = (0 - ($947))|0;
    $951 = $950 & 7;
    $952 = $949 ? 0 : $951;
    $953 = (($tbase$255$i) + ($952)|0);
    $954 = (($945) - ($952))|0;
    HEAP32[(3144)>>2] = $953;
    HEAP32[(3132)>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($952) + 4)|0;
    $956 = (($tbase$255$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$254$i) + -36)|0;
    $957 = (($tbase$255$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[(3608)>>2]|0;
    HEAP32[(3148)>>2] = $958;
    $959 = ((($943)) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944>>2]=HEAP32[(3568)>>2]|0;HEAP32[$944+4>>2]=HEAP32[(3568)+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[(3568)+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[(3568)+12>>2]|0;
    HEAP32[(3568)>>2] = $tbase$255$i;
    HEAP32[(3572)>>2] = $tsize$254$i;
    HEAP32[(3580)>>2] = 0;
    HEAP32[(3576)>>2] = $944;
    $960 = ((($943)) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = ((($943)) + 32|0);
    $962 = ($961>>>0)<($$lcssa217>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = ((($964)) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = ((($964)) + 8|0);
      $966 = ($965>>>0)<($$lcssa217>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = ((($635)) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = (3160 + ($977<<2)|0);
      $979 = HEAP32[3120>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      if ($982) {
       $983 = $979 | $980;
       HEAP32[3120>>2] = $983;
       $$pre$i$i = (($977) + 2)|0;
       $$pre14$i$i = (3160 + ($$pre$i$i<<2)|0);
       $$pre$phi$i$iZ2D = $$pre14$i$i;$F$0$i$i = $978;
      } else {
       $$sum4$i$i = (($977) + 2)|0;
       $984 = (3160 + ($$sum4$i$i<<2)|0);
       $985 = HEAP32[$984>>2]|0;
       $986 = HEAP32[(3136)>>2]|0;
       $987 = ($985>>>0)<($986>>>0);
       if ($987) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = ((($F$0$i$i)) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = ((($635)) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = ((($635)) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = (3424 + ($I1$0$i$i<<2)|0);
     $1017 = ((($635)) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = ((($635)) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[(3124)>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[(3124)>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = ((($635)) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = ((($635)) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = ((($635)) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ((($1027)) + 4|0);
     $1029 = HEAP32[$1028>>2]|0;
     $1030 = $1029 & -8;
     $1031 = ($1030|0)==($970|0);
     L459: do {
      if ($1031) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1032 = ($I1$0$i$i|0)==(31);
       $1033 = $I1$0$i$i >>> 1;
       $1034 = (25 - ($1033))|0;
       $1035 = $1032 ? 0 : $1034;
       $1036 = $970 << $1035;
       $K2$07$i$i = $1036;$T$06$i$i = $1027;
       while(1) {
        $1043 = $K2$07$i$i >>> 31;
        $1044 = (((($T$06$i$i)) + 16|0) + ($1043<<2)|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa211 = $1044;$T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        $1037 = $K2$07$i$i << 1;
        $1038 = ((($1039)) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $T$0$lcssa$i$i = $1039;
         break L459;
        } else {
         $K2$07$i$i = $1037;$T$06$i$i = $1039;
        }
       }
       $1046 = HEAP32[(3136)>>2]|0;
       $1047 = ($$lcssa211>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa211>>2] = $635;
        $1048 = ((($635)) + 24|0);
        HEAP32[$1048>>2] = $T$06$i$i$lcssa;
        $1049 = ((($635)) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = ((($635)) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L299;
       }
      }
     } while(0);
     $1051 = ((($T$0$lcssa$i$i)) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[(3136)>>2]|0;
     $1054 = ($1052>>>0)>=($1053>>>0);
     $not$$i$i = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = $1054 & $not$$i$i;
     if ($1055) {
      $1056 = ((($1052)) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = ((($635)) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = ((($635)) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = ((($635)) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[(3132)>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[(3132)>>2] = $1062;
   $1063 = HEAP32[(3144)>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[(3144)>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = ((($1063)) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = ((($1063)) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0;
 var $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0;
 var $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($mem)) + -8|0);
 $2 = HEAP32[(3136)>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = ((($mem)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[(3140)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[(3128)>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = (3160 + ($25<<2)|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = ((($22)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[3120>>2]|0;
     $36 = $35 & $34;
     HEAP32[3120>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre60 = ((($24)) + 8|0);
     $$pre$phi61Z2D = $$pre60;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = ((($24)) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi61Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = ((($22)) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi61Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;$RP$0 = $60;
      }
     } else {
      $R$0 = $58;$RP$0 = $57;
     }
     while(1) {
      $63 = ((($R$0)) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $R$0 = $64;$RP$0 = $63;
       continue;
      }
      $66 = ((($R$0)) + 16|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($67|0)==(0|0);
      if ($68) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $67;$RP$0 = $66;
      }
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = ((($49)) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = ((($46)) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (3424 + ($72<<2)|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[(3124)>>2]|0;
      $79 = $78 & $77;
      HEAP32[(3124)>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[(3136)>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = ((($44)) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = ((($44)) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[(3136)>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = ((($R$1)) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = ((($R$1)) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = ((($91)) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[(3136)>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = ((($R$1)) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = ((($97)) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[(3144)>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[(3132)>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[(3132)>>2] = $120;
   HEAP32[(3144)>>2] = $p$0;
   $121 = $120 | 1;
   $122 = ((($p$0)) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[(3140)>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[(3140)>>2] = 0;
   HEAP32[(3128)>>2] = 0;
   return;
  }
  $125 = HEAP32[(3140)>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[(3128)>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[(3128)>>2] = $128;
   HEAP32[(3140)>>2] = $p$0;
   $129 = $128 | 1;
   $130 = ((($p$0)) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = (3160 + ($140<<2)|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[(3136)>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = ((($137)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[3120>>2]|0;
     $152 = $151 & $150;
     HEAP32[3120>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre58 = ((($139)) + 8|0);
     $$pre$phi59Z2D = $$pre58;
    } else {
     $154 = HEAP32[(3136)>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = ((($139)) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi59Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = ((($137)) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi59Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;$RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;$RP9$0 = $175;
      }
      while(1) {
       $181 = ((($R7$0)) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if (!($183)) {
        $R7$0 = $182;$RP9$0 = $181;
        continue;
       }
       $184 = ((($R7$0)) + 16|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if ($186) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $185;$RP9$0 = $184;
       }
      }
      $187 = HEAP32[(3136)>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[(3136)>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = ((($166)) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = ((($163)) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = (3424 + ($191<<2)|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond47 = ($R7$1|0)==(0|0);
      if ($cond47) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[(3124)>>2]|0;
       $198 = $197 & $196;
       HEAP32[(3124)>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[(3136)>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = ((($161)) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = ((($161)) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[(3136)>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = ((($R7$1)) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = ((($R7$1)) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = ((($210)) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[(3136)>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = ((($R7$1)) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = ((($216)) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = ((($p$0)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[(3140)>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[(3128)>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = ((($p$0)) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = (3160 + ($233<<2)|0);
  $235 = HEAP32[3120>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[3120>>2] = $239;
   $$pre = (($233) + 2)|0;
   $$pre57 = (3160 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre57;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = (3160 + ($$sum11<<2)|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[(3136)>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = ((($F16$0)) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = ((($p$0)) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = ((($p$0)) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = (3424 + ($I18$0<<2)|0);
 $273 = ((($p$0)) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = ((($p$0)) + 16|0);
 $275 = ((($p$0)) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[(3124)>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L199: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[(3124)>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = ((($p$0)) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = ((($p$0)) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = ((($p$0)) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ((($284)) + 4|0);
   $286 = HEAP32[$285>>2]|0;
   $287 = $286 & -8;
   $288 = ($287|0)==($psize$1|0);
   L201: do {
    if ($288) {
     $T$0$lcssa = $284;
    } else {
     $289 = ($I18$0|0)==(31);
     $290 = $I18$0 >>> 1;
     $291 = (25 - ($290))|0;
     $292 = $289 ? 0 : $291;
     $293 = $psize$1 << $292;
     $K19$052 = $293;$T$051 = $284;
     while(1) {
      $300 = $K19$052 >>> 31;
      $301 = (((($T$051)) + 16|0) + ($300<<2)|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$051$lcssa = $T$051;
       break;
      }
      $294 = $K19$052 << 1;
      $295 = ((($296)) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $T$0$lcssa = $296;
       break L201;
      } else {
       $K19$052 = $294;$T$051 = $296;
      }
     }
     $303 = HEAP32[(3136)>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = ((($p$0)) + 24|0);
      HEAP32[$305>>2] = $T$051$lcssa;
      $306 = ((($p$0)) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = ((($p$0)) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L199;
     }
    }
   } while(0);
   $308 = ((($T$0$lcssa)) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[(3136)>>2]|0;
   $311 = ($309>>>0)>=($310>>>0);
   $not$ = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = $311 & $not$;
   if ($312) {
    $313 = ((($309)) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = ((($p$0)) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = ((($p$0)) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = ((($p$0)) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[(3152)>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[(3152)>>2] = $318;
 $319 = ($318|0)==(0);
 if ($319) {
  $sp$0$in$i = (3576);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = ((($sp$0$i)) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[(3152)>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 $5 = (($bytes) + 11)|0;
 $6 = $5 & -8;
 $7 = $4 ? 16 : $6;
 $8 = ((($oldmem)) + -8|0);
 $9 = (_try_realloc_chunk($8,$7)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($9)) + 8|0);
  $mem$0 = $11;
  return ($mem$0|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $14 = ((($oldmem)) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$0 = $12;
 return ($mem$0|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 $1 = (($c) + -9)|0;
 $2 = ($1>>>0)<(5);
 $3 = $0 | $2;
 $4 = $3&1;
 return ($4|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if ($isdigit) {
  $4 = 1;
  $3 = $4&1;
  return ($3|0);
 }
 $0 = $c | 32;
 $1 = (($0) + -97)|0;
 $2 = ($1>>>0)<(6);
 $4 = $2;
 $3 = $4&1;
 return ($3|0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$122 = 0, $$123 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa130 = 0, $$lcssa131 = 0, $$lcssa132 = 0, $$lcssa133 = 0, $$lcssa134 = 0, $$lcssa135 = 0, $$sum = 0, $$sum14 = 0, $$sum1445 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum18 = 0, $$sum1865 = 0, $$sum19 = 0;
 var $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$124 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$371 = 0;
 var $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$753 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond40 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$082 = 0, $x$146 = 0, $x$266 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 if ($2) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 22;
  $282 = 0;$283 = 0;
  tempRet0 = ($282);
  return ($283|0);
 }
 $3 = ((($f)) + 4|0);
 $4 = ((($f)) + 100|0);
 while(1) {
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = ((($6)) + 1|0);
   HEAP32[$3>>2] = $9;
   $10 = HEAP8[$6>>0]|0;
   $11 = $10&255;
   $13 = $11;
  } else {
   $12 = (___shgetc($f)|0);
   $13 = $12;
  }
  $14 = (_isspace($13)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$lcssa135 = $13;
   break;
  }
 }
 $16 = ($$lcssa135|0)==(45);
 do {
  if ((($$lcssa135|0) == 43) | (($$lcssa135|0) == 45)) {
   $17 = $16 << 31 >> 31;
   $18 = HEAP32[$3>>2]|0;
   $19 = HEAP32[$4>>2]|0;
   $20 = ($18>>>0)<($19>>>0);
   if ($20) {
    $21 = ((($18)) + 1|0);
    HEAP32[$3>>2] = $21;
    $22 = HEAP8[$18>>0]|0;
    $23 = $22&255;
    $c$0 = $23;$neg$0 = $17;
    break;
   } else {
    $24 = (___shgetc($f)|0);
    $c$0 = $24;$neg$0 = $17;
    break;
   }
  } else {
   $c$0 = $$lcssa135;$neg$0 = 0;
  }
 } while(0);
 $25 = ($base|0)==(0);
 $26 = $base & -17;
 $27 = ($26|0)==(0);
 $28 = ($c$0|0)==(48);
 $or$cond5 = $27 & $28;
 do {
  if ($or$cond5) {
   $29 = HEAP32[$3>>2]|0;
   $30 = HEAP32[$4>>2]|0;
   $31 = ($29>>>0)<($30>>>0);
   if ($31) {
    $32 = ((($29)) + 1|0);
    HEAP32[$3>>2] = $32;
    $33 = HEAP8[$29>>0]|0;
    $34 = $33&255;
    $37 = $34;
   } else {
    $35 = (___shgetc($f)|0);
    $37 = $35;
   }
   $36 = $37 | 32;
   $38 = ($36|0)==(120);
   if (!($38)) {
    if ($25) {
     $$123 = 8;$c$124 = $37;
     label = 46;
     break;
    } else {
     $$1 = $base;$c$1 = $37;
     label = 32;
     break;
    }
   }
   $39 = HEAP32[$3>>2]|0;
   $40 = HEAP32[$4>>2]|0;
   $41 = ($39>>>0)<($40>>>0);
   if ($41) {
    $42 = ((($39)) + 1|0);
    HEAP32[$3>>2] = $42;
    $43 = HEAP8[$39>>0]|0;
    $44 = $43&255;
    $46 = $44;
   } else {
    $45 = (___shgetc($f)|0);
    $46 = $45;
   }
   $$sum20 = (($46) + 1)|0;
   $47 = (3616 + ($$sum20)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48&255)>(15);
   if ($49) {
    $50 = HEAP32[$4>>2]|0;
    $51 = ($50|0)==(0|0);
    if (!($51)) {
     $52 = HEAP32[$3>>2]|0;
     $53 = ((($52)) + -1|0);
     HEAP32[$3>>2] = $53;
    }
    $54 = ($pok|0)==(0);
    if ($54) {
     ___shlim($f,0);
     $282 = 0;$283 = 0;
     tempRet0 = ($282);
     return ($283|0);
    }
    if ($51) {
     $282 = 0;$283 = 0;
     tempRet0 = ($282);
     return ($283|0);
    }
    $55 = HEAP32[$3>>2]|0;
    $56 = ((($55)) + -1|0);
    HEAP32[$3>>2] = $56;
    $282 = 0;$283 = 0;
    tempRet0 = ($282);
    return ($283|0);
   } else {
    $$123 = 16;$c$124 = $46;
    label = 46;
   }
  } else {
   $$base21 = $25 ? 10 : $base;
   $$sum = (($c$0) + 1)|0;
   $57 = (3616 + ($$sum)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58&255;
   $60 = ($59>>>0)<($$base21>>>0);
   if ($60) {
    $$1 = $$base21;$c$1 = $c$0;
    label = 32;
   } else {
    $61 = HEAP32[$4>>2]|0;
    $62 = ($61|0)==(0|0);
    if (!($62)) {
     $63 = HEAP32[$3>>2]|0;
     $64 = ((($63)) + -1|0);
     HEAP32[$3>>2] = $64;
    }
    ___shlim($f,0);
    $65 = (___errno_location()|0);
    HEAP32[$65>>2] = 22;
    $282 = 0;$283 = 0;
    tempRet0 = ($282);
    return ($283|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $66 = ($$1|0)==(10);
  if ($66) {
   $67 = (($c$1) + -48)|0;
   $68 = ($67>>>0)<(10);
   if ($68) {
    $71 = $67;$x$082 = 0;
    while(1) {
     $69 = ($x$082*10)|0;
     $70 = (($69) + ($71))|0;
     $72 = HEAP32[$3>>2]|0;
     $73 = HEAP32[$4>>2]|0;
     $74 = ($72>>>0)<($73>>>0);
     if ($74) {
      $75 = ((($72)) + 1|0);
      HEAP32[$3>>2] = $75;
      $76 = HEAP8[$72>>0]|0;
      $77 = $76&255;
      $c$2$be = $77;
     } else {
      $78 = (___shgetc($f)|0);
      $c$2$be = $78;
     }
     $79 = (($c$2$be) + -48)|0;
     $80 = ($79>>>0)<(10);
     $81 = ($70>>>0)<(429496729);
     $82 = $80 & $81;
     if ($82) {
      $71 = $79;$x$082 = $70;
     } else {
      $$lcssa134 = $70;$c$2$be$lcssa = $c$2$be;
      break;
     }
    }
    $284 = $$lcssa134;$285 = 0;$c$2$lcssa = $c$2$be$lcssa;
   } else {
    $284 = 0;$285 = 0;$c$2$lcssa = $c$1;
   }
   $83 = (($c$2$lcssa) + -48)|0;
   $84 = ($83>>>0)<(10);
   if ($84) {
    $85 = $284;$86 = $285;$89 = $83;$c$371 = $c$2$lcssa;
    while(1) {
     $87 = (___muldi3(($85|0),($86|0),10,0)|0);
     $88 = tempRet0;
     $90 = ($89|0)<(0);
     $91 = $90 << 31 >> 31;
     $92 = $89 ^ -1;
     $93 = $91 ^ -1;
     $94 = ($88>>>0)>($93>>>0);
     $95 = ($87>>>0)>($92>>>0);
     $96 = ($88|0)==($93|0);
     $97 = $96 & $95;
     $98 = $94 | $97;
     if ($98) {
      $$lcssa = $89;$286 = $85;$287 = $86;$c$3$lcssa = $c$371;
      break;
     }
     $99 = (_i64Add(($87|0),($88|0),($89|0),($91|0))|0);
     $100 = tempRet0;
     $101 = HEAP32[$3>>2]|0;
     $102 = HEAP32[$4>>2]|0;
     $103 = ($101>>>0)<($102>>>0);
     if ($103) {
      $104 = ((($101)) + 1|0);
      HEAP32[$3>>2] = $104;
      $105 = HEAP8[$101>>0]|0;
      $106 = $105&255;
      $c$3$be = $106;
     } else {
      $107 = (___shgetc($f)|0);
      $c$3$be = $107;
     }
     $108 = (($c$3$be) + -48)|0;
     $109 = ($108>>>0)<(10);
     $110 = ($100>>>0)<(429496729);
     $111 = ($99>>>0)<(2576980378);
     $112 = ($100|0)==(429496729);
     $113 = $112 & $111;
     $114 = $110 | $113;
     $or$cond7 = $109 & $114;
     if ($or$cond7) {
      $85 = $99;$86 = $100;$89 = $108;$c$371 = $c$3$be;
     } else {
      $$lcssa = $108;$286 = $99;$287 = $100;$c$3$lcssa = $c$3$be;
      break;
     }
    }
    $115 = ($$lcssa>>>0)>(9);
    if ($115) {
     $255 = $287;$257 = $286;
    } else {
     $$122 = 10;$288 = $286;$289 = $287;$c$8 = $c$3$lcssa;
     label = 72;
    }
   } else {
    $255 = $285;$257 = $284;
   }
  } else {
   $$123 = $$1;$c$124 = $c$1;
   label = 46;
  }
 }
 L69: do {
  if ((label|0) == 46) {
   $116 = (($$123) + -1)|0;
   $117 = $116 & $$123;
   $118 = ($117|0)==(0);
   if ($118) {
    $123 = ($$123*23)|0;
    $124 = $123 >>> 5;
    $125 = $124 & 7;
    $126 = (3880 + ($125)|0);
    $127 = HEAP8[$126>>0]|0;
    $128 = $127 << 24 >> 24;
    $$sum1445 = (($c$124) + 1)|0;
    $129 = (3616 + ($$sum1445)|0);
    $130 = HEAP8[$129>>0]|0;
    $131 = $130&255;
    $132 = ($131>>>0)<($$123>>>0);
    if ($132) {
     $135 = $131;$x$146 = 0;
     while(1) {
      $133 = $x$146 << $128;
      $134 = $135 | $133;
      $136 = HEAP32[$3>>2]|0;
      $137 = HEAP32[$4>>2]|0;
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $139 = ((($136)) + 1|0);
       HEAP32[$3>>2] = $139;
       $140 = HEAP8[$136>>0]|0;
       $141 = $140&255;
       $c$4$be = $141;
      } else {
       $142 = (___shgetc($f)|0);
       $c$4$be = $142;
      }
      $$sum14 = (($c$4$be) + 1)|0;
      $143 = (3616 + ($$sum14)|0);
      $144 = HEAP8[$143>>0]|0;
      $145 = $144&255;
      $146 = ($145>>>0)<($$123>>>0);
      $147 = ($134>>>0)<(134217728);
      $148 = $147 & $146;
      if ($148) {
       $135 = $145;$x$146 = $134;
      } else {
       $$lcssa130 = $134;$$lcssa131 = $144;$c$4$be$lcssa = $c$4$be;
       break;
      }
     }
     $152 = $$lcssa131;$154 = 0;$156 = $$lcssa130;$c$4$lcssa = $c$4$be$lcssa;
    } else {
     $152 = $130;$154 = 0;$156 = 0;$c$4$lcssa = $c$124;
    }
    $149 = (_bitshift64Lshr(-1,-1,($128|0))|0);
    $150 = tempRet0;
    $151 = $152&255;
    $153 = ($151>>>0)>=($$123>>>0);
    $155 = ($154>>>0)>($150>>>0);
    $157 = ($156>>>0)>($149>>>0);
    $158 = ($154|0)==($150|0);
    $159 = $158 & $157;
    $160 = $155 | $159;
    $or$cond40 = $153 | $160;
    if ($or$cond40) {
     $$122 = $$123;$288 = $156;$289 = $154;$c$8 = $c$4$lcssa;
     label = 72;
     break;
    } else {
     $161 = $156;$162 = $154;$166 = $152;
    }
    while(1) {
     $163 = (_bitshift64Shl(($161|0),($162|0),($128|0))|0);
     $164 = tempRet0;
     $165 = $166&255;
     $167 = $165 | $163;
     $168 = HEAP32[$3>>2]|0;
     $169 = HEAP32[$4>>2]|0;
     $170 = ($168>>>0)<($169>>>0);
     if ($170) {
      $171 = ((($168)) + 1|0);
      HEAP32[$3>>2] = $171;
      $172 = HEAP8[$168>>0]|0;
      $173 = $172&255;
      $c$5$be = $173;
     } else {
      $174 = (___shgetc($f)|0);
      $c$5$be = $174;
     }
     $$sum15 = (($c$5$be) + 1)|0;
     $175 = (3616 + ($$sum15)|0);
     $176 = HEAP8[$175>>0]|0;
     $177 = $176&255;
     $178 = ($177>>>0)>=($$123>>>0);
     $179 = ($164>>>0)>($150>>>0);
     $180 = ($167>>>0)>($149>>>0);
     $181 = ($164|0)==($150|0);
     $182 = $181 & $180;
     $183 = $179 | $182;
     $or$cond = $178 | $183;
     if ($or$cond) {
      $$122 = $$123;$288 = $167;$289 = $164;$c$8 = $c$5$be;
      label = 72;
      break L69;
     } else {
      $161 = $167;$162 = $164;$166 = $176;
     }
    }
   }
   $$sum1865 = (($c$124) + 1)|0;
   $119 = (3616 + ($$sum1865)|0);
   $120 = HEAP8[$119>>0]|0;
   $121 = $120&255;
   $122 = ($121>>>0)<($$123>>>0);
   if ($122) {
    $186 = $121;$x$266 = 0;
    while(1) {
     $184 = Math_imul($x$266, $$123)|0;
     $185 = (($186) + ($184))|0;
     $187 = HEAP32[$3>>2]|0;
     $188 = HEAP32[$4>>2]|0;
     $189 = ($187>>>0)<($188>>>0);
     if ($189) {
      $190 = ((($187)) + 1|0);
      HEAP32[$3>>2] = $190;
      $191 = HEAP8[$187>>0]|0;
      $192 = $191&255;
      $c$6$be = $192;
     } else {
      $193 = (___shgetc($f)|0);
      $c$6$be = $193;
     }
     $$sum18 = (($c$6$be) + 1)|0;
     $194 = (3616 + ($$sum18)|0);
     $195 = HEAP8[$194>>0]|0;
     $196 = $195&255;
     $197 = ($196>>>0)<($$123>>>0);
     $198 = ($185>>>0)<(119304647);
     $199 = $198 & $197;
     if ($199) {
      $186 = $196;$x$266 = $185;
     } else {
      $$lcssa132 = $185;$$lcssa133 = $195;$c$6$be$lcssa = $c$6$be;
      break;
     }
    }
    $201 = $$lcssa133;$290 = $$lcssa132;$291 = 0;$c$6$lcssa = $c$6$be$lcssa;
   } else {
    $201 = $120;$290 = 0;$291 = 0;$c$6$lcssa = $c$124;
   }
   $200 = $201&255;
   $202 = ($200>>>0)<($$123>>>0);
   if ($202) {
    $203 = (___udivdi3(-1,-1,($$123|0),0)|0);
    $204 = tempRet0;
    $205 = $291;$207 = $290;$215 = $201;$c$753 = $c$6$lcssa;
    while(1) {
     $206 = ($205>>>0)>($204>>>0);
     $208 = ($207>>>0)>($203>>>0);
     $209 = ($205|0)==($204|0);
     $210 = $209 & $208;
     $211 = $206 | $210;
     if ($211) {
      $$122 = $$123;$288 = $207;$289 = $205;$c$8 = $c$753;
      label = 72;
      break L69;
     }
     $212 = (___muldi3(($207|0),($205|0),($$123|0),0)|0);
     $213 = tempRet0;
     $214 = $215&255;
     $216 = $214 ^ -1;
     $217 = ($213>>>0)>(4294967295);
     $218 = ($212>>>0)>($216>>>0);
     $219 = ($213|0)==(-1);
     $220 = $219 & $218;
     $221 = $217 | $220;
     if ($221) {
      $$122 = $$123;$288 = $207;$289 = $205;$c$8 = $c$753;
      label = 72;
      break L69;
     }
     $222 = (_i64Add(($214|0),0,($212|0),($213|0))|0);
     $223 = tempRet0;
     $224 = HEAP32[$3>>2]|0;
     $225 = HEAP32[$4>>2]|0;
     $226 = ($224>>>0)<($225>>>0);
     if ($226) {
      $227 = ((($224)) + 1|0);
      HEAP32[$3>>2] = $227;
      $228 = HEAP8[$224>>0]|0;
      $229 = $228&255;
      $c$7$be = $229;
     } else {
      $230 = (___shgetc($f)|0);
      $c$7$be = $230;
     }
     $$sum19 = (($c$7$be) + 1)|0;
     $231 = (3616 + ($$sum19)|0);
     $232 = HEAP8[$231>>0]|0;
     $233 = $232&255;
     $234 = ($233>>>0)<($$123>>>0);
     if ($234) {
      $205 = $223;$207 = $222;$215 = $232;$c$753 = $c$7$be;
     } else {
      $$122 = $$123;$288 = $222;$289 = $223;$c$8 = $c$7$be;
      label = 72;
      break;
     }
    }
   } else {
    $$122 = $$123;$288 = $290;$289 = $291;$c$8 = $c$6$lcssa;
    label = 72;
   }
  }
 } while(0);
 if ((label|0) == 72) {
  $$sum16 = (($c$8) + 1)|0;
  $235 = (3616 + ($$sum16)|0);
  $236 = HEAP8[$235>>0]|0;
  $237 = $236&255;
  $238 = ($237>>>0)<($$122>>>0);
  if ($238) {
   while(1) {
    $239 = HEAP32[$3>>2]|0;
    $240 = HEAP32[$4>>2]|0;
    $241 = ($239>>>0)<($240>>>0);
    if ($241) {
     $242 = ((($239)) + 1|0);
     HEAP32[$3>>2] = $242;
     $243 = HEAP8[$239>>0]|0;
     $244 = $243&255;
     $c$9$be = $244;
    } else {
     $245 = (___shgetc($f)|0);
     $c$9$be = $245;
    }
    $$sum17 = (($c$9$be) + 1)|0;
    $246 = (3616 + ($$sum17)|0);
    $247 = HEAP8[$246>>0]|0;
    $248 = $247&255;
    $249 = ($248>>>0)<($$122>>>0);
    if (!($249)) {
     break;
    }
   }
   $250 = (___errno_location()|0);
   HEAP32[$250>>2] = 34;
   $255 = $1;$257 = $0;
  } else {
   $255 = $289;$257 = $288;
  }
 }
 $251 = HEAP32[$4>>2]|0;
 $252 = ($251|0)==(0|0);
 if (!($252)) {
  $253 = HEAP32[$3>>2]|0;
  $254 = ((($253)) + -1|0);
  HEAP32[$3>>2] = $254;
 }
 $256 = ($255>>>0)<($1>>>0);
 $258 = ($257>>>0)<($0>>>0);
 $259 = ($255|0)==($1|0);
 $260 = $259 & $258;
 $261 = $256 | $260;
 if (!($261)) {
  $262 = $0 & 1;
  $263 = ($262|0)!=(0);
  $264 = (0)!=(0);
  $265 = $263 | $264;
  $266 = ($neg$0|0)!=(0);
  $or$cond12 = $265 | $266;
  if (!($or$cond12)) {
   $267 = (___errno_location()|0);
   HEAP32[$267>>2] = 34;
   $268 = (_i64Add(($0|0),($1|0),-1,-1)|0);
   $269 = tempRet0;
   $282 = $269;$283 = $268;
   tempRet0 = ($282);
   return ($283|0);
  }
  $270 = ($255>>>0)>($1>>>0);
  $271 = ($257>>>0)>($0>>>0);
  $272 = ($255|0)==($1|0);
  $273 = $272 & $271;
  $274 = $270 | $273;
  if ($274) {
   $275 = (___errno_location()|0);
   HEAP32[$275>>2] = 34;
   $282 = $1;$283 = $0;
   tempRet0 = ($282);
   return ($283|0);
  }
 }
 $276 = ($neg$0|0)<(0);
 $277 = $276 << 31 >> 31;
 $278 = $257 ^ $neg$0;
 $279 = $255 ^ $277;
 $280 = (_i64Subtract(($278|0),($279|0),($neg$0|0),($277|0))|0);
 $281 = tempRet0;
 $282 = $281;$283 = $280;
 tempRet0 = ($282);
 return ($283|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$0$i25 = 0.0, $$010$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$09$i = 0, $$1$be$i = 0, $$1$ph$i = 0, $$11$i = 0, $$18$i = 0, $$2$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3121$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa288 = 0;
 var $$lcssa289 = 0, $$lcssa308 = 0, $$lcssa308$lcssa = 0, $$lcssa309 = 0, $$lcssa309$lcssa = 0, $$lcssa322 = 0, $$lcssa323 = 0, $$lcssa333 = 0, $$lcssa50$i = 0, $$lnz$0$i = 0, $$neg32$i = 0, $$not$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi42$iZ2D = 0.0, $$pre41$i = 0.0, $$promoted = 0, $$promoted$i = 0;
 var $$promoted185 = 0, $$sink$off0$us$i = 0, $$sink$off0$us93$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0.0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0.0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0.0;
 var $276 = 0.0, $277 = 0, $278 = 0, $279 = 0.0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0.0, $419 = 0.0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0.0, $436 = 0.0, $437 = 0.0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0.0, $448 = 0.0, $449 = 0.0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0.0, $46 = 0, $460 = 0.0, $461 = 0.0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0.0;
 var $474 = 0, $475 = 0.0, $476 = 0.0, $477 = 0, $478 = 0.0, $479 = 0, $48 = 0.0, $480 = 0.0, $481 = 0.0, $482 = 0, $483 = 0, $484 = 0, $485 = 0.0, $486 = 0.0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0, $491 = 0;
 var $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0, $496 = 0, $497 = 0, $498 = 0.0, $499 = 0.0, $5 = 0, $50 = 0.0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0.0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0.0, $643 = 0.0, $644 = 0.0, $645 = 0, $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0.0, $663 = 0, $664 = 0.0, $665 = 0.0, $666 = 0, $667 = 0, $668 = 0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0;
 var $672 = 0.0, $673 = 0, $674 = 0, $675 = 0.0, $676 = 0, $677 = 0.0, $678 = 0.0, $679 = 0.0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0.0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0.0, $69 = 0;
 var $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0.0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0.0, $702 = 0, $703 = 0, $704 = 0.0, $705 = 0.0, $706 = 0, $707 = 0;
 var $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0;
 var $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0;
 var $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a$0$lcssa177$i = 0, $a$0101$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph38$i = 0, $a$3$i = 0;
 var $a$3$i$lcssa300 = 0, $a$3$i301 = 0, $a$3$ph$i = 0, $a$3$ph183$i = 0, $a$478$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i23 = 0.0, $bits$0$ph = 0, $brmerge = 0, $brmerge$i26 = 0, $brmerge187 = 0, $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$185 = 0, $c$2 = 0;
 var $c$2$i = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0103$i = 0, $carry1$0$us$i = 0, $carry1$0$us89$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0, $carry1$1$us94$i = 0, $carry1$1$us94$i$lcssa = 0, $carry3$081$i = 0, $cond$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0;
 var $e2$0$us$i = 0, $e2$0$us84$i = 0, $e2$1$i = 0, $e2$1$i298 = 0, $e2$1$ph$i = 0, $e2$1$ph182$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa294 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa331 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0;
 var $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3117$i = 0, $gotdig$3117$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1118$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$084 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0;
 var $j$0$lcssa$i = 0, $j$0120$i = 0, $j$0120$i$lcssa = 0, $j$067$i = 0, $j$068$i = 0, $j$069$i = 0, $j$2$i = 0, $j$3110$i = 0, $k$0$lcssa$i = 0, $k$0119$i = 0, $k$0119$i$lcssa = 0, $k$063$i = 0, $k$064$i = 0, $k$065$i = 0, $k$2$i = 0, $k$3$i = 0, $k$4102$i = 0, $k$5$in$us$i = 0, $k$5$in$us88$i = 0, $k$5$us$i = 0;
 var $k$5$us90$i = 0, $k$5$z$2$us$i = 0, $k$5$z$2$us96$i = 0, $k$679$i = 0, $lnz$0$lcssa$i = 0, $lnz$0116$i = 0, $lnz$0116$i$lcssa = 0, $lnz$057$i = 0, $lnz$058$i = 0, $lnz$059$i = 0, $lnz$2$i = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i16 = 0, $or$cond13$i = 0, $or$cond15$i = 0, $or$cond16$i = 0, $or$cond17$us$i = 0;
 var $or$cond17$us95$i = 0, $or$cond19$i = 0, $or$cond20$i = 0, $or$cond216$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond8$i = 0, $or$cond9$i = 0, $or$cond9$not = 0, $rp$0$lcssa178$i = 0, $rp$0100$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph36$i = 0, $rp$3$ph$i = 0, $rp$3$ph34$i = 0, $rp$477$i = 0;
 var $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$6$i = 0, $x$i = 0;
 var $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i22 = 0.0, $y$2$i = 0.0, $y$2$i24 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$ph37$i = 0, $z$1$us$i = 0, $z$1$us85$i = 0, $z$2$us$i = 0, $z$2$us87$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0;
 var $z$3$us97$i = 0, $z$3$us97$i$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $x$i = sp;
 if ((($prec|0) == 0)) {
  $bits$0$ph = 24;$emin$0$ph = -149;
 } else if ((($prec|0) == 2)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else if ((($prec|0) == 1)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $0 = ((($f)) + 4|0);
 $1 = ((($f)) + 100|0);
 while(1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ($2>>>0)<($3>>>0);
  if ($4) {
   $5 = ((($2)) + 1|0);
   HEAP32[$0>>2] = $5;
   $6 = HEAP8[$2>>0]|0;
   $7 = $6&255;
   $9 = $7;
  } else {
   $8 = (___shgetc($f)|0);
   $9 = $8;
  }
  $10 = (_isspace($9)|0);
  $11 = ($10|0)==(0);
  if ($11) {
   $$lcssa333 = $9;
   break;
  }
 }
 $12 = ($$lcssa333|0)==(45);
 do {
  if ((($$lcssa333|0) == 43) | (($$lcssa333|0) == 45)) {
   $13 = $12&1;
   $14 = $13 << 1;
   $15 = (1 - ($14))|0;
   $16 = HEAP32[$0>>2]|0;
   $17 = HEAP32[$1>>2]|0;
   $18 = ($16>>>0)<($17>>>0);
   if ($18) {
    $19 = ((($16)) + 1|0);
    HEAP32[$0>>2] = $19;
    $20 = HEAP8[$16>>0]|0;
    $21 = $20&255;
    $c$0 = $21;$sign$0 = $15;
    break;
   } else {
    $22 = (___shgetc($f)|0);
    $c$0 = $22;$sign$0 = $15;
    break;
   }
  } else {
   $c$0 = $$lcssa333;$sign$0 = 1;
  }
 } while(0);
 $c$185 = $c$0;$i$084 = 0;
 while(1) {
  $23 = $c$185 | 32;
  $24 = (3896 + ($i$084)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25 << 24 >> 24;
  $27 = ($23|0)==($26|0);
  if (!($27)) {
   $c$1$lcssa = $c$185;$i$0$lcssa = $i$084;
   break;
  }
  $28 = ($i$084>>>0)<(7);
  do {
   if ($28) {
    $29 = HEAP32[$0>>2]|0;
    $30 = HEAP32[$1>>2]|0;
    $31 = ($29>>>0)<($30>>>0);
    if ($31) {
     $32 = ((($29)) + 1|0);
     HEAP32[$0>>2] = $32;
     $33 = HEAP8[$29>>0]|0;
     $34 = $33&255;
     $c$2 = $34;
     break;
    } else {
     $35 = (___shgetc($f)|0);
     $c$2 = $35;
     break;
    }
   } else {
    $c$2 = $c$185;
   }
  } while(0);
  $36 = (($i$084) + 1)|0;
  $37 = ($36>>>0)<(8);
  if ($37) {
   $c$185 = $c$2;$i$084 = $36;
  } else {
   $c$1$lcssa = $c$2;$i$0$lcssa = $36;
   break;
  }
 }
 do {
  if ((($i$0$lcssa|0) == 3)) {
   label = 23;
  } else if (!((($i$0$lcssa|0) == 8))) {
   $38 = ($i$0$lcssa>>>0)>(3);
   $39 = ($pok|0)!=(0);
   $or$cond5 = $39 & $38;
   if ($or$cond5) {
    $40 = ($i$0$lcssa|0)==(8);
    if ($40) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   $51 = ($i$0$lcssa|0)==(0);
   do {
    if ($51) {
     $52 = $c$1$lcssa | 32;
     $53 = ($52|0)==(110);
     if ($53) {
      $54 = HEAP32[$0>>2]|0;
      $55 = HEAP32[$1>>2]|0;
      $56 = ($54>>>0)<($55>>>0);
      if ($56) {
       $57 = ((($54)) + 1|0);
       HEAP32[$0>>2] = $57;
       $58 = HEAP8[$54>>0]|0;
       $59 = $58&255;
       $c$4 = $59;
      } else {
       $60 = (___shgetc($f)|0);
       $c$4 = $60;
      }
      $61 = $c$4 | 32;
      $62 = ($61|0)==(97);
      if (!($62)) {
       break;
      }
      $712 = HEAP32[$0>>2]|0;
      $713 = HEAP32[$1>>2]|0;
      $714 = ($712>>>0)<($713>>>0);
      if ($714) {
       $716 = ((($712)) + 1|0);
       HEAP32[$0>>2] = $716;
       $717 = HEAP8[$712>>0]|0;
       $718 = $717&255;
       $c$4$1 = $718;
      } else {
       $715 = (___shgetc($f)|0);
       $c$4$1 = $715;
      }
      $719 = $c$4$1 | 32;
      $720 = ($719|0)==(110);
      if (!($720)) {
       break;
      }
      $63 = HEAP32[$0>>2]|0;
      $64 = HEAP32[$1>>2]|0;
      $65 = ($63>>>0)<($64>>>0);
      if ($65) {
       $66 = ((($63)) + 1|0);
       HEAP32[$0>>2] = $66;
       $67 = HEAP8[$63>>0]|0;
       $68 = $67&255;
       $70 = $68;
      } else {
       $69 = (___shgetc($f)|0);
       $70 = $69;
      }
      $71 = ($70|0)==(40);
      if ($71) {
       $i$4 = 1;
      } else {
       $72 = HEAP32[$1>>2]|0;
       $73 = ($72|0)==(0|0);
       if ($73) {
        $$0 = nan;
        STACKTOP = sp;return (+$$0);
       }
       $74 = HEAP32[$0>>2]|0;
       $75 = ((($74)) + -1|0);
       HEAP32[$0>>2] = $75;
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      while(1) {
       $76 = HEAP32[$0>>2]|0;
       $77 = HEAP32[$1>>2]|0;
       $78 = ($76>>>0)<($77>>>0);
       if ($78) {
        $79 = ((($76)) + 1|0);
        HEAP32[$0>>2] = $79;
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $84 = $81;
       } else {
        $82 = (___shgetc($f)|0);
        $84 = $82;
       }
       $83 = (($84) + -48)|0;
       $85 = ($83>>>0)<(10);
       $86 = (($84) + -65)|0;
       $87 = ($86>>>0)<(26);
       $or$cond = $85 | $87;
       if (!($or$cond)) {
        $88 = (($84) + -97)|0;
        $89 = ($88>>>0)<(26);
        $90 = ($84|0)==(95);
        $or$cond7 = $90 | $89;
        if (!($or$cond7)) {
         $$lcssa289 = $84;$i$4$lcssa = $i$4;
         break;
        }
       }
       $102 = (($i$4) + 1)|0;
       $i$4 = $102;
      }
      $91 = ($$lcssa289|0)==(41);
      if ($91) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $92 = HEAP32[$1>>2]|0;
      $93 = ($92|0)==(0|0);
      if (!($93)) {
       $94 = HEAP32[$0>>2]|0;
       $95 = ((($94)) + -1|0);
       HEAP32[$0>>2] = $95;
      }
      if (!($39)) {
       $97 = (___errno_location()|0);
       HEAP32[$97>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       STACKTOP = sp;return (+$$0);
      }
      $96 = ($i$4$lcssa|0)==(0);
      $brmerge187 = $96 | $93;
      if ($brmerge187) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $$promoted185 = HEAP32[$0>>2]|0;
      $$in = $i$4$lcssa;$100 = $$promoted185;
      while(1) {
       $98 = (($$in) + -1)|0;
       $99 = ((($100)) + -1|0);
       $101 = ($98|0)==(0);
       if ($101) {
        $$lcssa288 = $99;
        break;
       } else {
        $$in = $98;$100 = $99;
       }
      }
      HEAP32[$0>>2] = $$lcssa288;
      $$0 = nan;
      STACKTOP = sp;return (+$$0);
     }
     $108 = ($c$1$lcssa|0)==(48);
     do {
      if ($108) {
       $109 = HEAP32[$0>>2]|0;
       $110 = HEAP32[$1>>2]|0;
       $111 = ($109>>>0)<($110>>>0);
       if ($111) {
        $112 = ((($109)) + 1|0);
        HEAP32[$0>>2] = $112;
        $113 = HEAP8[$109>>0]|0;
        $114 = $113&255;
        $117 = $114;
       } else {
        $115 = (___shgetc($f)|0);
        $117 = $115;
       }
       $116 = $117 | 32;
       $118 = ($116|0)==(120);
       if (!($118)) {
        $320 = HEAP32[$1>>2]|0;
        $321 = ($320|0)==(0|0);
        if ($321) {
         $c$6 = 48;
         break;
        }
        $322 = HEAP32[$0>>2]|0;
        $323 = ((($322)) + -1|0);
        HEAP32[$0>>2] = $323;
        $c$6 = 48;
        break;
       }
       $119 = HEAP32[$0>>2]|0;
       $120 = HEAP32[$1>>2]|0;
       $121 = ($119>>>0)<($120>>>0);
       if ($121) {
        $122 = ((($119)) + 1|0);
        HEAP32[$0>>2] = $122;
        $123 = HEAP8[$119>>0]|0;
        $124 = $123&255;
        $c$0$i = $124;$gotdig$0$i = 0;
       } else {
        $125 = (___shgetc($f)|0);
        $c$0$i = $125;$gotdig$0$i = 0;
       }
       while(1) {
        if ((($c$0$i|0) == 46)) {
         $gotdig$0$i$lcssa294 = $gotdig$0$i;
         label = 71;
         break;
        } else if (!((($c$0$i|0) == 48))) {
         $162 = 0;$164 = 0;$721 = 0;$722 = 0;$c$2$i = $c$0$i;$gotdig$2$i = $gotdig$0$i;$gotrad$0$i = 0;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
         break;
        }
        $126 = HEAP32[$0>>2]|0;
        $127 = HEAP32[$1>>2]|0;
        $128 = ($126>>>0)<($127>>>0);
        if ($128) {
         $129 = ((($126)) + 1|0);
         HEAP32[$0>>2] = $129;
         $130 = HEAP8[$126>>0]|0;
         $131 = $130&255;
         $c$0$i = $131;$gotdig$0$i = 1;
         continue;
        } else {
         $132 = (___shgetc($f)|0);
         $c$0$i = $132;$gotdig$0$i = 1;
         continue;
        }
       }
       if ((label|0) == 71) {
        $133 = HEAP32[$0>>2]|0;
        $134 = HEAP32[$1>>2]|0;
        $135 = ($133>>>0)<($134>>>0);
        if ($135) {
         $136 = ((($133)) + 1|0);
         HEAP32[$0>>2] = $136;
         $137 = HEAP8[$133>>0]|0;
         $138 = $137&255;
         $c$1$ph$i = $138;
        } else {
         $139 = (___shgetc($f)|0);
         $c$1$ph$i = $139;
        }
        $140 = ($c$1$ph$i|0)==(48);
        if ($140) {
         $148 = 0;$149 = 0;
         while(1) {
          $141 = HEAP32[$0>>2]|0;
          $142 = HEAP32[$1>>2]|0;
          $143 = ($141>>>0)<($142>>>0);
          if ($143) {
           $144 = ((($141)) + 1|0);
           HEAP32[$0>>2] = $144;
           $145 = HEAP8[$141>>0]|0;
           $146 = $145&255;
           $152 = $146;
          } else {
           $147 = (___shgetc($f)|0);
           $152 = $147;
          }
          $150 = (_i64Add(($148|0),($149|0),-1,-1)|0);
          $151 = tempRet0;
          $153 = ($152|0)==(48);
          if ($153) {
           $148 = $150;$149 = $151;
          } else {
           $162 = 0;$164 = 0;$721 = $150;$722 = $151;$c$2$i = $152;$gotdig$2$i = 1;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
           break;
          }
         }
        } else {
         $162 = 0;$164 = 0;$721 = 0;$722 = 0;$c$2$i = $c$1$ph$i;$gotdig$2$i = $gotdig$0$i$lcssa294;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
        }
       }
       while(1) {
        $154 = (($c$2$i) + -48)|0;
        $155 = ($154>>>0)<(10);
        $$pre$i = $c$2$i | 32;
        if ($155) {
         label = 83;
        } else {
         $156 = (($$pre$i) + -97)|0;
         $157 = ($156>>>0)<(6);
         $158 = ($c$2$i|0)==(46);
         $or$cond6$i = $158 | $157;
         if (!($or$cond6$i)) {
          $206 = $721;$207 = $164;$209 = $722;$210 = $162;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
          break;
         }
         if ($158) {
          $159 = ($gotrad$0$i|0)==(0);
          if ($159) {
           $723 = $164;$724 = $162;$725 = $164;$726 = $162;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
          } else {
           $206 = $721;$207 = $164;$209 = $722;$210 = $162;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break;
          }
         } else {
          label = 83;
         }
        }
        if ((label|0) == 83) {
         label = 0;
         $160 = ($c$2$i|0)>(57);
         $161 = (($$pre$i) + -87)|0;
         $d$0$i = $160 ? $161 : $154;
         $163 = ($162|0)<(0);
         $165 = ($164>>>0)<(8);
         $166 = ($162|0)==(0);
         $167 = $166 & $165;
         $168 = $163 | $167;
         do {
          if ($168) {
           $169 = $x$0$i << 4;
           $170 = (($d$0$i) + ($169))|0;
           $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $170;$y$1$i = $y$0$i;
          } else {
           $171 = ($162|0)<(0);
           $172 = ($164>>>0)<(14);
           $173 = ($162|0)==(0);
           $174 = $173 & $172;
           $175 = $171 | $174;
           if ($175) {
            $176 = (+($d$0$i|0));
            $177 = $scale$0$i * 0.0625;
            $178 = $177 * $176;
            $179 = $y$0$i + $178;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $177;$x$1$i = $x$0$i;$y$1$i = $179;
            break;
           }
           $180 = ($d$0$i|0)==(0);
           $181 = ($gottail$0$i|0)!=(0);
           $or$cond$i = $181 | $180;
           if ($or$cond$i) {
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
           } else {
            $182 = $scale$0$i * 0.5;
            $183 = $y$0$i + $182;
            $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $183;
           }
          }
         } while(0);
         $184 = (_i64Add(($164|0),($162|0),1,0)|0);
         $185 = tempRet0;
         $723 = $721;$724 = $722;$725 = $184;$726 = $185;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
        }
        $186 = HEAP32[$0>>2]|0;
        $187 = HEAP32[$1>>2]|0;
        $188 = ($186>>>0)<($187>>>0);
        if ($188) {
         $189 = ((($186)) + 1|0);
         HEAP32[$0>>2] = $189;
         $190 = HEAP8[$186>>0]|0;
         $191 = $190&255;
         $162 = $726;$164 = $725;$721 = $723;$722 = $724;$c$2$i = $191;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
         continue;
        } else {
         $192 = (___shgetc($f)|0);
         $162 = $726;$164 = $725;$721 = $723;$722 = $724;$c$2$i = $192;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
         continue;
        }
       }
       $193 = ($gotdig$2$i$lcssa|0)==(0);
       if ($193) {
        $194 = HEAP32[$1>>2]|0;
        $195 = ($194|0)==(0|0);
        if (!($195)) {
         $196 = HEAP32[$0>>2]|0;
         $197 = ((($196)) + -1|0);
         HEAP32[$0>>2] = $197;
        }
        $198 = ($pok|0)==(0);
        if ($198) {
         ___shlim($f,0);
        } else {
         if (!($195)) {
          $199 = HEAP32[$0>>2]|0;
          $200 = ((($199)) + -1|0);
          HEAP32[$0>>2] = $200;
          $201 = ($gotrad$0$i$lcssa|0)==(0);
          if (!($201)) {
           $202 = ((($199)) + -2|0);
           HEAP32[$0>>2] = $202;
          }
         }
        }
        $203 = (+($sign$0|0));
        $204 = $203 * 0.0;
        $$0 = $204;
        STACKTOP = sp;return (+$$0);
       }
       $205 = ($gotrad$0$i$lcssa|0)==(0);
       $208 = $205 ? $207 : $206;
       $211 = $205 ? $210 : $209;
       $212 = ($210|0)<(0);
       $213 = ($207>>>0)<(8);
       $214 = ($210|0)==(0);
       $215 = $214 & $213;
       $216 = $212 | $215;
       if ($216) {
        $218 = $207;$219 = $210;$x$324$i = $x$0$i$lcssa;
        while(1) {
         $217 = $x$324$i << 4;
         $220 = (_i64Add(($218|0),($219|0),1,0)|0);
         $221 = tempRet0;
         $222 = ($221|0)<(0);
         $223 = ($220>>>0)<(8);
         $224 = ($221|0)==(0);
         $225 = $224 & $223;
         $226 = $222 | $225;
         if ($226) {
          $218 = $220;$219 = $221;$x$324$i = $217;
         } else {
          $x$3$lcssa$i = $217;
          break;
         }
        }
       } else {
        $x$3$lcssa$i = $x$0$i$lcssa;
       }
       $227 = $c$2$lcssa$i | 32;
       $228 = ($227|0)==(112);
       do {
        if ($228) {
         $229 = (_scanexp($f,$pok)|0);
         $230 = tempRet0;
         $231 = ($229|0)==(0);
         $232 = ($230|0)==(-2147483648);
         $233 = $231 & $232;
         if ($233) {
          $234 = ($pok|0)==(0);
          if ($234) {
           ___shlim($f,0);
           $$0 = 0.0;
           STACKTOP = sp;return (+$$0);
          } else {
           $235 = HEAP32[$1>>2]|0;
           $236 = ($235|0)==(0|0);
           if ($236) {
            $247 = 0;$248 = 0;
            break;
           }
           $237 = HEAP32[$0>>2]|0;
           $238 = ((($237)) + -1|0);
           HEAP32[$0>>2] = $238;
           $247 = 0;$248 = 0;
           break;
          }
         } else {
          $247 = $229;$248 = $230;
         }
        } else {
         $239 = HEAP32[$1>>2]|0;
         $240 = ($239|0)==(0|0);
         if ($240) {
          $247 = 0;$248 = 0;
         } else {
          $241 = HEAP32[$0>>2]|0;
          $242 = ((($241)) + -1|0);
          HEAP32[$0>>2] = $242;
          $247 = 0;$248 = 0;
         }
        }
       } while(0);
       $243 = (_bitshift64Shl(($208|0),($211|0),2)|0);
       $244 = tempRet0;
       $245 = (_i64Add(($243|0),($244|0),-32,-1)|0);
       $246 = tempRet0;
       $249 = (_i64Add(($245|0),($246|0),($247|0),($248|0))|0);
       $250 = tempRet0;
       $251 = ($x$3$lcssa$i|0)==(0);
       if ($251) {
        $252 = (+($sign$0|0));
        $253 = $252 * 0.0;
        $$0 = $253;
        STACKTOP = sp;return (+$$0);
       }
       $254 = (0 - ($emin$0$ph))|0;
       $255 = ($250|0)>(0);
       $256 = ($249>>>0)>($254>>>0);
       $257 = ($250|0)==(0);
       $258 = $257 & $256;
       $259 = $255 | $258;
       if ($259) {
        $260 = (___errno_location()|0);
        HEAP32[$260>>2] = 34;
        $261 = (+($sign$0|0));
        $262 = $261 * 1.7976931348623157E+308;
        $263 = $262 * 1.7976931348623157E+308;
        $$0 = $263;
        STACKTOP = sp;return (+$$0);
       }
       $264 = (($emin$0$ph) + -106)|0;
       $265 = ($264|0)<(0);
       $266 = $265 << 31 >> 31;
       $267 = ($250|0)<($266|0);
       $268 = ($249>>>0)<($264>>>0);
       $269 = ($250|0)==($266|0);
       $270 = $269 & $268;
       $271 = $267 | $270;
       if ($271) {
        $273 = (___errno_location()|0);
        HEAP32[$273>>2] = 34;
        $274 = (+($sign$0|0));
        $275 = $274 * 2.2250738585072014E-308;
        $276 = $275 * 2.2250738585072014E-308;
        $$0 = $276;
        STACKTOP = sp;return (+$$0);
       }
       $272 = ($x$3$lcssa$i|0)>(-1);
       if ($272) {
        $282 = $249;$283 = $250;$x$419$i = $x$3$lcssa$i;$y$320$i = $y$0$i$lcssa;
        while(1) {
         $277 = !($y$320$i >= 0.5);
         $278 = $x$419$i << 1;
         $279 = $y$320$i + -1.0;
         $280 = $277&1;
         $281 = $280 | $278;
         $x$5$i = $281 ^ 1;
         $$pn$i = $277 ? $y$320$i : $279;
         $y$4$i = $y$320$i + $$pn$i;
         $284 = (_i64Add(($282|0),($283|0),-1,-1)|0);
         $285 = tempRet0;
         $286 = ($281|0)>(-1);
         if ($286) {
          $282 = $284;$283 = $285;$x$419$i = $x$5$i;$y$320$i = $y$4$i;
         } else {
          $291 = $284;$292 = $285;$x$4$lcssa$i = $x$5$i;$y$3$lcssa$i = $y$4$i;
          break;
         }
        }
       } else {
        $291 = $249;$292 = $250;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
       }
       $287 = ($emin$0$ph|0)<(0);
       $288 = $287 << 31 >> 31;
       $289 = (_i64Subtract(32,0,($emin$0$ph|0),($288|0))|0);
       $290 = tempRet0;
       $293 = (_i64Add(($291|0),($292|0),($289|0),($290|0))|0);
       $294 = tempRet0;
       $295 = (0)>($294|0);
       $296 = ($bits$0$ph>>>0)>($293>>>0);
       $297 = (0)==($294|0);
       $298 = $297 & $296;
       $299 = $295 | $298;
       if ($299) {
        $300 = ($293|0)<(0);
        if ($300) {
         $$0710$i = 0;
         label = 124;
        } else {
         $$07$i = $293;
         label = 122;
        }
       } else {
        $$07$i = $bits$0$ph;
        label = 122;
       }
       do {
        if ((label|0) == 122) {
         $301 = ($$07$i|0)<(53);
         if ($301) {
          $$0710$i = $$07$i;
          label = 124;
          break;
         }
         $$pre41$i = (+($sign$0|0));
         $$0711$i = $$07$i;$$pre$phi42$iZ2D = $$pre41$i;$bias$0$i = 0.0;
        }
       } while(0);
       if ((label|0) == 124) {
        $302 = (84 - ($$0710$i))|0;
        $303 = (+_scalbn(1.0,$302));
        $304 = (+($sign$0|0));
        $305 = (+_copysignl($303,$304));
        $$0711$i = $$0710$i;$$pre$phi42$iZ2D = $304;$bias$0$i = $305;
       }
       $306 = ($$0711$i|0)<(32);
       $307 = $y$3$lcssa$i != 0.0;
       $or$cond4$i = $307 & $306;
       $308 = $x$4$lcssa$i & 1;
       $309 = ($308|0)==(0);
       $or$cond9$i = $309 & $or$cond4$i;
       $310 = $or$cond9$i&1;
       $x$6$i = (($310) + ($x$4$lcssa$i))|0;
       $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
       $311 = (+($x$6$i>>>0));
       $312 = $$pre$phi42$iZ2D * $311;
       $313 = $bias$0$i + $312;
       $314 = $$pre$phi42$iZ2D * $y$5$i;
       $315 = $314 + $313;
       $316 = $315 - $bias$0$i;
       $317 = $316 != 0.0;
       if (!($317)) {
        $318 = (___errno_location()|0);
        HEAP32[$318>>2] = 34;
       }
       $319 = (+_scalbnl($316,$291));
       $$0 = $319;
       STACKTOP = sp;return (+$$0);
      } else {
       $c$6 = $c$1$lcssa;
      }
     } while(0);
     $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
     $324 = (0 - ($sum$i))|0;
     $$09$i = $c$6;$gotdig$0$i12 = 0;
     while(1) {
      if ((($$09$i|0) == 46)) {
       $gotdig$0$i12$lcssa331 = $gotdig$0$i12;
       label = 135;
       break;
      } else if (!((($$09$i|0) == 48))) {
       $$2$i = $$09$i;$727 = 0;$728 = 0;$gotdig$2$i13 = $gotdig$0$i12;$gotrad$0$i14 = 0;
       break;
      }
      $325 = HEAP32[$0>>2]|0;
      $326 = HEAP32[$1>>2]|0;
      $327 = ($325>>>0)<($326>>>0);
      if ($327) {
       $328 = ((($325)) + 1|0);
       HEAP32[$0>>2] = $328;
       $329 = HEAP8[$325>>0]|0;
       $330 = $329&255;
       $$09$i = $330;$gotdig$0$i12 = 1;
       continue;
      } else {
       $331 = (___shgetc($f)|0);
       $$09$i = $331;$gotdig$0$i12 = 1;
       continue;
      }
     }
     if ((label|0) == 135) {
      $332 = HEAP32[$0>>2]|0;
      $333 = HEAP32[$1>>2]|0;
      $334 = ($332>>>0)<($333>>>0);
      if ($334) {
       $335 = ((($332)) + 1|0);
       HEAP32[$0>>2] = $335;
       $336 = HEAP8[$332>>0]|0;
       $337 = $336&255;
       $$1$ph$i = $337;
      } else {
       $338 = (___shgetc($f)|0);
       $$1$ph$i = $338;
      }
      $339 = ($$1$ph$i|0)==(48);
      if ($339) {
       $340 = 0;$341 = 0;
       while(1) {
        $342 = (_i64Add(($340|0),($341|0),-1,-1)|0);
        $343 = tempRet0;
        $344 = HEAP32[$0>>2]|0;
        $345 = HEAP32[$1>>2]|0;
        $346 = ($344>>>0)<($345>>>0);
        if ($346) {
         $347 = ((($344)) + 1|0);
         HEAP32[$0>>2] = $347;
         $348 = HEAP8[$344>>0]|0;
         $349 = $348&255;
         $$1$be$i = $349;
        } else {
         $350 = (___shgetc($f)|0);
         $$1$be$i = $350;
        }
        $351 = ($$1$be$i|0)==(48);
        if ($351) {
         $340 = $342;$341 = $343;
        } else {
         $$2$i = $$1$be$i;$727 = $342;$728 = $343;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
         break;
        }
       }
      } else {
       $$2$i = $$1$ph$i;$727 = 0;$728 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa331;$gotrad$0$i14 = 1;
      }
     }
     HEAP32[$x$i>>2] = 0;
     $352 = (($$2$i) + -48)|0;
     $353 = ($352>>>0)<(10);
     $354 = ($$2$i|0)==(46);
     $355 = $354 | $353;
     L214: do {
      if ($355) {
       $356 = ((($x$i)) + 496|0);
       $$3121$i = $$2$i;$359 = 0;$360 = 0;$729 = $354;$730 = $352;$731 = $727;$732 = $728;$gotdig$3117$i = $gotdig$2$i13;$gotrad$1118$i = $gotrad$0$i14;$j$0120$i = 0;$k$0119$i = 0;$lnz$0116$i = 0;
       L216: while(1) {
        do {
         if ($729) {
          $cond$i = ($gotrad$1118$i|0)==(0);
          if ($cond$i) {
           $733 = $359;$734 = $360;$735 = $359;$736 = $360;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = 1;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
          } else {
           $737 = $731;$738 = $732;$739 = $359;$740 = $360;$gotdig$3117$i$lcssa = $gotdig$3117$i;$j$0120$i$lcssa = $j$0120$i;$k$0119$i$lcssa = $k$0119$i;$lnz$0116$i$lcssa = $lnz$0116$i;
           break L216;
          }
         } else {
          $358 = ($k$0119$i|0)<(125);
          $361 = (_i64Add(($359|0),($360|0),1,0)|0);
          $362 = tempRet0;
          $363 = ($$3121$i|0)!=(48);
          if (!($358)) {
           if (!($363)) {
            $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
            break;
           }
           $373 = HEAP32[$356>>2]|0;
           $374 = $373 | 1;
           HEAP32[$356>>2] = $374;
           $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = $gotdig$3117$i;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $j$0120$i;$k$2$i = $k$0119$i;$lnz$2$i = $lnz$0116$i;
           break;
          }
          $$lnz$0$i = $363 ? $361 : $lnz$0116$i;
          $364 = ($j$0120$i|0)==(0);
          $365 = (($x$i) + ($k$0119$i<<2)|0);
          if ($364) {
           $storemerge$i = $730;
          } else {
           $366 = HEAP32[$365>>2]|0;
           $367 = ($366*10)|0;
           $368 = (($$3121$i) + -48)|0;
           $369 = (($368) + ($367))|0;
           $storemerge$i = $369;
          }
          HEAP32[$365>>2] = $storemerge$i;
          $370 = (($j$0120$i) + 1)|0;
          $371 = ($370|0)==(9);
          $372 = $371&1;
          $$k$0$i = (($372) + ($k$0119$i))|0;
          $$11$i = $371 ? 0 : $370;
          $733 = $731;$734 = $732;$735 = $361;$736 = $362;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1118$i;$j$2$i = $$11$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
         }
        } while(0);
        $375 = HEAP32[$0>>2]|0;
        $376 = HEAP32[$1>>2]|0;
        $377 = ($375>>>0)<($376>>>0);
        if ($377) {
         $378 = ((($375)) + 1|0);
         HEAP32[$0>>2] = $378;
         $379 = HEAP8[$375>>0]|0;
         $380 = $379&255;
         $$3$be$i = $380;
        } else {
         $381 = (___shgetc($f)|0);
         $$3$be$i = $381;
        }
        $382 = (($$3$be$i) + -48)|0;
        $383 = ($382>>>0)<(10);
        $384 = ($$3$be$i|0)==(46);
        $385 = $384 | $383;
        if ($385) {
         $$3121$i = $$3$be$i;$359 = $735;$360 = $736;$729 = $384;$730 = $382;$731 = $733;$732 = $734;$gotdig$3117$i = $gotdig$4$i;$gotrad$1118$i = $gotrad$2$i;$j$0120$i = $j$2$i;$k$0119$i = $k$2$i;$lnz$0116$i = $lnz$2$i;
        } else {
         $$3$lcssa$i = $$3$be$i;$387 = $733;$388 = $735;$390 = $734;$391 = $736;$gotdig$3$lcssa$i = $gotdig$4$i;$gotrad$1$lcssa$i = $gotrad$2$i;$j$0$lcssa$i = $j$2$i;$k$0$lcssa$i = $k$2$i;$lnz$0$lcssa$i = $lnz$2$i;
         label = 158;
         break L214;
        }
       }
       $357 = ($gotdig$3117$i$lcssa|0)!=(0);
       $741 = $739;$742 = $740;$743 = $737;$744 = $738;$745 = $357;$j$069$i = $j$0120$i$lcssa;$k$065$i = $k$0119$i$lcssa;$lnz$059$i = $lnz$0116$i$lcssa;
       label = 166;
      } else {
       $$3$lcssa$i = $$2$i;$387 = $727;$388 = 0;$390 = $728;$391 = 0;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
       label = 158;
      }
     } while(0);
     do {
      if ((label|0) == 158) {
       $386 = ($gotrad$1$lcssa$i|0)==(0);
       $389 = $386 ? $388 : $387;
       $392 = $386 ? $391 : $390;
       $393 = ($gotdig$3$lcssa$i|0)!=(0);
       $394 = $$3$lcssa$i | 32;
       $395 = ($394|0)==(101);
       $or$cond13$i = $395 & $393;
       if (!($or$cond13$i)) {
        $410 = ($$3$lcssa$i|0)>(-1);
        if ($410) {
         $741 = $388;$742 = $391;$743 = $389;$744 = $392;$745 = $393;$j$069$i = $j$0$lcssa$i;$k$065$i = $k$0$lcssa$i;$lnz$059$i = $lnz$0$lcssa$i;
         label = 166;
         break;
        } else {
         $746 = $388;$747 = $391;$748 = $393;$749 = $389;$750 = $392;$j$068$i = $j$0$lcssa$i;$k$064$i = $k$0$lcssa$i;$lnz$058$i = $lnz$0$lcssa$i;
         label = 168;
         break;
        }
       }
       $396 = (_scanexp($f,$pok)|0);
       $397 = tempRet0;
       $398 = ($396|0)==(0);
       $399 = ($397|0)==(-2147483648);
       $400 = $398 & $399;
       if ($400) {
        $401 = ($pok|0)==(0);
        if ($401) {
         ___shlim($f,0);
         $$0$i25 = 0.0;
         break;
        }
        $402 = HEAP32[$1>>2]|0;
        $403 = ($402|0)==(0|0);
        if ($403) {
         $406 = 0;$407 = 0;
        } else {
         $404 = HEAP32[$0>>2]|0;
         $405 = ((($404)) + -1|0);
         HEAP32[$0>>2] = $405;
         $406 = 0;$407 = 0;
        }
       } else {
        $406 = $396;$407 = $397;
       }
       $408 = (_i64Add(($406|0),($407|0),($389|0),($392|0))|0);
       $409 = tempRet0;
       $420 = $408;$422 = $388;$423 = $409;$425 = $391;$j$067$i = $j$0$lcssa$i;$k$063$i = $k$0$lcssa$i;$lnz$057$i = $lnz$0$lcssa$i;
       label = 170;
      }
     } while(0);
     if ((label|0) == 166) {
      $411 = HEAP32[$1>>2]|0;
      $412 = ($411|0)==(0|0);
      if ($412) {
       $746 = $741;$747 = $742;$748 = $745;$749 = $743;$750 = $744;$j$068$i = $j$069$i;$k$064$i = $k$065$i;$lnz$058$i = $lnz$059$i;
       label = 168;
      } else {
       $413 = HEAP32[$0>>2]|0;
       $414 = ((($413)) + -1|0);
       HEAP32[$0>>2] = $414;
       if ($745) {
        $420 = $743;$422 = $741;$423 = $744;$425 = $742;$j$067$i = $j$069$i;$k$063$i = $k$065$i;$lnz$057$i = $lnz$059$i;
        label = 170;
       } else {
        label = 169;
       }
      }
     }
     if ((label|0) == 168) {
      if ($748) {
       $420 = $749;$422 = $746;$423 = $750;$425 = $747;$j$067$i = $j$068$i;$k$063$i = $k$064$i;$lnz$057$i = $lnz$058$i;
       label = 170;
      } else {
       label = 169;
      }
     }
     do {
      if ((label|0) == 169) {
       $415 = (___errno_location()|0);
       HEAP32[$415>>2] = 22;
       ___shlim($f,0);
       $$0$i25 = 0.0;
      }
      else if ((label|0) == 170) {
       $416 = HEAP32[$x$i>>2]|0;
       $417 = ($416|0)==(0);
       if ($417) {
        $418 = (+($sign$0|0));
        $419 = $418 * 0.0;
        $$0$i25 = $419;
        break;
       }
       $421 = ($420|0)==($422|0);
       $424 = ($423|0)==($425|0);
       $426 = $421 & $424;
       $427 = ($425|0)<(0);
       $428 = ($422>>>0)<(10);
       $429 = ($425|0)==(0);
       $430 = $429 & $428;
       $431 = $427 | $430;
       $or$cond$i16 = $431 & $426;
       if ($or$cond$i16) {
        $432 = ($bits$0$ph>>>0)>(30);
        $433 = $416 >>> $bits$0$ph;
        $434 = ($433|0)==(0);
        $or$cond15$i = $432 | $434;
        if ($or$cond15$i) {
         $435 = (+($sign$0|0));
         $436 = (+($416>>>0));
         $437 = $435 * $436;
         $$0$i25 = $437;
         break;
        }
       }
       $438 = (($emin$0$ph|0) / -2)&-1;
       $439 = ($438|0)<(0);
       $440 = $439 << 31 >> 31;
       $441 = ($423|0)>($440|0);
       $442 = ($420>>>0)>($438>>>0);
       $443 = ($423|0)==($440|0);
       $444 = $443 & $442;
       $445 = $441 | $444;
       if ($445) {
        $446 = (___errno_location()|0);
        HEAP32[$446>>2] = 34;
        $447 = (+($sign$0|0));
        $448 = $447 * 1.7976931348623157E+308;
        $449 = $448 * 1.7976931348623157E+308;
        $$0$i25 = $449;
        break;
       }
       $450 = (($emin$0$ph) + -106)|0;
       $451 = ($450|0)<(0);
       $452 = $451 << 31 >> 31;
       $453 = ($423|0)<($452|0);
       $454 = ($420>>>0)<($450>>>0);
       $455 = ($423|0)==($452|0);
       $456 = $455 & $454;
       $457 = $453 | $456;
       if ($457) {
        $458 = (___errno_location()|0);
        HEAP32[$458>>2] = 34;
        $459 = (+($sign$0|0));
        $460 = $459 * 2.2250738585072014E-308;
        $461 = $460 * 2.2250738585072014E-308;
        $$0$i25 = $461;
        break;
       }
       $462 = ($j$067$i|0)==(0);
       if ($462) {
        $k$3$i = $k$063$i;
       } else {
        $463 = ($j$067$i|0)<(9);
        if ($463) {
         $464 = (($x$i) + ($k$063$i<<2)|0);
         $$promoted$i = HEAP32[$464>>2]|0;
         $466 = $$promoted$i;$j$3110$i = $j$067$i;
         while(1) {
          $465 = ($466*10)|0;
          $467 = (($j$3110$i) + 1)|0;
          $exitcond$i = ($467|0)==(9);
          if ($exitcond$i) {
           $$lcssa323 = $465;
           break;
          } else {
           $466 = $465;$j$3110$i = $467;
          }
         }
         HEAP32[$464>>2] = $$lcssa323;
        }
        $468 = (($k$063$i) + 1)|0;
        $k$3$i = $468;
       }
       $469 = ($lnz$057$i|0)<(9);
       if ($469) {
        $470 = ($lnz$057$i|0)<=($420|0);
        $471 = ($420|0)<(18);
        $or$cond3$i = $470 & $471;
        if ($or$cond3$i) {
         $472 = ($420|0)==(9);
         if ($472) {
          $473 = (+($sign$0|0));
          $474 = HEAP32[$x$i>>2]|0;
          $475 = (+($474>>>0));
          $476 = $473 * $475;
          $$0$i25 = $476;
          break;
         }
         $477 = ($420|0)<(9);
         if ($477) {
          $478 = (+($sign$0|0));
          $479 = HEAP32[$x$i>>2]|0;
          $480 = (+($479>>>0));
          $481 = $478 * $480;
          $482 = (8 - ($420))|0;
          $483 = (3912 + ($482<<2)|0);
          $484 = HEAP32[$483>>2]|0;
          $485 = (+($484|0));
          $486 = $481 / $485;
          $$0$i25 = $486;
          break;
         }
         $$neg32$i = (($bits$0$ph) + 27)|0;
         $487 = Math_imul($420, -3)|0;
         $488 = (($$neg32$i) + ($487))|0;
         $489 = ($488|0)>(30);
         $$pre$i17 = HEAP32[$x$i>>2]|0;
         $490 = $$pre$i17 >>> $488;
         $491 = ($490|0)==(0);
         $or$cond216$i = $489 | $491;
         if ($or$cond216$i) {
          $492 = (+($sign$0|0));
          $493 = (+($$pre$i17>>>0));
          $494 = $492 * $493;
          $495 = (($420) + -10)|0;
          $496 = (3912 + ($495<<2)|0);
          $497 = HEAP32[$496>>2]|0;
          $498 = (+($497|0));
          $499 = $494 * $498;
          $$0$i25 = $499;
          break;
         }
        }
       }
       $500 = (($420|0) % 9)&-1;
       $501 = ($500|0)==(0);
       if ($501) {
        $a$2$ph38$i = 0;$e2$0$ph$i = 0;$rp$2$ph36$i = $420;$z$1$ph37$i = $k$3$i;
       } else {
        $502 = ($420|0)>(-1);
        $503 = (($500) + 9)|0;
        $504 = $502 ? $500 : $503;
        $505 = (8 - ($504))|0;
        $506 = (3912 + ($505<<2)|0);
        $507 = HEAP32[$506>>2]|0;
        $508 = ($k$3$i|0)==(0);
        if ($508) {
         $a$0$lcssa177$i = 0;$rp$0$lcssa178$i = $420;$z$0$i = 0;
        } else {
         $509 = (1000000000 / ($507|0))&-1;
         $a$0101$i = 0;$carry$0103$i = 0;$k$4102$i = 0;$rp$0100$i = $420;
         while(1) {
          $510 = (($x$i) + ($k$4102$i<<2)|0);
          $511 = HEAP32[$510>>2]|0;
          $512 = (($511>>>0) % ($507>>>0))&-1;
          $513 = (($511>>>0) / ($507>>>0))&-1;
          $514 = (($513) + ($carry$0103$i))|0;
          HEAP32[$510>>2] = $514;
          $515 = Math_imul($512, $509)|0;
          $516 = ($k$4102$i|0)==($a$0101$i|0);
          $517 = ($514|0)==(0);
          $or$cond16$i = $516 & $517;
          $518 = (($k$4102$i) + 1)|0;
          $519 = $518 & 127;
          $520 = (($rp$0100$i) + -9)|0;
          $rp$1$i18 = $or$cond16$i ? $520 : $rp$0100$i;
          $a$1$i = $or$cond16$i ? $519 : $a$0101$i;
          $521 = ($518|0)==($k$3$i|0);
          if ($521) {
           $$lcssa322 = $515;$a$1$i$lcssa = $a$1$i;$rp$1$i18$lcssa = $rp$1$i18;
           break;
          } else {
           $a$0101$i = $a$1$i;$carry$0103$i = $515;$k$4102$i = $518;$rp$0100$i = $rp$1$i18;
          }
         }
         $522 = ($$lcssa322|0)==(0);
         if ($522) {
          $a$0$lcssa177$i = $a$1$i$lcssa;$rp$0$lcssa178$i = $rp$1$i18$lcssa;$z$0$i = $k$3$i;
         } else {
          $523 = (($k$3$i) + 1)|0;
          $524 = (($x$i) + ($k$3$i<<2)|0);
          HEAP32[$524>>2] = $$lcssa322;
          $a$0$lcssa177$i = $a$1$i$lcssa;$rp$0$lcssa178$i = $rp$1$i18$lcssa;$z$0$i = $523;
         }
        }
        $525 = (9 - ($504))|0;
        $526 = (($525) + ($rp$0$lcssa178$i))|0;
        $a$2$ph38$i = $a$0$lcssa177$i;$e2$0$ph$i = 0;$rp$2$ph36$i = $526;$z$1$ph37$i = $z$0$i;
       }
       L296: while(1) {
        $527 = ($rp$2$ph36$i|0)<(18);
        $528 = (($x$i) + ($a$2$ph38$i<<2)|0);
        if ($527) {
         $e2$0$us$i = $e2$0$ph$i;$z$1$us$i = $z$1$ph37$i;
         while(1) {
          $530 = (($z$1$us$i) + 127)|0;
          $carry1$0$us$i = 0;$k$5$in$us$i = $530;$z$2$us$i = $z$1$us$i;
          while(1) {
           $k$5$us$i = $k$5$in$us$i & 127;
           $531 = (($x$i) + ($k$5$us$i<<2)|0);
           $532 = HEAP32[$531>>2]|0;
           $533 = (_bitshift64Shl(($532|0),0,29)|0);
           $534 = tempRet0;
           $535 = (_i64Add(($533|0),($534|0),($carry1$0$us$i|0),0)|0);
           $536 = tempRet0;
           $537 = ($536>>>0)>(0);
           $538 = ($535>>>0)>(1000000000);
           $539 = ($536|0)==(0);
           $540 = $539 & $538;
           $541 = $537 | $540;
           if ($541) {
            $542 = (___udivdi3(($535|0),($536|0),1000000000,0)|0);
            $543 = tempRet0;
            $544 = (___uremdi3(($535|0),($536|0),1000000000,0)|0);
            $545 = tempRet0;
            $$sink$off0$us$i = $544;$carry1$1$us$i = $542;
           } else {
            $$sink$off0$us$i = $535;$carry1$1$us$i = 0;
           }
           HEAP32[$531>>2] = $$sink$off0$us$i;
           $546 = (($z$2$us$i) + 127)|0;
           $547 = $546 & 127;
           $548 = ($k$5$us$i|0)!=($547|0);
           $549 = ($k$5$us$i|0)==($a$2$ph38$i|0);
           $or$cond17$us$i = $548 | $549;
           $550 = ($$sink$off0$us$i|0)==(0);
           $k$5$z$2$us$i = $550 ? $k$5$us$i : $z$2$us$i;
           $z$3$us$i = $or$cond17$us$i ? $z$2$us$i : $k$5$z$2$us$i;
           $551 = (($k$5$us$i) + -1)|0;
           if ($549) {
            $carry1$1$us$i$lcssa = $carry1$1$us$i;$z$3$us$i$lcssa = $z$3$us$i;
            break;
           } else {
            $carry1$0$us$i = $carry1$1$us$i;$k$5$in$us$i = $551;$z$2$us$i = $z$3$us$i;
           }
          }
          $552 = (($e2$0$us$i) + -29)|0;
          $553 = ($carry1$1$us$i$lcssa|0)==(0);
          if ($553) {
           $e2$0$us$i = $552;$z$1$us$i = $z$3$us$i$lcssa;
          } else {
           $$lcssa50$i = $552;$carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa;$z$3$lcssa$lcssa$i = $z$3$us$i$lcssa;
           break;
          }
         }
        } else {
         $529 = ($rp$2$ph36$i|0)==(18);
         if ($529) {
          $e2$0$us84$i = $e2$0$ph$i;$z$1$us85$i = $z$1$ph37$i;
         } else {
          $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$ph$i;$rp$3$ph34$i = $rp$2$ph36$i;$z$5$ph$i = $z$1$ph37$i;
          break;
         }
         while(1) {
          $554 = HEAP32[$528>>2]|0;
          $555 = ($554>>>0)<(9007199);
          if (!($555)) {
           $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$us84$i;$rp$3$ph34$i = 18;$z$5$ph$i = $z$1$us85$i;
           break L296;
          }
          $556 = (($z$1$us85$i) + 127)|0;
          $carry1$0$us89$i = 0;$k$5$in$us88$i = $556;$z$2$us87$i = $z$1$us85$i;
          while(1) {
           $k$5$us90$i = $k$5$in$us88$i & 127;
           $557 = (($x$i) + ($k$5$us90$i<<2)|0);
           $558 = HEAP32[$557>>2]|0;
           $559 = (_bitshift64Shl(($558|0),0,29)|0);
           $560 = tempRet0;
           $561 = (_i64Add(($559|0),($560|0),($carry1$0$us89$i|0),0)|0);
           $562 = tempRet0;
           $563 = ($562>>>0)>(0);
           $564 = ($561>>>0)>(1000000000);
           $565 = ($562|0)==(0);
           $566 = $565 & $564;
           $567 = $563 | $566;
           if ($567) {
            $568 = (___udivdi3(($561|0),($562|0),1000000000,0)|0);
            $569 = tempRet0;
            $570 = (___uremdi3(($561|0),($562|0),1000000000,0)|0);
            $571 = tempRet0;
            $$sink$off0$us93$i = $570;$carry1$1$us94$i = $568;
           } else {
            $$sink$off0$us93$i = $561;$carry1$1$us94$i = 0;
           }
           HEAP32[$557>>2] = $$sink$off0$us93$i;
           $572 = (($z$2$us87$i) + 127)|0;
           $573 = $572 & 127;
           $574 = ($k$5$us90$i|0)!=($573|0);
           $575 = ($k$5$us90$i|0)==($a$2$ph38$i|0);
           $or$cond17$us95$i = $574 | $575;
           $576 = ($$sink$off0$us93$i|0)==(0);
           $k$5$z$2$us96$i = $576 ? $k$5$us90$i : $z$2$us87$i;
           $z$3$us97$i = $or$cond17$us95$i ? $z$2$us87$i : $k$5$z$2$us96$i;
           $577 = (($k$5$us90$i) + -1)|0;
           if ($575) {
            $carry1$1$us94$i$lcssa = $carry1$1$us94$i;$z$3$us97$i$lcssa = $z$3$us97$i;
            break;
           } else {
            $carry1$0$us89$i = $carry1$1$us94$i;$k$5$in$us88$i = $577;$z$2$us87$i = $z$3$us97$i;
           }
          }
          $578 = (($e2$0$us84$i) + -29)|0;
          $579 = ($carry1$1$us94$i$lcssa|0)==(0);
          if ($579) {
           $e2$0$us84$i = $578;$z$1$us85$i = $z$3$us97$i$lcssa;
          } else {
           $$lcssa50$i = $578;$carry1$1$lcssa$lcssa$i = $carry1$1$us94$i$lcssa;$z$3$lcssa$lcssa$i = $z$3$us97$i$lcssa;
           break;
          }
         }
        }
        $580 = (($rp$2$ph36$i) + 9)|0;
        $581 = (($a$2$ph38$i) + 127)|0;
        $582 = $581 & 127;
        $583 = ($582|0)==($z$3$lcssa$lcssa$i|0);
        if ($583) {
         $584 = (($z$3$lcssa$lcssa$i) + 127)|0;
         $585 = $584 & 127;
         $586 = (($x$i) + ($585<<2)|0);
         $587 = HEAP32[$586>>2]|0;
         $588 = (($z$3$lcssa$lcssa$i) + 126)|0;
         $589 = $588 & 127;
         $590 = (($x$i) + ($589<<2)|0);
         $591 = HEAP32[$590>>2]|0;
         $592 = $591 | $587;
         HEAP32[$590>>2] = $592;
         $z$4$i = $585;
        } else {
         $z$4$i = $z$3$lcssa$lcssa$i;
        }
        $593 = (($x$i) + ($582<<2)|0);
        HEAP32[$593>>2] = $carry1$1$lcssa$lcssa$i;
        $a$2$ph38$i = $582;$e2$0$ph$i = $$lcssa50$i;$rp$2$ph36$i = $580;$z$1$ph37$i = $z$4$i;
       }
       L321: while(1) {
        $624 = (($z$5$ph$i) + 1)|0;
        $621 = $624 & 127;
        $625 = (($z$5$ph$i) + 127)|0;
        $626 = $625 & 127;
        $627 = (($x$i) + ($626<<2)|0);
        $a$3$ph183$i = $a$3$ph$i;$e2$1$ph182$i = $e2$1$ph$i;$rp$3$ph$i = $rp$3$ph34$i;
        while(1) {
         $628 = ($rp$3$ph$i|0)==(18);
         $629 = ($rp$3$ph$i|0)>(27);
         $$18$i = $629 ? 9 : 1;
         $$not$i = $628 ^ 1;
         $a$3$i = $a$3$ph183$i;$e2$1$i = $e2$1$ph182$i;
         while(1) {
          $594 = $a$3$i & 127;
          $595 = ($594|0)==($z$5$ph$i|0);
          do {
           if ($595) {
            label = 220;
           } else {
            $596 = (($x$i) + ($594<<2)|0);
            $597 = HEAP32[$596>>2]|0;
            $598 = ($597>>>0)<(9007199);
            if ($598) {
             label = 220;
             break;
            }
            $599 = ($597>>>0)>(9007199);
            if ($599) {
             break;
            }
            $600 = (($a$3$i) + 1)|0;
            $601 = $600 & 127;
            $602 = ($601|0)==($z$5$ph$i|0);
            if ($602) {
             label = 220;
             break;
            }
            $708 = (($x$i) + ($601<<2)|0);
            $709 = HEAP32[$708>>2]|0;
            $710 = ($709>>>0)<(254740991);
            if ($710) {
             label = 220;
             break;
            }
            $711 = ($709>>>0)>(254740991);
            $brmerge$i26 = $711 | $$not$i;
            if (!($brmerge$i26)) {
             $635 = $594;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $z$5$ph$i;
             break L321;
            }
           }
          } while(0);
          if ((label|0) == 220) {
           label = 0;
           if ($628) {
            label = 221;
            break L321;
           }
          }
          $603 = (($e2$1$i) + ($$18$i))|0;
          $604 = ($a$3$i|0)==($z$5$ph$i|0);
          if ($604) {
           $a$3$i = $z$5$ph$i;$e2$1$i = $603;
          } else {
           $$lcssa308 = $603;$a$3$i$lcssa300 = $a$3$i;
           break;
          }
         }
         $605 = 1 << $$18$i;
         $606 = (($605) + -1)|0;
         $607 = 1000000000 >>> $$18$i;
         $a$478$i = $a$3$i$lcssa300;$carry3$081$i = 0;$k$679$i = $a$3$i$lcssa300;$rp$477$i = $rp$3$ph$i;
         while(1) {
          $608 = (($x$i) + ($k$679$i<<2)|0);
          $609 = HEAP32[$608>>2]|0;
          $610 = $609 & $606;
          $611 = $609 >>> $$18$i;
          $612 = (($611) + ($carry3$081$i))|0;
          HEAP32[$608>>2] = $612;
          $613 = Math_imul($610, $607)|0;
          $614 = ($k$679$i|0)==($a$478$i|0);
          $615 = ($612|0)==(0);
          $or$cond19$i = $614 & $615;
          $616 = (($k$679$i) + 1)|0;
          $617 = $616 & 127;
          $618 = (($rp$477$i) + -9)|0;
          $rp$5$i = $or$cond19$i ? $618 : $rp$477$i;
          $a$5$i = $or$cond19$i ? $617 : $a$478$i;
          $619 = ($617|0)==($z$5$ph$i|0);
          if ($619) {
           $$lcssa309 = $613;$a$5$i$lcssa = $a$5$i;$rp$5$i$lcssa = $rp$5$i;
           break;
          } else {
           $a$478$i = $a$5$i;$carry3$081$i = $613;$k$679$i = $617;$rp$477$i = $rp$5$i;
          }
         }
         $620 = ($$lcssa309|0)==(0);
         if ($620) {
          $a$3$ph183$i = $a$5$i$lcssa;$e2$1$ph182$i = $$lcssa308;$rp$3$ph$i = $rp$5$i$lcssa;
          continue;
         }
         $622 = ($621|0)==($a$5$i$lcssa|0);
         if (!($622)) {
          $$lcssa308$lcssa = $$lcssa308;$$lcssa309$lcssa = $$lcssa309;$a$5$i$lcssa$lcssa = $a$5$i$lcssa;$rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
          break;
         }
         $630 = HEAP32[$627>>2]|0;
         $631 = $630 | 1;
         HEAP32[$627>>2] = $631;
         $a$3$ph183$i = $a$5$i$lcssa;$e2$1$ph182$i = $$lcssa308;$rp$3$ph$i = $rp$5$i$lcssa;
        }
        $623 = (($x$i) + ($z$5$ph$i<<2)|0);
        HEAP32[$623>>2] = $$lcssa309$lcssa;
        $a$3$ph$i = $a$5$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa308$lcssa;$rp$3$ph34$i = $rp$5$i$lcssa$lcssa;$z$5$ph$i = $621;
       }
       if ((label|0) == 221) {
        if ($595) {
         $632 = (($621) + -1)|0;
         $633 = (($x$i) + ($632<<2)|0);
         HEAP32[$633>>2] = 0;
         $635 = $z$5$ph$i;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $621;
        } else {
         $635 = $594;$a$3$i301 = $a$3$i;$e2$1$i298 = $e2$1$i;$z$7$i = $z$5$ph$i;
        }
       }
       $634 = (($x$i) + ($635<<2)|0);
       $636 = HEAP32[$634>>2]|0;
       $637 = (+($636>>>0));
       $638 = (($a$3$i301) + 1)|0;
       $639 = $638 & 127;
       $640 = ($639|0)==($z$7$i|0);
       if ($640) {
        $697 = (($a$3$i301) + 2)|0;
        $698 = $697 & 127;
        $699 = (($698) + -1)|0;
        $700 = (($x$i) + ($699<<2)|0);
        HEAP32[$700>>2] = 0;
        $z$7$1$i = $698;
       } else {
        $z$7$1$i = $z$7$i;
       }
       $701 = $637 * 1.0E+9;
       $702 = (($x$i) + ($639<<2)|0);
       $703 = HEAP32[$702>>2]|0;
       $704 = (+($703>>>0));
       $705 = $701 + $704;
       $661 = (+($sign$0|0));
       $643 = $661 * $705;
       $681 = (($e2$1$i298) + 53)|0;
       $687 = (($681) - ($emin$0$ph))|0;
       $688 = ($687|0)<($bits$0$ph|0);
       $706 = ($687|0)<(0);
       $$$i = $706 ? 0 : $687;
       $denormal$0$i = $688&1;
       $$010$i = $688 ? $$$i : $bits$0$ph;
       $707 = ($$010$i|0)<(53);
       if ($707) {
        $641 = (105 - ($$010$i))|0;
        $642 = (+_scalbn(1.0,$641));
        $644 = (+_copysignl($642,$643));
        $645 = (53 - ($$010$i))|0;
        $646 = (+_scalbn(1.0,$645));
        $647 = (+_fmodl($643,$646));
        $648 = $643 - $647;
        $649 = $644 + $648;
        $bias$0$i23 = $644;$frac$0$i = $647;$y$1$i22 = $649;
       } else {
        $bias$0$i23 = 0.0;$frac$0$i = 0.0;$y$1$i22 = $643;
       }
       $650 = (($a$3$i301) + 2)|0;
       $651 = $650 & 127;
       $652 = ($651|0)==($z$7$1$i|0);
       do {
        if ($652) {
         $frac$2$i = $frac$0$i;
        } else {
         $653 = (($x$i) + ($651<<2)|0);
         $654 = HEAP32[$653>>2]|0;
         $655 = ($654>>>0)<(500000000);
         do {
          if ($655) {
           $656 = ($654|0)==(0);
           if ($656) {
            $657 = (($a$3$i301) + 3)|0;
            $658 = $657 & 127;
            $659 = ($658|0)==($z$7$1$i|0);
            if ($659) {
             $frac$1$i = $frac$0$i;
             break;
            }
           }
           $660 = $661 * 0.25;
           $662 = $660 + $frac$0$i;
           $frac$1$i = $662;
          } else {
           $663 = ($654>>>0)>(500000000);
           if ($663) {
            $664 = $661 * 0.75;
            $665 = $664 + $frac$0$i;
            $frac$1$i = $665;
            break;
           }
           $666 = (($a$3$i301) + 3)|0;
           $667 = $666 & 127;
           $668 = ($667|0)==($z$7$1$i|0);
           if ($668) {
            $669 = $661 * 0.5;
            $670 = $669 + $frac$0$i;
            $frac$1$i = $670;
            break;
           } else {
            $671 = $661 * 0.75;
            $672 = $671 + $frac$0$i;
            $frac$1$i = $672;
            break;
           }
          }
         } while(0);
         $673 = (53 - ($$010$i))|0;
         $674 = ($673|0)>(1);
         if (!($674)) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $675 = (+_fmodl($frac$1$i,1.0));
         $676 = $675 != 0.0;
         if ($676) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $677 = $frac$1$i + 1.0;
         $frac$2$i = $677;
        }
       } while(0);
       $678 = $y$1$i22 + $frac$2$i;
       $679 = $678 - $bias$0$i23;
       $680 = $681 & 2147483647;
       $682 = (-2 - ($sum$i))|0;
       $683 = ($680|0)>($682|0);
       do {
        if ($683) {
         $684 = (+Math_abs((+$679)));
         $685 = !($684 >= 9007199254740992.0);
         if ($685) {
          $denormal$2$i = $denormal$0$i;$e2$2$i = $e2$1$i298;$y$2$i24 = $679;
         } else {
          $686 = ($$010$i|0)==($687|0);
          $or$cond20$i = $688 & $686;
          $denormal$1$i = $or$cond20$i ? 0 : $denormal$0$i;
          $689 = $679 * 0.5;
          $690 = (($e2$1$i298) + 1)|0;
          $denormal$2$i = $denormal$1$i;$e2$2$i = $690;$y$2$i24 = $689;
         }
         $691 = (($e2$2$i) + 50)|0;
         $692 = ($691|0)>($324|0);
         if (!($692)) {
          $693 = ($denormal$2$i|0)!=(0);
          $694 = $frac$2$i != 0.0;
          $or$cond8$i = $694 & $693;
          if (!($or$cond8$i)) {
           $e2$3$i = $e2$2$i;$y$3$i = $y$2$i24;
           break;
          }
         }
         $695 = (___errno_location()|0);
         HEAP32[$695>>2] = 34;
         $e2$3$i = $e2$2$i;$y$3$i = $y$2$i24;
        } else {
         $e2$3$i = $e2$1$i298;$y$3$i = $679;
        }
       } while(0);
       $696 = (+_scalbnl($y$3$i,$e2$3$i));
       $$0$i25 = $696;
      }
     } while(0);
     $$0 = $$0$i25;
     STACKTOP = sp;return (+$$0);
    }
   } while(0);
   $103 = HEAP32[$1>>2]|0;
   $104 = ($103|0)==(0|0);
   if (!($104)) {
    $105 = HEAP32[$0>>2]|0;
    $106 = ((($105)) + -1|0);
    HEAP32[$0>>2] = $106;
   }
   $107 = (___errno_location()|0);
   HEAP32[$107>>2] = 22;
   ___shlim($f,0);
   $$0 = 0.0;
   STACKTOP = sp;return (+$$0);
  }
 } while(0);
 if ((label|0) == 23) {
  $41 = HEAP32[$1>>2]|0;
  $42 = ($41|0)==(0|0);
  if (!($42)) {
   $43 = HEAP32[$0>>2]|0;
   $44 = ((($43)) + -1|0);
   HEAP32[$0>>2] = $44;
  }
  $notlhs = ($pok|0)==(0);
  $notrhs = ($i$0$lcssa>>>0)<(4);
  $or$cond9$not = $notrhs | $notlhs;
  $brmerge = $or$cond9$not | $42;
  if (!($brmerge)) {
   $$promoted = HEAP32[$0>>2]|0;
   $46 = $$promoted;$i$1 = $i$0$lcssa;
   while(1) {
    $45 = ((($46)) + -1|0);
    $47 = (($i$1) + -1)|0;
    $$old8 = ($47>>>0)>(3);
    if ($$old8) {
     $46 = $45;$i$1 = $47;
    } else {
     $$lcssa = $45;
     break;
    }
   }
   HEAP32[$0>>2] = $$lcssa;
  }
 }
 $48 = (+($sign$0|0));
 $49 = $48 * inf;
 $50 = $49;
 $$0 = $50;
 STACKTOP = sp;return (+$$0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = ((($f)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($f)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ((($f)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if ($or$cond) {
  $11 = (($4) + ($lim)|0);
  $12 = ((($f)) + 100|0);
  HEAP32[$12>>2] = $11;
  return;
 } else {
  $13 = ((($f)) + 100|0);
  HEAP32[$13>>2] = $5;
  return;
 }
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert3 = 0, $$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = ((($f)) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = ((($f)) + 8|0);
   if ($10) {
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $11 = $$pre;
    $26 = $$pre;$41 = $11;
    label = 9;
   } else {
    $12 = HEAP32[$$phi$trans$insert>>2]|0;
    $13 = ((($f)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $12;
    $16 = $14;
    $17 = (($15) - ($16))|0;
    $18 = ((($f)) + 108|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (($9) - ($19))|0;
    $21 = (($20) + -1)|0;
    $22 = ($17|0)>($21|0);
    if ($22) {
     $23 = (($14) + ($21)|0);
     $24 = ((($f)) + 100|0);
     HEAP32[$24>>2] = $23;
     $27 = $12;
    } else {
     $26 = $15;$41 = $12;
     label = 9;
    }
   }
   if ((label|0) == 9) {
    $25 = ((($f)) + 100|0);
    HEAP32[$25>>2] = $26;
    $27 = $41;
   }
   $28 = ($27|0)==(0|0);
   $$phi$trans$insert3 = ((($f)) + 4|0);
   $$pre4 = HEAP32[$$phi$trans$insert3>>2]|0;
   if (!($28)) {
    $29 = $27;
    $30 = $$pre4;
    $31 = ((($f)) + 108|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (($29) + 1)|0;
    $34 = (($33) - ($30))|0;
    $35 = (($34) + ($32))|0;
    HEAP32[$31>>2] = $35;
   }
   $36 = ((($$pre4)) + -1|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($38|0)==($6|0);
   if ($39) {
    $$0 = $6;
    return ($$0|0);
   }
   $40 = $6&255;
   HEAP8[$36>>0] = $40;
   $$0 = $6;
   return ($$0|0);
  }
 }
 $8 = ((($f)) + 100|0);
 HEAP32[$8>>2] = 0;
 $$0 = -1;
 return ($$0|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & -2147483648;
 $6 = $5 | $4;
 HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $6;$7 = +HEAPF64[tempDoublePtr>>3];
 return (+$7);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _fmax($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0.0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = $1 & 2147483647;
 $3 = ($2>>>0)>(2146435072);
 $4 = ($0>>>0)>(0);
 $5 = ($2|0)==(2146435072);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $$0 = $y;
  return (+$$0);
 }
 HEAPF64[tempDoublePtr>>3] = $y;$8 = HEAP32[tempDoublePtr>>2]|0;
 $9 = HEAP32[tempDoublePtr+4>>2]|0;
 $10 = $9 & 2147483647;
 $11 = ($10>>>0)>(2146435072);
 $12 = ($8>>>0)>(0);
 $13 = ($10|0)==(2146435072);
 $14 = $13 & $12;
 $15 = $11 | $14;
 if ($15) {
  $$0 = $x;
  return (+$$0);
 }
 $16 = (_bitshift64Lshr(($0|0),($1|0),63)|0);
 $17 = tempRet0;
 $18 = (_bitshift64Lshr(($8|0),($9|0),63)|0);
 $19 = tempRet0;
 $20 = ($16|0)==($18|0);
 if ($20) {
  $23 = $x < $y;
  $24 = $23 ? $y : $x;
  $$0 = $24;
  return (+$$0);
 } else {
  $21 = ($1|0)<(0);
  $22 = $21 ? $y : $x;
  $$0 = $22;
  return (+$$0);
 }
 return +(0.0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $$x = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0;
 var $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 if (!($15)) {
  $16 = $3 & 2147483647;
  $17 = ($16>>>0)>(2146435072);
  $18 = ($2>>>0)>(0);
  $19 = ($16|0)==(2146435072);
  $20 = $19 & $18;
  $21 = $17 | $20;
  $22 = ($6|0)==(2047);
  $or$cond = $21 | $22;
  if (!($or$cond)) {
   $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
   $26 = tempRet0;
   $27 = ($26>>>0)>($12>>>0);
   $28 = ($25>>>0)>($11>>>0);
   $29 = ($26|0)==($12|0);
   $30 = $29 & $28;
   $31 = $27 | $30;
   if (!($31)) {
    $32 = ($25|0)==($11|0);
    $33 = ($26|0)==($12|0);
    $34 = $32 & $33;
    $35 = $x * 0.0;
    $$x = $34 ? $35 : $x;
    return (+$$x);
   }
   $36 = ($6|0)==(0);
   if ($36) {
    $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
    $38 = tempRet0;
    $39 = ($38|0)>(-1);
    $40 = ($37>>>0)>(4294967295);
    $41 = ($38|0)==(-1);
    $42 = $41 & $40;
    $43 = $39 | $42;
    if ($43) {
     $45 = $37;$46 = $38;$ex$026 = 0;
     while(1) {
      $44 = (($ex$026) + -1)|0;
      $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
      $48 = tempRet0;
      $49 = ($48|0)>(-1);
      $50 = ($47>>>0)>(4294967295);
      $51 = ($48|0)==(-1);
      $52 = $51 & $50;
      $53 = $49 | $52;
      if ($53) {
       $45 = $47;$46 = $48;$ex$026 = $44;
      } else {
       $ex$0$lcssa = $44;
       break;
      }
     }
    } else {
     $ex$0$lcssa = 0;
    }
    $54 = (1 - ($ex$0$lcssa))|0;
    $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
    $56 = tempRet0;
    $83 = $55;$84 = $56;$ex$1 = $ex$0$lcssa;
   } else {
    $57 = $1 & 1048575;
    $58 = $57 | 1048576;
    $83 = $0;$84 = $58;$ex$1 = $6;
   }
   $59 = ($9|0)==(0);
   if ($59) {
    $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
    $61 = tempRet0;
    $62 = ($61|0)>(-1);
    $63 = ($60>>>0)>(4294967295);
    $64 = ($61|0)==(-1);
    $65 = $64 & $63;
    $66 = $62 | $65;
    if ($66) {
     $68 = $60;$69 = $61;$ey$020 = 0;
     while(1) {
      $67 = (($ey$020) + -1)|0;
      $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
      $71 = tempRet0;
      $72 = ($71|0)>(-1);
      $73 = ($70>>>0)>(4294967295);
      $74 = ($71|0)==(-1);
      $75 = $74 & $73;
      $76 = $72 | $75;
      if ($76) {
       $68 = $70;$69 = $71;$ey$020 = $67;
      } else {
       $ey$0$lcssa = $67;
       break;
      }
     }
    } else {
     $ey$0$lcssa = 0;
    }
    $77 = (1 - ($ey$0$lcssa))|0;
    $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
    $79 = tempRet0;
    $85 = $78;$86 = $79;$ey$1$ph = $ey$0$lcssa;
   } else {
    $80 = $3 & 1048575;
    $81 = $80 | 1048576;
    $85 = $2;$86 = $81;$ey$1$ph = $9;
   }
   $82 = ($ex$1|0)>($ey$1$ph|0);
   $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
   $88 = tempRet0;
   $89 = ($88|0)>(-1);
   $90 = ($87>>>0)>(4294967295);
   $91 = ($88|0)==(-1);
   $92 = $91 & $90;
   $93 = $89 | $92;
   L23: do {
    if ($82) {
     $152 = $93;$153 = $87;$154 = $88;$94 = $83;$96 = $84;$ex$212 = $ex$1;
     while(1) {
      if ($152) {
       $95 = ($94|0)==($85|0);
       $97 = ($96|0)==($86|0);
       $98 = $95 & $97;
       if ($98) {
        break;
       } else {
        $100 = $153;$101 = $154;
       }
      } else {
       $100 = $94;$101 = $96;
      }
      $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
      $103 = tempRet0;
      $104 = (($ex$212) + -1)|0;
      $105 = ($104|0)>($ey$1$ph|0);
      $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
      $107 = tempRet0;
      $108 = ($107|0)>(-1);
      $109 = ($106>>>0)>(4294967295);
      $110 = ($107|0)==(-1);
      $111 = $110 & $109;
      $112 = $108 | $111;
      if ($105) {
       $152 = $112;$153 = $106;$154 = $107;$94 = $102;$96 = $103;$ex$212 = $104;
      } else {
       $$lcssa7 = $112;$113 = $102;$115 = $103;$155 = $106;$156 = $107;$ex$2$lcssa = $104;
       break L23;
      }
     }
     $99 = $x * 0.0;
     $$0 = $99;
     return (+$$0);
    } else {
     $$lcssa7 = $93;$113 = $83;$115 = $84;$155 = $87;$156 = $88;$ex$2$lcssa = $ex$1;
    }
   } while(0);
   if ($$lcssa7) {
    $114 = ($113|0)==($85|0);
    $116 = ($115|0)==($86|0);
    $117 = $114 & $116;
    if ($117) {
     $125 = $x * 0.0;
     $$0 = $125;
     return (+$$0);
    } else {
     $118 = $156;$120 = $155;
    }
   } else {
    $118 = $115;$120 = $113;
   }
   $119 = ($118>>>0)<(1048576);
   $121 = ($120>>>0)<(0);
   $122 = ($118|0)==(1048576);
   $123 = $122 & $121;
   $124 = $119 | $123;
   if ($124) {
    $126 = $120;$127 = $118;$ex$39 = $ex$2$lcssa;
    while(1) {
     $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
     $129 = tempRet0;
     $130 = (($ex$39) + -1)|0;
     $131 = ($129>>>0)<(1048576);
     $132 = ($128>>>0)<(0);
     $133 = ($129|0)==(1048576);
     $134 = $133 & $132;
     $135 = $131 | $134;
     if ($135) {
      $126 = $128;$127 = $129;$ex$39 = $130;
     } else {
      $137 = $128;$138 = $129;$ex$3$lcssa = $130;
      break;
     }
    }
   } else {
    $137 = $120;$138 = $118;$ex$3$lcssa = $ex$2$lcssa;
   }
   $136 = ($ex$3$lcssa|0)>(0);
   if ($136) {
    $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
    $140 = tempRet0;
    $141 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
    $142 = tempRet0;
    $143 = $139 | $141;
    $144 = $140 | $142;
    $149 = $144;$151 = $143;
   } else {
    $145 = (1 - ($ex$3$lcssa))|0;
    $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
    $147 = tempRet0;
    $149 = $147;$151 = $146;
   }
   $148 = $149 | $10;
   HEAP32[tempDoublePtr>>2] = $151;HEAP32[tempDoublePtr+4>>2] = $148;$150 = +HEAPF64[tempDoublePtr>>3];
   $$0 = $150;
   return (+$$0);
  }
 }
 $23 = $x * $y;
 $24 = $23 / $23;
 $$0 = $24;
 return (+$$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 if ((($4|0) == 2047)) {
  $$0 = $x;
  return (+$$0);
 } else if ((($4|0) == 0)) {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  return (+$$0);
 } else {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
  return (+$$0);
 }
 return +(0.0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _hypot($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$01 = 0.0, $$02 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0;
 var $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0;
 var $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $z$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & 2147483647;
 $6 = ($4>>>0)<($5>>>0);
 $7 = ($0>>>0)<($2>>>0);
 $8 = ($4|0)==($5|0);
 $9 = $8 & $7;
 $10 = $6 | $9;
 $11 = $10 ? $2 : $0;
 $12 = $10 ? $5 : $4;
 $13 = $10 ? $0 : $2;
 $14 = $10 ? $4 : $5;
 $15 = (_bitshift64Lshr(($11|0),($12|0),52)|0);
 $16 = tempRet0;
 $17 = (_bitshift64Lshr(($13|0),($14|0),52)|0);
 $18 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $11;HEAP32[tempDoublePtr+4>>2] = $12;$19 = +HEAPF64[tempDoublePtr>>3];
 HEAP32[tempDoublePtr>>2] = $13;HEAP32[tempDoublePtr+4>>2] = $14;$20 = +HEAPF64[tempDoublePtr>>3];
 $21 = ($17|0)==(2047);
 if ($21) {
  $$0 = $20;
  return (+$$0);
 }
 $22 = ($15|0)==(2047);
 $23 = ($13|0)==(0);
 $24 = ($14|0)==(0);
 $25 = $23 & $24;
 $or$cond = $25 | $22;
 if ($or$cond) {
  $$0 = $19;
  return (+$$0);
 }
 $26 = (($15) - ($17))|0;
 $27 = ($26|0)>(64);
 if ($27) {
  $28 = $19 + $20;
  $$0 = $28;
  return (+$$0);
 }
 $29 = ($15>>>0)>(1533);
 if ($29) {
  $30 = $19 * 1.9010915662951598E-211;
  $31 = $20 * 1.9010915662951598E-211;
  $$01 = $30;$$02 = $31;$z$0 = 5.2601359015483735E+210;
 } else {
  $32 = ($17>>>0)<(573);
  if ($32) {
   $33 = $19 * 5.2601359015483735E+210;
   $34 = $20 * 5.2601359015483735E+210;
   $$01 = $33;$$02 = $34;$z$0 = 1.9010915662951598E-211;
  } else {
   $$01 = $19;$$02 = $20;$z$0 = 1.0;
  }
 }
 $35 = $$01 * 134217729.0;
 $36 = $$01 - $35;
 $37 = $35 + $36;
 $38 = $$01 - $37;
 $39 = $$01 * $$01;
 $40 = $37 * $37;
 $41 = $40 - $39;
 $42 = $37 * 2.0;
 $43 = $42 * $38;
 $44 = $41 + $43;
 $45 = $38 * $38;
 $46 = $45 + $44;
 $47 = $$02 * 134217729.0;
 $48 = $$02 - $47;
 $49 = $47 + $48;
 $50 = $$02 - $49;
 $51 = $$02 * $$02;
 $52 = $49 * $49;
 $53 = $52 - $51;
 $54 = $49 * 2.0;
 $55 = $54 * $50;
 $56 = $53 + $55;
 $57 = $50 * $50;
 $58 = $57 + $56;
 $59 = $58 + $46;
 $60 = $51 + $59;
 $61 = $39 + $60;
 $62 = (+Math_sqrt((+$61)));
 $63 = $z$0 * $62;
 $$0 = $63;
 return (+$$0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 1;
  return ($$0|0);
 }
 $1 = ($wc>>>0)<(128);
 if ($1) {
  $2 = $wc&255;
  HEAP8[$s>>0] = $2;
  $$0 = 1;
  return ($$0|0);
 }
 $3 = ($wc>>>0)<(2048);
 if ($3) {
  $4 = $wc >>> 6;
  $5 = $4 | 192;
  $6 = $5&255;
  $7 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $6;
  $8 = $wc & 63;
  $9 = $8 | 128;
  $10 = $9&255;
  HEAP8[$7>>0] = $10;
  $$0 = 2;
  return ($$0|0);
 }
 $11 = ($wc>>>0)<(55296);
 $12 = $wc & -8192;
 $13 = ($12|0)==(57344);
 $or$cond = $11 | $13;
 if ($or$cond) {
  $14 = $wc >>> 12;
  $15 = $14 | 224;
  $16 = $15&255;
  $17 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $16;
  $18 = $wc >>> 6;
  $19 = $18 & 63;
  $20 = $19 | 128;
  $21 = $20&255;
  $22 = ((($s)) + 2|0);
  HEAP8[$17>>0] = $21;
  $23 = $wc & 63;
  $24 = $23 | 128;
  $25 = $24&255;
  HEAP8[$22>>0] = $25;
  $$0 = 3;
  return ($$0|0);
 }
 $26 = (($wc) + -65536)|0;
 $27 = ($26>>>0)<(1048576);
 if ($27) {
  $28 = $wc >>> 18;
  $29 = $28 | 240;
  $30 = $29&255;
  $31 = ((($s)) + 1|0);
  HEAP8[$s>>0] = $30;
  $32 = $wc >>> 12;
  $33 = $32 & 63;
  $34 = $33 | 128;
  $35 = $34&255;
  $36 = ((($s)) + 2|0);
  HEAP8[$31>>0] = $35;
  $37 = $wc >>> 6;
  $38 = $37 & 63;
  $39 = $38 | 128;
  $40 = $39&255;
  $41 = ((($s)) + 3|0);
  HEAP8[$36>>0] = $40;
  $42 = $wc & 63;
  $43 = $42 | 128;
  $44 = $43&255;
  HEAP8[$41>>0] = $44;
  $$0 = 4;
  return ($$0|0);
 } else {
  $45 = (___errno_location()|0);
  HEAP32[$45>>2] = 84;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = ((($f)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($f)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = ((($f)) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 31]($f,0,0)|0);
 }
 $13 = ((($f)) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($f)) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = ((($f)) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = ((($f)) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
  return ($$0|0);
 }
 $18 = $15 & 4;
 $19 = ($18|0)==(0);
 if ($19) {
  $$0 = -1;
  return ($$0|0);
 }
 $20 = $15 | 32;
 HEAP32[$f>>2] = $20;
 $$0 = -1;
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = ((($f)) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($f)) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($f)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($f)) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = ((($f)) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = $13;
  $17 = ((($f)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + ($18)|0);
  $20 = ((($f)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
  return ($$0|0);
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $c = sp;
 $0 = ((($f)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = ((($f)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 31]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa10 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $3 = (___towrite($f)|0);
   $4 = ($3|0)==(0);
   if ($4) {
    $$pre = HEAP32[$0>>2]|0;
    $7 = $$pre;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $7 = $1;
  }
 } while(0);
 $5 = ((($f)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $8 = $7;
 $9 = $6;
 $10 = (($8) - ($9))|0;
 $11 = ($10>>>0)<($l>>>0);
 if ($11) {
  $12 = ((($f)) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iiii[$13 & 31]($f,$s,$l)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = ((($f)) + 75|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)>(-1);
 L11: do {
  if ($17) {
   $i$0 = $l;
   while(1) {
    $18 = ($i$0|0)==(0);
    if ($18) {
     $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
     break L11;
    }
    $19 = (($i$0) + -1)|0;
    $20 = (($s) + ($19)|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = ($21<<24>>24)==(10);
    if ($22) {
     $i$0$lcssa10 = $i$0;
     break;
    } else {
     $i$0 = $19;
    }
   }
   $23 = ((($f)) + 36|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (FUNCTION_TABLE_iiii[$24 & 31]($f,$s,$i$0$lcssa10)|0);
   $26 = ($25>>>0)<($i$0$lcssa10>>>0);
   if ($26) {
    $$0 = $i$0$lcssa10;
    return ($$0|0);
   } else {
    $27 = (($s) + ($i$0$lcssa10)|0);
    $28 = (($l) - ($i$0$lcssa10))|0;
    $$pre6 = HEAP32[$5>>2]|0;
    $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa10;
    break;
   }
  } else {
   $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
  }
 } while(0);
 _memcpy(($29|0),($$02|0),($$01|0))|0;
 $30 = HEAP32[$5>>2]|0;
 $31 = (($30) + ($$01)|0);
 HEAP32[$5>>2] = $31;
 $32 = (($i$1) + ($$01))|0;
 $$0 = $32;
 return ($$0|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _MUSL_vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ((($f)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $6 = ((($f)) + 44|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$6>>2] = $internal_buf;
  $8 = ((($f)) + 28|0);
  HEAP32[$8>>2] = $internal_buf;
  $9 = ((($f)) + 20|0);
  HEAP32[$9>>2] = $internal_buf;
  HEAP32[$2>>2] = 80;
  $10 = ((($internal_buf)) + 80|0);
  $11 = ((($f)) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $13 = ($7|0)==(0|0);
  if ($13) {
   $ret$1 = $12;
  } else {
   $14 = ((($f)) + 36|0);
   $15 = HEAP32[$14>>2]|0;
   (FUNCTION_TABLE_iiii[$15 & 31]($f,0,0)|0);
   $16 = HEAP32[$9>>2]|0;
   $17 = ($16|0)==(0|0);
   $$ = $17 ? -1 : $12;
   HEAP32[$6>>2] = $7;
   HEAP32[$2>>2] = 0;
   HEAP32[$11>>2] = 0;
   HEAP32[$8>>2] = 0;
   HEAP32[$9>>2] = 0;
   $ret$1 = $$;
  }
 } else {
  $5 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $ret$1 = $5;
 }
 $$0 = $ret$1;
 STACKTOP = sp;return ($$0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $b = sp + 112|0;
 $f = sp;
 dest=$f; src=3944; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $$01 = $s;$$02 = $n;
 }
 $4 = $$01;
 $5 = (-2 - ($4))|0;
 $6 = ($$02>>>0)>($5>>>0);
 $$$02 = $6 ? $5 : $$02;
 $7 = ((($f)) + 48|0);
 HEAP32[$7>>2] = $$$02;
 $8 = ((($f)) + 20|0);
 HEAP32[$8>>2] = $$01;
 $9 = ((($f)) + 44|0);
 HEAP32[$9>>2] = $$01;
 $10 = (($$01) + ($$$02)|0);
 $11 = ((($f)) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = ((($f)) + 28|0);
 HEAP32[$12>>2] = $10;
 $13 = (_MUSL_vfprintf($f,$fmt,$ap)|0);
 $14 = ($$$02|0)==(0);
 if ($14) {
  $$0 = $13;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = HEAP32[$8>>2]|0;
 $16 = HEAP32[$11>>2]|0;
 $17 = ($15|0)==($16|0);
 $18 = $17 << 31 >> 31;
 $19 = (($15) + ($18)|0);
 HEAP8[$19>>0] = 0;
 $$0 = $13;
 STACKTOP = sp;return ($$0|0);
}
function _atof($s) {
 $s = $s|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtod($s,0));
 return (+$0);
}
function _strtod($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 dest=$f$i; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f$i)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f$i)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i,0);
 $4 = (+___floatscan($f$i,1,1));
 $5 = ((($f$i)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)!=(0);
 $15 = (($s) + ($12)|0);
 $16 = $14 ? $15 : $s;
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtold_l($s,$p,$loc) {
 $s = $s|0;
 $p = $p|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i$i = sp;
 dest=$f$i$i; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f$i$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i$i)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f$i$i)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f$i$i)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i$i,0);
 $4 = (+___floatscan($f$i$i,2,1));
 $5 = ((($f$i$i)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)!=(0);
 $15 = (($s) + ($12)|0);
 $16 = $14 ? $15 : $s;
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = ((($s)) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = ((($f$i)) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = ((($f$i)) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,-1,-1)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = ($7);
  STACKTOP = sp;return ($6|0);
 }
 $9 = ((($f$i)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = ($7);
 STACKTOP = sp;return ($6|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = ((($f$i)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f$i)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = ((($s)) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = ((($f$i)) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = ((($f$i)) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,0,-2147483648)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = ($7);
  STACKTOP = sp;return ($6|0);
 }
 $9 = ((($f$i)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = ($7);
 STACKTOP = sp;return ($6|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 L1: do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$0$lcssa44 = $$019;$s$0$lcssa43 = $s$020;
     label = 6;
     break L1;
    }
    $8 = ((($s$020)) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$0$lcssa = $9;$$lcssa = $13;$s$0$lcssa = $8;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
   label = 6;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $14 = HEAP8[$s$0$lcssa43>>0]|0;
   $15 = $c&255;
   $16 = ($14<<24>>24)==($15<<24>>24);
   if ($16) {
    $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
   } else {
    $17 = Math_imul($0, 16843009)|0;
    $18 = ($$0$lcssa44>>>0)>(3);
    L11: do {
     if ($18) {
      $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
      while(1) {
       $19 = HEAP32[$w$011>>2]|0;
       $20 = $19 ^ $17;
       $21 = (($20) + -16843009)|0;
       $22 = $20 & -2139062144;
       $23 = $22 ^ -2139062144;
       $24 = $23 & $21;
       $25 = ($24|0)==(0);
       if (!($25)) {
        $$110$lcssa = $$110;$w$011$lcssa = $w$011;
        break;
       }
       $26 = ((($w$011)) + 4|0);
       $27 = (($$110) + -4)|0;
       $28 = ($27>>>0)>(3);
       if ($28) {
        $$110 = $27;$w$011 = $26;
       } else {
        $$1$lcssa = $27;$w$0$lcssa = $26;
        label = 11;
        break L11;
       }
      }
      $$24 = $$110$lcssa;$s$15 = $w$011$lcssa;
     } else {
      $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $29 = ($$1$lcssa|0)==(0);
     if ($29) {
      $$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $$24 = $$1$lcssa;$s$15 = $w$0$lcssa;
     }
    }
    while(1) {
     $30 = HEAP8[$s$15>>0]|0;
     $31 = ($30<<24>>24)==($15<<24>>24);
     if ($31) {
      $$3 = $$24;$s$2 = $s$15;
      break L8;
     }
     $32 = ((($s$15)) + 1|0);
     $33 = (($$24) + -1)|0;
     $34 = ($33|0)==(0);
     if ($34) {
      $$3 = 0;$s$2 = $32;
      break;
     } else {
      $$24 = $33;$s$15 = $32;
     }
    }
   }
  }
 } while(0);
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $cond = 0, $newp$0 = 0, $notlhs = 0;
 var $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[(3136)>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if (!($or$cond30)) {
  _abort();
  // unreachable;
 }
 $$sum2728 = $2 | 4;
 $7 = (($p) + ($$sum2728)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[(3600)>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$0 = $p;
    return ($newp$0|0);
   }
  }
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$0 = $p;
   return ($newp$0|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $$sum23 = (($nb) + 4)|0;
  $26 = (($p) + ($$sum23)|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = HEAP32[$7>>2]|0;
  $29 = $28 | 1;
  HEAP32[$7>>2] = $29;
  _dispose_chunk($22,$20);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $30 = HEAP32[(3144)>>2]|0;
 $31 = ($3|0)==($30|0);
 if ($31) {
  $32 = HEAP32[(3132)>>2]|0;
  $33 = (($32) + ($2))|0;
  $34 = ($33>>>0)>($nb>>>0);
  if (!($34)) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $35 = (($33) - ($nb))|0;
  $36 = (($p) + ($nb)|0);
  $37 = $1 & 1;
  $38 = $37 | $nb;
  $39 = $38 | 2;
  HEAP32[$0>>2] = $39;
  $$sum22 = (($nb) + 4)|0;
  $40 = (($p) + ($$sum22)|0);
  $41 = $35 | 1;
  HEAP32[$40>>2] = $41;
  HEAP32[(3144)>>2] = $36;
  HEAP32[(3132)>>2] = $35;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $42 = HEAP32[(3140)>>2]|0;
 $43 = ($3|0)==($42|0);
 if ($43) {
  $44 = HEAP32[(3128)>>2]|0;
  $45 = (($44) + ($2))|0;
  $46 = ($45>>>0)<($nb>>>0);
  if ($46) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $47 = (($45) - ($nb))|0;
  $48 = ($47>>>0)>(15);
  if ($48) {
   $49 = (($p) + ($nb)|0);
   $50 = (($p) + ($45)|0);
   $51 = $1 & 1;
   $52 = $51 | $nb;
   $53 = $52 | 2;
   HEAP32[$0>>2] = $53;
   $$sum19 = (($nb) + 4)|0;
   $54 = (($p) + ($$sum19)|0);
   $55 = $47 | 1;
   HEAP32[$54>>2] = $55;
   HEAP32[$50>>2] = $47;
   $$sum20 = (($45) + 4)|0;
   $56 = (($p) + ($$sum20)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $57 & -2;
   HEAP32[$56>>2] = $58;
   $storemerge = $49;$storemerge21 = $47;
  } else {
   $59 = $1 & 1;
   $60 = $59 | $45;
   $61 = $60 | 2;
   HEAP32[$0>>2] = $61;
   $$sum17 = (($45) + 4)|0;
   $62 = (($p) + ($$sum17)|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 | 1;
   HEAP32[$62>>2] = $64;
   $storemerge = 0;$storemerge21 = 0;
  }
  HEAP32[(3128)>>2] = $storemerge21;
  HEAP32[(3140)>>2] = $storemerge;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $65 = $8 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $67 = $8 & -8;
 $68 = (($67) + ($2))|0;
 $69 = ($68>>>0)<($nb>>>0);
 if ($69) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $70 = (($68) - ($nb))|0;
 $71 = $8 >>> 3;
 $72 = ($8>>>0)<(256);
 do {
  if ($72) {
   $$sum15 = (($2) + 8)|0;
   $73 = (($p) + ($$sum15)|0);
   $74 = HEAP32[$73>>2]|0;
   $$sum16 = (($2) + 12)|0;
   $75 = (($p) + ($$sum16)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $71 << 1;
   $78 = (3160 + ($77<<2)|0);
   $79 = ($74|0)==($78|0);
   if (!($79)) {
    $80 = ($74>>>0)<($4>>>0);
    if ($80) {
     _abort();
     // unreachable;
    }
    $81 = ((($74)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($3|0);
    if (!($83)) {
     _abort();
     // unreachable;
    }
   }
   $84 = ($76|0)==($74|0);
   if ($84) {
    $85 = 1 << $71;
    $86 = $85 ^ -1;
    $87 = HEAP32[3120>>2]|0;
    $88 = $87 & $86;
    HEAP32[3120>>2] = $88;
    break;
   }
   $89 = ($76|0)==($78|0);
   if ($89) {
    $$pre = ((($76)) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $90 = ($76>>>0)<($4>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = ((($76)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==($3|0);
    if ($93) {
     $$pre$phiZ2D = $91;
    } else {
     _abort();
     // unreachable;
    }
   }
   $94 = ((($74)) + 12|0);
   HEAP32[$94>>2] = $76;
   HEAP32[$$pre$phiZ2D>>2] = $74;
  } else {
   $$sum = (($2) + 24)|0;
   $95 = (($p) + ($$sum)|0);
   $96 = HEAP32[$95>>2]|0;
   $$sum2 = (($2) + 12)|0;
   $97 = (($p) + ($$sum2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($3|0);
   do {
    if ($99) {
     $$sum4 = (($2) + 20)|0;
     $109 = (($p) + ($$sum4)|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$sum3 = (($2) + 16)|0;
      $112 = (($p) + ($$sum3)|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ($113|0)==(0|0);
      if ($114) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $113;$RP$0 = $112;
      }
     } else {
      $R$0 = $110;$RP$0 = $109;
     }
     while(1) {
      $115 = ((($R$0)) + 20|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($116|0)==(0|0);
      if (!($117)) {
       $R$0 = $116;$RP$0 = $115;
       continue;
      }
      $118 = ((($R$0)) + 16|0);
      $119 = HEAP32[$118>>2]|0;
      $120 = ($119|0)==(0|0);
      if ($120) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $119;$RP$0 = $118;
      }
     }
     $121 = ($RP$0$lcssa>>>0)<($4>>>0);
     if ($121) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum14 = (($2) + 8)|0;
     $100 = (($p) + ($$sum14)|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = ($101>>>0)<($4>>>0);
     if ($102) {
      _abort();
      // unreachable;
     }
     $103 = ((($101)) + 12|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104|0)==($3|0);
     if (!($105)) {
      _abort();
      // unreachable;
     }
     $106 = ((($98)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if ($108) {
      HEAP32[$103>>2] = $98;
      HEAP32[$106>>2] = $101;
      $R$1 = $98;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $122 = ($96|0)==(0|0);
   if (!($122)) {
    $$sum11 = (($2) + 28)|0;
    $123 = (($p) + ($$sum11)|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (3424 + ($124<<2)|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($3|0)==($126|0);
    if ($127) {
     HEAP32[$125>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $128 = 1 << $124;
      $129 = $128 ^ -1;
      $130 = HEAP32[(3124)>>2]|0;
      $131 = $130 & $129;
      HEAP32[(3124)>>2] = $131;
      break;
     }
    } else {
     $132 = HEAP32[(3136)>>2]|0;
     $133 = ($96>>>0)<($132>>>0);
     if ($133) {
      _abort();
      // unreachable;
     }
     $134 = ((($96)) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($135|0)==($3|0);
     if ($136) {
      HEAP32[$134>>2] = $R$1;
     } else {
      $137 = ((($96)) + 20|0);
      HEAP32[$137>>2] = $R$1;
     }
     $138 = ($R$1|0)==(0|0);
     if ($138) {
      break;
     }
    }
    $139 = HEAP32[(3136)>>2]|0;
    $140 = ($R$1>>>0)<($139>>>0);
    if ($140) {
     _abort();
     // unreachable;
    }
    $141 = ((($R$1)) + 24|0);
    HEAP32[$141>>2] = $96;
    $$sum12 = (($2) + 16)|0;
    $142 = (($p) + ($$sum12)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)==(0|0);
    do {
     if (!($144)) {
      $145 = ($143>>>0)<($139>>>0);
      if ($145) {
       _abort();
       // unreachable;
      } else {
       $146 = ((($R$1)) + 16|0);
       HEAP32[$146>>2] = $143;
       $147 = ((($143)) + 24|0);
       HEAP32[$147>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum13 = (($2) + 20)|0;
    $148 = (($p) + ($$sum13)|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $151 = HEAP32[(3136)>>2]|0;
     $152 = ($149>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     } else {
      $153 = ((($R$1)) + 20|0);
      HEAP32[$153>>2] = $149;
      $154 = ((($149)) + 24|0);
      HEAP32[$154>>2] = $R$1;
      break;
     }
    }
   }
  }
 } while(0);
 $155 = ($70>>>0)<(16);
 if ($155) {
  $156 = $1 & 1;
  $157 = $68 | $156;
  $158 = $157 | 2;
  HEAP32[$0>>2] = $158;
  $$sum910 = $68 | 4;
  $159 = (($p) + ($$sum910)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160 | 1;
  HEAP32[$159>>2] = $161;
  $newp$0 = $p;
  return ($newp$0|0);
 } else {
  $162 = (($p) + ($nb)|0);
  $163 = $1 & 1;
  $164 = $163 | $nb;
  $165 = $164 | 2;
  HEAP32[$0>>2] = $165;
  $$sum5 = (($nb) + 4)|0;
  $166 = (($p) + ($$sum5)|0);
  $167 = $70 | 3;
  HEAP32[$166>>2] = $167;
  $$sum78 = $68 | 4;
  $168 = (($p) + ($$sum78)|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 | 1;
  HEAP32[$168>>2] = $170;
  _dispose_chunk($162,$70);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$pre = 0, $$pre$phi50Z2D = 0, $$pre$phi52Z2D = 0, $$pre$phiZ2D = 0, $$pre48 = 0, $$pre49 = 0, $$pre51 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$043 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$042 = 0, $T$042$lcssa = 0, $cond = 0;
 var $cond39 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = ((($p)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[(3136)>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[(3140)>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[(3128)>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum14 = (4 - ($5))|0;
    $105 = (($p) + ($$sum14)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum24 = (8 - ($5))|0;
    $17 = (($p) + ($$sum24)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum25 = (12 - ($5))|0;
    $19 = (($p) + ($$sum25)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = (3160 + ($21<<2)|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = ((($18)) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[3120>>2]|0;
     $32 = $31 & $30;
     HEAP32[3120>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre51 = ((($20)) + 8|0);
     $$pre$phi52Z2D = $$pre51;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = ((($20)) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi52Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = ((($18)) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi52Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum16 = (24 - ($5))|0;
   $39 = (($p) + ($$sum16)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum17 = (12 - ($5))|0;
   $41 = (($p) + ($$sum17)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum18 = (16 - ($5))|0;
     $$sum19 = (($$sum18) + 4)|0;
     $53 = (($p) + ($$sum19)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum18)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $57;$RP$0 = $56;
      }
     } else {
      $R$0 = $54;$RP$0 = $53;
     }
     while(1) {
      $59 = ((($R$0)) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       $R$0 = $60;$RP$0 = $59;
       continue;
      }
      $62 = ((($R$0)) + 16|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $63;$RP$0 = $62;
      }
     }
     $65 = ($RP$0$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum23 = (8 - ($5))|0;
     $44 = (($p) + ($$sum23)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = ((($45)) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = ((($42)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum20 = (28 - ($5))|0;
    $67 = (($p) + ($$sum20)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = (3424 + ($68<<2)|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[(3124)>>2]|0;
      $75 = $74 & $73;
      HEAP32[(3124)>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[(3136)>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = ((($40)) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = ((($40)) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[(3136)>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = ((($R$1)) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum21 = (16 - ($5))|0;
    $86 = (($p) + ($$sum21)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = ((($R$1)) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = ((($87)) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum22 = (($$sum21) + 4)|0;
    $92 = (($p) + ($$sum22)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[(3136)>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = ((($R$1)) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = ((($93)) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[(3136)>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[(3144)>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[(3132)>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[(3132)>>2] = $115;
   HEAP32[(3144)>>2] = $$0;
   $116 = $115 | 1;
   $117 = ((($$0)) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[(3140)>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    return;
   }
   HEAP32[(3140)>>2] = 0;
   HEAP32[(3128)>>2] = 0;
   return;
  }
  $120 = HEAP32[(3140)>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[(3128)>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[(3128)>>2] = $123;
   HEAP32[(3140)>>2] = $$0;
   $124 = $123 | 1;
   $125 = ((($$0)) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum12 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum12)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum13 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum13)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = (3160 + ($135<<2)|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = ((($132)) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[3120>>2]|0;
     $146 = $145 & $144;
     HEAP32[3120>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre49 = ((($134)) + 8|0);
     $$pre$phi50Z2D = $$pre49;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = ((($134)) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi50Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = ((($132)) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi50Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $171;$RP9$0 = $170;
       }
      } else {
       $R7$0 = $168;$RP9$0 = $167;
      }
      while(1) {
       $173 = ((($R7$0)) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if (!($175)) {
        $R7$0 = $174;$RP9$0 = $173;
        continue;
       }
       $176 = ((($R7$0)) + 16|0);
       $177 = HEAP32[$176>>2]|0;
       $178 = ($177|0)==(0|0);
       if ($178) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $177;$RP9$0 = $176;
       }
      }
      $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $$sum11 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum11)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = ((($159)) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = ((($156)) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum8 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum8)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = (3424 + ($182<<2)|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond39 = ($R7$1|0)==(0|0);
      if ($cond39) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[(3124)>>2]|0;
       $189 = $188 & $187;
       HEAP32[(3124)>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[(3136)>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = ((($154)) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = ((($154)) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[(3136)>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = ((($R7$1)) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum9 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum9)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = ((($R7$1)) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = ((($201)) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum10 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum10)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[(3136)>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = ((($R7$1)) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = ((($207)) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = ((($$0)) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[(3140)>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[(3128)>>2] = $128;
   return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = ((($$0)) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = (3160 + ($224<<2)|0);
  $226 = HEAP32[3120>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[3120>>2] = $230;
   $$pre = (($224) + 2)|0;
   $$pre48 = (3160 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre48;$F16$0 = $225;
  } else {
   $$sum7 = (($224) + 2)|0;
   $231 = (3160 + ($$sum7<<2)|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[(3136)>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = ((($F16$0)) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = ((($$0)) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = ((($$0)) + 12|0);
  HEAP32[$237>>2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = (3424 + ($I19$0<<2)|0);
 $264 = ((($$0)) + 28|0);
 HEAP32[$264>>2] = $I19$0;
 $265 = ((($$0)) + 16|0);
 $266 = ((($$0)) + 20|0);
 HEAP32[$266>>2] = 0;
 HEAP32[$265>>2] = 0;
 $267 = HEAP32[(3124)>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[(3124)>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = ((($$0)) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = ((($$0)) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = ((($$0)) + 8|0);
  HEAP32[$274>>2] = $$0;
  return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ((($275)) + 4|0);
 $277 = HEAP32[$276>>2]|0;
 $278 = $277 & -8;
 $279 = ($278|0)==($$1|0);
 L191: do {
  if ($279) {
   $T$0$lcssa = $275;
  } else {
   $280 = ($I19$0|0)==(31);
   $281 = $I19$0 >>> 1;
   $282 = (25 - ($281))|0;
   $283 = $280 ? 0 : $282;
   $284 = $$1 << $283;
   $K20$043 = $284;$T$042 = $275;
   while(1) {
    $291 = $K20$043 >>> 31;
    $292 = (((($T$042)) + 16|0) + ($291<<2)|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     $$lcssa = $292;$T$042$lcssa = $T$042;
     break;
    }
    $285 = $K20$043 << 1;
    $286 = ((($287)) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $T$0$lcssa = $287;
     break L191;
    } else {
     $K20$043 = $285;$T$042 = $287;
    }
   }
   $294 = HEAP32[(3136)>>2]|0;
   $295 = ($$lcssa>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$$lcssa>>2] = $$0;
   $296 = ((($$0)) + 24|0);
   HEAP32[$296>>2] = $T$042$lcssa;
   $297 = ((($$0)) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = ((($$0)) + 8|0);
   HEAP32[$298>>2] = $$0;
   return;
  }
 } while(0);
 $299 = ((($T$0$lcssa)) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[(3136)>>2]|0;
 $302 = ($300>>>0)>=($301>>>0);
 $not$ = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = $302 & $not$;
 if (!($303)) {
  _abort();
  // unreachable;
 }
 $304 = ((($300)) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = ((($$0)) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = ((($$0)) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = ((($$0)) + 24|0);
 HEAP32[$307>>2] = 0;
 return;
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $x$013 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = ((($1)) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $9 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $9 = $8;
 }
 $10 = ($9|0)==(45);
 if ((($9|0) == 43) | (($9|0) == 45)) {
  $11 = $10&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = ((($12)) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
 } else {
  $c$0 = $9;$neg$0 = 0;
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $98 = -2147483648;$99 = 0;
   tempRet0 = ($98);
   return ($99|0);
  }
  $31 = HEAP32[$0>>2]|0;
  $32 = ((($31)) + -1|0);
  HEAP32[$0>>2] = $32;
  $98 = -2147483648;$99 = 0;
  tempRet0 = ($98);
  return ($99|0);
 } else {
  $c$112 = $c$0;$x$013 = 0;
 }
 while(1) {
  $33 = ($x$013*10)|0;
  $34 = (($c$112) + -48)|0;
  $35 = (($34) + ($33))|0;
  $36 = HEAP32[$0>>2]|0;
  $37 = HEAP32[$2>>2]|0;
  $38 = ($36>>>0)<($37>>>0);
  if ($38) {
   $39 = ((($36)) + 1|0);
   HEAP32[$0>>2] = $39;
   $40 = HEAP8[$36>>0]|0;
   $41 = $40&255;
   $c$1$be = $41;
  } else {
   $42 = (___shgetc($f)|0);
   $c$1$be = $42;
  }
  $43 = (($c$1$be) + -48)|0;
  $44 = ($43>>>0)<(10);
  $45 = ($35|0)<(214748364);
  $46 = $44 & $45;
  if ($46) {
   $c$112 = $c$1$be;$x$013 = $35;
  } else {
   $$lcssa22 = $35;$c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $47 = ($$lcssa22|0)<(0);
 $48 = $47 << 31 >> 31;
 $49 = (($c$1$be$lcssa) + -48)|0;
 $50 = ($49>>>0)<(10);
 if ($50) {
  $53 = $$lcssa22;$54 = $48;$c$27 = $c$1$be$lcssa;
  while(1) {
   $55 = (___muldi3(($53|0),($54|0),10,0)|0);
   $56 = tempRet0;
   $57 = ($c$27|0)<(0);
   $58 = $57 << 31 >> 31;
   $59 = (_i64Add(($c$27|0),($58|0),-48,-1)|0);
   $60 = tempRet0;
   $61 = (_i64Add(($59|0),($60|0),($55|0),($56|0))|0);
   $62 = tempRet0;
   $63 = HEAP32[$0>>2]|0;
   $64 = HEAP32[$2>>2]|0;
   $65 = ($63>>>0)<($64>>>0);
   if ($65) {
    $66 = ((($63)) + 1|0);
    HEAP32[$0>>2] = $66;
    $67 = HEAP8[$63>>0]|0;
    $68 = $67&255;
    $c$2$be = $68;
   } else {
    $69 = (___shgetc($f)|0);
    $c$2$be = $69;
   }
   $70 = (($c$2$be) + -48)|0;
   $71 = ($70>>>0)<(10);
   $72 = ($62|0)<(21474836);
   $73 = ($61>>>0)<(2061584302);
   $74 = ($62|0)==(21474836);
   $75 = $74 & $73;
   $76 = $72 | $75;
   $77 = $71 & $76;
   if ($77) {
    $53 = $61;$54 = $62;$c$27 = $c$2$be;
   } else {
    $92 = $61;$93 = $62;$c$2$lcssa = $c$2$be;
    break;
   }
  }
 } else {
  $92 = $$lcssa22;$93 = $48;$c$2$lcssa = $c$1$be$lcssa;
 }
 $51 = (($c$2$lcssa) + -48)|0;
 $52 = ($51>>>0)<(10);
 if ($52) {
  while(1) {
   $78 = HEAP32[$0>>2]|0;
   $79 = HEAP32[$2>>2]|0;
   $80 = ($78>>>0)<($79>>>0);
   if ($80) {
    $81 = ((($78)) + 1|0);
    HEAP32[$0>>2] = $81;
    $82 = HEAP8[$78>>0]|0;
    $83 = $82&255;
    $c$3$be = $83;
   } else {
    $84 = (___shgetc($f)|0);
    $c$3$be = $84;
   }
   $85 = (($c$3$be) + -48)|0;
   $86 = ($85>>>0)<(10);
   if (!($86)) {
    break;
   }
  }
 }
 $87 = HEAP32[$2>>2]|0;
 $88 = ($87|0)==(0|0);
 if (!($88)) {
  $89 = HEAP32[$0>>2]|0;
  $90 = ((($89)) + -1|0);
  HEAP32[$0>>2] = $90;
 }
 $91 = ($neg$0|0)!=(0);
 $94 = (_i64Subtract(0,0,($92|0),($93|0))|0);
 $95 = tempRet0;
 $96 = $91 ? $94 : $92;
 $97 = $91 ? $95 : $93;
 $98 = $97;$99 = $96;
 tempRet0 = ($98);
 return ($99|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i104$i = 0, $$0$lcssa$i128$i = 0, $$0$lcssa$i143$i = 0, $$0$lcssa$i39$i = 0, $$0$lcssa$i46 = 0, $$0$lcssa$i46$i = 0, $$0$lcssa$i48$i = 0, $$0$lcssa$i51 = 0, $$0$lcssa$i53 = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i61 = 0, $$0$lcssa$i63$i = 0, $$0$lcssa$i68 = 0, $$0$lcssa$i69$i = 0;
 var $$0$lcssa$i75 = 0, $$0$lcssa$i76$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i85 = 0, $$0$lcssa$i97$i = 0, $$01$i = 0, $$01$i$i = 0, $$01$i102$i = 0, $$01$i126$i = 0, $$01$i141$i = 0, $$01$i37$i = 0, $$01$i44 = 0, $$01$i44$i = 0, $$01$i54$i = 0, $$01$i59 = 0, $$01$i61$i = 0, $$01$i66 = 0, $$01$i67$i = 0, $$01$i73 = 0, $$01$i74$i = 0;
 var $$01$i83 = 0, $$01$i95$i = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i85$i = 0, $$012$i = 0, $$013$i = 0, $$03$i48 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i79$i = 0, $$07$i = 0.0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i112$i = 0, $$114$i = 0, $$12$i = 0, $$12$i$i = 0, $$12$i110$i = 0, $$12$i119$i = 0;
 var $$12$i134$i = 0, $$12$i134$i$lcssa = 0, $$12$i87$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$$22$i = 0, $$210$$24$i = 0, $$210$i = 0, $$23$i = 0, $$24 = 0, $$25 = 0, $$3$i = 0.0, $$31$i = 0, $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$412184$i = 0;
 var $$5196$i = 0, $$92 = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us303$i = 0, $$a$3$us304$i = 0, $$a$3305$i = 0, $$a$3306$i = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa106 = 0, $$lcssa275$i = 0, $$lcssa450 = 0, $$lcssa451 = 0, $$lcssa455 = 0, $$lcssa457 = 0, $$lcssa458 = 0, $$lcssa459 = 0, $$lcssa460 = 0, $$lcssa461 = 0;
 var $$lcssa463 = 0, $$lcssa464 = 0, $$lcssa470 = 0, $$lcssa474 = 0, $$lcssa476 = 0, $$lcssa479 = 0, $$lcssa480 = 0, $$lcssa483 = 0.0, $$lcssa484 = 0, $$lcssa487 = 0, $$lcssa491 = 0, $$mask$i = 0, $$mask$i38 = 0, $$mask1$i = 0, $$mask1$i37 = 0, $$neg151$i = 0, $$neg152$i = 0, $$p$$i = 0, $$p$5 = 0, $$p$i = 0;
 var $$pn$i = 0, $$pr$i = 0, $$pr146$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi302$iZ2D = 0, $$pre270 = 0, $$pre300$i = 0, $$pre301$i = 0, $$sum$i = 0, $$sum15$i = 0, $$sum16$i = 0, $$z$3$i = 0, $$z$4$i = 0, $$z$4$us$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0;
 var $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0;
 var $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0;
 var $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0;
 var $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0;
 var $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0;
 var $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0;
 var $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0;
 var $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0;
 var $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0.0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0.0, $1162 = 0, $1163 = 0;
 var $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $1169$phi = 0, $117 = 0, $1170 = 0, $1170$phi = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0;
 var $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0.0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0.0, $431 = 0, $432 = 0.0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0.0;
 var $472 = 0.0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0.0, $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0.0, $496 = 0.0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0.0, $545 = 0.0, $546 = 0.0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0.0, $56 = 0, $560 = 0.0, $561 = 0.0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0.0, $575 = 0.0, $576 = 0.0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0.0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0.0, $64 = 0, $640 = 0.0, $641 = 0.0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0.0, $781 = 0.0, $782 = 0, $783 = 0.0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1253$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3240$i = 0, $a$3240$us$i = 0, $a$5$lcssa$i = 0, $a$5215$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arglist_current = 0;
 var $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0, $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0, $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0, $arglist_next48 = 0, $arglist_next51 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0;
 var $arglist_next60 = 0, $arglist_next63 = 0, $arglist_next9 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0246$i = 0, $carry3$0234$i = 0, $carry3$0234$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0245$i = 0, $d$0247$i = 0, $d$1233$i = 0, $d$1233$us$i = 0, $d$2$lcssa$i = 0, $d$2214$i = 0;
 var $d$3$i = 0, $d$4191$i = 0, $d$5183$i = 0, $d$6195$i = 0, $e$0229$i = 0, $e$1$i = 0, $e$2210$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1201$i = 0, $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded101 = 0, $expanded102 = 0;
 var $expanded103 = 0, $expanded105 = 0, $expanded106 = 0, $expanded108 = 0, $expanded109 = 0, $expanded110 = 0, $expanded112 = 0, $expanded113 = 0, $expanded115 = 0, $expanded116 = 0, $expanded117 = 0, $expanded119 = 0, $expanded120 = 0, $expanded122 = 0, $expanded123 = 0, $expanded124 = 0, $expanded126 = 0, $expanded127 = 0, $expanded129 = 0, $expanded130 = 0;
 var $expanded131 = 0, $expanded133 = 0, $expanded134 = 0, $expanded136 = 0, $expanded137 = 0, $expanded138 = 0, $expanded140 = 0, $expanded141 = 0, $expanded143 = 0, $expanded144 = 0, $expanded145 = 0, $expanded147 = 0, $expanded148 = 0, $expanded150 = 0, $expanded151 = 0, $expanded152 = 0, $expanded154 = 0, $expanded155 = 0, $expanded157 = 0, $expanded158 = 0;
 var $expanded159 = 0, $expanded161 = 0, $expanded162 = 0, $expanded164 = 0, $expanded165 = 0, $expanded166 = 0, $expanded168 = 0, $expanded169 = 0, $expanded171 = 0, $expanded172 = 0, $expanded173 = 0, $expanded175 = 0, $expanded176 = 0, $expanded178 = 0, $expanded179 = 0, $expanded180 = 0, $expanded182 = 0, $expanded183 = 0, $expanded185 = 0, $expanded186 = 0;
 var $expanded187 = 0, $expanded189 = 0, $expanded190 = 0, $expanded192 = 0, $expanded193 = 0, $expanded194 = 0, $expanded196 = 0, $expanded197 = 0, $expanded199 = 0, $expanded200 = 0, $expanded201 = 0, $expanded203 = 0, $expanded204 = 0, $expanded206 = 0, $expanded207 = 0, $expanded208 = 0, $expanded210 = 0, $expanded211 = 0, $expanded213 = 0, $expanded214 = 0;
 var $expanded215 = 0, $expanded64 = 0, $expanded66 = 0, $expanded67 = 0, $expanded68 = 0, $expanded70 = 0, $expanded71 = 0, $expanded73 = 0, $expanded74 = 0, $expanded75 = 0, $expanded77 = 0, $expanded78 = 0, $expanded80 = 0, $expanded81 = 0, $expanded82 = 0, $expanded84 = 0, $expanded85 = 0, $expanded87 = 0, $expanded88 = 0, $expanded89 = 0;
 var $expanded91 = 0, $expanded92 = 0, $expanded94 = 0, $expanded95 = 0, $expanded96 = 0, $expanded98 = 0, $expanded99 = 0, $fl$0110 = 0, $fl$0170 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa273 = 0, $i$0175 = 0, $i$0228$i = 0, $i$03$i = 0, $i$03$i30 = 0;
 var $i$1$lcssa$i = 0, $i$1186 = 0, $i$1222$i = 0, $i$2162 = 0, $i$2162$lcssa = 0, $i$2209$i = 0, $i$3160 = 0, $i$3205$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i32 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0, $isdigit2$i28 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i31 = 0, $isdigittmp1$i = 0;
 var $isdigittmp1$i27 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i29 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0221$i = 0, $j$0223$i = 0, $j$1206$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1174 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$0$phi = 0, $l10n$1 = 0, $l10n$2 = 0;
 var $l10n$3 = 0, $mb = 0, $notlhs$us$us$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i100$i = 0, $or$cond$i35$i = 0, $or$cond$i42$i = 0, $or$cond$i52$i = 0, $or$cond$i57 = 0, $or$cond$i59$i = 0, $or$cond$i64 = 0, $or$cond$i71 = 0, $or$cond$i72$i = 0, $or$cond$i79 = 0, $or$cond$i81 = 0, $or$cond$i93$i = 0, $or$cond15 = 0;
 var $or$cond19 = 0, $or$cond22 = 0, $or$cond29$i = 0, $or$cond332 = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$3 = 0, $p$4272 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0;
 var $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1179$i = 0, $round$0178$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0, $s$1$i = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$us$i = 0, $s1$0$i = 0, $s7$0188$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0180$i = 0, $s9$0$i = 0;
 var $s9$1192$i = 0, $s9$2$i = 0, $sext = 0, $sext93 = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa456 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8108 = 0, $storemerge8169 = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $w$30$i = 0, $wc = 0;
 var $ws$0176 = 0, $ws$1187 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i109$i = 0, $y$03$i118$i = 0, $y$03$i133$i = 0, $y$03$i86$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0163 = 0, $z$1 = 0, $z$1$lcssa$i = 0, $z$1252$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3239$i = 0, $z$3239$us$i = 0;
 var $z$4$i = 0, $z$4$us$i = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0;
 $big$i = sp + 16|0;
 $e2$i = sp + 8|0;
 $buf$i = sp + 836|0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824|0;
 $pad$i = sp + 568|0;
 $buf = sp + 528|0;
 $wc = sp;
 $mb = sp + 520|0;
 $1 = ($f|0)!=(0|0);
 $2 = ((($buf)) + 40|0);
 $3 = $2;
 $4 = ((($buf)) + 39|0);
 $5 = ((($wc)) + 4|0);
 $6 = $wc;
 $7 = ((($ebuf0$i)) + 12|0);
 $8 = ((($ebuf0$i)) + 11|0);
 $9 = $7;
 $10 = (($9) - ($0))|0;
 $11 = (-2 - ($0))|0;
 $12 = (($9) + 2)|0;
 $13 = ((($big$i)) + 288|0);
 $14 = ((($buf$i)) + 9|0);
 $15 = $14;
 $16 = ((($buf$i)) + 8|0);
 $1169 = 0;$1170 = 0;$23 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $17 = ($cnt$0|0)>(-1);
  do {
   if ($17) {
    $18 = (2147483647 - ($cnt$0))|0;
    $19 = ($l$0|0)>($18|0);
    if ($19) {
     $20 = (___errno_location()|0);
     HEAP32[$20>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $21 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $21;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $22 = HEAP8[$23>>0]|0;
  $24 = ($22<<24>>24)==(0);
  if ($24) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 344;
   break;
  } else {
   $1171 = $22;$26 = $23;
  }
  while(1) {
   if ((($1171<<24>>24) == 37)) {
    $28 = $26;$z$0163 = $26;
    label = 9;
    break;
   } else if ((($1171<<24>>24) == 0)) {
    $$lcssa106 = $26;$z$0$lcssa = $26;
    break;
   }
   $25 = ((($26)) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $1171 = $$pre;$26 = $25;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $27 = ((($28)) + 1|0);
     $29 = HEAP8[$27>>0]|0;
     $30 = ($29<<24>>24)==(37);
     if (!($30)) {
      $$lcssa106 = $28;$z$0$lcssa = $z$0163;
      break L12;
     }
     $31 = ((($z$0163)) + 1|0);
     $32 = ((($28)) + 2|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = ($33<<24>>24)==(37);
     if ($34) {
      $28 = $32;$z$0163 = $31;
      label = 9;
     } else {
      $$lcssa106 = $32;$z$0$lcssa = $31;
      break;
     }
    }
   }
  } while(0);
  $35 = $z$0$lcssa;
  $36 = $23;
  $37 = (($35) - ($36))|0;
  if ($1) {
   (___fwritex($23,$37,$f)|0);
  }
  $38 = ($z$0$lcssa|0)==($23|0);
  if (!($38)) {
   $l10n$0$phi = $l10n$0;$1170$phi = $1170;$1169$phi = $1169;$23 = $$lcssa106;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$0$phi;$1170 = $1170$phi;$1169 = $1169$phi;
   continue;
  }
  $39 = ((($$lcssa106)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $isdigittmp = (($41) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $42 = ((($$lcssa106)) + 2|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(36);
   $45 = ((($$lcssa106)) + 3|0);
   $$92 = $44 ? $45 : $39;
   $$l10n$0 = $44 ? 1 : $l10n$0;
   $isdigittmp$ = $44 ? $isdigittmp : -1;
   $$pre270 = HEAP8[$$92>>0]|0;
   $47 = $$pre270;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$92;
  } else {
   $47 = $40;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $39;
  }
  $46 = $47 << 24 >> 24;
  $48 = $46 & -32;
  $49 = ($48|0)==(32);
  L24: do {
   if ($49) {
    $51 = $46;$56 = $47;$fl$0170 = 0;$storemerge8169 = $storemerge;
    while(1) {
     $50 = (($51) + -32)|0;
     $52 = 1 << $50;
     $53 = $52 & 75913;
     $54 = ($53|0)==(0);
     if ($54) {
      $65 = $56;$fl$0110 = $fl$0170;$storemerge8108 = $storemerge8169;
      break L24;
     }
     $55 = $56 << 24 >> 24;
     $57 = (($55) + -32)|0;
     $58 = 1 << $57;
     $59 = $58 | $fl$0170;
     $60 = ((($storemerge8169)) + 1|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61 << 24 >> 24;
     $63 = $62 & -32;
     $64 = ($63|0)==(32);
     if ($64) {
      $51 = $62;$56 = $61;$fl$0170 = $59;$storemerge8169 = $60;
     } else {
      $65 = $61;$fl$0110 = $59;$storemerge8108 = $60;
      break;
     }
    }
   } else {
    $65 = $47;$fl$0110 = 0;$storemerge8108 = $storemerge;
   }
  } while(0);
  $66 = ($65<<24>>24)==(42);
  do {
   if ($66) {
    $67 = ((($storemerge8108)) + 1|0);
    $68 = HEAP8[$67>>0]|0;
    $69 = $68 << 24 >> 24;
    $isdigittmp11 = (($69) + -48)|0;
    $isdigit12 = ($isdigittmp11>>>0)<(10);
    if ($isdigit12) {
     $70 = ((($storemerge8108)) + 2|0);
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(36);
     if ($72) {
      $73 = (($nl_type) + ($isdigittmp11<<2)|0);
      HEAP32[$73>>2] = 10;
      $74 = HEAP8[$67>>0]|0;
      $75 = $74 << 24 >> 24;
      $76 = (($75) + -48)|0;
      $77 = (($nl_arg) + ($76<<3)|0);
      $78 = $77;
      $79 = $78;
      $80 = HEAP32[$79>>2]|0;
      $81 = (($78) + 4)|0;
      $82 = $81;
      $83 = HEAP32[$82>>2]|0;
      $84 = ((($storemerge8108)) + 3|0);
      $l10n$2 = 1;$storemerge13 = $84;$w$0 = $80;
     } else {
      label = 23;
     }
    } else {
     label = 23;
    }
    if ((label|0) == 23) {
     label = 0;
     $85 = ($l10n$1|0)==(0);
     if (!($85)) {
      $$0 = -1;
      label = 363;
      break L1;
     }
     if (!($1)) {
      $105 = $67;$fl$1 = $fl$0110;$l10n$3 = 0;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $86 = $arglist_current;
     $87 = ((0) + 4|0);
     $expanded64 = $87;
     $expanded = (($expanded64) - 1)|0;
     $88 = (($86) + ($expanded))|0;
     $89 = ((0) + 4|0);
     $expanded68 = $89;
     $expanded67 = (($expanded68) - 1)|0;
     $expanded66 = $expanded67 ^ -1;
     $90 = $88 & $expanded66;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $arglist_next = ((($91)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge13 = $67;$w$0 = $92;
    }
    $93 = ($w$0|0)<(0);
    if ($93) {
     $94 = $fl$0110 | 8192;
     $95 = (0 - ($w$0))|0;
     $105 = $storemerge13;$fl$1 = $94;$l10n$3 = $l10n$2;$w$1 = $95;
    } else {
     $105 = $storemerge13;$fl$1 = $fl$0110;$l10n$3 = $l10n$2;$w$1 = $w$0;
    }
   } else {
    $96 = $65 << 24 >> 24;
    $isdigittmp1$i = (($96) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $100 = $storemerge8108;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
     while(1) {
      $97 = ($i$03$i*10)|0;
      $98 = (($97) + ($isdigittmp4$i))|0;
      $99 = ((($100)) + 1|0);
      $101 = HEAP8[$99>>0]|0;
      $102 = $101 << 24 >> 24;
      $isdigittmp$i = (($102) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $100 = $99;$i$03$i = $98;$isdigittmp4$i = $isdigittmp$i;
      } else {
       $$lcssa450 = $98;$$lcssa451 = $99;
       break;
      }
     }
     $103 = ($$lcssa450|0)<(0);
     if ($103) {
      $$0 = -1;
      label = 363;
      break L1;
     } else {
      $105 = $$lcssa451;$fl$1 = $fl$0110;$l10n$3 = $l10n$1;$w$1 = $$lcssa450;
     }
    } else {
     $105 = $storemerge8108;$fl$1 = $fl$0110;$l10n$3 = $l10n$1;$w$1 = 0;
    }
   }
  } while(0);
  $104 = HEAP8[$105>>0]|0;
  $106 = ($104<<24>>24)==(46);
  L45: do {
   if ($106) {
    $107 = ((($105)) + 1|0);
    $108 = HEAP8[$107>>0]|0;
    $109 = ($108<<24>>24)==(42);
    if (!($109)) {
     $136 = $108 << 24 >> 24;
     $isdigittmp1$i27 = (($136) + -48)|0;
     $isdigit2$i28 = ($isdigittmp1$i27>>>0)<(10);
     if ($isdigit2$i28) {
      $140 = $107;$i$03$i30 = 0;$isdigittmp4$i29 = $isdigittmp1$i27;
     } else {
      $1172 = $107;$p$0 = 0;
      break;
     }
     while(1) {
      $137 = ($i$03$i30*10)|0;
      $138 = (($137) + ($isdigittmp4$i29))|0;
      $139 = ((($140)) + 1|0);
      $141 = HEAP8[$139>>0]|0;
      $142 = $141 << 24 >> 24;
      $isdigittmp$i31 = (($142) + -48)|0;
      $isdigit$i32 = ($isdigittmp$i31>>>0)<(10);
      if ($isdigit$i32) {
       $140 = $139;$i$03$i30 = $138;$isdigittmp4$i29 = $isdigittmp$i31;
      } else {
       $1172 = $139;$p$0 = $138;
       break L45;
      }
     }
    }
    $110 = ((($105)) + 2|0);
    $111 = HEAP8[$110>>0]|0;
    $112 = $111 << 24 >> 24;
    $isdigittmp9 = (($112) + -48)|0;
    $isdigit10 = ($isdigittmp9>>>0)<(10);
    if ($isdigit10) {
     $113 = ((($105)) + 3|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)==(36);
     if ($115) {
      $116 = (($nl_type) + ($isdigittmp9<<2)|0);
      HEAP32[$116>>2] = 10;
      $117 = HEAP8[$110>>0]|0;
      $118 = $117 << 24 >> 24;
      $119 = (($118) + -48)|0;
      $120 = (($nl_arg) + ($119<<3)|0);
      $121 = $120;
      $122 = $121;
      $123 = HEAP32[$122>>2]|0;
      $124 = (($121) + 4)|0;
      $125 = $124;
      $126 = HEAP32[$125>>2]|0;
      $127 = ((($105)) + 4|0);
      $1172 = $127;$p$0 = $123;
      break;
     }
    }
    $128 = ($l10n$3|0)==(0);
    if (!($128)) {
     $$0 = -1;
     label = 363;
     break L1;
    }
    if ($1) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $129 = $arglist_current2;
     $130 = ((0) + 4|0);
     $expanded71 = $130;
     $expanded70 = (($expanded71) - 1)|0;
     $131 = (($129) + ($expanded70))|0;
     $132 = ((0) + 4|0);
     $expanded75 = $132;
     $expanded74 = (($expanded75) - 1)|0;
     $expanded73 = $expanded74 ^ -1;
     $133 = $131 & $expanded73;
     $134 = $133;
     $135 = HEAP32[$134>>2]|0;
     $arglist_next3 = ((($134)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $1172 = $110;$p$0 = $135;
    } else {
     $1172 = $110;$p$0 = 0;
    }
   } else {
    $1172 = $105;$p$0 = -1;
   }
  } while(0);
  $144 = $1172;$st$0 = 0;
  while(1) {
   $143 = HEAP8[$144>>0]|0;
   $145 = $143 << 24 >> 24;
   $146 = (($145) + -65)|0;
   $147 = ($146>>>0)>(57);
   if ($147) {
    $$0 = -1;
    label = 363;
    break L1;
   }
   $148 = ((($144)) + 1|0);
   $149 = ((4056 + (($st$0*58)|0)|0) + ($146)|0);
   $150 = HEAP8[$149>>0]|0;
   $151 = $150&255;
   $152 = (($151) + -1)|0;
   $153 = ($152>>>0)<(8);
   if ($153) {
    $144 = $148;$st$0 = $151;
   } else {
    $$lcssa455 = $144;$$lcssa457 = $148;$$lcssa458 = $150;$$lcssa459 = $151;$st$0$lcssa456 = $st$0;
    break;
   }
  }
  $154 = ($$lcssa458<<24>>24)==(0);
  if ($154) {
   $$0 = -1;
   label = 363;
   break;
  }
  $155 = ($$lcssa458<<24>>24)==(19);
  $156 = ($argpos$0|0)>(-1);
  L64: do {
   if ($155) {
    if ($156) {
     $$0 = -1;
     label = 363;
     break L1;
    } else {
     $1173 = $1169;$1174 = $1170;
     label = 62;
    }
   } else {
    if ($156) {
     $157 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$157>>2] = $$lcssa459;
     $158 = (($nl_arg) + ($argpos$0<<3)|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ((($158)) + 4|0);
     $161 = HEAP32[$160>>2]|0;
     $1173 = $161;$1174 = $159;
     label = 62;
     break;
    }
    if (!($1)) {
     $$0 = 0;
     label = 363;
     break L1;
    }
    $162 = ($$lcssa458&255)>(20);
    if ($162) {
     $264 = $1170;$291 = $1169;
    } else {
     do {
      switch ($$lcssa459|0) {
      case 15:  {
       $arglist_current23 = HEAP32[$ap>>2]|0;
       $218 = $arglist_current23;
       $219 = ((0) + 4|0);
       $expanded120 = $219;
       $expanded119 = (($expanded120) - 1)|0;
       $220 = (($218) + ($expanded119))|0;
       $221 = ((0) + 4|0);
       $expanded124 = $221;
       $expanded123 = (($expanded124) - 1)|0;
       $expanded122 = $expanded123 ^ -1;
       $222 = $220 & $expanded122;
       $223 = $222;
       $224 = HEAP32[$223>>2]|0;
       $arglist_next24 = ((($223)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next24;
       $225 = $224&255;
       $226 = $225 << 24 >> 24;
       $227 = ($226|0)<(0);
       $228 = $227 << 31 >> 31;
       $sext = $224 << 24;
       $229 = $sext >> 24;
       $264 = $229;$291 = $228;
       break L64;
       break;
      }
      case 10:  {
       $arglist_current8 = HEAP32[$ap>>2]|0;
       $171 = $arglist_current8;
       $172 = ((0) + 4|0);
       $expanded85 = $172;
       $expanded84 = (($expanded85) - 1)|0;
       $173 = (($171) + ($expanded84))|0;
       $174 = ((0) + 4|0);
       $expanded89 = $174;
       $expanded88 = (($expanded89) - 1)|0;
       $expanded87 = $expanded88 ^ -1;
       $175 = $173 & $expanded87;
       $176 = $175;
       $177 = HEAP32[$176>>2]|0;
       $arglist_next9 = ((($176)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next9;
       $178 = ($177|0)<(0);
       $179 = $178 << 31 >> 31;
       $264 = $177;$291 = $179;
       break L64;
       break;
      }
      case 12:  {
       $arglist_current14 = HEAP32[$ap>>2]|0;
       $187 = $arglist_current14;
       $188 = ((0) + 8|0);
       $expanded99 = $188;
       $expanded98 = (($expanded99) - 1)|0;
       $189 = (($187) + ($expanded98))|0;
       $190 = ((0) + 8|0);
       $expanded103 = $190;
       $expanded102 = (($expanded103) - 1)|0;
       $expanded101 = $expanded102 ^ -1;
       $191 = $189 & $expanded101;
       $192 = $191;
       $193 = $192;
       $194 = $193;
       $195 = HEAP32[$194>>2]|0;
       $196 = (($193) + 4)|0;
       $197 = $196;
       $198 = HEAP32[$197>>2]|0;
       $arglist_next15 = ((($192)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next15;
       $264 = $195;$291 = $198;
       break L64;
       break;
      }
      case 11:  {
       $arglist_current11 = HEAP32[$ap>>2]|0;
       $180 = $arglist_current11;
       $181 = ((0) + 4|0);
       $expanded92 = $181;
       $expanded91 = (($expanded92) - 1)|0;
       $182 = (($180) + ($expanded91))|0;
       $183 = ((0) + 4|0);
       $expanded96 = $183;
       $expanded95 = (($expanded96) - 1)|0;
       $expanded94 = $expanded95 ^ -1;
       $184 = $182 & $expanded94;
       $185 = $184;
       $186 = HEAP32[$185>>2]|0;
       $arglist_next12 = ((($185)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next12;
       $264 = $186;$291 = 0;
       break L64;
       break;
      }
      case 18:  {
       $arglist_current32 = HEAP32[$ap>>2]|0;
       $246 = $arglist_current32;
       $247 = ((0) + 8|0);
       $expanded141 = $247;
       $expanded140 = (($expanded141) - 1)|0;
       $248 = (($246) + ($expanded140))|0;
       $249 = ((0) + 8|0);
       $expanded145 = $249;
       $expanded144 = (($expanded145) - 1)|0;
       $expanded143 = $expanded144 ^ -1;
       $250 = $248 & $expanded143;
       $251 = $250;
       $252 = +HEAPF64[$251>>3];
       $arglist_next33 = ((($251)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next33;
       HEAPF64[tempDoublePtr>>3] = $252;$253 = HEAP32[tempDoublePtr>>2]|0;
       $254 = HEAP32[tempDoublePtr+4>>2]|0;
       $264 = $253;$291 = $254;
       break L64;
       break;
      }
      case 14:  {
       $arglist_current20 = HEAP32[$ap>>2]|0;
       $211 = $arglist_current20;
       $212 = ((0) + 4|0);
       $expanded113 = $212;
       $expanded112 = (($expanded113) - 1)|0;
       $213 = (($211) + ($expanded112))|0;
       $214 = ((0) + 4|0);
       $expanded117 = $214;
       $expanded116 = (($expanded117) - 1)|0;
       $expanded115 = $expanded116 ^ -1;
       $215 = $213 & $expanded115;
       $216 = $215;
       $217 = HEAP32[$216>>2]|0;
       $arglist_next21 = ((($216)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next21;
       $$mask1$i37 = $217 & 65535;
       $264 = $$mask1$i37;$291 = 0;
       break L64;
       break;
      }
      case 13:  {
       $arglist_current17 = HEAP32[$ap>>2]|0;
       $199 = $arglist_current17;
       $200 = ((0) + 4|0);
       $expanded106 = $200;
       $expanded105 = (($expanded106) - 1)|0;
       $201 = (($199) + ($expanded105))|0;
       $202 = ((0) + 4|0);
       $expanded110 = $202;
       $expanded109 = (($expanded110) - 1)|0;
       $expanded108 = $expanded109 ^ -1;
       $203 = $201 & $expanded108;
       $204 = $203;
       $205 = HEAP32[$204>>2]|0;
       $arglist_next18 = ((($204)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next18;
       $206 = $205&65535;
       $207 = $206 << 16 >> 16;
       $208 = ($207|0)<(0);
       $209 = $208 << 31 >> 31;
       $sext93 = $205 << 16;
       $210 = $sext93 >> 16;
       $264 = $210;$291 = $209;
       break L64;
       break;
      }
      case 9:  {
       $arglist_current5 = HEAP32[$ap>>2]|0;
       $163 = $arglist_current5;
       $164 = ((0) + 4|0);
       $expanded78 = $164;
       $expanded77 = (($expanded78) - 1)|0;
       $165 = (($163) + ($expanded77))|0;
       $166 = ((0) + 4|0);
       $expanded82 = $166;
       $expanded81 = (($expanded82) - 1)|0;
       $expanded80 = $expanded81 ^ -1;
       $167 = $165 & $expanded80;
       $168 = $167;
       $169 = HEAP32[$168>>2]|0;
       $arglist_next6 = ((($168)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next6;
       $170 = $169;
       $264 = $170;$291 = $1169;
       break L64;
       break;
      }
      case 17:  {
       $arglist_current29 = HEAP32[$ap>>2]|0;
       $237 = $arglist_current29;
       $238 = ((0) + 8|0);
       $expanded134 = $238;
       $expanded133 = (($expanded134) - 1)|0;
       $239 = (($237) + ($expanded133))|0;
       $240 = ((0) + 8|0);
       $expanded138 = $240;
       $expanded137 = (($expanded138) - 1)|0;
       $expanded136 = $expanded137 ^ -1;
       $241 = $239 & $expanded136;
       $242 = $241;
       $243 = +HEAPF64[$242>>3];
       $arglist_next30 = ((($242)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next30;
       HEAPF64[tempDoublePtr>>3] = $243;$244 = HEAP32[tempDoublePtr>>2]|0;
       $245 = HEAP32[tempDoublePtr+4>>2]|0;
       $264 = $244;$291 = $245;
       break L64;
       break;
      }
      case 16:  {
       $arglist_current26 = HEAP32[$ap>>2]|0;
       $230 = $arglist_current26;
       $231 = ((0) + 4|0);
       $expanded127 = $231;
       $expanded126 = (($expanded127) - 1)|0;
       $232 = (($230) + ($expanded126))|0;
       $233 = ((0) + 4|0);
       $expanded131 = $233;
       $expanded130 = (($expanded131) - 1)|0;
       $expanded129 = $expanded130 ^ -1;
       $234 = $232 & $expanded129;
       $235 = $234;
       $236 = HEAP32[$235>>2]|0;
       $arglist_next27 = ((($235)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next27;
       $$mask$i38 = $236 & 255;
       $264 = $$mask$i38;$291 = 0;
       break L64;
       break;
      }
      default: {
       $264 = $1170;$291 = $1169;
       break L64;
      }
      }
     } while(0);
    }
   }
  } while(0);
  if ((label|0) == 62) {
   label = 0;
   if ($1) {
    $264 = $1174;$291 = $1173;
   } else {
    $1169 = $1173;$1170 = $1174;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $255 = HEAP8[$$lcssa455>>0]|0;
  $256 = $255 << 24 >> 24;
  $257 = ($st$0$lcssa456|0)!=(0);
  $258 = $256 & 15;
  $259 = ($258|0)==(3);
  $or$cond15 = $257 & $259;
  $260 = $256 & -33;
  $t$0 = $or$cond15 ? $260 : $256;
  $261 = $fl$1 & 8192;
  $262 = ($261|0)==(0);
  $263 = $fl$1 & -65537;
  $fl$1$ = $262 ? $fl$1 : $263;
  L86: do {
   switch ($t$0|0) {
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    HEAP32[tempDoublePtr>>2] = $264;HEAP32[tempDoublePtr+4>>2] = $291;$430 = +HEAPF64[tempDoublePtr>>3];
    HEAP32[$e2$i>>2] = 0;
    $431 = ($291|0)<(0);
    if ($431) {
     $432 = -$430;
     $$07$i = $432;$pl$0$i = 1;$prefix$0$i = 4560;
    } else {
     $433 = $fl$1$ & 2048;
     $434 = ($433|0)==(0);
     if ($434) {
      $435 = $fl$1$ & 1;
      $436 = ($435|0)==(0);
      $$$i = $436 ? (4561) : (4566);
      $$07$i = $430;$pl$0$i = $435;$prefix$0$i = $$$i;
     } else {
      $$07$i = $430;$pl$0$i = 1;$prefix$0$i = (4563);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$07$i;$437 = HEAP32[tempDoublePtr>>2]|0;
    $438 = HEAP32[tempDoublePtr+4>>2]|0;
    $439 = $438 & 2146435072;
    $440 = ($439>>>0)<(2146435072);
    $441 = (0)<(0);
    $442 = ($439|0)==(2146435072);
    $443 = $442 & $441;
    $444 = $440 | $443;
    do {
     if ($444) {
      $471 = (+_frexpl($$07$i,$e2$i));
      $472 = $471 * 2.0;
      $473 = $472 != 0.0;
      if ($473) {
       $474 = HEAP32[$e2$i>>2]|0;
       $475 = (($474) + -1)|0;
       HEAP32[$e2$i>>2] = $475;
      }
      $476 = $t$0 | 32;
      $477 = ($476|0)==(97);
      if ($477) {
       $478 = $t$0 & 32;
       $479 = ($478|0)==(0);
       $480 = ((($prefix$0$i)) + 9|0);
       $prefix$0$$i = $479 ? $prefix$0$i : $480;
       $481 = $pl$0$i | 2;
       $482 = ($p$0>>>0)>(11);
       $483 = (12 - ($p$0))|0;
       $484 = ($483|0)==(0);
       $485 = $482 | $484;
       do {
        if ($485) {
         $$1$i = $472;
        } else {
         $re$1179$i = $483;$round$0178$i = 8.0;
         while(1) {
          $486 = (($re$1179$i) + -1)|0;
          $487 = $round$0178$i * 16.0;
          $488 = ($486|0)==(0);
          if ($488) {
           $$lcssa483 = $487;
           break;
          } else {
           $re$1179$i = $486;$round$0178$i = $487;
          }
         }
         $489 = HEAP8[$prefix$0$$i>>0]|0;
         $490 = ($489<<24>>24)==(45);
         if ($490) {
          $491 = -$472;
          $492 = $491 - $$lcssa483;
          $493 = $$lcssa483 + $492;
          $494 = -$493;
          $$1$i = $494;
          break;
         } else {
          $495 = $472 + $$lcssa483;
          $496 = $495 - $$lcssa483;
          $$1$i = $496;
          break;
         }
        }
       } while(0);
       $497 = HEAP32[$e2$i>>2]|0;
       $498 = ($497|0)<(0);
       $499 = (0 - ($497))|0;
       $500 = $498 ? $499 : $497;
       $501 = ($500|0)<(0);
       if ($501) {
        $502 = ($500|0)<(0);
        $503 = $502 << 31 >> 31;
        $$05$i$i = $7;$504 = $500;$505 = $503;
        while(1) {
         $506 = (___uremdi3(($504|0),($505|0),10,0)|0);
         $507 = tempRet0;
         $508 = $506 | 48;
         $509 = $508&255;
         $510 = ((($$05$i$i)) + -1|0);
         HEAP8[$510>>0] = $509;
         $511 = (___udivdi3(($504|0),($505|0),10,0)|0);
         $512 = tempRet0;
         $513 = ($505>>>0)>(9);
         $514 = ($504>>>0)>(4294967295);
         $515 = ($505|0)==(9);
         $516 = $515 & $514;
         $517 = $513 | $516;
         if ($517) {
          $$05$i$i = $510;$504 = $511;$505 = $512;
         } else {
          $$lcssa484 = $510;$1183 = $511;$1184 = $512;
          break;
         }
        }
        $$0$lcssa$i48$i = $$lcssa484;$$01$lcssa$off0$i$i = $1183;
       } else {
        $$0$lcssa$i48$i = $7;$$01$lcssa$off0$i$i = $500;
       }
       $518 = ($$01$lcssa$off0$i$i|0)==(0);
       if ($518) {
        $$1$lcssa$i$i = $$0$lcssa$i48$i;
       } else {
        $$12$i$i = $$0$lcssa$i48$i;$y$03$i$i = $$01$lcssa$off0$i$i;
        while(1) {
         $519 = (($y$03$i$i>>>0) % 10)&-1;
         $520 = $519 | 48;
         $521 = $520&255;
         $522 = ((($$12$i$i)) + -1|0);
         HEAP8[$522>>0] = $521;
         $523 = (($y$03$i$i>>>0) / 10)&-1;
         $524 = ($y$03$i$i>>>0)<(10);
         if ($524) {
          $$1$lcssa$i$i = $522;
          break;
         } else {
          $$12$i$i = $522;$y$03$i$i = $523;
         }
        }
       }
       $525 = ($$1$lcssa$i$i|0)==($7|0);
       if ($525) {
        HEAP8[$8>>0] = 48;
        $estr$0$i = $8;
       } else {
        $estr$0$i = $$1$lcssa$i$i;
       }
       $526 = HEAP32[$e2$i>>2]|0;
       $527 = $526 >> 31;
       $528 = $527 & 2;
       $529 = (($528) + 43)|0;
       $530 = $529&255;
       $531 = ((($estr$0$i)) + -1|0);
       HEAP8[$531>>0] = $530;
       $532 = (($t$0) + 15)|0;
       $533 = $532&255;
       $534 = ((($estr$0$i)) + -2|0);
       HEAP8[$534>>0] = $533;
       $535 = $fl$1$ & 8;
       $536 = ($535|0)==(0);
       if ($536) {
        $notrhs$i = ($p$0|0)<(1);
        if ($notrhs$i) {
         $$2$us$us$i = $$1$i;$s$0$us$us$i = $buf$i;
         while(1) {
          $537 = (~~(($$2$us$us$i)));
          $538 = (4520 + ($537)|0);
          $539 = HEAP8[$538>>0]|0;
          $540 = $539&255;
          $541 = $540 | $478;
          $542 = $541&255;
          $543 = ((($s$0$us$us$i)) + 1|0);
          HEAP8[$s$0$us$us$i>>0] = $542;
          $544 = (+($537|0));
          $545 = $$2$us$us$i - $544;
          $546 = $545 * 16.0;
          $547 = $543;
          $548 = (($547) - ($0))|0;
          $549 = ($548|0)!=(1);
          $notlhs$us$us$i = $546 == 0.0;
          $or$cond$i79 = $549 | $notlhs$us$us$i;
          if ($or$cond$i79) {
           $s$1$us$us$i = $543;
          } else {
           $550 = ((($s$0$us$us$i)) + 2|0);
           HEAP8[$543>>0] = 46;
           $s$1$us$us$i = $550;
          }
          $551 = $546 != 0.0;
          if ($551) {
           $$2$us$us$i = $546;$s$0$us$us$i = $s$1$us$us$i;
          } else {
           $s$1$lcssa$i = $s$1$us$us$i;
           break;
          }
         }
        } else {
         $$2$us$i = $$1$i;$s$0$us$i = $buf$i;
         while(1) {
          $552 = (~~(($$2$us$i)));
          $553 = (4520 + ($552)|0);
          $554 = HEAP8[$553>>0]|0;
          $555 = $554&255;
          $556 = $555 | $478;
          $557 = $556&255;
          $558 = ((($s$0$us$i)) + 1|0);
          HEAP8[$s$0$us$i>>0] = $557;
          $559 = (+($552|0));
          $560 = $$2$us$i - $559;
          $561 = $560 * 16.0;
          $562 = $558;
          $563 = (($562) - ($0))|0;
          $564 = ($563|0)==(1);
          if ($564) {
           $565 = ((($s$0$us$i)) + 2|0);
           HEAP8[$558>>0] = 46;
           $s$1$us$i = $565;
          } else {
           $s$1$us$i = $558;
          }
          $566 = $561 != 0.0;
          if ($566) {
           $$2$us$i = $561;$s$0$us$i = $s$1$us$i;
          } else {
           $s$1$lcssa$i = $s$1$us$i;
           break;
          }
         }
        }
       } else {
        $$2$i = $$1$i;$s$0$i = $buf$i;
        while(1) {
         $567 = (~~(($$2$i)));
         $568 = (4520 + ($567)|0);
         $569 = HEAP8[$568>>0]|0;
         $570 = $569&255;
         $571 = $570 | $478;
         $572 = $571&255;
         $573 = ((($s$0$i)) + 1|0);
         HEAP8[$s$0$i>>0] = $572;
         $574 = (+($567|0));
         $575 = $$2$i - $574;
         $576 = $575 * 16.0;
         $577 = $573;
         $578 = (($577) - ($0))|0;
         $579 = ($578|0)==(1);
         if ($579) {
          $580 = ((($s$0$i)) + 2|0);
          HEAP8[$573>>0] = 46;
          $s$1$i = $580;
         } else {
          $s$1$i = $573;
         }
         $581 = $576 != 0.0;
         if ($581) {
          $$2$i = $576;$s$0$i = $s$1$i;
         } else {
          $s$1$lcssa$i = $s$1$i;
          break;
         }
        }
       }
       $582 = ($p$0|0)!=(0);
       $$pre300$i = $s$1$lcssa$i;
       $583 = (($11) + ($$pre300$i))|0;
       $584 = ($583|0)<($p$0|0);
       $or$cond332 = $582 & $584;
       $585 = $534;
       $586 = (($12) + ($p$0))|0;
       $587 = (($586) - ($585))|0;
       $588 = $534;
       $589 = (($10) - ($588))|0;
       $590 = (($589) + ($$pre300$i))|0;
       $l$0$i = $or$cond332 ? $587 : $590;
       $591 = (($l$0$i) + ($481))|0;
       $592 = $fl$1$ & 73728;
       $593 = ($592|0)==(0);
       $594 = ($w$1|0)>($591|0);
       $or$cond$i52$i = $593 & $594;
       if ($or$cond$i52$i) {
        $595 = (($w$1) - ($591))|0;
        $596 = ($595>>>0)>(256);
        $597 = $596 ? 256 : $595;
        _memset(($pad$i|0),32,($597|0))|0;
        $598 = ($595>>>0)>(255);
        if ($598) {
         $$01$i54$i = $595;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $599 = (($$01$i54$i) + -256)|0;
          $600 = ($599>>>0)>(255);
          if ($600) {
           $$01$i54$i = $599;
          } else {
           break;
          }
         }
         $601 = $595 & 255;
         $$0$lcssa$i56$i = $601;
        } else {
         $$0$lcssa$i56$i = $595;
        }
        (___fwritex($pad$i,$$0$lcssa$i56$i,$f)|0);
       }
       (___fwritex($prefix$0$$i,$481,$f)|0);
       $602 = ($592|0)==(65536);
       $or$cond$i59$i = $602 & $594;
       if ($or$cond$i59$i) {
        $603 = (($w$1) - ($591))|0;
        $604 = ($603>>>0)>(256);
        $605 = $604 ? 256 : $603;
        _memset(($pad$i|0),48,($605|0))|0;
        $606 = ($603>>>0)>(255);
        if ($606) {
         $$01$i61$i = $603;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $607 = (($$01$i61$i) + -256)|0;
          $608 = ($607>>>0)>(255);
          if ($608) {
           $$01$i61$i = $607;
          } else {
           break;
          }
         }
         $609 = $603 & 255;
         $$0$lcssa$i63$i = $609;
        } else {
         $$0$lcssa$i63$i = $603;
        }
        (___fwritex($pad$i,$$0$lcssa$i63$i,$f)|0);
       }
       $610 = (($$pre300$i) - ($0))|0;
       (___fwritex($buf$i,$610,$f)|0);
       $611 = $534;
       $612 = (($9) - ($611))|0;
       $613 = (($l$0$i) - ($612))|0;
       $614 = (($613) - ($610))|0;
       $615 = ($614|0)>(0);
       if ($615) {
        $616 = ($614>>>0)>(256);
        $617 = $616 ? 256 : $614;
        _memset(($pad$i|0),48,($617|0))|0;
        $618 = ($614>>>0)>(255);
        if ($618) {
         $$01$i67$i = $614;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $619 = (($$01$i67$i) + -256)|0;
          $620 = ($619>>>0)>(255);
          if ($620) {
           $$01$i67$i = $619;
          } else {
           break;
          }
         }
         $621 = $614 & 255;
         $$0$lcssa$i69$i = $621;
        } else {
         $$0$lcssa$i69$i = $614;
        }
        (___fwritex($pad$i,$$0$lcssa$i69$i,$f)|0);
       }
       (___fwritex($534,$612,$f)|0);
       $622 = ($592|0)==(8192);
       $or$cond$i72$i = $622 & $594;
       if ($or$cond$i72$i) {
        $623 = (($w$1) - ($591))|0;
        $624 = ($623>>>0)>(256);
        $625 = $624 ? 256 : $623;
        _memset(($pad$i|0),32,($625|0))|0;
        $626 = ($623>>>0)>(255);
        if ($626) {
         $$01$i74$i = $623;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $627 = (($$01$i74$i) + -256)|0;
          $628 = ($627>>>0)>(255);
          if ($628) {
           $$01$i74$i = $627;
          } else {
           break;
          }
         }
         $629 = $623 & 255;
         $$0$lcssa$i76$i = $629;
        } else {
         $$0$lcssa$i76$i = $623;
        }
        (___fwritex($pad$i,$$0$lcssa$i76$i,$f)|0);
       }
       $w$$i = $594 ? $w$1 : $591;
       $$0$i = $w$$i;
       break;
      }
      $630 = ($p$0|0)<(0);
      $$p$i = $630 ? 6 : $p$0;
      if ($473) {
       $631 = $472 * 268435456.0;
       $632 = HEAP32[$e2$i>>2]|0;
       $633 = (($632) + -28)|0;
       HEAP32[$e2$i>>2] = $633;
       $$3$i = $631;$634 = $633;
      } else {
       $$pre$i = HEAP32[$e2$i>>2]|0;
       $$3$i = $472;$634 = $$pre$i;
      }
      $635 = ($634|0)<(0);
      $$31$i = $635 ? $big$i : $13;
      $636 = $$31$i;
      $$4$i = $$3$i;$z$0$i = $$31$i;
      while(1) {
       $637 = (~~(($$4$i))>>>0);
       HEAP32[$z$0$i>>2] = $637;
       $638 = ((($z$0$i)) + 4|0);
       $639 = (+($637>>>0));
       $640 = $$4$i - $639;
       $641 = $640 * 1.0E+9;
       $642 = $641 != 0.0;
       if ($642) {
        $$4$i = $641;$z$0$i = $638;
       } else {
        $$lcssa460 = $638;
        break;
       }
      }
      $$pr$i = HEAP32[$e2$i>>2]|0;
      $643 = ($$pr$i|0)>(0);
      if ($643) {
       $644 = $$pr$i;$a$1253$i = $$31$i;$z$1252$i = $$lcssa460;
       while(1) {
        $645 = ($644|0)>(29);
        $646 = $645 ? 29 : $644;
        $d$0245$i = ((($z$1252$i)) + -4|0);
        $647 = ($d$0245$i>>>0)<($a$1253$i>>>0);
        do {
         if ($647) {
          $a$2$ph$i = $a$1253$i;
         } else {
          $carry$0246$i = 0;$d$0247$i = $d$0245$i;
          while(1) {
           $648 = HEAP32[$d$0247$i>>2]|0;
           $649 = (_bitshift64Shl(($648|0),0,($646|0))|0);
           $650 = tempRet0;
           $651 = (_i64Add(($649|0),($650|0),($carry$0246$i|0),0)|0);
           $652 = tempRet0;
           $653 = (___uremdi3(($651|0),($652|0),1000000000,0)|0);
           $654 = tempRet0;
           HEAP32[$d$0247$i>>2] = $653;
           $655 = (___udivdi3(($651|0),($652|0),1000000000,0)|0);
           $656 = tempRet0;
           $d$0$i = ((($d$0247$i)) + -4|0);
           $657 = ($d$0$i>>>0)<($a$1253$i>>>0);
           if ($657) {
            $$lcssa461 = $655;
            break;
           } else {
            $carry$0246$i = $655;$d$0247$i = $d$0$i;
           }
          }
          $658 = ($$lcssa461|0)==(0);
          if ($658) {
           $a$2$ph$i = $a$1253$i;
           break;
          }
          $659 = ((($a$1253$i)) + -4|0);
          HEAP32[$659>>2] = $$lcssa461;
          $a$2$ph$i = $659;
         }
        } while(0);
        $z$2$i = $z$1252$i;
        while(1) {
         $660 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
         if (!($660)) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $661 = ((($z$2$i)) + -4|0);
         $662 = HEAP32[$661>>2]|0;
         $663 = ($662|0)==(0);
         if ($663) {
          $z$2$i = $661;
         } else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $664 = HEAP32[$e2$i>>2]|0;
        $665 = (($664) - ($646))|0;
        HEAP32[$e2$i>>2] = $665;
        $666 = ($665|0)>(0);
        if ($666) {
         $644 = $665;$a$1253$i = $a$2$ph$i;$z$1252$i = $z$2$i$lcssa;
        } else {
         $$pr146$i = $665;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i$lcssa;
         break;
        }
       }
      } else {
       $$pr146$i = $$pr$i;$a$1$lcssa$i = $$31$i;$z$1$lcssa$i = $$lcssa460;
      }
      $667 = ($$pr146$i|0)<(0);
      L212: do {
       if ($667) {
        $668 = (($$p$i) + 25)|0;
        $669 = (($668|0) / 9)&-1;
        $670 = (($669) + 1)|0;
        $671 = ($476|0)==(102);
        if (!($671)) {
         $704 = $$pr146$i;$a$3240$i = $a$1$lcssa$i;$z$3239$i = $z$1$lcssa$i;
         while(1) {
          $703 = (0 - ($704))|0;
          $705 = ($703|0)>(9);
          $706 = $705 ? 9 : $703;
          $707 = ($a$3240$i>>>0)<($z$3239$i>>>0);
          do {
           if ($707) {
            $711 = 1 << $706;
            $712 = (($711) + -1)|0;
            $713 = 1000000000 >>> $706;
            $carry3$0234$i = 0;$d$1233$i = $a$3240$i;
            while(1) {
             $714 = HEAP32[$d$1233$i>>2]|0;
             $715 = $714 & $712;
             $716 = $714 >>> $706;
             $717 = (($716) + ($carry3$0234$i))|0;
             HEAP32[$d$1233$i>>2] = $717;
             $718 = Math_imul($715, $713)|0;
             $719 = ((($d$1233$i)) + 4|0);
             $720 = ($719>>>0)<($z$3239$i>>>0);
             if ($720) {
              $carry3$0234$i = $718;$d$1233$i = $719;
             } else {
              $$lcssa463 = $718;
              break;
             }
            }
            $721 = HEAP32[$a$3240$i>>2]|0;
            $722 = ($721|0)==(0);
            $723 = ((($a$3240$i)) + 4|0);
            $$a$3$i = $722 ? $723 : $a$3240$i;
            $724 = ($$lcssa463|0)==(0);
            if ($724) {
             $$a$3306$i = $$a$3$i;$z$4$i = $z$3239$i;
             break;
            }
            $725 = ((($z$3239$i)) + 4|0);
            HEAP32[$z$3239$i>>2] = $$lcssa463;
            $$a$3306$i = $$a$3$i;$z$4$i = $725;
           } else {
            $708 = HEAP32[$a$3240$i>>2]|0;
            $709 = ($708|0)==(0);
            $710 = ((($a$3240$i)) + 4|0);
            $$a$3305$i = $709 ? $710 : $a$3240$i;
            $$a$3306$i = $$a$3305$i;$z$4$i = $z$3239$i;
           }
          } while(0);
          $726 = $z$4$i;
          $727 = $$a$3306$i;
          $728 = (($726) - ($727))|0;
          $729 = $728 >> 2;
          $730 = ($729|0)>($670|0);
          $731 = (($$a$3306$i) + ($670<<2)|0);
          $$z$4$i = $730 ? $731 : $z$4$i;
          $732 = HEAP32[$e2$i>>2]|0;
          $733 = (($732) + ($706))|0;
          HEAP32[$e2$i>>2] = $733;
          $734 = ($733|0)<(0);
          if ($734) {
           $704 = $733;$a$3240$i = $$a$3306$i;$z$3239$i = $$z$4$i;
          } else {
           $a$3$lcssa$i = $$a$3306$i;$z$3$lcssa$i = $$z$4$i;
           break L212;
          }
         }
        }
        $672 = (($$31$i) + ($670<<2)|0);
        $674 = $$pr146$i;$a$3240$us$i = $a$1$lcssa$i;$z$3239$us$i = $z$1$lcssa$i;
        while(1) {
         $673 = (0 - ($674))|0;
         $675 = ($673|0)>(9);
         $676 = $675 ? 9 : $673;
         $677 = ($a$3240$us$i>>>0)<($z$3239$us$i>>>0);
         do {
          if ($677) {
           $702 = 1 << $676;
           $695 = (($702) + -1)|0;
           $699 = 1000000000 >>> $676;
           $carry3$0234$us$i = 0;$d$1233$us$i = $a$3240$us$i;
           while(1) {
            $693 = HEAP32[$d$1233$us$i>>2]|0;
            $694 = $693 & $695;
            $696 = $693 >>> $676;
            $697 = (($696) + ($carry3$0234$us$i))|0;
            HEAP32[$d$1233$us$i>>2] = $697;
            $698 = Math_imul($694, $699)|0;
            $700 = ((($d$1233$us$i)) + 4|0);
            $701 = ($700>>>0)<($z$3239$us$i>>>0);
            if ($701) {
             $carry3$0234$us$i = $698;$d$1233$us$i = $700;
            } else {
             $$lcssa464 = $698;
             break;
            }
           }
           $681 = HEAP32[$a$3240$us$i>>2]|0;
           $682 = ($681|0)==(0);
           $683 = ((($a$3240$us$i)) + 4|0);
           $$a$3$us$i = $682 ? $683 : $a$3240$us$i;
           $684 = ($$lcssa464|0)==(0);
           if ($684) {
            $$a$3$us304$i = $$a$3$us$i;$z$4$us$i = $z$3239$us$i;
            break;
           }
           $685 = ((($z$3239$us$i)) + 4|0);
           HEAP32[$z$3239$us$i>>2] = $$lcssa464;
           $$a$3$us304$i = $$a$3$us$i;$z$4$us$i = $685;
          } else {
           $678 = HEAP32[$a$3240$us$i>>2]|0;
           $679 = ($678|0)==(0);
           $680 = ((($a$3240$us$i)) + 4|0);
           $$a$3$us303$i = $679 ? $680 : $a$3240$us$i;
           $$a$3$us304$i = $$a$3$us303$i;$z$4$us$i = $z$3239$us$i;
          }
         } while(0);
         $686 = $z$4$us$i;
         $687 = (($686) - ($636))|0;
         $688 = $687 >> 2;
         $689 = ($688|0)>($670|0);
         $$z$4$us$i = $689 ? $672 : $z$4$us$i;
         $690 = HEAP32[$e2$i>>2]|0;
         $691 = (($690) + ($676))|0;
         HEAP32[$e2$i>>2] = $691;
         $692 = ($691|0)<(0);
         if ($692) {
          $674 = $691;$a$3240$us$i = $$a$3$us304$i;$z$3239$us$i = $$z$4$us$i;
         } else {
          $a$3$lcssa$i = $$a$3$us304$i;$z$3$lcssa$i = $$z$4$us$i;
          break;
         }
        }
       } else {
        $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
       }
      } while(0);
      $735 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
      do {
       if ($735) {
        $736 = $a$3$lcssa$i;
        $737 = (($636) - ($736))|0;
        $738 = $737 >> 2;
        $739 = ($738*9)|0;
        $740 = HEAP32[$a$3$lcssa$i>>2]|0;
        $741 = ($740>>>0)<(10);
        if ($741) {
         $e$1$i = $739;
         break;
        } else {
         $e$0229$i = $739;$i$0228$i = 10;
        }
        while(1) {
         $742 = ($i$0228$i*10)|0;
         $743 = (($e$0229$i) + 1)|0;
         $744 = ($740>>>0)<($742>>>0);
         if ($744) {
          $e$1$i = $743;
          break;
         } else {
          $e$0229$i = $743;$i$0228$i = $742;
         }
        }
       } else {
        $e$1$i = 0;
       }
      } while(0);
      $745 = ($476|0)!=(102);
      $746 = $745 ? $e$1$i : 0;
      $747 = (($$p$i) - ($746))|0;
      $748 = ($476|0)==(103);
      $749 = ($$p$i|0)!=(0);
      $750 = $749 & $748;
      $$neg151$i = $750 << 31 >> 31;
      $751 = (($747) + ($$neg151$i))|0;
      $752 = $z$3$lcssa$i;
      $753 = (($752) - ($636))|0;
      $754 = $753 >> 2;
      $755 = ($754*9)|0;
      $756 = (($755) + -9)|0;
      $757 = ($751|0)<($756|0);
      if ($757) {
       $758 = (($751) + 9216)|0;
       $759 = (($758|0) / 9)&-1;
       $$sum$i = (($759) + -1023)|0;
       $760 = (($$31$i) + ($$sum$i<<2)|0);
       $761 = (($758|0) % 9)&-1;
       $j$0221$i = (($761) + 1)|0;
       $762 = ($j$0221$i|0)<(9);
       if ($762) {
        $i$1222$i = 10;$j$0223$i = $j$0221$i;
        while(1) {
         $763 = ($i$1222$i*10)|0;
         $j$0$i = (($j$0223$i) + 1)|0;
         $exitcond$i = ($j$0$i|0)==(9);
         if ($exitcond$i) {
          $i$1$lcssa$i = $763;
          break;
         } else {
          $i$1222$i = $763;$j$0223$i = $j$0$i;
         }
        }
       } else {
        $i$1$lcssa$i = 10;
       }
       $764 = HEAP32[$760>>2]|0;
       $765 = (($764>>>0) % ($i$1$lcssa$i>>>0))&-1;
       $766 = ($765|0)==(0);
       if ($766) {
        $$sum15$i = (($759) + -1022)|0;
        $767 = (($$31$i) + ($$sum15$i<<2)|0);
        $768 = ($767|0)==($z$3$lcssa$i|0);
        if ($768) {
         $a$7$i = $a$3$lcssa$i;$d$3$i = $760;$e$3$i = $e$1$i;
        } else {
         label = 221;
        }
       } else {
        label = 221;
       }
       do {
        if ((label|0) == 221) {
         label = 0;
         $769 = (($764>>>0) / ($i$1$lcssa$i>>>0))&-1;
         $770 = $769 & 1;
         $771 = ($770|0)==(0);
         $$20$i = $771 ? 9007199254740992.0 : 9007199254740994.0;
         $772 = (($i$1$lcssa$i|0) / 2)&-1;
         $773 = ($765>>>0)<($772>>>0);
         do {
          if ($773) {
           $small$0$i = 0.5;
          } else {
           $774 = ($765|0)==($772|0);
           if ($774) {
            $$sum16$i = (($759) + -1022)|0;
            $775 = (($$31$i) + ($$sum16$i<<2)|0);
            $776 = ($775|0)==($z$3$lcssa$i|0);
            if ($776) {
             $small$0$i = 1.0;
             break;
            }
           }
           $small$0$i = 1.5;
          }
         } while(0);
         $777 = ($pl$0$i|0)==(0);
         do {
          if ($777) {
           $round6$1$i = $$20$i;$small$1$i = $small$0$i;
          } else {
           $778 = HEAP8[$prefix$0$i>>0]|0;
           $779 = ($778<<24>>24)==(45);
           if (!($779)) {
            $round6$1$i = $$20$i;$small$1$i = $small$0$i;
            break;
           }
           $780 = -$$20$i;
           $781 = -$small$0$i;
           $round6$1$i = $780;$small$1$i = $781;
          }
         } while(0);
         $782 = (($764) - ($765))|0;
         HEAP32[$760>>2] = $782;
         $783 = $round6$1$i + $small$1$i;
         $784 = $783 != $round6$1$i;
         if (!($784)) {
          $a$7$i = $a$3$lcssa$i;$d$3$i = $760;$e$3$i = $e$1$i;
          break;
         }
         $785 = (($782) + ($i$1$lcssa$i))|0;
         HEAP32[$760>>2] = $785;
         $786 = ($785>>>0)>(999999999);
         if ($786) {
          $a$5215$i = $a$3$lcssa$i;$d$2214$i = $760;
          while(1) {
           $787 = ((($d$2214$i)) + -4|0);
           HEAP32[$d$2214$i>>2] = 0;
           $788 = ($787>>>0)<($a$5215$i>>>0);
           if ($788) {
            $789 = ((($a$5215$i)) + -4|0);
            HEAP32[$789>>2] = 0;
            $a$6$i = $789;
           } else {
            $a$6$i = $a$5215$i;
           }
           $790 = HEAP32[$787>>2]|0;
           $791 = (($790) + 1)|0;
           HEAP32[$787>>2] = $791;
           $792 = ($791>>>0)>(999999999);
           if ($792) {
            $a$5215$i = $a$6$i;$d$2214$i = $787;
           } else {
            $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $787;
            break;
           }
          }
         } else {
          $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $760;
         }
         $793 = $a$5$lcssa$i;
         $794 = (($636) - ($793))|0;
         $795 = $794 >> 2;
         $796 = ($795*9)|0;
         $797 = HEAP32[$a$5$lcssa$i>>2]|0;
         $798 = ($797>>>0)<(10);
         if ($798) {
          $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $796;
          break;
         } else {
          $e$2210$i = $796;$i$2209$i = 10;
         }
         while(1) {
          $799 = ($i$2209$i*10)|0;
          $800 = (($e$2210$i) + 1)|0;
          $801 = ($797>>>0)<($799>>>0);
          if ($801) {
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $800;
           break;
          } else {
           $e$2210$i = $800;$i$2209$i = $799;
          }
         }
        }
       } while(0);
       $802 = ((($d$3$i)) + 4|0);
       $803 = ($z$3$lcssa$i>>>0)>($802>>>0);
       $$z$3$i = $803 ? $802 : $z$3$lcssa$i;
       $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
      }
      $804 = (0 - ($e$4$ph$i))|0;
      $z$6$i = $z$6$ph$i;
      while(1) {
       $805 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
       if (!($805)) {
        $$lcssa275$i = 0;$z$6$i$lcssa = $z$6$i;
        break;
       }
       $806 = ((($z$6$i)) + -4|0);
       $807 = HEAP32[$806>>2]|0;
       $808 = ($807|0)==(0);
       if ($808) {
        $z$6$i = $806;
       } else {
        $$lcssa275$i = 1;$z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do {
       if ($748) {
        $809 = $749&1;
        $810 = $809 ^ 1;
        $$p$$i = (($810) + ($$p$i))|0;
        $811 = ($$p$$i|0)>($e$4$ph$i|0);
        $812 = ($e$4$ph$i|0)>(-5);
        $or$cond6$i = $811 & $812;
        if ($or$cond6$i) {
         $813 = (($t$0) + -1)|0;
         $$neg152$i = (($$p$$i) + -1)|0;
         $814 = (($$neg152$i) - ($e$4$ph$i))|0;
         $$013$i = $813;$$210$i = $814;
        } else {
         $815 = (($t$0) + -2)|0;
         $816 = (($$p$$i) + -1)|0;
         $$013$i = $815;$$210$i = $816;
        }
        $817 = $fl$1$ & 8;
        $818 = ($817|0)==(0);
        if (!($818)) {
         $$114$i = $$013$i;$$311$i = $$210$i;$$pre$phi302$iZ2D = $817;
         break;
        }
        do {
         if ($$lcssa275$i) {
          $819 = ((($z$6$i$lcssa)) + -4|0);
          $820 = HEAP32[$819>>2]|0;
          $821 = ($820|0)==(0);
          if ($821) {
           $j$2$i = 9;
           break;
          }
          $822 = (($820>>>0) % 10)&-1;
          $823 = ($822|0)==(0);
          if ($823) {
           $i$3205$i = 10;$j$1206$i = 0;
          } else {
           $j$2$i = 0;
           break;
          }
          while(1) {
           $824 = ($i$3205$i*10)|0;
           $825 = (($j$1206$i) + 1)|0;
           $826 = (($820>>>0) % ($824>>>0))&-1;
           $827 = ($826|0)==(0);
           if ($827) {
            $i$3205$i = $824;$j$1206$i = $825;
           } else {
            $j$2$i = $825;
            break;
           }
          }
         } else {
          $j$2$i = 9;
         }
        } while(0);
        $828 = $$013$i | 32;
        $829 = ($828|0)==(102);
        $830 = $z$6$i$lcssa;
        $831 = (($830) - ($636))|0;
        $832 = $831 >> 2;
        $833 = ($832*9)|0;
        $834 = (($833) + -9)|0;
        if ($829) {
         $835 = (($834) - ($j$2$i))|0;
         $836 = ($835|0)<(0);
         $$21$i = $836 ? 0 : $835;
         $837 = ($$210$i|0)<($$21$i|0);
         $$210$$22$i = $837 ? $$210$i : $$21$i;
         $$114$i = $$013$i;$$311$i = $$210$$22$i;$$pre$phi302$iZ2D = 0;
         break;
        } else {
         $838 = (($834) + ($e$4$ph$i))|0;
         $839 = (($838) - ($j$2$i))|0;
         $840 = ($839|0)<(0);
         $$23$i = $840 ? 0 : $839;
         $841 = ($$210$i|0)<($$23$i|0);
         $$210$$24$i = $841 ? $$210$i : $$23$i;
         $$114$i = $$013$i;$$311$i = $$210$$24$i;$$pre$phi302$iZ2D = 0;
         break;
        }
       } else {
        $$pre301$i = $fl$1$ & 8;
        $$114$i = $t$0;$$311$i = $$p$i;$$pre$phi302$iZ2D = $$pre301$i;
       }
      } while(0);
      $842 = $$311$i | $$pre$phi302$iZ2D;
      $843 = ($842|0)!=(0);
      $844 = $843&1;
      $845 = $$114$i | 32;
      $846 = ($845|0)==(102);
      if ($846) {
       $847 = ($e$4$ph$i|0)>(0);
       $848 = $847 ? $e$4$ph$i : 0;
       $$pn$i = $848;$estr$2$i = 0;
      } else {
       $849 = ($e$4$ph$i|0)<(0);
       $850 = $849 ? $804 : $e$4$ph$i;
       $851 = ($850|0)<(0);
       if ($851) {
        $852 = ($850|0)<(0);
        $853 = $852 << 31 >> 31;
        $$05$i79$i = $7;$854 = $850;$855 = $853;
        while(1) {
         $856 = (___uremdi3(($854|0),($855|0),10,0)|0);
         $857 = tempRet0;
         $858 = $856 | 48;
         $859 = $858&255;
         $860 = ((($$05$i79$i)) + -1|0);
         HEAP8[$860>>0] = $859;
         $861 = (___udivdi3(($854|0),($855|0),10,0)|0);
         $862 = tempRet0;
         $863 = ($855>>>0)>(9);
         $864 = ($854>>>0)>(4294967295);
         $865 = ($855|0)==(9);
         $866 = $865 & $864;
         $867 = $863 | $866;
         if ($867) {
          $$05$i79$i = $860;$854 = $861;$855 = $862;
         } else {
          $$lcssa470 = $860;$1185 = $861;$1186 = $862;
          break;
         }
        }
        $$0$lcssa$i84$i = $$lcssa470;$$01$lcssa$off0$i85$i = $1185;
       } else {
        $$0$lcssa$i84$i = $7;$$01$lcssa$off0$i85$i = $850;
       }
       $868 = ($$01$lcssa$off0$i85$i|0)==(0);
       if ($868) {
        $estr$1$ph$i = $$0$lcssa$i84$i;
       } else {
        $$12$i87$i = $$0$lcssa$i84$i;$y$03$i86$i = $$01$lcssa$off0$i85$i;
        while(1) {
         $869 = (($y$03$i86$i>>>0) % 10)&-1;
         $870 = $869 | 48;
         $871 = $870&255;
         $872 = ((($$12$i87$i)) + -1|0);
         HEAP8[$872>>0] = $871;
         $873 = (($y$03$i86$i>>>0) / 10)&-1;
         $874 = ($y$03$i86$i>>>0)<(10);
         if ($874) {
          $estr$1$ph$i = $872;
          break;
         } else {
          $$12$i87$i = $872;$y$03$i86$i = $873;
         }
        }
       }
       $875 = $estr$1$ph$i;
       $876 = (($9) - ($875))|0;
       $877 = ($876|0)<(2);
       if ($877) {
        $estr$1201$i = $estr$1$ph$i;
        while(1) {
         $878 = ((($estr$1201$i)) + -1|0);
         HEAP8[$878>>0] = 48;
         $879 = $878;
         $880 = (($9) - ($879))|0;
         $881 = ($880|0)<(2);
         if ($881) {
          $estr$1201$i = $878;
         } else {
          $estr$1$lcssa$i = $878;
          break;
         }
        }
       } else {
        $estr$1$lcssa$i = $estr$1$ph$i;
       }
       $882 = $e$4$ph$i >> 31;
       $883 = $882 & 2;
       $884 = (($883) + 43)|0;
       $885 = $884&255;
       $886 = ((($estr$1$lcssa$i)) + -1|0);
       HEAP8[$886>>0] = $885;
       $887 = $$114$i&255;
       $888 = ((($estr$1$lcssa$i)) + -2|0);
       HEAP8[$888>>0] = $887;
       $889 = $888;
       $890 = (($9) - ($889))|0;
       $$pn$i = $890;$estr$2$i = $888;
      }
      $891 = (($pl$0$i) + 1)|0;
      $892 = (($891) + ($$311$i))|0;
      $l$1$i = (($892) + ($844))|0;
      $893 = (($l$1$i) + ($$pn$i))|0;
      $894 = $fl$1$ & 73728;
      $895 = ($894|0)==(0);
      $896 = ($w$1|0)>($893|0);
      $or$cond$i93$i = $895 & $896;
      if ($or$cond$i93$i) {
       $897 = (($w$1) - ($893))|0;
       $898 = ($897>>>0)>(256);
       $899 = $898 ? 256 : $897;
       _memset(($pad$i|0),32,($899|0))|0;
       $900 = ($897>>>0)>(255);
       if ($900) {
        $$01$i95$i = $897;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $901 = (($$01$i95$i) + -256)|0;
         $902 = ($901>>>0)>(255);
         if ($902) {
          $$01$i95$i = $901;
         } else {
          break;
         }
        }
        $903 = $897 & 255;
        $$0$lcssa$i97$i = $903;
       } else {
        $$0$lcssa$i97$i = $897;
       }
       (___fwritex($pad$i,$$0$lcssa$i97$i,$f)|0);
      }
      (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
      $904 = ($894|0)==(65536);
      $or$cond$i100$i = $904 & $896;
      if ($or$cond$i100$i) {
       $905 = (($w$1) - ($893))|0;
       $906 = ($905>>>0)>(256);
       $907 = $906 ? 256 : $905;
       _memset(($pad$i|0),48,($907|0))|0;
       $908 = ($905>>>0)>(255);
       if ($908) {
        $$01$i102$i = $905;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $909 = (($$01$i102$i) + -256)|0;
         $910 = ($909>>>0)>(255);
         if ($910) {
          $$01$i102$i = $909;
         } else {
          break;
         }
        }
        $911 = $905 & 255;
        $$0$lcssa$i104$i = $911;
       } else {
        $$0$lcssa$i104$i = $905;
       }
       (___fwritex($pad$i,$$0$lcssa$i104$i,$f)|0);
      }
      if ($846) {
       $912 = ($a$8$ph$i>>>0)>($$31$i>>>0);
       $r$0$a$8$i = $912 ? $$31$i : $a$8$ph$i;
       $d$4191$i = $r$0$a$8$i;
       while(1) {
        $913 = HEAP32[$d$4191$i>>2]|0;
        $914 = ($913|0)==(0);
        if ($914) {
         $$1$lcssa$i112$i = $14;
        } else {
         $$12$i110$i = $14;$y$03$i109$i = $913;
         while(1) {
          $915 = (($y$03$i109$i>>>0) % 10)&-1;
          $916 = $915 | 48;
          $917 = $916&255;
          $918 = ((($$12$i110$i)) + -1|0);
          HEAP8[$918>>0] = $917;
          $919 = (($y$03$i109$i>>>0) / 10)&-1;
          $920 = ($y$03$i109$i>>>0)<(10);
          if ($920) {
           $$1$lcssa$i112$i = $918;
           break;
          } else {
           $$12$i110$i = $918;$y$03$i109$i = $919;
          }
         }
        }
        $921 = ($d$4191$i|0)==($r$0$a$8$i|0);
        do {
         if ($921) {
          $925 = ($$1$lcssa$i112$i|0)==($14|0);
          if (!($925)) {
           $s7$1$i = $$1$lcssa$i112$i;
           break;
          }
          HEAP8[$16>>0] = 48;
          $s7$1$i = $16;
         } else {
          $922 = ($$1$lcssa$i112$i>>>0)>($buf$i>>>0);
          if ($922) {
           $s7$0188$i = $$1$lcssa$i112$i;
          } else {
           $s7$1$i = $$1$lcssa$i112$i;
           break;
          }
          while(1) {
           $923 = ((($s7$0188$i)) + -1|0);
           HEAP8[$923>>0] = 48;
           $924 = ($923>>>0)>($buf$i>>>0);
           if ($924) {
            $s7$0188$i = $923;
           } else {
            $s7$1$i = $923;
            break;
           }
          }
         }
        } while(0);
        $926 = $s7$1$i;
        $927 = (($15) - ($926))|0;
        (___fwritex($s7$1$i,$927,$f)|0);
        $928 = ((($d$4191$i)) + 4|0);
        $929 = ($928>>>0)>($$31$i>>>0);
        if ($929) {
         $$lcssa479 = $928;
         break;
        } else {
         $d$4191$i = $928;
        }
       }
       $930 = ($842|0)==(0);
       if (!($930)) {
        (___fwritex(4616,1,$f)|0);
       }
       $931 = ($$lcssa479>>>0)<($z$6$i$lcssa>>>0);
       $932 = ($$311$i|0)>(0);
       $933 = $932 & $931;
       if ($933) {
        $$412184$i = $$311$i;$d$5183$i = $$lcssa479;
        while(1) {
         $934 = HEAP32[$d$5183$i>>2]|0;
         $935 = ($934|0)==(0);
         if ($935) {
          $s8$0180$i = $14;
          label = 289;
         } else {
          $$12$i119$i = $14;$y$03$i118$i = $934;
          while(1) {
           $936 = (($y$03$i118$i>>>0) % 10)&-1;
           $937 = $936 | 48;
           $938 = $937&255;
           $939 = ((($$12$i119$i)) + -1|0);
           HEAP8[$939>>0] = $938;
           $940 = (($y$03$i118$i>>>0) / 10)&-1;
           $941 = ($y$03$i118$i>>>0)<(10);
           if ($941) {
            $$lcssa480 = $939;
            break;
           } else {
            $$12$i119$i = $939;$y$03$i118$i = $940;
           }
          }
          $942 = ($$lcssa480>>>0)>($buf$i>>>0);
          if ($942) {
           $s8$0180$i = $$lcssa480;
           label = 289;
          } else {
           $s8$0$lcssa$i = $$lcssa480;
          }
         }
         if ((label|0) == 289) {
          while(1) {
           label = 0;
           $943 = ((($s8$0180$i)) + -1|0);
           HEAP8[$943>>0] = 48;
           $944 = ($943>>>0)>($buf$i>>>0);
           if ($944) {
            $s8$0180$i = $943;
            label = 289;
           } else {
            $s8$0$lcssa$i = $943;
            break;
           }
          }
         }
         $945 = ($$412184$i|0)>(9);
         $946 = $945 ? 9 : $$412184$i;
         (___fwritex($s8$0$lcssa$i,$946,$f)|0);
         $947 = ((($d$5183$i)) + 4|0);
         $948 = (($$412184$i) + -9)|0;
         $949 = ($947>>>0)<($z$6$i$lcssa>>>0);
         $950 = $945 & $949;
         if ($950) {
          $$412184$i = $948;$d$5183$i = $947;
         } else {
          $$412$lcssa$i = $948;
          break;
         }
        }
       } else {
        $$412$lcssa$i = $$311$i;
       }
       $951 = ($$412$lcssa$i|0)>(0);
       if ($951) {
        $952 = ($$412$lcssa$i>>>0)>(256);
        $953 = $952 ? 256 : $$412$lcssa$i;
        _memset(($pad$i|0),48,($953|0))|0;
        $954 = ($$412$lcssa$i>>>0)>(255);
        if ($954) {
         $$01$i126$i = $$412$lcssa$i;
         while(1) {
          (___fwritex($pad$i,256,$f)|0);
          $955 = (($$01$i126$i) + -256)|0;
          $956 = ($955>>>0)>(255);
          if ($956) {
           $$01$i126$i = $955;
          } else {
           break;
          }
         }
         $957 = $$412$lcssa$i & 255;
         $$0$lcssa$i128$i = $957;
        } else {
         $$0$lcssa$i128$i = $$412$lcssa$i;
        }
        (___fwritex($pad$i,$$0$lcssa$i128$i,$f)|0);
       }
      } else {
       $958 = ((($a$8$ph$i)) + 4|0);
       $z$6$$i = $$lcssa275$i ? $z$6$i$lcssa : $958;
       $959 = ($$311$i|0)>(-1);
       do {
        if ($959) {
         $960 = ($$pre$phi302$iZ2D|0)==(0);
         $$5196$i = $$311$i;$d$6195$i = $a$8$ph$i;
         while(1) {
          $961 = HEAP32[$d$6195$i>>2]|0;
          $962 = ($961|0)==(0);
          if ($962) {
           label = 303;
          } else {
           $$12$i134$i = $14;$y$03$i133$i = $961;
           while(1) {
            $963 = (($y$03$i133$i>>>0) % 10)&-1;
            $964 = $963 | 48;
            $965 = $964&255;
            $966 = ((($$12$i134$i)) + -1|0);
            HEAP8[$966>>0] = $965;
            $967 = (($y$03$i133$i>>>0) / 10)&-1;
            $968 = ($y$03$i133$i>>>0)<(10);
            if ($968) {
             $$12$i134$i$lcssa = $$12$i134$i;$$lcssa474 = $966;
             break;
            } else {
             $$12$i134$i = $966;$y$03$i133$i = $967;
            }
           }
           $969 = ($$lcssa474|0)==($14|0);
           if ($969) {
            label = 303;
           } else {
            $1187 = $$12$i134$i$lcssa;$s9$0$i = $$lcssa474;
           }
          }
          if ((label|0) == 303) {
           label = 0;
           HEAP8[$16>>0] = 48;
           $1187 = $14;$s9$0$i = $16;
          }
          $970 = ($d$6195$i|0)==($a$8$ph$i|0);
          do {
           if ($970) {
            (___fwritex($s9$0$i,1,$f)|0);
            $974 = ($$5196$i|0)<(1);
            $or$cond29$i = $960 & $974;
            if ($or$cond29$i) {
             $s9$2$i = $1187;
             break;
            }
            (___fwritex(4616,1,$f)|0);
            $s9$2$i = $1187;
           } else {
            $971 = ($s9$0$i>>>0)>($buf$i>>>0);
            if ($971) {
             $s9$1192$i = $s9$0$i;
            } else {
             $s9$2$i = $s9$0$i;
             break;
            }
            while(1) {
             $972 = ((($s9$1192$i)) + -1|0);
             HEAP8[$972>>0] = 48;
             $973 = ($972>>>0)>($buf$i>>>0);
             if ($973) {
              $s9$1192$i = $972;
             } else {
              $s9$2$i = $972;
              break;
             }
            }
           }
          } while(0);
          $975 = $s9$2$i;
          $976 = (($15) - ($975))|0;
          $977 = ($$5196$i|0)>($976|0);
          $978 = $977 ? $976 : $$5196$i;
          (___fwritex($s9$2$i,$978,$f)|0);
          $979 = (($$5196$i) - ($976))|0;
          $980 = ((($d$6195$i)) + 4|0);
          $981 = ($980>>>0)<($z$6$$i>>>0);
          $982 = ($979|0)>(-1);
          $983 = $981 & $982;
          if ($983) {
           $$5196$i = $979;$d$6195$i = $980;
          } else {
           $$lcssa476 = $979;
           break;
          }
         }
         $984 = ($$lcssa476|0)>(0);
         if (!($984)) {
          break;
         }
         $985 = ($$lcssa476>>>0)>(256);
         $986 = $985 ? 256 : $$lcssa476;
         _memset(($pad$i|0),48,($986|0))|0;
         $987 = ($$lcssa476>>>0)>(255);
         if ($987) {
          $$01$i141$i = $$lcssa476;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $988 = (($$01$i141$i) + -256)|0;
           $989 = ($988>>>0)>(255);
           if ($989) {
            $$01$i141$i = $988;
           } else {
            break;
           }
          }
          $990 = $$lcssa476 & 255;
          $$0$lcssa$i143$i = $990;
         } else {
          $$0$lcssa$i143$i = $$lcssa476;
         }
         (___fwritex($pad$i,$$0$lcssa$i143$i,$f)|0);
        } else {
        }
       } while(0);
       $991 = $estr$2$i;
       $992 = (($9) - ($991))|0;
       (___fwritex($estr$2$i,$992,$f)|0);
      }
      $993 = ($894|0)==(8192);
      $or$cond$i$i = $993 & $896;
      if ($or$cond$i$i) {
       $994 = (($w$1) - ($893))|0;
       $995 = ($994>>>0)>(256);
       $996 = $995 ? 256 : $994;
       _memset(($pad$i|0),32,($996|0))|0;
       $997 = ($994>>>0)>(255);
       if ($997) {
        $$01$i$i = $994;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $998 = (($$01$i$i) + -256)|0;
         $999 = ($998>>>0)>(255);
         if ($999) {
          $$01$i$i = $998;
         } else {
          break;
         }
        }
        $1000 = $994 & 255;
        $$0$lcssa$i$i = $1000;
       } else {
        $$0$lcssa$i$i = $994;
       }
       (___fwritex($pad$i,$$0$lcssa$i$i,$f)|0);
      }
      $w$30$i = $896 ? $w$1 : $893;
      $$0$i = $w$30$i;
     } else {
      $445 = $t$0 & 32;
      $446 = ($445|0)!=(0);
      $447 = $446 ? 4584 : 4592;
      $448 = ($$07$i != $$07$i) | (0.0 != 0.0);
      $449 = $446 ? 4600 : 4608;
      $pl$1$i = $448 ? 0 : $pl$0$i;
      $s1$0$i = $448 ? $449 : $447;
      $450 = (($pl$1$i) + 3)|0;
      $451 = $fl$1$ & 8192;
      $452 = ($451|0)==(0);
      $453 = ($w$1|0)>($450|0);
      $or$cond$i35$i = $452 & $453;
      if ($or$cond$i35$i) {
       $454 = (($w$1) - ($450))|0;
       $455 = ($454>>>0)>(256);
       $456 = $455 ? 256 : $454;
       _memset(($pad$i|0),32,($456|0))|0;
       $457 = ($454>>>0)>(255);
       if ($457) {
        $$01$i37$i = $454;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $458 = (($$01$i37$i) + -256)|0;
         $459 = ($458>>>0)>(255);
         if ($459) {
          $$01$i37$i = $458;
         } else {
          break;
         }
        }
        $460 = $454 & 255;
        $$0$lcssa$i39$i = $460;
       } else {
        $$0$lcssa$i39$i = $454;
       }
       (___fwritex($pad$i,$$0$lcssa$i39$i,$f)|0);
      }
      (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
      (___fwritex($s1$0$i,3,$f)|0);
      $461 = $fl$1$ & 73728;
      $462 = ($461|0)==(8192);
      $or$cond$i42$i = $462 & $453;
      if ($or$cond$i42$i) {
       $463 = (($w$1) - ($450))|0;
       $464 = ($463>>>0)>(256);
       $465 = $464 ? 256 : $463;
       _memset(($pad$i|0),32,($465|0))|0;
       $466 = ($463>>>0)>(255);
       if ($466) {
        $$01$i44$i = $463;
        while(1) {
         (___fwritex($pad$i,256,$f)|0);
         $467 = (($$01$i44$i) + -256)|0;
         $468 = ($467>>>0)>(255);
         if ($468) {
          $$01$i44$i = $467;
         } else {
          break;
         }
        }
        $469 = $463 & 255;
        $$0$lcssa$i46$i = $469;
       } else {
        $$0$lcssa$i46$i = $463;
       }
       (___fwritex($pad$i,$$0$lcssa$i46$i,$f)|0);
      }
      $470 = $453 ? $w$1 : $450;
      $$0$i = $470;
     }
    } while(0);
    $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $$0$i;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   case 99:  {
    $378 = $264&255;
    HEAP8[$4>>0] = $378;
    $1175 = $291;$1176 = $264;$a$2 = $4;$fl$6 = $263;$p$5 = 1;$pl$2 = 0;$prefix$2 = 4536;$z$2 = $2;
    break;
   }
   case 109:  {
    $379 = (___errno_location()|0);
    $380 = HEAP32[$379>>2]|0;
    $381 = (_strerror(($380|0))|0);
    $a$1 = $381;
    label = 94;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 73;
    break;
   }
   case 112:  {
    $286 = ($p$0>>>0)>(8);
    $287 = $286 ? $p$0 : 8;
    $288 = $fl$1$ | 8;
    $fl$3 = $288;$p$1 = $287;$t$1 = 120;
    label = 73;
    break;
   }
   case 110:  {
    switch ($st$0$lcssa456|0) {
    case 3:  {
     $274 = $cnt$1&65535;
     $275 = $264;
     HEAP16[$275>>1] = $274;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $276 = $cnt$1&255;
     $277 = $264;
     HEAP8[$277>>0] = $276;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $278 = $264;
     HEAP32[$278>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $266 = $264;
     HEAP32[$266>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $267 = ($cnt$1|0)<(0);
     $268 = $267 << 31 >> 31;
     $269 = $264;
     $270 = $269;
     $271 = $270;
     HEAP32[$271>>2] = $cnt$1;
     $272 = (($270) + 4)|0;
     $273 = $272;
     HEAP32[$273>>2] = $268;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $279 = ($cnt$1|0)<(0);
     $280 = $279 << 31 >> 31;
     $281 = $264;
     $282 = $281;
     $283 = $282;
     HEAP32[$283>>2] = $cnt$1;
     $284 = (($282) + 4)|0;
     $285 = $284;
     HEAP32[$285>>2] = $280;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 0:  {
     $265 = $264;
     HEAP32[$265>>2] = $cnt$1;
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $1169 = $291;$1170 = $264;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $37;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 111:  {
    $312 = ($264|0)==(0);
    $313 = ($291|0)==(0);
    $314 = $312 & $313;
    if ($314) {
     $$0$lcssa$i51 = $2;
    } else {
     $$03$i48 = $2;$316 = $264;$320 = $291;
     while(1) {
      $315 = $316 & 7;
      $317 = $315 | 48;
      $318 = $317&255;
      $319 = ((($$03$i48)) + -1|0);
      HEAP8[$319>>0] = $318;
      $321 = (_bitshift64Lshr(($316|0),($320|0),3)|0);
      $322 = tempRet0;
      $323 = ($321|0)==(0);
      $324 = ($322|0)==(0);
      $325 = $323 & $324;
      if ($325) {
       $$0$lcssa$i51 = $319;
       break;
      } else {
       $$03$i48 = $319;$316 = $321;$320 = $322;
      }
     }
    }
    $326 = $fl$1$ & 8;
    $327 = ($326|0)==(0);
    $or$cond19 = $327 | $314;
    $$24 = $or$cond19 ? 4536 : (4541);
    $328 = $or$cond19&1;
    $$25 = $328 ^ 1;
    $366 = $264;$368 = $291;$a$0 = $$0$lcssa$i51;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $$25;$prefix$1 = $$24;
    label = 89;
    break;
   }
   case 117:  {
    $336 = $291;$338 = $264;$pl$0 = 0;$prefix$0 = 4536;
    label = 84;
    break;
   }
   case 115:  {
    $382 = $264;
    $383 = ($264|0)!=(0);
    $384 = $383 ? $382 : 4552;
    $a$1 = $384;
    label = 94;
    break;
   }
   case 67:  {
    HEAP32[$wc>>2] = $264;
    HEAP32[$5>>2] = 0;
    $1179 = $wc;$1180 = $6;$p$4272 = -1;
    label = 97;
    break;
   }
   case 83:  {
    $391 = $264;
    $392 = ($p$0|0)==(0);
    if ($392) {
     $1181 = $264;$1182 = $391;$i$0$lcssa273 = 0;
     label = 102;
    } else {
     $1179 = $391;$1180 = $264;$p$4272 = $p$0;
     label = 97;
    }
    break;
   }
   case 105: case 100:  {
    $329 = ($291|0)<(0);
    if ($329) {
     $330 = (_i64Subtract(0,0,($264|0),($291|0))|0);
     $331 = tempRet0;
     $336 = $331;$338 = $330;$pl$0 = 1;$prefix$0 = 4536;
     label = 84;
     break L86;
    }
    $332 = $fl$1$ & 2048;
    $333 = ($332|0)==(0);
    if ($333) {
     $334 = $fl$1$ & 1;
     $335 = ($334|0)==(0);
     $$ = $335 ? 4536 : (4538);
     $336 = $291;$338 = $264;$pl$0 = $334;$prefix$0 = $$;
     label = 84;
    } else {
     $336 = $291;$338 = $264;$pl$0 = 1;$prefix$0 = (4537);
     label = 84;
    }
    break;
   }
   default: {
    $1175 = $291;$1176 = $264;$a$2 = $23;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4536;$z$2 = $2;
   }
   }
  } while(0);
  if ((label|0) == 73) {
   label = 0;
   $289 = $t$1 & 32;
   $290 = ($264|0)==(0);
   $292 = ($291|0)==(0);
   $293 = $290 & $292;
   if ($293) {
    $366 = $264;$368 = $291;$a$0 = $2;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4536;
    label = 89;
   } else {
    $$012$i = $2;$295 = $264;$302 = $291;
    while(1) {
     $294 = $295 & 15;
     $296 = (4520 + ($294)|0);
     $297 = HEAP8[$296>>0]|0;
     $298 = $297&255;
     $299 = $298 | $289;
     $300 = $299&255;
     $301 = ((($$012$i)) + -1|0);
     HEAP8[$301>>0] = $300;
     $303 = (_bitshift64Lshr(($295|0),($302|0),4)|0);
     $304 = tempRet0;
     $305 = ($303|0)==(0);
     $306 = ($304|0)==(0);
     $307 = $305 & $306;
     if ($307) {
      $$lcssa491 = $301;
      break;
     } else {
      $$012$i = $301;$295 = $303;$302 = $304;
     }
    }
    $308 = $fl$3 & 8;
    $309 = ($308|0)==(0);
    if ($309) {
     $366 = $264;$368 = $291;$a$0 = $$lcssa491;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4536;
     label = 89;
    } else {
     $310 = $t$1 >> 4;
     $311 = (4536 + ($310)|0);
     $366 = $264;$368 = $291;$a$0 = $$lcssa491;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $311;
     label = 89;
    }
   }
  }
  else if ((label|0) == 84) {
   label = 0;
   $337 = ($336>>>0)>(0);
   $339 = ($338>>>0)>(4294967295);
   $340 = ($336|0)==(0);
   $341 = $340 & $339;
   $342 = $337 | $341;
   if ($342) {
    $$05$i = $2;$343 = $338;$344 = $336;
    while(1) {
     $345 = (___uremdi3(($343|0),($344|0),10,0)|0);
     $346 = tempRet0;
     $347 = $345 | 48;
     $348 = $347&255;
     $349 = ((($$05$i)) + -1|0);
     HEAP8[$349>>0] = $348;
     $350 = (___udivdi3(($343|0),($344|0),10,0)|0);
     $351 = tempRet0;
     $352 = ($344>>>0)>(9);
     $353 = ($343>>>0)>(4294967295);
     $354 = ($344|0)==(9);
     $355 = $354 & $353;
     $356 = $352 | $355;
     if ($356) {
      $$05$i = $349;$343 = $350;$344 = $351;
     } else {
      $$lcssa487 = $349;$1177 = $350;$1178 = $351;
      break;
     }
    }
    $$0$lcssa$i53 = $$lcssa487;$$01$lcssa$off0$i = $1177;
   } else {
    $$0$lcssa$i53 = $2;$$01$lcssa$off0$i = $338;
   }
   $357 = ($$01$lcssa$off0$i|0)==(0);
   if ($357) {
    $366 = $338;$368 = $336;$a$0 = $$0$lcssa$i53;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 89;
   } else {
    $$12$i = $$0$lcssa$i53;$y$03$i = $$01$lcssa$off0$i;
    while(1) {
     $358 = (($y$03$i>>>0) % 10)&-1;
     $359 = $358 | 48;
     $360 = $359&255;
     $361 = ((($$12$i)) + -1|0);
     HEAP8[$361>>0] = $360;
     $362 = (($y$03$i>>>0) / 10)&-1;
     $363 = ($y$03$i>>>0)<(10);
     if ($363) {
      $366 = $338;$368 = $336;$a$0 = $361;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
      label = 89;
      break;
     } else {
      $$12$i = $361;$y$03$i = $362;
     }
    }
   }
  }
  else if ((label|0) == 94) {
   label = 0;
   $385 = (_memchr($a$1,0,$p$0)|0);
   $386 = ($385|0)==(0|0);
   $387 = $385;
   $388 = $a$1;
   $389 = (($387) - ($388))|0;
   $390 = (($a$1) + ($p$0)|0);
   $z$1 = $386 ? $390 : $385;
   $p$3 = $386 ? $p$0 : $389;
   $1175 = $291;$1176 = $264;$a$2 = $a$1;$fl$6 = $263;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 4536;$z$2 = $z$1;
  }
  else if ((label|0) == 97) {
   label = 0;
   $i$0175 = 0;$l$1174 = 0;$ws$0176 = $1179;
   while(1) {
    $393 = HEAP32[$ws$0176>>2]|0;
    $394 = ($393|0)==(0);
    if ($394) {
     $i$0$lcssa = $i$0175;$l$2 = $l$1174;
     break;
    }
    $395 = (_wctomb($mb,$393)|0);
    $396 = ($395|0)<(0);
    $397 = (($p$4272) - ($i$0175))|0;
    $398 = ($395>>>0)>($397>>>0);
    $or$cond22 = $396 | $398;
    if ($or$cond22) {
     $i$0$lcssa = $i$0175;$l$2 = $395;
     break;
    }
    $399 = ((($ws$0176)) + 4|0);
    $400 = (($395) + ($i$0175))|0;
    $401 = ($p$4272>>>0)>($400>>>0);
    if ($401) {
     $i$0175 = $400;$l$1174 = $395;$ws$0176 = $399;
    } else {
     $i$0$lcssa = $400;$l$2 = $395;
     break;
    }
   }
   $402 = ($l$2|0)<(0);
   if ($402) {
    $$0 = -1;
    label = 363;
    break;
   } else {
    $1181 = $1180;$1182 = $1179;$i$0$lcssa273 = $i$0$lcssa;
    label = 102;
   }
  }
  if ((label|0) == 89) {
   label = 0;
   $364 = ($p$2|0)>(-1);
   $365 = $fl$4 & -65537;
   $$fl$4 = $364 ? $365 : $fl$4;
   $367 = ($366|0)!=(0);
   $369 = ($368|0)!=(0);
   $370 = $367 | $369;
   $371 = ($p$2|0)!=(0);
   $or$cond = $370 | $371;
   if ($or$cond) {
    $372 = $a$0;
    $373 = (($3) - ($372))|0;
    $374 = $370&1;
    $375 = $374 ^ 1;
    $376 = (($375) + ($373))|0;
    $377 = ($p$2|0)>($376|0);
    $p$2$ = $377 ? $p$2 : $376;
    $1175 = $368;$1176 = $366;$a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   } else {
    $1175 = $368;$1176 = $366;$a$2 = $2;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   }
  }
  else if ((label|0) == 102) {
   label = 0;
   $403 = $fl$1$ & 73728;
   $404 = ($403|0)==(0);
   $405 = ($w$1|0)>($i$0$lcssa273|0);
   $or$cond$i64 = $404 & $405;
   if ($or$cond$i64) {
    $406 = (($w$1) - ($i$0$lcssa273))|0;
    $407 = ($406>>>0)>(256);
    $408 = $407 ? 256 : $406;
    _memset(($pad$i|0),32,($408|0))|0;
    $409 = ($406>>>0)>(255);
    if ($409) {
     $$01$i66 = $406;
     while(1) {
      (___fwritex($pad$i,256,$f)|0);
      $410 = (($$01$i66) + -256)|0;
      $411 = ($410>>>0)>(255);
      if ($411) {
       $$01$i66 = $410;
      } else {
       break;
      }
     }
     $412 = $406 & 255;
     $$0$lcssa$i68 = $412;
    } else {
     $$0$lcssa$i68 = $406;
    }
    (___fwritex($pad$i,$$0$lcssa$i68,$f)|0);
   }
   $413 = ($i$0$lcssa273|0)==(0);
   L465: do {
    if (!($413)) {
     $i$1186 = 0;$ws$1187 = $1182;
     while(1) {
      $414 = HEAP32[$ws$1187>>2]|0;
      $415 = ($414|0)==(0);
      if ($415) {
       break L465;
      }
      $416 = (_wctomb($mb,$414)|0);
      $417 = (($416) + ($i$1186))|0;
      $418 = ($417|0)>($i$0$lcssa273|0);
      if ($418) {
       break L465;
      }
      $419 = ((($ws$1187)) + 4|0);
      (___fwritex($mb,$416,$f)|0);
      $420 = ($417>>>0)<($i$0$lcssa273>>>0);
      if ($420) {
       $i$1186 = $417;$ws$1187 = $419;
      } else {
       break;
      }
     }
    }
   } while(0);
   $421 = ($403|0)==(8192);
   $or$cond$i71 = $421 & $405;
   if ($or$cond$i71) {
    $422 = (($w$1) - ($i$0$lcssa273))|0;
    $423 = ($422>>>0)>(256);
    $424 = $423 ? 256 : $422;
    _memset(($pad$i|0),32,($424|0))|0;
    $425 = ($422>>>0)>(255);
    if ($425) {
     $$01$i73 = $422;
     while(1) {
      (___fwritex($pad$i,256,$f)|0);
      $426 = (($$01$i73) + -256)|0;
      $427 = ($426>>>0)>(255);
      if ($427) {
       $$01$i73 = $426;
      } else {
       break;
      }
     }
     $428 = $422 & 255;
     $$0$lcssa$i75 = $428;
    } else {
     $$0$lcssa$i75 = $422;
    }
    (___fwritex($pad$i,$$0$lcssa$i75,$f)|0);
   }
   $429 = $405 ? $w$1 : $i$0$lcssa273;
   $1169 = $291;$1170 = $1181;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $429;$l10n$0 = $l10n$3;
   continue;
  }
  $1001 = $z$2;
  $1002 = $a$2;
  $1003 = (($1001) - ($1002))|0;
  $1004 = ($p$5|0)<($1003|0);
  $$p$5 = $1004 ? $1003 : $p$5;
  $1005 = (($pl$2) + ($$p$5))|0;
  $1006 = ($w$1|0)<($1005|0);
  $w$2 = $1006 ? $1005 : $w$1;
  $1007 = $fl$6 & 73728;
  $1008 = ($1007|0)==(0);
  $1009 = ($w$2|0)>($1005|0);
  $or$cond$i81 = $1008 & $1009;
  if ($or$cond$i81) {
   $1010 = (($w$2) - ($1005))|0;
   $1011 = ($1010>>>0)>(256);
   $1012 = $1011 ? 256 : $1010;
   _memset(($pad$i|0),32,($1012|0))|0;
   $1013 = ($1010>>>0)>(255);
   if ($1013) {
    $$01$i83 = $1010;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1014 = (($$01$i83) + -256)|0;
     $1015 = ($1014>>>0)>(255);
     if ($1015) {
      $$01$i83 = $1014;
     } else {
      break;
     }
    }
    $1016 = $1010 & 255;
    $$0$lcssa$i85 = $1016;
   } else {
    $$0$lcssa$i85 = $1010;
   }
   (___fwritex($pad$i,$$0$lcssa$i85,$f)|0);
  }
  (___fwritex($prefix$2,$pl$2,$f)|0);
  $1017 = ($1007|0)==(65536);
  $or$cond$i57 = $1017 & $1009;
  if ($or$cond$i57) {
   $1018 = (($w$2) - ($1005))|0;
   $1019 = ($1018>>>0)>(256);
   $1020 = $1019 ? 256 : $1018;
   _memset(($pad$i|0),48,($1020|0))|0;
   $1021 = ($1018>>>0)>(255);
   if ($1021) {
    $$01$i59 = $1018;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1022 = (($$01$i59) + -256)|0;
     $1023 = ($1022>>>0)>(255);
     if ($1023) {
      $$01$i59 = $1022;
     } else {
      break;
     }
    }
    $1024 = $1018 & 255;
    $$0$lcssa$i61 = $1024;
   } else {
    $$0$lcssa$i61 = $1018;
   }
   (___fwritex($pad$i,$$0$lcssa$i61,$f)|0);
  }
  $1025 = ($$p$5|0)>($1003|0);
  if ($1025) {
   $1026 = (($$p$5) - ($1003))|0;
   $1027 = ($1026>>>0)>(256);
   $1028 = $1027 ? 256 : $1026;
   _memset(($pad$i|0),48,($1028|0))|0;
   $1029 = ($1026>>>0)>(255);
   if ($1029) {
    $$01$i44 = $1026;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1030 = (($$01$i44) + -256)|0;
     $1031 = ($1030>>>0)>(255);
     if ($1031) {
      $$01$i44 = $1030;
     } else {
      break;
     }
    }
    $1032 = $1026 & 255;
    $$0$lcssa$i46 = $1032;
   } else {
    $$0$lcssa$i46 = $1026;
   }
   (___fwritex($pad$i,$$0$lcssa$i46,$f)|0);
  }
  (___fwritex($a$2,$1003,$f)|0);
  $1033 = ($1007|0)==(8192);
  $or$cond$i = $1033 & $1009;
  if ($or$cond$i) {
   $1034 = (($w$2) - ($1005))|0;
   $1035 = ($1034>>>0)>(256);
   $1036 = $1035 ? 256 : $1034;
   _memset(($pad$i|0),32,($1036|0))|0;
   $1037 = ($1034>>>0)>(255);
   if ($1037) {
    $$01$i = $1034;
    while(1) {
     (___fwritex($pad$i,256,$f)|0);
     $1038 = (($$01$i) + -256)|0;
     $1039 = ($1038>>>0)>(255);
     if ($1039) {
      $$01$i = $1038;
     } else {
      break;
     }
    }
    $1040 = $1034 & 255;
    $$0$lcssa$i = $1040;
   } else {
    $$0$lcssa$i = $1034;
   }
   (___fwritex($pad$i,$$0$lcssa$i,$f)|0);
  }
  $1169 = $1175;$1170 = $1176;$23 = $$lcssa457;$cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 if ((label|0) == 344) {
  $1041 = ($f|0)==(0|0);
  if (!($1041)) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;return ($$0|0);
  }
  $1042 = ($l10n$0$lcssa|0)==(0);
  if ($1042) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $i$2162 = 1;
  }
  while(1) {
   $1043 = (($nl_type) + ($i$2162<<2)|0);
   $1044 = HEAP32[$1043>>2]|0;
   $1045 = ($1044|0)==(0);
   if ($1045) {
    $i$2162$lcssa = $i$2162;
    break;
   }
   $1047 = (($nl_arg) + ($i$2162<<3)|0);
   $1048 = ($1044>>>0)>(20);
   L522: do {
    if (!($1048)) {
     do {
      switch ($1044|0) {
      case 9:  {
       $arglist_current35 = HEAP32[$ap>>2]|0;
       $1049 = $arglist_current35;
       $1050 = ((0) + 4|0);
       $expanded148 = $1050;
       $expanded147 = (($expanded148) - 1)|0;
       $1051 = (($1049) + ($expanded147))|0;
       $1052 = ((0) + 4|0);
       $expanded152 = $1052;
       $expanded151 = (($expanded152) - 1)|0;
       $expanded150 = $expanded151 ^ -1;
       $1053 = $1051 & $expanded150;
       $1054 = $1053;
       $1055 = HEAP32[$1054>>2]|0;
       $arglist_next36 = ((($1054)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next36;
       HEAP32[$1047>>2] = $1055;
       break L522;
       break;
      }
      case 10:  {
       $arglist_current38 = HEAP32[$ap>>2]|0;
       $1056 = $arglist_current38;
       $1057 = ((0) + 4|0);
       $expanded155 = $1057;
       $expanded154 = (($expanded155) - 1)|0;
       $1058 = (($1056) + ($expanded154))|0;
       $1059 = ((0) + 4|0);
       $expanded159 = $1059;
       $expanded158 = (($expanded159) - 1)|0;
       $expanded157 = $expanded158 ^ -1;
       $1060 = $1058 & $expanded157;
       $1061 = $1060;
       $1062 = HEAP32[$1061>>2]|0;
       $arglist_next39 = ((($1061)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next39;
       $1063 = ($1062|0)<(0);
       $1064 = $1063 << 31 >> 31;
       $1065 = $1047;
       $1066 = $1065;
       HEAP32[$1066>>2] = $1062;
       $1067 = (($1065) + 4)|0;
       $1068 = $1067;
       HEAP32[$1068>>2] = $1064;
       break L522;
       break;
      }
      case 11:  {
       $arglist_current41 = HEAP32[$ap>>2]|0;
       $1069 = $arglist_current41;
       $1070 = ((0) + 4|0);
       $expanded162 = $1070;
       $expanded161 = (($expanded162) - 1)|0;
       $1071 = (($1069) + ($expanded161))|0;
       $1072 = ((0) + 4|0);
       $expanded166 = $1072;
       $expanded165 = (($expanded166) - 1)|0;
       $expanded164 = $expanded165 ^ -1;
       $1073 = $1071 & $expanded164;
       $1074 = $1073;
       $1075 = HEAP32[$1074>>2]|0;
       $arglist_next42 = ((($1074)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next42;
       $1076 = $1047;
       $1077 = $1076;
       HEAP32[$1077>>2] = $1075;
       $1078 = (($1076) + 4)|0;
       $1079 = $1078;
       HEAP32[$1079>>2] = 0;
       break L522;
       break;
      }
      case 12:  {
       $arglist_current44 = HEAP32[$ap>>2]|0;
       $1080 = $arglist_current44;
       $1081 = ((0) + 8|0);
       $expanded169 = $1081;
       $expanded168 = (($expanded169) - 1)|0;
       $1082 = (($1080) + ($expanded168))|0;
       $1083 = ((0) + 8|0);
       $expanded173 = $1083;
       $expanded172 = (($expanded173) - 1)|0;
       $expanded171 = $expanded172 ^ -1;
       $1084 = $1082 & $expanded171;
       $1085 = $1084;
       $1086 = $1085;
       $1087 = $1086;
       $1088 = HEAP32[$1087>>2]|0;
       $1089 = (($1086) + 4)|0;
       $1090 = $1089;
       $1091 = HEAP32[$1090>>2]|0;
       $arglist_next45 = ((($1085)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next45;
       $1092 = $1047;
       $1093 = $1092;
       HEAP32[$1093>>2] = $1088;
       $1094 = (($1092) + 4)|0;
       $1095 = $1094;
       HEAP32[$1095>>2] = $1091;
       break L522;
       break;
      }
      case 13:  {
       $arglist_current47 = HEAP32[$ap>>2]|0;
       $1096 = $arglist_current47;
       $1097 = ((0) + 4|0);
       $expanded176 = $1097;
       $expanded175 = (($expanded176) - 1)|0;
       $1098 = (($1096) + ($expanded175))|0;
       $1099 = ((0) + 4|0);
       $expanded180 = $1099;
       $expanded179 = (($expanded180) - 1)|0;
       $expanded178 = $expanded179 ^ -1;
       $1100 = $1098 & $expanded178;
       $1101 = $1100;
       $1102 = HEAP32[$1101>>2]|0;
       $arglist_next48 = ((($1101)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next48;
       $1103 = $1102&65535;
       $1104 = $1103 << 16 >> 16;
       $1105 = ($1104|0)<(0);
       $1106 = $1105 << 31 >> 31;
       $1107 = $1047;
       $1108 = $1107;
       HEAP32[$1108>>2] = $1104;
       $1109 = (($1107) + 4)|0;
       $1110 = $1109;
       HEAP32[$1110>>2] = $1106;
       break L522;
       break;
      }
      case 14:  {
       $arglist_current50 = HEAP32[$ap>>2]|0;
       $1111 = $arglist_current50;
       $1112 = ((0) + 4|0);
       $expanded183 = $1112;
       $expanded182 = (($expanded183) - 1)|0;
       $1113 = (($1111) + ($expanded182))|0;
       $1114 = ((0) + 4|0);
       $expanded187 = $1114;
       $expanded186 = (($expanded187) - 1)|0;
       $expanded185 = $expanded186 ^ -1;
       $1115 = $1113 & $expanded185;
       $1116 = $1115;
       $1117 = HEAP32[$1116>>2]|0;
       $arglist_next51 = ((($1116)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next51;
       $$mask1$i = $1117 & 65535;
       $1118 = $1047;
       $1119 = $1118;
       HEAP32[$1119>>2] = $$mask1$i;
       $1120 = (($1118) + 4)|0;
       $1121 = $1120;
       HEAP32[$1121>>2] = 0;
       break L522;
       break;
      }
      case 15:  {
       $arglist_current53 = HEAP32[$ap>>2]|0;
       $1122 = $arglist_current53;
       $1123 = ((0) + 4|0);
       $expanded190 = $1123;
       $expanded189 = (($expanded190) - 1)|0;
       $1124 = (($1122) + ($expanded189))|0;
       $1125 = ((0) + 4|0);
       $expanded194 = $1125;
       $expanded193 = (($expanded194) - 1)|0;
       $expanded192 = $expanded193 ^ -1;
       $1126 = $1124 & $expanded192;
       $1127 = $1126;
       $1128 = HEAP32[$1127>>2]|0;
       $arglist_next54 = ((($1127)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next54;
       $1129 = $1128&255;
       $1130 = $1129 << 24 >> 24;
       $1131 = ($1130|0)<(0);
       $1132 = $1131 << 31 >> 31;
       $1133 = $1047;
       $1134 = $1133;
       HEAP32[$1134>>2] = $1130;
       $1135 = (($1133) + 4)|0;
       $1136 = $1135;
       HEAP32[$1136>>2] = $1132;
       break L522;
       break;
      }
      case 16:  {
       $arglist_current56 = HEAP32[$ap>>2]|0;
       $1137 = $arglist_current56;
       $1138 = ((0) + 4|0);
       $expanded197 = $1138;
       $expanded196 = (($expanded197) - 1)|0;
       $1139 = (($1137) + ($expanded196))|0;
       $1140 = ((0) + 4|0);
       $expanded201 = $1140;
       $expanded200 = (($expanded201) - 1)|0;
       $expanded199 = $expanded200 ^ -1;
       $1141 = $1139 & $expanded199;
       $1142 = $1141;
       $1143 = HEAP32[$1142>>2]|0;
       $arglist_next57 = ((($1142)) + 4|0);
       HEAP32[$ap>>2] = $arglist_next57;
       $$mask$i = $1143 & 255;
       $1144 = $1047;
       $1145 = $1144;
       HEAP32[$1145>>2] = $$mask$i;
       $1146 = (($1144) + 4)|0;
       $1147 = $1146;
       HEAP32[$1147>>2] = 0;
       break L522;
       break;
      }
      case 17:  {
       $arglist_current59 = HEAP32[$ap>>2]|0;
       $1148 = $arglist_current59;
       $1149 = ((0) + 8|0);
       $expanded204 = $1149;
       $expanded203 = (($expanded204) - 1)|0;
       $1150 = (($1148) + ($expanded203))|0;
       $1151 = ((0) + 8|0);
       $expanded208 = $1151;
       $expanded207 = (($expanded208) - 1)|0;
       $expanded206 = $expanded207 ^ -1;
       $1152 = $1150 & $expanded206;
       $1153 = $1152;
       $1154 = +HEAPF64[$1153>>3];
       $arglist_next60 = ((($1153)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next60;
       HEAPF64[$1047>>3] = $1154;
       break L522;
       break;
      }
      case 18:  {
       $arglist_current62 = HEAP32[$ap>>2]|0;
       $1155 = $arglist_current62;
       $1156 = ((0) + 8|0);
       $expanded211 = $1156;
       $expanded210 = (($expanded211) - 1)|0;
       $1157 = (($1155) + ($expanded210))|0;
       $1158 = ((0) + 8|0);
       $expanded215 = $1158;
       $expanded214 = (($expanded215) - 1)|0;
       $expanded213 = $expanded214 ^ -1;
       $1159 = $1157 & $expanded213;
       $1160 = $1159;
       $1161 = +HEAPF64[$1160>>3];
       $arglist_next63 = ((($1160)) + 8|0);
       HEAP32[$ap>>2] = $arglist_next63;
       HEAPF64[$1047>>3] = $1161;
       break L522;
       break;
      }
      default: {
       break L522;
      }
      }
     } while(0);
    }
   } while(0);
   $1162 = (($i$2162) + 1)|0;
   $1163 = ($1162|0)<(10);
   if ($1163) {
    $i$2162 = $1162;
   } else {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label|0) == 363) {
   STACKTOP = sp;return ($$0|0);
  }
  $1046 = ($i$2162$lcssa|0)<(10);
  if ($1046) {
   $i$3160 = $i$2162$lcssa;
  } else {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  while(1) {
   $1166 = (($nl_type) + ($i$3160<<2)|0);
   $1167 = HEAP32[$1166>>2]|0;
   $1168 = ($1167|0)==(0);
   $1164 = (($i$3160) + 1)|0;
   if (!($1168)) {
    $$0 = -1;
    label = 363;
    break;
   }
   $1165 = ($1164|0)<(10);
   if ($1165) {
    $i$3160 = $1164;
   } else {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label|0) == 363) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 else if ((label|0) == 363) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2008);
 $0 = ((($this)) + 4|0);
 $1 = HEAP8[$msg>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($msg)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($msg)) + 1|0);
 $7 = $3 ? $6 : $5;
 __ZNSt3__118__libcpp_refstringC2EPKc($0,$7);
 return;
}
function __ZNSt13runtime_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2008);
 $0 = ((($this)) + 4|0);
 __ZNSt3__118__libcpp_refstringC2EPKc($0,$msg);
 return;
}
function __ZNSt3__118__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($msg|0))|0);
 $1 = (($0) + 13)|0;
 $2 = (__Znwj($1)|0);
 HEAP32[$2>>2] = $0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($2)) + 12|0);
 $6 = (($0) + 1)|0;
 _memcpy(($5|0),($msg|0),($6|0))|0;
 HEAP32[$this>>2] = $5;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this>>2]=HEAP32[$__str>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = ((($__str)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ((($__str)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(11);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__n;
  $__p$0 = $7;
 }
 _memset(($__p$0|0),($__c|0),($__n|0))|0;
 $11 = (($__p$0) + ($__n)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if (!($0)) {
  $1 = HEAP8[$__str>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  $4 = ((($__str)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($__str)) + 1|0);
  $7 = $3 ? $6 : $5;
  $8 = ((($__str)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $1&255;
  $11 = $10 >>> 1;
  $12 = $3 ? $11 : $9;
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$7,$12)|0);
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 1|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__n>>>0);
 do {
  if ($8) {
   $9 = (($__n) - ($7))|0;
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$9,$__c)|0);
  } else {
   if ($2) {
    $14 = (((($this)) + 1|0) + ($__n)|0);
    HEAP8[$14>>0] = 0;
    $15 = $__n << 1;
    $16 = $15&255;
    HEAP8[$this>>0] = $16;
    break;
   } else {
    $10 = ((($this)) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($11) + ($__n)|0);
    HEAP8[$12>>0] = 0;
    $13 = ((($this)) + 4|0);
    HEAP32[$13>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)==(0);
 if (!($0)) {
  $1 = HEAP8[$this>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $16 = 10;$8 = $1;
  } else {
   $4 = HEAP32[$this>>2]|0;
   $5 = $4 & -2;
   $phitmp$i = (($5) + -1)|0;
   $6 = $4&255;
   $16 = $phitmp$i;$8 = $6;
  }
  $7 = $8 & 1;
  $9 = ($7<<24>>24)==(0);
  if ($9) {
   $12 = $8&255;
   $13 = $12 >>> 1;
   $15 = $13;
  } else {
   $10 = ((($this)) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   $15 = $11;
  }
  $14 = (($16) - ($15))|0;
  $17 = ($14>>>0)<($__n>>>0);
  if ($17) {
   $18 = (($__n) - ($16))|0;
   $19 = (($18) + ($15))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
   $$pre = HEAP8[$this>>0]|0;
   $21 = $$pre;
  } else {
   $21 = $8;
  }
  $20 = $21 & 1;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   $25 = ((($this)) + 1|0);
   $27 = $25;
  } else {
   $23 = ((($this)) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $27 = $24;
  }
  $26 = (($27) + ($15)|0);
  _memset(($26|0),($__c|0),($__n|0))|0;
  $28 = (($15) + ($__n))|0;
  $29 = HEAP8[$this>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $33 = $28 << 1;
   $34 = $33&255;
   HEAP8[$this>>0] = $34;
  } else {
   $32 = ((($this)) + 4|0);
   HEAP32[$32>>2] = $28;
  }
  $35 = (($27) + ($28)|0);
  HEAP8[$35>>0] = 0;
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0, $phitmp$i3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 10;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(11);
 if ($17) {
  $20 = 10;
 } else {
  $18 = (($16) + 16)|0;
  $19 = $18 & -16;
  $phitmp$i3 = (($19) + -1)|0;
  $20 = $phitmp$i3;
 }
 $21 = ($20|0)==($22|0);
 do {
  if (!($21)) {
   $23 = ($20|0)==(10);
   do {
    if ($23) {
     $24 = ((($this)) + 1|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$0 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = (($20) + 1)|0;
     $28 = (__Znwj($27)|0);
     $29 = $8 & 1;
     $30 = ($29<<24>>24)==(0);
     if ($30) {
      $33 = ((($this)) + 1|0);
      $__new_data$0 = $28;$__now_long$0$off0 = 1;$__p$0 = $33;$__was_long$0$off0 = 0;
      break;
     } else {
      $31 = ((($this)) + 8|0);
      $32 = HEAP32[$31>>2]|0;
      $__new_data$0 = $28;$__now_long$0$off0 = 1;$__p$0 = $32;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $34 = $8 & 1;
   $35 = ($34<<24>>24)==(0);
   if ($35) {
    $38 = $8&255;
    $39 = $38 >>> 1;
    $41 = $39;
   } else {
    $36 = ((($this)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $41 = $37;
   }
   $40 = (($41) + 1)|0;
   _memcpy(($__new_data$0|0),($__p$0|0),($40|0))|0;
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $42 = (($20) + 1)|0;
    $43 = $42 | 1;
    HEAP32[$this>>2] = $43;
    $44 = ((($this)) + 4|0);
    HEAP32[$44>>2] = $14;
    $45 = ((($this)) + 8|0);
    HEAP32[$45>>2] = $__new_data$0;
    break;
   } else {
    $46 = $14 << 1;
    $47 = $46&255;
    HEAP8[$this>>0] = $47;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy)|0);
  _memcpy(($22|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $26 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $27 = (($20) + ($$sum1)|0);
  _memcpy(($26|0),($27|0),($25|0))|0;
 }
 $28 = ($__old_cap|0)==(10);
 if (!($28)) {
  __ZdlPv($20);
 }
 $29 = ((($this)) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 $31 = (($23) + ($__n_add))|0;
 $32 = ((($this)) + 4|0);
 HEAP32[$32>>2] = $31;
 $33 = (($18) + ($31)|0);
 HEAP8[$33>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = (($__old_sz) - ($__n_del))|0;
 $22 = ($21|0)==($__n_copy|0);
 if (!($22)) {
  $23 = (($21) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $24 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $25 = (($20) + ($$sum1)|0);
  _memcpy(($24|0),($25|0),($23|0))|0;
 }
 $26 = ($__old_cap|0)==(10);
 if (!($26)) {
  __ZdlPv($20);
 }
 $27 = ((($this)) + 8|0);
 HEAP32[$27>>2] = $18;
 $28 = $17 | 1;
 HEAP32[$this>>2] = $28;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 (_wmemcpy($__p$0,$__s,$__sz)|0);
 $12 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 (_wmemset($__p$0,$__c,$__n)|0);
 $12 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 1;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 4|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   (_wmemmove($14,$__s,$__n)|0);
   $15 = (($14) + ($__n<<2)|0);
   HEAP32[$15>>2] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0, $phitmp$i3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 1;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $20 = 1;
 } else {
  $18 = (($16) + 4)|0;
  $19 = $18 & -4;
  $phitmp$i3 = (($19) + -1)|0;
  $20 = $phitmp$i3;
 }
 $21 = ($20|0)==($22|0);
 do {
  if (!($21)) {
   $23 = ($20|0)==(1);
   do {
    if ($23) {
     $24 = ((($this)) + 4|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$0 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = $20 << 2;
     $28 = (($27) + 4)|0;
     $29 = (__Znwj($28)|0);
     $30 = $8 & 1;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $34 = ((($this)) + 4|0);
      $__new_data$0 = $29;$__now_long$0$off0 = 1;$__p$0 = $34;$__was_long$0$off0 = 0;
      break;
     } else {
      $32 = ((($this)) + 8|0);
      $33 = HEAP32[$32>>2]|0;
      $__new_data$0 = $29;$__now_long$0$off0 = 1;$__p$0 = $33;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $35 = $8 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $39 = $8&255;
    $40 = $39 >>> 1;
    $42 = $40;
   } else {
    $37 = ((($this)) + 4|0);
    $38 = HEAP32[$37>>2]|0;
    $42 = $38;
   }
   $41 = (($42) + 1)|0;
   (_wmemcpy($__new_data$0,$__p$0,$41)|0);
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $43 = (($20) + 1)|0;
    $44 = $43 | 1;
    HEAP32[$this>>2] = $44;
    $45 = ((($this)) + 4|0);
    HEAP32[$45>>2] = $14;
    $46 = ((($this)) + 8|0);
    HEAP32[$46>>2] = $__new_data$0;
    break;
   } else {
    $47 = $14 << 1;
    $48 = $47&255;
    HEAP8[$this>>0] = $48;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0<<2)|0);
 HEAP32[$__p$0>>2] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
 HEAP32[$22>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741806 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = ($__n_add|0)==(0);
 if (!($22)) {
  $23 = (($19) + ($__n_copy<<2)|0);
  (_wmemcpy($23,$__p_new_stuff,$__n_add)|0);
 }
 $24 = (($__old_sz) - ($__n_del))|0;
 $25 = ($24|0)==($__n_copy|0);
 if (!($25)) {
  $26 = (($24) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $27 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $28 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($27,$28,$26)|0);
 }
 $29 = ($__old_cap|0)==(1);
 if (!($29)) {
  __ZdlPv($21);
 }
 $30 = ((($this)) + 8|0);
 HEAP32[$30>>2] = $19;
 $31 = $18 | 1;
 HEAP32[$this>>2] = $31;
 $32 = (($24) + ($__n_add))|0;
 $33 = ((($this)) + 4|0);
 HEAP32[$33>>2] = $32;
 $34 = (($19) + ($32<<2)|0);
 HEAP32[$34>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($25,$26,$24)|0);
 }
 $27 = ($__old_cap|0)==(1);
 if (!($27)) {
  __ZdlPv($21);
 }
 $28 = ((($this)) + 8|0);
 HEAP32[$28>>2] = $19;
 $29 = $18 | 1;
 HEAP32[$this>>2] = $29;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = ((($this)) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = ((($this)) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = ((($this)) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = $__last;
 $15 = (($14) - ($0))|0;
 $16 = ($__first|0)==($__last|0);
 if (!($16)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $17 = HEAP8[$$04>>0]|0;
   HEAP8[$__p$03>>0] = $17;
   $18 = ((($$04)) + 1|0);
   $19 = ((($__p$03)) + 1|0);
   $20 = ($18|0)==($__last|0);
   if ($20) {
    break;
   } else {
    $$04 = $18;$__p$03 = $19;
   }
  }
 }
 $scevgep2 = (($__p$0$ph) + ($15)|0);
 HEAP8[$scevgep2>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = ((($this)) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = ((($this)) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $18 = $17 >>> 2;
 $19 = ($__first|0)==($__last|0);
 if (!($19)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $20 = HEAP32[$$04>>2]|0;
   HEAP32[$__p$03>>2] = $20;
   $21 = ((($$04)) + 4|0);
   $22 = ((($__p$03)) + 4|0);
   $23 = ($21|0)==($__last|0);
   if ($23) {
    break;
   } else {
    $$04 = $21;$__p$03 = $22;
   }
  }
 }
 $scevgep = (($__p$0$ph) + ($18<<2)|0);
 HEAP32[$scevgep>>2] = 0;
 return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $$state = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 $3 = $2&1;
 $$state = $3 | $state;
 $4 = ((($this)) + 16|0);
 HEAP32[$4>>2] = $$state;
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4696);
 __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,0);
 $0 = ((($this)) + 28|0);
 __ZNSt3__16localeD2Ev($0);
 $1 = ((($this)) + 32|0);
 $2 = HEAP32[$1>>2]|0;
 _free($2);
 $3 = ((($this)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 _free($4);
 $5 = ((($this)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 _free($6);
 $7 = ((($this)) + 60|0);
 $8 = HEAP32[$7>>2]|0;
 _free($8);
 return;
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 32|0);
 $3 = ((($this)) + 36|0);
 $4 = ($1|0)==(0);
 if (!($4)) {
  $i$01 = $1;
  while(1) {
   $5 = (($i$01) + -1)|0;
   $6 = HEAP32[$2>>2]|0;
   $7 = (($6) + ($5<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$3>>2]|0;
   $10 = (($9) + ($5<<2)|0);
   $11 = HEAP32[$10>>2]|0;
   FUNCTION_TABLE_viii[$8 & 3]($ev,$this,$11);
   $12 = ($5|0)==(0);
   if ($12) {
    break;
   } else {
    $i$01 = $5;
   }
  }
 }
 return;
}
function __ZNKSt3__18ios_base6getlocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = ((($this)) + 28|0);
 __ZNSt3__16localeC2ERKS0_($0,$1);
 $2 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__18ios_base4initEPv($this,$sb) {
 $this = $this|0;
 $sb = $sb|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 HEAP32[$0>>2] = $sb;
 $not$ = ($sb|0)==(0|0);
 $1 = $not$&1;
 $2 = ((($this)) + 16|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($this)) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($this)) + 4|0);
 HEAP32[$4>>2] = 4098;
 $5 = ((($this)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($this)) + 8|0);
 HEAP32[$6>>2] = 6;
 $7 = ((($this)) + 32|0);
 $8 = ((($this)) + 28|0);
 dest=$7; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev($8);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4632);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4632);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (4632);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = ((($this)) + 8|0);
 ;HEAP32[$1>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($agg$result)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($agg$result)) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$02 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = ((($this)) + 16|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$01 = $__s;$__i$02 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $6;
     $7 = HEAP8[$3>>0]|0;
     $storemerge = $7;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 40|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 63]($this)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      $__i$0$lcssa = $__i$02;
      break L1;
     }
     $13 = $11&255;
     $storemerge = $13;
    }
    HEAP8[$$01>>0] = $storemerge;
    $14 = (($__i$02) + 1)|0;
    $15 = ((($$01)) + 1|0);
    $16 = ($14|0)<($__n|0);
    if ($16) {
     $$01 = $15;$__i$02 = $14;
    } else {
     $__i$0$lcssa = $14;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 63]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = ((($this)) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 1|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP8[$6>>0]|0;
  $9 = $8&255;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0;
 var $__i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = ((($this)) + 28|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$02 = $__s;$__i$01 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = HEAP8[$$02>>0]|0;
     $7 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $7;
     HEAP8[$3>>0] = $6;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 52|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = HEAP8[$$02>>0]|0;
     $12 = $11&255;
     $13 = (FUNCTION_TABLE_iii[$10 & 15]($this,$12)|0);
     $14 = ($13|0)==(-1);
     if ($14) {
      $__i$0$lcssa = $__i$01;
      break L1;
     }
    }
    $15 = ((($$02)) + 1|0);
    $16 = (($__i$01) + 1)|0;
    $17 = ($16|0)<($__n|0);
    if ($17) {
     $$02 = $15;$__i$01 = $16;
    } else {
     $__i$0$lcssa = $16;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$this);
  $6 = HEAP8[$__s>>0]|0;
  $7 = ($6<<24>>24)==(0);
  if (!($7)) {
   $8 = HEAP32[$this>>2]|0;
   $9 = ((($8)) + -12|0);
   $10 = HEAP32[$9>>2]|0;
   $$sum1 = (($10) + 24)|0;
   $11 = (($this) + ($$sum1)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$12>>2]|0;
   $14 = ((($13)) + 24|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = (FUNCTION_TABLE_ii[$15 & 63]($12)|0);
   $17 = ($16|0)==(-1);
   if ($17) {
    $18 = HEAP32[$this>>2]|0;
    $19 = ((($18)) + -12|0);
    $20 = HEAP32[$19>>2]|0;
    $$sum2 = (($20) + 16)|0;
    $21 = (($this) + ($$sum2)|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = $22 | 1;
    HEAP32[$21>>2] = $23;
   }
  }
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 }
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $$sum = (($3) + 16)|0;
 $4 = (($__os) + ($$sum)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$sum1 = (($3) + 72)|0;
  $7 = (($__os) + ($$sum1)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  $$sum1 = (($4) + 16)|0;
  $8 = (($1) + ($$sum1)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0);
  if ($10) {
   $$sum2 = (($4) + 4)|0;
   $11 = (($1) + ($$sum2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = $12 & 8192;
   $14 = ($13|0)==(0);
   if (!($14)) {
    $15 = (__ZSt18uncaught_exceptionv()|0);
    if (!($15)) {
     $16 = HEAP32[$0>>2]|0;
     $17 = HEAP32[$16>>2]|0;
     $18 = ((($17)) + -12|0);
     $19 = HEAP32[$18>>2]|0;
     $$sum3 = (($19) + 24)|0;
     $20 = (($16) + ($$sum3)|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($22)) + 24|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_ii[$24 & 63]($21)|0);
     $26 = ($25|0)==(-1);
     if ($26) {
      $27 = HEAP32[$0>>2]|0;
      $28 = HEAP32[$27>>2]|0;
      $29 = ((($28)) + -12|0);
      $30 = HEAP32[$29>>2]|0;
      $$sum4 = (($30) + 16)|0;
      $31 = (($27) + ($$sum4)|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = $32 | 1;
      HEAP32[$31>>2] = $33;
     }
    }
   }
  }
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $$sum = 0, $$sum$i = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $__s = sp + 8|0;
 $1 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s,$this);
 $2 = HEAP8[$__s>>0]|0;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = HEAP32[$this>>2]|0;
  $5 = ((($4)) + -12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($this) + ($6)|0);
  $8 = (__ZNKSt3__18ios_base6getlocEv($7)|0);
  HEAP32[$1>>2] = $8;
  $9 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,5408)|0);
  __ZNSt3__16localeD2Ev($1);
  $10 = HEAP32[$this>>2]|0;
  $11 = ((($10)) + -12|0);
  $12 = HEAP32[$11>>2]|0;
  $$sum$i = (($12) + 24)|0;
  $13 = (($this) + ($$sum$i)|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($this) + ($12)|0);
  $$sum = (($12) + 76)|0;
  $16 = (($this) + ($$sum)|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)==(-1);
  if ($18) {
   $19 = (__ZNKSt3__18ios_base6getlocEv($15)|0);
   HEAP32[$$byval_copy>>2] = $19;
   $20 = (__ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy,6272)|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($21)) + 28|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (FUNCTION_TABLE_iii[$23 & 15]($20,32)|0);
   __ZNSt3__16localeD2Ev($$byval_copy);
   $25 = $24 << 24 >> 24;
   HEAP32[$16>>2] = $25;
   $27 = $25;
  } else {
   $27 = $17;
  }
  $26 = $27&255;
  $28 = HEAP32[$9>>2]|0;
  $29 = ((($28)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  HEAP32[$0>>2] = $14;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $31 = (FUNCTION_TABLE_iiiiii[$30 & 31]($9,$$byval_copy,$15,$26,$__n)|0);
  $32 = ($31|0)==(0|0);
  if ($32) {
   $33 = HEAP32[$this>>2]|0;
   $34 = ((($33)) + -12|0);
   $35 = HEAP32[$34>>2]|0;
   $$sum4 = (($35) + 16)|0;
   $36 = (($this) + ($$sum4)|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = $37 | 5;
   HEAP32[$36>>2] = $38;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 $1 = ((($0)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($1);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 12)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + -8|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 return;
}
function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP8[$$027>>0]|0;
    $3 = HEAP8[$$018>>0]|0;
    $4 = ($2<<24>>24)<($3<<24>>24);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3<<24>>24)<($2<<24>>24);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 1|0);
    $7 = ((($$018)) + 1|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP8[$__p$01>>0]|0;
   $3 = $2 << 24 >> 24;
   $4 = (($3) + ($1))|0;
   $5 = $4 & -268435456;
   $6 = $5 >>> 24;
   $7 = $6 | $5;
   $8 = $7 ^ $4;
   $9 = ((($__p$01)) + 1|0);
   $10 = ($9|0)==($__hi|0);
   if ($10) {
    $__h$0$lcssa = $8;
    break;
   } else {
    $__h$02 = $8;$__p$01 = $9;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP32[$$027>>2]|0;
    $3 = HEAP32[$$018>>2]|0;
    $4 = ($2|0)<($3|0);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3|0)<($2|0);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 4|0);
    $7 = ((($$018)) + 4|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP32[$__p$01>>2]|0;
   $3 = (($2) + ($1))|0;
   $4 = $3 & -268435456;
   $5 = $4 >>> 24;
   $6 = $5 | $4;
   $7 = $6 ^ $3;
   $8 = ((($__p$01)) + 4|0);
   $9 = ($8|0)==($__hi|0);
   if ($9) {
    $__h$0$lcssa = $7;
    break;
   } else {
    $__h$02 = $7;$__p$01 = $8;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy2 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 63]($this,$$byval_copy,$$byval_copy2,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   if ((($15|0) == 1)) {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break;
   } else if ((($15|0) == 0)) {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break;
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   $17 = (__ZNKSt3__16locale9use_facetERNS0_2idE($2,6272)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
   $18 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$3>>2] = $18;
   $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($3,6416)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($18)|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   FUNCTION_TABLE_vii[$22 & 63]($__names,$19);
   $23 = ((($__names)) + 12|0);
   $24 = HEAP32[$19>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_vii[$26 & 63]($23,$19);
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$4>>2] = $27;
   $28 = ((($__names)) + 24|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy2,$__names,$28,$17,$__err,1)|0);
   $30 = ($29|0)==($__names|0);
   $31 = $30&1;
   HEAP8[$__v>>0] = $31;
   $32 = HEAP32[$__b>>2]|0;
   $33 = ((($__names)) + 12|0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
   $$sroa$01$0 = $32;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $phitmp$i = 0, $phitmp$i14 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6272)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 (FUNCTION_TABLE_iiiii[$7 & 7]($4,5240,(5266),$__atoms)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__buf>>2] = 0;
 $8 = ((($__buf)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__buf)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = HEAP8[$__buf>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = 10;
 } else {
  $13 = HEAP32[$__buf>>2]|0;
  $14 = $13 & -2;
  $phitmp$i = (($14) + -1)|0;
  $15 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$15,0);
 $16 = HEAP8[$__buf>>0]|0;
 $17 = $16 & 1;
 $18 = ($17<<24>>24)==(0);
 $19 = ((($__buf)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($__buf)) + 1|0);
 $22 = $18 ? $21 : $20;
 HEAP32[$__a_end>>2] = $22;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $23 = ((($__buf)) + 4|0);
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i5 = $$pre;$__a$0 = $22;
 L4: while(1) {
  $24 = ($$pre$i$i$i5|0)==(0|0);
  if ($24) {
   $$pre$i$i$i = 0;
  } else {
   $25 = ((($$pre$i$i$i5)) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($$pre$i$i$i5)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$pre$i$i$i5>>2]|0;
    $31 = ((($30)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($$pre$i$i$i5)|0);
    $34 = ($33|0)==(-1);
    if ($34) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i5;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i5;
   }
  }
  $35 = ($$pre$i$i$i|0)==(0|0);
  $36 = HEAP32[$__e>>2]|0;
  $37 = ($36|0)==(0|0);
  do {
   if ($37) {
    label = 13;
   } else {
    $38 = ((($36)) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($36)) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($39|0)==($41|0);
    if (!($42)) {
     if ($35) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
    $43 = HEAP32[$36>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
    $47 = ($46|0)==(-1);
    if ($47) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($35) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($35) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $48 = HEAP32[$__a_end>>2]|0;
  $49 = HEAP8[$__buf>>0]|0;
  $50 = $49 & 1;
  $51 = ($50<<24>>24)==(0);
  $52 = HEAP32[$23>>2]|0;
  $53 = $49&255;
  $54 = $53 >>> 1;
  $55 = $51 ? $54 : $52;
  $56 = (($__a$0) + ($55)|0);
  $57 = ($48|0)==($56|0);
  if ($57) {
   $58 = $55 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = 10;
   } else {
    $62 = HEAP32[$__buf>>2]|0;
    $63 = $62 & -2;
    $phitmp$i14 = (($63) + -1)|0;
    $64 = $phitmp$i14;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$64,0);
   $65 = HEAP8[$__buf>>0]|0;
   $66 = $65 & 1;
   $67 = ($66<<24>>24)==(0);
   $68 = HEAP32[$19>>2]|0;
   $69 = $67 ? $21 : $68;
   $70 = (($69) + ($55)|0);
   HEAP32[$__a_end>>2] = $70;
   $__a$1 = $69;
  } else {
   $__a$1 = $__a$0;
  }
  $71 = ((($$pre$i$i$i)) + 12|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = ((($$pre$i$i$i)) + 16|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = ($72|0)==($74|0);
  if ($75) {
   $76 = HEAP32[$$pre$i$i$i>>2]|0;
   $77 = ((($76)) + 36|0);
   $78 = HEAP32[$77>>2]|0;
   $79 = (FUNCTION_TABLE_ii[$78 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $79;
  } else {
   $80 = HEAP8[$72>>0]|0;
   $81 = $80&255;
   $$0$i$i = $81;
  }
  $82 = $$0$i$i&255;
  $83 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($82,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
  $84 = ($83|0)==(0);
  if (!($84)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $85 = HEAP32[$71>>2]|0;
  $86 = HEAP32[$73>>2]|0;
  $87 = ($85|0)==($86|0);
  if ($87) {
   $88 = HEAP32[$$pre$i$i$i>>2]|0;
   $89 = ((($88)) + 40|0);
   $90 = HEAP32[$89>>2]|0;
   (FUNCTION_TABLE_ii[$90 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $91 = ((($85)) + 1|0);
   HEAP32[$71>>2] = $91;
   $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $92 = HEAP32[$__a_end>>2]|0;
 $93 = $92;
 $94 = $__a$2;
 $95 = (($93) - ($94))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$95,0);
 $96 = HEAP8[$__buf>>0]|0;
 $97 = $96 & 1;
 $98 = ($97<<24>>24)==(0);
 $99 = HEAP32[$19>>2]|0;
 $100 = $98 ? $21 : $99;
 $101 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $102 = (__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($100,$101,9232,$vararg_buffer)|0);
 $103 = ($102|0)==(1);
 if (!($103)) {
  HEAP32[$__err>>2] = 4;
 }
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 37;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 37;
     break;
    }
   }
   if (!($116)) {
    label = 38;
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($116) {
   label = 38;
  }
 }
 if ((label|0) == 38) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = ((($__atoms)) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 26|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP8[$$0$i2>>0]|0;
    $29 = ($28<<24>>24)==($__ct<<24>>24);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 1|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = ($34|0)>(23);
   if ($35) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $37 = ($34|0)<(22);
     if (!($37)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $38 = $0;
      $39 = $__a;
      $40 = (($38) - ($39))|0;
      $41 = ($40|0)<(3);
      if (!($41)) {
       $$0 = -1;
       break;
      }
      $42 = ((($0)) + -1|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(48);
      if (!($44)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $45 = (5240 + ($34)|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $47;
      HEAP8[$0>>0] = $46;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $36 = ($34|0)<($__base|0);
     if (!($36)) {
      $$0 = -1;
      break;
     }
    }
    $48 = (5240 + ($34)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $50;
    HEAP8[$0>>0] = $49;
    $51 = HEAP32[$__dc>>2]|0;
    $52 = (($51) + 1)|0;
    HEAP32[$__dc>>2] = $52;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[9240>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((9240|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_newlocale(2147483647,(9248|0),(0|0))|0);
   HEAP32[9256>>2] = $4;
   ___cxa_guard_release((9240|0));
  }
 }
 $5 = HEAP32[9256>>2]|0;
 return ($5|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy2 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 63]($this,$$byval_copy,$$byval_copy2,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   if ((($15|0) == 1)) {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break;
   } else if ((($15|0) == 0)) {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break;
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   $17 = (__ZNKSt3__16locale9use_facetERNS0_2idE($2,6264)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
   $18 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$3>>2] = $18;
   $19 = (__ZNKSt3__16locale9use_facetERNS0_2idE($3,6424)|0);
   (__ZNSt3__114__shared_count16__release_sharedEv($18)|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   FUNCTION_TABLE_vii[$22 & 63]($__names,$19);
   $23 = ((($__names)) + 12|0);
   $24 = HEAP32[$19>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_vii[$26 & 63]($23,$19);
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$4>>2] = $27;
   $28 = ((($__names)) + 24|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy2,$__names,$28,$17,$__err,1)|0);
   $30 = ($29|0)==($__names|0);
   $31 = $30&1;
   HEAP8[$__v>>0] = $31;
   $32 = HEAP32[$__b>>2]|0;
   $33 = ((($__names)) + 12|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($33);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
   $$sroa$01$0 = $32;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $phitmp$i = 0, $phitmp$i18 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0;
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6264)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 (FUNCTION_TABLE_iiiii[$7 & 7]($4,5240,(5266),$__atoms)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__buf>>2] = 0;
 $8 = ((($__buf)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__buf)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = HEAP8[$__buf>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = 10;
 } else {
  $13 = HEAP32[$__buf>>2]|0;
  $14 = $13 & -2;
  $phitmp$i = (($14) + -1)|0;
  $15 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$15,0);
 $16 = HEAP8[$__buf>>0]|0;
 $17 = $16 & 1;
 $18 = ($17<<24>>24)==(0);
 $19 = ((($__buf)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($__buf)) + 1|0);
 $22 = $18 ? $21 : $20;
 HEAP32[$__a_end>>2] = $22;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $23 = ((($__buf)) + 4|0);
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i6 = $$pre;$__a$0 = $22;
 L4: while(1) {
  $24 = ($$pre$i$i$i6|0)==(0|0);
  if ($24) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $25 = ((($$pre$i$i$i6)) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($$pre$i$i$i6)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$pre$i$i$i6>>2]|0;
    $31 = ((($30)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 63]($$pre$i$i$i6)|0);
    $$0$i$i$i$i4 = $33;
   } else {
    $34 = HEAP32[$26>>2]|0;
    $$0$i$i$i$i4 = $34;
   }
   $35 = ($$0$i$i$i$i4|0)==(-1);
   if ($35) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i6;$130 = 0;
   }
  }
  $36 = HEAP32[$__e>>2]|0;
  $37 = ($36|0)==(0|0);
  do {
   if ($37) {
    label = 16;
   } else {
    $38 = ((($36)) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($36)) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($39|0)==($41|0);
    if ($42) {
     $43 = HEAP32[$36>>2]|0;
     $44 = ((($43)) + 36|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
     $$0$i$i1$i$i10 = $46;
    } else {
     $47 = HEAP32[$39>>2]|0;
     $$0$i$i1$i$i10 = $47;
    }
    $48 = ($$0$i$i1$i$i10|0)==(-1);
    if ($48) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $36;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $36;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $49 = HEAP32[$__a_end>>2]|0;
  $50 = HEAP8[$__buf>>0]|0;
  $51 = $50 & 1;
  $52 = ($51<<24>>24)==(0);
  $53 = HEAP32[$23>>2]|0;
  $54 = $50&255;
  $55 = $54 >>> 1;
  $56 = $52 ? $55 : $53;
  $57 = (($__a$0) + ($56)|0);
  $58 = ($49|0)==($57|0);
  if ($58) {
   $59 = $56 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   if ($62) {
    $65 = 10;
   } else {
    $63 = HEAP32[$__buf>>2]|0;
    $64 = $63 & -2;
    $phitmp$i18 = (($64) + -1)|0;
    $65 = $phitmp$i18;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$65,0);
   $66 = HEAP8[$__buf>>0]|0;
   $67 = $66 & 1;
   $68 = ($67<<24>>24)==(0);
   $69 = HEAP32[$19>>2]|0;
   $70 = $68 ? $21 : $69;
   $71 = (($70) + ($56)|0);
   HEAP32[$__a_end>>2] = $71;
   $__a$1 = $70;
  } else {
   $__a$1 = $__a$0;
  }
  $72 = ((($$pre$i$i$i)) + 12|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ((($$pre$i$i$i)) + 16|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = ($73|0)==($75|0);
  if ($76) {
   $77 = HEAP32[$$pre$i$i$i>>2]|0;
   $78 = ((($77)) + 36|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = (FUNCTION_TABLE_ii[$79 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $80;
  } else {
   $81 = HEAP32[$73>>2]|0;
   $$0$i$i = $81;
  }
  $82 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
  $83 = ($82|0)==(0);
  if (!($83)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $84 = HEAP32[$72>>2]|0;
  $85 = HEAP32[$74>>2]|0;
  $86 = ($84|0)==($85|0);
  if ($86) {
   $87 = HEAP32[$$pre$i$i$i>>2]|0;
   $88 = ((($87)) + 40|0);
   $89 = HEAP32[$88>>2]|0;
   (FUNCTION_TABLE_ii[$89 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $90 = ((($84)) + 4|0);
   HEAP32[$72>>2] = $90;
   $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $91 = HEAP32[$__a_end>>2]|0;
 $92 = $91;
 $93 = $__a$2;
 $94 = (($92) - ($93))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$94,0);
 $95 = HEAP8[$__buf>>0]|0;
 $96 = $95 & 1;
 $97 = ($96<<24>>24)==(0);
 $98 = HEAP32[$19>>2]|0;
 $99 = $97 ? $21 : $98;
 $100 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $101 = (__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($99,$100,9232,$vararg_buffer)|0);
 $102 = ($101|0)==(1);
 if (!($102)) {
  HEAP32[$__err>>2] = 4;
 }
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 43;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 43;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 45;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 43) {
  if ($132) {
   label = 45;
  }
 }
 if ((label|0) == 45) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = ((($__atoms)) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct|0)==($__thousands_sep|0);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 104|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP32[$$0$i2>>2]|0;
    $29 = ($28|0)==($__ct|0);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 4|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = $34 >> 2;
   $36 = ($34|0)>(92);
   if ($36) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $38 = ($34|0)<(88);
     if (!($38)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $39 = $0;
      $40 = $__a;
      $41 = (($39) - ($40))|0;
      $42 = ($41|0)<(3);
      if (!($42)) {
       $$0 = -1;
       break;
      }
      $43 = ((($0)) + -1|0);
      $44 = HEAP8[$43>>0]|0;
      $45 = ($44<<24>>24)==(48);
      if (!($45)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $46 = (5240 + ($35)|0);
      $47 = HEAP8[$46>>0]|0;
      $48 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $48;
      HEAP8[$0>>0] = $47;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $37 = ($35|0)<($__base|0);
     if (!($37)) {
      $$0 = -1;
      break;
     }
    }
    $49 = (5240 + ($35)|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $51;
    HEAP8[$0>>0] = $50;
    $52 = HEAP32[$__dc>>2]|0;
    $53 = (($52) + 1)|0;
    HEAP32[$__dc>>2] = $53;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6272)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5240,(5266),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6416)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP8[$__thousands_sep>>0] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6272)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5240,(5272),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6416)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP8[$__decimal_point>>0] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 63]($5)|0);
 HEAP8[$__thousands_sep>>0] = $13;
 $14 = HEAP32[$5>>2]|0;
 $15 = ((($14)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 FUNCTION_TABLE_vii[$16 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 32|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP8[$$0$i3>>0]|0;
    $42 = ($41<<24>>24)==($__ct<<24>>24);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 1|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = ($47|0)>(31);
   if ($48) {
    $$0 = -1;
   } else {
    $49 = (5240 + ($47)|0);
    $50 = HEAP8[$49>>0]|0;
    if ((($47|0) == 24) | (($47|0) == 25)) {
     $51 = HEAP32[$__a_end>>2]|0;
     $52 = ($51|0)==($__a|0);
     if (!($52)) {
      $53 = ((($51)) + -1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54&255;
      $56 = $55 & 95;
      $57 = HEAP8[$__exp>>0]|0;
      $58 = $57&255;
      $59 = $58 & 127;
      $60 = ($56|0)==($59|0);
      if (!($60)) {
       $$0 = -1;
       break;
      }
     }
     $61 = ((($51)) + 1|0);
     HEAP32[$__a_end>>2] = $61;
     HEAP8[$51>>0] = $50;
     $$0 = 0;
     break;
    } else if ((($47|0) == 23) | (($47|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
     $62 = HEAP32[$__a_end>>2]|0;
     $63 = ((($62)) + 1|0);
     HEAP32[$__a_end>>2] = $63;
     HEAP8[$62>>0] = $50;
     $$0 = 0;
     break;
    } else {
     $64 = $50&255;
     $65 = $64 & 95;
     $66 = HEAP8[$__exp>>0]|0;
     $67 = $66 << 24 >> 24;
     $68 = ($65|0)==($67|0);
     if ($68) {
      $69 = $65 | 128;
      $70 = $69&255;
      HEAP8[$__exp>>0] = $70;
      $71 = HEAP8[$__in_units>>0]|0;
      $72 = ($71<<24>>24)==(0);
      if (!($72)) {
       HEAP8[$__in_units>>0] = 0;
       $73 = HEAP8[$__grouping>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       $76 = ((($__grouping)) + 4|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = $73&255;
       $79 = $78 >>> 1;
       $80 = $75 ? $79 : $77;
       $81 = ($80|0)==(0);
       if (!($81)) {
        $82 = HEAP32[$__g_end>>2]|0;
        $83 = $82;
        $84 = $__g;
        $85 = (($83) - ($84))|0;
        $86 = ($85|0)<(160);
        if ($86) {
         $87 = HEAP32[$__dc>>2]|0;
         $88 = ((($82)) + 4|0);
         HEAP32[$__g_end>>2] = $88;
         HEAP32[$82>>2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end>>2]|0;
     $90 = ((($89)) + 1|0);
     HEAP32[$__a_end>>2] = $90;
     HEAP8[$89>>0] = $50;
     $91 = ($47|0)>(21);
     if ($91) {
      $$0 = 0;
      break;
     }
     $92 = HEAP32[$__dc>>2]|0;
     $93 = (($92) + 1)|0;
     HEAP32[$__dc>>2] = $93;
     $$0 = 0;
     break;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6264)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5240,(5266),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6424)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP32[$__thousands_sep>>2] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6264)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_iiiii[$4 & 7]($1,5240,(5272),$__atoms)|0);
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6424)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 63]($5)|0);
 HEAP32[$__decimal_point>>2] = $9;
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 63]($5)|0);
 HEAP32[$__thousands_sep>>2] = $13;
 $14 = HEAP32[$5>>2]|0;
 $15 = ((($14)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 FUNCTION_TABLE_vii[$16 & 63]($agg$result,$5);
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct|0)==($__thousands_sep|0);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 128|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP32[$$0$i3>>2]|0;
    $42 = ($41|0)==($__ct|0);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 4|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = $47 >> 2;
   $49 = ($47|0)>(124);
   if ($49) {
    $$0 = -1;
   } else {
    $50 = (5240 + ($48)|0);
    $51 = HEAP8[$50>>0]|0;
    if ((($48|0) == 24) | (($48|0) == 25)) {
     $52 = HEAP32[$__a_end>>2]|0;
     $53 = ($52|0)==($__a|0);
     if (!($53)) {
      $54 = ((($52)) + -1|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55&255;
      $57 = $56 & 95;
      $58 = HEAP8[$__exp>>0]|0;
      $59 = $58&255;
      $60 = $59 & 127;
      $61 = ($57|0)==($60|0);
      if (!($61)) {
       $$0 = -1;
       break;
      }
     }
     $62 = ((($52)) + 1|0);
     HEAP32[$__a_end>>2] = $62;
     HEAP8[$52>>0] = $51;
     $$0 = 0;
     break;
    } else if ((($48|0) == 23) | (($48|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
    } else {
     $63 = $51&255;
     $64 = $63 & 95;
     $65 = HEAP8[$__exp>>0]|0;
     $66 = $65 << 24 >> 24;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = $64 | 128;
      $69 = $68&255;
      HEAP8[$__exp>>0] = $69;
      $70 = HEAP8[$__in_units>>0]|0;
      $71 = ($70<<24>>24)==(0);
      if (!($71)) {
       HEAP8[$__in_units>>0] = 0;
       $72 = HEAP8[$__grouping>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       $75 = ((($__grouping)) + 4|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = $72&255;
       $78 = $77 >>> 1;
       $79 = $74 ? $78 : $76;
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = HEAP32[$__g_end>>2]|0;
        $82 = $81;
        $83 = $__g;
        $84 = (($82) - ($83))|0;
        $85 = ($84|0)<(160);
        if ($85) {
         $86 = HEAP32[$__dc>>2]|0;
         $87 = ((($81)) + 4|0);
         HEAP32[$__g_end>>2] = $87;
         HEAP32[$81>>2] = $86;
        }
       }
      }
     }
    }
    $88 = HEAP32[$__a_end>>2]|0;
    $89 = ((($88)) + 1|0);
    HEAP32[$__a_end>>2] = $89;
    HEAP8[$88>>0] = $51;
    $90 = ($47|0)>(84);
    if ($90) {
     $$0 = 0;
    } else {
     $91 = HEAP32[$__dc>>2]|0;
     $92 = (($91) + 1)|0;
     HEAP32[$__dc>>2] = $92;
     $$0 = 0;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi5Z2D = 0, $$pre1 = 0, $$pre1$val = 0, $$pre1$val6 = 0, $$pre4 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$this>>2]|0;
  $7 = ((($6)) + 24|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$__s>>2]|0;
  HEAP32[$0>>2] = $9;
  $10 = $__v&1;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $11 = (FUNCTION_TABLE_iiiiii[$8 & 31]($this,$$byval_copy,$__iob,$__fl,$10)|0);
  $$sroa$0$0 = $11;
 } else {
  $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
  HEAP32[$1>>2] = $12;
  $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6416)|0);
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $14 = HEAP32[$13>>2]|0;
  if ($__v) {
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_vii[$16 & 63]($__nm,$13);
  } else {
   $17 = ((($14)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   FUNCTION_TABLE_vii[$18 & 63]($__nm,$13);
  }
  $19 = HEAP8[$__nm>>0]|0;
  $20 = $19 & 1;
  $21 = ($20<<24>>24)==(0);
  $22 = ((($__nm)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $$pre4 = ((($__nm)) + 1|0);
  $24 = ((($__nm)) + 1|0);
  $$pre1 = ((($__nm)) + 8|0);
  $$pre$phi5Z2D = $21 ? $24 : $$pre4;
  $$ph = $21 ? $24 : $23;
  $25 = ((($__nm)) + 4|0);
  $26 = $19 & 1;
  $27 = ($26<<24>>24)==(0);
  $$pre1$val6 = HEAP32[$$pre1>>2]|0;
  $28 = HEAP32[$25>>2]|0;
  $29 = $19&255;
  $30 = $29 >>> 1;
  $31 = $27 ? $$pre$phi5Z2D : $$pre1$val6;
  $32 = $27 ? $30 : $28;
  $33 = (($31) + ($32)|0);
  $34 = ($$ph|0)==($33|0);
  if (!($34)) {
   $36 = $$ph;
   while(1) {
    $35 = HEAP8[$36>>0]|0;
    $37 = HEAP32[$__s>>2]|0;
    $38 = ($37|0)==(0|0);
    do {
     if (!($38)) {
      $39 = ((($37)) + 24|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ((($37)) + 28|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = ($40|0)==($42|0);
      if (!($43)) {
       $44 = ((($40)) + 1|0);
       HEAP32[$39>>2] = $44;
       HEAP8[$40>>0] = $35;
       break;
      }
      $45 = HEAP32[$37>>2]|0;
      $46 = ((($45)) + 52|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = $35&255;
      $49 = (FUNCTION_TABLE_iii[$47 & 15]($37,$48)|0);
      $50 = ($49|0)==(-1);
      if ($50) {
       HEAP32[$__s>>2] = 0;
      }
     }
    } while(0);
    $51 = ((($36)) + 1|0);
    $$pre = HEAP8[$__nm>>0]|0;
    $52 = $$pre & 1;
    $53 = ($52<<24>>24)==(0);
    $$pre1$val = HEAP32[$$pre1>>2]|0;
    $54 = HEAP32[$25>>2]|0;
    $55 = $$pre&255;
    $56 = $55 >>> 1;
    $57 = $53 ? $$pre$phi5Z2D : $$pre1$val;
    $58 = $53 ? $56 : $54;
    $59 = (($57) + ($58)|0);
    $60 = ($51|0)==($59|0);
    if ($60) {
     break;
    } else {
     $36 = $51;
    }
   }
  }
  $61 = HEAP32[$__s>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
  $$sroa$0$0 = $61;
 }
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy = sp;
 $__fmt = sp + 56|0;
 $__nar = sp + 44|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9264>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9264+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9264+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9264+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9264+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9264+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9272,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1$lcssa = 0, $$1$ph = 0, $$13 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1$ph = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1$ph = $5;
 }
 $6 = HEAP8[$__len>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $$1$lcssa = $$1$ph;
 } else {
  $$012 = $__len;$$13 = $$1$ph;$10 = $6;
  while(1) {
   $8 = ((($$012)) + 1|0);
   $9 = ((($$13)) + 1|0);
   HEAP8[$$13>>0] = $10;
   $11 = HEAP8[$8>>0]|0;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $$1$lcssa = $9;
    break;
   } else {
    $$012 = $8;$$13 = $9;$10 = $11;
   }
  }
 }
 $13 = $__flags & 74;
 do {
  if ((($13|0) == 8)) {
   $14 = $__flags & 16384;
   $15 = ($14|0)==(0);
   if ($15) {
    HEAP8[$$1$lcssa>>0] = 120;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 88;
    break;
   }
  } else if ((($13|0) == 64)) {
   HEAP8[$$1$lcssa>>0] = 111;
  } else {
   if ($__signd) {
    HEAP8[$$1$lcssa>>0] = 100;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 117;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb,$__ne,$__iob) {
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__iob = $__iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 176;
 do {
  if ((($2|0) == 16)) {
   $3 = HEAP8[$__nb>>0]|0;
   if ((($3<<24>>24) == 43) | (($3<<24>>24) == 45)) {
    $4 = ((($__nb)) + 1|0);
    $$0 = $4;
    break;
   }
   $5 = $__ne;
   $6 = $__nb;
   $7 = (($5) - ($6))|0;
   $8 = ($7|0)>(1);
   $9 = ($3<<24>>24)==(48);
   $or$cond = $8 & $9;
   if ($or$cond) {
    $10 = ((($__nb)) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    if ((($11<<24>>24) == 88) | (($11<<24>>24) == 120)) {
     $12 = ((($__nb)) + 2|0);
     $$0 = $12;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else if ((($2|0) == 32)) {
   $$0 = $__ne;
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $__nb;
 }
 return ($$0|0);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i111 = 0, $$01$i$i7 = 0, $$__dg$0 = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__dc$08 = 0, $__dc$1 = 0, $__dg$09 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$010 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6272)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6416)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $15 = ((($14)) + 32|0);
  $16 = HEAP32[$15>>2]|0;
  (FUNCTION_TABLE_iiiii[$16 & 7]($0,$__nb,$__ne,$__ob)|0);
  $17 = $__ne;
  $18 = $__nb;
  $19 = (($17) - ($18))|0;
  $20 = (($__ob) + ($19)|0);
  HEAP32[$__oe>>2] = $20;
  $$pre$phiZ2D = $18;$117 = $20;
 } else {
  HEAP32[$__oe>>2] = $__ob;
  $21 = HEAP8[$__nb>>0]|0;
  if ((($21<<24>>24) == 43) | (($21<<24>>24) == 45)) {
   $22 = ((($__nb)) + 1|0);
   $23 = HEAP32[$0>>2]|0;
   $24 = ((($23)) + 28|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 15]($0,$21)|0);
   $27 = HEAP32[$__oe>>2]|0;
   $28 = ((($27)) + 1|0);
   HEAP32[$__oe>>2] = $28;
   HEAP8[$27>>0] = $26;
   $__nf$0 = $22;
  } else {
   $__nf$0 = $__nb;
  }
  $29 = $__ne;
  $30 = $__nf$0;
  $31 = (($29) - ($30))|0;
  $32 = ($31|0)>(1);
  if ($32) {
   $33 = HEAP8[$__nf$0>>0]|0;
   $34 = ($33<<24>>24)==(48);
   if ($34) {
    $35 = ((($__nf$0)) + 1|0);
    $36 = HEAP8[$35>>0]|0;
    if ((($36<<24>>24) == 88) | (($36<<24>>24) == 120)) {
     $37 = HEAP32[$0>>2]|0;
     $38 = ((($37)) + 28|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_iii[$39 & 15]($0,48)|0);
     $41 = HEAP32[$__oe>>2]|0;
     $42 = ((($41)) + 1|0);
     HEAP32[$__oe>>2] = $42;
     HEAP8[$41>>0] = $40;
     $43 = ((($__nf$0)) + 2|0);
     $44 = HEAP8[$35>>0]|0;
     $45 = HEAP32[$0>>2]|0;
     $46 = ((($45)) + 28|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = (FUNCTION_TABLE_iii[$47 & 15]($0,$44)|0);
     $49 = HEAP32[$__oe>>2]|0;
     $50 = ((($49)) + 1|0);
     HEAP32[$__oe>>2] = $50;
     HEAP8[$49>>0] = $48;
     $__nf$1 = $43;
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
  } else {
   $__nf$1 = $__nf$0;
  }
  $51 = ($__nf$1|0)==($__ne|0);
  if (!($51)) {
   $52 = ((($__ne)) + -1|0);
   $53 = ($__nf$1>>>0)<($52>>>0);
   if ($53) {
    $$01$i$i111 = $__nf$1;$56 = $52;
    while(1) {
     $54 = HEAP8[$$01$i$i111>>0]|0;
     $55 = HEAP8[$56>>0]|0;
     HEAP8[$$01$i$i111>>0] = $55;
     HEAP8[$56>>0] = $54;
     $57 = ((($$01$i$i111)) + 1|0);
     $58 = ((($56)) + -1|0);
     $59 = ($57>>>0)<($58>>>0);
     if ($59) {
      $$01$i$i111 = $57;$56 = $58;
     } else {
      break;
     }
    }
   }
  }
  $60 = HEAP32[$1>>2]|0;
  $61 = ((($60)) + 16|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = (FUNCTION_TABLE_ii[$62 & 63]($1)|0);
  $64 = ((($__grouping)) + 8|0);
  $65 = ((($__grouping)) + 1|0);
  $66 = ($__nf$1>>>0)<($__ne>>>0);
  if ($66) {
   $__dc$08 = 0;$__dg$09 = 0;$__p$010 = $__nf$1;
   while(1) {
    $67 = HEAP8[$__grouping>>0]|0;
    $68 = $67 & 1;
    $69 = ($68<<24>>24)==(0);
    $70 = HEAP32[$64>>2]|0;
    $71 = $69 ? $65 : $70;
    $72 = (($71) + ($__dg$09)|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = ($73<<24>>24)!=(0);
    $75 = $73 << 24 >> 24;
    $76 = ($__dc$08|0)==($75|0);
    $or$cond = $74 & $76;
    if ($or$cond) {
     $77 = HEAP32[$__oe>>2]|0;
     $78 = ((($77)) + 1|0);
     HEAP32[$__oe>>2] = $78;
     HEAP8[$77>>0] = $63;
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$8>>2]|0;
     $83 = $79&255;
     $84 = $83 >>> 1;
     $85 = $81 ? $84 : $82;
     $86 = (($85) + -1)|0;
     $87 = ($__dg$09>>>0)<($86>>>0);
     $88 = $87&1;
     $$__dg$0 = (($88) + ($__dg$09))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$08;$__dg$1 = $__dg$09;
    }
    $89 = HEAP8[$__p$010>>0]|0;
    $90 = HEAP32[$0>>2]|0;
    $91 = ((($90)) + 28|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (FUNCTION_TABLE_iii[$92 & 15]($0,$89)|0);
    $94 = HEAP32[$__oe>>2]|0;
    $95 = ((($94)) + 1|0);
    HEAP32[$__oe>>2] = $95;
    HEAP8[$94>>0] = $93;
    $96 = (($__dc$1) + 1)|0;
    $97 = ((($__p$010)) + 1|0);
    $98 = ($97>>>0)<($__ne>>>0);
    if ($98) {
     $__dc$08 = $96;$__dg$09 = $__dg$1;$__p$010 = $97;
    } else {
     break;
    }
   }
  }
  $99 = $__nf$1;
  $100 = $__nb;
  $101 = (($99) - ($100))|0;
  $102 = (($__ob) + ($101)|0);
  $103 = HEAP32[$__oe>>2]|0;
  $104 = ($102|0)==($103|0);
  if ($104) {
   $$pre$phiZ2D = $100;$117 = $102;
  } else {
   $105 = ((($103)) + -1|0);
   $106 = ($102>>>0)<($105>>>0);
   if ($106) {
    $$01$i$i7 = $102;$109 = $105;
    while(1) {
     $107 = HEAP8[$$01$i$i7>>0]|0;
     $108 = HEAP8[$109>>0]|0;
     HEAP8[$$01$i$i7>>0] = $108;
     HEAP8[$109>>0] = $107;
     $110 = ((($$01$i$i7)) + 1|0);
     $111 = ((($109)) + -1|0);
     $112 = ($110>>>0)<($111>>>0);
     if ($112) {
      $$01$i$i7 = $110;$109 = $111;
     } else {
      break;
     }
    }
   }
   $$pre = HEAP32[$__oe>>2]|0;
   $$pre$phiZ2D = $100;$117 = $$pre;
  }
 }
 $113 = ($__np|0)==($__ne|0);
 $114 = $__np;
 $115 = (($114) - ($$pre$phiZ2D))|0;
 $116 = (($__ob) + ($115)|0);
 $storemerge = $113 ? $117 : $116;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 74|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9280,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy = sp;
 $__fmt = sp + 56|0;
 $__nar = sp + 44|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9264>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9264+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9264+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9264+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9264+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9264+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9272,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 75|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9280,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0;
 $$byval_copy = sp + 68|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 130|0;
 $__nb = sp + 64|0;
 $__o = sp + 72|0;
 $__op = sp + 60|0;
 $__oe = sp + 56|0;
 $0 = sp + 52|0;
 $1 = sp + 48|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9288,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  $17 = ((($__iob)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $18;
  $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
  HEAPF64[$vararg_ptr8>>3] = $__v;
  $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
  $20 = HEAP32[$__nb>>2]|0;
  $21 = ($20|0)==(0|0);
  if ($21) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $23 = $20;$36 = $20;$__nc$1 = $19;
  }
 } else {
  $$pre4 = HEAP32[$__nb>>2]|0;
  $23 = $$pre4;$36 = 0;$__nc$1 = $__nc$0;
 }
 $22 = (($23) + ($__nc$1)|0);
 $24 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23,$22,$__iob)|0);
 $25 = ($23|0)==($__nar|0);
 if ($25) {
  $30 = $__nar;$35 = 0;$__ob$0 = $__o;
 } else {
  $26 = $__nc$1 << 1;
  $27 = (_malloc($26)|0);
  $28 = ($27|0)==(0|0);
  if ($28) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $30 = $23;$35 = $27;$__ob$0 = $27;
  }
 }
 $29 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $29;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($30,$24,$22,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($29)|0);
 $31 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $31;
 $32 = HEAP32[$__op>>2]|0;
 $33 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $34 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$32,$33,$__iob,$__fl)|0);
 _free($35);
 _free($36);
 STACKTOP = sp;return ($34|0);
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1 = 0, $$2$lcssa = 0, $$2$ph = 0, $$23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = ((($$1)) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = ((($$1)) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $11 = HEAP8[$__len>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $$2$lcssa = $$2$ph;
 } else {
  $$012 = $__len;$$23 = $$2$ph;$15 = $11;
  while(1) {
   $13 = ((($$012)) + 1|0);
   $14 = ((($$23)) + 1|0);
   HEAP8[$$23>>0] = $15;
   $16 = HEAP8[$13>>0]|0;
   $17 = ($16<<24>>24)==(0);
   if ($17) {
    $$2$lcssa = $14;
    break;
   } else {
    $$012 = $13;$$23 = $14;$15 = $16;
   }
  }
 }
 do {
  if ((($6|0) == 256)) {
   $20 = $7 & 1;
   $21 = ($20|0)==(0);
   if ($21) {
    HEAP8[$$2$lcssa>>0] = 101;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break;
   }
  } else if ((($6|0) == 4)) {
   $18 = $7 & 1;
   $19 = ($18|0)==(0);
   if ($19) {
    HEAP8[$$2$lcssa>>0] = 102;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break;
   }
  } else {
   $22 = $7 & 1;
   $23 = ($22|0)!=(0);
   if ($8) {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 65;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break;
    }
   } else {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 71;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break;
    }
   }
  }
 } while(0);
 return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i20 = 0, $$01$i$i215 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$017 = 0, $__dc$1 = 0, $__dg$018 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$214 = 0, $__nf$214$lcssa = 0, $__nf$3 = 0, $__ns$026 = 0, $__ns$122 = 0, $__ns$2 = 0, $__p$019 = 0;
 var $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6272)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6416)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = ((($__nb)) + 1|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ((($7)) + 28|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iii[$9 & 15]($0,$5)|0);
  $11 = HEAP32[$__oe>>2]|0;
  $12 = ((($11)) + 1|0);
  HEAP32[$__oe>>2] = $12;
  HEAP8[$11>>0] = $10;
  $__nf$0 = $6;
 } else {
  $__nf$0 = $__nb;
 }
 $13 = $__ne;
 $14 = $__nf$0;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(1);
 L4: do {
  if ($16) {
   $18 = HEAP8[$__nf$0>>0]|0;
   $19 = ($18<<24>>24)==(48);
   if ($19) {
    $20 = ((($__nf$0)) + 1|0);
    $21 = HEAP8[$20>>0]|0;
    if ((($21<<24>>24) == 88) | (($21<<24>>24) == 120)) {
     $22 = HEAP32[$0>>2]|0;
     $23 = ((($22)) + 28|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iii[$24 & 15]($0,48)|0);
     $26 = HEAP32[$__oe>>2]|0;
     $27 = ((($26)) + 1|0);
     HEAP32[$__oe>>2] = $27;
     HEAP8[$26>>0] = $25;
     $28 = ((($__nf$0)) + 2|0);
     $29 = HEAP8[$20>>0]|0;
     $30 = HEAP32[$0>>2]|0;
     $31 = ((($30)) + 28|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = (FUNCTION_TABLE_iii[$32 & 15]($0,$29)|0);
     $34 = HEAP32[$__oe>>2]|0;
     $35 = ((($34)) + 1|0);
     HEAP32[$__oe>>2] = $35;
     HEAP8[$34>>0] = $33;
     $36 = ($28>>>0)<($__ne>>>0);
     if ($36) {
      $__ns$026 = $28;
      while(1) {
       $37 = HEAP8[$__ns$026>>0]|0;
       $38 = $37 << 24 >> 24;
       $39 = (__ZNSt3__16__clocEv()|0);
       $40 = (_isxdigit_l($38,$39)|0);
       $41 = ($40|0)==(0);
       if ($41) {
        $__nf$1 = $28;$__ns$2 = $__ns$026;
        break L4;
       }
       $42 = ((($__ns$026)) + 1|0);
       $43 = ($42>>>0)<($__ne>>>0);
       if ($43) {
        $__ns$026 = $42;
       } else {
        $__nf$1 = $28;$__ns$2 = $42;
        break;
       }
      }
     } else {
      $__nf$1 = $28;$__ns$2 = $28;
     }
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L11: do {
  if ((label|0) == 4) {
   $17 = ($__nf$0>>>0)<($__ne>>>0);
   if ($17) {
    $__ns$122 = $__nf$0;
    while(1) {
     $44 = HEAP8[$__ns$122>>0]|0;
     $45 = $44 << 24 >> 24;
     $46 = (__ZNSt3__16__clocEv()|0);
     $47 = (_isdigit_l($45,$46)|0);
     $48 = ($47|0)==(0);
     if ($48) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$122;
      break L11;
     }
     $49 = ((($__ns$122)) + 1|0);
     $50 = ($49>>>0)<($__ne>>>0);
     if ($50) {
      $__ns$122 = $49;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $49;
      break;
     }
    }
   } else {
    $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
   }
  }
 } while(0);
 $51 = HEAP8[$__grouping>>0]|0;
 $52 = $51 & 1;
 $53 = ($52<<24>>24)==(0);
 $54 = ((($__grouping)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = $51&255;
 $57 = $56 >>> 1;
 $58 = $53 ? $57 : $55;
 $59 = ($58|0)==(0);
 if ($59) {
  $60 = HEAP32[$__oe>>2]|0;
  $61 = HEAP32[$0>>2]|0;
  $62 = ((($61)) + 32|0);
  $63 = HEAP32[$62>>2]|0;
  (FUNCTION_TABLE_iiiii[$63 & 7]($0,$__nf$1,$__ns$2,$60)|0);
  $64 = $__ns$2;
  $65 = $__nf$1;
  $66 = (($64) - ($65))|0;
  $67 = HEAP32[$__oe>>2]|0;
  $68 = (($67) + ($66)|0);
  HEAP32[$__oe>>2] = $68;
  $$pre$phiZ2D = $0;
 } else {
  $69 = ($__nf$1|0)==($__ns$2|0);
  if (!($69)) {
   $70 = ((($__ns$2)) + -1|0);
   $71 = ($__nf$1>>>0)<($70>>>0);
   if ($71) {
    $$01$i$i20 = $__nf$1;$74 = $70;
    while(1) {
     $72 = HEAP8[$$01$i$i20>>0]|0;
     $73 = HEAP8[$74>>0]|0;
     HEAP8[$$01$i$i20>>0] = $73;
     HEAP8[$74>>0] = $72;
     $75 = ((($$01$i$i20)) + 1|0);
     $76 = ((($74)) + -1|0);
     $77 = ($75>>>0)<($76>>>0);
     if ($77) {
      $$01$i$i20 = $75;$74 = $76;
     } else {
      break;
     }
    }
   }
  }
  $78 = HEAP32[$1>>2]|0;
  $79 = ((($78)) + 16|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (FUNCTION_TABLE_ii[$80 & 63]($1)|0);
  $82 = ((($__grouping)) + 8|0);
  $83 = ((($__grouping)) + 1|0);
  $84 = ($__nf$1>>>0)<($__ns$2>>>0);
  if ($84) {
   $__dc$017 = 0;$__dg$018 = 0;$__p$019 = $__nf$1;
   while(1) {
    $85 = HEAP8[$__grouping>>0]|0;
    $86 = $85 & 1;
    $87 = ($86<<24>>24)==(0);
    $88 = HEAP32[$82>>2]|0;
    $89 = $87 ? $83 : $88;
    $90 = (($89) + ($__dg$018)|0);
    $91 = HEAP8[$90>>0]|0;
    $92 = ($91<<24>>24)>(0);
    $93 = $91 << 24 >> 24;
    $94 = ($__dc$017|0)==($93|0);
    $or$cond = $92 & $94;
    if ($or$cond) {
     $95 = HEAP32[$__oe>>2]|0;
     $96 = ((($95)) + 1|0);
     HEAP32[$__oe>>2] = $96;
     HEAP8[$95>>0] = $81;
     $97 = HEAP8[$__grouping>>0]|0;
     $98 = $97 & 1;
     $99 = ($98<<24>>24)==(0);
     $100 = HEAP32[$54>>2]|0;
     $101 = $97&255;
     $102 = $101 >>> 1;
     $103 = $99 ? $102 : $100;
     $104 = (($103) + -1)|0;
     $105 = ($__dg$018>>>0)<($104>>>0);
     $106 = $105&1;
     $$__dg$0 = (($106) + ($__dg$018))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$017;$__dg$1 = $__dg$018;
    }
    $107 = HEAP8[$__p$019>>0]|0;
    $108 = HEAP32[$0>>2]|0;
    $109 = ((($108)) + 28|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (FUNCTION_TABLE_iii[$110 & 15]($0,$107)|0);
    $112 = HEAP32[$__oe>>2]|0;
    $113 = ((($112)) + 1|0);
    HEAP32[$__oe>>2] = $113;
    HEAP8[$112>>0] = $111;
    $114 = (($__dc$1) + 1)|0;
    $115 = ((($__p$019)) + 1|0);
    $116 = ($115>>>0)<($__ns$2>>>0);
    if ($116) {
     $__dc$017 = $114;$__dg$018 = $__dg$1;$__p$019 = $115;
    } else {
     break;
    }
   }
  }
  $117 = $__nf$1;
  $118 = $__nb;
  $119 = (($117) - ($118))|0;
  $120 = (($__ob) + ($119)|0);
  $121 = HEAP32[$__oe>>2]|0;
  $122 = ($120|0)==($121|0);
  if ($122) {
   $$pre$phiZ2D = $0;
  } else {
   $123 = ((($121)) + -1|0);
   $124 = ($120>>>0)<($123>>>0);
   if ($124) {
    $$01$i$i215 = $120;$128 = $123;
    while(1) {
     $126 = HEAP8[$$01$i$i215>>0]|0;
     $127 = HEAP8[$128>>0]|0;
     HEAP8[$$01$i$i215>>0] = $127;
     HEAP8[$128>>0] = $126;
     $129 = ((($$01$i$i215)) + 1|0);
     $130 = ((($128)) + -1|0);
     $131 = ($129>>>0)<($130>>>0);
     if ($131) {
      $$01$i$i215 = $129;$128 = $130;
     } else {
      $$pre$phiZ2D = $0;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $0;
   }
  }
 }
 $125 = ($__ns$2>>>0)<($__ne>>>0);
 L36: do {
  if ($125) {
   $__nf$214 = $__ns$2;
   while(1) {
    $132 = HEAP8[$__nf$214>>0]|0;
    $133 = ($132<<24>>24)==(46);
    if ($133) {
     $__nf$214$lcssa = $__nf$214;
     break;
    }
    $141 = HEAP32[$$pre$phiZ2D>>2]|0;
    $142 = ((($141)) + 28|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = (FUNCTION_TABLE_iii[$143 & 15]($0,$132)|0);
    $145 = HEAP32[$__oe>>2]|0;
    $146 = ((($145)) + 1|0);
    HEAP32[$__oe>>2] = $146;
    HEAP8[$145>>0] = $144;
    $147 = ((($__nf$214)) + 1|0);
    $148 = ($147>>>0)<($__ne>>>0);
    if ($148) {
     $__nf$214 = $147;
    } else {
     $__nf$3 = $147;
     break L36;
    }
   }
   $134 = HEAP32[$1>>2]|0;
   $135 = ((($134)) + 12|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = (FUNCTION_TABLE_ii[$136 & 63]($1)|0);
   $138 = HEAP32[$__oe>>2]|0;
   $139 = ((($138)) + 1|0);
   HEAP32[$__oe>>2] = $139;
   HEAP8[$138>>0] = $137;
   $140 = ((($__nf$214$lcssa)) + 1|0);
   $__nf$3 = $140;
  } else {
   $__nf$3 = $__ns$2;
  }
 } while(0);
 $149 = HEAP32[$__oe>>2]|0;
 $150 = HEAP32[$0>>2]|0;
 $151 = ((($150)) + 32|0);
 $152 = HEAP32[$151>>2]|0;
 (FUNCTION_TABLE_iiiii[$152 & 7]($0,$__nf$3,$__ne,$149)|0);
 $153 = $__nf$3;
 $154 = (($13) - ($153))|0;
 $155 = HEAP32[$__oe>>2]|0;
 $156 = (($155) + ($154)|0);
 HEAP32[$__oe>>2] = $156;
 $157 = ($__np|0)==($__ne|0);
 $158 = $__np;
 $159 = $__nb;
 $160 = (($158) - ($159))|0;
 $161 = (($__ob) + ($160)|0);
 $storemerge = $157 ? $156 : $161;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $$byval_copy = sp + 76|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 138|0;
 $__nb = sp + 72|0;
 $__o = sp + 80|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9296,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  if ($9) {
   $17 = ((($__iob)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $18;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $__v;
   $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
   $__nc$1 = $19;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $__v;
   $20 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $20;
  }
  $21 = HEAP32[$__nb>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $24 = $21;$37 = $21;$__nc$2 = $__nc$1;
  }
 } else {
  $$pre4 = HEAP32[$__nb>>2]|0;
  $24 = $$pre4;$37 = 0;$__nc$2 = $__nc$0;
 }
 $23 = (($24) + ($__nc$2)|0);
 $25 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($24,$23,$__iob)|0);
 $26 = ($24|0)==($__nar|0);
 if ($26) {
  $31 = $__nar;$36 = 0;$__ob$0 = $__o;
 } else {
  $27 = $__nc$2 << 1;
  $28 = (_malloc($27)|0);
  $29 = ($28|0)==(0|0);
  if ($29) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $31 = $24;$36 = $28;$__ob$0 = $28;
  }
 }
 $30 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $30;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($31,$25,$23,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($30)|0);
 $32 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $32;
 $33 = HEAP32[$__op>>2]|0;
 $34 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $35 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$33,$34,$__iob,$__fl)|0);
 _free($36);
 _free($37);
 STACKTOP = sp;return ($35|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $$byval_copy = sp;
 $__fmt = sp + 72|0;
 $__nar = sp + 52|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9304>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9304+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9304+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9304+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9304+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9304+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$$byval_copy)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 $7 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6272)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 32|0);
 $10 = HEAP32[$9>>2]|0;
 (FUNCTION_TABLE_iiiii[$10 & 7]($7,$__nar,$4,$__o)|0);
 $11 = (($__o) + ($3)|0);
 $12 = ($5|0)==($4|0);
 $13 = $__nar;
 $14 = $5;
 $15 = (($14) - ($13))|0;
 $16 = (($__o) + ($15)|0);
 $__op$0 = $12 ? $11 : $16;
 $17 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $17;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $18 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$11,$__iob,$__fl)|0);
 STACKTOP = sp;return ($18|0);
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi3Z2D = 0, $$pre1 = 0, $$pre1$val = 0, $$pre1$val4 = 0, $$pre2 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$this>>2]|0;
  $7 = ((($6)) + 24|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$__s>>2]|0;
  HEAP32[$0>>2] = $9;
  $10 = $__v&1;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
  $11 = (FUNCTION_TABLE_iiiiii[$8 & 31]($this,$$byval_copy,$__iob,$__fl,$10)|0);
  $$sroa$0$0 = $11;
 } else {
  $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
  HEAP32[$1>>2] = $12;
  $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6424)|0);
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $14 = HEAP32[$13>>2]|0;
  if ($__v) {
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_vii[$16 & 63]($__nm,$13);
  } else {
   $17 = ((($14)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   FUNCTION_TABLE_vii[$18 & 63]($__nm,$13);
  }
  $19 = HEAP8[$__nm>>0]|0;
  $20 = $19 & 1;
  $21 = ($20<<24>>24)==(0);
  $22 = ((($__nm)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $$pre2 = ((($__nm)) + 4|0);
  $24 = ((($__nm)) + 4|0);
  $$pre1 = ((($__nm)) + 8|0);
  $$pre$phi3Z2D = $21 ? $24 : $$pre2;
  $$ph = $21 ? $24 : $23;
  $25 = $19 & 1;
  $26 = ($25<<24>>24)==(0);
  $$pre1$val4 = HEAP32[$$pre1>>2]|0;
  $27 = HEAP32[$$pre$phi3Z2D>>2]|0;
  $28 = $19&255;
  $29 = $28 >>> 1;
  $30 = $26 ? $$pre$phi3Z2D : $$pre1$val4;
  $31 = $26 ? $29 : $27;
  $32 = (($30) + ($31<<2)|0);
  $33 = ($$ph|0)==($32|0);
  if (!($33)) {
   $35 = $$ph;
   while(1) {
    $34 = HEAP32[$35>>2]|0;
    $36 = HEAP32[$__s>>2]|0;
    $37 = ($36|0)==(0|0);
    if (!($37)) {
     $38 = ((($36)) + 24|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ((($36)) + 28|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = ($39|0)==($41|0);
     if ($42) {
      $43 = HEAP32[$36>>2]|0;
      $44 = ((($43)) + 52|0);
      $45 = HEAP32[$44>>2]|0;
      $46 = (FUNCTION_TABLE_iii[$45 & 15]($36,$34)|0);
      $$0$i$i = $46;
     } else {
      $47 = ((($39)) + 4|0);
      HEAP32[$38>>2] = $47;
      HEAP32[$39>>2] = $34;
      $$0$i$i = $34;
     }
     $48 = ($$0$i$i|0)==(-1);
     if ($48) {
      HEAP32[$__s>>2] = 0;
     }
    }
    $49 = ((($35)) + 4|0);
    $$pre = HEAP8[$__nm>>0]|0;
    $50 = $$pre & 1;
    $51 = ($50<<24>>24)==(0);
    $$pre1$val = HEAP32[$$pre1>>2]|0;
    $52 = HEAP32[$$pre$phi3Z2D>>2]|0;
    $53 = $$pre&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $$pre$phi3Z2D : $$pre1$val;
    $56 = $51 ? $54 : $52;
    $57 = (($55) + ($56<<2)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     break;
    } else {
     $35 = $49;
    }
   }
  }
  $59 = HEAP32[$__s>>2]|0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
  $$sroa$0$0 = $59;
 }
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $$byval_copy = sp;
 $__fmt = sp + 116|0;
 $__nar = sp + 104|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9264>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9264+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9264+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9264+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9264+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9264+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9272,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i110 = 0, $$01$i$i6 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dc$07 = 0, $__dc$1 = 0, $__dg$08 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$09 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6264)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6424)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $15 = ((($14)) + 48|0);
  $16 = HEAP32[$15>>2]|0;
  (FUNCTION_TABLE_iiiii[$16 & 7]($0,$__nb,$__ne,$__ob)|0);
  $17 = $__ne;
  $18 = $__nb;
  $19 = (($17) - ($18))|0;
  $20 = (($__ob) + ($19<<2)|0);
  HEAP32[$__oe>>2] = $20;
  $$pre$phiZ2D = $18;$117 = $20;
 } else {
  HEAP32[$__oe>>2] = $__ob;
  $21 = HEAP8[$__nb>>0]|0;
  if ((($21<<24>>24) == 43) | (($21<<24>>24) == 45)) {
   $22 = ((($__nb)) + 1|0);
   $23 = HEAP32[$0>>2]|0;
   $24 = ((($23)) + 44|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 15]($0,$21)|0);
   $27 = HEAP32[$__oe>>2]|0;
   $28 = ((($27)) + 4|0);
   HEAP32[$__oe>>2] = $28;
   HEAP32[$27>>2] = $26;
   $__nf$0 = $22;
  } else {
   $__nf$0 = $__nb;
  }
  $29 = $__ne;
  $30 = $__nf$0;
  $31 = (($29) - ($30))|0;
  $32 = ($31|0)>(1);
  if ($32) {
   $33 = HEAP8[$__nf$0>>0]|0;
   $34 = ($33<<24>>24)==(48);
   if ($34) {
    $35 = ((($__nf$0)) + 1|0);
    $36 = HEAP8[$35>>0]|0;
    if ((($36<<24>>24) == 88) | (($36<<24>>24) == 120)) {
     $37 = HEAP32[$0>>2]|0;
     $38 = ((($37)) + 44|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_iii[$39 & 15]($0,48)|0);
     $41 = HEAP32[$__oe>>2]|0;
     $42 = ((($41)) + 4|0);
     HEAP32[$__oe>>2] = $42;
     HEAP32[$41>>2] = $40;
     $43 = ((($__nf$0)) + 2|0);
     $44 = HEAP8[$35>>0]|0;
     $45 = HEAP32[$0>>2]|0;
     $46 = ((($45)) + 44|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = (FUNCTION_TABLE_iii[$47 & 15]($0,$44)|0);
     $49 = HEAP32[$__oe>>2]|0;
     $50 = ((($49)) + 4|0);
     HEAP32[$__oe>>2] = $50;
     HEAP32[$49>>2] = $48;
     $__nf$1 = $43;
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
  } else {
   $__nf$1 = $__nf$0;
  }
  $51 = ($__nf$1|0)==($__ne|0);
  if (!($51)) {
   $52 = ((($__ne)) + -1|0);
   $53 = ($__nf$1>>>0)<($52>>>0);
   if ($53) {
    $$01$i$i110 = $__nf$1;$56 = $52;
    while(1) {
     $54 = HEAP8[$$01$i$i110>>0]|0;
     $55 = HEAP8[$56>>0]|0;
     HEAP8[$$01$i$i110>>0] = $55;
     HEAP8[$56>>0] = $54;
     $57 = ((($$01$i$i110)) + 1|0);
     $58 = ((($56)) + -1|0);
     $59 = ($57>>>0)<($58>>>0);
     if ($59) {
      $$01$i$i110 = $57;$56 = $58;
     } else {
      break;
     }
    }
   }
  }
  $60 = HEAP32[$1>>2]|0;
  $61 = ((($60)) + 16|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = (FUNCTION_TABLE_ii[$62 & 63]($1)|0);
  $64 = ((($__grouping)) + 8|0);
  $65 = ((($__grouping)) + 1|0);
  $66 = ($__nf$1>>>0)<($__ne>>>0);
  if ($66) {
   $__dc$07 = 0;$__dg$08 = 0;$__p$09 = $__nf$1;
   while(1) {
    $67 = HEAP8[$__grouping>>0]|0;
    $68 = $67 & 1;
    $69 = ($68<<24>>24)==(0);
    $70 = HEAP32[$64>>2]|0;
    $71 = $69 ? $65 : $70;
    $72 = (($71) + ($__dg$08)|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = ($73<<24>>24)!=(0);
    $75 = $73 << 24 >> 24;
    $76 = ($__dc$07|0)==($75|0);
    $or$cond = $74 & $76;
    if ($or$cond) {
     $77 = HEAP32[$__oe>>2]|0;
     $78 = ((($77)) + 4|0);
     HEAP32[$__oe>>2] = $78;
     HEAP32[$77>>2] = $63;
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$8>>2]|0;
     $83 = $79&255;
     $84 = $83 >>> 1;
     $85 = $81 ? $84 : $82;
     $86 = (($85) + -1)|0;
     $87 = ($__dg$08>>>0)<($86>>>0);
     $88 = $87&1;
     $$__dg$0 = (($88) + ($__dg$08))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$07;$__dg$1 = $__dg$08;
    }
    $89 = HEAP8[$__p$09>>0]|0;
    $90 = HEAP32[$0>>2]|0;
    $91 = ((($90)) + 44|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (FUNCTION_TABLE_iii[$92 & 15]($0,$89)|0);
    $94 = HEAP32[$__oe>>2]|0;
    $95 = ((($94)) + 4|0);
    HEAP32[$__oe>>2] = $95;
    HEAP32[$94>>2] = $93;
    $96 = (($__dc$1) + 1)|0;
    $97 = ((($__p$09)) + 1|0);
    $98 = ($97>>>0)<($__ne>>>0);
    if ($98) {
     $__dc$07 = $96;$__dg$08 = $__dg$1;$__p$09 = $97;
    } else {
     break;
    }
   }
  }
  $99 = $__nf$1;
  $100 = $__nb;
  $101 = (($99) - ($100))|0;
  $102 = (($__ob) + ($101<<2)|0);
  $103 = HEAP32[$__oe>>2]|0;
  $104 = ($102|0)==($103|0);
  if ($104) {
   $$pre$phiZ2D = $100;$117 = $102;
  } else {
   $105 = ((($103)) + -4|0);
   $106 = ($102>>>0)<($105>>>0);
   if ($106) {
    $$01$i$i6 = $102;$109 = $105;
    while(1) {
     $107 = HEAP32[$$01$i$i6>>2]|0;
     $108 = HEAP32[$109>>2]|0;
     HEAP32[$$01$i$i6>>2] = $108;
     HEAP32[$109>>2] = $107;
     $110 = ((($$01$i$i6)) + 4|0);
     $111 = ((($109)) + -4|0);
     $112 = ($110>>>0)<($111>>>0);
     if ($112) {
      $$01$i$i6 = $110;$109 = $111;
     } else {
      $$pre$phiZ2D = $100;$117 = $103;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $100;$117 = $103;
   }
  }
 }
 $113 = ($__np|0)==($__ne|0);
 $114 = $__np;
 $115 = (($114) - ($$pre$phiZ2D))|0;
 $116 = (($__ob) + ($115<<2)|0);
 $storemerge = $113 ? $117 : $116;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 196|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9280,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $$byval_copy = sp;
 $__fmt = sp + 116|0;
 $__nar = sp + 104|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9264>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9264+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9264+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9264+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9264+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9264+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,9272,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$$byval_copy)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$8,$7,$__o,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $10;
 $11 = HEAP32[$__op>>2]|0;
 $12 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $13 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$11,$12,$__iob,$__fl)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $$byval_copy = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 204|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,9280,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $$byval_copy;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$$byval_copy)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$18,$17,$__o,$__op,$__oe,$2);
 (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
 $20 = HEAP32[$__s>>2]|0;
 HEAP32[$3>>2] = $20;
 $21 = HEAP32[$__op>>2]|0;
 $22 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
 $23 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$21,$22,$__iob,$__fl)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0;
 $$byval_copy = sp + 296|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 300|0;
 $__nb = sp + 292|0;
 $__o = sp + 64|0;
 $__op = sp + 60|0;
 $__oe = sp + 56|0;
 $0 = sp + 52|0;
 $1 = sp + 48|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9288,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  $17 = ((($__iob)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $18;
  $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
  HEAPF64[$vararg_ptr8>>3] = $__v;
  $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
  $20 = HEAP32[$__nb>>2]|0;
  $21 = ($20|0)==(0|0);
  if ($21) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $23 = $20;$37 = $20;$__nc$1 = $19;
  }
 } else {
  $$pre3 = HEAP32[$__nb>>2]|0;
  $23 = $$pre3;$37 = 0;$__nc$1 = $__nc$0;
 }
 $22 = (($23) + ($__nc$1)|0);
 $24 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23,$22,$__iob)|0);
 $25 = ($23|0)==($__nar|0);
 if ($25) {
  $30 = $__nar;$35 = 0;$__ob$0 = $__o;
 } else {
  $26 = $__nc$1 << 3;
  $27 = (_malloc($26)|0);
  $28 = ($27|0)==(0|0);
  if ($28) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $30 = $23;$35 = $27;$__ob$0 = $27;
  }
 }
 $29 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $29;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($30,$24,$22,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($29)|0);
 $31 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $31;
 $32 = HEAP32[$__op>>2]|0;
 $33 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $34 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$32,$33,$__iob,$__fl)|0);
 HEAP32[$__s>>2] = $34;
 $36 = ($35|0)==(0|0);
 if (!($36)) {
  _free($35);
 }
 _free($37);
 STACKTOP = sp;return ($34|0);
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i217 = 0, $$01$i$i22 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$019 = 0, $__dc$1 = 0, $__dg$020 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$215 = 0, $__nf$215$lcssa = 0, $__nf$3 = 0, $__ns$028 = 0, $__ns$124 = 0, $__ns$2 = 0;
 var $__p$021 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6264)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6424)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 63]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = ((($__nb)) + 1|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ((($7)) + 44|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iii[$9 & 15]($0,$5)|0);
  $11 = HEAP32[$__oe>>2]|0;
  $12 = ((($11)) + 4|0);
  HEAP32[$__oe>>2] = $12;
  HEAP32[$11>>2] = $10;
  $__nf$0 = $6;
 } else {
  $__nf$0 = $__nb;
 }
 $13 = $__ne;
 $14 = $__nf$0;
 $15 = (($13) - ($14))|0;
 $16 = ($15|0)>(1);
 L4: do {
  if ($16) {
   $18 = HEAP8[$__nf$0>>0]|0;
   $19 = ($18<<24>>24)==(48);
   if ($19) {
    $20 = ((($__nf$0)) + 1|0);
    $21 = HEAP8[$20>>0]|0;
    if ((($21<<24>>24) == 88) | (($21<<24>>24) == 120)) {
     $22 = HEAP32[$0>>2]|0;
     $23 = ((($22)) + 44|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iii[$24 & 15]($0,48)|0);
     $26 = HEAP32[$__oe>>2]|0;
     $27 = ((($26)) + 4|0);
     HEAP32[$__oe>>2] = $27;
     HEAP32[$26>>2] = $25;
     $28 = ((($__nf$0)) + 2|0);
     $29 = HEAP8[$20>>0]|0;
     $30 = HEAP32[$0>>2]|0;
     $31 = ((($30)) + 44|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = (FUNCTION_TABLE_iii[$32 & 15]($0,$29)|0);
     $34 = HEAP32[$__oe>>2]|0;
     $35 = ((($34)) + 4|0);
     HEAP32[$__oe>>2] = $35;
     HEAP32[$34>>2] = $33;
     $36 = ($28>>>0)<($__ne>>>0);
     if ($36) {
      $__ns$028 = $28;
      while(1) {
       $37 = HEAP8[$__ns$028>>0]|0;
       $38 = $37 << 24 >> 24;
       $39 = (__ZNSt3__16__clocEv()|0);
       $40 = (_isxdigit_l($38,$39)|0);
       $41 = ($40|0)==(0);
       if ($41) {
        $__nf$1 = $28;$__ns$2 = $__ns$028;
        break L4;
       }
       $42 = ((($__ns$028)) + 1|0);
       $43 = ($42>>>0)<($__ne>>>0);
       if ($43) {
        $__ns$028 = $42;
       } else {
        $__nf$1 = $28;$__ns$2 = $42;
        break;
       }
      }
     } else {
      $__nf$1 = $28;$__ns$2 = $28;
     }
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L11: do {
  if ((label|0) == 4) {
   $17 = ($__nf$0>>>0)<($__ne>>>0);
   if ($17) {
    $__ns$124 = $__nf$0;
    while(1) {
     $44 = HEAP8[$__ns$124>>0]|0;
     $45 = $44 << 24 >> 24;
     $46 = (__ZNSt3__16__clocEv()|0);
     $47 = (_isdigit_l($45,$46)|0);
     $48 = ($47|0)==(0);
     if ($48) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$124;
      break L11;
     }
     $49 = ((($__ns$124)) + 1|0);
     $50 = ($49>>>0)<($__ne>>>0);
     if ($50) {
      $__ns$124 = $49;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $49;
      break;
     }
    }
   } else {
    $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
   }
  }
 } while(0);
 $51 = HEAP8[$__grouping>>0]|0;
 $52 = $51 & 1;
 $53 = ($52<<24>>24)==(0);
 $54 = ((($__grouping)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = $51&255;
 $57 = $56 >>> 1;
 $58 = $53 ? $57 : $55;
 $59 = ($58|0)==(0);
 if ($59) {
  $60 = HEAP32[$__oe>>2]|0;
  $61 = HEAP32[$0>>2]|0;
  $62 = ((($61)) + 48|0);
  $63 = HEAP32[$62>>2]|0;
  (FUNCTION_TABLE_iiiii[$63 & 7]($0,$__nf$1,$__ns$2,$60)|0);
  $64 = $__ns$2;
  $65 = $__nf$1;
  $66 = (($64) - ($65))|0;
  $67 = HEAP32[$__oe>>2]|0;
  $68 = (($67) + ($66<<2)|0);
  HEAP32[$__oe>>2] = $68;
  $$pre$phiZ2D = $0;$162 = $68;
 } else {
  $69 = ($__nf$1|0)==($__ns$2|0);
  if (!($69)) {
   $70 = ((($__ns$2)) + -1|0);
   $71 = ($__nf$1>>>0)<($70>>>0);
   if ($71) {
    $$01$i$i22 = $__nf$1;$74 = $70;
    while(1) {
     $72 = HEAP8[$$01$i$i22>>0]|0;
     $73 = HEAP8[$74>>0]|0;
     HEAP8[$$01$i$i22>>0] = $73;
     HEAP8[$74>>0] = $72;
     $75 = ((($$01$i$i22)) + 1|0);
     $76 = ((($74)) + -1|0);
     $77 = ($75>>>0)<($76>>>0);
     if ($77) {
      $$01$i$i22 = $75;$74 = $76;
     } else {
      break;
     }
    }
   }
  }
  $78 = HEAP32[$1>>2]|0;
  $79 = ((($78)) + 16|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (FUNCTION_TABLE_ii[$80 & 63]($1)|0);
  $82 = ((($__grouping)) + 8|0);
  $83 = ((($__grouping)) + 1|0);
  $84 = ($__nf$1>>>0)<($__ns$2>>>0);
  if ($84) {
   $__dc$019 = 0;$__dg$020 = 0;$__p$021 = $__nf$1;
   while(1) {
    $85 = HEAP8[$__grouping>>0]|0;
    $86 = $85 & 1;
    $87 = ($86<<24>>24)==(0);
    $88 = HEAP32[$82>>2]|0;
    $89 = $87 ? $83 : $88;
    $90 = (($89) + ($__dg$020)|0);
    $91 = HEAP8[$90>>0]|0;
    $92 = ($91<<24>>24)>(0);
    $93 = $91 << 24 >> 24;
    $94 = ($__dc$019|0)==($93|0);
    $or$cond = $92 & $94;
    if ($or$cond) {
     $95 = HEAP32[$__oe>>2]|0;
     $96 = ((($95)) + 4|0);
     HEAP32[$__oe>>2] = $96;
     HEAP32[$95>>2] = $81;
     $97 = HEAP8[$__grouping>>0]|0;
     $98 = $97 & 1;
     $99 = ($98<<24>>24)==(0);
     $100 = HEAP32[$54>>2]|0;
     $101 = $97&255;
     $102 = $101 >>> 1;
     $103 = $99 ? $102 : $100;
     $104 = (($103) + -1)|0;
     $105 = ($__dg$020>>>0)<($104>>>0);
     $106 = $105&1;
     $$__dg$0 = (($106) + ($__dg$020))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$019;$__dg$1 = $__dg$020;
    }
    $107 = HEAP8[$__p$021>>0]|0;
    $108 = HEAP32[$0>>2]|0;
    $109 = ((($108)) + 44|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (FUNCTION_TABLE_iii[$110 & 15]($0,$107)|0);
    $112 = HEAP32[$__oe>>2]|0;
    $113 = ((($112)) + 4|0);
    HEAP32[$__oe>>2] = $113;
    HEAP32[$112>>2] = $111;
    $114 = (($__dc$1) + 1)|0;
    $115 = ((($__p$021)) + 1|0);
    $116 = ($115>>>0)<($__ns$2>>>0);
    if ($116) {
     $__dc$019 = $114;$__dg$020 = $__dg$1;$__p$021 = $115;
    } else {
     break;
    }
   }
  }
  $117 = $__nf$1;
  $118 = $__nb;
  $119 = (($117) - ($118))|0;
  $120 = (($__ob) + ($119<<2)|0);
  $121 = HEAP32[$__oe>>2]|0;
  $122 = ($120|0)==($121|0);
  if ($122) {
   $$pre$phiZ2D = $0;$162 = $120;
  } else {
   $123 = ((($121)) + -4|0);
   $124 = ($120>>>0)<($123>>>0);
   if ($124) {
    $$01$i$i217 = $120;$128 = $123;
    while(1) {
     $126 = HEAP32[$$01$i$i217>>2]|0;
     $127 = HEAP32[$128>>2]|0;
     HEAP32[$$01$i$i217>>2] = $127;
     HEAP32[$128>>2] = $126;
     $129 = ((($$01$i$i217)) + 4|0);
     $130 = ((($128)) + -4|0);
     $131 = ($129>>>0)<($130>>>0);
     if ($131) {
      $$01$i$i217 = $129;$128 = $130;
     } else {
      $$pre$phiZ2D = $0;$162 = $121;
      break;
     }
    }
   } else {
    $$pre$phiZ2D = $0;$162 = $121;
   }
  }
 }
 $125 = ($__ns$2>>>0)<($__ne>>>0);
 L36: do {
  if ($125) {
   $__nf$215 = $__ns$2;
   while(1) {
    $132 = HEAP8[$__nf$215>>0]|0;
    $133 = ($132<<24>>24)==(46);
    if ($133) {
     $__nf$215$lcssa = $__nf$215;
     break;
    }
    $141 = HEAP32[$$pre$phiZ2D>>2]|0;
    $142 = ((($141)) + 44|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = (FUNCTION_TABLE_iii[$143 & 15]($0,$132)|0);
    $145 = HEAP32[$__oe>>2]|0;
    $146 = ((($145)) + 4|0);
    HEAP32[$__oe>>2] = $146;
    HEAP32[$145>>2] = $144;
    $147 = ((($__nf$215)) + 1|0);
    $148 = ($147>>>0)<($__ne>>>0);
    if ($148) {
     $__nf$215 = $147;
    } else {
     $152 = $146;$__nf$3 = $147;
     break L36;
    }
   }
   $134 = HEAP32[$1>>2]|0;
   $135 = ((($134)) + 12|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = (FUNCTION_TABLE_ii[$136 & 63]($1)|0);
   $138 = HEAP32[$__oe>>2]|0;
   $139 = ((($138)) + 4|0);
   HEAP32[$__oe>>2] = $139;
   HEAP32[$138>>2] = $137;
   $140 = ((($__nf$215$lcssa)) + 1|0);
   $152 = $139;$__nf$3 = $140;
  } else {
   $152 = $162;$__nf$3 = $__ns$2;
  }
 } while(0);
 $149 = HEAP32[$0>>2]|0;
 $150 = ((($149)) + 48|0);
 $151 = HEAP32[$150>>2]|0;
 (FUNCTION_TABLE_iiiii[$151 & 7]($0,$__nf$3,$__ne,$152)|0);
 $153 = $__nf$3;
 $154 = (($13) - ($153))|0;
 $155 = HEAP32[$__oe>>2]|0;
 $156 = (($155) + ($154<<2)|0);
 HEAP32[$__oe>>2] = $156;
 $157 = ($__np|0)==($__ne|0);
 $158 = $__np;
 $159 = $__nb;
 $160 = (($158) - ($159))|0;
 $161 = (($__ob) + ($160<<2)|0);
 $storemerge = $157 ? $156 : $161;
 HEAP32[$__op>>2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$byval_copy = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $$byval_copy = sp + 304|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 308|0;
 $__nb = sp + 300|0;
 $__o = sp + 72|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,9296,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  if ($9) {
   $17 = ((($__iob)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $18;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $__v;
   $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
   $__nc$1 = $19;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $__v;
   $20 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $20;
  }
  $21 = HEAP32[$__nb>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $24 = $21;$38 = $21;$__nc$2 = $__nc$1;
  }
 } else {
  $$pre3 = HEAP32[$__nb>>2]|0;
  $24 = $$pre3;$38 = 0;$__nc$2 = $__nc$0;
 }
 $23 = (($24) + ($__nc$2)|0);
 $25 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($24,$23,$__iob)|0);
 $26 = ($24|0)==($__nar|0);
 if ($26) {
  $31 = $__nar;$36 = 0;$__ob$0 = $__o;
 } else {
  $27 = $__nc$2 << 3;
  $28 = (_malloc($27)|0);
  $29 = ($28|0)==(0|0);
  if ($29) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $31 = $24;$36 = $28;$__ob$0 = $28;
  }
 }
 $30 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $30;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($31,$25,$23,$__ob$0,$__op,$__oe,$0);
 (__ZNSt3__114__shared_count16__release_sharedEv($30)|0);
 $32 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $32;
 $33 = HEAP32[$__op>>2]|0;
 $34 = HEAP32[$__oe>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $35 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__ob$0,$33,$34,$__iob,$__fl)|0);
 HEAP32[$__s>>2] = $35;
 $37 = ($36|0)==(0|0);
 if (!($37)) {
  _free($36);
 }
 _free($38);
 STACKTOP = sp;return ($35|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $$byval_copy = sp;
 $__fmt = sp + 180|0;
 $__nar = sp + 160|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[9304>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[9304+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[9304+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[9304+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[9304+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[9304+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$$byval_copy>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$$byval_copy)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 $7 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6264)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 (FUNCTION_TABLE_iiiii[$10 & 7]($7,$__nar,$4,$__o)|0);
 $11 = (($__o) + ($3<<2)|0);
 $12 = ($5|0)==($4|0);
 $13 = $__nar;
 $14 = $5;
 $15 = (($14) - ($13))|0;
 $16 = (($__o) + ($15<<2)|0);
 $__op$0 = $12 ? $11 : $16;
 $17 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $17;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 $18 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$11,$__iob,$__fl)|0);
 STACKTOP = sp;return ($18|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i26 = 0, $$0$ph$be = 0, $$0$ph86 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa94 = 0, $$lcssa95 = 0, $$pre$i$i$i17 = 0, $$pre$i$i$i8 = 0, $$pre$i2$i$i21 = 0, $$pre$i2$i$i2139 = 0, $$pre$i2$i$i2140 = 0, $$pre$pre = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i24 = 0, $isascii1$i5 = 0, $or$cond84 = 0, $sext = 0, $tmp$i$i23 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6272)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $5 = ((($4)) + 8|0);
 $6 = ($__fmtb|0)==($__fmte|0);
 $7 = HEAP32[$__b>>2]|0;
 L1: do {
  if ($6) {
   $$pre$i$i$i8 = $7;
  } else {
   $$0$ph86 = $__fmtb;$8 = $7;
   L2: while(1) {
    $9 = ($8|0)==(0|0);
    $10 = $8;
    if ($9) {
     $21 = 0;$59 = $10;
    } else {
     $11 = ((($8)) + 12|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($8)) + 16|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($12|0)==($14|0);
     if ($15) {
      $16 = HEAP32[$8>>2]|0;
      $17 = ((($16)) + 36|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (FUNCTION_TABLE_ii[$18 & 63]($8)|0);
      $20 = ($19|0)==(-1);
      if ($20) {
       HEAP32[$__b>>2] = 0;
       $21 = 0;$59 = 0;
      } else {
       $21 = $8;$59 = $10;
      }
     } else {
      $21 = $8;$59 = $10;
     }
    }
    $22 = ($21|0)==(0|0);
    $23 = HEAP32[$__e>>2]|0;
    $24 = ($23|0)==(0|0);
    $25 = $23;
    do {
     if ($24) {
      $190 = $25;
      label = 11;
     } else {
      $26 = ((($23)) + 12|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ((($23)) + 16|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = ($27|0)==($29|0);
      if ($30) {
       $31 = HEAP32[$23>>2]|0;
       $32 = ((($31)) + 36|0);
       $33 = HEAP32[$32>>2]|0;
       $34 = (FUNCTION_TABLE_ii[$33 & 63]($23)|0);
       $35 = ($34|0)==(-1);
       if ($35) {
        HEAP32[$__e>>2] = 0;
        $190 = 0;
        label = 11;
        break;
       }
      }
      if ($22) {
       $191 = $23;$60 = $25;
      } else {
       $$lcssa = $21;
       label = 12;
       break L2;
      }
     }
    } while(0);
    if ((label|0) == 11) {
     label = 0;
     if ($22) {
      $$lcssa = $21;
      label = 12;
      break;
     } else {
      $191 = 0;$60 = $190;
     }
    }
    $36 = HEAP8[$$0$ph86>>0]|0;
    $37 = HEAP32[$4>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_iiii[$39 & 31]($4,$36,0)|0);
    $41 = ($40<<24>>24)==(37);
    L18: do {
     if ($41) {
      $42 = ((($$0$ph86)) + 1|0);
      $43 = ($42|0)==($__fmte|0);
      if ($43) {
       $$lcssa94 = $21;
       label = 15;
       break L2;
      }
      $44 = HEAP8[$42>>0]|0;
      $45 = HEAP32[$4>>2]|0;
      $46 = ((($45)) + 36|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = (FUNCTION_TABLE_iiii[$47 & 31]($4,$44,0)|0);
      if ((($48<<24>>24) == 48) | (($48<<24>>24) == 69)) {
       $49 = ((($$0$ph86)) + 2|0);
       $50 = ($49|0)==($__fmte|0);
       if ($50) {
        $$lcssa95 = $21;
        label = 18;
        break L2;
       }
       $51 = HEAP8[$49>>0]|0;
       $52 = HEAP32[$4>>2]|0;
       $53 = ((($52)) + 36|0);
       $54 = HEAP32[$53>>2]|0;
       $55 = (FUNCTION_TABLE_iiii[$54 & 31]($4,$51,0)|0);
       $63 = $42;$__cmd$0 = $55;$__opt$0 = $48;
      } else {
       $63 = $$0$ph86;$__cmd$0 = $48;$__opt$0 = 0;
      }
      $56 = HEAP32[$this>>2]|0;
      $57 = ((($56)) + 36|0);
      $58 = HEAP32[$57>>2]|0;
      HEAP32[$1>>2] = $59;
      HEAP32[$2>>2] = $60;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $61 = (FUNCTION_TABLE_iiiiiiiii[$58 & 15]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $61;
      $62 = ((($63)) + 2|0);
      $$0$ph$be = $62;
     } else {
      $67 = HEAP8[$$0$ph86>>0]|0;
      $isascii1$i = ($67<<24>>24)>(-1);
      if ($isascii1$i) {
       $68 = $67 << 24 >> 24;
       $69 = HEAP32[$5>>2]|0;
       $70 = (($69) + ($68<<1)|0);
       $71 = HEAP16[$70>>1]|0;
       $72 = $71 & 8192;
       $73 = ($72<<16>>16)==(0);
       if (!($73)) {
        $$0$pn = $$0$ph86;
        while(1) {
         $$2 = ((($$0$pn)) + 1|0);
         $74 = ($$2|0)==($__fmte|0);
         if ($74) {
          $$2$lcssa = $__fmte;
          break;
         }
         $75 = HEAP8[$$2>>0]|0;
         $isascii1$i5 = ($75<<24>>24)>(-1);
         if (!($isascii1$i5)) {
          $$2$lcssa = $$2;
          break;
         }
         $76 = $75 << 24 >> 24;
         $77 = (($69) + ($76<<1)|0);
         $78 = HEAP16[$77>>1]|0;
         $79 = $78 & 8192;
         $80 = ($79<<16>>16)==(0);
         if ($80) {
          $$2$lcssa = $$2;
          break;
         } else {
          $$0$pn = $$2;
         }
        }
        $$pre$i$i$i17 = $21;$$pre$i2$i$i21 = $191;$94 = $191;
        while(1) {
         $81 = ($$pre$i$i$i17|0)==(0|0);
         if ($81) {
          $92 = 0;
         } else {
          $82 = ((($$pre$i$i$i17)) + 12|0);
          $83 = HEAP32[$82>>2]|0;
          $84 = ((($$pre$i$i$i17)) + 16|0);
          $85 = HEAP32[$84>>2]|0;
          $86 = ($83|0)==($85|0);
          if ($86) {
           $87 = HEAP32[$$pre$i$i$i17>>2]|0;
           $88 = ((($87)) + 36|0);
           $89 = HEAP32[$88>>2]|0;
           $90 = (FUNCTION_TABLE_ii[$89 & 63]($$pre$i$i$i17)|0);
           $91 = ($90|0)==(-1);
           if ($91) {
            HEAP32[$__b>>2] = 0;
            $92 = 0;
           } else {
            $92 = $$pre$i$i$i17;
           }
          } else {
           $92 = $$pre$i$i$i17;
          }
         }
         $93 = ($92|0)==(0|0);
         $95 = ($94|0)==(0|0);
         do {
          if ($95) {
           $$pre$i2$i$i2140 = $$pre$i2$i$i21;
           label = 37;
          } else {
           $96 = ((($94)) + 12|0);
           $97 = HEAP32[$96>>2]|0;
           $98 = ((($94)) + 16|0);
           $99 = HEAP32[$98>>2]|0;
           $100 = ($97|0)==($99|0);
           if (!($100)) {
            if ($93) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$192 = $94;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L18;
            }
           }
           $101 = HEAP32[$94>>2]|0;
           $102 = ((($101)) + 36|0);
           $103 = HEAP32[$102>>2]|0;
           $104 = (FUNCTION_TABLE_ii[$103 & 63]($94)|0);
           $105 = ($104|0)==(-1);
           if ($105) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i2140 = 0;
            label = 37;
            break;
           } else {
            $106 = ($$pre$i2$i$i21|0)==(0|0);
            $tmp$i$i23 = $93 ^ $106;
            if ($tmp$i$i23) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$192 = $$pre$i2$i$i21;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L18;
            }
           }
          }
         } while(0);
         if ((label|0) == 37) {
          label = 0;
          if ($93) {
           $$0$ph$be = $$2$lcssa;
           break L18;
          } else {
           $$pre$i2$i$i2139 = $$pre$i2$i$i2140;$192 = 0;
          }
         }
         $107 = ((($92)) + 12|0);
         $108 = HEAP32[$107>>2]|0;
         $109 = ((($92)) + 16|0);
         $110 = HEAP32[$109>>2]|0;
         $111 = ($108|0)==($110|0);
         if ($111) {
          $112 = HEAP32[$92>>2]|0;
          $113 = ((($112)) + 36|0);
          $114 = HEAP32[$113>>2]|0;
          $115 = (FUNCTION_TABLE_ii[$114 & 63]($92)|0);
          $$0$i$i = $115;
         } else {
          $116 = HEAP8[$108>>0]|0;
          $117 = $116&255;
          $$0$i$i = $117;
         }
         $118 = $$0$i$i&255;
         $isascii1$i24 = ($118<<24>>24)>(-1);
         if (!($isascii1$i24)) {
          $$0$ph$be = $$2$lcssa;
          break L18;
         }
         $sext = $$0$i$i << 24;
         $119 = $sext >> 24;
         $120 = HEAP32[$5>>2]|0;
         $121 = (($120) + ($119<<1)|0);
         $122 = HEAP16[$121>>1]|0;
         $123 = $122 & 8192;
         $124 = ($123<<16>>16)==(0);
         if ($124) {
          $$0$ph$be = $$2$lcssa;
          break L18;
         }
         $125 = HEAP32[$107>>2]|0;
         $126 = HEAP32[$109>>2]|0;
         $127 = ($125|0)==($126|0);
         if ($127) {
          $128 = HEAP32[$92>>2]|0;
          $129 = ((($128)) + 40|0);
          $130 = HEAP32[$129>>2]|0;
          (FUNCTION_TABLE_ii[$130 & 63]($92)|0);
          $$pre$i$i$i17 = $92;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$94 = $192;
          continue;
         } else {
          $131 = ((($125)) + 1|0);
          HEAP32[$107>>2] = $131;
          $$pre$i$i$i17 = $92;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$94 = $192;
          continue;
         }
        }
       }
      }
      $132 = ((($21)) + 12|0);
      $133 = HEAP32[$132>>2]|0;
      $134 = ((($21)) + 16|0);
      $135 = HEAP32[$134>>2]|0;
      $136 = ($133|0)==($135|0);
      if ($136) {
       $137 = HEAP32[$21>>2]|0;
       $138 = ((($137)) + 36|0);
       $139 = HEAP32[$138>>2]|0;
       $140 = (FUNCTION_TABLE_ii[$139 & 63]($21)|0);
       $$0$i$i26 = $140;
      } else {
       $141 = HEAP8[$133>>0]|0;
       $142 = $141&255;
       $$0$i$i26 = $142;
      }
      $143 = $$0$i$i26&255;
      $144 = HEAP32[$4>>2]|0;
      $145 = ((($144)) + 12|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = (FUNCTION_TABLE_iii[$146 & 15]($4,$143)|0);
      $148 = HEAP8[$$0$ph86>>0]|0;
      $149 = HEAP32[$4>>2]|0;
      $150 = ((($149)) + 12|0);
      $151 = HEAP32[$150>>2]|0;
      $152 = (FUNCTION_TABLE_iii[$151 & 15]($4,$148)|0);
      $153 = ($147<<24>>24)==($152<<24>>24);
      if (!($153)) {
       label = 55;
       break L2;
      }
      $154 = HEAP32[$132>>2]|0;
      $155 = HEAP32[$134>>2]|0;
      $156 = ($154|0)==($155|0);
      if ($156) {
       $157 = HEAP32[$21>>2]|0;
       $158 = ((($157)) + 40|0);
       $159 = HEAP32[$158>>2]|0;
       (FUNCTION_TABLE_ii[$159 & 63]($21)|0);
      } else {
       $160 = ((($154)) + 1|0);
       HEAP32[$132>>2] = $160;
      }
      $161 = ((($$0$ph86)) + 1|0);
      $$0$ph$be = $161;
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $64 = ($$0$ph$be|0)!=($__fmte|0);
    $65 = ($$pre$pre|0)==(0);
    $or$cond84 = $64 & $65;
    $66 = HEAP32[$__b>>2]|0;
    if ($or$cond84) {
     $$0$ph86 = $$0$ph$be;$8 = $66;
    } else {
     $$pre$i$i$i8 = $66;
     break L1;
    }
   }
   if ((label|0) == 12) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa;
    break;
   }
   else if ((label|0) == 15) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa94;
    break;
   }
   else if ((label|0) == 18) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa95;
    break;
   }
   else if ((label|0) == 55) {
    HEAP32[$__err>>2] = 4;
    $162 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i8 = $162;
    break;
   }
  }
 } while(0);
 $163 = ($$pre$i$i$i8|0)==(0|0);
 if ($163) {
  $174 = 0;
 } else {
  $164 = ((($$pre$i$i$i8)) + 12|0);
  $165 = HEAP32[$164>>2]|0;
  $166 = ((($$pre$i$i$i8)) + 16|0);
  $167 = HEAP32[$166>>2]|0;
  $168 = ($165|0)==($167|0);
  if ($168) {
   $169 = HEAP32[$$pre$i$i$i8>>2]|0;
   $170 = ((($169)) + 36|0);
   $171 = HEAP32[$170>>2]|0;
   $172 = (FUNCTION_TABLE_ii[$171 & 63]($$pre$i$i$i8)|0);
   $173 = ($172|0)==(-1);
   if ($173) {
    HEAP32[$__b>>2] = 0;
    $174 = 0;
   } else {
    $174 = $$pre$i$i$i8;
   }
  } else {
   $174 = $$pre$i$i$i8;
  }
 }
 $175 = ($174|0)==(0|0);
 $176 = HEAP32[$__e>>2]|0;
 $177 = ($176|0)==(0|0);
 do {
  if ($177) {
   label = 65;
  } else {
   $178 = ((($176)) + 12|0);
   $179 = HEAP32[$178>>2]|0;
   $180 = ((($176)) + 16|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = ($179|0)==($181|0);
   if ($182) {
    $183 = HEAP32[$176>>2]|0;
    $184 = ((($183)) + 36|0);
    $185 = HEAP32[$184>>2]|0;
    $186 = (FUNCTION_TABLE_ii[$185 & 63]($176)|0);
    $187 = ($186|0)==(-1);
    if ($187) {
     HEAP32[$__e>>2] = 0;
     label = 65;
     break;
    }
   }
   if (!($175)) {
    label = 66;
   }
  }
 } while(0);
 if ((label|0) == 65) {
  if ($175) {
   label = 66;
  }
 }
 if ((label|0) == 66) {
  $188 = HEAP32[$__err>>2]|0;
  $189 = $188 | 2;
  HEAP32[$__err>>2] = $189;
 }
 STACKTOP = sp;return ($174|0);
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,9312,(9320))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 63]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 1|0);
 $15 = $11 ? $14 : $13;
 $16 = ((($6)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $9&255;
 $19 = $18 >>> 1;
 $20 = $11 ? $19 : $17;
 $21 = (($15) + ($20)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $22 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$21)|0);
 STACKTOP = sp;return ($22|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6272)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 24|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 63]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6272)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 16|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6272)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 20|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy30 = sp + 132|0;
 $$byval_copy26 = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 $34 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6272)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $35 = $__fmt << 24 >> 24;
 do {
  switch ($35|0) {
  case 88:  {
   $100 = ((($this)) + 8|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = ((($101)) + 24|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = (FUNCTION_TABLE_ii[$103 & 63]($100)|0);
   $105 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $105;
   $106 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $106;
   $107 = HEAP8[$104>>0]|0;
   $108 = $107 & 1;
   $109 = ($108<<24>>24)==(0);
   $110 = ((($104)) + 8|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = ((($104)) + 1|0);
   $113 = $109 ? $112 : $111;
   $114 = ((($104)) + 4|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = $107&255;
   $117 = $116 >>> 1;
   $118 = $109 ? $117 : $115;
   $119 = (($113) + ($118)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$29>>2]|0;
   $120 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$113,$119)|0);
   HEAP32[$__b>>2] = $120;
   label = 26;
   break;
  }
  case 106:  {
   $73 = ((($__tm)) + 28|0);
   $74 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $74;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$73,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 73:  {
   $71 = ((($__tm)) + 8|0);
   $72 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $72;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$71,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 109:  {
   $75 = ((($__tm)) + 16|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $76;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$75,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 82:  {
   $85 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $85;
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $86;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$21>>2]|0;
   $87 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9352,(9357))|0);
   HEAP32[$__b>>2] = $87;
   label = 26;
   break;
  }
  case 68:  {
   $63 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $63;
   $64 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $64;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$8>>2]|0;
   $65 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9320,(9328))|0);
   HEAP32[$__b>>2] = $65;
   label = 26;
   break;
  }
  case 99:  {
   $40 = ((($this)) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($41)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_ii[$43 & 63]($40)|0);
   $45 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $45;
   $46 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $46;
   $47 = HEAP8[$44>>0]|0;
   $48 = $47 & 1;
   $49 = ($48<<24>>24)==(0);
   $50 = ((($44)) + 8|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($44)) + 1|0);
   $53 = $49 ? $52 : $51;
   $54 = ((($44)) + 4|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = $47&255;
   $57 = $56 >>> 1;
   $58 = $49 ? $57 : $55;
   $59 = (($53) + ($58)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$5>>2]|0;
   $60 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$53,$59)|0);
   HEAP32[$__b>>2] = $60;
   label = 26;
   break;
  }
  case 114:  {
   $82 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $82;
   $83 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $83;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$19>>2]|0;
   $84 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9336,(9347))|0);
   HEAP32[$__b>>2] = $84;
   label = 26;
   break;
  }
  case 83:  {
   $88 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $88;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__tm,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 65: case 97:  {
   $36 = ((($__tm)) + 24|0);
   $37 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $37;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$36,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 84:  {
   $89 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $89;
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $90;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$24>>2]|0;
   $91 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9360,(9368))|0);
   HEAP32[$__b>>2] = $91;
   label = 26;
   break;
  }
  case 112:  {
   $80 = ((($__tm)) + 8|0);
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $81;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$80,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 77:  {
   $77 = ((($__tm)) + 4|0);
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $78;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$77,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 119:  {
   $92 = ((($__tm)) + 24|0);
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $93;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$92,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 120:  {
   $94 = HEAP32[$this>>2]|0;
   $95 = ((($94)) + 20|0);
   $96 = HEAP32[$95>>2]|0;
   $97 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $97;
   $98 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $98;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$27>>2]|0;
   $99 = (FUNCTION_TABLE_iiiiiii[$96 & 63]($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $99;
   break;
  }
  case 37:  {
   $125 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $125;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 104: case 66: case 98:  {
   $38 = ((($__tm)) + 16|0);
   $39 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $39;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$38,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 89:  {
   $123 = ((($__tm)) + 20|0);
   $124 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $124;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$123,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 72:  {
   $69 = ((($__tm)) + 8|0);
   $70 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $70;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$69,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 116: case 110:  {
   $79 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $79;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 121:  {
   $121 = ((($__tm)) + 20|0);
   $122 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $122;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$121,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 70:  {
   $66 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $66;
   $67 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $67;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$10>>2]|0;
   $68 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9328,(9336))|0);
   HEAP32[$__b>>2] = $68;
   label = 26;
   break;
  }
  case 101: case 100:  {
   $61 = ((($__tm)) + 12|0);
   $62 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $62;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$61,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  default: {
   $126 = HEAP32[$__err>>2]|0;
   $127 = $126 | 4;
   HEAP32[$__err>>2] = $127;
   label = 26;
  }
  }
 } while(0);
 if ((label|0) == 26) {
  $128 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $128;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__ct)) + 8|0);
 L1: while(1) {
  $1 = HEAP32[$__b>>2]|0;
  $2 = ($1|0)==(0|0);
  do {
   if ($2) {
    $13 = 0;
   } else {
    $3 = ((($1)) + 12|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = ((($1)) + 16|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($4|0)==($6|0);
    if ($7) {
     $8 = HEAP32[$1>>2]|0;
     $9 = ((($8)) + 36|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 63]($1)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      HEAP32[$__b>>2] = 0;
      $13 = 0;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $13 = $$pre$i$i$i;
      break;
     }
    } else {
     $13 = $1;
    }
   }
  } while(0);
  $14 = ($13|0)==(0|0);
  $15 = HEAP32[$__e>>2]|0;
  $16 = ($15|0)==(0|0);
  do {
   if ($16) {
    label = 12;
   } else {
    $17 = ((($15)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($15)) + 16|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($18|0)==($20|0);
    if (!($21)) {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
    $22 = HEAP32[$15>>2]|0;
    $23 = ((($22)) + 36|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (FUNCTION_TABLE_ii[$24 & 63]($15)|0);
    $26 = ($25|0)==(-1);
    if ($26) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else {
    $83 = 0;
   }
  }
  $27 = HEAP32[$__b>>2]|0;
  $28 = ((($27)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($27)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $33 = HEAP32[$27>>2]|0;
   $34 = ((($33)) + 36|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (FUNCTION_TABLE_ii[$35 & 63]($27)|0);
   $$0$i$i = $36;
  } else {
   $37 = HEAP8[$29>>0]|0;
   $38 = $37&255;
   $$0$i$i = $38;
  }
  $39 = $$0$i$i&255;
  $isascii1$i = ($39<<24>>24)>(-1);
  if (!($isascii1$i)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = HEAP32[$0>>2]|0;
  $42 = (($41) + ($40<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 8192;
  $45 = ($44<<16>>16)==(0);
  if ($45) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b>>2]|0;
  $47 = ((($46)) + 12|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($46)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($48|0)==($50|0);
  if ($51) {
   $52 = HEAP32[$46>>2]|0;
   $53 = ((($52)) + 40|0);
   $54 = HEAP32[$53>>2]|0;
   (FUNCTION_TABLE_ii[$54 & 63]($46)|0);
   continue;
  } else {
   $55 = ((($48)) + 1|0);
   HEAP32[$47>>2] = $55;
   continue;
  }
 }
 $56 = HEAP32[$__b>>2]|0;
 $57 = ($56|0)==(0|0);
 do {
  if ($57) {
   $68 = 0;
  } else {
   $58 = ((($56)) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($56)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$56>>2]|0;
    $64 = ((($63)) + 36|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_ii[$65 & 63]($56)|0);
    $67 = ($66|0)==(-1);
    if ($67) {
     HEAP32[$__b>>2] = 0;
     $68 = 0;
     break;
    } else {
     $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
     $68 = $$pre$i$i$i2;
     break;
    }
   } else {
    $68 = $56;
   }
  }
 } while(0);
 $69 = ($68|0)==(0|0);
 $70 = ($$pre$i2$i$i6|0)==(0|0);
 do {
  if ($70) {
   label = 32;
  } else {
   $71 = ((($$pre$i2$i$i6)) + 12|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ((($$pre$i2$i$i6)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($72|0)==($74|0);
   if ($75) {
    $76 = HEAP32[$$pre$i2$i$i6>>2]|0;
    $77 = ((($76)) + 36|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_ii[$78 & 63]($$pre$i2$i$i6)|0);
    $80 = ($79|0)==(-1);
    if ($80) {
     HEAP32[$__e>>2] = 0;
     label = 32;
     break;
    }
   }
   if (!($69)) {
    label = 33;
   }
  }
 } while(0);
 if ((label|0) == 32) {
  if ($69) {
   label = 33;
  }
 }
 if ((label|0) == 33) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i611 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 63]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $$pre$i2$i$i611 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $$pre$i2$i$i611 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $41 = HEAP32[$__ct>>2]|0;
   $42 = ((($41)) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 31]($__ct,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if (!($45)) {
    $46 = HEAP32[$__err>>2]|0;
    $47 = $46 | 4;
    HEAP32[$__err>>2] = $47;
    break;
   }
   $48 = HEAP32[$__b>>2]|0;
   $49 = ((($48)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($48)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $55 = HEAP32[$48>>2]|0;
    $56 = ((($55)) + 40|0);
    $57 = HEAP32[$56>>2]|0;
    (FUNCTION_TABLE_ii[$57 & 63]($48)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $58 = ($$pre|0)==(0|0);
    if ($58) {
     $70 = 0;
    } else {
     $60 = $$pre;
     label = 21;
    }
   } else {
    $54 = ((($50)) + 1|0);
    HEAP32[$49>>2] = $54;
    $60 = $48;
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     $59 = ((($60)) + 12|0);
     $61 = HEAP32[$59>>2]|0;
     $62 = ((($60)) + 16|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($61|0)==($63|0);
     if ($64) {
      $65 = HEAP32[$60>>2]|0;
      $66 = ((($65)) + 36|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (FUNCTION_TABLE_ii[$67 & 63]($60)|0);
      $69 = ($68|0)==(-1);
      if ($69) {
       HEAP32[$__b>>2] = 0;
       $70 = 0;
       break;
      } else {
       $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
       $70 = $$pre$i$i$i2;
       break;
      }
     } else {
      $70 = $60;
     }
    }
   } while(0);
   $71 = ($70|0)==(0|0);
   $72 = ($$pre$i2$i$i611|0)==(0|0);
   do {
    if ($72) {
     label = 30;
    } else {
     $73 = ((($$pre$i2$i$i611)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($$pre$i2$i$i611)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$$pre$i2$i$i611>>2]|0;
      $79 = ((($78)) + 36|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 63]($$pre$i2$i$i611)|0);
      $82 = ($81|0)==(-1);
      if ($82) {
       HEAP32[$__e>>2] = 0;
       label = 30;
       break;
      }
     }
     if ($71) {
      break L16;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    if (!($71)) {
     break;
    }
   }
   $83 = HEAP32[$__err>>2]|0;
   $84 = $83 | 2;
   HEAP32[$__err>>2] = $84;
  }
 } while(0);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i$i$i5 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i11 = 0, $$0$i$i1$i$i26 = 0, $$0$i$i17 = 0, $$0$ph$be = 0, $$0$ph89 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$ph = 0, $$pre$i$i$i22 = 0;
 var $$pre$i$i$i7 = 0, $$pre$i3$i$i13 = 0, $$pre$i3$i$i1344 = 0, $$pre$i3$i$i1345 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $or$cond87 = 0, $phitmp$i4$i$i14 = 0, $tmp$i$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 $4 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6264)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $5 = ($__fmtb|0)==($__fmte|0);
 $6 = HEAP32[$__b>>2]|0;
 L1: do {
  if ($5) {
   $$pre$i$i$i22 = $6;
  } else {
   $$0$ph89 = $__fmtb;$7 = $6;
   L2: while(1) {
    $8 = ($7|0)==(0|0);
    $9 = $7;
    if ($8) {
     $126 = 0;$183 = 1;$58 = $9;
    } else {
     $10 = ((($7)) + 12|0);
     $11 = HEAP32[$10>>2]|0;
     $12 = ((($7)) + 16|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ($11|0)==($13|0);
     if ($14) {
      $15 = HEAP32[$7>>2]|0;
      $16 = ((($15)) + 36|0);
      $17 = HEAP32[$16>>2]|0;
      $18 = (FUNCTION_TABLE_ii[$17 & 63]($7)|0);
      $$0$i$i$i$i = $18;
     } else {
      $19 = HEAP32[$11>>2]|0;
      $$0$i$i$i$i = $19;
     }
     $20 = ($$0$i$i$i$i|0)==(-1);
     if ($20) {
      HEAP32[$__b>>2] = 0;
      $126 = 0;$183 = 1;$58 = 0;
     } else {
      $126 = $7;$183 = 0;$58 = $9;
     }
    }
    $21 = HEAP32[$__e>>2]|0;
    $22 = ($21|0)==(0|0);
    $23 = $21;
    do {
     if ($22) {
      $$ph = $23;
      label = 14;
     } else {
      $24 = ((($21)) + 12|0);
      $25 = HEAP32[$24>>2]|0;
      $26 = ((($21)) + 16|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ($25|0)==($27|0);
      if ($28) {
       $29 = HEAP32[$21>>2]|0;
       $30 = ((($29)) + 36|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = (FUNCTION_TABLE_ii[$31 & 63]($21)|0);
       $$0$i$i1$i$i = $32;
      } else {
       $33 = HEAP32[$25>>2]|0;
       $$0$i$i1$i$i = $33;
      }
      $34 = ($$0$i$i1$i$i|0)==(-1);
      if ($34) {
       HEAP32[$__e>>2] = 0;
       $$ph = 0;
       label = 14;
       break;
      } else {
       if ($183) {
        $184 = $21;$59 = $23;
        break;
       } else {
        $$lcssa = $126;
        label = 16;
        break L2;
       }
      }
     }
    } while(0);
    if ((label|0) == 14) {
     label = 0;
     if ($183) {
      $$lcssa = $126;
      label = 16;
      break;
     } else {
      $184 = 0;$59 = $$ph;
     }
    }
    $35 = HEAP32[$$0$ph89>>2]|0;
    $36 = HEAP32[$4>>2]|0;
    $37 = ((($36)) + 52|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = (FUNCTION_TABLE_iiii[$38 & 31]($4,$35,0)|0);
    $40 = ($39<<24>>24)==(37);
    L24: do {
     if ($40) {
      $41 = ((($$0$ph89)) + 4|0);
      $42 = ($41|0)==($__fmte|0);
      if ($42) {
       $$lcssa97 = $126;
       label = 19;
       break L2;
      }
      $43 = HEAP32[$41>>2]|0;
      $44 = HEAP32[$4>>2]|0;
      $45 = ((($44)) + 52|0);
      $46 = HEAP32[$45>>2]|0;
      $47 = (FUNCTION_TABLE_iiii[$46 & 31]($4,$43,0)|0);
      if ((($47<<24>>24) == 48) | (($47<<24>>24) == 69)) {
       $48 = ((($$0$ph89)) + 8|0);
       $49 = ($48|0)==($__fmte|0);
       if ($49) {
        $$lcssa98 = $126;
        label = 22;
        break L2;
       }
       $50 = HEAP32[$48>>2]|0;
       $51 = HEAP32[$4>>2]|0;
       $52 = ((($51)) + 52|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = (FUNCTION_TABLE_iiii[$53 & 31]($4,$50,0)|0);
       $62 = $41;$__cmd$0 = $54;$__opt$0 = $47;
      } else {
       $62 = $$0$ph89;$__cmd$0 = $47;$__opt$0 = 0;
      }
      $55 = HEAP32[$this>>2]|0;
      $56 = ((($55)) + 36|0);
      $57 = HEAP32[$56>>2]|0;
      HEAP32[$1>>2] = $58;
      HEAP32[$2>>2] = $59;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $60 = (FUNCTION_TABLE_iiiiiiiii[$57 & 15]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $60;
      $61 = ((($62)) + 8|0);
      $$0$ph$be = $61;
     } else {
      $66 = HEAP32[$$0$ph89>>2]|0;
      $67 = HEAP32[$4>>2]|0;
      $68 = ((($67)) + 12|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = (FUNCTION_TABLE_iiii[$69 & 31]($4,8192,$66)|0);
      if ($70) {
       $$0$pn = $$0$ph89;
      } else {
       $125 = ((($126)) + 12|0);
       $127 = HEAP32[$125>>2]|0;
       $128 = ((($126)) + 16|0);
       $129 = HEAP32[$128>>2]|0;
       $130 = ($127|0)==($129|0);
       if ($130) {
        $131 = HEAP32[$126>>2]|0;
        $132 = ((($131)) + 36|0);
        $133 = HEAP32[$132>>2]|0;
        $134 = (FUNCTION_TABLE_ii[$133 & 63]($126)|0);
        $$0$i$i17 = $134;
       } else {
        $135 = HEAP32[$127>>2]|0;
        $$0$i$i17 = $135;
       }
       $136 = HEAP32[$4>>2]|0;
       $137 = ((($136)) + 28|0);
       $138 = HEAP32[$137>>2]|0;
       $139 = (FUNCTION_TABLE_iii[$138 & 15]($4,$$0$i$i17)|0);
       $140 = HEAP32[$$0$ph89>>2]|0;
       $141 = HEAP32[$4>>2]|0;
       $142 = ((($141)) + 28|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = (FUNCTION_TABLE_iii[$143 & 15]($4,$140)|0);
       $145 = ($139|0)==($144|0);
       if (!($145)) {
        label = 59;
        break L2;
       }
       $146 = HEAP32[$125>>2]|0;
       $147 = HEAP32[$128>>2]|0;
       $148 = ($146|0)==($147|0);
       if ($148) {
        $149 = HEAP32[$126>>2]|0;
        $150 = ((($149)) + 40|0);
        $151 = HEAP32[$150>>2]|0;
        (FUNCTION_TABLE_ii[$151 & 63]($126)|0);
       } else {
        $152 = ((($146)) + 4|0);
        HEAP32[$125>>2] = $152;
       }
       $153 = ((($$0$ph89)) + 4|0);
       $$0$ph$be = $153;
       break;
      }
      while(1) {
       $$2 = ((($$0$pn)) + 4|0);
       $71 = ($$2|0)==($__fmte|0);
       if ($71) {
        $$2$lcssa = $__fmte;
        break;
       }
       $72 = HEAP32[$$2>>2]|0;
       $73 = HEAP32[$4>>2]|0;
       $74 = ((($73)) + 12|0);
       $75 = HEAP32[$74>>2]|0;
       $76 = (FUNCTION_TABLE_iiii[$75 & 31]($4,8192,$72)|0);
       if ($76) {
        $$0$pn = $$2;
       } else {
        $$2$lcssa = $$2;
        break;
       }
      }
      $$pre$i$i$i7 = $126;$$pre$i3$i$i13 = $184;$89 = $184;
      while(1) {
       $77 = ($$pre$i$i$i7|0)==(0|0);
       if ($77) {
        $102 = 1;$104 = 0;
       } else {
        $78 = ((($$pre$i$i$i7)) + 12|0);
        $79 = HEAP32[$78>>2]|0;
        $80 = ((($$pre$i$i$i7)) + 16|0);
        $81 = HEAP32[$80>>2]|0;
        $82 = ($79|0)==($81|0);
        if ($82) {
         $83 = HEAP32[$$pre$i$i$i7>>2]|0;
         $84 = ((($83)) + 36|0);
         $85 = HEAP32[$84>>2]|0;
         $86 = (FUNCTION_TABLE_ii[$85 & 63]($$pre$i$i$i7)|0);
         $$0$i$i$i$i5 = $86;
        } else {
         $87 = HEAP32[$79>>2]|0;
         $$0$i$i$i$i5 = $87;
        }
        $88 = ($$0$i$i$i$i5|0)==(-1);
        if ($88) {
         HEAP32[$__b>>2] = 0;
         $102 = 1;$104 = 0;
        } else {
         $102 = 0;$104 = $$pre$i$i$i7;
        }
       }
       $90 = ($89|0)==(0|0);
       do {
        if ($90) {
         $$pre$i3$i$i1345 = $$pre$i3$i$i13;
         label = 42;
        } else {
         $91 = ((($89)) + 12|0);
         $92 = HEAP32[$91>>2]|0;
         $93 = ((($89)) + 16|0);
         $94 = HEAP32[$93>>2]|0;
         $95 = ($92|0)==($94|0);
         if ($95) {
          $96 = HEAP32[$89>>2]|0;
          $97 = ((($96)) + 36|0);
          $98 = HEAP32[$97>>2]|0;
          $99 = (FUNCTION_TABLE_ii[$98 & 63]($89)|0);
          $$0$i$i1$i$i11 = $99;
         } else {
          $100 = HEAP32[$92>>2]|0;
          $$0$i$i1$i$i11 = $100;
         }
         $101 = ($$0$i$i1$i$i11|0)==(-1);
         if ($101) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i1345 = 0;
          label = 42;
          break;
         } else {
          $phitmp$i4$i$i14 = ($$pre$i3$i$i13|0)==(0|0);
          $tmp$i$i16 = $102 ^ $phitmp$i4$i$i14;
          if ($tmp$i$i16) {
           $$pre$i3$i$i1344 = $$pre$i3$i$i13;$185 = $$pre$i3$i$i13;
           break;
          } else {
           $$0$ph$be = $$2$lcssa;
           break L24;
          }
         }
        }
       } while(0);
       if ((label|0) == 42) {
        label = 0;
        if ($102) {
         $$0$ph$be = $$2$lcssa;
         break L24;
        } else {
         $$pre$i3$i$i1344 = $$pre$i3$i$i1345;$185 = 0;
        }
       }
       $103 = ((($104)) + 12|0);
       $105 = HEAP32[$103>>2]|0;
       $106 = ((($104)) + 16|0);
       $107 = HEAP32[$106>>2]|0;
       $108 = ($105|0)==($107|0);
       if ($108) {
        $109 = HEAP32[$104>>2]|0;
        $110 = ((($109)) + 36|0);
        $111 = HEAP32[$110>>2]|0;
        $112 = (FUNCTION_TABLE_ii[$111 & 63]($104)|0);
        $$0$i$i = $112;
       } else {
        $113 = HEAP32[$105>>2]|0;
        $$0$i$i = $113;
       }
       $114 = HEAP32[$4>>2]|0;
       $115 = ((($114)) + 12|0);
       $116 = HEAP32[$115>>2]|0;
       $117 = (FUNCTION_TABLE_iiii[$116 & 31]($4,8192,$$0$i$i)|0);
       if (!($117)) {
        $$0$ph$be = $$2$lcssa;
        break L24;
       }
       $118 = HEAP32[$103>>2]|0;
       $119 = HEAP32[$106>>2]|0;
       $120 = ($118|0)==($119|0);
       if ($120) {
        $121 = HEAP32[$104>>2]|0;
        $122 = ((($121)) + 40|0);
        $123 = HEAP32[$122>>2]|0;
        (FUNCTION_TABLE_ii[$123 & 63]($104)|0);
        $$pre$i$i$i7 = $104;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$89 = $185;
        continue;
       } else {
        $124 = ((($118)) + 4|0);
        HEAP32[$103>>2] = $124;
        $$pre$i$i$i7 = $104;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$89 = $185;
        continue;
       }
      }
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $63 = ($$0$ph$be|0)!=($__fmte|0);
    $64 = ($$pre$pre|0)==(0);
    $or$cond87 = $63 & $64;
    $65 = HEAP32[$__b>>2]|0;
    if ($or$cond87) {
     $$0$ph89 = $$0$ph$be;$7 = $65;
    } else {
     $$pre$i$i$i22 = $65;
     break L1;
    }
   }
   if ((label|0) == 16) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa;
    break;
   }
   else if ((label|0) == 19) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa97;
    break;
   }
   else if ((label|0) == 22) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa98;
    break;
   }
   else if ((label|0) == 59) {
    HEAP32[$__err>>2] = 4;
    $154 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i22 = $154;
    break;
   }
  }
 } while(0);
 $155 = ($$pre$i$i$i22|0)==(0|0);
 if ($155) {
  $182 = 0;$186 = 1;
 } else {
  $156 = ((($$pre$i$i$i22)) + 12|0);
  $157 = HEAP32[$156>>2]|0;
  $158 = ((($$pre$i$i$i22)) + 16|0);
  $159 = HEAP32[$158>>2]|0;
  $160 = ($157|0)==($159|0);
  if ($160) {
   $161 = HEAP32[$$pre$i$i$i22>>2]|0;
   $162 = ((($161)) + 36|0);
   $163 = HEAP32[$162>>2]|0;
   $164 = (FUNCTION_TABLE_ii[$163 & 63]($$pre$i$i$i22)|0);
   $$0$i$i$i$i20 = $164;
  } else {
   $165 = HEAP32[$157>>2]|0;
   $$0$i$i$i$i20 = $165;
  }
  $166 = ($$0$i$i$i$i20|0)==(-1);
  if ($166) {
   HEAP32[$__b>>2] = 0;
   $182 = 0;$186 = 1;
  } else {
   $182 = $$pre$i$i$i22;$186 = 0;
  }
 }
 $167 = HEAP32[$__e>>2]|0;
 $168 = ($167|0)==(0|0);
 do {
  if ($168) {
   label = 72;
  } else {
   $169 = ((($167)) + 12|0);
   $170 = HEAP32[$169>>2]|0;
   $171 = ((($167)) + 16|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = ($170|0)==($172|0);
   if ($173) {
    $174 = HEAP32[$167>>2]|0;
    $175 = ((($174)) + 36|0);
    $176 = HEAP32[$175>>2]|0;
    $177 = (FUNCTION_TABLE_ii[$176 & 63]($167)|0);
    $$0$i$i1$i$i26 = $177;
   } else {
    $178 = HEAP32[$170>>2]|0;
    $$0$i$i1$i$i26 = $178;
   }
   $179 = ($$0$i$i1$i$i26|0)==(-1);
   if ($179) {
    HEAP32[$__e>>2] = 0;
    label = 72;
    break;
   } else {
    if ($186) {
     break;
    } else {
     label = 74;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 72) {
  if ($186) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $180 = HEAP32[$__err>>2]|0;
  $181 = $180 | 2;
  HEAP32[$__err>>2] = $181;
 }
 STACKTOP = sp;return ($182|0);
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,9368,(9400))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 63]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 4|0);
 $15 = $11 ? $14 : $13;
 $16 = HEAP32[$14>>2]|0;
 $17 = $9&255;
 $18 = $17 >>> 1;
 $19 = $11 ? $18 : $16;
 $20 = (($15) + ($19<<2)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $21 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$20)|0);
 STACKTOP = sp;return ($21|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6264)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 24|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 63]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6264)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 16|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($0,6264)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
 $4 = ((($__tm)) + 20|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $5;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$4,$__b,$$byval_copy,$__err,$3);
 $6 = HEAP32[$__b>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy30 = sp + 132|0;
 $$byval_copy26 = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 $34 = (__ZNKSt3__16locale9use_facetERNS0_2idE($1,6264)|0);
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $35 = $__fmt << 24 >> 24;
 do {
  switch ($35|0) {
  case 65: case 97:  {
   $36 = ((($__tm)) + 24|0);
   $37 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $37;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$36,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 84:  {
   $88 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $88;
   $89 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $89;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$24>>2]|0;
   $90 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9536,(9568))|0);
   HEAP32[$__b>>2] = $90;
   label = 26;
   break;
  }
  case 89:  {
   $121 = ((($__tm)) + 20|0);
   $122 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $122;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$121,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 37:  {
   $123 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $123;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 99:  {
   $40 = ((($this)) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($41)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_ii[$43 & 63]($40)|0);
   $45 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $45;
   $46 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $46;
   $47 = HEAP8[$44>>0]|0;
   $48 = $47 & 1;
   $49 = ($48<<24>>24)==(0);
   $50 = ((($44)) + 8|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($44)) + 4|0);
   $53 = $49 ? $52 : $51;
   $54 = HEAP32[$52>>2]|0;
   $55 = $47&255;
   $56 = $55 >>> 1;
   $57 = $49 ? $56 : $54;
   $58 = (($53) + ($57<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$5>>2]|0;
   $59 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$53,$58)|0);
   HEAP32[$__b>>2] = $59;
   label = 26;
   break;
  }
  case 70:  {
   $65 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $65;
   $66 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $66;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$10>>2]|0;
   $67 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9432,(9464))|0);
   HEAP32[$__b>>2] = $67;
   label = 26;
   break;
  }
  case 104: case 66: case 98:  {
   $38 = ((($__tm)) + 16|0);
   $39 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $39;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$38,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 73:  {
   $70 = ((($__tm)) + 8|0);
   $71 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $71;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$70,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 114:  {
   $81 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $81;
   $82 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $82;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$19>>2]|0;
   $83 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9464,(9508))|0);
   HEAP32[$__b>>2] = $83;
   label = 26;
   break;
  }
  case 83:  {
   $87 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $87;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__tm,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 119:  {
   $91 = ((($__tm)) + 24|0);
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $92;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$91,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 77:  {
   $76 = ((($__tm)) + 4|0);
   $77 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $77;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$76,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 116: case 110:  {
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $78;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 120:  {
   $93 = HEAP32[$this>>2]|0;
   $94 = ((($93)) + 20|0);
   $95 = HEAP32[$94>>2]|0;
   $96 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $96;
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $97;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$27>>2]|0;
   $98 = (FUNCTION_TABLE_iiiiiii[$95 & 63]($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $98;
   break;
  }
  case 88:  {
   $99 = ((($this)) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = ((($100)) + 24|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = (FUNCTION_TABLE_ii[$102 & 63]($99)|0);
   $104 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $104;
   $105 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $105;
   $106 = HEAP8[$103>>0]|0;
   $107 = $106 & 1;
   $108 = ($107<<24>>24)==(0);
   $109 = ((($103)) + 8|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = ((($103)) + 4|0);
   $112 = $108 ? $111 : $110;
   $113 = HEAP32[$111>>2]|0;
   $114 = $106&255;
   $115 = $114 >>> 1;
   $116 = $108 ? $115 : $113;
   $117 = (($112) + ($116<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$29>>2]|0;
   $118 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,$112,$117)|0);
   HEAP32[$__b>>2] = $118;
   label = 26;
   break;
  }
  case 101: case 100:  {
   $60 = ((($__tm)) + 12|0);
   $61 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $61;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$60,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 121:  {
   $119 = ((($__tm)) + 20|0);
   $120 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $120;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$119,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 106:  {
   $72 = ((($__tm)) + 28|0);
   $73 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $73;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$72,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 109:  {
   $74 = ((($__tm)) + 16|0);
   $75 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $75;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$74,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 72:  {
   $68 = ((($__tm)) + 8|0);
   $69 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $69;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$68,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  case 68:  {
   $62 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $62;
   $63 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $63;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$8>>2]|0;
   $64 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9400,(9432))|0);
   HEAP32[$__b>>2] = $64;
   label = 26;
   break;
  }
  case 82:  {
   $84 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $84;
   $85 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $85;
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$21>>2]|0;
   $86 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy30,$__iob,$__err,$__tm,9512,(9532))|0);
   HEAP32[$__b>>2] = $86;
   label = 26;
   break;
  }
  case 112:  {
   $79 = ((($__tm)) + 8|0);
   $80 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $80;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$79,$__b,$$byval_copy30,$__err,$34);
   label = 26;
   break;
  }
  default: {
   $124 = HEAP32[$__err>>2]|0;
   $125 = $124 | 4;
   HEAP32[$__err>>2] = $125;
   label = 26;
  }
  }
 } while(0);
 if ((label|0) == 26) {
  $126 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $126;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $0 = HEAP32[$__b>>2]|0;
  $1 = ($0|0)==(0|0);
  do {
   if ($1) {
    $78 = 1;
   } else {
    $2 = ((($0)) + 12|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = ((($0)) + 16|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($3|0)==($5|0);
    if ($6) {
     $7 = HEAP32[$0>>2]|0;
     $8 = ((($7)) + 36|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
     $$0$i$i$i$i = $10;
    } else {
     $11 = HEAP32[$3>>2]|0;
     $$0$i$i$i$i = $11;
    }
    $12 = ($$0$i$i$i$i|0)==(-1);
    if ($12) {
     HEAP32[$__b>>2] = 0;
     $78 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $78 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $13 = HEAP32[$__e>>2]|0;
  $14 = ($13|0)==(0|0);
  do {
   if ($14) {
    label = 15;
   } else {
    $15 = ((($13)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($13)) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)==($18|0);
    if ($19) {
     $20 = HEAP32[$13>>2]|0;
     $21 = ((($20)) + 36|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
     $$0$i$i1$i$i = $23;
    } else {
     $24 = HEAP32[$16>>2]|0;
     $$0$i$i1$i$i = $24;
    }
    $25 = ($$0$i$i1$i$i|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($78) {
      $79 = $13;
      break;
     } else {
      $$pre$i3$i$i9 = $13;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else {
    $79 = 0;
   }
  }
  $26 = HEAP32[$__b>>2]|0;
  $27 = ((($26)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ((($26)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($28|0)==($30|0);
  if ($31) {
   $32 = HEAP32[$26>>2]|0;
   $33 = ((($32)) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_ii[$34 & 63]($26)|0);
   $$0$i$i = $35;
  } else {
   $36 = HEAP32[$28>>2]|0;
   $$0$i$i = $36;
  }
  $37 = HEAP32[$__ct>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 31]($__ct,8192,$$0$i$i)|0);
  if (!($40)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b>>2]|0;
  $42 = ((($41)) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ((($41)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43|0)==($45|0);
  if ($46) {
   $47 = HEAP32[$41>>2]|0;
   $48 = ((($47)) + 40|0);
   $49 = HEAP32[$48>>2]|0;
   (FUNCTION_TABLE_ii[$49 & 63]($41)|0);
   continue;
  } else {
   $50 = ((($43)) + 4|0);
   HEAP32[$42>>2] = $50;
   continue;
  }
 }
 $51 = HEAP32[$__b>>2]|0;
 $52 = ($51|0)==(0|0);
 do {
  if ($52) {
   $80 = 1;
  } else {
   $53 = ((($51)) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($51)) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($54|0)==($56|0);
   if ($57) {
    $58 = HEAP32[$51>>2]|0;
    $59 = ((($58)) + 36|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_ii[$60 & 63]($51)|0);
    $$0$i$i$i$i1 = $61;
   } else {
    $62 = HEAP32[$54>>2]|0;
    $$0$i$i$i$i1 = $62;
   }
   $63 = ($$0$i$i$i$i1|0)==(-1);
   if ($63) {
    HEAP32[$__b>>2] = 0;
    $80 = 1;
    break;
   } else {
    $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
    $80 = $phitmp$i$i$i4;
    break;
   }
  }
 } while(0);
 $64 = ($$pre$i3$i$i9|0)==(0|0);
 do {
  if ($64) {
   label = 37;
  } else {
   $65 = ((($$pre$i3$i$i9)) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ((($$pre$i3$i$i9)) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$$pre$i3$i$i9>>2]|0;
    $71 = ((($70)) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i3$i$i9)|0);
    $$0$i$i1$i$i7 = $73;
   } else {
    $74 = HEAP32[$66>>2]|0;
    $$0$i$i1$i$i7 = $74;
   }
   $75 = ($$0$i$i1$i$i7|0)==(-1);
   if ($75) {
    HEAP32[$__e>>2] = 0;
    label = 37;
    break;
   } else {
    if ($80) {
     break;
    } else {
     label = 39;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($80) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $76 = HEAP32[$__err>>2]|0;
  $77 = $76 | 2;
  HEAP32[$__err>>2] = $77;
 }
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 63]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $83 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($83) {
     $$pre$i3$i$i915 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($83) {
   label = 16;
  } else {
   $$pre$i3$i$i915 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 52|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 31]($__ct,$$0$i$i,0)|0);
   $43 = ($42<<24>>24)==(37);
   if (!($43)) {
    $44 = HEAP32[$__err>>2]|0;
    $45 = $44 | 4;
    HEAP32[$__err>>2] = $45;
    break;
   }
   $46 = HEAP32[$__b>>2]|0;
   $47 = ((($46)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($46)) + 16|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)==($50|0);
   if ($51) {
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 40|0);
    $55 = HEAP32[$54>>2]|0;
    (FUNCTION_TABLE_ii[$55 & 63]($46)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $56 = ($$pre|0)==(0|0);
    if ($56) {
     $84 = 1;
    } else {
     $58 = $$pre;
     label = 25;
    }
   } else {
    $52 = ((($48)) + 4|0);
    HEAP32[$47>>2] = $52;
    $58 = $46;
    label = 25;
   }
   do {
    if ((label|0) == 25) {
     $57 = ((($58)) + 12|0);
     $59 = HEAP32[$57>>2]|0;
     $60 = ((($58)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$58>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 63]($58)|0);
      $$0$i$i$i$i1 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i$i$i1 = $67;
     }
     $68 = ($$0$i$i$i$i1|0)==(-1);
     if ($68) {
      HEAP32[$__b>>2] = 0;
      $84 = 1;
      break;
     } else {
      $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
      $84 = $phitmp$i$i$i4;
      break;
     }
    }
   } while(0);
   $69 = ($$pre$i3$i$i915|0)==(0|0);
   do {
    if ($69) {
     label = 37;
    } else {
     $70 = ((($$pre$i3$i$i915)) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($$pre$i3$i$i915)) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$$pre$i3$i$i915>>2]|0;
      $76 = ((($75)) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 63]($$pre$i3$i$i915)|0);
      $$0$i$i1$i$i7 = $78;
     } else {
      $79 = HEAP32[$71>>2]|0;
      $$0$i$i1$i$i7 = $79;
     }
     $80 = ($$0$i$i1$i$i7|0)==(-1);
     if ($80) {
      HEAP32[$__e>>2] = 0;
      label = 37;
      break;
     } else {
      if ($84) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 37) {
    if (!($84)) {
     break;
    }
   }
   $81 = HEAP32[$__err>>2]|0;
   $82 = $81 | 2;
   HEAP32[$__err>>2] = $82;
  }
 } while(0);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16__clocEv()|0);
 $2 = ($0|0)==($1|0);
 if (!($2)) {
  $3 = HEAP32[$this>>2]|0;
  _freelocale(($3|0));
 }
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$9 = $6;
  while(1) {
   $8 = HEAP8[$$0$i$i2>>0]|0;
   $10 = ($9|0)==(0|0);
   do {
    if ($10) {
     $25 = 0;
    } else {
     $11 = ((($9)) + 24|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($9)) + 28|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($12|0)==($14|0);
     if ($15) {
      $17 = HEAP32[$9>>2]|0;
      $18 = ((($17)) + 52|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = $8&255;
      $21 = (FUNCTION_TABLE_iii[$19 & 15]($9,$20)|0);
      $22 = ($21|0)==(-1);
      $$$i = $22 ? 0 : $9;
      $25 = $$$i;
      break;
     } else {
      $16 = ((($12)) + 1|0);
      HEAP32[$11>>2] = $16;
      HEAP8[$12>>0] = $8;
      $25 = $9;
      break;
     }
    }
   } while(0);
   $23 = ((($$0$i$i2)) + 1|0);
   $24 = ($23|0)==($4|0);
   if ($24) {
    $$lcssa = $25;
    break;
   } else {
    $$0$i$i2 = $23;$9 = $25;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = ((($fmt)) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = ((($fmt)) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = ((($fmt)) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $4;
 $6 = $__nb;
 $7 = (($5) - ($6))|0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (_strftime_l(($__nb|0),($7|0),($fmt|0),($__tm|0),($8|0))|0);
 $10 = (($__nb) + ($9)|0);
 HEAP32[$__ne>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i$i$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0;
 $__nar = sp + 8|0;
 $__ne = sp;
 $2 = ((($__nar)) + 400|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$9 = $6;
  while(1) {
   $8 = HEAP32[$$0$i$i2>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $24 = 0;
   } else {
    $11 = ((($9)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($9)) + 28|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($12|0)==($14|0);
    if ($15) {
     $16 = HEAP32[$9>>2]|0;
     $17 = ((($16)) + 52|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = (FUNCTION_TABLE_iii[$18 & 15]($9,$8)|0);
     $$0$i$i$i$i = $19;
    } else {
     $20 = ((($12)) + 4|0);
     HEAP32[$11>>2] = $20;
     HEAP32[$12>>2] = $8;
     $$0$i$i$i$i = $8;
    }
    $21 = ($$0$i$i$i$i|0)==(-1);
    $$$i = $21 ? 0 : $9;
    $24 = $$$i;
   }
   $22 = ((($$0$i$i2)) + 4|0);
   $23 = ($22|0)==($4|0);
   if ($23) {
    $$lcssa = $24;
    break;
   } else {
    $$0$i$i2 = $22;$9 = $24;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__wb = $__wb|0;
 $__we = $__we|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $__nar = sp + 16|0;
 $__ne = sp + 12|0;
 $mb = sp;
 $__nb = sp + 8|0;
 $0 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $0;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $1 = $mb;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[$__nb>>2] = $__nar;
 $5 = HEAP32[$__we>>2]|0;
 $6 = $5;
 $7 = $__wb;
 $8 = (($6) - ($7))|0;
 $9 = $8 >> 2;
 $10 = HEAP32[$this>>2]|0;
 $11 = (_uselocale(($10|0))|0);
 $12 = (_mbsrtowcs($__wb,$__nb,$9,$mb)|0);
 $13 = ($11|0)==(0|0);
 if (!($13)) {
  (_uselocale(($11|0))|0);
 }
 $14 = (($__wb) + ($12<<2)|0);
 HEAP32[$__we>>2] = $14;
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0$lcssa$i = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$25 = 0, $__neg = 0, $__w$04 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $$byval_copy = sp + 24|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 136|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 134|0;
 $0 = sp + 4|0;
 $__atoms = sp + 124|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 100|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6272)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 if ($9) {
  $10 = HEAP32[$5>>2]|0;
  $11 = ((($10)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 7]($5,9568,(9578),$__atoms)|0);
  $13 = HEAP32[$__wn>>2]|0;
  $14 = HEAP32[$__wb>>2]|0;
  $15 = $13;
  $16 = $14;
  $17 = (($15) - ($16))|0;
  $18 = ($17|0)>(98);
  if ($18) {
   $19 = (($17) + 2)|0;
   $20 = (_malloc($19)|0);
   $21 = $20;
   $22 = ($20|0)==(0|0);
   if ($22) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $50 = $21;$__nc$0 = $20;
   }
  } else {
   $50 = 0;$__nc$0 = $$byval_copy;
  }
  $23 = HEAP8[$__neg>>0]|0;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $__nc$1 = $__nc$0;
  } else {
   $25 = ((($__nc$0)) + 1|0);
   HEAP8[$__nc$0>>0] = 45;
   $__nc$1 = $25;
  }
  $26 = ((($__atoms)) + 10|0);
  $27 = $__atoms;
  $28 = ($14>>>0)<($13>>>0);
  if ($28) {
   $29 = ((($__atoms)) + 1|0);
   $30 = ((($29)) + 1|0);
   $31 = ((($30)) + 1|0);
   $32 = ((($31)) + 1|0);
   $33 = ((($32)) + 1|0);
   $34 = ((($33)) + 1|0);
   $35 = ((($34)) + 1|0);
   $36 = ((($35)) + 1|0);
   $37 = ((($36)) + 1|0);
   $__nc$25 = $__nc$1;$__w$04 = $14;
   while(1) {
    $38 = HEAP8[$__w$04>>0]|0;
    $39 = HEAP8[$__atoms>>0]|0;
    $40 = ($39<<24>>24)==($38<<24>>24);
    if ($40) {
     $$0$lcssa$i = $__atoms;
    } else {
     $41 = HEAP8[$29>>0]|0;
     $42 = ($41<<24>>24)==($38<<24>>24);
     if ($42) {
      $$0$lcssa$i = $29;
     } else {
      $86 = HEAP8[$30>>0]|0;
      $87 = ($86<<24>>24)==($38<<24>>24);
      if ($87) {
       $$0$lcssa$i = $30;
      } else {
       $88 = HEAP8[$31>>0]|0;
       $89 = ($88<<24>>24)==($38<<24>>24);
       if ($89) {
        $$0$lcssa$i = $31;
       } else {
        $90 = HEAP8[$32>>0]|0;
        $91 = ($90<<24>>24)==($38<<24>>24);
        if ($91) {
         $$0$lcssa$i = $32;
        } else {
         $92 = HEAP8[$33>>0]|0;
         $93 = ($92<<24>>24)==($38<<24>>24);
         if ($93) {
          $$0$lcssa$i = $33;
         } else {
          $94 = HEAP8[$34>>0]|0;
          $95 = ($94<<24>>24)==($38<<24>>24);
          if ($95) {
           $$0$lcssa$i = $34;
          } else {
           $96 = HEAP8[$35>>0]|0;
           $97 = ($96<<24>>24)==($38<<24>>24);
           if ($97) {
            $$0$lcssa$i = $35;
           } else {
            $98 = HEAP8[$36>>0]|0;
            $99 = ($98<<24>>24)==($38<<24>>24);
            if ($99) {
             $$0$lcssa$i = $36;
            } else {
             $100 = HEAP8[$37>>0]|0;
             $101 = ($100<<24>>24)==($38<<24>>24);
             $$ = $101 ? $37 : $26;
             $$0$lcssa$i = $$;
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $43 = $$0$lcssa$i;
    $44 = (($43) - ($27))|0;
    $45 = (9568 + ($44)|0);
    $46 = HEAP8[$45>>0]|0;
    HEAP8[$__nc$25>>0] = $46;
    $47 = ((($__w$04)) + 1|0);
    $48 = ((($__nc$25)) + 1|0);
    $$pre = HEAP32[$__wn>>2]|0;
    $49 = ($47>>>0)<($$pre>>>0);
    if ($49) {
     $__nc$25 = $48;$__w$04 = $47;
    } else {
     $__nc$2$lcssa = $48;
     break;
    }
   }
  } else {
   $__nc$2$lcssa = $__nc$1;
  }
  HEAP8[$__nc$2$lcssa>>0] = 0;
  HEAP32[$vararg_buffer>>2] = $__v;
  (_sscanf($$byval_copy,9584,$vararg_buffer)|0);
  $51 = ($50|0)==(0);
  if (!($51)) {
   $52 = $50;
   _free($52);
  }
 }
 $53 = HEAP32[$__b>>2]|0;
 $54 = ($53|0)==(0|0);
 do {
  if ($54) {
   $65 = 0;
  } else {
   $55 = ((($53)) + 12|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ((($53)) + 16|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ($56|0)==($58|0);
   if ($59) {
    $60 = HEAP32[$53>>2]|0;
    $61 = ((($60)) + 36|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = (FUNCTION_TABLE_ii[$62 & 63]($53)|0);
    $64 = ($63|0)==(-1);
    if ($64) {
     HEAP32[$__b>>2] = 0;
     $65 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $65 = $$pre$i$i$i;
     break;
    }
   } else {
    $65 = $53;
   }
  }
 } while(0);
 $66 = ($65|0)==(0|0);
 $67 = HEAP32[$__e>>2]|0;
 $68 = ($67|0)==(0|0);
 do {
  if ($68) {
   label = 25;
  } else {
   $69 = ((($67)) + 12|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ((($67)) + 16|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ($70|0)==($72|0);
   if ($73) {
    $74 = HEAP32[$67>>2]|0;
    $75 = ((($74)) + 36|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (FUNCTION_TABLE_ii[$76 & 63]($67)|0);
    $78 = ($77|0)==(-1);
    if ($78) {
     HEAP32[$__e>>2] = 0;
     label = 25;
     break;
    }
   }
   if (!($66)) {
    label = 26;
   }
  }
 } while(0);
 if ((label|0) == 25) {
  if ($66) {
   label = 26;
  }
 }
 if ((label|0) == 26) {
  $79 = HEAP32[$__err>>2]|0;
  $80 = $79 | 2;
  HEAP32[$__err>>2] = $80;
 }
 $81 = HEAP32[$__b>>2]|0;
 $82 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($82)|0);
 $83 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $84 = ($83|0)==(0|0);
 if (!($84)) {
  $85 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$85 & 127]($83);
 }
 STACKTOP = sp;return ($81|0);
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i103 = 0, $$0$i$i105 = 0, $$0$i$i120 = 0, $$0$i$i27 = 0, $$0$i$i37 = 0, $$0$i$i39 = 0, $$0$i$i49 = 0, $$0$i$i55 = 0, $$0$i$i59 = 0, $$0$i$i75 = 0, $$0$i$i87 = 0, $$0$i$i95 = 0, $$in241 = 0, $$lcssa = 0, $$lcssa176 = 0, $$lcssa223 = 0, $$lcssa224 = 0, $$ph = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert198 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i109 = 0, $$pre$i$i$i124 = 0, $$pre$i$i$i30 = 0, $$pre$i$i$i41 = 0, $$pre$i$i$i63 = 0, $$pre$i$i$i79 = 0, $$pre$i2$i$i113 = 0, $$pre$i2$i$i113183 = 0, $$pre$i2$i$i113185 = 0, $$pre$i2$i$i128192 = 0, $$pre$i2$i$i128193 = 0, $$pre$i2$i$i128246 = 0, $$pre$i2$i$i45 = 0, $$pre$i2$i$i45200 = 0, $$pre$i2$i$i45202 = 0, $$pre$i2$i$i67188$ph = 0;
 var $$pre$i2$i$i67188205 = 0, $$pre$i2$i$i67237 = 0, $$pre$i2$i$i83 = 0, $$pre186 = 0, $$pre187 = 0, $$pre190 = 0, $$pre191 = 0, $$pre195 = 0, $$pre196 = 0, $$pre197 = 0, $$pre199 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0;
 var $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0253 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0255 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0;
 var $cond = 0, $isascii1$i = 0, $isascii1$i101 = 0, $isascii1$i140 = 0, $isascii1$i51 = 0, $isascii1$i57 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond222 = 0, $or$cond7 = 0, $or$cond9 = 0, $sext = 0, $sext165 = 0, $sext166 = 0, $sext167 = 0, $switch = 0, $tmp$i$i115 = 0, $tmp$i$i130 = 0, $tmp$i$i47 = 0, $tmp$i$i69 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $0 = sp + 488|0;
 $__gbuf = sp + 88|0;
 $__gb = sp + 80|0;
 $__gn = sp + 72|0;
 $__ge = sp + 68|0;
 $__pat = sp + 496|0;
 $__dp = sp + 493|0;
 $__ts = sp + 492|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (107);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd);
 $14 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wn>>2] = $14;
 $15 = ((($__ct)) + 8|0);
 $16 = ((($__psn)) + 4|0);
 $17 = ((($__nsn)) + 4|0);
 $18 = ((($__nsn)) + 8|0);
 $19 = ((($__nsn)) + 1|0);
 $20 = ((($__psn)) + 8|0);
 $21 = ((($__psn)) + 1|0);
 $22 = $__flags & 512;
 $23 = ($22|0)!=(0);
 $24 = ((($__sym)) + 8|0);
 $25 = ((($__sym)) + 1|0);
 $26 = ((($__sym)) + 4|0);
 $27 = ((($__spaces)) + 4|0);
 $28 = ((($__spaces)) + 8|0);
 $29 = ((($__spaces)) + 1|0);
 $30 = ((($__pat)) + 3|0);
 $31 = ((($__grp)) + 4|0);
 $750 = $__gbuf;$__p$0253 = 0;$__trailing_sign$0255 = 0;
 L1: while(1) {
  $32 = HEAP32[$__b>>2]|0;
  $33 = ($32|0)==(0|0);
  do {
   if ($33) {
    $44 = 0;
   } else {
    $34 = ((($32)) + 12|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ((($32)) + 16|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($35|0)==($37|0);
    if ($38) {
     $39 = HEAP32[$32>>2]|0;
     $40 = ((($39)) + 36|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = (FUNCTION_TABLE_ii[$41 & 63]($32)|0);
     $43 = ($42|0)==(-1);
     if ($43) {
      HEAP32[$__b>>2] = 0;
      $44 = 0;
      break;
     } else {
      $$pre$i$i$i30 = HEAP32[$__b>>2]|0;
      $44 = $$pre$i$i$i30;
      break;
     }
    } else {
     $44 = $32;
    }
   }
  } while(0);
  $45 = ($44|0)==(0|0);
  $46 = HEAP32[$__e>>2]|0;
  $47 = ($46|0)==(0|0);
  do {
   if ($47) {
    label = 12;
   } else {
    $48 = ((($46)) + 12|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ((($46)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if (!($52)) {
     if ($45) {
      $751 = $46;
      break;
     } else {
      $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
      label = 202;
      break L1;
     }
    }
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 36|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (FUNCTION_TABLE_ii[$55 & 63]($46)|0);
    $57 = ($56|0)==(-1);
    if ($57) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($45) {
      $751 = $46;
      break;
     } else {
      $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
      label = 202;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($45) {
    $$lcssa224 = $750;$__trailing_sign$0$lcssa = $__trailing_sign$0255;
    label = 202;
    break;
   } else {
    $751 = 0;
   }
  }
  $58 = (($__pat) + ($__p$0253)|0);
  $59 = HEAP8[$58>>0]|0;
  $60 = $59 << 24 >> 24;
  L21: do {
   switch ($60|0) {
   case 2:  {
    $304 = ($__trailing_sign$0255|0)!=(0|0);
    $305 = ($__p$0253>>>0)<(2);
    $or$cond = $305 | $304;
    if (!($or$cond)) {
     $306 = ($__p$0253|0)==(2);
     $307 = HEAP8[$30>>0]|0;
     $308 = ($307<<24>>24)!=(0);
     $309 = $306 & $308;
     $brmerge = $23 | $309;
     if (!($brmerge)) {
      $752 = $750;$__trailing_sign$1 = 0;
      break L21;
     }
    }
    $310 = HEAP8[$__sym>>0]|0;
    $311 = $310 & 1;
    $312 = ($311<<24>>24)==(0);
    $313 = HEAP32[$24>>2]|0;
    $314 = $312 ? $25 : $313;
    $315 = $314;
    $316 = ($__p$0253|0)==(0);
    L26: do {
     if ($316) {
      $$ph = $315;
     } else {
      $327 = (($__p$0253) + -1)|0;
      $328 = (($__pat) + ($327)|0);
      $329 = HEAP8[$328>>0]|0;
      $switch = ($329&255)<(2);
      if ($switch) {
       $330 = HEAP32[$26>>2]|0;
       $331 = $310&255;
       $332 = $331 >>> 1;
       $333 = $312 ? $332 : $330;
       $334 = (($314) + ($333)|0);
       $335 = HEAP32[$15>>2]|0;
       $336 = ($333|0)==(0);
       L29: do {
        if ($336) {
         $$lcssa223 = $315;
        } else {
         $338 = $314;$754 = $315;
         while(1) {
          $337 = HEAP8[$338>>0]|0;
          $isascii1$i140 = ($337<<24>>24)>(-1);
          if (!($isascii1$i140)) {
           $$lcssa223 = $754;
           break L29;
          }
          $339 = $337 << 24 >> 24;
          $340 = (($335) + ($339<<1)|0);
          $341 = HEAP16[$340>>1]|0;
          $342 = $341 & 8192;
          $343 = ($342<<16>>16)==(0);
          if ($343) {
           $$lcssa223 = $754;
           break L29;
          }
          $344 = ((($338)) + 1|0);
          $345 = $344;
          $346 = ($344|0)==($334|0);
          if ($346) {
           $$lcssa223 = $345;
           break;
          } else {
           $338 = $344;$754 = $345;
          }
         }
        }
       } while(0);
       $347 = (($$lcssa223) - ($315))|0;
       $348 = HEAP8[$__spaces>>0]|0;
       $349 = $348 & 1;
       $350 = ($349<<24>>24)==(0);
       $351 = HEAP32[$27>>2]|0;
       $352 = $348&255;
       $353 = $352 >>> 1;
       $354 = $350 ? $353 : $351;
       $355 = ($354>>>0)<($347>>>0);
       if ($355) {
        $$ph = $315;
       } else {
        $356 = HEAP32[$28>>2]|0;
        $357 = $350 ? $29 : $356;
        $358 = (($357) + ($354)|0);
        $359 = ($$lcssa223|0)==($315|0);
        if ($359) {
         $$ph = $$lcssa223;
        } else {
         $$sum = (($354) - ($347))|0;
         $360 = (($357) + ($$sum)|0);
         $$in241 = $314;$362 = $360;
         while(1) {
          $361 = HEAP8[$362>>0]|0;
          $363 = HEAP8[$$in241>>0]|0;
          $364 = ($361<<24>>24)==($363<<24>>24);
          if (!($364)) {
           $$ph = $315;
           break L26;
          }
          $365 = ((($362)) + 1|0);
          $366 = ((($$in241)) + 1|0);
          $367 = ($365|0)==($358|0);
          if ($367) {
           $$ph = $$lcssa223;
           break;
          } else {
           $$in241 = $366;$362 = $365;
          }
         }
        }
       }
      } else {
       $$ph = $315;
      }
     }
    } while(0);
    $317 = $310 & 1;
    $318 = ($317<<24>>24)==(0);
    $319 = HEAP32[$26>>2]|0;
    $320 = $310&255;
    $321 = $320 >>> 1;
    $322 = $318 ? $25 : $313;
    $323 = $318 ? $321 : $319;
    $324 = (($322) + ($323)|0);
    $325 = $$ph;
    $326 = ($325|0)==($324|0);
    L41: do {
     if ($326) {
      $$lcssa176 = $324;
     } else {
      $$pre$i2$i$i128246 = $751;$382 = $751;$409 = $325;
      while(1) {
       $368 = HEAP32[$__b>>2]|0;
       $369 = ($368|0)==(0|0);
       do {
        if ($369) {
         $380 = 0;
        } else {
         $370 = ((($368)) + 12|0);
         $371 = HEAP32[$370>>2]|0;
         $372 = ((($368)) + 16|0);
         $373 = HEAP32[$372>>2]|0;
         $374 = ($371|0)==($373|0);
         if ($374) {
          $375 = HEAP32[$368>>2]|0;
          $376 = ((($375)) + 36|0);
          $377 = HEAP32[$376>>2]|0;
          $378 = (FUNCTION_TABLE_ii[$377 & 63]($368)|0);
          $379 = ($378|0)==(-1);
          if ($379) {
           HEAP32[$__b>>2] = 0;
           $380 = 0;
           break;
          } else {
           $$pre$i$i$i124 = HEAP32[$__b>>2]|0;
           $380 = $$pre$i$i$i124;
           break;
          }
         } else {
          $380 = $368;
         }
        }
       } while(0);
       $381 = ($380|0)==(0|0);
       $383 = ($382|0)==(0|0);
       do {
        if ($383) {
         $$pre$i2$i$i128193 = $$pre$i2$i$i128246;
         label = 107;
        } else {
         $384 = ((($382)) + 12|0);
         $385 = HEAP32[$384>>2]|0;
         $386 = ((($382)) + 16|0);
         $387 = HEAP32[$386>>2]|0;
         $388 = ($385|0)==($387|0);
         if (!($388)) {
          if ($381) {
           $$pre$i2$i$i128192 = $$pre$i2$i$i128246;$755 = $382;
           break;
          } else {
           $$lcssa176 = $409;
           break L41;
          }
         }
         $389 = HEAP32[$382>>2]|0;
         $390 = ((($389)) + 36|0);
         $391 = HEAP32[$390>>2]|0;
         $392 = (FUNCTION_TABLE_ii[$391 & 63]($382)|0);
         $393 = ($392|0)==(-1);
         if ($393) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i128193 = 0;
          label = 107;
          break;
         } else {
          $394 = ($$pre$i2$i$i128246|0)==(0|0);
          $tmp$i$i130 = $381 ^ $394;
          if ($tmp$i$i130) {
           $$pre$i2$i$i128192 = $$pre$i2$i$i128246;$755 = $$pre$i2$i$i128246;
           break;
          } else {
           $$lcssa176 = $409;
           break L41;
          }
         }
        }
       } while(0);
       if ((label|0) == 107) {
        label = 0;
        if ($381) {
         $$lcssa176 = $409;
         break L41;
        } else {
         $$pre$i2$i$i128192 = $$pre$i2$i$i128193;$755 = 0;
        }
       }
       $395 = HEAP32[$__b>>2]|0;
       $396 = ((($395)) + 12|0);
       $397 = HEAP32[$396>>2]|0;
       $398 = ((($395)) + 16|0);
       $399 = HEAP32[$398>>2]|0;
       $400 = ($397|0)==($399|0);
       if ($400) {
        $401 = HEAP32[$395>>2]|0;
        $402 = ((($401)) + 36|0);
        $403 = HEAP32[$402>>2]|0;
        $404 = (FUNCTION_TABLE_ii[$403 & 63]($395)|0);
        $$0$i$i120 = $404;
       } else {
        $405 = HEAP8[$397>>0]|0;
        $406 = $405&255;
        $$0$i$i120 = $406;
       }
       $407 = $$0$i$i120&255;
       $408 = HEAP8[$409>>0]|0;
       $410 = ($407<<24>>24)==($408<<24>>24);
       if (!($410)) {
        $$lcssa176 = $409;
        break L41;
       }
       $411 = HEAP32[$__b>>2]|0;
       $412 = ((($411)) + 12|0);
       $413 = HEAP32[$412>>2]|0;
       $414 = ((($411)) + 16|0);
       $415 = HEAP32[$414>>2]|0;
       $416 = ($413|0)==($415|0);
       if ($416) {
        $417 = HEAP32[$411>>2]|0;
        $418 = ((($417)) + 40|0);
        $419 = HEAP32[$418>>2]|0;
        (FUNCTION_TABLE_ii[$419 & 63]($411)|0);
       } else {
        $420 = ((($413)) + 1|0);
        HEAP32[$412>>2] = $420;
       }
       $421 = ((($409)) + 1|0);
       $$pre190 = HEAP8[$__sym>>0]|0;
       $$pre191 = HEAP32[$24>>2]|0;
       $422 = $$pre190 & 1;
       $423 = ($422<<24>>24)==(0);
       $424 = HEAP32[$26>>2]|0;
       $425 = $$pre190&255;
       $426 = $425 >>> 1;
       $427 = $423 ? $25 : $$pre191;
       $428 = $423 ? $426 : $424;
       $429 = (($427) + ($428)|0);
       $430 = ($421|0)==($429|0);
       if ($430) {
        $$lcssa176 = $429;
        break;
       } else {
        $$pre$i2$i$i128246 = $$pre$i2$i$i128192;$382 = $755;$409 = $421;
       }
      }
     }
    } while(0);
    if ($23) {
     $431 = HEAP8[$__sym>>0]|0;
     $432 = $431 & 1;
     $433 = ($432<<24>>24)==(0);
     $434 = HEAP32[$24>>2]|0;
     $435 = HEAP32[$26>>2]|0;
     $436 = $431&255;
     $437 = $436 >>> 1;
     $438 = $433 ? $25 : $434;
     $439 = $433 ? $437 : $435;
     $440 = (($438) + ($439)|0);
     $441 = ($$lcssa176|0)==($440|0);
     if ($441) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
     } else {
      label = 119;
      break L1;
     }
    } else {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    }
    break;
   }
   case 4:  {
    $61 = HEAP8[$__ts>>0]|0;
    $$pre$i2$i$i113 = $751;$458 = $751;$507 = $750;$__ng$0 = 0;
    L74: while(1) {
     $444 = HEAP32[$__b>>2]|0;
     $445 = ($444|0)==(0|0);
     do {
      if ($445) {
       $456 = 0;
      } else {
       $446 = ((($444)) + 12|0);
       $447 = HEAP32[$446>>2]|0;
       $448 = ((($444)) + 16|0);
       $449 = HEAP32[$448>>2]|0;
       $450 = ($447|0)==($449|0);
       if ($450) {
        $451 = HEAP32[$444>>2]|0;
        $452 = ((($451)) + 36|0);
        $453 = HEAP32[$452>>2]|0;
        $454 = (FUNCTION_TABLE_ii[$453 & 63]($444)|0);
        $455 = ($454|0)==(-1);
        if ($455) {
         HEAP32[$__b>>2] = 0;
         $456 = 0;
         break;
        } else {
         $$pre$i$i$i109 = HEAP32[$__b>>2]|0;
         $456 = $$pre$i$i$i109;
         break;
        }
       } else {
        $456 = $444;
       }
      }
     } while(0);
     $457 = ($456|0)==(0|0);
     $459 = ($458|0)==(0|0);
     do {
      if ($459) {
       $$pre$i2$i$i113183 = $$pre$i2$i$i113;
       label = 130;
      } else {
       $460 = ((($458)) + 12|0);
       $461 = HEAP32[$460>>2]|0;
       $462 = ((($458)) + 16|0);
       $463 = HEAP32[$462>>2]|0;
       $464 = ($461|0)==($463|0);
       if (!($464)) {
        if ($457) {
         $$pre$i2$i$i113185 = $$pre$i2$i$i113;$756 = $458;
         break;
        } else {
         $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113;$__ng$0$lcssa = $__ng$0;
         break L74;
        }
       }
       $465 = HEAP32[$458>>2]|0;
       $466 = ((($465)) + 36|0);
       $467 = HEAP32[$466>>2]|0;
       $468 = (FUNCTION_TABLE_ii[$467 & 63]($458)|0);
       $469 = ($468|0)==(-1);
       if ($469) {
        HEAP32[$__e>>2] = 0;
        $$pre$i2$i$i113183 = 0;
        label = 130;
        break;
       } else {
        $470 = ($$pre$i2$i$i113|0)==(0|0);
        $tmp$i$i115 = $457 ^ $470;
        if ($tmp$i$i115) {
         $$pre$i2$i$i113185 = $$pre$i2$i$i113;$756 = $$pre$i2$i$i113;
         break;
        } else {
         $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113;$__ng$0$lcssa = $__ng$0;
         break L74;
        }
       }
      }
     } while(0);
     if ((label|0) == 130) {
      label = 0;
      if ($457) {
       $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113183;$__ng$0$lcssa = $__ng$0;
       break;
      } else {
       $$pre$i2$i$i113185 = $$pre$i2$i$i113183;$756 = 0;
      }
     }
     $471 = HEAP32[$__b>>2]|0;
     $472 = ((($471)) + 12|0);
     $473 = HEAP32[$472>>2]|0;
     $474 = ((($471)) + 16|0);
     $475 = HEAP32[$474>>2]|0;
     $476 = ($473|0)==($475|0);
     if ($476) {
      $477 = HEAP32[$471>>2]|0;
      $478 = ((($477)) + 36|0);
      $479 = HEAP32[$478>>2]|0;
      $480 = (FUNCTION_TABLE_ii[$479 & 63]($471)|0);
      $$0$i$i103 = $480;
     } else {
      $481 = HEAP8[$473>>0]|0;
      $482 = $481&255;
      $$0$i$i103 = $482;
     }
     $483 = $$0$i$i103&255;
     $isascii1$i101 = ($483<<24>>24)>(-1);
     if ($isascii1$i101) {
      $sext165 = $$0$i$i103 << 24;
      $484 = $sext165 >> 24;
      $485 = HEAP32[$15>>2]|0;
      $486 = (($485) + ($484<<1)|0);
      $487 = HEAP16[$486>>1]|0;
      $488 = $487 & 2048;
      $489 = ($488<<16>>16)==(0);
      if ($489) {
       label = 140;
      } else {
       $490 = HEAP32[$__wn>>2]|0;
       $491 = HEAP32[$0>>2]|0;
       $492 = ($490|0)==($491|0);
       if ($492) {
        __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
        $$pre = HEAP32[$__wn>>2]|0;
        $494 = $$pre;
       } else {
        $494 = $490;
       }
       $493 = ((($494)) + 1|0);
       HEAP32[$__wn>>2] = $493;
       HEAP8[$494>>0] = $483;
       $495 = (($__ng$0) + 1)|0;
       $757 = $507;$__ng$1 = $495;
      }
     } else {
      label = 140;
     }
     if ((label|0) == 140) {
      label = 0;
      $496 = HEAP8[$__grp>>0]|0;
      $497 = $496 & 1;
      $498 = ($497<<24>>24)==(0);
      $499 = HEAP32[$31>>2]|0;
      $500 = $496&255;
      $501 = $500 >>> 1;
      $502 = $498 ? $501 : $499;
      $503 = ($502|0)!=(0);
      $504 = ($__ng$0|0)!=(0);
      $or$cond7 = $504 & $503;
      $505 = ($483<<24>>24)==($61<<24>>24);
      $or$cond13 = $505 & $or$cond7;
      if (!($or$cond13)) {
       $$lcssa = $507;$$pre$i2$i$i83 = $$pre$i2$i$i113185;$__ng$0$lcssa = $__ng$0;
       break;
      }
      $506 = HEAP32[$__ge>>2]|0;
      $508 = ($507|0)==($506|0);
      if ($508) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
       $$pre186 = HEAP32[$__gn>>2]|0;
       $510 = $$pre186;
      } else {
       $510 = $507;
      }
      $509 = ((($510)) + 4|0);
      HEAP32[$__gn>>2] = $509;
      HEAP32[$510>>2] = $__ng$0;
      $757 = $509;$__ng$1 = 0;
     }
     $511 = HEAP32[$__b>>2]|0;
     $512 = ((($511)) + 12|0);
     $513 = HEAP32[$512>>2]|0;
     $514 = ((($511)) + 16|0);
     $515 = HEAP32[$514>>2]|0;
     $516 = ($513|0)==($515|0);
     if ($516) {
      $517 = HEAP32[$511>>2]|0;
      $518 = ((($517)) + 40|0);
      $519 = HEAP32[$518>>2]|0;
      (FUNCTION_TABLE_ii[$519 & 63]($511)|0);
      $$pre$i2$i$i113 = $$pre$i2$i$i113185;$458 = $756;$507 = $757;$__ng$0 = $__ng$1;
      continue;
     } else {
      $520 = ((($513)) + 1|0);
      HEAP32[$512>>2] = $520;
      $$pre$i2$i$i113 = $$pre$i2$i$i113185;$458 = $756;$507 = $757;$__ng$0 = $__ng$1;
      continue;
     }
    }
    $521 = HEAP32[$__gb>>2]|0;
    $522 = ($521|0)!=($$lcssa|0);
    $523 = ($__ng$0$lcssa|0)!=(0);
    $or$cond9 = $523 & $522;
    if ($or$cond9) {
     $524 = HEAP32[$__ge>>2]|0;
     $525 = ($$lcssa|0)==($524|0);
     if ($525) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
      $$pre187 = HEAP32[$__gn>>2]|0;
      $527 = $$pre187;
     } else {
      $527 = $$lcssa;
     }
     $526 = ((($527)) + 4|0);
     HEAP32[$__gn>>2] = $526;
     HEAP32[$527>>2] = $__ng$0$lcssa;
     $758 = $526;
    } else {
     $758 = $$lcssa;
    }
    $528 = HEAP32[$__fd>>2]|0;
    $529 = ($528|0)>(0);
    if ($529) {
     $530 = HEAP32[$__b>>2]|0;
     $531 = ($530|0)==(0|0);
     do {
      if ($531) {
       $542 = 0;
      } else {
       $532 = ((($530)) + 12|0);
       $533 = HEAP32[$532>>2]|0;
       $534 = ((($530)) + 16|0);
       $535 = HEAP32[$534>>2]|0;
       $536 = ($533|0)==($535|0);
       if ($536) {
        $537 = HEAP32[$530>>2]|0;
        $538 = ((($537)) + 36|0);
        $539 = HEAP32[$538>>2]|0;
        $540 = (FUNCTION_TABLE_ii[$539 & 63]($530)|0);
        $541 = ($540|0)==(-1);
        if ($541) {
         HEAP32[$__b>>2] = 0;
         $542 = 0;
         break;
        } else {
         $$pre$i$i$i79 = HEAP32[$__b>>2]|0;
         $542 = $$pre$i$i$i79;
         break;
        }
       } else {
        $542 = $530;
       }
      }
     } while(0);
     $543 = ($542|0)==(0|0);
     $544 = ($$pre$i2$i$i83|0)==(0|0);
     do {
      if ($544) {
       label = 162;
      } else {
       $545 = ((($$pre$i2$i$i83)) + 12|0);
       $546 = HEAP32[$545>>2]|0;
       $547 = ((($$pre$i2$i$i83)) + 16|0);
       $548 = HEAP32[$547>>2]|0;
       $549 = ($546|0)==($548|0);
       if ($549) {
        $550 = HEAP32[$$pre$i2$i$i83>>2]|0;
        $551 = ((($550)) + 36|0);
        $552 = HEAP32[$551>>2]|0;
        $553 = (FUNCTION_TABLE_ii[$552 & 63]($$pre$i2$i$i83)|0);
        $554 = ($553|0)==(-1);
        if ($554) {
         HEAP32[$__e>>2] = 0;
         label = 162;
         break;
        }
       }
       if ($543) {
        $759 = $$pre$i2$i$i83;
       } else {
        label = 167;
        break L1;
       }
      }
     } while(0);
     if ((label|0) == 162) {
      label = 0;
      if ($543) {
       label = 167;
       break L1;
      } else {
       $759 = 0;
      }
     }
     $555 = HEAP32[$__b>>2]|0;
     $556 = ((($555)) + 12|0);
     $557 = HEAP32[$556>>2]|0;
     $558 = ((($555)) + 16|0);
     $559 = HEAP32[$558>>2]|0;
     $560 = ($557|0)==($559|0);
     if ($560) {
      $561 = HEAP32[$555>>2]|0;
      $562 = ((($561)) + 36|0);
      $563 = HEAP32[$562>>2]|0;
      $564 = (FUNCTION_TABLE_ii[$563 & 63]($555)|0);
      $$0$i$i75 = $564;
     } else {
      $565 = HEAP8[$557>>0]|0;
      $566 = $565&255;
      $$0$i$i75 = $566;
     }
     $567 = $$0$i$i75&255;
     $568 = HEAP8[$__dp>>0]|0;
     $569 = ($567<<24>>24)==($568<<24>>24);
     if (!($569)) {
      label = 167;
      break L1;
     }
     $572 = HEAP32[$__b>>2]|0;
     $573 = ((($572)) + 12|0);
     $574 = HEAP32[$573>>2]|0;
     $575 = ((($572)) + 16|0);
     $576 = HEAP32[$575>>2]|0;
     $577 = ($574|0)==($576|0);
     if ($577) {
      $578 = HEAP32[$572>>2]|0;
      $579 = ((($578)) + 40|0);
      $580 = HEAP32[$579>>2]|0;
      (FUNCTION_TABLE_ii[$580 & 63]($572)|0);
     } else {
      $581 = ((($574)) + 1|0);
      HEAP32[$573>>2] = $581;
     }
     $582 = ($528|0)>(0);
     if ($582) {
      $$pre$i2$i$i67237 = $759;$597 = $759;$650 = $528;
      while(1) {
       $583 = HEAP32[$__b>>2]|0;
       $584 = ($583|0)==(0|0);
       do {
        if ($584) {
         $595 = 0;
        } else {
         $585 = ((($583)) + 12|0);
         $586 = HEAP32[$585>>2]|0;
         $587 = ((($583)) + 16|0);
         $588 = HEAP32[$587>>2]|0;
         $589 = ($586|0)==($588|0);
         if ($589) {
          $590 = HEAP32[$583>>2]|0;
          $591 = ((($590)) + 36|0);
          $592 = HEAP32[$591>>2]|0;
          $593 = (FUNCTION_TABLE_ii[$592 & 63]($583)|0);
          $594 = ($593|0)==(-1);
          if ($594) {
           HEAP32[$__b>>2] = 0;
           $595 = 0;
           break;
          } else {
           $$pre$i$i$i63 = HEAP32[$__b>>2]|0;
           $595 = $$pre$i$i$i63;
           break;
          }
         } else {
          $595 = $583;
         }
        }
       } while(0);
       $596 = ($595|0)==(0|0);
       $598 = ($597|0)==(0|0);
       do {
        if ($598) {
         $$pre$i2$i$i67188$ph = $$pre$i2$i$i67237;
         label = 182;
        } else {
         $599 = ((($597)) + 12|0);
         $600 = HEAP32[$599>>2]|0;
         $601 = ((($597)) + 16|0);
         $602 = HEAP32[$601>>2]|0;
         $603 = ($600|0)==($602|0);
         if (!($603)) {
          if ($596) {
           $$pre$i2$i$i67188205 = $$pre$i2$i$i67237;$760 = $597;
           break;
          } else {
           label = 189;
           break L1;
          }
         }
         $604 = HEAP32[$597>>2]|0;
         $605 = ((($604)) + 36|0);
         $606 = HEAP32[$605>>2]|0;
         $607 = (FUNCTION_TABLE_ii[$606 & 63]($597)|0);
         $608 = ($607|0)==(-1);
         if ($608) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i67188$ph = 0;
          label = 182;
          break;
         } else {
          $609 = ($$pre$i2$i$i67237|0)==(0|0);
          $tmp$i$i69 = $596 ^ $609;
          if ($tmp$i$i69) {
           $$pre$i2$i$i67188205 = $$pre$i2$i$i67237;$760 = $$pre$i2$i$i67237;
           break;
          } else {
           label = 189;
           break L1;
          }
         }
        }
       } while(0);
       if ((label|0) == 182) {
        label = 0;
        if ($596) {
         label = 189;
         break L1;
        } else {
         $$pre$i2$i$i67188205 = $$pre$i2$i$i67188$ph;$760 = 0;
        }
       }
       $610 = HEAP32[$__b>>2]|0;
       $611 = ((($610)) + 12|0);
       $612 = HEAP32[$611>>2]|0;
       $613 = ((($610)) + 16|0);
       $614 = HEAP32[$613>>2]|0;
       $615 = ($612|0)==($614|0);
       if ($615) {
        $616 = HEAP32[$610>>2]|0;
        $617 = ((($616)) + 36|0);
        $618 = HEAP32[$617>>2]|0;
        $619 = (FUNCTION_TABLE_ii[$618 & 63]($610)|0);
        $$0$i$i59 = $619;
       } else {
        $620 = HEAP8[$612>>0]|0;
        $621 = $620&255;
        $$0$i$i59 = $621;
       }
       $622 = $$0$i$i59&255;
       $isascii1$i57 = ($622<<24>>24)>(-1);
       if (!($isascii1$i57)) {
        label = 189;
        break L1;
       }
       $sext = $$0$i$i59 << 24;
       $623 = $sext >> 24;
       $624 = HEAP32[$15>>2]|0;
       $625 = (($624) + ($623<<1)|0);
       $626 = HEAP16[$625>>1]|0;
       $627 = $626 & 2048;
       $628 = ($627<<16>>16)==(0);
       if ($628) {
        label = 189;
        break L1;
       }
       $631 = HEAP32[$__wn>>2]|0;
       $632 = HEAP32[$0>>2]|0;
       $633 = ($631|0)==($632|0);
       if ($633) {
        __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       }
       $634 = HEAP32[$__b>>2]|0;
       $635 = ((($634)) + 12|0);
       $636 = HEAP32[$635>>2]|0;
       $637 = ((($634)) + 16|0);
       $638 = HEAP32[$637>>2]|0;
       $639 = ($636|0)==($638|0);
       if ($639) {
        $640 = HEAP32[$634>>2]|0;
        $641 = ((($640)) + 36|0);
        $642 = HEAP32[$641>>2]|0;
        $643 = (FUNCTION_TABLE_ii[$642 & 63]($634)|0);
        $$0$i$i27 = $643;
       } else {
        $644 = HEAP8[$636>>0]|0;
        $645 = $644&255;
        $$0$i$i27 = $645;
       }
       $646 = $$0$i$i27&255;
       $647 = HEAP32[$__wn>>2]|0;
       $648 = ((($647)) + 1|0);
       HEAP32[$__wn>>2] = $648;
       HEAP8[$647>>0] = $646;
       $649 = (($650) + -1)|0;
       HEAP32[$__fd>>2] = $649;
       $651 = HEAP32[$__b>>2]|0;
       $652 = ((($651)) + 12|0);
       $653 = HEAP32[$652>>2]|0;
       $654 = ((($651)) + 16|0);
       $655 = HEAP32[$654>>2]|0;
       $656 = ($653|0)==($655|0);
       if ($656) {
        $657 = HEAP32[$651>>2]|0;
        $658 = ((($657)) + 40|0);
        $659 = HEAP32[$658>>2]|0;
        (FUNCTION_TABLE_ii[$659 & 63]($651)|0);
       } else {
        $661 = ((($653)) + 1|0);
        HEAP32[$652>>2] = $661;
       }
       $660 = ($650|0)>(1);
       if ($660) {
        $$pre$i2$i$i67237 = $$pre$i2$i$i67188205;$597 = $760;$650 = $649;
       } else {
        break;
       }
      }
     }
    }
    $662 = HEAP32[$__wn>>2]|0;
    $663 = HEAP32[$__wb>>2]|0;
    $664 = ($662|0)==($663|0);
    if ($664) {
     label = 200;
     break L1;
    } else {
     $752 = $758;$__trailing_sign$1 = $__trailing_sign$0255;
    }
    break;
   }
   case 0:  {
    $97 = ($__p$0253|0)==(3);
    if ($97) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $$pre$i2$i$i45 = $751;$112 = $751;
     label = 28;
    }
    break;
   }
   case 1:  {
    $cond = ($__p$0253|0)==(3);
    if ($cond) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $62 = HEAP32[$__b>>2]|0;
     $63 = ((($62)) + 12|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = ((($62)) + 16|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = HEAP32[$62>>2]|0;
      $69 = ((($68)) + 36|0);
      $70 = HEAP32[$69>>2]|0;
      $71 = (FUNCTION_TABLE_ii[$70 & 63]($62)|0);
      $$0$i$i37 = $71;
     } else {
      $72 = HEAP8[$64>>0]|0;
      $73 = $72&255;
      $$0$i$i37 = $73;
     }
     $74 = $$0$i$i37&255;
     $isascii1$i = ($74<<24>>24)>(-1);
     if (!($isascii1$i)) {
      label = 26;
      break L1;
     }
     $sext167 = $$0$i$i37 << 24;
     $75 = $sext167 >> 24;
     $76 = HEAP32[$15>>2]|0;
     $77 = (($76) + ($75<<1)|0);
     $78 = HEAP16[$77>>1]|0;
     $79 = $78 & 8192;
     $80 = ($79<<16>>16)==(0);
     if ($80) {
      label = 26;
      break L1;
     }
     $81 = HEAP32[$__b>>2]|0;
     $82 = ((($81)) + 12|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ((($81)) + 16|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ($83|0)==($85|0);
     if ($86) {
      $87 = HEAP32[$81>>2]|0;
      $88 = ((($87)) + 40|0);
      $89 = HEAP32[$88>>2]|0;
      $90 = (FUNCTION_TABLE_ii[$89 & 63]($81)|0);
      $$0$i$i39 = $90;
     } else {
      $91 = ((($83)) + 1|0);
      HEAP32[$82>>2] = $91;
      $92 = HEAP8[$83>>0]|0;
      $93 = $92&255;
      $$0$i$i39 = $93;
     }
     $94 = $$0$i$i39&255;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$94);
     $$pre$i2$i$i45 = $751;$112 = $751;
     label = 28;
    }
    break;
   }
   case 3:  {
    $158 = HEAP8[$__psn>>0]|0;
    $159 = $158 & 1;
    $160 = ($159<<24>>24)==(0);
    $161 = HEAP32[$16>>2]|0;
    $162 = $158&255;
    $163 = $162 >>> 1;
    $164 = $160 ? $163 : $161;
    $165 = HEAP8[$__nsn>>0]|0;
    $166 = $165 & 1;
    $167 = ($166<<24>>24)==(0);
    $168 = HEAP32[$17>>2]|0;
    $169 = $165&255;
    $170 = $169 >>> 1;
    $171 = $167 ? $170 : $168;
    $172 = (0 - ($171))|0;
    $173 = ($164|0)==($172|0);
    if ($173) {
     $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $174 = ($164|0)==(0);
     $175 = ($171|0)==(0);
     $or$cond222 = $174 | $175;
     $176 = HEAP32[$__b>>2]|0;
     $177 = ((($176)) + 12|0);
     $178 = HEAP32[$177>>2]|0;
     $179 = ((($176)) + 16|0);
     $180 = HEAP32[$179>>2]|0;
     $181 = ($178|0)==($180|0);
     if ($or$cond222) {
      if ($181) {
       $182 = HEAP32[$176>>2]|0;
       $183 = ((($182)) + 36|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = (FUNCTION_TABLE_ii[$184 & 63]($176)|0);
       $$0$i$i87 = $185;
      } else {
       $186 = HEAP8[$178>>0]|0;
       $187 = $186&255;
       $$0$i$i87 = $187;
      }
      $188 = $$0$i$i87&255;
      if ($174) {
       $214 = HEAP8[$__nsn>>0]|0;
       $215 = $214 & 1;
       $216 = ($215<<24>>24)==(0);
       $217 = HEAP32[$18>>2]|0;
       $218 = $216 ? $19 : $217;
       $219 = HEAP8[$218>>0]|0;
       $220 = ($188<<24>>24)==($219<<24>>24);
       if (!($220)) {
        $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
        break L21;
       }
       $221 = HEAP32[$__b>>2]|0;
       $222 = ((($221)) + 12|0);
       $223 = HEAP32[$222>>2]|0;
       $224 = ((($221)) + 16|0);
       $225 = HEAP32[$224>>2]|0;
       $226 = ($223|0)==($225|0);
       if ($226) {
        $227 = HEAP32[$221>>2]|0;
        $228 = ((($227)) + 40|0);
        $229 = HEAP32[$228>>2]|0;
        (FUNCTION_TABLE_ii[$229 & 63]($221)|0);
       } else {
        $230 = ((($223)) + 1|0);
        HEAP32[$222>>2] = $230;
       }
       HEAP8[$__neg>>0] = 1;
       $231 = HEAP8[$__nsn>>0]|0;
       $232 = $231 & 1;
       $233 = ($232<<24>>24)==(0);
       $234 = HEAP32[$17>>2]|0;
       $235 = $231&255;
       $236 = $235 >>> 1;
       $237 = $233 ? $236 : $234;
       $238 = ($237>>>0)>(1);
       $__nsn$__trailing_sign$0 = $238 ? $__nsn : $__trailing_sign$0255;
       $752 = $750;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
       break L21;
      }
      $189 = HEAP8[$__psn>>0]|0;
      $190 = $189 & 1;
      $191 = ($190<<24>>24)==(0);
      $192 = HEAP32[$20>>2]|0;
      $193 = $191 ? $21 : $192;
      $194 = HEAP8[$193>>0]|0;
      $195 = ($188<<24>>24)==($194<<24>>24);
      if (!($195)) {
       HEAP8[$__neg>>0] = 1;
       $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
       break L21;
      }
      $196 = HEAP32[$__b>>2]|0;
      $197 = ((($196)) + 12|0);
      $198 = HEAP32[$197>>2]|0;
      $199 = ((($196)) + 16|0);
      $200 = HEAP32[$199>>2]|0;
      $201 = ($198|0)==($200|0);
      if ($201) {
       $202 = HEAP32[$196>>2]|0;
       $203 = ((($202)) + 40|0);
       $204 = HEAP32[$203>>2]|0;
       (FUNCTION_TABLE_ii[$204 & 63]($196)|0);
      } else {
       $205 = ((($198)) + 1|0);
       HEAP32[$197>>2] = $205;
      }
      $206 = HEAP8[$__psn>>0]|0;
      $207 = $206 & 1;
      $208 = ($207<<24>>24)==(0);
      $209 = HEAP32[$16>>2]|0;
      $210 = $206&255;
      $211 = $210 >>> 1;
      $212 = $208 ? $211 : $209;
      $213 = ($212>>>0)>(1);
      $__psn$__trailing_sign$0 = $213 ? $__psn : $__trailing_sign$0255;
      $752 = $750;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      break L21;
     }
     if ($181) {
      $239 = HEAP32[$176>>2]|0;
      $240 = ((($239)) + 36|0);
      $241 = HEAP32[$240>>2]|0;
      $242 = (FUNCTION_TABLE_ii[$241 & 63]($176)|0);
      $$pre195 = HEAP8[$__psn>>0]|0;
      $$pre196 = HEAP32[$__b>>2]|0;
      $$phi$trans$insert = ((($$pre196)) + 12|0);
      $$pre197 = HEAP32[$$phi$trans$insert>>2]|0;
      $$phi$trans$insert198 = ((($$pre196)) + 16|0);
      $$pre199 = HEAP32[$$phi$trans$insert198>>2]|0;
      $$0$i$i95 = $242;$247 = $$pre195;$254 = $$pre196;$255 = $$pre197;$257 = $$pre199;
     } else {
      $243 = HEAP8[$178>>0]|0;
      $244 = $243&255;
      $$0$i$i95 = $244;$247 = $158;$254 = $176;$255 = $178;$257 = $180;
     }
     $245 = $$0$i$i95&255;
     $246 = $247 & 1;
     $248 = ($246<<24>>24)==(0);
     $249 = HEAP32[$20>>2]|0;
     $250 = $248 ? $21 : $249;
     $251 = HEAP8[$250>>0]|0;
     $252 = ($245<<24>>24)==($251<<24>>24);
     $253 = ((($254)) + 12|0);
     $256 = ($255|0)==($257|0);
     if ($252) {
      if ($256) {
       $258 = HEAP32[$254>>2]|0;
       $259 = ((($258)) + 40|0);
       $260 = HEAP32[$259>>2]|0;
       (FUNCTION_TABLE_ii[$260 & 63]($254)|0);
      } else {
       $261 = ((($255)) + 1|0);
       HEAP32[$253>>2] = $261;
      }
      $262 = HEAP8[$__psn>>0]|0;
      $263 = $262 & 1;
      $264 = ($263<<24>>24)==(0);
      $265 = HEAP32[$16>>2]|0;
      $266 = $262&255;
      $267 = $266 >>> 1;
      $268 = $264 ? $267 : $265;
      $269 = ($268>>>0)>(1);
      $__psn$__trailing_sign$010 = $269 ? $__psn : $__trailing_sign$0255;
      $752 = $750;$__trailing_sign$1 = $__psn$__trailing_sign$010;
      break L21;
     }
     if ($256) {
      $270 = HEAP32[$254>>2]|0;
      $271 = ((($270)) + 36|0);
      $272 = HEAP32[$271>>2]|0;
      $273 = (FUNCTION_TABLE_ii[$272 & 63]($254)|0);
      $$0$i$i105 = $273;
     } else {
      $274 = HEAP8[$255>>0]|0;
      $275 = $274&255;
      $$0$i$i105 = $275;
     }
     $276 = $$0$i$i105&255;
     $277 = HEAP8[$__nsn>>0]|0;
     $278 = $277 & 1;
     $279 = ($278<<24>>24)==(0);
     $280 = HEAP32[$18>>2]|0;
     $281 = $279 ? $19 : $280;
     $282 = HEAP8[$281>>0]|0;
     $283 = ($276<<24>>24)==($282<<24>>24);
     if (!($283)) {
      label = 82;
      break L1;
     }
     $284 = HEAP32[$__b>>2]|0;
     $285 = ((($284)) + 12|0);
     $286 = HEAP32[$285>>2]|0;
     $287 = ((($284)) + 16|0);
     $288 = HEAP32[$287>>2]|0;
     $289 = ($286|0)==($288|0);
     if ($289) {
      $290 = HEAP32[$284>>2]|0;
      $291 = ((($290)) + 40|0);
      $292 = HEAP32[$291>>2]|0;
      (FUNCTION_TABLE_ii[$292 & 63]($284)|0);
     } else {
      $293 = ((($286)) + 1|0);
      HEAP32[$285>>2] = $293;
     }
     HEAP8[$__neg>>0] = 1;
     $294 = HEAP8[$__nsn>>0]|0;
     $295 = $294 & 1;
     $296 = ($295<<24>>24)==(0);
     $297 = HEAP32[$17>>2]|0;
     $298 = $294&255;
     $299 = $298 >>> 1;
     $300 = $296 ? $299 : $297;
     $301 = ($300>>>0)>(1);
     $__nsn$__trailing_sign$011 = $301 ? $__nsn : $__trailing_sign$0255;
     $752 = $750;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
    }
    break;
   }
   default: {
    $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
   }
   }
  } while(0);
  L243: do {
   if ((label|0) == 28) {
    while(1) {
     label = 0;
     $98 = HEAP32[$__b>>2]|0;
     $99 = ($98|0)==(0|0);
     do {
      if ($99) {
       $110 = 0;
      } else {
       $100 = ((($98)) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       $102 = ((($98)) + 16|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ($101|0)==($103|0);
       if ($104) {
        $105 = HEAP32[$98>>2]|0;
        $106 = ((($105)) + 36|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = (FUNCTION_TABLE_ii[$107 & 63]($98)|0);
        $109 = ($108|0)==(-1);
        if ($109) {
         HEAP32[$__b>>2] = 0;
         $110 = 0;
         break;
        } else {
         $$pre$i$i$i41 = HEAP32[$__b>>2]|0;
         $110 = $$pre$i$i$i41;
         break;
        }
       } else {
        $110 = $98;
       }
      }
     } while(0);
     $111 = ($110|0)==(0|0);
     $113 = ($112|0)==(0|0);
     do {
      if ($113) {
       $$pre$i2$i$i45200 = $$pre$i2$i$i45;
       label = 38;
      } else {
       $114 = ((($112)) + 12|0);
       $115 = HEAP32[$114>>2]|0;
       $116 = ((($112)) + 16|0);
       $117 = HEAP32[$116>>2]|0;
       $118 = ($115|0)==($117|0);
       if (!($118)) {
        if ($111) {
         $$pre$i2$i$i45202 = $$pre$i2$i$i45;$753 = $112;
         break;
        } else {
         $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
         break L243;
        }
       }
       $119 = HEAP32[$112>>2]|0;
       $120 = ((($119)) + 36|0);
       $121 = HEAP32[$120>>2]|0;
       $122 = (FUNCTION_TABLE_ii[$121 & 63]($112)|0);
       $123 = ($122|0)==(-1);
       if ($123) {
        HEAP32[$__e>>2] = 0;
        $$pre$i2$i$i45200 = 0;
        label = 38;
        break;
       } else {
        $124 = ($$pre$i2$i$i45|0)==(0|0);
        $tmp$i$i47 = $111 ^ $124;
        if ($tmp$i$i47) {
         $$pre$i2$i$i45202 = $$pre$i2$i$i45;$753 = $$pre$i2$i$i45;
         break;
        } else {
         $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
         break L243;
        }
       }
      }
     } while(0);
     if ((label|0) == 38) {
      label = 0;
      if ($111) {
       $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
       break L243;
      } else {
       $$pre$i2$i$i45202 = $$pre$i2$i$i45200;$753 = 0;
      }
     }
     $125 = HEAP32[$__b>>2]|0;
     $126 = ((($125)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($125)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$125>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      $134 = (FUNCTION_TABLE_ii[$133 & 63]($125)|0);
      $$0$i$i49 = $134;
     } else {
      $135 = HEAP8[$127>>0]|0;
      $136 = $135&255;
      $$0$i$i49 = $136;
     }
     $137 = $$0$i$i49&255;
     $isascii1$i51 = ($137<<24>>24)>(-1);
     if (!($isascii1$i51)) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
      break L243;
     }
     $sext166 = $$0$i$i49 << 24;
     $138 = $sext166 >> 24;
     $139 = HEAP32[$15>>2]|0;
     $140 = (($139) + ($138<<1)|0);
     $141 = HEAP16[$140>>1]|0;
     $142 = $141 & 8192;
     $143 = ($142<<16>>16)==(0);
     if ($143) {
      $752 = $750;$__trailing_sign$1 = $__trailing_sign$0255;
      break L243;
     }
     $144 = HEAP32[$__b>>2]|0;
     $145 = ((($144)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ((($144)) + 16|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ($146|0)==($148|0);
     if ($149) {
      $150 = HEAP32[$144>>2]|0;
      $151 = ((($150)) + 40|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (FUNCTION_TABLE_ii[$152 & 63]($144)|0);
      $$0$i$i55 = $153;
     } else {
      $154 = ((($146)) + 1|0);
      HEAP32[$145>>2] = $154;
      $155 = HEAP8[$146>>0]|0;
      $156 = $155&255;
      $$0$i$i55 = $156;
     }
     $157 = $$0$i$i55&255;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$157);
     $$pre$i2$i$i45 = $$pre$i2$i$i45202;$112 = $753;
     label = 28;
    }
   }
  } while(0);
  $667 = (($__p$0253) + 1)|0;
  $668 = ($667>>>0)<(4);
  if ($668) {
   $750 = $752;$__p$0253 = $667;$__trailing_sign$0255 = $__trailing_sign$1;
  } else {
   $$lcssa224 = $752;$__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 202;
   break;
  }
 }
 L275: do {
  if ((label|0) == 26) {
   $95 = HEAP32[$__err>>2]|0;
   $96 = $95 | 4;
   HEAP32[$__err>>2] = $96;
   $$0 = 0;
  }
  else if ((label|0) == 82) {
   $302 = HEAP32[$__err>>2]|0;
   $303 = $302 | 4;
   HEAP32[$__err>>2] = $303;
   $$0 = 0;
  }
  else if ((label|0) == 119) {
   $442 = HEAP32[$__err>>2]|0;
   $443 = $442 | 4;
   HEAP32[$__err>>2] = $443;
   $$0 = 0;
  }
  else if ((label|0) == 167) {
   $570 = HEAP32[$__err>>2]|0;
   $571 = $570 | 4;
   HEAP32[$__err>>2] = $571;
   $$0 = 0;
  }
  else if ((label|0) == 189) {
   $629 = HEAP32[$__err>>2]|0;
   $630 = $629 | 4;
   HEAP32[$__err>>2] = $630;
   $$0 = 0;
  }
  else if ((label|0) == 200) {
   $665 = HEAP32[$__err>>2]|0;
   $666 = $665 | 4;
   HEAP32[$__err>>2] = $666;
   $$0 = 0;
  }
  else if ((label|0) == 202) {
   $669 = ($__trailing_sign$0$lcssa|0)==(0|0);
   L282: do {
    if (!($669)) {
     $670 = ((($__trailing_sign$0$lcssa)) + 1|0);
     $671 = ((($__trailing_sign$0$lcssa)) + 8|0);
     $672 = ((($__trailing_sign$0$lcssa)) + 4|0);
     $__i$0 = 1;
     L284: while(1) {
      $673 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $674 = $673 & 1;
      $675 = ($674<<24>>24)==(0);
      if ($675) {
       $677 = $673&255;
       $678 = $677 >>> 1;
       $680 = $678;
      } else {
       $676 = HEAP32[$672>>2]|0;
       $680 = $676;
      }
      $679 = ($__i$0>>>0)<($680>>>0);
      if (!($679)) {
       break L282;
      }
      $681 = HEAP32[$__b>>2]|0;
      $682 = ($681|0)==(0|0);
      do {
       if ($682) {
        $693 = 0;
       } else {
        $683 = ((($681)) + 12|0);
        $684 = HEAP32[$683>>2]|0;
        $685 = ((($681)) + 16|0);
        $686 = HEAP32[$685>>2]|0;
        $687 = ($684|0)==($686|0);
        if ($687) {
         $688 = HEAP32[$681>>2]|0;
         $689 = ((($688)) + 36|0);
         $690 = HEAP32[$689>>2]|0;
         $691 = (FUNCTION_TABLE_ii[$690 & 63]($681)|0);
         $692 = ($691|0)==(-1);
         if ($692) {
          HEAP32[$__b>>2] = 0;
          $693 = 0;
          break;
         } else {
          $$pre$i$i$i = HEAP32[$__b>>2]|0;
          $693 = $$pre$i$i$i;
          break;
         }
        } else {
         $693 = $681;
        }
       }
      } while(0);
      $694 = ($693|0)==(0|0);
      $695 = HEAP32[$__e>>2]|0;
      $696 = ($695|0)==(0|0);
      do {
       if ($696) {
        label = 218;
       } else {
        $697 = ((($695)) + 12|0);
        $698 = HEAP32[$697>>2]|0;
        $699 = ((($695)) + 16|0);
        $700 = HEAP32[$699>>2]|0;
        $701 = ($698|0)==($700|0);
        if ($701) {
         $702 = HEAP32[$695>>2]|0;
         $703 = ((($702)) + 36|0);
         $704 = HEAP32[$703>>2]|0;
         $705 = (FUNCTION_TABLE_ii[$704 & 63]($695)|0);
         $706 = ($705|0)==(-1);
         if ($706) {
          HEAP32[$__e>>2] = 0;
          label = 218;
          break;
         }
        }
        if (!($694)) {
         break L284;
        }
       }
      } while(0);
      if ((label|0) == 218) {
       label = 0;
       if ($694) {
        break;
       }
      }
      $707 = HEAP32[$__b>>2]|0;
      $708 = ((($707)) + 12|0);
      $709 = HEAP32[$708>>2]|0;
      $710 = ((($707)) + 16|0);
      $711 = HEAP32[$710>>2]|0;
      $712 = ($709|0)==($711|0);
      if ($712) {
       $713 = HEAP32[$707>>2]|0;
       $714 = ((($713)) + 36|0);
       $715 = HEAP32[$714>>2]|0;
       $716 = (FUNCTION_TABLE_ii[$715 & 63]($707)|0);
       $$0$i$i = $716;
      } else {
       $717 = HEAP8[$709>>0]|0;
       $718 = $717&255;
       $$0$i$i = $718;
      }
      $719 = $$0$i$i&255;
      $720 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $721 = $720 & 1;
      $722 = ($721<<24>>24)==(0);
      if ($722) {
       $725 = $670;
      } else {
       $723 = HEAP32[$671>>2]|0;
       $725 = $723;
      }
      $724 = (($725) + ($__i$0)|0);
      $726 = HEAP8[$724>>0]|0;
      $727 = ($719<<24>>24)==($726<<24>>24);
      if (!($727)) {
       break;
      }
      $730 = (($__i$0) + 1)|0;
      $731 = HEAP32[$__b>>2]|0;
      $732 = ((($731)) + 12|0);
      $733 = HEAP32[$732>>2]|0;
      $734 = ((($731)) + 16|0);
      $735 = HEAP32[$734>>2]|0;
      $736 = ($733|0)==($735|0);
      if ($736) {
       $737 = HEAP32[$731>>2]|0;
       $738 = ((($737)) + 40|0);
       $739 = HEAP32[$738>>2]|0;
       (FUNCTION_TABLE_ii[$739 & 63]($731)|0);
       $__i$0 = $730;
       continue;
      } else {
       $740 = ((($733)) + 1|0);
       HEAP32[$732>>2] = $740;
       $__i$0 = $730;
       continue;
      }
     }
     $728 = HEAP32[$__err>>2]|0;
     $729 = $728 | 4;
     HEAP32[$__err>>2] = $729;
     $$0 = 0;
     break L275;
    }
   } while(0);
   $741 = HEAP32[$__gb>>2]|0;
   $742 = ($741|0)==($$lcssa224|0);
   if ($742) {
    $$0 = 1;
   } else {
    HEAP32[$__et>>2] = 0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$741,$$lcssa224,$__et);
    $743 = HEAP32[$__et>>2]|0;
    $744 = ($743|0)==(0);
    if ($744) {
     $$0 = 1;
    } else {
     $745 = HEAP32[$__err>>2]|0;
     $746 = $745 | 4;
     HEAP32[$__err>>2] = $746;
     $$0 = 0;
    }
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $747 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $748 = ($747|0)==(0|0);
 if (!($748)) {
  $749 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$749 & 127]($747);
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$02 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $$byval_copy = sp + 24|0;
 $__wbuf = sp + 32|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 28|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 100|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6272)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 $10 = $6;
 if ($9) {
  $11 = HEAP8[$__v>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   $17 = ((($__v)) + 1|0);
   HEAP8[$17>>0] = 0;
   HEAP8[$__v>>0] = 0;
  } else {
   $14 = ((($__v)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP8[$15>>0] = 0;
   $16 = ((($__v)) + 4|0);
   HEAP32[$16>>2] = 0;
  }
  $18 = HEAP8[$__neg>>0]|0;
  $19 = ($18<<24>>24)==(0);
  if (!($19)) {
   $20 = HEAP32[$5>>2]|0;
   $21 = ((($20)) + 28|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (FUNCTION_TABLE_iii[$22 & 15]($5,45)|0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__v,$23);
  }
  $24 = HEAP32[$5>>2]|0;
  $25 = ((($24)) + 28|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (FUNCTION_TABLE_iii[$26 & 15]($5,48)|0);
  $28 = HEAP32[$__wb>>2]|0;
  $29 = HEAP32[$__wn>>2]|0;
  $30 = ((($29)) + -1|0);
  $31 = ($28>>>0)<($30>>>0);
  L10: do {
   if ($31) {
    $__w$02 = $28;
    while(1) {
     $32 = HEAP8[$__w$02>>0]|0;
     $33 = ($32<<24>>24)==($27<<24>>24);
     if (!($33)) {
      $__w$0$lcssa = $__w$02;
      break L10;
     }
     $34 = ((($__w$02)) + 1|0);
     $35 = ($34>>>0)<($30>>>0);
     if ($35) {
      $__w$02 = $34;
     } else {
      $__w$0$lcssa = $34;
      break;
     }
    }
   } else {
    $__w$0$lcssa = $28;
   }
  } while(0);
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v,$__w$0$lcssa,$29)|0);
 }
 $36 = HEAP32[$__b>>2]|0;
 $37 = ($36|0)==(0|0);
 do {
  if ($37) {
   $48 = 0;
  } else {
   $38 = ((($36)) + 12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($36)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ($39|0)==($41|0);
   if ($42) {
    $43 = HEAP32[$36>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 63]($36)|0);
    $47 = ($46|0)==(-1);
    if ($47) {
     HEAP32[$__b>>2] = 0;
     $48 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $48 = $$pre$i$i$i;
     break;
    }
   } else {
    $48 = $36;
   }
  }
 } while(0);
 $49 = ($48|0)==(0|0);
 $50 = ($6|0)==(0);
 do {
  if ($50) {
   label = 21;
  } else {
   $51 = ((($10)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($10)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = $6;
    $57 = HEAP32[$56>>2]|0;
    $58 = ((($57)) + 36|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (FUNCTION_TABLE_ii[$59 & 63]($10)|0);
    $61 = ($60|0)==(-1);
    if ($61) {
     HEAP32[$__e>>2] = 0;
     label = 21;
     break;
    }
   }
   if (!($49)) {
    label = 22;
   }
  }
 } while(0);
 if ((label|0) == 21) {
  if ($49) {
   label = 22;
  }
 }
 if ((label|0) == 22) {
  $62 = HEAP32[$__err>>2]|0;
  $63 = $62 | 2;
  HEAP32[$__err>>2] = $63;
 }
 $64 = HEAP32[$__b>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
 $65 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $66 = ($65|0)==(0|0);
 if (!($66)) {
  $67 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$67 & 127]($65);
 }
 STACKTOP = sp;return ($64|0);
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5856)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 63]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 63]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   $24 = ((($__nsn)) + 1|0);
   HEAP8[$24>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = ((($__nsn)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP8[$22>>0] = 0;
   $23 = ((($__nsn)) + 4|0);
   HEAP32[$23>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  HEAP32[$1>>2] = 0;
  $25 = ((($1)) + 4|0);
  HEAP32[$25>>2] = 0;
  $26 = ((($1)) + 8|0);
  HEAP32[$26>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $27 = HEAP32[$10>>2]|0;
  $28 = ((($27)) + 28|0);
  $29 = HEAP32[$28>>2]|0;
  FUNCTION_TABLE_vii[$29 & 63]($2,$10);
  $30 = HEAP8[$__psn>>0]|0;
  $31 = $30 & 1;
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $36 = ((($__psn)) + 1|0);
   HEAP8[$36>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $33 = ((($__psn)) + 8|0);
   $34 = HEAP32[$33>>2]|0;
   HEAP8[$34>>0] = 0;
   $35 = ((($__psn)) + 4|0);
   HEAP32[$35>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  HEAP32[$2>>2] = 0;
  $37 = ((($2)) + 4|0);
  HEAP32[$37>>2] = 0;
  $38 = ((($2)) + 8|0);
  HEAP32[$38>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $39 = HEAP32[$10>>2]|0;
  $40 = ((($39)) + 12|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = (FUNCTION_TABLE_ii[$41 & 63]($10)|0);
  HEAP8[$__dp>>0] = $42;
  $43 = HEAP32[$10>>2]|0;
  $44 = ((($43)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = (FUNCTION_TABLE_ii[$45 & 63]($10)|0);
  HEAP8[$__ts>>0] = $46;
  $47 = HEAP32[$10>>2]|0;
  $48 = ((($47)) + 20|0);
  $49 = HEAP32[$48>>2]|0;
  FUNCTION_TABLE_vii[$49 & 63]($3,$10);
  $50 = HEAP8[$__grp>>0]|0;
  $51 = $50 & 1;
  $52 = ($51<<24>>24)==(0);
  if ($52) {
   $56 = ((($__grp)) + 1|0);
   HEAP8[$56>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $53 = ((($__grp)) + 8|0);
   $54 = HEAP32[$53>>2]|0;
   HEAP8[$54>>0] = 0;
   $55 = ((($__grp)) + 4|0);
   HEAP32[$55>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  HEAP32[$3>>2] = 0;
  $57 = ((($3)) + 4|0);
  HEAP32[$57>>2] = 0;
  $58 = ((($3)) + 8|0);
  HEAP32[$58>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $59 = HEAP32[$10>>2]|0;
  $60 = ((($59)) + 24|0);
  $61 = HEAP32[$60>>2]|0;
  FUNCTION_TABLE_vii[$61 & 63]($4,$10);
  $62 = HEAP8[$__sym>>0]|0;
  $63 = $62 & 1;
  $64 = ($63<<24>>24)==(0);
  if ($64) {
   $68 = ((($__sym)) + 1|0);
   HEAP8[$68>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $65 = ((($__sym)) + 8|0);
   $66 = HEAP32[$65>>2]|0;
   HEAP8[$66>>0] = 0;
   $67 = ((($__sym)) + 4|0);
   HEAP32[$67>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $69 = ((($4)) + 4|0);
  HEAP32[$69>>2] = 0;
  $70 = ((($4)) + 8|0);
  HEAP32[$70>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $71 = HEAP32[$10>>2]|0;
  $72 = ((($71)) + 36|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = (FUNCTION_TABLE_ii[$73 & 63]($10)|0);
  $storemerge = $74;
 } else {
  $75 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5792)|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($76)) + 44|0);
  $78 = HEAP32[$77>>2]|0;
  FUNCTION_TABLE_vii[$78 & 63]($5,$75);
  $79 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$79&255;HEAP8[$__pat+1>>0]=($79>>8)&255;HEAP8[$__pat+2>>0]=($79>>16)&255;HEAP8[$__pat+3>>0]=$79>>24;
  $80 = HEAP32[$75>>2]|0;
  $81 = ((($80)) + 32|0);
  $82 = HEAP32[$81>>2]|0;
  FUNCTION_TABLE_vii[$82 & 63]($6,$75);
  $83 = HEAP8[$__nsn>>0]|0;
  $84 = $83 & 1;
  $85 = ($84<<24>>24)==(0);
  if ($85) {
   $89 = ((($__nsn)) + 1|0);
   HEAP8[$89>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $86 = ((($__nsn)) + 8|0);
   $87 = HEAP32[$86>>2]|0;
   HEAP8[$87>>0] = 0;
   $88 = ((($__nsn)) + 4|0);
   HEAP32[$88>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  HEAP32[$6>>2] = 0;
  $90 = ((($6)) + 4|0);
  HEAP32[$90>>2] = 0;
  $91 = ((($6)) + 8|0);
  HEAP32[$91>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $92 = HEAP32[$75>>2]|0;
  $93 = ((($92)) + 28|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_vii[$94 & 63]($7,$75);
  $95 = HEAP8[$__psn>>0]|0;
  $96 = $95 & 1;
  $97 = ($96<<24>>24)==(0);
  if ($97) {
   $101 = ((($__psn)) + 1|0);
   HEAP8[$101>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $98 = ((($__psn)) + 8|0);
   $99 = HEAP32[$98>>2]|0;
   HEAP8[$99>>0] = 0;
   $100 = ((($__psn)) + 4|0);
   HEAP32[$100>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  HEAP32[$7>>2] = 0;
  $102 = ((($7)) + 4|0);
  HEAP32[$102>>2] = 0;
  $103 = ((($7)) + 8|0);
  HEAP32[$103>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  $104 = HEAP32[$75>>2]|0;
  $105 = ((($104)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (FUNCTION_TABLE_ii[$106 & 63]($75)|0);
  HEAP8[$__dp>>0] = $107;
  $108 = HEAP32[$75>>2]|0;
  $109 = ((($108)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = (FUNCTION_TABLE_ii[$110 & 63]($75)|0);
  HEAP8[$__ts>>0] = $111;
  $112 = HEAP32[$75>>2]|0;
  $113 = ((($112)) + 20|0);
  $114 = HEAP32[$113>>2]|0;
  FUNCTION_TABLE_vii[$114 & 63]($8,$75);
  $115 = HEAP8[$__grp>>0]|0;
  $116 = $115 & 1;
  $117 = ($116<<24>>24)==(0);
  if ($117) {
   $121 = ((($__grp)) + 1|0);
   HEAP8[$121>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $118 = ((($__grp)) + 8|0);
   $119 = HEAP32[$118>>2]|0;
   HEAP8[$119>>0] = 0;
   $120 = ((($__grp)) + 4|0);
   HEAP32[$120>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  HEAP32[$8>>2] = 0;
  $122 = ((($8)) + 4|0);
  HEAP32[$122>>2] = 0;
  $123 = ((($8)) + 8|0);
  HEAP32[$123>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $124 = HEAP32[$75>>2]|0;
  $125 = ((($124)) + 24|0);
  $126 = HEAP32[$125>>2]|0;
  FUNCTION_TABLE_vii[$126 & 63]($9,$75);
  $127 = HEAP8[$__sym>>0]|0;
  $128 = $127 & 1;
  $129 = ($128<<24>>24)==(0);
  if ($129) {
   $133 = ((($__sym)) + 1|0);
   HEAP8[$133>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $130 = ((($__sym)) + 8|0);
   $131 = HEAP32[$130>>2]|0;
   HEAP8[$131>>0] = 0;
   $132 = ((($__sym)) + 4|0);
   HEAP32[$132>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  HEAP32[$9>>2] = 0;
  $134 = ((($9)) + 4|0);
  HEAP32[$134>>2] = 0;
  $135 = ((($9)) + 8|0);
  HEAP32[$135>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $136 = HEAP32[$75>>2]|0;
  $137 = ((($136)) + 36|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (FUNCTION_TABLE_ii[$138 & 63]($75)|0);
  $storemerge = $139;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$01$i$i22 = 0, $$__ig$0 = 0, $$lcssa = 0, $$not = 0, $$not16 = 0, $$pre = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$018 = 0, $__r$019 = 0;
 var $or$cond2 = 0, $or$cond2$lcssa = 0, $or$cond217 = 0, $or$cond220 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 $3 = ((($__grouping)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0&255;
 $6 = $5 >>> 1;
 $7 = $2 ? $6 : $4;
 $8 = ($7|0)==(0);
 L1: do {
  if (!($8)) {
   $9 = ($__g|0)==($__g_end|0);
   if ($9) {
    $19 = $0;$27 = $4;
   } else {
    $10 = ((($__g_end)) + -4|0);
    $11 = ($10>>>0)>($__g>>>0);
    if ($11) {
     $$01$i$i22 = $__g;$14 = $10;
     while(1) {
      $12 = HEAP32[$$01$i$i22>>2]|0;
      $13 = HEAP32[$14>>2]|0;
      HEAP32[$$01$i$i22>>2] = $13;
      HEAP32[$14>>2] = $12;
      $15 = ((($$01$i$i22)) + 4|0);
      $16 = ((($14)) + -4|0);
      $17 = ($15>>>0)<($16>>>0);
      if ($17) {
       $$01$i$i22 = $15;$14 = $16;
      } else {
       break;
      }
     }
    }
    $$pre = HEAP8[$__grouping>>0]|0;
    $$pre11 = HEAP32[$3>>2]|0;
    $19 = $$pre;$27 = $$pre11;
   }
   $18 = $19 & 1;
   $20 = ($18<<24>>24)==(0);
   $21 = ((($__grouping)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ((($__grouping)) + 1|0);
   $24 = $20 ? $23 : $22;
   $25 = $19&255;
   $26 = $25 >>> 1;
   $28 = $20 ? $26 : $27;
   $29 = (($24) + ($28)|0);
   $30 = ((($__g_end)) + -4|0);
   $31 = $29;
   $32 = ($30>>>0)>($__g>>>0);
   $33 = HEAP8[$24>>0]|0;
   $$not16 = ($33<<24>>24)<(1);
   $34 = ($33<<24>>24)==(127);
   $or$cond217 = $$not16 | $34;
   L10: do {
    if ($32) {
     $36 = $33;$__ig$018 = $24;$__r$019 = $__g;$or$cond220 = $or$cond217;
     while(1) {
      if (!($or$cond220)) {
       $35 = $36 << 24 >> 24;
       $37 = HEAP32[$__r$019>>2]|0;
       $38 = ($35|0)==($37|0);
       if (!($38)) {
        break;
       }
      }
      $39 = $__ig$018;
      $40 = (($31) - ($39))|0;
      $41 = ($40|0)>(1);
      $42 = ((($__ig$018)) + 1|0);
      $$__ig$0 = $41 ? $42 : $__ig$018;
      $43 = ((($__r$019)) + 4|0);
      $44 = ($43>>>0)<($30>>>0);
      $45 = HEAP8[$$__ig$0>>0]|0;
      $$not = ($45<<24>>24)<(1);
      $46 = ($45<<24>>24)==(127);
      $or$cond2 = $$not | $46;
      if ($44) {
       $36 = $45;$__ig$018 = $$__ig$0;$__r$019 = $43;$or$cond220 = $or$cond2;
      } else {
       $$lcssa = $45;$or$cond2$lcssa = $or$cond2;
       break L10;
      }
     }
     HEAP32[$__err>>2] = 4;
     break L1;
    } else {
     $$lcssa = $33;$or$cond2$lcssa = $or$cond217;
    }
   } while(0);
   if (!($or$cond2$lcssa)) {
    $47 = $$lcssa << 24 >> 24;
    $48 = HEAP32[$30>>2]|0;
    $49 = (($48) + -1)|0;
    $50 = ($49>>>0)<($47>>>0);
    if (!($50)) {
     HEAP32[$__err>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$24 = 0, $__neg = 0, $__w$03 = 0;
 var $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576|0;
 $$byval_copy = sp + 424|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 564|0;
 $0 = sp + 4|0;
 $__nbuf = sp + 464|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 400|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6264)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 if ($9) {
  $10 = HEAP32[$5>>2]|0;
  $11 = ((($10)) + 48|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 7]($5,9592,(9602),$$byval_copy)|0);
  $13 = HEAP32[$__wn>>2]|0;
  $14 = HEAP32[$__wb>>2]|0;
  $15 = $13;
  $16 = $14;
  $17 = (($15) - ($16))|0;
  $18 = ($17|0)>(392);
  if ($18) {
   $19 = $17 >> 2;
   $20 = (($19) + 2)|0;
   $21 = (_malloc($20)|0);
   $22 = $21;
   $23 = ($21|0)==(0|0);
   if ($23) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $52 = $22;$__nc$0 = $21;
   }
  } else {
   $52 = 0;$__nc$0 = $__nbuf;
  }
  $24 = HEAP8[$__neg>>0]|0;
  $25 = ($24<<24>>24)==(0);
  if ($25) {
   $__nc$1 = $__nc$0;
  } else {
   $26 = ((($__nc$0)) + 1|0);
   HEAP8[$__nc$0>>0] = 45;
   $__nc$1 = $26;
  }
  $27 = ((($$byval_copy)) + 40|0);
  $28 = $$byval_copy;
  $29 = ($14>>>0)<($13>>>0);
  if ($29) {
   $30 = ((($$byval_copy)) + 4|0);
   $31 = ((($30)) + 4|0);
   $32 = ((($31)) + 4|0);
   $33 = ((($32)) + 4|0);
   $34 = ((($33)) + 4|0);
   $35 = ((($34)) + 4|0);
   $36 = ((($35)) + 4|0);
   $37 = ((($36)) + 4|0);
   $38 = ((($37)) + 4|0);
   $__nc$24 = $__nc$1;$__w$03 = $14;
   while(1) {
    $39 = HEAP32[$__w$03>>2]|0;
    $40 = HEAP32[$$byval_copy>>2]|0;
    $41 = ($40|0)==($39|0);
    if ($41) {
     $$0$lcssa$i = $$byval_copy;
    } else {
     $42 = HEAP32[$30>>2]|0;
     $43 = ($42|0)==($39|0);
     if ($43) {
      $$0$lcssa$i = $30;
     } else {
      $88 = HEAP32[$31>>2]|0;
      $89 = ($88|0)==($39|0);
      if ($89) {
       $$0$lcssa$i = $31;
      } else {
       $90 = HEAP32[$32>>2]|0;
       $91 = ($90|0)==($39|0);
       if ($91) {
        $$0$lcssa$i = $32;
       } else {
        $92 = HEAP32[$33>>2]|0;
        $93 = ($92|0)==($39|0);
        if ($93) {
         $$0$lcssa$i = $33;
        } else {
         $94 = HEAP32[$34>>2]|0;
         $95 = ($94|0)==($39|0);
         if ($95) {
          $$0$lcssa$i = $34;
         } else {
          $96 = HEAP32[$35>>2]|0;
          $97 = ($96|0)==($39|0);
          if ($97) {
           $$0$lcssa$i = $35;
          } else {
           $98 = HEAP32[$36>>2]|0;
           $99 = ($98|0)==($39|0);
           if ($99) {
            $$0$lcssa$i = $36;
           } else {
            $100 = HEAP32[$37>>2]|0;
            $101 = ($100|0)==($39|0);
            if ($101) {
             $$0$lcssa$i = $37;
            } else {
             $102 = HEAP32[$38>>2]|0;
             $103 = ($102|0)==($39|0);
             $$ = $103 ? $38 : $27;
             $$0$lcssa$i = $$;
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $44 = $$0$lcssa$i;
    $45 = (($44) - ($28))|0;
    $46 = $45 >> 2;
    $47 = (9592 + ($46)|0);
    $48 = HEAP8[$47>>0]|0;
    HEAP8[$__nc$24>>0] = $48;
    $49 = ((($__w$03)) + 4|0);
    $50 = ((($__nc$24)) + 1|0);
    $$pre = HEAP32[$__wn>>2]|0;
    $51 = ($49>>>0)<($$pre>>>0);
    if ($51) {
     $__nc$24 = $50;$__w$03 = $49;
    } else {
     $__nc$2$lcssa = $50;
     break;
    }
   }
  } else {
   $__nc$2$lcssa = $__nc$1;
  }
  HEAP8[$__nc$2$lcssa>>0] = 0;
  HEAP32[$vararg_buffer>>2] = $__v;
  (_sscanf($__nbuf,9584,$vararg_buffer)|0);
  $53 = ($52|0)==(0);
  if (!($53)) {
   $54 = $52;
   _free($54);
  }
 }
 $55 = HEAP32[$__b>>2]|0;
 $56 = ($55|0)==(0|0);
 do {
  if ($56) {
   $104 = 1;
  } else {
   $57 = ((($55)) + 12|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ((($55)) + 16|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = ($58|0)==($60|0);
   if ($61) {
    $62 = HEAP32[$55>>2]|0;
    $63 = ((($62)) + 36|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = (FUNCTION_TABLE_ii[$64 & 63]($55)|0);
    $$0$i$i$i$i = $65;
   } else {
    $66 = HEAP32[$58>>2]|0;
    $$0$i$i$i$i = $66;
   }
   $67 = ($$0$i$i$i$i|0)==(-1);
   if ($67) {
    HEAP32[$__b>>2] = 0;
    $104 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $104 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $68 = HEAP32[$__e>>2]|0;
 $69 = ($68|0)==(0|0);
 do {
  if ($69) {
   label = 28;
  } else {
   $70 = ((($68)) + 12|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = ((($68)) + 16|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = ($71|0)==($73|0);
   if ($74) {
    $75 = HEAP32[$68>>2]|0;
    $76 = ((($75)) + 36|0);
    $77 = HEAP32[$76>>2]|0;
    $78 = (FUNCTION_TABLE_ii[$77 & 63]($68)|0);
    $$0$i$i1$i$i = $78;
   } else {
    $79 = HEAP32[$71>>2]|0;
    $$0$i$i1$i$i = $79;
   }
   $80 = ($$0$i$i1$i$i|0)==(-1);
   if ($80) {
    HEAP32[$__e>>2] = 0;
    label = 28;
    break;
   } else {
    if ($104) {
     break;
    } else {
     label = 30;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 28) {
  if ($104) {
   label = 30;
  }
 }
 if ((label|0) == 30) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 $83 = HEAP32[$__b>>2]|0;
 $84 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($84)|0);
 $85 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $86 = ($85|0)==(0|0);
 if (!($86)) {
  $87 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$87 & 127]($85);
 }
 STACKTOP = sp;return ($83|0);
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i118 = 0, $$0$i$i$i$i136 = 0, $$0$i$i$i$i28 = 0, $$0$i$i$i$i43 = 0, $$0$i$i$i$i68 = 0, $$0$i$i$i$i90 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i124 = 0, $$0$i$i1$i$i142 = 0, $$0$i$i1$i$i34 = 0, $$0$i$i1$i$i49 = 0, $$0$i$i1$i$i74 = 0, $$0$i$i1$i$i96 = 0, $$0$i$i105 = 0, $$0$i$i111 = 0, $$0$i$i116 = 0, $$0$i$i133 = 0;
 var $$0$i$i26 = 0, $$0$i$i40 = 0, $$0$i$i42 = 0, $$0$i$i56 = 0, $$0$i$i60 = 0, $$0$i$i65 = 0, $$0$i$i82 = 0, $$0$i$i87 = 0, $$in265 = 0, $$lcssa = 0, $$lcssa183 = 0, $$lcssa248 = 0, $$lcssa294 = 0, $$ph = 0, $$ph240 = 0, $$ph241 = 0, $$phi$trans$insert = 0, $$phi$trans$insert209 = 0, $$pre = 0, $$pre$i$i$i = 0;
 var $$pre$i$i$i120 = 0, $$pre$i$i$i138 = 0, $$pre$i$i$i30 = 0, $$pre$i$i$i45 = 0, $$pre$i$i$i70 = 0, $$pre$i$i$i92 = 0, $$pre$i3$i$i126 = 0, $$pre$i3$i$i126190 = 0, $$pre$i3$i$i126192 = 0, $$pre$i3$i$i144203 = 0, $$pre$i3$i$i144204 = 0, $$pre$i3$i$i144270 = 0, $$pre$i3$i$i51 = 0, $$pre$i3$i$i51211 = 0, $$pre$i3$i$i51213 = 0, $$pre$i3$i$i76195$ph = 0, $$pre$i3$i$i76195216 = 0, $$pre$i3$i$i76261 = 0, $$pre$i3$i$i98 = 0, $$pre193 = 0;
 var $$pre194 = 0, $$pre197 = 0, $$pre198 = 0, $$pre199 = 0, $$pre200 = 0, $$pre201 = 0, $$pre202 = 0, $$pre206 = 0, $$pre207 = 0, $$pre208 = 0, $$pre210 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0;
 var $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0276 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0278 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0;
 var $cond = 0, $or$cond = 0, $or$cond13 = 0, $or$cond239 = 0, $or$cond7 = 0, $or$cond9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i121 = 0, $phitmp$i$i$i139 = 0, $phitmp$i$i$i31 = 0, $phitmp$i$i$i46 = 0, $phitmp$i$i$i71 = 0, $phitmp$i$i$i93 = 0, $phitmp$i4$i$i127 = 0, $phitmp$i4$i$i145 = 0, $phitmp$i4$i$i52 = 0, $phitmp$i4$i$i77 = 0, $switch = 0, $tmp$i$i129 = 0, $tmp$i$i147 = 0;
 var $tmp$i$i54 = 0, $tmp$i$i79 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $0 = sp + 496|0;
 $__gbuf = sp + 96|0;
 $__gb = sp + 88|0;
 $__gn = sp + 80|0;
 $__ge = sp + 76|0;
 $__pat = sp + 500|0;
 $__dp = sp + 72|0;
 $__ts = sp + 68|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (107);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd);
 $14 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wn>>2] = $14;
 $15 = ((($__psn)) + 4|0);
 $16 = ((($__nsn)) + 4|0);
 $17 = ((($__nsn)) + 8|0);
 $18 = ((($__psn)) + 8|0);
 $19 = $__flags & 512;
 $20 = ($19|0)!=(0);
 $21 = ((($__sym)) + 8|0);
 $22 = ((($__sym)) + 4|0);
 $23 = ((($__spaces)) + 4|0);
 $24 = ((($__spaces)) + 8|0);
 $25 = ((($__pat)) + 3|0);
 $26 = ((($__grp)) + 4|0);
 $727 = $__gbuf;$__p$0276 = 0;$__trailing_sign$0278 = 0;
 L1: while(1) {
  $27 = HEAP32[$__b>>2]|0;
  $28 = ($27|0)==(0|0);
  do {
   if ($28) {
    $728 = 1;
   } else {
    $29 = ((($27)) + 12|0);
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($27)) + 16|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ($30|0)==($32|0);
    if ($33) {
     $34 = HEAP32[$27>>2]|0;
     $35 = ((($34)) + 36|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (FUNCTION_TABLE_ii[$36 & 63]($27)|0);
     $$0$i$i$i$i28 = $37;
    } else {
     $38 = HEAP32[$30>>2]|0;
     $$0$i$i$i$i28 = $38;
    }
    $39 = ($$0$i$i$i$i28|0)==(-1);
    if ($39) {
     HEAP32[$__b>>2] = 0;
     $728 = 1;
     break;
    } else {
     $$pre$i$i$i30 = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i31 = ($$pre$i$i$i30|0)==(0|0);
     $728 = $phitmp$i$i$i31;
     break;
    }
   }
  } while(0);
  $40 = HEAP32[$__e>>2]|0;
  $41 = ($40|0)==(0|0);
  do {
   if ($41) {
    label = 15;
   } else {
    $42 = ((($40)) + 12|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = ((($40)) + 16|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = ($43|0)==($45|0);
    if ($46) {
     $47 = HEAP32[$40>>2]|0;
     $48 = ((($47)) + 36|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = (FUNCTION_TABLE_ii[$49 & 63]($40)|0);
     $$0$i$i1$i$i34 = $50;
    } else {
     $51 = HEAP32[$43>>2]|0;
     $$0$i$i1$i$i34 = $51;
    }
    $52 = ($$0$i$i1$i$i34|0)==(-1);
    if ($52) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($728) {
      $729 = $40;
      break;
     } else {
      $$lcssa248 = $727;$__trailing_sign$0$lcssa = $__trailing_sign$0278;
      label = 217;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($728) {
    $$lcssa248 = $727;$__trailing_sign$0$lcssa = $__trailing_sign$0278;
    label = 217;
    break;
   } else {
    $729 = 0;
   }
  }
  $53 = (($__pat) + ($__p$0276)|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = $54 << 24 >> 24;
  L25: do {
   switch ($55|0) {
   case 2:  {
    $281 = ($__trailing_sign$0278|0)!=(0|0);
    $282 = ($__p$0276>>>0)<(2);
    $or$cond = $282 | $281;
    if (!($or$cond)) {
     $283 = ($__p$0276|0)==(2);
     $284 = HEAP8[$25>>0]|0;
     $285 = ($284<<24>>24)!=(0);
     $286 = $283 & $285;
     $brmerge = $20 | $286;
     if (!($brmerge)) {
      $730 = $727;$__trailing_sign$1 = 0;
      break L25;
     }
    }
    $287 = HEAP8[$__sym>>0]|0;
    $288 = $287 & 1;
    $289 = ($288<<24>>24)==(0);
    $290 = HEAP32[$21>>2]|0;
    $291 = $289 ? $22 : $290;
    $292 = $291;
    $293 = ($__p$0276|0)==(0);
    L30: do {
     if ($293) {
      $$ph = $290;$$ph240 = $287;$$ph241 = $292;
     } else {
      $304 = (($__p$0276) + -1)|0;
      $305 = (($__pat) + ($304)|0);
      $306 = HEAP8[$305>>0]|0;
      $switch = ($306&255)<(2);
      if ($switch) {
       $307 = $287 & 1;
       $308 = ($307<<24>>24)==(0);
       $309 = HEAP32[$22>>2]|0;
       $310 = $287&255;
       $311 = $310 >>> 1;
       $312 = $308 ? $22 : $290;
       $313 = $308 ? $311 : $309;
       $314 = (($312) + ($313<<2)|0);
       $315 = ($291|0)==($314|0);
       L33: do {
        if ($315) {
         $334 = $287;$336 = $290;$340 = $292;
        } else {
         $317 = $291;$732 = $292;
         while(1) {
          $316 = HEAP32[$317>>2]|0;
          $318 = HEAP32[$__ct>>2]|0;
          $319 = ((($318)) + 12|0);
          $320 = HEAP32[$319>>2]|0;
          $321 = (FUNCTION_TABLE_iiii[$320 & 31]($__ct,8192,$316)|0);
          if (!($321)) {
           $$lcssa294 = $732;
           break;
          }
          $322 = ((($317)) + 4|0);
          $323 = $322;
          $$pre197 = HEAP8[$__sym>>0]|0;
          $$pre198 = HEAP32[$21>>2]|0;
          $324 = $$pre197 & 1;
          $325 = ($324<<24>>24)==(0);
          $326 = HEAP32[$22>>2]|0;
          $327 = $$pre197&255;
          $328 = $327 >>> 1;
          $329 = $325 ? $22 : $$pre198;
          $330 = $325 ? $328 : $326;
          $331 = (($329) + ($330<<2)|0);
          $332 = ($322|0)==($331|0);
          if ($332) {
           $334 = $$pre197;$336 = $$pre198;$340 = $323;
           break L33;
          } else {
           $317 = $322;$732 = $323;
          }
         }
         $$pre199 = HEAP8[$__sym>>0]|0;
         $$pre200 = HEAP32[$21>>2]|0;
         $334 = $$pre199;$336 = $$pre200;$340 = $$lcssa294;
        }
       } while(0);
       $333 = $334 & 1;
       $335 = ($333<<24>>24)==(0);
       $337 = $335 ? $22 : $336;
       $338 = $337;
       $339 = (($340) - ($338))|0;
       $341 = $339 >> 2;
       $342 = HEAP8[$__spaces>>0]|0;
       $343 = $342 & 1;
       $344 = ($343<<24>>24)==(0);
       $345 = HEAP32[$23>>2]|0;
       $346 = $342&255;
       $347 = $346 >>> 1;
       $348 = $344 ? $347 : $345;
       $349 = ($348>>>0)<($341>>>0);
       if ($349) {
        $$ph = $336;$$ph240 = $334;$$ph241 = $338;
       } else {
        $350 = HEAP32[$24>>2]|0;
        $351 = $344 ? $23 : $350;
        $352 = (($351) + ($348<<2)|0);
        $353 = ($341|0)==(0);
        if ($353) {
         $$ph = $336;$$ph240 = $334;$$ph241 = $340;
        } else {
         $$sum = (($348) - ($341))|0;
         $354 = (($351) + ($$sum<<2)|0);
         $$in265 = $337;$356 = $354;
         while(1) {
          $355 = HEAP32[$356>>2]|0;
          $357 = HEAP32[$$in265>>2]|0;
          $358 = ($355|0)==($357|0);
          if (!($358)) {
           $$ph = $336;$$ph240 = $334;$$ph241 = $338;
           break L30;
          }
          $359 = ((($356)) + 4|0);
          $360 = ((($$in265)) + 4|0);
          $361 = ($359|0)==($352|0);
          if ($361) {
           $$ph = $336;$$ph240 = $334;$$ph241 = $340;
           break;
          } else {
           $$in265 = $360;$356 = $359;
          }
         }
        }
       }
      } else {
       $$ph = $290;$$ph240 = $287;$$ph241 = $292;
      }
     }
    } while(0);
    $294 = $$ph240 & 1;
    $295 = ($294<<24>>24)==(0);
    $296 = HEAP32[$22>>2]|0;
    $297 = $$ph240&255;
    $298 = $297 >>> 1;
    $299 = $295 ? $22 : $$ph;
    $300 = $295 ? $298 : $296;
    $301 = (($299) + ($300<<2)|0);
    $302 = $$ph241;
    $303 = ($302|0)==($301|0);
    L45: do {
     if ($303) {
      $$lcssa183 = $301;
     } else {
      $$pre$i3$i$i144270 = $729;$375 = $729;$401 = $302;
      while(1) {
       $362 = HEAP32[$__b>>2]|0;
       $363 = ($362|0)==(0|0);
       do {
        if ($363) {
         $388 = 1;
        } else {
         $364 = ((($362)) + 12|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ((($362)) + 16|0);
         $367 = HEAP32[$366>>2]|0;
         $368 = ($365|0)==($367|0);
         if ($368) {
          $369 = HEAP32[$362>>2]|0;
          $370 = ((($369)) + 36|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = (FUNCTION_TABLE_ii[$371 & 63]($362)|0);
          $$0$i$i$i$i136 = $372;
         } else {
          $373 = HEAP32[$365>>2]|0;
          $$0$i$i$i$i136 = $373;
         }
         $374 = ($$0$i$i$i$i136|0)==(-1);
         if ($374) {
          HEAP32[$__b>>2] = 0;
          $388 = 1;
          break;
         } else {
          $$pre$i$i$i138 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i139 = ($$pre$i$i$i138|0)==(0|0);
          $388 = $phitmp$i$i$i139;
          break;
         }
        }
       } while(0);
       $376 = ($375|0)==(0|0);
       do {
        if ($376) {
         $$pre$i3$i$i144204 = $$pre$i3$i$i144270;
         label = 114;
        } else {
         $377 = ((($375)) + 12|0);
         $378 = HEAP32[$377>>2]|0;
         $379 = ((($375)) + 16|0);
         $380 = HEAP32[$379>>2]|0;
         $381 = ($378|0)==($380|0);
         if ($381) {
          $382 = HEAP32[$375>>2]|0;
          $383 = ((($382)) + 36|0);
          $384 = HEAP32[$383>>2]|0;
          $385 = (FUNCTION_TABLE_ii[$384 & 63]($375)|0);
          $$0$i$i1$i$i142 = $385;
         } else {
          $386 = HEAP32[$378>>2]|0;
          $$0$i$i1$i$i142 = $386;
         }
         $387 = ($$0$i$i1$i$i142|0)==(-1);
         if ($387) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i144204 = 0;
          label = 114;
          break;
         } else {
          $phitmp$i4$i$i145 = ($$pre$i3$i$i144270|0)==(0|0);
          $tmp$i$i147 = $388 ^ $phitmp$i4$i$i145;
          if ($tmp$i$i147) {
           $$pre$i3$i$i144203 = $$pre$i3$i$i144270;$733 = $$pre$i3$i$i144270;
           break;
          } else {
           $$lcssa183 = $401;
           break L45;
          }
         }
        }
       } while(0);
       if ((label|0) == 114) {
        label = 0;
        if ($388) {
         $$lcssa183 = $401;
         break L45;
        } else {
         $$pre$i3$i$i144203 = $$pre$i3$i$i144204;$733 = 0;
        }
       }
       $389 = HEAP32[$__b>>2]|0;
       $390 = ((($389)) + 12|0);
       $391 = HEAP32[$390>>2]|0;
       $392 = ((($389)) + 16|0);
       $393 = HEAP32[$392>>2]|0;
       $394 = ($391|0)==($393|0);
       if ($394) {
        $395 = HEAP32[$389>>2]|0;
        $396 = ((($395)) + 36|0);
        $397 = HEAP32[$396>>2]|0;
        $398 = (FUNCTION_TABLE_ii[$397 & 63]($389)|0);
        $$0$i$i133 = $398;
       } else {
        $399 = HEAP32[$391>>2]|0;
        $$0$i$i133 = $399;
       }
       $400 = HEAP32[$401>>2]|0;
       $402 = ($$0$i$i133|0)==($400|0);
       if (!($402)) {
        $$lcssa183 = $401;
        break L45;
       }
       $403 = HEAP32[$__b>>2]|0;
       $404 = ((($403)) + 12|0);
       $405 = HEAP32[$404>>2]|0;
       $406 = ((($403)) + 16|0);
       $407 = HEAP32[$406>>2]|0;
       $408 = ($405|0)==($407|0);
       if ($408) {
        $409 = HEAP32[$403>>2]|0;
        $410 = ((($409)) + 40|0);
        $411 = HEAP32[$410>>2]|0;
        (FUNCTION_TABLE_ii[$411 & 63]($403)|0);
       } else {
        $412 = ((($405)) + 4|0);
        HEAP32[$404>>2] = $412;
       }
       $413 = ((($401)) + 4|0);
       $$pre201 = HEAP8[$__sym>>0]|0;
       $$pre202 = HEAP32[$21>>2]|0;
       $414 = $$pre201 & 1;
       $415 = ($414<<24>>24)==(0);
       $416 = HEAP32[$22>>2]|0;
       $417 = $$pre201&255;
       $418 = $417 >>> 1;
       $419 = $415 ? $22 : $$pre202;
       $420 = $415 ? $418 : $416;
       $421 = (($419) + ($420<<2)|0);
       $422 = ($413|0)==($421|0);
       if ($422) {
        $$lcssa183 = $421;
        break;
       } else {
        $$pre$i3$i$i144270 = $$pre$i3$i$i144203;$375 = $733;$401 = $413;
       }
      }
     }
    } while(0);
    if ($20) {
     $423 = HEAP8[$__sym>>0]|0;
     $424 = $423 & 1;
     $425 = ($424<<24>>24)==(0);
     $426 = HEAP32[$21>>2]|0;
     $427 = HEAP32[$22>>2]|0;
     $428 = $423&255;
     $429 = $428 >>> 1;
     $430 = $425 ? $22 : $426;
     $431 = $425 ? $429 : $427;
     $432 = (($430) + ($431<<2)|0);
     $433 = ($$lcssa183|0)==($432|0);
     if ($433) {
      $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
     } else {
      label = 126;
      break L1;
     }
    } else {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    }
    break;
   }
   case 3:  {
    $141 = HEAP8[$__psn>>0]|0;
    $142 = $141 & 1;
    $143 = ($142<<24>>24)==(0);
    $144 = HEAP32[$15>>2]|0;
    $145 = $141&255;
    $146 = $145 >>> 1;
    $147 = $143 ? $146 : $144;
    $148 = HEAP8[$__nsn>>0]|0;
    $149 = $148 & 1;
    $150 = ($149<<24>>24)==(0);
    $151 = HEAP32[$16>>2]|0;
    $152 = $148&255;
    $153 = $152 >>> 1;
    $154 = $150 ? $153 : $151;
    $155 = (0 - ($154))|0;
    $156 = ($147|0)==($155|0);
    if ($156) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $157 = ($147|0)==(0);
     $158 = ($154|0)==(0);
     $or$cond239 = $157 | $158;
     $159 = HEAP32[$__b>>2]|0;
     $160 = ((($159)) + 12|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = ((($159)) + 16|0);
     $163 = HEAP32[$162>>2]|0;
     $164 = ($161|0)==($163|0);
     if ($or$cond239) {
      if ($164) {
       $165 = HEAP32[$159>>2]|0;
       $166 = ((($165)) + 36|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = (FUNCTION_TABLE_ii[$167 & 63]($159)|0);
       $$0$i$i82 = $168;
      } else {
       $169 = HEAP32[$161>>2]|0;
       $$0$i$i82 = $169;
      }
      if ($157) {
       $195 = HEAP8[$__nsn>>0]|0;
       $196 = $195 & 1;
       $197 = ($196<<24>>24)==(0);
       $198 = HEAP32[$17>>2]|0;
       $199 = $197 ? $16 : $198;
       $200 = HEAP32[$199>>2]|0;
       $201 = ($$0$i$i82|0)==($200|0);
       if (!($201)) {
        $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
        break L25;
       }
       $202 = HEAP32[$__b>>2]|0;
       $203 = ((($202)) + 12|0);
       $204 = HEAP32[$203>>2]|0;
       $205 = ((($202)) + 16|0);
       $206 = HEAP32[$205>>2]|0;
       $207 = ($204|0)==($206|0);
       if ($207) {
        $208 = HEAP32[$202>>2]|0;
        $209 = ((($208)) + 40|0);
        $210 = HEAP32[$209>>2]|0;
        (FUNCTION_TABLE_ii[$210 & 63]($202)|0);
       } else {
        $211 = ((($204)) + 4|0);
        HEAP32[$203>>2] = $211;
       }
       HEAP8[$__neg>>0] = 1;
       $212 = HEAP8[$__nsn>>0]|0;
       $213 = $212 & 1;
       $214 = ($213<<24>>24)==(0);
       $215 = HEAP32[$16>>2]|0;
       $216 = $212&255;
       $217 = $216 >>> 1;
       $218 = $214 ? $217 : $215;
       $219 = ($218>>>0)>(1);
       $__nsn$__trailing_sign$0 = $219 ? $__nsn : $__trailing_sign$0278;
       $730 = $727;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
       break L25;
      }
      $170 = HEAP8[$__psn>>0]|0;
      $171 = $170 & 1;
      $172 = ($171<<24>>24)==(0);
      $173 = HEAP32[$18>>2]|0;
      $174 = $172 ? $15 : $173;
      $175 = HEAP32[$174>>2]|0;
      $176 = ($$0$i$i82|0)==($175|0);
      if (!($176)) {
       HEAP8[$__neg>>0] = 1;
       $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
       break L25;
      }
      $177 = HEAP32[$__b>>2]|0;
      $178 = ((($177)) + 12|0);
      $179 = HEAP32[$178>>2]|0;
      $180 = ((($177)) + 16|0);
      $181 = HEAP32[$180>>2]|0;
      $182 = ($179|0)==($181|0);
      if ($182) {
       $183 = HEAP32[$177>>2]|0;
       $184 = ((($183)) + 40|0);
       $185 = HEAP32[$184>>2]|0;
       (FUNCTION_TABLE_ii[$185 & 63]($177)|0);
      } else {
       $186 = ((($179)) + 4|0);
       HEAP32[$178>>2] = $186;
      }
      $187 = HEAP8[$__psn>>0]|0;
      $188 = $187 & 1;
      $189 = ($188<<24>>24)==(0);
      $190 = HEAP32[$15>>2]|0;
      $191 = $187&255;
      $192 = $191 >>> 1;
      $193 = $189 ? $192 : $190;
      $194 = ($193>>>0)>(1);
      $__psn$__trailing_sign$0 = $194 ? $__psn : $__trailing_sign$0278;
      $730 = $727;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      break L25;
     }
     if ($164) {
      $220 = HEAP32[$159>>2]|0;
      $221 = ((($220)) + 36|0);
      $222 = HEAP32[$221>>2]|0;
      $223 = (FUNCTION_TABLE_ii[$222 & 63]($159)|0);
      $$pre206 = HEAP8[$__psn>>0]|0;
      $$pre207 = HEAP32[$__b>>2]|0;
      $$phi$trans$insert = ((($$pre207)) + 12|0);
      $$pre208 = HEAP32[$$phi$trans$insert>>2]|0;
      $$phi$trans$insert209 = ((($$pre207)) + 16|0);
      $$pre210 = HEAP32[$$phi$trans$insert209>>2]|0;
      $$0$i$i105 = $223;$226 = $$pre206;$233 = $$pre207;$234 = $$pre208;$236 = $$pre210;
     } else {
      $224 = HEAP32[$161>>2]|0;
      $$0$i$i105 = $224;$226 = $141;$233 = $159;$234 = $161;$236 = $163;
     }
     $225 = $226 & 1;
     $227 = ($225<<24>>24)==(0);
     $228 = HEAP32[$18>>2]|0;
     $229 = $227 ? $15 : $228;
     $230 = HEAP32[$229>>2]|0;
     $231 = ($$0$i$i105|0)==($230|0);
     $232 = ((($233)) + 12|0);
     $235 = ($234|0)==($236|0);
     if ($231) {
      if ($235) {
       $237 = HEAP32[$233>>2]|0;
       $238 = ((($237)) + 40|0);
       $239 = HEAP32[$238>>2]|0;
       (FUNCTION_TABLE_ii[$239 & 63]($233)|0);
      } else {
       $240 = ((($234)) + 4|0);
       HEAP32[$232>>2] = $240;
      }
      $241 = HEAP8[$__psn>>0]|0;
      $242 = $241 & 1;
      $243 = ($242<<24>>24)==(0);
      $244 = HEAP32[$15>>2]|0;
      $245 = $241&255;
      $246 = $245 >>> 1;
      $247 = $243 ? $246 : $244;
      $248 = ($247>>>0)>(1);
      $__psn$__trailing_sign$010 = $248 ? $__psn : $__trailing_sign$0278;
      $730 = $727;$__trailing_sign$1 = $__psn$__trailing_sign$010;
      break L25;
     }
     if ($235) {
      $249 = HEAP32[$233>>2]|0;
      $250 = ((($249)) + 36|0);
      $251 = HEAP32[$250>>2]|0;
      $252 = (FUNCTION_TABLE_ii[$251 & 63]($233)|0);
      $$0$i$i111 = $252;
     } else {
      $253 = HEAP32[$234>>2]|0;
      $$0$i$i111 = $253;
     }
     $254 = HEAP8[$__nsn>>0]|0;
     $255 = $254 & 1;
     $256 = ($255<<24>>24)==(0);
     $257 = HEAP32[$17>>2]|0;
     $258 = $256 ? $16 : $257;
     $259 = HEAP32[$258>>2]|0;
     $260 = ($$0$i$i111|0)==($259|0);
     if (!($260)) {
      label = 86;
      break L1;
     }
     $261 = HEAP32[$__b>>2]|0;
     $262 = ((($261)) + 12|0);
     $263 = HEAP32[$262>>2]|0;
     $264 = ((($261)) + 16|0);
     $265 = HEAP32[$264>>2]|0;
     $266 = ($263|0)==($265|0);
     if ($266) {
      $267 = HEAP32[$261>>2]|0;
      $268 = ((($267)) + 40|0);
      $269 = HEAP32[$268>>2]|0;
      (FUNCTION_TABLE_ii[$269 & 63]($261)|0);
     } else {
      $270 = ((($263)) + 4|0);
      HEAP32[$262>>2] = $270;
     }
     HEAP8[$__neg>>0] = 1;
     $271 = HEAP8[$__nsn>>0]|0;
     $272 = $271 & 1;
     $273 = ($272<<24>>24)==(0);
     $274 = HEAP32[$16>>2]|0;
     $275 = $271&255;
     $276 = $275 >>> 1;
     $277 = $273 ? $276 : $274;
     $278 = ($277>>>0)>(1);
     $__nsn$__trailing_sign$011 = $278 ? $__nsn : $__trailing_sign$0278;
     $730 = $727;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
    }
    break;
   }
   case 1:  {
    $cond = ($__p$0276|0)==(3);
    if ($cond) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $57 = HEAP32[$__b>>2]|0;
     $58 = ((($57)) + 12|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ((($57)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$57>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 63]($57)|0);
      $$0$i$i40 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i40 = $67;
     }
     $68 = HEAP32[$__ct>>2]|0;
     $69 = ((($68)) + 12|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = (FUNCTION_TABLE_iiii[$70 & 31]($__ct,8192,$$0$i$i40)|0);
     if (!($71)) {
      label = 28;
      break L1;
     }
     $72 = HEAP32[$__b>>2]|0;
     $73 = ((($72)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($72)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$72>>2]|0;
      $79 = ((($78)) + 40|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 63]($72)|0);
      $$0$i$i42 = $81;
     } else {
      $82 = ((($74)) + 4|0);
      HEAP32[$73>>2] = $82;
      $83 = HEAP32[$74>>2]|0;
      $$0$i$i42 = $83;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$$0$i$i42);
     $$pre$i3$i$i51 = $729;$100 = $729;
     label = 30;
    }
    break;
   }
   case 4:  {
    $56 = HEAP32[$__ts>>2]|0;
    $$pre$i3$i$i126 = $729;$449 = $729;$495 = $727;$__ng$0 = 0;
    L137: while(1) {
     $436 = HEAP32[$__b>>2]|0;
     $437 = ($436|0)==(0|0);
     do {
      if ($437) {
       $462 = 1;
      } else {
       $438 = ((($436)) + 12|0);
       $439 = HEAP32[$438>>2]|0;
       $440 = ((($436)) + 16|0);
       $441 = HEAP32[$440>>2]|0;
       $442 = ($439|0)==($441|0);
       if ($442) {
        $443 = HEAP32[$436>>2]|0;
        $444 = ((($443)) + 36|0);
        $445 = HEAP32[$444>>2]|0;
        $446 = (FUNCTION_TABLE_ii[$445 & 63]($436)|0);
        $$0$i$i$i$i118 = $446;
       } else {
        $447 = HEAP32[$439>>2]|0;
        $$0$i$i$i$i118 = $447;
       }
       $448 = ($$0$i$i$i$i118|0)==(-1);
       if ($448) {
        HEAP32[$__b>>2] = 0;
        $462 = 1;
        break;
       } else {
        $$pre$i$i$i120 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i121 = ($$pre$i$i$i120|0)==(0|0);
        $462 = $phitmp$i$i$i121;
        break;
       }
      }
     } while(0);
     $450 = ($449|0)==(0|0);
     do {
      if ($450) {
       $$pre$i3$i$i126190 = $$pre$i3$i$i126;
       label = 140;
      } else {
       $451 = ((($449)) + 12|0);
       $452 = HEAP32[$451>>2]|0;
       $453 = ((($449)) + 16|0);
       $454 = HEAP32[$453>>2]|0;
       $455 = ($452|0)==($454|0);
       if ($455) {
        $456 = HEAP32[$449>>2]|0;
        $457 = ((($456)) + 36|0);
        $458 = HEAP32[$457>>2]|0;
        $459 = (FUNCTION_TABLE_ii[$458 & 63]($449)|0);
        $$0$i$i1$i$i124 = $459;
       } else {
        $460 = HEAP32[$452>>2]|0;
        $$0$i$i1$i$i124 = $460;
       }
       $461 = ($$0$i$i1$i$i124|0)==(-1);
       if ($461) {
        HEAP32[$__e>>2] = 0;
        $$pre$i3$i$i126190 = 0;
        label = 140;
        break;
       } else {
        $phitmp$i4$i$i127 = ($$pre$i3$i$i126|0)==(0|0);
        $tmp$i$i129 = $462 ^ $phitmp$i4$i$i127;
        if ($tmp$i$i129) {
         $$pre$i3$i$i126192 = $$pre$i3$i$i126;$734 = $$pre$i3$i$i126;
         break;
        } else {
         $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126;$__ng$0$lcssa = $__ng$0;
         break L137;
        }
       }
      }
     } while(0);
     if ((label|0) == 140) {
      label = 0;
      if ($462) {
       $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126190;$__ng$0$lcssa = $__ng$0;
       break;
      } else {
       $$pre$i3$i$i126192 = $$pre$i3$i$i126190;$734 = 0;
      }
     }
     $463 = HEAP32[$__b>>2]|0;
     $464 = ((($463)) + 12|0);
     $465 = HEAP32[$464>>2]|0;
     $466 = ((($463)) + 16|0);
     $467 = HEAP32[$466>>2]|0;
     $468 = ($465|0)==($467|0);
     if ($468) {
      $469 = HEAP32[$463>>2]|0;
      $470 = ((($469)) + 36|0);
      $471 = HEAP32[$470>>2]|0;
      $472 = (FUNCTION_TABLE_ii[$471 & 63]($463)|0);
      $$0$i$i116 = $472;
     } else {
      $473 = HEAP32[$465>>2]|0;
      $$0$i$i116 = $473;
     }
     $474 = HEAP32[$__ct>>2]|0;
     $475 = ((($474)) + 12|0);
     $476 = HEAP32[$475>>2]|0;
     $477 = (FUNCTION_TABLE_iiii[$476 & 31]($__ct,2048,$$0$i$i116)|0);
     if ($477) {
      $478 = HEAP32[$__wn>>2]|0;
      $479 = HEAP32[$0>>2]|0;
      $480 = ($478|0)==($479|0);
      if ($480) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       $$pre193 = HEAP32[$__wn>>2]|0;
       $482 = $$pre193;
      } else {
       $482 = $478;
      }
      $481 = ((($482)) + 4|0);
      HEAP32[$__wn>>2] = $481;
      HEAP32[$482>>2] = $$0$i$i116;
      $483 = (($__ng$0) + 1)|0;
      $735 = $495;$__ng$1 = $483;
     } else {
      $484 = HEAP8[$__grp>>0]|0;
      $485 = $484 & 1;
      $486 = ($485<<24>>24)==(0);
      $487 = HEAP32[$26>>2]|0;
      $488 = $484&255;
      $489 = $488 >>> 1;
      $490 = $486 ? $489 : $487;
      $491 = ($490|0)!=(0);
      $492 = ($__ng$0|0)!=(0);
      $or$cond7 = $492 & $491;
      $493 = ($$0$i$i116|0)==($56|0);
      $or$cond13 = $493 & $or$cond7;
      if (!($or$cond13)) {
       $$lcssa = $495;$$pre$i3$i$i98 = $$pre$i3$i$i126192;$__ng$0$lcssa = $__ng$0;
       break;
      }
      $494 = HEAP32[$__ge>>2]|0;
      $496 = ($495|0)==($494|0);
      if ($496) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
       $$pre = HEAP32[$__gn>>2]|0;
       $498 = $$pre;
      } else {
       $498 = $495;
      }
      $497 = ((($498)) + 4|0);
      HEAP32[$__gn>>2] = $497;
      HEAP32[$498>>2] = $__ng$0;
      $735 = $497;$__ng$1 = 0;
     }
     $499 = HEAP32[$__b>>2]|0;
     $500 = ((($499)) + 12|0);
     $501 = HEAP32[$500>>2]|0;
     $502 = ((($499)) + 16|0);
     $503 = HEAP32[$502>>2]|0;
     $504 = ($501|0)==($503|0);
     if ($504) {
      $505 = HEAP32[$499>>2]|0;
      $506 = ((($505)) + 40|0);
      $507 = HEAP32[$506>>2]|0;
      (FUNCTION_TABLE_ii[$507 & 63]($499)|0);
      $$pre$i3$i$i126 = $$pre$i3$i$i126192;$449 = $734;$495 = $735;$__ng$0 = $__ng$1;
      continue;
     } else {
      $508 = ((($501)) + 4|0);
      HEAP32[$500>>2] = $508;
      $$pre$i3$i$i126 = $$pre$i3$i$i126192;$449 = $734;$495 = $735;$__ng$0 = $__ng$1;
      continue;
     }
    }
    $509 = HEAP32[$__gb>>2]|0;
    $510 = ($509|0)!=($$lcssa|0);
    $511 = ($__ng$0$lcssa|0)!=(0);
    $or$cond9 = $511 & $510;
    if ($or$cond9) {
     $512 = HEAP32[$__ge>>2]|0;
     $513 = ($$lcssa|0)==($512|0);
     if ($513) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
      $$pre194 = HEAP32[$__gn>>2]|0;
      $515 = $$pre194;
     } else {
      $515 = $$lcssa;
     }
     $514 = ((($515)) + 4|0);
     HEAP32[$__gn>>2] = $514;
     HEAP32[$515>>2] = $__ng$0$lcssa;
     $736 = $514;
    } else {
     $736 = $$lcssa;
    }
    $516 = HEAP32[$__fd>>2]|0;
    $517 = ($516|0)>(0);
    if ($517) {
     $518 = HEAP32[$__b>>2]|0;
     $519 = ($518|0)==(0|0);
     do {
      if ($519) {
       $737 = 1;
      } else {
       $520 = ((($518)) + 12|0);
       $521 = HEAP32[$520>>2]|0;
       $522 = ((($518)) + 16|0);
       $523 = HEAP32[$522>>2]|0;
       $524 = ($521|0)==($523|0);
       if ($524) {
        $525 = HEAP32[$518>>2]|0;
        $526 = ((($525)) + 36|0);
        $527 = HEAP32[$526>>2]|0;
        $528 = (FUNCTION_TABLE_ii[$527 & 63]($518)|0);
        $$0$i$i$i$i90 = $528;
       } else {
        $529 = HEAP32[$521>>2]|0;
        $$0$i$i$i$i90 = $529;
       }
       $530 = ($$0$i$i$i$i90|0)==(-1);
       if ($530) {
        HEAP32[$__b>>2] = 0;
        $737 = 1;
        break;
       } else {
        $$pre$i$i$i92 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i93 = ($$pre$i$i$i92|0)==(0|0);
        $737 = $phitmp$i$i$i93;
        break;
       }
      }
     } while(0);
     $531 = ($$pre$i3$i$i98|0)==(0|0);
     do {
      if ($531) {
       label = 174;
      } else {
       $532 = ((($$pre$i3$i$i98)) + 12|0);
       $533 = HEAP32[$532>>2]|0;
       $534 = ((($$pre$i3$i$i98)) + 16|0);
       $535 = HEAP32[$534>>2]|0;
       $536 = ($533|0)==($535|0);
       if ($536) {
        $537 = HEAP32[$$pre$i3$i$i98>>2]|0;
        $538 = ((($537)) + 36|0);
        $539 = HEAP32[$538>>2]|0;
        $540 = (FUNCTION_TABLE_ii[$539 & 63]($$pre$i3$i$i98)|0);
        $$0$i$i1$i$i96 = $540;
       } else {
        $541 = HEAP32[$533>>2]|0;
        $$0$i$i1$i$i96 = $541;
       }
       $542 = ($$0$i$i1$i$i96|0)==(-1);
       if ($542) {
        HEAP32[$__e>>2] = 0;
        label = 174;
        break;
       } else {
        if ($737) {
         $738 = $$pre$i3$i$i98;
         break;
        } else {
         label = 180;
         break L1;
        }
       }
      }
     } while(0);
     if ((label|0) == 174) {
      label = 0;
      if ($737) {
       label = 180;
       break L1;
      } else {
       $738 = 0;
      }
     }
     $543 = HEAP32[$__b>>2]|0;
     $544 = ((($543)) + 12|0);
     $545 = HEAP32[$544>>2]|0;
     $546 = ((($543)) + 16|0);
     $547 = HEAP32[$546>>2]|0;
     $548 = ($545|0)==($547|0);
     if ($548) {
      $549 = HEAP32[$543>>2]|0;
      $550 = ((($549)) + 36|0);
      $551 = HEAP32[$550>>2]|0;
      $552 = (FUNCTION_TABLE_ii[$551 & 63]($543)|0);
      $$0$i$i87 = $552;
     } else {
      $553 = HEAP32[$545>>2]|0;
      $$0$i$i87 = $553;
     }
     $554 = HEAP32[$__dp>>2]|0;
     $555 = ($$0$i$i87|0)==($554|0);
     if (!($555)) {
      label = 180;
      break L1;
     }
     $558 = HEAP32[$__b>>2]|0;
     $559 = ((($558)) + 12|0);
     $560 = HEAP32[$559>>2]|0;
     $561 = ((($558)) + 16|0);
     $562 = HEAP32[$561>>2]|0;
     $563 = ($560|0)==($562|0);
     if ($563) {
      $564 = HEAP32[$558>>2]|0;
      $565 = ((($564)) + 40|0);
      $566 = HEAP32[$565>>2]|0;
      (FUNCTION_TABLE_ii[$566 & 63]($558)|0);
     } else {
      $567 = ((($560)) + 4|0);
      HEAP32[$559>>2] = $567;
     }
     $568 = ($516|0)>(0);
     if ($568) {
      $$pre$i3$i$i76261 = $738;$582 = $738;$630 = $516;
      while(1) {
       $569 = HEAP32[$__b>>2]|0;
       $570 = ($569|0)==(0|0);
       do {
        if ($570) {
         $595 = 1;
        } else {
         $571 = ((($569)) + 12|0);
         $572 = HEAP32[$571>>2]|0;
         $573 = ((($569)) + 16|0);
         $574 = HEAP32[$573>>2]|0;
         $575 = ($572|0)==($574|0);
         if ($575) {
          $576 = HEAP32[$569>>2]|0;
          $577 = ((($576)) + 36|0);
          $578 = HEAP32[$577>>2]|0;
          $579 = (FUNCTION_TABLE_ii[$578 & 63]($569)|0);
          $$0$i$i$i$i68 = $579;
         } else {
          $580 = HEAP32[$572>>2]|0;
          $$0$i$i$i$i68 = $580;
         }
         $581 = ($$0$i$i$i$i68|0)==(-1);
         if ($581) {
          HEAP32[$__b>>2] = 0;
          $595 = 1;
          break;
         } else {
          $$pre$i$i$i70 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i71 = ($$pre$i$i$i70|0)==(0|0);
          $595 = $phitmp$i$i$i71;
          break;
         }
        }
       } while(0);
       $583 = ($582|0)==(0|0);
       do {
        if ($583) {
         $$pre$i3$i$i76195$ph = $$pre$i3$i$i76261;
         label = 198;
        } else {
         $584 = ((($582)) + 12|0);
         $585 = HEAP32[$584>>2]|0;
         $586 = ((($582)) + 16|0);
         $587 = HEAP32[$586>>2]|0;
         $588 = ($585|0)==($587|0);
         if ($588) {
          $589 = HEAP32[$582>>2]|0;
          $590 = ((($589)) + 36|0);
          $591 = HEAP32[$590>>2]|0;
          $592 = (FUNCTION_TABLE_ii[$591 & 63]($582)|0);
          $$0$i$i1$i$i74 = $592;
         } else {
          $593 = HEAP32[$585>>2]|0;
          $$0$i$i1$i$i74 = $593;
         }
         $594 = ($$0$i$i1$i$i74|0)==(-1);
         if ($594) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i76195$ph = 0;
          label = 198;
          break;
         } else {
          $phitmp$i4$i$i77 = ($$pre$i3$i$i76261|0)==(0|0);
          $tmp$i$i79 = $595 ^ $phitmp$i4$i$i77;
          if ($tmp$i$i79) {
           $$pre$i3$i$i76195216 = $$pre$i3$i$i76261;$739 = $$pre$i3$i$i76261;
           break;
          } else {
           label = 204;
           break L1;
          }
         }
        }
       } while(0);
       if ((label|0) == 198) {
        label = 0;
        if ($595) {
         label = 204;
         break L1;
        } else {
         $$pre$i3$i$i76195216 = $$pre$i3$i$i76195$ph;$739 = 0;
        }
       }
       $596 = HEAP32[$__b>>2]|0;
       $597 = ((($596)) + 12|0);
       $598 = HEAP32[$597>>2]|0;
       $599 = ((($596)) + 16|0);
       $600 = HEAP32[$599>>2]|0;
       $601 = ($598|0)==($600|0);
       if ($601) {
        $602 = HEAP32[$596>>2]|0;
        $603 = ((($602)) + 36|0);
        $604 = HEAP32[$603>>2]|0;
        $605 = (FUNCTION_TABLE_ii[$604 & 63]($596)|0);
        $$0$i$i65 = $605;
       } else {
        $606 = HEAP32[$598>>2]|0;
        $$0$i$i65 = $606;
       }
       $607 = HEAP32[$__ct>>2]|0;
       $608 = ((($607)) + 12|0);
       $609 = HEAP32[$608>>2]|0;
       $610 = (FUNCTION_TABLE_iiii[$609 & 31]($__ct,2048,$$0$i$i65)|0);
       if (!($610)) {
        label = 204;
        break L1;
       }
       $613 = HEAP32[$__wn>>2]|0;
       $614 = HEAP32[$0>>2]|0;
       $615 = ($613|0)==($614|0);
       if ($615) {
        __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$0);
       }
       $616 = HEAP32[$__b>>2]|0;
       $617 = ((($616)) + 12|0);
       $618 = HEAP32[$617>>2]|0;
       $619 = ((($616)) + 16|0);
       $620 = HEAP32[$619>>2]|0;
       $621 = ($618|0)==($620|0);
       if ($621) {
        $622 = HEAP32[$616>>2]|0;
        $623 = ((($622)) + 36|0);
        $624 = HEAP32[$623>>2]|0;
        $625 = (FUNCTION_TABLE_ii[$624 & 63]($616)|0);
        $$0$i$i26 = $625;
       } else {
        $626 = HEAP32[$618>>2]|0;
        $$0$i$i26 = $626;
       }
       $627 = HEAP32[$__wn>>2]|0;
       $628 = ((($627)) + 4|0);
       HEAP32[$__wn>>2] = $628;
       HEAP32[$627>>2] = $$0$i$i26;
       $629 = (($630) + -1)|0;
       HEAP32[$__fd>>2] = $629;
       $631 = HEAP32[$__b>>2]|0;
       $632 = ((($631)) + 12|0);
       $633 = HEAP32[$632>>2]|0;
       $634 = ((($631)) + 16|0);
       $635 = HEAP32[$634>>2]|0;
       $636 = ($633|0)==($635|0);
       if ($636) {
        $637 = HEAP32[$631>>2]|0;
        $638 = ((($637)) + 40|0);
        $639 = HEAP32[$638>>2]|0;
        (FUNCTION_TABLE_ii[$639 & 63]($631)|0);
       } else {
        $641 = ((($633)) + 4|0);
        HEAP32[$632>>2] = $641;
       }
       $640 = ($630|0)>(1);
       if ($640) {
        $$pre$i3$i$i76261 = $$pre$i3$i$i76195216;$582 = $739;$630 = $629;
       } else {
        break;
       }
      }
     }
    }
    $642 = HEAP32[$__wn>>2]|0;
    $643 = HEAP32[$__wb>>2]|0;
    $644 = ($642|0)==($643|0);
    if ($644) {
     label = 215;
     break L1;
    } else {
     $730 = $736;$__trailing_sign$1 = $__trailing_sign$0278;
    }
    break;
   }
   case 0:  {
    $86 = ($__p$0276|0)==(3);
    if ($86) {
     $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $$pre$i3$i$i51 = $729;$100 = $729;
     label = 30;
    }
    break;
   }
   default: {
    $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
   }
   }
  } while(0);
  L261: do {
   if ((label|0) == 30) {
    while(1) {
     label = 0;
     $87 = HEAP32[$__b>>2]|0;
     $88 = ($87|0)==(0|0);
     do {
      if ($88) {
       $113 = 1;
      } else {
       $89 = ((($87)) + 12|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ((($87)) + 16|0);
       $92 = HEAP32[$91>>2]|0;
       $93 = ($90|0)==($92|0);
       if ($93) {
        $94 = HEAP32[$87>>2]|0;
        $95 = ((($94)) + 36|0);
        $96 = HEAP32[$95>>2]|0;
        $97 = (FUNCTION_TABLE_ii[$96 & 63]($87)|0);
        $$0$i$i$i$i43 = $97;
       } else {
        $98 = HEAP32[$90>>2]|0;
        $$0$i$i$i$i43 = $98;
       }
       $99 = ($$0$i$i$i$i43|0)==(-1);
       if ($99) {
        HEAP32[$__b>>2] = 0;
        $113 = 1;
        break;
       } else {
        $$pre$i$i$i45 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i46 = ($$pre$i$i$i45|0)==(0|0);
        $113 = $phitmp$i$i$i46;
        break;
       }
      }
     } while(0);
     $101 = ($100|0)==(0|0);
     do {
      if ($101) {
       $$pre$i3$i$i51211 = $$pre$i3$i$i51;
       label = 43;
      } else {
       $102 = ((($100)) + 12|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ((($100)) + 16|0);
       $105 = HEAP32[$104>>2]|0;
       $106 = ($103|0)==($105|0);
       if ($106) {
        $107 = HEAP32[$100>>2]|0;
        $108 = ((($107)) + 36|0);
        $109 = HEAP32[$108>>2]|0;
        $110 = (FUNCTION_TABLE_ii[$109 & 63]($100)|0);
        $$0$i$i1$i$i49 = $110;
       } else {
        $111 = HEAP32[$103>>2]|0;
        $$0$i$i1$i$i49 = $111;
       }
       $112 = ($$0$i$i1$i$i49|0)==(-1);
       if ($112) {
        HEAP32[$__e>>2] = 0;
        $$pre$i3$i$i51211 = 0;
        label = 43;
        break;
       } else {
        $phitmp$i4$i$i52 = ($$pre$i3$i$i51|0)==(0|0);
        $tmp$i$i54 = $113 ^ $phitmp$i4$i$i52;
        if ($tmp$i$i54) {
         $$pre$i3$i$i51213 = $$pre$i3$i$i51;$731 = $$pre$i3$i$i51;
         break;
        } else {
         $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
         break L261;
        }
       }
      }
     } while(0);
     if ((label|0) == 43) {
      label = 0;
      if ($113) {
       $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
       break L261;
      } else {
       $$pre$i3$i$i51213 = $$pre$i3$i$i51211;$731 = 0;
      }
     }
     $114 = HEAP32[$__b>>2]|0;
     $115 = ((($114)) + 12|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ((($114)) + 16|0);
     $118 = HEAP32[$117>>2]|0;
     $119 = ($116|0)==($118|0);
     if ($119) {
      $120 = HEAP32[$114>>2]|0;
      $121 = ((($120)) + 36|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = (FUNCTION_TABLE_ii[$122 & 63]($114)|0);
      $$0$i$i56 = $123;
     } else {
      $124 = HEAP32[$116>>2]|0;
      $$0$i$i56 = $124;
     }
     $125 = HEAP32[$__ct>>2]|0;
     $126 = ((($125)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = (FUNCTION_TABLE_iiii[$127 & 31]($__ct,8192,$$0$i$i56)|0);
     if (!($128)) {
      $730 = $727;$__trailing_sign$1 = $__trailing_sign$0278;
      break L261;
     }
     $129 = HEAP32[$__b>>2]|0;
     $130 = ((($129)) + 12|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ((($129)) + 16|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ($131|0)==($133|0);
     if ($134) {
      $135 = HEAP32[$129>>2]|0;
      $136 = ((($135)) + 40|0);
      $137 = HEAP32[$136>>2]|0;
      $138 = (FUNCTION_TABLE_ii[$137 & 63]($129)|0);
      $$0$i$i60 = $138;
     } else {
      $139 = ((($131)) + 4|0);
      HEAP32[$130>>2] = $139;
      $140 = HEAP32[$131>>2]|0;
      $$0$i$i60 = $140;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$$0$i$i60);
     $$pre$i3$i$i51 = $$pre$i3$i$i51213;$100 = $731;
     label = 30;
    }
   }
  } while(0);
  $647 = (($__p$0276) + 1)|0;
  $648 = ($647>>>0)<(4);
  if ($648) {
   $727 = $730;$__p$0276 = $647;$__trailing_sign$0278 = $__trailing_sign$1;
  } else {
   $$lcssa248 = $730;$__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 217;
   break;
  }
 }
 L296: do {
  if ((label|0) == 28) {
   $84 = HEAP32[$__err>>2]|0;
   $85 = $84 | 4;
   HEAP32[$__err>>2] = $85;
   $$0 = 0;
  }
  else if ((label|0) == 86) {
   $279 = HEAP32[$__err>>2]|0;
   $280 = $279 | 4;
   HEAP32[$__err>>2] = $280;
   $$0 = 0;
  }
  else if ((label|0) == 126) {
   $434 = HEAP32[$__err>>2]|0;
   $435 = $434 | 4;
   HEAP32[$__err>>2] = $435;
   $$0 = 0;
  }
  else if ((label|0) == 180) {
   $556 = HEAP32[$__err>>2]|0;
   $557 = $556 | 4;
   HEAP32[$__err>>2] = $557;
   $$0 = 0;
  }
  else if ((label|0) == 204) {
   $611 = HEAP32[$__err>>2]|0;
   $612 = $611 | 4;
   HEAP32[$__err>>2] = $612;
   $$0 = 0;
  }
  else if ((label|0) == 215) {
   $645 = HEAP32[$__err>>2]|0;
   $646 = $645 | 4;
   HEAP32[$__err>>2] = $646;
   $$0 = 0;
  }
  else if ((label|0) == 217) {
   $649 = ($__trailing_sign$0$lcssa|0)==(0|0);
   L303: do {
    if (!($649)) {
     $650 = ((($__trailing_sign$0$lcssa)) + 4|0);
     $651 = ((($__trailing_sign$0$lcssa)) + 8|0);
     $__i$0 = 1;
     L305: while(1) {
      $652 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $653 = $652 & 1;
      $654 = ($653<<24>>24)==(0);
      if ($654) {
       $656 = $652&255;
       $657 = $656 >>> 1;
       $659 = $657;
      } else {
       $655 = HEAP32[$650>>2]|0;
       $659 = $655;
      }
      $658 = ($__i$0>>>0)<($659>>>0);
      if (!($658)) {
       break L303;
      }
      $660 = HEAP32[$__b>>2]|0;
      $661 = ($660|0)==(0|0);
      do {
       if ($661) {
        $740 = 1;
       } else {
        $662 = ((($660)) + 12|0);
        $663 = HEAP32[$662>>2]|0;
        $664 = ((($660)) + 16|0);
        $665 = HEAP32[$664>>2]|0;
        $666 = ($663|0)==($665|0);
        if ($666) {
         $667 = HEAP32[$660>>2]|0;
         $668 = ((($667)) + 36|0);
         $669 = HEAP32[$668>>2]|0;
         $670 = (FUNCTION_TABLE_ii[$669 & 63]($660)|0);
         $$0$i$i$i$i = $670;
        } else {
         $671 = HEAP32[$663>>2]|0;
         $$0$i$i$i$i = $671;
        }
        $672 = ($$0$i$i$i$i|0)==(-1);
        if ($672) {
         HEAP32[$__b>>2] = 0;
         $740 = 1;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
         $740 = $phitmp$i$i$i;
         break;
        }
       }
      } while(0);
      $673 = HEAP32[$__e>>2]|0;
      $674 = ($673|0)==(0|0);
      do {
       if ($674) {
        label = 236;
       } else {
        $675 = ((($673)) + 12|0);
        $676 = HEAP32[$675>>2]|0;
        $677 = ((($673)) + 16|0);
        $678 = HEAP32[$677>>2]|0;
        $679 = ($676|0)==($678|0);
        if ($679) {
         $680 = HEAP32[$673>>2]|0;
         $681 = ((($680)) + 36|0);
         $682 = HEAP32[$681>>2]|0;
         $683 = (FUNCTION_TABLE_ii[$682 & 63]($673)|0);
         $$0$i$i1$i$i = $683;
        } else {
         $684 = HEAP32[$676>>2]|0;
         $$0$i$i1$i$i = $684;
        }
        $685 = ($$0$i$i1$i$i|0)==(-1);
        if ($685) {
         HEAP32[$__e>>2] = 0;
         label = 236;
         break;
        } else {
         if ($740) {
          break;
         } else {
          break L305;
         }
        }
       }
      } while(0);
      if ((label|0) == 236) {
       label = 0;
       if ($740) {
        break;
       }
      }
      $686 = HEAP32[$__b>>2]|0;
      $687 = ((($686)) + 12|0);
      $688 = HEAP32[$687>>2]|0;
      $689 = ((($686)) + 16|0);
      $690 = HEAP32[$689>>2]|0;
      $691 = ($688|0)==($690|0);
      if ($691) {
       $692 = HEAP32[$686>>2]|0;
       $693 = ((($692)) + 36|0);
       $694 = HEAP32[$693>>2]|0;
       $695 = (FUNCTION_TABLE_ii[$694 & 63]($686)|0);
       $$0$i$i = $695;
      } else {
       $696 = HEAP32[$688>>2]|0;
       $$0$i$i = $696;
      }
      $697 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $698 = $697 & 1;
      $699 = ($698<<24>>24)==(0);
      if ($699) {
       $702 = $650;
      } else {
       $700 = HEAP32[$651>>2]|0;
       $702 = $700;
      }
      $701 = (($702) + ($__i$0<<2)|0);
      $703 = HEAP32[$701>>2]|0;
      $704 = ($$0$i$i|0)==($703|0);
      if (!($704)) {
       break;
      }
      $707 = (($__i$0) + 1)|0;
      $708 = HEAP32[$__b>>2]|0;
      $709 = ((($708)) + 12|0);
      $710 = HEAP32[$709>>2]|0;
      $711 = ((($708)) + 16|0);
      $712 = HEAP32[$711>>2]|0;
      $713 = ($710|0)==($712|0);
      if ($713) {
       $714 = HEAP32[$708>>2]|0;
       $715 = ((($714)) + 40|0);
       $716 = HEAP32[$715>>2]|0;
       (FUNCTION_TABLE_ii[$716 & 63]($708)|0);
       $__i$0 = $707;
       continue;
      } else {
       $717 = ((($710)) + 4|0);
       HEAP32[$709>>2] = $717;
       $__i$0 = $707;
       continue;
      }
     }
     $705 = HEAP32[$__err>>2]|0;
     $706 = $705 | 4;
     HEAP32[$__err>>2] = $706;
     $$0 = 0;
     break L296;
    }
   } while(0);
   $718 = HEAP32[$__gb>>2]|0;
   $719 = ($718|0)==($$lcssa248|0);
   if ($719) {
    $$0 = 1;
   } else {
    HEAP32[$__et>>2] = 0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$718,$$lcssa248,$__et);
    $720 = HEAP32[$__et>>2]|0;
    $721 = ($720|0)==(0);
    if ($721) {
     $$0 = 1;
    } else {
     $722 = HEAP32[$__err>>2]|0;
     $723 = $722 | 4;
     HEAP32[$__err>>2] = $723;
     $$0 = 0;
    }
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $724 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $725 = ($724|0)==(0|0);
 if (!($725)) {
  $726 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$726 & 127]($724);
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$byval_copy = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$02 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0;
 $$byval_copy = sp + 424|0;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 428|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (107);
 $3 = ((($__wbuf)) + 400|0);
 $4 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $4;
 $5 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6264)|0);
 HEAP8[$__neg>>0] = 0;
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $9 = (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$$byval_copy,$__intl,$__loc,$8,$__err,$__neg,$5,$__wb,$__wn,$3)|0);
 $10 = $6;
 if ($9) {
  $11 = HEAP8[$__v>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   HEAP8[$__v>>0] = 0;
  } else {
   $14 = ((($__v)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$15>>2] = 0;
  }
  $16 = ((($__v)) + 4|0);
  HEAP32[$16>>2] = 0;
  $17 = HEAP8[$__neg>>0]|0;
  $18 = ($17<<24>>24)==(0);
  if (!($18)) {
   $19 = HEAP32[$5>>2]|0;
   $20 = ((($19)) + 44|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_iii[$21 & 15]($5,45)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__v,$22);
  }
  $23 = HEAP32[$5>>2]|0;
  $24 = ((($23)) + 44|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = (FUNCTION_TABLE_iii[$25 & 15]($5,48)|0);
  $27 = HEAP32[$__wb>>2]|0;
  $28 = HEAP32[$__wn>>2]|0;
  $29 = ((($28)) + -4|0);
  $30 = ($27>>>0)<($29>>>0);
  L10: do {
   if ($30) {
    $__w$02 = $27;
    while(1) {
     $31 = HEAP32[$__w$02>>2]|0;
     $32 = ($31|0)==($26|0);
     if (!($32)) {
      $__w$0$lcssa = $__w$02;
      break L10;
     }
     $33 = ((($__w$02)) + 4|0);
     $34 = ($33>>>0)<($29>>>0);
     if ($34) {
      $__w$02 = $33;
     } else {
      $__w$0$lcssa = $33;
      break;
     }
    }
   } else {
    $__w$0$lcssa = $27;
   }
  } while(0);
  (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v,$__w$0$lcssa,$28)|0);
 }
 $35 = HEAP32[$__b>>2]|0;
 $36 = ($35|0)==(0|0);
 do {
  if ($36) {
   $67 = 1;
  } else {
   $37 = ((($35)) + 12|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ((($35)) + 16|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ($38|0)==($40|0);
   if ($41) {
    $42 = HEAP32[$35>>2]|0;
    $43 = ((($42)) + 36|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = (FUNCTION_TABLE_ii[$44 & 63]($35)|0);
    $$0$i$i$i$i = $45;
   } else {
    $46 = HEAP32[$38>>2]|0;
    $$0$i$i$i$i = $46;
   }
   $47 = ($$0$i$i$i$i|0)==(-1);
   if ($47) {
    HEAP32[$__b>>2] = 0;
    $67 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $67 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $48 = ($6|0)==(0);
 do {
  if ($48) {
   label = 24;
  } else {
   $49 = ((($10)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($10)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $54 = $6;
    $55 = HEAP32[$54>>2]|0;
    $56 = ((($55)) + 36|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = (FUNCTION_TABLE_ii[$57 & 63]($10)|0);
    $$0$i$i1$i$i = $58;
   } else {
    $59 = HEAP32[$50>>2]|0;
    $$0$i$i1$i$i = $59;
   }
   $60 = ($$0$i$i1$i$i|0)==(-1);
   if ($60) {
    HEAP32[$__e>>2] = 0;
    label = 24;
    break;
   } else {
    if ($67) {
     break;
    } else {
     label = 26;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 24) {
  if ($67) {
   label = 26;
  }
 }
 if ((label|0) == 26) {
  $61 = HEAP32[$__err>>2]|0;
  $62 = $61 | 2;
  HEAP32[$__err>>2] = $62;
 }
 $63 = HEAP32[$__b>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
 $64 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $65 = ($64|0)==(0|0);
 if (!($65)) {
  $66 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$66 & 127]($64);
 }
 STACKTOP = sp;return ($63|0);
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5984)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 63]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 63]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = ((($__nsn)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP32[$22>>2] = 0;
  }
  $23 = ((($__nsn)) + 4|0);
  HEAP32[$23>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  HEAP32[$1>>2] = 0;
  $24 = ((($1)) + 4|0);
  HEAP32[$24>>2] = 0;
  $25 = ((($1)) + 8|0);
  HEAP32[$25>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  $26 = HEAP32[$10>>2]|0;
  $27 = ((($26)) + 28|0);
  $28 = HEAP32[$27>>2]|0;
  FUNCTION_TABLE_vii[$28 & 63]($2,$10);
  $29 = HEAP8[$__psn>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $32 = ((($__psn)) + 8|0);
   $33 = HEAP32[$32>>2]|0;
   HEAP32[$33>>2] = 0;
  }
  $34 = ((($__psn)) + 4|0);
  HEAP32[$34>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  HEAP32[$2>>2] = 0;
  $35 = ((($2)) + 4|0);
  HEAP32[$35>>2] = 0;
  $36 = ((($2)) + 8|0);
  HEAP32[$36>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  $37 = HEAP32[$10>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_ii[$39 & 63]($10)|0);
  HEAP32[$__dp>>2] = $40;
  $41 = HEAP32[$10>>2]|0;
  $42 = ((($41)) + 16|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (FUNCTION_TABLE_ii[$43 & 63]($10)|0);
  HEAP32[$__ts>>2] = $44;
  $45 = HEAP32[$10>>2]|0;
  $46 = ((($45)) + 20|0);
  $47 = HEAP32[$46>>2]|0;
  FUNCTION_TABLE_vii[$47 & 63]($3,$10);
  $48 = HEAP8[$__grp>>0]|0;
  $49 = $48 & 1;
  $50 = ($49<<24>>24)==(0);
  if ($50) {
   $54 = ((($__grp)) + 1|0);
   HEAP8[$54>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $51 = ((($__grp)) + 8|0);
   $52 = HEAP32[$51>>2]|0;
   HEAP8[$52>>0] = 0;
   $53 = ((($__grp)) + 4|0);
   HEAP32[$53>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  HEAP32[$3>>2] = 0;
  $55 = ((($3)) + 4|0);
  HEAP32[$55>>2] = 0;
  $56 = ((($3)) + 8|0);
  HEAP32[$56>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $57 = HEAP32[$10>>2]|0;
  $58 = ((($57)) + 24|0);
  $59 = HEAP32[$58>>2]|0;
  FUNCTION_TABLE_vii[$59 & 63]($4,$10);
  $60 = HEAP8[$__sym>>0]|0;
  $61 = $60 & 1;
  $62 = ($61<<24>>24)==(0);
  if ($62) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $63 = ((($__sym)) + 8|0);
   $64 = HEAP32[$63>>2]|0;
   HEAP32[$64>>2] = 0;
  }
  $65 = ((($__sym)) + 4|0);
  HEAP32[$65>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $66 = ((($4)) + 4|0);
  HEAP32[$66>>2] = 0;
  $67 = ((($4)) + 8|0);
  HEAP32[$67>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $68 = HEAP32[$10>>2]|0;
  $69 = ((($68)) + 36|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = (FUNCTION_TABLE_ii[$70 & 63]($10)|0);
  $storemerge = $71;
 } else {
  $72 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5920)|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ((($73)) + 44|0);
  $75 = HEAP32[$74>>2]|0;
  FUNCTION_TABLE_vii[$75 & 63]($5,$72);
  $76 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$76&255;HEAP8[$__pat+1>>0]=($76>>8)&255;HEAP8[$__pat+2>>0]=($76>>16)&255;HEAP8[$__pat+3>>0]=$76>>24;
  $77 = HEAP32[$72>>2]|0;
  $78 = ((($77)) + 32|0);
  $79 = HEAP32[$78>>2]|0;
  FUNCTION_TABLE_vii[$79 & 63]($6,$72);
  $80 = HEAP8[$__nsn>>0]|0;
  $81 = $80 & 1;
  $82 = ($81<<24>>24)==(0);
  if ($82) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $83 = ((($__nsn)) + 8|0);
   $84 = HEAP32[$83>>2]|0;
   HEAP32[$84>>2] = 0;
  }
  $85 = ((($__nsn)) + 4|0);
  HEAP32[$85>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn,0);
  ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  HEAP32[$6>>2] = 0;
  $86 = ((($6)) + 4|0);
  HEAP32[$86>>2] = 0;
  $87 = ((($6)) + 8|0);
  HEAP32[$87>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  $88 = HEAP32[$72>>2]|0;
  $89 = ((($88)) + 28|0);
  $90 = HEAP32[$89>>2]|0;
  FUNCTION_TABLE_vii[$90 & 63]($7,$72);
  $91 = HEAP8[$__psn>>0]|0;
  $92 = $91 & 1;
  $93 = ($92<<24>>24)==(0);
  if ($93) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $94 = ((($__psn)) + 8|0);
   $95 = HEAP32[$94>>2]|0;
   HEAP32[$95>>2] = 0;
  }
  $96 = ((($__psn)) + 4|0);
  HEAP32[$96>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn,0);
  ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  HEAP32[$7>>2] = 0;
  $97 = ((($7)) + 4|0);
  HEAP32[$97>>2] = 0;
  $98 = ((($7)) + 8|0);
  HEAP32[$98>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  $99 = HEAP32[$72>>2]|0;
  $100 = ((($99)) + 12|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = (FUNCTION_TABLE_ii[$101 & 63]($72)|0);
  HEAP32[$__dp>>2] = $102;
  $103 = HEAP32[$72>>2]|0;
  $104 = ((($103)) + 16|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = (FUNCTION_TABLE_ii[$105 & 63]($72)|0);
  HEAP32[$__ts>>2] = $106;
  $107 = HEAP32[$72>>2]|0;
  $108 = ((($107)) + 20|0);
  $109 = HEAP32[$108>>2]|0;
  FUNCTION_TABLE_vii[$109 & 63]($8,$72);
  $110 = HEAP8[$__grp>>0]|0;
  $111 = $110 & 1;
  $112 = ($111<<24>>24)==(0);
  if ($112) {
   $116 = ((($__grp)) + 1|0);
   HEAP8[$116>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $113 = ((($__grp)) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   HEAP8[$114>>0] = 0;
   $115 = ((($__grp)) + 4|0);
   HEAP32[$115>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  HEAP32[$8>>2] = 0;
  $117 = ((($8)) + 4|0);
  HEAP32[$117>>2] = 0;
  $118 = ((($8)) + 8|0);
  HEAP32[$118>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $119 = HEAP32[$72>>2]|0;
  $120 = ((($119)) + 24|0);
  $121 = HEAP32[$120>>2]|0;
  FUNCTION_TABLE_vii[$121 & 63]($9,$72);
  $122 = HEAP8[$__sym>>0]|0;
  $123 = $122 & 1;
  $124 = ($123<<24>>24)==(0);
  if ($124) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $125 = ((($__sym)) + 8|0);
   $126 = HEAP32[$125>>2]|0;
   HEAP32[$126>>2] = 0;
  }
  $127 = ((($__sym)) + 4|0);
  HEAP32[$127>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  HEAP32[$9>>2] = 0;
  $128 = ((($9)) + 4|0);
  HEAP32[$128>>2] = 0;
  $129 = ((($9)) + 8|0);
  HEAP32[$129>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $130 = HEAP32[$72>>2]|0;
  $131 = ((($130)) + 36|0);
  $132 = HEAP32[$131>>2]|0;
  $133 = (FUNCTION_TABLE_ii[$132 & 63]($72)|0);
  $storemerge = $133;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$byval_copy = 0, $$pre14 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__bb = 0, $__buf = 0;
 var $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384|0;
 $$byval_copy = sp + 8|0;
 $vararg_buffer1 = sp;
 $__buf = sp + 284|0;
 $__bb = sp + 72|0;
 $__digits = sp + 184|0;
 $__loc = sp + 68|0;
 $__pat = sp + 180|0;
 $__dp = sp + 177|0;
 $__ts = sp + 176|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__sn = sp + 32|0;
 $__fd = sp + 28|0;
 $__mbuf = sp + 76|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$$byval_copy>>3] = $__units;
 $1 = (_snprintf($__buf,100,9608,$$byval_copy)|0);
 $2 = ($1>>>0)>(99);
 if ($2) {
  $3 = (__ZNSt3__16__clocEv()|0);
  HEAPF64[$vararg_buffer1>>3] = $__units;
  $4 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$3,9608,$vararg_buffer1)|0);
  $5 = HEAP32[$__bb>>2]|0;
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  }
  $7 = $5;
  $8 = (_malloc($4)|0);
  $9 = $8;
  $10 = ($8|0)==(0|0);
  if ($10) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $90 = $9;$93 = $7;$__db$0 = $8;$__n$0 = $4;
  }
 } else {
  $90 = 0;$93 = 0;$__db$0 = $__digits;$__n$0 = $1;
 }
 $11 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $11;
 $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6272)|0);
 $13 = HEAP32[$__bb>>2]|0;
 $14 = (($13) + ($__n$0)|0);
 $15 = HEAP32[$12>>2]|0;
 $16 = ((($15)) + 32|0);
 $17 = HEAP32[$16>>2]|0;
 (FUNCTION_TABLE_iiiii[$17 & 7]($12,$13,$14,$__db$0)|0);
 $18 = ($__n$0|0)==(0);
 if ($18) {
  $28 = 0;
 } else {
  $19 = HEAP32[$__bb>>2]|0;
  $20 = HEAP8[$19>>0]|0;
  $21 = ($20<<24>>24)==(45);
  $28 = $21;
 }
 HEAP32[$__grp>>2] = 0;
 $22 = ((($__grp)) + 4|0);
 HEAP32[$22>>2] = 0;
 $23 = ((($__grp)) + 8|0);
 HEAP32[$23>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $24 = ((($__sym)) + 4|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($__sym)) + 8|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $26 = ((($__sn)) + 4|0);
 HEAP32[$26>>2] = 0;
 $27 = ((($__sn)) + 8|0);
 HEAP32[$27>>2] = 0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$28,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $29 = HEAP32[$__fd>>2]|0;
 $30 = ($__n$0|0)>($29|0);
 if ($30) {
  $31 = (($__n$0) - ($29))|0;
  $32 = $31 << 1;
  $33 = HEAP8[$__sn>>0]|0;
  $34 = $33 & 1;
  $35 = ($34<<24>>24)==(0);
  $36 = ((($__sn)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = $33&255;
  $39 = $38 >>> 1;
  $40 = $35 ? $39 : $37;
  $41 = HEAP8[$__sym>>0]|0;
  $42 = $41 & 1;
  $43 = ($42<<24>>24)==(0);
  $44 = ((($__sym)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = $41&255;
  $47 = $46 >>> 1;
  $48 = $43 ? $47 : $45;
  $49 = $32 | 1;
  $50 = (($49) + ($29))|0;
  $51 = (($50) + ($40))|0;
  $52 = (($51) + ($48))|0;
  $72 = $52;
 } else {
  $53 = HEAP8[$__sn>>0]|0;
  $54 = $53 & 1;
  $55 = ($54<<24>>24)==(0);
  $56 = ((($__sn)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = $53&255;
  $59 = $58 >>> 1;
  $60 = $55 ? $59 : $57;
  $61 = HEAP8[$__sym>>0]|0;
  $62 = $61 & 1;
  $63 = ($62<<24>>24)==(0);
  $64 = ((($__sym)) + 4|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = $61&255;
  $67 = $66 >>> 1;
  $68 = $63 ? $67 : $65;
  $69 = (($29) + 2)|0;
  $70 = (($69) + ($60))|0;
  $71 = (($70) + ($68))|0;
  $72 = $71;
 }
 $73 = ($72>>>0)>(100);
 if ($73) {
  $74 = (_malloc($72)|0);
  $75 = $74;
  $76 = ($74|0)==(0|0);
  if ($76) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $86 = $75;$__mb$0 = $74;
  }
 } else {
  $86 = 0;$__mb$0 = $__mbuf;
 }
 $77 = ((($__iob)) + 4|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = (($__db$0) + ($__n$0)|0);
 $80 = HEAP8[$__dp>>0]|0;
 $81 = HEAP8[$__ts>>0]|0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0,$__mi,$__me,$78,$__db$0,$79,$12,$28,$__pat,$80,$81,$__grp,$__sym,$__sn,$29);
 $82 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $82;
 $83 = HEAP32[$__mi>>2]|0;
 $84 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $85 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$83,$84,$__iob,$__fl)|0);
 $87 = ($86|0)==(0);
 if ($87) {
  $89 = $11;
 } else {
  $88 = $86;
  _free($88);
  $$pre14 = HEAP32[$__loc>>2]|0;
  $89 = $$pre14;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($89)|0);
 $91 = ($90|0)==(0);
 if (!($91)) {
  $92 = $90;
  _free($92);
 }
 $94 = ($93|0)==(0);
 if (!($94)) {
  $95 = $93;
  _free($95);
 }
 STACKTOP = sp;return ($85|0);
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$pre$phi32Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5856)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = ((($13)) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 63]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = ((($17)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 63]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $26 = ((($__sn)) + 1|0);
    HEAP8[$26>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = ((($__sn)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP8[$24>>0] = 0;
    $25 = ((($__sn)) + 4|0);
    HEAP32[$25>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $27 = ((($1)) + 4|0);
   HEAP32[$27>>2] = 0;
   $28 = ((($1)) + 8|0);
   HEAP32[$28>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$pre$phiZ2D = $12;
  } else {
   $29 = ((($13)) + 40|0);
   $30 = HEAP32[$29>>2]|0;
   FUNCTION_TABLE_vii[$30 & 63]($2,$12);
   $31 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$31&255;HEAP8[$__pat+1>>0]=($31>>8)&255;HEAP8[$__pat+2>>0]=($31>>16)&255;HEAP8[$__pat+3>>0]=$31>>24;
   $32 = HEAP32[$12>>2]|0;
   $33 = ((($32)) + 28|0);
   $34 = HEAP32[$33>>2]|0;
   FUNCTION_TABLE_vii[$34 & 63]($3,$12);
   $35 = HEAP8[$__sn>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $41 = ((($__sn)) + 1|0);
    HEAP8[$41>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $38 = ((($__sn)) + 8|0);
    $39 = HEAP32[$38>>2]|0;
    HEAP8[$39>>0] = 0;
    $40 = ((($__sn)) + 4|0);
    HEAP32[$40>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $42 = ((($3)) + 4|0);
   HEAP32[$42>>2] = 0;
   $43 = ((($3)) + 8|0);
   HEAP32[$43>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$pre$phiZ2D = $12;
  }
  $44 = HEAP32[$12>>2]|0;
  $45 = ((($44)) + 12|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = (FUNCTION_TABLE_ii[$46 & 63]($12)|0);
  HEAP8[$__dp>>0] = $47;
  $48 = HEAP32[$12>>2]|0;
  $49 = ((($48)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = (FUNCTION_TABLE_ii[$50 & 63]($12)|0);
  HEAP8[$__ts>>0] = $51;
  $52 = HEAP32[$$pre$phiZ2D>>2]|0;
  $53 = ((($52)) + 20|0);
  $54 = HEAP32[$53>>2]|0;
  FUNCTION_TABLE_vii[$54 & 63]($4,$12);
  $55 = HEAP8[$__grp>>0]|0;
  $56 = $55 & 1;
  $57 = ($56<<24>>24)==(0);
  if ($57) {
   $61 = ((($__grp)) + 1|0);
   HEAP8[$61>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $58 = ((($__grp)) + 8|0);
   $59 = HEAP32[$58>>2]|0;
   HEAP8[$59>>0] = 0;
   $60 = ((($__grp)) + 4|0);
   HEAP32[$60>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $62 = ((($4)) + 4|0);
  HEAP32[$62>>2] = 0;
  $63 = ((($4)) + 8|0);
  HEAP32[$63>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $64 = HEAP32[$$pre$phiZ2D>>2]|0;
  $65 = ((($64)) + 24|0);
  $66 = HEAP32[$65>>2]|0;
  FUNCTION_TABLE_vii[$66 & 63]($5,$12);
  $67 = HEAP8[$__sym>>0]|0;
  $68 = $67 & 1;
  $69 = ($68<<24>>24)==(0);
  if ($69) {
   $73 = ((($__sym)) + 1|0);
   HEAP8[$73>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $70 = ((($__sym)) + 8|0);
   $71 = HEAP32[$70>>2]|0;
   HEAP8[$71>>0] = 0;
   $72 = ((($__sym)) + 4|0);
   HEAP32[$72>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  HEAP32[$5>>2] = 0;
  $74 = ((($5)) + 4|0);
  HEAP32[$74>>2] = 0;
  $75 = ((($5)) + 8|0);
  HEAP32[$75>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $76 = HEAP32[$12>>2]|0;
  $77 = ((($76)) + 36|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (FUNCTION_TABLE_ii[$78 & 63]($12)|0);
  $storemerge = $79;
 } else {
  $80 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5792)|0);
  $81 = HEAP32[$80>>2]|0;
  if ($__neg) {
   $82 = ((($81)) + 44|0);
   $83 = HEAP32[$82>>2]|0;
   FUNCTION_TABLE_vii[$83 & 63]($6,$80);
   $84 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$84&255;HEAP8[$__pat+1>>0]=($84>>8)&255;HEAP8[$__pat+2>>0]=($84>>16)&255;HEAP8[$__pat+3>>0]=$84>>24;
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 32|0);
   $87 = HEAP32[$86>>2]|0;
   FUNCTION_TABLE_vii[$87 & 63]($7,$80);
   $88 = HEAP8[$__sn>>0]|0;
   $89 = $88 & 1;
   $90 = ($89<<24>>24)==(0);
   if ($90) {
    $94 = ((($__sn)) + 1|0);
    HEAP8[$94>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $91 = ((($__sn)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    HEAP8[$92>>0] = 0;
    $93 = ((($__sn)) + 4|0);
    HEAP32[$93>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $95 = ((($7)) + 4|0);
   HEAP32[$95>>2] = 0;
   $96 = ((($7)) + 8|0);
   HEAP32[$96>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   $$pre$phi32Z2D = $80;
  } else {
   $97 = ((($81)) + 40|0);
   $98 = HEAP32[$97>>2]|0;
   FUNCTION_TABLE_vii[$98 & 63]($8,$80);
   $99 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$99&255;HEAP8[$__pat+1>>0]=($99>>8)&255;HEAP8[$__pat+2>>0]=($99>>16)&255;HEAP8[$__pat+3>>0]=$99>>24;
   $100 = HEAP32[$80>>2]|0;
   $101 = ((($100)) + 28|0);
   $102 = HEAP32[$101>>2]|0;
   FUNCTION_TABLE_vii[$102 & 63]($9,$80);
   $103 = HEAP8[$__sn>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   if ($105) {
    $109 = ((($__sn)) + 1|0);
    HEAP8[$109>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $106 = ((($__sn)) + 8|0);
    $107 = HEAP32[$106>>2]|0;
    HEAP8[$107>>0] = 0;
    $108 = ((($__sn)) + 4|0);
    HEAP32[$108>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   HEAP32[$9>>2] = 0;
   $110 = ((($9)) + 4|0);
   HEAP32[$110>>2] = 0;
   $111 = ((($9)) + 8|0);
   HEAP32[$111>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   $$pre$phi32Z2D = $80;
  }
  $112 = HEAP32[$80>>2]|0;
  $113 = ((($112)) + 12|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = (FUNCTION_TABLE_ii[$114 & 63]($80)|0);
  HEAP8[$__dp>>0] = $115;
  $116 = HEAP32[$80>>2]|0;
  $117 = ((($116)) + 16|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (FUNCTION_TABLE_ii[$118 & 63]($80)|0);
  HEAP8[$__ts>>0] = $119;
  $120 = HEAP32[$$pre$phi32Z2D>>2]|0;
  $121 = ((($120)) + 20|0);
  $122 = HEAP32[$121>>2]|0;
  FUNCTION_TABLE_vii[$122 & 63]($10,$80);
  $123 = HEAP8[$__grp>>0]|0;
  $124 = $123 & 1;
  $125 = ($124<<24>>24)==(0);
  if ($125) {
   $129 = ((($__grp)) + 1|0);
   HEAP8[$129>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $126 = ((($__grp)) + 8|0);
   $127 = HEAP32[$126>>2]|0;
   HEAP8[$127>>0] = 0;
   $128 = ((($__grp)) + 4|0);
   HEAP32[$128>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  HEAP32[$10>>2] = 0;
  $130 = ((($10)) + 4|0);
  HEAP32[$130>>2] = 0;
  $131 = ((($10)) + 8|0);
  HEAP32[$131>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $132 = HEAP32[$$pre$phi32Z2D>>2]|0;
  $133 = ((($132)) + 24|0);
  $134 = HEAP32[$133>>2]|0;
  FUNCTION_TABLE_vii[$134 & 63]($11,$80);
  $135 = HEAP8[$__sym>>0]|0;
  $136 = $135 & 1;
  $137 = ($136<<24>>24)==(0);
  if ($137) {
   $141 = ((($__sym)) + 1|0);
   HEAP8[$141>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $138 = ((($__sym)) + 8|0);
   $139 = HEAP32[$138>>2]|0;
   HEAP8[$139>>0] = 0;
   $140 = ((($__sym)) + 4|0);
   HEAP32[$140>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  HEAP32[$11>>2] = 0;
  $142 = ((($11)) + 4|0);
  HEAP32[$142>>2] = 0;
  $143 = ((($11)) + 8|0);
  HEAP32[$143>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $144 = HEAP32[$80>>2]|0;
  $145 = ((($144)) + 36|0);
  $146 = HEAP32[$145>>2]|0;
  $147 = (FUNCTION_TABLE_ii[$146 & 63]($80)|0);
  $storemerge = $147;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$$027 = 0, $$0$i$i$lcssa = 0, $$0$i$i35 = 0, $$0$i$i9$lcssa = 0, $$0$i$i958 = 0, $$01$i$i56 = 0, $$062 = 0, $$2 = 0, $$lcssa = 0, $$lcssa34 = 0, $$op = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0, $__d$0$lcssa26 = 0, $__d$036 = 0, $__d$142 = 0, $__d$2 = 0, $__d$351 = 0, $__f$043 = 0, $__f$146 = 0;
 var $__gl$0$ph = 0, $__gl$054 = 0, $__gl$1 = 0, $__ig$053 = 0, $__ig$1 = 0, $__ng$052 = 0, $__ng$1 = 0, $__p$061 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0, $scevgep$sum = 0, $scevgep29 = 0, $umax28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sn)) + 1|0);
 $3 = ((($__sym)) + 4|0);
 $4 = $__flags & 512;
 $5 = ($4|0)==(0);
 $6 = ((($__sym)) + 8|0);
 $7 = ((($__sym)) + 1|0);
 $8 = ((($__ct)) + 8|0);
 $9 = ($__fd|0)>(0);
 $10 = ((($__grp)) + 4|0);
 $11 = ((($__grp)) + 8|0);
 $12 = ((($__grp)) + 1|0);
 $13 = (($__fd) + 1)|0;
 $14 = (-2 - ($__fd))|0;
 $15 = ($__fd|0)<(0);
 $$op = $__fd ^ -1;
 $16 = $15 ? $$op : -1;
 $17 = (($14) - ($16))|0;
 $18 = ($__fd|0)>(0);
 $$062 = $__db;$__p$061 = 0;
 while(1) {
  $19 = (($__pat) + ($__p$061)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20 << 24 >> 24;
  switch ($21|0) {
  case 3:  {
   $30 = HEAP8[$__sn>>0]|0;
   $31 = $30 & 1;
   $32 = ($31<<24>>24)==(0);
   $33 = HEAP32[$0>>2]|0;
   $34 = $30&255;
   $35 = $34 >>> 1;
   $36 = $32 ? $35 : $33;
   $37 = ($36|0)==(0);
   if ($37) {
    $$2 = $$062;
   } else {
    $38 = HEAP32[$1>>2]|0;
    $39 = $32 ? $2 : $38;
    $40 = HEAP8[$39>>0]|0;
    $41 = HEAP32[$__me>>2]|0;
    $42 = ((($41)) + 1|0);
    HEAP32[$__me>>2] = $42;
    HEAP8[$41>>0] = $40;
    $$2 = $$062;
   }
   break;
  }
  case 0:  {
   $22 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $22;
   $$2 = $$062;
   break;
  }
  case 1:  {
   $23 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $23;
   $24 = HEAP32[$__ct>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (FUNCTION_TABLE_iii[$26 & 15]($__ct,32)|0);
   $28 = HEAP32[$__me>>2]|0;
   $29 = ((($28)) + 1|0);
   HEAP32[$__me>>2] = $29;
   HEAP8[$28>>0] = $27;
   $$2 = $$062;
   break;
  }
  case 4:  {
   $61 = HEAP32[$__me>>2]|0;
   $62 = ((($$062)) + 1|0);
   $$$0 = $__neg ? $62 : $$062;
   $$$027 = $$$0;
   $63 = HEAP32[$8>>2]|0;
   $64 = ($$$0>>>0)<($__de>>>0);
   L9: do {
    if ($64) {
     $__d$036 = $$$0;
     while(1) {
      $65 = HEAP8[$__d$036>>0]|0;
      $isascii1$i = ($65<<24>>24)>(-1);
      if (!($isascii1$i)) {
       $__d$0$lcssa = $__d$036;
       break L9;
      }
      $66 = $65 << 24 >> 24;
      $67 = (($63) + ($66<<1)|0);
      $68 = HEAP16[$67>>1]|0;
      $69 = $68 & 2048;
      $70 = ($69<<16>>16)==(0);
      if ($70) {
       $__d$0$lcssa = $__d$036;
       break L9;
      }
      $71 = ((($__d$036)) + 1|0);
      $72 = ($71>>>0)<($__de>>>0);
      if ($72) {
       $__d$036 = $71;
      } else {
       $__d$0$lcssa = $71;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   $__d$0$lcssa26 = $__d$0$lcssa;
   if ($9) {
    $73 = (-2 - ($__d$0$lcssa26))|0;
    $74 = ($__d$0$lcssa26>>>0)>($$$027>>>0);
    $75 = $74 ? $$$027 : $__d$0$lcssa26;
    $76 = $75 ^ -1;
    $77 = (($73) - ($76))|0;
    $78 = ($17>>>0)>($77>>>0);
    $umax28 = $78 ? $17 : $77;
    $79 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $80 = $79 & $18;
    if ($80) {
     $__d$142 = $__d$0$lcssa;$__f$043 = $__fd;
     while(1) {
      $81 = ((($__d$142)) + -1|0);
      $82 = HEAP8[$81>>0]|0;
      $83 = HEAP32[$__me>>2]|0;
      $84 = ((($83)) + 1|0);
      HEAP32[$__me>>2] = $84;
      HEAP8[$83>>0] = $82;
      $85 = (($__f$043) + -1)|0;
      $86 = ($81>>>0)>($$$0>>>0);
      $87 = ($__f$043|0)>(1);
      $88 = $86 & $87;
      if ($88) {
       $__d$142 = $81;$__f$043 = $85;
      } else {
       $$lcssa = $87;
       break;
      }
     }
    } else {
     $$lcssa = $18;
    }
    $89 = (($13) + ($umax28))|0;
    $scevgep$sum = (($umax28) + 1)|0;
    $scevgep29 = (($__d$0$lcssa) + ($scevgep$sum)|0);
    if ($$lcssa) {
     $90 = HEAP32[$__ct>>2]|0;
     $91 = ((($90)) + 28|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = (FUNCTION_TABLE_iii[$92 & 15]($__ct,48)|0);
     $97 = $93;
    } else {
     $97 = 0;
    }
    $94 = ($89|0)>(0);
    $95 = HEAP32[$__me>>2]|0;
    $96 = ((($95)) + 1|0);
    HEAP32[$__me>>2] = $96;
    if ($94) {
     $98 = $95;$__f$146 = $89;
     while(1) {
      HEAP8[$98>>0] = $97;
      $99 = (($__f$146) + -1)|0;
      $100 = ($__f$146|0)>(1);
      $101 = HEAP32[$__me>>2]|0;
      $102 = ((($101)) + 1|0);
      HEAP32[$__me>>2] = $102;
      if ($100) {
       $98 = $101;$__f$146 = $99;
      } else {
       $$lcssa34 = $101;
       break;
      }
     }
    } else {
     $$lcssa34 = $95;
    }
    HEAP8[$$lcssa34>>0] = $__dp;
    $__d$2 = $scevgep29;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $103 = ($__d$2|0)==($$$0|0);
   if ($103) {
    $104 = HEAP32[$__ct>>2]|0;
    $105 = ((($104)) + 28|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = (FUNCTION_TABLE_iii[$106 & 15]($__ct,48)|0);
    $108 = HEAP32[$__me>>2]|0;
    $109 = ((($108)) + 1|0);
    HEAP32[$__me>>2] = $109;
    HEAP8[$108>>0] = $107;
   } else {
    $110 = HEAP8[$__grp>>0]|0;
    $111 = $110 & 1;
    $112 = ($111<<24>>24)==(0);
    $113 = HEAP32[$10>>2]|0;
    $114 = $110&255;
    $115 = $114 >>> 1;
    $116 = $112 ? $115 : $113;
    $117 = ($116|0)==(0);
    if ($117) {
     $__gl$0$ph = -1;
    } else {
     $118 = HEAP32[$11>>2]|0;
     $119 = $112 ? $12 : $118;
     $120 = HEAP8[$119>>0]|0;
     $121 = $120 << 24 >> 24;
     $__gl$0$ph = $121;
    }
    $122 = ($__d$2|0)==($$$0|0);
    if (!($122)) {
     $__d$351 = $__d$2;$__gl$054 = $__gl$0$ph;$__ig$053 = 0;$__ng$052 = 0;
     while(1) {
      $123 = ($__ng$052|0)==($__gl$054|0);
      if ($123) {
       $124 = HEAP32[$__me>>2]|0;
       $125 = ((($124)) + 1|0);
       HEAP32[$__me>>2] = $125;
       HEAP8[$124>>0] = $__ts;
       $126 = (($__ig$053) + 1)|0;
       $127 = HEAP8[$__grp>>0]|0;
       $128 = $127 & 1;
       $129 = ($128<<24>>24)==(0);
       $130 = HEAP32[$10>>2]|0;
       $131 = $127&255;
       $132 = $131 >>> 1;
       $133 = $129 ? $132 : $130;
       $134 = ($126>>>0)<($133>>>0);
       if ($134) {
        $135 = HEAP32[$11>>2]|0;
        $136 = $129 ? $12 : $135;
        $137 = (($136) + ($126)|0);
        $138 = HEAP8[$137>>0]|0;
        $139 = ($138<<24>>24)==(127);
        $140 = $138 << 24 >> 24;
        $$ = $139 ? -1 : $140;
        $__gl$1 = $$;$__ig$1 = $126;$__ng$1 = 0;
       } else {
        $__gl$1 = $__ng$052;$__ig$1 = $126;$__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__gl$054;$__ig$1 = $__ig$053;$__ng$1 = $__ng$052;
      }
      $141 = ((($__d$351)) + -1|0);
      $142 = HEAP8[$141>>0]|0;
      $143 = HEAP32[$__me>>2]|0;
      $144 = ((($143)) + 1|0);
      HEAP32[$__me>>2] = $144;
      HEAP8[$143>>0] = $142;
      $145 = (($__ng$1) + 1)|0;
      $146 = ($141|0)==($$$0|0);
      if ($146) {
       break;
      } else {
       $__d$351 = $141;$__gl$054 = $__gl$1;$__ig$053 = $__ig$1;$__ng$052 = $145;
      }
     }
    }
   }
   $147 = HEAP32[$__me>>2]|0;
   $148 = ($61|0)==($147|0);
   if ($148) {
    $$2 = $$$0;
   } else {
    $149 = ((($147)) + -1|0);
    $150 = ($61>>>0)<($149>>>0);
    if ($150) {
     $$01$i$i56 = $61;$153 = $149;
     while(1) {
      $151 = HEAP8[$$01$i$i56>>0]|0;
      $152 = HEAP8[$153>>0]|0;
      HEAP8[$$01$i$i56>>0] = $152;
      HEAP8[$153>>0] = $151;
      $154 = ((($$01$i$i56)) + 1|0);
      $155 = ((($153)) + -1|0);
      $156 = ($154>>>0)<($155>>>0);
      if ($156) {
       $$01$i$i56 = $154;$153 = $155;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 2:  {
   $43 = HEAP8[$__sym>>0]|0;
   $44 = $43 & 1;
   $45 = ($44<<24>>24)==(0);
   $46 = HEAP32[$3>>2]|0;
   $47 = $43&255;
   $48 = $47 >>> 1;
   $49 = $45 ? $48 : $46;
   $50 = ($49|0)==(0);
   $or$cond = $5 | $50;
   if ($or$cond) {
    $$2 = $$062;
   } else {
    $51 = HEAP32[$6>>2]|0;
    $52 = $45 ? $7 : $51;
    $53 = (($52) + ($49)|0);
    $54 = HEAP32[$__me>>2]|0;
    $55 = ($49|0)==(0);
    if ($55) {
     $$0$i$i9$lcssa = $54;
    } else {
     $$0$i$i958 = $54;$57 = $52;
     while(1) {
      $56 = HEAP8[$57>>0]|0;
      HEAP8[$$0$i$i958>>0] = $56;
      $58 = ((($57)) + 1|0);
      $59 = ((($$0$i$i958)) + 1|0);
      $60 = ($58|0)==($53|0);
      if ($60) {
       $$0$i$i9$lcssa = $59;
       break;
      } else {
       $$0$i$i958 = $59;$57 = $58;
      }
     }
    }
    HEAP32[$__me>>2] = $$0$i$i9$lcssa;
    $$2 = $$062;
   }
   break;
  }
  default: {
   $$2 = $$062;
  }
  }
  $157 = (($__p$061) + 1)|0;
  $exitcond = ($157|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$062 = $$2;$__p$061 = $157;
  }
 }
 $158 = HEAP8[$__sn>>0]|0;
 $159 = $158 & 1;
 $160 = ($159<<24>>24)==(0);
 $161 = HEAP32[$0>>2]|0;
 $162 = $158&255;
 $163 = $162 >>> 1;
 $164 = $160 ? $163 : $161;
 $165 = ($164>>>0)>(1);
 if ($165) {
  $166 = HEAP32[$1>>2]|0;
  $167 = $160 ? $2 : $166;
  $168 = (($167) + ($164)|0);
  $169 = HEAP32[$__me>>2]|0;
  $170 = ($164|0)==(1);
  if ($170) {
   $$0$i$i$lcssa = $169;
  } else {
   $171 = ((($167)) + 1|0);
   $$0$i$i35 = $169;$173 = $171;
   while(1) {
    $172 = HEAP8[$173>>0]|0;
    HEAP8[$$0$i$i35>>0] = $172;
    $174 = ((($$0$i$i35)) + 1|0);
    $175 = ((($173)) + 1|0);
    $176 = ($175|0)==($168|0);
    if ($176) {
     $$0$i$i$lcssa = $174;
     break;
    } else {
     $$0$i$i35 = $174;$173 = $175;
    }
   }
  }
  HEAP32[$__me>>2] = $$0$i$i$lcssa;
 }
 $177 = $__flags & 176;
 if ((($177|0) == 32)) {
  $178 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $178;
 } else if (!((($177|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$byval_copy = 0, $$pre16 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $$byval_copy = sp + 56|0;
 $__loc = sp + 52|0;
 $__pat = sp + 164|0;
 $__dp = sp + 161|0;
 $__ts = sp + 160|0;
 $__grp = sp + 40|0;
 $__sym = sp + 28|0;
 $__sn = sp + 16|0;
 $__fd = sp + 12|0;
 $__mbuf = sp + 60|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 $2 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6272)|0);
 $3 = HEAP8[$__digits>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 $6 = ((($__digits)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3&255;
 $9 = $8 >>> 1;
 $10 = $5 ? $9 : $7;
 $11 = ($10|0)==(0);
 if ($11) {
  $28 = 0;
 } else {
  $12 = ((($__digits)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($__digits)) + 1|0);
  $15 = $5 ? $14 : $13;
  $16 = HEAP8[$15>>0]|0;
  $17 = HEAP32[$2>>2]|0;
  $18 = ((($17)) + 28|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (FUNCTION_TABLE_iii[$19 & 15]($2,45)|0);
  $21 = ($16<<24>>24)==($20<<24>>24);
  $28 = $21;
 }
 HEAP32[$__grp>>2] = 0;
 $22 = ((($__grp)) + 4|0);
 HEAP32[$22>>2] = 0;
 $23 = ((($__grp)) + 8|0);
 HEAP32[$23>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $24 = ((($__sym)) + 4|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($__sym)) + 8|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $26 = ((($__sn)) + 4|0);
 HEAP32[$26>>2] = 0;
 $27 = ((($__sn)) + 8|0);
 HEAP32[$27>>2] = 0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$28,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $29 = HEAP8[$__digits>>0]|0;
 $30 = $29 & 1;
 $31 = ($30<<24>>24)==(0);
 $32 = HEAP32[$6>>2]|0;
 $33 = $29&255;
 $34 = $33 >>> 1;
 $35 = $31 ? $34 : $32;
 $36 = HEAP32[$__fd>>2]|0;
 $37 = ($35|0)>($36|0);
 if ($37) {
  $38 = (($35) - ($36))|0;
  $39 = $38 << 1;
  $40 = HEAP8[$__sn>>0]|0;
  $41 = $40 & 1;
  $42 = ($41<<24>>24)==(0);
  $43 = ((($__sn)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = $40&255;
  $46 = $45 >>> 1;
  $47 = $42 ? $46 : $44;
  $48 = HEAP8[$__sym>>0]|0;
  $49 = $48 & 1;
  $50 = ($49<<24>>24)==(0);
  $51 = ((($__sym)) + 4|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = $48&255;
  $54 = $53 >>> 1;
  $55 = $50 ? $54 : $52;
  $56 = $39 | 1;
  $57 = (($56) + ($36))|0;
  $58 = (($57) + ($47))|0;
  $59 = (($58) + ($55))|0;
  $79 = $59;
 } else {
  $60 = HEAP8[$__sn>>0]|0;
  $61 = $60 & 1;
  $62 = ($61<<24>>24)==(0);
  $63 = ((($__sn)) + 4|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = $60&255;
  $66 = $65 >>> 1;
  $67 = $62 ? $66 : $64;
  $68 = HEAP8[$__sym>>0]|0;
  $69 = $68 & 1;
  $70 = ($69<<24>>24)==(0);
  $71 = ((($__sym)) + 4|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = $68&255;
  $74 = $73 >>> 1;
  $75 = $70 ? $74 : $72;
  $76 = (($36) + 2)|0;
  $77 = (($76) + ($67))|0;
  $78 = (($77) + ($75))|0;
  $79 = $78;
 }
 $80 = ($79>>>0)>(100);
 if ($80) {
  $81 = (_malloc($79)|0);
  $82 = $81;
  $83 = ($81|0)==(0|0);
  if ($83) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $102 = $82;$__mb$0 = $81;
  }
 } else {
  $102 = 0;$__mb$0 = $__mbuf;
 }
 $84 = ((($__iob)) + 4|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = $29 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__digits)) + 8|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = ((($__digits)) + 1|0);
 $91 = $87 ? $90 : $89;
 $92 = $29&255;
 $93 = $92 >>> 1;
 $94 = $87 ? $93 : $32;
 $95 = (($91) + ($94)|0);
 $96 = HEAP8[$__dp>>0]|0;
 $97 = HEAP8[$__ts>>0]|0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0,$__mi,$__me,$85,$91,$95,$2,$28,$__pat,$96,$97,$__grp,$__sym,$__sn,$36);
 $98 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $98;
 $99 = HEAP32[$__mi>>2]|0;
 $100 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $101 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$99,$100,$__iob,$__fl)|0);
 $103 = ($102|0)==(0);
 if ($103) {
  $105 = $1;
 } else {
  $104 = $102;
  _free($104);
  $$pre16 = HEAP32[$__loc>>2]|0;
  $105 = $$pre16;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($105)|0);
 STACKTOP = sp;return ($101|0);
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$byval_copy = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0;
 $$byval_copy = sp + 8|0;
 $vararg_buffer1 = sp;
 $__buf = sp + 896|0;
 $__bb = sp + 888|0;
 $__digits = sp + 488|0;
 $__loc = sp + 480|0;
 $__pat = sp + 892|0;
 $__dp = sp + 476|0;
 $__ts = sp + 472|0;
 $__grp = sp + 460|0;
 $__sym = sp + 448|0;
 $__sn = sp + 436|0;
 $__fd = sp + 432|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$$byval_copy>>3] = $__units;
 $1 = (_snprintf($__buf,100,9608,$$byval_copy)|0);
 $2 = ($1>>>0)>(99);
 if ($2) {
  $3 = (__ZNSt3__16__clocEv()|0);
  HEAPF64[$vararg_buffer1>>3] = $__units;
  $4 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$3,9608,$vararg_buffer1)|0);
  $5 = HEAP32[$__bb>>2]|0;
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  }
  $7 = $5;
  $8 = $4 << 2;
  $9 = (_malloc($8)|0);
  $10 = $9;
  $11 = ($9|0)==(0|0);
  if ($11) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $92 = $10;$95 = $7;$__db$0 = $9;$__n$0 = $4;
  }
 } else {
  $92 = 0;$95 = 0;$__db$0 = $__digits;$__n$0 = $1;
 }
 $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $12;
 $13 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6264)|0);
 $14 = HEAP32[$__bb>>2]|0;
 $15 = (($14) + ($__n$0)|0);
 $16 = HEAP32[$13>>2]|0;
 $17 = ((($16)) + 48|0);
 $18 = HEAP32[$17>>2]|0;
 (FUNCTION_TABLE_iiiii[$18 & 7]($13,$14,$15,$__db$0)|0);
 $19 = ($__n$0|0)==(0);
 if ($19) {
  $29 = 0;
 } else {
  $20 = HEAP32[$__bb>>2]|0;
  $21 = HEAP8[$20>>0]|0;
  $22 = ($21<<24>>24)==(45);
  $29 = $22;
 }
 HEAP32[$__grp>>2] = 0;
 $23 = ((($__grp)) + 4|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($__grp)) + 8|0);
 HEAP32[$24>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $25 = ((($__sym)) + 4|0);
 HEAP32[$25>>2] = 0;
 $26 = ((($__sym)) + 8|0);
 HEAP32[$26>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $27 = ((($__sn)) + 4|0);
 HEAP32[$27>>2] = 0;
 $28 = ((($__sn)) + 8|0);
 HEAP32[$28>>2] = 0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$29,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $30 = HEAP32[$__fd>>2]|0;
 $31 = ($__n$0|0)>($30|0);
 if ($31) {
  $32 = (($__n$0) - ($30))|0;
  $33 = $32 << 1;
  $34 = HEAP8[$__sn>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  $37 = ((($__sn)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = $34&255;
  $40 = $39 >>> 1;
  $41 = $36 ? $40 : $38;
  $42 = HEAP8[$__sym>>0]|0;
  $43 = $42 & 1;
  $44 = ($43<<24>>24)==(0);
  $45 = ((($__sym)) + 4|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = $42&255;
  $48 = $47 >>> 1;
  $49 = $44 ? $48 : $46;
  $50 = $33 | 1;
  $51 = (($50) + ($30))|0;
  $52 = (($51) + ($41))|0;
  $53 = (($52) + ($49))|0;
  $73 = $53;
 } else {
  $54 = HEAP8[$__sn>>0]|0;
  $55 = $54 & 1;
  $56 = ($55<<24>>24)==(0);
  $57 = ((($__sn)) + 4|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = $54&255;
  $60 = $59 >>> 1;
  $61 = $56 ? $60 : $58;
  $62 = HEAP8[$__sym>>0]|0;
  $63 = $62 & 1;
  $64 = ($63<<24>>24)==(0);
  $65 = ((($__sym)) + 4|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = $62&255;
  $68 = $67 >>> 1;
  $69 = $64 ? $68 : $66;
  $70 = (($30) + 2)|0;
  $71 = (($70) + ($61))|0;
  $72 = (($71) + ($69))|0;
  $73 = $72;
 }
 $74 = ($73>>>0)>(100);
 if ($74) {
  $75 = $73 << 2;
  $76 = (_malloc($75)|0);
  $77 = $76;
  $78 = ($76|0)==(0|0);
  if ($78) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $88 = $77;$__mb$0 = $76;
  }
 } else {
  $88 = 0;$__mb$0 = $__mbuf;
 }
 $79 = ((($__iob)) + 4|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = (($__db$0) + ($__n$0<<2)|0);
 $82 = HEAP32[$__dp>>2]|0;
 $83 = HEAP32[$__ts>>2]|0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0,$__mi,$__me,$80,$__db$0,$81,$13,$29,$__pat,$82,$83,$__grp,$__sym,$__sn,$30);
 $84 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $84;
 $85 = HEAP32[$__mi>>2]|0;
 $86 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $87 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$85,$86,$__iob,$__fl)|0);
 $89 = ($88|0)==(0);
 if ($89) {
  $91 = $12;
 } else {
  $90 = $88;
  _free($90);
  $$pre11 = HEAP32[$__loc>>2]|0;
  $91 = $$pre11;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($91)|0);
 $93 = ($92|0)==(0);
 if (!($93)) {
  $94 = $92;
  _free($94);
 }
 $96 = ($95|0)==(0);
 if (!($96)) {
  $97 = $95;
  _free($97);
 }
 STACKTOP = sp;return ($87|0);
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5984)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = ((($13)) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 63]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = ((($17)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 63]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = ((($__sn)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP32[$24>>2] = 0;
   }
   $25 = ((($__sn)) + 4|0);
   HEAP32[$25>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $26 = ((($1)) + 4|0);
   HEAP32[$26>>2] = 0;
   $27 = ((($1)) + 8|0);
   HEAP32[$27>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   $28 = ((($13)) + 40|0);
   $29 = HEAP32[$28>>2]|0;
   FUNCTION_TABLE_vii[$29 & 63]($2,$12);
   $30 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$30&255;HEAP8[$__pat+1>>0]=($30>>8)&255;HEAP8[$__pat+2>>0]=($30>>16)&255;HEAP8[$__pat+3>>0]=$30>>24;
   $31 = HEAP32[$12>>2]|0;
   $32 = ((($31)) + 28|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 63]($3,$12);
   $34 = HEAP8[$__sn>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $37 = ((($__sn)) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    HEAP32[$38>>2] = 0;
   }
   $39 = ((($__sn)) + 4|0);
   HEAP32[$39>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $40 = ((($3)) + 4|0);
   HEAP32[$40>>2] = 0;
   $41 = ((($3)) + 8|0);
   HEAP32[$41>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  $42 = HEAP32[$12>>2]|0;
  $43 = ((($42)) + 12|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = (FUNCTION_TABLE_ii[$44 & 63]($12)|0);
  HEAP32[$__dp>>2] = $45;
  $46 = HEAP32[$12>>2]|0;
  $47 = ((($46)) + 16|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = (FUNCTION_TABLE_ii[$48 & 63]($12)|0);
  HEAP32[$__ts>>2] = $49;
  $50 = HEAP32[$12>>2]|0;
  $51 = ((($50)) + 20|0);
  $52 = HEAP32[$51>>2]|0;
  FUNCTION_TABLE_vii[$52 & 63]($4,$12);
  $53 = HEAP8[$__grp>>0]|0;
  $54 = $53 & 1;
  $55 = ($54<<24>>24)==(0);
  if ($55) {
   $59 = ((($__grp)) + 1|0);
   HEAP8[$59>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $56 = ((($__grp)) + 8|0);
   $57 = HEAP32[$56>>2]|0;
   HEAP8[$57>>0] = 0;
   $58 = ((($__grp)) + 4|0);
   HEAP32[$58>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  HEAP32[$4>>2] = 0;
  $60 = ((($4)) + 4|0);
  HEAP32[$60>>2] = 0;
  $61 = ((($4)) + 8|0);
  HEAP32[$61>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $62 = HEAP32[$12>>2]|0;
  $63 = ((($62)) + 24|0);
  $64 = HEAP32[$63>>2]|0;
  FUNCTION_TABLE_vii[$64 & 63]($5,$12);
  $65 = HEAP8[$__sym>>0]|0;
  $66 = $65 & 1;
  $67 = ($66<<24>>24)==(0);
  if ($67) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $68 = ((($__sym)) + 8|0);
   $69 = HEAP32[$68>>2]|0;
   HEAP32[$69>>2] = 0;
  }
  $70 = ((($__sym)) + 4|0);
  HEAP32[$70>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  HEAP32[$5>>2] = 0;
  $71 = ((($5)) + 4|0);
  HEAP32[$71>>2] = 0;
  $72 = ((($5)) + 8|0);
  HEAP32[$72>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $73 = HEAP32[$12>>2]|0;
  $74 = ((($73)) + 36|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = (FUNCTION_TABLE_ii[$75 & 63]($12)|0);
  $storemerge = $76;
 } else {
  $77 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,5920)|0);
  $78 = HEAP32[$77>>2]|0;
  if ($__neg) {
   $79 = ((($78)) + 44|0);
   $80 = HEAP32[$79>>2]|0;
   FUNCTION_TABLE_vii[$80 & 63]($6,$77);
   $81 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$81&255;HEAP8[$__pat+1>>0]=($81>>8)&255;HEAP8[$__pat+2>>0]=($81>>16)&255;HEAP8[$__pat+3>>0]=$81>>24;
   $82 = HEAP32[$77>>2]|0;
   $83 = ((($82)) + 32|0);
   $84 = HEAP32[$83>>2]|0;
   FUNCTION_TABLE_vii[$84 & 63]($7,$77);
   $85 = HEAP8[$__sn>>0]|0;
   $86 = $85 & 1;
   $87 = ($86<<24>>24)==(0);
   if ($87) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $88 = ((($__sn)) + 8|0);
    $89 = HEAP32[$88>>2]|0;
    HEAP32[$89>>2] = 0;
   }
   $90 = ((($__sn)) + 4|0);
   HEAP32[$90>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $91 = ((($7)) + 4|0);
   HEAP32[$91>>2] = 0;
   $92 = ((($7)) + 8|0);
   HEAP32[$92>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   $93 = ((($78)) + 40|0);
   $94 = HEAP32[$93>>2]|0;
   FUNCTION_TABLE_vii[$94 & 63]($8,$77);
   $95 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$95&255;HEAP8[$__pat+1>>0]=($95>>8)&255;HEAP8[$__pat+2>>0]=($95>>16)&255;HEAP8[$__pat+3>>0]=$95>>24;
   $96 = HEAP32[$77>>2]|0;
   $97 = ((($96)) + 28|0);
   $98 = HEAP32[$97>>2]|0;
   FUNCTION_TABLE_vii[$98 & 63]($9,$77);
   $99 = HEAP8[$__sn>>0]|0;
   $100 = $99 & 1;
   $101 = ($100<<24>>24)==(0);
   if ($101) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $102 = ((($__sn)) + 8|0);
    $103 = HEAP32[$102>>2]|0;
    HEAP32[$103>>2] = 0;
   }
   $104 = ((($__sn)) + 4|0);
   HEAP32[$104>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0);
   ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   HEAP32[$9>>2] = 0;
   $105 = ((($9)) + 4|0);
   HEAP32[$105>>2] = 0;
   $106 = ((($9)) + 8|0);
   HEAP32[$106>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  $107 = HEAP32[$77>>2]|0;
  $108 = ((($107)) + 12|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = (FUNCTION_TABLE_ii[$109 & 63]($77)|0);
  HEAP32[$__dp>>2] = $110;
  $111 = HEAP32[$77>>2]|0;
  $112 = ((($111)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = (FUNCTION_TABLE_ii[$113 & 63]($77)|0);
  HEAP32[$__ts>>2] = $114;
  $115 = HEAP32[$77>>2]|0;
  $116 = ((($115)) + 20|0);
  $117 = HEAP32[$116>>2]|0;
  FUNCTION_TABLE_vii[$117 & 63]($10,$77);
  $118 = HEAP8[$__grp>>0]|0;
  $119 = $118 & 1;
  $120 = ($119<<24>>24)==(0);
  if ($120) {
   $124 = ((($__grp)) + 1|0);
   HEAP8[$124>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $121 = ((($__grp)) + 8|0);
   $122 = HEAP32[$121>>2]|0;
   HEAP8[$122>>0] = 0;
   $123 = ((($__grp)) + 4|0);
   HEAP32[$123>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0);
  ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  HEAP32[$10>>2] = 0;
  $125 = ((($10)) + 4|0);
  HEAP32[$125>>2] = 0;
  $126 = ((($10)) + 8|0);
  HEAP32[$126>>2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $127 = HEAP32[$77>>2]|0;
  $128 = ((($127)) + 24|0);
  $129 = HEAP32[$128>>2]|0;
  FUNCTION_TABLE_vii[$129 & 63]($11,$77);
  $130 = HEAP8[$__sym>>0]|0;
  $131 = $130 & 1;
  $132 = ($131<<24>>24)==(0);
  if ($132) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $133 = ((($__sym)) + 8|0);
   $134 = HEAP32[$133>>2]|0;
   HEAP32[$134>>2] = 0;
  }
  $135 = ((($__sym)) + 4|0);
  HEAP32[$135>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0);
  ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  HEAP32[$11>>2] = 0;
  $136 = ((($11)) + 4|0);
  HEAP32[$136>>2] = 0;
  $137 = ((($11)) + 8|0);
  HEAP32[$137>>2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $138 = HEAP32[$77>>2]|0;
  $139 = ((($138)) + 36|0);
  $140 = HEAP32[$139>>2]|0;
  $141 = (FUNCTION_TABLE_ii[$140 & 63]($77)|0);
  $storemerge = $141;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0$i$i30 = 0, $$0$i$i954 = 0, $$01$i$i52 = 0, $$057 = 0, $$2 = 0, $$lcssa = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa67 = 0, $$op = 0, $$pre29 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0;
 var $__d$031 = 0, $__d$1$lcssa = 0, $__d$137 = 0, $__d$2 = 0, $__d$347 = 0, $__f$0$lcssa = 0, $__f$038 = 0, $__f$143 = 0, $__gl$0$ph = 0, $__gl$050 = 0, $__gl$1 = 0, $__ig$049 = 0, $__ig$1 = 0, $__me$promoted = 0, $__me$promoted66 = 0, $__ng$048 = 0, $__ng$1 = 0, $__p$056 = 0, $exitcond = 0, $or$cond = 0;
 var $scevgep$i = 0, $scevgep$i10 = 0, $scevgep$sum = 0, $scevgep26 = 0, $scevgep27$sum = 0, $scevgep28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sym)) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = ((($__sym)) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = ((($__grp)) + 4|0);
 $8 = ((($__grp)) + 8|0);
 $9 = ((($__grp)) + 1|0);
 $10 = ($__fd|0)>(0);
 $$057 = $__db;$__p$056 = 0;
 while(1) {
  $11 = (($__pat) + ($__p$056)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  switch ($13|0) {
  case 0:  {
   $14 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $14;
   $$2 = $$057;
   break;
  }
  case 2:  {
   $35 = HEAP8[$__sym>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   $38 = HEAP32[$2>>2]|0;
   $39 = $35&255;
   $40 = $39 >>> 1;
   $41 = $37 ? $40 : $38;
   $42 = ($41|0)==(0);
   $or$cond = $4 | $42;
   if ($or$cond) {
    $$2 = $$057;
   } else {
    $43 = HEAP32[$5>>2]|0;
    $44 = $37 ? $2 : $43;
    $45 = (($44) + ($41<<2)|0);
    $46 = HEAP32[$__me>>2]|0;
    $47 = ($41|0)==(0);
    if (!($47)) {
     $$0$i$i954 = $46;$49 = $44;
     while(1) {
      $48 = HEAP32[$49>>2]|0;
      HEAP32[$$0$i$i954>>2] = $48;
      $50 = ((($49)) + 4|0);
      $51 = ((($$0$i$i954)) + 4|0);
      $52 = ($50|0)==($45|0);
      if ($52) {
       break;
      } else {
       $$0$i$i954 = $51;$49 = $50;
      }
     }
    }
    $scevgep$i10 = (($46) + ($41<<2)|0);
    HEAP32[$__me>>2] = $scevgep$i10;
    $$2 = $$057;
   }
   break;
  }
  case 3:  {
   $22 = HEAP8[$__sn>>0]|0;
   $23 = $22 & 1;
   $24 = ($23<<24>>24)==(0);
   $25 = HEAP32[$0>>2]|0;
   $26 = $22&255;
   $27 = $26 >>> 1;
   $28 = $24 ? $27 : $25;
   $29 = ($28|0)==(0);
   if ($29) {
    $$2 = $$057;
   } else {
    $30 = HEAP32[$1>>2]|0;
    $31 = $24 ? $0 : $30;
    $32 = HEAP32[$31>>2]|0;
    $33 = HEAP32[$__me>>2]|0;
    $34 = ((($33)) + 4|0);
    HEAP32[$__me>>2] = $34;
    HEAP32[$33>>2] = $32;
    $$2 = $$057;
   }
   break;
  }
  case 4:  {
   $53 = HEAP32[$__me>>2]|0;
   $54 = ((($$057)) + 4|0);
   $$$0 = $__neg ? $54 : $$057;
   $55 = ($$$0>>>0)<($__de>>>0);
   L14: do {
    if ($55) {
     $__d$031 = $$$0;
     while(1) {
      $56 = HEAP32[$__d$031>>2]|0;
      $57 = HEAP32[$__ct>>2]|0;
      $58 = ((($57)) + 12|0);
      $59 = HEAP32[$58>>2]|0;
      $60 = (FUNCTION_TABLE_iiii[$59 & 31]($__ct,2048,$56)|0);
      if (!($60)) {
       $__d$0$lcssa = $__d$031;
       break L14;
      }
      $61 = ((($__d$031)) + 4|0);
      $62 = ($61>>>0)<($__de>>>0);
      if ($62) {
       $__d$031 = $61;
      } else {
       $__d$0$lcssa = $61;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   if ($6) {
    $63 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $64 = $63 & $10;
    if ($64) {
     $__me$promoted66 = HEAP32[$__me>>2]|0;
     $68 = $__me$promoted66;$__d$137 = $__d$0$lcssa;$__f$038 = $__fd;
     while(1) {
      $65 = ((($__d$137)) + -4|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ((($68)) + 4|0);
      HEAP32[$68>>2] = $66;
      $69 = (($__f$038) + -1)|0;
      $70 = ($65>>>0)>($$$0>>>0);
      $71 = ($__f$038|0)>(1);
      $72 = $70 & $71;
      if ($72) {
       $68 = $67;$__d$137 = $65;$__f$038 = $69;
      } else {
       $$lcssa63 = $65;$$lcssa64 = $69;$$lcssa65 = $71;$$lcssa67 = $67;
       break;
      }
     }
     HEAP32[$__me>>2] = $$lcssa67;
     $$lcssa = $$lcssa65;$__d$1$lcssa = $$lcssa63;$__f$0$lcssa = $$lcssa64;
    } else {
     $$lcssa = $10;$__d$1$lcssa = $__d$0$lcssa;$__f$0$lcssa = $__fd;
    }
    if ($$lcssa) {
     $73 = HEAP32[$__ct>>2]|0;
     $74 = ((($73)) + 44|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (FUNCTION_TABLE_iii[$75 & 15]($__ct,48)|0);
     $83 = $76;
    } else {
     $83 = 0;
    }
    $__me$promoted = HEAP32[$__me>>2]|0;
    $77 = ($__f$0$lcssa|0)<(0);
    $$op = $__f$0$lcssa ^ -1;
    $78 = $77 ? $$op : -1;
    $79 = (($__f$0$lcssa) + ($78))|0;
    $80 = ($__f$0$lcssa|0)>(0);
    if ($80) {
     $82 = $__me$promoted;$__f$143 = $__f$0$lcssa;
     while(1) {
      $81 = ((($82)) + 4|0);
      HEAP32[$82>>2] = $83;
      $84 = (($__f$143) + -1)|0;
      $85 = ($__f$143|0)>(1);
      if ($85) {
       $82 = $81;$__f$143 = $84;
      } else {
       break;
      }
     }
    }
    $scevgep$sum = (($79) + 2)|0;
    $scevgep26 = (($__me$promoted) + ($scevgep$sum<<2)|0);
    $scevgep27$sum = (($79) + 1)|0;
    $scevgep28 = (($__me$promoted) + ($scevgep27$sum<<2)|0);
    HEAP32[$__me>>2] = $scevgep26;
    HEAP32[$scevgep28>>2] = $__dp;
    $__d$2 = $__d$1$lcssa;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $86 = ($__d$2|0)==($$$0|0);
   if ($86) {
    $87 = HEAP32[$__ct>>2]|0;
    $88 = ((($87)) + 44|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = (FUNCTION_TABLE_iii[$89 & 15]($__ct,48)|0);
    $91 = HEAP32[$__me>>2]|0;
    $92 = ((($91)) + 4|0);
    HEAP32[$__me>>2] = $92;
    HEAP32[$91>>2] = $90;
    $130 = $92;
   } else {
    $93 = HEAP8[$__grp>>0]|0;
    $94 = $93 & 1;
    $95 = ($94<<24>>24)==(0);
    $96 = HEAP32[$7>>2]|0;
    $97 = $93&255;
    $98 = $97 >>> 1;
    $99 = $95 ? $98 : $96;
    $100 = ($99|0)==(0);
    if ($100) {
     $__gl$0$ph = -1;
    } else {
     $101 = HEAP32[$8>>2]|0;
     $102 = $95 ? $9 : $101;
     $103 = HEAP8[$102>>0]|0;
     $104 = $103 << 24 >> 24;
     $__gl$0$ph = $104;
    }
    $105 = ($__d$2|0)==($$$0|0);
    if (!($105)) {
     $__d$347 = $__d$2;$__gl$050 = $__gl$0$ph;$__ig$049 = 0;$__ng$048 = 0;
     while(1) {
      $106 = ($__ng$048|0)==($__gl$050|0);
      $107 = HEAP32[$__me>>2]|0;
      if ($106) {
       $108 = ((($107)) + 4|0);
       HEAP32[$__me>>2] = $108;
       HEAP32[$107>>2] = $__ts;
       $109 = (($__ig$049) + 1)|0;
       $110 = HEAP8[$__grp>>0]|0;
       $111 = $110 & 1;
       $112 = ($111<<24>>24)==(0);
       $113 = $110&255;
       $114 = $113 >>> 1;
       $115 = $112 ? $114 : $96;
       $116 = ($109>>>0)<($115>>>0);
       if ($116) {
        $117 = HEAP32[$8>>2]|0;
        $118 = $112 ? $9 : $117;
        $119 = (($118) + ($109)|0);
        $120 = HEAP8[$119>>0]|0;
        $121 = ($120<<24>>24)==(127);
        $122 = $120 << 24 >> 24;
        $$ = $121 ? -1 : $122;
        $126 = $108;$__gl$1 = $$;$__ig$1 = $109;$__ng$1 = 0;
       } else {
        $126 = $108;$__gl$1 = $__ng$048;$__ig$1 = $109;$__ng$1 = 0;
       }
      } else {
       $126 = $107;$__gl$1 = $__gl$050;$__ig$1 = $__ig$049;$__ng$1 = $__ng$048;
      }
      $123 = ((($__d$347)) + -4|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ((($126)) + 4|0);
      HEAP32[$__me>>2] = $125;
      HEAP32[$126>>2] = $124;
      $127 = (($__ng$1) + 1)|0;
      $128 = ($123|0)==($$$0|0);
      if ($128) {
       break;
      } else {
       $__d$347 = $123;$__gl$050 = $__gl$1;$__ig$049 = $__ig$1;$__ng$048 = $127;
      }
     }
    }
    $$pre29 = HEAP32[$__me>>2]|0;
    $130 = $$pre29;
   }
   $129 = ($53|0)==($130|0);
   if ($129) {
    $$2 = $$$0;
   } else {
    $131 = ((($130)) + -4|0);
    $132 = ($53>>>0)<($131>>>0);
    if ($132) {
     $$01$i$i52 = $53;$135 = $131;
     while(1) {
      $133 = HEAP32[$$01$i$i52>>2]|0;
      $134 = HEAP32[$135>>2]|0;
      HEAP32[$$01$i$i52>>2] = $134;
      HEAP32[$135>>2] = $133;
      $136 = ((($$01$i$i52)) + 4|0);
      $137 = ((($135)) + -4|0);
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $$01$i$i52 = $136;$135 = $137;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 1:  {
   $15 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $15;
   $16 = HEAP32[$__ct>>2]|0;
   $17 = ((($16)) + 44|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (FUNCTION_TABLE_iii[$18 & 15]($__ct,32)|0);
   $20 = HEAP32[$__me>>2]|0;
   $21 = ((($20)) + 4|0);
   HEAP32[$__me>>2] = $21;
   HEAP32[$20>>2] = $19;
   $$2 = $$057;
   break;
  }
  default: {
   $$2 = $$057;
  }
  }
  $139 = (($__p$056) + 1)|0;
  $exitcond = ($139|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$057 = $$2;$__p$056 = $139;
  }
 }
 $140 = HEAP8[$__sn>>0]|0;
 $141 = $140 & 1;
 $142 = ($141<<24>>24)==(0);
 $143 = HEAP32[$0>>2]|0;
 $144 = $140&255;
 $145 = $144 >>> 1;
 $146 = $142 ? $145 : $143;
 $147 = ($146>>>0)>(1);
 if ($147) {
  $148 = HEAP32[$1>>2]|0;
  $149 = $142 ? $0 : $148;
  $150 = ((($149)) + 4|0);
  $151 = (($149) + ($146<<2)|0);
  $152 = HEAP32[$__me>>2]|0;
  $153 = $150;
  $154 = $151;
  $155 = (($154) - ($153))|0;
  $156 = ($146|0)==(1);
  if (!($156)) {
   $$0$i$i30 = $152;$158 = $150;
   while(1) {
    $157 = HEAP32[$158>>2]|0;
    HEAP32[$$0$i$i30>>2] = $157;
    $159 = ((($158)) + 4|0);
    $160 = ((($$0$i$i30)) + 4|0);
    $161 = ($159|0)==($151|0);
    if ($161) {
     break;
    } else {
     $$0$i$i30 = $160;$158 = $159;
    }
   }
  }
  $162 = $155 >>> 2;
  $scevgep$i = (($152) + ($162<<2)|0);
  HEAP32[$__me>>2] = $scevgep$i;
 }
 $163 = $__flags & 176;
 if ((($163|0) == 32)) {
  $164 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $164;
 } else if (!((($163|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$byval_copy = 0, $$pre15 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0;
 $$byval_copy = sp + 468|0;
 $__loc = sp + 464|0;
 $__pat = sp + 472|0;
 $__dp = sp + 460|0;
 $__ts = sp + 456|0;
 $__grp = sp + 444|0;
 $__sym = sp + 432|0;
 $__sn = sp + 420|0;
 $__fd = sp + 416|0;
 $__mbuf = sp + 16|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 $2 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6264)|0);
 $3 = HEAP8[$__digits>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 $6 = ((($__digits)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3&255;
 $9 = $8 >>> 1;
 $10 = $5 ? $9 : $7;
 $11 = ($10|0)==(0);
 if ($11) {
  $27 = 0;
 } else {
  $12 = ((($__digits)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $5 ? $6 : $13;
  $15 = HEAP32[$14>>2]|0;
  $16 = HEAP32[$2>>2]|0;
  $17 = ((($16)) + 44|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (FUNCTION_TABLE_iii[$18 & 15]($2,45)|0);
  $20 = ($15|0)==($19|0);
  $27 = $20;
 }
 HEAP32[$__grp>>2] = 0;
 $21 = ((($__grp)) + 4|0);
 HEAP32[$21>>2] = 0;
 $22 = ((($__grp)) + 8|0);
 HEAP32[$22>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $23 = ((($__sym)) + 4|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($__sym)) + 8|0);
 HEAP32[$24>>2] = 0;
 HEAP32[$__sn>>2] = 0;
 $25 = ((($__sn)) + 4|0);
 HEAP32[$25>>2] = 0;
 $26 = ((($__sn)) + 8|0);
 HEAP32[$26>>2] = 0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$27,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $28 = HEAP8[$__digits>>0]|0;
 $29 = $28 & 1;
 $30 = ($29<<24>>24)==(0);
 $31 = HEAP32[$6>>2]|0;
 $32 = $28&255;
 $33 = $32 >>> 1;
 $34 = $30 ? $33 : $31;
 $35 = HEAP32[$__fd>>2]|0;
 $36 = ($34|0)>($35|0);
 if ($36) {
  $37 = (($34) - ($35))|0;
  $38 = $37 << 1;
  $39 = HEAP8[$__sn>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  $42 = ((($__sn)) + 4|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = $39&255;
  $45 = $44 >>> 1;
  $46 = $41 ? $45 : $43;
  $47 = HEAP8[$__sym>>0]|0;
  $48 = $47 & 1;
  $49 = ($48<<24>>24)==(0);
  $50 = ((($__sym)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = $47&255;
  $53 = $52 >>> 1;
  $54 = $49 ? $53 : $51;
  $55 = $38 | 1;
  $56 = (($55) + ($35))|0;
  $57 = (($56) + ($46))|0;
  $58 = (($57) + ($54))|0;
  $78 = $58;
 } else {
  $59 = HEAP8[$__sn>>0]|0;
  $60 = $59 & 1;
  $61 = ($60<<24>>24)==(0);
  $62 = ((($__sn)) + 4|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = $59&255;
  $65 = $64 >>> 1;
  $66 = $61 ? $65 : $63;
  $67 = HEAP8[$__sym>>0]|0;
  $68 = $67 & 1;
  $69 = ($68<<24>>24)==(0);
  $70 = ((($__sym)) + 4|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = $67&255;
  $73 = $72 >>> 1;
  $74 = $69 ? $73 : $71;
  $75 = (($35) + 2)|0;
  $76 = (($75) + ($66))|0;
  $77 = (($76) + ($74))|0;
  $78 = $77;
 }
 $79 = ($78>>>0)>(100);
 if ($79) {
  $80 = $78 << 2;
  $81 = (_malloc($80)|0);
  $82 = $81;
  $83 = ($81|0)==(0|0);
  if ($83) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $101 = $82;$__mb$0 = $81;
  }
 } else {
  $101 = 0;$__mb$0 = $__mbuf;
 }
 $84 = ((($__iob)) + 4|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = $28 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__digits)) + 8|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $87 ? $6 : $89;
 $91 = $28&255;
 $92 = $91 >>> 1;
 $93 = $87 ? $92 : $31;
 $94 = (($90) + ($93<<2)|0);
 $95 = HEAP32[$__dp>>2]|0;
 $96 = HEAP32[$__ts>>2]|0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0,$__mi,$__me,$85,$90,$94,$2,$27,$__pat,$95,$96,$__grp,$__sym,$__sn,$35);
 $97 = HEAP32[$__s>>2]|0;
 HEAP32[$0>>2] = $97;
 $98 = HEAP32[$__mi>>2]|0;
 $99 = HEAP32[$__me>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $100 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__mb$0,$98,$99,$__iob,$__fl)|0);
 $102 = ($101|0)==(0);
 if ($102) {
  $104 = $1;
 } else {
  $103 = $101;
  _free($103);
  $$pre15 = HEAP32[$__loc>>2]|0;
  $104 = $$pre15;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 (__ZNSt3__114__shared_count16__release_sharedEv($104)|0);
 STACKTOP = sp;return ($100|0);
}
function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i12 = 0, $$0$i614 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ndflt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__ndflt = sp;
 HEAP32[$__ndflt>>2] = 0;
 $0 = ((($__ndflt)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__ndflt)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__dflt>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 $5 = ((($__dflt)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($__dflt)) + 1|0);
 $8 = $4 ? $7 : $6;
 $9 = ((($__dflt)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $2&255;
 $12 = $11 >>> 1;
 $13 = $4 ? $12 : $10;
 $14 = (($8) + ($13)|0);
 $15 = ($13|0)>(0);
 if ($15) {
  $$0$i614 = $8;
  while(1) {
   $16 = HEAP8[$$0$i614>>0]|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$16);
   $17 = ((($$0$i614)) + 1|0);
   $18 = ($17>>>0)<($14>>>0);
   if ($18) {
    $$0$i614 = $17;
   } else {
    break;
   }
  }
 }
 $19 = ($__c|0)==(-1);
 $20 = $__c << 1;
 $21 = $20;
 $22 = $19 ? (-1) : $21;
 $23 = HEAP8[$__ndflt>>0]|0;
 $24 = $23 & 1;
 $25 = ($24<<24>>24)==(0);
 $26 = ((($__ndflt)) + 8|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($__ndflt)) + 1|0);
 $29 = $25 ? $28 : $27;
 $30 = (_catgets(($22|0),($__set|0),($__msgid|0),($29|0))|0);
 HEAP32[$agg$result>>2] = 0;
 $31 = ((($agg$result)) + 4|0);
 HEAP32[$31>>2] = 0;
 $32 = ((($agg$result)) + 8|0);
 HEAP32[$32>>2] = 0;
 $33 = (_strlen(($30|0))|0);
 $34 = (($30) + ($33)|0);
 $35 = ($33|0)>(0);
 if ($35) {
  $$0$i12 = $30;
  while(1) {
   $36 = HEAP8[$$0$i12>>0]|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($agg$result,$36);
   $37 = ((($$0$i12)) + 1|0);
   $38 = ($37>>>0)<($34>>>0);
   if ($38) {
    $$0$i12 = $37;
   } else {
    break;
   }
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i15 = 0, $$0$i922 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $__bn$i7 = 0, $__buf$i6 = 0, $__mb$i5 = 0, $__ndflt = 0, $__p$0$i1018 = 0, $__p$0$i14 = 0;
 var $__wn$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $__mb$i5 = sp + 168|0;
 $__buf$i6 = sp + 40|0;
 $__bn$i7 = sp + 32|0;
 $__wn$i = sp + 28|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp;
 HEAP32[$__ndflt>>2] = 0;
 $2 = ((($__ndflt)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($__ndflt)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$0>>2] = (7072);
 $5 = HEAP8[$__dflt>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__dflt)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($__dflt)) + 4|0);
 $11 = $7 ? $10 : $9;
 $12 = HEAP32[$10>>2]|0;
 $13 = $5&255;
 $14 = $13 >>> 1;
 $15 = $7 ? $14 : $12;
 $16 = (($11) + ($15<<2)|0);
 $17 = ((($__buf$i6)) + 32|0);
 $18 = ($15|0)>(0);
 if ($18) {
  $$0$i922 = $11;
  while(1) {
   HEAP32[$__wn$i>>2] = $$0$i922;
   $19 = HEAP32[$0>>2]|0;
   $20 = ((($19)) + 12|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_iiiiiiiii[$21 & 15]($0,$__mb$i5,$$0$i922,$16,$__wn$i,$__buf$i6,$17,$__bn$i7)|0);
   $23 = HEAP32[$__bn$i7>>2]|0;
   $24 = ($__buf$i6>>>0)<($23>>>0);
   if ($24) {
    $__p$0$i1018 = $__buf$i6;
    while(1) {
     $25 = HEAP8[$__p$0$i1018>>0]|0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$25);
     $26 = ((($__p$0$i1018)) + 1|0);
     $27 = HEAP32[$__bn$i7>>2]|0;
     $28 = ($26>>>0)<($27>>>0);
     if ($28) {
      $__p$0$i1018 = $26;
     } else {
      break;
     }
    }
   }
   $29 = HEAP32[$__wn$i>>2]|0;
   $30 = ($29>>>0)<($16>>>0);
   $31 = ($22|0)!=(2);
   $32 = $31 & $30;
   if ($32) {
    $$0$i922 = $29;
   } else {
    break;
   }
  }
 }
 $33 = ($__c|0)==(-1);
 $34 = $__c << 1;
 $35 = $34;
 $36 = $33 ? (-1) : $35;
 $37 = HEAP8[$__ndflt>>0]|0;
 $38 = $37 & 1;
 $39 = ($38<<24>>24)==(0);
 $40 = ((($__ndflt)) + 8|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($__ndflt)) + 1|0);
 $43 = $39 ? $42 : $41;
 $44 = (_catgets(($36|0),($__set|0),($__msgid|0),($43|0))|0);
 HEAP32[$agg$result>>2] = 0;
 $45 = ((($agg$result)) + 4|0);
 HEAP32[$45>>2] = 0;
 $46 = ((($agg$result)) + 8|0);
 HEAP32[$46>>2] = 0;
 $47 = ((($1)) + 4|0);
 HEAP32[$47>>2] = 0;
 HEAP32[$1>>2] = (7176);
 $48 = (_strlen(($44|0))|0);
 $49 = (($44) + ($48)|0);
 $50 = $49;
 $51 = ((($__buf$i6)) + 128|0);
 $52 = ($48|0)>(0);
 if ($52) {
  $$0$i15 = $44;
  while(1) {
   HEAP32[$__wn$i>>2] = $$0$i15;
   $53 = HEAP32[$1>>2]|0;
   $54 = ((($53)) + 16|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = $$0$i15;
   $57 = (($50) - ($56))|0;
   $58 = ($57|0)>(32);
   $59 = ((($$0$i15)) + 32|0);
   $60 = $58 ? $59 : $49;
   $61 = (FUNCTION_TABLE_iiiiiiiii[$55 & 15]($1,$__mb$i5,$$0$i15,$60,$__wn$i,$__buf$i6,$51,$__bn$i7)|0);
   $62 = HEAP32[$__bn$i7>>2]|0;
   $63 = ($__buf$i6>>>0)<($62>>>0);
   if ($63) {
    $__p$0$i14 = $__buf$i6;
    while(1) {
     $64 = HEAP32[$__p$0$i14>>2]|0;
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($agg$result,$64);
     $65 = ((($__p$0$i14)) + 4|0);
     $66 = HEAP32[$__bn$i7>>2]|0;
     $67 = ($65>>>0)<($66>>>0);
     if ($67) {
      $__p$0$i14 = $65;
     } else {
      break;
     }
    }
   }
   $68 = HEAP32[$__wn$i>>2]|0;
   $69 = ($68>>>0)<($49>>>0);
   $70 = ($61|0)!=(2);
   $71 = $70 & $69;
   if ($71) {
    $$0$i15 = $68;
   } else {
    break;
   }
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((9616|0),(9640|0),314,(9728|0));
 // unreachable;
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6240);
 $2 = ((($this)) + 8|0);
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($2,28);
 $3 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3,9248,1);
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($this)) + 12|0);
 $$pre$i$i$i = HEAP32[$5>>2]|0;
 $6 = ($$pre$i$i$i|0)==($4|0);
 if (!($6)) {
  $8 = $$pre$i$i$i;
  while(1) {
   $7 = ((($8)) + -4|0);
   $9 = ($7|0)==($4|0);
   if ($9) {
    $$lcssa = $7;
    break;
   } else {
    $8 = $7;
   }
  }
  HEAP32[$5>>2] = $$lcssa;
 }
 HEAP32[(9756)>>2] = 0;
 HEAP32[9752>>2] = (5096);
 __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,9752);
 HEAP32[(9764)>>2] = 0;
 HEAP32[9760>>2] = (5136);
 __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,9760);
 __ZNSt3__15ctypeIcEC2EPKtbj(9768,0,0,1);
 __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,9768);
 HEAP32[(9788)>>2] = 0;
 HEAP32[9784>>2] = (6584);
 __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,9784);
 HEAP32[(9796)>>2] = 0;
 HEAP32[9792>>2] = (6712);
 __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,9792);
 HEAP32[(9804)>>2] = 0;
 HEAP32[9800>>2] = (6360);
 $10 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(9808)>>2] = $10;
 __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,9800);
 HEAP32[(9820)>>2] = 0;
 HEAP32[9816>>2] = (6832);
 __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,9816);
 HEAP32[(9828)>>2] = 0;
 HEAP32[9824>>2] = (6952);
 __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,9824);
 __ZNSt3__18numpunctIcEC2Ej(9832,1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,9832);
 __ZNSt3__18numpunctIwEC2Ej(9856,1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,9856);
 HEAP32[(9892)>>2] = 0;
 HEAP32[9888>>2] = (5176);
 __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9888);
 HEAP32[(9900)>>2] = 0;
 HEAP32[9896>>2] = (5288);
 __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9896);
 HEAP32[(9908)>>2] = 0;
 HEAP32[9904>>2] = (5360);
 __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9904);
 HEAP32[(9916)>>2] = 0;
 HEAP32[9912>>2] = (5424);
 __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9912);
 HEAP32[(9924)>>2] = 0;
 HEAP32[9920>>2] = (5744);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,9920);
 HEAP32[(9932)>>2] = 0;
 HEAP32[9928>>2] = (5808);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,9928);
 HEAP32[(9940)>>2] = 0;
 HEAP32[9936>>2] = (5872);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,9936);
 HEAP32[(9948)>>2] = 0;
 HEAP32[9944>>2] = (5936);
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,9944);
 HEAP32[(9956)>>2] = 0;
 HEAP32[9952>>2] = (6000);
 __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9952);
 HEAP32[(9964)>>2] = 0;
 HEAP32[9960>>2] = (6040);
 __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9960);
 HEAP32[(9972)>>2] = 0;
 HEAP32[9968>>2] = (6080);
 __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9968);
 HEAP32[(9980)>>2] = 0;
 HEAP32[9976>>2] = (6120);
 __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,9976);
 HEAP32[(9988)>>2] = 0;
 HEAP32[9984>>2] = (5488);
 HEAP32[(9992)>>2] = (5536);
 __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,9984);
 HEAP32[(10004)>>2] = 0;
 HEAP32[10000>>2] = (5584);
 HEAP32[(10008)>>2] = (5632);
 __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,10000);
 HEAP32[(10020)>>2] = 0;
 HEAP32[10016>>2] = (6520);
 $11 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(10024)>>2] = $11;
 HEAP32[10016>>2] = (5680);
 __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,10016);
 HEAP32[(10036)>>2] = 0;
 HEAP32[10032>>2] = (6520);
 $12 = (__ZNSt3__16__clocEv()|0);
 HEAP32[(10040)>>2] = $12;
 HEAP32[10032>>2] = (5712);
 __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,10032);
 HEAP32[(10052)>>2] = 0;
 HEAP32[10048>>2] = (6160);
 __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,10048);
 HEAP32[(10060)>>2] = 0;
 HEAP32[10056>>2] = (6200);
 __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,10056);
 return;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10064>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10064|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   (__ZNSt3__16locale5__imp12make_classicEv()|0);
   HEAP32[10080>>2] = 10072;
   ___cxa_guard_release((10064|0));
  }
 }
 $4 = HEAP32[10080>>2]|0;
 return ($4|0);
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 if ($8) {
  $11 = $3;
 } else {
  $9 = (($id) + 1)|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($0,$9);
  $$pre = HEAP32[$0>>2]|0;
  $11 = $$pre;
 }
 $10 = (($11) + ($id<<2)|0);
 $12 = HEAP32[$10>>2]|0;
 $13 = ($12|0)==(0|0);
 if ($13) {
  $15 = $11;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
  $$pre1 = HEAP32[$0>>2]|0;
  $15 = $$pre1;
 }
 $14 = (($15) + ($id<<2)|0);
 HEAP32[$14>>2] = $f;
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6240);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($2|0)==($3|0);
 if (!($4)) {
  $6 = $3;$i$01 = 0;
  while(1) {
   $5 = (($6) + ($i$01<<2)|0);
   $7 = HEAP32[$5>>2]|0;
   $8 = ($7|0)==(0|0);
   if (!($8)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
   }
   $9 = (($i$01) + 1)|0;
   $10 = HEAP32[$1>>2]|0;
   $11 = HEAP32[$0>>2]|0;
   $12 = $10;
   $13 = $11;
   $14 = (($12) - ($13))|0;
   $15 = $14 >> 2;
   $16 = ($9>>>0)<($15>>>0);
   if ($16) {
    $6 = $11;$i$01 = $9;
   } else {
    break;
   }
  }
 }
 $17 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(10088,1);
 HEAP32[10072>>2] = 10088;
 return (10072|0);
}
function __ZNSt3__16locale5__imp11make_globalEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale7classicEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[10248>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return (10248|0);
}
function __ZNSt3__16locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10256>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10256|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   (__ZNSt3__16locale5__imp11make_globalEv()|0);
   HEAP32[10264>>2] = 10248;
   ___cxa_guard_release((10256|0));
  }
 }
 $4 = HEAP32[10264>>2]|0;
 return ($4|0);
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale8__globalEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$this>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return;
}
function __ZNSt3__16localeC2ERKS0_($this,$l) {
 $this = $this|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l>>2]|0;
 HEAP32[$this>>2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}
function __ZNSt3__16localeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 return;
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__p$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p$i = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 if (!($1)) {
  HEAP32[$__p$i>>2] = $this;
  $2 = ((($__p$i)) + 4|0);
  HEAP32[$2>>2] = (108);
  $3 = ((($__p$i)) + 8|0);
  HEAP32[$3>>2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this,$__p$i,109);
 }
 $4 = ((($this)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x) {
 $this = $this|0;
 $x = $x|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv($x)|0);
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + ($1<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 return ($5|0);
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if (!($0)) {
  $1 = HEAP32[$this>>2]|0;
  $2 = ((($1)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$3 & 127]($this);
 }
 return;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[6256>>2]|0;HEAP32[6256>>2] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = ((($this)) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_b_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<1)|0);
  $3 = HEAP16[$2>>1]|0;
  $4 = $3 & $m;
  $5 = ($4<<16>>16)!=(0);
  $6 = $5;
 } else {
  $6 = 0;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$015 = 0, $$06 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $vec;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_b_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<1)|0);
    $8 = HEAP16[$7>>1]|0;
    $9 = $8&65535;
    $11 = $9;
   } else {
    $11 = 0;
   }
   $10 = $11&65535;
   HEAP16[$$06>>1] = $10;
   $12 = ((($$015)) + 4|0);
   $13 = ((($$06)) + 2|0);
   $14 = ($12|0)==($high|0);
   if ($14) {
    break;
   } else {
    $$015 = $12;$$06 = $13;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if ($isascii) {
     $2 = (___ctype_b_loc()|0);
     $3 = HEAP32[$2>>2]|0;
     $4 = (($3) + ($1<<1)|0);
     $5 = HEAP16[$4>>1]|0;
     $6 = $5 & $m;
     $7 = ($6<<16>>16)==(0);
     if (!($7)) {
      $$0$lcssa = $$01;
      break L1;
     }
    }
    $8 = ((($$01)) + 4|0);
    $9 = ($8|0)==($high|0);
    if ($9) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $8;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if (!($isascii)) {
     $$0$lcssa = $$01;
     break L1;
    }
    $2 = (___ctype_b_loc()|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = (($3) + ($1<<1)|0);
    $5 = HEAP16[$4>>1]|0;
    $6 = $5 & $m;
    $7 = ($6<<16>>16)==(0);
    if ($7) {
     $$0$lcssa = $$01;
     break L1;
    }
    $8 = ((($$01)) + 4|0);
    $9 = ($8|0)==($high|0);
    if ($9) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $8;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_toupper_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3;
 } else {
  $4 = $c;
 }
 return ($4|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_toupper_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<2)|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = $8;
   } else {
    $9 = $4;
   }
   HEAP32[$$04>>2] = $9;
   $10 = ((($$04)) + 4|0);
   $11 = ($10|0)==($high|0);
   if ($11) {
    break;
   } else {
    $$04 = $10;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (___ctype_tolower_loc()|0);
  $1 = HEAP32[$0>>2]|0;
  $2 = (($1) + ($c<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3;
 } else {
  $4 = $c;
 }
 return ($4|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (___ctype_tolower_loc()|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + ($4<<2)|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = $8;
   } else {
    $9 = $4;
   }
   HEAP32[$$04>>2] = $9;
   $10 = ((($$04)) + 4|0);
   $11 = ($10|0)==($high|0);
   if ($11) {
    break;
   } else {
    $$04 = $10;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   $2 = $1 << 24 >> 24;
   HEAP32[$$03>>2] = $2;
   $3 = ((($$012)) + 1|0);
   $4 = ((($$03)) + 4|0);
   $5 = ($3|0)==($high|0);
   if ($5) {
    break;
   } else {
    $$012 = $3;$$03 = $4;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$015 = 0, $$06 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $dest;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   $5 = $4&255;
   $$dfault = $isascii ? $5 : $dfault;
   HEAP8[$$06>>0] = $$dfault;
   $6 = ((($$015)) + 4|0);
   $7 = ((($$06)) + 1|0);
   $8 = ($6|0)==($high|0);
   if ($8) {
    break;
   } else {
    $$015 = $6;$$06 = $7;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__15ctypeIcEC2EPKtbj($this,$tab,$del,$refs) {
 $this = $this|0;
 $tab = $tab|0;
 $del = $del|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6288);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = $tab;
 $3 = ((($this)) + 12|0);
 $4 = $del&1;
 HEAP8[$3>>0] = $4;
 $5 = ($tab|0)==(0|0);
 if ($5) {
  $6 = (___ctype_b_loc()|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$2>>2] = $7;
 }
 return;
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6288);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = ((($this)) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   __ZdaPv($1);
  }
 }
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c&255;
  $1 = (___ctype_toupper_loc()|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = (($2) + ($0<<2)|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $4&255;
  $6 = $5;
 } else {
  $6 = $c;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (___ctype_toupper_loc()|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($4) + ($2<<2)|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = $6&255;
    $8 = $7;
   } else {
    $8 = $1;
   }
   HEAP8[$$02>>0] = $8;
   $9 = ((($$02)) + 1|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$02 = $9;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c << 24 >> 24;
  $1 = (___ctype_tolower_loc()|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = (($2) + ($0<<2)|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $4&255;
  $6 = $5;
 } else {
  $6 = $c;
 }
 return ($6|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (___ctype_tolower_loc()|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($4) + ($2<<2)|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = $6&255;
    $8 = $7;
   } else {
    $8 = $1;
   }
   HEAP8[$$02>>0] = $8;
   $9 = ((($$02)) + 1|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$02 = $9;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   HEAP8[$$03>>0] = $1;
   $2 = ((($$012)) + 1|0);
   $3 = ((($$03)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$012 = $2;$$03 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$013 = 0, $$04 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$013 = $low;$$04 = $dest;
  while(1) {
   $1 = HEAP8[$$013>>0]|0;
   $isascii2 = ($1<<24>>24)>(-1);
   $$dfault = $isascii2 ? $1 : $dfault;
   HEAP8[$$04>>0] = $$dfault;
   $2 = ((($$013)) + 1|0);
   $3 = ((($$04)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$013 = $2;$$04 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$0143 = 0, $$0143$lcssa = 0, $$02$be = 0, $$0242 = 0, $$0242$lcssa = 0, $$1$lcssa = 0, $$128 = 0, $$pre = 0, $$pre14 = 0, $$pre15 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $fend$0$lcssa = 0, $fend$048 = 0, $fend$1$be = 0, $fend$144 = 0, $fend$2$lcssa = 0, $fend$235 = 0, $n$032 = 0, $not$ = 0, $or$cond = 0, $or$cond41 = 0, $p$033 = 0, $save_state = 0, $tmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $save_state = sp;
 $tmp = sp + 8|0;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$048 = $frm;
   while(1) {
    $1 = HEAP32[$fend$048>>2]|0;
    $2 = ($1|0)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$048;
     break L1;
    }
    $3 = ((($fend$048)) + 4|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$048 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond41 = $8 | $7;
 L6: do {
  if ($or$cond41) {
   $72 = $frm;
   label = 29;
  } else {
   $$0143 = $frm;$$0242 = $to;$fend$144 = $fend$0$lcssa;
   while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$144;
    $20 = $$0143;
    $21 = (($19) - ($20))|0;
    $22 = $21 >> 2;
    $23 = $$0242;
    $24 = (($5) - ($23))|0;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale(($25|0))|0);
    $27 = (_wcsnrtombs($$0242,$frm_nxt,$22,$24,$st)|0);
    $28 = ($26|0)==(0|0);
    if (!($28)) {
     (_uselocale(($26|0))|0);
    }
    if ((($27|0) == -1)) {
     $$0143$lcssa = $$0143;$$0242$lcssa = $$0242;
     break;
    } else if ((($27|0) == 0)) {
     $$0 = 1;
     break L6;
    }
    $43 = HEAP32[$to_nxt>>2]|0;
    $44 = (($43) + ($27)|0);
    HEAP32[$to_nxt>>2] = $44;
    $45 = ($44|0)==($to_end|0);
    if ($45) {
     label = 15;
     break;
    }
    $46 = ($fend$144|0)==($frm_end|0);
    if ($46) {
     $$pre = HEAP32[$frm_nxt>>2]|0;
     $$01$be = $$pre;$$02$be = $44;$fend$1$be = $frm_end;
    } else {
     $49 = HEAP32[$6>>2]|0;
     $50 = (_uselocale(($49|0))|0);
     $51 = (_wcrtomb($tmp,0,$st)|0);
     $52 = ($50|0)==(0|0);
     if (!($52)) {
      (_uselocale(($50|0))|0);
     }
     $53 = ($51|0)==(-1);
     if ($53) {
      $$0 = 2;
      break L6;
     }
     $54 = HEAP32[$to_nxt>>2]|0;
     $55 = $54;
     $56 = (($5) - ($55))|0;
     $57 = ($51>>>0)>($56>>>0);
     if ($57) {
      $$0 = 1;
      break L6;
     }
     $58 = ($51|0)==(0);
     if (!($58)) {
      $n$032 = $51;$p$033 = $tmp;
      while(1) {
       $59 = ((($p$033)) + 1|0);
       $60 = HEAP8[$p$033>>0]|0;
       $61 = HEAP32[$to_nxt>>2]|0;
       $62 = ((($61)) + 1|0);
       HEAP32[$to_nxt>>2] = $62;
       HEAP8[$61>>0] = $60;
       $63 = (($n$032) + -1)|0;
       $64 = ($63|0)==(0);
       if ($64) {
        break;
       } else {
        $n$032 = $63;$p$033 = $59;
       }
      }
     }
     $65 = HEAP32[$frm_nxt>>2]|0;
     $66 = ((($65)) + 4|0);
     HEAP32[$frm_nxt>>2] = $66;
     $67 = ($66|0)==($frm_end|0);
     L25: do {
      if ($67) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$235 = $66;
       while(1) {
        $68 = HEAP32[$fend$235>>2]|0;
        $69 = ($68|0)==(0);
        if ($69) {
         $fend$2$lcssa = $fend$235;
         break L25;
        }
        $70 = ((($fend$235)) + 4|0);
        $71 = ($70|0)==($frm_end|0);
        if ($71) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$235 = $70;
        }
       }
      }
     } while(0);
     $$pre14 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $66;$$02$be = $$pre14;$fend$1$be = $fend$2$lcssa;
    }
    $47 = ($$01$be|0)==($frm_end|0);
    $48 = ($$02$be|0)==($to_end|0);
    $or$cond = $48 | $47;
    if ($or$cond) {
     $72 = $$01$be;
     label = 29;
     break L6;
    } else {
     $$0143 = $$01$be;$$0242 = $$02$be;$fend$144 = $fend$1$be;
    }
   }
   if ((label|0) == 15) {
    $$pre15 = HEAP32[$frm_nxt>>2]|0;
    $72 = $$pre15;
    label = 29;
    break;
   }
   HEAP32[$to_nxt>>2] = $$0242$lcssa;
   $29 = HEAP32[$frm_nxt>>2]|0;
   $30 = ($$0143$lcssa|0)==($29|0);
   L35: do {
    if ($30) {
     $$1$lcssa = $$0143$lcssa;
    } else {
     $$128 = $$0143$lcssa;$34 = $$0242$lcssa;
     while(1) {
      $31 = HEAP32[$$128>>2]|0;
      $32 = HEAP32[$6>>2]|0;
      $33 = (_uselocale(($32|0))|0);
      $35 = (_wcrtomb($34,$31,$save_state)|0);
      $36 = ($33|0)==(0|0);
      if (!($36)) {
       (_uselocale(($33|0))|0);
      }
      $37 = ($35|0)==(-1);
      if ($37) {
       $$1$lcssa = $$128;
       break L35;
      }
      $38 = HEAP32[$to_nxt>>2]|0;
      $39 = (($38) + ($35)|0);
      HEAP32[$to_nxt>>2] = $39;
      $40 = ((($$128)) + 4|0);
      $41 = HEAP32[$frm_nxt>>2]|0;
      $42 = ($40|0)==($41|0);
      if ($42) {
       $$1$lcssa = $40;
       break;
      } else {
       $$128 = $40;$34 = $39;
      }
     }
    }
   } while(0);
   HEAP32[$frm_nxt>>2] = $$1$lcssa;
   $$0 = 2;
  }
 } while(0);
 if ((label|0) == 29) {
  $not$ = ($72|0)!=($frm_end|0);
  $73 = $not$&1;
  $$0 = $73;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$0153 = 0, $$0153$lcssa = 0, $$02$be = 0, $$0252 = 0, $$0252$lcssa = 0, $$1$lcssa = 0, $$145 = 0, $$145$lcssa = 0, $$145$lcssa73 = 0, $$2 = 0, $$lcssa = 0, $$pre = 0, $$pre22 = 0, $$pre23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $fend$0$lcssa = 0, $fend$057 = 0, $fend$1$be = 0, $fend$154 = 0, $fend$2$lcssa = 0, $fend$246 = 0, $not$ = 0, $not$3 = 0, $or$cond = 0, $or$cond51 = 0, $save_state = 0, $storemerge44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $save_state = sp;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$057 = $frm;
   while(1) {
    $1 = HEAP8[$fend$057>>0]|0;
    $2 = ($1<<24>>24)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$057;
     break L1;
    }
    $3 = ((($fend$057)) + 1|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$057 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond51 = $8 | $7;
 L6: do {
  if ($or$cond51) {
   $64 = $frm;
   label = 29;
  } else {
   $$0153 = $frm;$$0252 = $to;$fend$154 = $fend$0$lcssa;
   while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$154;
    $20 = $$0153;
    $21 = (($19) - ($20))|0;
    $22 = $$0252;
    $23 = (($5) - ($22))|0;
    $24 = $23 >> 2;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale(($25|0))|0);
    $27 = (_mbsnrtowcs($$0252,$frm_nxt,$21,$24,$st)|0);
    $28 = ($26|0)==(0|0);
    if (!($28)) {
     (_uselocale(($26|0))|0);
    }
    if ((($27|0) == -1)) {
     $$0153$lcssa = $$0153;$$0252$lcssa = $$0252;$$lcssa = $19;
     break;
    } else if ((($27|0) == 0)) {
     $$0 = 2;
     break L6;
    }
    $44 = HEAP32[$to_nxt>>2]|0;
    $45 = (($44) + ($27<<2)|0);
    HEAP32[$to_nxt>>2] = $45;
    $46 = ($45|0)==($to_end|0);
    if ($46) {
     label = 19;
     break;
    }
    $47 = ($fend$154|0)==($frm_end|0);
    $$pre = HEAP32[$frm_nxt>>2]|0;
    if ($47) {
     $$01$be = $$pre;$$02$be = $45;$fend$1$be = $frm_end;
    } else {
     $50 = HEAP32[$6>>2]|0;
     $51 = (_uselocale(($50|0))|0);
     $52 = (_mbrtowc($45,$$pre,1,$st)|0);
     $53 = ($51|0)==(0|0);
     if (!($53)) {
      (_uselocale(($51|0))|0);
     }
     $54 = ($52|0)==(0);
     if (!($54)) {
      $$0 = 2;
      break L6;
     }
     $55 = HEAP32[$to_nxt>>2]|0;
     $56 = ((($55)) + 4|0);
     HEAP32[$to_nxt>>2] = $56;
     $57 = HEAP32[$frm_nxt>>2]|0;
     $58 = ((($57)) + 1|0);
     HEAP32[$frm_nxt>>2] = $58;
     $59 = ($58|0)==($frm_end|0);
     L20: do {
      if ($59) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$246 = $58;
       while(1) {
        $60 = HEAP8[$fend$246>>0]|0;
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         $fend$2$lcssa = $fend$246;
         break L20;
        }
        $62 = ((($fend$246)) + 1|0);
        $63 = ($62|0)==($frm_end|0);
        if ($63) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$246 = $62;
        }
       }
      }
     } while(0);
     $$pre22 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $58;$$02$be = $$pre22;$fend$1$be = $fend$2$lcssa;
    }
    $48 = ($$01$be|0)==($frm_end|0);
    $49 = ($$02$be|0)==($to_end|0);
    $or$cond = $49 | $48;
    if ($or$cond) {
     $64 = $$01$be;
     label = 29;
     break L6;
    } else {
     $$0153 = $$01$be;$$0252 = $$02$be;$fend$154 = $fend$1$be;
    }
   }
   if ((label|0) == 19) {
    $$pre23 = HEAP32[$frm_nxt>>2]|0;
    $64 = $$pre23;
    label = 29;
    break;
   }
   HEAP32[$to_nxt>>2] = $$0252$lcssa;
   $29 = HEAP32[$frm_nxt>>2]|0;
   $30 = ($$0153$lcssa|0)==($29|0);
   L29: do {
    if ($30) {
     $$1$lcssa = $$0153$lcssa;
    } else {
     $$145 = $$0153$lcssa;$storemerge44 = $$0252$lcssa;
     while(1) {
      $31 = $$145;
      $32 = (($$lcssa) - ($31))|0;
      $33 = HEAP32[$6>>2]|0;
      $34 = (_uselocale(($33|0))|0);
      $35 = (_mbrtowc($storemerge44,$$145,$32,$save_state)|0);
      $36 = ($34|0)==(0|0);
      if (!($36)) {
       (_uselocale(($34|0))|0);
      }
      if ((($35|0) == 0)) {
       $37 = ((($$145)) + 1|0);
       $$2 = $37;
      } else if ((($35|0) == -2)) {
       $$145$lcssa73 = $$145;
       label = 14;
       break;
      } else if ((($35|0) == -1)) {
       $$145$lcssa = $$145;
       label = 13;
       break;
      } else {
       $38 = (($$145) + ($35)|0);
       $$2 = $38;
      }
      $39 = HEAP32[$to_nxt>>2]|0;
      $40 = ((($39)) + 4|0);
      HEAP32[$to_nxt>>2] = $40;
      $41 = HEAP32[$frm_nxt>>2]|0;
      $42 = ($$2|0)==($41|0);
      if ($42) {
       $$1$lcssa = $$2;
       break L29;
      } else {
       $$145 = $$2;$storemerge44 = $40;
      }
     }
     if ((label|0) == 13) {
      HEAP32[$frm_nxt>>2] = $$145$lcssa;
      $$0 = 2;
      break L6;
     }
     else if ((label|0) == 14) {
      HEAP32[$frm_nxt>>2] = $$145$lcssa73;
      $$0 = 1;
      break L6;
     }
    }
   } while(0);
   HEAP32[$frm_nxt>>2] = $$1$lcssa;
   $not$3 = ($$1$lcssa|0)!=($frm_end|0);
   $43 = $not$3&1;
   $$0 = $43;
  }
 } while(0);
 if ((label|0) == 29) {
  $not$ = ($64|0)!=($frm_end|0);
  $65 = $not$&1;
  $$0 = $65;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n$02 = 0;
 var $p$03 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $tmp = sp;
 HEAP32[$to_nxt>>2] = $to;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 $3 = (_wcrtomb($tmp,0,$st)|0);
 $4 = ($2|0)==(0|0);
 if (!($4)) {
  (_uselocale(($2|0))|0);
 }
 if ((($3|0) == 0) | (($3|0) == -1)) {
  $$0 = 2;
 } else {
  $5 = (($3) + -1)|0;
  $6 = HEAP32[$to_nxt>>2]|0;
  $7 = $to_end;
  $8 = $6;
  $9 = (($7) - ($8))|0;
  $10 = ($5>>>0)>($9>>>0);
  if ($10) {
   $$0 = 1;
  } else {
   $11 = ($5|0)==(0);
   if ($11) {
    $$0 = 0;
   } else {
    $n$02 = $5;$p$03 = $tmp;
    while(1) {
     $12 = ((($p$03)) + 1|0);
     $13 = HEAP8[$p$03>>0]|0;
     $14 = HEAP32[$to_nxt>>2]|0;
     $15 = ((($14)) + 1|0);
     HEAP32[$to_nxt>>2] = $15;
     HEAP8[$14>>0] = $13;
     $16 = (($n$02) + -1)|0;
     $17 = ($16|0)==(0);
     if ($17) {
      $$0 = 0;
      break;
     } else {
      $n$02 = $16;$p$03 = $12;
     }
    }
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 $3 = (_mbtowc(0,0,4)|0);
 $4 = ($2|0)==(0|0);
 if (!($4)) {
  (_uselocale(($2|0))|0);
 }
 $5 = ($3|0)==(0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = ($6|0)==(0|0);
  if ($7) {
   $$0 = 1;
  } else {
   $8 = (_uselocale(($6|0))|0);
   $9 = ($8|0)==(0|0);
   if ($9) {
    $$0 = 0;
   } else {
    (_uselocale(($8|0))|0);
    $$0 = 0;
   }
  }
 } else {
  $$0 = -1;
 }
 return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$013 = 0, $$1 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0$lcssa = 0, $nbytes$04 = 0;
 var $nbytes$1 = 0, $nwchar_t$05 = 0, $or$cond = 0, $or$cond2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $frm_end;
 $1 = ((($this)) + 8|0);
 $2 = ($mx|0)==(0);
 $3 = ($frm|0)==($frm_end|0);
 $or$cond2 = $3 | $2;
 L1: do {
  if ($or$cond2) {
   $nbytes$0$lcssa = 0;
  } else {
   $$013 = $frm;$nbytes$04 = 0;$nwchar_t$05 = 0;
   while(1) {
    $4 = $$013;
    $5 = (($0) - ($4))|0;
    $6 = HEAP32[$1>>2]|0;
    $7 = (_uselocale(($6|0))|0);
    $8 = (_mbrlen($$013,$5,$st)|0);
    $9 = ($7|0)==(0|0);
    if (!($9)) {
     (_uselocale(($7|0))|0);
    }
    if ((($8|0) == -2) | (($8|0) == -1)) {
     $nbytes$0$lcssa = $nbytes$04;
     break L1;
    } else if ((($8|0) == 0)) {
     $10 = ((($$013)) + 1|0);
     $$1 = $10;$$pn = 1;
    } else {
     $11 = (($$013) + ($8)|0);
     $$1 = $11;$$pn = $8;
    }
    $nbytes$1 = (($$pn) + ($nbytes$04))|0;
    $12 = (($nwchar_t$05) + 1)|0;
    $13 = ($12>>>0)>=($mx>>>0);
    $14 = ($$1|0)==($frm_end|0);
    $or$cond = $14 | $13;
    if ($or$cond) {
     $nbytes$0$lcssa = $nbytes$1;
     break;
    } else {
     $$013 = $$1;$nbytes$04 = $nbytes$1;$nwchar_t$05 = $12;
    }
   }
  }
 } while(0);
 return ($nbytes$0$lcssa|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $5 = 1;
 } else {
  $3 = (_uselocale(($1|0))|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   $5 = 4;
  } else {
   (_uselocale(($3|0))|0);
   $5 = 4;
  }
 }
 return ($5|0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIcEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6440);
 $2 = ((($this)) + 8|0);
 HEAP8[$2>>0] = 46;
 $3 = ((($this)) + 9|0);
 HEAP8[$3>>0] = 44;
 $4 = ((($this)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIwEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (6480);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = 46;
 $3 = ((($this)) + 12|0);
 HEAP32[$3>>2] = 44;
 $4 = ((($this)) + 16|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6440);
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6480);
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,10272,4);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10280)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10280,$0);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,10304,5);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10312)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10312,$0);
 return;
}
function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 if ((($2|0) == 8)) {
  $$0 = 16;
 } else if ((($2|0) == 0)) {
  $$0 = 0;
 } else if ((($2|0) == 64)) {
  $$0 = 8;
 } else {
  $$0 = 10;
 }
 return ($$0|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10336>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10336|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[10344>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((10344|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 10352;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((10520)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((10344|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10352,10520)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10364),10528)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10376),10536)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10388),10544)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10400),10560)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10412),10576)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10424),10584)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10436),10600)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10448),10608)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10460),10616)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10472),10624)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10484),10632)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10496),10640)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((10508),10648)|0);
   HEAP32[10656>>2] = 10352;
   ___cxa_guard_release((10336|0));
  }
 }
 $13 = HEAP32[10656>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[10664>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((10664|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[10672>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((10672|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 10680;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((10848)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((10672|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10680,10848)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10692),10880)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10704),10912)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10716),10944)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10728),10984)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10740),11024)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10752),11056)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10764),11096)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10776),11112)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10788),11128)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10800),11144)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10812),11160)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10824),11176)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((10836),11192)|0);
   HEAP32[11208>>2] = 10680;
   ___cxa_guard_release((10664|0));
  }
 }
 $13 = HEAP32[11208>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[11216>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((11216|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[11224>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((11224|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 11232;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((11520)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((11224|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11232,11520)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11244),11528)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11256),11544)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11268),11552)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11280),11560)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11292),11568)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11304),11576)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11316),11584)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11328),11592)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11340),11608)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11352),11616)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11364),11632)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11376),11648)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11388),11656)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11400),11664)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11412),11672)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11424),11560)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11436),11680)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11448),11688)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11460),11696)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11472),11704)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11484),11712)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11496),11720)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((11508),11728)|0);
   HEAP32[11736>>2] = 11232;
   ___cxa_guard_release((11216|0));
  }
 }
 $13 = HEAP32[11736>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[11744>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((11744|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[11752>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((11752|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 11760;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((12048)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((11752|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11760,12048)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11772),12080)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11784),12120)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11796),12144)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11808),12168)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11820),12184)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11832),12208)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11844),12232)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11856),12264)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11868),12304)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11880),12336)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11892),12376)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11904),12416)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11916),12432)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11928),12448)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11940),12464)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11952),12168)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11964),12480)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11976),12496)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((11988),12512)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((12000),12528)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((12012),12544)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((12024),12560)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((12036),12576)|0);
   HEAP32[12592>>2] = 11760;
   ___cxa_guard_release((11744|0));
  }
 }
 $13 = HEAP32[12592>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[12600>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((12600|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[12608>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((12608|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 12616;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((12904)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((12608|0));
    }
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(12616,12904)|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((12628),12912)|0);
   HEAP32[12920>>2] = 12616;
   ___cxa_guard_release((12600|0));
  }
 }
 $13 = HEAP32[12920>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[12928>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((12928|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = HEAP8[12936>>0]|0;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $6 = (___cxa_guard_acquire((12936|0))|0);
    $7 = ($6|0)==(0);
    if (!($7)) {
     $8 = 12944;
     while(1) {
      HEAP32[$8>>2] = 0;
      $9 = ((($8)) + 4|0);
      HEAP32[$9>>2] = 0;
      $10 = ((($8)) + 8|0);
      HEAP32[$10>>2] = 0;
      $11 = ((($8)) + 12|0);
      $12 = ($11|0)==((13232)|0);
      if ($12) {
       break;
      } else {
       $8 = $11;
      }
     }
     ___cxa_guard_release((12936|0));
    }
   }
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12944,13232)|0);
   (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((12956),13248)|0);
   HEAP32[13264>>2] = 12944;
   ___cxa_guard_release((12928|0));
  }
 }
 $13 = HEAP32[13264>>2]|0;
 return ($13|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13272>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13272|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13280,13296,8);
   ___cxa_guard_release((13272|0));
  }
 }
 return (13280|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13312>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13312|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13320)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13360,13320,$4);
   ___cxa_guard_release((13312|0));
  }
 }
 return (13360|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13376>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13376|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13384,13400,8);
   ___cxa_guard_release((13376|0));
  }
 }
 return (13384|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13416>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13416|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13424)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13464,13424,$4);
   ___cxa_guard_release((13416|0));
  }
 }
 return (13464|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13480>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13480|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13488,13504,20);
   ___cxa_guard_release((13480|0));
  }
 }
 return (13488|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13528>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13528|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13536)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13624,13536,$4);
   ___cxa_guard_release((13528|0));
  }
 }
 return (13624|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13640>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13640|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(13648,13664,11);
   ___cxa_guard_release((13640|0));
  }
 }
 return (13648|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[13680>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((13680|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_wcslen(13688)|0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(13736,13688,$4);
   ___cxa_guard_release((13680|0));
  }
 }
 return (13736|0);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (6360);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 $3 = ($1|0)==($2|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  _freelocale(($4|0));
 }
 return;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$021 = 0, $$033 = 0, $$lcssa = 0, $$lcssa59 = 0, $$pre$i$i$i = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$i2$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off038 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$052 = 0, $__ky1$039 = 0;
 var $__ky2$046 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$050 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$335 = 0, $__n_does_match$4 = 0, $__n_does_match$544 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$049 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$334 = 0, $__n_might_match$4 = 0, $__st$051 = 0, $__st$136 = 0, $__st$245 = 0;
 var $__st$332 = 0, $__statbuf = 0, $__status$0 = 0, $or$cond = 0, $tmp$i$i10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $162 = $5;$__status$0 = $5;
  }
 } else {
  $162 = 0;$__status$0 = $__statbuf;
 }
 $7 = ($__kb|0)==($__ke|0);
 if ($7) {
  $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
 } else {
  $__ky$052 = $__kb;$__n_does_match$050 = 0;$__n_might_match$049 = $3;$__st$051 = $__status$0;
  while(1) {
   $10 = HEAP8[$__ky$052>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = ((($__ky$052)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$__st$051>>0] = 2;
    $19 = (($__n_might_match$049) + -1)|0;
    $20 = (($__n_does_match$050) + 1)|0;
    $__n_does_match$1 = $20;$__n_might_match$1 = $19;
   } else {
    HEAP8[$__st$051>>0] = 1;
    $__n_does_match$1 = $__n_does_match$050;$__n_might_match$1 = $__n_might_match$049;
   }
   $21 = ((($__ky$052)) + 12|0);
   $22 = ((($__st$051)) + 1|0);
   $23 = ($21|0)==($__ke|0);
   if ($23) {
    $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__ky$052 = $21;$__n_does_match$050 = $__n_does_match$1;$__n_might_match$049 = $__n_might_match$1;$__st$051 = $22;
   }
  }
 }
 $8 = ($__kb|0)==($__ke|0);
 $9 = ($__kb|0)==($__ke|0);
 $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
 L17: while(1) {
  $24 = HEAP32[$__b>>2]|0;
  $25 = ($24|0)==(0|0);
  do {
   if ($25) {
    $36 = 0;
   } else {
    $26 = ((($24)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($24)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if ($30) {
     $31 = HEAP32[$24>>2]|0;
     $32 = ((($31)) + 36|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = (FUNCTION_TABLE_ii[$33 & 63]($24)|0);
     $35 = ($34|0)==(-1);
     if ($35) {
      HEAP32[$__b>>2] = 0;
      $36 = 0;
      break;
     } else {
      $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
      $36 = $$pre$i$i$i4;
      break;
     }
    } else {
     $36 = $24;
    }
   }
  } while(0);
  $37 = ($36|0)==(0|0);
  $38 = HEAP32[$__e>>2]|0;
  $39 = ($38|0)==(0|0);
  if ($39) {
   $$pre$i2$i$i = 0;
  } else {
   $40 = ((($38)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($38)) + 16|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ($41|0)==($43|0);
   if ($44) {
    $45 = HEAP32[$38>>2]|0;
    $46 = ((($45)) + 36|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = (FUNCTION_TABLE_ii[$47 & 63]($38)|0);
    $49 = ($48|0)==(-1);
    if ($49) {
     HEAP32[$__e>>2] = 0;
     $$pre$i2$i$i = 0;
    } else {
     $$pre$i2$i$i = $38;
    }
   } else {
    $$pre$i2$i$i = $38;
   }
  }
  $50 = ($$pre$i2$i$i|0)==(0|0);
  $tmp$i$i10 = $37 ^ $50;
  $51 = ($__n_might_match$2|0)!=(0);
  $52 = $51 & $tmp$i$i10;
  $53 = HEAP32[$__b>>2]|0;
  if (!($52)) {
   $$lcssa = $50;$$lcssa59 = $53;$$pre$i2$i$i$lcssa = $$pre$i2$i$i;
   break;
  }
  $54 = ((($53)) + 12|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ((($53)) + 16|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = ($55|0)==($57|0);
  if ($58) {
   $59 = HEAP32[$53>>2]|0;
   $60 = ((($59)) + 36|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = (FUNCTION_TABLE_ii[$61 & 63]($53)|0);
   $$0$i$i = $62;
  } else {
   $63 = HEAP8[$55>>0]|0;
   $64 = $63&255;
   $$0$i$i = $64;
  }
  $65 = $$0$i$i&255;
  if ($__case_sensitive) {
   $__c$0 = $65;
  } else {
   $66 = HEAP32[$__ct>>2]|0;
   $67 = ((($66)) + 12|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = (FUNCTION_TABLE_iii[$68 & 15]($__ct,$65)|0);
   $__c$0 = $69;
  }
  $70 = (($__indx$0) + 1)|0;
  if ($8) {
   $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
  } else {
   $__consume$0$off038 = 0;$__ky1$039 = $__kb;$__n_does_match$335 = $__n_does_match$2;$__n_might_match$334 = $__n_might_match$2;$__st$136 = $__status$0;
   while(1) {
    $71 = HEAP8[$__st$136>>0]|0;
    $72 = ($71<<24>>24)==(1);
    do {
     if ($72) {
      $73 = HEAP8[$__ky1$039>>0]|0;
      $74 = $73 & 1;
      $75 = ($74<<24>>24)==(0);
      if ($75) {
       $78 = ((($__ky1$039)) + 1|0);
       $80 = $78;
      } else {
       $76 = ((($__ky1$039)) + 8|0);
       $77 = HEAP32[$76>>2]|0;
       $80 = $77;
      }
      $79 = (($80) + ($__indx$0)|0);
      $81 = HEAP8[$79>>0]|0;
      if ($__case_sensitive) {
       $__kc$0 = $81;
      } else {
       $82 = HEAP32[$__ct>>2]|0;
       $83 = ((($82)) + 12|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = (FUNCTION_TABLE_iii[$84 & 15]($__ct,$81)|0);
       $__kc$0 = $85;
      }
      $86 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
      if (!($86)) {
       HEAP8[$__st$136>>0] = 0;
       $98 = (($__n_might_match$334) + -1)|0;
       $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $98;
       break;
      }
      $87 = HEAP8[$__ky1$039>>0]|0;
      $88 = $87 & 1;
      $89 = ($88<<24>>24)==(0);
      if ($89) {
       $92 = $87&255;
       $93 = $92 >>> 1;
       $94 = $93;
      } else {
       $90 = ((($__ky1$039)) + 4|0);
       $91 = HEAP32[$90>>2]|0;
       $94 = $91;
      }
      $95 = ($94|0)==($70|0);
      if ($95) {
       HEAP8[$__st$136>>0] = 2;
       $96 = (($__n_might_match$334) + -1)|0;
       $97 = (($__n_does_match$335) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $97;$__n_might_match$4 = $96;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
     }
    } while(0);
    $99 = ((($__ky1$039)) + 12|0);
    $100 = ((($__st$136)) + 1|0);
    $101 = ($99|0)==($__ke|0);
    if ($101) {
     $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
     break;
    } else {
     $__consume$0$off038 = $__consume$1$off0;$__ky1$039 = $99;$__n_does_match$335 = $__n_does_match$4;$__n_might_match$334 = $__n_might_match$4;$__st$136 = $100;
    }
   }
  }
  if (!($__consume$0$off0$lcssa)) {
   $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  }
  $102 = HEAP32[$__b>>2]|0;
  $103 = ((($102)) + 12|0);
  $104 = HEAP32[$103>>2]|0;
  $105 = ((($102)) + 16|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ($104|0)==($106|0);
  if ($107) {
   $108 = HEAP32[$102>>2]|0;
   $109 = ((($108)) + 40|0);
   $110 = HEAP32[$109>>2]|0;
   (FUNCTION_TABLE_ii[$110 & 63]($102)|0);
  } else {
   $111 = ((($104)) + 1|0);
   HEAP32[$103>>2] = $111;
  }
  $112 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
  $113 = ($112>>>0)<(2);
  $or$cond = $113 | $9;
  if ($or$cond) {
   $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  } else {
   $__ky2$046 = $__kb;$__n_does_match$544 = $__n_does_match$3$lcssa;$__st$245 = $__status$0;
  }
  while(1) {
   $114 = HEAP8[$__st$245>>0]|0;
   $115 = ($114<<24>>24)==(2);
   if ($115) {
    $116 = HEAP8[$__ky2$046>>0]|0;
    $117 = $116 & 1;
    $118 = ($117<<24>>24)==(0);
    if ($118) {
     $121 = $116&255;
     $122 = $121 >>> 1;
     $123 = $122;
    } else {
     $119 = ((($__ky2$046)) + 4|0);
     $120 = HEAP32[$119>>2]|0;
     $123 = $120;
    }
    $124 = ($123|0)==($70|0);
    if ($124) {
     $__n_does_match$6 = $__n_does_match$544;
    } else {
     HEAP8[$__st$245>>0] = 0;
     $125 = (($__n_does_match$544) + -1)|0;
     $__n_does_match$6 = $125;
    }
   } else {
    $__n_does_match$6 = $__n_does_match$544;
   }
   $126 = ((($__ky2$046)) + 12|0);
   $127 = ((($__st$245)) + 1|0);
   $128 = ($126|0)==($__ke|0);
   if ($128) {
    $__indx$0 = $70;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
    continue L17;
   } else {
    $__ky2$046 = $126;$__n_does_match$544 = $__n_does_match$6;$__st$245 = $127;
   }
  }
 }
 $129 = ($$lcssa59|0)==(0|0);
 do {
  if ($129) {
   $140 = 0;
  } else {
   $130 = ((($$lcssa59)) + 12|0);
   $131 = HEAP32[$130>>2]|0;
   $132 = ((($$lcssa59)) + 16|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = ($131|0)==($133|0);
   if ($134) {
    $135 = HEAP32[$$lcssa59>>2]|0;
    $136 = ((($135)) + 36|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = (FUNCTION_TABLE_ii[$137 & 63]($$lcssa59)|0);
    $139 = ($138|0)==(-1);
    if ($139) {
     HEAP32[$__b>>2] = 0;
     $140 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $140 = $$pre$i$i$i;
     break;
    }
   } else {
    $140 = $$lcssa59;
   }
  }
 } while(0);
 $141 = ($140|0)==(0|0);
 do {
  if ($$lcssa) {
   label = 65;
  } else {
   $142 = ((($$pre$i2$i$i$lcssa)) + 12|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ((($$pre$i2$i$i$lcssa)) + 16|0);
   $145 = HEAP32[$144>>2]|0;
   $146 = ($143|0)==($145|0);
   if ($146) {
    $147 = HEAP32[$$pre$i2$i$i$lcssa>>2]|0;
    $148 = ((($147)) + 36|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (FUNCTION_TABLE_ii[$149 & 63]($$pre$i2$i$i$lcssa)|0);
    $151 = ($150|0)==(-1);
    if ($151) {
     HEAP32[$__e>>2] = 0;
     label = 65;
     break;
    }
   }
   if (!($141)) {
    label = 66;
   }
  }
 } while(0);
 if ((label|0) == 65) {
  if ($141) {
   label = 66;
  }
 }
 if ((label|0) == 66) {
  $152 = HEAP32[$__err>>2]|0;
  $153 = $152 | 2;
  HEAP32[$__err>>2] = $153;
 }
 $154 = ($__kb|0)==($__ke|0);
 L95: do {
  if ($154) {
   label = 70;
  } else {
   $$033 = $__kb;$__st$332 = $__status$0;
   while(1) {
    $155 = HEAP8[$__st$332>>0]|0;
    $156 = ($155<<24>>24)==(2);
    if ($156) {
     $$021 = $$033;
     break L95;
    }
    $157 = ((($$033)) + 12|0);
    $158 = ((($__st$332)) + 1|0);
    $159 = ($157|0)==($__ke|0);
    if ($159) {
     label = 70;
     break;
    } else {
     $$033 = $157;$__st$332 = $158;
    }
   }
  }
 } while(0);
 if ((label|0) == 70) {
  $160 = HEAP32[$__err>>2]|0;
  $161 = $160 | 4;
  HEAP32[$__err>>2] = $161;
  $$021 = $__ke;
 }
 _free($162);
 STACKTOP = sp;return ($$021|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $108 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $108 = $100;
  } else {
   $108 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 $103 = tempRet0;
 $104 = $__v;
 $105 = $104;
 HEAP32[$105>>2] = $102;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$108,$__err);
 $109 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($109) {
  $120 = 0;
 } else {
  $110 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $116 = ((($115)) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 63]($$pre$i$i$i$lcssa)|0);
   $119 = ($118|0)==(-1);
   if ($119) {
    HEAP32[$__b>>2] = 0;
    $120 = 0;
   } else {
    $120 = $$pre$i$i$i$lcssa;
   }
  } else {
   $120 = $$pre$i$i$i$lcssa;
  }
 }
 $121 = ($120|0)==(0|0);
 $122 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($122) {
   label = 38;
  } else {
   $123 = ((($$pre$i2$i$i)) + 12|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ((($$pre$i2$i$i)) + 16|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($124|0)==($126|0);
   if ($127) {
    $128 = HEAP32[$$pre$i2$i$i>>2]|0;
    $129 = ((($128)) + 36|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = (FUNCTION_TABLE_ii[$130 & 63]($$pre$i2$i$i)|0);
    $132 = ($131|0)==(-1);
    if ($132) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($121)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($121) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 $135 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($135|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP16[$__v>>1] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $103 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $103 = $100;
  } else {
   $103 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 HEAP32[$__v>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$103,$__err);
 $104 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($104) {
  $115 = 0;
 } else {
  $105 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $111 = ((($110)) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 63]($$pre$i$i$i$lcssa)|0);
   $114 = ($113|0)==(-1);
   if ($114) {
    HEAP32[$__b>>2] = 0;
    $115 = 0;
   } else {
    $115 = $$pre$i$i$i$lcssa;
   }
  } else {
   $115 = $$pre$i$i$i$lcssa;
  }
 }
 $116 = ($115|0)==(0|0);
 $117 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 38;
  } else {
   $118 = ((($$pre$i2$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i2$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i2$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i2$i$i)|0);
    $127 = ($126|0)==(-1);
    if ($127) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($116)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($116) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 $130 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($130|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i2 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i2|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i2)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i2)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i2>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i2)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i2;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i2;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$16>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i12 = (($57) + -1)|0;
    $58 = $phitmp$i12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$12>>2]|0;
   $63 = $61 ? $14 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i2 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $$pre18 = HEAP32[$__g_end>>2]|0;
 if ($94) {
  $108 = $$pre18;
 } else {
  $95 = $$pre18;
  $96 = $__g;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc>>2]|0;
   $100 = ((($$pre18)) + 4|0);
   HEAP32[$__g_end>>2] = $100;
   HEAP32[$$pre18>>2] = $99;
   $108 = $100;
  } else {
   $108 = $$pre18;
  }
 }
 $101 = HEAP32[$__a_end>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2,$101,$__err,$0)|0);
 $103 = tempRet0;
 $104 = $__v;
 $105 = $104;
 HEAP32[$105>>2] = $102;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$108,$__err);
 $109 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($109) {
  $120 = 0;
 } else {
  $110 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $116 = ((($115)) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 63]($$pre$i$i$i$lcssa)|0);
   $119 = ($118|0)==(-1);
   if ($119) {
    HEAP32[$__b>>2] = 0;
    $120 = 0;
   } else {
    $120 = $$pre$i$i$i$lcssa;
   }
  } else {
   $120 = $$pre$i$i$i$lcssa;
  }
 }
 $121 = ($120|0)==(0|0);
 $122 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($122) {
   label = 38;
  } else {
   $123 = ((($$pre$i2$i$i)) + 12|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ((($$pre$i2$i$i)) + 16|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($124|0)==($126|0);
   if ($127) {
    $128 = HEAP32[$$pre$i2$i$i>>2]|0;
    $129 = ((($128)) + 36|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = (FUNCTION_TABLE_ii[$130 & 63]($$pre$i2$i$i)|0);
    $132 = ($131|0)==(-1);
    if ($132) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($121)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($121) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 $135 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($135|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF32[$__v>>2] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF64[$__v>>3] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP8[$__decimal_point>>0]|0;
 $17 = HEAP8[$__thousands_sep>>0]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $28 = ($27|0)==(-1);
    if ($28) {
     HEAP32[$__b>>2] = 0;
     $$pre$i$i$i = 0;
    } else {
     $$pre$i$i$i = $$pre$i$i$i3;
    }
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
   }
  }
  $29 = ($$pre$i$i$i|0)==(0|0);
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 13;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if (!($36)) {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
    $41 = ($40|0)==(-1);
    if ($41) {
     HEAP32[$__e>>2] = 0;
     label = 13;
     break;
    } else {
     if ($29) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $42 = HEAP32[$__a_end>>2]|0;
  $43 = HEAP8[$__buf>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  $46 = HEAP32[$15>>2]|0;
  $47 = $43&255;
  $48 = $47 >>> 1;
  $49 = $45 ? $48 : $46;
  $50 = (($__a$0) + ($49)|0);
  $51 = ($42|0)==($50|0);
  if ($51) {
   $52 = $49 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$52,0);
   $53 = HEAP8[$__buf>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf>>2]|0;
    $57 = $56 & -2;
    $phitmp$i13 = (($57) + -1)|0;
    $58 = $phitmp$i13;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$58,0);
   $59 = HEAP8[$__buf>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   $62 = HEAP32[$11>>2]|0;
   $63 = $61 ? $13 : $62;
   $64 = (($63) + ($49)|0);
   HEAP32[$__a_end>>2] = $64;
   $__a$1 = $63;
  } else {
   $__a$1 = $__a$0;
  }
  $65 = ((($$pre$i$i$i)) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($$pre$i$i$i)) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$$pre$i$i$i>>2]|0;
   $71 = ((($70)) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i = $75;
  }
  $76 = $$0$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($76,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$$pre$i$i$i>>2]|0;
   $83 = ((($82)) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $85 = ((($79)) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 $89 = ((($__grouping)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $86&255;
 $92 = $91 >>> 1;
 $93 = $88 ? $92 : $90;
 $94 = ($93|0)==(0);
 $95 = HEAP8[$__in_units>>0]|0;
 $96 = ($95<<24>>24)==(0);
 $or$cond = $96 | $94;
 $$pre19 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $105 = $$pre19;
 } else {
  $97 = $$pre19;
  $98 = $__g;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(160);
  if ($100) {
   $101 = HEAP32[$__dc>>2]|0;
   $102 = ((($$pre19)) + 4|0);
   HEAP32[$__g_end>>2] = $102;
   HEAP32[$$pre19>>2] = $101;
   $105 = $102;
  } else {
   $105 = $$pre19;
  }
 }
 $103 = HEAP32[$__a_end>>2]|0;
 $104 = (+__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2,$103,$__err));
 HEAPF64[$__v>>3] = $104;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$105,$__err);
 $106 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($106) {
  $117 = 0;
 } else {
  $107 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($108|0)==($110|0);
  if ($111) {
   $112 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $113 = ((($112)) + 36|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (FUNCTION_TABLE_ii[$114 & 63]($$pre$i$i$i$lcssa)|0);
   $116 = ($115|0)==(-1);
   if ($116) {
    HEAP32[$__b>>2] = 0;
    $117 = 0;
   } else {
    $117 = $$pre$i$i$i$lcssa;
   }
  } else {
   $117 = $$pre$i$i$i$lcssa;
  }
 }
 $118 = ($117|0)==(0|0);
 $119 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 38;
  } else {
   $120 = ((($$pre$i2$i$i)) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($$pre$i2$i$i)) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i2$i$i>>2]|0;
    $126 = ((($125)) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 63]($$pre$i2$i$i)|0);
    $129 = ($128|0)==(-1);
    if ($129) {
     HEAP32[$__e>>2] = 0;
     label = 38;
     break;
    }
   }
   if (!($118)) {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($118) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $130 = HEAP32[$__err>>2]|0;
  $131 = $130 | 2;
  HEAP32[$__err>>2] = $131;
 }
 $132 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($132|0);
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsscanf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$025 = 0, $$033 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$i3$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off038 = 0, $__consume$1$off0 = 0;
 var $__indx$0 = 0, $__kc$0 = 0, $__ky$052 = 0, $__ky1$039 = 0, $__ky2$046 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$050 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$335 = 0, $__n_does_match$4 = 0, $__n_does_match$544 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$049 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$334 = 0;
 var $__n_might_match$4 = 0, $__st$051 = 0, $__st$136 = 0, $__st$245 = 0, $__st$332 = 0, $__statbuf = 0, $__status$0 = 0, $or$cond = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i6 = 0, $tmp$i$i14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $162 = $5;$__status$0 = $5;
  }
 } else {
  $162 = 0;$__status$0 = $__statbuf;
 }
 $7 = ($__kb|0)==($__ke|0);
 if ($7) {
  $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
 } else {
  $__ky$052 = $__kb;$__n_does_match$050 = 0;$__n_might_match$049 = $3;$__st$051 = $__status$0;
  while(1) {
   $10 = HEAP8[$__ky$052>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = ((($__ky$052)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$__st$051>>0] = 2;
    $19 = (($__n_might_match$049) + -1)|0;
    $20 = (($__n_does_match$050) + 1)|0;
    $__n_does_match$1 = $20;$__n_might_match$1 = $19;
   } else {
    HEAP8[$__st$051>>0] = 1;
    $__n_does_match$1 = $__n_does_match$050;$__n_might_match$1 = $__n_might_match$049;
   }
   $21 = ((($__ky$052)) + 12|0);
   $22 = ((($__st$051)) + 1|0);
   $23 = ($21|0)==($__ke|0);
   if ($23) {
    $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__ky$052 = $21;$__n_does_match$050 = $__n_does_match$1;$__n_might_match$049 = $__n_might_match$1;$__st$051 = $22;
   }
  }
 }
 $8 = ($__kb|0)==($__ke|0);
 $9 = ($__kb|0)==($__ke|0);
 $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
 L17: while(1) {
  $24 = HEAP32[$__b>>2]|0;
  $25 = ($24|0)==(0|0);
  do {
   if ($25) {
    $51 = 1;
   } else {
    $26 = ((($24)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($24)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if ($30) {
     $31 = HEAP32[$24>>2]|0;
     $32 = ((($31)) + 36|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = (FUNCTION_TABLE_ii[$33 & 63]($24)|0);
     $$0$i$i$i$i3 = $34;
    } else {
     $35 = HEAP32[$27>>2]|0;
     $$0$i$i$i$i3 = $35;
    }
    $36 = ($$0$i$i$i$i3|0)==(-1);
    if ($36) {
     HEAP32[$__b>>2] = 0;
     $51 = 1;
     break;
    } else {
     $$pre$i$i$i5 = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i6 = ($$pre$i$i$i5|0)==(0|0);
     $51 = $phitmp$i$i$i6;
     break;
    }
   }
  } while(0);
  $37 = HEAP32[$__e>>2]|0;
  $38 = ($37|0)==(0|0);
  if ($38) {
   $$pre$i3$i$i = 0;$50 = 1;
  } else {
   $39 = ((($37)) + 12|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($37)) + 16|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($40|0)==($42|0);
   if ($43) {
    $44 = HEAP32[$37>>2]|0;
    $45 = ((($44)) + 36|0);
    $46 = HEAP32[$45>>2]|0;
    $47 = (FUNCTION_TABLE_ii[$46 & 63]($37)|0);
    $$0$i$i1$i$i9 = $47;
   } else {
    $48 = HEAP32[$40>>2]|0;
    $$0$i$i1$i$i9 = $48;
   }
   $49 = ($$0$i$i1$i$i9|0)==(-1);
   if ($49) {
    HEAP32[$__e>>2] = 0;
    $$pre$i3$i$i = 0;$50 = 1;
   } else {
    $$pre$i3$i$i = $37;$50 = 0;
   }
  }
  $tmp$i$i14 = $51 ^ $50;
  $52 = ($__n_might_match$2|0)!=(0);
  $53 = $52 & $tmp$i$i14;
  $54 = HEAP32[$__b>>2]|0;
  if (!($53)) {
   $$lcssa = $54;$$pre$i3$i$i$lcssa = $$pre$i3$i$i;
   break;
  }
  $55 = ((($54)) + 12|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($54)) + 16|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ($56|0)==($58|0);
  if ($59) {
   $60 = HEAP32[$54>>2]|0;
   $61 = ((($60)) + 36|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (FUNCTION_TABLE_ii[$62 & 63]($54)|0);
   $$0$i$i = $63;
  } else {
   $64 = HEAP32[$56>>2]|0;
   $$0$i$i = $64;
  }
  if ($__case_sensitive) {
   $__c$0 = $$0$i$i;
  } else {
   $65 = HEAP32[$__ct>>2]|0;
   $66 = ((($65)) + 28|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = (FUNCTION_TABLE_iii[$67 & 15]($__ct,$$0$i$i)|0);
   $__c$0 = $68;
  }
  $69 = (($__indx$0) + 1)|0;
  if ($8) {
   $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
  } else {
   $__consume$0$off038 = 0;$__ky1$039 = $__kb;$__n_does_match$335 = $__n_does_match$2;$__n_might_match$334 = $__n_might_match$2;$__st$136 = $__status$0;
   while(1) {
    $70 = HEAP8[$__st$136>>0]|0;
    $71 = ($70<<24>>24)==(1);
    do {
     if ($71) {
      $72 = HEAP8[$__ky1$039>>0]|0;
      $73 = $72 & 1;
      $74 = ($73<<24>>24)==(0);
      if ($74) {
       $77 = ((($__ky1$039)) + 4|0);
       $79 = $77;
      } else {
       $75 = ((($__ky1$039)) + 8|0);
       $76 = HEAP32[$75>>2]|0;
       $79 = $76;
      }
      $78 = (($79) + ($__indx$0<<2)|0);
      $80 = HEAP32[$78>>2]|0;
      if ($__case_sensitive) {
       $__kc$0 = $80;
      } else {
       $81 = HEAP32[$__ct>>2]|0;
       $82 = ((($81)) + 28|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = (FUNCTION_TABLE_iii[$83 & 15]($__ct,$80)|0);
       $__kc$0 = $84;
      }
      $85 = ($__c$0|0)==($__kc$0|0);
      if (!($85)) {
       HEAP8[$__st$136>>0] = 0;
       $97 = (($__n_might_match$334) + -1)|0;
       $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $97;
       break;
      }
      $86 = HEAP8[$__ky1$039>>0]|0;
      $87 = $86 & 1;
      $88 = ($87<<24>>24)==(0);
      if ($88) {
       $91 = $86&255;
       $92 = $91 >>> 1;
       $93 = $92;
      } else {
       $89 = ((($__ky1$039)) + 4|0);
       $90 = HEAP32[$89>>2]|0;
       $93 = $90;
      }
      $94 = ($93|0)==($69|0);
      if ($94) {
       HEAP8[$__st$136>>0] = 2;
       $95 = (($__n_might_match$334) + -1)|0;
       $96 = (($__n_does_match$335) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $96;$__n_might_match$4 = $95;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off038;$__n_does_match$4 = $__n_does_match$335;$__n_might_match$4 = $__n_might_match$334;
     }
    } while(0);
    $98 = ((($__ky1$039)) + 12|0);
    $99 = ((($__st$136)) + 1|0);
    $100 = ($98|0)==($__ke|0);
    if ($100) {
     $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
     break;
    } else {
     $__consume$0$off038 = $__consume$1$off0;$__ky1$039 = $98;$__n_does_match$335 = $__n_does_match$4;$__n_might_match$334 = $__n_might_match$4;$__st$136 = $99;
    }
   }
  }
  if (!($__consume$0$off0$lcssa)) {
   $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  }
  $101 = HEAP32[$__b>>2]|0;
  $102 = ((($101)) + 12|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = ((($101)) + 16|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ($103|0)==($105|0);
  if ($106) {
   $107 = HEAP32[$101>>2]|0;
   $108 = ((($107)) + 40|0);
   $109 = HEAP32[$108>>2]|0;
   (FUNCTION_TABLE_ii[$109 & 63]($101)|0);
  } else {
   $110 = ((($103)) + 4|0);
   HEAP32[$102>>2] = $110;
  }
  $111 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
  $112 = ($111>>>0)<(2);
  $or$cond = $112 | $9;
  if ($or$cond) {
   $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  } else {
   $__ky2$046 = $__kb;$__n_does_match$544 = $__n_does_match$3$lcssa;$__st$245 = $__status$0;
  }
  while(1) {
   $113 = HEAP8[$__st$245>>0]|0;
   $114 = ($113<<24>>24)==(2);
   if ($114) {
    $115 = HEAP8[$__ky2$046>>0]|0;
    $116 = $115 & 1;
    $117 = ($116<<24>>24)==(0);
    if ($117) {
     $120 = $115&255;
     $121 = $120 >>> 1;
     $122 = $121;
    } else {
     $118 = ((($__ky2$046)) + 4|0);
     $119 = HEAP32[$118>>2]|0;
     $122 = $119;
    }
    $123 = ($122|0)==($69|0);
    if ($123) {
     $__n_does_match$6 = $__n_does_match$544;
    } else {
     HEAP8[$__st$245>>0] = 0;
     $124 = (($__n_does_match$544) + -1)|0;
     $__n_does_match$6 = $124;
    }
   } else {
    $__n_does_match$6 = $__n_does_match$544;
   }
   $125 = ((($__ky2$046)) + 12|0);
   $126 = ((($__st$245)) + 1|0);
   $127 = ($125|0)==($__ke|0);
   if ($127) {
    $__indx$0 = $69;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
    continue L17;
   } else {
    $__ky2$046 = $125;$__n_does_match$544 = $__n_does_match$6;$__st$245 = $126;
   }
  }
 }
 $128 = ($$lcssa|0)==(0|0);
 do {
  if ($128) {
   $163 = 1;
  } else {
   $129 = ((($$lcssa)) + 12|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ((($$lcssa)) + 16|0);
   $132 = HEAP32[$131>>2]|0;
   $133 = ($130|0)==($132|0);
   if ($133) {
    $134 = HEAP32[$$lcssa>>2]|0;
    $135 = ((($134)) + 36|0);
    $136 = HEAP32[$135>>2]|0;
    $137 = (FUNCTION_TABLE_ii[$136 & 63]($$lcssa)|0);
    $$0$i$i$i$i = $137;
   } else {
    $138 = HEAP32[$130>>2]|0;
    $$0$i$i$i$i = $138;
   }
   $139 = ($$0$i$i$i$i|0)==(-1);
   if ($139) {
    HEAP32[$__b>>2] = 0;
    $163 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $163 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $140 = ($$pre$i3$i$i$lcssa|0)==(0|0);
 do {
  if ($140) {
   label = 72;
  } else {
   $141 = ((($$pre$i3$i$i$lcssa)) + 12|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = ((($$pre$i3$i$i$lcssa)) + 16|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = ($142|0)==($144|0);
   if ($145) {
    $146 = HEAP32[$$pre$i3$i$i$lcssa>>2]|0;
    $147 = ((($146)) + 36|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = (FUNCTION_TABLE_ii[$148 & 63]($$pre$i3$i$i$lcssa)|0);
    $$0$i$i1$i$i = $149;
   } else {
    $150 = HEAP32[$142>>2]|0;
    $$0$i$i1$i$i = $150;
   }
   $151 = ($$0$i$i1$i$i|0)==(-1);
   if ($151) {
    HEAP32[$__e>>2] = 0;
    label = 72;
    break;
   } else {
    if ($163) {
     break;
    } else {
     label = 74;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 72) {
  if ($163) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $152 = HEAP32[$__err>>2]|0;
  $153 = $152 | 2;
  HEAP32[$__err>>2] = $153;
 }
 $154 = ($__kb|0)==($__ke|0);
 L107: do {
  if ($154) {
   label = 78;
  } else {
   $$033 = $__kb;$__st$332 = $__status$0;
   while(1) {
    $155 = HEAP8[$__st$332>>0]|0;
    $156 = ($155<<24>>24)==(2);
    if ($156) {
     $$025 = $$033;
     break L107;
    }
    $157 = ((($$033)) + 12|0);
    $158 = ((($__st$332)) + 1|0);
    $159 = ($157|0)==($__ke|0);
    if ($159) {
     label = 78;
     break;
    } else {
     $$033 = $157;$__st$332 = $158;
    }
   }
  }
 } while(0);
 if ((label|0) == 78) {
  $160 = HEAP32[$__err>>2]|0;
  $161 = $160 | 4;
  HEAP32[$__err>>2] = $161;
  $$025 = $__ke;
 }
 _free($162);
 STACKTOP = sp;return ($$025|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0;
 var $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$135 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$135 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$135 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($135) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($135) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $107 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $107 = $99;
  } else {
   $107 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 $102 = tempRet0;
 $103 = $__v;
 $104 = $103;
 HEAP32[$104>>2] = $101;
 $105 = (($103) + 4)|0;
 $106 = $105;
 HEAP32[$106>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$107,$__err);
 $108 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($108) {
  $137 = 1;
 } else {
  $109 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = ($110|0)==($112|0);
  if ($113) {
   $114 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $115 = ((($114)) + 36|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $117;
  } else {
   $118 = HEAP32[$110>>2]|0;
   $$0$i$i$i$i = $118;
  }
  $119 = ($$0$i$i$i$i|0)==(-1);
  if ($119) {
   HEAP32[$__b>>2] = 0;
   $137 = 1;
  } else {
   $137 = 0;
  }
 }
 $120 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($120) {
   label = 44;
  } else {
   $121 = ((($$pre$i3$i$i)) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ((($$pre$i3$i$i)) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122|0)==($124|0);
   if ($125) {
    $126 = HEAP32[$$pre$i3$i$i>>2]|0;
    $127 = ((($126)) + 36|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = (FUNCTION_TABLE_ii[$128 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $129;
   } else {
    $130 = HEAP32[$122>>2]|0;
    $$0$i$i1$i$i = $130;
   }
   $131 = ($$0$i$i1$i$i|0)==(-1);
   if ($131) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($137) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($137) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $132 = HEAP32[$__err>>2]|0;
  $133 = $132 | 2;
  HEAP32[$__err>>2] = $133;
 }
 $134 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($134|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP16[$__v>>1] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$130 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$130 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($130) {
      $131 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $131 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $131;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $102 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $102 = $99;
  } else {
   $102 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 HEAP32[$__v>>2] = $101;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$102,$__err);
 $103 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($103) {
  $132 = 1;
 } else {
  $104 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($105|0)==($107|0);
  if ($108) {
   $109 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $110 = ((($109)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (FUNCTION_TABLE_ii[$111 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $112;
  } else {
   $113 = HEAP32[$105>>2]|0;
   $$0$i$i$i$i = $113;
  }
  $114 = ($$0$i$i$i$i|0)==(-1);
  if ($114) {
   HEAP32[$__b>>2] = 0;
   $132 = 1;
  } else {
   $132 = 0;
  }
 }
 $115 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($115) {
   label = 44;
  } else {
   $116 = ((($$pre$i3$i$i)) + 12|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($$pre$i3$i$i)) + 16|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($117|0)==($119|0);
   if ($120) {
    $121 = HEAP32[$$pre$i3$i$i>>2]|0;
    $122 = ((($121)) + 36|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_ii[$123 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $124;
   } else {
    $125 = HEAP32[$117>>2]|0;
    $$0$i$i1$i$i = $125;
   }
   $126 = ($$0$i$i1$i$i|0)==(-1);
   if ($126) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($132) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($132) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $127 = HEAP32[$__err>>2]|0;
  $128 = $127 | 2;
  HEAP32[$__err>>2] = $128;
 }
 $129 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($129|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0;
 var $phitmp$i = 0, $phitmp$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$8,0);
 $9 = HEAP8[$__buf>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($__buf)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($__buf)) + 1|0);
 $15 = $11 ? $14 : $13;
 HEAP32[$__a_end>>2] = $15;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $16 = ((($__buf)) + 4|0);
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i3 = $$pre;$__a$0 = $15;
 L4: while(1) {
  $18 = ($$pre$i$i$i3|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$135 = 1;
  } else {
   $19 = ((($$pre$i$i$i3)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i3)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i3>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i3)|0);
    $$0$i$i$i$i1 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i1 = $28;
   }
   $29 = ($$0$i$i$i$i1|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$135 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;$135 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i7 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i7 = $41;
    }
    $42 = ($$0$i$i1$i$i7|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($135) {
      $136 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($135) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $136 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$16>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i16 = (($58) + -1)|0;
    $59 = $phitmp$i16;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$12>>2]|0;
   $64 = $62 ? $14 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$17,$__grouping,$__g,$__g_end,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $136;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i3 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $$pre21 = HEAP32[$__g_end>>2]|0;
 if ($93) {
  $107 = $$pre21;
 } else {
  $94 = $$pre21;
  $95 = $__g;
  $96 = (($94) - ($95))|0;
  $97 = ($96|0)<(160);
  if ($97) {
   $98 = HEAP32[$__dc>>2]|0;
   $99 = ((($$pre21)) + 4|0);
   HEAP32[$__g_end>>2] = $99;
   HEAP32[$$pre21>>2] = $98;
   $107 = $99;
  } else {
   $107 = $$pre21;
  }
 }
 $100 = HEAP32[$__a_end>>2]|0;
 $101 = (__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2,$100,$__err,$0)|0);
 $102 = tempRet0;
 $103 = $__v;
 $104 = $103;
 HEAP32[$104>>2] = $101;
 $105 = (($103) + 4)|0;
 $106 = $105;
 HEAP32[$106>>2] = $102;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$107,$__err);
 $108 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($108) {
  $137 = 1;
 } else {
  $109 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = ($110|0)==($112|0);
  if ($113) {
   $114 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $115 = ((($114)) + 36|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $117;
  } else {
   $118 = HEAP32[$110>>2]|0;
   $$0$i$i$i$i = $118;
  }
  $119 = ($$0$i$i$i$i|0)==(-1);
  if ($119) {
   HEAP32[$__b>>2] = 0;
   $137 = 1;
  } else {
   $137 = 0;
  }
 }
 $120 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($120) {
   label = 44;
  } else {
   $121 = ((($$pre$i3$i$i)) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ((($$pre$i3$i$i)) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122|0)==($124|0);
   if ($125) {
    $126 = HEAP32[$$pre$i3$i$i>>2]|0;
    $127 = ((($126)) + 36|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = (FUNCTION_TABLE_ii[$128 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $129;
   } else {
    $130 = HEAP32[$122>>2]|0;
    $$0$i$i1$i$i = $130;
   }
   $131 = ($$0$i$i1$i$i|0)==(-1);
   if ($131) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($137) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($137) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $132 = HEAP32[$__err>>2]|0;
  $133 = $132 | 2;
  HEAP32[$__err>>2] = $133;
 }
 $134 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($134|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF32[$__v>>2] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF64[$__v>>3] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0;
 var $or$cond = 0, $phitmp$i = 0, $phitmp$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$7,0);
 $8 = HEAP8[$__buf>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)==(0);
 $11 = ((($__buf)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__buf)) + 1|0);
 $14 = $10 ? $13 : $12;
 HEAP32[$__a_end>>2] = $14;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 HEAP8[$__in_units>>0] = 1;
 HEAP8[$__exp>>0] = 69;
 $15 = ((($__buf)) + 4|0);
 $16 = HEAP32[$__decimal_point>>2]|0;
 $17 = HEAP32[$__thousands_sep>>2]|0;
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i4 = $$pre;$__a$0 = $14;
 L4: while(1) {
  $18 = ($$pre$i$i$i4|0)==(0|0);
  if ($18) {
   $$pre$i$i$i = 0;$132 = 1;
  } else {
   $19 = ((($$pre$i$i$i4)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($$pre$i$i$i4)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$$pre$i$i$i4>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 63]($$pre$i$i$i4)|0);
    $$0$i$i$i$i2 = $27;
   } else {
    $28 = HEAP32[$20>>2]|0;
    $$0$i$i$i$i2 = $28;
   }
   $29 = ($$0$i$i$i$i2|0)==(-1);
   if ($29) {
    HEAP32[$__b>>2] = 0;
    $$pre$i$i$i = 0;$132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;$132 = 0;
   }
  }
  $30 = HEAP32[$__e>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    label = 16;
   } else {
    $32 = ((($30)) + 12|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($30)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33|0)==($35|0);
    if ($36) {
     $37 = HEAP32[$30>>2]|0;
     $38 = ((($37)) + 36|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (FUNCTION_TABLE_ii[$39 & 63]($30)|0);
     $$0$i$i1$i$i8 = $40;
    } else {
     $41 = HEAP32[$33>>2]|0;
     $$0$i$i1$i$i8 = $41;
    }
    $42 = ($$0$i$i1$i$i8|0)==(-1);
    if ($42) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($132) {
      $133 = $30;
      break;
     } else {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $30;$__a$2 = $__a$0;
      break L4;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $133 = 0;
   }
  }
  $43 = HEAP32[$__a_end>>2]|0;
  $44 = HEAP8[$__buf>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  $47 = HEAP32[$15>>2]|0;
  $48 = $44&255;
  $49 = $48 >>> 1;
  $50 = $46 ? $49 : $47;
  $51 = (($__a$0) + ($50)|0);
  $52 = ($43|0)==($51|0);
  if ($52) {
   $53 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$53,0);
   $54 = HEAP8[$__buf>>0]|0;
   $55 = $54 & 1;
   $56 = ($55<<24>>24)==(0);
   if ($56) {
    $59 = 10;
   } else {
    $57 = HEAP32[$__buf>>2]|0;
    $58 = $57 & -2;
    $phitmp$i17 = (($58) + -1)|0;
    $59 = $phitmp$i17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$59,0);
   $60 = HEAP8[$__buf>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)==(0);
   $63 = HEAP32[$11>>2]|0;
   $64 = $62 ? $13 : $63;
   $65 = (($64) + ($50)|0);
   HEAP32[$__a_end>>2] = $65;
   $__a$1 = $64;
  } else {
   $__a$1 = $__a$0;
  }
  $66 = ((($$pre$i$i$i)) + 12|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($$pre$i$i$i)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$$pre$i$i$i>>2]|0;
   $72 = ((($71)) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 63]($$pre$i$i$i)|0);
   $$0$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$16,$17,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $133;$__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$$pre$i$i$i>>2]|0;
   $82 = ((($81)) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 63]($$pre$i$i$i)|0);
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  } else {
   $84 = ((($78)) + 4|0);
   HEAP32[$66>>2] = $84;
   $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 $88 = ((($__grouping)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $85&255;
 $91 = $90 >>> 1;
 $92 = $87 ? $91 : $89;
 $93 = ($92|0)==(0);
 $94 = HEAP8[$__in_units>>0]|0;
 $95 = ($94<<24>>24)==(0);
 $or$cond = $95 | $93;
 $$pre22 = HEAP32[$__g_end>>2]|0;
 if ($or$cond) {
  $104 = $$pre22;
 } else {
  $96 = $$pre22;
  $97 = $__g;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc>>2]|0;
   $101 = ((($$pre22)) + 4|0);
   HEAP32[$__g_end>>2] = $101;
   HEAP32[$$pre22>>2] = $100;
   $104 = $101;
  } else {
   $104 = $$pre22;
  }
 }
 $102 = HEAP32[$__a_end>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2,$102,$__err));
 HEAPF64[$__v>>3] = $103;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$104,$__err);
 $105 = ($$pre$i$i$i$lcssa|0)==(0|0);
 if ($105) {
  $134 = 1;
 } else {
  $106 = ((($$pre$i$i$i$lcssa)) + 12|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($$pre$i$i$i$lcssa)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($107|0)==($109|0);
  if ($110) {
   $111 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
   $112 = ((($111)) + 36|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_ii[$113 & 63]($$pre$i$i$i$lcssa)|0);
   $$0$i$i$i$i = $114;
  } else {
   $115 = HEAP32[$107>>2]|0;
   $$0$i$i$i$i = $115;
  }
  $116 = ($$0$i$i$i$i|0)==(-1);
  if ($116) {
   HEAP32[$__b>>2] = 0;
   $134 = 1;
  } else {
   $134 = 0;
  }
 }
 $117 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 44;
  } else {
   $118 = ((($$pre$i3$i$i)) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ((($$pre$i3$i$i)) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if ($122) {
    $123 = HEAP32[$$pre$i3$i$i>>2]|0;
    $124 = ((($123)) + 36|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 63]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $126;
   } else {
    $127 = HEAP32[$119>>2]|0;
    $$0$i$i1$i$i = $127;
   }
   $128 = ($$0$i$i1$i$i|0)==(-1);
   if ($128) {
    HEAP32[$__e>>2] = 0;
    label = 44;
    break;
   } else {
    if ($134) {
     break;
    } else {
     label = 46;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  if ($134) {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $129 = HEAP32[$__err>>2]|0;
  $130 = $129 | 2;
  HEAP32[$__err>>2] = $130;
 }
 $131 = HEAP32[$__b>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;return ($131|0);
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vasprintf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  (_uselocale(($0|0))|0);
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$sroa$0$1 = 0;
  } else {
   $2 = $__oe;
   $3 = $__ob;
   $4 = (($2) - ($3))|0;
   $5 = $4 >> 2;
   $6 = ((($__iob)) + 12|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)>($5|0);
   $9 = (($7) - ($5))|0;
   $__ns$0 = $8 ? $9 : 0;
   $10 = $__op;
   $11 = (($10) - ($3))|0;
   $12 = $11 >> 2;
   $13 = ($11|0)>(0);
   if ($13) {
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 31]($0,$__ob,$12)|0);
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   $19 = ($__ns$0|0)>(0);
   do {
    if ($19) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
     $20 = HEAP8[$__sp>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     $23 = ((($__sp)) + 8|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($__sp)) + 4|0);
     $26 = $22 ? $25 : $24;
     $27 = HEAP32[$0>>2]|0;
     $28 = ((($27)) + 48|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = (FUNCTION_TABLE_iiii[$29 & 31]($0,$26,$__ns$0)|0);
     $31 = ($30|0)==($__ns$0|0);
     if ($31) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break;
     } else {
      HEAP32[$__s>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      $$sroa$0$1 = 0;
      break L1;
     }
    }
   } while(0);
   $32 = (($2) - ($10))|0;
   $33 = $32 >> 2;
   $34 = ($32|0)>(0);
   if ($34) {
    $35 = HEAP32[$0>>2]|0;
    $36 = ((($35)) + 48|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (FUNCTION_TABLE_iiii[$37 & 31]($0,$__op,$33)|0);
    $39 = ($38|0)==($33|0);
    if (!($39)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   HEAP32[$6>>2] = 0;
   $$sroa$0$1 = $0;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$1|0);
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $isascii1$i = 0, $isascii1$i12 = 0, $sext = 0, $sext24 = 0, $tmp$i$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 63]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $157 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $157 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $isascii1$i = ($40<<24>>24)>(-1);
   if ($isascii1$i) {
    $sext = $$0$i$i << 24;
    $41 = $sext >> 24;
    $42 = ((($__ct)) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (($43) + ($41<<1)|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 & 2048;
    $47 = ($46<<16>>16)==(0);
    if (!($47)) {
     $50 = HEAP32[$__ct>>2]|0;
     $51 = ((($50)) + 36|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (FUNCTION_TABLE_iiii[$52 & 31]($__ct,$40,0)|0);
     $54 = $53 << 24 >> 24;
     $55 = HEAP32[$__b>>2]|0;
     $56 = ((($55)) + 12|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ((($55)) + 16|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($57|0)==($59|0);
     if ($60) {
      $61 = HEAP32[$55>>2]|0;
      $62 = ((($61)) + 40|0);
      $63 = HEAP32[$62>>2]|0;
      (FUNCTION_TABLE_ii[$63 & 63]($55)|0);
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     } else {
      $64 = ((($57)) + 1|0);
      HEAP32[$56>>2] = $64;
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     }
     while(1) {
      $__r$0 = (($__r$0$in) + -48)|0;
      $$0 = (($$0$in) + -1)|0;
      $65 = HEAP32[$__b>>2]|0;
      $66 = ($65|0)==(0|0);
      do {
       if ($66) {
        $77 = 0;
       } else {
        $67 = ((($65)) + 12|0);
        $68 = HEAP32[$67>>2]|0;
        $69 = ((($65)) + 16|0);
        $70 = HEAP32[$69>>2]|0;
        $71 = ($68|0)==($70|0);
        if ($71) {
         $72 = HEAP32[$65>>2]|0;
         $73 = ((($72)) + 36|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (FUNCTION_TABLE_ii[$74 & 63]($65)|0);
         $76 = ($75|0)==(-1);
         if ($76) {
          HEAP32[$__b>>2] = 0;
          $77 = 0;
          break;
         } else {
          $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
          $77 = $$pre$i$i$i3;
          break;
         }
        } else {
         $77 = $65;
        }
       }
      } while(0);
      $78 = ($77|0)==(0|0);
      $80 = ($79|0)==(0|0);
      if ($80) {
       $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = 0;
      } else {
       $81 = ((($79)) + 12|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ((($79)) + 16|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($82|0)==($84|0);
       if ($85) {
        $86 = HEAP32[$79>>2]|0;
        $87 = ((($86)) + 36|0);
        $88 = HEAP32[$87>>2]|0;
        $89 = (FUNCTION_TABLE_ii[$88 & 63]($79)|0);
        $90 = ($89|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i20 = 0;$91 = 0;
        } else {
         $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $$pre$i2$i$i7;
        }
       } else {
        $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $79;
       }
      }
      $92 = ($91|0)==(0|0);
      $tmp$i$i9 = $78 ^ $92;
      $93 = ($$0$in|0)>(1);
      $94 = $93 & $tmp$i$i9;
      $95 = HEAP32[$__b>>2]|0;
      if (!($94)) {
       $$lcssa = $95;$$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;$__r$0$lcssa = $__r$0;
       break;
      }
      $96 = ((($95)) + 12|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = ((($95)) + 16|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = ($97|0)==($99|0);
      if ($100) {
       $101 = HEAP32[$95>>2]|0;
       $102 = ((($101)) + 36|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = (FUNCTION_TABLE_ii[$103 & 63]($95)|0);
       $$0$i$i10 = $104;
      } else {
       $105 = HEAP8[$97>>0]|0;
       $106 = $105&255;
       $$0$i$i10 = $106;
      }
      $107 = $$0$i$i10&255;
      $isascii1$i12 = ($107<<24>>24)>(-1);
      if (!($isascii1$i12)) {
       $$01 = $__r$0;
       break L16;
      }
      $sext24 = $$0$i$i10 << 24;
      $108 = $sext24 >> 24;
      $109 = HEAP32[$42>>2]|0;
      $110 = (($109) + ($108<<1)|0);
      $111 = HEAP16[$110>>1]|0;
      $112 = $111 & 2048;
      $113 = ($112<<16>>16)==(0);
      if ($113) {
       $$01 = $__r$0;
       break L16;
      }
      $114 = ($__r$0*10)|0;
      $115 = HEAP32[$__ct>>2]|0;
      $116 = ((($115)) + 36|0);
      $117 = HEAP32[$116>>2]|0;
      $118 = (FUNCTION_TABLE_iiii[$117 & 31]($__ct,$107,0)|0);
      $119 = $118 << 24 >> 24;
      $120 = (($119) + ($114))|0;
      $121 = HEAP32[$__b>>2]|0;
      $122 = ((($121)) + 12|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = ((($121)) + 16|0);
      $125 = HEAP32[$124>>2]|0;
      $126 = ($123|0)==($125|0);
      if ($126) {
       $127 = HEAP32[$121>>2]|0;
       $128 = ((($127)) + 40|0);
       $129 = HEAP32[$128>>2]|0;
       (FUNCTION_TABLE_ii[$129 & 63]($121)|0);
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      } else {
       $130 = ((($123)) + 1|0);
       HEAP32[$122>>2] = $130;
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      }
     }
     $131 = ($$lcssa|0)==(0|0);
     do {
      if ($131) {
       $142 = 0;
      } else {
       $132 = ((($$lcssa)) + 12|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ((($$lcssa)) + 16|0);
       $135 = HEAP32[$134>>2]|0;
       $136 = ($133|0)==($135|0);
       if ($136) {
        $137 = HEAP32[$$lcssa>>2]|0;
        $138 = ((($137)) + 36|0);
        $139 = HEAP32[$138>>2]|0;
        $140 = (FUNCTION_TABLE_ii[$139 & 63]($$lcssa)|0);
        $141 = ($140|0)==(-1);
        if ($141) {
         HEAP32[$__b>>2] = 0;
         $142 = 0;
         break;
        } else {
         $$pre$i$i$i16 = HEAP32[$__b>>2]|0;
         $142 = $$pre$i$i$i16;
         break;
        }
       } else {
        $142 = $$lcssa;
       }
      }
     } while(0);
     $143 = ($142|0)==(0|0);
     $144 = ($$pre$i2$i$i20$lcssa|0)==(0|0);
     do {
      if ($144) {
       label = 50;
      } else {
       $145 = ((($$pre$i2$i$i20$lcssa)) + 12|0);
       $146 = HEAP32[$145>>2]|0;
       $147 = ((($$pre$i2$i$i20$lcssa)) + 16|0);
       $148 = HEAP32[$147>>2]|0;
       $149 = ($146|0)==($148|0);
       if ($149) {
        $150 = HEAP32[$$pre$i2$i$i20$lcssa>>2]|0;
        $151 = ((($150)) + 36|0);
        $152 = HEAP32[$151>>2]|0;
        $153 = (FUNCTION_TABLE_ii[$152 & 63]($$pre$i2$i$i20$lcssa)|0);
        $154 = ($153|0)==(-1);
        if ($154) {
         HEAP32[$__e>>2] = 0;
         label = 50;
         break;
        }
       }
       if ($143) {
        $$01 = $__r$0$lcssa;
        break L16;
       }
      }
     } while(0);
     if ((label|0) == 50) {
      if (!($143)) {
       $$01 = $__r$0$lcssa;
       break;
      }
     }
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $48 = HEAP32[$__err>>2]|0;
   $49 = $48 | 4;
   HEAP32[$__err>>2] = $49;
   $$01 = 0;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i19 = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i20 = 0, $phitmp$i$i$i5 = 0, $phitmp$i4$i$i11 = 0, $tmp$i$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $148 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 63]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $148 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $148 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 63]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($148) {
     $149 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($148) {
   label = 16;
  } else {
   $149 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 63]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 31]($__ct,2048,$$0$i$i)|0);
   if (!($42)) {
    $43 = HEAP32[$__err>>2]|0;
    $44 = $43 | 4;
    HEAP32[$__err>>2] = $44;
    $$01 = 0;
    break;
   }
   $45 = HEAP32[$__ct>>2]|0;
   $46 = ((($45)) + 52|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_iiii[$47 & 31]($__ct,$$0$i$i,0)|0);
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$__b>>2]|0;
   $51 = ((($50)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($50)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = ((($56)) + 40|0);
    $58 = HEAP32[$57>>2]|0;
    (FUNCTION_TABLE_ii[$58 & 63]($50)|0);
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   } else {
    $59 = ((($52)) + 4|0);
    HEAP32[$51>>2] = $59;
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   }
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $60 = HEAP32[$__b>>2]|0;
    $61 = ($60|0)==(0|0);
    do {
     if ($61) {
      $87 = 1;
     } else {
      $62 = ((($60)) + 12|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ((($60)) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($63|0)==($65|0);
      if ($66) {
       $67 = HEAP32[$60>>2]|0;
       $68 = ((($67)) + 36|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = (FUNCTION_TABLE_ii[$69 & 63]($60)|0);
       $$0$i$i$i$i2 = $70;
      } else {
       $71 = HEAP32[$63>>2]|0;
       $$0$i$i$i$i2 = $71;
      }
      $72 = ($$0$i$i$i$i2|0)==(-1);
      if ($72) {
       HEAP32[$__b>>2] = 0;
       $87 = 1;
       break;
      } else {
       $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i5 = ($$pre$i$i$i4|0)==(0|0);
       $87 = $phitmp$i$i$i5;
       break;
      }
     }
    } while(0);
    $74 = ($73|0)==(0|0);
    do {
     if ($74) {
      $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = 0;$86 = 1;
     } else {
      $75 = ((($73)) + 12|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ((($73)) + 16|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($76|0)==($78|0);
      if ($79) {
       $80 = HEAP32[$73>>2]|0;
       $81 = ((($80)) + 36|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (FUNCTION_TABLE_ii[$82 & 63]($73)|0);
       $$0$i$i1$i$i8 = $83;
      } else {
       $84 = HEAP32[$76>>2]|0;
       $$0$i$i1$i$i8 = $84;
      }
      $85 = ($$0$i$i1$i$i8|0)==(-1);
      if ($85) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i25 = 0;$150 = 0;$86 = 1;
       break;
      } else {
       $phitmp$i4$i$i11 = ($$pre$i3$i$i10|0)==(0|0);
       $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = $$pre$i3$i$i10;$86 = $phitmp$i4$i$i11;
       break;
      }
     }
    } while(0);
    $tmp$i$i13 = $87 ^ $86;
    $88 = ($$0$in|0)>(1);
    $89 = $88 & $tmp$i$i13;
    $90 = HEAP32[$__b>>2]|0;
    if (!($89)) {
     $$lcssa = $90;$$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;$__r$0$lcssa = $__r$0;
     break;
    }
    $91 = ((($90)) + 12|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ((($90)) + 16|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = ($92|0)==($94|0);
    if ($95) {
     $96 = HEAP32[$90>>2]|0;
     $97 = ((($96)) + 36|0);
     $98 = HEAP32[$97>>2]|0;
     $99 = (FUNCTION_TABLE_ii[$98 & 63]($90)|0);
     $$0$i$i14 = $99;
    } else {
     $100 = HEAP32[$92>>2]|0;
     $$0$i$i14 = $100;
    }
    $101 = HEAP32[$__ct>>2]|0;
    $102 = ((($101)) + 12|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = (FUNCTION_TABLE_iiii[$103 & 31]($__ct,2048,$$0$i$i14)|0);
    if (!($104)) {
     $$01 = $__r$0;
     break L22;
    }
    $105 = ($__r$0*10)|0;
    $106 = HEAP32[$__ct>>2]|0;
    $107 = ((($106)) + 52|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = (FUNCTION_TABLE_iiii[$108 & 31]($__ct,$$0$i$i14,0)|0);
    $110 = $109 << 24 >> 24;
    $111 = (($110) + ($105))|0;
    $112 = HEAP32[$__b>>2]|0;
    $113 = ((($112)) + 12|0);
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($112)) + 16|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ($114|0)==($116|0);
    if ($117) {
     $118 = HEAP32[$112>>2]|0;
     $119 = ((($118)) + 40|0);
     $120 = HEAP32[$119>>2]|0;
     (FUNCTION_TABLE_ii[$120 & 63]($112)|0);
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    } else {
     $121 = ((($114)) + 4|0);
     HEAP32[$113>>2] = $121;
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    }
   }
   $122 = ($$lcssa|0)==(0|0);
   do {
    if ($122) {
     $151 = 1;
    } else {
     $123 = ((($$lcssa)) + 12|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($$lcssa)) + 16|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ($124|0)==($126|0);
     if ($127) {
      $128 = HEAP32[$$lcssa>>2]|0;
      $129 = ((($128)) + 36|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = (FUNCTION_TABLE_ii[$130 & 63]($$lcssa)|0);
      $$0$i$i$i$i17 = $131;
     } else {
      $132 = HEAP32[$124>>2]|0;
      $$0$i$i$i$i17 = $132;
     }
     $133 = ($$0$i$i$i$i17|0)==(-1);
     if ($133) {
      HEAP32[$__b>>2] = 0;
      $151 = 1;
      break;
     } else {
      $$pre$i$i$i19 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i20 = ($$pre$i$i$i19|0)==(0|0);
      $151 = $phitmp$i$i$i20;
      break;
     }
    }
   } while(0);
   $134 = ($$pre$i3$i$i25$lcssa|0)==(0|0);
   do {
    if ($134) {
     label = 60;
    } else {
     $135 = ((($$pre$i3$i$i25$lcssa)) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ((($$pre$i3$i$i25$lcssa)) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$pre$i3$i$i25$lcssa>>2]|0;
      $141 = ((($140)) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = (FUNCTION_TABLE_ii[$142 & 63]($$pre$i3$i$i25$lcssa)|0);
      $$0$i$i1$i$i23 = $143;
     } else {
      $144 = HEAP32[$136>>2]|0;
      $$0$i$i1$i$i23 = $144;
     }
     $145 = ($$0$i$i1$i$i23|0)==(-1);
     if ($145) {
      HEAP32[$__e>>2] = 0;
      label = 60;
      break;
     } else {
      if ($151) {
       $$01 = $__r$0$lcssa;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 60) {
    if (!($151)) {
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $146 = HEAP32[$__err>>2]|0;
   $147 = $146 | 2;
   HEAP32[$__err>>2] = $147;
   $$01 = $__r$0$lcssa;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $2 ? $4 : 0;
 $14 = (_realloc($13,$$)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $16 = $14;
  HEAP32[$__b>>2] = $16;
  $21 = $14;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $17 = $14;
  HEAP32[$__b>>2] = $17;
  $18 = ($$pr|0)==(0|0);
  if ($18) {
   $21 = $14;
  } else {
   $19 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$19 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $21 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $20 = (($21) + ($12)|0);
 HEAP32[$__n>>2] = $20;
 $22 = HEAP32[$__b>>2]|0;
 $23 = (($22) + ($$)|0);
 HEAP32[$__e>>2] = $23;
 return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $17 = $15;
  HEAP32[$__b>>2] = $17;
  $23 = $15;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $18 = $15;
  HEAP32[$__b>>2] = $18;
  $19 = ($$pr|0)==(0|0);
  if ($19) {
   $23 = $15;
  } else {
   $20 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$20 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $23 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $21 = $$ >>> 2;
 $22 = (($23) + ($13<<2)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($21<<2)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = $5;$16 = 10;$41 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $7;$16 = $phitmp$i;$41 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($16) - ($15))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($15) + ($12))|0;
    $19 = (($18) - ($16))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $41;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = ((($this)) + 1|0);
    $29 = $25;
   } else {
    $23 = ((($this)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $29 = $24;
   }
   $26 = (($15) - ($0))|0;
   $scevgep = (($__last) + ($26)|0);
   $scevgep1 = $scevgep;
   $27 = ($__first|0)==($__last|0);
   if (!($27)) {
    $28 = (($29) + ($15)|0);
    $$03 = $__first;$__p$04 = $28;
    while(1) {
     $30 = HEAP8[$$03>>0]|0;
     HEAP8[$__p$04>>0] = $30;
     $31 = ((($__p$04)) + 1|0);
     $32 = ((($$03)) + 1|0);
     $33 = ($32|0)==($__last|0);
     if ($33) {
      break;
     } else {
      $$03 = $32;$__p$04 = $31;
     }
    }
   }
   $scevgep2 = (($29) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $34 = (($15) + ($12))|0;
   $35 = HEAP8[$this>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $39 = $34 << 1;
    $40 = $39&255;
    HEAP8[$this>>0] = $40;
    break;
   } else {
    $38 = ((($this)) + 4|0);
    HEAP32[$38>>2] = $34;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(107|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($2) {
  $17 = $15;
  HEAP32[$__b>>2] = $17;
  $23 = $15;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  $18 = $15;
  HEAP32[$__b>>2] = $18;
  $19 = ($$pr|0)==(0|0);
  if ($19) {
   $23 = $15;
  } else {
   $20 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$20 & 127]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $23 = $$pre;
  }
 }
 HEAP32[$0>>2] = (110);
 $21 = $$ >>> 2;
 $22 = (($23) + ($13<<2)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($21<<2)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $16 = $5;$17 = 1;$45 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $16 = $7;$17 = $phitmp$i;$45 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = $12 >> 2;
 $14 = ($13|0)==(0);
 do {
  if (!($14)) {
   $15 = (($17) - ($16))|0;
   $18 = ($15>>>0)<($13>>>0);
   if ($18) {
    $19 = (($16) + ($13))|0;
    $20 = (($19) - ($17))|0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$17,$20,$16,$16,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $22 = $$pre;
   } else {
    $22 = $45;
   }
   $21 = $22 & 1;
   $23 = ($21<<24>>24)==(0);
   if ($23) {
    $26 = ((($this)) + 4|0);
    $33 = $26;
   } else {
    $24 = ((($this)) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $33 = $25;
   }
   $27 = $__last;
   $28 = (($27) - ($0))|0;
   $29 = $28 >>> 2;
   $30 = (($16) + ($29))|0;
   $31 = ($__first|0)==($__last|0);
   if (!($31)) {
    $32 = (($33) + ($16<<2)|0);
    $$03 = $__first;$__p$04 = $32;
    while(1) {
     $34 = HEAP32[$$03>>2]|0;
     HEAP32[$__p$04>>2] = $34;
     $35 = ((($__p$04)) + 4|0);
     $36 = ((($$03)) + 4|0);
     $37 = ($36|0)==($__last|0);
     if ($37) {
      break;
     } else {
      $$03 = $36;$__p$04 = $35;
     }
    }
   }
   $scevgep = (($33) + ($30<<2)|0);
   HEAP32[$scevgep>>2] = 0;
   $38 = (($16) + ($13))|0;
   $39 = HEAP8[$this>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $43 = $38 << 1;
    $44 = $43&255;
    HEAP8[$this>>0] = $44;
    break;
   } else {
    $42 = ((($this)) + 4|0);
    HEAP32[$42>>2] = $38;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 if (!($3)) {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5120)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5160)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6272)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6264)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6336)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6344)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6400)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6408)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6416)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6424)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5232)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5344)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5408)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5472)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5792)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5856)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5920)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5984)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6024)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6064)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6104)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6144)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5568)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5664)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5696)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5728)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6184)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6224)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$8);
 } else {
  $9 = ($6>>>0)>($__sz>>>0);
  if ($9) {
   $10 = (($2) + ($__sz<<2)|0);
   $11 = ($1|0)==($10|0);
   if (!($11)) {
    $13 = $1;
    while(1) {
     $12 = ((($13)) + -4|0);
     $14 = ($12|0)==($10|0);
     if ($14) {
      $$lcssa = $12;
      break;
     } else {
      $13 = $12;
     }
    }
    HEAP32[$0>>2] = $$lcssa;
   }
  }
 }
 return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if (!($1)) {
   $2 = ((($this)) + 4|0);
   $$pre$i$i = HEAP32[$2>>2]|0;
   $3 = ($$pre$i$i|0)==($0|0);
   if (!($3)) {
    $5 = $$pre$i$i;
    while(1) {
     $4 = ((($5)) + -4|0);
     $6 = ($4|0)==($0|0);
     if ($6) {
      $$lcssa = $4;
      break;
     } else {
      $5 = $4;
     }
    }
    HEAP32[$2>>2] = $$lcssa;
   }
   $7 = ((($this)) + 16|0);
   $8 = ($7|0)==($0|0);
   if ($8) {
    $9 = ((($this)) + 128|0);
    HEAP8[$9>>0] = 0;
    break;
   } else {
    __ZdlPv($0);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__vp)) + 4|0);
 $$field = HEAP32[$0>>2]|0;
 $$index1 = ((($0)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $1 = HEAP32[$__vp>>2]|0;
 $2 = $$field2 >> 1;
 $3 = (($1) + ($2)|0);
 $4 = $$field2 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $9 = $$field;
  $10 = $9;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (($6) + ($$field)|0);
  $8 = HEAP32[$7>>2]|0;
  $10 = $8;
 }
 FUNCTION_TABLE_vi[$10 & 127]($3);
 return;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $10 = $frm_end;
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $11 = ($$pre>>>0)<($frm_end>>>0);
   if ($11) {
    $13 = $$pre;
    while(1) {
     $12 = HEAP16[$13>>1]|0;
     $14 = $12&65535;
     $15 = ($14>>>0)>($Maxcode>>>0);
     if ($15) {
      $$0 = 2;
      break L4;
     }
     $16 = ($12&65535)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $12&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($12&65535)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $14 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $14 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($12&65535)<(55296);
       if ($37) {
        $38 = HEAP32[$to_nxt>>2]|0;
        $39 = $38;
        $40 = (($$pre1) - ($39))|0;
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $14 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $14 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $14 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       }
       $57 = ($12&65535)<(56320);
       if (!($57)) {
        $109 = ($12&65535)<(57344);
        if ($109) {
         $$0 = 2;
         break L4;
        }
        $110 = HEAP32[$to_nxt>>2]|0;
        $111 = $110;
        $112 = (($$pre1) - ($111))|0;
        $113 = ($112|0)<(3);
        if ($113) {
         $$0 = 1;
         break L4;
        }
        $114 = $14 >>> 12;
        $115 = $114 | 224;
        $116 = $115&255;
        $117 = ((($110)) + 1|0);
        HEAP32[$to_nxt>>2] = $117;
        HEAP8[$110>>0] = $116;
        $118 = $14 >>> 6;
        $119 = $118 & 63;
        $120 = $119 | 128;
        $121 = $120&255;
        $122 = HEAP32[$to_nxt>>2]|0;
        $123 = ((($122)) + 1|0);
        HEAP32[$to_nxt>>2] = $123;
        HEAP8[$122>>0] = $121;
        $124 = $14 & 63;
        $125 = $124 | 128;
        $126 = $125&255;
        $127 = HEAP32[$to_nxt>>2]|0;
        $128 = ((($127)) + 1|0);
        HEAP32[$to_nxt>>2] = $128;
        HEAP8[$127>>0] = $126;
        break;
       }
       $58 = $13;
       $59 = (($10) - ($58))|0;
       $60 = ($59|0)<(4);
       if ($60) {
        $$0 = 1;
        break L4;
       }
       $61 = ((($13)) + 2|0);
       $62 = HEAP16[$61>>1]|0;
       $63 = $62&65535;
       $64 = $63 & 64512;
       $65 = ($64|0)==(56320);
       if (!($65)) {
        $$0 = 2;
        break L4;
       }
       $66 = HEAP32[$to_nxt>>2]|0;
       $67 = $66;
       $68 = (($$pre1) - ($67))|0;
       $69 = ($68|0)<(4);
       if ($69) {
        $$0 = 1;
        break L4;
       }
       $70 = $14 & 960;
       $71 = $70 << 10;
       $72 = (($71) + 65536)|0;
       $73 = $14 << 10;
       $74 = $73 & 64512;
       $75 = $72 | $74;
       $76 = $63 & 1023;
       $77 = $75 | $76;
       $78 = ($77>>>0)>($Maxcode>>>0);
       if ($78) {
        $$0 = 2;
        break L4;
       }
       HEAP32[$frm_nxt>>2] = $61;
       $79 = $70 >>> 6;
       $80 = (($79) + 1)|0;
       $81 = $80 >>> 2;
       $82 = $81 | 240;
       $83 = $82&255;
       $84 = HEAP32[$to_nxt>>2]|0;
       $85 = ((($84)) + 1|0);
       HEAP32[$to_nxt>>2] = $85;
       HEAP8[$84>>0] = $83;
       $86 = $80 << 4;
       $87 = $86 & 48;
       $88 = $14 >>> 2;
       $89 = $88 & 15;
       $90 = $89 | $87;
       $91 = $90 | 128;
       $92 = $91&255;
       $93 = HEAP32[$to_nxt>>2]|0;
       $94 = ((($93)) + 1|0);
       HEAP32[$to_nxt>>2] = $94;
       HEAP8[$93>>0] = $92;
       $95 = $14 << 4;
       $96 = $95 & 48;
       $97 = $63 >>> 6;
       $98 = $97 & 15;
       $99 = $96 | $98;
       $100 = $99 | 128;
       $101 = $100&255;
       $102 = HEAP32[$to_nxt>>2]|0;
       $103 = ((($102)) + 1|0);
       HEAP32[$to_nxt>>2] = $103;
       HEAP8[$102>>0] = $101;
       $104 = $63 & 63;
       $105 = $104 | 128;
       $106 = $105&255;
       $107 = HEAP32[$to_nxt>>2]|0;
       $108 = ((($107)) + 1|0);
       HEAP32[$to_nxt>>2] = $108;
       HEAP8[$107>>0] = $106;
      }
     } while(0);
     $129 = HEAP32[$frm_nxt>>2]|0;
     $130 = ((($129)) + 2|0);
     HEAP32[$frm_nxt>>2] = $130;
     $131 = ($130>>>0)<($frm_end>>>0);
     if ($131) {
      $13 = $130;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 $17 = HEAP32[$frm_nxt>>2]|0;
 $18 = ($17>>>0)<($frm_end>>>0);
 $19 = ($$pre>>>0)<($to_end>>>0);
 $20 = $18 & $19;
 L9: do {
  if ($20) {
   $22 = $17;$27 = $$pre;
   while(1) {
    $21 = HEAP8[$22>>0]|0;
    $23 = $21&255;
    $24 = ($23>>>0)>($Maxcode>>>0);
    if ($24) {
     $$0 = 2;
     break L9;
    }
    $25 = ($21<<24>>24)>(-1);
    do {
     if ($25) {
      $26 = $21&255;
      HEAP16[$27>>1] = $26;
      $28 = ((($22)) + 1|0);
      HEAP32[$frm_nxt>>2] = $28;
     } else {
      $29 = ($21&255)<(194);
      if ($29) {
       $$0 = 2;
       break L9;
      }
      $30 = ($21&255)<(224);
      if ($30) {
       $31 = $22;
       $32 = (($$pre$phiZ2D) - ($31))|0;
       $33 = ($32|0)<(2);
       if ($33) {
        $$0 = 1;
        break L9;
       }
       $34 = ((($22)) + 1|0);
       $35 = HEAP8[$34>>0]|0;
       $36 = $35&255;
       $37 = $36 & 192;
       $38 = ($37|0)==(128);
       if (!($38)) {
        $$0 = 2;
        break L9;
       }
       $39 = $23 << 6;
       $40 = $39 & 1984;
       $41 = $36 & 63;
       $42 = $41 | $40;
       $43 = ($42>>>0)>($Maxcode>>>0);
       if ($43) {
        $$0 = 2;
        break L9;
       }
       $44 = $42&65535;
       HEAP16[$27>>1] = $44;
       $45 = ((($22)) + 2|0);
       HEAP32[$frm_nxt>>2] = $45;
       break;
      }
      $46 = ($21&255)<(240);
      if ($46) {
       $47 = $22;
       $48 = (($$pre$phiZ2D) - ($47))|0;
       $49 = ($48|0)<(3);
       if ($49) {
        $$0 = 1;
        break L9;
       }
       $50 = ((($22)) + 1|0);
       $51 = HEAP8[$50>>0]|0;
       $52 = ((($22)) + 2|0);
       $53 = HEAP8[$52>>0]|0;
       if ((($23|0) == 224)) {
        $54 = $51 & -32;
        $55 = ($54<<24>>24)==(-96);
        if (!($55)) {
         $$0 = 2;
         break L9;
        }
       } else if ((($23|0) == 237)) {
        $56 = $51 & -32;
        $57 = ($56<<24>>24)==(-128);
        if (!($57)) {
         $$0 = 2;
         break L9;
        }
       } else {
        $58 = $51 & -64;
        $59 = ($58<<24>>24)==(-128);
        if (!($59)) {
         $$0 = 2;
         break L9;
        }
       }
       $60 = $53&255;
       $61 = $60 & 192;
       $62 = ($61|0)==(128);
       if (!($62)) {
        $$0 = 2;
        break L9;
       }
       $63 = $23 << 12;
       $64 = $51&255;
       $65 = $64 << 6;
       $66 = $65 & 4032;
       $67 = $66 | $63;
       $68 = $60 & 63;
       $69 = $67 | $68;
       $70 = $69 & 65535;
       $71 = ($70>>>0)>($Maxcode>>>0);
       if ($71) {
        $$0 = 2;
        break L9;
       }
       $72 = $69&65535;
       HEAP16[$27>>1] = $72;
       $73 = ((($22)) + 3|0);
       HEAP32[$frm_nxt>>2] = $73;
       break;
      }
      $74 = ($21&255)<(245);
      if (!($74)) {
       $$0 = 2;
       break L9;
      }
      $75 = $22;
      $76 = (($$pre$phiZ2D) - ($75))|0;
      $77 = ($76|0)<(4);
      if ($77) {
       $$0 = 1;
       break L9;
      }
      $78 = ((($22)) + 1|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($22)) + 2|0);
      $81 = HEAP8[$80>>0]|0;
      $82 = ((($22)) + 3|0);
      $83 = HEAP8[$82>>0]|0;
      if ((($23|0) == 244)) {
       $85 = $79 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$0 = 2;
        break L9;
       }
      } else if ((($23|0) == 240)) {
       $$off = (($79) + 112)<<24>>24;
       $84 = ($$off&255)<(48);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      } else {
       $87 = $79 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$0 = 2;
        break L9;
       }
      }
      $89 = $81&255;
      $90 = $89 & 192;
      $91 = ($90|0)==(128);
      if (!($91)) {
       $$0 = 2;
       break L9;
      }
      $92 = $83&255;
      $93 = $92 & 192;
      $94 = ($93|0)==(128);
      if (!($94)) {
       $$0 = 2;
       break L9;
      }
      $95 = $27;
      $96 = (($16) - ($95))|0;
      $97 = ($96|0)<(4);
      if ($97) {
       $$0 = 1;
       break L9;
      }
      $98 = $23 & 7;
      $99 = $98 << 18;
      $100 = $79&255;
      $101 = $100 << 12;
      $102 = $101 & 258048;
      $103 = $102 | $99;
      $104 = $89 << 6;
      $105 = $104 & 4032;
      $106 = $103 | $105;
      $107 = $92 & 63;
      $108 = $106 | $107;
      $109 = ($108>>>0)>($Maxcode>>>0);
      if ($109) {
       $$0 = 2;
       break L9;
      }
      $110 = $98 << 2;
      $111 = $100 >>> 4;
      $112 = $111 & 3;
      $113 = $112 | $110;
      $114 = $113 << 6;
      $115 = (($114) + 16320)|0;
      $116 = $100 << 2;
      $117 = $116 & 60;
      $118 = $89 >>> 4;
      $119 = $118 & 3;
      $120 = $117 | $119;
      $121 = $120 | $115;
      $122 = $121 | 55296;
      $123 = $122&65535;
      HEAP16[$27>>1] = $123;
      $124 = $104 & 960;
      $125 = $107 | $124;
      $126 = $125 | 56320;
      $127 = $126&65535;
      $128 = ((($27)) + 2|0);
      HEAP32[$to_nxt>>2] = $128;
      HEAP16[$128>>1] = $127;
      $129 = HEAP32[$frm_nxt>>2]|0;
      $130 = ((($129)) + 4|0);
      HEAP32[$frm_nxt>>2] = $130;
     }
    } while(0);
    $131 = HEAP32[$to_nxt>>2]|0;
    $132 = ((($131)) + 2|0);
    HEAP32[$to_nxt>>2] = $132;
    $133 = HEAP32[$frm_nxt>>2]|0;
    $134 = ($133>>>0)<($frm_end>>>0);
    $135 = ($132>>>0)<($to_end>>>0);
    $136 = $134 & $135;
    if ($136) {
     $22 = $133;$27 = $132;
    } else {
     $$lcssa = $134;
     label = 39;
     break;
    }
   }
  } else {
   $$lcssa = $18;
   label = 39;
  }
 } while(0);
 if ((label|0) == 39) {
  $137 = $$lcssa&1;
  $$0 = $137;
 }
 return ($$0|0);
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$lcssa85 = 0, $$lcssa86 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$150 = 0, $frm_nxt$2 = 0, $nchar16_t$049 = 0, $nchar16_t$1 = 0, $or$cond = 0, $or$cond2 = 0, $or$cond48 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond48 = $15 & $14;
 L7: do {
  if ($or$cond48) {
   $frm_nxt$150 = $frm_nxt$1$ph;$nchar16_t$049 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$150>>0]|0;
    $17 = $16&255;
    $18 = ($17>>>0)>($Maxcode>>>0);
    if ($18) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $19 = ($16<<24>>24)>(-1);
    do {
     if ($19) {
      $20 = ((($frm_nxt$150)) + 1|0);
      $frm_nxt$2 = $20;$nchar16_t$1 = $nchar16_t$049;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$150;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$150)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$150)) + 2|0);
       $frm_nxt$2 = $36;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$150;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$150)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$150)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       if ((($17|0) == 224)) {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa85 = $38;
         label = 20;
         break L8;
        }
       } else if ((($17|0) == 237)) {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa84 = $38;
         label = 22;
         break L8;
        }
       } else {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa86 = $38;
         label = 24;
         break L8;
        }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$150)) + 3|0);
       $frm_nxt$2 = $69;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$150;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      $74 = (($mx) - ($nchar16_t$049))|0;
      $75 = ($74>>>0)<(2);
      $or$cond2 = $75 | $73;
      if ($or$cond2) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $76 = ((($frm_nxt$150)) + 1|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$150)) + 2|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($frm_nxt$150)) + 3|0);
      $81 = HEAP8[$80>>0]|0;
      if ((($17|0) == 244)) {
       $85 = $77 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
      } else if ((($17|0) == 240)) {
       $$off = (($77) + 112)<<24>>24;
       $82 = ($$off&255)<(48);
       if (!($82)) {
        $$lcssa82 = $71;
        label = 32;
        break L8;
       }
      } else {
       $89 = $77 & -64;
       $90 = ($89<<24>>24)==(-128);
       if (!($90)) {
        $$lcssa83 = $71;
        label = 36;
        break L8;
       }
      }
      $93 = $79&255;
      $94 = $93 & 192;
      $95 = ($94|0)==(128);
      if (!($95)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $96 = $81&255;
      $97 = $96 & 192;
      $98 = ($97|0)==(128);
      if (!($98)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $99 = $17 << 18;
      $100 = $99 & 1835008;
      $101 = $77&255;
      $102 = $101 << 12;
      $103 = $102 & 258048;
      $104 = $103 | $100;
      $105 = $93 << 6;
      $106 = $105 & 4032;
      $107 = $104 | $106;
      $108 = $96 & 63;
      $109 = $107 | $108;
      $110 = ($109>>>0)>($Maxcode>>>0);
      if ($110) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $111 = (($nchar16_t$049) + 1)|0;
      $112 = ((($frm_nxt$150)) + 4|0);
      $frm_nxt$2 = $112;$nchar16_t$1 = $111;
     }
    } while(0);
    $113 = (($nchar16_t$1) + 1)|0;
    $114 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $115 = ($113>>>0)<($mx>>>0);
    $or$cond = $115 & $114;
    if ($or$cond) {
     $frm_nxt$150 = $frm_nxt$2;$nchar16_t$049 = $113;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa85) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa84) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa86) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $83 = $frm;
    $84 = (($$lcssa82) - ($83))|0;
    $$0 = $84;
    break;
   }
   else if ((label|0) == 34) {
    $87 = $frm;
    $88 = (($$lcssa) - ($87))|0;
    $$0 = $88;
    break;
   }
   else if ((label|0) == 36) {
    $91 = $frm;
    $92 = (($$lcssa83) - ($91))|0;
    $$0 = $92;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $116 = $frm_nxt$1$lcssa;
  $117 = $frm;
  $118 = (($116) - ($117))|0;
  $$0 = $118;
 }
 return ($$0|0);
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $10 = ($$pre>>>0)<($frm_end>>>0);
   if ($10) {
    $12 = $$pre;
    while(1) {
     $11 = HEAP32[$12>>2]|0;
     $13 = $11 & -2048;
     $14 = ($13|0)==(55296);
     $15 = ($11>>>0)>($Maxcode>>>0);
     $or$cond = $15 | $14;
     if ($or$cond) {
      $$0 = 2;
      break L4;
     }
     $16 = ($11>>>0)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $11&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($11>>>0)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $11 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $11 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($11>>>0)<(65536);
       $38 = HEAP32[$to_nxt>>2]|0;
       $39 = $38;
       $40 = (($$pre1) - ($39))|0;
       if ($37) {
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $11 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $11 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $11 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       } else {
        $57 = ($40|0)<(4);
        if ($57) {
         $$0 = 1;
         break L4;
        }
        $58 = $11 >>> 18;
        $59 = $58 | 240;
        $60 = $59&255;
        $61 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $61;
        HEAP8[$38>>0] = $60;
        $62 = $11 >>> 12;
        $63 = $62 & 63;
        $64 = $63 | 128;
        $65 = $64&255;
        $66 = HEAP32[$to_nxt>>2]|0;
        $67 = ((($66)) + 1|0);
        HEAP32[$to_nxt>>2] = $67;
        HEAP8[$66>>0] = $65;
        $68 = $11 >>> 6;
        $69 = $68 & 63;
        $70 = $69 | 128;
        $71 = $70&255;
        $72 = HEAP32[$to_nxt>>2]|0;
        $73 = ((($72)) + 1|0);
        HEAP32[$to_nxt>>2] = $73;
        HEAP8[$72>>0] = $71;
        $74 = $11 & 63;
        $75 = $74 | 128;
        $76 = $75&255;
        $77 = HEAP32[$to_nxt>>2]|0;
        $78 = ((($77)) + 1|0);
        HEAP32[$to_nxt>>2] = $78;
        HEAP8[$77>>0] = $76;
        break;
       }
      }
     } while(0);
     $79 = HEAP32[$frm_nxt>>2]|0;
     $80 = ((($79)) + 4|0);
     HEAP32[$frm_nxt>>2] = $80;
     $81 = ($80>>>0)<($frm_end>>>0);
     if ($81) {
      $12 = $80;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = HEAP32[$frm_nxt>>2]|0;
 $17 = ($16>>>0)<($frm_end>>>0);
 $18 = ($$pre>>>0)<($to_end>>>0);
 $19 = $17 & $18;
 L9: do {
  if ($19) {
   $21 = $16;$25 = $$pre;
   while(1) {
    $20 = HEAP8[$21>>0]|0;
    $22 = $20&255;
    $23 = ($20<<24>>24)>(-1);
    do {
     if ($23) {
      $24 = ($22>>>0)>($Maxcode>>>0);
      if ($24) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $22;
      $26 = ((($21)) + 1|0);
      HEAP32[$frm_nxt>>2] = $26;
     } else {
      $27 = ($20&255)<(194);
      if ($27) {
       $$0 = 2;
       break L9;
      }
      $28 = ($20&255)<(224);
      if ($28) {
       $29 = $21;
       $30 = (($$pre$phiZ2D) - ($29))|0;
       $31 = ($30|0)<(2);
       if ($31) {
        $$0 = 1;
        break L9;
       }
       $32 = ((($21)) + 1|0);
       $33 = HEAP8[$32>>0]|0;
       $34 = $33&255;
       $35 = $34 & 192;
       $36 = ($35|0)==(128);
       if (!($36)) {
        $$0 = 2;
        break L9;
       }
       $37 = $22 << 6;
       $38 = $37 & 1984;
       $39 = $34 & 63;
       $40 = $39 | $38;
       $41 = ($40>>>0)>($Maxcode>>>0);
       if ($41) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $40;
       $42 = ((($21)) + 2|0);
       HEAP32[$frm_nxt>>2] = $42;
       break;
      }
      $43 = ($20&255)<(240);
      if ($43) {
       $44 = $21;
       $45 = (($$pre$phiZ2D) - ($44))|0;
       $46 = ($45|0)<(3);
       if ($46) {
        $$0 = 1;
        break L9;
       }
       $47 = ((($21)) + 1|0);
       $48 = HEAP8[$47>>0]|0;
       $49 = ((($21)) + 2|0);
       $50 = HEAP8[$49>>0]|0;
       if ((($22|0) == 237)) {
        $53 = $48 & -32;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$0 = 2;
         break L9;
        }
       } else if ((($22|0) == 224)) {
        $51 = $48 & -32;
        $52 = ($51<<24>>24)==(-96);
        if (!($52)) {
         $$0 = 2;
         break L9;
        }
       } else {
        $55 = $48 & -64;
        $56 = ($55<<24>>24)==(-128);
        if (!($56)) {
         $$0 = 2;
         break L9;
        }
       }
       $57 = $50&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $$0 = 2;
        break L9;
       }
       $60 = $22 << 12;
       $61 = $60 & 61440;
       $62 = $48&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $67;
       $69 = ((($21)) + 3|0);
       HEAP32[$frm_nxt>>2] = $69;
       break;
      }
      $70 = ($20&255)<(245);
      if (!($70)) {
       $$0 = 2;
       break L9;
      }
      $71 = $21;
      $72 = (($$pre$phiZ2D) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $$0 = 1;
       break L9;
      }
      $74 = ((($21)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($21)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($21)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      if ((($22|0) == 244)) {
       $81 = $75 & -16;
       $82 = ($81<<24>>24)==(-128);
       if (!($82)) {
        $$0 = 2;
        break L9;
       }
      } else if ((($22|0) == 240)) {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$0 = 2;
        break L9;
       }
      } else {
       $83 = $75 & -64;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      }
      $85 = $77&255;
      $86 = $85 & 192;
      $87 = ($86|0)==(128);
      if (!($87)) {
       $$0 = 2;
       break L9;
      }
      $88 = $79&255;
      $89 = $88 & 192;
      $90 = ($89|0)==(128);
      if (!($90)) {
       $$0 = 2;
       break L9;
      }
      $91 = $22 << 18;
      $92 = $91 & 1835008;
      $93 = $75&255;
      $94 = $93 << 12;
      $95 = $94 & 258048;
      $96 = $95 | $92;
      $97 = $85 << 6;
      $98 = $97 & 4032;
      $99 = $96 | $98;
      $100 = $88 & 63;
      $101 = $99 | $100;
      $102 = ($101>>>0)>($Maxcode>>>0);
      if ($102) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $101;
      $103 = ((($21)) + 4|0);
      HEAP32[$frm_nxt>>2] = $103;
     }
    } while(0);
    $104 = HEAP32[$to_nxt>>2]|0;
    $105 = ((($104)) + 4|0);
    HEAP32[$to_nxt>>2] = $105;
    $106 = HEAP32[$frm_nxt>>2]|0;
    $107 = ($106>>>0)<($frm_end>>>0);
    $108 = ($105>>>0)<($to_end>>>0);
    $109 = $107 & $108;
    if ($109) {
     $21 = $106;$25 = $105;
    } else {
     $$lcssa = $107;
     label = 38;
     break;
    }
   }
  } else {
   $$lcssa = $17;
   label = 38;
  }
 } while(0);
 if ((label|0) == 38) {
  $110 = $$lcssa&1;
  $$0 = $110;
 }
 return ($$0|0);
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa80 = 0, $$lcssa81 = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$148 = 0, $frm_nxt$2 = 0, $nchar32_t$047 = 0, $or$cond = 0, $or$cond46 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond46 = $15 & $14;
 L7: do {
  if ($or$cond46) {
   $frm_nxt$148 = $frm_nxt$1$ph;$nchar32_t$047 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$148>>0]|0;
    $17 = $16&255;
    $18 = ($16<<24>>24)>(-1);
    do {
     if ($18) {
      $19 = ($17>>>0)>($Maxcode>>>0);
      if ($19) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $20 = ((($frm_nxt$148)) + 1|0);
      $frm_nxt$2 = $20;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$148;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$148)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$148)) + 2|0);
       $frm_nxt$2 = $36;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$148;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$148)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$148)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       if ((($17|0) == 237)) {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa82 = $38;
         label = 22;
         break L8;
        }
       } else if ((($17|0) == 224)) {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa83 = $38;
         label = 20;
         break L8;
        }
       } else {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa84 = $38;
         label = 24;
         break L8;
        }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$148)) + 3|0);
       $frm_nxt$2 = $69;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$148;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $74 = ((($frm_nxt$148)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($frm_nxt$148)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$148)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      if ((($17|0) == 240)) {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$lcssa80 = $71;
        label = 32;
        break L8;
       }
      } else if ((($17|0) == 244)) {
       $83 = $75 & -16;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
      } else {
       $87 = $75 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$lcssa81 = $71;
        label = 36;
        break L8;
       }
      }
      $91 = $77&255;
      $92 = $91 & 192;
      $93 = ($92|0)==(128);
      if (!($93)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $94 = $79&255;
      $95 = $94 & 192;
      $96 = ($95|0)==(128);
      if (!($96)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $97 = $17 << 18;
      $98 = $97 & 1835008;
      $99 = $75&255;
      $100 = $99 << 12;
      $101 = $100 & 258048;
      $102 = $101 | $98;
      $103 = $91 << 6;
      $104 = $103 & 4032;
      $105 = $102 | $104;
      $106 = $94 & 63;
      $107 = $105 | $106;
      $108 = ($107>>>0)>($Maxcode>>>0);
      if ($108) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $109 = ((($frm_nxt$148)) + 4|0);
      $frm_nxt$2 = $109;
     }
    } while(0);
    $110 = (($nchar32_t$047) + 1)|0;
    $111 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $112 = ($110>>>0)<($mx>>>0);
    $or$cond = $112 & $111;
    if ($or$cond) {
     $frm_nxt$148 = $frm_nxt$2;$nchar32_t$047 = $110;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa83) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa82) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa84) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $81 = $frm;
    $82 = (($$lcssa80) - ($81))|0;
    $$0 = $82;
    break;
   }
   else if ((label|0) == 34) {
    $85 = $frm;
    $86 = (($$lcssa) - ($85))|0;
    $$0 = $86;
    break;
   }
   else if ((label|0) == 36) {
    $89 = $frm;
    $90 = (($$lcssa81) - ($89))|0;
    $$0 = $90;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $113 = $frm_nxt$1$lcssa;
  $114 = $frm;
  $115 = (($113) - ($114))|0;
  $$0 = $115;
 }
 return ($$0|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i1 = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if ($8) {
  $9 = ((($this)) + 16|0);
  $10 = HEAP32[$this>>2]|0;
  $11 = $10;
  $12 = (($5) - ($11))|0;
  $13 = $12 >> 2;
  $14 = (($13) + ($__n))|0;
  $15 = ($14>>>0)>(1073741823);
  if ($15) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $16 = (($4) - ($11))|0;
  $17 = $16 >> 2;
  $18 = ($17>>>0)<(536870911);
  if ($18) {
   $19 = $16 >> 1;
   $20 = ($19>>>0)<($14>>>0);
   $21 = $20 ? $14 : $19;
   $$0$i1 = $21;
  } else {
   $$0$i1 = 1073741823;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v,$$0$i1,$13,$9);
  $22 = ((($__v)) + 8|0);
  $$pre$i = HEAP32[$22>>2]|0;
  $23 = $__n << 2;
  _memset(($$pre$i|0),0,($23|0))|0;
  $scevgep = (($$pre$i) + ($__n<<2)|0);
  HEAP32[$22>>2] = $scevgep;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  HEAP32[$1>>2] = 0;
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 4|0);
  HEAP32[$0>>2] = $3;
  $4 = (($$0) + -1)|0;
  $5 = ($4|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$not$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 do {
  if ($2) {
   $8 = 0;
  } else {
   $3 = ((($__a)) + 112|0);
   $4 = HEAP8[$3>>0]|0;
   $$not$i$i = ($4<<24>>24)==(0);
   $5 = ($__cap>>>0)<(29);
   $or$cond$i$i = $5 & $$not$i$i;
   if ($or$cond$i$i) {
    HEAP8[$3>>0] = 1;
    $8 = $__a;
    break;
   } else {
    $6 = $__cap << 2;
    $7 = (__Znwj($6)|0);
    $8 = $7;
    break;
   }
  }
 } while(0);
 HEAP32[$this>>2] = $8;
 $9 = (($8) + ($__start<<2)|0);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($this)) + 4|0);
 HEAP32[$11>>2] = $9;
 $12 = (($8) + ($__cap<<2)|0);
 $13 = ((($this)) + 12|0);
 HEAP32[$13>>2] = $12;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $$pre$i$i$i = HEAP32[$2>>2]|0;
 $3 = ($$pre$i$i$i|0)==($1|0);
 if (!($3)) {
  $5 = $$pre$i$i$i;
  while(1) {
   $4 = ((($5)) + -4|0);
   $6 = ($4|0)==($1|0);
   if ($6) {
    $$lcssa = $4;
    break;
   } else {
    $5 = $4;
   }
  }
  HEAP32[$2>>2] = $$lcssa;
 }
 $7 = HEAP32[$this>>2]|0;
 $8 = ($7|0)==(0|0);
 do {
  if (!($8)) {
   $9 = ((($this)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==($7|0);
   if ($11) {
    $12 = ((($10)) + 112|0);
    HEAP8[$12>>0] = 0;
    break;
   } else {
    __ZdlPv($7);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ((($this)) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $3 & $$not$i$i;
 if ($or$cond$i$i) {
  $4 = ((($this)) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = ((($this)) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = ((($this)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
   }
   $10 = $4;
   $$0 = $10;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $13 = 0;$14 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   if ($12) {
    HEAP32[$__err>>2] = 4;
    $13 = -1;$14 = -1;
   } else {
    $13 = $7;$14 = $6;
   }
  }
 } while(0);
 tempRet0 = ($13);
 STACKTOP = sp;return ($14|0);
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(65535);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $18 = $6&65535;
    $$0 = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $18 = 0;$19 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $18 = 0;$19 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   if ($10) {
    HEAP32[$__err>>2] = 4;
    $11 = ($5|0)>(0);
    $12 = ($4>>>0)>(0);
    $13 = ($5|0)==(0);
    $14 = $13 & $12;
    $15 = $11 | $14;
    $16 = $15 ? -1 : 0;
    $17 = $15 ? 2147483647 : -2147483648;
    tempRet0 = ($17);
    STACKTOP = sp;return ($16|0);
   } else {
    $18 = $5;$19 = $4;
   }
  }
 } while(0);
 tempRet0 = ($18);
 STACKTOP = sp;return ($19|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 L1: do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   do {
    if ($10) {
     HEAP32[$__err>>2] = 4;
     $21 = ($5|0)>(0);
     $22 = ($4>>>0)>(0);
     $23 = ($5|0)==(0);
     $24 = $23 & $22;
     $25 = $21 | $24;
     if ($25) {
      $$0 = 2147483647;
      break L1;
     }
    } else {
     $11 = ($5|0)<(-1);
     $12 = ($4>>>0)<(2147483648);
     $13 = ($5|0)==(-1);
     $14 = $13 & $12;
     $15 = $11 | $14;
     if ($15) {
      HEAP32[$__err>>2] = 4;
      break;
     }
     $16 = ($5|0)>(0);
     $17 = ($4>>>0)>(2147483647);
     $18 = ($5|0)==(0);
     $19 = $18 & $17;
     $20 = $16 | $19;
     if ($20) {
      HEAP32[$__err>>2] = 4;
      $$0 = 2147483647;
      break L1;
     } else {
      $$0 = $4;
      break L1;
     }
    }
   } while(0);
   $$0 = -2147483648;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+-1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = HEAP32[$this>>2]|0;
  $4 = ((($3)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 127]($this);
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func) {
 $flag = $flag|0;
 $arg = $arg|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock((14512|0))|0);
 $0 = HEAP32[$flag>>2]|0;
 $1 = ($0|0)==(1);
 if ($1) {
  while(1) {
   (_pthread_cond_wait((14536|0),(14512|0))|0);
   $2 = HEAP32[$flag>>2]|0;
   $3 = ($2|0)==(1);
   if (!($3)) {
    break;
   }
  }
 }
 $4 = HEAP32[$flag>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  HEAP32[$flag>>2] = 1;
  (_pthread_mutex_unlock((14512|0))|0);
  FUNCTION_TABLE_vi[$func & 127]($arg);
  (_pthread_mutex_lock((14512|0))|0);
  HEAP32[$flag>>2] = -1;
  (_pthread_mutex_unlock((14512|0))|0);
  (_pthread_cond_broadcast((14536|0))|0);
 } else {
  (_pthread_mutex_unlock((14512|0))|0);
 }
 return;
}
function runPostSets() {

}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[((curr)>>0)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&7](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&31](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&3](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  return FUNCTION_TABLE_iiiiiid[index&3](a1|0,a2|0,a3|0,a4|0,a5|0,+a6)|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&127](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&63](a1|0,a2|0);
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&63](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_iiiiid(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
  return FUNCTION_TABLE_iiiiid[index&7](a1|0,a2|0,a3|0,a4|0,+a5)|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&63](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&3](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&3]();
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&7](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&7](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&15](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&7](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; abort(0);return 0; }
function b1(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(1);return 0; }
function b2(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(2); }
function b3(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; abort(3);return 0; }
function b4(p0) { p0 = p0|0; abort(4); }
function b5(p0,p1) { p0 = p0|0;p1 = p1|0; abort(5); }
function b6(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(6);return 0; }
function b7(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = +p4; abort(7);return 0; }
function b8(p0) { p0 = p0|0; abort(8);return 0; }
function b9(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(9); }
function b10() { ; abort(10); }
function ___cxa_pure_virtual__wrapper() { ; ___cxa_pure_virtual(); }
function b11(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; abort(11);return 0; }
function b12(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(12);return 0; }
function b13(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(13); }
function b14(p0,p1) { p0 = p0|0;p1 = p1|0; abort(14);return 0; }
function b15(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(15);return 0; }
function b16(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(16); }

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0];
var FUNCTION_TABLE_iiii = [b1,__ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_sn_write,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,_do_read,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1];
var FUNCTION_TABLE_viiiii = [b2,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
var FUNCTION_TABLE_iiiiiid = [b3,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b3];
var FUNCTION_TABLE_vi = [b4,__ZN6ikfast14IkSolutionListIdED2Ev,__ZN6ikfast14IkSolutionListIdED0Ev,__ZN6ikfast14IkSolutionListIdE5ClearEv,__ZN6ikfast10IkSolutionIdED2Ev,__ZN6ikfast10IkSolutionIdED0Ev,__ZNK6ikfast10IkSolutionIdE8ValidateEv,__ZN6ikfast14IkSolutionBaseIdED2Ev,__ZN6ikfast14IkSolutionBaseIdED0Ev,__ZN6ikfast18IkSolutionListBaseIdED2Ev,__ZN6ikfast18IkSolutionListBaseIdED0Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5__impD2Ev
,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,__ZNSt3__112__do_nothingEPv,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,_free,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_vii = [b5,__ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi
,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiii = [b6,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiiid = [b7,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b7,b7,b7];
var FUNCTION_TABLE_ii = [b8,__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv,__ZNK6ikfast10IkSolutionIdE7GetFreeEv,__ZNK6ikfast10IkSolutionIdE6GetDOFEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt13runtime_error4whatEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv
,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_viii = [b9,__ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd,__ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,__ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_];
var FUNCTION_TABLE_v = [b10,___cxa_pure_virtual__wrapper,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev];
var FUNCTION_TABLE_iiiiiiiii = [b11,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_iiiii = [b12,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b12,b12];
var FUNCTION_TABLE_viiiiii = [b13,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE];
var FUNCTION_TABLE_iii = [b14,__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw,__ZNKSt3__15ctypeIwE8do_widenEc,b14,b14,b14,b14];
var FUNCTION_TABLE_iiiiii = [b15,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15];
var FUNCTION_TABLE_viiii = [b16,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strlen: _strlen, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiii: dynCall_viiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }
    var request = Module['memoryInitializerRequest'];
    if (request) {
      // a network request has already been created, just use that
      if (request.response) {
        setTimeout(function() {
          applyMemoryInitializer(request.response);
        }, 0); // it's already here; but, apply it asynchronously
      } else {
        request.addEventListener('load', function() { // wait for it
          if (request.status !== 200 && request.status !== 0) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status);
          }
          if (!request.response || typeof request.response !== 'object' || !request.response.byteLength) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): ' + request.response);
          }
          applyMemoryInitializer(request.response);
        });
      }
    } else {
      // fetch it from the network ourselves
      Browser.asyncLoad(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {
    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = false;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



module.exports = Module;

